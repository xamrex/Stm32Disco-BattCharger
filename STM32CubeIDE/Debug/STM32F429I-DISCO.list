
STM32F429I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000218e0  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00002cd4  08021a90  08021a90  00031a90  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 0000162e  08024764  08024764  00034764  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000094  08025d94  08025d94  00035d94  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 00000224  08025e28  08025e28  00035e28  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 0009d2a8  0802604c  0802604c  0003604c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  080c32f4  080c32f4  000e016c  2**0
                  CONTENTS
  8 .ARM          00000008  080c32f4  080c32f4  000d32f4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  080c32fc  080c32fc  000e016c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  080c32fc  080c32fc  000d32fc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000008  080c3310  080c3310  000d3310  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         0000016c  20000000  080c3318  000e0000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          000156f4  2000016c  080c3484  000e016c  2**2
                  ALLOC
 14 ._user_heap_stack 00001400  20015860  080c3484  000e5860  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  000e016c  2**0
                  CONTENTS, READONLY
 16 TouchGFX_Framebuffer 0004b000  d0000000  d0000000  000f0000  2**2
                  ALLOC
 17 .debug_line   00050fe9  00000000  00000000  000e019c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_info   000ef499  00000000  00000000  00131185  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_abbrev 000150a5  00000000  00000000  0022061e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_aranges 000030c0  00000000  00000000  002356c8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_str    0011a101  00000000  00000000  00238788  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_ranges 00007048  00000000  00000000  00352890  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_loc    00035d79  00000000  00000000  003598d8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_macro  00030c09  00000000  00000000  0038f651  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .comment      000000cf  00000000  00000000  003c025a  2**0
                  CONTENTS, READONLY
 26 .debug_frame  00008e64  00000000  00000000  003c032c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	2000016c 	.word	0x2000016c
 80001cc:	00000000 	.word	0x00000000
 80001d0:	08021a78 	.word	0x08021a78

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000170 	.word	0x20000170
 80001ec:	08021a78 	.word	0x08021a78

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <__aeabi_uldivmod>:
 8000290:	b953      	cbnz	r3, 80002a8 <__aeabi_uldivmod+0x18>
 8000292:	b94a      	cbnz	r2, 80002a8 <__aeabi_uldivmod+0x18>
 8000294:	2900      	cmp	r1, #0
 8000296:	bf08      	it	eq
 8000298:	2800      	cmpeq	r0, #0
 800029a:	bf1c      	itt	ne
 800029c:	f04f 31ff 	movne.w	r1, #4294967295
 80002a0:	f04f 30ff 	movne.w	r0, #4294967295
 80002a4:	f000 b974 	b.w	8000590 <__aeabi_idiv0>
 80002a8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002ac:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002b0:	f000 f806 	bl	80002c0 <__udivmoddi4>
 80002b4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002b8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002bc:	b004      	add	sp, #16
 80002be:	4770      	bx	lr

080002c0 <__udivmoddi4>:
 80002c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002c4:	9d08      	ldr	r5, [sp, #32]
 80002c6:	4604      	mov	r4, r0
 80002c8:	468e      	mov	lr, r1
 80002ca:	2b00      	cmp	r3, #0
 80002cc:	d14d      	bne.n	800036a <__udivmoddi4+0xaa>
 80002ce:	428a      	cmp	r2, r1
 80002d0:	4694      	mov	ip, r2
 80002d2:	d969      	bls.n	80003a8 <__udivmoddi4+0xe8>
 80002d4:	fab2 f282 	clz	r2, r2
 80002d8:	b152      	cbz	r2, 80002f0 <__udivmoddi4+0x30>
 80002da:	fa01 f302 	lsl.w	r3, r1, r2
 80002de:	f1c2 0120 	rsb	r1, r2, #32
 80002e2:	fa20 f101 	lsr.w	r1, r0, r1
 80002e6:	fa0c fc02 	lsl.w	ip, ip, r2
 80002ea:	ea41 0e03 	orr.w	lr, r1, r3
 80002ee:	4094      	lsls	r4, r2
 80002f0:	ea4f 481c 	mov.w	r8, ip, lsr #16
 80002f4:	0c21      	lsrs	r1, r4, #16
 80002f6:	fbbe f6f8 	udiv	r6, lr, r8
 80002fa:	fa1f f78c 	uxth.w	r7, ip
 80002fe:	fb08 e316 	mls	r3, r8, r6, lr
 8000302:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8000306:	fb06 f107 	mul.w	r1, r6, r7
 800030a:	4299      	cmp	r1, r3
 800030c:	d90a      	bls.n	8000324 <__udivmoddi4+0x64>
 800030e:	eb1c 0303 	adds.w	r3, ip, r3
 8000312:	f106 30ff 	add.w	r0, r6, #4294967295
 8000316:	f080 811f 	bcs.w	8000558 <__udivmoddi4+0x298>
 800031a:	4299      	cmp	r1, r3
 800031c:	f240 811c 	bls.w	8000558 <__udivmoddi4+0x298>
 8000320:	3e02      	subs	r6, #2
 8000322:	4463      	add	r3, ip
 8000324:	1a5b      	subs	r3, r3, r1
 8000326:	b2a4      	uxth	r4, r4
 8000328:	fbb3 f0f8 	udiv	r0, r3, r8
 800032c:	fb08 3310 	mls	r3, r8, r0, r3
 8000330:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000334:	fb00 f707 	mul.w	r7, r0, r7
 8000338:	42a7      	cmp	r7, r4
 800033a:	d90a      	bls.n	8000352 <__udivmoddi4+0x92>
 800033c:	eb1c 0404 	adds.w	r4, ip, r4
 8000340:	f100 33ff 	add.w	r3, r0, #4294967295
 8000344:	f080 810a 	bcs.w	800055c <__udivmoddi4+0x29c>
 8000348:	42a7      	cmp	r7, r4
 800034a:	f240 8107 	bls.w	800055c <__udivmoddi4+0x29c>
 800034e:	4464      	add	r4, ip
 8000350:	3802      	subs	r0, #2
 8000352:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000356:	1be4      	subs	r4, r4, r7
 8000358:	2600      	movs	r6, #0
 800035a:	b11d      	cbz	r5, 8000364 <__udivmoddi4+0xa4>
 800035c:	40d4      	lsrs	r4, r2
 800035e:	2300      	movs	r3, #0
 8000360:	e9c5 4300 	strd	r4, r3, [r5]
 8000364:	4631      	mov	r1, r6
 8000366:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800036a:	428b      	cmp	r3, r1
 800036c:	d909      	bls.n	8000382 <__udivmoddi4+0xc2>
 800036e:	2d00      	cmp	r5, #0
 8000370:	f000 80ef 	beq.w	8000552 <__udivmoddi4+0x292>
 8000374:	2600      	movs	r6, #0
 8000376:	e9c5 0100 	strd	r0, r1, [r5]
 800037a:	4630      	mov	r0, r6
 800037c:	4631      	mov	r1, r6
 800037e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000382:	fab3 f683 	clz	r6, r3
 8000386:	2e00      	cmp	r6, #0
 8000388:	d14a      	bne.n	8000420 <__udivmoddi4+0x160>
 800038a:	428b      	cmp	r3, r1
 800038c:	d302      	bcc.n	8000394 <__udivmoddi4+0xd4>
 800038e:	4282      	cmp	r2, r0
 8000390:	f200 80f9 	bhi.w	8000586 <__udivmoddi4+0x2c6>
 8000394:	1a84      	subs	r4, r0, r2
 8000396:	eb61 0303 	sbc.w	r3, r1, r3
 800039a:	2001      	movs	r0, #1
 800039c:	469e      	mov	lr, r3
 800039e:	2d00      	cmp	r5, #0
 80003a0:	d0e0      	beq.n	8000364 <__udivmoddi4+0xa4>
 80003a2:	e9c5 4e00 	strd	r4, lr, [r5]
 80003a6:	e7dd      	b.n	8000364 <__udivmoddi4+0xa4>
 80003a8:	b902      	cbnz	r2, 80003ac <__udivmoddi4+0xec>
 80003aa:	deff      	udf	#255	; 0xff
 80003ac:	fab2 f282 	clz	r2, r2
 80003b0:	2a00      	cmp	r2, #0
 80003b2:	f040 8092 	bne.w	80004da <__udivmoddi4+0x21a>
 80003b6:	eba1 010c 	sub.w	r1, r1, ip
 80003ba:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80003be:	fa1f fe8c 	uxth.w	lr, ip
 80003c2:	2601      	movs	r6, #1
 80003c4:	0c20      	lsrs	r0, r4, #16
 80003c6:	fbb1 f3f7 	udiv	r3, r1, r7
 80003ca:	fb07 1113 	mls	r1, r7, r3, r1
 80003ce:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 80003d2:	fb0e f003 	mul.w	r0, lr, r3
 80003d6:	4288      	cmp	r0, r1
 80003d8:	d908      	bls.n	80003ec <__udivmoddi4+0x12c>
 80003da:	eb1c 0101 	adds.w	r1, ip, r1
 80003de:	f103 38ff 	add.w	r8, r3, #4294967295
 80003e2:	d202      	bcs.n	80003ea <__udivmoddi4+0x12a>
 80003e4:	4288      	cmp	r0, r1
 80003e6:	f200 80cb 	bhi.w	8000580 <__udivmoddi4+0x2c0>
 80003ea:	4643      	mov	r3, r8
 80003ec:	1a09      	subs	r1, r1, r0
 80003ee:	b2a4      	uxth	r4, r4
 80003f0:	fbb1 f0f7 	udiv	r0, r1, r7
 80003f4:	fb07 1110 	mls	r1, r7, r0, r1
 80003f8:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 80003fc:	fb0e fe00 	mul.w	lr, lr, r0
 8000400:	45a6      	cmp	lr, r4
 8000402:	d908      	bls.n	8000416 <__udivmoddi4+0x156>
 8000404:	eb1c 0404 	adds.w	r4, ip, r4
 8000408:	f100 31ff 	add.w	r1, r0, #4294967295
 800040c:	d202      	bcs.n	8000414 <__udivmoddi4+0x154>
 800040e:	45a6      	cmp	lr, r4
 8000410:	f200 80bb 	bhi.w	800058a <__udivmoddi4+0x2ca>
 8000414:	4608      	mov	r0, r1
 8000416:	eba4 040e 	sub.w	r4, r4, lr
 800041a:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 800041e:	e79c      	b.n	800035a <__udivmoddi4+0x9a>
 8000420:	f1c6 0720 	rsb	r7, r6, #32
 8000424:	40b3      	lsls	r3, r6
 8000426:	fa22 fc07 	lsr.w	ip, r2, r7
 800042a:	ea4c 0c03 	orr.w	ip, ip, r3
 800042e:	fa20 f407 	lsr.w	r4, r0, r7
 8000432:	fa01 f306 	lsl.w	r3, r1, r6
 8000436:	431c      	orrs	r4, r3
 8000438:	40f9      	lsrs	r1, r7
 800043a:	ea4f 491c 	mov.w	r9, ip, lsr #16
 800043e:	fa00 f306 	lsl.w	r3, r0, r6
 8000442:	fbb1 f8f9 	udiv	r8, r1, r9
 8000446:	0c20      	lsrs	r0, r4, #16
 8000448:	fa1f fe8c 	uxth.w	lr, ip
 800044c:	fb09 1118 	mls	r1, r9, r8, r1
 8000450:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000454:	fb08 f00e 	mul.w	r0, r8, lr
 8000458:	4288      	cmp	r0, r1
 800045a:	fa02 f206 	lsl.w	r2, r2, r6
 800045e:	d90b      	bls.n	8000478 <__udivmoddi4+0x1b8>
 8000460:	eb1c 0101 	adds.w	r1, ip, r1
 8000464:	f108 3aff 	add.w	sl, r8, #4294967295
 8000468:	f080 8088 	bcs.w	800057c <__udivmoddi4+0x2bc>
 800046c:	4288      	cmp	r0, r1
 800046e:	f240 8085 	bls.w	800057c <__udivmoddi4+0x2bc>
 8000472:	f1a8 0802 	sub.w	r8, r8, #2
 8000476:	4461      	add	r1, ip
 8000478:	1a09      	subs	r1, r1, r0
 800047a:	b2a4      	uxth	r4, r4
 800047c:	fbb1 f0f9 	udiv	r0, r1, r9
 8000480:	fb09 1110 	mls	r1, r9, r0, r1
 8000484:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 8000488:	fb00 fe0e 	mul.w	lr, r0, lr
 800048c:	458e      	cmp	lr, r1
 800048e:	d908      	bls.n	80004a2 <__udivmoddi4+0x1e2>
 8000490:	eb1c 0101 	adds.w	r1, ip, r1
 8000494:	f100 34ff 	add.w	r4, r0, #4294967295
 8000498:	d26c      	bcs.n	8000574 <__udivmoddi4+0x2b4>
 800049a:	458e      	cmp	lr, r1
 800049c:	d96a      	bls.n	8000574 <__udivmoddi4+0x2b4>
 800049e:	3802      	subs	r0, #2
 80004a0:	4461      	add	r1, ip
 80004a2:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 80004a6:	fba0 9402 	umull	r9, r4, r0, r2
 80004aa:	eba1 010e 	sub.w	r1, r1, lr
 80004ae:	42a1      	cmp	r1, r4
 80004b0:	46c8      	mov	r8, r9
 80004b2:	46a6      	mov	lr, r4
 80004b4:	d356      	bcc.n	8000564 <__udivmoddi4+0x2a4>
 80004b6:	d053      	beq.n	8000560 <__udivmoddi4+0x2a0>
 80004b8:	b15d      	cbz	r5, 80004d2 <__udivmoddi4+0x212>
 80004ba:	ebb3 0208 	subs.w	r2, r3, r8
 80004be:	eb61 010e 	sbc.w	r1, r1, lr
 80004c2:	fa01 f707 	lsl.w	r7, r1, r7
 80004c6:	fa22 f306 	lsr.w	r3, r2, r6
 80004ca:	40f1      	lsrs	r1, r6
 80004cc:	431f      	orrs	r7, r3
 80004ce:	e9c5 7100 	strd	r7, r1, [r5]
 80004d2:	2600      	movs	r6, #0
 80004d4:	4631      	mov	r1, r6
 80004d6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80004da:	f1c2 0320 	rsb	r3, r2, #32
 80004de:	40d8      	lsrs	r0, r3
 80004e0:	fa0c fc02 	lsl.w	ip, ip, r2
 80004e4:	fa21 f303 	lsr.w	r3, r1, r3
 80004e8:	4091      	lsls	r1, r2
 80004ea:	4301      	orrs	r1, r0
 80004ec:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80004f0:	fa1f fe8c 	uxth.w	lr, ip
 80004f4:	fbb3 f0f7 	udiv	r0, r3, r7
 80004f8:	fb07 3610 	mls	r6, r7, r0, r3
 80004fc:	0c0b      	lsrs	r3, r1, #16
 80004fe:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 8000502:	fb00 f60e 	mul.w	r6, r0, lr
 8000506:	429e      	cmp	r6, r3
 8000508:	fa04 f402 	lsl.w	r4, r4, r2
 800050c:	d908      	bls.n	8000520 <__udivmoddi4+0x260>
 800050e:	eb1c 0303 	adds.w	r3, ip, r3
 8000512:	f100 38ff 	add.w	r8, r0, #4294967295
 8000516:	d22f      	bcs.n	8000578 <__udivmoddi4+0x2b8>
 8000518:	429e      	cmp	r6, r3
 800051a:	d92d      	bls.n	8000578 <__udivmoddi4+0x2b8>
 800051c:	3802      	subs	r0, #2
 800051e:	4463      	add	r3, ip
 8000520:	1b9b      	subs	r3, r3, r6
 8000522:	b289      	uxth	r1, r1
 8000524:	fbb3 f6f7 	udiv	r6, r3, r7
 8000528:	fb07 3316 	mls	r3, r7, r6, r3
 800052c:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000530:	fb06 f30e 	mul.w	r3, r6, lr
 8000534:	428b      	cmp	r3, r1
 8000536:	d908      	bls.n	800054a <__udivmoddi4+0x28a>
 8000538:	eb1c 0101 	adds.w	r1, ip, r1
 800053c:	f106 38ff 	add.w	r8, r6, #4294967295
 8000540:	d216      	bcs.n	8000570 <__udivmoddi4+0x2b0>
 8000542:	428b      	cmp	r3, r1
 8000544:	d914      	bls.n	8000570 <__udivmoddi4+0x2b0>
 8000546:	3e02      	subs	r6, #2
 8000548:	4461      	add	r1, ip
 800054a:	1ac9      	subs	r1, r1, r3
 800054c:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 8000550:	e738      	b.n	80003c4 <__udivmoddi4+0x104>
 8000552:	462e      	mov	r6, r5
 8000554:	4628      	mov	r0, r5
 8000556:	e705      	b.n	8000364 <__udivmoddi4+0xa4>
 8000558:	4606      	mov	r6, r0
 800055a:	e6e3      	b.n	8000324 <__udivmoddi4+0x64>
 800055c:	4618      	mov	r0, r3
 800055e:	e6f8      	b.n	8000352 <__udivmoddi4+0x92>
 8000560:	454b      	cmp	r3, r9
 8000562:	d2a9      	bcs.n	80004b8 <__udivmoddi4+0x1f8>
 8000564:	ebb9 0802 	subs.w	r8, r9, r2
 8000568:	eb64 0e0c 	sbc.w	lr, r4, ip
 800056c:	3801      	subs	r0, #1
 800056e:	e7a3      	b.n	80004b8 <__udivmoddi4+0x1f8>
 8000570:	4646      	mov	r6, r8
 8000572:	e7ea      	b.n	800054a <__udivmoddi4+0x28a>
 8000574:	4620      	mov	r0, r4
 8000576:	e794      	b.n	80004a2 <__udivmoddi4+0x1e2>
 8000578:	4640      	mov	r0, r8
 800057a:	e7d1      	b.n	8000520 <__udivmoddi4+0x260>
 800057c:	46d0      	mov	r8, sl
 800057e:	e77b      	b.n	8000478 <__udivmoddi4+0x1b8>
 8000580:	3b02      	subs	r3, #2
 8000582:	4461      	add	r1, ip
 8000584:	e732      	b.n	80003ec <__udivmoddi4+0x12c>
 8000586:	4630      	mov	r0, r6
 8000588:	e709      	b.n	800039e <__udivmoddi4+0xde>
 800058a:	4464      	add	r4, ip
 800058c:	3802      	subs	r0, #2
 800058e:	e742      	b.n	8000416 <__udivmoddi4+0x156>

08000590 <__aeabi_idiv0>:
 8000590:	4770      	bx	lr
 8000592:	bf00      	nop

08000594 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 8000594:	f8df d034 	ldr.w	sp, [pc, #52]	; 80005cc <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000598:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 800059a:	e003      	b.n	80005a4 <LoopCopyDataInit>

0800059c <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 800059c:	4b0c      	ldr	r3, [pc, #48]	; (80005d0 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 800059e:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 80005a0:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 80005a2:	3104      	adds	r1, #4

080005a4 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 80005a4:	480b      	ldr	r0, [pc, #44]	; (80005d4 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 80005a6:	4b0c      	ldr	r3, [pc, #48]	; (80005d8 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 80005a8:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 80005aa:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 80005ac:	d3f6      	bcc.n	800059c <CopyDataInit>
  ldr  r2, =_sbss
 80005ae:	4a0b      	ldr	r2, [pc, #44]	; (80005dc <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 80005b0:	e002      	b.n	80005b8 <LoopFillZerobss>

080005b2 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 80005b2:	2300      	movs	r3, #0
  str  r3, [r2], #4
 80005b4:	f842 3b04 	str.w	r3, [r2], #4

080005b8 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 80005b8:	4b09      	ldr	r3, [pc, #36]	; (80005e0 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 80005ba:	429a      	cmp	r2, r3
  bcc  FillZerobss
 80005bc:	d3f9      	bcc.n	80005b2 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 80005be:	f005 fb77 	bl	8005cb0 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80005c2:	f020 fa7d 	bl	8020ac0 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80005c6:	f000 ff65 	bl	8001494 <main>
  bx  lr    
 80005ca:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 80005cc:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 80005d0:	080c3318 	.word	0x080c3318
  ldr  r0, =_sdata
 80005d4:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 80005d8:	2000016c 	.word	0x2000016c
  ldr  r2, =_sbss
 80005dc:	2000016c 	.word	0x2000016c
  ldr  r3, = _ebss
 80005e0:	20015860 	.word	0x20015860

080005e4 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80005e4:	e7fe      	b.n	80005e4 <ADC_IRQHandler>

080005e6 <MX_TouchGFX_Init>:
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_init();
 80005e6:	f000 bc39 	b.w	8000e5c <touchgfx_init>

080005ea <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 80005ea:	f000 bcab 	b.w	8000f44 <touchgfx_taskEntry>

080005ee <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 80005ee:	4770      	bx	lr

080005f0 <_ZN20STM32TouchControllerD0Ev>:
 80005f0:	b510      	push	{r4, lr}
 80005f2:	2104      	movs	r1, #4
 80005f4:	4604      	mov	r4, r0
 80005f6:	f020 f86f 	bl	80206d8 <_ZdlPvj>
 80005fa:	4620      	mov	r0, r4
 80005fc:	bd10      	pop	{r4, pc}
	...

08000600 <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 8000600:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 8000602:	4b0c      	ldr	r3, [pc, #48]	; (8000634 <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000604:	4c0c      	ldr	r4, [pc, #48]	; (8000638 <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 8000606:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 8000608:	4b0c      	ldr	r3, [pc, #48]	; (800063c <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 800060a:	2082      	movs	r0, #130	; 0x82
    TsYBoundary = YSize;
 800060c:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 800060e:	6863      	ldr	r3, [r4, #4]
 8000610:	4798      	blx	r3
 8000612:	f640 0311 	movw	r3, #2065	; 0x811
 8000616:	4298      	cmp	r0, r3
 8000618:	d10a      	bne.n	8000630 <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 800061a:	4d09      	ldr	r5, [pc, #36]	; (8000640 <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 800061c:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 800061e:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 8000620:	2082      	movs	r0, #130	; 0x82
 8000622:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 8000624:	682b      	ldr	r3, [r5, #0]
 8000626:	2082      	movs	r0, #130	; 0x82
 8000628:	68db      	ldr	r3, [r3, #12]
 800062a:	4798      	blx	r3
 800062c:	2000      	movs	r0, #0
    }

    return ret;
}
 800062e:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 8000630:	2001      	movs	r0, #1
 8000632:	e7fc      	b.n	800062e <_Z11BSP_TS_Inittt+0x2e>
 8000634:	20000188 	.word	0x20000188
 8000638:	20000054 	.word	0x20000054
 800063c:	2000018a 	.word	0x2000018a
 8000640:	2000018c 	.word	0x2000018c

08000644 <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 8000644:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8000648:	20f0      	movs	r0, #240	; 0xf0
 800064a:	f7ff bfd9 	b.w	8000600 <_Z11BSP_TS_Inittt>
	...

08000650 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 8000650:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000652:	4d2d      	ldr	r5, [pc, #180]	; (8000708 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb8>)
 8000654:	682b      	ldr	r3, [r5, #0]
{
 8000656:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000658:	691b      	ldr	r3, [r3, #16]
 800065a:	2082      	movs	r0, #130	; 0x82
 800065c:	4798      	blx	r3
 800065e:	b280      	uxth	r0, r0
 8000660:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 8000662:	2800      	cmp	r0, #0
 8000664:	d043      	beq.n	80006ee <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x9e>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 8000666:	682b      	ldr	r3, [r5, #0]
 8000668:	f10d 0206 	add.w	r2, sp, #6
 800066c:	695b      	ldr	r3, [r3, #20]
 800066e:	a901      	add	r1, sp, #4
 8000670:	2082      	movs	r0, #130	; 0x82
 8000672:	4798      	blx	r3

        /* Y value first correction */
        y -= 360;
 8000674:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8000678:	f5a2 72b4 	sub.w	r2, r2, #360	; 0x168
 800067c:	b292      	uxth	r2, r2

        /* Y value second correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 800067e:	2a0a      	cmp	r2, #10
 8000680:	d937      	bls.n	80006f2 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xa2>
        yr = y / 11;
 8000682:	230b      	movs	r3, #11
 8000684:	fbb2 f2f3 	udiv	r2, r2, r3
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 8000688:	4b20      	ldr	r3, [pc, #128]	; (800070c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xbc>)
 800068a:	881b      	ldrh	r3, [r3, #0]
 800068c:	429a      	cmp	r2, r3
 800068e:	d901      	bls.n	8000694 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x44>
        {
            yr = TsYBoundary - 1;
 8000690:	3b01      	subs	r3, #1
 8000692:	b29a      	uxth	r2, r3
        else
        {}
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 8000694:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8000698:	f640 31b8 	movw	r1, #3000	; 0xbb8
 800069c:	428b      	cmp	r3, r1
 800069e:	d82a      	bhi.n	80006f6 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xa6>
        {
            x = 3870 - x;
 80006a0:	f5c3 6371 	rsb	r3, r3, #3856	; 0xf10
 80006a4:	330e      	adds	r3, #14
 80006a6:	b29b      	uxth	r3, r3
        {
            x = 3800 - x;
        }

        /* X value second correction */
        xr = x / 15;
 80006a8:	210f      	movs	r1, #15
 80006aa:	fbb3 f3f1 	udiv	r3, r3, r1
        /* Return X position value */
        if (xr <= 0)
        {
            xr = 0;
        }
        else if (xr > TsXBoundary)
 80006ae:	4918      	ldr	r1, [pc, #96]	; (8000710 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc0>)
 80006b0:	8809      	ldrh	r1, [r1, #0]
 80006b2:	428b      	cmp	r3, r1
 80006b4:	d901      	bls.n	80006ba <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x6a>
        {
            xr = TsXBoundary - 1;
 80006b6:	1e4b      	subs	r3, r1, #1
 80006b8:	b29b      	uxth	r3, r3
        }
        else
        {}

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006ba:	4e16      	ldr	r6, [pc, #88]	; (8000714 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc4>)
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006bc:	4d16      	ldr	r5, [pc, #88]	; (8000718 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc8>)
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006be:	6830      	ldr	r0, [r6, #0]
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006c0:	682f      	ldr	r7, [r5, #0]
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006c2:	4283      	cmp	r3, r0
 80006c4:	b281      	uxth	r1, r0
 80006c6:	bf8c      	ite	hi
 80006c8:	1a59      	subhi	r1, r3, r1
 80006ca:	1ac9      	subls	r1, r1, r3
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006cc:	b2b8      	uxth	r0, r7
 80006ce:	42ba      	cmp	r2, r7
 80006d0:	bf8c      	ite	hi
 80006d2:	1a10      	subhi	r0, r2, r0
 80006d4:	1a80      	subls	r0, r0, r2
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006d6:	b289      	uxth	r1, r1
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006d8:	b280      	uxth	r0, r0

        if (xDiff + yDiff > 5)
 80006da:	4401      	add	r1, r0
 80006dc:	2905      	cmp	r1, #5
        {
            _x = x;
 80006de:	bfc8      	it	gt
 80006e0:	6033      	strgt	r3, [r6, #0]
            _y = y;
        }

        /* Update the X position */
        TsState->X = _x;
 80006e2:	6833      	ldr	r3, [r6, #0]
            _y = y;
 80006e4:	bfc8      	it	gt
 80006e6:	602a      	strgt	r2, [r5, #0]
        TsState->X = _x;
 80006e8:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 80006ea:	682b      	ldr	r3, [r5, #0]
 80006ec:	80a3      	strh	r3, [r4, #4]
    }
}
 80006ee:	b003      	add	sp, #12
 80006f0:	bdf0      	pop	{r4, r5, r6, r7, pc}
            yr = 0;
 80006f2:	2200      	movs	r2, #0
 80006f4:	e7ce      	b.n	8000694 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x44>
            x = 3800 - x;
 80006f6:	f5c3 636d 	rsb	r3, r3, #3792	; 0xed0
 80006fa:	3308      	adds	r3, #8
 80006fc:	b29b      	uxth	r3, r3
        if (xr <= 0)
 80006fe:	2b0e      	cmp	r3, #14
 8000700:	d8d2      	bhi.n	80006a8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x58>
            xr = 0;
 8000702:	2300      	movs	r3, #0
 8000704:	e7d9      	b.n	80006ba <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x6a>
 8000706:	bf00      	nop
 8000708:	2000018c 	.word	0x2000018c
 800070c:	2000018a 	.word	0x2000018a
 8000710:	20000188 	.word	0x20000188
 8000714:	20000190 	.word	0x20000190
 8000718:	20000194 	.word	0x20000194

0800071c <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 800071c:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 800071e:	4668      	mov	r0, sp
{
 8000720:	460d      	mov	r5, r1
 8000722:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 8000724:	f7ff ff94 	bl	8000650 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8000728:	f8bd 0000 	ldrh.w	r0, [sp]
 800072c:	b130      	cbz	r0, 800073c <_ZN20STM32TouchController11sampleTouchERlS0_+0x20>
        x = state.X;
 800072e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8000732:	602b      	str	r3, [r5, #0]
        y = state.Y;
 8000734:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8000738:	6023      	str	r3, [r4, #0]
        return true;
 800073a:	2001      	movs	r0, #1
}
 800073c:	b003      	add	sp, #12
 800073e:	bd30      	pop	{r4, r5, pc}

08000740 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{

}
 8000740:	4770      	bx	lr

08000742 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
 8000742:	4770      	bx	lr

08000744 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
 8000744:	4770      	bx	lr

08000746 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8000746:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8000748:	f880 1074 	strb.w	r1, [r0, #116]	; 0x74
        displayOrientationChangeRequested = true;
 800074c:	f880 3075 	strb.w	r3, [r0, #117]	; 0x75
    }
 8000750:	4770      	bx	lr

08000752 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 8000752:	2000      	movs	r0, #0
 8000754:	4770      	bx	lr
	...

08000758 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000758:	4b03      	ldr	r3, [pc, #12]	; (8000768 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 800075a:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 800075c:	3900      	subs	r1, #0
 800075e:	bf18      	it	ne
 8000760:	2101      	movne	r1, #1
 8000762:	7019      	strb	r1, [r3, #0]
    }
 8000764:	4770      	bx	lr
 8000766:	bf00      	nop
 8000768:	200155b3 	.word	0x200155b3

0800076c <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 800076c:	2000      	movs	r0, #0
 800076e:	4770      	bx	lr

08000770 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8000770:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8000772:	b10b      	cbz	r3, 8000778 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8000774:	4608      	mov	r0, r1
 8000776:	4718      	bx	r3
        }
    }
 8000778:	4770      	bx	lr

0800077a <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 800077a:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800077e:	4770      	bx	lr

08000780 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8000780:	6840      	ldr	r0, [r0, #4]
 8000782:	6803      	ldr	r3, [r0, #0]
 8000784:	699b      	ldr	r3, [r3, #24]
 8000786:	4718      	bx	r3

08000788 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8000788:	4770      	bx	lr

0800078a <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 800078a:	4770      	bx	lr

0800078c <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 800078c:	4770      	bx	lr

0800078e <_ZN11TouchGFXHAL10initializeEv>:
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 800078e:	f000 bc79 	b.w	8001084 <_ZN20TouchGFXGeneratedHAL10initializeEv>

08000792 <_ZN11TouchGFXHAL9taskEntryEv>:
}

void TouchGFXHAL::taskEntry()
{
 8000792:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 8000794:	6803      	ldr	r3, [r0, #0]
{
 8000796:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 8000798:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800079c:	4798      	blx	r3
    enableInterrupts();
 800079e:	6823      	ldr	r3, [r4, #0]
 80007a0:	4620      	mov	r0, r4
 80007a2:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80007a4:	4798      	blx	r3

    OSWrappers::waitForVSync();
 80007a6:	f000 f8eb 	bl	8000980 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 80007aa:	6823      	ldr	r3, [r4, #0]
 80007ac:	4620      	mov	r0, r4
 80007ae:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80007b0:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 80007b2:	2029      	movs	r0, #41	; 0x29
 80007b4:	f001 f93a 	bl	8001a2c <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 80007b8:	f000 f8e2 	bl	8000980 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 80007bc:	6823      	ldr	r3, [r4, #0]
 80007be:	4620      	mov	r0, r4
 80007c0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80007c2:	4798      	blx	r3
    for (;;)
 80007c4:	e7f8      	b.n	80007b8 <_ZN11TouchGFXHAL9taskEntryEv+0x26>

080007c6 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 80007c6:	b510      	push	{r4, lr}
 80007c8:	4604      	mov	r4, r0
        swapFrameBuffers();
 80007ca:	f00b f973 	bl	800bab4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 80007ce:	6823      	ldr	r3, [r4, #0]
 80007d0:	4620      	mov	r0, r4
 80007d2:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
 80007d6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 80007da:	4718      	bx	r3

080007dc <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 80007dc:	f000 bc44 	b.w	8001068 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

080007e0 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 80007e0:	f000 bc48 	b.w	8001074 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

080007e4 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 80007e4:	f000 bc74 	b.w	80010d0 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

080007e8 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 80007e8:	f000 bc1a 	b.w	8001020 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

080007ec <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 80007ec:	f000 bc74 	b.w	80010d8 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

080007f0 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 80007f0:	f000 bc7c 	b.w	80010ec <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

080007f4 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 80007f4:	f000 bc1e 	b.w	8001034 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

080007f8 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 80007f8:	f00a bbd0 	b.w	800af9c <_ZN8touchgfx3HAL16flushFrameBufferEv>

080007fc <_ZN11TouchGFXHALD0Ev>:
 80007fc:	b510      	push	{r4, lr}
 80007fe:	217c      	movs	r1, #124	; 0x7c
 8000800:	4604      	mov	r4, r0
 8000802:	f01f ff69 	bl	80206d8 <_ZdlPvj>
 8000806:	4620      	mov	r0, r4
 8000808:	bd10      	pop	{r4, pc}

0800080a <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 800080a:	f890 3077 	ldrb.w	r3, [r0, #119]	; 0x77
 800080e:	b11b      	cbz	r3, 8000818 <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 8000810:	6840      	ldr	r0, [r0, #4]
 8000812:	6803      	ldr	r3, [r0, #0]
 8000814:	681b      	ldr	r3, [r3, #0]
 8000816:	4718      	bx	r3
    }
 8000818:	4618      	mov	r0, r3
 800081a:	4770      	bx	lr

0800081c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 800081c:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 800081e:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 8000822:	f890 4074 	ldrb.w	r4, [r0, #116]	; 0x74
            if (DISPLAY_ROTATION == rotate0)
 8000826:	4b0c      	ldr	r3, [pc, #48]	; (8000858 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 8000828:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 800082a:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 800082c:	d009      	beq.n	8000842 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 800082e:	b93a      	cbnz	r2, 8000840 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000830:	4a0a      	ldr	r2, [pc, #40]	; (800085c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 8000832:	490b      	ldr	r1, [pc, #44]	; (8000860 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000834:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 8000836:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 8000838:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800083a:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 800083c:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 800083e:	701a      	strb	r2, [r3, #0]
    }
 8000840:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 8000842:	2a00      	cmp	r2, #0
 8000844:	d0fc      	beq.n	8000840 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000846:	4a05      	ldr	r2, [pc, #20]	; (800085c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 8000848:	4905      	ldr	r1, [pc, #20]	; (8000860 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800084a:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 800084c:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 800084e:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000850:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 8000852:	2200      	movs	r2, #0
 8000854:	e7f3      	b.n	800083e <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 8000856:	bf00      	nop
 8000858:	200155ac 	.word	0x200155ac
 800085c:	200155a8 	.word	0x200155a8
 8000860:	200155aa 	.word	0x200155aa

08000864 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8000864:	b570      	push	{r4, r5, r6, lr}
 8000866:	460d      	mov	r5, r1
 8000868:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 800086a:	b935      	cbnz	r5, 800087a <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 800086c:	4b09      	ldr	r3, [pc, #36]	; (8000894 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 800086e:	4a0a      	ldr	r2, [pc, #40]	; (8000898 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 8000870:	480a      	ldr	r0, [pc, #40]	; (800089c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 8000872:	f240 21d2 	movw	r1, #722	; 0x2d2
 8000876:	f01f ffe3 	bl	8020840 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 800087a:	e9c0 520f 	strd	r5, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 800087e:	4b08      	ldr	r3, [pc, #32]	; (80008a0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 8000880:	3a00      	subs	r2, #0
 8000882:	bf18      	it	ne
 8000884:	2201      	movne	r2, #1
 8000886:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8000888:	6803      	ldr	r3, [r0, #0]
    }
 800088a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 800088e:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8000892:	4718      	bx	r3
 8000894:	08021ae8 	.word	0x08021ae8
 8000898:	08021b20 	.word	0x08021b20
 800089c:	08021b6e 	.word	0x08021b6e
 80008a0:	200155b2 	.word	0x200155b2

080008a4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 80008a4:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 80008a6:	4b09      	ldr	r3, [pc, #36]	; (80008cc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 80008a8:	881b      	ldrh	r3, [r3, #0]
 80008aa:	428b      	cmp	r3, r1
 80008ac:	d803      	bhi.n	80008b6 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 80008ae:	4b08      	ldr	r3, [pc, #32]	; (80008d0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 80008b0:	881b      	ldrh	r3, [r3, #0]
 80008b2:	4293      	cmp	r3, r2
 80008b4:	d905      	bls.n	80008c2 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 80008b6:	4b07      	ldr	r3, [pc, #28]	; (80008d4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 80008b8:	4a07      	ldr	r2, [pc, #28]	; (80008d8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 80008ba:	4808      	ldr	r0, [pc, #32]	; (80008dc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 80008bc:	219e      	movs	r1, #158	; 0x9e
 80008be:	f01f ffbf 	bl	8020840 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 80008c2:	4b07      	ldr	r3, [pc, #28]	; (80008e0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 80008c4:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 80008c6:	4b07      	ldr	r3, [pc, #28]	; (80008e4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 80008c8:	801a      	strh	r2, [r3, #0]
    }
 80008ca:	bd08      	pop	{r3, pc}
 80008cc:	200155a8 	.word	0x200155a8
 80008d0:	200155aa 	.word	0x200155aa
 80008d4:	08021bb3 	.word	0x08021bb3
 80008d8:	08021c16 	.word	0x08021c16
 80008dc:	08021b6e 	.word	0x08021b6e
 80008e0:	200155ae 	.word	0x200155ae
 80008e4:	200155b0 	.word	0x200155b0

080008e8 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 80008e8:	2101      	movs	r1, #1
{
 80008ea:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 80008ec:	2200      	movs	r2, #0
 80008ee:	4608      	mov	r0, r1
 80008f0:	f007 fe90 	bl	8008614 <osSemaphoreNew>
 80008f4:	4b0a      	ldr	r3, [pc, #40]	; (8000920 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 80008f6:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 80008f8:	b928      	cbnz	r0, 8000906 <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 80008fa:	4b0a      	ldr	r3, [pc, #40]	; (8000924 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 80008fc:	4a0a      	ldr	r2, [pc, #40]	; (8000928 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 80008fe:	2129      	movs	r1, #41	; 0x29

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000900:	480a      	ldr	r0, [pc, #40]	; (800092c <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8000902:	f01f ff9d 	bl	8020840 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8000906:	2200      	movs	r2, #0
 8000908:	2104      	movs	r1, #4
 800090a:	2001      	movs	r0, #1
 800090c:	f007 ff48 	bl	80087a0 <osMessageQueueNew>
 8000910:	4b07      	ldr	r3, [pc, #28]	; (8000930 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8000912:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000914:	b918      	cbnz	r0, 800091e <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8000916:	4b07      	ldr	r3, [pc, #28]	; (8000934 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8000918:	4a03      	ldr	r2, [pc, #12]	; (8000928 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 800091a:	212d      	movs	r1, #45	; 0x2d
 800091c:	e7f0      	b.n	8000900 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 800091e:	bd08      	pop	{r3, pc}
 8000920:	2000019c 	.word	0x2000019c
 8000924:	08021d34 	.word	0x08021d34
 8000928:	08021d7d 	.word	0x08021d7d
 800092c:	08021dac 	.word	0x08021dac
 8000930:	20000198 	.word	0x20000198
 8000934:	08021dfa 	.word	0x08021dfa

08000938 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8000938:	4b02      	ldr	r3, [pc, #8]	; (8000944 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 800093a:	f04f 31ff 	mov.w	r1, #4294967295
 800093e:	6818      	ldr	r0, [r3, #0]
 8000940:	f007 bebe 	b.w	80086c0 <osSemaphoreAcquire>
 8000944:	2000019c 	.word	0x2000019c

08000948 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8000948:	4b01      	ldr	r3, [pc, #4]	; (8000950 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 800094a:	6818      	ldr	r0, [r3, #0]
 800094c:	f007 bef2 	b.w	8008734 <osSemaphoreRelease>
 8000950:	2000019c 	.word	0x2000019c

08000954 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8000954:	4b02      	ldr	r3, [pc, #8]	; (8000960 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8000956:	2100      	movs	r1, #0
 8000958:	6818      	ldr	r0, [r3, #0]
 800095a:	f007 beb1 	b.w	80086c0 <osSemaphoreAcquire>
 800095e:	bf00      	nop
 8000960:	2000019c 	.word	0x2000019c

08000964 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 8000964:	f7ff bff0 	b.w	8000948 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08000968 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8000968:	4803      	ldr	r0, [pc, #12]	; (8000978 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 800096a:	4904      	ldr	r1, [pc, #16]	; (800097c <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 800096c:	6800      	ldr	r0, [r0, #0]
 800096e:	2300      	movs	r3, #0
 8000970:	461a      	mov	r2, r3
 8000972:	f007 bf5b 	b.w	800882c <osMessageQueuePut>
 8000976:	bf00      	nop
 8000978:	20000198 	.word	0x20000198
 800097c:	20000004 	.word	0x20000004

08000980 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8000980:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8000982:	4c08      	ldr	r4, [pc, #32]	; (80009a4 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8000984:	2300      	movs	r3, #0
 8000986:	461a      	mov	r2, r3
 8000988:	a901      	add	r1, sp, #4
 800098a:	6820      	ldr	r0, [r4, #0]
 800098c:	f007 ff90 	bl	80088b0 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8000990:	6820      	ldr	r0, [r4, #0]
 8000992:	f04f 33ff 	mov.w	r3, #4294967295
 8000996:	2200      	movs	r2, #0
 8000998:	a901      	add	r1, sp, #4
 800099a:	f007 ff89 	bl	80088b0 <osMessageQueueGet>
}
 800099e:	b002      	add	sp, #8
 80009a0:	bd10      	pop	{r4, pc}
 80009a2:	bf00      	nop
 80009a4:	20000198 	.word	0x20000198

080009a8 <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 80009a8:	6803      	ldr	r3, [r0, #0]
 80009aa:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80009ac:	4718      	bx	r3

080009ae <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 80009ae:	2001      	movs	r0, #1
 80009b0:	4770      	bx	lr

080009b2 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 80009b2:	6803      	ldr	r3, [r0, #0]
 80009b4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80009b6:	4718      	bx	r3

080009b8 <_ZN8STM32DMA10initializeEv>:
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}

void STM32DMA::initialize()
{
 80009b8:	b082      	sub	sp, #8
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 80009ba:	2300      	movs	r3, #0
 80009bc:	9301      	str	r3, [sp, #4]
 80009be:	4b0d      	ldr	r3, [pc, #52]	; (80009f4 <_ZN8STM32DMA10initializeEv+0x3c>)
 80009c0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80009c2:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 80009c6:	631a      	str	r2, [r3, #48]	; 0x30
 80009c8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80009ca:	f402 0200 	and.w	r2, r2, #8388608	; 0x800000
 80009ce:	9201      	str	r2, [sp, #4]
 80009d0:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 80009d2:	691a      	ldr	r2, [r3, #16]
 80009d4:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 80009d8:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 80009da:	691a      	ldr	r2, [r3, #16]
 80009dc:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 80009e0:	611a      	str	r2, [r3, #16]

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 80009e2:	4b05      	ldr	r3, [pc, #20]	; (80009f8 <_ZN8STM32DMA10initializeEv+0x40>)
 80009e4:	4a05      	ldr	r2, [pc, #20]	; (80009fc <_ZN8STM32DMA10initializeEv+0x44>)
 80009e6:	611a      	str	r2, [r3, #16]
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80009e8:	4b05      	ldr	r3, [pc, #20]	; (8000a00 <_ZN8STM32DMA10initializeEv+0x48>)
 80009ea:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80009ee:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 80009f0:	b002      	add	sp, #8
 80009f2:	4770      	bx	lr
 80009f4:	40023800 	.word	0x40023800
 80009f8:	20003a0c 	.word	0x20003a0c
 80009fc:	08000a45 	.word	0x08000a45
 8000a00:	e000e100 	.word	0xe000e100

08000a04 <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8000a04:	f240 30ef 	movw	r0, #1007	; 0x3ef
 8000a08:	4770      	bx	lr
	...

08000a0c <_ZN8STM32DMAD1Ev>:
STM32DMA::~STM32DMA()
 8000a0c:	4b05      	ldr	r3, [pc, #20]	; (8000a24 <_ZN8STM32DMAD1Ev+0x18>)
 8000a0e:	6003      	str	r3, [r0, #0]
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000a10:	4b05      	ldr	r3, [pc, #20]	; (8000a28 <_ZN8STM32DMAD1Ev+0x1c>)
 8000a12:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8000a16:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8000a1a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8000a1e:	f3bf 8f6f 	isb	sy
}
 8000a22:	4770      	bx	lr
 8000a24:	08021f98 	.word	0x08021f98
 8000a28:	e000e100 	.word	0xe000e100

08000a2c <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 8000a2c:	b510      	push	{r4, lr}
 8000a2e:	4604      	mov	r4, r0
}
 8000a30:	f44f 615a 	mov.w	r1, #3488	; 0xda0
 8000a34:	f7ff ffea 	bl	8000a0c <_ZN8STM32DMAD1Ev>
 8000a38:	4620      	mov	r0, r4
 8000a3a:	f01f fe4d 	bl	80206d8 <_ZdlPvj>
 8000a3e:	4620      	mov	r0, r4
 8000a40:	bd10      	pop	{r4, pc}
	...

08000a44 <DMA2D_XferCpltCallback>:
        return instance;
 8000a44:	4b02      	ldr	r3, [pc, #8]	; (8000a50 <DMA2D_XferCpltCallback+0xc>)
 8000a46:	681b      	ldr	r3, [r3, #0]
 8000a48:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8000a4a:	6803      	ldr	r3, [r0, #0]
 8000a4c:	695b      	ldr	r3, [r3, #20]
 8000a4e:	4718      	bx	r3
 8000a50:	200155b4 	.word	0x200155b4

08000a54 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8000a54:	b570      	push	{r4, r5, r6, lr}
 8000a56:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8000a58:	4625      	mov	r5, r4
 8000a5a:	4b0a      	ldr	r3, [pc, #40]	; (8000a84 <_ZN8STM32DMAC1Ev+0x30>)
 8000a5c:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8000a5e:	2600      	movs	r6, #0
 8000a60:	6060      	str	r0, [r4, #4]
 8000a62:	7226      	strb	r6, [r4, #8]
 8000a64:	7266      	strb	r6, [r4, #9]
 8000a66:	f845 3b20 	str.w	r3, [r5], #32
 8000a6a:	2260      	movs	r2, #96	; 0x60
 8000a6c:	4629      	mov	r1, r5
 8000a6e:	f00b f977 	bl	800bd60 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 8000a72:	f504 635a 	add.w	r3, r4, #3488	; 0xda0
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 8000a76:	60ee      	str	r6, [r5, #12]
 8000a78:	3524      	adds	r5, #36	; 0x24
 8000a7a:	42ab      	cmp	r3, r5
 8000a7c:	d1fb      	bne.n	8000a76 <_ZN8STM32DMAC1Ev+0x22>
}
 8000a7e:	4620      	mov	r0, r4
 8000a80:	bd70      	pop	{r4, r5, r6, pc}
 8000a82:	bf00      	nop
 8000a84:	08021f98 	.word	0x08021f98

08000a88 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 8000a88:	b508      	push	{r3, lr}
    switch (format)
 8000a8a:	290b      	cmp	r1, #11
 8000a8c:	d80b      	bhi.n	8000aa6 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1e>
 8000a8e:	e8df f001 	tbb	[pc, r1]
 8000a92:	0612      	.short	0x0612
 8000a94:	0a0a0a10 	.word	0x0a0a0a10
 8000a98:	0808080a 	.word	0x0808080a
 8000a9c:	0808      	.short	0x0808
 8000a9e:	2001      	movs	r0, #1
}
 8000aa0:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 8000aa2:	2005      	movs	r0, #5
        break;
 8000aa4:	e7fc      	b.n	8000aa0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        assert(0 && "Unsupported Format!");
 8000aa6:	4b05      	ldr	r3, [pc, #20]	; (8000abc <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8000aa8:	4a05      	ldr	r2, [pc, #20]	; (8000ac0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8000aaa:	4806      	ldr	r0, [pc, #24]	; (8000ac4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x3c>)
 8000aac:	2167      	movs	r1, #103	; 0x67
 8000aae:	f01f fec7 	bl	8020840 <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 8000ab2:	2000      	movs	r0, #0
 8000ab4:	e7f4      	b.n	8000aa0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8000ab6:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000ab8:	e7f2      	b.n	8000aa0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 8000aba:	bf00      	nop
 8000abc:	08021e3c 	.word	0x08021e3c
 8000ac0:	08021e57 	.word	0x08021e57
 8000ac4:	08021ea1 	.word	0x08021ea1

08000ac8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 8000ac8:	b508      	push	{r3, lr}
    switch (format)
 8000aca:	290a      	cmp	r1, #10
 8000acc:	d809      	bhi.n	8000ae2 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1a>
 8000ace:	e8df f001 	tbb	[pc, r1]
 8000ad2:	0610      	.short	0x0610
 8000ad4:	0808080e 	.word	0x0808080e
 8000ad8:	06060608 	.word	0x06060608
 8000adc:	06          	.byte	0x06
 8000add:	00          	.byte	0x00
 8000ade:	2001      	movs	r0, #1
}
 8000ae0:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 8000ae2:	4b05      	ldr	r3, [pc, #20]	; (8000af8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x30>)
 8000ae4:	4a05      	ldr	r2, [pc, #20]	; (8000afc <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8000ae6:	4806      	ldr	r0, [pc, #24]	; (8000b00 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8000ae8:	2188      	movs	r1, #136	; 0x88
 8000aea:	f01f fea9 	bl	8020840 <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8000aee:	2000      	movs	r0, #0
 8000af0:	e7f6      	b.n	8000ae0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 8000af2:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000af4:	e7f4      	b.n	8000ae0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 8000af6:	bf00      	nop
 8000af8:	08021e3c 	.word	0x08021e3c
 8000afc:	08021eed 	.word	0x08021eed
 8000b00:	08021ea1 	.word	0x08021ea1

08000b04 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
 * BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 * BLIT_OP_COPY_A4
 * BLIT_OP_COPY_A8
 */
void STM32DMA::setupDataCopy(const BlitOp& blitOp)
{
 8000b04:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000b08:	7f4f      	ldrb	r7, [r1, #29]
{
 8000b0a:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000b0c:	4639      	mov	r1, r7
{
 8000b0e:	4681      	mov	r9, r0
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000b10:	f7ff ffba 	bl	8000a88 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b14:	f894 801e 	ldrb.w	r8, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000b18:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b1a:	4641      	mov	r1, r8
 8000b1c:	4648      	mov	r0, r9
 8000b1e:	f7ff ffb3 	bl	8000a88 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b22:	4641      	mov	r1, r8
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b24:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b26:	4648      	mov	r0, r9
 8000b28:	f7ff ffce 	bl	8000ac8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000b2c:	8aa1      	ldrh	r1, [r4, #20]
 8000b2e:	8b62      	ldrh	r2, [r4, #26]
 8000b30:	4b42      	ldr	r3, [pc, #264]	; (8000c3c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000b32:	1a52      	subs	r2, r2, r1
 8000b34:	641a      	str	r2, [r3, #64]	; 0x40

    /* DMA2D BGOR register configuration */
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000b36:	619a      	str	r2, [r3, #24]

    /* DMA2D FGOR register configuration */
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8000b38:	8b22      	ldrh	r2, [r4, #24]
 8000b3a:	1a52      	subs	r2, r2, r1
 8000b3c:	611a      	str	r2, [r3, #16]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000b3e:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000b40:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000b42:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000b46:	645a      	str	r2, [r3, #68]	; 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000b48:	6920      	ldr	r0, [r4, #16]

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000b4a:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000b4c:	63d8      	str	r0, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000b4e:	60da      	str	r2, [r3, #12]

    switch (blitOp.operation)
 8000b50:	6821      	ldr	r1, [r4, #0]
    {
    case BLIT_OP_COPY_A4:
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b52:	f894 c01c 	ldrb.w	ip, [r4, #28]
    switch (blitOp.operation)
 8000b56:	2980      	cmp	r1, #128	; 0x80
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b58:	ea4f 620c 	mov.w	r2, ip, lsl #24
    switch (blitOp.operation)
 8000b5c:	d026      	beq.n	8000bac <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa8>
 8000b5e:	d810      	bhi.n	8000b82 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x7e>
 8000b60:	2920      	cmp	r1, #32
 8000b62:	ea45 0402 	orr.w	r4, r5, r2
 8000b66:	d061      	beq.n	8000c2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 8000b68:	2940      	cmp	r1, #64	; 0x40
 8000b6a:	d05f      	beq.n	8000c2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 8000b6c:	2904      	cmp	r1, #4
 8000b6e:	d05d      	beq.n	8000c2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
        break;
    default: /* BLIT_OP_COPY */
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b70:	4b32      	ldr	r3, [pc, #200]	; (8000c3c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000b72:	432a      	orrs	r2, r5
 8000b74:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000

        /* Perform pixel-format-conversion (PFC) If Bitmap format is not same format as framebuffer format */
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000b78:	4547      	cmp	r7, r8
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b7a:	61da      	str	r2, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000b7c:	d05a      	beq.n	8000c34 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x130>
        {
            /* Start DMA2D : PFC Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8000b7e:	4a30      	ldr	r2, [pc, #192]	; (8000c40 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8000b80:	e040      	b.n	8000c04 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
    switch (blitOp.operation)
 8000b82:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
 8000b86:	d007      	beq.n	8000b98 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x94>
 8000b88:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 8000b8c:	d1f0      	bne.n	8000b70 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x6c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b8e:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000b92:	f042 0209 	orr.w	r2, r2, #9
 8000b96:	e003      	b.n	8000ba0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b98:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000b9c:	f042 020a 	orr.w	r2, r2, #10
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000ba0:	61da      	str	r2, [r3, #28]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
 8000ba2:	68e2      	ldr	r2, [r4, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000ba4:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000ba6:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000ba8:	6158      	str	r0, [r3, #20]
 8000baa:	e02a      	b.n	8000c02 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfe>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8000bac:	68a4      	ldr	r4, [r4, #8]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000bae:	432a      	orrs	r2, r5
 8000bb0:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8000bb4:	1d21      	adds	r1, r4, #4
 8000bb6:	62d9      	str	r1, [r3, #44]	; 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000bb8:	61da      	str	r2, [r3, #28]
            switch ((Bitmap::ClutFormat)palette->format)
 8000bba:	7822      	ldrb	r2, [r4, #0]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000bbc:	625e      	str	r6, [r3, #36]	; 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000bbe:	6158      	str	r0, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 8000bc0:	b142      	cbz	r2, 8000bd4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd0>
 8000bc2:	2a01      	cmp	r2, #1
 8000bc4:	d021      	beq.n	8000c0a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x106>
                assert(0 && "Unsupported format");
 8000bc6:	4b1f      	ldr	r3, [pc, #124]	; (8000c44 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>)
 8000bc8:	4a1f      	ldr	r2, [pc, #124]	; (8000c48 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
 8000bca:	4820      	ldr	r0, [pc, #128]	; (8000c4c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>)
 8000bcc:	f44f 7189 	mov.w	r1, #274	; 0x112
 8000bd0:	f01f fe36 	bl	8020840 <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000bd4:	69da      	ldr	r2, [r3, #28]
 8000bd6:	8861      	ldrh	r1, [r4, #2]
 8000bd8:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 8000bdc:	3901      	subs	r1, #1
 8000bde:	f022 0210 	bic.w	r2, r2, #16
 8000be2:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8000be6:	61da      	str	r2, [r3, #28]
            bool blend = true;
 8000be8:	2001      	movs	r0, #1
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 8000bea:	4b14      	ldr	r3, [pc, #80]	; (8000c3c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000bec:	69da      	ldr	r2, [r3, #28]
 8000bee:	f042 0220 	orr.w	r2, r2, #32
 8000bf2:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8000bf4:	69da      	ldr	r2, [r3, #28]
 8000bf6:	0692      	lsls	r2, r2, #26
 8000bf8:	d4fc      	bmi.n	8000bf4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf0>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 8000bfa:	2210      	movs	r2, #16
 8000bfc:	609a      	str	r2, [r3, #8]
            if(blend)
 8000bfe:	2800      	cmp	r0, #0
 8000c00:	d0bd      	beq.n	8000b7e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x7a>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8000c02:	4a13      	ldr	r2, [pc, #76]	; (8000c50 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>)
        }
        else
        {
            /* Start DMA2D : M2M Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000c04:	601a      	str	r2, [r3, #0]
        }
        break;
    }
}
 8000c06:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000c0a:	8862      	ldrh	r2, [r4, #2]
 8000c0c:	69d9      	ldr	r1, [r3, #28]
 8000c0e:	1e54      	subs	r4, r2, #1
 8000c10:	f421 427f 	bic.w	r2, r1, #65280	; 0xff00
 8000c14:	f022 0210 	bic.w	r2, r2, #16
 8000c18:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
                if(blitOp.alpha == 255)
 8000c1c:	f1bc 00ff 	subs.w	r0, ip, #255	; 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000c20:	f042 0210 	orr.w	r2, r2, #16
                if(blitOp.alpha == 255)
 8000c24:	bf18      	it	ne
 8000c26:	2001      	movne	r0, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000c28:	61da      	str	r2, [r3, #28]
                break;
 8000c2a:	e7de      	b.n	8000bea <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe6>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000c2c:	f444 3400 	orr.w	r4, r4, #131072	; 0x20000
 8000c30:	61dc      	str	r4, [r3, #28]
 8000c32:	e7b8      	b.n	8000ba6 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa2>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000c34:	f240 2201 	movw	r2, #513	; 0x201
 8000c38:	e7e4      	b.n	8000c04 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
 8000c3a:	bf00      	nop
 8000c3c:	4002b000 	.word	0x4002b000
 8000c40:	00010201 	.word	0x00010201
 8000c44:	08021f38 	.word	0x08021f38
 8000c48:	08021f52 	.word	0x08021f52
 8000c4c:	08021ea1 	.word	0x08021ea1
 8000c50:	00020201 	.word	0x00020201

08000c54 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 8000c54:	b570      	push	{r4, r5, r6, lr}
 8000c56:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000c58:	7f89      	ldrb	r1, [r1, #30]
 8000c5a:	f7ff ff35 	bl	8000ac8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000c5e:	8aa6      	ldrh	r6, [r4, #20]
 8000c60:	8ae1      	ldrh	r1, [r4, #22]

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c62:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000c64:	4b15      	ldr	r3, [pc, #84]	; (8000cbc <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>)
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c66:	6925      	ldr	r5, [r4, #16]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000c68:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000c6a:	ea41 4106 	orr.w	r1, r1, r6, lsl #16
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c6e:	1b92      	subs	r2, r2, r6
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000c70:	6459      	str	r1, [r3, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c72:	63dd      	str	r5, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c74:	641a      	str	r2, [r3, #64]	; 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 8000c76:	6826      	ldr	r6, [r4, #0]
 8000c78:	68e1      	ldr	r1, [r4, #12]
 8000c7a:	2e08      	cmp	r6, #8
 8000c7c:	d10d      	bne.n	8000c9a <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration */
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c7e:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c80:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000c82:	6258      	str	r0, [r3, #36]	; 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000c84:	7f20      	ldrb	r0, [r4, #28]
 8000c86:	4a0e      	ldr	r2, [pc, #56]	; (8000cc0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6c>)
 8000c88:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8000c8c:	61da      	str	r2, [r3, #28]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
 8000c8e:	4a0d      	ldr	r2, [pc, #52]	; (8000cc4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>)
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000c90:	6219      	str	r1, [r3, #32]
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c92:	615d      	str	r5, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c94:	60dd      	str	r5, [r3, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8000c96:	601a      	str	r2, [r3, #0]
    }
}
 8000c98:	bd70      	pop	{r4, r5, r6, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 8000c9a:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8000c9c:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 8000c9e:	611a      	str	r2, [r3, #16]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 8000ca0:	0948      	lsrs	r0, r1, #5
 8000ca2:	0a0a      	lsrs	r2, r1, #8
 8000ca4:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8000ca8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8000cac:	4302      	orrs	r2, r0
 8000cae:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8000cb2:	430a      	orrs	r2, r1
 8000cb4:	639a      	str	r2, [r3, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8000cb6:	4a04      	ldr	r2, [pc, #16]	; (8000cc8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x74>)
 8000cb8:	e7ed      	b.n	8000c96 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 8000cba:	bf00      	nop
 8000cbc:	4002b000 	.word	0x4002b000
 8000cc0:	00010009 	.word	0x00010009
 8000cc4:	00020201 	.word	0x00020201
 8000cc8:	00030201 	.word	0x00030201

08000ccc <_ZN8touchgfx5paint6rgb5658tearDownEv>:
    * @brief Waits until previous DMA drawing operation has finished
    */
    void tearDown()
    {
        /* Wait for DMA2D to finish last run */
        while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000ccc:	4b03      	ldr	r3, [pc, #12]	; (8000cdc <_ZN8touchgfx5paint6rgb5658tearDownEv+0x10>)
 8000cce:	681a      	ldr	r2, [r3, #0]
 8000cd0:	07d2      	lsls	r2, r2, #31
 8000cd2:	d4fc      	bmi.n	8000cce <_ZN8touchgfx5paint6rgb5658tearDownEv+0x2>

        /* Clear transfer flags */
        WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC|DMA2D_FLAG_CE|DMA2D_FLAG_TE);
 8000cd4:	2223      	movs	r2, #35	; 0x23
 8000cd6:	609a      	str	r2, [r3, #8]
    }
 8000cd8:	4770      	bx	lr
 8000cda:	bf00      	nop
 8000cdc:	4002b000 	.word	0x4002b000

08000ce0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
    *
    * @brief Renders Canvas Widget chunks using DMA.
    * This functions will not generate an interrupt, and will not affect the DMA queue.
    */
    void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
    {
 8000ce0:	b530      	push	{r4, r5, lr}
        /* Wait for DMA2D to finish last run */
        while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000ce2:	4c0f      	ldr	r4, [pc, #60]	; (8000d20 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x40>)
 8000ce4:	6825      	ldr	r5, [r4, #0]
 8000ce6:	07ed      	lsls	r5, r5, #31
 8000ce8:	d4fc      	bmi.n	8000ce4 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4>

        /* Clear transfer flags */
        WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC|DMA2D_FLAG_CE|DMA2D_FLAG_TE);
 8000cea:	2523      	movs	r5, #35	; 0x23

        /* DMA2D OPFCCR register configuration */
        WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

        /* Configure DMA2D data size */
        WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000cec:	0409      	lsls	r1, r1, #16
        WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC|DMA2D_FLAG_CE|DMA2D_FLAG_TE);
 8000cee:	60a5      	str	r5, [r4, #8]
        WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000cf0:	f041 0101 	orr.w	r1, r1, #1
        WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000cf4:	2502      	movs	r5, #2

        /* Configure DMA2D destination address */
        WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

        if (alpha < 0xFF)
 8000cf6:	2bff      	cmp	r3, #255	; 0xff
        WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000cf8:	6365      	str	r5, [r4, #52]	; 0x34
        WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000cfa:	6461      	str	r1, [r4, #68]	; 0x44
        WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 8000cfc:	63e0      	str	r0, [r4, #60]	; 0x3c
        if (alpha < 0xFF)
 8000cfe:	d00a      	beq.n	8000d16 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x36>
        {
            /* Write DMA2D BGPFCCR register */
            WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));

            /* Write DMA2D FGPFCCR register */
            WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000d00:	4908      	ldr	r1, [pc, #32]	; (8000d24 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x44>)
            WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000d02:	6265      	str	r5, [r4, #36]	; 0x24
            WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000d04:	ea41 6303 	orr.w	r3, r1, r3, lsl #24
 8000d08:	61e3      	str	r3, [r4, #28]

            /* Configure DMA2D source address */
            WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);

            /* Enable the Peripheral and Enable the transfer complete interrupt */
            WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
 8000d0a:	4b07      	ldr	r3, [pc, #28]	; (8000d28 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x48>)
            WRITE_REG(DMA2D->FGCOLR, color);
 8000d0c:	6222      	str	r2, [r4, #32]
            WRITE_REG(DMA2D->BGMAR, (uint32_t)ptr);
 8000d0e:	6160      	str	r0, [r4, #20]
            WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);
 8000d10:	60e0      	str	r0, [r4, #12]

            /* Set color */
            WRITE_REG(DMA2D->OCOLR, color565);

            /* Enable the Peripheral and Enable the transfer complete interrupt */
            WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8000d12:	6023      	str	r3, [r4, #0]
        }
    }
 8000d14:	bd30      	pop	{r4, r5, pc}
            WRITE_REG(DMA2D->FGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8000d16:	61e5      	str	r5, [r4, #28]
            WRITE_REG(DMA2D->OCOLR, color565);
 8000d18:	9b03      	ldr	r3, [sp, #12]
 8000d1a:	63a3      	str	r3, [r4, #56]	; 0x38
            WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8000d1c:	4b03      	ldr	r3, [pc, #12]	; (8000d2c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4c>)
 8000d1e:	e7f8      	b.n	8000d12 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x32>
 8000d20:	4002b000 	.word	0x4002b000
 8000d24:	00010009 	.word	0x00010009
 8000d28:	00020001 	.word	0x00020001
 8000d2c:	00030001 	.word	0x00030001

08000d30 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8000d30:	2001      	movs	r0, #1
 8000d32:	4770      	bx	lr

08000d34 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8000d34:	2038      	movs	r0, #56	; 0x38
 8000d36:	4770      	bx	lr

08000d38 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8000d38:	2338      	movs	r3, #56	; 0x38
 8000d3a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000d3e:	3008      	adds	r0, #8
 8000d40:	4770      	bx	lr

08000d42 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8000d42:	2338      	movs	r3, #56	; 0x38
 8000d44:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000d48:	3008      	adds	r0, #8
 8000d4a:	4770      	bx	lr

08000d4c <_ZNK8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000d4c:	2001      	movs	r0, #1
 8000d4e:	4770      	bx	lr

08000d50 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000d50:	f242 703c 	movw	r0, #10044	; 0x273c
 8000d54:	4770      	bx	lr

08000d56 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d56:	f242 733c 	movw	r3, #10044	; 0x273c
 8000d5a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000d5e:	3008      	adds	r0, #8
 8000d60:	4770      	bx	lr

08000d62 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d62:	f242 733c 	movw	r3, #10044	; 0x273c
 8000d66:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000d6a:	3008      	adds	r0, #8
 8000d6c:	4770      	bx	lr

08000d6e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000d6e:	2001      	movs	r0, #1
 8000d70:	4770      	bx	lr

08000d72 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000d72:	2010      	movs	r0, #16
 8000d74:	4770      	bx	lr

08000d76 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d76:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000d7a:	3008      	adds	r0, #8
 8000d7c:	4770      	bx	lr

08000d7e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d7e:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000d82:	3008      	adds	r0, #8
 8000d84:	4770      	bx	lr

08000d86 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoScreen1ScreenNoTransition();
 8000d86:	4608      	mov	r0, r1
 8000d88:	f001 bd5c 	b.w	8002844 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>

08000d8c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8000d8c:	b510      	push	{r4, lr}
 8000d8e:	4b03      	ldr	r3, [pc, #12]	; (8000d9c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 8000d90:	6003      	str	r3, [r0, #0]
 8000d92:	4604      	mov	r4, r0
 8000d94:	f009 fd37 	bl	800a806 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000d98:	4620      	mov	r0, r4
 8000d9a:	bd10      	pop	{r4, pc}
 8000d9c:	08022050 	.word	0x08022050

08000da0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 8000da0:	b510      	push	{r4, lr}
 8000da2:	4604      	mov	r4, r0
 8000da4:	f7ff fff2 	bl	8000d8c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8000da8:	4620      	mov	r0, r4
 8000daa:	2140      	movs	r1, #64	; 0x40
 8000dac:	f01f fc94 	bl	80206d8 <_ZdlPvj>
 8000db0:	4620      	mov	r0, r4
 8000db2:	bd10      	pop	{r4, pc}

08000db4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000db4:	b510      	push	{r4, lr}
 8000db6:	4b03      	ldr	r3, [pc, #12]	; (8000dc4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000db8:	6003      	str	r3, [r0, #0]
 8000dba:	4604      	mov	r4, r0
 8000dbc:	f009 fd23 	bl	800a806 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000dc0:	4620      	mov	r0, r4
 8000dc2:	bd10      	pop	{r4, pc}
 8000dc4:	0802201c 	.word	0x0802201c

08000dc8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000dc8:	b510      	push	{r4, lr}
 8000dca:	4604      	mov	r4, r0
 8000dcc:	f7ff fff2 	bl	8000db4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000dd0:	4620      	mov	r0, r4
 8000dd2:	f242 7144 	movw	r1, #10052	; 0x2744
 8000dd6:	f01f fc7f 	bl	80206d8 <_ZdlPvj>
 8000dda:	4620      	mov	r0, r4
 8000ddc:	bd10      	pop	{r4, pc}
	...

08000de0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000de0:	b510      	push	{r4, lr}
 8000de2:	4b03      	ldr	r3, [pc, #12]	; (8000df0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000de4:	6003      	str	r3, [r0, #0]
 8000de6:	4604      	mov	r4, r0
 8000de8:	f009 fd0d 	bl	800a806 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000dec:	4620      	mov	r0, r4
 8000dee:	bd10      	pop	{r4, pc}
 8000df0:	08021fe8 	.word	0x08021fe8

08000df4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000df4:	b510      	push	{r4, lr}
 8000df6:	4604      	mov	r4, r0
 8000df8:	f7ff fff2 	bl	8000de0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000dfc:	4620      	mov	r0, r4
 8000dfe:	2118      	movs	r1, #24
 8000e00:	f01f fc6a 	bl	80206d8 <_ZdlPvj>
 8000e04:	4620      	mov	r0, r4
 8000e06:	bd10      	pop	{r4, pc}

08000e08 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8000e08:	b510      	push	{r4, lr}
 8000e0a:	4b09      	ldr	r3, [pc, #36]	; (8000e30 <_ZN12FrontendHeapD1Ev+0x28>)
 8000e0c:	6003      	str	r3, [r0, #0]
 8000e0e:	4604      	mov	r4, r0
 8000e10:	f500 501d 	add.w	r0, r0, #10048	; 0x2740
 8000e14:	3030      	adds	r0, #48	; 0x30
 8000e16:	f7ff ffb9 	bl	8000d8c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8000e1a:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8000e1e:	f7ff ffc9 	bl	8000db4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000e22:	f104 0014 	add.w	r0, r4, #20
 8000e26:	f7ff ffdb 	bl	8000de0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000e2a:	4620      	mov	r0, r4
 8000e2c:	bd10      	pop	{r4, pc}
 8000e2e:	bf00      	nop
 8000e30:	08022084 	.word	0x08022084

08000e34 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8000e34:	b508      	push	{r3, lr}
 8000e36:	4802      	ldr	r0, [pc, #8]	; (8000e40 <__tcf_0+0xc>)
 8000e38:	f7ff ffe6 	bl	8000e08 <_ZN12FrontendHeapD1Ev>
 8000e3c:	bd08      	pop	{r3, pc}
 8000e3e:	bf00      	nop
 8000e40:	200001a4 	.word	0x200001a4

08000e44 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8000e44:	b510      	push	{r4, lr}
 8000e46:	4604      	mov	r4, r0
 8000e48:	f7ff ffde 	bl	8000e08 <_ZN12FrontendHeapD1Ev>
 8000e4c:	4620      	mov	r0, r4
 8000e4e:	f642 110c 	movw	r1, #10508	; 0x290c
 8000e52:	f01f fc41 	bl	80206d8 <_ZdlPvj>
 8000e56:	4620      	mov	r0, r4
 8000e58:	bd10      	pop	{r4, pc}
	...

08000e5c <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 8000e5c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8000e60:	f001 f9d8 	bl	8002214 <_ZN14BitmapDatabase11getInstanceEv>
 8000e64:	4605      	mov	r5, r0
 8000e66:	f001 f9d9 	bl	800221c <_ZN14BitmapDatabase15getInstanceSizeEv>
 8000e6a:	2400      	movs	r4, #0
 8000e6c:	4601      	mov	r1, r0
 8000e6e:	4623      	mov	r3, r4
 8000e70:	4628      	mov	r0, r5
 8000e72:	4622      	mov	r2, r4
 8000e74:	9400      	str	r4, [sp, #0]
 8000e76:	f013 fb2f 	bl	80144d8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8000e7a:	4b26      	ldr	r3, [pc, #152]	; (8000f14 <touchgfx_init+0xb8>)
 8000e7c:	4a26      	ldr	r2, [pc, #152]	; (8000f18 <touchgfx_init+0xbc>)
        static FrontendHeap instance;
 8000e7e:	4d27      	ldr	r5, [pc, #156]	; (8000f1c <touchgfx_init+0xc0>)
 8000e80:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8000e82:	4620      	mov	r0, r4
 8000e84:	f003 ff66 	bl	8004d54 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8000e88:	4825      	ldr	r0, [pc, #148]	; (8000f20 <touchgfx_init+0xc4>)
 8000e8a:	f013 fa8d 	bl	80143a8 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8000e8e:	782b      	ldrb	r3, [r5, #0]
 8000e90:	f3bf 8f5b 	dmb	ish
 8000e94:	07db      	lsls	r3, r3, #31
 8000e96:	d436      	bmi.n	8000f06 <touchgfx_init+0xaa>
 8000e98:	4628      	mov	r0, r5
 8000e9a:	f01f fc1f 	bl	80206dc <__cxa_guard_acquire>
 8000e9e:	b390      	cbz	r0, 8000f06 <touchgfx_init+0xaa>
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 8000ea0:	4c20      	ldr	r4, [pc, #128]	; (8000f24 <touchgfx_init+0xc8>)
 8000ea2:	4f21      	ldr	r7, [pc, #132]	; (8000f28 <touchgfx_init+0xcc>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8000ea4:	4b21      	ldr	r3, [pc, #132]	; (8000f2c <touchgfx_init+0xd0>)
 8000ea6:	6023      	str	r3, [r4, #0]
 8000ea8:	f107 0644 	add.w	r6, r7, #68	; 0x44
 8000eac:	f104 0014 	add.w	r0, r4, #20
 8000eb0:	f104 082c 	add.w	r8, r4, #44	; 0x2c
 8000eb4:	6060      	str	r0, [r4, #4]
 8000eb6:	f8c4 8008 	str.w	r8, [r4, #8]
 8000eba:	60e7      	str	r7, [r4, #12]
 8000ebc:	6126      	str	r6, [r4, #16]
 8000ebe:	f009 fca3 	bl	800a808 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000ec2:	4b1b      	ldr	r3, [pc, #108]	; (8000f30 <touchgfx_init+0xd4>)
 8000ec4:	6163      	str	r3, [r4, #20]
 8000ec6:	4640      	mov	r0, r8
 8000ec8:	f009 fc9e 	bl	800a808 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000ecc:	4b19      	ldr	r3, [pc, #100]	; (8000f34 <touchgfx_init+0xd8>)
 8000ece:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000ed0:	4638      	mov	r0, r7
 8000ed2:	f009 fc99 	bl	800a808 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000ed6:	f504 5300 	add.w	r3, r4, #8192	; 0x2000
 8000eda:	4a17      	ldr	r2, [pc, #92]	; (8000f38 <touchgfx_init+0xdc>)
 8000edc:	f8c3 2770 	str.w	r2, [r3, #1904]	; 0x770
 8000ee0:	f503 60f6 	add.w	r0, r3, #1968	; 0x7b0
 8000ee4:	f003 ffb2 	bl	8004e4c <_ZN5ModelC1Ev>
 8000ee8:	4622      	mov	r2, r4
 8000eea:	f107 0140 	add.w	r1, r7, #64	; 0x40
 8000eee:	4630      	mov	r0, r6
 8000ef0:	f003 ffa2 	bl	8004e38 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8000ef4:	4630      	mov	r0, r6
 8000ef6:	f001 fca5 	bl	8002844 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
        static FrontendHeap instance;
 8000efa:	4810      	ldr	r0, [pc, #64]	; (8000f3c <touchgfx_init+0xe0>)
 8000efc:	f01f fcbe 	bl	802087c <atexit>
 8000f00:	4628      	mov	r0, r5
 8000f02:	f01f fbf7 	bl	80206f4 <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8000f06:	480e      	ldr	r0, [pc, #56]	; (8000f40 <touchgfx_init+0xe4>)
}
 8000f08:	b002      	add	sp, #8
 8000f0a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8000f0e:	f7ff bc3e 	b.w	800078e <_ZN11TouchGFXHAL10initializeEv>
 8000f12:	bf00      	nop
 8000f14:	20015618 	.word	0x20015618
 8000f18:	200038d0 	.word	0x200038d0
 8000f1c:	200001a0 	.word	0x200001a0
 8000f20:	20000008 	.word	0x20000008
 8000f24:	200001a4 	.word	0x200001a4
 8000f28:	20002914 	.word	0x20002914
 8000f2c:	08022084 	.word	0x08022084
 8000f30:	08021fe8 	.word	0x08021fe8
 8000f34:	0802201c 	.word	0x0802201c
 8000f38:	08022050 	.word	0x08022050
 8000f3c:	08000e35 	.word	0x08000e35
 8000f40:	20003854 	.word	0x20003854

08000f44 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8000f44:	4801      	ldr	r0, [pc, #4]	; (8000f4c <touchgfx_taskEntry+0x8>)
 8000f46:	f7ff bc24 	b.w	8000792 <_ZN11TouchGFXHAL9taskEntryEv>
 8000f4a:	bf00      	nop
 8000f4c:	20003854 	.word	0x20003854

08000f50 <_GLOBAL__sub_I_touchgfx_init>:
}
 8000f50:	b570      	push	{r4, r5, r6, lr}
{
public:

    STM32TouchController() {}
 8000f52:	4c23      	ldr	r4, [pc, #140]	; (8000fe0 <_GLOBAL__sub_I_touchgfx_init+0x90>)
static STM32DMA dma;
 8000f54:	4e23      	ldr	r6, [pc, #140]	; (8000fe4 <_GLOBAL__sub_I_touchgfx_init+0x94>)
 8000f56:	4b24      	ldr	r3, [pc, #144]	; (8000fe8 <_GLOBAL__sub_I_touchgfx_init+0x98>)
static LCD16bpp display;
 8000f58:	4d24      	ldr	r5, [pc, #144]	; (8000fec <_GLOBAL__sub_I_touchgfx_init+0x9c>)
 8000f5a:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8000f5c:	4630      	mov	r0, r6
 8000f5e:	f7ff fd79 	bl	8000a54 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 8000f62:	4628      	mov	r0, r5
 8000f64:	f016 fbc2 	bl	80176ec <_ZN8touchgfx8LCD16bppC1Ev>
          lastRenderMethod(HARDWARE)
 8000f68:	4b21      	ldr	r3, [pc, #132]	; (8000ff0 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
        instance = this;
 8000f6a:	4822      	ldr	r0, [pc, #136]	; (8000ff4 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
          lastRenderMethod(HARDWARE)
 8000f6c:	60dc      	str	r4, [r3, #12]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f6e:	4c22      	ldr	r4, [pc, #136]	; (8000ff8 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
        instance = this;
 8000f70:	6003      	str	r3, [r0, #0]
          lastRenderMethod(HARDWARE)
 8000f72:	2200      	movs	r2, #0
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f74:	20f0      	movs	r0, #240	; 0xf0
          lastRenderMethod(HARDWARE)
 8000f76:	f44f 7180 	mov.w	r1, #256	; 0x100
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f7a:	8020      	strh	r0, [r4, #0]
          lastRenderMethod(HARDWARE)
 8000f7c:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f80:	4c1e      	ldr	r4, [pc, #120]	; (8000ffc <_GLOBAL__sub_I_touchgfx_init+0xac>)
          lastRenderMethod(HARDWARE)
 8000f82:	491f      	ldr	r1, [pc, #124]	; (8001000 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f84:	8020      	strh	r0, [r4, #0]
          lastRenderMethod(HARDWARE)
 8000f86:	e9c3 1219 	strd	r1, r2, [r3, #100]	; 0x64
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000f8a:	4c1e      	ldr	r4, [pc, #120]	; (8001004 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8000f8c:	861a      	strh	r2, [r3, #48]	; 0x30
          lastRenderMethod(HARDWARE)
 8000f8e:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000f92:	f44f 70a0 	mov.w	r0, #320	; 0x140
          lastRenderMethod(HARDWARE)
 8000f96:	6759      	str	r1, [r3, #116]	; 0x74
 8000f98:	2101      	movs	r1, #1
 8000f9a:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8000f9e:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8000fa2:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8000fa6:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
 8000faa:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
 8000fae:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 8000fb2:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
 8000fb6:	e9c3 2216 	strd	r2, r2, [r3, #88]	; 0x58
 8000fba:	661a      	str	r2, [r3, #96]	; 0x60
 8000fbc:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
 8000fc0:	671a      	str	r2, [r3, #112]	; 0x70
 8000fc2:	e9c3 6501 	strd	r6, r5, [r3, #4]
 8000fc6:	f883 1078 	strb.w	r1, [r3, #120]	; 0x78
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000fca:	8020      	strh	r0, [r4, #0]
 8000fcc:	4c0e      	ldr	r4, [pc, #56]	; (8001008 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8000fce:	f883 1034 	strb.w	r1, [r3, #52]	; 0x34
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000fd2:	8020      	strh	r0, [r4, #0]
        DISPLAY_ROTATION = rotate0;
 8000fd4:	480d      	ldr	r0, [pc, #52]	; (800100c <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 8000fd6:	7002      	strb	r2, [r0, #0]
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 8000fd8:	4a0d      	ldr	r2, [pc, #52]	; (8001010 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 8000fda:	601a      	str	r2, [r3, #0]
}
 8000fdc:	bd70      	pop	{r4, r5, r6, pc}
 8000fde:	bf00      	nop
 8000fe0:	20002ab0 	.word	0x20002ab0
 8000fe4:	20002ab4 	.word	0x20002ab4
 8000fe8:	08021ad8 	.word	0x08021ad8
 8000fec:	200038d4 	.word	0x200038d4
 8000ff0:	20003854 	.word	0x20003854
 8000ff4:	200155b4 	.word	0x200155b4
 8000ff8:	200155a8 	.word	0x200155a8
 8000ffc:	200155ae 	.word	0x200155ae
 8001000:	01000001 	.word	0x01000001
 8001004:	200155aa 	.word	0x200155aa
 8001008:	200155b0 	.word	0x200155b0
 800100c:	200155ac 	.word	0x200155ac
 8001010:	08021c64 	.word	0x08021c64

08001014 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 8001014:	4801      	ldr	r0, [pc, #4]	; (800101c <_GLOBAL__sub_D_touchgfx_init+0x8>)
 8001016:	f7ff bcf9 	b.w	8000a0c <_ZN8STM32DMAD1Ev>
 800101a:	bf00      	nop
 800101c:	20002ab4 	.word	0x20002ab4

08001020 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001020:	4b03      	ldr	r3, [pc, #12]	; (8001030 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
 8001022:	2290      	movs	r2, #144	; 0x90
 8001024:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
 8001028:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 800102c:	4770      	bx	lr
 800102e:	bf00      	nop
 8001030:	e000e100 	.word	0xe000e100

08001034 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8001034:	4a09      	ldr	r2, [pc, #36]	; (800105c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 8001036:	490a      	ldr	r1, [pc, #40]	; (8001060 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 8001038:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 800103a:	480a      	ldr	r0, [pc, #40]	; (8001064 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 800103c:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8001040:	3b01      	subs	r3, #1
 8001042:	b29b      	uxth	r3, r3
 8001044:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8001046:	6911      	ldr	r1, [r2, #16]
 8001048:	f3c1 010a 	ubfx	r1, r1, #0, #11
 800104c:	3901      	subs	r1, #1
 800104e:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 8001050:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 8001052:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8001054:	f043 0301 	orr.w	r3, r3, #1
 8001058:	6353      	str	r3, [r2, #52]	; 0x34
}
 800105a:	4770      	bx	lr
 800105c:	40016800 	.word	0x40016800
 8001060:	20003950 	.word	0x20003950
 8001064:	2000394e 	.word	0x2000394e

08001068 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 8001068:	4b01      	ldr	r3, [pc, #4]	; (8001070 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 800106a:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
}
 800106e:	4770      	bx	lr
 8001070:	40016800 	.word	0x40016800

08001074 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001074:	4b02      	ldr	r3, [pc, #8]	; (8001080 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001076:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001078:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 800107c:	625a      	str	r2, [r3, #36]	; 0x24
}
 800107e:	4770      	bx	lr
 8001080:	40016800 	.word	0x40016800

08001084 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8001084:	b570      	push	{r4, r5, r6, lr}
 8001086:	4604      	mov	r4, r0
    HAL::initialize();
 8001088:	f009 ffdd 	bl	800b046 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 800108c:	6823      	ldr	r3, [r4, #0]
 800108e:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 8001090:	f010 f806 	bl	80110a0 <_ZN8touchgfx11Application11getInstanceEv>
 8001094:	4601      	mov	r1, r0
 8001096:	4620      	mov	r0, r4
 8001098:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 800109a:	6823      	ldr	r3, [r4, #0]
 800109c:	4a05      	ldr	r2, [pc, #20]	; (80010b4 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 800109e:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 80010a2:	4620      	mov	r0, r4
 80010a4:	46ac      	mov	ip, r5
 80010a6:	2300      	movs	r3, #0
}
 80010a8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 80010ac:	f5a2 3116 	sub.w	r1, r2, #153600	; 0x25800
 80010b0:	4760      	bx	ip
 80010b2:	bf00      	nop
 80010b4:	d0025800 	.word	0xd0025800

080010b8 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 80010b8:	f009 bfac 	b.w	800b014 <_ZN8touchgfx3HAL10beginFrameEv>

080010bc <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    if (frameBufferUpdatedThisFrame)
 80010bc:	f890 304b 	ldrb.w	r3, [r0, #75]	; 0x4b
 80010c0:	b113      	cbz	r3, 80010c8 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0xc>
        refreshRequested = true;
 80010c2:	4b02      	ldr	r3, [pc, #8]	; (80010cc <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x10>)
 80010c4:	2201      	movs	r2, #1
 80010c6:	701a      	strb	r2, [r3, #0]
    HAL::endFrame();
 80010c8:	f009 bfb0 	b.w	800b02c <_ZN8touchgfx3HAL8endFrameEv>
 80010cc:	2000394c 	.word	0x2000394c

080010d0 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 80010d0:	f009 bf6a 	b.w	800afa8 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

080010d4 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 80010d4:	f00a b8c3 	b.w	800b25e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

080010d8 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80010d8:	4b03      	ldr	r3, [pc, #12]	; (80010e8 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
 80010da:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80010de:	609a      	str	r2, [r3, #8]
 80010e0:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 80010e4:	609a      	str	r2, [r3, #8]
}
 80010e6:	4770      	bx	lr
 80010e8:	e000e100 	.word	0xe000e100

080010ec <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80010ec:	4b08      	ldr	r3, [pc, #32]	; (8001110 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
 80010ee:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80010f2:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80010f6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80010fa:	f3bf 8f6f 	isb	sy
 80010fe:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8001102:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8001106:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800110a:	f3bf 8f6f 	isb	sy
}
 800110e:	4770      	bx	lr
 8001110:	e000e100 	.word	0xe000e100

08001114 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 8001114:	b510      	push	{r4, lr}
        return instance;
 8001116:	4c14      	ldr	r4, [pc, #80]	; (8001168 <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 8001118:	6823      	ldr	r3, [r4, #0]
 800111a:	b323      	cbz	r3, 8001166 <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 800111c:	4b13      	ldr	r3, [pc, #76]	; (800116c <HAL_LTDC_LineEventCallback+0x58>)
 800111e:	4a14      	ldr	r2, [pc, #80]	; (8001170 <HAL_LTDC_LineEventCallback+0x5c>)
 8001120:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001122:	8811      	ldrh	r1, [r2, #0]
 8001124:	428b      	cmp	r3, r1
 8001126:	d113      	bne.n	8001150 <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 8001128:	4b12      	ldr	r3, [pc, #72]	; (8001174 <HAL_LTDC_LineEventCallback+0x60>)
 800112a:	8819      	ldrh	r1, [r3, #0]
 800112c:	f006 f860 	bl	80071f0 <HAL_LTDC_ProgramLineEvent>
 8001130:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 8001132:	f892 3066 	ldrb.w	r3, [r2, #102]	; 0x66
 8001136:	3301      	adds	r3, #1
 8001138:	f882 3066 	strb.w	r3, [r2, #102]	; 0x66
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 800113c:	f7ff fc14 	bl	8000968 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 8001140:	6820      	ldr	r0, [r4, #0]
 8001142:	f00a fcb7 	bl	800bab4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8001146:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 800114a:	2000      	movs	r0, #0
 800114c:	f7ff baf8 	b.w	8000740 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 8001150:	f006 f84e 	bl	80071f0 <HAL_LTDC_ProgramLineEvent>
        return instance;
 8001154:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 8001156:	6803      	ldr	r3, [r0, #0]
 8001158:	6a1b      	ldr	r3, [r3, #32]
 800115a:	4798      	blx	r3
    }
 800115c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8001160:	2000      	movs	r0, #0
 8001162:	f7ff baee 	b.w	8000742 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 8001166:	bd10      	pop	{r4, pc}
 8001168:	200155b4 	.word	0x200155b4
 800116c:	40016800 	.word	0x40016800
 8001170:	20003950 	.word	0x20003950
 8001174:	2000394e 	.word	0x2000394e

08001178 <SPI5_Write>:
/**
  * @brief  Writes a byte to device.
  * @param  Value: value to be written
  */
static void SPI5_Write(uint16_t Value)
{
 8001178:	b507      	push	{r0, r1, r2, lr}
  HAL_StatusTypeDef status = HAL_OK;
  
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 800117a:	4b06      	ldr	r3, [pc, #24]	; (8001194 <SPI5_Write+0x1c>)
{
 800117c:	f8ad 0006 	strh.w	r0, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001180:	681b      	ldr	r3, [r3, #0]
 8001182:	4805      	ldr	r0, [pc, #20]	; (8001198 <SPI5_Write+0x20>)
 8001184:	2201      	movs	r2, #1
 8001186:	f10d 0106 	add.w	r1, sp, #6
 800118a:	f006 fd42 	bl	8007c12 <HAL_SPI_Transmit>
  if(status != HAL_OK)
  {
    /* Re-Initialize the BUS */
    SPI5_Error();
  }
}
 800118e:	b003      	add	sp, #12
 8001190:	f85d fb04 	ldr.w	pc, [sp], #4
 8001194:	20000010 	.word	0x20000010
 8001198:	20003b7c 	.word	0x20003b7c

0800119c <CountAvgFrom60sec>:
			result+=ladowarka.PomiaryCoSec[i];
 800119c:	4910      	ldr	r1, [pc, #64]	; (80011e0 <CountAvgFrom60sec+0x44>)
float CountAvgFrom60sec(){
 800119e:	b082      	sub	sp, #8
 80011a0:	2300      	movs	r3, #0
			result+=ladowarka.PomiaryCoSec[i];
 80011a2:	f203 225e 	addw	r2, r3, #606	; 0x25e
 80011a6:	eb01 0282 	add.w	r2, r1, r2, lsl #2
 80011aa:	ed92 7a00 	vldr	s14, [r2]
 80011ae:	eddd 7a01 	vldr	s15, [sp, #4]
		for (uint8_t i=0;i<60;i++)
 80011b2:	3301      	adds	r3, #1
			result+=ladowarka.PomiaryCoSec[i];
 80011b4:	ee77 7a87 	vadd.f32	s15, s15, s14
		for (uint8_t i=0;i<60;i++)
 80011b8:	2b3c      	cmp	r3, #60	; 0x3c
			result+=ladowarka.PomiaryCoSec[i];
 80011ba:	edcd 7a01 	vstr	s15, [sp, #4]
		for (uint8_t i=0;i<60;i++)
 80011be:	d1f0      	bne.n	80011a2 <CountAvgFrom60sec+0x6>
		ladowarka.SredniaZOstatniejMin=result/60;
 80011c0:	eddd 6a01 	vldr	s13, [sp, #4]
 80011c4:	eddf 7a07 	vldr	s15, [pc, #28]	; 80011e4 <CountAvgFrom60sec+0x48>
 80011c8:	4b07      	ldr	r3, [pc, #28]	; (80011e8 <CountAvgFrom60sec+0x4c>)
 80011ca:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 80011ce:	ed83 7a00 	vstr	s14, [r3]
	return result/60;
 80011d2:	ed9d 0a01 	vldr	s0, [sp, #4]
}
 80011d6:	ee80 0a27 	vdiv.f32	s0, s0, s15
 80011da:	b002      	add	sp, #8
 80011dc:	4770      	bx	lr
 80011de:	bf00      	nop
 80011e0:	20003c14 	.word	0x20003c14
 80011e4:	42700000 	.word	0x42700000
 80011e8:	20004698 	.word	0x20004698

080011ec <ZadanieDwa>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_ZadanieDwa */
__weak void ZadanieDwa(void *argument)
{
 80011ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	  static volatile uint32_t value=0; //actual value of adc measurement on battery
	  static volatile uint32_t value2=0; //actual value of adc measurement on battery  + resistor.

	  static int sec0to59=0;

		if(ladowarka.Minelo100ms){ //jesli zostalo wykryte przerwanie z liniczka7
 80011f0:	4c6d      	ldr	r4, [pc, #436]	; (80013a8 <ZadanieDwa+0x1bc>)
			ladowarka.Minelo100ms=0; //kasuj flage

					//pomiar napiecia baterii
					HAL_ADC_Start(&hadc1);
 80011f2:	4d6e      	ldr	r5, [pc, #440]	; (80013ac <ZadanieDwa+0x1c0>)
		if(ladowarka.Minelo100ms){ //jesli zostalo wykryte przerwanie z liniczka7
 80011f4:	f8d4 3a6c 	ldr.w	r3, [r4, #2668]	; 0xa6c
 80011f8:	2b00      	cmp	r3, #0
 80011fa:	f000 80a1 	beq.w	8001340 <ZadanieDwa+0x154>
			ladowarka.Minelo100ms=0; //kasuj flage
 80011fe:	2300      	movs	r3, #0
					HAL_ADC_Start(&hadc1);
 8001200:	4628      	mov	r0, r5
			ladowarka.Minelo100ms=0; //kasuj flage
 8001202:	f8c4 3a6c 	str.w	r3, [r4, #2668]	; 0xa6c
					value += HAL_ADC_GetValue(&hadc1);
 8001206:	4f6a      	ldr	r7, [pc, #424]	; (80013b0 <ZadanieDwa+0x1c4>)

					//pomiar napiecia na baterii i rezystorze
					HAL_ADC_Start(&hadc2);
					value2 += HAL_ADC_GetValue(&hadc2);
 8001208:	4e6a      	ldr	r6, [pc, #424]	; (80013b4 <ZadanieDwa+0x1c8>)
					HAL_ADC_Start(&hadc1);
 800120a:	f004 fe45 	bl	8005e98 <HAL_ADC_Start>
					value += HAL_ADC_GetValue(&hadc1);
 800120e:	4628      	mov	r0, r5
 8001210:	f004 feb6 	bl	8005f80 <HAL_ADC_GetValue>
 8001214:	683b      	ldr	r3, [r7, #0]
 8001216:	4418      	add	r0, r3
 8001218:	6038      	str	r0, [r7, #0]
					HAL_ADC_Start(&hadc2);
 800121a:	4867      	ldr	r0, [pc, #412]	; (80013b8 <ZadanieDwa+0x1cc>)
 800121c:	f004 fe3c 	bl	8005e98 <HAL_ADC_Start>
					value2 += HAL_ADC_GetValue(&hadc2);
 8001220:	4865      	ldr	r0, [pc, #404]	; (80013b8 <ZadanieDwa+0x1cc>)
 8001222:	f004 fead 	bl	8005f80 <HAL_ADC_GetValue>
 8001226:	6833      	ldr	r3, [r6, #0]
 8001228:	4418      	add	r0, r3
 800122a:	6030      	str	r0, [r6, #0]
					liczbaPomiarow++;
 800122c:	4863      	ldr	r0, [pc, #396]	; (80013bc <ZadanieDwa+0x1d0>)
 800122e:	6802      	ldr	r2, [r0, #0]
 8001230:	210a      	movs	r1, #10
 8001232:	3201      	adds	r2, #1
 8001234:	6002      	str	r2, [r0, #0]
 8001236:	fb92 f3f1 	sdiv	r3, r2, r1
 800123a:	fb01 2213 	mls	r2, r1, r3, r2

					/****** jesli minela sekunda ->10tickow co 100ms********/

					if(liczbaPomiarow%10==0){ //jesli minela sekunda
 800123e:	2a00      	cmp	r2, #0
 8001240:	d17e      	bne.n	8001340 <ZadanieDwa+0x154>
						ladowarka.BatteryVoltage=(value/10) * Vdd / 4096.0f; // napiecie na baterii
 8001242:	683a      	ldr	r2, [r7, #0]
 8001244:	fbb2 f3f1 	udiv	r3, r2, r1
 8001248:	ee07 3a10 	vmov	s14, r3
 800124c:	ed9f 6a5c 	vldr	s12, [pc, #368]	; 80013c0 <ZadanieDwa+0x1d4>
 8001250:	eddf 6a5c 	vldr	s13, [pc, #368]	; 80013c4 <ZadanieDwa+0x1d8>
 8001254:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8001258:	ee27 7a06 	vmul.f32	s14, s14, s12
 800125c:	ee27 7a26 	vmul.f32	s14, s14, s13
 8001260:	ed84 7a00 	vstr	s14, [r4]
						ladowarka.ChargingCurrent=(value2/10) * Vdd / 4096.0f; // napiecie na baterii i rezystorze,
 8001264:	6833      	ldr	r3, [r6, #0]
 8001266:	fbb3 f3f1 	udiv	r3, r3, r1
 800126a:	ee07 3a90 	vmov	s15, r3
 800126e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001272:	4b55      	ldr	r3, [pc, #340]	; (80013c8 <ZadanieDwa+0x1dc>)
 8001274:	ee67 7a86 	vmul.f32	s15, s15, s12
 8001278:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800127c:	edc3 7a00 	vstr	s15, [r3]
						ladowarka.ChargingCurrent=(ladowarka.ChargingCurrent-ladowarka.BatteryVoltage)*1000; //	Jako ze rezystor jest 1Ohm, to prad jest rowny napiecu. wynik w [mA]
 8001280:	edd3 7a00 	vldr	s15, [r3]
 8001284:	ed94 7a00 	vldr	s14, [r4]
 8001288:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800128c:	ed9f 7a4f 	vldr	s14, [pc, #316]	; 80013cc <ZadanieDwa+0x1e0>
 8001290:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001294:	edc3 7a00 	vstr	s15, [r3]
						if (ladowarka.ChargingCurrent <=0 ) ladowarka.ChargingCurrent=0;
 8001298:	edd3 7a00 	vldr	s15, [r3]
 800129c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80012a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80012a4:	bf9c      	itt	ls
 80012a6:	2200      	movls	r2, #0
 80012a8:	601a      	strls	r2, [r3, #0]

						// jesli zaczeto ladwoac
						if (ladowarka.ChargeStarted ){ //jesli zaczeto ladwowac
 80012aa:	6923      	ldr	r3, [r4, #16]
 80012ac:	2b00      	cmp	r3, #0
 80012ae:	d043      	beq.n	8001338 <ZadanieDwa+0x14c>
							if (ladowarka.CzsasLadowaniaWSec<1) {ladowarka.NapiecieBaterii[0]=ladowarka.BatteryVoltage; ladowarka.SredniaZOstatniejMin = ladowarka.BatteryVoltage; ladowarka.narysujPunktNaWykresieMin=1; }//dla 0 pomiaru dodaj od razy do tablicy oraz wyplotuj na obu wykreasch.
 80012b0:	f8d4 3a78 	ldr.w	r3, [r4, #2680]	; 0xa78
 80012b4:	2b00      	cmp	r3, #0
 80012b6:	dc07      	bgt.n	80012c8 <ZadanieDwa+0xdc>
 80012b8:	6823      	ldr	r3, [r4, #0]
 80012ba:	61a3      	str	r3, [r4, #24]
 80012bc:	4b44      	ldr	r3, [pc, #272]	; (80013d0 <ZadanieDwa+0x1e4>)
 80012be:	6822      	ldr	r2, [r4, #0]
 80012c0:	601a      	str	r2, [r3, #0]
 80012c2:	2301      	movs	r3, #1
 80012c4:	f8c4 3a74 	str.w	r3, [r4, #2676]	; 0xa74


							if (ladowarka.BatteryVoltage>ladowarka.MaxBatteryVoltage) ladowarka.MaxBatteryVoltage=ladowarka.BatteryVoltage; //uaktualnij max wartosc.
 80012c8:	ed94 7a00 	vldr	s14, [r4]
 80012cc:	edd4 7a01 	vldr	s15, [r4, #4]
							ladowarka.CzsasLadowaniaWSec++; //jesli zaczal sie proces ladowana ziwekszja wartosc czas ladowania w sec
							ladowarka.narysujPunktNaWykresie=1; //zezwol na narysowanie danej na wykresie


							/********* dodawanie co 1 sek wartosc pomiaru do tabeli********/
							ladowarka.PomiaryCoSec[sec0to59++]=ladowarka.BatteryVoltage;
 80012d0:	f8df 8104 	ldr.w	r8, [pc, #260]	; 80013d8 <ZadanieDwa+0x1ec>
							if (ladowarka.BatteryVoltage>ladowarka.MaxBatteryVoltage) ladowarka.MaxBatteryVoltage=ladowarka.BatteryVoltage; //uaktualnij max wartosc.
 80012d4:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80012d8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80012dc:	bfc4      	itt	gt
 80012de:	6823      	ldrgt	r3, [r4, #0]
 80012e0:	6063      	strgt	r3, [r4, #4]
							ladowarka.CzsasLadowaniaWSec++; //jesli zaczal sie proces ladowana ziwekszja wartosc czas ladowania w sec
 80012e2:	f8d4 3a78 	ldr.w	r3, [r4, #2680]	; 0xa78
 80012e6:	3301      	adds	r3, #1
 80012e8:	f8c4 3a78 	str.w	r3, [r4, #2680]	; 0xa78
							ladowarka.narysujPunktNaWykresie=1; //zezwol na narysowanie danej na wykresie
 80012ec:	2301      	movs	r3, #1
 80012ee:	f8c4 3a70 	str.w	r3, [r4, #2672]	; 0xa70
							ladowarka.PomiaryCoSec[sec0to59++]=ladowarka.BatteryVoltage;
 80012f2:	f8d8 3000 	ldr.w	r3, [r8]
 80012f6:	6821      	ldr	r1, [r4, #0]
 80012f8:	1c5a      	adds	r2, r3, #1
 80012fa:	f203 235e 	addw	r3, r3, #606	; 0x25e
 80012fe:	eb04 0383 	add.w	r3, r4, r3, lsl #2
							if (sec0to59>59) {	//jesli mamy 10 elementow w tabeli (minelo 10sec) usrednij i dodaj wartosc do NapiecieBaterii
 8001302:	2a3b      	cmp	r2, #59	; 0x3b
							ladowarka.PomiaryCoSec[sec0to59++]=ladowarka.BatteryVoltage;
 8001304:	f8c8 2000 	str.w	r2, [r8]
 8001308:	6019      	str	r1, [r3, #0]
							if (sec0to59>59) {	//jesli mamy 10 elementow w tabeli (minelo 10sec) usrednij i dodaj wartosc do NapiecieBaterii
 800130a:	dd15      	ble.n	8001338 <ZadanieDwa+0x14c>
								//jesli ladujemy to dodaj wartosc do tablicy
								CountAvgFrom60sec();
 800130c:	f7ff ff46 	bl	800119c <CountAvgFrom60sec>
								if (ladowarka.ChargingCompleted==0){
 8001310:	f8d4 3a80 	ldr.w	r3, [r4, #2688]	; 0xa80
 8001314:	b953      	cbnz	r3, 800132c <ZadanieDwa+0x140>
									ladowarka.NapiecieBaterii[ladowarka.CzsasLadowaniaWSec/60]=ladowarka.SredniaZOstatniejMin; // TO DO srednia z 10 pomiarow
 8001316:	f8d4 3a78 	ldr.w	r3, [r4, #2680]	; 0xa78
 800131a:	223c      	movs	r2, #60	; 0x3c
 800131c:	fb93 f3f2 	sdiv	r3, r3, r2
 8001320:	4a2b      	ldr	r2, [pc, #172]	; (80013d0 <ZadanieDwa+0x1e4>)
 8001322:	3306      	adds	r3, #6
 8001324:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8001328:	6812      	ldr	r2, [r2, #0]
 800132a:	601a      	str	r2, [r3, #0]
								}

								sec0to59=0;
 800132c:	2300      	movs	r3, #0
 800132e:	f8c8 3000 	str.w	r3, [r8]

								ladowarka.narysujPunktNaWykresieMin=1;//zezwol na narysowanie na wykresie minut.
 8001332:	2301      	movs	r3, #1
 8001334:	f8c4 3a74 	str.w	r3, [r4, #2676]	; 0xa74
							}

						}


						liczbaPomiarow=0; //po 1 sek ustaw to na 0
 8001338:	2300      	movs	r3, #0
						value=0; //resetuj pomiar napiecia na baterii
 800133a:	603b      	str	r3, [r7, #0]
						liczbaPomiarow=0; //po 1 sek ustaw to na 0
 800133c:	6003      	str	r3, [r0, #0]
						value2=0; //resetuj  napiecie na baterii i rezystorze,
 800133e:	6033      	str	r3, [r6, #0]


					}

					/*************** generowanie napiecia ***************************/
					if(ladowarka.ChargeStarted==1 && ladowarka.UstawioneNapiecieNaopAmpie==0 ) { //jesli kliknieto przycik na GUI START   i nie ustawiono jeszce napiecia na op ampie
 8001340:	6923      	ldr	r3, [r4, #16]
 8001342:	2b01      	cmp	r3, #1
 8001344:	d119      	bne.n	800137a <ZadanieDwa+0x18e>
 8001346:	6963      	ldr	r3, [r4, #20]
 8001348:	b9bb      	cbnz	r3, 800137a <ZadanieDwa+0x18e>
						/********* ustawienie poprawnego napiecia************/
						int napiecie=4095;//domyslnie 0
						if (ladowarka.LoadingCurrent==400) napiecie=3100;
 800134a:	68a3      	ldr	r3, [r4, #8]
 800134c:	f5b3 7fc8 	cmp.w	r3, #400	; 0x190
 8001350:	d021      	beq.n	8001396 <ZadanieDwa+0x1aa>
						else if (ladowarka.LoadingCurrent==300) napiecie=3250;
 8001352:	68a3      	ldr	r3, [r4, #8]
 8001354:	f5b3 7f96 	cmp.w	r3, #300	; 0x12c
 8001358:	d020      	beq.n	800139c <ZadanieDwa+0x1b0>
						else if (ladowarka.LoadingCurrent==200) napiecie=3530;
 800135a:	68a3      	ldr	r3, [r4, #8]
 800135c:	2bc8      	cmp	r3, #200	; 0xc8
 800135e:	d020      	beq.n	80013a2 <ZadanieDwa+0x1b6>
						else if (ladowarka.LoadingCurrent==100) napiecie=3700;
 8001360:	68a1      	ldr	r1, [r4, #8]
 8001362:	f640 73ff 	movw	r3, #4095	; 0xfff
 8001366:	f640 6274 	movw	r2, #3700	; 0xe74
 800136a:	2964      	cmp	r1, #100	; 0x64
 800136c:	bf08      	it	eq
 800136e:	4613      	moveq	r3, r2
							HAL_DAC_SetValue(&hdac, DAC_CHANNEL_2, DAC_ALIGN_12B_R, napiecie);  //ustaw poprawne napiece tutaj (3V)
 8001370:	4818      	ldr	r0, [pc, #96]	; (80013d4 <ZadanieDwa+0x1e8>)
 8001372:	2200      	movs	r2, #0
 8001374:	2110      	movs	r1, #16
 8001376:	f004 ff66 	bl	8006246 <HAL_DAC_SetValue>
							//ladowarka.UstawioneNapiecieNaopAmpie=1;
					}

					/************** sprawdzenie czy pomiar nie ma sie juz zakonczyc*****************/
					if (ladowarka.ChargingCompleted){
 800137a:	f8d4 3a80 	ldr.w	r3, [r4, #2688]	; 0xa80
 800137e:	b133      	cbz	r3, 800138e <ZadanieDwa+0x1a2>
						HAL_DAC_SetValue(&hdac, DAC_CHANNEL_2, DAC_ALIGN_12B_R, CurrentAfterCharging);  //ustaw max napiecie zeby nie ladowac.
 8001380:	4814      	ldr	r0, [pc, #80]	; (80013d4 <ZadanieDwa+0x1e8>)
 8001382:	f640 733c 	movw	r3, #3900	; 0xf3c
 8001386:	2200      	movs	r2, #0
 8001388:	2110      	movs	r1, #16
 800138a:	f004 ff5c 	bl	8006246 <HAL_DAC_SetValue>
					}



    osDelay(1); //to chyba ma zostac?
 800138e:	2001      	movs	r0, #1
 8001390:	f007 f926 	bl	80085e0 <osDelay>
  {
 8001394:	e72e      	b.n	80011f4 <ZadanieDwa+0x8>
						if (ladowarka.LoadingCurrent==400) napiecie=3100;
 8001396:	f640 431c 	movw	r3, #3100	; 0xc1c
 800139a:	e7e9      	b.n	8001370 <ZadanieDwa+0x184>
						else if (ladowarka.LoadingCurrent==300) napiecie=3250;
 800139c:	f640 43b2 	movw	r3, #3250	; 0xcb2
 80013a0:	e7e6      	b.n	8001370 <ZadanieDwa+0x184>
						else if (ladowarka.LoadingCurrent==200) napiecie=3530;
 80013a2:	f640 53ca 	movw	r3, #3530	; 0xdca
 80013a6:	e7e3      	b.n	8001370 <ZadanieDwa+0x184>
 80013a8:	20003c14 	.word	0x20003c14
 80013ac:	20003960 	.word	0x20003960
 80013b0:	200046a4 	.word	0x200046a4
 80013b4:	200046a8 	.word	0x200046a8
 80013b8:	200039a8 	.word	0x200039a8
 80013bc:	2000469c 	.word	0x2000469c
 80013c0:	404851ec 	.word	0x404851ec
 80013c4:	39800000 	.word	0x39800000
 80013c8:	20004690 	.word	0x20004690
 80013cc:	447a0000 	.word	0x447a0000
 80013d0:	20004698 	.word	0x20004698
 80013d4:	200039f8 	.word	0x200039f8
 80013d8:	200046a0 	.word	0x200046a0

080013dc <SystemClock_Config>:
{
 80013dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80013de:	b0a1      	sub	sp, #132	; 0x84
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80013e0:	2210      	movs	r2, #16
 80013e2:	2100      	movs	r1, #0
 80013e4:	a80a      	add	r0, sp, #40	; 0x28
 80013e6:	f01f fbb1 	bl	8020b4c <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80013ea:	2214      	movs	r2, #20
 80013ec:	2100      	movs	r1, #0
 80013ee:	a803      	add	r0, sp, #12
 80013f0:	f01f fbac 	bl	8020b4c <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 80013f4:	2100      	movs	r1, #0
 80013f6:	2230      	movs	r2, #48	; 0x30
 80013f8:	a814      	add	r0, sp, #80	; 0x50
 80013fa:	f01f fba7 	bl	8020b4c <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 80013fe:	2400      	movs	r4, #0
 8001400:	4b22      	ldr	r3, [pc, #136]	; (800148c <SystemClock_Config+0xb0>)
 8001402:	9401      	str	r4, [sp, #4]
 8001404:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001406:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800140a:	641a      	str	r2, [r3, #64]	; 0x40
 800140c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800140e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001412:	9301      	str	r3, [sp, #4]
 8001414:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001416:	4b1e      	ldr	r3, [pc, #120]	; (8001490 <SystemClock_Config+0xb4>)
 8001418:	9402      	str	r4, [sp, #8]
 800141a:	681a      	ldr	r2, [r3, #0]
 800141c:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 8001420:	601a      	str	r2, [r3, #0]
 8001422:	681b      	ldr	r3, [r3, #0]
 8001424:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8001428:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 800142a:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 800142c:	9b02      	ldr	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 800142e:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8001432:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001436:	2502      	movs	r5, #2
 8001438:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 800143c:	e9cd 530e 	strd	r5, r3, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLN = 336;
 8001440:	2708      	movs	r7, #8
 8001442:	f44f 73a8 	mov.w	r3, #336	; 0x150
  RCC_OscInitStruct.PLL.PLLQ = 4;
 8001446:	2604      	movs	r6, #4
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001448:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLN = 336;
 800144a:	e9cd 7310 	strd	r7, r3, [sp, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 800144e:	9512      	str	r5, [sp, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLQ = 4;
 8001450:	9613      	str	r6, [sp, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001452:	f005 feeb 	bl	800722c <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001456:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001458:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 800145c:	f44f 51a0 	mov.w	r1, #5120	; 0x1400
 8001460:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001464:	e9cd 1306 	strd	r1, r3, [sp, #24]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001468:	a803      	add	r0, sp, #12
 800146a:	2105      	movs	r1, #5
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 800146c:	9405      	str	r4, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 800146e:	f006 f8b5 	bl	80075dc <HAL_RCC_ClockConfig>
  PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 8001472:	23c0      	movs	r3, #192	; 0xc0
 8001474:	9318      	str	r3, [sp, #96]	; 0x60
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001476:	a814      	add	r0, sp, #80	; 0x50
  PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8001478:	f44f 3300 	mov.w	r3, #131072	; 0x20000
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 800147c:	9714      	str	r7, [sp, #80]	; 0x50
  PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 800147e:	961a      	str	r6, [sp, #104]	; 0x68
  PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8001480:	931d      	str	r3, [sp, #116]	; 0x74
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001482:	f006 f985 	bl	8007790 <HAL_RCCEx_PeriphCLKConfig>
}
 8001486:	b021      	add	sp, #132	; 0x84
 8001488:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800148a:	bf00      	nop
 800148c:	40023800 	.word	0x40023800
 8001490:	40007000 	.word	0x40007000

08001494 <main>:
{
 8001494:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 8001498:	b09b      	sub	sp, #108	; 0x6c
  HAL_Init();
 800149a:	f004 fc17 	bl	8005ccc <HAL_Init>
  SystemClock_Config();
 800149e:	f7ff ff9d 	bl	80013dc <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80014a2:	2214      	movs	r2, #20
 80014a4:	2100      	movs	r1, #0
 80014a6:	a80d      	add	r0, sp, #52	; 0x34
  __HAL_RCC_GPIOF_CLK_ENABLE();
 80014a8:	2400      	movs	r4, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80014aa:	f01f fb4f 	bl	8020b4c <memset>
  __HAL_RCC_GPIOF_CLK_ENABLE();
 80014ae:	4bc6      	ldr	r3, [pc, #792]	; (80017c8 <main+0x334>)
 80014b0:	9400      	str	r4, [sp, #0]
 80014b2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80014b4:	48c5      	ldr	r0, [pc, #788]	; (80017cc <main+0x338>)
  hi2c3.Instance = I2C3;
 80014b6:	4ec6      	ldr	r6, [pc, #792]	; (80017d0 <main+0x33c>)
  __HAL_RCC_GPIOF_CLK_ENABLE();
 80014b8:	f042 0220 	orr.w	r2, r2, #32
 80014bc:	631a      	str	r2, [r3, #48]	; 0x30
 80014be:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014c0:	f002 0220 	and.w	r2, r2, #32
 80014c4:	9200      	str	r2, [sp, #0]
 80014c6:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 80014c8:	9401      	str	r4, [sp, #4]
 80014ca:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014cc:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 80014d0:	631a      	str	r2, [r3, #48]	; 0x30
 80014d2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014d4:	f002 0280 	and.w	r2, r2, #128	; 0x80
 80014d8:	9201      	str	r2, [sp, #4]
 80014da:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80014dc:	9402      	str	r4, [sp, #8]
 80014de:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014e0:	f042 0204 	orr.w	r2, r2, #4
 80014e4:	631a      	str	r2, [r3, #48]	; 0x30
 80014e6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014e8:	f002 0204 	and.w	r2, r2, #4
 80014ec:	9202      	str	r2, [sp, #8]
 80014ee:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80014f0:	9403      	str	r4, [sp, #12]
 80014f2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014f4:	f042 0201 	orr.w	r2, r2, #1
 80014f8:	631a      	str	r2, [r3, #48]	; 0x30
 80014fa:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014fc:	f002 0201 	and.w	r2, r2, #1
 8001500:	9203      	str	r2, [sp, #12]
 8001502:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001504:	9404      	str	r4, [sp, #16]
 8001506:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001508:	f042 0202 	orr.w	r2, r2, #2
 800150c:	631a      	str	r2, [r3, #48]	; 0x30
 800150e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001510:	f002 0202 	and.w	r2, r2, #2
 8001514:	9204      	str	r2, [sp, #16]
 8001516:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8001518:	9405      	str	r4, [sp, #20]
 800151a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800151c:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8001520:	631a      	str	r2, [r3, #48]	; 0x30
 8001522:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001524:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8001528:	9205      	str	r2, [sp, #20]
 800152a:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOE_CLK_ENABLE();
 800152c:	9406      	str	r4, [sp, #24]
 800152e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001530:	f042 0210 	orr.w	r2, r2, #16
 8001534:	631a      	str	r2, [r3, #48]	; 0x30
 8001536:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001538:	f002 0210 	and.w	r2, r2, #16
 800153c:	9206      	str	r2, [sp, #24]
 800153e:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001540:	9407      	str	r4, [sp, #28]
 8001542:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001544:	f042 0208 	orr.w	r2, r2, #8
 8001548:	631a      	str	r2, [r3, #48]	; 0x30
 800154a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800154c:	f003 0308 	and.w	r3, r3, #8
 8001550:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001552:	4622      	mov	r2, r4
 8001554:	2104      	movs	r1, #4
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001556:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001558:	f005 f86c 	bl	8006634 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_12, GPIO_PIN_RESET);
 800155c:	489d      	ldr	r0, [pc, #628]	; (80017d4 <main+0x340>)
 800155e:	4622      	mov	r2, r4
 8001560:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001564:	f005 f866 	bl	8006634 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 8001568:	4622      	mov	r2, r4
 800156a:	489b      	ldr	r0, [pc, #620]	; (80017d8 <main+0x344>)
 800156c:	f44f 5140 	mov.w	r1, #12288	; 0x3000
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001570:	2501      	movs	r5, #1
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 8001572:	f005 f85f 	bl	8006634 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001576:	2702      	movs	r7, #2
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001578:	f04f 0b04 	mov.w	fp, #4
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800157c:	4893      	ldr	r0, [pc, #588]	; (80017cc <main+0x338>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800157e:	940f      	str	r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001580:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001582:	e9cd b50d 	strd	fp, r5, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001586:	9710      	str	r7, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001588:	f004 ff6c 	bl	8006464 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12;
 800158c:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001590:	4890      	ldr	r0, [pc, #576]	; (80017d4 <main+0x340>)
 8001592:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001594:	e9cd 250d 	strd	r2, r5, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001598:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800159c:	f004 ff62 	bl	8006464 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80015a0:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 80015a2:	f44f 5240 	mov.w	r2, #12288	; 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80015a6:	488c      	ldr	r0, [pc, #560]	; (80017d8 <main+0x344>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80015a8:	e9cd 250d 	strd	r2, r5, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80015ac:	e9cd 470f 	strd	r4, r7, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80015b0:	f004 ff58 	bl	8006464 <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 80015b4:	4889      	ldr	r0, [pc, #548]	; (80017dc <main+0x348>)
 80015b6:	4a8a      	ldr	r2, [pc, #552]	; (80017e0 <main+0x34c>)
 80015b8:	6002      	str	r2, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 80015ba:	f004 fdd3 	bl	8006164 <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 80015be:	4b89      	ldr	r3, [pc, #548]	; (80017e4 <main+0x350>)
 80015c0:	4a89      	ldr	r2, [pc, #548]	; (80017e8 <main+0x354>)
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 80015c2:	6234      	str	r4, [r6, #32]
  hi2c3.Init.ClockSpeed = 100000;
 80015c4:	e9c6 3200 	strd	r3, r2, [r6]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 80015c8:	4630      	mov	r0, r6
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 80015ca:	f44f 4280 	mov.w	r2, #16384	; 0x4000
  hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 80015ce:	e9c6 2404 	strd	r2, r4, [r6, #16]
  hi2c3.Init.OwnAddress1 = 0;
 80015d2:	e9c6 4402 	strd	r4, r4, [r6, #8]
  hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 80015d6:	e9c6 4406 	strd	r4, r4, [r6, #24]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 80015da:	f005 fa0d 	bl	80069f8 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 80015de:	2110      	movs	r1, #16
 80015e0:	4630      	mov	r0, r6
 80015e2:	f005 fc49 	bl	8006e78 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 80015e6:	4621      	mov	r1, r4
 80015e8:	4630      	mov	r0, r6
 80015ea:	f005 fc64 	bl	8006eb6 <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Instance = SPI5;
 80015ee:	487f      	ldr	r0, [pc, #508]	; (80017ec <main+0x358>)
  hspi5.Init.Mode = SPI_MODE_MASTER;
 80015f0:	497f      	ldr	r1, [pc, #508]	; (80017f0 <main+0x35c>)
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 80015f2:	6284      	str	r4, [r0, #40]	; 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 80015f4:	f44f 7282 	mov.w	r2, #260	; 0x104
 80015f8:	e9c0 1200 	strd	r1, r2, [r0]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 80015fc:	f44f 7600 	mov.w	r6, #512	; 0x200
 8001600:	2218      	movs	r2, #24
 8001602:	e9c0 6206 	strd	r6, r2, [r0, #24]
  hspi5.Init.CRCPolynomial = 10;
 8001606:	220a      	movs	r2, #10
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001608:	4e7a      	ldr	r6, [pc, #488]	; (80017f4 <main+0x360>)
  hspi5.Init.CRCPolynomial = 10;
 800160a:	62c2      	str	r2, [r0, #44]	; 0x2c
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 800160c:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 8001610:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 8001614:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8001618:	f006 fabe 	bl	8007b98 <HAL_SPI_Init>
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 800161c:	4a76      	ldr	r2, [pc, #472]	; (80017f8 <main+0x364>)
  SdramTiming.LoadToActiveDelay = 2;
 800161e:	970d      	str	r7, [sp, #52]	; 0x34
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8001620:	f04f 0810 	mov.w	r8, #16
  hsdram1.Init.SDBank = FMC_SDRAM_BANK2;
 8001624:	e9c6 2500 	strd	r2, r5, [r6]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8001628:	2240      	movs	r2, #64	; 0x40
 800162a:	e9c6 8204 	strd	r8, r2, [r6, #16]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 800162e:	f44f 72c0 	mov.w	r2, #384	; 0x180
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8001632:	e9c6 2406 	strd	r2, r4, [r6, #24]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 8001636:	f44f 6200 	mov.w	r2, #2048	; 0x800
  SdramTiming.WriteRecoveryTime = 3;
 800163a:	2303      	movs	r3, #3
  SdramTiming.ExitSelfRefreshDelay = 7;
 800163c:	f04f 0a07 	mov.w	sl, #7
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 8001640:	e9c6 2408 	strd	r2, r4, [r6, #32]
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001644:	a90d      	add	r1, sp, #52	; 0x34
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8001646:	f44f 5200 	mov.w	r2, #8192	; 0x2000
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 800164a:	4630      	mov	r0, r6
  SdramTiming.RPDelay = 2;
 800164c:	e9cd 3711 	strd	r3, r7, [sp, #68]	; 0x44
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001650:	f04f 0908 	mov.w	r9, #8
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 8001654:	e9c6 4b02 	strd	r4, fp, [r6, #8]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8001658:	62b2      	str	r2, [r6, #40]	; 0x28
  SdramTiming.SelfRefreshTime = 4;
 800165a:	e9cd ab0e 	strd	sl, fp, [sp, #56]	; 0x38
  SdramTiming.RowCycleDelay = 7;
 800165e:	f8cd a040 	str.w	sl, [sp, #64]	; 0x40
  SdramTiming.RCDDelay = 2;
 8001662:	9713      	str	r7, [sp, #76]	; 0x4c
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001664:	f006 f9be 	bl	80079e4 <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001668:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800166c:	a909      	add	r1, sp, #36	; 0x24
 800166e:	4630      	mov	r0, r6
  Command->AutoRefreshNumber       = 1;
 8001670:	e9cd 950a 	strd	r9, r5, [sp, #40]	; 0x28
 __IO uint32_t tmpmrd =0;
 8001674:	9408      	str	r4, [sp, #32]
  Command->CommandMode             = FMC_SDRAM_CMD_CLK_ENABLE;
 8001676:	9509      	str	r5, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 8001678:	940c      	str	r4, [sp, #48]	; 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800167a:	f006 f9d3 	bl	8007a24 <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 800167e:	4628      	mov	r0, r5
 8001680:	f004 fb50 	bl	8005d24 <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);  
 8001684:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001688:	a909      	add	r1, sp, #36	; 0x24
 800168a:	4630      	mov	r0, r6
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 800168c:	e9cd 7909 	strd	r7, r9, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 8001690:	e9cd 540b 	strd	r5, r4, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);  
 8001694:	f006 f9c6 	bl	8007a24 <HAL_SDRAM_SendCommand>
  Command->CommandMode             = FMC_SDRAM_CMD_AUTOREFRESH_MODE;
 8001698:	2303      	movs	r3, #3
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800169a:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800169e:	a909      	add	r1, sp, #36	; 0x24
 80016a0:	4630      	mov	r0, r6
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80016a2:	e9cd 3909 	strd	r3, r9, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 80016a6:	e9cd b40b 	strd	fp, r4, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80016aa:	f006 f9bb 	bl	8007a24 <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 80016ae:	f44f 720c 	mov.w	r2, #560	; 0x230
 80016b2:	9208      	str	r2, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 80016b4:	9b08      	ldr	r3, [sp, #32]
 80016b6:	930c      	str	r3, [sp, #48]	; 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80016b8:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80016bc:	a909      	add	r1, sp, #36	; 0x24
 80016be:	4630      	mov	r0, r6
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80016c0:	e9cd b909 	strd	fp, r9, [sp, #36]	; 0x24
  Command->AutoRefreshNumber       = 1;
 80016c4:	950b      	str	r5, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80016c6:	f006 f9ad 	bl	8007a24 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT); 
 80016ca:	f240 516a 	movw	r1, #1386	; 0x56a
 80016ce:	4630      	mov	r0, r6
 80016d0:	f006 f9bf 	bl	8007a52 <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 80016d4:	2234      	movs	r2, #52	; 0x34
 80016d6:	4621      	mov	r1, r4
 80016d8:	eb0d 0002 	add.w	r0, sp, r2
 80016dc:	f01f fa36 	bl	8020b4c <memset>
  hltdc.Instance = LTDC;
 80016e0:	4e46      	ldr	r6, [pc, #280]	; (80017fc <main+0x368>)
 80016e2:	4b47      	ldr	r3, [pc, #284]	; (8001800 <main+0x36c>)
  hltdc.Init.Backcolor.Blue = 0;
 80016e4:	86b4      	strh	r4, [r6, #52]	; 0x34
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 80016e6:	e9c6 3400 	strd	r3, r4, [r6]
  hltdc.Init.HorizontalSync = 9;
 80016ea:	2309      	movs	r3, #9
  hltdc.Init.AccumulatedVBP = 3;
 80016ec:	f04f 0c1d 	mov.w	ip, #29
  hltdc.Init.VerticalSync = 1;
 80016f0:	e9c6 3505 	strd	r3, r5, [r6, #20]
  hltdc.Init.AccumulatedVBP = 3;
 80016f4:	2303      	movs	r3, #3
 80016f6:	e9c6 c307 	strd	ip, r3, [r6, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 80016fa:	f240 1e0d 	movw	lr, #269	; 0x10d
 80016fe:	f240 1343 	movw	r3, #323	; 0x143
 8001702:	e9c6 e309 	strd	lr, r3, [r6, #36]	; 0x24
  hltdc.Init.TotalHeigh = 327;
 8001706:	f240 1917 	movw	r9, #279	; 0x117
 800170a:	f240 1347 	movw	r3, #327	; 0x147
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 800170e:	4630      	mov	r0, r6
  hltdc.Init.TotalHeigh = 327;
 8001710:	e9c6 930b 	strd	r9, r3, [r6, #44]	; 0x2c
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 8001714:	e9c6 4402 	strd	r4, r4, [r6, #8]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 8001718:	6134      	str	r4, [r6, #16]
  hltdc.Init.Backcolor.Red = 0;
 800171a:	f886 4036 	strb.w	r4, [r6, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 800171e:	f005 fc6f 	bl	8007000 <HAL_LTDC_Init>
  pLayerCfg.Alpha = 255;
 8001722:	21ff      	movs	r1, #255	; 0xff
  pLayerCfg.WindowX1 = 240;
 8001724:	22f0      	movs	r2, #240	; 0xf0
  pLayerCfg.Alpha0 = 0;
 8001726:	e9cd 1412 	strd	r1, r4, [sp, #72]	; 0x48
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 800172a:	f44f 6b80 	mov.w	fp, #1024	; 0x400
 800172e:	2105      	movs	r1, #5
  pLayerCfg.WindowY1 = 320;
 8001730:	f44f 73a0 	mov.w	r3, #320	; 0x140
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8001734:	e9cd b114 	strd	fp, r1, [sp, #80]	; 0x50
  pLayerCfg.WindowY0 = 0;
 8001738:	e9cd 240e 	strd	r2, r4, [sp, #56]	; 0x38
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 800173c:	a90d      	add	r1, sp, #52	; 0x34
  pLayerCfg.ImageWidth = 240;
 800173e:	e9cd 4216 	strd	r4, r2, [sp, #88]	; 0x58
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001742:	4630      	mov	r0, r6
 8001744:	4622      	mov	r2, r4
  LcdDrv = &ili9341_drv;
 8001746:	4e2f      	ldr	r6, [pc, #188]	; (8001804 <main+0x370>)
  pLayerCfg.ImageHeight = 320;
 8001748:	9318      	str	r3, [sp, #96]	; 0x60
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 800174a:	e9cd 3710 	strd	r3, r7, [sp, #64]	; 0x40
  pLayerCfg.WindowX0 = 0;
 800174e:	940d      	str	r4, [sp, #52]	; 0x34
  pLayerCfg.Backcolor.Blue = 0;
 8001750:	f8ad 4064 	strh.w	r4, [sp, #100]	; 0x64
  pLayerCfg.Backcolor.Red = 0;
 8001754:	f88d 4066 	strb.w	r4, [sp, #102]	; 0x66
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001758:	f005 fd1d 	bl	8007196 <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 800175c:	4b2a      	ldr	r3, [pc, #168]	; (8001808 <main+0x374>)
 800175e:	6033      	str	r3, [r6, #0]
  LcdDrv->Init();
 8001760:	681b      	ldr	r3, [r3, #0]
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8001762:	f8df b0b8 	ldr.w	fp, [pc, #184]	; 800181c <main+0x388>
  hdac.Instance = DAC;
 8001766:	f8df 90b8 	ldr.w	r9, [pc, #184]	; 8001820 <main+0x38c>
  LcdDrv->Init();
 800176a:	4798      	blx	r3
  LcdDrv->DisplayOff();
 800176c:	6833      	ldr	r3, [r6, #0]
  hdma2d.Instance = DMA2D;
 800176e:	4e27      	ldr	r6, [pc, #156]	; (800180c <main+0x378>)
  LcdDrv->DisplayOff();
 8001770:	68db      	ldr	r3, [r3, #12]
 8001772:	4798      	blx	r3
  hdma2d.Instance = DMA2D;
 8001774:	4b26      	ldr	r3, [pc, #152]	; (8001810 <main+0x37c>)
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
 8001776:	e9c6 470a 	strd	r4, r7, [r6, #40]	; 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 800177a:	e9c6 440c 	strd	r4, r4, [r6, #48]	; 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 800177e:	4630      	mov	r0, r6
  hdma2d.Init.Mode = DMA2D_M2M;
 8001780:	e9c6 3400 	strd	r3, r4, [r6]
  hdma2d.Init.OutputOffset = 0;
 8001784:	e9c6 7402 	strd	r7, r4, [r6, #8]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001788:	f004 fd6f 	bl	800626a <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 800178c:	4629      	mov	r1, r5
 800178e:	4630      	mov	r0, r6
 8001790:	f004 fe24 	bl	80063dc <HAL_DMA2D_ConfigLayer>
  hadc1.Instance = ADC1;
 8001794:	4e1f      	ldr	r6, [pc, #124]	; (8001814 <main+0x380>)
  ADC_ChannelConfTypeDef sConfig = {0};
 8001796:	4621      	mov	r1, r4
 8001798:	4642      	mov	r2, r8
 800179a:	a80d      	add	r0, sp, #52	; 0x34
 800179c:	f01f f9d6 	bl	8020b4c <memset>
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 80017a0:	4a1d      	ldr	r2, [pc, #116]	; (8001818 <main+0x384>)
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 80017a2:	60b4      	str	r4, [r6, #8]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 80017a4:	f44f 3380 	mov.w	r3, #65536	; 0x10000
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 80017a8:	4630      	mov	r0, r6
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 80017aa:	e9c6 2300 	strd	r2, r3, [r6]
  hadc1.Init.ScanConvMode = DISABLE;
 80017ae:	6134      	str	r4, [r6, #16]
  hadc1.Init.ContinuousConvMode = ENABLE;
 80017b0:	7635      	strb	r5, [r6, #24]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 80017b2:	f886 4020 	strb.w	r4, [r6, #32]
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 80017b6:	62f4      	str	r4, [r6, #44]	; 0x2c
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 80017b8:	f8c6 b028 	str.w	fp, [r6, #40]	; 0x28
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 80017bc:	60f4      	str	r4, [r6, #12]
  hadc1.Init.NbrOfConversion = 1;
 80017be:	61f5      	str	r5, [r6, #28]
  hadc1.Init.DMAContinuousRequests = DISABLE;
 80017c0:	f886 4030 	strb.w	r4, [r6, #48]	; 0x30
 80017c4:	e02e      	b.n	8001824 <main+0x390>
 80017c6:	bf00      	nop
 80017c8:	40023800 	.word	0x40023800
 80017cc:	40020800 	.word	0x40020800
 80017d0:	20003a4c 	.word	0x20003a4c
 80017d4:	40020400 	.word	0x40020400
 80017d8:	40020c00 	.word	0x40020c00
 80017dc:	200039f0 	.word	0x200039f0
 80017e0:	40023000 	.word	0x40023000
 80017e4:	40005c00 	.word	0x40005c00
 80017e8:	000186a0 	.word	0x000186a0
 80017ec:	20003b7c 	.word	0x20003b7c
 80017f0:	40015000 	.word	0x40015000
 80017f4:	20003b48 	.word	0x20003b48
 80017f8:	a0000140 	.word	0xa0000140
 80017fc:	20003aa0 	.word	0x20003aa0
 8001800:	40016800 	.word	0x40016800
 8001804:	20003958 	.word	0x20003958
 8001808:	2000001c 	.word	0x2000001c
 800180c:	20003a0c 	.word	0x20003a0c
 8001810:	4002b000 	.word	0x4002b000
 8001814:	20003960 	.word	0x20003960
 8001818:	40012000 	.word	0x40012000
 800181c:	0f000001 	.word	0x0f000001
 8001820:	200039f8 	.word	0x200039f8
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8001824:	6175      	str	r5, [r6, #20]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 8001826:	f004 fa91 	bl	8005d4c <HAL_ADC_Init>
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 800182a:	a90d      	add	r1, sp, #52	; 0x34
 800182c:	4630      	mov	r0, r6
  sConfig.Rank = 1;
 800182e:	e9cd a50d 	strd	sl, r5, [sp, #52]	; 0x34
  htim7.Instance = TIM7;
 8001832:	4e37      	ldr	r6, [pc, #220]	; (8001910 <main+0x47c>)
  sConfig.SamplingTime = ADC_SAMPLETIME_480CYCLES;
 8001834:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8001838:	f004 fba6 	bl	8005f88 <HAL_ADC_ConfigChannel>
  htim7.Init.Prescaler = 8400-1;
 800183c:	4935      	ldr	r1, [pc, #212]	; (8001914 <main+0x480>)
  htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 800183e:	60b4      	str	r4, [r6, #8]
  htim7.Init.Prescaler = 8400-1;
 8001840:	f242 02cf 	movw	r2, #8399	; 0x20cf
 8001844:	e9c6 1200 	strd	r1, r2, [r6]
  if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 8001848:	4630      	mov	r0, r6
  htim7.Init.Period = 1000-1; //1000-1
 800184a:	f240 32e7 	movw	r2, #999	; 0x3e7
 800184e:	60f2      	str	r2, [r6, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001850:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001854:	61b4      	str	r4, [r6, #24]
  if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 8001856:	f006 fd39 	bl	80082cc <HAL_TIM_Base_Init>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 800185a:	a90d      	add	r1, sp, #52	; 0x34
 800185c:	4630      	mov	r0, r6
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800185e:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 8001862:	f006 fd4d 	bl	8008300 <HAL_TIMEx_MasterConfigSynchronization>
  hdac.Instance = DAC;
 8001866:	4a2c      	ldr	r2, [pc, #176]	; (8001918 <main+0x484>)
 8001868:	f8c9 2000 	str.w	r2, [r9]
  if (HAL_DAC_Init(&hdac) != HAL_OK)
 800186c:	4648      	mov	r0, r9
  DAC_ChannelConfTypeDef sConfig = {0};
 800186e:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  if (HAL_DAC_Init(&hdac) != HAL_OK)
 8001872:	f004 fc87 	bl	8006184 <HAL_DAC_Init>
  if (HAL_DAC_ConfigChannel(&hdac, &sConfig, DAC_CHANNEL_2) != HAL_OK)
 8001876:	4642      	mov	r2, r8
 8001878:	a90d      	add	r1, sp, #52	; 0x34
 800187a:	4648      	mov	r0, r9
  sConfig.DAC_OutputBuffer = DAC_OUTPUTBUFFER_ENABLE;
 800187c:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  if (HAL_DAC_ConfigChannel(&hdac, &sConfig, DAC_CHANNEL_2) != HAL_OK)
 8001880:	f004 fcc0 	bl	8006204 <HAL_DAC_ConfigChannel>
  ADC_ChannelConfTypeDef sConfig = {0};
 8001884:	4642      	mov	r2, r8
 8001886:	4621      	mov	r1, r4
 8001888:	a80d      	add	r0, sp, #52	; 0x34
 800188a:	f01f f95f 	bl	8020b4c <memset>
  hadc2.Instance = ADC2;
 800188e:	4a23      	ldr	r2, [pc, #140]	; (800191c <main+0x488>)
  hadc2.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 8001890:	4923      	ldr	r1, [pc, #140]	; (8001920 <main+0x48c>)
  hadc2.Init.Resolution = ADC_RESOLUTION_12B;
 8001892:	6094      	str	r4, [r2, #8]
  hadc2.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 8001894:	f44f 3380 	mov.w	r3, #65536	; 0x10000
  if (HAL_ADC_Init(&hadc2) != HAL_OK)
 8001898:	4610      	mov	r0, r2
  hadc2.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 800189a:	e9c2 1300 	strd	r1, r3, [r2]
  hadc2.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 800189e:	e9c2 b40a 	strd	fp, r4, [r2, #40]	; 0x28
  hadc2.Init.ScanConvMode = DISABLE;
 80018a2:	6114      	str	r4, [r2, #16]
  hadc2.Init.ContinuousConvMode = ENABLE;
 80018a4:	7615      	strb	r5, [r2, #24]
  hadc2.Init.DiscontinuousConvMode = DISABLE;
 80018a6:	f882 4020 	strb.w	r4, [r2, #32]
  hadc2.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 80018aa:	60d4      	str	r4, [r2, #12]
  hadc2.Init.NbrOfConversion = 1;
 80018ac:	61d5      	str	r5, [r2, #28]
  hadc2.Init.DMAContinuousRequests = DISABLE;
 80018ae:	f882 4030 	strb.w	r4, [r2, #48]	; 0x30
  hadc2.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 80018b2:	6155      	str	r5, [r2, #20]
  if (HAL_ADC_Init(&hadc2) != HAL_OK)
 80018b4:	f004 fa4a 	bl	8005d4c <HAL_ADC_Init>
  if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 80018b8:	4a18      	ldr	r2, [pc, #96]	; (800191c <main+0x488>)
  sConfig.SamplingTime = ADC_SAMPLETIME_480CYCLES;
 80018ba:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
  if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 80018be:	4610      	mov	r0, r2
 80018c0:	a90d      	add	r1, sp, #52	; 0x34
  sConfig.Rank = 1;
 80018c2:	e9cd 750d 	strd	r7, r5, [sp, #52]	; 0x34
  if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 80018c6:	f004 fb5f 	bl	8005f88 <HAL_ADC_ConfigChannel>
  MX_TouchGFX_Init();
 80018ca:	f7fe fe8c 	bl	80005e6 <MX_TouchGFX_Init>
HAL_TIM_Base_Start_IT(&htim7); //uruchomienie timera 7 (przerwanie co 1 sek)
 80018ce:	4630      	mov	r0, r6
 80018d0:	f006 fbdf 	bl	8008092 <HAL_TIM_Base_Start_IT>
HAL_DAC_Start(&hdac, DAC_CHANNEL_2);
 80018d4:	4641      	mov	r1, r8
 80018d6:	4648      	mov	r0, r9
 80018d8:	f004 fc67 	bl	80061aa <HAL_DAC_Start>
HAL_DAC_SetValue(&hdac, DAC_CHANNEL_2, DAC_ALIGN_12B_R, 4095); //ustaw max napiecie na ADC, zeby nie plynal zaden prad !ZMIENIC
 80018dc:	f640 73ff 	movw	r3, #4095	; 0xfff
 80018e0:	4622      	mov	r2, r4
 80018e2:	4641      	mov	r1, r8
 80018e4:	4648      	mov	r0, r9
 80018e6:	f004 fcae 	bl	8006246 <HAL_DAC_SetValue>
  osKernelInitialize();
 80018ea:	f006 fde9 	bl	80084c0 <osKernelInitialize>
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 80018ee:	4a0d      	ldr	r2, [pc, #52]	; (8001924 <main+0x490>)
 80018f0:	480d      	ldr	r0, [pc, #52]	; (8001928 <main+0x494>)
 80018f2:	4621      	mov	r1, r4
 80018f4:	f006 fe1e 	bl	8008534 <osThreadNew>
 80018f8:	4b0c      	ldr	r3, [pc, #48]	; (800192c <main+0x498>)
  TaskDwaHandle = osThreadNew(ZadanieDwa, NULL, &TaskDwa_attributes);
 80018fa:	4a0d      	ldr	r2, [pc, #52]	; (8001930 <main+0x49c>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 80018fc:	6018      	str	r0, [r3, #0]
  TaskDwaHandle = osThreadNew(ZadanieDwa, NULL, &TaskDwa_attributes);
 80018fe:	4621      	mov	r1, r4
 8001900:	480c      	ldr	r0, [pc, #48]	; (8001934 <main+0x4a0>)
 8001902:	f006 fe17 	bl	8008534 <osThreadNew>
 8001906:	4b0c      	ldr	r3, [pc, #48]	; (8001938 <main+0x4a4>)
 8001908:	6018      	str	r0, [r3, #0]
  osKernelStart();
 800190a:	f006 fdf3 	bl	80084f4 <osKernelStart>
  while (1)
 800190e:	e7fe      	b.n	800190e <main+0x47a>
 8001910:	20003bd4 	.word	0x20003bd4
 8001914:	40001400 	.word	0x40001400
 8001918:	40007400 	.word	0x40007400
 800191c:	200039a8 	.word	0x200039a8
 8001920:	40012100 	.word	0x40012100
 8001924:	080220a4 	.word	0x080220a4
 8001928:	080005eb 	.word	0x080005eb
 800192c:	20003954 	.word	0x20003954
 8001930:	080220c8 	.word	0x080220c8
 8001934:	080011ed 	.word	0x080011ed
 8001938:	2000395c 	.word	0x2000395c

0800193c <IOE_Init>:
 800193c:	4770      	bx	lr

0800193e <IOE_ITConfig>:
 800193e:	4770      	bx	lr

08001940 <IOE_Write>:
{
 8001940:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout); 
 8001942:	4b09      	ldr	r3, [pc, #36]	; (8001968 <IOE_Write+0x28>)
 8001944:	f88d 2017 	strb.w	r2, [sp, #23]
 8001948:	681b      	ldr	r3, [r3, #0]
 800194a:	9302      	str	r3, [sp, #8]
 800194c:	f10d 0217 	add.w	r2, sp, #23
 8001950:	2301      	movs	r3, #1
 8001952:	9200      	str	r2, [sp, #0]
 8001954:	9301      	str	r3, [sp, #4]
 8001956:	460a      	mov	r2, r1
 8001958:	4601      	mov	r1, r0
 800195a:	4804      	ldr	r0, [pc, #16]	; (800196c <IOE_Write+0x2c>)
 800195c:	f005 f8f4 	bl	8006b48 <HAL_I2C_Mem_Write>
}
 8001960:	b007      	add	sp, #28
 8001962:	f85d fb04 	ldr.w	pc, [sp], #4
 8001966:	bf00      	nop
 8001968:	2000000c 	.word	0x2000000c
 800196c:	20003a4c 	.word	0x20003a4c

08001970 <IOE_Read>:
{
 8001970:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  uint8_t value = 0;
 8001972:	2300      	movs	r3, #0
 8001974:	f88d 3017 	strb.w	r3, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001978:	4b08      	ldr	r3, [pc, #32]	; (800199c <IOE_Read+0x2c>)
 800197a:	681b      	ldr	r3, [r3, #0]
 800197c:	9302      	str	r3, [sp, #8]
{
 800197e:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001980:	2301      	movs	r3, #1
 8001982:	f10d 0117 	add.w	r1, sp, #23
 8001986:	9100      	str	r1, [sp, #0]
 8001988:	9301      	str	r3, [sp, #4]
 800198a:	4601      	mov	r1, r0
 800198c:	4804      	ldr	r0, [pc, #16]	; (80019a0 <IOE_Read+0x30>)
 800198e:	f005 f96b 	bl	8006c68 <HAL_I2C_Mem_Read>
}
 8001992:	f89d 0017 	ldrb.w	r0, [sp, #23]
 8001996:	b007      	add	sp, #28
 8001998:	f85d fb04 	ldr.w	pc, [sp], #4
 800199c:	2000000c 	.word	0x2000000c
 80019a0:	20003a4c 	.word	0x20003a4c

080019a4 <IOE_ReadMultiple>:
{
 80019a4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 80019a6:	4c08      	ldr	r4, [pc, #32]	; (80019c8 <IOE_ReadMultiple+0x24>)
 80019a8:	6824      	ldr	r4, [r4, #0]
 80019aa:	9200      	str	r2, [sp, #0]
 80019ac:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80019b0:	460a      	mov	r2, r1
 80019b2:	2301      	movs	r3, #1
 80019b4:	4601      	mov	r1, r0
 80019b6:	4805      	ldr	r0, [pc, #20]	; (80019cc <IOE_ReadMultiple+0x28>)
 80019b8:	f005 f956 	bl	8006c68 <HAL_I2C_Mem_Read>
}
 80019bc:	3800      	subs	r0, #0
 80019be:	bf18      	it	ne
 80019c0:	2001      	movne	r0, #1
 80019c2:	b004      	add	sp, #16
 80019c4:	bd10      	pop	{r4, pc}
 80019c6:	bf00      	nop
 80019c8:	2000000c 	.word	0x2000000c
 80019cc:	20003a4c 	.word	0x20003a4c

080019d0 <IOE_Delay>:
 80019d0:	f004 b9a8 	b.w	8005d24 <HAL_Delay>

080019d4 <LCD_IO_Init>:
{
 80019d4:	b508      	push	{r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80019d6:	4806      	ldr	r0, [pc, #24]	; (80019f0 <LCD_IO_Init+0x1c>)
 80019d8:	2200      	movs	r2, #0
 80019da:	2104      	movs	r1, #4
 80019dc:	f004 fe2a 	bl	8006634 <HAL_GPIO_WritePin>
}
 80019e0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80019e4:	4802      	ldr	r0, [pc, #8]	; (80019f0 <LCD_IO_Init+0x1c>)
 80019e6:	2201      	movs	r2, #1
 80019e8:	2104      	movs	r1, #4
 80019ea:	f004 be23 	b.w	8006634 <HAL_GPIO_WritePin>
 80019ee:	bf00      	nop
 80019f0:	40020800 	.word	0x40020800

080019f4 <LCD_IO_WriteData>:
{
 80019f4:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80019f6:	4d0b      	ldr	r5, [pc, #44]	; (8001a24 <LCD_IO_WriteData+0x30>)
{
 80019f8:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 80019fa:	2201      	movs	r2, #1
 80019fc:	480a      	ldr	r0, [pc, #40]	; (8001a28 <LCD_IO_WriteData+0x34>)
 80019fe:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001a02:	f004 fe17 	bl	8006634 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a06:	2200      	movs	r2, #0
 8001a08:	2104      	movs	r1, #4
 8001a0a:	4628      	mov	r0, r5
 8001a0c:	f004 fe12 	bl	8006634 <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 8001a10:	4620      	mov	r0, r4
 8001a12:	f7ff fbb1 	bl	8001178 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001a16:	4628      	mov	r0, r5
 8001a18:	2201      	movs	r2, #1
}
 8001a1a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001a1e:	2104      	movs	r1, #4
 8001a20:	f004 be08 	b.w	8006634 <HAL_GPIO_WritePin>
 8001a24:	40020800 	.word	0x40020800
 8001a28:	40020c00 	.word	0x40020c00

08001a2c <LCD_IO_WriteReg>:
{
 8001a2c:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a2e:	4d0b      	ldr	r5, [pc, #44]	; (8001a5c <LCD_IO_WriteReg+0x30>)
{
 8001a30:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001a32:	2200      	movs	r2, #0
 8001a34:	480a      	ldr	r0, [pc, #40]	; (8001a60 <LCD_IO_WriteReg+0x34>)
 8001a36:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001a3a:	f004 fdfb 	bl	8006634 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a3e:	2200      	movs	r2, #0
 8001a40:	2104      	movs	r1, #4
 8001a42:	4628      	mov	r0, r5
 8001a44:	f004 fdf6 	bl	8006634 <HAL_GPIO_WritePin>
  SPI5_Write(Reg);
 8001a48:	4620      	mov	r0, r4
 8001a4a:	f7ff fb95 	bl	8001178 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001a4e:	4628      	mov	r0, r5
 8001a50:	2201      	movs	r2, #1
}
 8001a52:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001a56:	2104      	movs	r1, #4
 8001a58:	f004 bdec 	b.w	8006634 <HAL_GPIO_WritePin>
 8001a5c:	40020800 	.word	0x40020800
 8001a60:	40020c00 	.word	0x40020c00

08001a64 <LCD_IO_ReadData>:
{
 8001a64:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a66:	4e14      	ldr	r6, [pc, #80]	; (8001ab8 <LCD_IO_ReadData+0x54>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001a68:	4f14      	ldr	r7, [pc, #80]	; (8001abc <LCD_IO_ReadData+0x58>)
{
 8001a6a:	4605      	mov	r5, r0
 8001a6c:	460c      	mov	r4, r1
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a6e:	4630      	mov	r0, r6
 8001a70:	2200      	movs	r2, #0
 8001a72:	2104      	movs	r1, #4
 8001a74:	f004 fdde 	bl	8006634 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001a78:	2200      	movs	r2, #0
 8001a7a:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001a7e:	4638      	mov	r0, r7
 8001a80:	f004 fdd8 	bl	8006634 <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 8001a84:	4628      	mov	r0, r5
 8001a86:	f7ff fb77 	bl	8001178 <SPI5_Write>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 8001a8a:	4b0d      	ldr	r3, [pc, #52]	; (8001ac0 <LCD_IO_ReadData+0x5c>)
 8001a8c:	480d      	ldr	r0, [pc, #52]	; (8001ac4 <LCD_IO_ReadData+0x60>)
 8001a8e:	681b      	ldr	r3, [r3, #0]
 8001a90:	4622      	mov	r2, r4
 8001a92:	a901      	add	r1, sp, #4
 8001a94:	f006 fa5b 	bl	8007f4e <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001a98:	4638      	mov	r0, r7
 8001a9a:	2201      	movs	r2, #1
 8001a9c:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  return readvalue;
 8001aa0:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001aa2:	f004 fdc7 	bl	8006634 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001aa6:	4630      	mov	r0, r6
 8001aa8:	2201      	movs	r2, #1
 8001aaa:	2104      	movs	r1, #4
 8001aac:	f004 fdc2 	bl	8006634 <HAL_GPIO_WritePin>
}
 8001ab0:	4620      	mov	r0, r4
 8001ab2:	b003      	add	sp, #12
 8001ab4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001ab6:	bf00      	nop
 8001ab8:	40020800 	.word	0x40020800
 8001abc:	40020c00 	.word	0x40020c00
 8001ac0:	20000010 	.word	0x20000010
 8001ac4:	20003b7c 	.word	0x20003b7c

08001ac8 <LCD_Delay>:
  HAL_Delay(Delay);
 8001ac8:	f004 b92c 	b.w	8005d24 <HAL_Delay>

08001acc <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM8) {
 8001acc:	6802      	ldr	r2, [r0, #0]
 8001ace:	4b08      	ldr	r3, [pc, #32]	; (8001af0 <HAL_TIM_PeriodElapsedCallback+0x24>)
 8001ad0:	429a      	cmp	r2, r3
{
 8001ad2:	b510      	push	{r4, lr}
 8001ad4:	4604      	mov	r4, r0
  if (htim->Instance == TIM8) {
 8001ad6:	d101      	bne.n	8001adc <HAL_TIM_PeriodElapsedCallback+0x10>
    HAL_IncTick();
 8001ad8:	f004 f912 	bl	8005d00 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */
  if (htim->Instance == TIM7){ //timer co 100ms
 8001adc:	6822      	ldr	r2, [r4, #0]
 8001ade:	4b05      	ldr	r3, [pc, #20]	; (8001af4 <HAL_TIM_PeriodElapsedCallback+0x28>)
 8001ae0:	429a      	cmp	r2, r3
	  ladowarka.Minelo100ms=1;
 8001ae2:	bf02      	ittt	eq
 8001ae4:	4b04      	ldreq	r3, [pc, #16]	; (8001af8 <HAL_TIM_PeriodElapsedCallback+0x2c>)
 8001ae6:	2201      	moveq	r2, #1
 8001ae8:	f8c3 2a6c 	streq.w	r2, [r3, #2668]	; 0xa6c
  }

  /* USER CODE END Callback 1 */
}
 8001aec:	bd10      	pop	{r4, pc}
 8001aee:	bf00      	nop
 8001af0:	40010400 	.word	0x40010400
 8001af4:	40001400 	.word	0x40001400
 8001af8:	20003c14 	.word	0x20003c14

08001afc <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001afc:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001afe:	4b0e      	ldr	r3, [pc, #56]	; (8001b38 <HAL_MspInit+0x3c>)
 8001b00:	2200      	movs	r2, #0
 8001b02:	9200      	str	r2, [sp, #0]
 8001b04:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001b06:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 8001b0a:	6459      	str	r1, [r3, #68]	; 0x44
 8001b0c:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001b0e:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 8001b12:	9100      	str	r1, [sp, #0]
 8001b14:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001b16:	9201      	str	r2, [sp, #4]
 8001b18:	6c19      	ldr	r1, [r3, #64]	; 0x40
 8001b1a:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 8001b1e:	6419      	str	r1, [r3, #64]	; 0x40
 8001b20:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001b22:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001b26:	9301      	str	r3, [sp, #4]
 8001b28:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001b2a:	210f      	movs	r1, #15
 8001b2c:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001b30:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001b32:	f004 bad7 	b.w	80060e4 <HAL_NVIC_SetPriority>
 8001b36:	bf00      	nop
 8001b38:	40023800 	.word	0x40023800

08001b3c <HAL_ADC_MspInit>:
* This function configures the hardware resources used in this example
* @param hadc: ADC handle pointer
* @retval None
*/
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 8001b3c:	b510      	push	{r4, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001b3e:	2214      	movs	r2, #20
{
 8001b40:	b08a      	sub	sp, #40	; 0x28
 8001b42:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001b44:	2100      	movs	r1, #0
 8001b46:	eb0d 0002 	add.w	r0, sp, r2
 8001b4a:	f01e ffff 	bl	8020b4c <memset>
  if(hadc->Instance==ADC1)
 8001b4e:	6823      	ldr	r3, [r4, #0]
 8001b50:	4a1e      	ldr	r2, [pc, #120]	; (8001bcc <HAL_ADC_MspInit+0x90>)
 8001b52:	4293      	cmp	r3, r2
 8001b54:	d11f      	bne.n	8001b96 <HAL_ADC_MspInit+0x5a>
  {
  /* USER CODE BEGIN ADC1_MspInit 0 */

  /* USER CODE END ADC1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_ADC1_CLK_ENABLE();
 8001b56:	4b1e      	ldr	r3, [pc, #120]	; (8001bd0 <HAL_ADC_MspInit+0x94>)
 8001b58:	2100      	movs	r1, #0
 8001b5a:	9101      	str	r1, [sp, #4]
 8001b5c:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001b5e:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8001b62:	645a      	str	r2, [r3, #68]	; 0x44
 8001b64:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001b66:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8001b6a:	9201      	str	r2, [sp, #4]
 8001b6c:	9a01      	ldr	r2, [sp, #4]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001b6e:	9102      	str	r1, [sp, #8]
 8001b70:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001b72:	f042 0201 	orr.w	r2, r2, #1
 8001b76:	631a      	str	r2, [r3, #48]	; 0x30
 8001b78:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001b7a:	f003 0301 	and.w	r3, r3, #1
 8001b7e:	9302      	str	r3, [sp, #8]
 8001b80:	9b02      	ldr	r3, [sp, #8]
    /**ADC1 GPIO Configuration
    PA7     ------> ADC1_IN7
    */
    GPIO_InitStruct.Pin = GPIO_PIN_7;
 8001b82:	2380      	movs	r3, #128	; 0x80

    __HAL_RCC_GPIOA_CLK_ENABLE();
    /**ADC2 GPIO Configuration
    PA2     ------> ADC2_IN2
    */
    GPIO_InitStruct.Pin = GPIO_PIN_2;
 8001b84:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001b86:	4813      	ldr	r0, [pc, #76]	; (8001bd4 <HAL_ADC_MspInit+0x98>)
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001b88:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001b8a:	a905      	add	r1, sp, #20
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001b8c:	9306      	str	r3, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001b8e:	f004 fc69 	bl	8006464 <HAL_GPIO_Init>
  /* USER CODE BEGIN ADC2_MspInit 1 */

  /* USER CODE END ADC2_MspInit 1 */
  }

}
 8001b92:	b00a      	add	sp, #40	; 0x28
 8001b94:	bd10      	pop	{r4, pc}
  else if(hadc->Instance==ADC2)
 8001b96:	4a10      	ldr	r2, [pc, #64]	; (8001bd8 <HAL_ADC_MspInit+0x9c>)
 8001b98:	4293      	cmp	r3, r2
 8001b9a:	d1fa      	bne.n	8001b92 <HAL_ADC_MspInit+0x56>
    __HAL_RCC_ADC2_CLK_ENABLE();
 8001b9c:	4b0c      	ldr	r3, [pc, #48]	; (8001bd0 <HAL_ADC_MspInit+0x94>)
 8001b9e:	2100      	movs	r1, #0
 8001ba0:	9103      	str	r1, [sp, #12]
 8001ba2:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001ba4:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8001ba8:	645a      	str	r2, [r3, #68]	; 0x44
 8001baa:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001bac:	f402 7200 	and.w	r2, r2, #512	; 0x200
 8001bb0:	9203      	str	r2, [sp, #12]
 8001bb2:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001bb4:	9104      	str	r1, [sp, #16]
 8001bb6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001bb8:	f042 0201 	orr.w	r2, r2, #1
 8001bbc:	631a      	str	r2, [r3, #48]	; 0x30
 8001bbe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001bc0:	f003 0301 	and.w	r3, r3, #1
 8001bc4:	9304      	str	r3, [sp, #16]
 8001bc6:	9b04      	ldr	r3, [sp, #16]
    GPIO_InitStruct.Pin = GPIO_PIN_2;
 8001bc8:	2304      	movs	r3, #4
 8001bca:	e7db      	b.n	8001b84 <HAL_ADC_MspInit+0x48>
 8001bcc:	40012000 	.word	0x40012000
 8001bd0:	40023800 	.word	0x40023800
 8001bd4:	40020000 	.word	0x40020000
 8001bd8:	40012100 	.word	0x40012100

08001bdc <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8001bdc:	6802      	ldr	r2, [r0, #0]
 8001bde:	4b09      	ldr	r3, [pc, #36]	; (8001c04 <HAL_CRC_MspInit+0x28>)
 8001be0:	429a      	cmp	r2, r3
{
 8001be2:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 8001be4:	d10b      	bne.n	8001bfe <HAL_CRC_MspInit+0x22>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8001be6:	2300      	movs	r3, #0
 8001be8:	9301      	str	r3, [sp, #4]
 8001bea:	4b07      	ldr	r3, [pc, #28]	; (8001c08 <HAL_CRC_MspInit+0x2c>)
 8001bec:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001bee:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8001bf2:	631a      	str	r2, [r3, #48]	; 0x30
 8001bf4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001bf6:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001bfa:	9301      	str	r3, [sp, #4]
 8001bfc:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8001bfe:	b002      	add	sp, #8
 8001c00:	4770      	bx	lr
 8001c02:	bf00      	nop
 8001c04:	40023000 	.word	0x40023000
 8001c08:	40023800 	.word	0x40023800

08001c0c <HAL_DAC_MspInit>:
* This function configures the hardware resources used in this example
* @param hdac: DAC handle pointer
* @retval None
*/
void HAL_DAC_MspInit(DAC_HandleTypeDef* hdac)
{
 8001c0c:	b510      	push	{r4, lr}
 8001c0e:	4604      	mov	r4, r0
 8001c10:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001c12:	2214      	movs	r2, #20
 8001c14:	2100      	movs	r1, #0
 8001c16:	a803      	add	r0, sp, #12
 8001c18:	f01e ff98 	bl	8020b4c <memset>
  if(hdac->Instance==DAC)
 8001c1c:	6822      	ldr	r2, [r4, #0]
 8001c1e:	4b12      	ldr	r3, [pc, #72]	; (8001c68 <HAL_DAC_MspInit+0x5c>)
 8001c20:	429a      	cmp	r2, r3
 8001c22:	d11e      	bne.n	8001c62 <HAL_DAC_MspInit+0x56>
  {
  /* USER CODE BEGIN DAC_MspInit 0 */

  /* USER CODE END DAC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DAC_CLK_ENABLE();
 8001c24:	f503 33e2 	add.w	r3, r3, #115712	; 0x1c400
 8001c28:	2100      	movs	r1, #0
 8001c2a:	9101      	str	r1, [sp, #4]
 8001c2c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
    PA5     ------> DAC_OUT2
    */
    GPIO_InitStruct.Pin = GPIO_PIN_5;
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001c2e:	480f      	ldr	r0, [pc, #60]	; (8001c6c <HAL_DAC_MspInit+0x60>)
    __HAL_RCC_DAC_CLK_ENABLE();
 8001c30:	f042 5200 	orr.w	r2, r2, #536870912	; 0x20000000
 8001c34:	641a      	str	r2, [r3, #64]	; 0x40
 8001c36:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001c38:	f002 5200 	and.w	r2, r2, #536870912	; 0x20000000
 8001c3c:	9201      	str	r2, [sp, #4]
 8001c3e:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001c40:	9102      	str	r1, [sp, #8]
 8001c42:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c44:	f042 0201 	orr.w	r2, r2, #1
 8001c48:	631a      	str	r2, [r3, #48]	; 0x30
 8001c4a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001c4c:	f003 0301 	and.w	r3, r3, #1
 8001c50:	9302      	str	r3, [sp, #8]
 8001c52:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001c54:	2220      	movs	r2, #32
 8001c56:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001c58:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001c5a:	e9cd 2303 	strd	r2, r3, [sp, #12]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001c5e:	f004 fc01 	bl	8006464 <HAL_GPIO_Init>
  /* USER CODE BEGIN DAC_MspInit 1 */

  /* USER CODE END DAC_MspInit 1 */
  }

}
 8001c62:	b008      	add	sp, #32
 8001c64:	bd10      	pop	{r4, pc}
 8001c66:	bf00      	nop
 8001c68:	40007400 	.word	0x40007400
 8001c6c:	40020000 	.word	0x40020000

08001c70 <HAL_DMA2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 8001c70:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 8001c72:	4b0f      	ldr	r3, [pc, #60]	; (8001cb0 <HAL_DMA2D_MspInit+0x40>)
 8001c74:	6802      	ldr	r2, [r0, #0]
 8001c76:	429a      	cmp	r2, r3
 8001c78:	d116      	bne.n	8001ca8 <HAL_DMA2D_MspInit+0x38>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001c7a:	2200      	movs	r2, #0
 8001c7c:	f5a3 43f0 	sub.w	r3, r3, #30720	; 0x7800
 8001c80:	9201      	str	r2, [sp, #4]
 8001c82:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001c84:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8001c88:	6319      	str	r1, [r3, #48]	; 0x30
 8001c8a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001c8c:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001c90:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001c92:	2105      	movs	r1, #5
 8001c94:	205a      	movs	r0, #90	; 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001c96:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001c98:	f004 fa24 	bl	80060e4 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001c9c:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 8001c9e:	b003      	add	sp, #12
 8001ca0:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001ca4:	f004 ba50 	b.w	8006148 <HAL_NVIC_EnableIRQ>
}
 8001ca8:	b003      	add	sp, #12
 8001caa:	f85d fb04 	ldr.w	pc, [sp], #4
 8001cae:	bf00      	nop
 8001cb0:	4002b000 	.word	0x4002b000

08001cb4 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001cb4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001cb8:	4604      	mov	r4, r0
 8001cba:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001cbc:	2214      	movs	r2, #20
 8001cbe:	2100      	movs	r1, #0
 8001cc0:	a803      	add	r0, sp, #12
 8001cc2:	f01e ff43 	bl	8020b4c <memset>
  if(hi2c->Instance==I2C3)
 8001cc6:	6822      	ldr	r2, [r4, #0]
 8001cc8:	4b24      	ldr	r3, [pc, #144]	; (8001d5c <HAL_I2C_MspInit+0xa8>)
 8001cca:	429a      	cmp	r2, r3
 8001ccc:	d143      	bne.n	8001d56 <HAL_I2C_MspInit+0xa2>
  {
  /* USER CODE BEGIN I2C3_MspInit 0 */

  /* USER CODE END I2C3_MspInit 0 */

    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001cce:	4c24      	ldr	r4, [pc, #144]	; (8001d60 <HAL_I2C_MspInit+0xac>)
    GPIO_InitStruct.Pin = GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001cd0:	4824      	ldr	r0, [pc, #144]	; (8001d64 <HAL_I2C_MspInit+0xb0>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001cd2:	2500      	movs	r5, #0
 8001cd4:	9500      	str	r5, [sp, #0]
 8001cd6:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001cd8:	f043 0304 	orr.w	r3, r3, #4
 8001cdc:	6323      	str	r3, [r4, #48]	; 0x30
 8001cde:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001ce0:	f003 0304 	and.w	r3, r3, #4
 8001ce4:	9300      	str	r3, [sp, #0]
 8001ce6:	9b00      	ldr	r3, [sp, #0]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001ce8:	9501      	str	r5, [sp, #4]
 8001cea:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001cec:	f043 0301 	orr.w	r3, r3, #1
 8001cf0:	6323      	str	r3, [r4, #48]	; 0x30
 8001cf2:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001cf4:	f003 0301 	and.w	r3, r3, #1
 8001cf8:	9301      	str	r3, [sp, #4]
 8001cfa:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001cfc:	f04f 0912 	mov.w	r9, #18
 8001d00:	f44f 7300 	mov.w	r3, #512	; 0x200
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d04:	f04f 0801 	mov.w	r8, #1
 8001d08:	2703      	movs	r7, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001d0a:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001d0c:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001d0e:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d12:	e9cd 8705 	strd	r8, r7, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001d16:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001d18:	f004 fba4 	bl	8006464 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001d1c:	f44f 7380 	mov.w	r3, #256	; 0x100
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001d20:	4811      	ldr	r0, [pc, #68]	; (8001d68 <HAL_I2C_MspInit+0xb4>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001d22:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001d24:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001d26:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d2a:	e9cd 8705 	strd	r8, r7, [sp, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001d2e:	f004 fb99 	bl	8006464 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001d32:	9502      	str	r5, [sp, #8]
 8001d34:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001d36:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001d3a:	6423      	str	r3, [r4, #64]	; 0x40
 8001d3c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001d3e:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001d42:	9302      	str	r3, [sp, #8]
 8001d44:	9b02      	ldr	r3, [sp, #8]
  /* USER CODE BEGIN I2C3_MspInit 1 */
  /* Force the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_FORCE_RESET();
 8001d46:	6a23      	ldr	r3, [r4, #32]
 8001d48:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001d4c:	6223      	str	r3, [r4, #32]
      
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 8001d4e:	6a23      	ldr	r3, [r4, #32]
 8001d50:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8001d54:	6223      	str	r3, [r4, #32]
  /* USER CODE END I2C3_MspInit 1 */
  }

}
 8001d56:	b009      	add	sp, #36	; 0x24
 8001d58:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001d5c:	40005c00 	.word	0x40005c00
 8001d60:	40023800 	.word	0x40023800
 8001d64:	40020800 	.word	0x40020800
 8001d68:	40020000 	.word	0x40020000

08001d6c <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8001d6c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001d6e:	4604      	mov	r4, r0
 8001d70:	b08d      	sub	sp, #52	; 0x34
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001d72:	2214      	movs	r2, #20
 8001d74:	2100      	movs	r1, #0
 8001d76:	a807      	add	r0, sp, #28
 8001d78:	f01e fee8 	bl	8020b4c <memset>
  if(hltdc->Instance==LTDC)
 8001d7c:	6822      	ldr	r2, [r4, #0]
 8001d7e:	4b57      	ldr	r3, [pc, #348]	; (8001edc <HAL_LTDC_MspInit+0x170>)
 8001d80:	429a      	cmp	r2, r3
 8001d82:	f040 80a8 	bne.w	8001ed6 <HAL_LTDC_MspInit+0x16a>
  {
  /* USER CODE BEGIN LTDC_MspInit 0 */

  /* USER CODE END LTDC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001d86:	f503 4350 	add.w	r3, r3, #53248	; 0xd000
 8001d8a:	2500      	movs	r5, #0
 8001d8c:	9500      	str	r5, [sp, #0]
 8001d8e:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_10;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001d90:	4853      	ldr	r0, [pc, #332]	; (8001ee0 <HAL_LTDC_MspInit+0x174>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001d92:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8001d96:	645a      	str	r2, [r3, #68]	; 0x44
 8001d98:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001d9a:	f002 6280 	and.w	r2, r2, #67108864	; 0x4000000
 8001d9e:	9200      	str	r2, [sp, #0]
 8001da0:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001da2:	9501      	str	r5, [sp, #4]
 8001da4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001da6:	f042 0220 	orr.w	r2, r2, #32
 8001daa:	631a      	str	r2, [r3, #48]	; 0x30
 8001dac:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001dae:	f002 0220 	and.w	r2, r2, #32
 8001db2:	9201      	str	r2, [sp, #4]
 8001db4:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001db6:	9502      	str	r5, [sp, #8]
 8001db8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001dba:	f042 0201 	orr.w	r2, r2, #1
 8001dbe:	631a      	str	r2, [r3, #48]	; 0x30
 8001dc0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001dc2:	f002 0201 	and.w	r2, r2, #1
 8001dc6:	9202      	str	r2, [sp, #8]
 8001dc8:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001dca:	9503      	str	r5, [sp, #12]
 8001dcc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001dce:	f042 0202 	orr.w	r2, r2, #2
 8001dd2:	631a      	str	r2, [r3, #48]	; 0x30
 8001dd4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001dd6:	f002 0202 	and.w	r2, r2, #2
 8001dda:	9203      	str	r2, [sp, #12]
 8001ddc:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8001dde:	9504      	str	r5, [sp, #16]
 8001de0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001de2:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8001de6:	631a      	str	r2, [r3, #48]	; 0x30
 8001de8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001dea:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8001dee:	9204      	str	r2, [sp, #16]
 8001df0:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001df2:	9505      	str	r5, [sp, #20]
 8001df4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001df6:	f042 0204 	orr.w	r2, r2, #4
 8001dfa:	631a      	str	r2, [r3, #48]	; 0x30
 8001dfc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001dfe:	f002 0204 	and.w	r2, r2, #4
 8001e02:	9205      	str	r2, [sp, #20]
 8001e04:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001e06:	9506      	str	r5, [sp, #24]
 8001e08:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001e0a:	f042 0208 	orr.w	r2, r2, #8
 8001e0e:	631a      	str	r2, [r3, #48]	; 0x30
 8001e10:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001e12:	f003 0308 	and.w	r3, r3, #8
 8001e16:	9306      	str	r3, [sp, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e18:	2402      	movs	r4, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001e1a:	260e      	movs	r6, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001e1c:	9b06      	ldr	r3, [sp, #24]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001e1e:	940a      	str	r4, [sp, #40]	; 0x28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e20:	f44f 6380 	mov.w	r3, #1024	; 0x400
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001e24:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e26:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001e2a:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001e2c:	f004 fb1a 	bl	8006464 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8001e30:	f641 0358 	movw	r3, #6232	; 0x1858
                          |GPIO_PIN_12;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001e34:	482b      	ldr	r0, [pc, #172]	; (8001ee4 <HAL_LTDC_MspInit+0x178>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001e36:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001e38:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e3a:	e9cd 3407 	strd	r3, r4, [sp, #28]

    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001e3e:	2709      	movs	r7, #9
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001e40:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001e44:	f004 fb0e 	bl	8006464 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8001e48:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e4a:	4827      	ldr	r0, [pc, #156]	; (8001ee8 <HAL_LTDC_MspInit+0x17c>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001e4c:	970b      	str	r7, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e4e:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e50:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001e54:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e58:	f004 fb04 	bl	8006464 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8001e5c:	f44f 6370 	mov.w	r3, #3840	; 0xf00
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e60:	4821      	ldr	r0, [pc, #132]	; (8001ee8 <HAL_LTDC_MspInit+0x17c>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001e62:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e64:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e66:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001e6a:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e6e:	f004 faf9 	bl	8006464 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8001e72:	f44f 630c 	mov.w	r3, #2240	; 0x8c0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e76:	481d      	ldr	r0, [pc, #116]	; (8001eec <HAL_LTDC_MspInit+0x180>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001e78:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e7a:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e7c:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001e80:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e84:	f004 faee 	bl	8006464 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8001e88:	23c0      	movs	r3, #192	; 0xc0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e8a:	4819      	ldr	r0, [pc, #100]	; (8001ef0 <HAL_LTDC_MspInit+0x184>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001e8c:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e8e:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e90:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001e94:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e98:	f004 fae4 	bl	8006464 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8001e9c:	2308      	movs	r3, #8
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001e9e:	4815      	ldr	r0, [pc, #84]	; (8001ef4 <HAL_LTDC_MspInit+0x188>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001ea0:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001ea2:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001ea4:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001ea8:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001eac:	f004 fada 	bl	8006464 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8001eb0:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001eb4:	480d      	ldr	r0, [pc, #52]	; (8001eec <HAL_LTDC_MspInit+0x180>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001eb6:	970b      	str	r7, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001eb8:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001eba:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001ebe:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001ec2:	f004 facf 	bl	8006464 <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001ec6:	2058      	movs	r0, #88	; 0x58
 8001ec8:	462a      	mov	r2, r5
 8001eca:	2105      	movs	r1, #5
 8001ecc:	f004 f90a 	bl	80060e4 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8001ed0:	2058      	movs	r0, #88	; 0x58
 8001ed2:	f004 f939 	bl	8006148 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8001ed6:	b00d      	add	sp, #52	; 0x34
 8001ed8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001eda:	bf00      	nop
 8001edc:	40016800 	.word	0x40016800
 8001ee0:	40021400 	.word	0x40021400
 8001ee4:	40020000 	.word	0x40020000
 8001ee8:	40020400 	.word	0x40020400
 8001eec:	40021800 	.word	0x40021800
 8001ef0:	40020800 	.word	0x40020800
 8001ef4:	40020c00 	.word	0x40020c00

08001ef8 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8001ef8:	b510      	push	{r4, lr}
 8001efa:	4604      	mov	r4, r0
 8001efc:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001efe:	2214      	movs	r2, #20
 8001f00:	2100      	movs	r1, #0
 8001f02:	a803      	add	r0, sp, #12
 8001f04:	f01e fe22 	bl	8020b4c <memset>
  if(hspi->Instance==SPI5)
 8001f08:	6822      	ldr	r2, [r4, #0]
 8001f0a:	4b14      	ldr	r3, [pc, #80]	; (8001f5c <HAL_SPI_MspInit+0x64>)
 8001f0c:	429a      	cmp	r2, r3
 8001f0e:	d123      	bne.n	8001f58 <HAL_SPI_MspInit+0x60>
  {
  /* USER CODE BEGIN SPI5_MspInit 0 */

  /* USER CODE END SPI5_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI5_CLK_ENABLE();
 8001f10:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 8001f14:	2100      	movs	r1, #0
 8001f16:	9101      	str	r1, [sp, #4]
 8001f18:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001f1a:	4811      	ldr	r0, [pc, #68]	; (8001f60 <HAL_SPI_MspInit+0x68>)
    __HAL_RCC_SPI5_CLK_ENABLE();
 8001f1c:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8001f20:	645a      	str	r2, [r3, #68]	; 0x44
 8001f22:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001f24:	f402 1280 	and.w	r2, r2, #1048576	; 0x100000
 8001f28:	9201      	str	r2, [sp, #4]
 8001f2a:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001f2c:	9102      	str	r1, [sp, #8]
 8001f2e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001f30:	f042 0220 	orr.w	r2, r2, #32
 8001f34:	631a      	str	r2, [r3, #48]	; 0x30
 8001f36:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001f38:	f003 0320 	and.w	r3, r3, #32
 8001f3c:	9302      	str	r3, [sp, #8]
 8001f3e:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001f40:	f44f 7260 	mov.w	r2, #896	; 0x380
 8001f44:	2302      	movs	r3, #2
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8001f46:	2103      	movs	r1, #3
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001f48:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8001f4c:	2305      	movs	r3, #5
 8001f4e:	e9cd 1306 	strd	r1, r3, [sp, #24]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001f52:	a903      	add	r1, sp, #12
 8001f54:	f004 fa86 	bl	8006464 <HAL_GPIO_Init>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 8001f58:	b008      	add	sp, #32
 8001f5a:	bd10      	pop	{r4, pc}
 8001f5c:	40015000 	.word	0x40015000
 8001f60:	40021400 	.word	0x40021400

08001f64 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8001f64:	b507      	push	{r0, r1, r2, lr}
  if(htim_base->Instance==TIM7)
 8001f66:	4b0f      	ldr	r3, [pc, #60]	; (8001fa4 <HAL_TIM_Base_MspInit+0x40>)
 8001f68:	6802      	ldr	r2, [r0, #0]
 8001f6a:	429a      	cmp	r2, r3
 8001f6c:	d116      	bne.n	8001f9c <HAL_TIM_Base_MspInit+0x38>
  {
  /* USER CODE BEGIN TIM7_MspInit 0 */

  /* USER CODE END TIM7_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM7_CLK_ENABLE();
 8001f6e:	2200      	movs	r2, #0
 8001f70:	f503 3309 	add.w	r3, r3, #140288	; 0x22400
 8001f74:	9201      	str	r2, [sp, #4]
 8001f76:	6c19      	ldr	r1, [r3, #64]	; 0x40
 8001f78:	f041 0120 	orr.w	r1, r1, #32
 8001f7c:	6419      	str	r1, [r3, #64]	; 0x40
 8001f7e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001f80:	f003 0320 	and.w	r3, r3, #32
 8001f84:	9301      	str	r3, [sp, #4]
    /* TIM7 interrupt Init */
    HAL_NVIC_SetPriority(TIM7_IRQn, 5, 0);
 8001f86:	2105      	movs	r1, #5
 8001f88:	2037      	movs	r0, #55	; 0x37
    __HAL_RCC_TIM7_CLK_ENABLE();
 8001f8a:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(TIM7_IRQn, 5, 0);
 8001f8c:	f004 f8aa 	bl	80060e4 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM7_IRQn);
 8001f90:	2037      	movs	r0, #55	; 0x37
  /* USER CODE BEGIN TIM7_MspInit 1 */

  /* USER CODE END TIM7_MspInit 1 */
  }

}
 8001f92:	b003      	add	sp, #12
 8001f94:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(TIM7_IRQn);
 8001f98:	f004 b8d6 	b.w	8006148 <HAL_NVIC_EnableIRQ>
}
 8001f9c:	b003      	add	sp, #12
 8001f9e:	f85d fb04 	ldr.w	pc, [sp], #4
 8001fa2:	bf00      	nop
 8001fa4:	40001400 	.word	0x40001400

08001fa8 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001fa8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001fac:	b086      	sub	sp, #24
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8001fae:	2300      	movs	r3, #0
 8001fb0:	9303      	str	r3, [sp, #12]
  if (FMC_Initialized) {
 8001fb2:	4b2b      	ldr	r3, [pc, #172]	; (8002060 <HAL_SDRAM_MspInit+0xb8>)
 8001fb4:	681c      	ldr	r4, [r3, #0]
 8001fb6:	2c00      	cmp	r4, #0
 8001fb8:	d14f      	bne.n	800205a <HAL_SDRAM_MspInit+0xb2>
  FMC_Initialized = 1;
 8001fba:	f04f 0801 	mov.w	r8, #1
 8001fbe:	f8c3 8000 	str.w	r8, [r3]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001fc2:	4b28      	ldr	r3, [pc, #160]	; (8002064 <HAL_SDRAM_MspInit+0xbc>)
 8001fc4:	9400      	str	r4, [sp, #0]
 8001fc6:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001fc8:	4827      	ldr	r0, [pc, #156]	; (8002068 <HAL_SDRAM_MspInit+0xc0>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8001fca:	ea42 0208 	orr.w	r2, r2, r8
 8001fce:	639a      	str	r2, [r3, #56]	; 0x38
 8001fd0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8001fd2:	ea03 0308 	and.w	r3, r3, r8
 8001fd6:	9300      	str	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001fd8:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001fda:	2603      	movs	r6, #3
 8001fdc:	250c      	movs	r5, #12
  __HAL_RCC_FMC_CLK_ENABLE();
 8001fde:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001fe0:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001fe2:	f64f 033f 	movw	r3, #63551	; 0xf83f
 8001fe6:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001fea:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001fee:	f004 fa39 	bl	8006464 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001ff2:	481e      	ldr	r0, [pc, #120]	; (800206c <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001ff4:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001ff6:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001ff8:	e9cd 8701 	strd	r8, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001ffc:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002000:	f004 fa30 	bl	8006464 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 8002004:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002008:	4819      	ldr	r0, [pc, #100]	; (8002070 <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800200a:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800200c:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800200e:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002012:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002016:	f004 fa25 	bl	8006464 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 800201a:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800201e:	4815      	ldr	r0, [pc, #84]	; (8002074 <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002020:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002022:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002024:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002028:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800202c:	f004 fa1a 	bl	8006464 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8002030:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002034:	4810      	ldr	r0, [pc, #64]	; (8002078 <HAL_SDRAM_MspInit+0xd0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002036:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002038:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800203a:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800203e:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002042:	f004 fa0f 	bl	8006464 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8002046:	2360      	movs	r3, #96	; 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002048:	480c      	ldr	r0, [pc, #48]	; (800207c <HAL_SDRAM_MspInit+0xd4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800204a:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800204c:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800204e:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002052:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002056:	f004 fa05 	bl	8006464 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 800205a:	b006      	add	sp, #24
 800205c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002060:	200046ac 	.word	0x200046ac
 8002064:	40023800 	.word	0x40023800
 8002068:	40021400 	.word	0x40021400
 800206c:	40020800 	.word	0x40020800
 8002070:	40021800 	.word	0x40021800
 8002074:	40021000 	.word	0x40021000
 8002078:	40020c00 	.word	0x40020c00
 800207c:	40020400 	.word	0x40020400

08002080 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8002080:	b530      	push	{r4, r5, lr}
 8002082:	4601      	mov	r1, r0
 8002084:	b089      	sub	sp, #36	; 0x24
  uint32_t              uwTimclock = 0;
  uint32_t              uwPrescalerValue = 0;
  uint32_t              pFLatency;

  /*Configure the TIM8 IRQ priority */
  HAL_NVIC_SetPriority(TIM8_UP_TIM13_IRQn, TickPriority ,0);
 8002086:	2200      	movs	r2, #0
 8002088:	202c      	movs	r0, #44	; 0x2c
 800208a:	f004 f82b 	bl	80060e4 <HAL_NVIC_SetPriority>

  /* Enable the TIM8 global Interrupt */
  HAL_NVIC_EnableIRQ(TIM8_UP_TIM13_IRQn);
 800208e:	202c      	movs	r0, #44	; 0x2c
 8002090:	f004 f85a 	bl	8006148 <HAL_NVIC_EnableIRQ>

  /* Enable TIM8 clock */
  __HAL_RCC_TIM8_CLK_ENABLE();
 8002094:	2500      	movs	r5, #0
 8002096:	4b15      	ldr	r3, [pc, #84]	; (80020ec <HAL_InitTick+0x6c>)
 8002098:	9502      	str	r5, [sp, #8]
 800209a:	6c5a      	ldr	r2, [r3, #68]	; 0x44

  /* Compute the prescaler value to have TIM8 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000) - 1);

  /* Initialize TIM8 */
  htim8.Instance = TIM8;
 800209c:	4c14      	ldr	r4, [pc, #80]	; (80020f0 <HAL_InitTick+0x70>)
  __HAL_RCC_TIM8_CLK_ENABLE();
 800209e:	f042 0202 	orr.w	r2, r2, #2
 80020a2:	645a      	str	r2, [r3, #68]	; 0x44
 80020a4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80020a6:	f003 0302 	and.w	r3, r3, #2
 80020aa:	9302      	str	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 80020ac:	a901      	add	r1, sp, #4
 80020ae:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM8_CLK_ENABLE();
 80020b0:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 80020b2:	f005 fb4f 	bl	8007754 <HAL_RCC_GetClockConfig>
  uwTimclock = 2*HAL_RCC_GetPCLK2Freq();
 80020b6:	f005 fb3d 	bl	8007734 <HAL_RCC_GetPCLK2Freq>
  htim8.Instance = TIM8;
 80020ba:	4b0e      	ldr	r3, [pc, #56]	; (80020f4 <HAL_InitTick+0x74>)
 80020bc:	6023      	str	r3, [r4, #0]
  + Period = [(TIM8CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim8.Init.Period = (1000000 / 1000) - 1;
 80020be:	f240 33e7 	movw	r3, #999	; 0x3e7
 80020c2:	60e3      	str	r3, [r4, #12]
  uwTimclock = 2*HAL_RCC_GetPCLK2Freq();
 80020c4:	0040      	lsls	r0, r0, #1
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000) - 1);
 80020c6:	4b0c      	ldr	r3, [pc, #48]	; (80020f8 <HAL_InitTick+0x78>)
 80020c8:	fbb0 f0f3 	udiv	r0, r0, r3
 80020cc:	3801      	subs	r0, #1
  htim8.Init.Prescaler = uwPrescalerValue;
 80020ce:	6060      	str	r0, [r4, #4]
  htim8.Init.ClockDivision = 0;
  htim8.Init.CounterMode = TIM_COUNTERMODE_UP;
  if(HAL_TIM_Base_Init(&htim8) == HAL_OK)
 80020d0:	4620      	mov	r0, r4
  htim8.Init.ClockDivision = 0;
 80020d2:	6125      	str	r5, [r4, #16]
  htim8.Init.CounterMode = TIM_COUNTERMODE_UP;
 80020d4:	60a5      	str	r5, [r4, #8]
  if(HAL_TIM_Base_Init(&htim8) == HAL_OK)
 80020d6:	f006 f8f9 	bl	80082cc <HAL_TIM_Base_Init>
 80020da:	b920      	cbnz	r0, 80020e6 <HAL_InitTick+0x66>
  {
    /* Start the TIM time Base generation in interrupt mode */
    return HAL_TIM_Base_Start_IT(&htim8);
 80020dc:	4620      	mov	r0, r4
 80020de:	f005 ffd8 	bl	8008092 <HAL_TIM_Base_Start_IT>
  }

  /* Return function status */
  return HAL_ERROR;
}
 80020e2:	b009      	add	sp, #36	; 0x24
 80020e4:	bd30      	pop	{r4, r5, pc}
  return HAL_ERROR;
 80020e6:	2001      	movs	r0, #1
 80020e8:	e7fb      	b.n	80020e2 <HAL_InitTick+0x62>
 80020ea:	bf00      	nop
 80020ec:	40023800 	.word	0x40023800
 80020f0:	200046b0 	.word	0x200046b0
 80020f4:	40010400 	.word	0x40010400
 80020f8:	000f4240 	.word	0x000f4240

080020fc <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 80020fc:	4770      	bx	lr

080020fe <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 80020fe:	e7fe      	b.n	80020fe <HardFault_Handler>

08002100 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8002100:	e7fe      	b.n	8002100 <MemManage_Handler>

08002102 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8002102:	e7fe      	b.n	8002102 <BusFault_Handler>

08002104 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8002104:	e7fe      	b.n	8002104 <UsageFault_Handler>

08002106 <DebugMon_Handler>:
 8002106:	4770      	bx	lr

08002108 <TIM8_UP_TIM13_IRQHandler>:
void TIM8_UP_TIM13_IRQHandler(void)
{
  /* USER CODE BEGIN TIM8_UP_TIM13_IRQn 0 */

  /* USER CODE END TIM8_UP_TIM13_IRQn 0 */
  HAL_TIM_IRQHandler(&htim8);
 8002108:	4801      	ldr	r0, [pc, #4]	; (8002110 <TIM8_UP_TIM13_IRQHandler+0x8>)
 800210a:	f005 bfd6 	b.w	80080ba <HAL_TIM_IRQHandler>
 800210e:	bf00      	nop
 8002110:	200046b0 	.word	0x200046b0

08002114 <TIM7_IRQHandler>:
void TIM7_IRQHandler(void)
{
  /* USER CODE BEGIN TIM7_IRQn 0 */

  /* USER CODE END TIM7_IRQn 0 */
  HAL_TIM_IRQHandler(&htim7);
 8002114:	4801      	ldr	r0, [pc, #4]	; (800211c <TIM7_IRQHandler+0x8>)
 8002116:	f005 bfd0 	b.w	80080ba <HAL_TIM_IRQHandler>
 800211a:	bf00      	nop
 800211c:	20003bd4 	.word	0x20003bd4

08002120 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8002120:	4801      	ldr	r0, [pc, #4]	; (8002128 <LTDC_IRQHandler+0x8>)
 8002122:	f004 bfdb 	b.w	80070dc <HAL_LTDC_IRQHandler>
 8002126:	bf00      	nop
 8002128:	20003aa0 	.word	0x20003aa0

0800212c <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 800212c:	4801      	ldr	r0, [pc, #4]	; (8002134 <DMA2D_IRQHandler+0x8>)
 800212e:	f004 b8ca 	b.w	80062c6 <HAL_DMA2D_IRQHandler>
 8002132:	bf00      	nop
 8002134:	20003a0c 	.word	0x20003a0c

08002138 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8002138:	2001      	movs	r0, #1
 800213a:	4770      	bx	lr

0800213c <_kill>:

int _kill(int pid, int sig)
{
 800213c:	b508      	push	{r3, lr}
	errno = EINVAL;
 800213e:	f01e fbb1 	bl	80208a4 <__errno>
 8002142:	2316      	movs	r3, #22
 8002144:	6003      	str	r3, [r0, #0]
	return -1;
}
 8002146:	f04f 30ff 	mov.w	r0, #4294967295
 800214a:	bd08      	pop	{r3, pc}

0800214c <_exit>:

void _exit (int status)
{
 800214c:	b508      	push	{r3, lr}
	errno = EINVAL;
 800214e:	f01e fba9 	bl	80208a4 <__errno>
 8002152:	2316      	movs	r3, #22
 8002154:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 8002156:	e7fe      	b.n	8002156 <_exit+0xa>

08002158 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8002158:	b570      	push	{r4, r5, r6, lr}
 800215a:	460d      	mov	r5, r1
 800215c:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800215e:	460e      	mov	r6, r1
 8002160:	1b73      	subs	r3, r6, r5
 8002162:	429c      	cmp	r4, r3
 8002164:	dc01      	bgt.n	800216a <_read+0x12>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 8002166:	4620      	mov	r0, r4
 8002168:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 800216a:	f3af 8000 	nop.w
 800216e:	f806 0b01 	strb.w	r0, [r6], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002172:	e7f5      	b.n	8002160 <_read+0x8>

08002174 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8002174:	b570      	push	{r4, r5, r6, lr}
 8002176:	460d      	mov	r5, r1
 8002178:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800217a:	460e      	mov	r6, r1
 800217c:	1b73      	subs	r3, r6, r5
 800217e:	429c      	cmp	r4, r3
 8002180:	dc01      	bgt.n	8002186 <_write+0x12>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 8002182:	4620      	mov	r0, r4
 8002184:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 8002186:	f816 0b01 	ldrb.w	r0, [r6], #1
 800218a:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800218e:	e7f5      	b.n	800217c <_write+0x8>

08002190 <_close>:

int _close(int file)
{
	return -1;
}
 8002190:	f04f 30ff 	mov.w	r0, #4294967295
 8002194:	4770      	bx	lr

08002196 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8002196:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800219a:	604b      	str	r3, [r1, #4]
	return 0;
}
 800219c:	2000      	movs	r0, #0
 800219e:	4770      	bx	lr

080021a0 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 80021a0:	2001      	movs	r0, #1
 80021a2:	4770      	bx	lr

080021a4 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 80021a4:	2000      	movs	r0, #0
 80021a6:	4770      	bx	lr

080021a8 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 80021a8:	4a0a      	ldr	r2, [pc, #40]	; (80021d4 <_sbrk+0x2c>)
 80021aa:	6811      	ldr	r1, [r2, #0]
{
 80021ac:	b508      	push	{r3, lr}
 80021ae:	4603      	mov	r3, r0
	if (heap_end == 0)
 80021b0:	b909      	cbnz	r1, 80021b6 <_sbrk+0xe>
		heap_end = &end;
 80021b2:	4909      	ldr	r1, [pc, #36]	; (80021d8 <_sbrk+0x30>)
 80021b4:	6011      	str	r1, [r2, #0]

	prev_heap_end = heap_end;
 80021b6:	6810      	ldr	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 80021b8:	4669      	mov	r1, sp
 80021ba:	4403      	add	r3, r0
 80021bc:	428b      	cmp	r3, r1
 80021be:	d906      	bls.n	80021ce <_sbrk+0x26>
	{
		errno = ENOMEM;
 80021c0:	f01e fb70 	bl	80208a4 <__errno>
 80021c4:	230c      	movs	r3, #12
 80021c6:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 80021c8:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 80021cc:	bd08      	pop	{r3, pc}
	heap_end += incr;
 80021ce:	6013      	str	r3, [r2, #0]
	return (caddr_t) prev_heap_end;
 80021d0:	e7fc      	b.n	80021cc <_sbrk+0x24>
 80021d2:	bf00      	nop
 80021d4:	200046f0 	.word	0x200046f0
 80021d8:	20015860 	.word	0x20015860

080021dc <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 80021dc:	4770      	bx	lr

080021de <_ZN23ApplicationFontProviderD0Ev>:
 80021de:	b510      	push	{r4, lr}
 80021e0:	2104      	movs	r1, #4
 80021e2:	4604      	mov	r4, r0
 80021e4:	f01e fa78 	bl	80206d8 <_ZdlPvj>
 80021e8:	4620      	mov	r0, r4
 80021ea:	bd10      	pop	{r4, pc}

080021ec <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
    switch (typography)
 80021ec:	2901      	cmp	r1, #1
{
 80021ee:	b508      	push	{r3, lr}
    switch (typography)
 80021f0:	d006      	beq.n	8002200 <_ZN23ApplicationFontProvider7getFontEt+0x14>
 80021f2:	2902      	cmp	r1, #2
 80021f4:	d008      	beq.n	8002208 <_ZN23ApplicationFontProvider7getFontEt+0x1c>
 80021f6:	b959      	cbnz	r1, 8002210 <_ZN23ApplicationFontProvider7getFontEt+0x24>
    {
    case Typography::DEFAULT:
        // verdana_15_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 80021f8:	f002 fdf8 	bl	8004dec <_ZN17TypedTextDatabase8getFontsEv>
 80021fc:	6800      	ldr	r0, [r0, #0]
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
    }
}
 80021fe:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8002200:	f002 fdf4 	bl	8004dec <_ZN17TypedTextDatabase8getFontsEv>
 8002204:	6840      	ldr	r0, [r0, #4]
 8002206:	e7fa      	b.n	80021fe <_ZN23ApplicationFontProvider7getFontEt+0x12>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8002208:	f002 fdf0 	bl	8004dec <_ZN17TypedTextDatabase8getFontsEv>
 800220c:	6880      	ldr	r0, [r0, #8]
 800220e:	e7f6      	b.n	80021fe <_ZN23ApplicationFontProvider7getFontEt+0x12>
    switch (typography)
 8002210:	2000      	movs	r0, #0
 8002212:	e7f4      	b.n	80021fe <_ZN23ApplicationFontProvider7getFontEt+0x12>

08002214 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8002214:	4800      	ldr	r0, [pc, #0]	; (8002218 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 8002216:	4770      	bx	lr
 8002218:	08022100 	.word	0x08022100

0800221c <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 800221c:	200d      	movs	r0, #13
 800221e:	4770      	bx	lr

08002220 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8002220:	b513      	push	{r0, r1, r4, lr}
 8002222:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8002224:	b151      	cbz	r1, 800223c <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002226:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 8002228:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 800222a:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 800222e:	aa01      	add	r2, sp, #4
 8002230:	689c      	ldr	r4, [r3, #8]
 8002232:	f10d 0303 	add.w	r3, sp, #3
 8002236:	47a0      	blx	r4
        return glyph;
    }
 8002238:	b002      	add	sp, #8
 800223a:	bd10      	pop	{r4, pc}
            return 0;
 800223c:	4608      	mov	r0, r1
 800223e:	e7fb      	b.n	8002238 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

08002240 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 8002240:	8940      	ldrh	r0, [r0, #10]
 8002242:	4770      	bx	lr

08002244 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8002244:	8980      	ldrh	r0, [r0, #12]
 8002246:	4770      	bx	lr

08002248 <_ZNK8touchgfx4Font13getFontHeightEv>:
     *       getMinimumTextHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getFontHeight() const
    {
        return fontHeight;
    }
 8002248:	8880      	ldrh	r0, [r0, #4]
 800224a:	4770      	bx	lr

0800224c <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
     *
     * @return The minimum height needed for a text field that uses this font.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getMinimumTextHeight() const
    {
        return fontHeight + pixelsBelowBaseline;
 800224c:	7983      	ldrb	r3, [r0, #6]
 800224e:	8880      	ldrh	r0, [r0, #4]
 8002250:	4418      	add	r0, r3
    }
 8002252:	b280      	uxth	r0, r0
 8002254:	4770      	bx	lr

08002256 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8002256:	79c0      	ldrb	r0, [r0, #7]
    }
 8002258:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 800225c:	4770      	bx	lr

0800225e <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 800225e:	79c0      	ldrb	r0, [r0, #7]
    }
 8002260:	09c0      	lsrs	r0, r0, #7
 8002262:	4770      	bx	lr

08002264 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 8002264:	4770      	bx	lr

08002266 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 8002266:	b510      	push	{r4, lr}
    }
 8002268:	2108      	movs	r1, #8
    virtual ~TypedText()
 800226a:	4604      	mov	r4, r0
    }
 800226c:	f01e fa34 	bl	80206d8 <_ZdlPvj>
 8002270:	4620      	mov	r0, r4
 8002272:	bd10      	pop	{r4, pc}

08002274 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 8002274:	4770      	bx	lr

08002276 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 8002276:	4770      	bx	lr

08002278 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 8002278:	f500 7396 	add.w	r3, r0, #300	; 0x12c
 800227c:	6808      	ldr	r0, [r1, #0]
 800227e:	6849      	ldr	r1, [r1, #4]
 8002280:	c303      	stmia	r3!, {r0, r1}
    }
 8002282:	4770      	bx	lr

08002284 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8002284:	2000      	movs	r0, #0
 8002286:	4770      	bx	lr

08002288 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8002288:	8081      	strh	r1, [r0, #4]
    }
 800228a:	4770      	bx	lr

0800228c <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 800228c:	80c1      	strh	r1, [r0, #6]
    }
 800228e:	4770      	bx	lr

08002290 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8002290:	8101      	strh	r1, [r0, #8]
    }
 8002292:	4770      	bx	lr

08002294 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8002294:	8141      	strh	r1, [r0, #10]
    }
 8002296:	4770      	bx	lr

08002298 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8002298:	4770      	bx	lr

0800229a <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 800229a:	4770      	bx	lr

0800229c <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 800229c:	4770      	bx	lr

0800229e <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 800229e:	4770      	bx	lr

080022a0 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 80022a0:	4770      	bx	lr

080022a2 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 80022a2:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 80022a4:	88c4      	ldrh	r4, [r0, #6]
 80022a6:	6803      	ldr	r3, [r0, #0]
 80022a8:	1b12      	subs	r2, r2, r4
 80022aa:	8884      	ldrh	r4, [r0, #4]
 80022ac:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80022ae:	1b09      	subs	r1, r1, r4
 80022b0:	b212      	sxth	r2, r2
    }
 80022b2:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 80022b6:	b209      	sxth	r1, r1
 80022b8:	4718      	bx	r3

080022ba <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 80022ba:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80022be:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 80022c0:	f04f 33ff 	mov.w	r3, #4294967295
 80022c4:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 80022c6:	6813      	ldr	r3, [r2, #0]
 80022c8:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 80022ca:	6010      	str	r0, [r2, #0]
    }
 80022cc:	4770      	bx	lr

080022ce <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 80022ce:	4770      	bx	lr

080022d0 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 80022d0:	4770      	bx	lr

080022d2 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 80022d2:	6041      	str	r1, [r0, #4]
    }
 80022d4:	4770      	bx	lr

080022d6 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 80022d6:	4770      	bx	lr

080022d8 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80022d8:	4b06      	ldr	r3, [pc, #24]	; (80022f4 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 80022da:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 80022de:	2300      	movs	r3, #0
 80022e0:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
// Screen1

void FrontendApplicationBase::gotoScreen1ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreen1ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80022e4:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 80022e8:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 80022ec:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c

    virtual void changeToStartScreen()
    {
        gotoScreen1ScreenNoTransition();
    }
 80022f0:	4770      	bx	lr
 80022f2:	bf00      	nop
 80022f4:	08002409 	.word	0x08002409

080022f8 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 80022f8:	2301      	movs	r3, #1
 80022fa:	7203      	strb	r3, [r0, #8]
    }
 80022fc:	4770      	bx	lr

080022fe <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 80022fe:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8002302:	b11a      	cbz	r2, 800230c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 8002304:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 8002308:	b102      	cbz	r2, 800230c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 800230a:	6018      	str	r0, [r3, #0]
        }
    }
 800230c:	4770      	bx	lr

0800230e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectD1Ev>:
{
public:
    /**
     * A Widget that reports solid and but does not draw anything.
     */
    class FullSolidRect : public Widget
 800230e:	4770      	bx	lr

08002310 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED1Ev>:
class WipeTransition : public Transition
 8002310:	4770      	bx	lr

08002312 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 8002312:	4770      	bx	lr

08002314 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 8002314:	4770      	bx	lr

08002316 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE8tearDownEv>:
            // Copy rect from tft to client framebuffer
            HAL::getInstance()->lcd().blitCopy((const uint16_t*)tftFb, source, rect, 255, false);
        }
    }

    virtual void tearDown()
 8002316:	4601      	mov	r1, r0
    {
        screenContainer->remove(solid);
 8002318:	6840      	ldr	r0, [r0, #4]
 800231a:	6803      	ldr	r3, [r0, #0]
 800231c:	3110      	adds	r1, #16
 800231e:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8002320:	4718      	bx	r3

08002322 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE4initEv>:
    }

    virtual void init()
 8002322:	4601      	mov	r1, r0
    {
        Transition::init();
        // Add the solid (and not-drawing-anything) widget on top to cover the other widgets
        screenContainer->add(solid);
 8002324:	6840      	ldr	r0, [r0, #4]
 8002326:	6803      	ldr	r3, [r0, #0]
 8002328:	3110      	adds	r1, #16
 800232a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800232c:	4718      	bx	r3

0800232e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE10invalidateEv>:
     * Wipe transition does not require an invalidation. Invalidation
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
    {
    }
 800232e:	4770      	bx	lr

08002330 <_ZNK8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRect4drawERKNS_4RectE>:
        }
 8002330:	4770      	bx	lr

08002332 <_ZNK8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRect12getSolidRectEv>:
        virtual Rect getSolidRect() const
 8002332:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8002334:	2200      	movs	r2, #0
            return Rect(0U, 0U, rect.width, rect.height);
 8002336:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 800233a:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 800233e:	8002      	strh	r2, [r0, #0]
 8002340:	8042      	strh	r2, [r0, #2]
 8002342:	8084      	strh	r4, [r0, #4]
 8002344:	80c1      	strh	r1, [r0, #6]
        }
 8002346:	bd10      	pop	{r4, pc}

08002348 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8002348:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 800234a:	68c2      	ldr	r2, [r0, #12]
 800234c:	6841      	ldr	r1, [r0, #4]
 800234e:	1054      	asrs	r4, r2, #1
    virtual void execute()
 8002350:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 8002352:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8002356:	07d2      	lsls	r2, r2, #31
 8002358:	bf48      	it	mi
 800235a:	590a      	ldrmi	r2, [r1, r4]
 800235c:	689b      	ldr	r3, [r3, #8]
    }
 800235e:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 8002362:	bf48      	it	mi
 8002364:	58d3      	ldrmi	r3, [r2, r3]
 8002366:	4718      	bx	r3

08002368 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 8002368:	6843      	ldr	r3, [r0, #4]
 800236a:	b12b      	cbz	r3, 8002378 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 800236c:	6883      	ldr	r3, [r0, #8]
 800236e:	b92b      	cbnz	r3, 800237c <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8002370:	68c0      	ldr	r0, [r0, #12]
 8002372:	f000 0001 	and.w	r0, r0, #1
 8002376:	4770      	bx	lr
 8002378:	4618      	mov	r0, r3
 800237a:	4770      	bx	lr
 800237c:	2001      	movs	r0, #1
    }
 800237e:	4770      	bx	lr

08002380 <_ZN8touchgfx12NoTransitionD0Ev>:
 8002380:	b510      	push	{r4, lr}
 8002382:	210c      	movs	r1, #12
 8002384:	4604      	mov	r4, r0
 8002386:	f01e f9a7 	bl	80206d8 <_ZdlPvj>
 800238a:	4620      	mov	r0, r4
 800238c:	bd10      	pop	{r4, pc}

0800238e <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800238e:	b510      	push	{r4, lr}
 8002390:	2110      	movs	r1, #16
 8002392:	4604      	mov	r4, r0
 8002394:	f01e f9a0 	bl	80206d8 <_ZdlPvj>
 8002398:	4620      	mov	r0, r4
 800239a:	bd10      	pop	{r4, pc}

0800239c <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 800239c:	b510      	push	{r4, lr}
 800239e:	f44f 71ac 	mov.w	r1, #344	; 0x158
 80023a2:	4604      	mov	r4, r0
 80023a4:	f01e f998 	bl	80206d8 <_ZdlPvj>
 80023a8:	4620      	mov	r0, r4
 80023aa:	bd10      	pop	{r4, pc}

080023ac <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED0Ev>:
class WipeTransition : public Transition
 80023ac:	b510      	push	{r4, lr}
 80023ae:	2138      	movs	r1, #56	; 0x38
 80023b0:	4604      	mov	r4, r0
 80023b2:	f01e f991 	bl	80206d8 <_ZdlPvj>
 80023b6:	4620      	mov	r0, r4
 80023b8:	bd10      	pop	{r4, pc}

080023ba <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectD0Ev>:
    class FullSolidRect : public Widget
 80023ba:	b510      	push	{r4, lr}
 80023bc:	2128      	movs	r1, #40	; 0x28
 80023be:	4604      	mov	r4, r0
 80023c0:	f01e f98a 	bl	80206d8 <_ZdlPvj>
 80023c4:	4620      	mov	r0, r4
 80023c6:	bd10      	pop	{r4, pc}

080023c8 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 80023c8:	b508      	push	{r3, lr}
        Application::getInstance()->invalidate();
 80023ca:	f00e fe69 	bl	80110a0 <_ZN8touchgfx11Application11getInstanceEv>
    }
 80023ce:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        Application::getInstance()->invalidate();
 80023d2:	f00f ba09 	b.w	80117e8 <_ZN8touchgfx11Application10invalidateEv>

080023d6 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 80023d6:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80023da:	b112      	cbz	r2, 80023e2 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 80023dc:	6803      	ldr	r3, [r0, #0]
 80023de:	695b      	ldr	r3, [r3, #20]
 80023e0:	4718      	bx	r3
    }
 80023e2:	4770      	bx	lr

080023e4 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 80023e4:	b510      	push	{r4, lr}
 80023e6:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 80023e8:	f8d0 013c 	ldr.w	r0, [r0, #316]	; 0x13c
 80023ec:	b158      	cbz	r0, 8002406 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 80023ee:	6803      	ldr	r3, [r0, #0]
 80023f0:	68db      	ldr	r3, [r3, #12]
 80023f2:	4798      	blx	r3
 80023f4:	b138      	cbz	r0, 8002406 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 80023f6:	f8d4 013c 	ldr.w	r0, [r4, #316]	; 0x13c
 80023fa:	6803      	ldr	r3, [r0, #0]
 80023fc:	689b      	ldr	r3, [r3, #8]
 80023fe:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8002400:	2300      	movs	r3, #0
 8002402:	f8c4 313c 	str.w	r3, [r4, #316]	; 0x13c
    }
 8002406:	bd10      	pop	{r4, pc}

08002408 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv>:
}

void FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl()
{
 8002408:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800240c:	e9d0 5a54 	ldrd	r5, sl, [r0, #336]	; 0x150
{
 8002410:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002412:	68a8      	ldr	r0, [r5, #8]
 8002414:	6803      	ldr	r3, [r0, #0]
 8002416:	6a1b      	ldr	r3, [r3, #32]
 8002418:	4798      	blx	r3
 800241a:	f5b0 6fc2 	cmp.w	r0, #1552	; 0x610
 800241e:	d205      	bcs.n	800242c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x24>
 8002420:	4b45      	ldr	r3, [pc, #276]	; (8002538 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x130>)
 8002422:	4a46      	ldr	r2, [pc, #280]	; (800253c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 8002424:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002426:	4846      	ldr	r0, [pc, #280]	; (8002540 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x138>)
 8002428:	f01e fa0a 	bl	8020840 <__assert_func>
 800242c:	6868      	ldr	r0, [r5, #4]
 800242e:	6803      	ldr	r3, [r0, #0]
 8002430:	6a1b      	ldr	r3, [r3, #32]
 8002432:	4798      	blx	r3
 8002434:	280f      	cmp	r0, #15
 8002436:	d803      	bhi.n	8002440 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x38>
 8002438:	4b42      	ldr	r3, [pc, #264]	; (8002544 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x13c>)
 800243a:	4a40      	ldr	r2, [pc, #256]	; (800253c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 800243c:	21a4      	movs	r1, #164	; 0xa4
 800243e:	e7f2      	b.n	8002426 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002440:	68e8      	ldr	r0, [r5, #12]
 8002442:	6803      	ldr	r3, [r0, #0]
 8002444:	6a1b      	ldr	r3, [r3, #32]
 8002446:	4798      	blx	r3
 8002448:	280b      	cmp	r0, #11
 800244a:	d803      	bhi.n	8002454 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x4c>
 800244c:	4b3e      	ldr	r3, [pc, #248]	; (8002548 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x140>)
 800244e:	4a3b      	ldr	r2, [pc, #236]	; (800253c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 8002450:	21a5      	movs	r1, #165	; 0xa5
 8002452:	e7e8      	b.n	8002426 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x1e>
    if (*currentTrans)
 8002454:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8002550 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x148>
    Application::getInstance()->clearAllTimerWidgets();
 8002458:	f00e fe22 	bl	80110a0 <_ZN8touchgfx11Application11getInstanceEv>
 800245c:	f00e fe26 	bl	80110ac <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8002460:	f8d9 0000 	ldr.w	r0, [r9]
 8002464:	b110      	cbz	r0, 800246c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 8002466:	6803      	ldr	r3, [r0, #0]
 8002468:	68db      	ldr	r3, [r3, #12]
 800246a:	4798      	blx	r3
    if (*currentTrans)
 800246c:	f8d9 0000 	ldr.w	r0, [r9]
 8002470:	b110      	cbz	r0, 8002478 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 8002472:	6803      	ldr	r3, [r0, #0]
 8002474:	681b      	ldr	r3, [r3, #0]
 8002476:	4798      	blx	r3
    if (*currentScreen)
 8002478:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 8002554 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x14c>
 800247c:	f8d8 0000 	ldr.w	r0, [r8]
 8002480:	b110      	cbz	r0, 8002488 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 8002482:	6803      	ldr	r3, [r0, #0]
 8002484:	695b      	ldr	r3, [r3, #20]
 8002486:	4798      	blx	r3
    if (*currentPresenter)
 8002488:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 800248c:	b110      	cbz	r0, 8002494 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 800248e:	6803      	ldr	r3, [r0, #0]
 8002490:	685b      	ldr	r3, [r3, #4]
 8002492:	4798      	blx	r3
    if (*currentScreen)
 8002494:	f8d8 0000 	ldr.w	r0, [r8]
 8002498:	b110      	cbz	r0, 80024a0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 800249a:	6803      	ldr	r3, [r0, #0]
 800249c:	681b      	ldr	r3, [r3, #0]
 800249e:	4798      	blx	r3
    if (*currentPresenter)
 80024a0:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 80024a4:	b110      	cbz	r0, 80024ac <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 80024a6:	6803      	ldr	r3, [r0, #0]
 80024a8:	689b      	ldr	r3, [r3, #8]
 80024aa:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80024ac:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 80024ae:	6803      	ldr	r3, [r0, #0]
 80024b0:	2100      	movs	r1, #0
 80024b2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80024b4:	4798      	blx	r3
        : screenContainer(0), done(false)
 80024b6:	f04f 0b00 	mov.w	fp, #0
 80024ba:	4b24      	ldr	r3, [pc, #144]	; (800254c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x144>)
 80024bc:	6003      	str	r3, [r0, #0]
 80024be:	4604      	mov	r4, r0
 80024c0:	f8c0 b004 	str.w	fp, [r0, #4]
 80024c4:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80024c8:	68a8      	ldr	r0, [r5, #8]
 80024ca:	6803      	ldr	r3, [r0, #0]
 80024cc:	4659      	mov	r1, fp
 80024ce:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80024d0:	4798      	blx	r3
 80024d2:	4606      	mov	r6, r0
 80024d4:	f002 fdce 	bl	8005074 <_ZN11Screen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80024d8:	6868      	ldr	r0, [r5, #4]
 80024da:	6803      	ldr	r3, [r0, #0]
 80024dc:	4659      	mov	r1, fp
 80024de:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80024e0:	4798      	blx	r3
 80024e2:	4631      	mov	r1, r6
 80024e4:	4605      	mov	r5, r0
 80024e6:	f002 fd19 	bl	8004f1c <_ZN16Screen1PresenterC1ER11Screen1View>
    *currentTrans = newTransition;
 80024ea:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 80024ee:	f8c7 5138 	str.w	r5, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 80024f2:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80024f6:	b1e5      	cbz	r5, 8002532 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x12a>
 80024f8:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 80024fa:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80024fe:	6833      	ldr	r3, [r6, #0]
    virtual void DisplayCurrentValue() {};
    virtual void DisplayChargingFinished() {};

    void bind(Model* m)
    {
        model = m;
 8002500:	f8c5 a008 	str.w	sl, [r5, #8]
 8002504:	4630      	mov	r0, r6
 8002506:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 8002508:	63f5      	str	r5, [r6, #60]	; 0x3c
 800250a:	4798      	blx	r3
    newPresenter->activate();
 800250c:	682b      	ldr	r3, [r5, #0]
 800250e:	4628      	mov	r0, r5
 8002510:	681b      	ldr	r3, [r3, #0]
 8002512:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002514:	4621      	mov	r1, r4
 8002516:	4630      	mov	r0, r6
 8002518:	f010 fa70 	bl	80129fc <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800251c:	6823      	ldr	r3, [r4, #0]
 800251e:	4620      	mov	r0, r4
 8002520:	691b      	ldr	r3, [r3, #16]
 8002522:	4798      	blx	r3
    newTransition->invalidate();
 8002524:	6823      	ldr	r3, [r4, #0]
 8002526:	695b      	ldr	r3, [r3, #20]
 8002528:	4620      	mov	r0, r4
}
 800252a:	b001      	add	sp, #4
 800252c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002530:	4718      	bx	r3
    model->bind(newPresenter);
 8002532:	462b      	mov	r3, r5
 8002534:	e7e1      	b.n	80024fa <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0xf2>
 8002536:	bf00      	nop
 8002538:	08022214 	.word	0x08022214
 800253c:	080222a2 	.word	0x080222a2
 8002540:	080223a6 	.word	0x080223a6
 8002544:	080223ed 	.word	0x080223ed
 8002548:	08022490 	.word	0x08022490
 800254c:	080226c0 	.word	0x080226c0
 8002550:	200155fc 	.word	0x200155fc
 8002554:	200155f8 	.word	0x200155f8

08002558 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreenGraphScreenWipeTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoScreenGraphScreenWipeTransitionEastImpl()
{
 8002558:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<ScreenGraphView, ScreenGraphPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800255c:	e9d0 ba54 	ldrd	fp, sl, [r0, #336]	; 0x150
{
 8002560:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002562:	f8db 0008 	ldr.w	r0, [fp, #8]
 8002566:	6803      	ldr	r3, [r0, #0]
 8002568:	6a1b      	ldr	r3, [r3, #32]
 800256a:	4798      	blx	r3
 800256c:	f242 733b 	movw	r3, #10043	; 0x273b
 8002570:	4298      	cmp	r0, r3
 8002572:	d805      	bhi.n	8002580 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x28>
 8002574:	4b56      	ldr	r3, [pc, #344]	; (80026d0 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x178>)
 8002576:	4a57      	ldr	r2, [pc, #348]	; (80026d4 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x17c>)
 8002578:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800257a:	4857      	ldr	r0, [pc, #348]	; (80026d8 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x180>)
 800257c:	f01e f960 	bl	8020840 <__assert_func>
 8002580:	f8db 0004 	ldr.w	r0, [fp, #4]
 8002584:	6803      	ldr	r3, [r0, #0]
 8002586:	6a1b      	ldr	r3, [r3, #32]
 8002588:	4798      	blx	r3
 800258a:	280f      	cmp	r0, #15
 800258c:	d803      	bhi.n	8002596 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x3e>
 800258e:	4b53      	ldr	r3, [pc, #332]	; (80026dc <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x184>)
 8002590:	4a50      	ldr	r2, [pc, #320]	; (80026d4 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x17c>)
 8002592:	21a4      	movs	r1, #164	; 0xa4
 8002594:	e7f1      	b.n	800257a <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x22>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002596:	f8db 000c 	ldr.w	r0, [fp, #12]
 800259a:	6803      	ldr	r3, [r0, #0]
 800259c:	6a1b      	ldr	r3, [r3, #32]
 800259e:	4798      	blx	r3
 80025a0:	2837      	cmp	r0, #55	; 0x37
 80025a2:	d803      	bhi.n	80025ac <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x54>
 80025a4:	4b4e      	ldr	r3, [pc, #312]	; (80026e0 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x188>)
 80025a6:	4a4b      	ldr	r2, [pc, #300]	; (80026d4 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x17c>)
 80025a8:	21a5      	movs	r1, #165	; 0xa5
 80025aa:	e7e6      	b.n	800257a <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x22>
    if (*currentTrans)
 80025ac:	f8df 9144 	ldr.w	r9, [pc, #324]	; 80026f4 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x19c>
    Application::getInstance()->clearAllTimerWidgets();
 80025b0:	f00e fd76 	bl	80110a0 <_ZN8touchgfx11Application11getInstanceEv>
 80025b4:	f00e fd7a 	bl	80110ac <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 80025b8:	f8d9 0000 	ldr.w	r0, [r9]
 80025bc:	b110      	cbz	r0, 80025c4 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x6c>
        (*currentTrans)->tearDown();
 80025be:	6803      	ldr	r3, [r0, #0]
 80025c0:	68db      	ldr	r3, [r3, #12]
 80025c2:	4798      	blx	r3
    if (*currentTrans)
 80025c4:	f8d9 0000 	ldr.w	r0, [r9]
 80025c8:	b110      	cbz	r0, 80025d0 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x78>
        (*currentTrans)->~Transition();
 80025ca:	6803      	ldr	r3, [r0, #0]
 80025cc:	681b      	ldr	r3, [r3, #0]
 80025ce:	4798      	blx	r3
    if (*currentScreen)
 80025d0:	f8df 8124 	ldr.w	r8, [pc, #292]	; 80026f8 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x1a0>
 80025d4:	f8d8 0000 	ldr.w	r0, [r8]
 80025d8:	b110      	cbz	r0, 80025e0 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x88>
        (*currentScreen)->tearDownScreen();
 80025da:	6803      	ldr	r3, [r0, #0]
 80025dc:	695b      	ldr	r3, [r3, #20]
 80025de:	4798      	blx	r3
    if (*currentPresenter)
 80025e0:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 80025e4:	b110      	cbz	r0, 80025ec <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x94>
        (*currentPresenter)->deactivate();
 80025e6:	6803      	ldr	r3, [r0, #0]
 80025e8:	685b      	ldr	r3, [r3, #4]
 80025ea:	4798      	blx	r3
    if (*currentScreen)
 80025ec:	f8d8 0000 	ldr.w	r0, [r8]
 80025f0:	b110      	cbz	r0, 80025f8 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0xa0>
        (*currentScreen)->~Screen();
 80025f2:	6803      	ldr	r3, [r0, #0]
 80025f4:	681b      	ldr	r3, [r3, #0]
 80025f6:	4798      	blx	r3
    if (*currentPresenter)
 80025f8:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 80025fc:	b110      	cbz	r0, 8002604 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0xac>
        (*currentPresenter)->~Presenter();
 80025fe:	6803      	ldr	r3, [r0, #0]
 8002600:	689b      	ldr	r3, [r3, #8]
 8002602:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002604:	f8db 000c 	ldr.w	r0, [fp, #12]
 8002608:	6803      	ldr	r3, [r0, #0]
 800260a:	2100      	movs	r1, #0
 800260c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800260e:	4798      	blx	r3
          solid()
 8002610:	4b34      	ldr	r3, [pc, #208]	; (80026e4 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x18c>)
 8002612:	6003      	str	r3, [r0, #0]
 8002614:	4604      	mov	r4, r0
 8002616:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 800261a:	8103      	strh	r3, [r0, #8]
 800261c:	2500      	movs	r5, #0
 800261e:	f44f 7380 	mov.w	r3, #256	; 0x100
 8002622:	6045      	str	r5, [r0, #4]
 8002624:	7285      	strb	r5, [r0, #10]
 8002626:	6363      	str	r3, [r4, #52]	; 0x34
    class FullSolidRect : public Widget
 8002628:	4b2f      	ldr	r3, [pc, #188]	; (80026e8 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x190>)
 800262a:	6123      	str	r3, [r4, #16]
            targetValue = HAL::DISPLAY_WIDTH;
 800262c:	4b2f      	ldr	r3, [pc, #188]	; (80026ec <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x194>)
          solid()
 800262e:	81e5      	strh	r5, [r4, #14]
            targetValue = HAL::DISPLAY_WIDTH;
 8002630:	f9b3 1000 	ldrsh.w	r1, [r3]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8002634:	4b2e      	ldr	r3, [pc, #184]	; (80026f0 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x198>)
            targetValue = HAL::DISPLAY_WIDTH;
 8002636:	81a1      	strh	r1, [r4, #12]
          solid()
 8002638:	3010      	adds	r0, #16
 800263a:	e9c4 5505 	strd	r5, r5, [r4, #20]
 800263e:	e9c4 5507 	strd	r5, r5, [r4, #28]
 8002642:	e9c4 5509 	strd	r5, r5, [r4, #36]	; 0x24
 8002646:	e9c4 550b 	strd	r5, r5, [r4, #44]	; 0x2c
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 800264a:	f9b3 6000 	ldrsh.w	r6, [r3]
        setWidth(width);
 800264e:	9001      	str	r0, [sp, #4]
 8002650:	f7ff fe1e 	bl	8002290 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8002654:	6923      	ldr	r3, [r4, #16]
 8002656:	9801      	ldr	r0, [sp, #4]
 8002658:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800265a:	4631      	mov	r1, r6
 800265c:	4798      	blx	r3
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800265e:	f8db 0008 	ldr.w	r0, [fp, #8]
 8002662:	6803      	ldr	r3, [r0, #0]
 8002664:	4629      	mov	r1, r5
 8002666:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002668:	4798      	blx	r3
 800266a:	4606      	mov	r6, r0
 800266c:	f003 f876 	bl	800575c <_ZN15ScreenGraphViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002670:	f8db 0004 	ldr.w	r0, [fp, #4]
 8002674:	6803      	ldr	r3, [r0, #0]
 8002676:	4629      	mov	r1, r5
 8002678:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800267a:	4798      	blx	r3
 800267c:	4631      	mov	r1, r6
 800267e:	4605      	mov	r5, r0
 8002680:	f002 fd52 	bl	8005128 <_ZN20ScreenGraphPresenterC1ER15ScreenGraphView>
    *currentTrans = newTransition;
 8002684:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8002688:	f8c7 5138 	str.w	r5, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 800268c:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8002690:	b1e5      	cbz	r5, 80026cc <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x174>
 8002692:	1d2b      	adds	r3, r5, #4
 8002694:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8002698:	6833      	ldr	r3, [r6, #0]
 800269a:	f8c5 a008 	str.w	sl, [r5, #8]
 800269e:	4630      	mov	r0, r6
 80026a0:	68db      	ldr	r3, [r3, #12]
 80026a2:	63f5      	str	r5, [r6, #60]	; 0x3c
 80026a4:	4798      	blx	r3
    newPresenter->activate();
 80026a6:	682b      	ldr	r3, [r5, #0]
 80026a8:	4628      	mov	r0, r5
 80026aa:	681b      	ldr	r3, [r3, #0]
 80026ac:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80026ae:	4621      	mov	r1, r4
 80026b0:	4630      	mov	r0, r6
 80026b2:	f010 f9a3 	bl	80129fc <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80026b6:	6823      	ldr	r3, [r4, #0]
 80026b8:	4620      	mov	r0, r4
 80026ba:	691b      	ldr	r3, [r3, #16]
 80026bc:	4798      	blx	r3
    newTransition->invalidate();
 80026be:	6823      	ldr	r3, [r4, #0]
 80026c0:	695b      	ldr	r3, [r3, #20]
 80026c2:	4620      	mov	r0, r4
}
 80026c4:	b003      	add	sp, #12
 80026c6:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80026ca:	4718      	bx	r3
    model->bind(newPresenter);
 80026cc:	462b      	mov	r3, r5
 80026ce:	e7e1      	b.n	8002694 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x13c>
 80026d0:	08022214 	.word	0x08022214
 80026d4:	08022533 	.word	0x08022533
 80026d8:	080223a6 	.word	0x080223a6
 80026dc:	080223ed 	.word	0x080223ed
 80026e0:	08022490 	.word	0x08022490
 80026e4:	0802274c 	.word	0x0802274c
 80026e8:	080226e4 	.word	0x080226e4
 80026ec:	200155a8 	.word	0x200155a8
 80026f0:	200155aa 	.word	0x200155aa
 80026f4:	200155fc 	.word	0x200155fc
 80026f8:	200155f8 	.word	0x200155f8

080026fc <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80026fc:	4b04      	ldr	r3, [pc, #16]	; (8002710 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 80026fe:	681b      	ldr	r3, [r3, #0]
 8002700:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8002704:	b10a      	cbz	r2, 800270a <_ZN8touchgfx3HAL3lcdEv+0xe>
 8002706:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8002708:	b900      	cbnz	r0, 800270c <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 800270a:	6898      	ldr	r0, [r3, #8]
    }
 800270c:	4770      	bx	lr
 800270e:	bf00      	nop
 8002710:	200155b4 	.word	0x200155b4

08002714 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
 8002714:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002716:	4604      	mov	r4, r0
        animationCounter++;
 8002718:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter <= (animationSteps))
 800271a:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 800271c:	3001      	adds	r0, #1
 800271e:	b2c0      	uxtb	r0, r0
        if (animationCounter <= (animationSteps))
 8002720:	4298      	cmp	r0, r3
    virtual void handleTickEvent()
 8002722:	b089      	sub	sp, #36	; 0x24
        animationCounter++;
 8002724:	72a0      	strb	r0, [r4, #10]
        if (animationCounter <= (animationSteps))
 8002726:	d850      	bhi.n	80027ca <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xb6>
            calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8002728:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800272c:	2100      	movs	r1, #0
 800272e:	f010 f96b 	bl	8012a08 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
            if (calculatedValue % 2)
 8002732:	f010 0201 	ands.w	r2, r0, #1
 8002736:	b283      	uxth	r3, r0
 8002738:	d04d      	beq.n	80027d6 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xc2>
                calculatedValue += (calculatedValue > 0 ? 1 : -1);
 800273a:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800273e:	2800      	cmp	r0, #0
 8002740:	bfd8      	it	le
 8002742:	460a      	movle	r2, r1
 8002744:	4413      	add	r3, r2
 8002746:	81e3      	strh	r3, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8002748:	4e24      	ldr	r6, [pc, #144]	; (80027dc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xc8>)
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 800274a:	4f25      	ldr	r7, [pc, #148]	; (80027e0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xcc>)
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800274c:	8831      	ldrh	r1, [r6, #0]
                const uint16_t prevSolidWidth = solid.getWidth();
 800274e:	f8b4 c018 	ldrh.w	ip, [r4, #24]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8002752:	89e3      	ldrh	r3, [r4, #14]
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 8002754:	f9b7 0000 	ldrsh.w	r0, [r7]
 8002758:	f8ad 001e 	strh.w	r0, [sp, #30]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800275c:	1aca      	subs	r2, r1, r3
                screenContainer->invalidateRect(r);
 800275e:	6860      	ldr	r0, [r4, #4]
                const uint16_t delta = prevSolidWidth - solid.getWidth();
 8002760:	4463      	add	r3, ip
 8002762:	1a5b      	subs	r3, r3, r1
 8002764:	f8ad 301c 	strh.w	r3, [sp, #28]
                screenContainer->invalidateRect(r);
 8002768:	6803      	ldr	r3, [r0, #0]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800276a:	b212      	sxth	r2, r2
 800276c:	2500      	movs	r5, #0
                screenContainer->invalidateRect(r);
 800276e:	691b      	ldr	r3, [r3, #16]
        rect.width = width;
 8002770:	8322      	strh	r2, [r4, #24]
 8002772:	f8ad 2018 	strh.w	r2, [sp, #24]
 8002776:	f8ad 501a 	strh.w	r5, [sp, #26]
 800277a:	a906      	add	r1, sp, #24
 800277c:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 800277e:	7aa3      	ldrb	r3, [r4, #10]
 8002780:	2b01      	cmp	r3, #1
 8002782:	d126      	bne.n	80027d2 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xbe>
 8002784:	4b17      	ldr	r3, [pc, #92]	; (80027e4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xd0>)
 8002786:	781b      	ldrb	r3, [r3, #0]
 8002788:	b31b      	cbz	r3, 80027d2 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xbe>
            Rect rect = solid.getRect(); // Part to copy between buffers
 800278a:	69a1      	ldr	r1, [r4, #24]
 800278c:	6960      	ldr	r0, [r4, #20]
 800278e:	ab04      	add	r3, sp, #16
 8002790:	c303      	stmia	r3!, {r0, r1}
        return instance;
 8002792:	4b15      	ldr	r3, [pc, #84]	; (80027e8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xd4>)
 8002794:	6818      	ldr	r0, [r3, #0]
            uint16_t* tftFb = HAL::getInstance()->getTFTFrameBuffer();
 8002796:	6803      	ldr	r3, [r0, #0]
 8002798:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800279a:	4798      	blx	r3
            source.width = HAL::DISPLAY_WIDTH;
 800279c:	8833      	ldrh	r3, [r6, #0]
 800279e:	f8ad 301c 	strh.w	r3, [sp, #28]
            source.height = HAL::DISPLAY_HEIGHT;
 80027a2:	883b      	ldrh	r3, [r7, #0]
 80027a4:	f8ad 301e 	strh.w	r3, [sp, #30]
            uint16_t* tftFb = HAL::getInstance()->getTFTFrameBuffer();
 80027a8:	9003      	str	r0, [sp, #12]
        : x(0), y(0), width(0), height(0)
 80027aa:	f8ad 5018 	strh.w	r5, [sp, #24]
 80027ae:	f8ad 501a 	strh.w	r5, [sp, #26]
            HAL::getInstance()->lcd().blitCopy((const uint16_t*)tftFb, source, rect, 255, false);
 80027b2:	f7ff ffa3 	bl	80026fc <_ZN8touchgfx3HAL3lcdEv>
 80027b6:	22ff      	movs	r2, #255	; 0xff
 80027b8:	6803      	ldr	r3, [r0, #0]
 80027ba:	9200      	str	r2, [sp, #0]
 80027bc:	9501      	str	r5, [sp, #4]
 80027be:	68dc      	ldr	r4, [r3, #12]
 80027c0:	9903      	ldr	r1, [sp, #12]
 80027c2:	ab04      	add	r3, sp, #16
 80027c4:	aa06      	add	r2, sp, #24
 80027c6:	47a0      	blx	r4
 80027c8:	e003      	b.n	80027d2 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xbe>
            done = true;
 80027ca:	2301      	movs	r3, #1
 80027cc:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 80027ce:	2300      	movs	r3, #0
 80027d0:	72a3      	strb	r3, [r4, #10]
    }
 80027d2:	b009      	add	sp, #36	; 0x24
 80027d4:	bdf0      	pop	{r4, r5, r6, r7, pc}
            calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 80027d6:	81e0      	strh	r0, [r4, #14]
 80027d8:	e7b6      	b.n	8002748 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x34>
 80027da:	bf00      	nop
 80027dc:	200155a8 	.word	0x200155a8
 80027e0:	200155aa 	.word	0x200155aa
 80027e4:	200155b2 	.word	0x200155b2
 80027e8:	200155b4 	.word	0x200155b4

080027ec <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 80027ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80027ee:	4604      	mov	r4, r0
 80027f0:	4617      	mov	r7, r2
 80027f2:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 80027f4:	f00e fc74 	bl	80110e0 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 80027f8:	4b0e      	ldr	r3, [pc, #56]	; (8002834 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x48>)
 80027fa:	601c      	str	r4, [r3, #0]
      model(m)
 80027fc:	4b0e      	ldr	r3, [pc, #56]	; (8002838 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x4c>)
 80027fe:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 8002800:	4b0e      	ldr	r3, [pc, #56]	; (800283c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
          pendingScreenTransitionCallback(0)
 8002802:	2500      	movs	r5, #0
 8002804:	e9c4 3550 	strd	r3, r5, [r4, #320]	; 0x140
 8002808:	4b0d      	ldr	r3, [pc, #52]	; (8002840 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 800280a:	e9c4 5552 	strd	r5, r5, [r4, #328]	; 0x148
 800280e:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 8002810:	6803      	ldr	r3, [r0, #0]
 8002812:	4629      	mov	r1, r5
 8002814:	689b      	ldr	r3, [r3, #8]
 8002816:	e9c4 554e 	strd	r5, r5, [r4, #312]	; 0x138
      model(m)
 800281a:	e9c4 7654 	strd	r7, r6, [r4, #336]	; 0x150
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 800281e:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 8002820:	4628      	mov	r0, r5
 8002822:	f002 fa97 	bl	8004d54 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8002826:	f7ff ff69 	bl	80026fc <_ZN8touchgfx3HAL3lcdEv>
 800282a:	f016 fd46 	bl	80192ba <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
}
 800282e:	4620      	mov	r0, r4
 8002830:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002832:	bf00      	nop
 8002834:	20015608 	.word	0x20015608
 8002838:	08022674 	.word	0x08022674
 800283c:	0802265c 	.word	0x0802265c
 8002840:	200155b4 	.word	0x200155b4

08002844 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002844:	4b06      	ldr	r3, [pc, #24]	; (8002860 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv+0x1c>)
 8002846:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 800284a:	2300      	movs	r3, #0
 800284c:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
    pendingScreenTransitionCallback = &transitionCallback;
 8002850:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8002854:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8002858:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 800285c:	4770      	bx	lr
 800285e:	bf00      	nop
 8002860:	08002409 	.word	0x08002409

08002864 <_ZN23FrontendApplicationBase39gotoScreenGraphScreenWipeTransitionEastEv>:
 8002864:	4b06      	ldr	r3, [pc, #24]	; (8002880 <_ZN23FrontendApplicationBase39gotoScreenGraphScreenWipeTransitionEastEv+0x1c>)
 8002866:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 800286a:	2300      	movs	r3, #0
 800286c:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
    pendingScreenTransitionCallback = &transitionCallback;
 8002870:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8002874:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8002878:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 800287c:	4770      	bx	lr
 800287e:	bf00      	nop
 8002880:	08002559 	.word	0x08002559

08002884 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8002884:	6a00      	ldr	r0, [r0, #32]
 8002886:	4770      	bx	lr

08002888 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8002888:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800288a:	4770      	bx	lr

0800288c <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 800288c:	4770      	bx	lr

0800288e <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 800288e:	888b      	ldrh	r3, [r1, #4]
 8002890:	6980      	ldr	r0, [r0, #24]
 8002892:	680a      	ldr	r2, [r1, #0]
 8002894:	0adb      	lsrs	r3, r3, #11
 8002896:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 800289a:	4410      	add	r0, r2
 800289c:	4770      	bx	lr

0800289e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 800289e:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 80028a0:	b1c2      	cbz	r2, 80028d4 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 80028a2:	7b13      	ldrb	r3, [r2, #12]
 80028a4:	b1b3      	cbz	r3, 80028d4 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 80028a6:	7b54      	ldrb	r4, [r2, #13]
 80028a8:	7ad2      	ldrb	r2, [r2, #11]
 80028aa:	0224      	lsls	r4, r4, #8
 80028ac:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 80028b0:	4314      	orrs	r4, r2
 80028b2:	69c2      	ldr	r2, [r0, #28]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 80028b4:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 80028b6:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 80028ba:	8813      	ldrh	r3, [r2, #0]
 80028bc:	428b      	cmp	r3, r1
 80028be:	d102      	bne.n	80028c6 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 80028c0:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 80028c4:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 80028c6:	d805      	bhi.n	80028d4 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 80028c8:	3801      	subs	r0, #1
 80028ca:	b280      	uxth	r0, r0
 80028cc:	3204      	adds	r2, #4
 80028ce:	2800      	cmp	r0, #0
 80028d0:	d1f3      	bne.n	80028ba <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 80028d2:	e7f7      	b.n	80028c4 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 80028d4:	2000      	movs	r0, #0
 80028d6:	e7f5      	b.n	80028c4 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

080028d8 <_ZN8touchgfx13GeneratedFontD0Ev>:
 80028d8:	b510      	push	{r4, lr}
 80028da:	2128      	movs	r1, #40	; 0x28
 80028dc:	4604      	mov	r4, r0
 80028de:	f01d fefb 	bl	80206d8 <_ZdlPvj>
 80028e2:	4620      	mov	r0, r4
 80028e4:	bd10      	pop	{r4, pc}
	...

080028e8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* list, uint16_t size, uint16_t height, uint8_t pixBelowBase, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 80028e8:	b530      	push	{r4, r5, lr}
 80028ea:	b089      	sub	sp, #36	; 0x24
 80028ec:	4604      	mov	r4, r0
      arabicTable(formsTable)
 80028ee:	f8bd 5050 	ldrh.w	r5, [sp, #80]	; 0x50
 80028f2:	9506      	str	r5, [sp, #24]
 80028f4:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 80028f8:	9505      	str	r5, [sp, #20]
 80028fa:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 80028fe:	9504      	str	r5, [sp, #16]
 8002900:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 8002904:	9503      	str	r5, [sp, #12]
 8002906:	f89d 5038 	ldrb.w	r5, [sp, #56]	; 0x38
 800290a:	9502      	str	r5, [sp, #8]
 800290c:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 8002910:	9501      	str	r5, [sp, #4]
 8002912:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 8002916:	9500      	str	r5, [sp, #0]
 8002918:	f00f fc06 	bl	8012128 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>
 800291c:	4b06      	ldr	r3, [pc, #24]	; (8002938 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x50>)
 800291e:	6023      	str	r3, [r4, #0]
 8002920:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8002922:	61a3      	str	r3, [r4, #24]
 8002924:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8002926:	61e3      	str	r3, [r4, #28]
 8002928:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800292a:	6223      	str	r3, [r4, #32]
 800292c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800292e:	6263      	str	r3, [r4, #36]	; 0x24
}
 8002930:	4620      	mov	r0, r4
 8002932:	b009      	add	sp, #36	; 0x24
 8002934:	bd30      	pop	{r4, r5, pc}
 8002936:	bf00      	nop
 8002938:	08022770 	.word	0x08022770

0800293c <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 800293c:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800293e:	4770      	bx	lr

08002940 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 8002940:	4770      	bx	lr

08002942 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 8002942:	4770      	bx	lr

08002944 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 8002944:	4770      	bx	lr

08002946 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 8002946:	4770      	bx	lr

08002948 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 8002948:	4770      	bx	lr

0800294a <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
 800294a:	b530      	push	{r4, r5, lr}
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
 800294c:	6803      	ldr	r3, [r0, #0]
 800294e:	8101      	strh	r1, [r0, #8]
    virtual void setWidth(int16_t width)
 8002950:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 8002952:	466d      	mov	r5, sp
 8002954:	4601      	mov	r1, r0
 8002956:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setWidth(int16_t width)
 800295a:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 800295c:	4628      	mov	r0, r5
 800295e:	4798      	blx	r3
 8002960:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002964:	343c      	adds	r4, #60	; 0x3c
 8002966:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 800296a:	b005      	add	sp, #20
 800296c:	bd30      	pop	{r4, r5, pc}

0800296e <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 800296e:	b530      	push	{r4, r5, lr}
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
 8002970:	6803      	ldr	r3, [r0, #0]
        rect.height = height;
 8002972:	8141      	strh	r1, [r0, #10]
    virtual void setHeight(int16_t height)
 8002974:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 8002976:	466d      	mov	r5, sp
 8002978:	4601      	mov	r1, r0
 800297a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setHeight(int16_t height)
 800297e:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8002980:	4628      	mov	r0, r5
 8002982:	4798      	blx	r3
 8002984:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002988:	343c      	adds	r4, #60	; 0x3c
 800298a:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 800298e:	b005      	add	sp, #20
 8002990:	bd30      	pop	{r4, r5, pc}

08002992 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 8002992:	2200      	movs	r2, #0
 8002994:	8002      	strh	r2, [r0, #0]
 8002996:	8042      	strh	r2, [r0, #2]
 8002998:	8082      	strh	r2, [r0, #4]
 800299a:	80c2      	strh	r2, [r0, #6]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 800299c:	4770      	bx	lr

0800299e <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 800299e:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
    }
 80029a2:	4770      	bx	lr

080029a4 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80029a4:	b570      	push	{r4, r5, r6, lr}
    {
        setX(x);
 80029a6:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80029a8:	4604      	mov	r4, r0
        setX(x);
 80029aa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80029ac:	4615      	mov	r5, r2
        setX(x);
 80029ae:	4798      	blx	r3
        setBaselineY(baselineY);
 80029b0:	6823      	ldr	r3, [r4, #0]
 80029b2:	4629      	mov	r1, r5
 80029b4:	4620      	mov	r0, r4
 80029b6:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    }
 80029b8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 80029bc:	4718      	bx	r3

080029be <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
 80029be:	2000      	movs	r0, #0
 80029c0:	4770      	bx	lr

080029c2 <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 80029c2:	6c80      	ldr	r0, [r0, #72]	; 0x48
 80029c4:	4770      	bx	lr

080029c6 <_ZN15Screen1ViewBaseD1Ev>:

class Screen1ViewBase : public touchgfx::View<Screen1Presenter>
{
public:
    Screen1ViewBase();
    virtual ~Screen1ViewBase() {}
 80029c6:	4770      	bx	lr

080029c8 <_ZN15Screen1ViewBase17ButtonDownClickedEv>:
     * Virtual Action Handlers
     */
    virtual void ButtonDownClicked()
    {
        // Override and implement this function in Screen1
    }
 80029c8:	4770      	bx	lr

080029ca <_ZN15Screen1ViewBase15ButtonUpClickedEv>:

    virtual void ButtonUpClicked()
    {
        // Override and implement this function in Screen1
    }
 80029ca:	4770      	bx	lr

080029cc <_ZN15Screen1ViewBase18ButtonStartClickedEv>:

    virtual void ButtonStartClicked()
    {
        // Override and implement this function in Screen1
    }
 80029cc:	4770      	bx	lr

080029ce <_ZN15Screen1ViewBase19ButtonUpTimeClickedEv>:

    virtual void ButtonUpTimeClicked()
    {
        // Override and implement this function in Screen1
    }
 80029ce:	4770      	bx	lr

080029d0 <_ZN15Screen1ViewBase21ButtonDownTimeClickedEv>:

    virtual void ButtonDownTimeClicked()
    {
        // Override and implement this function in Screen1
    }
 80029d0:	4770      	bx	lr

080029d2 <_ZN15Screen1ViewBase11setupScreenEv>:
}

void Screen1ViewBase::setupScreen()
{

}
 80029d2:	4770      	bx	lr

080029d4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>:
 * @tparam T Generic type parameter. Typically a AbstractButtonContainer subclass.
 *
 * @see AbstractButtonContainer, BoxWithBorder
 */
template <class T>
class BoxWithBorderButtonStyle : public T
 80029d4:	4770      	bx	lr

080029d6 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>:
     *
     * @see setPressed
     */
    bool getPressed()
    {
        return pressed;
 80029d6:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
    colortype borderDown;    ///< The border down

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
    {
        borderBox.setColor(T::getPressed() ? down : up);
 80029da:	b14b      	cbz	r3, 80029f0 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x1a>
 80029dc:	f100 026c 	add.w	r2, r0, #108	; 0x6c
 80029e0:	6812      	ldr	r2, [r2, #0]
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 80029e2:	65c2      	str	r2, [r0, #92]	; 0x5c
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 80029e4:	b13b      	cbz	r3, 80029f6 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x20>
 80029e6:	f100 0374 	add.w	r3, r0, #116	; 0x74
 80029ea:	681b      	ldr	r3, [r3, #0]
     *
     * @see setColor, getBorderColor, Color::getColorFromRGB
     */
    void setBorderColor(colortype colorBorder)
    {
        borderColor = colorBorder;
 80029ec:	6603      	str	r3, [r0, #96]	; 0x60
        T::handlePressedUpdated();
    }
 80029ee:	4770      	bx	lr
        borderBox.setColor(T::getPressed() ? down : up);
 80029f0:	f100 0268 	add.w	r2, r0, #104	; 0x68
 80029f4:	e7f4      	b.n	80029e0 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0xa>
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 80029f6:	f100 0370 	add.w	r3, r0, #112	; 0x70
 80029fa:	e7f6      	b.n	80029ea <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x14>

080029fc <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80029fc:	4770      	bx	lr

080029fe <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
 80029fe:	4770      	bx	lr

08002a00 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED1Ev>:
 * The position of the icon can be adjusted with setIconXY.
 *
 * @see AbstractButtonContainer
 */
template <class T>
class IconButtonStyle : public T
 8002a00:	4770      	bx	lr

08002a02 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 8002a02:	4770      	bx	lr

08002a04 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8002a04:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002a06:	68c2      	ldr	r2, [r0, #12]
 8002a08:	6844      	ldr	r4, [r0, #4]
 8002a0a:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002a0c:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002a0e:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002a12:	07d2      	lsls	r2, r2, #31
 8002a14:	bf48      	it	mi
 8002a16:	5962      	ldrmi	r2, [r4, r5]
 8002a18:	689b      	ldr	r3, [r3, #8]
    }
 8002a1a:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002a1c:	bf48      	it	mi
 8002a1e:	58d3      	ldrmi	r3, [r2, r3]
 8002a20:	4718      	bx	r3

08002a22 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8002a22:	6843      	ldr	r3, [r0, #4]
 8002a24:	b12b      	cbz	r3, 8002a32 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x10>
 8002a26:	6883      	ldr	r3, [r0, #8]
 8002a28:	b92b      	cbnz	r3, 8002a36 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 8002a2a:	68c0      	ldr	r0, [r0, #12]
 8002a2c:	f000 0001 	and.w	r0, r0, #1
 8002a30:	4770      	bx	lr
 8002a32:	4618      	mov	r0, r3
 8002a34:	4770      	bx	lr
 8002a36:	2001      	movs	r0, #1
    }
 8002a38:	4770      	bx	lr

08002a3a <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8002a3a:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002a3c:	68c2      	ldr	r2, [r0, #12]
 8002a3e:	6844      	ldr	r4, [r0, #4]
 8002a40:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002a42:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002a44:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002a48:	07d2      	lsls	r2, r2, #31
 8002a4a:	bf48      	it	mi
 8002a4c:	5962      	ldrmi	r2, [r4, r5]
 8002a4e:	689b      	ldr	r3, [r3, #8]
    }
 8002a50:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002a52:	bf48      	it	mi
 8002a54:	58d3      	ldrmi	r3, [r2, r3]
 8002a56:	4718      	bx	r3

08002a58 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8002a58:	6843      	ldr	r3, [r0, #4]
 8002a5a:	b12b      	cbz	r3, 8002a68 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8002a5c:	6883      	ldr	r3, [r0, #8]
 8002a5e:	b92b      	cbnz	r3, 8002a6c <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8002a60:	68c0      	ldr	r0, [r0, #12]
 8002a62:	f000 0001 	and.w	r0, r0, #1
 8002a66:	4770      	bx	lr
 8002a68:	4618      	mov	r0, r3
 8002a6a:	4770      	bx	lr
 8002a6c:	2001      	movs	r0, #1
    }
 8002a6e:	4770      	bx	lr

08002a70 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE18handleAlphaUpdatedEv>:
    }

    /** @copydoc Image::getAlpha() */
    uint8_t getAlpha() const
    {
        return alpha;
 8002a70:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
     *
     * @note The user code must call invalidate() in order to update the display.
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002a74:	f880 30a4 	strb.w	r3, [r0, #164]	; 0xa4
    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002a78:	f880 305a 	strb.w	r3, [r0, #90]	; 0x5a
    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        iconImage.setAlpha(T::getAlpha());
        T::handleAlphaUpdated();
    }
 8002a7c:	4770      	bx	lr

08002a7e <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE18handleAlphaUpdatedEv>:
 8002a7e:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
 8002a82:	f880 305a 	strb.w	r3, [r0, #90]	; 0x5a
    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        borderBox.setAlpha(T::getAlpha());
        T::handleAlphaUpdated();
    }
 8002a86:	4770      	bx	lr

08002a88 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>:
    virtual void handlePressedUpdated()
 8002a88:	b510      	push	{r4, lr}
 8002a8a:	4604      	mov	r4, r0
        iconImage.setBitmap(T::getPressed() ? iconPressed : iconReleased);
 8002a8c:	307c      	adds	r0, #124	; 0x7c
 8002a8e:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 8002a92:	b13b      	cbz	r3, 8002aa4 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0x1c>
 8002a94:	f104 017a 	add.w	r1, r4, #122	; 0x7a
 8002a98:	f00b fe54 	bl	800e744 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        T::handlePressedUpdated();
 8002a9c:	4620      	mov	r0, r4
 8002a9e:	f7ff ff9a 	bl	80029d6 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
    }
 8002aa2:	bd10      	pop	{r4, pc}
        iconImage.setBitmap(T::getPressed() ? iconPressed : iconReleased);
 8002aa4:	f104 0178 	add.w	r1, r4, #120	; 0x78
 8002aa8:	e7f6      	b.n	8002a98 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0x10>

08002aaa <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 8002aaa:	b510      	push	{r4, lr}
 8002aac:	214c      	movs	r1, #76	; 0x4c
 8002aae:	4604      	mov	r4, r0
 8002ab0:	f01d fe12 	bl	80206d8 <_ZdlPvj>
 8002ab4:	4620      	mov	r0, r4
 8002ab6:	bd10      	pop	{r4, pc}

08002ab8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED0Ev>:
class BoxWithBorderButtonStyle : public T
 8002ab8:	b510      	push	{r4, lr}
 8002aba:	2178      	movs	r1, #120	; 0x78
 8002abc:	4604      	mov	r4, r0
 8002abe:	f01d fe0b 	bl	80206d8 <_ZdlPvj>
 8002ac2:	4620      	mov	r0, r4
 8002ac4:	bd10      	pop	{r4, pc}

08002ac6 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED0Ev>:
class IconButtonStyle : public T
 8002ac6:	b510      	push	{r4, lr}
 8002ac8:	21a8      	movs	r1, #168	; 0xa8
 8002aca:	4604      	mov	r4, r0
 8002acc:	f01d fe04 	bl	80206d8 <_ZdlPvj>
 8002ad0:	4620      	mov	r0, r4
 8002ad2:	bd10      	pop	{r4, pc}

08002ad4 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002ad4:	b510      	push	{r4, lr}
 8002ad6:	2110      	movs	r1, #16
 8002ad8:	4604      	mov	r4, r0
 8002ada:	f01d fdfd 	bl	80206d8 <_ZdlPvj>
 8002ade:	4620      	mov	r0, r4
 8002ae0:	bd10      	pop	{r4, pc}

08002ae2 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
 8002ae2:	b510      	push	{r4, lr}
 8002ae4:	2110      	movs	r1, #16
 8002ae6:	4604      	mov	r4, r0
 8002ae8:	f01d fdf6 	bl	80206d8 <_ZdlPvj>
 8002aec:	4620      	mov	r0, r4
 8002aee:	bd10      	pop	{r4, pc}

08002af0 <_ZN15Screen1ViewBaseD0Ev>:
    virtual ~Screen1ViewBase() {}
 8002af0:	b510      	push	{r4, lr}
 8002af2:	f44f 61c2 	mov.w	r1, #1552	; 0x610
 8002af6:	4604      	mov	r4, r0
 8002af8:	f01d fdee 	bl	80206d8 <_ZdlPvj>
 8002afc:	4620      	mov	r0, r4
 8002afe:	bd10      	pop	{r4, pc}

08002b00 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv>:
    /**
     * Executes the previously set action.
     *
     * @see setAction
     */
    virtual void executeAction()
 8002b00:	b510      	push	{r4, lr}
 8002b02:	4604      	mov	r4, r0
    {
        if (action && action->isValid())
 8002b04:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8002b06:	b150      	cbz	r0, 8002b1e <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1e>
 8002b08:	6803      	ldr	r3, [r0, #0]
 8002b0a:	68db      	ldr	r3, [r3, #12]
 8002b0c:	4798      	blx	r3
 8002b0e:	b130      	cbz	r0, 8002b1e <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1e>
        {
            action->execute(*this);
 8002b10:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8002b12:	6803      	ldr	r3, [r0, #0]
 8002b14:	4621      	mov	r1, r4
 8002b16:	689b      	ldr	r3, [r3, #8]
        }
    }
 8002b18:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            action->execute(*this);
 8002b1c:	4718      	bx	r3
    }
 8002b1e:	bd10      	pop	{r4, pc}

08002b20 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:
    }
}

void Screen1ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &ButtonDown)
 8002b20:	f100 02c4 	add.w	r2, r0, #196	; 0xc4
 8002b24:	4291      	cmp	r1, r2
 8002b26:	d102      	bne.n	8002b2e <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xe>
    {
        //ButtonUpInteraction
        //When ButtonDown clicked call virtual function
        //Call ButtonDownClicked
        ButtonDownClicked();
 8002b28:	6803      	ldr	r3, [r0, #0]
 8002b2a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    else if (&src == &ButtonUpTime)
    {
        //InteractionButtonUpTimeClicked
        //When ButtonUpTime clicked call virtual function
        //Call ButtonUpTimeClicked
        ButtonUpTimeClicked();
 8002b2c:	4718      	bx	r3
    else if (&src == &ButtonUp)
 8002b2e:	f500 72b6 	add.w	r2, r0, #364	; 0x16c
 8002b32:	4291      	cmp	r1, r2
 8002b34:	d102      	bne.n	8002b3c <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1c>
        ButtonUpClicked();
 8002b36:	6803      	ldr	r3, [r0, #0]
 8002b38:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002b3a:	e7f7      	b.n	8002b2c <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xc>
    else if (&src == &ButtonDownTime)
 8002b3c:	f200 4224 	addw	r2, r0, #1060	; 0x424
 8002b40:	4291      	cmp	r1, r2
 8002b42:	d102      	bne.n	8002b4a <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x2a>
        ButtonDownTimeClicked();
 8002b44:	6803      	ldr	r3, [r0, #0]
 8002b46:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8002b48:	e7f0      	b.n	8002b2c <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xc>
    else if (&src == &ButtonUpTime)
 8002b4a:	f200 42cc 	addw	r2, r0, #1228	; 0x4cc
 8002b4e:	4291      	cmp	r1, r2
 8002b50:	d102      	bne.n	8002b58 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x38>
        ButtonUpTimeClicked();
 8002b52:	6803      	ldr	r3, [r0, #0]
 8002b54:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002b56:	e7e9      	b.n	8002b2c <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xc>
    }
}
 8002b58:	4770      	bx	lr

08002b5a <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE>:
     *
     * @return The click type of this event.
     */
    ClickEventType getType() const
    {
        return clickEventType;
 8002b5a:	790b      	ldrb	r3, [r1, #4]
     *
     * @param  event The click event.
     *
     * @see setAction, setPressed, getPressed
     */
    virtual void handleClickEvent(const ClickEvent& event)
 8002b5c:	b570      	push	{r4, r5, r6, lr}
        return pressed;
 8002b5e:	f890 602c 	ldrb.w	r6, [r0, #44]	; 0x2c
 8002b62:	4604      	mov	r4, r0
 8002b64:	460d      	mov	r5, r1
    {
        bool wasPressed = getPressed();
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 8002b66:	b99b      	cbnz	r3, 8002b90 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x36>
 8002b68:	b98e      	cbnz	r6, 8002b8e <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
 8002b6a:	fab3 f383 	clz	r3, r3
 8002b6e:	095b      	lsrs	r3, r3, #5
 8002b70:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
        handlePressedUpdated();
 8002b74:	6823      	ldr	r3, [r4, #0]
 8002b76:	4620      	mov	r0, r4
 8002b78:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8002b7c:	4798      	blx	r3
        {
            setPressed(newPressedValue);
            invalidate();
 8002b7e:	6823      	ldr	r3, [r4, #0]
 8002b80:	4620      	mov	r0, r4
 8002b82:	695b      	ldr	r3, [r3, #20]
 8002b84:	4798      	blx	r3
        }
        if (wasPressed && (event.getType() == ClickEvent::RELEASED))
 8002b86:	b116      	cbz	r6, 8002b8e <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
 8002b88:	792b      	ldrb	r3, [r5, #4]
 8002b8a:	2b01      	cmp	r3, #1
 8002b8c:	d003      	beq.n	8002b96 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x3c>
        {
            executeAction();
        }
    }
 8002b8e:	bd70      	pop	{r4, r5, r6, pc}
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 8002b90:	2e00      	cmp	r6, #0
 8002b92:	d0fc      	beq.n	8002b8e <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
 8002b94:	e7e9      	b.n	8002b6a <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x10>
            executeAction();
 8002b96:	6823      	ldr	r3, [r4, #0]
 8002b98:	4620      	mov	r0, r4
 8002b9a:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
    }
 8002b9e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            executeAction();
 8002ba2:	4718      	bx	r3

08002ba4 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8002ba4:	6803      	ldr	r3, [r0, #0]
    virtual void setBaselineY(int16_t baselineY)
 8002ba6:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8002ba8:	6b5e      	ldr	r6, [r3, #52]	; 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002baa:	4b12      	ldr	r3, [pc, #72]	; (8002bf4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 8002bac:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
 8002bae:	4604      	mov	r4, r0
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8002bb0:	b28d      	uxth	r5, r1
 8002bb2:	b92b      	cbnz	r3, 8002bc0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x1c>
 8002bb4:	4b10      	ldr	r3, [pc, #64]	; (8002bf8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 8002bb6:	4a11      	ldr	r2, [pc, #68]	; (8002bfc <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8002bb8:	216c      	movs	r1, #108	; 0x6c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002bba:	4811      	ldr	r0, [pc, #68]	; (8002c00 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 8002bbc:	f01d fe40 	bl	8020840 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8002bc0:	4910      	ldr	r1, [pc, #64]	; (8002c04 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 8002bc2:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002bc4:	8809      	ldrh	r1, [r1, #0]
 8002bc6:	4291      	cmp	r1, r2
 8002bc8:	d803      	bhi.n	8002bd2 <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 8002bca:	4b0f      	ldr	r3, [pc, #60]	; (8002c08 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 8002bcc:	4a0b      	ldr	r2, [pc, #44]	; (8002bfc <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8002bce:	216d      	movs	r1, #109	; 0x6d
 8002bd0:	e7f3      	b.n	8002bba <_ZN8touchgfx8TextArea12setBaselineYEs+0x16>
        return fonts[typedTexts[typedTextId].fontIdx];
 8002bd2:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8002bd6:	4b0d      	ldr	r3, [pc, #52]	; (8002c0c <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 8002bd8:	681b      	ldr	r3, [r3, #0]
 8002bda:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8002bde:	6803      	ldr	r3, [r0, #0]
 8002be0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002be2:	4798      	blx	r3
 8002be4:	1a28      	subs	r0, r5, r0
 8002be6:	b201      	sxth	r1, r0
 8002be8:	4633      	mov	r3, r6
 8002bea:	4620      	mov	r0, r4
    }
 8002bec:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8002bf0:	4718      	bx	r3
 8002bf2:	bf00      	nop
 8002bf4:	2001560c 	.word	0x2001560c
 8002bf8:	080227c0 	.word	0x080227c0
 8002bfc:	08022802 	.word	0x08022802
 8002c00:	0802283d 	.word	0x0802283d
 8002c04:	20015610 	.word	0x20015610
 8002c08:	08022884 	.word	0x08022884
 8002c0c:	20015614 	.word	0x20015614

08002c10 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    if (&src == &buttonStart)
 8002c10:	f500 732a 	add.w	r3, r0, #680	; 0x2a8
 8002c14:	428b      	cmp	r3, r1
{
 8002c16:	b510      	push	{r4, lr}
 8002c18:	4604      	mov	r4, r0
    if (&src == &buttonStart)
 8002c1a:	d109      	bne.n	8002c30 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x20>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8002c1c:	f00e fa40 	bl	80110a0 <_ZN8touchgfx11Application11getInstanceEv>
        application().gotoScreenGraphScreenWipeTransitionEast();
 8002c20:	f7ff fe20 	bl	8002864 <_ZN23FrontendApplicationBase39gotoScreenGraphScreenWipeTransitionEastEv>
        ButtonStartClicked();
 8002c24:	6823      	ldr	r3, [r4, #0]
 8002c26:	4620      	mov	r0, r4
 8002c28:	6b5b      	ldr	r3, [r3, #52]	; 0x34
}
 8002c2a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        ButtonStartClicked();
 8002c2e:	4718      	bx	r3
}
 8002c30:	bd10      	pop	{r4, pc}

08002c32 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 8002c32:	2200      	movs	r2, #0
 8002c34:	f04f 31ff 	mov.w	r1, #4294967295
 8002c38:	e9c0 2100 	strd	r2, r1, [r0]
              text(0)
 8002c3c:	6082      	str	r2, [r0, #8]
    }
 8002c3e:	4770      	bx	lr

08002c40 <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 8002c40:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 8002c42:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 8002c44:	4604      	mov	r4, r0
        setX(x);
 8002c46:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setXY(int16_t x, int16_t y)
 8002c48:	4615      	mov	r5, r2
        setX(x);
 8002c4a:	4798      	blx	r3
        setY(y);
 8002c4c:	6823      	ldr	r3, [r4, #0]
 8002c4e:	4629      	mov	r1, r5
 8002c50:	4620      	mov	r0, r4
 8002c52:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    }
 8002c54:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 8002c58:	4718      	bx	r3

08002c5a <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>:
        iconReleased = newIconReleased;
 8002c5a:	880b      	ldrh	r3, [r1, #0]
    virtual void setIconBitmaps(const Bitmap& newIconReleased, const Bitmap& newIconPressed)
 8002c5c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
        iconReleased = newIconReleased;
 8002c60:	f8a0 3078 	strh.w	r3, [r0, #120]	; 0x78
        iconPressed = newIconPressed;
 8002c64:	8813      	ldrh	r3, [r2, #0]
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
 8002c66:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
        iconPressed = newIconPressed;
 8002c6a:	f8a0 307a 	strh.w	r3, [r0, #122]	; 0x7a
    virtual void setIconBitmaps(const Bitmap& newIconReleased, const Bitmap& newIconPressed)
 8002c6e:	4604      	mov	r4, r0
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
 8002c70:	4610      	mov	r0, r2
    virtual void setIconBitmaps(const Bitmap& newIconReleased, const Bitmap& newIconPressed)
 8002c72:	4690      	mov	r8, r2
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
 8002c74:	f011 fc44 	bl	8014500 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8002c78:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8002c7c:	4607      	mov	r7, r0
 8002c7e:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8002c82:	4640      	mov	r0, r8
 8002c84:	f3c3 064f 	ubfx	r6, r3, #1, #16
 8002c88:	f011 fc6e 	bl	8014568 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8002c8c:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8002c90:	f3c5 054f 	ubfx	r5, r5, #1, #16
 8002c94:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8002c98:	eb07 77d7 	add.w	r7, r7, r7, lsr #31
 8002c9c:	eba6 0260 	sub.w	r2, r6, r0, asr #1
 8002ca0:	eba5 0767 	sub.w	r7, r5, r7, asr #1
 8002ca4:	f104 007c 	add.w	r0, r4, #124	; 0x7c
 8002ca8:	b239      	sxth	r1, r7
 8002caa:	b212      	sxth	r2, r2
 8002cac:	f7ff ffc8 	bl	8002c40 <_ZN8touchgfx8Drawable5setXYEss>
        handlePressedUpdated();
 8002cb0:	6823      	ldr	r3, [r4, #0]
 8002cb2:	4620      	mov	r0, r4
 8002cb4:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
    }
 8002cb8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
        handlePressedUpdated();
 8002cbc:	4718      	bx	r3

08002cbe <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8002cbe:	b570      	push	{r4, r5, r6, lr}
 8002cc0:	4604      	mov	r4, r0
 8002cc2:	461d      	mov	r5, r3
 8002cc4:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 8002cc8:	f7ff ffba 	bl	8002c40 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8002ccc:	6823      	ldr	r3, [r4, #0]
 8002cce:	4629      	mov	r1, r5
 8002cd0:	4620      	mov	r0, r4
 8002cd2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002cd4:	4798      	blx	r3
        setHeight(height);
 8002cd6:	6823      	ldr	r3, [r4, #0]
 8002cd8:	4631      	mov	r1, r6
 8002cda:	4620      	mov	r0, r4
 8002cdc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 8002cde:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 8002ce2:	4718      	bx	r3

08002ce4 <_ZN8touchgfx6WidgetC1Ev>:
 8002ce4:	2200      	movs	r2, #0
 8002ce6:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8002cea:	e9c0 2203 	strd	r2, r2, [r0, #12]
          visible(true)
 8002cee:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8002cf2:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8002cf6:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002cfa:	8482      	strh	r2, [r0, #36]	; 0x24
class Widget : public Drawable
 8002cfc:	4a01      	ldr	r2, [pc, #4]	; (8002d04 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 8002cfe:	6002      	str	r2, [r0, #0]
 8002d00:	4770      	bx	lr
 8002d02:	bf00      	nop
 8002d04:	08022908 	.word	0x08022908

08002d08 <_ZN8touchgfx3BoxC1Ev>:
    Box()
 8002d08:	b510      	push	{r4, lr}
        : Widget(), alpha(255), color(0)
 8002d0a:	2226      	movs	r2, #38	; 0x26
    Box()
 8002d0c:	4604      	mov	r4, r0
        : Widget(), alpha(255), color(0)
 8002d0e:	2100      	movs	r1, #0
 8002d10:	f01d ff1c 	bl	8020b4c <memset>
 8002d14:	4620      	mov	r0, r4
 8002d16:	f7ff ffe5 	bl	8002ce4 <_ZN8touchgfx6WidgetC1Ev>
 8002d1a:	4b04      	ldr	r3, [pc, #16]	; (8002d2c <_ZN8touchgfx3BoxC1Ev+0x24>)
 8002d1c:	6023      	str	r3, [r4, #0]
 8002d1e:	23ff      	movs	r3, #255	; 0xff
 8002d20:	f884 3026 	strb.w	r3, [r4, #38]	; 0x26
        : color(col)
 8002d24:	2300      	movs	r3, #0
 8002d26:	62a3      	str	r3, [r4, #40]	; 0x28
    }
 8002d28:	4620      	mov	r0, r4
 8002d2a:	bd10      	pop	{r4, pc}
 8002d2c:	0802405c 	.word	0x0802405c

08002d30 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
    Image(const Bitmap& bmp = Bitmap())
 8002d30:	b538      	push	{r3, r4, r5, lr}
        : Widget(), bitmap(bmp), alpha(255)
 8002d32:	2226      	movs	r2, #38	; 0x26
    Image(const Bitmap& bmp = Bitmap())
 8002d34:	4604      	mov	r4, r0
 8002d36:	460d      	mov	r5, r1
        : Widget(), bitmap(bmp), alpha(255)
 8002d38:	2100      	movs	r1, #0
 8002d3a:	f01d ff07 	bl	8020b4c <memset>
 8002d3e:	4620      	mov	r0, r4
 8002d40:	f7ff ffd0 	bl	8002ce4 <_ZN8touchgfx6WidgetC1Ev>
 8002d44:	4b06      	ldr	r3, [pc, #24]	; (8002d60 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x30>)
 8002d46:	6023      	str	r3, [r4, #0]
 8002d48:	882b      	ldrh	r3, [r5, #0]
 8002d4a:	84e3      	strh	r3, [r4, #38]	; 0x26
 8002d4c:	23ff      	movs	r3, #255	; 0xff
        Image::setBitmap(bmp);
 8002d4e:	4620      	mov	r0, r4
        : Widget(), bitmap(bmp), alpha(255)
 8002d50:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
        Image::setBitmap(bmp);
 8002d54:	4629      	mov	r1, r5
 8002d56:	f00b fcf5 	bl	800e744 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    }
 8002d5a:	4620      	mov	r0, r4
 8002d5c:	bd38      	pop	{r3, r4, r5, pc}
 8002d5e:	bf00      	nop
 8002d60:	080241a0 	.word	0x080241a0

08002d64 <_ZN8touchgfx8TextAreaC1Ev>:
    TextArea()
 8002d64:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002d66:	2226      	movs	r2, #38	; 0x26
    TextArea()
 8002d68:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002d6a:	2100      	movs	r1, #0
 8002d6c:	f01d feee 	bl	8020b4c <memset>
 8002d70:	4620      	mov	r0, r4
 8002d72:	f7ff ffb7 	bl	8002ce4 <_ZN8touchgfx6WidgetC1Ev>
 8002d76:	4b0a      	ldr	r3, [pc, #40]	; (8002da0 <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 8002d78:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 8002d7a:	4b0a      	ldr	r3, [pc, #40]	; (8002da4 <_ZN8touchgfx8TextAreaC1Ev+0x40>)
 8002d7c:	62a3      	str	r3, [r4, #40]	; 0x28
 8002d7e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002d82:	85a3      	strh	r3, [r4, #44]	; 0x2c
 8002d84:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 8002d88:	2300      	movs	r3, #0
 8002d8a:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8002d8e:	f04f 32ff 	mov.w	r2, #4294967295
              text(0)
 8002d92:	e9c4 2310 	strd	r2, r3, [r4, #64]	; 0x40
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002d96:	8723      	strh	r3, [r4, #56]	; 0x38
 8002d98:	63e3      	str	r3, [r4, #60]	; 0x3c
    }
 8002d9a:	4620      	mov	r0, r4
 8002d9c:	bd10      	pop	{r4, pc}
 8002d9e:	bf00      	nop
 8002da0:	08023fcc 	.word	0x08023fcc
 8002da4:	0802220c 	.word	0x0802220c

08002da8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
        return typedTextId < numberOfTypedTexts;
 8002da8:	4b1b      	ldr	r3, [pc, #108]	; (8002e18 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x70>)
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 8002daa:	b573      	push	{r0, r1, r4, r5, r6, lr}
    {
        if (typedText.hasValidId())
 8002dac:	881b      	ldrh	r3, [r3, #0]
 8002dae:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 8002db0:	428b      	cmp	r3, r1
    void updateTextPosition()
 8002db2:	4606      	mov	r6, r0
        if (typedText.hasValidId())
 8002db4:	d92b      	bls.n	8002e0e <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x66>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002db6:	4b19      	ldr	r3, [pc, #100]	; (8002e1c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x74>)
 8002db8:	681b      	ldr	r3, [r3, #0]
 8002dba:	b92b      	cbnz	r3, 8002dc8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 8002dbc:	4b18      	ldr	r3, [pc, #96]	; (8002e20 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x78>)
 8002dbe:	4a19      	ldr	r2, [pc, #100]	; (8002e24 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x7c>)
 8002dc0:	4819      	ldr	r0, [pc, #100]	; (8002e28 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 8002dc2:	216c      	movs	r1, #108	; 0x6c
 8002dc4:	f01d fd3c 	bl	8020840 <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 8002dc8:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8002dcc:	4b17      	ldr	r3, [pc, #92]	; (8002e2c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x84>)
 8002dce:	681b      	ldr	r3, [r3, #0]
 8002dd0:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 8002dd4:	4b16      	ldr	r3, [pc, #88]	; (8002e30 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x88>)
 8002dd6:	6818      	ldr	r0, [r3, #0]
 8002dd8:	f001 fff8 	bl	8004dcc <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8002ddc:	682b      	ldr	r3, [r5, #0]
 8002dde:	9001      	str	r0, [sp, #4]
 8002de0:	4601      	mov	r1, r0
 8002de2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002de4:	4628      	mov	r0, r5
 8002de6:	4798      	blx	r3
 8002de8:	682b      	ldr	r3, [r5, #0]
 8002dea:	9901      	ldr	r1, [sp, #4]
 8002dec:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002dee:	4604      	mov	r4, r0
 8002df0:	4628      	mov	r0, r5
 8002df2:	4798      	blx	r3
 8002df4:	682b      	ldr	r3, [r5, #0]
 8002df6:	9901      	ldr	r1, [sp, #4]
 8002df8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002dfa:	fb14 f400 	smulbb	r4, r4, r0
 8002dfe:	4628      	mov	r0, r5
 8002e00:	4798      	blx	r3
 8002e02:	b2e4      	uxtb	r4, r4
 8002e04:	4404      	add	r4, r0
 8002e06:	f886 4045 	strb.w	r4, [r6, #69]	; 0x45
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 8002e0a:	b002      	add	sp, #8
 8002e0c:	bd70      	pop	{r4, r5, r6, pc}
            textHeightIncludingSpacing = 0;
 8002e0e:	2300      	movs	r3, #0
 8002e10:	f880 3045 	strb.w	r3, [r0, #69]	; 0x45
    }
 8002e14:	e7f9      	b.n	8002e0a <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x62>
 8002e16:	bf00      	nop
 8002e18:	20015610 	.word	0x20015610
 8002e1c:	2001560c 	.word	0x2001560c
 8002e20:	080227c0 	.word	0x080227c0
 8002e24:	08022802 	.word	0x08022802
 8002e28:	0802283d 	.word	0x0802283d
 8002e2c:	20015614 	.word	0x20015614
 8002e30:	20015618 	.word	0x20015618

08002e34 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>:
        : pressed(false), alpha(255), action(0)
 8002e34:	f44f 437f 	mov.w	r3, #65280	; 0xff00
    IconButtonStyle()
 8002e38:	b573      	push	{r0, r1, r4, r5, r6, lr}
        : T(), up(), down()
 8002e3a:	4606      	mov	r6, r0
 8002e3c:	8583      	strh	r3, [r0, #44]	; 0x2c
        touchable = touch;
 8002e3e:	f240 1301 	movw	r3, #257	; 0x101
          firstChild(0)
 8002e42:	2500      	movs	r5, #0
 8002e44:	8483      	strh	r3, [r0, #36]	; 0x24
 8002e46:	4b1d      	ldr	r3, [pc, #116]	; (8002ebc <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0x88>)
 8002e48:	6285      	str	r5, [r0, #40]	; 0x28
        : x(0), y(0), width(0), height(0)
 8002e4a:	e9c0 5501 	strd	r5, r5, [r0, #4]
 8002e4e:	e9c0 5503 	strd	r5, r5, [r0, #12]
          visible(true)
 8002e52:	e9c0 5505 	strd	r5, r5, [r0, #20]
 8002e56:	e9c0 5507 	strd	r5, r5, [r0, #28]
 8002e5a:	6305      	str	r5, [r0, #48]	; 0x30
 8002e5c:	f846 3b34 	str.w	r3, [r6], #52
 8002e60:	4604      	mov	r4, r0
        : Box(), borderColor(0), borderSize(0)
 8002e62:	4630      	mov	r0, r6
 8002e64:	f7ff ff50 	bl	8002d08 <_ZN8touchgfx3BoxC1Ev>
 8002e68:	4b15      	ldr	r3, [pc, #84]	; (8002ec0 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0x8c>)
 8002e6a:	6363      	str	r3, [r4, #52]	; 0x34
        borderBox.setXY(0, 0);
 8002e6c:	462a      	mov	r2, r5
        : color(0)
 8002e6e:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 8002e72:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
        : color(col)
 8002e76:	6625      	str	r5, [r4, #96]	; 0x60
 8002e78:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 8002e7c:	4629      	mov	r1, r5
 8002e7e:	4630      	mov	r0, r6
 8002e80:	f7ff fede 	bl	8002c40 <_ZN8touchgfx8Drawable5setXYEss>
        T::add(borderBox);
 8002e84:	4631      	mov	r1, r6
 8002e86:	4620      	mov	r0, r4
 8002e88:	f007 fde8 	bl	800aa5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
        : T()
 8002e8c:	4b0d      	ldr	r3, [pc, #52]	; (8002ec4 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0x90>)
 8002e8e:	6023      	str	r3, [r4, #0]
 8002e90:	f104 057c 	add.w	r5, r4, #124	; 0x7c
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 8002e94:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002e98:	f8a4 3078 	strh.w	r3, [r4, #120]	; 0x78
 8002e9c:	f8a4 307a 	strh.w	r3, [r4, #122]	; 0x7a
 8002ea0:	a901      	add	r1, sp, #4
 8002ea2:	4628      	mov	r0, r5
 8002ea4:	f8ad 3004 	strh.w	r3, [sp, #4]
 8002ea8:	f7ff ff42 	bl	8002d30 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
        T::add(iconImage);
 8002eac:	4620      	mov	r0, r4
 8002eae:	4629      	mov	r1, r5
 8002eb0:	f007 fdd4 	bl	800aa5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 8002eb4:	4620      	mov	r0, r4
 8002eb6:	b002      	add	sp, #8
 8002eb8:	bd70      	pop	{r4, r5, r6, pc}
 8002eba:	bf00      	nop
 8002ebc:	08022a00 	.word	0x08022a00
 8002ec0:	08024138 	.word	0x08024138
 8002ec4:	08022a9c 	.word	0x08022a9c

08002ec8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>:
    void setBoxWithBorderColors(const colortype colorReleased, const colortype colorPressed, const colortype borderColorReleased, const colortype borderColorPressed)
 8002ec8:	b410      	push	{r4}
        borderUp = borderColorReleased;
 8002eca:	6703      	str	r3, [r0, #112]	; 0x70
        borderDown = borderColorPressed;
 8002ecc:	9b01      	ldr	r3, [sp, #4]
 8002ece:	6743      	str	r3, [r0, #116]	; 0x74
        handlePressedUpdated();
 8002ed0:	6803      	ldr	r3, [r0, #0]
    }
 8002ed2:	f85d 4b04 	ldr.w	r4, [sp], #4
        handlePressedUpdated();
 8002ed6:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
        down = colorPressed;
 8002eda:	e9c0 121a 	strd	r1, r2, [r0, #104]	; 0x68
        handlePressedUpdated();
 8002ede:	4718      	bx	r3

08002ee0 <_ZN15Screen1ViewBaseC1Ev>:
Screen1ViewBase::Screen1ViewBase() :
 8002ee0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002ee4:	ed2d 8b0c 	vpush	{d8-d13}
 8002ee8:	4604      	mov	r4, r0
 8002eea:	b08d      	sub	sp, #52	; 0x34
        : presenter(0)
 8002eec:	f00f fbda 	bl	80126a4 <_ZN8touchgfx6ScreenC1Ev>
    flexButtonCallback(this, &Screen1ViewBase::flexButtonCallbackHandler)
 8002ef0:	4622      	mov	r2, r4
 8002ef2:	2500      	movs	r5, #0
 8002ef4:	4be5      	ldr	r3, [pc, #916]	; (800328c <_ZN15Screen1ViewBaseC1Ev+0x3ac>)
 8002ef6:	63e5      	str	r5, [r4, #60]	; 0x3c
 8002ef8:	f842 3b40 	str.w	r3, [r2], #64
 8002efc:	4610      	mov	r0, r2
 8002efe:	ee08 2a10 	vmov	s16, r2
 8002f02:	f7ff ff01 	bl	8002d08 <_ZN8touchgfx3BoxC1Ev>
 8002f06:	f104 036c 	add.w	r3, r4, #108	; 0x6c
 8002f0a:	f64f 76ff 	movw	r6, #65535	; 0xffff
 8002f0e:	a90a      	add	r1, sp, #40	; 0x28
 8002f10:	4618      	mov	r0, r3
 8002f12:	ee0c 3a10 	vmov	s24, r3
 8002f16:	f8ad 6028 	strh.w	r6, [sp, #40]	; 0x28
 8002f1a:	f7ff ff09 	bl	8002d30 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002f1e:	f104 0398 	add.w	r3, r4, #152	; 0x98
 8002f22:	a90a      	add	r1, sp, #40	; 0x28
 8002f24:	4618      	mov	r0, r3
 8002f26:	ee0c 3a90 	vmov	s25, r3
 8002f2a:	f8ad 6028 	strh.w	r6, [sp, #40]	; 0x28
 8002f2e:	f7ff feff 	bl	8002d30 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002f32:	f104 03c4 	add.w	r3, r4, #196	; 0xc4
 8002f36:	4618      	mov	r0, r3
 8002f38:	ee08 3a90 	vmov	s17, r3
 8002f3c:	f7ff ff7a 	bl	8002e34 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8002f40:	f504 73b6 	add.w	r3, r4, #364	; 0x16c
 8002f44:	4618      	mov	r0, r3
 8002f46:	ee09 3a10 	vmov	s18, r3
 8002f4a:	f7ff ff73 	bl	8002e34 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8002f4e:	f504 7305 	add.w	r3, r4, #532	; 0x214
 8002f52:	4618      	mov	r0, r3
 8002f54:	ee09 3a90 	vmov	s19, r3
 8002f58:	f7ff ff04 	bl	8002d64 <_ZN8touchgfx8TextAreaC1Ev>
 8002f5c:	f504 7317 	add.w	r3, r4, #604	; 0x25c
        : TextArea()
 8002f60:	4618      	mov	r0, r3
 8002f62:	ee0a 3a10 	vmov	s20, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8002f66:	4fca      	ldr	r7, [pc, #808]	; (8003290 <_ZN15Screen1ViewBaseC1Ev+0x3b0>)
        : TextArea()
 8002f68:	f7ff fefc 	bl	8002d64 <_ZN8touchgfx8TextAreaC1Ev>
 8002f6c:	f504 732a 	add.w	r3, r4, #680	; 0x2a8
        : TextAreaWithWildcardBase(), wc1(0)
 8002f70:	f8c4 725c 	str.w	r7, [r4, #604]	; 0x25c
 8002f74:	f8c4 52a4 	str.w	r5, [r4, #676]	; 0x2a4
 8002f78:	4618      	mov	r0, r3
 8002f7a:	ee0a 3a90 	vmov	s21, r3
 8002f7e:	f00b fd13 	bl	800e9a8 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8002f82:	f504 733c 	add.w	r3, r4, #752	; 0x2f0
 8002f86:	a90a      	add	r1, sp, #40	; 0x28
 8002f88:	4618      	mov	r0, r3
 8002f8a:	ee0d 3a10 	vmov	s26, r3
 8002f8e:	f8ad 6028 	strh.w	r6, [sp, #40]	; 0x28
 8002f92:	f7ff fecd 	bl	8002d30 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002f96:	f504 7347 	add.w	r3, r4, #796	; 0x31c
 8002f9a:	4618      	mov	r0, r3
 8002f9c:	ee0b 3a10 	vmov	s22, r3
 8002fa0:	f7ff fee0 	bl	8002d64 <_ZN8touchgfx8TextAreaC1Ev>
 8002fa4:	f504 7359 	add.w	r3, r4, #868	; 0x364
 8002fa8:	f504 7b6c 	add.w	fp, r4, #944	; 0x3b0
        : TextArea()
 8002fac:	4618      	mov	r0, r3
 8002fae:	ee0b 3a90 	vmov	s23, r3
 8002fb2:	f7ff fed7 	bl	8002d64 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8002fb6:	f8c4 7364 	str.w	r7, [r4, #868]	; 0x364
 8002fba:	f8c4 53ac 	str.w	r5, [r4, #940]	; 0x3ac
 8002fbe:	4658      	mov	r0, fp
 8002fc0:	f7ff fed0 	bl	8002d64 <_ZN8touchgfx8TextAreaC1Ev>
 8002fc4:	f504 737e 	add.w	r3, r4, #1016	; 0x3f8
 8002fc8:	a90a      	add	r1, sp, #40	; 0x28
 8002fca:	4618      	mov	r0, r3
 8002fcc:	f204 4924 	addw	r9, r4, #1060	; 0x424
 8002fd0:	ee0d 3a90 	vmov	s27, r3
 8002fd4:	f204 48cc 	addw	r8, r4, #1228	; 0x4cc
 8002fd8:	f8ad 6028 	strh.w	r6, [sp, #40]	; 0x28
 8002fdc:	f7ff fea8 	bl	8002d30 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002fe0:	4648      	mov	r0, r9
 8002fe2:	f7ff ff27 	bl	8002e34 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8002fe6:	f204 5a74 	addw	sl, r4, #1396	; 0x574
 8002fea:	4640      	mov	r0, r8
 8002fec:	f7ff ff22 	bl	8002e34 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
        : TextArea()
 8002ff0:	4650      	mov	r0, sl
 8002ff2:	f7ff feb7 	bl	8002d64 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8002ff6:	4ba7      	ldr	r3, [pc, #668]	; (8003294 <_ZN15Screen1ViewBaseC1Ev+0x3b4>)
 8002ff8:	f8c4 35f0 	str.w	r3, [r4, #1520]	; 0x5f0
 8002ffc:	4ba6      	ldr	r3, [pc, #664]	; (8003298 <_ZN15Screen1ViewBaseC1Ev+0x3b8>)
 8002ffe:	f8c4 35f8 	str.w	r3, [r4, #1528]	; 0x5f8
 8003002:	4ba6      	ldr	r3, [pc, #664]	; (800329c <_ZN15Screen1ViewBaseC1Ev+0x3bc>)
 8003004:	f8c4 3600 	str.w	r3, [r4, #1536]	; 0x600
 8003008:	4ba5      	ldr	r3, [pc, #660]	; (80032a0 <_ZN15Screen1ViewBaseC1Ev+0x3c0>)
 800300a:	f8c4 3608 	str.w	r3, [r4, #1544]	; 0x608
    __background.setPosition(0, 0, 320, 240);
 800300e:	23f0      	movs	r3, #240	; 0xf0
 8003010:	462a      	mov	r2, r5
 8003012:	4629      	mov	r1, r5
 8003014:	ee18 0a10 	vmov	r0, s16
        : TextAreaWithWildcardBase(), wc1(0)
 8003018:	f8c4 7574 	str.w	r7, [r4, #1396]	; 0x574
 800301c:	f8c4 55bc 	str.w	r5, [r4, #1468]	; 0x5bc
 8003020:	f8c4 55fc 	str.w	r5, [r4, #1532]	; 0x5fc
 8003024:	f8c4 560c 	str.w	r5, [r4, #1548]	; 0x60c
 8003028:	9300      	str	r3, [sp, #0]
 800302a:	f8c4 45f4 	str.w	r4, [r4, #1524]	; 0x5f4
 800302e:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8003032:	f8c4 4604 	str.w	r4, [r4, #1540]	; 0x604
 8003036:	f7ff fe42 	bl	8002cbe <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 800303a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800303e:	66a3      	str	r3, [r4, #104]	; 0x68
    image2.setXY(0, 0);
 8003040:	462a      	mov	r2, r5
 8003042:	4629      	mov	r1, r5
 8003044:	ee1c 0a10 	vmov	r0, s24
 8003048:	f7ff fdfa 	bl	8002c40 <_ZN8touchgfx8Drawable5setXYEss>
    image2.setBitmap(touchgfx::Bitmap(BITMAP_BG_ID));
 800304c:	ee1c 0a10 	vmov	r0, s24
 8003050:	a90a      	add	r1, sp, #40	; 0x28
 8003052:	f8ad 5028 	strh.w	r5, [sp, #40]	; 0x28
 8003056:	f00b fb75 	bl	800e744 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    image3.setXY(118, 25);
 800305a:	ee1c 0a90 	vmov	r0, s25
 800305e:	2219      	movs	r2, #25
 8003060:	2176      	movs	r1, #118	; 0x76
 8003062:	f7ff fded 	bl	8002c40 <_ZN8touchgfx8Drawable5setXYEss>
    image3.setBitmap(touchgfx::Bitmap(BITMAP_COUNTER_BOX_ID));
 8003066:	aa0a      	add	r2, sp, #40	; 0x28
 8003068:	f04f 0303 	mov.w	r3, #3
 800306c:	4611      	mov	r1, r2
 800306e:	ee1c 0a90 	vmov	r0, s25
 8003072:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8003076:	f00b fb65 	bl	800e744 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        borderBox.setPosition(x, y, width, height);
 800307a:	2317      	movs	r3, #23
     *
     * @see getBorderSize
     */
    void setBorderSize(uint16_t size)
    {
        borderSize = size;
 800307c:	2705      	movs	r7, #5
    ButtonDown.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 800307e:	4e89      	ldr	r6, [pc, #548]	; (80032a4 <_ZN15Screen1ViewBaseC1Ev+0x3c4>)
 8003080:	9300      	str	r3, [sp, #0]
 8003082:	462a      	mov	r2, r5
 8003084:	4629      	mov	r1, r5
 8003086:	232b      	movs	r3, #43	; 0x2b
 8003088:	f104 00f8 	add.w	r0, r4, #248	; 0xf8
 800308c:	f7ff fe17 	bl	8002cbe <_ZN8touchgfx8Drawable11setPositionEssss>
 8003090:	4b85      	ldr	r3, [pc, #532]	; (80032a8 <_ZN15Screen1ViewBaseC1Ev+0x3c8>)
 8003092:	4a86      	ldr	r2, [pc, #536]	; (80032ac <_ZN15Screen1ViewBaseC1Ev+0x3cc>)
 8003094:	4986      	ldr	r1, [pc, #536]	; (80032b0 <_ZN15Screen1ViewBaseC1Ev+0x3d0>)
 8003096:	9600      	str	r6, [sp, #0]
 8003098:	ee18 0a90 	vmov	r0, s17
 800309c:	f8a4 7128 	strh.w	r7, [r4, #296]	; 0x128
 80030a0:	f7ff ff12 	bl	8002ec8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    ButtonDown.setIconBitmaps(Bitmap(BITMAP_DARK_ICONS_DOWN_ARROW_32_ID), Bitmap(BITMAP_DARK_ICONS_DOWN_ARROW_32_ID));
 80030a4:	ee18 0a90 	vmov	r0, s17
 80030a8:	aa0a      	add	r2, sp, #40	; 0x28
 80030aa:	a909      	add	r1, sp, #36	; 0x24
 80030ac:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 80030b0:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 80030b4:	f7ff fdd1 	bl	8002c5a <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
    ButtonDown.setPosition(273, 49, 43, 23);
 80030b8:	2317      	movs	r3, #23
 80030ba:	ee18 0a90 	vmov	r0, s17
 80030be:	9300      	str	r3, [sp, #0]
 80030c0:	2231      	movs	r2, #49	; 0x31
 80030c2:	232b      	movs	r3, #43	; 0x2b
 80030c4:	f240 1111 	movw	r1, #273	; 0x111
        rect.x = x;
 80030c8:	f8c4 7144 	str.w	r7, [r4, #324]	; 0x144
 80030cc:	f7ff fdf7 	bl	8002cbe <_ZN8touchgfx8Drawable11setPositionEssss>
    ButtonDown.setAction(flexButtonCallback);
 80030d0:	f504 63c0 	add.w	r3, r4, #1536	; 0x600
 80030d4:	9303      	str	r3, [sp, #12]
        action = &callback;
 80030d6:	f8c4 30f4 	str.w	r3, [r4, #244]	; 0xf4
 80030da:	2317      	movs	r3, #23
 80030dc:	462a      	mov	r2, r5
 80030de:	4629      	mov	r1, r5
 80030e0:	9300      	str	r3, [sp, #0]
 80030e2:	f504 70d0 	add.w	r0, r4, #416	; 0x1a0
 80030e6:	232b      	movs	r3, #43	; 0x2b
 80030e8:	f7ff fde9 	bl	8002cbe <_ZN8touchgfx8Drawable11setPositionEssss>
    ButtonUp.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 80030ec:	4b6e      	ldr	r3, [pc, #440]	; (80032a8 <_ZN15Screen1ViewBaseC1Ev+0x3c8>)
 80030ee:	4a6f      	ldr	r2, [pc, #444]	; (80032ac <_ZN15Screen1ViewBaseC1Ev+0x3cc>)
 80030f0:	496f      	ldr	r1, [pc, #444]	; (80032b0 <_ZN15Screen1ViewBaseC1Ev+0x3d0>)
 80030f2:	9600      	str	r6, [sp, #0]
 80030f4:	ee19 0a10 	vmov	r0, s18
 80030f8:	f8a4 71d0 	strh.w	r7, [r4, #464]	; 0x1d0
 80030fc:	f7ff fee4 	bl	8002ec8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
 8003100:	f04f 0206 	mov.w	r2, #6
    ButtonUp.setIconBitmaps(Bitmap(BITMAP_DARK_ICONS_UP_ARROW_32_ID), Bitmap(BITMAP_DARK_ICONS_UP_ARROW_32_ID));
 8003104:	a80a      	add	r0, sp, #40	; 0x28
 8003106:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 800310a:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 800310e:	a909      	add	r1, sp, #36	; 0x24
 8003110:	4602      	mov	r2, r0
 8003112:	ee19 0a10 	vmov	r0, s18
 8003116:	f7ff fda0 	bl	8002c5a <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
 800311a:	2006      	movs	r0, #6
 800311c:	f8c4 01ec 	str.w	r0, [r4, #492]	; 0x1ec
    ButtonUp.setPosition(273, 25, 43, 23);
 8003120:	2017      	movs	r0, #23
 8003122:	232b      	movs	r3, #43	; 0x2b
 8003124:	9000      	str	r0, [sp, #0]
 8003126:	2219      	movs	r2, #25
 8003128:	ee19 0a10 	vmov	r0, s18
 800312c:	f240 1111 	movw	r1, #273	; 0x111
 8003130:	f7ff fdc5 	bl	8002cbe <_ZN8touchgfx8Drawable11setPositionEssss>
 8003134:	9a03      	ldr	r2, [sp, #12]
 8003136:	f8c4 219c 	str.w	r2, [r4, #412]	; 0x19c
    LabelPradLadowania.setXY(41, 28);
 800313a:	ee19 0a90 	vmov	r0, s19
 800313e:	221c      	movs	r2, #28
 8003140:	2129      	movs	r1, #41	; 0x29
        boundingArea = calculateBoundingArea();
 8003142:	ae04      	add	r6, sp, #16
 8003144:	f7ff fd7c 	bl	8002c40 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8003148:	f04f 30ff 	mov.w	r0, #4294967295
        boundingArea = calculateBoundingArea();
 800314c:	ee19 1a90 	vmov	r1, s19
        color = newColor;
 8003150:	f8c4 0244 	str.w	r0, [r4, #580]	; 0x244
        linespace = space;
 8003154:	f8a4 5248 	strh.w	r5, [r4, #584]	; 0x248
        boundingArea = calculateBoundingArea();
 8003158:	4630      	mov	r0, r6
 800315a:	f00a fdf3 	bl	800dd44 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800315e:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8003162:	f504 7314 	add.w	r3, r4, #592	; 0x250
 8003166:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 800316a:	4b52      	ldr	r3, [pc, #328]	; (80032b4 <_ZN15Screen1ViewBaseC1Ev+0x3d4>)
 800316c:	930a      	str	r3, [sp, #40]	; 0x28
    LabelPradLadowania.setTypedText(touchgfx::TypedText(T___SINGLEUSE_OQ6C));
 800316e:	ee19 0a90 	vmov	r0, s19
 8003172:	2314      	movs	r3, #20
 8003174:	a90a      	add	r1, sp, #40	; 0x28
 8003176:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800317a:	f00b f865 	bl	800e248 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    txtPradLadowania.setPosition(143, 36, 124, 24);
 800317e:	2018      	movs	r0, #24
 8003180:	2224      	movs	r2, #36	; 0x24
 8003182:	9000      	str	r0, [sp, #0]
 8003184:	237c      	movs	r3, #124	; 0x7c
 8003186:	ee1a 0a10 	vmov	r0, s20
 800318a:	218f      	movs	r1, #143	; 0x8f
 800318c:	f7ff fd97 	bl	8002cbe <_ZN8touchgfx8Drawable11setPositionEssss>
 8003190:	f8d4 325c 	ldr.w	r3, [r4, #604]	; 0x25c
        linespace = space;
 8003194:	f8a4 5290 	strh.w	r5, [r4, #656]	; 0x290
        color = newColor;
 8003198:	f04f 30ff 	mov.w	r0, #4294967295
        boundingArea = calculateBoundingArea();
 800319c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 80031a0:	f8c4 028c 	str.w	r0, [r4, #652]	; 0x28c
        boundingArea = calculateBoundingArea();
 80031a4:	ee1a 1a10 	vmov	r1, s20
 80031a8:	4630      	mov	r0, r6
 80031aa:	4798      	blx	r3
 80031ac:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80031b0:	f504 7326 	add.w	r3, r4, #664	; 0x298
 80031b4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    txtPradLadowania.setWildcard(txtPradLadowaniaBuffer);
 80031b8:	f504 63b8 	add.w	r3, r4, #1472	; 0x5c0
        wc1 = value;
 80031bc:	f8c4 32a4 	str.w	r3, [r4, #676]	; 0x2a4
 80031c0:	4b3c      	ldr	r3, [pc, #240]	; (80032b4 <_ZN15Screen1ViewBaseC1Ev+0x3d4>)
    txtPradLadowaniaBuffer[0] = 0;
 80031c2:	f8a4 55c0 	strh.w	r5, [r4, #1472]	; 0x5c0
    txtPradLadowania.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9VFQ));
 80031c6:	ee1a 0a10 	vmov	r0, s20
 80031ca:	930a      	str	r3, [sp, #40]	; 0x28
 80031cc:	a90a      	add	r1, sp, #40	; 0x28
 80031ce:	2313      	movs	r3, #19
 80031d0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80031d4:	f00b f838 	bl	800e248 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    buttonStart.setXY(78, 180);
 80031d8:	ee1a 0a90 	vmov	r0, s21
 80031dc:	22b4      	movs	r2, #180	; 0xb4
 80031de:	214e      	movs	r1, #78	; 0x4e
 80031e0:	f7ff fd2e 	bl	8002c40 <_ZN8touchgfx8Drawable5setXYEss>
 80031e4:	2301      	movs	r3, #1
    buttonStart.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
 80031e6:	a80a      	add	r0, sp, #40	; 0x28
 80031e8:	4602      	mov	r2, r0
 80031ea:	a909      	add	r1, sp, #36	; 0x24
 80031ec:	ee1a 0a90 	vmov	r0, s21
 80031f0:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80031f4:	2302      	movs	r3, #2
 80031f6:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80031fa:	f00b f880 	bl	800e2fe <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80031fe:	2312      	movs	r3, #18
        updateTextPosition();
 8003200:	ee1a 0a90 	vmov	r0, s21
 8003204:	f8a4 32e0 	strh.w	r3, [r4, #736]	; 0x2e0
 8003208:	f7ff fdce 	bl	8002da8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonStart.setAction(buttonCallback);
 800320c:	f504 63be 	add.w	r3, r4, #1520	; 0x5f0
        color = col;
 8003210:	f04f 30ff 	mov.w	r0, #4294967295
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 8003214:	f8c4 32d0 	str.w	r3, [r4, #720]	; 0x2d0
    image3_1.setXY(118, 138);
 8003218:	228a      	movs	r2, #138	; 0x8a
        colorPressed = col;
 800321a:	e9c4 00b9 	strd	r0, r0, [r4, #740]	; 0x2e4
 800321e:	2176      	movs	r1, #118	; 0x76
 8003220:	ee1d 0a10 	vmov	r0, s26
 8003224:	f7ff fd0c 	bl	8002c40 <_ZN8touchgfx8Drawable5setXYEss>
 8003228:	f04f 0103 	mov.w	r1, #3
    image3_1.setBitmap(touchgfx::Bitmap(BITMAP_COUNTER_BOX_ID));
 800322c:	a80a      	add	r0, sp, #40	; 0x28
 800322e:	f8ad 1028 	strh.w	r1, [sp, #40]	; 0x28
 8003232:	4601      	mov	r1, r0
 8003234:	ee1d 0a10 	vmov	r0, s26
 8003238:	f00b fa84 	bl	800e744 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    LabelNapiecieBaterii.setXY(41, 141);
 800323c:	228d      	movs	r2, #141	; 0x8d
 800323e:	ee1b 0a10 	vmov	r0, s22
 8003242:	2129      	movs	r1, #41	; 0x29
 8003244:	f7ff fcfc 	bl	8002c40 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8003248:	f04f 30ff 	mov.w	r0, #4294967295
        boundingArea = calculateBoundingArea();
 800324c:	ee1b 1a10 	vmov	r1, s22
        color = newColor;
 8003250:	f8c4 034c 	str.w	r0, [r4, #844]	; 0x34c
        linespace = space;
 8003254:	f8a4 5350 	strh.w	r5, [r4, #848]	; 0x350
        boundingArea = calculateBoundingArea();
 8003258:	4630      	mov	r0, r6
 800325a:	f00a fd73 	bl	800dd44 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800325e:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8003262:	f504 7356 	add.w	r3, r4, #856	; 0x358
 8003266:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 800326a:	4b12      	ldr	r3, [pc, #72]	; (80032b4 <_ZN15Screen1ViewBaseC1Ev+0x3d4>)
 800326c:	930a      	str	r3, [sp, #40]	; 0x28
    LabelNapiecieBaterii.setTypedText(touchgfx::TypedText(T___SINGLEUSE_O6MQ));
 800326e:	a80a      	add	r0, sp, #40	; 0x28
 8003270:	2311      	movs	r3, #17
 8003272:	4601      	mov	r1, r0
 8003274:	ee1b 0a10 	vmov	r0, s22
 8003278:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800327c:	f00a ffe4 	bl	800e248 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    txtNapiecieBaterii.setPosition(143, 147, 124, 24);
 8003280:	2018      	movs	r0, #24
 8003282:	2293      	movs	r2, #147	; 0x93
 8003284:	9000      	str	r0, [sp, #0]
 8003286:	237c      	movs	r3, #124	; 0x7c
 8003288:	e016      	b.n	80032b8 <_ZN15Screen1ViewBaseC1Ev+0x3d8>
 800328a:	bf00      	nop
 800328c:	08022b6c 	.word	0x08022b6c
 8003290:	08022970 	.word	0x08022970
 8003294:	08022b3c 	.word	0x08022b3c
 8003298:	08002c11 	.word	0x08002c11
 800329c:	08022b54 	.word	0x08022b54
 80032a0:	08002b21 	.word	0x08002b21
 80032a4:	ff336699 	.word	0xff336699
 80032a8:	ff003366 	.word	0xff003366
 80032ac:	ff0099cc 	.word	0xff0099cc
 80032b0:	ff006699 	.word	0xff006699
 80032b4:	0802220c 	.word	0x0802220c
 80032b8:	ee1b 0a90 	vmov	r0, s23
 80032bc:	218f      	movs	r1, #143	; 0x8f
 80032be:	f7ff fcfe 	bl	8002cbe <_ZN8touchgfx8Drawable11setPositionEssss>
 80032c2:	f8d4 3364 	ldr.w	r3, [r4, #868]	; 0x364
        linespace = space;
 80032c6:	f8a4 5398 	strh.w	r5, [r4, #920]	; 0x398
        color = newColor;
 80032ca:	f04f 30ff 	mov.w	r0, #4294967295
        boundingArea = calculateBoundingArea();
 80032ce:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 80032d2:	f8c4 0394 	str.w	r0, [r4, #916]	; 0x394
        boundingArea = calculateBoundingArea();
 80032d6:	ee1b 1a90 	vmov	r1, s23
 80032da:	4630      	mov	r0, r6
 80032dc:	4798      	blx	r3
 80032de:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80032e2:	f504 7368 	add.w	r3, r4, #928	; 0x3a0
 80032e6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    txtNapiecieBaterii.setWildcard(txtNapiecieBateriiBuffer);
 80032ea:	f204 53d4 	addw	r3, r4, #1492	; 0x5d4
 80032ee:	f8c4 33ac 	str.w	r3, [r4, #940]	; 0x3ac
    txtNapiecieBaterii.setTypedText(touchgfx::TypedText(T___SINGLEUSE_JY89));
 80032f2:	a80a      	add	r0, sp, #40	; 0x28
 80032f4:	4b96      	ldr	r3, [pc, #600]	; (8003550 <_ZN15Screen1ViewBaseC1Ev+0x670>)
    txtNapiecieBateriiBuffer[0] = 0;
 80032f6:	f8a4 55d4 	strh.w	r5, [r4, #1492]	; 0x5d4
    txtNapiecieBaterii.setTypedText(touchgfx::TypedText(T___SINGLEUSE_JY89));
 80032fa:	4601      	mov	r1, r0
 80032fc:	930a      	str	r3, [sp, #40]	; 0x28
 80032fe:	ee1b 0a90 	vmov	r0, s23
 8003302:	2310      	movs	r3, #16
 8003304:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003308:	f00a ff9e 	bl	800e248 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    LabelChargingTime.setXY(6, 86);
 800330c:	2256      	movs	r2, #86	; 0x56
 800330e:	2106      	movs	r1, #6
 8003310:	4658      	mov	r0, fp
 8003312:	f7ff fc95 	bl	8002c40 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8003316:	f04f 30ff 	mov.w	r0, #4294967295
 800331a:	f8c4 03e0 	str.w	r0, [r4, #992]	; 0x3e0
        linespace = space;
 800331e:	f8a4 53e4 	strh.w	r5, [r4, #996]	; 0x3e4
        boundingArea = calculateBoundingArea();
 8003322:	4659      	mov	r1, fp
 8003324:	4630      	mov	r0, r6
 8003326:	f00a fd0d 	bl	800dd44 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800332a:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 800332e:	f504 737b 	add.w	r3, r4, #1004	; 0x3ec
 8003332:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    LabelChargingTime.setTypedText(touchgfx::TypedText(T___SINGLEUSE_LNZH));
 8003336:	a80a      	add	r0, sp, #40	; 0x28
 8003338:	4b85      	ldr	r3, [pc, #532]	; (8003550 <_ZN15Screen1ViewBaseC1Ev+0x670>)
 800333a:	930a      	str	r3, [sp, #40]	; 0x28
 800333c:	4601      	mov	r1, r0
 800333e:	4658      	mov	r0, fp
 8003340:	f8ad 702c 	strh.w	r7, [sp, #44]	; 0x2c
 8003344:	f00a ff80 	bl	800e248 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    image3_2.setXY(118, 83);
 8003348:	2253      	movs	r2, #83	; 0x53
 800334a:	ee1d 0a90 	vmov	r0, s27
 800334e:	2176      	movs	r1, #118	; 0x76
 8003350:	f7ff fc76 	bl	8002c40 <_ZN8touchgfx8Drawable5setXYEss>
 8003354:	f04f 0103 	mov.w	r1, #3
    image3_2.setBitmap(touchgfx::Bitmap(BITMAP_COUNTER_BOX_ID));
 8003358:	ee1d 0a90 	vmov	r0, s27
 800335c:	f8ad 1028 	strh.w	r1, [sp, #40]	; 0x28
 8003360:	a90a      	add	r1, sp, #40	; 0x28
 8003362:	f00b f9ef 	bl	800e744 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003366:	2117      	movs	r1, #23
 8003368:	462a      	mov	r2, r5
 800336a:	9100      	str	r1, [sp, #0]
 800336c:	232b      	movs	r3, #43	; 0x2b
 800336e:	4629      	mov	r1, r5
 8003370:	f504 608b 	add.w	r0, r4, #1112	; 0x458
 8003374:	f7ff fca3 	bl	8002cbe <_ZN8touchgfx8Drawable11setPositionEssss>
    ButtonDownTime.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8003378:	4b76      	ldr	r3, [pc, #472]	; (8003554 <_ZN15Screen1ViewBaseC1Ev+0x674>)
 800337a:	9300      	str	r3, [sp, #0]
 800337c:	f1a3 1333 	sub.w	r3, r3, #3342387	; 0x330033
 8003380:	f5a3 534c 	sub.w	r3, r3, #13056	; 0x3300
 8003384:	4a74      	ldr	r2, [pc, #464]	; (8003558 <_ZN15Screen1ViewBaseC1Ev+0x678>)
 8003386:	4975      	ldr	r1, [pc, #468]	; (800355c <_ZN15Screen1ViewBaseC1Ev+0x67c>)
 8003388:	f8a4 7488 	strh.w	r7, [r4, #1160]	; 0x488
 800338c:	4648      	mov	r0, r9
 800338e:	f7ff fd9b 	bl	8002ec8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    ButtonDownTime.setIconBitmaps(Bitmap(BITMAP_DARK_ICONS_DOWN_ARROW_32_ID), Bitmap(BITMAP_DARK_ICONS_DOWN_ARROW_32_ID));
 8003392:	a90a      	add	r1, sp, #40	; 0x28
 8003394:	460a      	mov	r2, r1
 8003396:	4648      	mov	r0, r9
 8003398:	a909      	add	r1, sp, #36	; 0x24
 800339a:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 800339e:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 80033a2:	f7ff fc5a 	bl	8002c5a <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
    ButtonDownTime.setPosition(273, 105, 43, 23);
 80033a6:	2117      	movs	r1, #23
 80033a8:	9100      	str	r1, [sp, #0]
 80033aa:	232b      	movs	r3, #43	; 0x2b
 80033ac:	2269      	movs	r2, #105	; 0x69
 80033ae:	f240 1111 	movw	r1, #273	; 0x111
 80033b2:	4648      	mov	r0, r9
 80033b4:	f8c4 74a4 	str.w	r7, [r4, #1188]	; 0x4a4
 80033b8:	f7ff fc81 	bl	8002cbe <_ZN8touchgfx8Drawable11setPositionEssss>
 80033bc:	9a03      	ldr	r2, [sp, #12]
 80033be:	f8c4 2454 	str.w	r2, [r4, #1108]	; 0x454
 80033c2:	2117      	movs	r1, #23
 80033c4:	462a      	mov	r2, r5
 80033c6:	9100      	str	r1, [sp, #0]
 80033c8:	232b      	movs	r3, #43	; 0x2b
 80033ca:	4629      	mov	r1, r5
 80033cc:	f504 60a0 	add.w	r0, r4, #1280	; 0x500
 80033d0:	f7ff fc75 	bl	8002cbe <_ZN8touchgfx8Drawable11setPositionEssss>
    ButtonUpTime.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 80033d4:	4b5f      	ldr	r3, [pc, #380]	; (8003554 <_ZN15Screen1ViewBaseC1Ev+0x674>)
 80033d6:	9300      	str	r3, [sp, #0]
 80033d8:	f1a3 1333 	sub.w	r3, r3, #3342387	; 0x330033
 80033dc:	f5a3 534c 	sub.w	r3, r3, #13056	; 0x3300
 80033e0:	4a5d      	ldr	r2, [pc, #372]	; (8003558 <_ZN15Screen1ViewBaseC1Ev+0x678>)
 80033e2:	495e      	ldr	r1, [pc, #376]	; (800355c <_ZN15Screen1ViewBaseC1Ev+0x67c>)
 80033e4:	f8a4 7530 	strh.w	r7, [r4, #1328]	; 0x530
 80033e8:	4640      	mov	r0, r8
 80033ea:	f7ff fd6d 	bl	8002ec8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
 80033ee:	f04f 0206 	mov.w	r2, #6
 80033f2:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 80033f6:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
    ButtonUpTime.setIconBitmaps(Bitmap(BITMAP_DARK_ICONS_UP_ARROW_32_ID), Bitmap(BITMAP_DARK_ICONS_UP_ARROW_32_ID));
 80033fa:	a909      	add	r1, sp, #36	; 0x24
 80033fc:	aa0a      	add	r2, sp, #40	; 0x28
 80033fe:	4640      	mov	r0, r8
 8003400:	f7ff fc2b 	bl	8002c5a <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
 8003404:	2306      	movs	r3, #6
 8003406:	f8c4 354c 	str.w	r3, [r4, #1356]	; 0x54c
    ButtonUpTime.setPosition(273, 81, 43, 23);
 800340a:	2317      	movs	r3, #23
 800340c:	9300      	str	r3, [sp, #0]
 800340e:	2251      	movs	r2, #81	; 0x51
 8003410:	232b      	movs	r3, #43	; 0x2b
 8003412:	f240 1111 	movw	r1, #273	; 0x111
 8003416:	4640      	mov	r0, r8
 8003418:	f7ff fc51 	bl	8002cbe <_ZN8touchgfx8Drawable11setPositionEssss>
 800341c:	9b03      	ldr	r3, [sp, #12]
 800341e:	f8c4 34fc 	str.w	r3, [r4, #1276]	; 0x4fc
    txtChargingTime.setPosition(143, 93, 124, 24);
 8003422:	2318      	movs	r3, #24
 8003424:	225d      	movs	r2, #93	; 0x5d
 8003426:	9300      	str	r3, [sp, #0]
 8003428:	218f      	movs	r1, #143	; 0x8f
 800342a:	237c      	movs	r3, #124	; 0x7c
 800342c:	4650      	mov	r0, sl
 800342e:	f7ff fc46 	bl	8002cbe <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8003432:	f04f 33ff 	mov.w	r3, #4294967295
 8003436:	f8c4 35a4 	str.w	r3, [r4, #1444]	; 0x5a4
        boundingArea = calculateBoundingArea();
 800343a:	f8d4 3574 	ldr.w	r3, [r4, #1396]	; 0x574
        linespace = space;
 800343e:	f8a4 55a8 	strh.w	r5, [r4, #1448]	; 0x5a8
        boundingArea = calculateBoundingArea();
 8003442:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8003446:	4651      	mov	r1, sl
 8003448:	4630      	mov	r0, r6
 800344a:	4798      	blx	r3
 800344c:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8003450:	f504 63b6 	add.w	r3, r4, #1456	; 0x5b0
 8003454:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003458:	4b41      	ldr	r3, [pc, #260]	; (8003560 <_ZN15Screen1ViewBaseC1Ev+0x680>)
 800345a:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(txtChargingTimeBuffer, TXTCHARGINGTIME_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_JGTL).getText());
 800345c:	f504 65bd 	add.w	r5, r4, #1512	; 0x5e8
 8003460:	b92b      	cbnz	r3, 800346e <_ZN15Screen1ViewBaseC1Ev+0x58e>
 8003462:	4b40      	ldr	r3, [pc, #256]	; (8003564 <_ZN15Screen1ViewBaseC1Ev+0x684>)
 8003464:	4a40      	ldr	r2, [pc, #256]	; (8003568 <_ZN15Screen1ViewBaseC1Ev+0x688>)
 8003466:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003468:	4840      	ldr	r0, [pc, #256]	; (800356c <_ZN15Screen1ViewBaseC1Ev+0x68c>)
 800346a:	f01d f9e9 	bl	8020840 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 800346e:	4b40      	ldr	r3, [pc, #256]	; (8003570 <_ZN15Screen1ViewBaseC1Ev+0x690>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003470:	881b      	ldrh	r3, [r3, #0]
 8003472:	2b03      	cmp	r3, #3
 8003474:	d803      	bhi.n	800347e <_ZN15Screen1ViewBaseC1Ev+0x59e>
 8003476:	4b3f      	ldr	r3, [pc, #252]	; (8003574 <_ZN15Screen1ViewBaseC1Ev+0x694>)
 8003478:	4a3b      	ldr	r2, [pc, #236]	; (8003568 <_ZN15Screen1ViewBaseC1Ev+0x688>)
 800347a:	2161      	movs	r1, #97	; 0x61
 800347c:	e7f4      	b.n	8003468 <_ZN15Screen1ViewBaseC1Ev+0x588>
        return texts->getText(typedTextId);
 800347e:	4b3e      	ldr	r3, [pc, #248]	; (8003578 <_ZN15Screen1ViewBaseC1Ev+0x698>)
 8003480:	2103      	movs	r1, #3
 8003482:	6818      	ldr	r0, [r3, #0]
 8003484:	f001 fca2 	bl	8004dcc <_ZNK8touchgfx5Texts7getTextEt>
 8003488:	4a3c      	ldr	r2, [pc, #240]	; (800357c <_ZN15Screen1ViewBaseC1Ev+0x69c>)
 800348a:	4603      	mov	r3, r0
 800348c:	2103      	movs	r1, #3
 800348e:	4628      	mov	r0, r5
 8003490:	f010 fdc4 	bl	801401c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8003494:	4b2e      	ldr	r3, [pc, #184]	; (8003550 <_ZN15Screen1ViewBaseC1Ev+0x670>)
 8003496:	f8c4 55bc 	str.w	r5, [r4, #1468]	; 0x5bc
 800349a:	930a      	str	r3, [sp, #40]	; 0x28
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 800349c:	1d25      	adds	r5, r4, #4
 800349e:	2304      	movs	r3, #4
    txtChargingTime.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8IRX));
 80034a0:	a90a      	add	r1, sp, #40	; 0x28
 80034a2:	4650      	mov	r0, sl
 80034a4:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80034a8:	f00a fece 	bl	800e248 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80034ac:	ee18 1a10 	vmov	r1, s16
 80034b0:	4628      	mov	r0, r5
 80034b2:	f007 fad3 	bl	800aa5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80034b6:	ee1c 1a10 	vmov	r1, s24
 80034ba:	4628      	mov	r0, r5
 80034bc:	f007 face 	bl	800aa5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80034c0:	ee1c 1a90 	vmov	r1, s25
 80034c4:	4628      	mov	r0, r5
 80034c6:	f007 fac9 	bl	800aa5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80034ca:	ee18 1a90 	vmov	r1, s17
 80034ce:	4628      	mov	r0, r5
 80034d0:	f007 fac4 	bl	800aa5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80034d4:	ee19 1a10 	vmov	r1, s18
 80034d8:	4628      	mov	r0, r5
 80034da:	f007 fabf 	bl	800aa5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80034de:	ee19 1a90 	vmov	r1, s19
 80034e2:	4628      	mov	r0, r5
 80034e4:	f007 faba 	bl	800aa5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80034e8:	ee1a 1a10 	vmov	r1, s20
 80034ec:	4628      	mov	r0, r5
 80034ee:	f007 fab5 	bl	800aa5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80034f2:	ee1a 1a90 	vmov	r1, s21
 80034f6:	4628      	mov	r0, r5
 80034f8:	f007 fab0 	bl	800aa5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80034fc:	ee1d 1a10 	vmov	r1, s26
 8003500:	4628      	mov	r0, r5
 8003502:	f007 faab 	bl	800aa5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003506:	ee1b 1a10 	vmov	r1, s22
 800350a:	4628      	mov	r0, r5
 800350c:	f007 faa6 	bl	800aa5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003510:	ee1b 1a90 	vmov	r1, s23
 8003514:	4628      	mov	r0, r5
 8003516:	f007 faa1 	bl	800aa5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800351a:	4659      	mov	r1, fp
 800351c:	4628      	mov	r0, r5
 800351e:	f007 fa9d 	bl	800aa5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003522:	ee1d 1a90 	vmov	r1, s27
 8003526:	4628      	mov	r0, r5
 8003528:	f007 fa98 	bl	800aa5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800352c:	4649      	mov	r1, r9
 800352e:	4628      	mov	r0, r5
 8003530:	f007 fa94 	bl	800aa5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003534:	4641      	mov	r1, r8
 8003536:	4628      	mov	r0, r5
 8003538:	f007 fa90 	bl	800aa5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800353c:	4628      	mov	r0, r5
 800353e:	4651      	mov	r1, sl
 8003540:	f007 fa8c 	bl	800aa5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003544:	4620      	mov	r0, r4
 8003546:	b00d      	add	sp, #52	; 0x34
 8003548:	ecbd 8b0c 	vpop	{d8-d13}
 800354c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003550:	0802220c 	.word	0x0802220c
 8003554:	ff336699 	.word	0xff336699
 8003558:	ff0099cc 	.word	0xff0099cc
 800355c:	ff006699 	.word	0xff006699
 8003560:	2001560c 	.word	0x2001560c
 8003564:	080227c0 	.word	0x080227c0
 8003568:	080228c2 	.word	0x080228c2
 800356c:	0802283d 	.word	0x0802283d
 8003570:	20015610 	.word	0x20015610
 8003574:	08022884 	.word	0x08022884
 8003578:	20015618 	.word	0x20015618
 800357c:	080228fa 	.word	0x080228fa

08003580 <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 8003580:	2000      	movs	r0, #0
 8003582:	4770      	bx	lr

08003584 <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 8003584:	888b      	ldrh	r3, [r1, #4]
 8003586:	8083      	strh	r3, [r0, #4]
        return true;
    }
 8003588:	2001      	movs	r0, #1
 800358a:	4770      	bx	lr

0800358c <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 800358c:	4770      	bx	lr

0800358e <_ZN8touchgfx17AbstractDataGraph8setAlphaEh>:
     *
     * @note All graph elements have to take this alpha into consideration.
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 800358e:	f880 102c 	strb.w	r1, [r0, #44]	; 0x2c
    }
 8003592:	4770      	bx	lr

08003594 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>:
     * @param  min The minimum x value.
     * @param  max The maximum x value.
     *
     * @note The graph as well as the area above and below are automatically redrawn (invalidated).
     */
    virtual void setGraphRangeX(int min, int max)
 8003594:	b410      	push	{r4}
    {
        setGraphRangeXScaled(int2scaledX(min), int2scaledX(max));
 8003596:	6803      	ldr	r3, [r0, #0]
     *
     * @note For internal use.
     */
    FORCE_INLINE_FUNCTION int int2scaledX(int i) const
    {
        return int2scaled(i, xScale);
 8003598:	6b04      	ldr	r4, [r0, #48]	; 0x30
        setGraphRangeXScaled(int2scaledX(min), int2scaledX(max));
 800359a:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800359e:	4362      	muls	r2, r4
 80035a0:	4361      	muls	r1, r4
    }
 80035a2:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeXScaled(int2scaledX(min), int2scaledX(max));
 80035a6:	4718      	bx	r3

080035a8 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff>:
     *
     * @return The product of the two numbers, rounded to nearest integer value.
     */
    FORCE_INLINE_FUNCTION static int float2scaled(float f, int scale)
    {
        const float fs = f * (float)scale;
 80035a8:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
        setGraphRangeXScaled(float2scaledX(min), float2scaledX(max));
 80035ac:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 80035ae:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setGraphRangeXScaled(float2scaledX(min), float2scaledX(max));
 80035b2:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
        const float fs = f * (float)scale;
 80035b6:	ee20 0a27 	vmul.f32	s0, s0, s15
        if (fs >= 0)
 80035ba:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80035be:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80035c2:	db17      	blt.n	80035f4 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x4c>
        {
            return (int)(fs + 0.5f);
 80035c4:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80035c8:	ee30 0a07 	vadd.f32	s0, s0, s14
 80035cc:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 80035d0:	ee17 1a10 	vmov	r1, s14
        const float fs = f * (float)scale;
 80035d4:	ee60 0aa7 	vmul.f32	s1, s1, s15
        if (fs >= 0)
 80035d8:	eef5 0ac0 	vcmpe.f32	s1, #0.0
 80035dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80035e0:	db1c      	blt.n	800361c <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x74>
            return (int)(fs + 0.5f);
 80035e2:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 80035e6:	ee70 0aa7 	vadd.f32	s1, s1, s15
 80035ea:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 80035ee:	ee17 2a90 	vmov	r2, s15
        setGraphRangeXScaled(float2scaledX(min), float2scaledX(max));
 80035f2:	4718      	bx	r3
        }
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80035f4:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 80035f8:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80035fc:	ee17 2a10 	vmov	r2, s14
 8003600:	ee30 0a66 	vsub.f32	s0, s0, s13
 8003604:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8003608:	ee30 0a26 	vadd.f32	s0, s0, s13
 800360c:	1e51      	subs	r1, r2, #1
 800360e:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8003612:	ee10 2a10 	vmov	r2, s0
 8003616:	440a      	add	r2, r1
 8003618:	4611      	mov	r1, r2
 800361a:	e7db      	b.n	80035d4 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x2c>
 800361c:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 8003620:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8003624:	ee17 2a90 	vmov	r2, s15
 8003628:	ee70 0ac7 	vsub.f32	s1, s1, s14
 800362c:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 8003630:	ee70 0a87 	vadd.f32	s1, s1, s14
 8003634:	3a01      	subs	r2, #1
 8003636:	eefd 0ae0 	vcvt.s32.f32	s1, s1
 800363a:	ee10 ca90 	vmov	ip, s1
 800363e:	4494      	add	ip, r2
 8003640:	4662      	mov	r2, ip
 8003642:	e7d6      	b.n	80035f2 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x4a>

08003644 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbi>:
    virtual void setGraphRangeXAuto(bool showYaxis = true, int margin = 0)
 8003644:	b410      	push	{r4}
        setGraphRangeXAutoScaled(showYaxis, int2scaledX(margin));
 8003646:	6803      	ldr	r3, [r0, #0]
        return i * scale;
 8003648:	6b04      	ldr	r4, [r0, #48]	; 0x30
        setGraphRangeXAutoScaled(showYaxis, int2scaledX(margin));
 800364a:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800364e:	4362      	muls	r2, r4
    }
 8003650:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeXAutoScaled(showYaxis, int2scaledX(margin));
 8003654:	4718      	bx	r3

08003656 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbf>:
        const float fs = f * (float)scale;
 8003656:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
        setGraphRangeXAutoScaled(showYaxis, float2scaledX(margin));
 800365a:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 800365c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setGraphRangeXAutoScaled(showYaxis, float2scaledX(margin));
 8003660:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
        const float fs = f * (float)scale;
 8003664:	ee27 0a80 	vmul.f32	s0, s15, s0
        if (fs >= 0)
 8003668:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 800366c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003670:	db08      	blt.n	8003684 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbf+0x2e>
            return (int)(fs + 0.5f);
 8003672:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8003676:	ee30 0a27 	vadd.f32	s0, s0, s15
 800367a:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 800367e:	ee17 2a90 	vmov	r2, s15
        setGraphRangeXAutoScaled(showYaxis, float2scaledX(margin));
 8003682:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8003684:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8003688:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800368c:	ee17 2a90 	vmov	r2, s15
 8003690:	ee30 0a47 	vsub.f32	s0, s0, s14
 8003694:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 8003698:	ee30 0a07 	vadd.f32	s0, s0, s14
 800369c:	3a01      	subs	r2, #1
 800369e:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 80036a2:	ee10 ca10 	vmov	ip, s0
 80036a6:	4494      	add	ip, r2
 80036a8:	4662      	mov	r2, ip
 80036aa:	e7ea      	b.n	8003682 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbf+0x2c>

080036ac <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEii>:
    virtual void setGraphRangeY(int min, int max)
 80036ac:	b410      	push	{r4}
        setGraphRangeYScaled(int2scaledY(min), int2scaledY(max));
 80036ae:	6803      	ldr	r3, [r0, #0]
        return int2scaled(i, yScale);
 80036b0:	6b44      	ldr	r4, [r0, #52]	; 0x34
        setGraphRangeYScaled(int2scaledY(min), int2scaledY(max));
 80036b2:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 80036b6:	4362      	muls	r2, r4
 80036b8:	4361      	muls	r1, r4
    }
 80036ba:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeYScaled(int2scaledY(min), int2scaledY(max));
 80036be:	4718      	bx	r3

080036c0 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff>:
        const float fs = f * (float)scale;
 80036c0:	edd0 7a0d 	vldr	s15, [r0, #52]	; 0x34
        setGraphRangeYScaled(float2scaledY(min), float2scaledY(max));
 80036c4:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 80036c6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setGraphRangeYScaled(float2scaledY(min), float2scaledY(max));
 80036ca:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
        const float fs = f * (float)scale;
 80036ce:	ee20 0a27 	vmul.f32	s0, s0, s15
        if (fs >= 0)
 80036d2:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80036d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80036da:	db17      	blt.n	800370c <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x4c>
            return (int)(fs + 0.5f);
 80036dc:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80036e0:	ee30 0a07 	vadd.f32	s0, s0, s14
 80036e4:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 80036e8:	ee17 1a10 	vmov	r1, s14
        const float fs = f * (float)scale;
 80036ec:	ee60 0aa7 	vmul.f32	s1, s1, s15
        if (fs >= 0)
 80036f0:	eef5 0ac0 	vcmpe.f32	s1, #0.0
 80036f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80036f8:	db1c      	blt.n	8003734 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x74>
            return (int)(fs + 0.5f);
 80036fa:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 80036fe:	ee70 0aa7 	vadd.f32	s1, s1, s15
 8003702:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 8003706:	ee17 2a90 	vmov	r2, s15
        setGraphRangeYScaled(float2scaledY(min), float2scaledY(max));
 800370a:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 800370c:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 8003710:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8003714:	ee17 2a10 	vmov	r2, s14
 8003718:	ee30 0a66 	vsub.f32	s0, s0, s13
 800371c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8003720:	ee30 0a26 	vadd.f32	s0, s0, s13
 8003724:	1e51      	subs	r1, r2, #1
 8003726:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 800372a:	ee10 2a10 	vmov	r2, s0
 800372e:	440a      	add	r2, r1
 8003730:	4611      	mov	r1, r2
 8003732:	e7db      	b.n	80036ec <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x2c>
 8003734:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 8003738:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800373c:	ee17 2a90 	vmov	r2, s15
 8003740:	ee70 0ac7 	vsub.f32	s1, s1, s14
 8003744:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 8003748:	ee70 0a87 	vadd.f32	s1, s1, s14
 800374c:	3a01      	subs	r2, #1
 800374e:	eefd 0ae0 	vcvt.s32.f32	s1, s1
 8003752:	ee10 ca90 	vmov	ip, s1
 8003756:	4494      	add	ip, r2
 8003758:	4662      	mov	r2, ip
 800375a:	e7d6      	b.n	800370a <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x4a>

0800375c <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbi>:
    virtual void setGraphRangeYAuto(bool showXaxis = true, int margin = 0)
 800375c:	b410      	push	{r4}
        setGraphRangeYAutoScaled(showXaxis, int2scaledY(margin));
 800375e:	6803      	ldr	r3, [r0, #0]
        return i * scale;
 8003760:	6b44      	ldr	r4, [r0, #52]	; 0x34
        setGraphRangeYAutoScaled(showXaxis, int2scaledY(margin));
 8003762:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 8003766:	4362      	muls	r2, r4
    }
 8003768:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeYAutoScaled(showXaxis, int2scaledY(margin));
 800376c:	4718      	bx	r3

0800376e <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbf>:
        const float fs = f * (float)scale;
 800376e:	edd0 7a0d 	vldr	s15, [r0, #52]	; 0x34
        setGraphRangeYAutoScaled(showXaxis, float2scaledY(margin));
 8003772:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 8003774:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setGraphRangeYAutoScaled(showXaxis, float2scaledY(margin));
 8003778:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
        const float fs = f * (float)scale;
 800377c:	ee27 0a80 	vmul.f32	s0, s15, s0
        if (fs >= 0)
 8003780:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8003784:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003788:	db08      	blt.n	800379c <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbf+0x2e>
            return (int)(fs + 0.5f);
 800378a:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 800378e:	ee30 0a27 	vadd.f32	s0, s0, s15
 8003792:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8003796:	ee17 2a90 	vmov	r2, s15
        setGraphRangeYAutoScaled(showXaxis, float2scaledY(margin));
 800379a:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 800379c:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 80037a0:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80037a4:	ee17 2a90 	vmov	r2, s15
 80037a8:	ee30 0a47 	vsub.f32	s0, s0, s14
 80037ac:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 80037b0:	ee30 0a07 	vadd.f32	s0, s0, s14
 80037b4:	3a01      	subs	r2, #1
 80037b6:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 80037ba:	ee10 ca10 	vmov	ip, s0
 80037be:	4494      	add	ip, r2
 80037c0:	4662      	mov	r2, ip
 80037c2:	e7ea      	b.n	800379a <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbf+0x2c>

080037c4 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMinAsIntEv>:
        return scaled2intX(graphRangeMinX);
 80037c4:	f8d0 312c 	ldr.w	r3, [r0, #300]	; 0x12c
     *
     * @note For internal use.
     */
    FORCE_INLINE_FUNCTION int scaled2intX(int i) const
    {
        return scaled2int(i, xScale);
 80037c8:	6b02      	ldr	r2, [r0, #48]	; 0x30
        if (i >= 0)
 80037ca:	2b00      	cmp	r3, #0
 80037cc:	db07      	blt.n	80037de <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMinAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 80037ce:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80037d2:	fb93 f0f2 	sdiv	r0, r3, r2
 80037d6:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80037da:	1040      	asrs	r0, r0, #1
 80037dc:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 80037de:	f06f 0001 	mvn.w	r0, #1
 80037e2:	fb00 2003 	mla	r0, r0, r3, r2
 80037e6:	3801      	subs	r0, #1
 80037e8:	fb90 f0f2 	sdiv	r0, r0, r2
 80037ec:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80037f0:	1040      	asrs	r0, r0, #1
 80037f2:	4240      	negs	r0, r0
    }
 80037f4:	4770      	bx	lr

080037f6 <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeXMinAsFloatEv>:
     *
     * @return The number divided by the scale.
     */
    FORCE_INLINE_FUNCTION static float scaled2float(int i, int scale)
    {
        return (float)i / (float)scale;
 80037f6:	edd0 7a4b 	vldr	s15, [r0, #300]	; 0x12c
 80037fa:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 80037fe:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
 8003802:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 8003806:	ee80 0a27 	vdiv.f32	s0, s0, s15
 800380a:	4770      	bx	lr

0800380c <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeXMinScaledEv>:
    }
 800380c:	f8d0 012c 	ldr.w	r0, [r0, #300]	; 0x12c
 8003810:	4770      	bx	lr

08003812 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMaxAsIntEv>:
        return scaled2intX(graphRangeMaxX);
 8003812:	f8d0 3130 	ldr.w	r3, [r0, #304]	; 0x130
        return scaled2int(i, xScale);
 8003816:	6b02      	ldr	r2, [r0, #48]	; 0x30
        if (i >= 0)
 8003818:	2b00      	cmp	r3, #0
 800381a:	db07      	blt.n	800382c <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMaxAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 800381c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8003820:	fb93 f0f2 	sdiv	r0, r3, r2
 8003824:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003828:	1040      	asrs	r0, r0, #1
 800382a:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 800382c:	f06f 0001 	mvn.w	r0, #1
 8003830:	fb00 2003 	mla	r0, r0, r3, r2
 8003834:	3801      	subs	r0, #1
 8003836:	fb90 f0f2 	sdiv	r0, r0, r2
 800383a:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 800383e:	1040      	asrs	r0, r0, #1
 8003840:	4240      	negs	r0, r0
    }
 8003842:	4770      	bx	lr

08003844 <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeXMaxAsFloatEv>:
        return (float)i / (float)scale;
 8003844:	edd0 7a4c 	vldr	s15, [r0, #304]	; 0x130
 8003848:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 800384c:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
 8003850:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 8003854:	ee80 0a27 	vdiv.f32	s0, s0, s15
 8003858:	4770      	bx	lr

0800385a <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeXMaxScaledEv>:
    }
 800385a:	f8d0 0130 	ldr.w	r0, [r0, #304]	; 0x130
 800385e:	4770      	bx	lr

08003860 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMinAsIntEv>:
        return scaled2intY(graphRangeMinY);
 8003860:	f8d0 3134 	ldr.w	r3, [r0, #308]	; 0x134
        return scaled2int(i, yScale);
 8003864:	6b42      	ldr	r2, [r0, #52]	; 0x34
        if (i >= 0)
 8003866:	2b00      	cmp	r3, #0
 8003868:	db07      	blt.n	800387a <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMinAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 800386a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 800386e:	fb93 f0f2 	sdiv	r0, r3, r2
 8003872:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003876:	1040      	asrs	r0, r0, #1
 8003878:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 800387a:	f06f 0001 	mvn.w	r0, #1
 800387e:	fb00 2003 	mla	r0, r0, r3, r2
 8003882:	3801      	subs	r0, #1
 8003884:	fb90 f0f2 	sdiv	r0, r0, r2
 8003888:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 800388c:	1040      	asrs	r0, r0, #1
 800388e:	4240      	negs	r0, r0
    }
 8003890:	4770      	bx	lr

08003892 <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeYMinAsFloatEv>:
        return (float)i / (float)scale;
 8003892:	edd0 7a4d 	vldr	s15, [r0, #308]	; 0x134
 8003896:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 800389a:	edd0 7a0d 	vldr	s15, [r0, #52]	; 0x34
 800389e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 80038a2:	ee80 0a27 	vdiv.f32	s0, s0, s15
 80038a6:	4770      	bx	lr

080038a8 <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeYMinScaledEv>:
    }
 80038a8:	f8d0 0134 	ldr.w	r0, [r0, #308]	; 0x134
 80038ac:	4770      	bx	lr

080038ae <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMaxAsIntEv>:
        return scaled2intY(graphRangeMaxY);
 80038ae:	f8d0 3138 	ldr.w	r3, [r0, #312]	; 0x138
        return scaled2int(i, yScale);
 80038b2:	6b42      	ldr	r2, [r0, #52]	; 0x34
        if (i >= 0)
 80038b4:	2b00      	cmp	r3, #0
 80038b6:	db07      	blt.n	80038c8 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMaxAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 80038b8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80038bc:	fb93 f0f2 	sdiv	r0, r3, r2
 80038c0:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80038c4:	1040      	asrs	r0, r0, #1
 80038c6:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 80038c8:	f06f 0001 	mvn.w	r0, #1
 80038cc:	fb00 2003 	mla	r0, r0, r3, r2
 80038d0:	3801      	subs	r0, #1
 80038d2:	fb90 f0f2 	sdiv	r0, r0, r2
 80038d6:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80038da:	1040      	asrs	r0, r0, #1
 80038dc:	4240      	negs	r0, r0
    }
 80038de:	4770      	bx	lr

080038e0 <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeYMaxAsFloatEv>:
        return (float)i / (float)scale;
 80038e0:	edd0 7a4e 	vldr	s15, [r0, #312]	; 0x138
 80038e4:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 80038e8:	edd0 7a0d 	vldr	s15, [r0, #52]	; 0x34
 80038ec:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 80038f0:	ee80 0a27 	vdiv.f32	s0, s0, s15
 80038f4:	4770      	bx	lr

080038f6 <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeYMaxScaledEv>:
    }
 80038f6:	f8d0 0138 	ldr.w	r0, [r0, #312]	; 0x138
 80038fa:	4770      	bx	lr

080038fc <_ZN8touchgfx16DynamicDataGraph8setScaleEib>:
     * @see getScale
     *
     * @note The current xAxisFactor, xAxisOffet and xGraphRange values are updated to reflect the
     *       new scale being set.
     */
    virtual void setScale(int scale, bool updateData = false)
 80038fc:	b570      	push	{r4, r5, r6, lr}
    {
        setScaleX(scale, updateData);
 80038fe:	6803      	ldr	r3, [r0, #0]
    virtual void setScale(int scale, bool updateData = false)
 8003900:	4604      	mov	r4, r0
        setScaleX(scale, updateData);
 8003902:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
    virtual void setScale(int scale, bool updateData = false)
 8003906:	460d      	mov	r5, r1
 8003908:	4616      	mov	r6, r2
        setScaleX(scale, updateData);
 800390a:	4798      	blx	r3
        setScaleY(scale, updateData);
 800390c:	6823      	ldr	r3, [r4, #0]
 800390e:	4632      	mov	r2, r6
 8003910:	4629      	mov	r1, r5
 8003912:	4620      	mov	r0, r4
 8003914:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
    }
 8003918:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setScaleY(scale, updateData);
 800391c:	4718      	bx	r3

0800391e <_ZNK8touchgfx16DynamicDataGraph8getScaleEv>:
     *
     * @see setScale
     */
    virtual int getScale() const
    {
        return getScaleY();
 800391e:	6803      	ldr	r3, [r0, #0]
 8003920:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8003924:	4718      	bx	r3

08003926 <_ZNK8touchgfx16DynamicDataGraph17getGraphRangeXMinEv>:
     *
     * @return The minimum x coordinate .
     */
    virtual int getGraphRangeXMin() const
    {
        return getGraphRangeXMinScaled();
 8003926:	6803      	ldr	r3, [r0, #0]
 8003928:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 800392c:	4718      	bx	r3

0800392e <_ZNK8touchgfx16DynamicDataGraph17getGraphRangeXMaxEv>:
     *
     * @return The maximum x coordinate .
     */
    virtual int getGraphRangeXMax() const
    {
        return getGraphRangeXMaxScaled();
 800392e:	6803      	ldr	r3, [r0, #0]
 8003930:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8003934:	4718      	bx	r3

08003936 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeXAutoScaledEbi>:

    virtual void setGraphRangeYAutoScaled(bool showXaxis, int margin);

    virtual void setGraphRangeXAutoScaled(bool /*showYaxis*/, int margin)
    {
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 8003936:	6803      	ldr	r3, [r0, #0]
        if (i >= 0)
 8003938:	2a00      	cmp	r2, #0
    virtual void setGraphRangeXAutoScaled(bool /*showYaxis*/, int margin)
 800393a:	b410      	push	{r4}
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 800393c:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
        return scaled2int(i, xScale);
 8003940:	6b04      	ldr	r4, [r0, #48]	; 0x30
        if (i >= 0)
 8003942:	db0e      	blt.n	8003962 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeXAutoScaledEbi+0x2c>
            return ((i * 2 + scale) / scale) / 2;
 8003944:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8003948:	fb92 f1f4 	sdiv	r1, r2, r4
 800394c:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8003950:	1049      	asrs	r1, r1, #1
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 8003952:	f9b0 211e 	ldrsh.w	r2, [r0, #286]	; 0x11e
    }
 8003956:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 800395a:	3a01      	subs	r2, #1
 800395c:	440a      	add	r2, r1
 800395e:	4249      	negs	r1, r1
 8003960:	4718      	bx	r3
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8003962:	f06f 0101 	mvn.w	r1, #1
 8003966:	fb01 4102 	mla	r1, r1, r2, r4
 800396a:	3901      	subs	r1, #1
 800396c:	fb91 f1f4 	sdiv	r1, r1, r4
 8003970:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8003974:	1049      	asrs	r1, r1, #1
 8003976:	4249      	negs	r1, r1
 8003978:	e7eb      	b.n	8003952 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeXAutoScaledEbi+0x1c>

0800397a <_ZN8touchgfx16DynamicDataGraph13setXAxisScaleEi>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use setXAxisFactor()", virtual void setXAxisScale(int scale))
    {
        setXAxisFactor(scale);
 800397a:	6803      	ldr	r3, [r0, #0]
 800397c:	f8d3 313c 	ldr.w	r3, [r3, #316]	; 0x13c
 8003980:	4718      	bx	r3

08003982 <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEi>:
        return i * scale;
 8003982:	6b02      	ldr	r2, [r0, #48]	; 0x30
     *
     * @param  factor The x axis factor.
     */
    virtual void setXAxisFactor(int factor)
    {
        setXAxisFactorScaled(int2scaledX(factor));
 8003984:	6803      	ldr	r3, [r0, #0]
 8003986:	4351      	muls	r1, r2
 8003988:	f8d3 3148 	ldr.w	r3, [r3, #328]	; 0x148
 800398c:	4718      	bx	r3

0800398e <_ZN8touchgfx16DynamicDataGraph13setXAxisScaleEf>:
    }

    /// @cond
    TOUCHGFX_DEPRECATED("Please use setXAxisFactor()", virtual void setXAxisScale(float scale))
    {
        setXAxisFactor(scale);
 800398e:	6803      	ldr	r3, [r0, #0]
 8003990:	f8d3 3144 	ldr.w	r3, [r3, #324]	; 0x144
 8003994:	4718      	bx	r3

08003996 <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEf>:
        const float fs = f * (float)scale;
 8003996:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
    /// @endcond

    /** @copydoc setXAxisFactor(int) */
    virtual void setXAxisFactor(float factor)
    {
        setXAxisFactorScaled(float2scaledX(factor));
 800399a:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 800399c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setXAxisFactorScaled(float2scaledX(factor));
 80039a0:	f8d3 3148 	ldr.w	r3, [r3, #328]	; 0x148
        const float fs = f * (float)scale;
 80039a4:	ee27 0a80 	vmul.f32	s0, s15, s0
        if (fs >= 0)
 80039a8:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80039ac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80039b0:	db08      	blt.n	80039c4 <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEf+0x2e>
            return (int)(fs + 0.5f);
 80039b2:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 80039b6:	ee30 0a27 	vadd.f32	s0, s0, s15
 80039ba:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 80039be:	ee17 1a90 	vmov	r1, s15
        setXAxisFactorScaled(float2scaledX(factor));
 80039c2:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80039c4:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 80039c8:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80039cc:	ee17 2a90 	vmov	r2, s15
 80039d0:	ee30 0a47 	vsub.f32	s0, s0, s14
 80039d4:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 80039d8:	ee30 0a07 	vadd.f32	s0, s0, s14
 80039dc:	1e51      	subs	r1, r2, #1
 80039de:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 80039e2:	ee10 2a10 	vmov	r2, s0
 80039e6:	440a      	add	r2, r1
 80039e8:	4611      	mov	r1, r2
 80039ea:	e7ea      	b.n	80039c2 <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEf+0x2c>

080039ec <_ZN8touchgfx16DynamicDataGraph20setXAxisFactorScaledEi>:
     *
     * @see setXAxisFactorScaled,setXAxisFactor
     */
    virtual void setXAxisFactorScaled(int factor)
    {
        xAxisFactor = factor;
 80039ec:	f8c0 113c 	str.w	r1, [r0, #316]	; 0x13c
    }
 80039f0:	4770      	bx	lr

080039f2 <_ZNK8touchgfx16DynamicDataGraph18getXAxisScaleAsIntEv>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use getXAxisFactorAsInt()", virtual int getXAxisScaleAsInt() const)
    {
        return getXAxisFactorAsInt();
 80039f2:	6803      	ldr	r3, [r0, #0]
 80039f4:	f8d3 3150 	ldr.w	r3, [r3, #336]	; 0x150
 80039f8:	4718      	bx	r3

080039fa <_ZNK8touchgfx16DynamicDataGraph19getXAxisFactorAsIntEv>:
     *
     * @return The x axis factor.
     */
    virtual int getXAxisFactorAsInt() const
    {
        return scaled2intX(getXAxisFactorScaled());
 80039fa:	6803      	ldr	r3, [r0, #0]
    virtual int getXAxisFactorAsInt() const
 80039fc:	b510      	push	{r4, lr}
        return scaled2intX(getXAxisFactorScaled());
 80039fe:	f8d3 315c 	ldr.w	r3, [r3, #348]	; 0x15c
    virtual int getXAxisFactorAsInt() const
 8003a02:	4604      	mov	r4, r0
        return scaled2intX(getXAxisFactorScaled());
 8003a04:	4798      	blx	r3
        if (i >= 0)
 8003a06:	2800      	cmp	r0, #0
        return scaled2int(i, xScale);
 8003a08:	6b23      	ldr	r3, [r4, #48]	; 0x30
        if (i >= 0)
 8003a0a:	db07      	blt.n	8003a1c <_ZNK8touchgfx16DynamicDataGraph19getXAxisFactorAsIntEv+0x22>
            return ((i * 2 + scale) / scale) / 2;
 8003a0c:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8003a10:	fb90 f0f3 	sdiv	r0, r0, r3
 8003a14:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003a18:	1040      	asrs	r0, r0, #1
    }
 8003a1a:	bd10      	pop	{r4, pc}
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8003a1c:	f06f 0201 	mvn.w	r2, #1
 8003a20:	fb02 3000 	mla	r0, r2, r0, r3
 8003a24:	3801      	subs	r0, #1
 8003a26:	fb90 f0f3 	sdiv	r0, r0, r3
 8003a2a:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003a2e:	1040      	asrs	r0, r0, #1
 8003a30:	4240      	negs	r0, r0
        return scaled2intX(getXAxisFactorScaled());
 8003a32:	e7f2      	b.n	8003a1a <_ZNK8touchgfx16DynamicDataGraph19getXAxisFactorAsIntEv+0x20>

08003a34 <_ZNK8touchgfx16DynamicDataGraph20getXAxisScaleAsFloatEv>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use getXAxisFactorAsFloat()", virtual float getXAxisScaleAsFloat() const)
    {
        return getXAxisFactorAsFloat();
 8003a34:	6803      	ldr	r3, [r0, #0]
 8003a36:	f8d3 3158 	ldr.w	r3, [r3, #344]	; 0x158
 8003a3a:	4718      	bx	r3

08003a3c <_ZNK8touchgfx16DynamicDataGraph21getXAxisFactorAsFloatEv>:
    /// @endcond

    /** @copydoc getXAxisFactorAsInt() */
    virtual float getXAxisFactorAsFloat() const
    {
        return scaled2floatX(getXAxisFactorScaled());
 8003a3c:	6803      	ldr	r3, [r0, #0]
    virtual float getXAxisFactorAsFloat() const
 8003a3e:	b510      	push	{r4, lr}
        return scaled2floatX(getXAxisFactorScaled());
 8003a40:	f8d3 315c 	ldr.w	r3, [r3, #348]	; 0x15c
    virtual float getXAxisFactorAsFloat() const
 8003a44:	4604      	mov	r4, r0
        return scaled2floatX(getXAxisFactorScaled());
 8003a46:	4798      	blx	r3
        return (float)i / (float)scale;
 8003a48:	ee07 0a90 	vmov	s15, r0
 8003a4c:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8003a50:	edd4 7a0c 	vldr	s15, [r4, #48]	; 0x30
 8003a54:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 8003a58:	ee80 0a27 	vdiv.f32	s0, s0, s15
 8003a5c:	bd10      	pop	{r4, pc}

08003a5e <_ZNK8touchgfx16DynamicDataGraph20getXAxisFactorScaledEv>:
     * @see getXAxisFactorAsInt, getXAxisFactorAsFloat, setXAxisFactor
     */
    virtual int getXAxisFactorScaled() const
    {
        return xAxisFactor;
    }
 8003a5e:	f8d0 013c 	ldr.w	r0, [r0, #316]	; 0x13c
 8003a62:	4770      	bx	lr

08003a64 <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEi>:
        return i * scale;
 8003a64:	6b02      	ldr	r2, [r0, #48]	; 0x30
     *
     * @param  offset The x axis offset.
     */
    virtual void setXAxisOffset(int offset)
    {
        setXAxisOffsetScaled(int2scaledX(offset));
 8003a66:	6803      	ldr	r3, [r0, #0]
 8003a68:	4351      	muls	r1, r2
 8003a6a:	f8d3 3168 	ldr.w	r3, [r3, #360]	; 0x168
 8003a6e:	4718      	bx	r3

08003a70 <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEf>:
        const float fs = f * (float)scale;
 8003a70:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
    }

    /** @copydoc setXAxisOffset(int) */
    virtual void setXAxisOffset(float offset)
    {
        setXAxisOffsetScaled(float2scaledX(offset));
 8003a74:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 8003a76:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setXAxisOffsetScaled(float2scaledX(offset));
 8003a7a:	f8d3 3168 	ldr.w	r3, [r3, #360]	; 0x168
        const float fs = f * (float)scale;
 8003a7e:	ee27 0a80 	vmul.f32	s0, s15, s0
        if (fs >= 0)
 8003a82:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8003a86:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003a8a:	db08      	blt.n	8003a9e <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEf+0x2e>
            return (int)(fs + 0.5f);
 8003a8c:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8003a90:	ee30 0a27 	vadd.f32	s0, s0, s15
 8003a94:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8003a98:	ee17 1a90 	vmov	r1, s15
        setXAxisOffsetScaled(float2scaledX(offset));
 8003a9c:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8003a9e:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8003aa2:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8003aa6:	ee17 2a90 	vmov	r2, s15
 8003aaa:	ee30 0a47 	vsub.f32	s0, s0, s14
 8003aae:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 8003ab2:	ee30 0a07 	vadd.f32	s0, s0, s14
 8003ab6:	1e51      	subs	r1, r2, #1
 8003ab8:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8003abc:	ee10 2a10 	vmov	r2, s0
 8003ac0:	440a      	add	r2, r1
 8003ac2:	4611      	mov	r1, r2
 8003ac4:	e7ea      	b.n	8003a9c <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEf+0x2c>

08003ac6 <_ZN8touchgfx16DynamicDataGraph20setXAxisOffsetScaledEi>:
     *
     * @see setXAxisOffset, getXAxisOffsetScaled
     */
    virtual void setXAxisOffsetScaled(int offset)
    {
        xAxisOffset = offset;
 8003ac6:	f8c0 1140 	str.w	r1, [r0, #320]	; 0x140
    }
 8003aca:	4770      	bx	lr

08003acc <_ZNK8touchgfx16DynamicDataGraph19getXAxisOffsetAsIntEv>:
     *
     * @return The x axis offset.
     */
    virtual int getXAxisOffsetAsInt() const
    {
        return scaled2intX(getXAxisOffsetScaled());
 8003acc:	6803      	ldr	r3, [r0, #0]
    virtual int getXAxisOffsetAsInt() const
 8003ace:	b510      	push	{r4, lr}
        return scaled2intX(getXAxisOffsetScaled());
 8003ad0:	f8d3 3174 	ldr.w	r3, [r3, #372]	; 0x174
    virtual int getXAxisOffsetAsInt() const
 8003ad4:	4604      	mov	r4, r0
        return scaled2intX(getXAxisOffsetScaled());
 8003ad6:	4798      	blx	r3
        if (i >= 0)
 8003ad8:	2800      	cmp	r0, #0
        return scaled2int(i, xScale);
 8003ada:	6b23      	ldr	r3, [r4, #48]	; 0x30
        if (i >= 0)
 8003adc:	db07      	blt.n	8003aee <_ZNK8touchgfx16DynamicDataGraph19getXAxisOffsetAsIntEv+0x22>
            return ((i * 2 + scale) / scale) / 2;
 8003ade:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8003ae2:	fb90 f0f3 	sdiv	r0, r0, r3
 8003ae6:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003aea:	1040      	asrs	r0, r0, #1
    }
 8003aec:	bd10      	pop	{r4, pc}
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8003aee:	f06f 0201 	mvn.w	r2, #1
 8003af2:	fb02 3000 	mla	r0, r2, r0, r3
 8003af6:	3801      	subs	r0, #1
 8003af8:	fb90 f0f3 	sdiv	r0, r0, r3
 8003afc:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003b00:	1040      	asrs	r0, r0, #1
 8003b02:	4240      	negs	r0, r0
        return scaled2intX(getXAxisOffsetScaled());
 8003b04:	e7f2      	b.n	8003aec <_ZNK8touchgfx16DynamicDataGraph19getXAxisOffsetAsIntEv+0x20>

08003b06 <_ZNK8touchgfx16DynamicDataGraph21getXAxisOffsetAsFloatEv>:

    /** @copydoc getXAxisOffsetAsInt() */
    virtual float getXAxisOffsetAsFloat() const
    {
        return scaled2floatX(getXAxisOffsetScaled());
 8003b06:	6803      	ldr	r3, [r0, #0]
    virtual float getXAxisOffsetAsFloat() const
 8003b08:	b510      	push	{r4, lr}
        return scaled2floatX(getXAxisOffsetScaled());
 8003b0a:	f8d3 3174 	ldr.w	r3, [r3, #372]	; 0x174
    virtual float getXAxisOffsetAsFloat() const
 8003b0e:	4604      	mov	r4, r0
        return scaled2floatX(getXAxisOffsetScaled());
 8003b10:	4798      	blx	r3
        return (float)i / (float)scale;
 8003b12:	ee07 0a90 	vmov	s15, r0
 8003b16:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8003b1a:	edd4 7a0c 	vldr	s15, [r4, #48]	; 0x30
 8003b1e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 8003b22:	ee80 0a27 	vdiv.f32	s0, s0, s15
 8003b26:	bd10      	pop	{r4, pc}

08003b28 <_ZNK8touchgfx16DynamicDataGraph20getXAxisOffsetScaledEv>:
     * @see getXAxisOffsetAsInt, getXAxisOffsetAsFloat, setXAxisOffsetScaled, setXAxisOffset
     */
    virtual int getXAxisOffsetScaled() const
    {
        return xAxisOffset;
    }
 8003b28:	f8d0 0140 	ldr.w	r0, [r0, #320]	; 0x140
 8003b2c:	4770      	bx	lr

08003b2e <_ZNK8touchgfx16DynamicDataGraph12indexToXAxisEii>:
    }

    virtual int indexToXAxis(const int valueScaled, const int /*labelScaled*/) const
    {
        // Value is also index for these types of graphs.
        return (indexToGlobalIndex(scaled2intX(valueScaled)) * xAxisFactor) + xAxisOffset;
 8003b2e:	6803      	ldr	r3, [r0, #0]
        return scaled2int(i, xScale);
 8003b30:	6b02      	ldr	r2, [r0, #48]	; 0x30
        return (indexToGlobalIndex(scaled2intX(valueScaled)) * xAxisFactor) + xAxisOffset;
 8003b32:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
        if (i >= 0)
 8003b36:	2900      	cmp	r1, #0
    virtual int indexToXAxis(const int valueScaled, const int /*labelScaled*/) const
 8003b38:	b510      	push	{r4, lr}
 8003b3a:	4604      	mov	r4, r0
        if (i >= 0)
 8003b3c:	db0e      	blt.n	8003b5c <_ZNK8touchgfx16DynamicDataGraph12indexToXAxisEii+0x2e>
            return ((i * 2 + scale) / scale) / 2;
 8003b3e:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 8003b42:	fb91 f1f2 	sdiv	r1, r1, r2
 8003b46:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8003b4a:	1049      	asrs	r1, r1, #1
        return (indexToGlobalIndex(scaled2intX(valueScaled)) * xAxisFactor) + xAxisOffset;
 8003b4c:	b209      	sxth	r1, r1
 8003b4e:	4620      	mov	r0, r4
 8003b50:	4798      	blx	r3
 8003b52:	e9d4 234f 	ldrd	r2, r3, [r4, #316]	; 0x13c
    }
 8003b56:	fb02 3000 	mla	r0, r2, r0, r3
 8003b5a:	bd10      	pop	{r4, pc}
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8003b5c:	f06f 0001 	mvn.w	r0, #1
 8003b60:	fb00 2101 	mla	r1, r0, r1, r2
 8003b64:	3901      	subs	r1, #1
 8003b66:	fb91 f1f2 	sdiv	r1, r1, r2
 8003b6a:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8003b6e:	1049      	asrs	r1, r1, #1
 8003b70:	4249      	negs	r1, r1
 8003b72:	e7eb      	b.n	8003b4c <_ZNK8touchgfx16DynamicDataGraph12indexToXAxisEii+0x1e>

08003b74 <_ZNK8touchgfx16DynamicDataGraph9getScaleXEv>:
    virtual void setScaleX(int scale, bool updateData = false);

    virtual int getScaleX() const
    {
        return AbstractDataGraph::getScaleX();
    }
 8003b74:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8003b76:	4770      	bx	lr

08003b78 <_ZNK8touchgfx16DynamicDataGraph9getScaleYEv>:
    virtual void setScaleY(int scale, bool updateData = false);

    virtual int getScaleY() const
    {
        return AbstractDataGraph::getScaleY();
    }
 8003b78:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8003b7a:	4770      	bx	lr

08003b7c <_ZN8touchgfx16DynamicDataGraph19setXAxisScaleScaledEi>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use setXAxisFactorScaled()", virtual void setXAxisScaleScaled(int scale))
    {
        setXAxisFactorScaled(scale);
 8003b7c:	6803      	ldr	r3, [r0, #0]
 8003b7e:	f8d3 3148 	ldr.w	r3, [r3, #328]	; 0x148
 8003b82:	4718      	bx	r3

08003b84 <_ZNK8touchgfx16DynamicDataGraph19getXAxisScaleScaledEv>:
    /// @endcond

    /// @cond
    TOUCHGFX_DEPRECATED("Please use getXAxisFactorScaled()", virtual int getXAxisScaleScaled() const)
    {
        return getXAxisFactorScaled();
 8003b84:	6803      	ldr	r3, [r0, #0]
 8003b86:	f8d3 315c 	ldr.w	r3, [r3, #348]	; 0x15c
 8003b8a:	4718      	bx	r3

08003b8c <_ZNK8touchgfx16DynamicDataGraph16indexToScreenXQ5Es>:
        return i * scale;
 8003b8c:	6b02      	ldr	r2, [r0, #48]	; 0x30
    }
    /// @endcond

    virtual CWRUtil::Q5 indexToScreenXQ5(int16_t index) const
    {
        return valueToScreenXQ5(int2scaledX(index));
 8003b8e:	6803      	ldr	r3, [r0, #0]
 8003b90:	4351      	muls	r1, r2
 8003b92:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 8003b96:	4718      	bx	r3

08003b98 <_ZNK8touchgfx16DynamicDataGraph16indexToScreenYQ5Es>:
    }

    virtual CWRUtil::Q5 indexToScreenYQ5(int16_t index) const
    {
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 8003b98:	6803      	ldr	r3, [r0, #0]
    virtual CWRUtil::Q5 indexToScreenYQ5(int16_t index) const
 8003b9a:	b570      	push	{r4, r5, r6, lr}
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 8003b9c:	f8d3 5118 	ldr.w	r5, [r3, #280]	; 0x118
 8003ba0:	f8d3 3180 	ldr.w	r3, [r3, #384]	; 0x180
 8003ba4:	f8d0 6144 	ldr.w	r6, [r0, #324]	; 0x144
    virtual CWRUtil::Q5 indexToScreenYQ5(int16_t index) const
 8003ba8:	4604      	mov	r4, r0
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 8003baa:	4798      	blx	r3
 8003bac:	462b      	mov	r3, r5
 8003bae:	f856 1020 	ldr.w	r1, [r6, r0, lsl #2]
 8003bb2:	4620      	mov	r0, r4
    }
 8003bb4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 8003bb8:	4718      	bx	r3

08003bba <_ZNK8touchgfx15GraphScrollData9dataIndexEs>:

    virtual int16_t addValue(int value);

    virtual int16_t dataIndex(int16_t screenIndex) const
    {
        return usedCapacity < maxCapacity ? screenIndex : (screenIndex + current) % maxCapacity;
 8003bba:	f9b0 211c 	ldrsh.w	r2, [r0, #284]	; 0x11c
 8003bbe:	f9b0 311e 	ldrsh.w	r3, [r0, #286]	; 0x11e
 8003bc2:	4293      	cmp	r3, r2
 8003bc4:	db07      	blt.n	8003bd6 <_ZNK8touchgfx15GraphScrollData9dataIndexEs+0x1c>
 8003bc6:	f9b0 314c 	ldrsh.w	r3, [r0, #332]	; 0x14c
 8003bca:	4419      	add	r1, r3
 8003bcc:	fb91 f0f2 	sdiv	r0, r1, r2
 8003bd0:	fb02 1110 	mls	r1, r2, r0, r1
 8003bd4:	b209      	sxth	r1, r1
    }
 8003bd6:	4608      	mov	r0, r1
 8003bd8:	4770      	bx	lr

08003bda <_ZNK8touchgfx15GraphScrollData10indexToXQ5Es>:

private:
    virtual CWRUtil::Q5 indexToXQ5(int16_t index) const
    {
        return CWRUtil::toQ5(index);
    }
 8003bda:	0148      	lsls	r0, r1, #5
 8003bdc:	4770      	bx	lr

08003bde <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8003bde:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
    }
 8003be2:	4770      	bx	lr

08003be4 <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 8003be4:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
 8003be8:	4770      	bx	lr

08003bea <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 8003bea:	b510      	push	{r4, lr}
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8003bec:	2200      	movs	r2, #0
        return rect.width;
 8003bee:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 8003bf2:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 8003bf6:	8002      	strh	r2, [r0, #0]
 8003bf8:	8042      	strh	r2, [r0, #2]
 8003bfa:	8084      	strh	r4, [r0, #4]
 8003bfc:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 8003bfe:	bd10      	pop	{r4, pc}

08003c00 <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 8003c00:	2200      	movs	r2, #0
 8003c02:	8002      	strh	r2, [r0, #0]
 8003c04:	8042      	strh	r2, [r0, #2]
 8003c06:	8082      	strh	r2, [r0, #4]
 8003c08:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8003c0a:	4770      	bx	lr

08003c0c <_ZN8touchgfx25AbstractGraphElementNoCWR8setColorENS_9colortypeE>:
     *
     * @see getColor
     */
    virtual void setColor(colortype newColor)
    {
        color = newColor;
 8003c0c:	62c1      	str	r1, [r0, #44]	; 0x2c
    }
 8003c0e:	4770      	bx	lr

08003c10 <_ZNK8touchgfx25AbstractGraphElementNoCWR8getColorEv>:
     * @see setColor
     */
    virtual colortype getColor() const
    {
        return color;
    }
 8003c10:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 8003c12:	4770      	bx	lr

08003c14 <_ZNK8touchgfx25AbstractGraphElementNoCWR16drawCanvasWidgetERKNS_4RectE>:

    virtual bool drawCanvasWidget(const Rect&) const
    {
        return true;
    }
 8003c14:	2001      	movs	r0, #1
 8003c16:	4770      	bx	lr

08003c18 <_ZN8touchgfx25AbstractGraphElementNoCWR10setPainterERNS_15AbstractPainterE>:
    void normalizeRect(Rect& r) const;

private:
    virtual void setPainter(AbstractPainter& /*painter*/)
    {
    }
 8003c18:	4770      	bx	lr

08003c1a <_ZN8touchgfx20GraphElementGridBase22invalidateGraphPointAtEs>:
        return lineWidth;
    }

    virtual void invalidateGraphPointAt(int16_t)
    {
    }
 8003c1a:	4770      	bx	lr

08003c1c <_ZNK8touchgfx20GraphElementGridBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE>:
     *
     * @return The correctly scaled major interval.
     */
    virtual int getCorrectlyScaledMajorInterval(const AbstractDataGraph* graph) const
    {
        return majorGrid == 0 ? 0 : majorGrid->getCorrectlyScaledGridInterval(graph);
 8003c1c:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8003c1e:	b118      	cbz	r0, 8003c28 <_ZNK8touchgfx20GraphElementGridBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE+0xc>
 8003c20:	6803      	ldr	r3, [r0, #0]
 8003c22:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8003c26:	4718      	bx	r3
    }
 8003c28:	4770      	bx	lr

08003c2a <_ZNK8touchgfx17GraphElementGridX13enclosingAreaEPKNS_17AbstractDataGraphE>:
    {
        return convertToGraphScaleX(graph, gridInterval, dataScale);
    }

protected:
    virtual Rect enclosingArea(const AbstractDataGraph* graph) const
 8003c2a:	b530      	push	{r4, r5, lr}
        return graphArea.getHeight() - (topPadding + bottomPadding);
 8003c2c:	f8b2 111a 	ldrh.w	r1, [r2, #282]	; 0x11a
        return topPadding;
 8003c30:	f9b2 4114 	ldrsh.w	r4, [r2, #276]	; 0x114
        return rect.width;
 8003c34:	f9b2 5040 	ldrsh.w	r5, [r2, #64]	; 0x40
        return graphArea.getHeight() - (topPadding + bottomPadding);
 8003c38:	f8b2 2042 	ldrh.w	r2, [r2, #66]	; 0x42
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8003c3c:	8044      	strh	r4, [r0, #2]
 8003c3e:	4421      	add	r1, r4
 8003c40:	1a52      	subs	r2, r2, r1
 8003c42:	2100      	movs	r1, #0
 8003c44:	8001      	strh	r1, [r0, #0]
 8003c46:	8085      	strh	r5, [r0, #4]
 8003c48:	80c2      	strh	r2, [r0, #6]
    {
        return Rect(0, graph->getGraphAreaPaddingTop(), graph->getGraphAreaWidthIncludingPadding(), graph->getGraphAreaHeight());
    }
 8003c4a:	bd30      	pop	{r4, r5, pc}

08003c4c <_ZNK8touchgfx17GraphElementGridX8lineRectEssss>:

    virtual Rect lineRect(int16_t start, int16_t length, int16_t pos, int16_t width) const
 8003c4c:	b510      	push	{r4, lr}
 8003c4e:	8042      	strh	r2, [r0, #2]
 8003c50:	f9bd 4008 	ldrsh.w	r4, [sp, #8]
 8003c54:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8003c58:	8004      	strh	r4, [r0, #0]
 8003c5a:	8082      	strh	r2, [r0, #4]
 8003c5c:	80c3      	strh	r3, [r0, #6]
    {
        return Rect(pos, start, width, length);
    }
 8003c5e:	bd10      	pop	{r4, pc}

08003c60 <_ZNK8touchgfx17GraphElementGridX22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:

    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeXMinScaled();
 8003c60:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
 8003c62:	4608      	mov	r0, r1
        return graph->getGraphRangeXMinScaled();
 8003c64:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 8003c68:	4718      	bx	r3

08003c6a <_ZNK8touchgfx17GraphElementGridX22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeXMaxScaled();
 8003c6a:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
 8003c6c:	4608      	mov	r0, r1
        return graph->getGraphRangeXMaxScaled();
 8003c6e:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8003c72:	4718      	bx	r3

08003c74 <_ZNK8touchgfx17GraphElementGridX17getGraphAreaStartEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphAreaStart(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingTop();
    }
 8003c74:	f9b1 0114 	ldrsh.w	r0, [r1, #276]	; 0x114
 8003c78:	4770      	bx	lr

08003c7a <_ZNK8touchgfx17GraphElementGridX18getGraphAreaLengthEPKNS_17AbstractDataGraphE>:
 8003c7a:	f8b1 0114 	ldrh.w	r0, [r1, #276]	; 0x114
 8003c7e:	f8b1 311a 	ldrh.w	r3, [r1, #282]	; 0x11a
 8003c82:	4403      	add	r3, r0
 8003c84:	f8b1 0042 	ldrh.w	r0, [r1, #66]	; 0x42
 8003c88:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaLength(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaHeight();
    }
 8003c8a:	b200      	sxth	r0, r0
 8003c8c:	4770      	bx	lr

08003c8e <_ZNK8touchgfx17GraphElementGridX20getGraphAreaStartPosEPKNS_17AbstractDataGraphE>:

    virtual int getGraphAreaStartPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingLeft();
    }
 8003c8e:	f9b1 0116 	ldrsh.w	r0, [r1, #278]	; 0x116
 8003c92:	4770      	bx	lr

08003c94 <_ZNK8touchgfx17GraphElementGridX18getGraphAreaEndPosEPKNS_17AbstractDataGraphE>:
        return graphArea.getWidth() - (leftPadding + rightPadding);
 8003c94:	f8b1 0116 	ldrh.w	r0, [r1, #278]	; 0x116
 8003c98:	f8b1 3118 	ldrh.w	r3, [r1, #280]	; 0x118
 8003c9c:	4403      	add	r3, r0
 8003c9e:	f8b1 0040 	ldrh.w	r0, [r1, #64]	; 0x40
 8003ca2:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaEndPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaWidth();
    }
 8003ca4:	b200      	sxth	r0, r0
 8003ca6:	4770      	bx	lr

08003ca8 <_ZNK8touchgfx17GraphElementGridX15valueToScreenQ5EPKNS_17AbstractDataGraphEi>:
        return graph->valueToScreenXQ5(x);
 8003ca8:	680b      	ldr	r3, [r1, #0]

    virtual CWRUtil::Q5 valueToScreenQ5(const AbstractDataGraph* graph, int value) const
 8003caa:	4608      	mov	r0, r1
        return graph->valueToScreenXQ5(x);
 8003cac:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 8003cb0:	4611      	mov	r1, r2
 8003cb2:	4718      	bx	r3

08003cb4 <_ZNK8touchgfx17GraphElementGridY13enclosingAreaEPKNS_17AbstractDataGraphE>:
 8003cb4:	f8b2 1118 	ldrh.w	r1, [r2, #280]	; 0x118
    {
        return convertToGraphScaleY(graph, gridInterval, dataScale);
    }

protected:
    virtual Rect enclosingArea(const AbstractDataGraph* graph) const
 8003cb8:	b530      	push	{r4, r5, lr}
        return leftPadding;
 8003cba:	f9b2 5116 	ldrsh.w	r5, [r2, #278]	; 0x116
 8003cbe:	8005      	strh	r5, [r0, #0]
        return graphArea.getWidth() - (leftPadding + rightPadding);
 8003cc0:	186c      	adds	r4, r5, r1
 8003cc2:	f8b2 1040 	ldrh.w	r1, [r2, #64]	; 0x40
        return rect.height;
 8003cc6:	f9b2 2042 	ldrsh.w	r2, [r2, #66]	; 0x42
 8003cca:	80c2      	strh	r2, [r0, #6]
 8003ccc:	1b09      	subs	r1, r1, r4
 8003cce:	2400      	movs	r4, #0
 8003cd0:	8044      	strh	r4, [r0, #2]
 8003cd2:	8081      	strh	r1, [r0, #4]
    {
        return Rect(graph->getGraphAreaPaddingLeft(), 0, graph->getGraphAreaWidth(), graph->getGraphAreaHeightIncludingPadding());
    }
 8003cd4:	bd30      	pop	{r4, r5, pc}

08003cd6 <_ZNK8touchgfx17GraphElementGridY8lineRectEssss>:
 8003cd6:	8002      	strh	r2, [r0, #0]
 8003cd8:	8083      	strh	r3, [r0, #4]
 8003cda:	f9bd 2000 	ldrsh.w	r2, [sp]
 8003cde:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8003ce2:	8042      	strh	r2, [r0, #2]
 8003ce4:	80c3      	strh	r3, [r0, #6]

    virtual Rect lineRect(int16_t start, int16_t length, int16_t pos, int16_t width) const
    {
        return Rect(start, pos, length, width);
    }
 8003ce6:	4770      	bx	lr

08003ce8 <_ZNK8touchgfx17GraphElementGridY22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:

    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeYMinScaled();
 8003ce8:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
 8003cea:	4608      	mov	r0, r1
        return graph->getGraphRangeYMinScaled();
 8003cec:	f8d3 30ec 	ldr.w	r3, [r3, #236]	; 0xec
 8003cf0:	4718      	bx	r3

08003cf2 <_ZNK8touchgfx17GraphElementGridY22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeYMaxScaled();
 8003cf2:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
 8003cf4:	4608      	mov	r0, r1
        return graph->getGraphRangeYMaxScaled();
 8003cf6:	f8d3 30f8 	ldr.w	r3, [r3, #248]	; 0xf8
 8003cfa:	4718      	bx	r3

08003cfc <_ZNK8touchgfx17GraphElementGridY17getGraphAreaStartEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphAreaStart(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingLeft();
    }
 8003cfc:	f9b1 0116 	ldrsh.w	r0, [r1, #278]	; 0x116
 8003d00:	4770      	bx	lr

08003d02 <_ZNK8touchgfx17GraphElementGridY18getGraphAreaLengthEPKNS_17AbstractDataGraphE>:
 8003d02:	f8b1 0116 	ldrh.w	r0, [r1, #278]	; 0x116
 8003d06:	f8b1 3118 	ldrh.w	r3, [r1, #280]	; 0x118
 8003d0a:	4403      	add	r3, r0
 8003d0c:	f8b1 0040 	ldrh.w	r0, [r1, #64]	; 0x40
 8003d10:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaLength(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaWidth();
    }
 8003d12:	b200      	sxth	r0, r0
 8003d14:	4770      	bx	lr

08003d16 <_ZNK8touchgfx17GraphElementGridY20getGraphAreaStartPosEPKNS_17AbstractDataGraphE>:

    virtual int getGraphAreaStartPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingTop();
    }
 8003d16:	f9b1 0114 	ldrsh.w	r0, [r1, #276]	; 0x114
 8003d1a:	4770      	bx	lr

08003d1c <_ZNK8touchgfx17GraphElementGridY18getGraphAreaEndPosEPKNS_17AbstractDataGraphE>:
        return graphArea.getHeight() - (topPadding + bottomPadding);
 8003d1c:	f8b1 0114 	ldrh.w	r0, [r1, #276]	; 0x114
 8003d20:	f8b1 311a 	ldrh.w	r3, [r1, #282]	; 0x11a
 8003d24:	4403      	add	r3, r0
 8003d26:	f8b1 0042 	ldrh.w	r0, [r1, #66]	; 0x42
 8003d2a:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaEndPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaHeight();
    }
 8003d2c:	b200      	sxth	r0, r0
 8003d2e:	4770      	bx	lr

08003d30 <_ZNK8touchgfx17GraphElementGridY15valueToScreenQ5EPKNS_17AbstractDataGraphEi>:
        return graph->valueToScreenYQ5(y);
 8003d30:	680b      	ldr	r3, [r1, #0]

    virtual CWRUtil::Q5 valueToScreenQ5(const AbstractDataGraph* graph, int value) const
 8003d32:	4608      	mov	r0, r1
        return graph->valueToScreenYQ5(y);
 8003d34:	f8d3 3118 	ldr.w	r3, [r3, #280]	; 0x118
 8003d38:	4611      	mov	r1, r2
 8003d3a:	4718      	bx	r3

08003d3c <_ZN19ScreenGraphViewBaseD1Ev>:

class ScreenGraphViewBase : public touchgfx::View<ScreenGraphPresenter>
{
public:
    ScreenGraphViewBase();
    virtual ~ScreenGraphViewBase() {}
 8003d3c:	4770      	bx	lr

08003d3e <_ZN19ScreenGraphViewBase11setupScreenEv>:
}

void ScreenGraphViewBase::setupScreen()
{

}
 8003d3e:	4770      	bx	lr

08003d40 <_ZN8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003d40:	4770      	bx	lr

08003d42 <_ZN8touchgfx11GraphScrollILs60EED1Ev>:
 * the new values added to the graph.
 *
 * @tparam CAPACITY The maximum number of data points on the graph.
 */
template <int16_t CAPACITY>
class GraphScroll : public GraphScrollData
 8003d42:	4770      	bx	lr

08003d44 <_ZN8touchgfx11GraphScrollILs600EED1Ev>:
 8003d44:	4770      	bx	lr

08003d46 <_ZN8touchgfx17GraphElementGridYD1Ev>:
class GraphElementGridY : public GraphElementGridBase
 8003d46:	4770      	bx	lr

08003d48 <_ZN8touchgfx17GraphElementGridXD1Ev>:
class GraphElementGridX : public GraphElementGridBase
 8003d48:	4770      	bx	lr

08003d4a <_ZN8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8003d4a:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003d4c:	68c2      	ldr	r2, [r0, #12]
 8003d4e:	6844      	ldr	r4, [r0, #4]
 8003d50:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8003d52:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8003d54:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8003d58:	07d2      	lsls	r2, r2, #31
 8003d5a:	bf48      	it	mi
 8003d5c:	5962      	ldrmi	r2, [r4, r5]
 8003d5e:	689b      	ldr	r3, [r3, #8]
    }
 8003d60:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003d62:	bf48      	it	mi
 8003d64:	58d3      	ldrmi	r3, [r2, r3]
 8003d66:	4718      	bx	r3

08003d68 <_ZNK8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8003d68:	6843      	ldr	r3, [r0, #4]
 8003d6a:	b12b      	cbz	r3, 8003d78 <_ZNK8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8003d6c:	6883      	ldr	r3, [r0, #8]
 8003d6e:	b92b      	cbnz	r3, 8003d7c <_ZNK8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8003d70:	68c0      	ldr	r0, [r0, #12]
 8003d72:	f000 0001 	and.w	r0, r0, #1
 8003d76:	4770      	bx	lr
 8003d78:	4618      	mov	r0, r3
 8003d7a:	4770      	bx	lr
 8003d7c:	2001      	movs	r0, #1
    }
 8003d7e:	4770      	bx	lr

08003d80 <_ZN8touchgfx17GraphElementGridXD0Ev>:
 8003d80:	b510      	push	{r4, lr}
 8003d82:	2140      	movs	r1, #64	; 0x40
 8003d84:	4604      	mov	r4, r0
 8003d86:	f01c fca7 	bl	80206d8 <_ZdlPvj>
 8003d8a:	4620      	mov	r0, r4
 8003d8c:	bd10      	pop	{r4, pc}

08003d8e <_ZN8touchgfx17GraphElementGridYD0Ev>:
class GraphElementGridY : public GraphElementGridBase
 8003d8e:	b510      	push	{r4, lr}
 8003d90:	2140      	movs	r1, #64	; 0x40
 8003d92:	4604      	mov	r4, r0
 8003d94:	f01c fca0 	bl	80206d8 <_ZdlPvj>
 8003d98:	4620      	mov	r0, r4
 8003d9a:	bd10      	pop	{r4, pc}

08003d9c <_ZN8touchgfx11GraphScrollILs600EED0Ev>:
 8003d9c:	b510      	push	{r4, lr}
 8003d9e:	f44f 612b 	mov.w	r1, #2736	; 0xab0
 8003da2:	4604      	mov	r4, r0
 8003da4:	f01c fc98 	bl	80206d8 <_ZdlPvj>
 8003da8:	4620      	mov	r0, r4
 8003daa:	bd10      	pop	{r4, pc}

08003dac <_ZN8touchgfx11GraphScrollILs60EED0Ev>:
 8003dac:	b510      	push	{r4, lr}
 8003dae:	f44f 7110 	mov.w	r1, #576	; 0x240
 8003db2:	4604      	mov	r4, r0
 8003db4:	f01c fc90 	bl	80206d8 <_ZdlPvj>
 8003db8:	4620      	mov	r0, r4
 8003dba:	bd10      	pop	{r4, pc}

08003dbc <_ZN8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003dbc:	b510      	push	{r4, lr}
 8003dbe:	2110      	movs	r1, #16
 8003dc0:	4604      	mov	r4, r0
 8003dc2:	f01c fc89 	bl	80206d8 <_ZdlPvj>
 8003dc6:	4620      	mov	r0, r4
 8003dc8:	bd10      	pop	{r4, pc}

08003dca <_ZN19ScreenGraphViewBaseD0Ev>:
 8003dca:	b510      	push	{r4, lr}
 8003dcc:	f242 713c 	movw	r1, #10044	; 0x273c
 8003dd0:	4604      	mov	r4, r0
 8003dd2:	f01c fc81 	bl	80206d8 <_ZdlPvj>
 8003dd6:	4620      	mov	r0, r4
 8003dd8:	bd10      	pop	{r4, pc}

08003dda <_ZNK8touchgfx17AbstractDataGraph17invalidateContentEv>:
        if (alpha > 0)
 8003dda:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8003dde:	b10b      	cbz	r3, 8003de4 <_ZNK8touchgfx17AbstractDataGraph17invalidateContentEv+0xa>
            Container::invalidateContent();
 8003de0:	f006 be75 	b.w	800aace <_ZNK8touchgfx9Container17invalidateContentEv>
    }
 8003de4:	4770      	bx	lr

08003de6 <_ZNK8touchgfx17GraphElementGridX30getCorrectlyScaledGridIntervalEPKNS_17AbstractDataGraphE>:
    virtual int getCorrectlyScaledGridInterval(const AbstractDataGraph* graph) const
 8003de6:	b513      	push	{r0, r1, r4, lr}
 8003de8:	4603      	mov	r3, r0
 8003dea:	4608      	mov	r0, r1
        return convertToGraphScaleX(graph, gridInterval, dataScale);
 8003dec:	e9d3 140c 	ldrd	r1, r4, [r3, #48]	; 0x30
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleX());
 8003df0:	6803      	ldr	r3, [r0, #0]
        return convertToGraphScaleX(graph, gridInterval, dataScale);
 8003df2:	9101      	str	r1, [sp, #4]
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleX());
 8003df4:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8003df8:	4798      	blx	r3
 8003dfa:	9901      	ldr	r1, [sp, #4]
 8003dfc:	4602      	mov	r2, r0
 8003dfe:	4620      	mov	r0, r4
    }
 8003e00:	b002      	add	sp, #8
 8003e02:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleX());
 8003e06:	f008 bcab 	b.w	800c760 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>

08003e0a <_ZNK8touchgfx17GraphElementGridY30getCorrectlyScaledGridIntervalEPKNS_17AbstractDataGraphE>:
    virtual int getCorrectlyScaledGridInterval(const AbstractDataGraph* graph) const
 8003e0a:	b513      	push	{r0, r1, r4, lr}
 8003e0c:	4603      	mov	r3, r0
 8003e0e:	4608      	mov	r0, r1
        return convertToGraphScaleY(graph, gridInterval, dataScale);
 8003e10:	e9d3 140c 	ldrd	r1, r4, [r3, #48]	; 0x30
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleY());
 8003e14:	6803      	ldr	r3, [r0, #0]
        return convertToGraphScaleY(graph, gridInterval, dataScale);
 8003e16:	9101      	str	r1, [sp, #4]
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleY());
 8003e18:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8003e1c:	4798      	blx	r3
 8003e1e:	9901      	ldr	r1, [sp, #4]
 8003e20:	4602      	mov	r2, r0
 8003e22:	4620      	mov	r0, r4
    }
 8003e24:	b002      	add	sp, #8
 8003e26:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleY());
 8003e2a:	f008 bc99 	b.w	800c760 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
	...

08003e30 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs>:
        assert(index >= 0 && index < usedCapacity);
 8003e30:	1e0a      	subs	r2, r1, #0
    virtual int indexToDataPointYScaled(int16_t index) const
 8003e32:	b510      	push	{r4, lr}
        assert(index >= 0 && index < usedCapacity);
 8003e34:	db03      	blt.n	8003e3e <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0xe>
 8003e36:	f9b0 411e 	ldrsh.w	r4, [r0, #286]	; 0x11e
 8003e3a:	4294      	cmp	r4, r2
 8003e3c:	dc06      	bgt.n	8003e4c <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x1c>
 8003e3e:	4b08      	ldr	r3, [pc, #32]	; (8003e60 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x30>)
 8003e40:	4a08      	ldr	r2, [pc, #32]	; (8003e64 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x34>)
 8003e42:	4809      	ldr	r0, [pc, #36]	; (8003e68 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x38>)
 8003e44:	f240 6133 	movw	r1, #1587	; 0x633
 8003e48:	f01c fcfa 	bl	8020840 <__assert_func>
        return yValues[dataIndex(index)];
 8003e4c:	6803      	ldr	r3, [r0, #0]
 8003e4e:	f8d0 4144 	ldr.w	r4, [r0, #324]	; 0x144
 8003e52:	f8d3 3180 	ldr.w	r3, [r3, #384]	; 0x180
 8003e56:	4798      	blx	r3
    }
 8003e58:	f854 0020 	ldr.w	r0, [r4, r0, lsl #2]
 8003e5c:	bd10      	pop	{r4, pc}
 8003e5e:	bf00      	nop
 8003e60:	08022bac 	.word	0x08022bac
 8003e64:	08022bcf 	.word	0x08022bcf
 8003e68:	08022c1e 	.word	0x08022c1e

08003e6c <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs>:
        assert(index >= 0 && index < usedCapacity);
 8003e6c:	1e0b      	subs	r3, r1, #0
    virtual int indexToDataPointXScaled(int16_t index) const
 8003e6e:	b510      	push	{r4, lr}
 8003e70:	4604      	mov	r4, r0
        assert(index >= 0 && index < usedCapacity);
 8003e72:	db03      	blt.n	8003e7c <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x10>
 8003e74:	f9b0 211e 	ldrsh.w	r2, [r0, #286]	; 0x11e
 8003e78:	429a      	cmp	r2, r3
 8003e7a:	dc06      	bgt.n	8003e8a <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x1e>
 8003e7c:	4b07      	ldr	r3, [pc, #28]	; (8003e9c <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x30>)
 8003e7e:	4a08      	ldr	r2, [pc, #32]	; (8003ea0 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x34>)
 8003e80:	4808      	ldr	r0, [pc, #32]	; (8003ea4 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x38>)
 8003e82:	f240 612d 	movw	r1, #1581	; 0x62d
 8003e86:	f01c fcdb 	bl	8020840 <__assert_func>
        return (indexToGlobalIndex(index) * xAxisFactor) + xAxisOffset;
 8003e8a:	6803      	ldr	r3, [r0, #0]
 8003e8c:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
 8003e90:	4798      	blx	r3
 8003e92:	e9d4 234f 	ldrd	r2, r3, [r4, #316]	; 0x13c
    }
 8003e96:	fb02 3000 	mla	r0, r2, r0, r3
 8003e9a:	bd10      	pop	{r4, pc}
 8003e9c:	08022bac 	.word	0x08022bac
 8003ea0:	08022c7b 	.word	0x08022c7b
 8003ea4:	08022c1e 	.word	0x08022c1e

08003ea8 <_ZN19ScreenGraphViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

}

void ScreenGraphViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &toggleButton1)
 8003ea8:	f500 5389 	add.w	r3, r0, #4384	; 0x1120
 8003eac:	3308      	adds	r3, #8
 8003eae:	4299      	cmp	r1, r3
{
 8003eb0:	b510      	push	{r4, lr}
 8003eb2:	4604      	mov	r4, r0
    if (&src == &toggleButton1)
 8003eb4:	d115      	bne.n	8003ee2 <_ZN19ScreenGraphViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
    {
        //Interaction2
        //When toggleButton1 clicked execute C++ code
        //Execute C++ code
        dynamicGraph1.setVisible(!dynamicGraph1.isVisible());
 8003eb6:	f890 3d7d 	ldrb.w	r3, [r0, #3453]	; 0xd7d
 8003eba:	f083 0301 	eor.w	r3, r3, #1
        visible = vis;
 8003ebe:	f880 3d7d 	strb.w	r3, [r0, #3453]	; 0xd7d
        dynamicGraph2.setVisible(!dynamicGraph2.isVisible());
 8003ec2:	f890 30f1 	ldrb.w	r3, [r0, #241]	; 0xf1
 8003ec6:	f083 0301 	eor.w	r3, r3, #1
 8003eca:	f880 30f1 	strb.w	r3, [r0, #241]	; 0xf1
        dynamicGraph1.invalidate();
 8003ece:	f600 5058 	addw	r0, r0, #3416	; 0xd58
 8003ed2:	f00e f87c 	bl	8011fce <_ZNK8touchgfx8Drawable10invalidateEv>
        dynamicGraph2.invalidate();
 8003ed6:	f104 00cc 	add.w	r0, r4, #204	; 0xcc
        //When buttonCloseModal clicked hide modalWindow1
        //Hide modalWindow1
        modalWindow1.setVisible(false);
        modalWindow1.invalidate();
    }
}
 8003eda:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        modalWindow1.invalidate();
 8003ede:	f00e b876 	b.w	8011fce <_ZNK8touchgfx8Drawable10invalidateEv>
    else if (&src == &buttonCloseModal)
 8003ee2:	f500 539c 	add.w	r3, r0, #4992	; 0x1380
 8003ee6:	3308      	adds	r3, #8
 8003ee8:	4299      	cmp	r1, r3
 8003eea:	d108      	bne.n	8003efe <_ZN19ScreenGraphViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x56>
 8003eec:	f500 5380 	add.w	r3, r0, #4096	; 0x1000
 8003ef0:	2200      	movs	r2, #0
        modalWindow1.invalidate();
 8003ef2:	f500 5096 	add.w	r0, r0, #4800	; 0x12c0
 8003ef6:	f883 22fd 	strb.w	r2, [r3, #765]	; 0x2fd
 8003efa:	3018      	adds	r0, #24
 8003efc:	e7ed      	b.n	8003eda <_ZN19ScreenGraphViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x32>
}
 8003efe:	bd10      	pop	{r4, pc}

08003f00 <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll>:
     * @param  factor2 The second factor.
     * @param  divisor The divisor.
     *
     * @return factor1 * factor2 / divisor as a Q5
     */
    static Q5 muldiv_toQ5(int32_t factor1, int32_t factor2, int32_t divisor)
 8003f00:	b537      	push	{r0, r1, r2, r4, r5, lr}
    {
        int32_t remainder;
        int32_t result = muldiv(factor1, factor2, divisor, remainder);
 8003f02:	ab01      	add	r3, sp, #4
    static Q5 muldiv_toQ5(int32_t factor1, int32_t factor2, int32_t divisor)
 8003f04:	4615      	mov	r5, r2
        int32_t result = muldiv(factor1, factor2, divisor, remainder);
 8003f06:	f00e fa04 	bl	8012312 <_ZN8touchgfx6muldivElllRl>
        if (result >= 0)
 8003f0a:	2800      	cmp	r0, #0
 8003f0c:	ea4f 1440 	mov.w	r4, r0, lsl #5
        return Q5(muldiv((int)factor1, (int)factor2, (int)divisor));
 8003f10:	9901      	ldr	r1, [sp, #4]
 8003f12:	462a      	mov	r2, r5
 8003f14:	f04f 0020 	mov.w	r0, #32
        if (result >= 0)
 8003f18:	db04      	blt.n	8003f24 <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll+0x24>
        return Q5(muldiv((int)factor1, (int)factor2, (int)divisor));
 8003f1a:	f00e fa19 	bl	8012350 <_ZN8touchgfx6muldivElll>
            return Q5(v + q5.v);
 8003f1e:	4420      	add	r0, r4
        {
            return toQ5(result) + muldivQ5(Q5(Rasterizer::POLY_BASE_SIZE), Q5(remainder), Q5(divisor));
        }
        return toQ5(result) - muldivQ5(Q5(Rasterizer::POLY_BASE_SIZE), Q5(remainder), Q5(divisor));
    }
 8003f20:	b003      	add	sp, #12
 8003f22:	bd30      	pop	{r4, r5, pc}
        return Q5(muldiv((int)factor1, (int)factor2, (int)divisor));
 8003f24:	f00e fa14 	bl	8012350 <_ZN8touchgfx6muldivElll>
            return Q5(v - q5.v);
 8003f28:	1a20      	subs	r0, r4, r0
 8003f2a:	e7f9      	b.n	8003f20 <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll+0x20>

08003f2c <_ZNK8touchgfx17AbstractDataGraph16valueToScreenYQ5Ei>:
    virtual CWRUtil::Q5 valueToScreenYQ5(int y) const
 8003f2c:	b570      	push	{r4, r5, r6, lr}
        return graphArea.getHeight() - (topPadding + bottomPadding);
 8003f2e:	f9b0 4114 	ldrsh.w	r4, [r0, #276]	; 0x114
 8003f32:	f8b0 511a 	ldrh.w	r5, [r0, #282]	; 0x11a
 8003f36:	1963      	adds	r3, r4, r5
 8003f38:	f8b0 5042 	ldrh.w	r5, [r0, #66]	; 0x42
 8003f3c:	1aed      	subs	r5, r5, r3
        return CWRUtil::toQ5(graphAreaHeight + topPadding - 1) - CWRUtil::muldiv_toQ5(y - graphRangeMinY, graphAreaHeight - 1, graphRangeMaxY - graphRangeMinY);
 8003f3e:	e9d0 324d 	ldrd	r3, r2, [r0, #308]	; 0x134
    virtual CWRUtil::Q5 valueToScreenYQ5(int y) const
 8003f42:	460e      	mov	r6, r1
        return CWRUtil::toQ5(graphAreaHeight + topPadding - 1) - CWRUtil::muldiv_toQ5(y - graphRangeMinY, graphAreaHeight - 1, graphRangeMaxY - graphRangeMinY);
 8003f44:	b22d      	sxth	r5, r5
 8003f46:	1ad2      	subs	r2, r2, r3
 8003f48:	1e69      	subs	r1, r5, #1
 8003f4a:	1af0      	subs	r0, r6, r3
 8003f4c:	f7ff ffd8 	bl	8003f00 <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll>
 8003f50:	442c      	add	r4, r5
 8003f52:	3c01      	subs	r4, #1
    }
 8003f54:	ebc0 1044 	rsb	r0, r0, r4, lsl #5
 8003f58:	bd70      	pop	{r4, r5, r6, pc}

08003f5a <_ZNK8touchgfx17AbstractDataGraph16valueToScreenXQ5Ei>:
    virtual CWRUtil::Q5 valueToScreenXQ5(int x) const
 8003f5a:	b538      	push	{r3, r4, r5, lr}
 8003f5c:	4604      	mov	r4, r0
 8003f5e:	4608      	mov	r0, r1
        return graphArea.getWidth() - (leftPadding + rightPadding);
 8003f60:	f8b4 3118 	ldrh.w	r3, [r4, #280]	; 0x118
 8003f64:	f8b4 1116 	ldrh.w	r1, [r4, #278]	; 0x116
 8003f68:	440b      	add	r3, r1
 8003f6a:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
        return CWRUtil::muldiv_toQ5(x - graphRangeMinX, getGraphAreaWidth() - 1, graphRangeMaxX - graphRangeMinX) + CWRUtil::toQ5(leftPadding);
 8003f6e:	e9d4 524b 	ldrd	r5, r2, [r4, #300]	; 0x12c
        return graphArea.getWidth() - (leftPadding + rightPadding);
 8003f72:	1ac9      	subs	r1, r1, r3
        return CWRUtil::muldiv_toQ5(x - graphRangeMinX, getGraphAreaWidth() - 1, graphRangeMaxX - graphRangeMinX) + CWRUtil::toQ5(leftPadding);
 8003f74:	b209      	sxth	r1, r1
 8003f76:	1b52      	subs	r2, r2, r5
 8003f78:	3901      	subs	r1, #1
 8003f7a:	1b40      	subs	r0, r0, r5
 8003f7c:	f7ff ffc0 	bl	8003f00 <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll>
            return Q5(v + q5.v);
 8003f80:	f9b4 3116 	ldrsh.w	r3, [r4, #278]	; 0x116
    }
 8003f84:	eb00 1043 	add.w	r0, r0, r3, lsl #5
 8003f88:	bd38      	pop	{r3, r4, r5, pc}
	...

08003f8c <_ZN8touchgfx20GraphElementGridBaseC1Ev>:
    GraphElementGridBase()
 8003f8c:	b510      	push	{r4, lr}
 8003f8e:	4604      	mov	r4, r0
        : CanvasWidget()
 8003f90:	f007 ffce 	bl	800bf30 <_ZN8touchgfx12CanvasWidgetC1Ev>
        : dataScale(1), gridInterval(10), lineWidth(1), majorGrid(0)
 8003f94:	4a06      	ldr	r2, [pc, #24]	; (8003fb0 <_ZN8touchgfx20GraphElementGridBaseC1Ev+0x24>)
 8003f96:	6022      	str	r2, [r4, #0]
        : color(col)
 8003f98:	2300      	movs	r3, #0
 8003f9a:	2201      	movs	r2, #1
 8003f9c:	210a      	movs	r1, #10
 8003f9e:	e9c4 210c 	strd	r2, r1, [r4, #48]	; 0x30
 8003fa2:	62e3      	str	r3, [r4, #44]	; 0x2c
 8003fa4:	f884 2038 	strb.w	r2, [r4, #56]	; 0x38
 8003fa8:	63e3      	str	r3, [r4, #60]	; 0x3c
    }
 8003faa:	4620      	mov	r0, r4
 8003fac:	bd10      	pop	{r4, pc}
 8003fae:	bf00      	nop
 8003fb0:	08023c50 	.word	0x08023c50

08003fb4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 8003fb4:	b570      	push	{r4, r5, r6, lr}
        : widgetWidth(0)
 8003fb6:	2300      	movs	r3, #0
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8003fb8:	4e12      	ldr	r6, [pc, #72]	; (8004004 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 8003fba:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 8003fbc:	4b12      	ldr	r3, [pc, #72]	; (8004008 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 8003fbe:	6003      	str	r3, [r0, #0]
 8003fc0:	6833      	ldr	r3, [r6, #0]
 8003fc2:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
    AbstractPainterRGB565()
 8003fc6:	4605      	mov	r5, r0
 8003fc8:	b10a      	cbz	r2, 8003fce <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
 8003fca:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8003fcc:	b900      	cbnz	r0, 8003fd0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
 8003fce:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 8003fd0:	6803      	ldr	r3, [r0, #0]
 8003fd2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003fd4:	4798      	blx	r3
        return auxiliaryLCD;
 8003fd6:	6833      	ldr	r3, [r6, #0]
 8003fd8:	fab0 f480 	clz	r4, r0
 8003fdc:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8003fde:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 8003fe0:	b130      	cbz	r0, 8003ff0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 8003fe2:	6803      	ldr	r3, [r0, #0]
 8003fe4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003fe6:	4798      	blx	r3
 8003fe8:	2800      	cmp	r0, #0
 8003fea:	bf08      	it	eq
 8003fec:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 8003ff0:	b92c      	cbnz	r4, 8003ffe <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 8003ff2:	4b06      	ldr	r3, [pc, #24]	; (800400c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 8003ff4:	4a06      	ldr	r2, [pc, #24]	; (8004010 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 8003ff6:	4807      	ldr	r0, [pc, #28]	; (8004014 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 8003ff8:	212c      	movs	r1, #44	; 0x2c
 8003ffa:	f01c fc21 	bl	8020840 <__assert_func>
    }
 8003ffe:	4628      	mov	r0, r5
 8004000:	bd70      	pop	{r4, r5, r6, pc}
 8004002:	bf00      	nop
 8004004:	200155b4 	.word	0x200155b4
 8004008:	08022f3c 	.word	0x08022f3c
 800400c:	08022cca 	.word	0x08022cca
 8004010:	08022d28 	.word	0x08022d28
 8004014:	08022d61 	.word	0x08022d61

08004018 <_ZN8touchgfx15GraphLabelsBaseC1Ev>:
 * @see GraphLabelsX, GraphLabelsY
 */
class GraphLabelsBase : public AbstractGraphDecoration
{
public:
    GraphLabelsBase()
 8004018:	b510      	push	{r4, lr}
 800401a:	4604      	mov	r4, r0
        : CanvasWidget()
 800401c:	f007 ff88 	bl	800bf30 <_ZN8touchgfx12CanvasWidgetC1Ev>
        : AbstractGraphDecoration(),
          dataScale(1), labelInterval(0), labelTypedText(TYPED_TEXT_INVALID), labelRotation(TEXT_ROTATE_0), labelDecimals(0), labelDecimalPoint('.'), majorLabel(0)
 8004020:	4a0a      	ldr	r2, [pc, #40]	; (800404c <_ZN8touchgfx15GraphLabelsBaseC1Ev+0x34>)
 8004022:	6022      	str	r2, [r4, #0]
 8004024:	2300      	movs	r3, #0
 8004026:	2201      	movs	r2, #1
 8004028:	e9c4 230c 	strd	r2, r3, [r4, #48]	; 0x30
 800402c:	4a08      	ldr	r2, [pc, #32]	; (8004050 <_ZN8touchgfx15GraphLabelsBaseC1Ev+0x38>)
 800402e:	63a2      	str	r2, [r4, #56]	; 0x38
 8004030:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8004034:	87a2      	strh	r2, [r4, #60]	; 0x3c
 8004036:	222e      	movs	r2, #46	; 0x2e
 8004038:	62e3      	str	r3, [r4, #44]	; 0x2c
 800403a:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800403e:	f8a4 3042 	strh.w	r3, [r4, #66]	; 0x42
 8004042:	f8a4 2044 	strh.w	r2, [r4, #68]	; 0x44
 8004046:	64a3      	str	r3, [r4, #72]	; 0x48
    {
    }
 8004048:	4620      	mov	r0, r4
 800404a:	bd10      	pop	{r4, pc}
 800404c:	08023e48 	.word	0x08023e48
 8004050:	0802220c 	.word	0x0802220c

08004054 <_ZN8touchgfx14AbstractButtonC1Ev>:
    AbstractButton()
 8004054:	b510      	push	{r4, lr}
        : Widget(), action(), pressed(false)
 8004056:	2226      	movs	r2, #38	; 0x26
    AbstractButton()
 8004058:	4604      	mov	r4, r0
        : Widget(), action(), pressed(false)
 800405a:	2100      	movs	r1, #0
 800405c:	f01c fd76 	bl	8020b4c <memset>
 8004060:	4620      	mov	r0, r4
 8004062:	f7fe fe3f 	bl	8002ce4 <_ZN8touchgfx6WidgetC1Ev>
 8004066:	4b05      	ldr	r3, [pc, #20]	; (800407c <_ZN8touchgfx14AbstractButtonC1Ev+0x28>)
 8004068:	6023      	str	r3, [r4, #0]
 800406a:	2300      	movs	r3, #0
 800406c:	62a3      	str	r3, [r4, #40]	; 0x28
 800406e:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
        touchable = touch;
 8004072:	2301      	movs	r3, #1
 8004074:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
    }
 8004078:	4620      	mov	r0, r4
 800407a:	bd10      	pop	{r4, pc}
 800407c:	08023ee8 	.word	0x08023ee8

08004080 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>:
    TextAreaWithOneWildcard()
 8004080:	b510      	push	{r4, lr}
 8004082:	4604      	mov	r4, r0
        : TextArea()
 8004084:	f7fe fe6e 	bl	8002d64 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8004088:	4b02      	ldr	r3, [pc, #8]	; (8004094 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev+0x14>)
 800408a:	6023      	str	r3, [r4, #0]
 800408c:	2300      	movs	r3, #0
 800408e:	64a3      	str	r3, [r4, #72]	; 0x48
    }
 8004090:	4620      	mov	r0, r4
 8004092:	bd10      	pop	{r4, pc}
 8004094:	08022970 	.word	0x08022970

08004098 <_ZN19ScreenGraphViewBaseC1Ev>:
ScreenGraphViewBase::ScreenGraphViewBase() :
 8004098:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800409c:	ed2d 8b10 	vpush	{d8-d15}
 80040a0:	4604      	mov	r4, r0
 80040a2:	b097      	sub	sp, #92	; 0x5c
 80040a4:	f00e fafe 	bl	80126a4 <_ZN8touchgfx6ScreenC1Ev>
    buttonCallback(this, &ScreenGraphViewBase::buttonCallbackHandler)
 80040a8:	4622      	mov	r2, r4
 80040aa:	2500      	movs	r5, #0
 80040ac:	4beb      	ldr	r3, [pc, #940]	; (800445c <_ZN19ScreenGraphViewBaseC1Ev+0x3c4>)
 80040ae:	63e5      	str	r5, [r4, #60]	; 0x3c
 80040b0:	f842 3b40 	str.w	r3, [r2], #64
 80040b4:	4610      	mov	r0, r2
 80040b6:	ee0b 2a90 	vmov	s23, r2
 80040ba:	f7fe fe25 	bl	8002d08 <_ZN8touchgfx3BoxC1Ev>
 80040be:	f104 036c 	add.w	r3, r4, #108	; 0x6c
 80040c2:	f64f 76ff 	movw	r6, #65535	; 0xffff
 80040c6:	a914      	add	r1, sp, #80	; 0x50
 80040c8:	4618      	mov	r0, r3
 80040ca:	ee0c 3a10 	vmov	s24, r3
 80040ce:	f8ad 6050 	strh.w	r6, [sp, #80]	; 0x50
 80040d2:	f7fe fe2d 	bl	8002d30 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80040d6:	f104 0398 	add.w	r3, r4, #152	; 0x98
        : Box(), borderColor(0), borderSize(0)
 80040da:	4618      	mov	r0, r3
 80040dc:	f104 0bcc 	add.w	fp, r4, #204	; 0xcc
 80040e0:	ee0d 3a90 	vmov	s27, r3
 80040e4:	f7fe fe10 	bl	8002d08 <_ZN8touchgfx3BoxC1Ev>
 80040e8:	4bdd      	ldr	r3, [pc, #884]	; (8004460 <_ZN19ScreenGraphViewBaseC1Ev+0x3c8>)
 80040ea:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 80040ee:	f44f 7116 	mov.w	r1, #600	; 0x258
 80040f2:	f8c4 50c4 	str.w	r5, [r4, #196]	; 0xc4
 80040f6:	f8a4 50c8 	strh.w	r5, [r4, #200]	; 0xc8
 80040fa:	4658      	mov	r0, fp
 80040fc:	f008 facc 	bl	800c698 <_ZN8touchgfx17AbstractDataGraphC1Es>
 8004100:	4bd8      	ldr	r3, [pc, #864]	; (8004464 <_ZN19ScreenGraphViewBaseC1Ev+0x3cc>)
 8004102:	f8c4 30cc 	str.w	r3, [r4, #204]	; 0xcc
{
public:
    GraphScroll()
        : GraphScrollData(CAPACITY, y)
 8004106:	f504 7207 	add.w	r2, r4, #540	; 0x21c
 800410a:	2301      	movs	r3, #1
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 800410c:	4629      	mov	r1, r5
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 800410e:	e9c4 3582 	strd	r3, r5, [r4, #520]	; 0x208
 8004112:	e9c4 2584 	strd	r2, r5, [r4, #528]	; 0x210
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 8004116:	4658      	mov	r0, fp
 8004118:	f240 2257 	movw	r2, #599	; 0x257
 800411c:	f7ff fa3a 	bl	8003594 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>
 8004120:	f604 337c 	addw	r3, r4, #2940	; 0xb7c
 8004124:	4ad0      	ldr	r2, [pc, #832]	; (8004468 <_ZN19ScreenGraphViewBaseC1Ev+0x3d0>)
 8004126:	f8c4 20cc 	str.w	r2, [r4, #204]	; 0xcc
 800412a:	4618      	mov	r0, r3
        : DynamicDataGraph(capacity, values), current(0)
 800412c:	f8a4 5218 	strh.w	r5, [r4, #536]	; 0x218
 8004130:	ee0f 3a10 	vmov	s30, r3
 8004134:	f007 fefc 	bl	800bf30 <_ZN8touchgfx12CanvasWidgetC1Ev>
 */
class GraphElementLine : public AbstractGraphElement
{
public:
    GraphElementLine()
        : lineWidth(2)
 8004138:	f04f 0202 	mov.w	r2, #2
 800413c:	4bcb      	ldr	r3, [pc, #812]	; (800446c <_ZN19ScreenGraphViewBaseC1Ev+0x3d4>)
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800413e:	f8df 9350 	ldr.w	r9, [pc, #848]	; 8004490 <_ZN19ScreenGraphViewBaseC1Ev+0x3f8>
 8004142:	f884 2ba8 	strb.w	r2, [r4, #2984]	; 0xba8
 8004146:	f604 32ac 	addw	r2, r4, #2988	; 0xbac
 800414a:	f8c4 3b7c 	str.w	r3, [r4, #2940]	; 0xb7c
 800414e:	4610      	mov	r0, r2
 8004150:	9207      	str	r2, [sp, #28]
 8004152:	f7ff ff2f 	bl	8003fb4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8004156:	f109 0224 	add.w	r2, r9, #36	; 0x24
 800415a:	f504 613c 	add.w	r1, r4, #3008	; 0xbc0
 800415e:	f8c4 2bb4 	str.w	r2, [r4, #2996]	; 0xbb4
 8004162:	f8c4 9bac 	str.w	r9, [r4, #2988]	; 0xbac
class GraphElementGridX : public GraphElementGridBase
 8004166:	4608      	mov	r0, r1
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
 8004168:	f8c4 5bb8 	str.w	r5, [r4, #3000]	; 0xbb8
 800416c:	f8df a324 	ldr.w	sl, [pc, #804]	; 8004494 <_ZN19ScreenGraphViewBaseC1Ev+0x3fc>
class GraphElementGridY : public GraphElementGridBase
 8004170:	4fbf      	ldr	r7, [pc, #764]	; (8004470 <_ZN19ScreenGraphViewBaseC1Ev+0x3d8>)
 8004172:	ee0f 1a90 	vmov	s31, r1
class GraphElementGridX : public GraphElementGridBase
 8004176:	f7ff ff09 	bl	8003f8c <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 800417a:	f504 6140 	add.w	r1, r4, #3072	; 0xc00
 800417e:	f8c4 abc0 	str.w	sl, [r4, #3008]	; 0xbc0
class GraphElementGridY : public GraphElementGridBase
 8004182:	4608      	mov	r0, r1
 8004184:	9108      	str	r1, [sp, #32]
 8004186:	f7ff ff01 	bl	8003f8c <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 800418a:	f504 6144 	add.w	r1, r4, #3136	; 0xc40
 800418e:	f8c4 7c00 	str.w	r7, [r4, #3072]	; 0xc00
class GraphElementGridX : public GraphElementGridBase
 8004192:	4608      	mov	r0, r1
 8004194:	ee0e 1a10 	vmov	s28, r1
 8004198:	f7ff fef8 	bl	8003f8c <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 800419c:	f504 6148 	add.w	r1, r4, #3200	; 0xc80
 80041a0:	f8c4 ac40 	str.w	sl, [r4, #3136]	; 0xc40
class GraphElementGridY : public GraphElementGridBase
 80041a4:	4608      	mov	r0, r1
 80041a6:	ee0e 1a90 	vmov	s29, r1
 80041aa:	f7ff feef 	bl	8003f8c <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 80041ae:	f504 614c 	add.w	r1, r4, #3264	; 0xcc0
 80041b2:	f8c4 7c80 	str.w	r7, [r4, #3200]	; 0xc80

/**
 * GraphLabelsX will draw labels along the X axis at given intervals. By combining two
 * GraphLabelsX it is possible to have different appearance for major and minor y offsets.
 */
class GraphLabelsX : public GraphLabelsBase
 80041b6:	4608      	mov	r0, r1
 80041b8:	9109      	str	r1, [sp, #36]	; 0x24
 80041ba:	f7ff ff2d 	bl	8004018 <_ZN8touchgfx15GraphLabelsBaseC1Ev>
 80041be:	4aad      	ldr	r2, [pc, #692]	; (8004474 <_ZN19ScreenGraphViewBaseC1Ev+0x3dc>)
 80041c0:	f8c4 2cc0 	str.w	r2, [r4, #3264]	; 0xcc0
 80041c4:	f604 510c 	addw	r1, r4, #3340	; 0xd0c

/**
 * GraphLabelsY will draw labels along the Y axis at given intervals. By combining two
 * GraphLabelsY it is possible to have different appearance for major and minor y offsets.
 */
class GraphLabelsY : public GraphLabelsBase
 80041c8:	4608      	mov	r0, r1
 80041ca:	f604 5858 	addw	r8, r4, #3416	; 0xd58
 80041ce:	910a      	str	r1, [sp, #40]	; 0x28
 80041d0:	f7ff ff22 	bl	8004018 <_ZN8touchgfx15GraphLabelsBaseC1Ev>
 80041d4:	49a8      	ldr	r1, [pc, #672]	; (8004478 <_ZN19ScreenGraphViewBaseC1Ev+0x3e0>)
 80041d6:	f8c4 1d0c 	str.w	r1, [r4, #3340]	; 0xd0c
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 80041da:	4640      	mov	r0, r8
 80041dc:	213c      	movs	r1, #60	; 0x3c
 80041de:	f008 fa5b 	bl	800c698 <_ZN8touchgfx17AbstractDataGraphC1Es>
 80041e2:	4ba0      	ldr	r3, [pc, #640]	; (8004464 <_ZN19ScreenGraphViewBaseC1Ev+0x3cc>)
 80041e4:	f8c4 3d58 	str.w	r3, [r4, #3416]	; 0xd58
 80041e8:	2001      	movs	r0, #1
        : GraphScrollData(CAPACITY, y)
 80041ea:	f604 63a8 	addw	r3, r4, #3752	; 0xea8
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 80041ee:	4629      	mov	r1, r5
 80041f0:	223b      	movs	r2, #59	; 0x3b
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 80041f2:	f8c4 0e94 	str.w	r0, [r4, #3732]	; 0xe94
 80041f6:	f8c4 3e9c 	str.w	r3, [r4, #3740]	; 0xe9c
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 80041fa:	4640      	mov	r0, r8
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 80041fc:	f8c4 5e98 	str.w	r5, [r4, #3736]	; 0xe98
 8004200:	f8c4 5ea0 	str.w	r5, [r4, #3744]	; 0xea0
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 8004204:	f7ff f9c6 	bl	8003594 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>
 8004208:	4b9c      	ldr	r3, [pc, #624]	; (800447c <_ZN19ScreenGraphViewBaseC1Ev+0x3e4>)
 800420a:	f8c4 3d58 	str.w	r3, [r4, #3416]	; 0xd58
 800420e:	f604 7098 	addw	r0, r4, #3992	; 0xf98
        : DynamicDataGraph(capacity, values), current(0)
 8004212:	f8a4 5ea4 	strh.w	r5, [r4, #3748]	; 0xea4
 8004216:	900b      	str	r0, [sp, #44]	; 0x2c
        : CanvasWidget()
 8004218:	f007 fe8a 	bl	800bf30 <_ZN8touchgfx12CanvasWidgetC1Ev>
        : lineWidth(2)
 800421c:	4b93      	ldr	r3, [pc, #588]	; (800446c <_ZN19ScreenGraphViewBaseC1Ev+0x3d4>)
 800421e:	f8c4 3f98 	str.w	r3, [r4, #3992]	; 0xf98
 8004222:	f04f 0302 	mov.w	r3, #2
 8004226:	f884 3fc4 	strb.w	r3, [r4, #4036]	; 0xfc4
 800422a:	f604 70c8 	addw	r0, r4, #4040	; 0xfc8
 800422e:	900c      	str	r0, [sp, #48]	; 0x30
 8004230:	f7ff fec0 	bl	8003fb4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8004234:	f109 0224 	add.w	r2, r9, #36	; 0x24
 8004238:	f8c4 2fd0 	str.w	r2, [r4, #4048]	; 0xfd0
 800423c:	f8c4 9fc8 	str.w	r9, [r4, #4040]	; 0xfc8
 8004240:	f604 70dc 	addw	r0, r4, #4060	; 0xfdc
 8004244:	f8c4 5fd4 	str.w	r5, [r4, #4052]	; 0xfd4
 8004248:	900d      	str	r0, [sp, #52]	; 0x34
class GraphElementGridX : public GraphElementGridBase
 800424a:	f7ff fe9f 	bl	8003f8c <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 800424e:	f504 5080 	add.w	r0, r4, #4096	; 0x1000
class GraphElementGridY : public GraphElementGridBase
 8004252:	f504 5980 	add.w	r9, r4, #4096	; 0x1000
class GraphElementGridX : public GraphElementGridBase
 8004256:	f8c4 afdc 	str.w	sl, [r4, #4060]	; 0xfdc
 800425a:	301c      	adds	r0, #28
 800425c:	9005      	str	r0, [sp, #20]
class GraphElementGridY : public GraphElementGridBase
 800425e:	f7ff fe95 	bl	8003f8c <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 8004262:	f504 5082 	add.w	r0, r4, #4160	; 0x1040
 8004266:	f8c9 701c 	str.w	r7, [r9, #28]
 800426a:	301c      	adds	r0, #28
 800426c:	9003      	str	r0, [sp, #12]
class GraphElementGridX : public GraphElementGridBase
 800426e:	f7ff fe8d 	bl	8003f8c <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 8004272:	f504 5084 	add.w	r0, r4, #4224	; 0x1080
 8004276:	f8c9 a05c 	str.w	sl, [r9, #92]	; 0x5c
 800427a:	301c      	adds	r0, #28
 800427c:	9004      	str	r0, [sp, #16]
class GraphElementGridY : public GraphElementGridBase
 800427e:	f7ff fe85 	bl	8003f8c <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 8004282:	f504 5086 	add.w	r0, r4, #4288	; 0x10c0
 8004286:	f8c9 709c 	str.w	r7, [r9, #156]	; 0x9c
 800428a:	301c      	adds	r0, #28
 800428c:	9006      	str	r0, [sp, #24]
 800428e:	f7ff fec3 	bl	8004018 <_ZN8touchgfx15GraphLabelsBaseC1Ev>
 8004292:	4979      	ldr	r1, [pc, #484]	; (8004478 <_ZN19ScreenGraphViewBaseC1Ev+0x3e0>)
 8004294:	f8c9 10dc 	str.w	r1, [r9, #220]	; 0xdc
 8004298:	f504 5189 	add.w	r1, r4, #4384	; 0x1120
 800429c:	3108      	adds	r1, #8
 */
class Button : public AbstractButton
{
public:
    Button()
        : AbstractButton(), up(), down(), alpha(255)
 800429e:	4608      	mov	r0, r1
 80042a0:	ee09 1a10 	vmov	s18, r1
 80042a4:	f7ff fed6 	bl	8004054 <_ZN8touchgfx14AbstractButtonC1Ev>
 * A ToggleButton is a Button specialization that swaps the two bitmaps when clicked, such that
 * the previous "pressed" bitmap, now becomes the one displayed when button is not
 * pressed. This can by used to give the effect of a button that can be pressed in and
 * when it is subsequently pressed, it will pop back out.
 */
class ToggleButton : public Button
 80042a8:	4b75      	ldr	r3, [pc, #468]	; (8004480 <_ZN19ScreenGraphViewBaseC1Ev+0x3e8>)
 80042aa:	f8c9 3128 	str.w	r3, [r9, #296]	; 0x128
 80042ae:	f504 518b 	add.w	r1, r4, #4448	; 0x1160
 80042b2:	f8a9 6156 	strh.w	r6, [r9, #342]	; 0x156
 80042b6:	f8a9 6158 	strh.w	r6, [r9, #344]	; 0x158
 80042ba:	f889 615a 	strb.w	r6, [r9, #346]	; 0x15a
 80042be:	f8a9 615c 	strh.w	r6, [r9, #348]	; 0x15c
 80042c2:	4608      	mov	r0, r1
 80042c4:	ee09 1a90 	vmov	s19, r1
 80042c8:	f7fe fd4c 	bl	8002d64 <_ZN8touchgfx8TextAreaC1Ev>
 80042cc:	f504 518d 	add.w	r1, r4, #4512	; 0x11a0
 80042d0:	3108      	adds	r1, #8
 80042d2:	4608      	mov	r0, r1
 80042d4:	ee08 1a10 	vmov	s16, r1
 80042d8:	f7ff fed2 	bl	8004080 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80042dc:	f504 518f 	add.w	r1, r4, #4576	; 0x11e0
 80042e0:	3114      	adds	r1, #20
 80042e2:	4608      	mov	r0, r1
 80042e4:	ee0a 1a10 	vmov	s20, r1
 80042e8:	f7ff feca 	bl	8004080 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80042ec:	f504 5192 	add.w	r1, r4, #4672	; 0x1240
 80042f0:	4608      	mov	r0, r1
 80042f2:	ee0c 1a90 	vmov	s25, r1
 80042f6:	f7ff fec3 	bl	8004080 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80042fa:	f504 5194 	add.w	r1, r4, #4736	; 0x1280
 80042fe:	310c      	adds	r1, #12
 8004300:	f504 5a96 	add.w	sl, r4, #4800	; 0x12c0
 8004304:	4608      	mov	r0, r1
 8004306:	f10a 0a18 	add.w	sl, sl, #24
 800430a:	ee0a 1a90 	vmov	s21, r1
 800430e:	f7ff feb7 	bl	8004080 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8004312:	4650      	mov	r0, sl
 8004314:	f006 fb18 	bl	800a948 <_ZN8touchgfx11ModalWindowC1Ev>
 8004318:	f504 519c 	add.w	r1, r4, #4992	; 0x1380
 800431c:	3108      	adds	r1, #8
 800431e:	4608      	mov	r0, r1
 8004320:	ee0d 1a10 	vmov	s26, r1
 8004324:	f7ff fe96 	bl	8004054 <_ZN8touchgfx14AbstractButtonC1Ev>
 8004328:	f504 519d 	add.w	r1, r4, #5024	; 0x13a0
 800432c:	311c      	adds	r1, #28
 800432e:	4b55      	ldr	r3, [pc, #340]	; (8004484 <_ZN19ScreenGraphViewBaseC1Ev+0x3ec>)
 8004330:	f8c9 3388 	str.w	r3, [r9, #904]	; 0x388
 8004334:	460b      	mov	r3, r1
 8004336:	4618      	mov	r0, r3
 8004338:	f8a9 63b6 	strh.w	r6, [r9, #950]	; 0x3b6
 800433c:	f8a9 63b8 	strh.w	r6, [r9, #952]	; 0x3b8
 8004340:	f889 63ba 	strb.w	r6, [r9, #954]	; 0x3ba
 8004344:	ee0b 1a10 	vmov	s22, r1
 8004348:	a914      	add	r1, sp, #80	; 0x50
 800434a:	f8ad 6050 	strh.w	r6, [sp, #80]	; 0x50
 800434e:	f7fe fcef 	bl	8002d30 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8004352:	f504 519f 	add.w	r1, r4, #5088	; 0x13e0
 8004356:	3108      	adds	r1, #8
 8004358:	4608      	mov	r0, r1
 800435a:	ee08 1a90 	vmov	s17, r1
 800435e:	f7fe fd01 	bl	8002d64 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8004362:	4b49      	ldr	r3, [pc, #292]	; (8004488 <_ZN19ScreenGraphViewBaseC1Ev+0x3f0>)
 8004364:	f8c9 346c 	str.w	r3, [r9, #1132]	; 0x46c
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8004368:	f504 50a3 	add.w	r0, r4, #5216	; 0x1460
 800436c:	4b47      	ldr	r3, [pc, #284]	; (800448c <_ZN19ScreenGraphViewBaseC1Ev+0x3f4>)
 800436e:	f8c9 3474 	str.w	r3, [r9, #1140]	; 0x474
 8004372:	f44f 5196 	mov.w	r1, #4800	; 0x12c0
 8004376:	301c      	adds	r0, #28
 8004378:	f8c9 4470 	str.w	r4, [r9, #1136]	; 0x470
 800437c:	f8c9 5478 	str.w	r5, [r9, #1144]	; 0x478
 8004380:	f00b f9ce 	bl	800f720 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 320, 240);
 8004384:	23f0      	movs	r3, #240	; 0xf0
 8004386:	ee1b 0a90 	vmov	r0, s23
 800438a:	9300      	str	r3, [sp, #0]
 800438c:	462a      	mov	r2, r5
 800438e:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8004392:	4629      	mov	r1, r5
 8004394:	f7fe fc93 	bl	8002cbe <_ZN8touchgfx8Drawable11setPositionEssss>
 8004398:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
    Background.setXY(-109, -23);
 800439c:	f06f 0216 	mvn.w	r2, #22
 80043a0:	ee1c 0a10 	vmov	r0, s24
 80043a4:	66a1      	str	r1, [r4, #104]	; 0x68
 80043a6:	f06f 016c 	mvn.w	r1, #108	; 0x6c
 80043aa:	f7fe fc49 	bl	8002c40 <_ZN8touchgfx8Drawable5setXYEss>
 80043ae:	f04f 0104 	mov.w	r1, #4
    Background.setBitmap(touchgfx::Bitmap(BITMAP_DARK_BACKGROUNDS_MAIN_BG_TEXTURE_480X272PX_ID));
 80043b2:	ee1c 0a10 	vmov	r0, s24
 80043b6:	f8ad 1050 	strh.w	r1, [sp, #80]	; 0x50
 80043ba:	a914      	add	r1, sp, #80	; 0x50
 80043bc:	f00a f9c2 	bl	800e744 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    boxWithBorder1.setPosition(0, 0, 320, 166);
 80043c0:	21a6      	movs	r1, #166	; 0xa6
 80043c2:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80043c6:	ee1d 0a90 	vmov	r0, s27
 80043ca:	9100      	str	r1, [sp, #0]
 80043cc:	462a      	mov	r2, r5
 80043ce:	4629      	mov	r1, r5
 80043d0:	f7fe fc75 	bl	8002cbe <_ZN8touchgfx8Drawable11setPositionEssss>
 80043d4:	f04f 31ff 	mov.w	r1, #4294967295
 80043d8:	f8c4 10c0 	str.w	r1, [r4, #192]	; 0xc0
        borderColor = colorBorder;
 80043dc:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
 80043e0:	f8c4 10c4 	str.w	r1, [r4, #196]	; 0xc4
        borderSize = size;
 80043e4:	f04f 0101 	mov.w	r1, #1
 80043e8:	f8a4 10c8 	strh.w	r1, [r4, #200]	; 0xc8
    dynamicGraph2.setScale(1000);
 80043ec:	462a      	mov	r2, r5
 80043ee:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 80043f2:	4658      	mov	r0, fp
 80043f4:	f7ff fa82 	bl	80038fc <_ZN8touchgfx16DynamicDataGraph8setScaleEib>
    dynamicGraph2.setGraphRangeX(0, 10);
 80043f8:	220a      	movs	r2, #10
 80043fa:	4629      	mov	r1, r5
 80043fc:	4658      	mov	r0, fp
 80043fe:	f7ff f8c9 	bl	8003594 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>
    dynamicGraph2.setPosition(0, 0, 320, 166);
 8004402:	21a6      	movs	r1, #166	; 0xa6
 8004404:	9100      	str	r1, [sp, #0]
 8004406:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800440a:	462a      	mov	r2, r5
 800440c:	4629      	mov	r1, r5
 800440e:	4658      	mov	r0, fp
 8004410:	f7fe fc55 	bl	8002cbe <_ZN8touchgfx8Drawable11setPositionEssss>
    dynamicGraph2.setGraphAreaMargin(6, 20, 5, 15);
 8004414:	210f      	movs	r1, #15
 8004416:	9100      	str	r1, [sp, #0]
 8004418:	2305      	movs	r3, #5
 800441a:	2214      	movs	r2, #20
 800441c:	2106      	movs	r1, #6
 800441e:	4658      	mov	r0, fp
 8004420:	f008 f8ec 	bl	800c5fc <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>
    dynamicGraph2.setGraphAreaPadding(0, 0, 0, 0);
 8004424:	462b      	mov	r3, r5
 8004426:	462a      	mov	r2, r5
 8004428:	4629      	mov	r1, r5
 800442a:	4658      	mov	r0, fp
 800442c:	9500      	str	r5, [sp, #0]
 800442e:	f007 ffe8 	bl	800c402 <_ZN8touchgfx17AbstractDataGraph19setGraphAreaPaddingEssss>
    dynamicGraph2.setGraphRangeY(1.0f, 1.5f);
 8004432:	eef7 0a08 	vmov.f32	s1, #120	; 0x3fc00000  1.5
 8004436:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 800443a:	4658      	mov	r0, fp
 800443c:	f7ff f940 	bl	80036c0 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 8004440:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8004444:	f8d4 1bf0 	ldr.w	r1, [r4, #3056]	; 0xbf0
 8004448:	f8d4 0bf4 	ldr.w	r0, [r4, #3060]	; 0xbf4
        visible = vis;
 800444c:	f884 50f1 	strb.w	r5, [r4, #241]	; 0xf1
 8004450:	f008 f986 	bl	800c760 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        majorGrid = &major;
 8004454:	ee1e 3a10 	vmov	r3, s28
 8004458:	e01e      	b.n	8004498 <_ZN19ScreenGraphViewBaseC1Ev+0x400>
 800445a:	bf00      	nop
 800445c:	080232ac 	.word	0x080232ac
 8004460:	08024138 	.word	0x08024138
 8004464:	080238fc 	.word	0x080238fc
 8004468:	08022f5c 	.word	0x08022f5c
 800446c:	08023bd4 	.word	0x08023bd4
 8004470:	08022e84 	.word	0x08022e84
 8004474:	08023d08 	.word	0x08023d08
 8004478:	08023da8 	.word	0x08023da8
 800447c:	080230f8 	.word	0x080230f8
 8004480:	08023f58 	.word	0x08023f58
 8004484:	080240c4 	.word	0x080240c4
 8004488:	08023294 	.word	0x08023294
 800448c:	08003ea9 	.word	0x08003ea9
 8004490:	0802384c 	.word	0x0802384c
 8004494:	08022dcc 	.word	0x08022dcc
        dataScale = scale;
 8004498:	f44f 767a 	mov.w	r6, #1000	; 0x3e8
        color = newColor;
 800449c:	4fd3      	ldr	r7, [pc, #844]	; (80047ec <_ZN19ScreenGraphViewBaseC1Ev+0x754>)
        majorGrid = &major;
 800449e:	f8c4 3bfc 	str.w	r3, [r4, #3068]	; 0xbfc
        lineWidth = width;
 80044a2:	f04f 0101 	mov.w	r1, #1
        dataScale = scale;
 80044a6:	f8c4 6bf0 	str.w	r6, [r4, #3056]	; 0xbf0
        color = newColor;
 80044aa:	f8c4 7bec 	str.w	r7, [r4, #3052]	; 0xbec
        gridInterval = abs(interval);
 80044ae:	f8c4 6bf4 	str.w	r6, [r4, #3060]	; 0xbf4
        lineWidth = width;
 80044b2:	f884 1bf8 	strb.w	r1, [r4, #3064]	; 0xbf8
    dynamicGraph2.addGraphElement(dynamicGraph2MinorXAxisGrid);
 80044b6:	4658      	mov	r0, fp
 80044b8:	ee1f 1a90 	vmov	r1, s31
 80044bc:	f007 ffac 	bl	800c418 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 80044c0:	4632      	mov	r2, r6
 80044c2:	f8d4 1c30 	ldr.w	r1, [r4, #3120]	; 0xc30
 80044c6:	f8d4 0c34 	ldr.w	r0, [r4, #3124]	; 0xc34
 80044ca:	f008 f949 	bl	800c760 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        majorGrid = &major;
 80044ce:	ee1e 3a90 	vmov	r3, s29
        gridInterval = abs(interval);
 80044d2:	204b      	movs	r0, #75	; 0x4b
        lineWidth = width;
 80044d4:	f04f 0101 	mov.w	r1, #1
        majorGrid = &major;
 80044d8:	f8c4 3c3c 	str.w	r3, [r4, #3132]	; 0xc3c
        dataScale = scale;
 80044dc:	f8c4 6c30 	str.w	r6, [r4, #3120]	; 0xc30
        color = newColor;
 80044e0:	f8c4 7c2c 	str.w	r7, [r4, #3116]	; 0xc2c
        gridInterval = abs(interval);
 80044e4:	f8c4 0c34 	str.w	r0, [r4, #3124]	; 0xc34
        lineWidth = width;
 80044e8:	f884 1c38 	strb.w	r1, [r4, #3128]	; 0xc38
    dynamicGraph2.addGraphElement(dynamicGraph2MinorYAxisGrid);
 80044ec:	4658      	mov	r0, fp
 80044ee:	9908      	ldr	r1, [sp, #32]
 80044f0:	f007 ff92 	bl	800c418 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 80044f4:	4632      	mov	r2, r6
 80044f6:	f8d4 1c70 	ldr.w	r1, [r4, #3184]	; 0xc70
 80044fa:	f8d4 0c74 	ldr.w	r0, [r4, #3188]	; 0xc74
 80044fe:	f008 f92f 	bl	800c760 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        lineWidth = width;
 8004502:	f04f 0302 	mov.w	r3, #2
 8004506:	f884 3c78 	strb.w	r3, [r4, #3192]	; 0xc78
    dynamicGraph2.addGraphElement(dynamicGraph2MajorXAxisGrid);
 800450a:	ee1e 1a10 	vmov	r1, s28
        dataScale = scale;
 800450e:	f8c4 6c70 	str.w	r6, [r4, #3184]	; 0xc70
        color = newColor;
 8004512:	f8c4 7c6c 	str.w	r7, [r4, #3180]	; 0xc6c
        gridInterval = abs(interval);
 8004516:	f8c4 6c74 	str.w	r6, [r4, #3188]	; 0xc74
 800451a:	4658      	mov	r0, fp
 800451c:	f007 ff7c 	bl	800c418 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 8004520:	4632      	mov	r2, r6
 8004522:	f8d4 1cb0 	ldr.w	r1, [r4, #3248]	; 0xcb0
 8004526:	f8d4 0cb4 	ldr.w	r0, [r4, #3252]	; 0xcb4
 800452a:	f008 f919 	bl	800c760 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        lineWidth = width;
 800452e:	f04f 0302 	mov.w	r3, #2
        gridInterval = abs(interval);
 8004532:	2196      	movs	r1, #150	; 0x96
        lineWidth = width;
 8004534:	f884 3cb8 	strb.w	r3, [r4, #3256]	; 0xcb8
        dataScale = scale;
 8004538:	f8c4 6cb0 	str.w	r6, [r4, #3248]	; 0xcb0
        color = newColor;
 800453c:	f8c4 7cac 	str.w	r7, [r4, #3244]	; 0xcac
        gridInterval = abs(interval);
 8004540:	f8c4 1cb4 	str.w	r1, [r4, #3252]	; 0xcb4
    dynamicGraph2.addGraphElement(dynamicGraph2MajorYAxisGrid);
 8004544:	4658      	mov	r0, fp
 8004546:	ee1e 1a90 	vmov	r1, s29
 800454a:	f007 ff65 	bl	800c418 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        labelInterval = AbstractDataGraph::convertToNewScale(labelInterval, dataScale, scale);
 800454e:	4632      	mov	r2, r6
 8004550:	f8d4 1cf0 	ldr.w	r1, [r4, #3312]	; 0xcf0
 8004554:	f8d4 0cf4 	ldr.w	r0, [r4, #3316]	; 0xcf4
 8004558:	f008 f902 	bl	800c760 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
class TypedText
 800455c:	f04f 0207 	mov.w	r2, #7
    dynamicGraph2.addBottomElement(dynamicGraph2MajorXAxisLabel);
 8004560:	9909      	ldr	r1, [sp, #36]	; 0x24
        dataScale = scale;
 8004562:	f8c4 6cf0 	str.w	r6, [r4, #3312]	; 0xcf0
        labelInterval = abs(interval);
 8004566:	f8c4 6cf4 	str.w	r6, [r4, #3316]	; 0xcf4
 800456a:	f8a4 2cfc 	strh.w	r2, [r4, #3324]	; 0xcfc
        color = newColor;
 800456e:	f8c4 7cec 	str.w	r7, [r4, #3308]	; 0xcec
 8004572:	4658      	mov	r0, fp
 8004574:	f007 ff74 	bl	800c460 <_ZN8touchgfx17AbstractDataGraph16addBottomElementERNS_23AbstractGraphDecorationE>
        labelInterval = AbstractDataGraph::convertToNewScale(labelInterval, dataScale, scale);
 8004578:	4632      	mov	r2, r6
 800457a:	f8d4 1d3c 	ldr.w	r1, [r4, #3388]	; 0xd3c
 800457e:	f8d4 0d40 	ldr.w	r0, [r4, #3392]	; 0xd40
 8004582:	f008 f8ed 	bl	800c760 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        labelInterval = abs(interval);
 8004586:	2296      	movs	r2, #150	; 0x96
 8004588:	f8c4 2d40 	str.w	r2, [r4, #3392]	; 0xd40
 800458c:	f04f 0206 	mov.w	r2, #6
 8004590:	f8a4 2d48 	strh.w	r2, [r4, #3400]	; 0xd48
        labelDecimals = decimals;
 8004594:	f04f 0201 	mov.w	r2, #1
    dynamicGraph2.addLeftElement(dynamicGraph2MajorYAxisLabel);
 8004598:	990a      	ldr	r1, [sp, #40]	; 0x28
        dataScale = scale;
 800459a:	f8c4 6d3c 	str.w	r6, [r4, #3388]	; 0xd3c
        labelDecimals = decimals;
 800459e:	f8a4 2d4e 	strh.w	r2, [r4, #3406]	; 0xd4e
 80045a2:	f8c4 7d38 	str.w	r7, [r4, #3384]	; 0xd38
 80045a6:	4658      	mov	r0, fp
 80045a8:	f007 ff48 	bl	800c43c <_ZN8touchgfx17AbstractDataGraph14addLeftElementERNS_23AbstractGraphDecorationE>
        canvasPainter = &painter;
 80045ac:	9b07      	ldr	r3, [sp, #28]
 80045ae:	f8c4 3ba4 	str.w	r3, [r4, #2980]	; 0xba4
 80045b2:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
     *
     * @see getLineWidth
     */
    FORCE_INLINE_FUNCTION void setLineWidth(uint8_t width)
    {
        lineWidth = width;
 80045b6:	f04f 0302 	mov.w	r3, #2
 80045ba:	f884 3ba8 	strb.w	r3, [r4, #2984]	; 0xba8
    dynamicGraph2.addGraphElement(dynamicGraph2Line1);
 80045be:	ee1f 1a10 	vmov	r1, s30
 80045c2:	f8c4 2bb8 	str.w	r2, [r4, #3000]	; 0xbb8
 80045c6:	4658      	mov	r0, fp
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
 80045c8:	f8a4 5bbc 	strh.w	r5, [r4, #3004]	; 0xbbc
 80045cc:	f007 ff24 	bl	800c418 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
    dynamicGraph1.setScale(1000);
 80045d0:	4631      	mov	r1, r6
 80045d2:	462a      	mov	r2, r5
 80045d4:	4640      	mov	r0, r8
 80045d6:	f7ff f991 	bl	80038fc <_ZN8touchgfx16DynamicDataGraph8setScaleEib>
    dynamicGraph1.setPosition(0, 0, 320, 166);
 80045da:	22a6      	movs	r2, #166	; 0xa6
 80045dc:	9200      	str	r2, [sp, #0]
 80045de:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80045e2:	462a      	mov	r2, r5
 80045e4:	4629      	mov	r1, r5
 80045e6:	4640      	mov	r0, r8
 80045e8:	f7fe fb69 	bl	8002cbe <_ZN8touchgfx8Drawable11setPositionEssss>
    dynamicGraph1.setGraphAreaMargin(6, 24, 0, 15);
 80045ec:	220f      	movs	r2, #15
 80045ee:	9200      	str	r2, [sp, #0]
 80045f0:	462b      	mov	r3, r5
 80045f2:	2218      	movs	r2, #24
 80045f4:	2106      	movs	r1, #6
 80045f6:	4640      	mov	r0, r8
 80045f8:	f008 f800 	bl	800c5fc <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>
    dynamicGraph1.setGraphAreaPadding(0, 0, 0, 0);
 80045fc:	462b      	mov	r3, r5
 80045fe:	462a      	mov	r2, r5
 8004600:	4629      	mov	r1, r5
 8004602:	4640      	mov	r0, r8
 8004604:	9500      	str	r5, [sp, #0]
 8004606:	f007 fefc 	bl	800c402 <_ZN8touchgfx17AbstractDataGraph19setGraphAreaPaddingEssss>
    dynamicGraph1.setGraphRangeY(1.0f, 1.5f);
 800460a:	eef7 0a08 	vmov.f32	s1, #120	; 0x3fc00000  1.5
 800460e:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 8004612:	4640      	mov	r0, r8
 8004614:	f7ff f854 	bl	80036c0 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 8004618:	4632      	mov	r2, r6
 800461a:	e9d9 1003 	ldrd	r1, r0, [r9, #12]
 800461e:	f008 f89f 	bl	800c760 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        gridInterval = abs(interval);
 8004622:	f241 3288 	movw	r2, #5000	; 0x1388
        majorGrid = &major;
 8004626:	9b03      	ldr	r3, [sp, #12]
        gridInterval = abs(interval);
 8004628:	f8c9 2010 	str.w	r2, [r9, #16]
        lineWidth = width;
 800462c:	f04f 0201 	mov.w	r2, #1
        color = newColor;
 8004630:	e9c9 7602 	strd	r7, r6, [r9, #8]
        majorGrid = &major;
 8004634:	f8c9 3018 	str.w	r3, [r9, #24]
    dynamicGraph1.addGraphElement(dynamicGraph1MinorXAxisGrid);
 8004638:	990d      	ldr	r1, [sp, #52]	; 0x34
        lineWidth = width;
 800463a:	f889 2014 	strb.w	r2, [r9, #20]
 800463e:	4640      	mov	r0, r8
 8004640:	f007 feea 	bl	800c418 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 8004644:	4632      	mov	r2, r6
 8004646:	e9d9 1013 	ldrd	r1, r0, [r9, #76]	; 0x4c
 800464a:	f008 f889 	bl	800c760 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        gridInterval = abs(interval);
 800464e:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
        lineWidth = width;
 8004652:	f04f 0201 	mov.w	r2, #1
        gridInterval = abs(interval);
 8004656:	f8c9 3050 	str.w	r3, [r9, #80]	; 0x50
        majorGrid = &major;
 800465a:	9b04      	ldr	r3, [sp, #16]
 800465c:	f8c9 3058 	str.w	r3, [r9, #88]	; 0x58
        color = newColor;
 8004660:	e9c9 7612 	strd	r7, r6, [r9, #72]	; 0x48
    dynamicGraph1.addGraphElement(dynamicGraph1MinorYAxisGrid);
 8004664:	9905      	ldr	r1, [sp, #20]
        lineWidth = width;
 8004666:	f889 2054 	strb.w	r2, [r9, #84]	; 0x54
 800466a:	4640      	mov	r0, r8
 800466c:	f007 fed4 	bl	800c418 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 8004670:	4632      	mov	r2, r6
 8004672:	e9d9 1023 	ldrd	r1, r0, [r9, #140]	; 0x8c
 8004676:	f008 f873 	bl	800c760 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        gridInterval = abs(interval);
 800467a:	f242 7310 	movw	r3, #10000	; 0x2710
 800467e:	f8c9 3090 	str.w	r3, [r9, #144]	; 0x90
        lineWidth = width;
 8004682:	f04f 0302 	mov.w	r3, #2
        color = newColor;
 8004686:	e9c9 7622 	strd	r7, r6, [r9, #136]	; 0x88
        lineWidth = width;
 800468a:	f889 3094 	strb.w	r3, [r9, #148]	; 0x94
    dynamicGraph1.addGraphElement(dynamicGraph1MajorXAxisGrid);
 800468e:	9903      	ldr	r1, [sp, #12]
 8004690:	4640      	mov	r0, r8
 8004692:	f007 fec1 	bl	800c418 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 8004696:	4632      	mov	r2, r6
 8004698:	e9d9 1033 	ldrd	r1, r0, [r9, #204]	; 0xcc
 800469c:	f008 f860 	bl	800c760 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        lineWidth = width;
 80046a0:	f04f 0302 	mov.w	r3, #2
        color = newColor;
 80046a4:	e9c9 7632 	strd	r7, r6, [r9, #200]	; 0xc8
        lineWidth = width;
 80046a8:	f889 30d4 	strb.w	r3, [r9, #212]	; 0xd4
    dynamicGraph1.addGraphElement(dynamicGraph1MajorYAxisGrid);
 80046ac:	9904      	ldr	r1, [sp, #16]
        gridInterval = abs(interval);
 80046ae:	f8c9 60d0 	str.w	r6, [r9, #208]	; 0xd0
 80046b2:	4640      	mov	r0, r8
 80046b4:	f007 feb0 	bl	800c418 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        labelInterval = AbstractDataGraph::convertToNewScale(labelInterval, dataScale, scale);
 80046b8:	4632      	mov	r2, r6
 80046ba:	e9d9 1043 	ldrd	r1, r0, [r9, #268]	; 0x10c
 80046be:	f008 f84f 	bl	800c760 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        labelInterval = abs(interval);
 80046c2:	2396      	movs	r3, #150	; 0x96
 80046c4:	f8c9 3110 	str.w	r3, [r9, #272]	; 0x110
 80046c8:	f04f 030f 	mov.w	r3, #15
 80046cc:	f8a9 3118 	strh.w	r3, [r9, #280]	; 0x118
        labelDecimals = decimals;
 80046d0:	f04f 0302 	mov.w	r3, #2
    dynamicGraph1.addLeftElement(dynamicGraph1MajorYAxisLabel);
 80046d4:	9906      	ldr	r1, [sp, #24]
        dataScale = scale;
 80046d6:	f8c9 610c 	str.w	r6, [r9, #268]	; 0x10c
        labelDecimals = decimals;
 80046da:	f8a9 311e 	strh.w	r3, [r9, #286]	; 0x11e
        color = newColor;
 80046de:	f8c9 7108 	str.w	r7, [r9, #264]	; 0x108
 80046e2:	4640      	mov	r0, r8
 80046e4:	f007 feaa 	bl	800c43c <_ZN8touchgfx17AbstractDataGraph14addLeftElementERNS_23AbstractGraphDecorationE>
 80046e8:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80046ec:	f8c4 3fd4 	str.w	r3, [r4, #4052]	; 0xfd4
 80046f0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80046f2:	f8c4 3fc0 	str.w	r3, [r4, #4032]	; 0xfc0
        lineWidth = width;
 80046f6:	f04f 0302 	mov.w	r3, #2
 80046fa:	f884 3fc4 	strb.w	r3, [r4, #4036]	; 0xfc4
    dynamicGraph1.addGraphElement(dynamicGraph1Line1);
 80046fe:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8004700:	f8a4 5fd8 	strh.w	r5, [r4, #4056]	; 0xfd8
 8004704:	4640      	mov	r0, r8
 8004706:	f007 fe87 	bl	800c418 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
    toggleButton1.setXY(65, 211);
 800470a:	ee19 0a10 	vmov	r0, s18
 800470e:	22d3      	movs	r2, #211	; 0xd3
 8004710:	2141      	movs	r1, #65	; 0x41
 8004712:	f7fe fa95 	bl	8002c40 <_ZN8touchgfx8Drawable5setXYEss>
 8004716:	f04f 030b 	mov.w	r3, #11
 800471a:	f8ad 304c 	strh.w	r3, [sp, #76]	; 0x4c
 800471e:	f04f 030c 	mov.w	r3, #12
{
public:
    virtual void setBitmaps(const Bitmap& bitmapReleased, const Bitmap& bitmapPressed)
    {
        originalPressed = bitmapPressed;
        Button::setBitmaps(bitmapReleased, bitmapPressed);
 8004722:	ee19 0a10 	vmov	r0, s18
        originalPressed = bitmapPressed;
 8004726:	f8a9 315c 	strh.w	r3, [r9, #348]	; 0x15c
        Button::setBitmaps(bitmapReleased, bitmapPressed);
 800472a:	aa14      	add	r2, sp, #80	; 0x50
 800472c:	a913      	add	r1, sp, #76	; 0x4c
 800472e:	f8ad 3050 	strh.w	r3, [sp, #80]	; 0x50
 8004732:	f009 fde4 	bl	800e2fe <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
    toggleButton1.setAction(buttonCallback);
 8004736:	f504 53a3 	add.w	r3, r4, #5216	; 0x1460
 800473a:	330c      	adds	r3, #12
    txtShowWholeGraph.setXY(1, 219);
 800473c:	22db      	movs	r2, #219	; 0xdb
 800473e:	ee19 0a90 	vmov	r0, s19
        action = &callback;
 8004742:	f8c9 3150 	str.w	r3, [r9, #336]	; 0x150
 8004746:	2101      	movs	r1, #1
 8004748:	ae0e      	add	r6, sp, #56	; 0x38
    toggleButton1.setAction(buttonCallback);
 800474a:	9303      	str	r3, [sp, #12]
    txtShowWholeGraph.setXY(1, 219);
 800474c:	f7fe fa78 	bl	8002c40 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004750:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        boundingArea = calculateBoundingArea();
 8004754:	ee19 1a90 	vmov	r1, s19
        color = newColor;
 8004758:	f8c9 3190 	str.w	r3, [r9, #400]	; 0x190
        boundingArea = calculateBoundingArea();
 800475c:	4630      	mov	r0, r6
        linespace = space;
 800475e:	f8a9 5194 	strh.w	r5, [r9, #404]	; 0x194
        boundingArea = calculateBoundingArea();
 8004762:	f009 faef 	bl	800dd44 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004766:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 800476a:	ee19 3a90 	vmov	r3, s19
 800476e:	333c      	adds	r3, #60	; 0x3c
 8004770:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8004774:	4b1e      	ldr	r3, [pc, #120]	; (80047f0 <_ZN19ScreenGraphViewBaseC1Ev+0x758>)
 8004776:	9314      	str	r3, [sp, #80]	; 0x50
    txtShowWholeGraph.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DO01));
 8004778:	ee19 0a90 	vmov	r0, s19
 800477c:	230e      	movs	r3, #14
 800477e:	a914      	add	r1, sp, #80	; 0x50
 8004780:	f8ad 3054 	strh.w	r3, [sp, #84]	; 0x54
 8004784:	f009 fd60 	bl	800e248 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    txtLastValue.setPosition(2, 168, 132, 15);
 8004788:	230f      	movs	r3, #15
 800478a:	22a8      	movs	r2, #168	; 0xa8
 800478c:	ee18 0a10 	vmov	r0, s16
 8004790:	9300      	str	r3, [sp, #0]
 8004792:	2102      	movs	r1, #2
 8004794:	2384      	movs	r3, #132	; 0x84
 8004796:	f7fe fa92 	bl	8002cbe <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 800479a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800479e:	f8c9 31d8 	str.w	r3, [r9, #472]	; 0x1d8
        boundingArea = calculateBoundingArea();
 80047a2:	f8d9 31a8 	ldr.w	r3, [r9, #424]	; 0x1a8
        linespace = space;
 80047a6:	f8a9 51dc 	strh.w	r5, [r9, #476]	; 0x1dc
        boundingArea = calculateBoundingArea();
 80047aa:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80047ae:	ee18 1a10 	vmov	r1, s16
 80047b2:	4630      	mov	r0, r6
 80047b4:	4798      	blx	r3
 80047b6:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80047ba:	ee18 3a10 	vmov	r3, s16
 80047be:	333c      	adds	r3, #60	; 0x3c
 80047c0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80047c4:	4b0b      	ldr	r3, [pc, #44]	; (80047f4 <_ZN19ScreenGraphViewBaseC1Ev+0x75c>)
 80047c6:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(txtLastValueBuffer, TXTLASTVALUE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_SQ4H).getText());
 80047c8:	f504 57a1 	add.w	r7, r4, #5152	; 0x1420
 80047cc:	3710      	adds	r7, #16
 80047ce:	b92b      	cbnz	r3, 80047dc <_ZN19ScreenGraphViewBaseC1Ev+0x744>
 80047d0:	4b09      	ldr	r3, [pc, #36]	; (80047f8 <_ZN19ScreenGraphViewBaseC1Ev+0x760>)
 80047d2:	4a0a      	ldr	r2, [pc, #40]	; (80047fc <_ZN19ScreenGraphViewBaseC1Ev+0x764>)
 80047d4:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80047d6:	480a      	ldr	r0, [pc, #40]	; (8004800 <_ZN19ScreenGraphViewBaseC1Ev+0x768>)
 80047d8:	f01c f832 	bl	8020840 <__assert_func>
 80047dc:	4b09      	ldr	r3, [pc, #36]	; (8004804 <_ZN19ScreenGraphViewBaseC1Ev+0x76c>)
 80047de:	881b      	ldrh	r3, [r3, #0]
 80047e0:	2b0b      	cmp	r3, #11
 80047e2:	d813      	bhi.n	800480c <_ZN19ScreenGraphViewBaseC1Ev+0x774>
 80047e4:	4b08      	ldr	r3, [pc, #32]	; (8004808 <_ZN19ScreenGraphViewBaseC1Ev+0x770>)
 80047e6:	4a05      	ldr	r2, [pc, #20]	; (80047fc <_ZN19ScreenGraphViewBaseC1Ev+0x764>)
 80047e8:	2161      	movs	r1, #97	; 0x61
 80047ea:	e7f4      	b.n	80047d6 <_ZN19ScreenGraphViewBaseC1Ev+0x73e>
 80047ec:	ff1497c5 	.word	0xff1497c5
 80047f0:	0802220c 	.word	0x0802220c
 80047f4:	2001560c 	.word	0x2001560c
 80047f8:	080227c0 	.word	0x080227c0
 80047fc:	080228c2 	.word	0x080228c2
 8004800:	0802283d 	.word	0x0802283d
 8004804:	20015610 	.word	0x20015610
 8004808:	08022884 	.word	0x08022884
        return texts->getText(typedTextId);
 800480c:	4bb8      	ldr	r3, [pc, #736]	; (8004af0 <_ZN19ScreenGraphViewBaseC1Ev+0xa58>)
 800480e:	210b      	movs	r1, #11
 8004810:	6818      	ldr	r0, [r3, #0]
 8004812:	f000 fadb 	bl	8004dcc <_ZNK8touchgfx5Texts7getTextEt>
 8004816:	4ab7      	ldr	r2, [pc, #732]	; (8004af4 <_ZN19ScreenGraphViewBaseC1Ev+0xa5c>)
 8004818:	4603      	mov	r3, r0
 800481a:	2108      	movs	r1, #8
 800481c:	4638      	mov	r0, r7
 800481e:	f00f fbfd 	bl	801401c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8004822:	4bb5      	ldr	r3, [pc, #724]	; (8004af8 <_ZN19ScreenGraphViewBaseC1Ev+0xa60>)
        wc1 = value;
 8004824:	f8c9 71f0 	str.w	r7, [r9, #496]	; 0x1f0
    txtLastValue.setTypedText(touchgfx::TypedText(T___SINGLEUSE_POMN));
 8004828:	ee18 0a10 	vmov	r0, s16
 800482c:	9314      	str	r3, [sp, #80]	; 0x50
 800482e:	a914      	add	r1, sp, #80	; 0x50
 8004830:	230d      	movs	r3, #13
 8004832:	f8ad 3054 	strh.w	r3, [sp, #84]	; 0x54
 8004836:	f009 fd07 	bl	800e248 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    txtMaxValue.setPosition(2, 183, 132, 15);
 800483a:	210f      	movs	r1, #15
 800483c:	9100      	str	r1, [sp, #0]
 800483e:	2384      	movs	r3, #132	; 0x84
 8004840:	2102      	movs	r1, #2
 8004842:	ee1a 0a10 	vmov	r0, s20
 8004846:	22b7      	movs	r2, #183	; 0xb7
 8004848:	f7fe fa39 	bl	8002cbe <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 800484c:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
 8004850:	f8c9 1224 	str.w	r1, [r9, #548]	; 0x224
        boundingArea = calculateBoundingArea();
 8004854:	f04f 31ff 	mov.w	r1, #4294967295
 8004858:	e9c9 158d 	strd	r1, r5, [r9, #564]	; 0x234
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800485c:	49a7      	ldr	r1, [pc, #668]	; (8004afc <_ZN19ScreenGraphViewBaseC1Ev+0xa64>)
        linespace = space;
 800485e:	f8a9 5228 	strh.w	r5, [r9, #552]	; 0x228
 8004862:	680b      	ldr	r3, [r1, #0]
        boundingArea = calculateBoundingArea();
 8004864:	f8c9 5230 	str.w	r5, [r9, #560]	; 0x230
    Unicode::snprintf(txtMaxValueBuffer, TXTMAXVALUE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_JAK9).getText());
 8004868:	f504 57a2 	add.w	r7, r4, #5184	; 0x1440
 800486c:	2b00      	cmp	r3, #0
 800486e:	d0af      	beq.n	80047d0 <_ZN19ScreenGraphViewBaseC1Ev+0x738>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004870:	48a3      	ldr	r0, [pc, #652]	; (8004b00 <_ZN19ScreenGraphViewBaseC1Ev+0xa68>)
 8004872:	8803      	ldrh	r3, [r0, #0]
 8004874:	2b0a      	cmp	r3, #10
 8004876:	d9b5      	bls.n	80047e4 <_ZN19ScreenGraphViewBaseC1Ev+0x74c>
        return texts->getText(typedTextId);
 8004878:	4a9d      	ldr	r2, [pc, #628]	; (8004af0 <_ZN19ScreenGraphViewBaseC1Ev+0xa58>)
 800487a:	210a      	movs	r1, #10
 800487c:	6810      	ldr	r0, [r2, #0]
 800487e:	f000 faa5 	bl	8004dcc <_ZNK8touchgfx5Texts7getTextEt>
 8004882:	4a9c      	ldr	r2, [pc, #624]	; (8004af4 <_ZN19ScreenGraphViewBaseC1Ev+0xa5c>)
 8004884:	4603      	mov	r3, r0
 8004886:	2108      	movs	r1, #8
 8004888:	4638      	mov	r0, r7
 800488a:	f00f fbc7 	bl	801401c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 800488e:	f04f 0c0c 	mov.w	ip, #12
 8004892:	f8ad c054 	strh.w	ip, [sp, #84]	; 0x54
    txtMaxValue.setTypedText(touchgfx::TypedText(T___SINGLEUSE_5RGF));
 8004896:	f10d 0c50 	add.w	ip, sp, #80	; 0x50
 800489a:	4b97      	ldr	r3, [pc, #604]	; (8004af8 <_ZN19ScreenGraphViewBaseC1Ev+0xa60>)
 800489c:	f8c9 723c 	str.w	r7, [r9, #572]	; 0x23c
 80048a0:	4661      	mov	r1, ip
 80048a2:	ee1a 0a10 	vmov	r0, s20
    textChargingTme.setPosition(2, 198, 132, 15);
 80048a6:	270f      	movs	r7, #15
 80048a8:	9314      	str	r3, [sp, #80]	; 0x50
    txtMaxValue.setTypedText(touchgfx::TypedText(T___SINGLEUSE_5RGF));
 80048aa:	f009 fccd 	bl	800e248 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textChargingTme.setPosition(2, 198, 132, 15);
 80048ae:	9700      	str	r7, [sp, #0]
 80048b0:	2384      	movs	r3, #132	; 0x84
 80048b2:	2102      	movs	r1, #2
 80048b4:	ee1c 0a90 	vmov	r0, s25
 80048b8:	22c6      	movs	r2, #198	; 0xc6
 80048ba:	f7fe fa00 	bl	8002cbe <_ZN8touchgfx8Drawable11setPositionEssss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80048be:	498f      	ldr	r1, [pc, #572]	; (8004afc <_ZN19ScreenGraphViewBaseC1Ev+0xa64>)
        linespace = space;
 80048c0:	f8a9 5274 	strh.w	r5, [r9, #628]	; 0x274
        color = newColor;
 80048c4:	f04f 477f 	mov.w	r7, #4278190080	; 0xff000000
 80048c8:	f8c9 7270 	str.w	r7, [r9, #624]	; 0x270
 80048cc:	680b      	ldr	r3, [r1, #0]
        boundingArea = calculateBoundingArea();
 80048ce:	f8c9 527c 	str.w	r5, [r9, #636]	; 0x27c
 80048d2:	f04f 37ff 	mov.w	r7, #4294967295
 80048d6:	e9c9 75a0 	strd	r7, r5, [r9, #640]	; 0x280
    Unicode::snprintf(textChargingTmeBuffer, TEXTCHARGINGTME_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_E1C6).getText());
 80048da:	f504 57a2 	add.w	r7, r4, #5184	; 0x1440
 80048de:	3710      	adds	r7, #16
 80048e0:	2b00      	cmp	r3, #0
 80048e2:	f43f af75 	beq.w	80047d0 <_ZN19ScreenGraphViewBaseC1Ev+0x738>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80048e6:	4886      	ldr	r0, [pc, #536]	; (8004b00 <_ZN19ScreenGraphViewBaseC1Ev+0xa68>)
 80048e8:	8803      	ldrh	r3, [r0, #0]
 80048ea:	2b08      	cmp	r3, #8
 80048ec:	f67f af7a 	bls.w	80047e4 <_ZN19ScreenGraphViewBaseC1Ev+0x74c>
        return texts->getText(typedTextId);
 80048f0:	4a7f      	ldr	r2, [pc, #508]	; (8004af0 <_ZN19ScreenGraphViewBaseC1Ev+0xa58>)
 80048f2:	2108      	movs	r1, #8
 80048f4:	6810      	ldr	r0, [r2, #0]
 80048f6:	f000 fa69 	bl	8004dcc <_ZNK8touchgfx5Texts7getTextEt>
 80048fa:	4a7e      	ldr	r2, [pc, #504]	; (8004af4 <_ZN19ScreenGraphViewBaseC1Ev+0xa5c>)
 80048fc:	4603      	mov	r3, r0
 80048fe:	210a      	movs	r1, #10
 8004900:	4638      	mov	r0, r7
 8004902:	f00f fb8b 	bl	801401c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textChargingTme.setTypedText(touchgfx::TypedText(T___SINGLEUSE_U9Q3));
 8004906:	f10d 0e50 	add.w	lr, sp, #80	; 0x50
        : typedTextId(id)
 800490a:	4b7b      	ldr	r3, [pc, #492]	; (8004af8 <_ZN19ScreenGraphViewBaseC1Ev+0xa60>)
 800490c:	f8c9 7288 	str.w	r7, [r9, #648]	; 0x288
 8004910:	f04f 0c09 	mov.w	ip, #9
 8004914:	4671      	mov	r1, lr
 8004916:	ee1c 0a90 	vmov	r0, s25
 800491a:	9314      	str	r3, [sp, #80]	; 0x50
 800491c:	f8ad c054 	strh.w	ip, [sp, #84]	; 0x54
 8004920:	f009 fc92 	bl	800e248 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textChargingCurrent.setPosition(160, 168, 153, 15);
 8004924:	f04f 0e0f 	mov.w	lr, #15
 8004928:	f8cd e000 	str.w	lr, [sp]
 800492c:	2399      	movs	r3, #153	; 0x99
 800492e:	21a0      	movs	r1, #160	; 0xa0
 8004930:	ee1a 0a90 	vmov	r0, s21
 8004934:	22a8      	movs	r2, #168	; 0xa8
 8004936:	f7fe f9c2 	bl	8002cbe <_ZN8touchgfx8Drawable11setPositionEssss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800493a:	4970      	ldr	r1, [pc, #448]	; (8004afc <_ZN19ScreenGraphViewBaseC1Ev+0xa64>)
        linespace = space;
 800493c:	f8a9 52c0 	strh.w	r5, [r9, #704]	; 0x2c0
        color = newColor;
 8004940:	f04f 4e7f 	mov.w	lr, #4278190080	; 0xff000000
 8004944:	680b      	ldr	r3, [r1, #0]
 8004946:	f8c9 e2bc 	str.w	lr, [r9, #700]	; 0x2bc
    Unicode::snprintf(textChargingCurrentBuffer, TEXTCHARGINGCURRENT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_G6V4).getText());
 800494a:	f504 57a3 	add.w	r7, r4, #5216	; 0x1460
        boundingArea = calculateBoundingArea();
 800494e:	f04f 3eff 	mov.w	lr, #4294967295
 8004952:	e9c9 e5b3 	strd	lr, r5, [r9, #716]	; 0x2cc
 8004956:	f8c9 52c8 	str.w	r5, [r9, #712]	; 0x2c8
 800495a:	3704      	adds	r7, #4
 800495c:	2b00      	cmp	r3, #0
 800495e:	f43f af37 	beq.w	80047d0 <_ZN19ScreenGraphViewBaseC1Ev+0x738>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004962:	4867      	ldr	r0, [pc, #412]	; (8004b00 <_ZN19ScreenGraphViewBaseC1Ev+0xa68>)
 8004964:	8803      	ldrh	r3, [r0, #0]
 8004966:	2b01      	cmp	r3, #1
 8004968:	f67f af3c 	bls.w	80047e4 <_ZN19ScreenGraphViewBaseC1Ev+0x74c>
        return texts->getText(typedTextId);
 800496c:	4a60      	ldr	r2, [pc, #384]	; (8004af0 <_ZN19ScreenGraphViewBaseC1Ev+0xa58>)
 800496e:	2101      	movs	r1, #1
 8004970:	6810      	ldr	r0, [r2, #0]
 8004972:	f000 fa2b 	bl	8004dcc <_ZNK8touchgfx5Texts7getTextEt>
 8004976:	4a5f      	ldr	r2, [pc, #380]	; (8004af4 <_ZN19ScreenGraphViewBaseC1Ev+0xa5c>)
 8004978:	4603      	mov	r3, r0
 800497a:	2104      	movs	r1, #4
 800497c:	4638      	mov	r0, r7
 800497e:	f00f fb4d 	bl	801401c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textChargingCurrent.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZLXT));
 8004982:	ee1a 0a90 	vmov	r0, s21
 8004986:	f8c9 72d4 	str.w	r7, [r9, #724]	; 0x2d4
        : typedTextId(id)
 800498a:	f04f 0302 	mov.w	r3, #2
 800498e:	4f5a      	ldr	r7, [pc, #360]	; (8004af8 <_ZN19ScreenGraphViewBaseC1Ev+0xa60>)
 8004990:	f8ad 3054 	strh.w	r3, [sp, #84]	; 0x54
 8004994:	a914      	add	r1, sp, #80	; 0x50
 8004996:	9714      	str	r7, [sp, #80]	; 0x50
 8004998:	f009 fc56 	bl	800e248 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    modalWindow1.setBackground(touchgfx::BitmapId(BITMAP_RSZ_MY_MODAL_BACKGROUND_ID), 75, 60);
 800499c:	230a      	movs	r3, #10
 800499e:	224b      	movs	r2, #75	; 0x4b
 80049a0:	f8ad 3050 	strh.w	r3, [sp, #80]	; 0x50
 80049a4:	a914      	add	r1, sp, #80	; 0x50
 80049a6:	233c      	movs	r3, #60	; 0x3c
 80049a8:	4650      	mov	r0, sl
 80049aa:	f005 ff7f 	bl	800a8ac <_ZN8touchgfx11ModalWindow13setBackgroundERKtss>
    modalWindow1.setShadeColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 80049ae:	4650      	mov	r0, sl
 80049b0:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
 80049b4:	f005 ff4e 	bl	800a854 <_ZN8touchgfx11ModalWindow13setShadeColorENS_9colortypeE>
    modalWindow1.setShadeAlpha(150);
 80049b8:	2196      	movs	r1, #150	; 0x96
 80049ba:	4650      	mov	r0, sl
 80049bc:	f005 ff4e 	bl	800a85c <_ZN8touchgfx11ModalWindow13setShadeAlphaEh>
    modalWindow1.hide();
 80049c0:	4650      	mov	r0, sl
 80049c2:	f005 ff3a 	bl	800a83a <_ZN8touchgfx11ModalWindow4hideEv>
    buttonCloseModal.setXY(53, 87);
 80049c6:	ee1d 0a10 	vmov	r0, s26
 80049ca:	2257      	movs	r2, #87	; 0x57
 80049cc:	2135      	movs	r1, #53	; 0x35
 80049ce:	f7fe f937 	bl	8002c40 <_ZN8touchgfx8Drawable5setXYEss>
 80049d2:	f04f 0307 	mov.w	r3, #7
    buttonCloseModal.setBitmaps(touchgfx::Bitmap(BITMAP_RSZ_CLOSE_BUTTON_ID), touchgfx::Bitmap(BITMAP_RSZ_CLOSE_BUTTON_PRESSED_ID));
 80049d6:	aa14      	add	r2, sp, #80	; 0x50
 80049d8:	ee1d 0a10 	vmov	r0, s26
 80049dc:	f8ad 304c 	strh.w	r3, [sp, #76]	; 0x4c
 80049e0:	a913      	add	r1, sp, #76	; 0x4c
 80049e2:	2308      	movs	r3, #8
 80049e4:	f8ad 3050 	strh.w	r3, [sp, #80]	; 0x50
 80049e8:	f009 fc89 	bl	800e2fe <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80049ec:	9b03      	ldr	r3, [sp, #12]
 80049ee:	f8c9 33b0 	str.w	r3, [r9, #944]	; 0x3b0
    modalWindow1.add(buttonCloseModal);
 80049f2:	ee1d 1a10 	vmov	r1, s26
 80049f6:	4650      	mov	r0, sl
 80049f8:	f005 ff29 	bl	800a84e <_ZN8touchgfx11ModalWindow3addERNS_8DrawableE>
    image1.setXY(59, 3);
 80049fc:	2203      	movs	r2, #3
 80049fe:	ee1b 0a10 	vmov	r0, s22
 8004a02:	213b      	movs	r1, #59	; 0x3b
 8004a04:	f7fe f91c 	bl	8002c40 <_ZN8touchgfx8Drawable5setXYEss>
 8004a08:	f04f 0c09 	mov.w	ip, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_RSZ_INFO_ICON_ID));
 8004a0c:	ee1b 0a10 	vmov	r0, s22
 8004a10:	a914      	add	r1, sp, #80	; 0x50
 8004a12:	f8ad c050 	strh.w	ip, [sp, #80]	; 0x50
 8004a16:	f009 fe95 	bl	800e744 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    modalWindow1.add(image1);
 8004a1a:	ee1b 1a10 	vmov	r1, s22
 8004a1e:	4650      	mov	r0, sl
 8004a20:	f005 ff15 	bl	800a84e <_ZN8touchgfx11ModalWindow3addERNS_8DrawableE>
    textChargingCompleted.setXY(7, 60);
 8004a24:	ee18 0a90 	vmov	r0, s17
 8004a28:	223c      	movs	r2, #60	; 0x3c
 8004a2a:	2107      	movs	r1, #7
 8004a2c:	f7fe f908 	bl	8002c40 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004a30:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        boundingArea = calculateBoundingArea();
 8004a34:	ee18 1a90 	vmov	r1, s17
        color = newColor;
 8004a38:	f8c9 3418 	str.w	r3, [r9, #1048]	; 0x418
        linespace = space;
 8004a3c:	f8a9 541c 	strh.w	r5, [r9, #1052]	; 0x41c
        boundingArea = calculateBoundingArea();
 8004a40:	4630      	mov	r0, r6
 8004a42:	f009 f97f 	bl	800dd44 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004a46:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8004a4a:	ee18 3a90 	vmov	r3, s17
 8004a4e:	333c      	adds	r3, #60	; 0x3c
 8004a50:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    textChargingCompleted.setTypedText(touchgfx::TypedText(T___SINGLEUSE_86E1));
 8004a54:	ee18 0a90 	vmov	r0, s17
 8004a58:	a914      	add	r1, sp, #80	; 0x50
 8004a5a:	f8ad 5054 	strh.w	r5, [sp, #84]	; 0x54
 8004a5e:	9714      	str	r7, [sp, #80]	; 0x50
 8004a60:	1d25      	adds	r5, r4, #4
 8004a62:	f009 fbf1 	bl	800e248 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    modalWindow1.add(textChargingCompleted);
 8004a66:	ee18 1a90 	vmov	r1, s17
 8004a6a:	4650      	mov	r0, sl
 8004a6c:	f005 feef 	bl	800a84e <_ZN8touchgfx11ModalWindow3addERNS_8DrawableE>
 8004a70:	ee1b 1a90 	vmov	r1, s23
 8004a74:	4628      	mov	r0, r5
 8004a76:	f005 fff1 	bl	800aa5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004a7a:	ee1c 1a10 	vmov	r1, s24
 8004a7e:	4628      	mov	r0, r5
 8004a80:	f005 ffec 	bl	800aa5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004a84:	ee1d 1a90 	vmov	r1, s27
 8004a88:	4628      	mov	r0, r5
 8004a8a:	f005 ffe7 	bl	800aa5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004a8e:	4659      	mov	r1, fp
 8004a90:	4628      	mov	r0, r5
 8004a92:	f005 ffe3 	bl	800aa5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004a96:	4641      	mov	r1, r8
 8004a98:	4628      	mov	r0, r5
 8004a9a:	f005 ffdf 	bl	800aa5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004a9e:	ee19 1a10 	vmov	r1, s18
 8004aa2:	4628      	mov	r0, r5
 8004aa4:	f005 ffda 	bl	800aa5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004aa8:	ee19 1a90 	vmov	r1, s19
 8004aac:	4628      	mov	r0, r5
 8004aae:	f005 ffd5 	bl	800aa5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004ab2:	ee18 1a10 	vmov	r1, s16
 8004ab6:	4628      	mov	r0, r5
 8004ab8:	f005 ffd0 	bl	800aa5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004abc:	ee1a 1a10 	vmov	r1, s20
 8004ac0:	4628      	mov	r0, r5
 8004ac2:	f005 ffcb 	bl	800aa5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004ac6:	ee1c 1a90 	vmov	r1, s25
 8004aca:	4628      	mov	r0, r5
 8004acc:	f005 ffc6 	bl	800aa5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004ad0:	ee1a 1a90 	vmov	r1, s21
 8004ad4:	4628      	mov	r0, r5
 8004ad6:	f005 ffc1 	bl	800aa5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004ada:	4628      	mov	r0, r5
 8004adc:	4651      	mov	r1, sl
 8004ade:	f005 ffbd 	bl	800aa5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8004ae2:	4620      	mov	r0, r4
 8004ae4:	b017      	add	sp, #92	; 0x5c
 8004ae6:	ecbd 8b10 	vpop	{d8-d15}
 8004aea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004aee:	bf00      	nop
 8004af0:	20015618 	.word	0x20015618
 8004af4:	080228fa 	.word	0x080228fa
 8004af8:	0802220c 	.word	0x0802220c
 8004afc:	2001560c 	.word	0x2001560c
 8004b00:	20015610 	.word	0x20015610

08004b04 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 40, 10, 2, 4, 1, 0, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8004b04:	4770      	bx	lr
	...

08004b08 <_Z23getFont_verdana_10_4bppv>:
{
 8004b08:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 40, 10, 2, 4, 1, 0, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8004b0a:	4d16      	ldr	r5, [pc, #88]	; (8004b64 <_Z23getFont_verdana_10_4bppv+0x5c>)
 8004b0c:	782c      	ldrb	r4, [r5, #0]
 8004b0e:	f3bf 8f5b 	dmb	ish
 8004b12:	f014 0401 	ands.w	r4, r4, #1
{
 8004b16:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 40, 10, 2, 4, 1, 0, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8004b18:	d120      	bne.n	8004b5c <_Z23getFont_verdana_10_4bppv+0x54>
 8004b1a:	4628      	mov	r0, r5
 8004b1c:	f01b fdde 	bl	80206dc <__cxa_guard_acquire>
 8004b20:	b1e0      	cbz	r0, 8004b5c <_Z23getFont_verdana_10_4bppv+0x54>
 8004b22:	233f      	movs	r3, #63	; 0x3f
 8004b24:	9307      	str	r3, [sp, #28]
 8004b26:	4b10      	ldr	r3, [pc, #64]	; (8004b68 <_Z23getFont_verdana_10_4bppv+0x60>)
 8004b28:	9306      	str	r3, [sp, #24]
 8004b2a:	4b10      	ldr	r3, [pc, #64]	; (8004b6c <_Z23getFont_verdana_10_4bppv+0x64>)
 8004b2c:	9305      	str	r3, [sp, #20]
 8004b2e:	2301      	movs	r3, #1
 8004b30:	e9cd 4303 	strd	r4, r3, [sp, #12]
 8004b34:	9302      	str	r3, [sp, #8]
 8004b36:	2204      	movs	r2, #4
 8004b38:	2302      	movs	r3, #2
 8004b3a:	e9cd 3200 	strd	r3, r2, [sp]
 8004b3e:	490c      	ldr	r1, [pc, #48]	; (8004b70 <_Z23getFont_verdana_10_4bppv+0x68>)
 8004b40:	480c      	ldr	r0, [pc, #48]	; (8004b74 <_Z23getFont_verdana_10_4bppv+0x6c>)
 8004b42:	9408      	str	r4, [sp, #32]
 8004b44:	230a      	movs	r3, #10
 8004b46:	2228      	movs	r2, #40	; 0x28
 8004b48:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 8004b4c:	f7fd fecc 	bl	80028e8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8004b50:	4809      	ldr	r0, [pc, #36]	; (8004b78 <_Z23getFont_verdana_10_4bppv+0x70>)
 8004b52:	f01b fe93 	bl	802087c <atexit>
 8004b56:	4628      	mov	r0, r5
 8004b58:	f01b fdcc 	bl	80206f4 <__cxa_guard_release>
    return verdana_10_4bpp;
}
 8004b5c:	4805      	ldr	r0, [pc, #20]	; (8004b74 <_Z23getFont_verdana_10_4bppv+0x6c>)
 8004b5e:	b00d      	add	sp, #52	; 0x34
 8004b60:	bd30      	pop	{r4, r5, pc}
 8004b62:	bf00      	nop
 8004b64:	200046f4 	.word	0x200046f4
 8004b68:	08025d94 	.word	0x08025d94
 8004b6c:	08025e1c 	.word	0x08025e1c
 8004b70:	080258d0 	.word	0x080258d0
 8004b74:	200046f8 	.word	0x200046f8
 8004b78:	08004b05 	.word	0x08004b05

08004b7c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_15_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_15_4bpp();

touchgfx::GeneratedFont& getFont_verdana_15_4bpp()
{
    static touchgfx::GeneratedFont verdana_15_4bpp(glyphs_verdana_15_4bpp, 42, 15, 3, 4, 1, 0, 1, unicodes_verdana_15_4bpp, kerning_verdana_15_4bpp, 63, 0, 0, 0);
 8004b7c:	4770      	bx	lr
	...

08004b80 <_Z23getFont_verdana_15_4bppv>:
{
 8004b80:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_15_4bpp(glyphs_verdana_15_4bpp, 42, 15, 3, 4, 1, 0, 1, unicodes_verdana_15_4bpp, kerning_verdana_15_4bpp, 63, 0, 0, 0);
 8004b82:	4d16      	ldr	r5, [pc, #88]	; (8004bdc <_Z23getFont_verdana_15_4bppv+0x5c>)
 8004b84:	782c      	ldrb	r4, [r5, #0]
 8004b86:	f3bf 8f5b 	dmb	ish
 8004b8a:	f014 0401 	ands.w	r4, r4, #1
{
 8004b8e:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_15_4bpp(glyphs_verdana_15_4bpp, 42, 15, 3, 4, 1, 0, 1, unicodes_verdana_15_4bpp, kerning_verdana_15_4bpp, 63, 0, 0, 0);
 8004b90:	d120      	bne.n	8004bd4 <_Z23getFont_verdana_15_4bppv+0x54>
 8004b92:	4628      	mov	r0, r5
 8004b94:	f01b fda2 	bl	80206dc <__cxa_guard_acquire>
 8004b98:	b1e0      	cbz	r0, 8004bd4 <_Z23getFont_verdana_15_4bppv+0x54>
 8004b9a:	233f      	movs	r3, #63	; 0x3f
 8004b9c:	9307      	str	r3, [sp, #28]
 8004b9e:	4b10      	ldr	r3, [pc, #64]	; (8004be0 <_Z23getFont_verdana_15_4bppv+0x60>)
 8004ba0:	9306      	str	r3, [sp, #24]
 8004ba2:	4b10      	ldr	r3, [pc, #64]	; (8004be4 <_Z23getFont_verdana_15_4bppv+0x64>)
 8004ba4:	9305      	str	r3, [sp, #20]
 8004ba6:	2301      	movs	r3, #1
 8004ba8:	e9cd 4303 	strd	r4, r3, [sp, #12]
 8004bac:	9302      	str	r3, [sp, #8]
 8004bae:	2204      	movs	r2, #4
 8004bb0:	2303      	movs	r3, #3
 8004bb2:	e9cd 3200 	strd	r3, r2, [sp]
 8004bb6:	490c      	ldr	r1, [pc, #48]	; (8004be8 <_Z23getFont_verdana_15_4bppv+0x68>)
 8004bb8:	480c      	ldr	r0, [pc, #48]	; (8004bec <_Z23getFont_verdana_15_4bppv+0x6c>)
 8004bba:	9408      	str	r4, [sp, #32]
 8004bbc:	230f      	movs	r3, #15
 8004bbe:	222a      	movs	r2, #42	; 0x2a
 8004bc0:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 8004bc4:	f7fd fe90 	bl	80028e8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8004bc8:	4809      	ldr	r0, [pc, #36]	; (8004bf0 <_Z23getFont_verdana_15_4bppv+0x70>)
 8004bca:	f01b fe57 	bl	802087c <atexit>
 8004bce:	4628      	mov	r0, r5
 8004bd0:	f01b fd90 	bl	80206f4 <__cxa_guard_release>
    return verdana_15_4bpp;
}
 8004bd4:	4805      	ldr	r0, [pc, #20]	; (8004bec <_Z23getFont_verdana_15_4bppv+0x6c>)
 8004bd6:	b00d      	add	sp, #52	; 0x34
 8004bd8:	bd30      	pop	{r4, r5, pc}
 8004bda:	bf00      	nop
 8004bdc:	20004720 	.word	0x20004720
 8004be0:	08025db0 	.word	0x08025db0
 8004be4:	08025e20 	.word	0x08025e20
 8004be8:	08025b00 	.word	0x08025b00
 8004bec:	20004724 	.word	0x20004724
 8004bf0:	08004b7d 	.word	0x08004b7d

08004bf4 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 5, 40, 1, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8004bf4:	4770      	bx	lr
	...

08004bf8 <_Z23getFont_verdana_40_4bppv>:
{
 8004bf8:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 5, 40, 1, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8004bfa:	4d15      	ldr	r5, [pc, #84]	; (8004c50 <_Z23getFont_verdana_40_4bppv+0x58>)
 8004bfc:	782c      	ldrb	r4, [r5, #0]
 8004bfe:	f3bf 8f5b 	dmb	ish
 8004c02:	f014 0401 	ands.w	r4, r4, #1
{
 8004c06:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 5, 40, 1, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8004c08:	d11f      	bne.n	8004c4a <_Z23getFont_verdana_40_4bppv+0x52>
 8004c0a:	4628      	mov	r0, r5
 8004c0c:	f01b fd66 	bl	80206dc <__cxa_guard_acquire>
 8004c10:	b1d8      	cbz	r0, 8004c4a <_Z23getFont_verdana_40_4bppv+0x52>
 8004c12:	233f      	movs	r3, #63	; 0x3f
 8004c14:	9307      	str	r3, [sp, #28]
 8004c16:	4b0f      	ldr	r3, [pc, #60]	; (8004c54 <_Z23getFont_verdana_40_4bppv+0x5c>)
 8004c18:	9306      	str	r3, [sp, #24]
 8004c1a:	4b0f      	ldr	r3, [pc, #60]	; (8004c58 <_Z23getFont_verdana_40_4bppv+0x60>)
 8004c1c:	490f      	ldr	r1, [pc, #60]	; (8004c5c <_Z23getFont_verdana_40_4bppv+0x64>)
 8004c1e:	4810      	ldr	r0, [pc, #64]	; (8004c60 <_Z23getFont_verdana_40_4bppv+0x68>)
 8004c20:	9408      	str	r4, [sp, #32]
 8004c22:	e9cd 4304 	strd	r4, r3, [sp, #16]
 8004c26:	2204      	movs	r2, #4
 8004c28:	2301      	movs	r3, #1
 8004c2a:	e9cd 2301 	strd	r2, r3, [sp, #4]
 8004c2e:	9300      	str	r3, [sp, #0]
 8004c30:	2205      	movs	r2, #5
 8004c32:	2328      	movs	r3, #40	; 0x28
 8004c34:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 8004c38:	9403      	str	r4, [sp, #12]
 8004c3a:	f7fd fe55 	bl	80028e8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8004c3e:	4809      	ldr	r0, [pc, #36]	; (8004c64 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8004c40:	f01b fe1c 	bl	802087c <atexit>
 8004c44:	4628      	mov	r0, r5
 8004c46:	f01b fd55 	bl	80206f4 <__cxa_guard_release>
    return verdana_40_4bpp;
}
 8004c4a:	4805      	ldr	r0, [pc, #20]	; (8004c60 <_Z23getFont_verdana_40_4bppv+0x68>)
 8004c4c:	b00d      	add	sp, #52	; 0x34
 8004c4e:	bd30      	pop	{r4, r5, pc}
 8004c50:	2000474c 	.word	0x2000474c
 8004c54:	08025e08 	.word	0x08025e08
 8004c58:	08025e24 	.word	0x08025e24
 8004c5c:	08025d4c 	.word	0x08025d4c
 8004c60:	20004750 	.word	0x20004750
 8004c64:	08004bf5 	.word	0x08004bf5

08004c68 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 8004c68:	2000      	movs	r0, #0
 8004c6a:	4770      	bx	lr

08004c6c <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 8004c6c:	2000      	movs	r0, #0
 8004c6e:	4770      	bx	lr

08004c70 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8004c70:	b40e      	push	{r1, r2, r3}
 8004c72:	b503      	push	{r0, r1, lr}
 8004c74:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8004c76:	2100      	movs	r1, #0
{
 8004c78:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 8004c7c:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8004c7e:	f00d f885 	bl	8011d8c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8004c82:	b002      	add	sp, #8
 8004c84:	f85d eb04 	ldr.w	lr, [sp], #4
 8004c88:	b003      	add	sp, #12
 8004c8a:	4770      	bx	lr

08004c8c <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8004c8c:	b40c      	push	{r2, r3}
 8004c8e:	b507      	push	{r0, r1, r2, lr}
 8004c90:	ab04      	add	r3, sp, #16
 8004c92:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 8004c96:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8004c98:	f00d f878 	bl	8011d8c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8004c9c:	b003      	add	sp, #12
 8004c9e:	f85d eb04 	ldr.w	lr, [sp], #4
 8004ca2:	b002      	add	sp, #8
 8004ca4:	4770      	bx	lr
	...

08004ca8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8004ca8:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 8004caa:	b510      	push	{r4, lr}
 8004cac:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 8004cae:	b373      	cbz	r3, 8004d0e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        {
            return used == size;
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8004cb0:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 8004cb2:	b92b      	cbnz	r3, 8004cc0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8004cb4:	4b18      	ldr	r3, [pc, #96]	; (8004d18 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 8004cb6:	4a19      	ldr	r2, [pc, #100]	; (8004d1c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 8004cb8:	21c0      	movs	r1, #192	; 0xc0
            return buffer[pos];
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 8004cba:	4819      	ldr	r0, [pc, #100]	; (8004d20 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8004cbc:	f01b fdc0 	bl	8020840 <__assert_func>
            return buffer[pos];
 8004cc0:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8004cc2:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8004cc6:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 8004cc8:	b30b      	cbz	r3, 8004d0e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 8004cca:	f00e fbf8 	bl	80134be <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 8004cce:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8004cd0:	2b01      	cmp	r3, #1
 8004cd2:	d803      	bhi.n	8004cdc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8004cd4:	4b13      	ldr	r3, [pc, #76]	; (8004d24 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 8004cd6:	4a14      	ldr	r2, [pc, #80]	; (8004d28 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8004cd8:	21c5      	movs	r1, #197	; 0xc5
 8004cda:	e7ee      	b.n	8004cba <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 8004cdc:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8004cde:	1c53      	adds	r3, r2, #1
 8004ce0:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 8004ce2:	2b09      	cmp	r3, #9
 8004ce4:	4619      	mov	r1, r3
 8004ce6:	bf88      	it	hi
 8004ce8:	f1a3 010a 	subhi.w	r1, r3, #10
 8004cec:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 8004cf0:	f640 103f 	movw	r0, #2367	; 0x93f
 8004cf4:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 8004cf6:	4281      	cmp	r1, r0
 8004cf8:	d109      	bne.n	8004d0e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 8004cfa:	2b0a      	cmp	r3, #10
 8004cfc:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8004d00:	bf28      	it	cs
 8004d02:	2300      	movcs	r3, #0
        }
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8004d04:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 8004d08:	8c50      	ldrh	r0, [r2, #34]	; 0x22
            buffer[index < size ? index : 0] = newChar;
 8004d0a:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 8004d0c:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 8004d0e:	4620      	mov	r0, r4
}
 8004d10:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8004d14:	f00e bad6 	b.w	80132c4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8004d18:	080232dc 	.word	0x080232dc
 8004d1c:	080232e5 	.word	0x080232e5
 8004d20:	08023390 	.word	0x08023390
 8004d24:	080233da 	.word	0x080233da
 8004d28:	080233e8 	.word	0x080233e8

08004d2c <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 8004d2c:	f00e ba91 	b.w	8013252 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08004d30 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8004d30:	b510      	push	{r4, lr}
 8004d32:	b086      	sub	sp, #24
 8004d34:	ac02      	add	r4, sp, #8
 8004d36:	e884 0006 	stmia.w	r4, {r1, r2}
 8004d3a:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 8004d3c:	ab0a      	add	r3, sp, #40	; 0x28
 8004d3e:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8004d40:	9301      	str	r3, [sp, #4]
 8004d42:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004d44:	9300      	str	r3, [sp, #0]
 8004d46:	4621      	mov	r1, r4
 8004d48:	9b08      	ldr	r3, [sp, #32]
 8004d4a:	f00b fd24 	bl	8010796 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 8004d4e:	b006      	add	sp, #24
 8004d50:	bd10      	pop	{r4, pc}
	...

08004d54 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8004d54:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8004d56:	bb18      	cbnz	r0, 8004da0 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8004d58:	4b12      	ldr	r3, [pc, #72]	; (8004da4 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 8004d5a:	4813      	ldr	r0, [pc, #76]	; (8004da8 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8004d5c:	681b      	ldr	r3, [r3, #0]
 8004d5e:	4913      	ldr	r1, [pc, #76]	; (8004dac <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8004d60:	b1b3      	cbz	r3, 8004d90 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8004d62:	681a      	ldr	r2, [r3, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8004d64:	689c      	ldr	r4, [r3, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8004d66:	441a      	add	r2, r3
 8004d68:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8004d6a:	685a      	ldr	r2, [r3, #4]
 8004d6c:	441a      	add	r2, r3
 8004d6e:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8004d70:	441c      	add	r4, r3
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 8004d72:	4b0f      	ldr	r3, [pc, #60]	; (8004db0 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8004d74:	2200      	movs	r2, #0
 8004d76:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8004d78:	f000 f838 	bl	8004dec <_ZN17TypedTextDatabase8getFontsEv>
 8004d7c:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8004d7e:	f000 f833 	bl	8004de8 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 8004d82:	4b0c      	ldr	r3, [pc, #48]	; (8004db4 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8004d84:	601c      	str	r4, [r3, #0]
        fonts = f;
 8004d86:	4b0c      	ldr	r3, [pc, #48]	; (8004db8 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8004d88:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 8004d8a:	4b0c      	ldr	r3, [pc, #48]	; (8004dbc <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8004d8c:	8018      	strh	r0, [r3, #0]
    }
}
 8004d8e:	e007      	b.n	8004da0 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 8004d90:	4b0b      	ldr	r3, [pc, #44]	; (8004dc0 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 8004d92:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8004d94:	4b0b      	ldr	r3, [pc, #44]	; (8004dc4 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 8004d96:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8004d98:	4b0b      	ldr	r3, [pc, #44]	; (8004dc8 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 8004d9a:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8004d9c:	2c00      	cmp	r4, #0
 8004d9e:	d1e8      	bne.n	8004d72 <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8004da0:	bd38      	pop	{r3, r4, r5, pc}
 8004da2:	bf00      	nop
 8004da4:	20004778 	.word	0x20004778
 8004da8:	2000477c 	.word	0x2000477c
 8004dac:	20004780 	.word	0x20004780
 8004db0:	20004784 	.word	0x20004784
 8004db4:	2001560c 	.word	0x2001560c
 8004db8:	20015614 	.word	0x20015614
 8004dbc:	20015610 	.word	0x20015610
 8004dc0:	08025e7c 	.word	0x08025e7c
 8004dc4:	08025e28 	.word	0x08025e28
 8004dc8:	08026048 	.word	0x08026048

08004dcc <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8004dcc:	4b04      	ldr	r3, [pc, #16]	; (8004de0 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 8004dce:	681b      	ldr	r3, [r3, #0]
 8004dd0:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8004dd4:	4b03      	ldr	r3, [pc, #12]	; (8004de4 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 8004dd6:	681b      	ldr	r3, [r3, #0]
}
 8004dd8:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8004ddc:	4770      	bx	lr
 8004dde:	bf00      	nop
 8004de0:	20004780 	.word	0x20004780
 8004de4:	2000477c 	.word	0x2000477c

08004de8 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 8004de8:	2015      	movs	r0, #21
 8004dea:	4770      	bx	lr

08004dec <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8004dec:	4800      	ldr	r0, [pc, #0]	; (8004df0 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 8004dee:	4770      	bx	lr
 8004df0:	20004788 	.word	0x20004788

08004df4 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8004df4:	b510      	push	{r4, lr}
    &(getFont_verdana_15_4bpp()),
 8004df6:	f7ff fec3 	bl	8004b80 <_Z23getFont_verdana_15_4bppv>
};
 8004dfa:	4c04      	ldr	r4, [pc, #16]	; (8004e0c <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
 8004dfc:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 8004dfe:	f7ff fefb 	bl	8004bf8 <_Z23getFont_verdana_40_4bppv>
};
 8004e02:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp())
 8004e04:	f7ff fe80 	bl	8004b08 <_Z23getFont_verdana_10_4bppv>
};
 8004e08:	60a0      	str	r0, [r4, #8]
} // namespace TypedTextDatabase
 8004e0a:	bd10      	pop	{r4, pc}
 8004e0c:	20004788 	.word	0x20004788

08004e10 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8004e10:	4770      	bx	lr

08004e12 <_ZN19FrontendApplicationD0Ev>:
 8004e12:	b510      	push	{r4, lr}
 8004e14:	f44f 71ac 	mov.w	r1, #344	; 0x158
 8004e18:	4604      	mov	r4, r0
 8004e1a:	f01b fc5d 	bl	80206d8 <_ZdlPvj>
 8004e1e:	4620      	mov	r0, r4
 8004e20:	bd10      	pop	{r4, pc}

08004e22 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8004e22:	b510      	push	{r4, lr}
 8004e24:	4604      	mov	r4, r0
    {
        model.tick();
 8004e26:	f8d0 0154 	ldr.w	r0, [r0, #340]	; 0x154
 8004e2a:	f000 f813 	bl	8004e54 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 8004e2e:	4620      	mov	r0, r4
    }
 8004e30:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 8004e34:	f00c b828 	b.w	8010e88 <_ZN8touchgfx11Application15handleTickEventEv>

08004e38 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8004e38:	b510      	push	{r4, lr}
 8004e3a:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 8004e3c:	f7fd fcd6 	bl	80027ec <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8004e40:	4b01      	ldr	r3, [pc, #4]	; (8004e48 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 8004e42:	6023      	str	r3, [r4, #0]
{

}
 8004e44:	4620      	mov	r0, r4
 8004e46:	bd10      	pop	{r4, pc}
 8004e48:	080234c4 	.word	0x080234c4

08004e4c <_ZN5ModelC1Ev>:
extern LadowarkaStruct ladowarka;
#endif
int PradLadowania=400; //Set default charging curretn to 400mA
int licznik;
int ChargingTime=10; //Set default charging time to 10hrs
Model::Model() : modelListener(0)
 8004e4c:	2200      	movs	r2, #0
 8004e4e:	6002      	str	r2, [r0, #0]
{

}
 8004e50:	4770      	bx	lr
	...

08004e54 <_ZN5Model4tickEv>:

void Model::tick()
{
 8004e54:	b570      	push	{r4, r5, r6, lr}
 8004e56:	4604      	mov	r4, r0
//	if (licznik>1000 )licznik =0;
//
//	if (licznik%100) modelListener->UpdateBatteryVoltage();

/************* UPDATE BATT VOLTAGE ON GRAPH *********************/
modelListener->UpdateBatteryVoltage();
 8004e58:	6800      	ldr	r0, [r0, #0]

#ifndef SIMULATOR

if(ladowarka.narysujPunktNaWykresie){
 8004e5a:	4d21      	ldr	r5, [pc, #132]	; (8004ee0 <_ZN5Model4tickEv+0x8c>)
modelListener->UpdateBatteryVoltage();
 8004e5c:	6803      	ldr	r3, [r0, #0]
 8004e5e:	689b      	ldr	r3, [r3, #8]
 8004e60:	4798      	blx	r3
if(ladowarka.narysujPunktNaWykresie){
 8004e62:	f8d5 3a70 	ldr.w	r3, [r5, #2672]	; 0xa70
 8004e66:	b173      	cbz	r3, 8004e86 <_ZN5Model4tickEv+0x32>
	if (ladowarka.CzsasLadowaniaWSec==1)	modelListener->DrawPoint(); //dodanie jednego extra punktu bo zaczynamy od 0
 8004e68:	f8d5 3a78 	ldr.w	r3, [r5, #2680]	; 0xa78
 8004e6c:	2b01      	cmp	r3, #1
 8004e6e:	d103      	bne.n	8004e78 <_ZN5Model4tickEv+0x24>
 8004e70:	6820      	ldr	r0, [r4, #0]
 8004e72:	6803      	ldr	r3, [r0, #0]
 8004e74:	68db      	ldr	r3, [r3, #12]
 8004e76:	4798      	blx	r3
	modelListener->DrawPoint();
 8004e78:	6820      	ldr	r0, [r4, #0]
 8004e7a:	6803      	ldr	r3, [r0, #0]
 8004e7c:	68db      	ldr	r3, [r3, #12]
 8004e7e:	4798      	blx	r3
	ladowarka.narysujPunktNaWykresie=0;
 8004e80:	2300      	movs	r3, #0
 8004e82:	f8c5 3a70 	str.w	r3, [r5, #2672]	; 0xa70
}

if (ladowarka.narysujPunktNaWykresieMin){
 8004e86:	f8d5 3a74 	ldr.w	r3, [r5, #2676]	; 0xa74
 8004e8a:	b133      	cbz	r3, 8004e9a <_ZN5Model4tickEv+0x46>
	modelListener->DrawPointMin();
 8004e8c:	6820      	ldr	r0, [r4, #0]
 8004e8e:	6803      	ldr	r3, [r0, #0]
 8004e90:	691b      	ldr	r3, [r3, #16]
 8004e92:	4798      	blx	r3
	ladowarka.narysujPunktNaWykresieMin=0;
 8004e94:	2300      	movs	r3, #0
 8004e96:	f8c5 3a74 	str.w	r3, [r5, #2676]	; 0xa74

}


if((ladowarka.CzsasLadowaniaWSec>=ladowarka.ChargingTime*60*60) && (ladowarka.ChargingCompleted==0) && ladowarka.ChargeStarted==1){  //*60*60//jesli czas ladowania jest wiekszy niz ustawiony pokaz modala
 8004e9a:	f8d5 2a78 	ldr.w	r2, [r5, #2680]	; 0xa78
 8004e9e:	68eb      	ldr	r3, [r5, #12]
 8004ea0:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8004ea4:	434b      	muls	r3, r1
 8004ea6:	429a      	cmp	r2, r3
 8004ea8:	db0b      	blt.n	8004ec2 <_ZN5Model4tickEv+0x6e>
 8004eaa:	f8d5 3a80 	ldr.w	r3, [r5, #2688]	; 0xa80
 8004eae:	b943      	cbnz	r3, 8004ec2 <_ZN5Model4tickEv+0x6e>
 8004eb0:	692e      	ldr	r6, [r5, #16]
 8004eb2:	2e01      	cmp	r6, #1
 8004eb4:	d105      	bne.n	8004ec2 <_ZN5Model4tickEv+0x6e>
	modelListener->DisplayChargingFinished();
 8004eb6:	6820      	ldr	r0, [r4, #0]
 8004eb8:	6803      	ldr	r3, [r0, #0]
 8004eba:	6a1b      	ldr	r3, [r3, #32]
 8004ebc:	4798      	blx	r3
	ladowarka.ChargingCompleted=1;
 8004ebe:	f8c5 6a80 	str.w	r6, [r5, #2688]	; 0xa80
}
#endif

/*************** Update min/max value **************************/
modelListener->DisplayLastAndMaxVlt();
 8004ec2:	6820      	ldr	r0, [r4, #0]
 8004ec4:	6803      	ldr	r3, [r0, #0]
 8004ec6:	695b      	ldr	r3, [r3, #20]
 8004ec8:	4798      	blx	r3
/*************** Update Runningn Time value **************************/
modelListener->DisplayRunningTime();
 8004eca:	6820      	ldr	r0, [r4, #0]
 8004ecc:	6803      	ldr	r3, [r0, #0]
 8004ece:	699b      	ldr	r3, [r3, #24]
 8004ed0:	4798      	blx	r3
/*************** Update Charging current value **************************/
modelListener->DisplayCurrentValue();
 8004ed2:	6820      	ldr	r0, [r4, #0]
 8004ed4:	6803      	ldr	r3, [r0, #0]
}
 8004ed6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
modelListener->DisplayCurrentValue();
 8004eda:	69db      	ldr	r3, [r3, #28]
 8004edc:	4718      	bx	r3
 8004ede:	bf00      	nop
 8004ee0:	20003c14 	.word	0x20003c14

08004ee4 <_ZN13ModelListener9DrawPointEv>:
    virtual void DrawPoint () {};
 8004ee4:	4770      	bx	lr

08004ee6 <_ZN13ModelListener12DrawPointMinEv>:
    virtual void DrawPointMin () {};
 8004ee6:	4770      	bx	lr

08004ee8 <_ZN13ModelListener20DisplayLastAndMaxVltEv>:
    virtual void DisplayLastAndMaxVlt() {} ;
 8004ee8:	4770      	bx	lr

08004eea <_ZN13ModelListener18DisplayRunningTimeEv>:
    virtual void DisplayRunningTime() {} ;
 8004eea:	4770      	bx	lr

08004eec <_ZN13ModelListener19DisplayCurrentValueEv>:
    virtual void DisplayCurrentValue() {};
 8004eec:	4770      	bx	lr

08004eee <_ZN13ModelListener23DisplayChargingFinishedEv>:
    virtual void DisplayChargingFinished() {};
 8004eee:	4770      	bx	lr

08004ef0 <_ZN16Screen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen1Presenter() {};
 8004ef0:	4770      	bx	lr

08004ef2 <_ZThn4_N16Screen1PresenterD1Ev>:
 8004ef2:	3804      	subs	r0, #4
 8004ef4:	4770      	bx	lr

08004ef6 <_ZN16Screen1Presenter10deactivateEv>:
}

void Screen1Presenter::activate()
{

}
 8004ef6:	4770      	bx	lr

08004ef8 <_ZN16Screen1Presenter20UpdateBatteryVoltageEv>:
{

}

void Screen1Presenter:: UpdateBatteryVoltage(){
view.DisplayBatteryVoltage();
 8004ef8:	68c0      	ldr	r0, [r0, #12]
 8004efa:	6803      	ldr	r3, [r0, #0]
 8004efc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004efe:	4718      	bx	r3

08004f00 <_ZThn4_N16Screen1Presenter20UpdateBatteryVoltageEv>:
    virtual void UpdateBatteryVoltage();
 8004f00:	f1a0 0004 	sub.w	r0, r0, #4
 8004f04:	f7ff bff8 	b.w	8004ef8 <_ZN16Screen1Presenter20UpdateBatteryVoltageEv>

08004f08 <_ZN16Screen1PresenterD0Ev>:
    virtual ~Screen1Presenter() {};
 8004f08:	b510      	push	{r4, lr}
 8004f0a:	2110      	movs	r1, #16
 8004f0c:	4604      	mov	r4, r0
 8004f0e:	f01b fbe3 	bl	80206d8 <_ZdlPvj>
 8004f12:	4620      	mov	r0, r4
 8004f14:	bd10      	pop	{r4, pc}

08004f16 <_ZThn4_N16Screen1PresenterD0Ev>:
 8004f16:	f1a0 0004 	sub.w	r0, r0, #4
 8004f1a:	e7f5      	b.n	8004f08 <_ZN16Screen1PresenterD0Ev>

08004f1c <_ZN16Screen1PresenterC1ER11Screen1View>:
Screen1Presenter::Screen1Presenter(Screen1View& v)
 8004f1c:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 8004f1e:	2200      	movs	r2, #0
 8004f20:	6082      	str	r2, [r0, #8]
    : view(v)
 8004f22:	4a04      	ldr	r2, [pc, #16]	; (8004f34 <_ZN16Screen1PresenterC1ER11Screen1View+0x18>)
 8004f24:	60c1      	str	r1, [r0, #12]
 8004f26:	f102 0408 	add.w	r4, r2, #8
 8004f2a:	3224      	adds	r2, #36	; 0x24
 8004f2c:	6004      	str	r4, [r0, #0]
 8004f2e:	6042      	str	r2, [r0, #4]
}
 8004f30:	bd10      	pop	{r4, pc}
 8004f32:	bf00      	nop
 8004f34:	08023508 	.word	0x08023508

08004f38 <_ZN11Screen1ViewD1Ev>:
#include <gui/screen1_screen/Screen1Presenter.hpp>
class Screen1View : public Screen1ViewBase
{
public:
    Screen1View();
    virtual ~Screen1View() {}
 8004f38:	4770      	bx	lr

08004f3a <_ZN11Screen1View14tearDownScreenEv>:
}

void Screen1View::tearDownScreen()
{
    Screen1ViewBase::tearDownScreen();
}
 8004f3a:	4770      	bx	lr

08004f3c <_ZN11Screen1View18ButtonStartClickedEv>:
}

void Screen1View::ButtonStartClicked()
{
#ifndef SIMULATOR
 ladowarka.LoadingCurrent=PradLadowania;
 8004f3c:	4b04      	ldr	r3, [pc, #16]	; (8004f50 <_ZN11Screen1View18ButtonStartClickedEv+0x14>)
 8004f3e:	681a      	ldr	r2, [r3, #0]
 8004f40:	4b04      	ldr	r3, [pc, #16]	; (8004f54 <_ZN11Screen1View18ButtonStartClickedEv+0x18>)
 8004f42:	609a      	str	r2, [r3, #8]
 ladowarka.ChargeStarted=1;
 8004f44:	2201      	movs	r2, #1
 8004f46:	611a      	str	r2, [r3, #16]
 ladowarka.ChargingTime=ChargingTime;
 8004f48:	4a03      	ldr	r2, [pc, #12]	; (8004f58 <_ZN11Screen1View18ButtonStartClickedEv+0x1c>)
 8004f4a:	6812      	ldr	r2, [r2, #0]
 8004f4c:	60da      	str	r2, [r3, #12]
#endif
}
 8004f4e:	4770      	bx	lr
 8004f50:	20000018 	.word	0x20000018
 8004f54:	20003c14 	.word	0x20003c14
 8004f58:	20000014 	.word	0x20000014

08004f5c <_ZN11Screen1View15ButtonUpClickedEv>:
	PradLadowania=PradLadowania+100;
 8004f5c:	4b0b      	ldr	r3, [pc, #44]	; (8004f8c <_ZN11Screen1View15ButtonUpClickedEv+0x30>)
 8004f5e:	681a      	ldr	r2, [r3, #0]
{
 8004f60:	b510      	push	{r4, lr}
	PradLadowania=PradLadowania+100;
 8004f62:	3264      	adds	r2, #100	; 0x64
	if (PradLadowania >400){
 8004f64:	f5b2 7fc8 	cmp.w	r2, #400	; 0x190
	PradLadowania=400;}
 8004f68:	bfc8      	it	gt
 8004f6a:	f44f 72c8 	movgt.w	r2, #400	; 0x190
 8004f6e:	601a      	str	r2, [r3, #0]
{
 8004f70:	4604      	mov	r4, r0
	Unicode::snprintf(txtPradLadowaniaBuffer,TXTPRADLADOWANIA_SIZE,"%d",PradLadowania);
 8004f72:	681b      	ldr	r3, [r3, #0]
 8004f74:	4a06      	ldr	r2, [pc, #24]	; (8004f90 <_ZN11Screen1View15ButtonUpClickedEv+0x34>)
 8004f76:	210a      	movs	r1, #10
 8004f78:	f500 60b8 	add.w	r0, r0, #1472	; 0x5c0
 8004f7c:	f00f f84e 	bl	801401c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	txtPradLadowania.invalidate();
 8004f80:	f504 7017 	add.w	r0, r4, #604	; 0x25c
}
 8004f84:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	txtPradLadowania.invalidate();
 8004f88:	f00d b821 	b.w	8011fce <_ZNK8touchgfx8Drawable10invalidateEv>
 8004f8c:	20000018 	.word	0x20000018
 8004f90:	08023550 	.word	0x08023550

08004f94 <_ZN11Screen1View17ButtonDownClickedEv>:
	PradLadowania=PradLadowania-100;
 8004f94:	4b0a      	ldr	r3, [pc, #40]	; (8004fc0 <_ZN11Screen1View17ButtonDownClickedEv+0x2c>)
 8004f96:	681a      	ldr	r2, [r3, #0]
{
 8004f98:	b510      	push	{r4, lr}
	PradLadowania=PradLadowania-100;
 8004f9a:	3a64      	subs	r2, #100	; 0x64
    if (PradLadowania <100){
 8004f9c:	2a63      	cmp	r2, #99	; 0x63
	PradLadowania=100;}
 8004f9e:	bfd8      	it	le
 8004fa0:	2264      	movle	r2, #100	; 0x64
 8004fa2:	601a      	str	r2, [r3, #0]
{
 8004fa4:	4604      	mov	r4, r0
	Unicode::snprintf(txtPradLadowaniaBuffer,TXTPRADLADOWANIA_SIZE,"%d",PradLadowania);
 8004fa6:	681b      	ldr	r3, [r3, #0]
 8004fa8:	4a06      	ldr	r2, [pc, #24]	; (8004fc4 <_ZN11Screen1View17ButtonDownClickedEv+0x30>)
 8004faa:	210a      	movs	r1, #10
 8004fac:	f500 60b8 	add.w	r0, r0, #1472	; 0x5c0
 8004fb0:	f00f f834 	bl	801401c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	txtPradLadowania.invalidate();
 8004fb4:	f504 7017 	add.w	r0, r4, #604	; 0x25c
}
 8004fb8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	txtPradLadowania.invalidate();
 8004fbc:	f00d b807 	b.w	8011fce <_ZNK8touchgfx8Drawable10invalidateEv>
 8004fc0:	20000018 	.word	0x20000018
 8004fc4:	08023550 	.word	0x08023550

08004fc8 <_ZN11Screen1View19ButtonUpTimeClickedEv>:
	ChargingTime=ChargingTime+1;
 8004fc8:	4b0a      	ldr	r3, [pc, #40]	; (8004ff4 <_ZN11Screen1View19ButtonUpTimeClickedEv+0x2c>)
 8004fca:	681a      	ldr	r2, [r3, #0]
{
 8004fcc:	b510      	push	{r4, lr}
	ChargingTime=ChargingTime+1;
 8004fce:	3201      	adds	r2, #1
	if (ChargingTime >10){
 8004fd0:	2a0a      	cmp	r2, #10
		ChargingTime=10;}
 8004fd2:	bfc8      	it	gt
 8004fd4:	220a      	movgt	r2, #10
 8004fd6:	601a      	str	r2, [r3, #0]
{
 8004fd8:	4604      	mov	r4, r0
	Unicode::snprintf(txtChargingTimeBuffer,TXTCHARGINGTIME_SIZE,"%d",ChargingTime);
 8004fda:	681b      	ldr	r3, [r3, #0]
 8004fdc:	4a06      	ldr	r2, [pc, #24]	; (8004ff8 <_ZN11Screen1View19ButtonUpTimeClickedEv+0x30>)
 8004fde:	2103      	movs	r1, #3
 8004fe0:	f500 60bd 	add.w	r0, r0, #1512	; 0x5e8
 8004fe4:	f00f f81a 	bl	801401c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	txtChargingTime.invalidate();
 8004fe8:	f204 5074 	addw	r0, r4, #1396	; 0x574
}
 8004fec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	txtChargingTime.invalidate();
 8004ff0:	f00c bfed 	b.w	8011fce <_ZNK8touchgfx8Drawable10invalidateEv>
 8004ff4:	20000014 	.word	0x20000014
 8004ff8:	08023550 	.word	0x08023550

08004ffc <_ZN11Screen1View21ButtonDownTimeClickedEv>:
	ChargingTime=ChargingTime-1;
 8004ffc:	4b0a      	ldr	r3, [pc, #40]	; (8005028 <_ZN11Screen1View21ButtonDownTimeClickedEv+0x2c>)
 8004ffe:	681a      	ldr	r2, [r3, #0]
{
 8005000:	b510      	push	{r4, lr}
	ChargingTime=ChargingTime-1;
 8005002:	3a01      	subs	r2, #1
    if (ChargingTime <1){
 8005004:	2a00      	cmp	r2, #0
    	ChargingTime=1;}
 8005006:	bfd8      	it	le
 8005008:	2201      	movle	r2, #1
 800500a:	601a      	str	r2, [r3, #0]
{
 800500c:	4604      	mov	r4, r0
	Unicode::snprintf(txtChargingTimeBuffer,TXTCHARGINGTIME_SIZE,"%d",ChargingTime);
 800500e:	681b      	ldr	r3, [r3, #0]
 8005010:	4a06      	ldr	r2, [pc, #24]	; (800502c <_ZN11Screen1View21ButtonDownTimeClickedEv+0x30>)
 8005012:	2103      	movs	r1, #3
 8005014:	f500 60bd 	add.w	r0, r0, #1512	; 0x5e8
 8005018:	f00f f800 	bl	801401c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	txtChargingTime.invalidate();
 800501c:	f204 5074 	addw	r0, r4, #1396	; 0x574
}
 8005020:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	txtChargingTime.invalidate();
 8005024:	f00c bfd3 	b.w	8011fce <_ZNK8touchgfx8Drawable10invalidateEv>
 8005028:	20000014 	.word	0x20000014
 800502c:	08023550 	.word	0x08023550

08005030 <_ZN11Screen1View11setupScreenEv>:
    Screen1ViewBase::setupScreen();
 8005030:	f7fd bccf 	b.w	80029d2 <_ZN15Screen1ViewBase11setupScreenEv>

08005034 <_ZN11Screen1View21DisplayBatteryVoltageEv>:
void Screen1View::DisplayBatteryVoltage(){
 8005034:	b513      	push	{r0, r1, r4, lr}
	Unicode::snprintfFloat(txtNapiecieBateriiBuffer,TXTNAPIECIEBATERII_SIZE,"%.3f",ladowarka.BatteryVoltage);
 8005036:	4b09      	ldr	r3, [pc, #36]	; (800505c <_ZN11Screen1View21DisplayBatteryVoltageEv+0x28>)
     *
     * @see snprintf, snprintfFloats
     */
    static UnicodeChar* snprintfFloat(UnicodeChar* dst, uint16_t dstSize, const char* format, const float value)
    {
        return snprintfFloats(dst, dstSize, format, &value);
 8005038:	4a09      	ldr	r2, [pc, #36]	; (8005060 <_ZN11Screen1View21DisplayBatteryVoltageEv+0x2c>)
 800503a:	681b      	ldr	r3, [r3, #0]
 800503c:	9301      	str	r3, [sp, #4]
void Screen1View::DisplayBatteryVoltage(){
 800503e:	4604      	mov	r4, r0
 8005040:	ab01      	add	r3, sp, #4
 8005042:	210a      	movs	r1, #10
 8005044:	f200 50d4 	addw	r0, r0, #1492	; 0x5d4
 8005048:	f00f f9a4 	bl	8014394 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	txtNapiecieBaterii.invalidate();
 800504c:	f504 7059 	add.w	r0, r4, #868	; 0x364
}
 8005050:	b002      	add	sp, #8
 8005052:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	txtNapiecieBaterii.invalidate();
 8005056:	f00c bfba 	b.w	8011fce <_ZNK8touchgfx8Drawable10invalidateEv>
 800505a:	bf00      	nop
 800505c:	20003c14 	.word	0x20003c14
 8005060:	08023553 	.word	0x08023553

08005064 <_ZN11Screen1ViewD0Ev>:
 8005064:	b510      	push	{r4, lr}
 8005066:	f44f 61c2 	mov.w	r1, #1552	; 0x610
 800506a:	4604      	mov	r4, r0
 800506c:	f01b fb34 	bl	80206d8 <_ZdlPvj>
 8005070:	4620      	mov	r0, r4
 8005072:	bd10      	pop	{r4, pc}

08005074 <_ZN11Screen1ViewC1Ev>:
Screen1View::Screen1View()
 8005074:	b510      	push	{r4, lr}
 8005076:	4604      	mov	r4, r0
 8005078:	f7fd ff32 	bl	8002ee0 <_ZN15Screen1ViewBaseC1Ev>
 800507c:	4b07      	ldr	r3, [pc, #28]	; (800509c <_ZN11Screen1ViewC1Ev+0x28>)
 800507e:	6023      	str	r3, [r4, #0]
Unicode::snprintf(txtPradLadowaniaBuffer,TXTPRADLADOWANIA_SIZE,"%d",PradLadowania);
 8005080:	4b07      	ldr	r3, [pc, #28]	; (80050a0 <_ZN11Screen1ViewC1Ev+0x2c>)
 8005082:	4a08      	ldr	r2, [pc, #32]	; (80050a4 <_ZN11Screen1ViewC1Ev+0x30>)
 8005084:	681b      	ldr	r3, [r3, #0]
 8005086:	210a      	movs	r1, #10
 8005088:	f504 60b8 	add.w	r0, r4, #1472	; 0x5c0
 800508c:	f00e ffc6 	bl	801401c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	txtPradLadowania.invalidate();
 8005090:	f504 7017 	add.w	r0, r4, #604	; 0x25c
 8005094:	f00c ff9b 	bl	8011fce <_ZNK8touchgfx8Drawable10invalidateEv>
}
 8005098:	4620      	mov	r0, r4
 800509a:	bd10      	pop	{r4, pc}
 800509c:	08023560 	.word	0x08023560
 80050a0:	20000018 	.word	0x20000018
 80050a4:	08023550 	.word	0x08023550

080050a8 <_ZN13ModelListener20UpdateBatteryVoltageEv>:
    virtual void UpdateBatteryVoltage () {};
 80050a8:	4770      	bx	lr

080050aa <_ZN20ScreenGraphPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~ScreenGraphPresenter() {};
 80050aa:	4770      	bx	lr

080050ac <_ZThn4_N20ScreenGraphPresenterD1Ev>:
 80050ac:	3804      	subs	r0, #4
 80050ae:	4770      	bx	lr

080050b0 <_ZN20ScreenGraphPresenter10deactivateEv>:
}

void ScreenGraphPresenter::activate()
{

}
 80050b0:	4770      	bx	lr

080050b2 <_ZN20ScreenGraphPresenter9DrawPointEv>:
{

}
void ScreenGraphPresenter::DrawPoint()
{
	view.DrawPoint2();
 80050b2:	68c0      	ldr	r0, [r0, #12]
 80050b4:	6803      	ldr	r3, [r0, #0]
 80050b6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80050b8:	4718      	bx	r3

080050ba <_ZThn4_N20ScreenGraphPresenter9DrawPointEv>:
    virtual void DrawPoint();
 80050ba:	f1a0 0004 	sub.w	r0, r0, #4
 80050be:	f7ff bff8 	b.w	80050b2 <_ZN20ScreenGraphPresenter9DrawPointEv>

080050c2 <_ZN20ScreenGraphPresenter12DrawPointMinEv>:
}
void ScreenGraphPresenter::DrawPointMin()
{
	view.DrawPoint2Min();
 80050c2:	68c0      	ldr	r0, [r0, #12]
 80050c4:	6803      	ldr	r3, [r0, #0]
 80050c6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80050c8:	4718      	bx	r3

080050ca <_ZThn4_N20ScreenGraphPresenter12DrawPointMinEv>:
    virtual void DrawPointMin();
 80050ca:	f1a0 0004 	sub.w	r0, r0, #4
 80050ce:	f7ff bff8 	b.w	80050c2 <_ZN20ScreenGraphPresenter12DrawPointMinEv>

080050d2 <_ZN20ScreenGraphPresenter20DisplayLastAndMaxVltEv>:
}
void ScreenGraphPresenter::DisplayLastAndMaxVlt()
{
	view.DisplayLastAndMaxVlt2();
 80050d2:	68c0      	ldr	r0, [r0, #12]
 80050d4:	6803      	ldr	r3, [r0, #0]
 80050d6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80050d8:	4718      	bx	r3

080050da <_ZThn4_N20ScreenGraphPresenter20DisplayLastAndMaxVltEv>:
    virtual void DisplayLastAndMaxVlt();
 80050da:	f1a0 0004 	sub.w	r0, r0, #4
 80050de:	f7ff bff8 	b.w	80050d2 <_ZN20ScreenGraphPresenter20DisplayLastAndMaxVltEv>

080050e2 <_ZN20ScreenGraphPresenter18DisplayRunningTimeEv>:
}
void ScreenGraphPresenter::DisplayRunningTime()
{
	view.DisplayRunningTime2();
 80050e2:	68c0      	ldr	r0, [r0, #12]
 80050e4:	6803      	ldr	r3, [r0, #0]
 80050e6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80050e8:	4718      	bx	r3

080050ea <_ZThn4_N20ScreenGraphPresenter18DisplayRunningTimeEv>:
    virtual void DisplayRunningTime();
 80050ea:	f1a0 0004 	sub.w	r0, r0, #4
 80050ee:	f7ff bff8 	b.w	80050e2 <_ZN20ScreenGraphPresenter18DisplayRunningTimeEv>

080050f2 <_ZN20ScreenGraphPresenter19DisplayCurrentValueEv>:
}
void ScreenGraphPresenter::DisplayCurrentValue()
{
	view.DisplayCurrentValue2();
 80050f2:	68c0      	ldr	r0, [r0, #12]
 80050f4:	6803      	ldr	r3, [r0, #0]
 80050f6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80050f8:	4718      	bx	r3

080050fa <_ZThn4_N20ScreenGraphPresenter19DisplayCurrentValueEv>:
    virtual void DisplayCurrentValue();
 80050fa:	f1a0 0004 	sub.w	r0, r0, #4
 80050fe:	f7ff bff8 	b.w	80050f2 <_ZN20ScreenGraphPresenter19DisplayCurrentValueEv>

08005102 <_ZN20ScreenGraphPresenter23DisplayChargingFinishedEv>:
}
void ScreenGraphPresenter::DisplayChargingFinished()
{
	view.DisplayChargingFinished2();
 8005102:	68c0      	ldr	r0, [r0, #12]
 8005104:	6803      	ldr	r3, [r0, #0]
 8005106:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005108:	4718      	bx	r3

0800510a <_ZThn4_N20ScreenGraphPresenter23DisplayChargingFinishedEv>:
    virtual void DisplayChargingFinished();
 800510a:	f1a0 0004 	sub.w	r0, r0, #4
 800510e:	f7ff bff8 	b.w	8005102 <_ZN20ScreenGraphPresenter23DisplayChargingFinishedEv>

08005112 <_ZN20ScreenGraphPresenterD0Ev>:
    virtual ~ScreenGraphPresenter() {};
 8005112:	b510      	push	{r4, lr}
 8005114:	2110      	movs	r1, #16
 8005116:	4604      	mov	r4, r0
 8005118:	f01b fade 	bl	80206d8 <_ZdlPvj>
 800511c:	4620      	mov	r0, r4
 800511e:	bd10      	pop	{r4, pc}

08005120 <_ZThn4_N20ScreenGraphPresenterD0Ev>:
 8005120:	f1a0 0004 	sub.w	r0, r0, #4
 8005124:	e7f5      	b.n	8005112 <_ZN20ScreenGraphPresenterD0Ev>
	...

08005128 <_ZN20ScreenGraphPresenterC1ER15ScreenGraphView>:
ScreenGraphPresenter::ScreenGraphPresenter(ScreenGraphView& v)
 8005128:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 800512a:	2200      	movs	r2, #0
 800512c:	6082      	str	r2, [r0, #8]
    : view(v)
 800512e:	4a04      	ldr	r2, [pc, #16]	; (8005140 <_ZN20ScreenGraphPresenterC1ER15ScreenGraphView+0x18>)
 8005130:	60c1      	str	r1, [r0, #12]
 8005132:	f102 0408 	add.w	r4, r2, #8
 8005136:	3238      	adds	r2, #56	; 0x38
 8005138:	6004      	str	r4, [r0, #0]
 800513a:	6042      	str	r2, [r0, #4]
}
 800513c:	bd10      	pop	{r4, pc}
 800513e:	bf00      	nop
 8005140:	080235a4 	.word	0x080235a4

08005144 <_ZN15ScreenGraphViewD1Ev>:

class ScreenGraphView : public ScreenGraphViewBase
{
public:
    ScreenGraphView();
    virtual ~ScreenGraphView() {}
 8005144:	4770      	bx	lr

08005146 <_ZN15ScreenGraphView14tearDownScreenEv>:
}

void ScreenGraphView::tearDownScreen()
{
    ScreenGraphViewBase::tearDownScreen();
}
 8005146:	4770      	bx	lr

08005148 <_ZN15ScreenGraphView24DisplayChargingFinished2Ev>:
 8005148:	f500 5380 	add.w	r3, r0, #4096	; 0x1000
 800514c:	2201      	movs	r2, #1
#endif
}

void ScreenGraphView::DisplayChargingFinished2(){
	modalWindow1.setVisible(true);
	modalWindow1.invalidate();
 800514e:	f500 5096 	add.w	r0, r0, #4800	; 0x12c0
 8005152:	f883 22fd 	strb.w	r2, [r3, #765]	; 0x2fd
 8005156:	3018      	adds	r0, #24
 8005158:	f00c bf39 	b.w	8011fce <_ZNK8touchgfx8Drawable10invalidateEv>

0800515c <_ZN15ScreenGraphView8countMinEv>:
	Unicode::snprintf(textChargingTmeBuffer,TEXTCHARGINGTME_SIZE,"%02d:%02d:%02d\n",h,m,s);
	textChargingTme.invalidate();
#endif
}

float ScreenGraphView::countMin(){
 800515c:	b508      	push	{r3, lr}
#ifndef SIMULATOR
	float results= ladowarka.PomiaryCoSec[0]; //domyslna wartocs
 800515e:	4915      	ldr	r1, [pc, #84]	; (80051b4 <_ZN15ScreenGraphView8countMinEv+0x58>)
float ScreenGraphView::countMin(){
 8005160:	ed2d 8b02 	vpush	{d8}
	float results= ladowarka.PomiaryCoSec[0]; //domyslna wartocs
 8005164:	ed91 0a00 	vldr	s0, [r1]
	for (int i=0;i<59;i++){
 8005168:	2200      	movs	r2, #0
		if ((ladowarka.PomiaryCoSec[i] < results) && ladowarka.PomiaryCoSec[i]!=0)  results=ladowarka.PomiaryCoSec[i];
 800516a:	f6a1 1178 	subw	r1, r1, #2424	; 0x978
 800516e:	f202 235e 	addw	r3, r2, #606	; 0x25e
 8005172:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8005176:	edd3 7a00 	vldr	s15, [r3]
 800517a:	eef4 7ac0 	vcmpe.f32	s15, s0
 800517e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005182:	d508      	bpl.n	8005196 <_ZN15ScreenGraphView8countMinEv+0x3a>
 8005184:	edd3 7a00 	vldr	s15, [r3]
 8005188:	eef5 7a40 	vcmp.f32	s15, #0.0
 800518c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005190:	bf18      	it	ne
 8005192:	ed93 0a00 	vldrne	s0, [r3]
	for (int i=0;i<59;i++){
 8005196:	3201      	adds	r2, #1
 8005198:	2a3b      	cmp	r2, #59	; 0x3b
 800519a:	d1e8      	bne.n	800516e <_ZN15ScreenGraphView8countMinEv+0x12>
	}

	return (floor(results*100)/100);
 800519c:	ed9f 8a06 	vldr	s16, [pc, #24]	; 80051b8 <_ZN15ScreenGraphView8countMinEv+0x5c>
  using ::floor;

#ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  inline _GLIBCXX_CONSTEXPR float
  floor(float __x)
  { return __builtin_floorf(__x); }
 80051a0:	ee20 0a08 	vmul.f32	s0, s0, s16
 80051a4:	f01b fb02 	bl	80207ac <floorf>
#else
	return 1.5;
#endif
}
 80051a8:	ee80 0a08 	vdiv.f32	s0, s0, s16
 80051ac:	ecbd 8b02 	vpop	{d8}
 80051b0:	bd08      	pop	{r3, pc}
 80051b2:	bf00      	nop
 80051b4:	2000458c 	.word	0x2000458c
 80051b8:	42c80000 	.word	0x42c80000

080051bc <_ZN15ScreenGraphView8countMaxEv>:
float ScreenGraphView::countMax(){
 80051bc:	b508      	push	{r3, lr}
 80051be:	ed2d 8b02 	vpush	{d8}
#ifndef SIMULATOR
	float results= 0; //domyslna wartocs
 80051c2:	ed9f 0a10 	vldr	s0, [pc, #64]	; 8005204 <_ZN15ScreenGraphView8countMaxEv+0x48>
	for (int i=0;i<59;i++){
		if (ladowarka.PomiaryCoSec[i] > results)  results=ladowarka.PomiaryCoSec[i];
 80051c6:	4910      	ldr	r1, [pc, #64]	; (8005208 <_ZN15ScreenGraphView8countMaxEv+0x4c>)
	for (int i=0;i<59;i++){
 80051c8:	2300      	movs	r3, #0
		if (ladowarka.PomiaryCoSec[i] > results)  results=ladowarka.PomiaryCoSec[i];
 80051ca:	f203 225e 	addw	r2, r3, #606	; 0x25e
 80051ce:	eb01 0282 	add.w	r2, r1, r2, lsl #2
 80051d2:	edd2 7a00 	vldr	s15, [r2]
 80051d6:	eef4 7ac0 	vcmpe.f32	s15, s0
 80051da:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
	for (int i=0;i<59;i++){
 80051de:	f103 0301 	add.w	r3, r3, #1
		if (ladowarka.PomiaryCoSec[i] > results)  results=ladowarka.PomiaryCoSec[i];
 80051e2:	bfc8      	it	gt
 80051e4:	ed92 0a00 	vldrgt	s0, [r2]
	for (int i=0;i<59;i++){
 80051e8:	2b3b      	cmp	r3, #59	; 0x3b
 80051ea:	d1ee      	bne.n	80051ca <_ZN15ScreenGraphView8countMaxEv+0xe>
	}

	return (ceil(results*100)/100);
 80051ec:	ed9f 8a07 	vldr	s16, [pc, #28]	; 800520c <_ZN15ScreenGraphView8countMaxEv+0x50>
  { return __builtin_ceilf(__x); }
 80051f0:	ee20 0a08 	vmul.f32	s0, s0, s16
 80051f4:	f01b fa98 	bl	8020728 <ceilf>


#else
	return 1.5;
#endif
}
 80051f8:	ee80 0a08 	vdiv.f32	s0, s0, s16
 80051fc:	ecbd 8b02 	vpop	{d8}
 8005200:	bd08      	pop	{r3, pc}
 8005202:	bf00      	nop
 8005204:	00000000 	.word	0x00000000
 8005208:	20003c14 	.word	0x20003c14
 800520c:	42c80000 	.word	0x42c80000

08005210 <_ZN15ScreenGraphView19DisplayRunningTime2Ev>:
	sec=ladowarka.CzsasLadowaniaWSec;
 8005210:	4b11      	ldr	r3, [pc, #68]	; (8005258 <_ZN15ScreenGraphView19DisplayRunningTime2Ev+0x48>)
void ScreenGraphView::DisplayRunningTime2(){
 8005212:	b513      	push	{r0, r1, r4, lr}
	sec=ladowarka.CzsasLadowaniaWSec;
 8005214:	f8d3 2a78 	ldr.w	r2, [r3, #2680]	; 0xa78
	m = (sec -(3600*h))/60;
 8005218:	4910      	ldr	r1, [pc, #64]	; (800525c <_ZN15ScreenGraphView19DisplayRunningTime2Ev+0x4c>)
void ScreenGraphView::DisplayRunningTime2(){
 800521a:	4604      	mov	r4, r0
	h = (sec/3600);
 800521c:	f44f 6361 	mov.w	r3, #3600	; 0xe10
	s = (sec -(3600*h)-(m*60));
 8005220:	f06f 003b 	mvn.w	r0, #59	; 0x3b
	h = (sec/3600);
 8005224:	fb92 f3f3 	sdiv	r3, r2, r3
	m = (sec -(3600*h))/60;
 8005228:	fb01 2203 	mla	r2, r1, r3, r2
 800522c:	213c      	movs	r1, #60	; 0x3c
 800522e:	fb92 f1f1 	sdiv	r1, r2, r1
	s = (sec -(3600*h)-(m*60));
 8005232:	fb00 2201 	mla	r2, r0, r1, r2
	Unicode::snprintf(textChargingTmeBuffer,TEXTCHARGINGTME_SIZE,"%02d:%02d:%02d\n",h,m,s);
 8005236:	f504 50a2 	add.w	r0, r4, #5184	; 0x1440
 800523a:	e9cd 1200 	strd	r1, r2, [sp]
 800523e:	3010      	adds	r0, #16
 8005240:	4a07      	ldr	r2, [pc, #28]	; (8005260 <_ZN15ScreenGraphView19DisplayRunningTime2Ev+0x50>)
 8005242:	210a      	movs	r1, #10
 8005244:	f00e feea 	bl	801401c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textChargingTme.invalidate();
 8005248:	f504 5092 	add.w	r0, r4, #4672	; 0x1240
}
 800524c:	b002      	add	sp, #8
 800524e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	textChargingTme.invalidate();
 8005252:	f00c bebc 	b.w	8011fce <_ZNK8touchgfx8Drawable10invalidateEv>
 8005256:	bf00      	nop
 8005258:	20003c14 	.word	0x20003c14
 800525c:	fffff1f0 	.word	0xfffff1f0
 8005260:	08023600 	.word	0x08023600

08005264 <_ZN15ScreenGraphViewD0Ev>:
 8005264:	b510      	push	{r4, lr}
 8005266:	f242 713c 	movw	r1, #10044	; 0x273c
 800526a:	4604      	mov	r4, r0
 800526c:	f01b fa34 	bl	80206d8 <_ZdlPvj>
 8005270:	4620      	mov	r0, r4
 8005272:	bd10      	pop	{r4, pc}

08005274 <_ZN15ScreenGraphView11setupScreenEv>:
{
 8005274:	b510      	push	{r4, lr}
 8005276:	4604      	mov	r4, r0
    ScreenGraphViewBase::setupScreen();
 8005278:	f7fe fd61 	bl	8003d3e <_ZN19ScreenGraphViewBase11setupScreenEv>
        setIntervalScaled(AbstractDataGraph::float2scaled(interval, dataScale));
 800527c:	f504 5280 	add.w	r2, r4, #4096	; 0x1000
        const float fs = f * (float)scale;
 8005280:	edd2 7a43 	vldr	s15, [r2, #268]	; 0x10c
 8005284:	ed9f 6a90 	vldr	s12, [pc, #576]	; 80054c8 <_ZN15ScreenGraphView11setupScreenEv+0x254>
 8005288:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800528c:	ee27 7a06 	vmul.f32	s14, s14, s12
        if (fs >= 0)
 8005290:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8005294:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005298:	f2c0 809e 	blt.w	80053d8 <_ZN15ScreenGraphView11setupScreenEv+0x164>
            return (int)(fs + 0.5f);
 800529c:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 80052a0:	ee37 7a27 	vadd.f32	s14, s14, s15
 80052a4:	eefd 7ac7 	vcvt.s32.f32	s15, s14
 80052a8:	ee17 3a90 	vmov	r3, s15
        const float fs = f * (float)scale;
 80052ac:	edd2 7a33 	vldr	s15, [r2, #204]	; 0xcc
 80052b0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 * @return The absolute (non-negative) value of d.
 */
template <typename T>
T abs(T d)
{
    return (d < 0) ? -d : d;
 80052b4:	2b00      	cmp	r3, #0
 80052b6:	ee67 7a86 	vmul.f32	s15, s15, s12
 80052ba:	bfb8      	it	lt
 80052bc:	425b      	neglt	r3, r3
        if (fs >= 0)
 80052be:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80052c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
        labelInterval = abs(interval);
 80052c6:	f8c2 3110 	str.w	r3, [r2, #272]	; 0x110
 80052ca:	f2c0 8099 	blt.w	8005400 <_ZN15ScreenGraphView11setupScreenEv+0x18c>
            return (int)(fs + 0.5f);
 80052ce:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80052d2:	ee77 7a87 	vadd.f32	s15, s15, s14
 80052d6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80052da:	ee17 3a90 	vmov	r3, s15
        const float fs = f * (float)scale;
 80052de:	edd2 7a13 	vldr	s15, [r2, #76]	; 0x4c
 80052e2:	ed9f 7a7a 	vldr	s14, [pc, #488]	; 80054cc <_ZN15ScreenGraphView11setupScreenEv+0x258>
 80052e6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80052ea:	2b00      	cmp	r3, #0
 80052ec:	ee67 7a87 	vmul.f32	s15, s15, s14
 80052f0:	bfb8      	it	lt
 80052f2:	425b      	neglt	r3, r3
        if (fs >= 0)
 80052f4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80052f8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
        gridInterval = abs(interval);
 80052fc:	f8c2 30d0 	str.w	r3, [r2, #208]	; 0xd0
 8005300:	f2c0 8092 	blt.w	8005428 <_ZN15ScreenGraphView11setupScreenEv+0x1b4>
            return (int)(fs + 0.5f);
 8005304:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005308:	ee77 7a87 	vadd.f32	s15, s15, s14
 800530c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005310:	ee17 3a90 	vmov	r3, s15
 8005314:	2b00      	cmp	r3, #0
 8005316:	bfb8      	it	lt
 8005318:	425b      	neglt	r3, r3
 800531a:	6513      	str	r3, [r2, #80]	; 0x50
        const float fs = f * (float)scale;
 800531c:	f8d4 3d3c 	ldr.w	r3, [r4, #3388]	; 0xd3c
 8005320:	ed9f 6a6b 	vldr	s12, [pc, #428]	; 80054d0 <_ZN15ScreenGraphView11setupScreenEv+0x25c>
 8005324:	ee07 3a90 	vmov	s15, r3
 8005328:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800532c:	ee27 7a06 	vmul.f32	s14, s14, s12
        if (fs >= 0)
 8005330:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8005334:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005338:	f2c0 808a 	blt.w	8005450 <_ZN15ScreenGraphView11setupScreenEv+0x1dc>
            return (int)(fs + 0.5f);
 800533c:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8005340:	ee37 7a27 	vadd.f32	s14, s14, s15
 8005344:	eefd 7ac7 	vcvt.s32.f32	s15, s14
 8005348:	ee17 3a90 	vmov	r3, s15
 800534c:	2b00      	cmp	r3, #0
 800534e:	bfb8      	it	lt
 8005350:	425b      	neglt	r3, r3
 8005352:	f8c4 3d40 	str.w	r3, [r4, #3392]	; 0xd40
        const float fs = f * (float)scale;
 8005356:	f8d4 3cb0 	ldr.w	r3, [r4, #3248]	; 0xcb0
 800535a:	ee07 3a90 	vmov	s15, r3
 800535e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005362:	ee67 7a86 	vmul.f32	s15, s15, s12
        if (fs >= 0)
 8005366:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800536a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800536e:	f2c0 8083 	blt.w	8005478 <_ZN15ScreenGraphView11setupScreenEv+0x204>
            return (int)(fs + 0.5f);
 8005372:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005376:	ee77 7a87 	vadd.f32	s15, s15, s14
 800537a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800537e:	ee17 3a90 	vmov	r3, s15
 8005382:	2b00      	cmp	r3, #0
 8005384:	bfb8      	it	lt
 8005386:	425b      	neglt	r3, r3
 8005388:	f8c4 3cb4 	str.w	r3, [r4, #3252]	; 0xcb4
        const float fs = f * (float)scale;
 800538c:	f8d4 3c30 	ldr.w	r3, [r4, #3120]	; 0xc30
 8005390:	ed9f 7a50 	vldr	s14, [pc, #320]	; 80054d4 <_ZN15ScreenGraphView11setupScreenEv+0x260>
 8005394:	ee07 3a90 	vmov	s15, r3
 8005398:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800539c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80053a0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80053a4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80053a8:	db7a      	blt.n	80054a0 <_ZN15ScreenGraphView11setupScreenEv+0x22c>
            return (int)(fs + 0.5f);
 80053aa:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80053ae:	ee77 7a87 	vadd.f32	s15, s15, s14
 80053b2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80053b6:	ee17 3a90 	vmov	r3, s15
 80053ba:	2b00      	cmp	r3, #0
 80053bc:	bfb8      	it	lt
 80053be:	425b      	neglt	r3, r3
     dynamicGraph1.invalidate();
 80053c0:	f604 5058 	addw	r0, r4, #3416	; 0xd58
 80053c4:	f8c4 3c34 	str.w	r3, [r4, #3124]	; 0xc34
 80053c8:	f00c fe01 	bl	8011fce <_ZNK8touchgfx8Drawable10invalidateEv>
     dynamicGraph2.invalidate();
 80053cc:	f104 00cc 	add.w	r0, r4, #204	; 0xcc
}
 80053d0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
     dynamicGraph2.invalidate();
 80053d4:	f00c bdfb 	b.w	8011fce <_ZNK8touchgfx8Drawable10invalidateEv>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80053d8:	eefd 6ac7 	vcvt.s32.f32	s13, s14
 80053dc:	eef8 7ae6 	vcvt.f32.s32	s15, s13
 80053e0:	ee16 3a90 	vmov	r3, s13
 80053e4:	ee37 7a67 	vsub.f32	s14, s14, s15
 80053e8:	eef7 7a08 	vmov.f32	s15, #120	; 0x3fc00000  1.5
 80053ec:	ee37 7a27 	vadd.f32	s14, s14, s15
 80053f0:	3b01      	subs	r3, #1
 80053f2:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 80053f6:	ee17 1a10 	vmov	r1, s14
 80053fa:	4419      	add	r1, r3
 80053fc:	460b      	mov	r3, r1
 80053fe:	e755      	b.n	80052ac <_ZN15ScreenGraphView11setupScreenEv+0x38>
 8005400:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8005404:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8005408:	ee17 3a10 	vmov	r3, s14
 800540c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8005410:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8005414:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8005418:	3b01      	subs	r3, #1
 800541a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800541e:	ee17 1a90 	vmov	r1, s15
 8005422:	4419      	add	r1, r3
 8005424:	460b      	mov	r3, r1
 8005426:	e75a      	b.n	80052de <_ZN15ScreenGraphView11setupScreenEv+0x6a>
 8005428:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800542c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8005430:	ee17 3a10 	vmov	r3, s14
 8005434:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8005438:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800543c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8005440:	3b01      	subs	r3, #1
 8005442:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005446:	ee17 1a90 	vmov	r1, s15
 800544a:	4419      	add	r1, r3
 800544c:	460b      	mov	r3, r1
 800544e:	e761      	b.n	8005314 <_ZN15ScreenGraphView11setupScreenEv+0xa0>
 8005450:	eefd 6ac7 	vcvt.s32.f32	s13, s14
 8005454:	eef8 7ae6 	vcvt.f32.s32	s15, s13
 8005458:	ee16 3a90 	vmov	r3, s13
 800545c:	ee37 7a67 	vsub.f32	s14, s14, s15
 8005460:	eef7 7a08 	vmov.f32	s15, #120	; 0x3fc00000  1.5
 8005464:	ee37 7a27 	vadd.f32	s14, s14, s15
 8005468:	3b01      	subs	r3, #1
 800546a:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 800546e:	ee17 2a10 	vmov	r2, s14
 8005472:	441a      	add	r2, r3
 8005474:	4613      	mov	r3, r2
 8005476:	e769      	b.n	800534c <_ZN15ScreenGraphView11setupScreenEv+0xd8>
 8005478:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800547c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8005480:	ee17 3a10 	vmov	r3, s14
 8005484:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8005488:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800548c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8005490:	3b01      	subs	r3, #1
 8005492:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005496:	ee17 2a90 	vmov	r2, s15
 800549a:	441a      	add	r2, r3
 800549c:	4613      	mov	r3, r2
 800549e:	e770      	b.n	8005382 <_ZN15ScreenGraphView11setupScreenEv+0x10e>
 80054a0:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80054a4:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80054a8:	ee17 3a10 	vmov	r3, s14
 80054ac:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80054b0:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80054b4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80054b8:	3b01      	subs	r3, #1
 80054ba:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80054be:	ee17 2a90 	vmov	r2, s15
 80054c2:	441a      	add	r2, r3
 80054c4:	4613      	mov	r3, r2
 80054c6:	e778      	b.n	80053ba <_ZN15ScreenGraphView11setupScreenEv+0x146>
 80054c8:	3c23d70a 	.word	0x3c23d70a
 80054cc:	3ba3d70a 	.word	0x3ba3d70a
 80054d0:	3dcccccd 	.word	0x3dcccccd
 80054d4:	3d4ccccd 	.word	0x3d4ccccd

080054d8 <_ZN15ScreenGraphView20DisplayCurrentValue2Ev>:
void ScreenGraphView::DisplayCurrentValue2(){
 80054d8:	b513      	push	{r0, r1, r4, lr}
	Unicode::snprintfFloat(textChargingCurrentBuffer,TEXTCHARGINGCURRENT_SIZE,"%3f",ladowarka.ChargingCurrent);
 80054da:	4b0a      	ldr	r3, [pc, #40]	; (8005504 <_ZN15ScreenGraphView20DisplayCurrentValue2Ev+0x2c>)
 80054dc:	4a0a      	ldr	r2, [pc, #40]	; (8005508 <_ZN15ScreenGraphView20DisplayCurrentValue2Ev+0x30>)
 80054de:	681b      	ldr	r3, [r3, #0]
 80054e0:	9301      	str	r3, [sp, #4]
void ScreenGraphView::DisplayCurrentValue2(){
 80054e2:	4604      	mov	r4, r0
 80054e4:	2104      	movs	r1, #4
 80054e6:	f500 50a3 	add.w	r0, r0, #5216	; 0x1460
 80054ea:	ab01      	add	r3, sp, #4
 80054ec:	4408      	add	r0, r1
 80054ee:	f00e ff51 	bl	8014394 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	textChargingCurrent.invalidate();
 80054f2:	f504 5094 	add.w	r0, r4, #4736	; 0x1280
 80054f6:	300c      	adds	r0, #12
}
 80054f8:	b002      	add	sp, #8
 80054fa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	textChargingCurrent.invalidate();
 80054fe:	f00c bd66 	b.w	8011fce <_ZNK8touchgfx8Drawable10invalidateEv>
 8005502:	bf00      	nop
 8005504:	20004690 	.word	0x20004690
 8005508:	08023610 	.word	0x08023610

0800550c <_ZN15ScreenGraphView21DisplayLastAndMaxVlt2Ev>:
void ScreenGraphView::DisplayLastAndMaxVlt2(){
 800550c:	b537      	push	{r0, r1, r2, r4, r5, lr}
	Unicode::snprintfFloat(txtLastValueBuffer,TXTLASTVALUE_SIZE,"%.3f",ladowarka.BatteryVoltage);
 800550e:	4d11      	ldr	r5, [pc, #68]	; (8005554 <_ZN15ScreenGraphView21DisplayLastAndMaxVlt2Ev+0x48>)
 8005510:	4a11      	ldr	r2, [pc, #68]	; (8005558 <_ZN15ScreenGraphView21DisplayLastAndMaxVlt2Ev+0x4c>)
 8005512:	682b      	ldr	r3, [r5, #0]
 8005514:	9301      	str	r3, [sp, #4]
void ScreenGraphView::DisplayLastAndMaxVlt2(){
 8005516:	4604      	mov	r4, r0
 8005518:	f500 50a1 	add.w	r0, r0, #5152	; 0x1420
 800551c:	ab01      	add	r3, sp, #4
 800551e:	2108      	movs	r1, #8
 8005520:	3010      	adds	r0, #16
 8005522:	f00e ff37 	bl	8014394 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	Unicode::snprintfFloat(txtMaxValueBuffer,TXTMAXVALUE_SIZE,"%.3f",ladowarka.MaxBatteryVoltage);
 8005526:	686b      	ldr	r3, [r5, #4]
 8005528:	4a0b      	ldr	r2, [pc, #44]	; (8005558 <_ZN15ScreenGraphView21DisplayLastAndMaxVlt2Ev+0x4c>)
 800552a:	9301      	str	r3, [sp, #4]
 800552c:	2108      	movs	r1, #8
 800552e:	ab01      	add	r3, sp, #4
 8005530:	f504 50a2 	add.w	r0, r4, #5184	; 0x1440
 8005534:	f00e ff2e 	bl	8014394 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	txtMaxValue.invalidate();
 8005538:	f504 508f 	add.w	r0, r4, #4576	; 0x11e0
 800553c:	3014      	adds	r0, #20
 800553e:	f00c fd46 	bl	8011fce <_ZNK8touchgfx8Drawable10invalidateEv>
	txtLastValue.invalidate();
 8005542:	f504 508d 	add.w	r0, r4, #4512	; 0x11a0
 8005546:	3008      	adds	r0, #8
}
 8005548:	b003      	add	sp, #12
 800554a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
	txtLastValue.invalidate();
 800554e:	f00c bd3e 	b.w	8011fce <_ZNK8touchgfx8Drawable10invalidateEv>
 8005552:	bf00      	nop
 8005554:	20003c14 	.word	0x20003c14
 8005558:	08023553 	.word	0x08023553

0800555c <_ZN15ScreenGraphView10DrawPoint2Ev>:
void ScreenGraphView::DrawPoint2(){
 800555c:	b538      	push	{r3, r4, r5, lr}
	dynamicGraph1.addDataPoint(ladowarka.BatteryVoltage);
 800555e:	4b24      	ldr	r3, [pc, #144]	; (80055f0 <_ZN15ScreenGraphView10DrawPoint2Ev+0x94>)
 8005560:	ed93 7a00 	vldr	s14, [r3]
        const float fs = f * (float)scale;
 8005564:	f8d0 3d8c 	ldr.w	r3, [r0, #3468]	; 0xd8c
 8005568:	ee07 3a90 	vmov	s15, r3
 800556c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
void ScreenGraphView::DrawPoint2(){
 8005570:	ed2d 8b02 	vpush	{d8}
 8005574:	ee67 7a87 	vmul.f32	s15, s15, s14
 8005578:	4604      	mov	r4, r0
        if (fs >= 0)
 800557a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800557e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
	dynamicGraph1.addDataPoint(ladowarka.BatteryVoltage);
 8005582:	f600 5558 	addw	r5, r0, #3416	; 0xd58
 8005586:	db1e      	blt.n	80055c6 <_ZN15ScreenGraphView10DrawPoint2Ev+0x6a>
            return (int)(fs + 0.5f);
 8005588:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800558c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005590:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005594:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005598:	4628      	mov	r0, r5
 800559a:	f007 f93b 	bl	800c814 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
    dynamicGraph1.setGraphRangeY(countMin(), countMax());
 800559e:	6823      	ldr	r3, [r4, #0]
 80055a0:	4620      	mov	r0, r4
 80055a2:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80055a4:	4798      	blx	r3
 80055a6:	6823      	ldr	r3, [r4, #0]
 80055a8:	4620      	mov	r0, r4
 80055aa:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80055ac:	eeb0 8a40 	vmov.f32	s16, s0
 80055b0:	4798      	blx	r3
 80055b2:	4628      	mov	r0, r5
 80055b4:	eef0 0a40 	vmov.f32	s1, s0
 80055b8:	eeb0 0a48 	vmov.f32	s0, s16
 80055bc:	f7fe f880 	bl	80036c0 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff>
}
 80055c0:	ecbd 8b02 	vpop	{d8}
 80055c4:	bd38      	pop	{r3, r4, r5, pc}
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80055c6:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80055ca:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80055ce:	ee17 3a10 	vmov	r3, s14
 80055d2:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80055d6:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80055da:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80055de:	1e59      	subs	r1, r3, #1
 80055e0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80055e4:	ee17 3a90 	vmov	r3, s15
 80055e8:	440b      	add	r3, r1
 80055ea:	4619      	mov	r1, r3
 80055ec:	e7d4      	b.n	8005598 <_ZN15ScreenGraphView10DrawPoint2Ev+0x3c>
 80055ee:	bf00      	nop
 80055f0:	20003c14 	.word	0x20003c14

080055f4 <_ZN15ScreenGraphView13DrawPoint2MinEv>:
void ScreenGraphView::DrawPoint2Min(){
 80055f4:	b570      	push	{r4, r5, r6, lr}
        const float fs = f * (float)scale;
 80055f6:	edd0 7a40 	vldr	s15, [r0, #256]	; 0x100
	dynamicGraph2.addDataPoint(ladowarka.SredniaZOstatniejMin);
 80055fa:	4d56      	ldr	r5, [pc, #344]	; (8005754 <_ZN15ScreenGraphView13DrawPoint2MinEv+0x160>)
 80055fc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005600:	ed95 7a00 	vldr	s14, [r5]
 8005604:	ee67 7a87 	vmul.f32	s15, s15, s14
void ScreenGraphView::DrawPoint2Min(){
 8005608:	ed2d 8b02 	vpush	{d8}
        if (fs >= 0)
 800560c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005610:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005614:	4604      	mov	r4, r0
	dynamicGraph2.addDataPoint(ladowarka.SredniaZOstatniejMin);
 8005616:	f100 06cc 	add.w	r6, r0, #204	; 0xcc
 800561a:	db57      	blt.n	80056cc <_ZN15ScreenGraphView13DrawPoint2MinEv+0xd8>
            return (int)(fs + 0.5f);
 800561c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005620:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005624:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005628:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800562c:	4630      	mov	r0, r6
 800562e:	f007 f8f1 	bl	800c814 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
	if (ladowarka.SredniaZOstatniejMin<minValue) minValue=ladowarka.SredniaZOstatniejMin;
 8005632:	edd5 7a00 	vldr	s15, [r5]
 8005636:	eeb0 0a00 	vmov.f32	s0, #0	; 0x40000000  2.0
 800563a:	eef4 7ac0 	vcmpe.f32	s15, s0
 800563e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005642:	bf48      	it	mi
 8005644:	ed95 0a00 	vldrmi	s0, [r5]
	 dynamicGraph2.setGraphRangeY((floor(minValue*10)/10),(ceil(ladowarka.MaxBatteryVoltage*10)/10));
 8005648:	4d43      	ldr	r5, [pc, #268]	; (8005758 <_ZN15ScreenGraphView13DrawPoint2MinEv+0x164>)
 800564a:	eeb2 8a04 	vmov.f32	s16, #36	; 0x41200000  10.0
  { return __builtin_floorf(__x); }
 800564e:	ee20 0a08 	vmul.f32	s0, s0, s16
 8005652:	f01b f8ab 	bl	80207ac <floorf>
 8005656:	eef0 8a40 	vmov.f32	s17, s0
 800565a:	ed95 0a01 	vldr	s0, [r5, #4]
  { return __builtin_ceilf(__x); }
 800565e:	ee20 0a08 	vmul.f32	s0, s0, s16
 8005662:	f01b f861 	bl	8020728 <ceilf>
 8005666:	4630      	mov	r0, r6
 8005668:	eec0 0a08 	vdiv.f32	s1, s0, s16
 800566c:	ee88 0a88 	vdiv.f32	s0, s17, s16
 8005670:	f7fe f826 	bl	80036c0 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff>
	if (ladowarka.CzsasLadowaniaWSec>9*60 && ladowarka.CzsasLadowaniaWSec <59*60){ //jesli czas jest >9min i <59 min
 8005674:	f8d5 3a78 	ldr.w	r3, [r5, #2680]	; 0xa78
 8005678:	f5b3 7f07 	cmp.w	r3, #540	; 0x21c
 800567c:	dd3a      	ble.n	80056f4 <_ZN15ScreenGraphView13DrawPoint2MinEv+0x100>
 800567e:	f8d5 2a78 	ldr.w	r2, [r5, #2680]	; 0xa78
 8005682:	f640 53d3 	movw	r3, #3539	; 0xdd3
 8005686:	429a      	cmp	r2, r3
 8005688:	dc34      	bgt.n	80056f4 <_ZN15ScreenGraphView13DrawPoint2MinEv+0x100>
		dynamicGraph2.setGraphRangeX(0,60);
 800568a:	223c      	movs	r2, #60	; 0x3c
 800568c:	2100      	movs	r1, #0
 800568e:	4630      	mov	r0, r6
 8005690:	f7fd ff80 	bl	8003594 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>
        setIntervalScaled(abs(interval) * dataScale);
 8005694:	f8d4 2c70 	ldr.w	r2, [r4, #3184]	; 0xc70
        return i * scale;
 8005698:	f8d4 3cf0 	ldr.w	r3, [r4, #3312]	; 0xcf0
 800569c:	210a      	movs	r1, #10
 800569e:	434a      	muls	r2, r1
 80056a0:	2a00      	cmp	r2, #0
 80056a2:	bfb8      	it	lt
 80056a4:	4252      	neglt	r2, r2
        gridInterval = abs(interval);
 80056a6:	f8c4 2c74 	str.w	r2, [r4, #3188]	; 0xc74
        setIntervalScaled(abs(interval) * dataScale);
 80056aa:	f8d4 2bf0 	ldr.w	r2, [r4, #3056]	; 0xbf0
 80056ae:	0052      	lsls	r2, r2, #1
 80056b0:	2a00      	cmp	r2, #0
 80056b2:	bfb8      	it	lt
 80056b4:	4252      	neglt	r2, r2
        gridInterval = abs(interval);
 80056b6:	f8c4 2bf4 	str.w	r2, [r4, #3060]	; 0xbf4
 80056ba:	434b      	muls	r3, r1
 80056bc:	2b00      	cmp	r3, #0
 80056be:	bfb8      	it	lt
 80056c0:	425b      	neglt	r3, r3
 80056c2:	f8c4 3cf4 	str.w	r3, [r4, #3316]	; 0xcf4
}
 80056c6:	ecbd 8b02 	vpop	{d8}
 80056ca:	bd70      	pop	{r4, r5, r6, pc}
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80056cc:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80056d0:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80056d4:	ee17 3a10 	vmov	r3, s14
 80056d8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80056dc:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80056e0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80056e4:	1e59      	subs	r1, r3, #1
 80056e6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80056ea:	ee17 3a90 	vmov	r3, s15
 80056ee:	440b      	add	r3, r1
 80056f0:	4619      	mov	r1, r3
 80056f2:	e79b      	b.n	800562c <_ZN15ScreenGraphView13DrawPoint2MinEv+0x38>
	else if ((ladowarka.CzsasLadowaniaWSec >59*60) && (ladowarka.ChargingCompleted==0) ){ //jesli czas jest >59 min
 80056f4:	f8d5 2a78 	ldr.w	r2, [r5, #2680]	; 0xa78
 80056f8:	f640 53d4 	movw	r3, #3540	; 0xdd4
 80056fc:	429a      	cmp	r2, r3
 80056fe:	dd02      	ble.n	8005706 <_ZN15ScreenGraphView13DrawPoint2MinEv+0x112>
 8005700:	f8d5 1a80 	ldr.w	r1, [r5, #2688]	; 0xa80
 8005704:	b151      	cbz	r1, 800571c <_ZN15ScreenGraphView13DrawPoint2MinEv+0x128>
	else if(ladowarka.ChargingCompleted) 	{//maksymalna wartosc graphu keidy skonczy sie ladowanie oraz ustaw plot X,Y
 8005706:	f8d5 3a80 	ldr.w	r3, [r5, #2688]	; 0xa80
 800570a:	2b00      	cmp	r3, #0
 800570c:	d0db      	beq.n	80056c6 <_ZN15ScreenGraphView13DrawPoint2MinEv+0xd2>
				dynamicGraph2.setGraphRangeX(0,600);
 800570e:	f44f 7216 	mov.w	r2, #600	; 0x258
 8005712:	2100      	movs	r1, #0
 8005714:	4630      	mov	r0, r6
 8005716:	f7fd ff3d 	bl	8003594 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>
}
 800571a:	e7d4      	b.n	80056c6 <_ZN15ScreenGraphView13DrawPoint2MinEv+0xd2>
			dynamicGraph2.setGraphRangeX(0,ladowarka.ChargingTime*60);
 800571c:	68ea      	ldr	r2, [r5, #12]
 800571e:	253c      	movs	r5, #60	; 0x3c
 8005720:	436a      	muls	r2, r5
 8005722:	4630      	mov	r0, r6
 8005724:	f7fd ff36 	bl	8003594 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>
        setIntervalScaled(abs(interval) * dataScale);
 8005728:	f8d4 2c70 	ldr.w	r2, [r4, #3184]	; 0xc70
 800572c:	436a      	muls	r2, r5
 800572e:	2a00      	cmp	r2, #0
 8005730:	bfb8      	it	lt
 8005732:	4252      	neglt	r2, r2
        gridInterval = abs(interval);
 8005734:	f8c4 2c74 	str.w	r2, [r4, #3188]	; 0xc74
        setIntervalScaled(abs(interval) * dataScale);
 8005738:	f8d4 2bf0 	ldr.w	r2, [r4, #3056]	; 0xbf0
 800573c:	230a      	movs	r3, #10
 800573e:	435a      	muls	r2, r3
 8005740:	2a00      	cmp	r2, #0
        return i * scale;
 8005742:	f8d4 3cf0 	ldr.w	r3, [r4, #3312]	; 0xcf0
 8005746:	bfb8      	it	lt
 8005748:	4252      	neglt	r2, r2
        gridInterval = abs(interval);
 800574a:	f8c4 2bf4 	str.w	r2, [r4, #3060]	; 0xbf4
 800574e:	436b      	muls	r3, r5
 8005750:	e7b4      	b.n	80056bc <_ZN15ScreenGraphView13DrawPoint2MinEv+0xc8>
 8005752:	bf00      	nop
 8005754:	20004698 	.word	0x20004698
 8005758:	20003c14 	.word	0x20003c14

0800575c <_ZN15ScreenGraphViewC1Ev>:
ScreenGraphView::ScreenGraphView()
 800575c:	b510      	push	{r4, lr}
 800575e:	4604      	mov	r4, r0
 8005760:	f7fe fc9a 	bl	8004098 <_ZN19ScreenGraphViewBaseC1Ev>
 8005764:	4b01      	ldr	r3, [pc, #4]	; (800576c <_ZN15ScreenGraphViewC1Ev+0x10>)
 8005766:	6023      	str	r3, [r4, #0]
}
 8005768:	4620      	mov	r0, r4
 800576a:	bd10      	pop	{r4, pc}
 800576c:	0802361c 	.word	0x0802361c

08005770 <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 8005770:	20f0      	movs	r0, #240	; 0xf0
 8005772:	4770      	bx	lr

08005774 <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 8005774:	f44f 70a0 	mov.w	r0, #320	; 0x140
 8005778:	4770      	bx	lr

0800577a <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 800577a:	2029      	movs	r0, #41	; 0x29
 800577c:	f7fc b956 	b.w	8001a2c <LCD_IO_WriteReg>

08005780 <ili9341_DisplayOff>:
 8005780:	2028      	movs	r0, #40	; 0x28
 8005782:	f7fc b953 	b.w	8001a2c <LCD_IO_WriteReg>

08005786 <ili9341_Init>:
{
 8005786:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8005788:	f7fc f924 	bl	80019d4 <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 800578c:	20ca      	movs	r0, #202	; 0xca
 800578e:	f7fc f94d 	bl	8001a2c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005792:	20c3      	movs	r0, #195	; 0xc3
 8005794:	f7fc f92e 	bl	80019f4 <LCD_IO_WriteData>
 8005798:	2008      	movs	r0, #8
 800579a:	f7fc f92b 	bl	80019f4 <LCD_IO_WriteData>
 800579e:	2050      	movs	r0, #80	; 0x50
 80057a0:	f7fc f928 	bl	80019f4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80057a4:	20cf      	movs	r0, #207	; 0xcf
 80057a6:	f7fc f941 	bl	8001a2c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80057aa:	2000      	movs	r0, #0
 80057ac:	f7fc f922 	bl	80019f4 <LCD_IO_WriteData>
 80057b0:	20c1      	movs	r0, #193	; 0xc1
 80057b2:	f7fc f91f 	bl	80019f4 <LCD_IO_WriteData>
 80057b6:	2030      	movs	r0, #48	; 0x30
 80057b8:	f7fc f91c 	bl	80019f4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80057bc:	20ed      	movs	r0, #237	; 0xed
 80057be:	f7fc f935 	bl	8001a2c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80057c2:	2064      	movs	r0, #100	; 0x64
 80057c4:	f7fc f916 	bl	80019f4 <LCD_IO_WriteData>
 80057c8:	2003      	movs	r0, #3
 80057ca:	f7fc f913 	bl	80019f4 <LCD_IO_WriteData>
 80057ce:	2012      	movs	r0, #18
 80057d0:	f7fc f910 	bl	80019f4 <LCD_IO_WriteData>
 80057d4:	2081      	movs	r0, #129	; 0x81
 80057d6:	f7fc f90d 	bl	80019f4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80057da:	20e8      	movs	r0, #232	; 0xe8
 80057dc:	f7fc f926 	bl	8001a2c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80057e0:	2085      	movs	r0, #133	; 0x85
 80057e2:	f7fc f907 	bl	80019f4 <LCD_IO_WriteData>
 80057e6:	2000      	movs	r0, #0
 80057e8:	f7fc f904 	bl	80019f4 <LCD_IO_WriteData>
 80057ec:	2078      	movs	r0, #120	; 0x78
 80057ee:	f7fc f901 	bl	80019f4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80057f2:	20cb      	movs	r0, #203	; 0xcb
 80057f4:	f7fc f91a 	bl	8001a2c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80057f8:	2039      	movs	r0, #57	; 0x39
 80057fa:	f7fc f8fb 	bl	80019f4 <LCD_IO_WriteData>
 80057fe:	202c      	movs	r0, #44	; 0x2c
 8005800:	f7fc f8f8 	bl	80019f4 <LCD_IO_WriteData>
 8005804:	2000      	movs	r0, #0
 8005806:	f7fc f8f5 	bl	80019f4 <LCD_IO_WriteData>
 800580a:	2034      	movs	r0, #52	; 0x34
 800580c:	f7fc f8f2 	bl	80019f4 <LCD_IO_WriteData>
 8005810:	2002      	movs	r0, #2
 8005812:	f7fc f8ef 	bl	80019f4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005816:	20f7      	movs	r0, #247	; 0xf7
 8005818:	f7fc f908 	bl	8001a2c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800581c:	2020      	movs	r0, #32
 800581e:	f7fc f8e9 	bl	80019f4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005822:	20ea      	movs	r0, #234	; 0xea
 8005824:	f7fc f902 	bl	8001a2c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005828:	2000      	movs	r0, #0
 800582a:	f7fc f8e3 	bl	80019f4 <LCD_IO_WriteData>
 800582e:	2000      	movs	r0, #0
 8005830:	f7fc f8e0 	bl	80019f4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005834:	20b1      	movs	r0, #177	; 0xb1
 8005836:	f7fc f8f9 	bl	8001a2c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800583a:	2000      	movs	r0, #0
 800583c:	f7fc f8da 	bl	80019f4 <LCD_IO_WriteData>
 8005840:	201b      	movs	r0, #27
 8005842:	f7fc f8d7 	bl	80019f4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005846:	20b6      	movs	r0, #182	; 0xb6
 8005848:	f7fc f8f0 	bl	8001a2c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800584c:	200a      	movs	r0, #10
 800584e:	f7fc f8d1 	bl	80019f4 <LCD_IO_WriteData>
 8005852:	20a2      	movs	r0, #162	; 0xa2
 8005854:	f7fc f8ce 	bl	80019f4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005858:	20c0      	movs	r0, #192	; 0xc0
 800585a:	f7fc f8e7 	bl	8001a2c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800585e:	2010      	movs	r0, #16
 8005860:	f7fc f8c8 	bl	80019f4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005864:	20c1      	movs	r0, #193	; 0xc1
 8005866:	f7fc f8e1 	bl	8001a2c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800586a:	2010      	movs	r0, #16
 800586c:	f7fc f8c2 	bl	80019f4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005870:	20c5      	movs	r0, #197	; 0xc5
 8005872:	f7fc f8db 	bl	8001a2c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005876:	2045      	movs	r0, #69	; 0x45
 8005878:	f7fc f8bc 	bl	80019f4 <LCD_IO_WriteData>
 800587c:	2015      	movs	r0, #21
 800587e:	f7fc f8b9 	bl	80019f4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005882:	20c7      	movs	r0, #199	; 0xc7
 8005884:	f7fc f8d2 	bl	8001a2c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005888:	2090      	movs	r0, #144	; 0x90
 800588a:	f7fc f8b3 	bl	80019f4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800588e:	2036      	movs	r0, #54	; 0x36
 8005890:	f7fc f8cc 	bl	8001a2c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005894:	20c8      	movs	r0, #200	; 0xc8
 8005896:	f7fc f8ad 	bl	80019f4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800589a:	20f2      	movs	r0, #242	; 0xf2
 800589c:	f7fc f8c6 	bl	8001a2c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80058a0:	2000      	movs	r0, #0
 80058a2:	f7fc f8a7 	bl	80019f4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80058a6:	20b0      	movs	r0, #176	; 0xb0
 80058a8:	f7fc f8c0 	bl	8001a2c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80058ac:	20c2      	movs	r0, #194	; 0xc2
 80058ae:	f7fc f8a1 	bl	80019f4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80058b2:	20b6      	movs	r0, #182	; 0xb6
 80058b4:	f7fc f8ba 	bl	8001a2c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80058b8:	200a      	movs	r0, #10
 80058ba:	f7fc f89b 	bl	80019f4 <LCD_IO_WriteData>
 80058be:	20a7      	movs	r0, #167	; 0xa7
 80058c0:	f7fc f898 	bl	80019f4 <LCD_IO_WriteData>
 80058c4:	2027      	movs	r0, #39	; 0x27
 80058c6:	f7fc f895 	bl	80019f4 <LCD_IO_WriteData>
 80058ca:	2004      	movs	r0, #4
 80058cc:	f7fc f892 	bl	80019f4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80058d0:	202a      	movs	r0, #42	; 0x2a
 80058d2:	f7fc f8ab 	bl	8001a2c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80058d6:	2000      	movs	r0, #0
 80058d8:	f7fc f88c 	bl	80019f4 <LCD_IO_WriteData>
 80058dc:	2000      	movs	r0, #0
 80058de:	f7fc f889 	bl	80019f4 <LCD_IO_WriteData>
 80058e2:	2000      	movs	r0, #0
 80058e4:	f7fc f886 	bl	80019f4 <LCD_IO_WriteData>
 80058e8:	20ef      	movs	r0, #239	; 0xef
 80058ea:	f7fc f883 	bl	80019f4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80058ee:	202b      	movs	r0, #43	; 0x2b
 80058f0:	f7fc f89c 	bl	8001a2c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80058f4:	2000      	movs	r0, #0
 80058f6:	f7fc f87d 	bl	80019f4 <LCD_IO_WriteData>
 80058fa:	2000      	movs	r0, #0
 80058fc:	f7fc f87a 	bl	80019f4 <LCD_IO_WriteData>
 8005900:	2001      	movs	r0, #1
 8005902:	f7fc f877 	bl	80019f4 <LCD_IO_WriteData>
 8005906:	203f      	movs	r0, #63	; 0x3f
 8005908:	f7fc f874 	bl	80019f4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800590c:	20f6      	movs	r0, #246	; 0xf6
 800590e:	f7fc f88d 	bl	8001a2c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005912:	2001      	movs	r0, #1
 8005914:	f7fc f86e 	bl	80019f4 <LCD_IO_WriteData>
 8005918:	2000      	movs	r0, #0
 800591a:	f7fc f86b 	bl	80019f4 <LCD_IO_WriteData>
 800591e:	2006      	movs	r0, #6
 8005920:	f7fc f868 	bl	80019f4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005924:	202c      	movs	r0, #44	; 0x2c
 8005926:	f7fc f881 	bl	8001a2c <LCD_IO_WriteReg>
  LCD_Delay(200);
 800592a:	20c8      	movs	r0, #200	; 0xc8
 800592c:	f7fc f8cc 	bl	8001ac8 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8005930:	2026      	movs	r0, #38	; 0x26
 8005932:	f7fc f87b 	bl	8001a2c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005936:	2001      	movs	r0, #1
 8005938:	f7fc f85c 	bl	80019f4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800593c:	20e0      	movs	r0, #224	; 0xe0
 800593e:	f7fc f875 	bl	8001a2c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005942:	200f      	movs	r0, #15
 8005944:	f7fc f856 	bl	80019f4 <LCD_IO_WriteData>
 8005948:	2029      	movs	r0, #41	; 0x29
 800594a:	f7fc f853 	bl	80019f4 <LCD_IO_WriteData>
 800594e:	2024      	movs	r0, #36	; 0x24
 8005950:	f7fc f850 	bl	80019f4 <LCD_IO_WriteData>
 8005954:	200c      	movs	r0, #12
 8005956:	f7fc f84d 	bl	80019f4 <LCD_IO_WriteData>
 800595a:	200e      	movs	r0, #14
 800595c:	f7fc f84a 	bl	80019f4 <LCD_IO_WriteData>
 8005960:	2009      	movs	r0, #9
 8005962:	f7fc f847 	bl	80019f4 <LCD_IO_WriteData>
 8005966:	204e      	movs	r0, #78	; 0x4e
 8005968:	f7fc f844 	bl	80019f4 <LCD_IO_WriteData>
 800596c:	2078      	movs	r0, #120	; 0x78
 800596e:	f7fc f841 	bl	80019f4 <LCD_IO_WriteData>
 8005972:	203c      	movs	r0, #60	; 0x3c
 8005974:	f7fc f83e 	bl	80019f4 <LCD_IO_WriteData>
 8005978:	2009      	movs	r0, #9
 800597a:	f7fc f83b 	bl	80019f4 <LCD_IO_WriteData>
 800597e:	2013      	movs	r0, #19
 8005980:	f7fc f838 	bl	80019f4 <LCD_IO_WriteData>
 8005984:	2005      	movs	r0, #5
 8005986:	f7fc f835 	bl	80019f4 <LCD_IO_WriteData>
 800598a:	2017      	movs	r0, #23
 800598c:	f7fc f832 	bl	80019f4 <LCD_IO_WriteData>
 8005990:	2011      	movs	r0, #17
 8005992:	f7fc f82f 	bl	80019f4 <LCD_IO_WriteData>
 8005996:	2000      	movs	r0, #0
 8005998:	f7fc f82c 	bl	80019f4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800599c:	20e1      	movs	r0, #225	; 0xe1
 800599e:	f7fc f845 	bl	8001a2c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80059a2:	2000      	movs	r0, #0
 80059a4:	f7fc f826 	bl	80019f4 <LCD_IO_WriteData>
 80059a8:	2016      	movs	r0, #22
 80059aa:	f7fc f823 	bl	80019f4 <LCD_IO_WriteData>
 80059ae:	201b      	movs	r0, #27
 80059b0:	f7fc f820 	bl	80019f4 <LCD_IO_WriteData>
 80059b4:	2004      	movs	r0, #4
 80059b6:	f7fc f81d 	bl	80019f4 <LCD_IO_WriteData>
 80059ba:	2011      	movs	r0, #17
 80059bc:	f7fc f81a 	bl	80019f4 <LCD_IO_WriteData>
 80059c0:	2007      	movs	r0, #7
 80059c2:	f7fc f817 	bl	80019f4 <LCD_IO_WriteData>
 80059c6:	2031      	movs	r0, #49	; 0x31
 80059c8:	f7fc f814 	bl	80019f4 <LCD_IO_WriteData>
 80059cc:	2033      	movs	r0, #51	; 0x33
 80059ce:	f7fc f811 	bl	80019f4 <LCD_IO_WriteData>
 80059d2:	2042      	movs	r0, #66	; 0x42
 80059d4:	f7fc f80e 	bl	80019f4 <LCD_IO_WriteData>
 80059d8:	2005      	movs	r0, #5
 80059da:	f7fc f80b 	bl	80019f4 <LCD_IO_WriteData>
 80059de:	200c      	movs	r0, #12
 80059e0:	f7fc f808 	bl	80019f4 <LCD_IO_WriteData>
 80059e4:	200a      	movs	r0, #10
 80059e6:	f7fc f805 	bl	80019f4 <LCD_IO_WriteData>
 80059ea:	2028      	movs	r0, #40	; 0x28
 80059ec:	f7fc f802 	bl	80019f4 <LCD_IO_WriteData>
 80059f0:	202f      	movs	r0, #47	; 0x2f
 80059f2:	f7fb ffff 	bl	80019f4 <LCD_IO_WriteData>
 80059f6:	200f      	movs	r0, #15
 80059f8:	f7fb fffc 	bl	80019f4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80059fc:	2011      	movs	r0, #17
 80059fe:	f7fc f815 	bl	8001a2c <LCD_IO_WriteReg>
  LCD_Delay(200);
 8005a02:	20c8      	movs	r0, #200	; 0xc8
 8005a04:	f7fc f860 	bl	8001ac8 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8005a08:	2029      	movs	r0, #41	; 0x29
 8005a0a:	f7fc f80f 	bl	8001a2c <LCD_IO_WriteReg>
}
 8005a0e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 8005a12:	202c      	movs	r0, #44	; 0x2c
 8005a14:	f7fc b80a 	b.w	8001a2c <LCD_IO_WriteReg>

08005a18 <ili9341_ReadID>:
{
 8005a18:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8005a1a:	f7fb ffdb 	bl	80019d4 <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 8005a1e:	2103      	movs	r1, #3
 8005a20:	20d3      	movs	r0, #211	; 0xd3
 8005a22:	f7fc f81f 	bl	8001a64 <LCD_IO_ReadData>
}
 8005a26:	b280      	uxth	r0, r0
 8005a28:	bd08      	pop	{r3, pc}

08005a2a <stmpe811_Reset>:
  * @brief  Reset the stmpe811 by Software.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval None
  */
void stmpe811_Reset(uint16_t DeviceAddr)
{
 8005a2a:	b510      	push	{r4, lr}
  /* Power Down the stmpe811 */  
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 8005a2c:	b2c4      	uxtb	r4, r0
 8005a2e:	2202      	movs	r2, #2
 8005a30:	2103      	movs	r1, #3
 8005a32:	4620      	mov	r0, r4
 8005a34:	f7fb ff84 	bl	8001940 <IOE_Write>

  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(10); 
 8005a38:	200a      	movs	r0, #10
 8005a3a:	f7fb ffc9 	bl	80019d0 <IOE_Delay>
  
  /* Power On the Codec after the power off => all registers are reinitialized */
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 8005a3e:	4620      	mov	r0, r4
 8005a40:	2200      	movs	r2, #0
 8005a42:	2103      	movs	r1, #3
 8005a44:	f7fb ff7c 	bl	8001940 <IOE_Write>
  
  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(2); 
}
 8005a48:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 8005a4c:	2002      	movs	r0, #2
 8005a4e:	f7fb bfbf 	b.w	80019d0 <IOE_Delay>

08005a52 <stmpe811_ReadID>:
  * @brief  Read the stmpe811 IO Expander device ID.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval The Device ID (two bytes).
  */
uint16_t stmpe811_ReadID(uint16_t DeviceAddr)
{
 8005a52:	b538      	push	{r3, r4, r5, lr}
 8005a54:	4604      	mov	r4, r0
  /* Initialize IO BUS layer */
  IOE_Init(); 
  
  /* Return the device ID value */
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8005a56:	b2e4      	uxtb	r4, r4
  IOE_Init(); 
 8005a58:	f7fb ff70 	bl	800193c <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8005a5c:	2100      	movs	r1, #0
 8005a5e:	4620      	mov	r0, r4
 8005a60:	f7fb ff86 	bl	8001970 <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8005a64:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8005a66:	4605      	mov	r5, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8005a68:	4620      	mov	r0, r4
 8005a6a:	f7fb ff81 	bl	8001970 <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8005a6e:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
}
 8005a72:	b280      	uxth	r0, r0
 8005a74:	bd38      	pop	{r3, r4, r5, pc}

08005a76 <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 8005a76:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 8005a78:	b2c4      	uxtb	r4, r0
 8005a7a:	2140      	movs	r1, #64	; 0x40
 8005a7c:	4620      	mov	r0, r4
 8005a7e:	f7fb ff77 	bl	8001970 <IOE_Read>
  
  if(state > 0)
 8005a82:	0603      	lsls	r3, r0, #24
 8005a84:	d507      	bpl.n	8005a96 <stmpe811_TS_DetectTouch+0x20>
  {
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 8005a86:	214c      	movs	r1, #76	; 0x4c
 8005a88:	4620      	mov	r0, r4
 8005a8a:	f7fb ff71 	bl	8001970 <IOE_Read>
    {
      ret = 1;
 8005a8e:	3800      	subs	r0, #0
 8005a90:	bf18      	it	ne
 8005a92:	2001      	movne	r0, #1
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
  }
  
  return ret;
}
 8005a94:	bd10      	pop	{r4, pc}
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8005a96:	2201      	movs	r2, #1
 8005a98:	214b      	movs	r1, #75	; 0x4b
 8005a9a:	4620      	mov	r0, r4
 8005a9c:	f7fb ff50 	bl	8001940 <IOE_Write>
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8005aa0:	4620      	mov	r0, r4
 8005aa2:	2200      	movs	r2, #0
 8005aa4:	214b      	movs	r1, #75	; 0x4b
 8005aa6:	f7fb ff4b 	bl	8001940 <IOE_Write>
  uint8_t ret = 0;
 8005aaa:	2000      	movs	r0, #0
 8005aac:	e7f2      	b.n	8005a94 <stmpe811_TS_DetectTouch+0x1e>

08005aae <stmpe811_TS_GetXY>:
  * @param  X: Pointer to X position value
  * @param  Y: Pointer to Y position value   
  * @retval None.
  */
void stmpe811_TS_GetXY(uint16_t DeviceAddr, uint16_t *X, uint16_t *Y)
{
 8005aae:	b573      	push	{r0, r1, r4, r5, r6, lr}
  uint8_t  dataXYZ[4];
  uint32_t uldataXYZ;
  
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8005ab0:	2304      	movs	r3, #4
 8005ab2:	b2c4      	uxtb	r4, r0
{
 8005ab4:	460e      	mov	r6, r1
 8005ab6:	4615      	mov	r5, r2
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8005ab8:	21d7      	movs	r1, #215	; 0xd7
 8005aba:	eb0d 0203 	add.w	r2, sp, r3
 8005abe:	4620      	mov	r0, r4
 8005ac0:	f7fb ff70 	bl	80019a4 <IOE_ReadMultiple>
  
  /* Calculate positions values */
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 8005ac4:	9b01      	ldr	r3, [sp, #4]
 8005ac6:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8005ac8:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8005aca:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8005ace:	8032      	strh	r2, [r6, #0]
  
  /* Reset FIFO */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8005ad0:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8005ad2:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8005ad4:	2201      	movs	r2, #1
 8005ad6:	214b      	movs	r1, #75	; 0x4b
 8005ad8:	f7fb ff32 	bl	8001940 <IOE_Write>
  /* Enable the FIFO again */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8005adc:	2200      	movs	r2, #0
 8005ade:	214b      	movs	r1, #75	; 0x4b
 8005ae0:	4620      	mov	r0, r4
 8005ae2:	f7fb ff2d 	bl	8001940 <IOE_Write>
}
 8005ae6:	b002      	add	sp, #8
 8005ae8:	bd70      	pop	{r4, r5, r6, pc}
	...

08005aec <stmpe811_Init>:
{
 8005aec:	b510      	push	{r4, lr}
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 8005aee:	4b0a      	ldr	r3, [pc, #40]	; (8005b18 <stmpe811_Init+0x2c>)
 8005af0:	781a      	ldrb	r2, [r3, #0]
 8005af2:	4290      	cmp	r0, r2
{
 8005af4:	4604      	mov	r4, r0
    if(stmpe811[idx] == DeviceAddr)
 8005af6:	d00d      	beq.n	8005b14 <stmpe811_Init+0x28>
 8005af8:	7859      	ldrb	r1, [r3, #1]
 8005afa:	4288      	cmp	r0, r1
 8005afc:	d00a      	beq.n	8005b14 <stmpe811_Init+0x28>
 8005afe:	b10a      	cbz	r2, 8005b04 <stmpe811_Init+0x18>
 8005b00:	b941      	cbnz	r1, 8005b14 <stmpe811_Init+0x28>
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
 8005b02:	2201      	movs	r2, #1
      stmpe811[empty] = DeviceAddr;
 8005b04:	549c      	strb	r4, [r3, r2]
      IOE_Init(); 
 8005b06:	f7fb ff19 	bl	800193c <IOE_Init>
      stmpe811_Reset(DeviceAddr);
 8005b0a:	4620      	mov	r0, r4
}
 8005b0c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      stmpe811_Reset(DeviceAddr);
 8005b10:	f7ff bf8b 	b.w	8005a2a <stmpe811_Reset>
}
 8005b14:	bd10      	pop	{r4, pc}
 8005b16:	bf00      	nop
 8005b18:	20004794 	.word	0x20004794

08005b1c <stmpe811_EnableGlobalIT>:
{
 8005b1c:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8005b1e:	b2c4      	uxtb	r4, r0
 8005b20:	2109      	movs	r1, #9
 8005b22:	4620      	mov	r0, r4
 8005b24:	f7fb ff24 	bl	8001970 <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 8005b28:	f040 0001 	orr.w	r0, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8005b2c:	b2c2      	uxtb	r2, r0
 8005b2e:	2109      	movs	r1, #9
 8005b30:	4620      	mov	r0, r4
}
 8005b32:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8005b36:	f7fb bf03 	b.w	8001940 <IOE_Write>

08005b3a <stmpe811_DisableGlobalIT>:
{
 8005b3a:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8005b3c:	b2c4      	uxtb	r4, r0
 8005b3e:	2109      	movs	r1, #9
 8005b40:	4620      	mov	r0, r4
 8005b42:	f7fb ff15 	bl	8001970 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8005b46:	2109      	movs	r1, #9
 8005b48:	f000 02fe 	and.w	r2, r0, #254	; 0xfe
 8005b4c:	4620      	mov	r0, r4
}
 8005b4e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8005b52:	f7fb bef5 	b.w	8001940 <IOE_Write>

08005b56 <stmpe811_EnableITSource>:
{
 8005b56:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8005b58:	b2c4      	uxtb	r4, r0
{
 8005b5a:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8005b5c:	4620      	mov	r0, r4
 8005b5e:	210a      	movs	r1, #10
 8005b60:	f7fb ff06 	bl	8001970 <IOE_Read>
  tmp |= Source; 
 8005b64:	4328      	orrs	r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8005b66:	b2c2      	uxtb	r2, r0
 8005b68:	210a      	movs	r1, #10
 8005b6a:	4620      	mov	r0, r4
}
 8005b6c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8005b70:	f7fb bee6 	b.w	8001940 <IOE_Write>

08005b74 <stmpe811_TS_EnableIT>:
{
 8005b74:	b507      	push	{r0, r1, r2, lr}
 8005b76:	9001      	str	r0, [sp, #4]
  IOE_ITConfig();
 8005b78:	f7fb fee1 	bl	800193e <IOE_ITConfig>
  stmpe811_EnableITSource(DeviceAddr, STMPE811_TS_IT); 
 8005b7c:	9801      	ldr	r0, [sp, #4]
 8005b7e:	211f      	movs	r1, #31
 8005b80:	f7ff ffe9 	bl	8005b56 <stmpe811_EnableITSource>
  stmpe811_EnableGlobalIT(DeviceAddr);
 8005b84:	9801      	ldr	r0, [sp, #4]
}
 8005b86:	b003      	add	sp, #12
 8005b88:	f85d eb04 	ldr.w	lr, [sp], #4
  stmpe811_EnableGlobalIT(DeviceAddr);
 8005b8c:	f7ff bfc6 	b.w	8005b1c <stmpe811_EnableGlobalIT>

08005b90 <stmpe811_DisableITSource>:
{
 8005b90:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8005b92:	b2c4      	uxtb	r4, r0
{
 8005b94:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8005b96:	4620      	mov	r0, r4
 8005b98:	210a      	movs	r1, #10
 8005b9a:	f7fb fee9 	bl	8001970 <IOE_Read>
  tmp &= ~Source; 
 8005b9e:	ea20 0005 	bic.w	r0, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8005ba2:	b2c2      	uxtb	r2, r0
 8005ba4:	210a      	movs	r1, #10
 8005ba6:	4620      	mov	r0, r4
}
 8005ba8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8005bac:	f7fb bec8 	b.w	8001940 <IOE_Write>

08005bb0 <stmpe811_TS_DisableIT>:
{
 8005bb0:	b510      	push	{r4, lr}
 8005bb2:	4604      	mov	r4, r0
  stmpe811_DisableGlobalIT(DeviceAddr);
 8005bb4:	f7ff ffc1 	bl	8005b3a <stmpe811_DisableGlobalIT>
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 8005bb8:	4620      	mov	r0, r4
 8005bba:	211f      	movs	r1, #31
}
 8005bbc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 8005bc0:	f7ff bfe6 	b.w	8005b90 <stmpe811_DisableITSource>

08005bc4 <stmpe811_ReadGITStatus>:
{
 8005bc4:	b510      	push	{r4, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8005bc6:	b2c0      	uxtb	r0, r0
{
 8005bc8:	460c      	mov	r4, r1
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8005bca:	210b      	movs	r1, #11
 8005bcc:	f7fb fed0 	bl	8001970 <IOE_Read>
}
 8005bd0:	4020      	ands	r0, r4
 8005bd2:	bd10      	pop	{r4, pc}

08005bd4 <stmpe811_TS_ITStatus>:
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
 8005bd4:	211f      	movs	r1, #31
 8005bd6:	f7ff bff5 	b.w	8005bc4 <stmpe811_ReadGITStatus>

08005bda <stmpe811_ClearGlobalIT>:
{
 8005bda:	460a      	mov	r2, r1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 8005bdc:	b2c0      	uxtb	r0, r0
 8005bde:	210b      	movs	r1, #11
 8005be0:	f7fb beae 	b.w	8001940 <IOE_Write>

08005be4 <stmpe811_TS_ClearIT>:
  stmpe811_ClearGlobalIT(DeviceAddr, STMPE811_TS_IT);
 8005be4:	211f      	movs	r1, #31
 8005be6:	f7ff bff8 	b.w	8005bda <stmpe811_ClearGlobalIT>

08005bea <stmpe811_IO_EnableAF>:
{
 8005bea:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8005bec:	b2c4      	uxtb	r4, r0
{
 8005bee:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8005bf0:	4620      	mov	r0, r4
 8005bf2:	2117      	movs	r1, #23
 8005bf4:	f7fb febc 	bl	8001970 <IOE_Read>
  tmp &= ~(uint8_t)IO_Pin;   
 8005bf8:	ea20 0005 	bic.w	r0, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8005bfc:	b2c2      	uxtb	r2, r0
 8005bfe:	2117      	movs	r1, #23
 8005c00:	4620      	mov	r0, r4
}
 8005c02:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8005c06:	f7fb be9b 	b.w	8001940 <IOE_Write>

08005c0a <stmpe811_TS_Start>:
{
 8005c0a:	b570      	push	{r4, r5, r6, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8005c0c:	b2c4      	uxtb	r4, r0
{
 8005c0e:	4606      	mov	r6, r0
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8005c10:	2104      	movs	r1, #4
 8005c12:	4620      	mov	r0, r4
 8005c14:	f7fb feac 	bl	8001970 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8005c18:	2104      	movs	r1, #4
 8005c1a:	f000 02fb 	and.w	r2, r0, #251	; 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8005c1e:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8005c20:	4620      	mov	r0, r4
 8005c22:	f7fb fe8d 	bl	8001940 <IOE_Write>
  stmpe811_IO_EnableAF(DeviceAddr, STMPE811_TOUCH_IO_ALL);
 8005c26:	4630      	mov	r0, r6
 8005c28:	21f0      	movs	r1, #240	; 0xf0
 8005c2a:	f7ff ffde 	bl	8005bea <stmpe811_IO_EnableAF>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8005c2e:	f005 02f8 	and.w	r2, r5, #248	; 0xf8
 8005c32:	4620      	mov	r0, r4
 8005c34:	2104      	movs	r1, #4
 8005c36:	f7fb fe83 	bl	8001940 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 8005c3a:	2249      	movs	r2, #73	; 0x49
 8005c3c:	2120      	movs	r1, #32
 8005c3e:	4620      	mov	r0, r4
 8005c40:	f7fb fe7e 	bl	8001940 <IOE_Write>
  IOE_Delay(2); 
 8005c44:	2002      	movs	r0, #2
 8005c46:	f7fb fec3 	bl	80019d0 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 8005c4a:	4620      	mov	r0, r4
 8005c4c:	2201      	movs	r2, #1
 8005c4e:	2121      	movs	r1, #33	; 0x21
 8005c50:	f7fb fe76 	bl	8001940 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 8005c54:	4620      	mov	r0, r4
 8005c56:	229a      	movs	r2, #154	; 0x9a
 8005c58:	2141      	movs	r1, #65	; 0x41
 8005c5a:	f7fb fe71 	bl	8001940 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 8005c5e:	4620      	mov	r0, r4
 8005c60:	2201      	movs	r2, #1
 8005c62:	214a      	movs	r1, #74	; 0x4a
 8005c64:	f7fb fe6c 	bl	8001940 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8005c68:	4620      	mov	r0, r4
 8005c6a:	2201      	movs	r2, #1
 8005c6c:	214b      	movs	r1, #75	; 0x4b
 8005c6e:	f7fb fe67 	bl	8001940 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8005c72:	4620      	mov	r0, r4
 8005c74:	2200      	movs	r2, #0
 8005c76:	214b      	movs	r1, #75	; 0x4b
 8005c78:	f7fb fe62 	bl	8001940 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 8005c7c:	4620      	mov	r0, r4
 8005c7e:	2201      	movs	r2, #1
 8005c80:	2156      	movs	r1, #86	; 0x56
 8005c82:	f7fb fe5d 	bl	8001940 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 8005c86:	4620      	mov	r0, r4
 8005c88:	2201      	movs	r2, #1
 8005c8a:	2158      	movs	r1, #88	; 0x58
 8005c8c:	f7fb fe58 	bl	8001940 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 8005c90:	4620      	mov	r0, r4
 8005c92:	2201      	movs	r2, #1
 8005c94:	2140      	movs	r1, #64	; 0x40
 8005c96:	f7fb fe53 	bl	8001940 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 8005c9a:	4620      	mov	r0, r4
 8005c9c:	22ff      	movs	r2, #255	; 0xff
 8005c9e:	210b      	movs	r1, #11
 8005ca0:	f7fb fe4e 	bl	8001940 <IOE_Write>
}
 8005ca4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  IOE_Delay(2); 
 8005ca8:	2002      	movs	r0, #2
 8005caa:	f7fb be91 	b.w	80019d0 <IOE_Delay>
	...

08005cb0 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8005cb0:	4b05      	ldr	r3, [pc, #20]	; (8005cc8 <SystemInit+0x18>)
 8005cb2:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 8005cb6:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 8005cba:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8005cbe:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8005cc2:	609a      	str	r2, [r3, #8]
#endif
}
 8005cc4:	4770      	bx	lr
 8005cc6:	bf00      	nop
 8005cc8:	e000ed00 	.word	0xe000ed00

08005ccc <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8005ccc:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8005cce:	4b0b      	ldr	r3, [pc, #44]	; (8005cfc <HAL_Init+0x30>)
 8005cd0:	681a      	ldr	r2, [r3, #0]
 8005cd2:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005cd6:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8005cd8:	681a      	ldr	r2, [r3, #0]
 8005cda:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8005cde:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8005ce0:	681a      	ldr	r2, [r3, #0]
 8005ce2:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8005ce6:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8005ce8:	2003      	movs	r0, #3
 8005cea:	f000 f9e9 	bl	80060c0 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8005cee:	2000      	movs	r0, #0
 8005cf0:	f7fc f9c6 	bl	8002080 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8005cf4:	f7fb ff02 	bl	8001afc <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8005cf8:	2000      	movs	r0, #0
 8005cfa:	bd08      	pop	{r3, pc}
 8005cfc:	40023c00 	.word	0x40023c00

08005d00 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8005d00:	4a03      	ldr	r2, [pc, #12]	; (8005d10 <HAL_IncTick+0x10>)
 8005d02:	4b04      	ldr	r3, [pc, #16]	; (8005d14 <HAL_IncTick+0x14>)
 8005d04:	6811      	ldr	r1, [r2, #0]
 8005d06:	781b      	ldrb	r3, [r3, #0]
 8005d08:	440b      	add	r3, r1
 8005d0a:	6013      	str	r3, [r2, #0]
}
 8005d0c:	4770      	bx	lr
 8005d0e:	bf00      	nop
 8005d10:	20004798 	.word	0x20004798
 8005d14:	20000080 	.word	0x20000080

08005d18 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8005d18:	4b01      	ldr	r3, [pc, #4]	; (8005d20 <HAL_GetTick+0x8>)
 8005d1a:	6818      	ldr	r0, [r3, #0]
}
 8005d1c:	4770      	bx	lr
 8005d1e:	bf00      	nop
 8005d20:	20004798 	.word	0x20004798

08005d24 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8005d24:	b538      	push	{r3, r4, r5, lr}
 8005d26:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8005d28:	f7ff fff6 	bl	8005d18 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8005d2c:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 8005d2e:	bf1c      	itt	ne
 8005d30:	4b05      	ldrne	r3, [pc, #20]	; (8005d48 <HAL_Delay+0x24>)
 8005d32:	781b      	ldrbne	r3, [r3, #0]
  uint32_t tickstart = HAL_GetTick();
 8005d34:	4605      	mov	r5, r0
    wait += (uint32_t)(uwTickFreq);
 8005d36:	bf18      	it	ne
 8005d38:	18e4      	addne	r4, r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 8005d3a:	f7ff ffed 	bl	8005d18 <HAL_GetTick>
 8005d3e:	1b43      	subs	r3, r0, r5
 8005d40:	42a3      	cmp	r3, r4
 8005d42:	d3fa      	bcc.n	8005d3a <HAL_Delay+0x16>
  {
  }
}
 8005d44:	bd38      	pop	{r3, r4, r5, pc}
 8005d46:	bf00      	nop
 8005d48:	20000080 	.word	0x20000080

08005d4c <HAL_ADC_Init>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef* hadc)
{
 8005d4c:	b538      	push	{r3, r4, r5, lr}
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;
  
  /* Check ADC handle */
  if(hadc == NULL)
 8005d4e:	4604      	mov	r4, r0
 8005d50:	2800      	cmp	r0, #0
 8005d52:	f000 809b 	beq.w	8005e8c <HAL_ADC_Init+0x140>
  if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
  {
    assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
  }
  
  if(hadc->State == HAL_ADC_STATE_RESET)
 8005d56:	6c05      	ldr	r5, [r0, #64]	; 0x40
 8005d58:	b925      	cbnz	r5, 8005d64 <HAL_ADC_Init+0x18>

    /* Init the low level hardware */
    hadc->MspInitCallback(hadc);
#else
    /* Init the low level hardware */
    HAL_ADC_MspInit(hadc);
 8005d5a:	f7fb feef 	bl	8001b3c <HAL_ADC_MspInit>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */

    /* Initialize ADC error code */
    ADC_CLEAR_ERRORCODE(hadc);
 8005d5e:	6465      	str	r5, [r4, #68]	; 0x44
    
    /* Allocate lock resource and initialize it */
    hadc->Lock = HAL_UNLOCKED;
 8005d60:	f884 503c 	strb.w	r5, [r4, #60]	; 0x3c
  }
  
  /* Configuration of ADC parameters if previous preliminary actions are      */ 
  /* correctly completed.                                                     */
  if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 8005d64:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005d66:	06db      	lsls	r3, r3, #27
 8005d68:	f100 808e 	bmi.w	8005e88 <HAL_ADC_Init+0x13c>
  {
    /* Set ADC state */
    ADC_STATE_CLR_SET(hadc->State,
 8005d6c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005d6e:	f423 5388 	bic.w	r3, r3, #4352	; 0x1100
 8005d72:	f023 0302 	bic.w	r3, r3, #2
 8005d76:	f043 0302 	orr.w	r3, r3, #2
 8005d7a:	6423      	str	r3, [r4, #64]	; 0x40
  /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
  /* control register)                                                    */
  tmpADC_Common = ADC_COMMON_REGISTER(hadc);
  
  /* Set the ADC clock prescaler */
  tmpADC_Common->CCR &= ~(ADC_CCR_ADCPRE);
 8005d7c:	4b44      	ldr	r3, [pc, #272]	; (8005e90 <HAL_ADC_Init+0x144>)
 8005d7e:	685a      	ldr	r2, [r3, #4]
 8005d80:	f422 3240 	bic.w	r2, r2, #196608	; 0x30000
 8005d84:	605a      	str	r2, [r3, #4]
  tmpADC_Common->CCR |=  hadc->Init.ClockPrescaler;
 8005d86:	685a      	ldr	r2, [r3, #4]
 8005d88:	6861      	ldr	r1, [r4, #4]
 8005d8a:	430a      	orrs	r2, r1
 8005d8c:	605a      	str	r2, [r3, #4]
  
  /* Set ADC scan mode */
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 8005d8e:	6823      	ldr	r3, [r4, #0]
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 8005d90:	6921      	ldr	r1, [r4, #16]
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 8005d92:	685a      	ldr	r2, [r3, #4]
 8005d94:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8005d98:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 8005d9a:	685a      	ldr	r2, [r3, #4]
 8005d9c:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8005da0:	605a      	str	r2, [r3, #4]
  
  /* Set ADC resolution */
  hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 8005da2:	685a      	ldr	r2, [r3, #4]
  hadc->Instance->CR1 |=  hadc->Init.Resolution;
 8005da4:	68a1      	ldr	r1, [r4, #8]
  hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 8005da6:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 8005daa:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  hadc->Init.Resolution;
 8005dac:	685a      	ldr	r2, [r3, #4]
 8005dae:	430a      	orrs	r2, r1
 8005db0:	605a      	str	r2, [r3, #4]
  
  /* Set ADC data alignment */
  hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 8005db2:	689a      	ldr	r2, [r3, #8]
  hadc->Instance->CR2 |= hadc->Init.DataAlign;
 8005db4:	68e1      	ldr	r1, [r4, #12]
  hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 8005db6:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8005dba:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= hadc->Init.DataAlign;
 8005dbc:	689a      	ldr	r2, [r3, #8]
 8005dbe:	430a      	orrs	r2, r1
 8005dc0:	609a      	str	r2, [r3, #8]
  /* Enable external trigger if trigger selection is different of software  */
  /* start.                                                                 */
  /* Note: This configuration keeps the hardware feature of parameter       */
  /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
  /*       software start.                                                  */
  if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 8005dc2:	4934      	ldr	r1, [pc, #208]	; (8005e94 <HAL_ADC_Init+0x148>)
 8005dc4:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8005dc6:	428a      	cmp	r2, r1
 8005dc8:	d052      	beq.n	8005e70 <HAL_ADC_Init+0x124>
  {
    /* Select external trigger to start conversion */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 8005dca:	6899      	ldr	r1, [r3, #8]
 8005dcc:	f021 6170 	bic.w	r1, r1, #251658240	; 0xf000000
 8005dd0:	6099      	str	r1, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConv;
 8005dd2:	6899      	ldr	r1, [r3, #8]
 8005dd4:	430a      	orrs	r2, r1
 8005dd6:	609a      	str	r2, [r3, #8]
    
    /* Select external trigger polarity */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8005dd8:	689a      	ldr	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 8005dda:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8005ddc:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8005de0:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 8005de2:	689a      	ldr	r2, [r3, #8]
 8005de4:	430a      	orrs	r2, r1
  }
  else
  {
    /* Reset the external trigger */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8005de6:	609a      	str	r2, [r3, #8]
  }
  
  /* Enable or disable ADC continuous conversion mode */
  hadc->Instance->CR2 &= ~(ADC_CR2_CONT);
 8005de8:	689a      	ldr	r2, [r3, #8]
 8005dea:	f022 0202 	bic.w	r2, r2, #2
 8005dee:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode);
 8005df0:	689a      	ldr	r2, [r3, #8]
 8005df2:	7e21      	ldrb	r1, [r4, #24]
 8005df4:	ea42 0241 	orr.w	r2, r2, r1, lsl #1
 8005df8:	609a      	str	r2, [r3, #8]
  
  if(hadc->Init.DiscontinuousConvMode != DISABLE)
 8005dfa:	f894 2020 	ldrb.w	r2, [r4, #32]
 8005dfe:	2a00      	cmp	r2, #0
 8005e00:	d03e      	beq.n	8005e80 <HAL_ADC_Init+0x134>
  {
    assert_param(IS_ADC_REGULAR_DISC_NUMBER(hadc->Init.NbrOfDiscConversion));
  
    /* Enable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 8005e02:	685a      	ldr	r2, [r3, #4]
    
    /* Set the number of channels to be converted in discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
    hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 8005e04:	6a61      	ldr	r1, [r4, #36]	; 0x24
    hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 8005e06:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8005e0a:	605a      	str	r2, [r3, #4]
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
 8005e0c:	685a      	ldr	r2, [r3, #4]
 8005e0e:	f422 4260 	bic.w	r2, r2, #57344	; 0xe000
 8005e12:	605a      	str	r2, [r3, #4]
    hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 8005e14:	685a      	ldr	r2, [r3, #4]
 8005e16:	3901      	subs	r1, #1
 8005e18:	ea42 3241 	orr.w	r2, r2, r1, lsl #13
  }
  else
  {
    /* Disable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 8005e1c:	605a      	str	r2, [r3, #4]
  }
  
  /* Set ADC number of conversion */
  hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 8005e1e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 8005e20:	69e1      	ldr	r1, [r4, #28]
  hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 8005e22:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 8005e26:	62da      	str	r2, [r3, #44]	; 0x2c
  hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 8005e28:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8005e2a:	3901      	subs	r1, #1
 8005e2c:	ea42 5201 	orr.w	r2, r2, r1, lsl #20
 8005e30:	62da      	str	r2, [r3, #44]	; 0x2c
  
  /* Enable or disable ADC DMA continuous request */
  hadc->Instance->CR2 &= ~(ADC_CR2_DDS);
 8005e32:	689a      	ldr	r2, [r3, #8]
 8005e34:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8005e38:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_DMAContReq((uint32_t)hadc->Init.DMAContinuousRequests);
 8005e3a:	689a      	ldr	r2, [r3, #8]
 8005e3c:	f894 1030 	ldrb.w	r1, [r4, #48]	; 0x30
 8005e40:	ea42 2241 	orr.w	r2, r2, r1, lsl #9
 8005e44:	609a      	str	r2, [r3, #8]
  
  /* Enable or disable ADC end of conversion selection */
  hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 8005e46:	689a      	ldr	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 8005e48:	6961      	ldr	r1, [r4, #20]
  hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 8005e4a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005e4e:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 8005e50:	689a      	ldr	r2, [r3, #8]
    ADC_CLEAR_ERRORCODE(hadc);
 8005e52:	2000      	movs	r0, #0
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 8005e54:	ea42 2281 	orr.w	r2, r2, r1, lsl #10
 8005e58:	609a      	str	r2, [r3, #8]
    ADC_CLEAR_ERRORCODE(hadc);
 8005e5a:	6460      	str	r0, [r4, #68]	; 0x44
    ADC_STATE_CLR_SET(hadc->State,
 8005e5c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005e5e:	f023 0303 	bic.w	r3, r3, #3
 8005e62:	f043 0301 	orr.w	r3, r3, #1
 8005e66:	6423      	str	r3, [r4, #64]	; 0x40
  __HAL_UNLOCK(hadc);
 8005e68:	2300      	movs	r3, #0
 8005e6a:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
}
 8005e6e:	bd38      	pop	{r3, r4, r5, pc}
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 8005e70:	689a      	ldr	r2, [r3, #8]
 8005e72:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 8005e76:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8005e78:	689a      	ldr	r2, [r3, #8]
 8005e7a:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8005e7e:	e7b2      	b.n	8005de6 <HAL_ADC_Init+0x9a>
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 8005e80:	685a      	ldr	r2, [r3, #4]
 8005e82:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8005e86:	e7c9      	b.n	8005e1c <HAL_ADC_Init+0xd0>
    tmp_hal_status = HAL_ERROR;
 8005e88:	2001      	movs	r0, #1
 8005e8a:	e7ed      	b.n	8005e68 <HAL_ADC_Init+0x11c>
    return HAL_ERROR;
 8005e8c:	2001      	movs	r0, #1
 8005e8e:	e7ee      	b.n	8005e6e <HAL_ADC_Init+0x122>
 8005e90:	40012300 	.word	0x40012300
 8005e94:	0f000001 	.word	0x0f000001

08005e98 <HAL_ADC_Start>:
{
 8005e98:	b082      	sub	sp, #8
  __IO uint32_t counter = 0U;
 8005e9a:	2300      	movs	r3, #0
 8005e9c:	9301      	str	r3, [sp, #4]
  __HAL_LOCK(hadc);
 8005e9e:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 8005ea2:	2b01      	cmp	r3, #1
 8005ea4:	d060      	beq.n	8005f68 <HAL_ADC_Start+0xd0>
 8005ea6:	2301      	movs	r3, #1
 8005ea8:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  if((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 8005eac:	6803      	ldr	r3, [r0, #0]
 8005eae:	689a      	ldr	r2, [r3, #8]
 8005eb0:	07d2      	lsls	r2, r2, #31
 8005eb2:	d505      	bpl.n	8005ec0 <HAL_ADC_Start+0x28>
  if(HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_ADON))
 8005eb4:	689a      	ldr	r2, [r3, #8]
 8005eb6:	07d1      	lsls	r1, r2, #31
 8005eb8:	d414      	bmi.n	8005ee4 <HAL_ADC_Start+0x4c>
  return HAL_OK;
 8005eba:	2000      	movs	r0, #0
}
 8005ebc:	b002      	add	sp, #8
 8005ebe:	4770      	bx	lr
    __HAL_ADC_ENABLE(hadc);
 8005ec0:	689a      	ldr	r2, [r3, #8]
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 8005ec2:	492a      	ldr	r1, [pc, #168]	; (8005f6c <HAL_ADC_Start+0xd4>)
    __HAL_ADC_ENABLE(hadc);
 8005ec4:	f042 0201 	orr.w	r2, r2, #1
 8005ec8:	609a      	str	r2, [r3, #8]
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 8005eca:	4a29      	ldr	r2, [pc, #164]	; (8005f70 <HAL_ADC_Start+0xd8>)
 8005ecc:	6812      	ldr	r2, [r2, #0]
 8005ece:	fbb2 f2f1 	udiv	r2, r2, r1
 8005ed2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
      counter--;
 8005ed6:	9201      	str	r2, [sp, #4]
    while(counter != 0U)
 8005ed8:	9a01      	ldr	r2, [sp, #4]
 8005eda:	2a00      	cmp	r2, #0
 8005edc:	d0ea      	beq.n	8005eb4 <HAL_ADC_Start+0x1c>
      counter--;
 8005ede:	9a01      	ldr	r2, [sp, #4]
 8005ee0:	3a01      	subs	r2, #1
 8005ee2:	e7f8      	b.n	8005ed6 <HAL_ADC_Start+0x3e>
    ADC_STATE_CLR_SET(hadc->State,
 8005ee4:	6c02      	ldr	r2, [r0, #64]	; 0x40
 8005ee6:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 8005eea:	f022 0201 	bic.w	r2, r2, #1
 8005eee:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8005ef2:	6402      	str	r2, [r0, #64]	; 0x40
    if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
 8005ef4:	685a      	ldr	r2, [r3, #4]
 8005ef6:	0552      	lsls	r2, r2, #21
      ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
 8005ef8:	bf41      	itttt	mi
 8005efa:	6c02      	ldrmi	r2, [r0, #64]	; 0x40
 8005efc:	f422 5240 	bicmi.w	r2, r2, #12288	; 0x3000
 8005f00:	f442 5280 	orrmi.w	r2, r2, #4096	; 0x1000
 8005f04:	6402      	strmi	r2, [r0, #64]	; 0x40
    if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 8005f06:	6c02      	ldr	r2, [r0, #64]	; 0x40
 8005f08:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
      CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
 8005f0c:	bf1c      	itt	ne
 8005f0e:	6c42      	ldrne	r2, [r0, #68]	; 0x44
 8005f10:	f022 0206 	bicne.w	r2, r2, #6
      ADC_CLEAR_ERRORCODE(hadc);
 8005f14:	6442      	str	r2, [r0, #68]	; 0x44
    __HAL_UNLOCK(hadc);
 8005f16:	2200      	movs	r2, #0
 8005f18:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC | ADC_FLAG_OVR);
 8005f1c:	f06f 0222 	mvn.w	r2, #34	; 0x22
 8005f20:	601a      	str	r2, [r3, #0]
    if(HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_MULTI))
 8005f22:	4a14      	ldr	r2, [pc, #80]	; (8005f74 <HAL_ADC_Start+0xdc>)
 8005f24:	6851      	ldr	r1, [r2, #4]
 8005f26:	f011 0f1f 	tst.w	r1, #31
 8005f2a:	4913      	ldr	r1, [pc, #76]	; (8005f78 <HAL_ADC_Start+0xe0>)
 8005f2c:	d119      	bne.n	8005f62 <HAL_ADC_Start+0xca>
      if((hadc->Instance == ADC1) || ((hadc->Instance == ADC2) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_0)) \
 8005f2e:	428b      	cmp	r3, r1
 8005f30:	d007      	beq.n	8005f42 <HAL_ADC_Start+0xaa>
 8005f32:	f501 7180 	add.w	r1, r1, #256	; 0x100
 8005f36:	428b      	cmp	r3, r1
 8005f38:	d10c      	bne.n	8005f54 <HAL_ADC_Start+0xbc>
 8005f3a:	6852      	ldr	r2, [r2, #4]
 8005f3c:	f012 0f1f 	tst.w	r2, #31
                                  || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
 8005f40:	d1bb      	bne.n	8005eba <HAL_ADC_Start+0x22>
      if((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 8005f42:	6898      	ldr	r0, [r3, #8]
 8005f44:	f010 5040 	ands.w	r0, r0, #805306368	; 0x30000000
 8005f48:	d1b7      	bne.n	8005eba <HAL_ADC_Start+0x22>
          hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 8005f4a:	689a      	ldr	r2, [r3, #8]
 8005f4c:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8005f50:	609a      	str	r2, [r3, #8]
 8005f52:	e7b3      	b.n	8005ebc <HAL_ADC_Start+0x24>
                                  || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
 8005f54:	4909      	ldr	r1, [pc, #36]	; (8005f7c <HAL_ADC_Start+0xe4>)
 8005f56:	428b      	cmp	r3, r1
 8005f58:	d1af      	bne.n	8005eba <HAL_ADC_Start+0x22>
 8005f5a:	6852      	ldr	r2, [r2, #4]
 8005f5c:	f012 0f10 	tst.w	r2, #16
 8005f60:	e7ee      	b.n	8005f40 <HAL_ADC_Start+0xa8>
      if((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 8005f62:	428b      	cmp	r3, r1
 8005f64:	d1a9      	bne.n	8005eba <HAL_ADC_Start+0x22>
 8005f66:	e7ec      	b.n	8005f42 <HAL_ADC_Start+0xaa>
  __HAL_LOCK(hadc);
 8005f68:	2002      	movs	r0, #2
 8005f6a:	e7a7      	b.n	8005ebc <HAL_ADC_Start+0x24>
 8005f6c:	000f4240 	.word	0x000f4240
 8005f70:	2000007c 	.word	0x2000007c
 8005f74:	40012300 	.word	0x40012300
 8005f78:	40012000 	.word	0x40012000
 8005f7c:	40012200 	.word	0x40012200

08005f80 <HAL_ADC_GetValue>:
  return hadc->Instance->DR;
 8005f80:	6803      	ldr	r3, [r0, #0]
 8005f82:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
}
 8005f84:	4770      	bx	lr
	...

08005f88 <HAL_ADC_ConfigChannel>:
{
 8005f88:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  __IO uint32_t counter = 0U;
 8005f8a:	2300      	movs	r3, #0
 8005f8c:	9301      	str	r3, [sp, #4]
  __HAL_LOCK(hadc);
 8005f8e:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 8005f92:	2b01      	cmp	r3, #1
 8005f94:	d069      	beq.n	800606a <HAL_ADC_ConfigChannel+0xe2>
 8005f96:	2301      	movs	r3, #1
 8005f98:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  if (sConfig->Channel > ADC_CHANNEL_9)
 8005f9c:	680d      	ldr	r5, [r1, #0]
    hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 8005f9e:	6803      	ldr	r3, [r0, #0]
    hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
 8005fa0:	688e      	ldr	r6, [r1, #8]
  if (sConfig->Channel > ADC_CHANNEL_9)
 8005fa2:	2d09      	cmp	r5, #9
 8005fa4:	b2ac      	uxth	r4, r5
 8005fa6:	d934      	bls.n	8006012 <HAL_ADC_ConfigChannel+0x8a>
    hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 8005fa8:	eb04 0244 	add.w	r2, r4, r4, lsl #1
 8005fac:	68df      	ldr	r7, [r3, #12]
 8005fae:	3a1e      	subs	r2, #30
 8005fb0:	f04f 0c07 	mov.w	ip, #7
 8005fb4:	fa0c fc02 	lsl.w	ip, ip, r2
 8005fb8:	ea27 070c 	bic.w	r7, r7, ip
 8005fbc:	60df      	str	r7, [r3, #12]
    hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
 8005fbe:	68df      	ldr	r7, [r3, #12]
 8005fc0:	fa06 f202 	lsl.w	r2, r6, r2
 8005fc4:	433a      	orrs	r2, r7
 8005fc6:	60da      	str	r2, [r3, #12]
  if (sConfig->Rank < 7U)
 8005fc8:	6849      	ldr	r1, [r1, #4]
 8005fca:	2906      	cmp	r1, #6
    hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 8005fcc:	eb01 0281 	add.w	r2, r1, r1, lsl #2
  if (sConfig->Rank < 7U)
 8005fd0:	d82f      	bhi.n	8006032 <HAL_ADC_ConfigChannel+0xaa>
    hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 8005fd2:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8005fd4:	3a05      	subs	r2, #5
 8005fd6:	261f      	movs	r6, #31
 8005fd8:	4096      	lsls	r6, r2
 8005fda:	ea21 0106 	bic.w	r1, r1, r6
 8005fde:	6359      	str	r1, [r3, #52]	; 0x34
    hadc->Instance->SQR3 |= ADC_SQR3_RK(sConfig->Channel, sConfig->Rank);
 8005fe0:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8005fe2:	fa04 f202 	lsl.w	r2, r4, r2
 8005fe6:	430a      	orrs	r2, r1
 8005fe8:	635a      	str	r2, [r3, #52]	; 0x34
  if ((hadc->Instance == ADC1) && (sConfig->Channel == ADC_CHANNEL_VBAT))
 8005fea:	4a30      	ldr	r2, [pc, #192]	; (80060ac <HAL_ADC_ConfigChannel+0x124>)
 8005fec:	4293      	cmp	r3, r2
 8005fee:	d10a      	bne.n	8006006 <HAL_ADC_ConfigChannel+0x7e>
 8005ff0:	2d12      	cmp	r5, #18
 8005ff2:	d13c      	bne.n	800606e <HAL_ADC_ConfigChannel+0xe6>
      tmpADC_Common->CCR &= ~ADC_CCR_TSVREFE;
 8005ff4:	4b2e      	ldr	r3, [pc, #184]	; (80060b0 <HAL_ADC_ConfigChannel+0x128>)
 8005ff6:	685a      	ldr	r2, [r3, #4]
 8005ff8:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 8005ffc:	605a      	str	r2, [r3, #4]
    tmpADC_Common->CCR |= ADC_CCR_VBATE;
 8005ffe:	685a      	ldr	r2, [r3, #4]
 8006000:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 8006004:	605a      	str	r2, [r3, #4]
  __HAL_UNLOCK(hadc);
 8006006:	2300      	movs	r3, #0
 8006008:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  return HAL_OK;
 800600c:	4618      	mov	r0, r3
}
 800600e:	b003      	add	sp, #12
 8006010:	bdf0      	pop	{r4, r5, r6, r7, pc}
    hadc->Instance->SMPR2 &= ~ADC_SMPR2(ADC_SMPR2_SMP0, sConfig->Channel);
 8006012:	691f      	ldr	r7, [r3, #16]
 8006014:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 8006018:	f04f 0c07 	mov.w	ip, #7
 800601c:	fa0c fc02 	lsl.w	ip, ip, r2
 8006020:	ea27 070c 	bic.w	r7, r7, ip
 8006024:	611f      	str	r7, [r3, #16]
    hadc->Instance->SMPR2 |= ADC_SMPR2(sConfig->SamplingTime, sConfig->Channel);
 8006026:	691f      	ldr	r7, [r3, #16]
 8006028:	fa06 f202 	lsl.w	r2, r6, r2
 800602c:	433a      	orrs	r2, r7
 800602e:	611a      	str	r2, [r3, #16]
 8006030:	e7ca      	b.n	8005fc8 <HAL_ADC_ConfigChannel+0x40>
  else if (sConfig->Rank < 13U)
 8006032:	290c      	cmp	r1, #12
 8006034:	f04f 011f 	mov.w	r1, #31
 8006038:	d80b      	bhi.n	8006052 <HAL_ADC_ConfigChannel+0xca>
    hadc->Instance->SQR2 &= ~ADC_SQR2_RK(ADC_SQR2_SQ7, sConfig->Rank);
 800603a:	6b1e      	ldr	r6, [r3, #48]	; 0x30
 800603c:	3a23      	subs	r2, #35	; 0x23
 800603e:	4091      	lsls	r1, r2
 8006040:	ea26 0101 	bic.w	r1, r6, r1
 8006044:	6319      	str	r1, [r3, #48]	; 0x30
    hadc->Instance->SQR2 |= ADC_SQR2_RK(sConfig->Channel, sConfig->Rank);
 8006046:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8006048:	fa04 f202 	lsl.w	r2, r4, r2
 800604c:	430a      	orrs	r2, r1
 800604e:	631a      	str	r2, [r3, #48]	; 0x30
 8006050:	e7cb      	b.n	8005fea <HAL_ADC_ConfigChannel+0x62>
    hadc->Instance->SQR1 &= ~ADC_SQR1_RK(ADC_SQR1_SQ13, sConfig->Rank);
 8006052:	6ade      	ldr	r6, [r3, #44]	; 0x2c
 8006054:	3a41      	subs	r2, #65	; 0x41
 8006056:	4091      	lsls	r1, r2
 8006058:	ea26 0101 	bic.w	r1, r6, r1
 800605c:	62d9      	str	r1, [r3, #44]	; 0x2c
    hadc->Instance->SQR1 |= ADC_SQR1_RK(sConfig->Channel, sConfig->Rank);
 800605e:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8006060:	fa04 f202 	lsl.w	r2, r4, r2
 8006064:	430a      	orrs	r2, r1
 8006066:	62da      	str	r2, [r3, #44]	; 0x2c
 8006068:	e7bf      	b.n	8005fea <HAL_ADC_ConfigChannel+0x62>
  __HAL_LOCK(hadc);
 800606a:	2002      	movs	r0, #2
 800606c:	e7cf      	b.n	800600e <HAL_ADC_ConfigChannel+0x86>
  if ((hadc->Instance == ADC1) && ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) || (sConfig->Channel == ADC_CHANNEL_VREFINT)))
 800606e:	4b11      	ldr	r3, [pc, #68]	; (80060b4 <HAL_ADC_ConfigChannel+0x12c>)
 8006070:	429d      	cmp	r5, r3
 8006072:	d001      	beq.n	8006078 <HAL_ADC_ConfigChannel+0xf0>
 8006074:	2d11      	cmp	r5, #17
 8006076:	d1c6      	bne.n	8006006 <HAL_ADC_ConfigChannel+0x7e>
      tmpADC_Common->CCR &= ~ADC_CCR_VBATE;
 8006078:	4b0d      	ldr	r3, [pc, #52]	; (80060b0 <HAL_ADC_ConfigChannel+0x128>)
 800607a:	685a      	ldr	r2, [r3, #4]
 800607c:	f422 0280 	bic.w	r2, r2, #4194304	; 0x400000
 8006080:	605a      	str	r2, [r3, #4]
    tmpADC_Common->CCR |= ADC_CCR_TSVREFE;
 8006082:	685a      	ldr	r2, [r3, #4]
 8006084:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8006088:	605a      	str	r2, [r3, #4]
    if((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR))
 800608a:	4b0a      	ldr	r3, [pc, #40]	; (80060b4 <HAL_ADC_ConfigChannel+0x12c>)
 800608c:	429d      	cmp	r5, r3
 800608e:	d1ba      	bne.n	8006006 <HAL_ADC_ConfigChannel+0x7e>
      counter = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000U));
 8006090:	4b09      	ldr	r3, [pc, #36]	; (80060b8 <HAL_ADC_ConfigChannel+0x130>)
 8006092:	4a0a      	ldr	r2, [pc, #40]	; (80060bc <HAL_ADC_ConfigChannel+0x134>)
 8006094:	681b      	ldr	r3, [r3, #0]
 8006096:	fbb3 f3f2 	udiv	r3, r3, r2
 800609a:	220a      	movs	r2, #10
 800609c:	4353      	muls	r3, r2
        counter--;
 800609e:	9301      	str	r3, [sp, #4]
      while(counter != 0U)
 80060a0:	9b01      	ldr	r3, [sp, #4]
 80060a2:	2b00      	cmp	r3, #0
 80060a4:	d0af      	beq.n	8006006 <HAL_ADC_ConfigChannel+0x7e>
        counter--;
 80060a6:	9b01      	ldr	r3, [sp, #4]
 80060a8:	3b01      	subs	r3, #1
 80060aa:	e7f8      	b.n	800609e <HAL_ADC_ConfigChannel+0x116>
 80060ac:	40012000 	.word	0x40012000
 80060b0:	40012300 	.word	0x40012300
 80060b4:	10000012 	.word	0x10000012
 80060b8:	2000007c 	.word	0x2000007c
 80060bc:	000f4240 	.word	0x000f4240

080060c0 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 80060c0:	4907      	ldr	r1, [pc, #28]	; (80060e0 <HAL_NVIC_SetPriorityGrouping+0x20>)
 80060c2:	68ca      	ldr	r2, [r1, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80060c4:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80060c8:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80060ca:	0412      	lsls	r2, r2, #16
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80060cc:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80060d0:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 80060d2:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 80060d4:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80060d8:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 80060dc:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 80060de:	4770      	bx	lr
 80060e0:	e000ed00 	.word	0xe000ed00

080060e4 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 80060e4:	4b16      	ldr	r3, [pc, #88]	; (8006140 <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 80060e6:	b530      	push	{r4, r5, lr}
 80060e8:	68dc      	ldr	r4, [r3, #12]
 80060ea:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80060ee:	f1c4 0507 	rsb	r5, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80060f2:	1d23      	adds	r3, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80060f4:	2d04      	cmp	r5, #4
 80060f6:	bf28      	it	cs
 80060f8:	2504      	movcs	r5, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80060fa:	2b06      	cmp	r3, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80060fc:	f04f 33ff 	mov.w	r3, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8006100:	bf8c      	ite	hi
 8006102:	3c03      	subhi	r4, #3
 8006104:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8006106:	fa03 f505 	lsl.w	r5, r3, r5
 800610a:	ea21 0105 	bic.w	r1, r1, r5
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 800610e:	40a3      	lsls	r3, r4
 8006110:	ea22 0203 	bic.w	r2, r2, r3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8006114:	40a1      	lsls	r1, r4
  if ((int32_t)(IRQn) >= 0)
 8006116:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8006118:	ea41 0302 	orr.w	r3, r1, r2
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800611c:	bfac      	ite	ge
 800611e:	f100 4060 	addge.w	r0, r0, #3758096384	; 0xe0000000
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8006122:	4a08      	ldrlt	r2, [pc, #32]	; (8006144 <HAL_NVIC_SetPriority+0x60>)
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8006124:	ea4f 1303 	mov.w	r3, r3, lsl #4
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8006128:	bfb8      	it	lt
 800612a:	f000 000f 	andlt.w	r0, r0, #15
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800612e:	b2db      	uxtb	r3, r3
 8006130:	bfaa      	itet	ge
 8006132:	f500 4061 	addge.w	r0, r0, #57600	; 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8006136:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8006138:	f880 3300 	strbge.w	r3, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 800613c:	bd30      	pop	{r4, r5, pc}
 800613e:	bf00      	nop
 8006140:	e000ed00 	.word	0xe000ed00
 8006144:	e000ed14 	.word	0xe000ed14

08006148 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8006148:	2800      	cmp	r0, #0
 800614a:	db08      	blt.n	800615e <HAL_NVIC_EnableIRQ+0x16>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800614c:	0942      	lsrs	r2, r0, #5
 800614e:	2301      	movs	r3, #1
 8006150:	f000 001f 	and.w	r0, r0, #31
 8006154:	fa03 f000 	lsl.w	r0, r3, r0
 8006158:	4b01      	ldr	r3, [pc, #4]	; (8006160 <HAL_NVIC_EnableIRQ+0x18>)
 800615a:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 800615e:	4770      	bx	lr
 8006160:	e000e100 	.word	0xe000e100

08006164 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8006164:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8006166:	4604      	mov	r4, r0
 8006168:	b150      	cbz	r0, 8006180 <HAL_CRC_Init+0x1c>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 800616a:	7943      	ldrb	r3, [r0, #5]
 800616c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006170:	b913      	cbnz	r3, 8006178 <HAL_CRC_Init+0x14>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 8006172:	7102      	strb	r2, [r0, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8006174:	f7fb fd32 	bl	8001bdc <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8006178:	2301      	movs	r3, #1
 800617a:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 800617c:	2000      	movs	r0, #0
}
 800617e:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8006180:	2001      	movs	r0, #1
 8006182:	e7fc      	b.n	800617e <HAL_CRC_Init+0x1a>

08006184 <HAL_DAC_Init>:
  * @param  hdac pointer to a DAC_HandleTypeDef structure that contains
  *         the configuration information for the specified DAC.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DAC_Init(DAC_HandleTypeDef* hdac)
{ 
 8006184:	b510      	push	{r4, lr}
  /* Check DAC handle */
  if(hdac == NULL)
 8006186:	4604      	mov	r4, r0
 8006188:	b168      	cbz	r0, 80061a6 <HAL_DAC_Init+0x22>
     return HAL_ERROR;
  }
  /* Check the parameters */
  assert_param(IS_DAC_ALL_INSTANCE(hdac->Instance));
  
  if(hdac->State == HAL_DAC_STATE_RESET)
 800618a:	7903      	ldrb	r3, [r0, #4]
 800618c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006190:	b913      	cbnz	r3, 8006198 <HAL_DAC_Init+0x14>
    {
      hdac->MspInitCallback               = HAL_DAC_MspInit;
    }
#endif /* USE_HAL_DAC_REGISTER_CALLBACKS */
    /* Allocate lock resource and initialize it */
    hdac->Lock = HAL_UNLOCKED;
 8006192:	7142      	strb	r2, [r0, #5]
#if (USE_HAL_DAC_REGISTER_CALLBACKS == 1)
    /* Init the low level hardware */
    hdac->MspInitCallback(hdac);
#else
    /* Init the low level hardware */
    HAL_DAC_MspInit(hdac);
 8006194:	f7fb fd3a 	bl	8001c0c <HAL_DAC_MspInit>
#endif /* USE_HAL_DAC_REGISTER_CALLBACKS */
  }
  
  /* Initialize the DAC state*/
  hdac->State = HAL_DAC_STATE_BUSY;
 8006198:	2302      	movs	r3, #2
 800619a:	7123      	strb	r3, [r4, #4]
  
  /* Set DAC error code to none */
  hdac->ErrorCode = HAL_DAC_ERROR_NONE;
 800619c:	2000      	movs	r0, #0
  
  /* Initialize the DAC state*/
  hdac->State = HAL_DAC_STATE_READY;
 800619e:	2301      	movs	r3, #1
  hdac->ErrorCode = HAL_DAC_ERROR_NONE;
 80061a0:	6120      	str	r0, [r4, #16]
  hdac->State = HAL_DAC_STATE_READY;
 80061a2:	7123      	strb	r3, [r4, #4]
  
  /* Return function status */
  return HAL_OK;
}
 80061a4:	bd10      	pop	{r4, pc}
     return HAL_ERROR;
 80061a6:	2001      	movs	r0, #1
 80061a8:	e7fc      	b.n	80061a4 <HAL_DAC_Init+0x20>

080061aa <HAL_DAC_Start>:
  *            @arg DAC_CHANNEL_1: DAC Channel1 selected
  *            @arg DAC_CHANNEL_2: DAC Channel2 selected
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DAC_Start(DAC_HandleTypeDef* hdac, uint32_t Channel)
{
 80061aa:	b510      	push	{r4, lr}
  
  /* Check the parameters */
  assert_param(IS_DAC_CHANNEL(Channel));
  
  /* Process locked */
  __HAL_LOCK(hdac);
 80061ac:	7943      	ldrb	r3, [r0, #5]
 80061ae:	2b01      	cmp	r3, #1
 80061b0:	f04f 0302 	mov.w	r3, #2
 80061b4:	d017      	beq.n	80061e6 <HAL_DAC_Start+0x3c>
  
  /* Change DAC state */
  hdac->State = HAL_DAC_STATE_BUSY;
 80061b6:	7103      	strb	r3, [r0, #4]
  
  /* Enable the Peripheral */
  __HAL_DAC_ENABLE(hdac, Channel);
 80061b8:	6803      	ldr	r3, [r0, #0]
 80061ba:	2201      	movs	r2, #1
 80061bc:	681c      	ldr	r4, [r3, #0]
 80061be:	408a      	lsls	r2, r1
 80061c0:	4322      	orrs	r2, r4
 80061c2:	601a      	str	r2, [r3, #0]
  
  if(Channel == DAC_CHANNEL_1)
 80061c4:	b989      	cbnz	r1, 80061ea <HAL_DAC_Start+0x40>
  {
    tmp1 = hdac->Instance->CR & DAC_CR_TEN1;
 80061c6:	6819      	ldr	r1, [r3, #0]
    tmp2 = hdac->Instance->CR & DAC_CR_TSEL1;
 80061c8:	681a      	ldr	r2, [r3, #0]
    /* Check if software trigger enabled */
    if((tmp1 ==  DAC_CR_TEN1) && (tmp2 ==  DAC_CR_TSEL1))
 80061ca:	074c      	lsls	r4, r1, #29
 80061cc:	d507      	bpl.n	80061de <HAL_DAC_Start+0x34>
    tmp2 = hdac->Instance->CR & DAC_CR_TSEL1;
 80061ce:	f002 0238 	and.w	r2, r2, #56	; 0x38
    if((tmp1 ==  DAC_CR_TEN1) && (tmp2 ==  DAC_CR_TSEL1))
 80061d2:	2a38      	cmp	r2, #56	; 0x38
 80061d4:	d103      	bne.n	80061de <HAL_DAC_Start+0x34>
    {
      /* Enable the selected DAC software conversion */
      hdac->Instance->SWTRIGR |= (uint32_t)DAC_SWTRIGR_SWTRIG1;
 80061d6:	685a      	ldr	r2, [r3, #4]
 80061d8:	f042 0201 	orr.w	r2, r2, #1
    tmp2 = hdac->Instance->CR & DAC_CR_TSEL2;    
    /* Check if software trigger enabled */
    if((tmp1 == DAC_CR_TEN2) && (tmp2 == DAC_CR_TSEL2))
    {
      /* Enable the selected DAC software conversion*/
      hdac->Instance->SWTRIGR |= (uint32_t)DAC_SWTRIGR_SWTRIG2;
 80061dc:	605a      	str	r2, [r3, #4]
    }
  }
  
  /* Change DAC state */
  hdac->State = HAL_DAC_STATE_READY;
 80061de:	2301      	movs	r3, #1
 80061e0:	7103      	strb	r3, [r0, #4]
  
  /* Process unlocked */
  __HAL_UNLOCK(hdac);
 80061e2:	2300      	movs	r3, #0
 80061e4:	7143      	strb	r3, [r0, #5]
  __HAL_LOCK(hdac);
 80061e6:	4618      	mov	r0, r3
    
  /* Return function status */
  return HAL_OK;
}
 80061e8:	bd10      	pop	{r4, pc}
    tmp1 = hdac->Instance->CR & DAC_CR_TEN2;
 80061ea:	6819      	ldr	r1, [r3, #0]
    tmp2 = hdac->Instance->CR & DAC_CR_TSEL2;    
 80061ec:	681a      	ldr	r2, [r3, #0]
    if((tmp1 == DAC_CR_TEN2) && (tmp2 == DAC_CR_TSEL2))
 80061ee:	0349      	lsls	r1, r1, #13
 80061f0:	d5f5      	bpl.n	80061de <HAL_DAC_Start+0x34>
    tmp2 = hdac->Instance->CR & DAC_CR_TSEL2;    
 80061f2:	f402 1260 	and.w	r2, r2, #3670016	; 0x380000
    if((tmp1 == DAC_CR_TEN2) && (tmp2 == DAC_CR_TSEL2))
 80061f6:	f5b2 1f60 	cmp.w	r2, #3670016	; 0x380000
 80061fa:	d1f0      	bne.n	80061de <HAL_DAC_Start+0x34>
      hdac->Instance->SWTRIGR |= (uint32_t)DAC_SWTRIGR_SWTRIG2;
 80061fc:	685a      	ldr	r2, [r3, #4]
 80061fe:	f042 0202 	orr.w	r2, r2, #2
 8006202:	e7eb      	b.n	80061dc <HAL_DAC_Start+0x32>

08006204 <HAL_DAC_ConfigChannel>:
  *            @arg DAC_CHANNEL_1: DAC Channel1 selected
  *            @arg DAC_CHANNEL_2: DAC Channel2 selected
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DAC_ConfigChannel(DAC_HandleTypeDef* hdac, DAC_ChannelConfTypeDef* sConfig, uint32_t Channel)
{
 8006204:	b530      	push	{r4, r5, lr}
  assert_param(IS_DAC_TRIGGER(sConfig->DAC_Trigger));
  assert_param(IS_DAC_OUTPUT_BUFFER_STATE(sConfig->DAC_OutputBuffer));
  assert_param(IS_DAC_CHANNEL(Channel));
  
  /* Process locked */
  __HAL_LOCK(hdac);
 8006206:	7943      	ldrb	r3, [r0, #5]
 8006208:	2b01      	cmp	r3, #1
 800620a:	f04f 0302 	mov.w	r3, #2
 800620e:	d018      	beq.n	8006242 <HAL_DAC_ConfigChannel+0x3e>
  
  /* Change DAC state */
  hdac->State = HAL_DAC_STATE_BUSY;
  
  /* Get the DAC CR value */
  tmpreg1 = hdac->Instance->CR;
 8006210:	6804      	ldr	r4, [r0, #0]
  hdac->State = HAL_DAC_STATE_BUSY;
 8006212:	7103      	strb	r3, [r0, #4]
  tmpreg1 = hdac->Instance->CR;
 8006214:	6823      	ldr	r3, [r4, #0]
  /* Clear BOFFx, TENx, TSELx, WAVEx and MAMPx bits */
  tmpreg1 &= ~(((uint32_t)(DAC_CR_MAMP1 | DAC_CR_WAVE1 | DAC_CR_TSEL1 | DAC_CR_TEN1 | DAC_CR_BOFF1)) << Channel);
 8006216:	f640 75fe 	movw	r5, #4094	; 0xffe
 800621a:	4095      	lsls	r5, r2
 800621c:	ea23 0505 	bic.w	r5, r3, r5
  /* Configure for the selected DAC channel: buffer output, trigger */
  /* Set TSELx and TENx bits according to DAC_Trigger value */
  /* Set BOFFx bit according to DAC_OutputBuffer value */   
  tmpreg2 = (sConfig->DAC_Trigger | sConfig->DAC_OutputBuffer);
 8006220:	e9d1 3100 	ldrd	r3, r1, [r1]
 8006224:	430b      	orrs	r3, r1
  /* Calculate CR register value depending on DAC_Channel */
  tmpreg1 |= tmpreg2 << Channel;
 8006226:	4093      	lsls	r3, r2
 8006228:	432b      	orrs	r3, r5
  /* Write to DAC CR */
  hdac->Instance->CR = tmpreg1;
 800622a:	6023      	str	r3, [r4, #0]
  /* Disable wave generation */
  hdac->Instance->CR &= ~(DAC_CR_WAVE1 << Channel);
 800622c:	6823      	ldr	r3, [r4, #0]
 800622e:	21c0      	movs	r1, #192	; 0xc0
 8006230:	fa01 f202 	lsl.w	r2, r1, r2
 8006234:	ea23 0202 	bic.w	r2, r3, r2
  
  /* Change DAC state */
  hdac->State = HAL_DAC_STATE_READY;
 8006238:	2301      	movs	r3, #1
  hdac->Instance->CR &= ~(DAC_CR_WAVE1 << Channel);
 800623a:	6022      	str	r2, [r4, #0]
  hdac->State = HAL_DAC_STATE_READY;
 800623c:	7103      	strb	r3, [r0, #4]
  
  /* Process unlocked */
  __HAL_UNLOCK(hdac);
 800623e:	2300      	movs	r3, #0
 8006240:	7143      	strb	r3, [r0, #5]
  __HAL_LOCK(hdac);
 8006242:	4618      	mov	r0, r3
  
  /* Return function status */
  return HAL_OK;
}
 8006244:	bd30      	pop	{r4, r5, pc}

08006246 <HAL_DAC_SetValue>:
  *            @arg DAC_ALIGN_12B_R: 12bit right data alignment selected
  * @param  Data Data to be loaded in the selected data holding register.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DAC_SetValue(DAC_HandleTypeDef* hdac, uint32_t Channel, uint32_t Alignment, uint32_t Data)
{  
 8006246:	b513      	push	{r0, r1, r4, lr}
  /* Check the parameters */
  assert_param(IS_DAC_CHANNEL(Channel));
  assert_param(IS_DAC_ALIGN(Alignment));
  assert_param(IS_DAC_DATA(Data));
  
  tmp = (uint32_t)hdac->Instance; 
 8006248:	6800      	ldr	r0, [r0, #0]
  __IO uint32_t tmp = 0U;
 800624a:	2400      	movs	r4, #0
 800624c:	9401      	str	r4, [sp, #4]
  tmp = (uint32_t)hdac->Instance; 
 800624e:	9001      	str	r0, [sp, #4]
  if(Channel == DAC_CHANNEL_1)
 8006250:	b941      	cbnz	r1, 8006264 <HAL_DAC_SetValue+0x1e>
  {
    tmp += DAC_DHR12R1_ALIGNMENT(Alignment);
 8006252:	9901      	ldr	r1, [sp, #4]
 8006254:	3108      	adds	r1, #8
  }
  else
  {
    tmp += DAC_DHR12R2_ALIGNMENT(Alignment);
 8006256:	440a      	add	r2, r1
 8006258:	9201      	str	r2, [sp, #4]
  }

  /* Set the DAC channel1 selected data holding register */
  *(__IO uint32_t *) tmp = Data;
 800625a:	9a01      	ldr	r2, [sp, #4]
  
  /* Return function status */
  return HAL_OK;
}
 800625c:	2000      	movs	r0, #0
  *(__IO uint32_t *) tmp = Data;
 800625e:	6013      	str	r3, [r2, #0]
}
 8006260:	b002      	add	sp, #8
 8006262:	bd10      	pop	{r4, pc}
    tmp += DAC_DHR12R2_ALIGNMENT(Alignment);
 8006264:	9901      	ldr	r1, [sp, #4]
 8006266:	3114      	adds	r1, #20
 8006268:	e7f5      	b.n	8006256 <HAL_DAC_SetValue+0x10>

0800626a <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 800626a:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if(hdma2d == NULL)
 800626c:	4604      	mov	r4, r0
 800626e:	b330      	cbz	r0, 80062be <HAL_DMA2D_Init+0x54>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if(hdma2d->State == HAL_DMA2D_STATE_RESET)
 8006270:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8006274:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006278:	b91b      	cbnz	r3, 8006282 <HAL_DMA2D_Init+0x18>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 800627a:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 800627e:	f7fb fcf7 	bl	8001c70 <HAL_DMA2D_MspInit>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8006282:	6822      	ldr	r2, [r4, #0]
 8006284:	6861      	ldr	r1, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8006286:	2302      	movs	r3, #2
 8006288:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 800628c:	6813      	ldr	r3, [r2, #0]
 800628e:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8006292:	430b      	orrs	r3, r1
 8006294:	6013      	str	r3, [r2, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 8006296:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8006298:	68a1      	ldr	r1, [r4, #8]
 800629a:	f023 0307 	bic.w	r3, r3, #7
 800629e:	430b      	orrs	r3, r1
 80062a0:	6353      	str	r3, [r2, #52]	; 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 80062a2:	6c13      	ldr	r3, [r2, #64]	; 0x40
 80062a4:	68e1      	ldr	r1, [r4, #12]
 80062a6:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 80062aa:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 80062ae:	430b      	orrs	r3, r1
 80062b0:	6413      	str	r3, [r2, #64]	; 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 80062b2:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 80062b4:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 80062b6:	63e0      	str	r0, [r4, #60]	; 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 80062b8:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

  return HAL_OK;
}
 80062bc:	bd10      	pop	{r4, pc}
     return HAL_ERROR;
 80062be:	2001      	movs	r0, #1
 80062c0:	e7fc      	b.n	80062bc <HAL_DMA2D_Init+0x52>

080062c2 <HAL_DMA2D_LineEventCallback>:
 80062c2:	4770      	bx	lr

080062c4 <HAL_DMA2D_CLUTLoadingCpltCallback>:
 80062c4:	4770      	bx	lr

080062c6 <HAL_DMA2D_IRQHandler>:
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 80062c6:	6803      	ldr	r3, [r0, #0]
{
 80062c8:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 80062ca:	685e      	ldr	r6, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 80062cc:	681d      	ldr	r5, [r3, #0]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 80062ce:	07f2      	lsls	r2, r6, #31
{
 80062d0:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 80062d2:	d514      	bpl.n	80062fe <HAL_DMA2D_IRQHandler+0x38>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
 80062d4:	05e9      	lsls	r1, r5, #23
 80062d6:	d512      	bpl.n	80062fe <HAL_DMA2D_IRQHandler+0x38>
    {
      /* Disable the transfer Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 80062d8:	681a      	ldr	r2, [r3, #0]
 80062da:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 80062de:	601a      	str	r2, [r3, #0]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 80062e0:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 80062e2:	f042 0201 	orr.w	r2, r2, #1
 80062e6:	63c2      	str	r2, [r0, #60]	; 0x3c

      /* Clear the transfer error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 80062e8:	2201      	movs	r2, #1
 80062ea:	609a      	str	r2, [r3, #8]

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 80062ec:	2304      	movs	r3, #4
 80062ee:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 80062f2:	2300      	movs	r3, #0
 80062f4:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38

      if(hdma2d->XferErrorCallback != NULL)
 80062f8:	6943      	ldr	r3, [r0, #20]
 80062fa:	b103      	cbz	r3, 80062fe <HAL_DMA2D_IRQHandler+0x38>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 80062fc:	4798      	blx	r3
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 80062fe:	06b2      	lsls	r2, r6, #26
 8006300:	d516      	bpl.n	8006330 <HAL_DMA2D_IRQHandler+0x6a>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
 8006302:	04ab      	lsls	r3, r5, #18
 8006304:	d514      	bpl.n	8006330 <HAL_DMA2D_IRQHandler+0x6a>
    {
      /* Disable the Configuration Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 8006306:	6823      	ldr	r3, [r4, #0]
 8006308:	681a      	ldr	r2, [r3, #0]
 800630a:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800630e:	601a      	str	r2, [r3, #0]

      /* Clear the Configuration error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 8006310:	2220      	movs	r2, #32
 8006312:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 8006314:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8006316:	f043 0302 	orr.w	r3, r3, #2
 800631a:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800631c:	2304      	movs	r3, #4
 800631e:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8006322:	2300      	movs	r3, #0
 8006324:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if(hdma2d->XferErrorCallback != NULL)
 8006328:	6963      	ldr	r3, [r4, #20]
 800632a:	b10b      	cbz	r3, 8006330 <HAL_DMA2D_IRQHandler+0x6a>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 800632c:	4620      	mov	r0, r4
 800632e:	4798      	blx	r3
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 8006330:	0730      	lsls	r0, r6, #28
 8006332:	d516      	bpl.n	8006362 <HAL_DMA2D_IRQHandler+0x9c>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
 8006334:	0529      	lsls	r1, r5, #20
 8006336:	d514      	bpl.n	8006362 <HAL_DMA2D_IRQHandler+0x9c>
    {
      /* Disable the CLUT access error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 8006338:	6823      	ldr	r3, [r4, #0]
 800633a:	681a      	ldr	r2, [r3, #0]
 800633c:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8006340:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT access error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 8006342:	2208      	movs	r2, #8
 8006344:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 8006346:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8006348:	f043 0304 	orr.w	r3, r3, #4
 800634c:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800634e:	2304      	movs	r3, #4
 8006350:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8006354:	2300      	movs	r3, #0
 8006356:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if(hdma2d->XferErrorCallback != NULL)
 800635a:	6963      	ldr	r3, [r4, #20]
 800635c:	b10b      	cbz	r3, 8006362 <HAL_DMA2D_IRQHandler+0x9c>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 800635e:	4620      	mov	r0, r4
 8006360:	4798      	blx	r3
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 8006362:	0772      	lsls	r2, r6, #29
 8006364:	d50b      	bpl.n	800637e <HAL_DMA2D_IRQHandler+0xb8>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
 8006366:	056b      	lsls	r3, r5, #21
 8006368:	d509      	bpl.n	800637e <HAL_DMA2D_IRQHandler+0xb8>
    {
      /* Disable the transfer watermark interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 800636a:	6823      	ldr	r3, [r4, #0]
 800636c:	681a      	ldr	r2, [r3, #0]
 800636e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006372:	601a      	str	r2, [r3, #0]

      /* Clear the transfer watermark flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 8006374:	2204      	movs	r2, #4
 8006376:	609a      	str	r2, [r3, #8]

      /* Transfer watermark Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->LineEventCallback(hdma2d);
#else
      HAL_DMA2D_LineEventCallback(hdma2d);
 8006378:	4620      	mov	r0, r4
 800637a:	f7ff ffa2 	bl	80062c2 <HAL_DMA2D_LineEventCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 800637e:	07b0      	lsls	r0, r6, #30
 8006380:	d514      	bpl.n	80063ac <HAL_DMA2D_IRQHandler+0xe6>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
 8006382:	05a9      	lsls	r1, r5, #22
 8006384:	d512      	bpl.n	80063ac <HAL_DMA2D_IRQHandler+0xe6>
    {
      /* Disable the transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 8006386:	6823      	ldr	r3, [r4, #0]
 8006388:	681a      	ldr	r2, [r3, #0]
 800638a:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 800638e:	601a      	str	r2, [r3, #0]

      /* Clear the transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 8006390:	2202      	movs	r2, #2
 8006392:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8006394:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8006396:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8006398:	2301      	movs	r3, #1
 800639a:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 800639e:	2300      	movs	r3, #0
 80063a0:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if(hdma2d->XferCpltCallback != NULL)
 80063a4:	6923      	ldr	r3, [r4, #16]
 80063a6:	b10b      	cbz	r3, 80063ac <HAL_DMA2D_IRQHandler+0xe6>
      {
        /* Transfer complete Callback */
        hdma2d->XferCpltCallback(hdma2d);
 80063a8:	4620      	mov	r0, r4
 80063aa:	4798      	blx	r3
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 80063ac:	06f2      	lsls	r2, r6, #27
 80063ae:	d513      	bpl.n	80063d8 <HAL_DMA2D_IRQHandler+0x112>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
 80063b0:	04eb      	lsls	r3, r5, #19
 80063b2:	d511      	bpl.n	80063d8 <HAL_DMA2D_IRQHandler+0x112>
    {
      /* Disable the CLUT transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 80063b4:	6823      	ldr	r3, [r4, #0]
 80063b6:	681a      	ldr	r2, [r3, #0]
 80063b8:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 80063bc:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 80063be:	2210      	movs	r2, #16
 80063c0:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 80063c2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80063c4:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 80063c6:	2301      	movs	r3, #1
 80063c8:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 80063cc:	2300      	movs	r3, #0
 80063ce:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      /* CLUT Transfer complete Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->CLUTLoadingCpltCallback(hdma2d);
#else
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 80063d2:	4620      	mov	r0, r4
 80063d4:	f7ff ff76 	bl	80062c4 <HAL_DMA2D_CLUTLoadingCpltCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
 80063d8:	bd70      	pop	{r4, r5, r6, pc}
	...

080063dc <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 80063dc:	b5f0      	push	{r4, r5, r6, r7, lr}
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 80063de:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 80063e2:	2b01      	cmp	r3, #1
 80063e4:	f04f 0302 	mov.w	r3, #2
 80063e8:	d02b      	beq.n	8006442 <HAL_DMA2D_ConfigLayer+0x66>
 80063ea:	2201      	movs	r2, #1

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 80063ec:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  __HAL_LOCK(hdma2d);
 80063f0:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 80063f4:	eb00 1301 	add.w	r3, r0, r1, lsl #4
 80063f8:	e9d3 4207 	ldrd	r4, r2, [r3, #28]
 80063fc:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 80063fe:	4f18      	ldr	r7, [pc, #96]	; (8006460 <HAL_DMA2D_ConfigLayer+0x84>)
 8006400:	ea44 4202 	orr.w	r2, r4, r2, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8006404:	3c09      	subs	r4, #9
 8006406:	2c01      	cmp	r4, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 8006408:	bf9c      	itt	ls
 800640a:	f005 437f 	andls.w	r3, r5, #4278190080	; 0xff000000
 800640e:	431a      	orrls	r2, r3
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8006410:	ea4f 1601 	mov.w	r6, r1, lsl #4

  /* Configure the background DMA2D layer */
  if(LayerIdx == DMA2D_BACKGROUND_LAYER)
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8006414:	6803      	ldr	r3, [r0, #0]
    regValue |=  (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 8006416:	bf88      	it	hi
 8006418:	ea42 6205 	orrhi.w	r2, r2, r5, lsl #24
  if(LayerIdx == DMA2D_BACKGROUND_LAYER)
 800641c:	b999      	cbnz	r1, 8006446 <HAL_DMA2D_ConfigLayer+0x6a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 800641e:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8006420:	4039      	ands	r1, r7
 8006422:	430a      	orrs	r2, r1
 8006424:	625a      	str	r2, [r3, #36]	; 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8006426:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8006428:	6982      	ldr	r2, [r0, #24]
 800642a:	619a      	str	r2, [r3, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800642c:	d803      	bhi.n	8006436 <HAL_DMA2D_ConfigLayer+0x5a>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE|DMA2D_BGCOLR_GREEN|DMA2D_BGCOLR_RED));
 800642e:	6a42      	ldr	r2, [r0, #36]	; 0x24
 8006430:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 8006434:	629a      	str	r2, [r3, #40]	; 0x28
    {
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE|DMA2D_FGCOLR_GREEN|DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8006436:	2301      	movs	r3, #1
 8006438:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 800643c:	2300      	movs	r3, #0
 800643e:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
  __HAL_LOCK(hdma2d);
 8006442:	4618      	mov	r0, r3

  return HAL_OK;
}
 8006444:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8006446:	69d9      	ldr	r1, [r3, #28]
 8006448:	4039      	ands	r1, r7
 800644a:	430a      	orrs	r2, r1
 800644c:	61da      	str	r2, [r3, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 800644e:	1982      	adds	r2, r0, r6
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8006450:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8006452:	6992      	ldr	r2, [r2, #24]
 8006454:	611a      	str	r2, [r3, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE|DMA2D_FGCOLR_GREEN|DMA2D_FGCOLR_RED));
 8006456:	bf9c      	itt	ls
 8006458:	f025 457f 	bicls.w	r5, r5, #4278190080	; 0xff000000
 800645c:	621d      	strls	r5, [r3, #32]
 800645e:	e7ea      	b.n	8006436 <HAL_DMA2D_ConfigLayer+0x5a>
 8006460:	00fcfff0 	.word	0x00fcfff0

08006464 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8006464:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8006468:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 800662c <HAL_GPIO_Init+0x1c8>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 800646c:	4a6d      	ldr	r2, [pc, #436]	; (8006624 <HAL_GPIO_Init+0x1c0>)
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800646e:	f8df 91c0 	ldr.w	r9, [pc, #448]	; 8006630 <HAL_GPIO_Init+0x1cc>
  for(position = 0U; position < GPIO_NUMBER; position++)
 8006472:	2300      	movs	r3, #0
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8006474:	680d      	ldr	r5, [r1, #0]
    ioposition = 0x01U << position;
 8006476:	2401      	movs	r4, #1
 8006478:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800647a:	ea04 0605 	and.w	r6, r4, r5
    if(iocurrent == ioposition)
 800647e:	43ac      	bics	r4, r5
 8006480:	f040 80b7 	bne.w	80065f2 <HAL_GPIO_Init+0x18e>
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8006484:	684c      	ldr	r4, [r1, #4]
 8006486:	f024 0c10 	bic.w	ip, r4, #16
 800648a:	ea4f 0e43 	mov.w	lr, r3, lsl #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800648e:	2503      	movs	r5, #3
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8006490:	f10c 37ff 	add.w	r7, ip, #4294967295
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8006494:	fa05 f50e 	lsl.w	r5, r5, lr
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8006498:	2f01      	cmp	r7, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800649a:	ea6f 0505 	mvn.w	r5, r5
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 800649e:	d811      	bhi.n	80064c4 <HAL_GPIO_Init+0x60>
        temp = GPIOx->OSPEEDR; 
 80064a0:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80064a2:	ea07 0a05 	and.w	sl, r7, r5
        temp |= (GPIO_Init->Speed << (position * 2U));
 80064a6:	68cf      	ldr	r7, [r1, #12]
 80064a8:	fa07 f70e 	lsl.w	r7, r7, lr
 80064ac:	ea47 070a 	orr.w	r7, r7, sl
        GPIOx->OSPEEDR = temp;
 80064b0:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 80064b2:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 80064b4:	ea27 0a06 	bic.w	sl, r7, r6
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 80064b8:	f3c4 1700 	ubfx	r7, r4, #4, #1
 80064bc:	409f      	lsls	r7, r3
 80064be:	ea47 070a 	orr.w	r7, r7, sl
        GPIOx->OTYPER = temp;
 80064c2:	6047      	str	r7, [r0, #4]
      temp = GPIOx->PUPDR;
 80064c4:	68c7      	ldr	r7, [r0, #12]
      temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 80064c6:	ea07 0a05 	and.w	sl, r7, r5
      temp |= ((GPIO_Init->Pull) << (position * 2U));
 80064ca:	688f      	ldr	r7, [r1, #8]
 80064cc:	fa07 f70e 	lsl.w	r7, r7, lr
 80064d0:	ea47 070a 	orr.w	r7, r7, sl
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 80064d4:	f1bc 0f02 	cmp.w	ip, #2
      GPIOx->PUPDR = temp;
 80064d8:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 80064da:	d116      	bne.n	800650a <HAL_GPIO_Init+0xa6>
        temp = GPIOx->AFR[position >> 3U];
 80064dc:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
 80064e0:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80064e4:	f003 0b07 	and.w	fp, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 80064e8:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80064ec:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 80064f0:	f04f 0c0f 	mov.w	ip, #15
 80064f4:	fa0c fc0b 	lsl.w	ip, ip, fp
 80064f8:	ea27 0c0c 	bic.w	ip, r7, ip
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 80064fc:	690f      	ldr	r7, [r1, #16]
 80064fe:	fa07 f70b 	lsl.w	r7, r7, fp
 8006502:	ea47 070c 	orr.w	r7, r7, ip
        GPIOx->AFR[position >> 3U] = temp;
 8006506:	f8ca 7020 	str.w	r7, [sl, #32]
      temp = GPIOx->MODER;
 800650a:	6807      	ldr	r7, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 800650c:	403d      	ands	r5, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 800650e:	f004 0703 	and.w	r7, r4, #3
 8006512:	fa07 f70e 	lsl.w	r7, r7, lr
 8006516:	433d      	orrs	r5, r7
      GPIOx->MODER = temp;
 8006518:	6005      	str	r5, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 800651a:	00e5      	lsls	r5, r4, #3
 800651c:	d569      	bpl.n	80065f2 <HAL_GPIO_Init+0x18e>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800651e:	f04f 0b00 	mov.w	fp, #0
 8006522:	f8cd b004 	str.w	fp, [sp, #4]
 8006526:	f8d8 7044 	ldr.w	r7, [r8, #68]	; 0x44
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800652a:	4d3f      	ldr	r5, [pc, #252]	; (8006628 <HAL_GPIO_Init+0x1c4>)
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800652c:	f447 4780 	orr.w	r7, r7, #16384	; 0x4000
 8006530:	f8c8 7044 	str.w	r7, [r8, #68]	; 0x44
 8006534:	f8d8 7044 	ldr.w	r7, [r8, #68]	; 0x44
 8006538:	f407 4780 	and.w	r7, r7, #16384	; 0x4000
 800653c:	9701      	str	r7, [sp, #4]
 800653e:	9f01      	ldr	r7, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
 8006540:	f023 0703 	bic.w	r7, r3, #3
 8006544:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 8006548:	f507 379c 	add.w	r7, r7, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800654c:	f003 0e03 	and.w	lr, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 8006550:	f8d7 a008 	ldr.w	sl, [r7, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8006554:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 8006558:	f04f 0c0f 	mov.w	ip, #15
 800655c:	fa0c fc0e 	lsl.w	ip, ip, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8006560:	42a8      	cmp	r0, r5
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8006562:	ea2a 0c0c 	bic.w	ip, sl, ip
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8006566:	d04b      	beq.n	8006600 <HAL_GPIO_Init+0x19c>
 8006568:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800656c:	42a8      	cmp	r0, r5
 800656e:	d049      	beq.n	8006604 <HAL_GPIO_Init+0x1a0>
 8006570:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8006574:	42a8      	cmp	r0, r5
 8006576:	d047      	beq.n	8006608 <HAL_GPIO_Init+0x1a4>
 8006578:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800657c:	42a8      	cmp	r0, r5
 800657e:	d045      	beq.n	800660c <HAL_GPIO_Init+0x1a8>
 8006580:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8006584:	42a8      	cmp	r0, r5
 8006586:	d043      	beq.n	8006610 <HAL_GPIO_Init+0x1ac>
 8006588:	4548      	cmp	r0, r9
 800658a:	d043      	beq.n	8006614 <HAL_GPIO_Init+0x1b0>
 800658c:	f505 6500 	add.w	r5, r5, #2048	; 0x800
 8006590:	42a8      	cmp	r0, r5
 8006592:	d041      	beq.n	8006618 <HAL_GPIO_Init+0x1b4>
 8006594:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8006598:	42a8      	cmp	r0, r5
 800659a:	d03f      	beq.n	800661c <HAL_GPIO_Init+0x1b8>
 800659c:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 80065a0:	42a8      	cmp	r0, r5
 80065a2:	d03d      	beq.n	8006620 <HAL_GPIO_Init+0x1bc>
 80065a4:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 80065a8:	42a8      	cmp	r0, r5
 80065aa:	bf0c      	ite	eq
 80065ac:	2509      	moveq	r5, #9
 80065ae:	250a      	movne	r5, #10
 80065b0:	fa05 f50e 	lsl.w	r5, r5, lr
 80065b4:	ea45 050c 	orr.w	r5, r5, ip
        SYSCFG->EXTICR[position >> 2U] = temp;
 80065b8:	60bd      	str	r5, [r7, #8]
        temp = EXTI->IMR;
 80065ba:	6815      	ldr	r5, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
 80065bc:	43f7      	mvns	r7, r6
        if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 80065be:	f414 3f80 	tst.w	r4, #65536	; 0x10000
        temp &= ~((uint32_t)iocurrent);
 80065c2:	bf0c      	ite	eq
 80065c4:	403d      	andeq	r5, r7
        {
          temp |= iocurrent;
 80065c6:	4335      	orrne	r5, r6
        }
        EXTI->IMR = temp;
 80065c8:	6015      	str	r5, [r2, #0]

        temp = EXTI->EMR;
 80065ca:	6855      	ldr	r5, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 80065cc:	f414 3f00 	tst.w	r4, #131072	; 0x20000
        temp &= ~((uint32_t)iocurrent);
 80065d0:	bf0c      	ite	eq
 80065d2:	403d      	andeq	r5, r7
        {
          temp |= iocurrent;
 80065d4:	4335      	orrne	r5, r6
        }
        EXTI->EMR = temp;
 80065d6:	6055      	str	r5, [r2, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 80065d8:	6895      	ldr	r5, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 80065da:	f414 1f80 	tst.w	r4, #1048576	; 0x100000
        temp &= ~((uint32_t)iocurrent);
 80065de:	bf0c      	ite	eq
 80065e0:	403d      	andeq	r5, r7
        {
          temp |= iocurrent;
 80065e2:	4335      	orrne	r5, r6
        }
        EXTI->RTSR = temp;
 80065e4:	6095      	str	r5, [r2, #8]

        temp = EXTI->FTSR;
 80065e6:	68d5      	ldr	r5, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 80065e8:	02a4      	lsls	r4, r4, #10
        temp &= ~((uint32_t)iocurrent);
 80065ea:	bf54      	ite	pl
 80065ec:	403d      	andpl	r5, r7
        {
          temp |= iocurrent;
 80065ee:	4335      	orrmi	r5, r6
        }
        EXTI->FTSR = temp;
 80065f0:	60d5      	str	r5, [r2, #12]
  for(position = 0U; position < GPIO_NUMBER; position++)
 80065f2:	3301      	adds	r3, #1
 80065f4:	2b10      	cmp	r3, #16
 80065f6:	f47f af3d 	bne.w	8006474 <HAL_GPIO_Init+0x10>
      }
    }
  }
}
 80065fa:	b003      	add	sp, #12
 80065fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8006600:	465d      	mov	r5, fp
 8006602:	e7d5      	b.n	80065b0 <HAL_GPIO_Init+0x14c>
 8006604:	2501      	movs	r5, #1
 8006606:	e7d3      	b.n	80065b0 <HAL_GPIO_Init+0x14c>
 8006608:	2502      	movs	r5, #2
 800660a:	e7d1      	b.n	80065b0 <HAL_GPIO_Init+0x14c>
 800660c:	2503      	movs	r5, #3
 800660e:	e7cf      	b.n	80065b0 <HAL_GPIO_Init+0x14c>
 8006610:	2504      	movs	r5, #4
 8006612:	e7cd      	b.n	80065b0 <HAL_GPIO_Init+0x14c>
 8006614:	2505      	movs	r5, #5
 8006616:	e7cb      	b.n	80065b0 <HAL_GPIO_Init+0x14c>
 8006618:	2506      	movs	r5, #6
 800661a:	e7c9      	b.n	80065b0 <HAL_GPIO_Init+0x14c>
 800661c:	2507      	movs	r5, #7
 800661e:	e7c7      	b.n	80065b0 <HAL_GPIO_Init+0x14c>
 8006620:	2508      	movs	r5, #8
 8006622:	e7c5      	b.n	80065b0 <HAL_GPIO_Init+0x14c>
 8006624:	40013c00 	.word	0x40013c00
 8006628:	40020000 	.word	0x40020000
 800662c:	40023800 	.word	0x40023800
 8006630:	40021400 	.word	0x40021400

08006634 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8006634:	b10a      	cbz	r2, 800663a <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8006636:	6181      	str	r1, [r0, #24]
  }
}
 8006638:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800663a:	0409      	lsls	r1, r1, #16
 800663c:	e7fb      	b.n	8006636 <HAL_GPIO_WritePin+0x2>

0800663e <I2C_IsAcknowledgeFailed>:
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800663e:	6801      	ldr	r1, [r0, #0]
 8006640:	694b      	ldr	r3, [r1, #20]
 8006642:	f413 6380 	ands.w	r3, r3, #1024	; 0x400
 8006646:	f04f 0200 	mov.w	r2, #0
 800664a:	d010      	beq.n	800666e <I2C_IsAcknowledgeFailed+0x30>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800664c:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 8006650:	614b      	str	r3, [r1, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
    hi2c->State               = HAL_I2C_STATE_READY;
 8006652:	2320      	movs	r3, #32
    hi2c->PreviousState       = I2C_STATE_NONE;
 8006654:	6302      	str	r2, [r0, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8006656:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800665a:	f880 203e 	strb.w	r2, [r0, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800665e:	6c03      	ldr	r3, [r0, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8006660:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8006664:	f043 0304 	orr.w	r3, r3, #4
 8006668:	6403      	str	r3, [r0, #64]	; 0x40

    return HAL_ERROR;
 800666a:	2001      	movs	r0, #1
 800666c:	4770      	bx	lr
  }
  return HAL_OK;
 800666e:	4618      	mov	r0, r3
}
 8006670:	4770      	bx	lr

08006672 <I2C_WaitOnFlagUntilTimeout>:
{
 8006672:	e92d 46f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r9, sl, lr}
 8006676:	4606      	mov	r6, r0
 8006678:	460f      	mov	r7, r1
 800667a:	4691      	mov	r9, r2
 800667c:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800667e:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 8006682:	6833      	ldr	r3, [r6, #0]
 8006684:	f1ba 0f01 	cmp.w	sl, #1
 8006688:	bf0c      	ite	eq
 800668a:	695c      	ldreq	r4, [r3, #20]
 800668c:	699c      	ldrne	r4, [r3, #24]
 800668e:	ea27 0404 	bic.w	r4, r7, r4
 8006692:	b2a4      	uxth	r4, r4
 8006694:	fab4 f484 	clz	r4, r4
 8006698:	0964      	lsrs	r4, r4, #5
 800669a:	45a1      	cmp	r9, r4
 800669c:	d001      	beq.n	80066a2 <I2C_WaitOnFlagUntilTimeout+0x30>
  return HAL_OK;
 800669e:	2000      	movs	r0, #0
 80066a0:	e017      	b.n	80066d2 <I2C_WaitOnFlagUntilTimeout+0x60>
    if (Timeout != HAL_MAX_DELAY)
 80066a2:	1c6a      	adds	r2, r5, #1
 80066a4:	d0ee      	beq.n	8006684 <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80066a6:	f7ff fb37 	bl	8005d18 <HAL_GetTick>
 80066aa:	9b08      	ldr	r3, [sp, #32]
 80066ac:	1ac0      	subs	r0, r0, r3
 80066ae:	42a8      	cmp	r0, r5
 80066b0:	d801      	bhi.n	80066b6 <I2C_WaitOnFlagUntilTimeout+0x44>
 80066b2:	2d00      	cmp	r5, #0
 80066b4:	d1e5      	bne.n	8006682 <I2C_WaitOnFlagUntilTimeout+0x10>
        hi2c->PreviousState     = I2C_STATE_NONE;
 80066b6:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 80066b8:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 80066ba:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 80066bc:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 80066c0:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80066c4:	6c32      	ldr	r2, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 80066c6:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80066ca:	f042 0220 	orr.w	r2, r2, #32
 80066ce:	6432      	str	r2, [r6, #64]	; 0x40
        return HAL_ERROR;
 80066d0:	2001      	movs	r0, #1
}
 80066d2:	e8bd 86f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r9, sl, pc}

080066d6 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
{
 80066d6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80066da:	4604      	mov	r4, r0
 80066dc:	460f      	mov	r7, r1
 80066de:	4616      	mov	r6, r2
 80066e0:	4698      	mov	r8, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 80066e2:	6825      	ldr	r5, [r4, #0]
 80066e4:	6968      	ldr	r0, [r5, #20]
 80066e6:	ea27 0000 	bic.w	r0, r7, r0
 80066ea:	b280      	uxth	r0, r0
 80066ec:	b1b8      	cbz	r0, 800671e <I2C_WaitOnMasterAddressFlagUntilTimeout+0x48>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80066ee:	696b      	ldr	r3, [r5, #20]
 80066f0:	055a      	lsls	r2, r3, #21
 80066f2:	d516      	bpl.n	8006722 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4c>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80066f4:	682b      	ldr	r3, [r5, #0]
 80066f6:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80066fa:	602b      	str	r3, [r5, #0]
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80066fc:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 8006700:	616b      	str	r3, [r5, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8006702:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8006704:	2300      	movs	r3, #0
 8006706:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8006708:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800670c:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8006710:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8006712:	f042 0204 	orr.w	r2, r2, #4
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8006716:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8006718:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        return HAL_ERROR;
 800671c:	2001      	movs	r0, #1
}
 800671e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (Timeout != HAL_MAX_DELAY)
 8006722:	1c73      	adds	r3, r6, #1
 8006724:	d0de      	beq.n	80066e4 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8006726:	f7ff faf7 	bl	8005d18 <HAL_GetTick>
 800672a:	eba0 0008 	sub.w	r0, r0, r8
 800672e:	42b0      	cmp	r0, r6
 8006730:	d801      	bhi.n	8006736 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x60>
 8006732:	2e00      	cmp	r6, #0
 8006734:	d1d5      	bne.n	80066e2 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8006736:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8006738:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800673a:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800673c:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8006740:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8006744:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8006746:	f042 0220 	orr.w	r2, r2, #32
 800674a:	e7e4      	b.n	8006716 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x40>

0800674c <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 800674c:	b570      	push	{r4, r5, r6, lr}
 800674e:	4604      	mov	r4, r0
 8006750:	460d      	mov	r5, r1
 8006752:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8006754:	6821      	ldr	r1, [r4, #0]
 8006756:	694b      	ldr	r3, [r1, #20]
 8006758:	f013 0340 	ands.w	r3, r3, #64	; 0x40
 800675c:	d001      	beq.n	8006762 <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
  return HAL_OK;
 800675e:	2000      	movs	r0, #0
 8006760:	e010      	b.n	8006784 <I2C_WaitOnRXNEFlagUntilTimeout+0x38>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8006762:	694a      	ldr	r2, [r1, #20]
 8006764:	06d2      	lsls	r2, r2, #27
 8006766:	d50e      	bpl.n	8006786 <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8006768:	f06f 0210 	mvn.w	r2, #16
 800676c:	614a      	str	r2, [r1, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 800676e:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8006770:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8006772:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8006776:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 800677a:	6c22      	ldr	r2, [r4, #64]	; 0x40
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800677c:	6422      	str	r2, [r4, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800677e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
      return HAL_ERROR;
 8006782:	2001      	movs	r0, #1
}
 8006784:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8006786:	f7ff fac7 	bl	8005d18 <HAL_GetTick>
 800678a:	1b80      	subs	r0, r0, r6
 800678c:	42a8      	cmp	r0, r5
 800678e:	d801      	bhi.n	8006794 <I2C_WaitOnRXNEFlagUntilTimeout+0x48>
 8006790:	2d00      	cmp	r5, #0
 8006792:	d1df      	bne.n	8006754 <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
      hi2c->PreviousState       = I2C_STATE_NONE;
 8006794:	2300      	movs	r3, #0
      hi2c->State               = HAL_I2C_STATE_READY;
 8006796:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8006798:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800679a:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800679e:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80067a2:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80067a4:	f042 0220 	orr.w	r2, r2, #32
 80067a8:	e7e8      	b.n	800677c <I2C_WaitOnRXNEFlagUntilTimeout+0x30>

080067aa <I2C_WaitOnBTFFlagUntilTimeout>:
{
 80067aa:	b570      	push	{r4, r5, r6, lr}
 80067ac:	4604      	mov	r4, r0
 80067ae:	460d      	mov	r5, r1
 80067b0:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 80067b2:	6823      	ldr	r3, [r4, #0]
 80067b4:	695b      	ldr	r3, [r3, #20]
 80067b6:	075b      	lsls	r3, r3, #29
 80067b8:	d501      	bpl.n	80067be <I2C_WaitOnBTFFlagUntilTimeout+0x14>
  return HAL_OK;
 80067ba:	2000      	movs	r0, #0
}
 80067bc:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 80067be:	4620      	mov	r0, r4
 80067c0:	f7ff ff3d 	bl	800663e <I2C_IsAcknowledgeFailed>
 80067c4:	b9a8      	cbnz	r0, 80067f2 <I2C_WaitOnBTFFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 80067c6:	1c6a      	adds	r2, r5, #1
 80067c8:	d0f3      	beq.n	80067b2 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80067ca:	f7ff faa5 	bl	8005d18 <HAL_GetTick>
 80067ce:	1b80      	subs	r0, r0, r6
 80067d0:	42a8      	cmp	r0, r5
 80067d2:	d801      	bhi.n	80067d8 <I2C_WaitOnBTFFlagUntilTimeout+0x2e>
 80067d4:	2d00      	cmp	r5, #0
 80067d6:	d1ec      	bne.n	80067b2 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
        hi2c->PreviousState       = I2C_STATE_NONE;
 80067d8:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 80067da:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 80067dc:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 80067de:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 80067e2:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80067e6:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 80067e8:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80067ec:	f042 0220 	orr.w	r2, r2, #32
 80067f0:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 80067f2:	2001      	movs	r0, #1
 80067f4:	e7e2      	b.n	80067bc <I2C_WaitOnBTFFlagUntilTimeout+0x12>

080067f6 <I2C_WaitOnTXEFlagUntilTimeout>:
{
 80067f6:	b570      	push	{r4, r5, r6, lr}
 80067f8:	4604      	mov	r4, r0
 80067fa:	460d      	mov	r5, r1
 80067fc:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80067fe:	6823      	ldr	r3, [r4, #0]
 8006800:	695b      	ldr	r3, [r3, #20]
 8006802:	061b      	lsls	r3, r3, #24
 8006804:	d501      	bpl.n	800680a <I2C_WaitOnTXEFlagUntilTimeout+0x14>
  return HAL_OK;
 8006806:	2000      	movs	r0, #0
}
 8006808:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 800680a:	4620      	mov	r0, r4
 800680c:	f7ff ff17 	bl	800663e <I2C_IsAcknowledgeFailed>
 8006810:	b9a8      	cbnz	r0, 800683e <I2C_WaitOnTXEFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 8006812:	1c6a      	adds	r2, r5, #1
 8006814:	d0f3      	beq.n	80067fe <I2C_WaitOnTXEFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8006816:	f7ff fa7f 	bl	8005d18 <HAL_GetTick>
 800681a:	1b80      	subs	r0, r0, r6
 800681c:	42a8      	cmp	r0, r5
 800681e:	d801      	bhi.n	8006824 <I2C_WaitOnTXEFlagUntilTimeout+0x2e>
 8006820:	2d00      	cmp	r5, #0
 8006822:	d1ec      	bne.n	80067fe <I2C_WaitOnTXEFlagUntilTimeout+0x8>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8006824:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8006826:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8006828:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800682a:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800682e:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8006832:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8006834:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8006838:	f042 0220 	orr.w	r2, r2, #32
 800683c:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 800683e:	2001      	movs	r0, #1
 8006840:	e7e2      	b.n	8006808 <I2C_WaitOnTXEFlagUntilTimeout+0x12>
	...

08006844 <I2C_RequestMemoryWrite>:
{
 8006844:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8006848:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800684a:	6802      	ldr	r2, [r0, #0]
{
 800684c:	b085      	sub	sp, #20
 800684e:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
 8006852:	4699      	mov	r9, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8006854:	6813      	ldr	r3, [r2, #0]
 8006856:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800685a:	6013      	str	r3, [r2, #0]
{
 800685c:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800685e:	463b      	mov	r3, r7
 8006860:	f8cd 8000 	str.w	r8, [sp]
 8006864:	2200      	movs	r2, #0
 8006866:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 800686a:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800686c:	f7ff ff01 	bl	8006672 <I2C_WaitOnFlagUntilTimeout>
 8006870:	6823      	ldr	r3, [r4, #0]
 8006872:	b138      	cbz	r0, 8006884 <I2C_RequestMemoryWrite+0x40>
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 8006874:	681b      	ldr	r3, [r3, #0]
 8006876:	05db      	lsls	r3, r3, #23
 8006878:	d502      	bpl.n	8006880 <I2C_RequestMemoryWrite+0x3c>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800687a:	f44f 7300 	mov.w	r3, #512	; 0x200
 800687e:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 8006880:	2003      	movs	r0, #3
 8006882:	e00a      	b.n	800689a <I2C_RequestMemoryWrite+0x56>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8006884:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 8006888:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 800688a:	4919      	ldr	r1, [pc, #100]	; (80068f0 <I2C_RequestMemoryWrite+0xac>)
 800688c:	4643      	mov	r3, r8
 800688e:	463a      	mov	r2, r7
 8006890:	4620      	mov	r0, r4
 8006892:	f7ff ff20 	bl	80066d6 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8006896:	b118      	cbz	r0, 80068a0 <I2C_RequestMemoryWrite+0x5c>
      return HAL_ERROR;
 8006898:	2001      	movs	r0, #1
}
 800689a:	b005      	add	sp, #20
 800689c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80068a0:	6823      	ldr	r3, [r4, #0]
 80068a2:	9003      	str	r0, [sp, #12]
 80068a4:	695a      	ldr	r2, [r3, #20]
 80068a6:	9203      	str	r2, [sp, #12]
 80068a8:	699b      	ldr	r3, [r3, #24]
 80068aa:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80068ac:	4642      	mov	r2, r8
 80068ae:	4639      	mov	r1, r7
 80068b0:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80068b2:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80068b4:	f7ff ff9f 	bl	80067f6 <I2C_WaitOnTXEFlagUntilTimeout>
 80068b8:	b140      	cbz	r0, 80068cc <I2C_RequestMemoryWrite+0x88>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80068ba:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80068bc:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80068be:	bf01      	itttt	eq
 80068c0:	6822      	ldreq	r2, [r4, #0]
 80068c2:	6813      	ldreq	r3, [r2, #0]
 80068c4:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 80068c8:	6013      	streq	r3, [r2, #0]
 80068ca:	e7e5      	b.n	8006898 <I2C_RequestMemoryWrite+0x54>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80068cc:	f1b9 0f01 	cmp.w	r9, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80068d0:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80068d2:	d102      	bne.n	80068da <I2C_RequestMemoryWrite+0x96>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80068d4:	b2ed      	uxtb	r5, r5
 80068d6:	611d      	str	r5, [r3, #16]
 80068d8:	e7df      	b.n	800689a <I2C_RequestMemoryWrite+0x56>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 80068da:	0a2a      	lsrs	r2, r5, #8
 80068dc:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80068de:	4639      	mov	r1, r7
 80068e0:	4642      	mov	r2, r8
 80068e2:	4620      	mov	r0, r4
 80068e4:	f7ff ff87 	bl	80067f6 <I2C_WaitOnTXEFlagUntilTimeout>
 80068e8:	2800      	cmp	r0, #0
 80068ea:	d1e6      	bne.n	80068ba <I2C_RequestMemoryWrite+0x76>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80068ec:	6823      	ldr	r3, [r4, #0]
 80068ee:	e7f1      	b.n	80068d4 <I2C_RequestMemoryWrite+0x90>
 80068f0:	00010002 	.word	0x00010002

080068f4 <I2C_RequestMemoryRead>:
{
 80068f4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80068f8:	469a      	mov	sl, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80068fa:	6803      	ldr	r3, [r0, #0]
{
 80068fc:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80068fe:	681a      	ldr	r2, [r3, #0]
 8006900:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8006904:	601a      	str	r2, [r3, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8006906:	681a      	ldr	r2, [r3, #0]
{
 8006908:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800690c:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8006910:	601a      	str	r2, [r3, #0]
{
 8006912:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8006914:	463b      	mov	r3, r7
 8006916:	f8cd 8000 	str.w	r8, [sp]
 800691a:	2200      	movs	r2, #0
 800691c:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 8006920:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8006922:	f7ff fea6 	bl	8006672 <I2C_WaitOnFlagUntilTimeout>
 8006926:	6823      	ldr	r3, [r4, #0]
 8006928:	b148      	cbz	r0, 800693e <I2C_RequestMemoryRead+0x4a>
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 800692a:	681b      	ldr	r3, [r3, #0]
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 800692c:	05db      	lsls	r3, r3, #23
 800692e:	d502      	bpl.n	8006936 <I2C_RequestMemoryRead+0x42>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8006930:	f44f 7300 	mov.w	r3, #512	; 0x200
 8006934:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 8006936:	2003      	movs	r0, #3
}
 8006938:	b004      	add	sp, #16
 800693a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800693e:	fa5f f986 	uxtb.w	r9, r6
 8006942:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 8006946:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8006948:	492a      	ldr	r1, [pc, #168]	; (80069f4 <I2C_RequestMemoryRead+0x100>)
 800694a:	4643      	mov	r3, r8
 800694c:	463a      	mov	r2, r7
 800694e:	4620      	mov	r0, r4
 8006950:	f7ff fec1 	bl	80066d6 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8006954:	b108      	cbz	r0, 800695a <I2C_RequestMemoryRead+0x66>
    return HAL_ERROR;
 8006956:	2001      	movs	r0, #1
 8006958:	e7ee      	b.n	8006938 <I2C_RequestMemoryRead+0x44>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800695a:	6823      	ldr	r3, [r4, #0]
 800695c:	9003      	str	r0, [sp, #12]
 800695e:	695a      	ldr	r2, [r3, #20]
 8006960:	9203      	str	r2, [sp, #12]
 8006962:	699b      	ldr	r3, [r3, #24]
 8006964:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006966:	4642      	mov	r2, r8
 8006968:	4639      	mov	r1, r7
 800696a:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800696c:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800696e:	f7ff ff42 	bl	80067f6 <I2C_WaitOnTXEFlagUntilTimeout>
 8006972:	b140      	cbz	r0, 8006986 <I2C_RequestMemoryRead+0x92>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8006974:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8006976:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006978:	bf01      	itttt	eq
 800697a:	6822      	ldreq	r2, [r4, #0]
 800697c:	6813      	ldreq	r3, [r2, #0]
 800697e:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8006982:	6013      	streq	r3, [r2, #0]
 8006984:	e7e7      	b.n	8006956 <I2C_RequestMemoryRead+0x62>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8006986:	f1ba 0f01 	cmp.w	sl, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800698a:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800698c:	d11a      	bne.n	80069c4 <I2C_RequestMemoryRead+0xd0>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800698e:	b2ed      	uxtb	r5, r5
 8006990:	611d      	str	r5, [r3, #16]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006992:	4642      	mov	r2, r8
 8006994:	4639      	mov	r1, r7
 8006996:	4620      	mov	r0, r4
 8006998:	f7ff ff2d 	bl	80067f6 <I2C_WaitOnTXEFlagUntilTimeout>
 800699c:	2800      	cmp	r0, #0
 800699e:	d1e9      	bne.n	8006974 <I2C_RequestMemoryRead+0x80>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80069a0:	6822      	ldr	r2, [r4, #0]
 80069a2:	6813      	ldr	r3, [r2, #0]
 80069a4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80069a8:	6013      	str	r3, [r2, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80069aa:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 80069ae:	4602      	mov	r2, r0
 80069b0:	f8cd 8000 	str.w	r8, [sp]
 80069b4:	463b      	mov	r3, r7
 80069b6:	4620      	mov	r0, r4
 80069b8:	f7ff fe5b 	bl	8006672 <I2C_WaitOnFlagUntilTimeout>
 80069bc:	6822      	ldr	r2, [r4, #0]
 80069be:	b160      	cbz	r0, 80069da <I2C_RequestMemoryRead+0xe6>
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 80069c0:	6813      	ldr	r3, [r2, #0]
 80069c2:	e7b3      	b.n	800692c <I2C_RequestMemoryRead+0x38>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 80069c4:	0a2a      	lsrs	r2, r5, #8
 80069c6:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80069c8:	4639      	mov	r1, r7
 80069ca:	4642      	mov	r2, r8
 80069cc:	4620      	mov	r0, r4
 80069ce:	f7ff ff12 	bl	80067f6 <I2C_WaitOnTXEFlagUntilTimeout>
 80069d2:	2800      	cmp	r0, #0
 80069d4:	d1ce      	bne.n	8006974 <I2C_RequestMemoryRead+0x80>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80069d6:	6823      	ldr	r3, [r4, #0]
 80069d8:	e7d9      	b.n	800698e <I2C_RequestMemoryRead+0x9a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 80069da:	f049 0301 	orr.w	r3, r9, #1
 80069de:	6113      	str	r3, [r2, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 80069e0:	4904      	ldr	r1, [pc, #16]	; (80069f4 <I2C_RequestMemoryRead+0x100>)
 80069e2:	4643      	mov	r3, r8
 80069e4:	463a      	mov	r2, r7
 80069e6:	4620      	mov	r0, r4
 80069e8:	f7ff fe75 	bl	80066d6 <I2C_WaitOnMasterAddressFlagUntilTimeout>
    return HAL_TIMEOUT;
 80069ec:	3800      	subs	r0, #0
 80069ee:	bf18      	it	ne
 80069f0:	2001      	movne	r0, #1
 80069f2:	e7a1      	b.n	8006938 <I2C_RequestMemoryRead+0x44>
 80069f4:	00010002 	.word	0x00010002

080069f8 <HAL_I2C_Init>:
{
 80069f8:	b570      	push	{r4, r5, r6, lr}
  if (hi2c == NULL)
 80069fa:	4604      	mov	r4, r0
 80069fc:	b908      	cbnz	r0, 8006a02 <HAL_I2C_Init+0xa>
    return HAL_ERROR;
 80069fe:	2001      	movs	r0, #1
}
 8006a00:	bd70      	pop	{r4, r5, r6, pc}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 8006a02:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8006a06:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006a0a:	b91b      	cbnz	r3, 8006a14 <HAL_I2C_Init+0x1c>
    hi2c->Lock = HAL_UNLOCKED;
 8006a0c:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 8006a10:	f7fb f950 	bl	8001cb4 <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 8006a14:	2324      	movs	r3, #36	; 0x24
 8006a16:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 8006a1a:	6823      	ldr	r3, [r4, #0]
 8006a1c:	681a      	ldr	r2, [r3, #0]
 8006a1e:	f022 0201 	bic.w	r2, r2, #1
 8006a22:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 8006a24:	681a      	ldr	r2, [r3, #0]
 8006a26:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8006a2a:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 8006a2c:	681a      	ldr	r2, [r3, #0]
 8006a2e:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8006a32:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 8006a34:	f000 fe6e 	bl	8007714 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8006a38:	4b3f      	ldr	r3, [pc, #252]	; (8006b38 <HAL_I2C_Init+0x140>)
 8006a3a:	6865      	ldr	r5, [r4, #4]
 8006a3c:	429d      	cmp	r5, r3
 8006a3e:	bf94      	ite	ls
 8006a40:	4b3e      	ldrls	r3, [pc, #248]	; (8006b3c <HAL_I2C_Init+0x144>)
 8006a42:	4b3f      	ldrhi	r3, [pc, #252]	; (8006b40 <HAL_I2C_Init+0x148>)
 8006a44:	4298      	cmp	r0, r3
 8006a46:	bf8c      	ite	hi
 8006a48:	2300      	movhi	r3, #0
 8006a4a:	2301      	movls	r3, #1
 8006a4c:	2b00      	cmp	r3, #0
 8006a4e:	d1d6      	bne.n	80069fe <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8006a50:	6822      	ldr	r2, [r4, #0]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8006a52:	4e39      	ldr	r6, [pc, #228]	; (8006b38 <HAL_I2C_Init+0x140>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8006a54:	6853      	ldr	r3, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 8006a56:	493b      	ldr	r1, [pc, #236]	; (8006b44 <HAL_I2C_Init+0x14c>)
 8006a58:	fbb0 f1f1 	udiv	r1, r0, r1
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8006a5c:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8006a60:	430b      	orrs	r3, r1
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8006a62:	42b5      	cmp	r5, r6
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8006a64:	6053      	str	r3, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8006a66:	bf88      	it	hi
 8006a68:	f44f 7696 	movhi.w	r6, #300	; 0x12c
 8006a6c:	6a13      	ldr	r3, [r2, #32]
 8006a6e:	bf88      	it	hi
 8006a70:	4371      	mulhi	r1, r6
 8006a72:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8006a76:	bf84      	itt	hi
 8006a78:	f44f 767a 	movhi.w	r6, #1000	; 0x3e8
 8006a7c:	fbb1 f1f6 	udivhi	r1, r1, r6
 8006a80:	3101      	adds	r1, #1
 8006a82:	4319      	orrs	r1, r3
 8006a84:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8006a86:	69d1      	ldr	r1, [r2, #28]
 8006a88:	1e43      	subs	r3, r0, #1
 8006a8a:	482b      	ldr	r0, [pc, #172]	; (8006b38 <HAL_I2C_Init+0x140>)
 8006a8c:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 8006a90:	4285      	cmp	r5, r0
 8006a92:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8006a96:	d832      	bhi.n	8006afe <HAL_I2C_Init+0x106>
 8006a98:	006d      	lsls	r5, r5, #1
 8006a9a:	f640 70fc 	movw	r0, #4092	; 0xffc
 8006a9e:	fbb3 f3f5 	udiv	r3, r3, r5
 8006aa2:	3301      	adds	r3, #1
 8006aa4:	4203      	tst	r3, r0
 8006aa6:	d042      	beq.n	8006b2e <HAL_I2C_Init+0x136>
 8006aa8:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8006aac:	430b      	orrs	r3, r1
 8006aae:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 8006ab0:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 8006ab4:	6811      	ldr	r1, [r2, #0]
 8006ab6:	4303      	orrs	r3, r0
 8006ab8:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 8006abc:	430b      	orrs	r3, r1
 8006abe:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 8006ac0:	6891      	ldr	r1, [r2, #8]
 8006ac2:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 8006ac6:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 8006aca:	4303      	orrs	r3, r0
 8006acc:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8006ad0:	430b      	orrs	r3, r1
 8006ad2:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 8006ad4:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 8006ad8:	68d1      	ldr	r1, [r2, #12]
 8006ada:	4303      	orrs	r3, r0
 8006adc:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8006ae0:	430b      	orrs	r3, r1
 8006ae2:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 8006ae4:	6813      	ldr	r3, [r2, #0]
 8006ae6:	f043 0301 	orr.w	r3, r3, #1
 8006aea:	6013      	str	r3, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8006aec:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 8006aee:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8006af0:	6420      	str	r0, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 8006af2:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 8006af6:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8006af8:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
  return HAL_OK;
 8006afc:	e780      	b.n	8006a00 <HAL_I2C_Init+0x8>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8006afe:	68a0      	ldr	r0, [r4, #8]
 8006b00:	b950      	cbnz	r0, 8006b18 <HAL_I2C_Init+0x120>
 8006b02:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8006b06:	fbb3 f3f5 	udiv	r3, r3, r5
 8006b0a:	3301      	adds	r3, #1
 8006b0c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8006b10:	b17b      	cbz	r3, 8006b32 <HAL_I2C_Init+0x13a>
 8006b12:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8006b16:	e7c9      	b.n	8006aac <HAL_I2C_Init+0xb4>
 8006b18:	2019      	movs	r0, #25
 8006b1a:	4345      	muls	r5, r0
 8006b1c:	fbb3 f3f5 	udiv	r3, r3, r5
 8006b20:	3301      	adds	r3, #1
 8006b22:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8006b26:	b123      	cbz	r3, 8006b32 <HAL_I2C_Init+0x13a>
 8006b28:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8006b2c:	e7be      	b.n	8006aac <HAL_I2C_Init+0xb4>
 8006b2e:	2304      	movs	r3, #4
 8006b30:	e7bc      	b.n	8006aac <HAL_I2C_Init+0xb4>
 8006b32:	2301      	movs	r3, #1
 8006b34:	e7ba      	b.n	8006aac <HAL_I2C_Init+0xb4>
 8006b36:	bf00      	nop
 8006b38:	000186a0 	.word	0x000186a0
 8006b3c:	001e847f 	.word	0x001e847f
 8006b40:	003d08ff 	.word	0x003d08ff
 8006b44:	000f4240 	.word	0x000f4240

08006b48 <HAL_I2C_Mem_Write>:
{
 8006b48:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8006b4c:	4604      	mov	r4, r0
 8006b4e:	4699      	mov	r9, r3
 8006b50:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8006b52:	460f      	mov	r7, r1
 8006b54:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8006b56:	f7ff f8df 	bl	8005d18 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8006b5a:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8006b5e:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8006b60:	4605      	mov	r5, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8006b62:	d003      	beq.n	8006b6c <HAL_I2C_Mem_Write+0x24>
    return HAL_BUSY;
 8006b64:	2002      	movs	r0, #2
}
 8006b66:	b003      	add	sp, #12
 8006b68:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8006b6c:	9000      	str	r0, [sp, #0]
 8006b6e:	493c      	ldr	r1, [pc, #240]	; (8006c60 <HAL_I2C_Mem_Write+0x118>)
 8006b70:	2319      	movs	r3, #25
 8006b72:	2201      	movs	r2, #1
 8006b74:	4620      	mov	r0, r4
 8006b76:	f7ff fd7c 	bl	8006672 <I2C_WaitOnFlagUntilTimeout>
 8006b7a:	2800      	cmp	r0, #0
 8006b7c:	d1f2      	bne.n	8006b64 <HAL_I2C_Mem_Write+0x1c>
    __HAL_LOCK(hi2c);
 8006b7e:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8006b82:	2b01      	cmp	r3, #1
 8006b84:	d0ee      	beq.n	8006b64 <HAL_I2C_Mem_Write+0x1c>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8006b86:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8006b88:	2301      	movs	r3, #1
 8006b8a:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8006b8e:	6803      	ldr	r3, [r0, #0]
 8006b90:	07d9      	lsls	r1, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 8006b92:	bf5e      	ittt	pl
 8006b94:	6803      	ldrpl	r3, [r0, #0]
 8006b96:	f043 0301 	orrpl.w	r3, r3, #1
 8006b9a:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8006b9c:	6803      	ldr	r3, [r0, #0]
 8006b9e:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8006ba2:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8006ba4:	2321      	movs	r3, #33	; 0x21
 8006ba6:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8006baa:	2340      	movs	r3, #64	; 0x40
 8006bac:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8006bb0:	2300      	movs	r3, #0
 8006bb2:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 8006bb4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006bb6:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 8006bb8:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8006bbc:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8006bbe:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006bc0:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8006bc2:	4b28      	ldr	r3, [pc, #160]	; (8006c64 <HAL_I2C_Mem_Write+0x11c>)
 8006bc4:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8006bc6:	e9cd 6500 	strd	r6, r5, [sp]
 8006bca:	464b      	mov	r3, r9
 8006bcc:	4642      	mov	r2, r8
 8006bce:	4639      	mov	r1, r7
 8006bd0:	4620      	mov	r0, r4
 8006bd2:	f7ff fe37 	bl	8006844 <I2C_RequestMemoryWrite>
 8006bd6:	2800      	cmp	r0, #0
 8006bd8:	d02a      	beq.n	8006c30 <HAL_I2C_Mem_Write+0xe8>
      return HAL_ERROR;
 8006bda:	2001      	movs	r0, #1
 8006bdc:	e7c3      	b.n	8006b66 <HAL_I2C_Mem_Write+0x1e>
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8006bde:	f7ff fe0a 	bl	80067f6 <I2C_WaitOnTXEFlagUntilTimeout>
 8006be2:	b140      	cbz	r0, 8006bf6 <HAL_I2C_Mem_Write+0xae>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8006be4:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8006be6:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006be8:	bf01      	itttt	eq
 8006bea:	6822      	ldreq	r2, [r4, #0]
 8006bec:	6813      	ldreq	r3, [r2, #0]
 8006bee:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8006bf2:	6013      	streq	r3, [r2, #0]
 8006bf4:	e7f1      	b.n	8006bda <HAL_I2C_Mem_Write+0x92>
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8006bf6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006bf8:	6827      	ldr	r7, [r4, #0]
 8006bfa:	461a      	mov	r2, r3
 8006bfc:	f812 1b01 	ldrb.w	r1, [r2], #1
 8006c00:	6139      	str	r1, [r7, #16]
      hi2c->pBuffPtr++;
 8006c02:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 8006c04:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 8006c06:	8d21      	ldrh	r1, [r4, #40]	; 0x28
      hi2c->XferCount--;
 8006c08:	3a01      	subs	r2, #1
 8006c0a:	b292      	uxth	r2, r2
 8006c0c:	8562      	strh	r2, [r4, #42]	; 0x2a
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8006c0e:	697a      	ldr	r2, [r7, #20]
      hi2c->XferSize--;
 8006c10:	1e48      	subs	r0, r1, #1
 8006c12:	b280      	uxth	r0, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8006c14:	0752      	lsls	r2, r2, #29
      hi2c->XferSize--;
 8006c16:	8520      	strh	r0, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8006c18:	d50a      	bpl.n	8006c30 <HAL_I2C_Mem_Write+0xe8>
 8006c1a:	b148      	cbz	r0, 8006c30 <HAL_I2C_Mem_Write+0xe8>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 8006c1c:	785a      	ldrb	r2, [r3, #1]
 8006c1e:	613a      	str	r2, [r7, #16]
        hi2c->pBuffPtr++;
 8006c20:	3302      	adds	r3, #2
 8006c22:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferCount--;
 8006c24:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006c26:	3b01      	subs	r3, #1
        hi2c->XferSize--;
 8006c28:	3902      	subs	r1, #2
        hi2c->XferCount--;
 8006c2a:	b29b      	uxth	r3, r3
        hi2c->XferSize--;
 8006c2c:	8521      	strh	r1, [r4, #40]	; 0x28
        hi2c->XferCount--;
 8006c2e:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 8006c30:	8d23      	ldrh	r3, [r4, #40]	; 0x28
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8006c32:	462a      	mov	r2, r5
 8006c34:	4631      	mov	r1, r6
 8006c36:	4620      	mov	r0, r4
    while (hi2c->XferSize > 0U)
 8006c38:	2b00      	cmp	r3, #0
 8006c3a:	d1d0      	bne.n	8006bde <HAL_I2C_Mem_Write+0x96>
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8006c3c:	f7ff fdb5 	bl	80067aa <I2C_WaitOnBTFFlagUntilTimeout>
 8006c40:	2800      	cmp	r0, #0
 8006c42:	d1cf      	bne.n	8006be4 <HAL_I2C_Mem_Write+0x9c>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006c44:	6822      	ldr	r2, [r4, #0]
 8006c46:	6813      	ldr	r3, [r2, #0]
 8006c48:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8006c4c:	6013      	str	r3, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 8006c4e:	2320      	movs	r3, #32
 8006c50:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8006c54:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8006c58:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    return HAL_OK;
 8006c5c:	e783      	b.n	8006b66 <HAL_I2C_Mem_Write+0x1e>
 8006c5e:	bf00      	nop
 8006c60:	00100002 	.word	0x00100002
 8006c64:	ffff0000 	.word	0xffff0000

08006c68 <HAL_I2C_Mem_Read>:
{
 8006c68:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8006c6c:	4604      	mov	r4, r0
 8006c6e:	b087      	sub	sp, #28
 8006c70:	4699      	mov	r9, r3
 8006c72:	9f10      	ldr	r7, [sp, #64]	; 0x40
 8006c74:	460d      	mov	r5, r1
 8006c76:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8006c78:	f7ff f84e 	bl	8005d18 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8006c7c:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8006c80:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8006c82:	4606      	mov	r6, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8006c84:	d004      	beq.n	8006c90 <HAL_I2C_Mem_Read+0x28>
    return HAL_BUSY;
 8006c86:	2502      	movs	r5, #2
}
 8006c88:	4628      	mov	r0, r5
 8006c8a:	b007      	add	sp, #28
 8006c8c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8006c90:	9000      	str	r0, [sp, #0]
 8006c92:	4976      	ldr	r1, [pc, #472]	; (8006e6c <HAL_I2C_Mem_Read+0x204>)
 8006c94:	2319      	movs	r3, #25
 8006c96:	2201      	movs	r2, #1
 8006c98:	4620      	mov	r0, r4
 8006c9a:	f7ff fcea 	bl	8006672 <I2C_WaitOnFlagUntilTimeout>
 8006c9e:	2800      	cmp	r0, #0
 8006ca0:	d1f1      	bne.n	8006c86 <HAL_I2C_Mem_Read+0x1e>
    __HAL_LOCK(hi2c);
 8006ca2:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8006ca6:	2b01      	cmp	r3, #1
 8006ca8:	d0ed      	beq.n	8006c86 <HAL_I2C_Mem_Read+0x1e>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8006caa:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8006cac:	2301      	movs	r3, #1
 8006cae:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8006cb2:	6803      	ldr	r3, [r0, #0]
 8006cb4:	07db      	lsls	r3, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 8006cb6:	bf5e      	ittt	pl
 8006cb8:	6803      	ldrpl	r3, [r0, #0]
 8006cba:	f043 0301 	orrpl.w	r3, r3, #1
 8006cbe:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8006cc0:	6803      	ldr	r3, [r0, #0]
 8006cc2:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8006cc6:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8006cc8:	2322      	movs	r3, #34	; 0x22
 8006cca:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8006cce:	2340      	movs	r3, #64	; 0x40
 8006cd0:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8006cd4:	2300      	movs	r3, #0
 8006cd6:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 8006cd8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8006cda:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 8006cdc:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8006ce0:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8006ce2:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006ce4:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8006ce6:	4b62      	ldr	r3, [pc, #392]	; (8006e70 <HAL_I2C_Mem_Read+0x208>)
 8006ce8:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8006cea:	4629      	mov	r1, r5
 8006cec:	e9cd 7600 	strd	r7, r6, [sp]
 8006cf0:	464b      	mov	r3, r9
 8006cf2:	4642      	mov	r2, r8
 8006cf4:	4620      	mov	r0, r4
 8006cf6:	f7ff fdfd 	bl	80068f4 <I2C_RequestMemoryRead>
 8006cfa:	4605      	mov	r5, r0
 8006cfc:	b108      	cbz	r0, 8006d02 <HAL_I2C_Mem_Read+0x9a>
      return HAL_ERROR;
 8006cfe:	2501      	movs	r5, #1
 8006d00:	e7c2      	b.n	8006c88 <HAL_I2C_Mem_Read+0x20>
    if (hi2c->XferSize == 0U)
 8006d02:	8d22      	ldrh	r2, [r4, #40]	; 0x28
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006d04:	6823      	ldr	r3, [r4, #0]
    if (hi2c->XferSize == 0U)
 8006d06:	b9b2      	cbnz	r2, 8006d36 <HAL_I2C_Mem_Read+0xce>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006d08:	9002      	str	r0, [sp, #8]
 8006d0a:	695a      	ldr	r2, [r3, #20]
 8006d0c:	9202      	str	r2, [sp, #8]
 8006d0e:	699a      	ldr	r2, [r3, #24]
 8006d10:	9202      	str	r2, [sp, #8]
 8006d12:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006d14:	681a      	ldr	r2, [r3, #0]
 8006d16:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8006d1a:	601a      	str	r2, [r3, #0]
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8006d1c:	f8df 8154 	ldr.w	r8, [pc, #340]	; 8006e74 <HAL_I2C_Mem_Read+0x20c>
    while (hi2c->XferSize > 0U)
 8006d20:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8006d22:	2b00      	cmp	r3, #0
 8006d24:	d12c      	bne.n	8006d80 <HAL_I2C_Mem_Read+0x118>
    hi2c->State = HAL_I2C_STATE_READY;
 8006d26:	2220      	movs	r2, #32
 8006d28:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8006d2c:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8006d30:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 8006d34:	e7a8      	b.n	8006c88 <HAL_I2C_Mem_Read+0x20>
    else if (hi2c->XferSize == 1U)
 8006d36:	2a01      	cmp	r2, #1
 8006d38:	d10a      	bne.n	8006d50 <HAL_I2C_Mem_Read+0xe8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8006d3a:	681a      	ldr	r2, [r3, #0]
 8006d3c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006d40:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006d42:	9003      	str	r0, [sp, #12]
 8006d44:	695a      	ldr	r2, [r3, #20]
 8006d46:	9203      	str	r2, [sp, #12]
 8006d48:	699a      	ldr	r2, [r3, #24]
 8006d4a:	9203      	str	r2, [sp, #12]
 8006d4c:	9a03      	ldr	r2, [sp, #12]
 8006d4e:	e7e1      	b.n	8006d14 <HAL_I2C_Mem_Read+0xac>
    else if (hi2c->XferSize == 2U)
 8006d50:	2a02      	cmp	r2, #2
 8006d52:	d10e      	bne.n	8006d72 <HAL_I2C_Mem_Read+0x10a>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8006d54:	681a      	ldr	r2, [r3, #0]
 8006d56:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006d5a:	601a      	str	r2, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8006d5c:	681a      	ldr	r2, [r3, #0]
 8006d5e:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8006d62:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006d64:	9004      	str	r0, [sp, #16]
 8006d66:	695a      	ldr	r2, [r3, #20]
 8006d68:	9204      	str	r2, [sp, #16]
 8006d6a:	699b      	ldr	r3, [r3, #24]
 8006d6c:	9304      	str	r3, [sp, #16]
 8006d6e:	9b04      	ldr	r3, [sp, #16]
 8006d70:	e7d4      	b.n	8006d1c <HAL_I2C_Mem_Read+0xb4>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006d72:	9005      	str	r0, [sp, #20]
 8006d74:	695a      	ldr	r2, [r3, #20]
 8006d76:	9205      	str	r2, [sp, #20]
 8006d78:	699b      	ldr	r3, [r3, #24]
 8006d7a:	9305      	str	r3, [sp, #20]
 8006d7c:	9b05      	ldr	r3, [sp, #20]
 8006d7e:	e7cd      	b.n	8006d1c <HAL_I2C_Mem_Read+0xb4>
      if (hi2c->XferSize <= 3U)
 8006d80:	2b03      	cmp	r3, #3
 8006d82:	d856      	bhi.n	8006e32 <HAL_I2C_Mem_Read+0x1ca>
        if (hi2c->XferSize == 1U)
 8006d84:	2b01      	cmp	r3, #1
 8006d86:	d115      	bne.n	8006db4 <HAL_I2C_Mem_Read+0x14c>
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8006d88:	4632      	mov	r2, r6
 8006d8a:	4639      	mov	r1, r7
 8006d8c:	4620      	mov	r0, r4
 8006d8e:	f7ff fcdd 	bl	800674c <I2C_WaitOnRXNEFlagUntilTimeout>
 8006d92:	2800      	cmp	r0, #0
 8006d94:	d1b3      	bne.n	8006cfe <HAL_I2C_Mem_Read+0x96>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8006d96:	6823      	ldr	r3, [r4, #0]
 8006d98:	691a      	ldr	r2, [r3, #16]
 8006d9a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006d9c:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8006d9e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006da0:	3301      	adds	r3, #1
 8006da2:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8006da4:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8006da6:	3b01      	subs	r3, #1
 8006da8:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8006daa:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006dac:	3b01      	subs	r3, #1
 8006dae:	b29b      	uxth	r3, r3
 8006db0:	8563      	strh	r3, [r4, #42]	; 0x2a
 8006db2:	e7b5      	b.n	8006d20 <HAL_I2C_Mem_Read+0xb8>
        else if (hi2c->XferSize == 2U)
 8006db4:	2b02      	cmp	r3, #2
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8006db6:	9600      	str	r6, [sp, #0]
 8006db8:	463b      	mov	r3, r7
 8006dba:	f04f 0200 	mov.w	r2, #0
 8006dbe:	4641      	mov	r1, r8
 8006dc0:	4620      	mov	r0, r4
        else if (hi2c->XferSize == 2U)
 8006dc2:	d119      	bne.n	8006df8 <HAL_I2C_Mem_Read+0x190>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8006dc4:	f7ff fc55 	bl	8006672 <I2C_WaitOnFlagUntilTimeout>
 8006dc8:	2800      	cmp	r0, #0
 8006dca:	d198      	bne.n	8006cfe <HAL_I2C_Mem_Read+0x96>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006dcc:	6823      	ldr	r3, [r4, #0]
 8006dce:	681a      	ldr	r2, [r3, #0]
 8006dd0:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8006dd4:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8006dd6:	691a      	ldr	r2, [r3, #16]
 8006dd8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006dda:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8006ddc:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8006dde:	1c53      	adds	r3, r2, #1
 8006de0:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8006de2:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8006de4:	3b01      	subs	r3, #1
 8006de6:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8006de8:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006dea:	3b01      	subs	r3, #1
 8006dec:	b29b      	uxth	r3, r3
 8006dee:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8006df0:	6823      	ldr	r3, [r4, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8006df2:	691b      	ldr	r3, [r3, #16]
 8006df4:	7053      	strb	r3, [r2, #1]
 8006df6:	e7d2      	b.n	8006d9e <HAL_I2C_Mem_Read+0x136>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8006df8:	f7ff fc3b 	bl	8006672 <I2C_WaitOnFlagUntilTimeout>
 8006dfc:	2800      	cmp	r0, #0
 8006dfe:	f47f af7e 	bne.w	8006cfe <HAL_I2C_Mem_Read+0x96>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8006e02:	6823      	ldr	r3, [r4, #0]
 8006e04:	681a      	ldr	r2, [r3, #0]
 8006e06:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006e0a:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8006e0c:	691a      	ldr	r2, [r3, #16]
 8006e0e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006e10:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8006e12:	6a63      	ldr	r3, [r4, #36]	; 0x24
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8006e14:	9600      	str	r6, [sp, #0]
          hi2c->pBuffPtr++;
 8006e16:	3301      	adds	r3, #1
 8006e18:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8006e1a:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8006e1c:	3b01      	subs	r3, #1
 8006e1e:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8006e20:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006e22:	3b01      	subs	r3, #1
 8006e24:	b29b      	uxth	r3, r3
 8006e26:	8563      	strh	r3, [r4, #42]	; 0x2a
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8006e28:	4602      	mov	r2, r0
 8006e2a:	463b      	mov	r3, r7
 8006e2c:	4641      	mov	r1, r8
 8006e2e:	4620      	mov	r0, r4
 8006e30:	e7c8      	b.n	8006dc4 <HAL_I2C_Mem_Read+0x15c>
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8006e32:	4632      	mov	r2, r6
 8006e34:	4639      	mov	r1, r7
 8006e36:	4620      	mov	r0, r4
 8006e38:	f7ff fc88 	bl	800674c <I2C_WaitOnRXNEFlagUntilTimeout>
 8006e3c:	2800      	cmp	r0, #0
 8006e3e:	f47f af5e 	bne.w	8006cfe <HAL_I2C_Mem_Read+0x96>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8006e42:	6823      	ldr	r3, [r4, #0]
 8006e44:	691a      	ldr	r2, [r3, #16]
 8006e46:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006e48:	701a      	strb	r2, [r3, #0]
        hi2c->pBuffPtr++;
 8006e4a:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8006e4c:	1c53      	adds	r3, r2, #1
 8006e4e:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferSize--;
 8006e50:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8006e52:	3b01      	subs	r3, #1
 8006e54:	8523      	strh	r3, [r4, #40]	; 0x28
        hi2c->XferCount--;
 8006e56:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006e58:	3b01      	subs	r3, #1
 8006e5a:	b29b      	uxth	r3, r3
 8006e5c:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8006e5e:	6823      	ldr	r3, [r4, #0]
 8006e60:	6959      	ldr	r1, [r3, #20]
 8006e62:	0749      	lsls	r1, r1, #29
 8006e64:	f57f af5c 	bpl.w	8006d20 <HAL_I2C_Mem_Read+0xb8>
 8006e68:	e7c3      	b.n	8006df2 <HAL_I2C_Mem_Read+0x18a>
 8006e6a:	bf00      	nop
 8006e6c:	00100002 	.word	0x00100002
 8006e70:	ffff0000 	.word	0xffff0000
 8006e74:	00010004 	.word	0x00010004

08006e78 <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter new state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 8006e78:	b510      	push	{r4, lr}
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8006e7a:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8006e7e:	2b20      	cmp	r3, #32
 8006e80:	b2dc      	uxtb	r4, r3
 8006e82:	d116      	bne.n	8006eb2 <HAL_I2CEx_ConfigAnalogFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;
 8006e84:	2324      	movs	r3, #36	; 0x24
 8006e86:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8006e8a:	6803      	ldr	r3, [r0, #0]
 8006e8c:	681a      	ldr	r2, [r3, #0]
 8006e8e:	f022 0201 	bic.w	r2, r2, #1
 8006e92:	601a      	str	r2, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 8006e94:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8006e96:	f022 0210 	bic.w	r2, r2, #16
 8006e9a:	625a      	str	r2, [r3, #36]	; 0x24

    /* Disable the analog filter */
    hi2c->Instance->FLTR |= AnalogFilter;
 8006e9c:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8006e9e:	4311      	orrs	r1, r2
 8006ea0:	6259      	str	r1, [r3, #36]	; 0x24

    __HAL_I2C_ENABLE(hi2c);
 8006ea2:	681a      	ldr	r2, [r3, #0]
 8006ea4:	f042 0201 	orr.w	r2, r2, #1
 8006ea8:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8006eaa:	f880 403d 	strb.w	r4, [r0, #61]	; 0x3d

    return HAL_OK;
 8006eae:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 8006eb0:	bd10      	pop	{r4, pc}
    return HAL_BUSY;
 8006eb2:	2002      	movs	r0, #2
 8006eb4:	e7fc      	b.n	8006eb0 <HAL_I2CEx_ConfigAnalogFilter+0x38>

08006eb6 <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between 0x00 and 0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 8006eb6:	b530      	push	{r4, r5, lr}

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8006eb8:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8006ebc:	2b20      	cmp	r3, #32
 8006ebe:	b2dc      	uxtb	r4, r3
 8006ec0:	d116      	bne.n	8006ef0 <HAL_I2CEx_ConfigDigitalFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8006ec2:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 8006ec4:	2324      	movs	r3, #36	; 0x24
 8006ec6:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 8006eca:	6813      	ldr	r3, [r2, #0]
 8006ecc:	f023 0301 	bic.w	r3, r3, #1
 8006ed0:	6013      	str	r3, [r2, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->FLTR;
 8006ed2:	6a55      	ldr	r5, [r2, #36]	; 0x24

    /* Reset I2Cx DNF bit [3:0] */
    tmpreg &= ~(I2C_FLTR_DNF);
 8006ed4:	f64f 73f0 	movw	r3, #65520	; 0xfff0
 8006ed8:	402b      	ands	r3, r5

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter;
 8006eda:	430b      	orrs	r3, r1

    /* Store the new register value */
    hi2c->Instance->FLTR = tmpreg;
 8006edc:	b29b      	uxth	r3, r3
 8006ede:	6253      	str	r3, [r2, #36]	; 0x24

    __HAL_I2C_ENABLE(hi2c);
 8006ee0:	6813      	ldr	r3, [r2, #0]
 8006ee2:	f043 0301 	orr.w	r3, r3, #1
 8006ee6:	6013      	str	r3, [r2, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8006ee8:	f880 403d 	strb.w	r4, [r0, #61]	; 0x3d

    return HAL_OK;
 8006eec:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 8006eee:	bd30      	pop	{r4, r5, pc}
    return HAL_BUSY;
 8006ef0:	2002      	movs	r0, #2
 8006ef2:	e7fc      	b.n	8006eee <HAL_I2CEx_ConfigDigitalFilter+0x38>

08006ef4 <LTDC_SetConfig>:
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8006ef4:	6800      	ldr	r0, [r0, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8006ef6:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8006efa:	01d2      	lsls	r2, r2, #7
 8006efc:	3284      	adds	r2, #132	; 0x84
 8006efe:	1883      	adds	r3, r0, r2
{
 8006f00:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8006f04:	68c6      	ldr	r6, [r0, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8006f06:	685d      	ldr	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8006f08:	684c      	ldr	r4, [r1, #4]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 8006f0a:	f8d1 9018 	ldr.w	r9, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8006f0e:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 8006f12:	605d      	str	r5, [r3, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8006f14:	68c5      	ldr	r5, [r0, #12]
 8006f16:	f10c 0701 	add.w	r7, ip, #1
 8006f1a:	f3c5 450b 	ubfx	r5, r5, #16, #12
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8006f1e:	f3c6 460b 	ubfx	r6, r6, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8006f22:	443d      	add	r5, r7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8006f24:	4426      	add	r6, r4
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8006f26:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 8006f2a:	605d      	str	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 8006f2c:	68c5      	ldr	r5, [r0, #12]
 8006f2e:	68ce      	ldr	r6, [r1, #12]
 8006f30:	f3c5 050a 	ubfx	r5, r5, #0, #11
 8006f34:	442e      	add	r6, r5
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 8006f36:	689d      	ldr	r5, [r3, #8]
 8006f38:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 8006f3c:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 8006f3e:	68c7      	ldr	r7, [r0, #12]
 8006f40:	688d      	ldr	r5, [r1, #8]
 8006f42:	f3c7 070a 	ubfx	r7, r7, #0, #11
 8006f46:	3501      	adds	r5, #1
 8006f48:	443d      	add	r5, r7
 8006f4a:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 8006f4e:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8006f50:	691d      	ldr	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8006f52:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8006f54:	f025 0507 	bic.w	r5, r5, #7
 8006f58:	611d      	str	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 8006f5a:	f04f 0e00 	mov.w	lr, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8006f5e:	611e      	str	r6, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 8006f60:	699d      	ldr	r5, [r3, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 8006f62:	f891 7032 	ldrb.w	r7, [r1, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 8006f66:	f891 8031 	ldrb.w	r8, [r1, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 8006f6a:	f8c3 e018 	str.w	lr, [r3, #24]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 8006f6e:	f891 5030 	ldrb.w	r5, [r1, #48]	; 0x30
 8006f72:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 8006f76:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 8006f7a:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 8006f7e:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 8006f80:	695d      	ldr	r5, [r3, #20]
 8006f82:	f025 05ff 	bic.w	r5, r5, #255	; 0xff
 8006f86:	615d      	str	r5, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 8006f88:	694d      	ldr	r5, [r1, #20]
 8006f8a:	615d      	str	r5, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 8006f8c:	69dd      	ldr	r5, [r3, #28]
 8006f8e:	f425 65e0 	bic.w	r5, r5, #1792	; 0x700
 8006f92:	f025 0507 	bic.w	r5, r5, #7
 8006f96:	61dd      	str	r5, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 8006f98:	e9d1 5707 	ldrd	r5, r7, [r1, #28]
 8006f9c:	433d      	orrs	r5, r7
 8006f9e:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8006fa0:	6a9d      	ldr	r5, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8006fa2:	6a4d      	ldr	r5, [r1, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8006fa4:	f8c3 e028 	str.w	lr, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8006fa8:	629d      	str	r5, [r3, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 8006faa:	b31e      	cbz	r6, 8006ff4 <LTDC_SetConfig+0x100>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 8006fac:	2e01      	cmp	r6, #1
 8006fae:	d023      	beq.n	8006ff8 <LTDC_SetConfig+0x104>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 8006fb0:	1eb5      	subs	r5, r6, #2
 8006fb2:	2d02      	cmp	r5, #2
 8006fb4:	d922      	bls.n	8006ffc <LTDC_SetConfig+0x108>
  {
    tmp = 2U;
  }
  else
  {
    tmp = 1U;
 8006fb6:	2e07      	cmp	r6, #7
 8006fb8:	bf0c      	ite	eq
 8006fba:	2502      	moveq	r5, #2
 8006fbc:	2501      	movne	r5, #1
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8006fbe:	6ade      	ldr	r6, [r3, #44]	; 0x2c
 8006fc0:	f006 26e0 	and.w	r6, r6, #3758153728	; 0xe000e000
 8006fc4:	62de      	str	r6, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8006fc6:	eba4 040c 	sub.w	r4, r4, ip
 8006fca:	6a8e      	ldr	r6, [r1, #40]	; 0x28
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8006fcc:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8006fce:	436c      	muls	r4, r5
 8006fd0:	436e      	muls	r6, r5
 8006fd2:	3403      	adds	r4, #3
 8006fd4:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
 8006fd8:	62dc      	str	r4, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 8006fda:	6b1c      	ldr	r4, [r3, #48]	; 0x30
 8006fdc:	f424 64ff 	bic.w	r4, r4, #2040	; 0x7f8
 8006fe0:	f024 0407 	bic.w	r4, r4, #7
 8006fe4:	631c      	str	r4, [r3, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8006fe6:	6319      	str	r1, [r3, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 8006fe8:	5883      	ldr	r3, [r0, r2]
 8006fea:	f043 0301 	orr.w	r3, r3, #1
 8006fee:	5083      	str	r3, [r0, r2]
}
 8006ff0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    tmp = 4U;
 8006ff4:	2504      	movs	r5, #4
 8006ff6:	e7e2      	b.n	8006fbe <LTDC_SetConfig+0xca>
    tmp = 3U;
 8006ff8:	2503      	movs	r5, #3
 8006ffa:	e7e0      	b.n	8006fbe <LTDC_SetConfig+0xca>
    tmp = 2U;
 8006ffc:	2502      	movs	r5, #2
 8006ffe:	e7de      	b.n	8006fbe <LTDC_SetConfig+0xca>

08007000 <HAL_LTDC_Init>:
{
 8007000:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 8007002:	4604      	mov	r4, r0
 8007004:	2800      	cmp	r0, #0
 8007006:	d063      	beq.n	80070d0 <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 8007008:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 800700c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8007010:	b91b      	cbnz	r3, 800701a <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 8007012:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 8007016:	f7fa fea9 	bl	8001d6c <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800701a:	2302      	movs	r3, #2
 800701c:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 8007020:	6823      	ldr	r3, [r4, #0]
 8007022:	699a      	ldr	r2, [r3, #24]
 8007024:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 8007028:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800702a:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 800702e:	4302      	orrs	r2, r0
 8007030:	68e0      	ldr	r0, [r4, #12]
 8007032:	6999      	ldr	r1, [r3, #24]
 8007034:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 8007036:	6920      	ldr	r0, [r4, #16]
 8007038:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800703a:	430a      	orrs	r2, r1
 800703c:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800703e:	689a      	ldr	r2, [r3, #8]
 8007040:	4924      	ldr	r1, [pc, #144]	; (80070d4 <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 8007042:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8007044:	400a      	ands	r2, r1
 8007046:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 8007048:	689a      	ldr	r2, [r3, #8]
 800704a:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800704e:	69a0      	ldr	r0, [r4, #24]
 8007050:	4302      	orrs	r2, r0
 8007052:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8007054:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 8007056:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8007058:	400a      	ands	r2, r1
 800705a:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 800705c:	68da      	ldr	r2, [r3, #12]
 800705e:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8007062:	6a20      	ldr	r0, [r4, #32]
 8007064:	4302      	orrs	r2, r0
 8007066:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8007068:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 800706a:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800706c:	400a      	ands	r2, r1
 800706e:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 8007070:	691a      	ldr	r2, [r3, #16]
 8007072:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8007076:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8007078:	4302      	orrs	r2, r0
 800707a:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800707c:	695a      	ldr	r2, [r3, #20]
 800707e:	4011      	ands	r1, r2
 8007080:	6159      	str	r1, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8007082:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 8007084:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8007086:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800708a:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800708c:	430a      	orrs	r2, r1
 800708e:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8007090:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 8007092:	f894 0036 	ldrb.w	r0, [r4, #54]	; 0x36
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 8007096:	f894 5035 	ldrb.w	r5, [r4, #53]	; 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800709a:	f001 417f 	and.w	r1, r1, #4278190080	; 0xff000000
 800709e:	62d9      	str	r1, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 80070a0:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 80070a2:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 80070a6:	430a      	orrs	r2, r1
 80070a8:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 80070ac:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80070b0:	62da      	str	r2, [r3, #44]	; 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 80070b2:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80070b4:	f042 0206 	orr.w	r2, r2, #6
 80070b8:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE(hltdc);
 80070ba:	699a      	ldr	r2, [r3, #24]
 80070bc:	f042 0201 	orr.w	r2, r2, #1
 80070c0:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 80070c2:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 80070c4:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 80070c6:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 80070ca:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
}
 80070ce:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 80070d0:	2001      	movs	r0, #1
 80070d2:	e7fc      	b.n	80070ce <HAL_LTDC_Init+0xce>
 80070d4:	f000f800 	.word	0xf000f800

080070d8 <HAL_LTDC_ErrorCallback>:
 80070d8:	4770      	bx	lr

080070da <HAL_LTDC_ReloadEventCallback>:
 80070da:	4770      	bx	lr

080070dc <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 80070dc:	6803      	ldr	r3, [r0, #0]
{
 80070de:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 80070e0:	6b9e      	ldr	r6, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 80070e2:	6b5d      	ldr	r5, [r3, #52]	; 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 80070e4:	0772      	lsls	r2, r6, #29
{
 80070e6:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 80070e8:	d514      	bpl.n	8007114 <HAL_LTDC_IRQHandler+0x38>
 80070ea:	0769      	lsls	r1, r5, #29
 80070ec:	d512      	bpl.n	8007114 <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 80070ee:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80070f0:	f022 0204 	bic.w	r2, r2, #4
 80070f4:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 80070f6:	2204      	movs	r2, #4
 80070f8:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 80070fa:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 80070fe:	f043 0301 	orr.w	r3, r3, #1
 8007102:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 8007106:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8007108:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800710c:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8007110:	f7ff ffe2 	bl	80070d8 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 8007114:	07b2      	lsls	r2, r6, #30
 8007116:	d516      	bpl.n	8007146 <HAL_LTDC_IRQHandler+0x6a>
 8007118:	07ab      	lsls	r3, r5, #30
 800711a:	d514      	bpl.n	8007146 <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 800711c:	6823      	ldr	r3, [r4, #0]
 800711e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8007120:	f022 0202 	bic.w	r2, r2, #2
 8007124:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 8007126:	2202      	movs	r2, #2
 8007128:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 800712a:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 800712e:	4313      	orrs	r3, r2
 8007130:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8007134:	2304      	movs	r3, #4
 8007136:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800713a:	2300      	movs	r3, #0
 800713c:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8007140:	4620      	mov	r0, r4
 8007142:	f7ff ffc9 	bl	80070d8 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 8007146:	07f0      	lsls	r0, r6, #31
 8007148:	d510      	bpl.n	800716c <HAL_LTDC_IRQHandler+0x90>
 800714a:	07e9      	lsls	r1, r5, #31
 800714c:	d50e      	bpl.n	800716c <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800714e:	6823      	ldr	r3, [r4, #0]
 8007150:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8007152:	f022 0201 	bic.w	r2, r2, #1
 8007156:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 8007158:	2201      	movs	r2, #1
 800715a:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800715c:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800715e:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8007162:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 8007166:	4620      	mov	r0, r4
 8007168:	f7f9 ffd4 	bl	8001114 <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 800716c:	0732      	lsls	r2, r6, #28
 800716e:	d511      	bpl.n	8007194 <HAL_LTDC_IRQHandler+0xb8>
 8007170:	072b      	lsls	r3, r5, #28
 8007172:	d50f      	bpl.n	8007194 <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 8007174:	6823      	ldr	r3, [r4, #0]
 8007176:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8007178:	f022 0208 	bic.w	r2, r2, #8
 800717c:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800717e:	2208      	movs	r2, #8
 8007180:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 8007182:	2301      	movs	r3, #1
 8007184:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8007188:	2300      	movs	r3, #0
 800718a:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 800718e:	4620      	mov	r0, r4
 8007190:	f7ff ffa3 	bl	80070da <HAL_LTDC_ReloadEventCallback>
}
 8007194:	bd70      	pop	{r4, r5, r6, pc}

08007196 <HAL_LTDC_ConfigLayer>:
{
 8007196:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 800719a:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800719e:	2b01      	cmp	r3, #1
{
 80071a0:	4606      	mov	r6, r0
 80071a2:	460f      	mov	r7, r1
 80071a4:	4694      	mov	ip, r2
 80071a6:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 80071aa:	d01f      	beq.n	80071ec <HAL_LTDC_ConfigLayer+0x56>
 80071ac:	f04f 0801 	mov.w	r8, #1
 80071b0:	f886 80a0 	strb.w	r8, [r6, #160]	; 0xa0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 80071b4:	f886 00a1 	strb.w	r0, [r6, #161]	; 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 80071b8:	2434      	movs	r4, #52	; 0x34
 80071ba:	460d      	mov	r5, r1
 80071bc:	fb04 6402 	mla	r4, r4, r2, r6
 80071c0:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80071c2:	3438      	adds	r4, #56	; 0x38
 80071c4:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80071c6:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80071c8:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80071ca:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80071cc:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80071ce:	682b      	ldr	r3, [r5, #0]
 80071d0:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 80071d2:	4630      	mov	r0, r6
 80071d4:	4662      	mov	r2, ip
 80071d6:	4639      	mov	r1, r7
 80071d8:	f7ff fe8c 	bl	8006ef4 <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 80071dc:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 80071de:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 80071e0:	f8c3 8024 	str.w	r8, [r3, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 80071e4:	f886 80a1 	strb.w	r8, [r6, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 80071e8:	f886 00a0 	strb.w	r0, [r6, #160]	; 0xa0
}
 80071ec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080071f0 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 80071f0:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 80071f4:	2b01      	cmp	r3, #1
 80071f6:	f04f 0302 	mov.w	r3, #2
 80071fa:	d012      	beq.n	8007222 <HAL_LTDC_ProgramLineEvent+0x32>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 80071fc:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8007200:	6803      	ldr	r3, [r0, #0]
 8007202:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8007204:	f022 0201 	bic.w	r2, r2, #1
 8007208:	635a      	str	r2, [r3, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800720a:	4a07      	ldr	r2, [pc, #28]	; (8007228 <HAL_LTDC_ProgramLineEvent+0x38>)
 800720c:	6411      	str	r1, [r2, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800720e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8007210:	f042 0201 	orr.w	r2, r2, #1
 8007214:	635a      	str	r2, [r3, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 8007216:	2301      	movs	r3, #1
 8007218:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800721c:	2300      	movs	r3, #0
 800721e:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
  __HAL_LOCK(hltdc);
 8007222:	4618      	mov	r0, r3
}
 8007224:	4770      	bx	lr
 8007226:	bf00      	nop
 8007228:	40016800 	.word	0x40016800

0800722c <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 800722c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 8007230:	4604      	mov	r4, r0
 8007232:	b340      	cbz	r0, 8007286 <HAL_RCC_OscConfig+0x5a>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8007234:	6803      	ldr	r3, [r0, #0]
 8007236:	07dd      	lsls	r5, r3, #31
 8007238:	d410      	bmi.n	800725c <HAL_RCC_OscConfig+0x30>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800723a:	6823      	ldr	r3, [r4, #0]
 800723c:	0798      	lsls	r0, r3, #30
 800723e:	d45e      	bmi.n	80072fe <HAL_RCC_OscConfig+0xd2>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8007240:	6823      	ldr	r3, [r4, #0]
 8007242:	071a      	lsls	r2, r3, #28
 8007244:	f100 80a0 	bmi.w	8007388 <HAL_RCC_OscConfig+0x15c>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8007248:	6823      	ldr	r3, [r4, #0]
 800724a:	075b      	lsls	r3, r3, #29
 800724c:	f100 80c0 	bmi.w	80073d0 <HAL_RCC_OscConfig+0x1a4>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8007250:	69a0      	ldr	r0, [r4, #24]
 8007252:	2800      	cmp	r0, #0
 8007254:	f040 8128 	bne.w	80074a8 <HAL_RCC_OscConfig+0x27c>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 8007258:	2000      	movs	r0, #0
 800725a:	e02b      	b.n	80072b4 <HAL_RCC_OscConfig+0x88>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800725c:	4b8f      	ldr	r3, [pc, #572]	; (800749c <HAL_RCC_OscConfig+0x270>)
 800725e:	689a      	ldr	r2, [r3, #8]
 8007260:	f002 020c 	and.w	r2, r2, #12
 8007264:	2a04      	cmp	r2, #4
 8007266:	d007      	beq.n	8007278 <HAL_RCC_OscConfig+0x4c>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8007268:	689a      	ldr	r2, [r3, #8]
 800726a:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800726e:	2a08      	cmp	r2, #8
 8007270:	d10b      	bne.n	800728a <HAL_RCC_OscConfig+0x5e>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8007272:	685a      	ldr	r2, [r3, #4]
 8007274:	0251      	lsls	r1, r2, #9
 8007276:	d508      	bpl.n	800728a <HAL_RCC_OscConfig+0x5e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8007278:	4b88      	ldr	r3, [pc, #544]	; (800749c <HAL_RCC_OscConfig+0x270>)
 800727a:	681b      	ldr	r3, [r3, #0]
 800727c:	039a      	lsls	r2, r3, #14
 800727e:	d5dc      	bpl.n	800723a <HAL_RCC_OscConfig+0xe>
 8007280:	6863      	ldr	r3, [r4, #4]
 8007282:	2b00      	cmp	r3, #0
 8007284:	d1d9      	bne.n	800723a <HAL_RCC_OscConfig+0xe>
          return HAL_ERROR;
 8007286:	2001      	movs	r0, #1
 8007288:	e014      	b.n	80072b4 <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800728a:	6862      	ldr	r2, [r4, #4]
 800728c:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 8007290:	d113      	bne.n	80072ba <HAL_RCC_OscConfig+0x8e>
 8007292:	681a      	ldr	r2, [r3, #0]
 8007294:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8007298:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800729a:	f7fe fd3d 	bl	8005d18 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800729e:	4e7f      	ldr	r6, [pc, #508]	; (800749c <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 80072a0:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80072a2:	6833      	ldr	r3, [r6, #0]
 80072a4:	039b      	lsls	r3, r3, #14
 80072a6:	d4c8      	bmi.n	800723a <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 80072a8:	f7fe fd36 	bl	8005d18 <HAL_GetTick>
 80072ac:	1b40      	subs	r0, r0, r5
 80072ae:	2864      	cmp	r0, #100	; 0x64
 80072b0:	d9f7      	bls.n	80072a2 <HAL_RCC_OscConfig+0x76>
            return HAL_TIMEOUT;
 80072b2:	2003      	movs	r0, #3
}
 80072b4:	b002      	add	sp, #8
 80072b6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80072ba:	4d78      	ldr	r5, [pc, #480]	; (800749c <HAL_RCC_OscConfig+0x270>)
 80072bc:	f5b2 2fa0 	cmp.w	r2, #327680	; 0x50000
 80072c0:	682b      	ldr	r3, [r5, #0]
 80072c2:	d107      	bne.n	80072d4 <HAL_RCC_OscConfig+0xa8>
 80072c4:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80072c8:	602b      	str	r3, [r5, #0]
 80072ca:	682b      	ldr	r3, [r5, #0]
 80072cc:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80072d0:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 80072d2:	e7e2      	b.n	800729a <HAL_RCC_OscConfig+0x6e>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80072d4:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80072d8:	602b      	str	r3, [r5, #0]
 80072da:	682b      	ldr	r3, [r5, #0]
 80072dc:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80072e0:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 80072e2:	2a00      	cmp	r2, #0
 80072e4:	d1d9      	bne.n	800729a <HAL_RCC_OscConfig+0x6e>
        tickstart = HAL_GetTick();
 80072e6:	f7fe fd17 	bl	8005d18 <HAL_GetTick>
 80072ea:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 80072ec:	682b      	ldr	r3, [r5, #0]
 80072ee:	039f      	lsls	r7, r3, #14
 80072f0:	d5a3      	bpl.n	800723a <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 80072f2:	f7fe fd11 	bl	8005d18 <HAL_GetTick>
 80072f6:	1b80      	subs	r0, r0, r6
 80072f8:	2864      	cmp	r0, #100	; 0x64
 80072fa:	d9f7      	bls.n	80072ec <HAL_RCC_OscConfig+0xc0>
 80072fc:	e7d9      	b.n	80072b2 <HAL_RCC_OscConfig+0x86>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 80072fe:	4b67      	ldr	r3, [pc, #412]	; (800749c <HAL_RCC_OscConfig+0x270>)
 8007300:	689a      	ldr	r2, [r3, #8]
 8007302:	f012 0f0c 	tst.w	r2, #12
 8007306:	d007      	beq.n	8007318 <HAL_RCC_OscConfig+0xec>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8007308:	689a      	ldr	r2, [r3, #8]
 800730a:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800730e:	2a08      	cmp	r2, #8
 8007310:	d111      	bne.n	8007336 <HAL_RCC_OscConfig+0x10a>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8007312:	685b      	ldr	r3, [r3, #4]
 8007314:	025e      	lsls	r6, r3, #9
 8007316:	d40e      	bmi.n	8007336 <HAL_RCC_OscConfig+0x10a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8007318:	4a60      	ldr	r2, [pc, #384]	; (800749c <HAL_RCC_OscConfig+0x270>)
 800731a:	6813      	ldr	r3, [r2, #0]
 800731c:	079d      	lsls	r5, r3, #30
 800731e:	d502      	bpl.n	8007326 <HAL_RCC_OscConfig+0xfa>
 8007320:	68e3      	ldr	r3, [r4, #12]
 8007322:	2b01      	cmp	r3, #1
 8007324:	d1af      	bne.n	8007286 <HAL_RCC_OscConfig+0x5a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8007326:	6813      	ldr	r3, [r2, #0]
 8007328:	6921      	ldr	r1, [r4, #16]
 800732a:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800732e:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8007332:	6013      	str	r3, [r2, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8007334:	e784      	b.n	8007240 <HAL_RCC_OscConfig+0x14>
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 8007336:	68e2      	ldr	r2, [r4, #12]
 8007338:	4b59      	ldr	r3, [pc, #356]	; (80074a0 <HAL_RCC_OscConfig+0x274>)
 800733a:	b1b2      	cbz	r2, 800736a <HAL_RCC_OscConfig+0x13e>
        __HAL_RCC_HSI_ENABLE();
 800733c:	2201      	movs	r2, #1
 800733e:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8007340:	f7fe fcea 	bl	8005d18 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8007344:	4d55      	ldr	r5, [pc, #340]	; (800749c <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 8007346:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8007348:	682b      	ldr	r3, [r5, #0]
 800734a:	0798      	lsls	r0, r3, #30
 800734c:	d507      	bpl.n	800735e <HAL_RCC_OscConfig+0x132>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800734e:	682b      	ldr	r3, [r5, #0]
 8007350:	6922      	ldr	r2, [r4, #16]
 8007352:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8007356:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800735a:	602b      	str	r3, [r5, #0]
 800735c:	e770      	b.n	8007240 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800735e:	f7fe fcdb 	bl	8005d18 <HAL_GetTick>
 8007362:	1b80      	subs	r0, r0, r6
 8007364:	2802      	cmp	r0, #2
 8007366:	d9ef      	bls.n	8007348 <HAL_RCC_OscConfig+0x11c>
 8007368:	e7a3      	b.n	80072b2 <HAL_RCC_OscConfig+0x86>
        __HAL_RCC_HSI_DISABLE();
 800736a:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800736c:	f7fe fcd4 	bl	8005d18 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8007370:	4e4a      	ldr	r6, [pc, #296]	; (800749c <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 8007372:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8007374:	6833      	ldr	r3, [r6, #0]
 8007376:	0799      	lsls	r1, r3, #30
 8007378:	f57f af62 	bpl.w	8007240 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800737c:	f7fe fccc 	bl	8005d18 <HAL_GetTick>
 8007380:	1b40      	subs	r0, r0, r5
 8007382:	2802      	cmp	r0, #2
 8007384:	d9f6      	bls.n	8007374 <HAL_RCC_OscConfig+0x148>
 8007386:	e794      	b.n	80072b2 <HAL_RCC_OscConfig+0x86>
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 8007388:	6962      	ldr	r2, [r4, #20]
 800738a:	4b45      	ldr	r3, [pc, #276]	; (80074a0 <HAL_RCC_OscConfig+0x274>)
 800738c:	b182      	cbz	r2, 80073b0 <HAL_RCC_OscConfig+0x184>
      __HAL_RCC_LSI_ENABLE();
 800738e:	2201      	movs	r2, #1
 8007390:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 8007394:	f7fe fcc0 	bl	8005d18 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8007398:	4e40      	ldr	r6, [pc, #256]	; (800749c <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 800739a:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800739c:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800739e:	079f      	lsls	r7, r3, #30
 80073a0:	f53f af52 	bmi.w	8007248 <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 80073a4:	f7fe fcb8 	bl	8005d18 <HAL_GetTick>
 80073a8:	1b40      	subs	r0, r0, r5
 80073aa:	2802      	cmp	r0, #2
 80073ac:	d9f6      	bls.n	800739c <HAL_RCC_OscConfig+0x170>
 80073ae:	e780      	b.n	80072b2 <HAL_RCC_OscConfig+0x86>
      __HAL_RCC_LSI_DISABLE();
 80073b0:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 80073b4:	f7fe fcb0 	bl	8005d18 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 80073b8:	4e38      	ldr	r6, [pc, #224]	; (800749c <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 80073ba:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 80073bc:	6f73      	ldr	r3, [r6, #116]	; 0x74
 80073be:	0798      	lsls	r0, r3, #30
 80073c0:	f57f af42 	bpl.w	8007248 <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 80073c4:	f7fe fca8 	bl	8005d18 <HAL_GetTick>
 80073c8:	1b40      	subs	r0, r0, r5
 80073ca:	2802      	cmp	r0, #2
 80073cc:	d9f6      	bls.n	80073bc <HAL_RCC_OscConfig+0x190>
 80073ce:	e770      	b.n	80072b2 <HAL_RCC_OscConfig+0x86>
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 80073d0:	4b32      	ldr	r3, [pc, #200]	; (800749c <HAL_RCC_OscConfig+0x270>)
 80073d2:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80073d4:	f012 5280 	ands.w	r2, r2, #268435456	; 0x10000000
 80073d8:	d128      	bne.n	800742c <HAL_RCC_OscConfig+0x200>
      __HAL_RCC_PWR_CLK_ENABLE();
 80073da:	9201      	str	r2, [sp, #4]
 80073dc:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80073de:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 80073e2:	641a      	str	r2, [r3, #64]	; 0x40
 80073e4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80073e6:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80073ea:	9301      	str	r3, [sp, #4]
 80073ec:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 80073ee:	2701      	movs	r7, #1
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80073f0:	4d2c      	ldr	r5, [pc, #176]	; (80074a4 <HAL_RCC_OscConfig+0x278>)
 80073f2:	682b      	ldr	r3, [r5, #0]
 80073f4:	05d9      	lsls	r1, r3, #23
 80073f6:	d51b      	bpl.n	8007430 <HAL_RCC_OscConfig+0x204>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80073f8:	68a3      	ldr	r3, [r4, #8]
 80073fa:	4d28      	ldr	r5, [pc, #160]	; (800749c <HAL_RCC_OscConfig+0x270>)
 80073fc:	2b01      	cmp	r3, #1
 80073fe:	d127      	bne.n	8007450 <HAL_RCC_OscConfig+0x224>
 8007400:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8007402:	f043 0301 	orr.w	r3, r3, #1
 8007406:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();
 8007408:	f7fe fc86 	bl	8005d18 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800740c:	4e23      	ldr	r6, [pc, #140]	; (800749c <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 800740e:	4605      	mov	r5, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8007410:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8007414:	6f33      	ldr	r3, [r6, #112]	; 0x70
 8007416:	079b      	lsls	r3, r3, #30
 8007418:	d539      	bpl.n	800748e <HAL_RCC_OscConfig+0x262>
    if(pwrclkchanged == SET)
 800741a:	2f00      	cmp	r7, #0
 800741c:	f43f af18 	beq.w	8007250 <HAL_RCC_OscConfig+0x24>
      __HAL_RCC_PWR_CLK_DISABLE();
 8007420:	4a1e      	ldr	r2, [pc, #120]	; (800749c <HAL_RCC_OscConfig+0x270>)
 8007422:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8007424:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8007428:	6413      	str	r3, [r2, #64]	; 0x40
 800742a:	e711      	b.n	8007250 <HAL_RCC_OscConfig+0x24>
    FlagStatus       pwrclkchanged = RESET;
 800742c:	2700      	movs	r7, #0
 800742e:	e7df      	b.n	80073f0 <HAL_RCC_OscConfig+0x1c4>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8007430:	682b      	ldr	r3, [r5, #0]
 8007432:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8007436:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 8007438:	f7fe fc6e 	bl	8005d18 <HAL_GetTick>
 800743c:	4606      	mov	r6, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800743e:	682b      	ldr	r3, [r5, #0]
 8007440:	05da      	lsls	r2, r3, #23
 8007442:	d4d9      	bmi.n	80073f8 <HAL_RCC_OscConfig+0x1cc>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8007444:	f7fe fc68 	bl	8005d18 <HAL_GetTick>
 8007448:	1b80      	subs	r0, r0, r6
 800744a:	2802      	cmp	r0, #2
 800744c:	d9f7      	bls.n	800743e <HAL_RCC_OscConfig+0x212>
 800744e:	e730      	b.n	80072b2 <HAL_RCC_OscConfig+0x86>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8007450:	2b05      	cmp	r3, #5
 8007452:	d104      	bne.n	800745e <HAL_RCC_OscConfig+0x232>
 8007454:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8007456:	f043 0304 	orr.w	r3, r3, #4
 800745a:	672b      	str	r3, [r5, #112]	; 0x70
 800745c:	e7d0      	b.n	8007400 <HAL_RCC_OscConfig+0x1d4>
 800745e:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 8007460:	f022 0201 	bic.w	r2, r2, #1
 8007464:	672a      	str	r2, [r5, #112]	; 0x70
 8007466:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 8007468:	f022 0204 	bic.w	r2, r2, #4
 800746c:	672a      	str	r2, [r5, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800746e:	2b00      	cmp	r3, #0
 8007470:	d1ca      	bne.n	8007408 <HAL_RCC_OscConfig+0x1dc>
      tickstart = HAL_GetTick();
 8007472:	f7fe fc51 	bl	8005d18 <HAL_GetTick>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8007476:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 800747a:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800747c:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800747e:	0798      	lsls	r0, r3, #30
 8007480:	d5cb      	bpl.n	800741a <HAL_RCC_OscConfig+0x1ee>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8007482:	f7fe fc49 	bl	8005d18 <HAL_GetTick>
 8007486:	1b80      	subs	r0, r0, r6
 8007488:	4540      	cmp	r0, r8
 800748a:	d9f7      	bls.n	800747c <HAL_RCC_OscConfig+0x250>
 800748c:	e711      	b.n	80072b2 <HAL_RCC_OscConfig+0x86>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800748e:	f7fe fc43 	bl	8005d18 <HAL_GetTick>
 8007492:	1b40      	subs	r0, r0, r5
 8007494:	4540      	cmp	r0, r8
 8007496:	d9bd      	bls.n	8007414 <HAL_RCC_OscConfig+0x1e8>
 8007498:	e70b      	b.n	80072b2 <HAL_RCC_OscConfig+0x86>
 800749a:	bf00      	nop
 800749c:	40023800 	.word	0x40023800
 80074a0:	42470000 	.word	0x42470000
 80074a4:	40007000 	.word	0x40007000
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 80074a8:	4d33      	ldr	r5, [pc, #204]	; (8007578 <HAL_RCC_OscConfig+0x34c>)
 80074aa:	68ab      	ldr	r3, [r5, #8]
 80074ac:	f003 030c 	and.w	r3, r3, #12
 80074b0:	2b08      	cmp	r3, #8
 80074b2:	d03d      	beq.n	8007530 <HAL_RCC_OscConfig+0x304>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 80074b4:	4b31      	ldr	r3, [pc, #196]	; (800757c <HAL_RCC_OscConfig+0x350>)
 80074b6:	2200      	movs	r2, #0
 80074b8:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 80074ba:	661a      	str	r2, [r3, #96]	; 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 80074bc:	d12b      	bne.n	8007516 <HAL_RCC_OscConfig+0x2ea>
        tickstart = HAL_GetTick();
 80074be:	f7fe fc2b 	bl	8005d18 <HAL_GetTick>
 80074c2:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80074c4:	682b      	ldr	r3, [r5, #0]
 80074c6:	0199      	lsls	r1, r3, #6
 80074c8:	d41f      	bmi.n	800750a <HAL_RCC_OscConfig+0x2de>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 80074ca:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 80074ce:	4313      	orrs	r3, r2
 80074d0:	6a62      	ldr	r2, [r4, #36]	; 0x24
 80074d2:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 80074d6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80074d8:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 80074dc:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80074de:	0852      	lsrs	r2, r2, #1
 80074e0:	3a01      	subs	r2, #1
 80074e2:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80074e6:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 80074e8:	4b24      	ldr	r3, [pc, #144]	; (800757c <HAL_RCC_OscConfig+0x350>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80074ea:	4d23      	ldr	r5, [pc, #140]	; (8007578 <HAL_RCC_OscConfig+0x34c>)
        __HAL_RCC_PLL_ENABLE();
 80074ec:	2201      	movs	r2, #1
 80074ee:	661a      	str	r2, [r3, #96]	; 0x60
        tickstart = HAL_GetTick();
 80074f0:	f7fe fc12 	bl	8005d18 <HAL_GetTick>
 80074f4:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80074f6:	682b      	ldr	r3, [r5, #0]
 80074f8:	019a      	lsls	r2, r3, #6
 80074fa:	f53f aead 	bmi.w	8007258 <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80074fe:	f7fe fc0b 	bl	8005d18 <HAL_GetTick>
 8007502:	1b00      	subs	r0, r0, r4
 8007504:	2802      	cmp	r0, #2
 8007506:	d9f6      	bls.n	80074f6 <HAL_RCC_OscConfig+0x2ca>
 8007508:	e6d3      	b.n	80072b2 <HAL_RCC_OscConfig+0x86>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800750a:	f7fe fc05 	bl	8005d18 <HAL_GetTick>
 800750e:	1b80      	subs	r0, r0, r6
 8007510:	2802      	cmp	r0, #2
 8007512:	d9d7      	bls.n	80074c4 <HAL_RCC_OscConfig+0x298>
 8007514:	e6cd      	b.n	80072b2 <HAL_RCC_OscConfig+0x86>
        tickstart = HAL_GetTick();
 8007516:	f7fe fbff 	bl	8005d18 <HAL_GetTick>
 800751a:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800751c:	682b      	ldr	r3, [r5, #0]
 800751e:	019b      	lsls	r3, r3, #6
 8007520:	f57f ae9a 	bpl.w	8007258 <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8007524:	f7fe fbf8 	bl	8005d18 <HAL_GetTick>
 8007528:	1b00      	subs	r0, r0, r4
 800752a:	2802      	cmp	r0, #2
 800752c:	d9f6      	bls.n	800751c <HAL_RCC_OscConfig+0x2f0>
 800752e:	e6c0      	b.n	80072b2 <HAL_RCC_OscConfig+0x86>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8007530:	2801      	cmp	r0, #1
 8007532:	f43f aebf 	beq.w	80072b4 <HAL_RCC_OscConfig+0x88>
        pll_config = RCC->PLLCFGR;
 8007536:	686b      	ldr	r3, [r5, #4]
        if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8007538:	69e2      	ldr	r2, [r4, #28]
 800753a:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
 800753e:	4291      	cmp	r1, r2
 8007540:	f47f aea1 	bne.w	8007286 <HAL_RCC_OscConfig+0x5a>
 8007544:	6a21      	ldr	r1, [r4, #32]
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8007546:	f003 023f 	and.w	r2, r3, #63	; 0x3f
        if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800754a:	428a      	cmp	r2, r1
 800754c:	f47f ae9b 	bne.w	8007286 <HAL_RCC_OscConfig+0x5a>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8007550:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8007552:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 8007556:	401a      	ands	r2, r3
 8007558:	428a      	cmp	r2, r1
 800755a:	f47f ae94 	bne.w	8007286 <HAL_RCC_OscConfig+0x5a>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 800755e:	6aa1      	ldr	r1, [r4, #40]	; 0x28
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 8007560:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 8007564:	428a      	cmp	r2, r1
 8007566:	f47f ae8e 	bne.w	8007286 <HAL_RCC_OscConfig+0x5a>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 800756a:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != RCC_OscInitStruct->PLL.PLLQ))
 800756c:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 8007570:	4293      	cmp	r3, r2
 8007572:	f43f ae71 	beq.w	8007258 <HAL_RCC_OscConfig+0x2c>
 8007576:	e686      	b.n	8007286 <HAL_RCC_OscConfig+0x5a>
 8007578:	40023800 	.word	0x40023800
 800757c:	42470000 	.word	0x42470000

08007580 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8007580:	4913      	ldr	r1, [pc, #76]	; (80075d0 <HAL_RCC_GetSysClockFreq+0x50>)
{
 8007582:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8007584:	688b      	ldr	r3, [r1, #8]
 8007586:	f003 030c 	and.w	r3, r3, #12
 800758a:	2b04      	cmp	r3, #4
 800758c:	d01c      	beq.n	80075c8 <HAL_RCC_GetSysClockFreq+0x48>
 800758e:	2b08      	cmp	r3, #8
 8007590:	d11c      	bne.n	80075cc <HAL_RCC_GetSysClockFreq+0x4c>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8007592:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8007594:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8007596:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8007598:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800759c:	bf14      	ite	ne
 800759e:	480d      	ldrne	r0, [pc, #52]	; (80075d4 <HAL_RCC_GetSysClockFreq+0x54>)
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80075a0:	480d      	ldreq	r0, [pc, #52]	; (80075d8 <HAL_RCC_GetSysClockFreq+0x58>)
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80075a2:	f3c1 1188 	ubfx	r1, r1, #6, #9
 80075a6:	bf18      	it	ne
 80075a8:	2300      	movne	r3, #0
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 80075aa:	f002 023f 	and.w	r2, r2, #63	; 0x3f
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80075ae:	fba1 0100 	umull	r0, r1, r1, r0
 80075b2:	f7f8 fe6d 	bl	8000290 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 80075b6:	4b06      	ldr	r3, [pc, #24]	; (80075d0 <HAL_RCC_GetSysClockFreq+0x50>)
 80075b8:	685b      	ldr	r3, [r3, #4]
 80075ba:	f3c3 4301 	ubfx	r3, r3, #16, #2
 80075be:	3301      	adds	r3, #1
 80075c0:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 80075c2:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 80075c6:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 80075c8:	4802      	ldr	r0, [pc, #8]	; (80075d4 <HAL_RCC_GetSysClockFreq+0x54>)
 80075ca:	e7fc      	b.n	80075c6 <HAL_RCC_GetSysClockFreq+0x46>
      sysclockfreq = HSI_VALUE;
 80075cc:	4802      	ldr	r0, [pc, #8]	; (80075d8 <HAL_RCC_GetSysClockFreq+0x58>)
  return sysclockfreq;
 80075ce:	e7fa      	b.n	80075c6 <HAL_RCC_GetSysClockFreq+0x46>
 80075d0:	40023800 	.word	0x40023800
 80075d4:	007a1200 	.word	0x007a1200
 80075d8:	00f42400 	.word	0x00f42400

080075dc <HAL_RCC_ClockConfig>:
{
 80075dc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80075e0:	460d      	mov	r5, r1
  if(RCC_ClkInitStruct == NULL)
 80075e2:	4604      	mov	r4, r0
 80075e4:	b910      	cbnz	r0, 80075ec <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 80075e6:	2001      	movs	r0, #1
}
 80075e8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 80075ec:	4b44      	ldr	r3, [pc, #272]	; (8007700 <HAL_RCC_ClockConfig+0x124>)
 80075ee:	681a      	ldr	r2, [r3, #0]
 80075f0:	f002 020f 	and.w	r2, r2, #15
 80075f4:	428a      	cmp	r2, r1
 80075f6:	d328      	bcc.n	800764a <HAL_RCC_ClockConfig+0x6e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 80075f8:	6822      	ldr	r2, [r4, #0]
 80075fa:	0797      	lsls	r7, r2, #30
 80075fc:	d42d      	bmi.n	800765a <HAL_RCC_ClockConfig+0x7e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 80075fe:	07d0      	lsls	r0, r2, #31
 8007600:	d441      	bmi.n	8007686 <HAL_RCC_ClockConfig+0xaa>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 8007602:	4b3f      	ldr	r3, [pc, #252]	; (8007700 <HAL_RCC_ClockConfig+0x124>)
 8007604:	681a      	ldr	r2, [r3, #0]
 8007606:	f002 020f 	and.w	r2, r2, #15
 800760a:	42aa      	cmp	r2, r5
 800760c:	d866      	bhi.n	80076dc <HAL_RCC_ClockConfig+0x100>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800760e:	6822      	ldr	r2, [r4, #0]
 8007610:	0751      	lsls	r1, r2, #29
 8007612:	d46c      	bmi.n	80076ee <HAL_RCC_ClockConfig+0x112>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8007614:	0713      	lsls	r3, r2, #28
 8007616:	d507      	bpl.n	8007628 <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 8007618:	4a3a      	ldr	r2, [pc, #232]	; (8007704 <HAL_RCC_ClockConfig+0x128>)
 800761a:	6921      	ldr	r1, [r4, #16]
 800761c:	6893      	ldr	r3, [r2, #8]
 800761e:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 8007622:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8007626:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 8007628:	f7ff ffaa 	bl	8007580 <HAL_RCC_GetSysClockFreq>
 800762c:	4b35      	ldr	r3, [pc, #212]	; (8007704 <HAL_RCC_ClockConfig+0x128>)
 800762e:	4a36      	ldr	r2, [pc, #216]	; (8007708 <HAL_RCC_ClockConfig+0x12c>)
 8007630:	689b      	ldr	r3, [r3, #8]
 8007632:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8007636:	5cd3      	ldrb	r3, [r2, r3]
 8007638:	40d8      	lsrs	r0, r3
 800763a:	4b34      	ldr	r3, [pc, #208]	; (800770c <HAL_RCC_ClockConfig+0x130>)
 800763c:	6018      	str	r0, [r3, #0]
  HAL_InitTick (uwTickPrio);
 800763e:	4b34      	ldr	r3, [pc, #208]	; (8007710 <HAL_RCC_ClockConfig+0x134>)
 8007640:	6818      	ldr	r0, [r3, #0]
 8007642:	f7fa fd1d 	bl	8002080 <HAL_InitTick>
  return HAL_OK;
 8007646:	2000      	movs	r0, #0
 8007648:	e7ce      	b.n	80075e8 <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800764a:	b2ca      	uxtb	r2, r1
 800764c:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800764e:	681b      	ldr	r3, [r3, #0]
 8007650:	f003 030f 	and.w	r3, r3, #15
 8007654:	428b      	cmp	r3, r1
 8007656:	d1c6      	bne.n	80075e6 <HAL_RCC_ClockConfig+0xa>
 8007658:	e7ce      	b.n	80075f8 <HAL_RCC_ClockConfig+0x1c>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800765a:	4b2a      	ldr	r3, [pc, #168]	; (8007704 <HAL_RCC_ClockConfig+0x128>)
 800765c:	f012 0f04 	tst.w	r2, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8007660:	bf1e      	ittt	ne
 8007662:	6899      	ldrne	r1, [r3, #8]
 8007664:	f441 51e0 	orrne.w	r1, r1, #7168	; 0x1c00
 8007668:	6099      	strne	r1, [r3, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800766a:	0716      	lsls	r6, r2, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 800766c:	bf42      	ittt	mi
 800766e:	6899      	ldrmi	r1, [r3, #8]
 8007670:	f441 4160 	orrmi.w	r1, r1, #57344	; 0xe000
 8007674:	6099      	strmi	r1, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8007676:	4923      	ldr	r1, [pc, #140]	; (8007704 <HAL_RCC_ClockConfig+0x128>)
 8007678:	68a0      	ldr	r0, [r4, #8]
 800767a:	688b      	ldr	r3, [r1, #8]
 800767c:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8007680:	4303      	orrs	r3, r0
 8007682:	608b      	str	r3, [r1, #8]
 8007684:	e7bb      	b.n	80075fe <HAL_RCC_ClockConfig+0x22>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8007686:	6862      	ldr	r2, [r4, #4]
 8007688:	4b1e      	ldr	r3, [pc, #120]	; (8007704 <HAL_RCC_ClockConfig+0x128>)
 800768a:	2a01      	cmp	r2, #1
 800768c:	d11c      	bne.n	80076c8 <HAL_RCC_ClockConfig+0xec>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800768e:	681b      	ldr	r3, [r3, #0]
 8007690:	f413 3f00 	tst.w	r3, #131072	; 0x20000
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8007694:	d0a7      	beq.n	80075e6 <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8007696:	4e1b      	ldr	r6, [pc, #108]	; (8007704 <HAL_RCC_ClockConfig+0x128>)
 8007698:	68b3      	ldr	r3, [r6, #8]
 800769a:	f023 0303 	bic.w	r3, r3, #3
 800769e:	4313      	orrs	r3, r2
 80076a0:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 80076a2:	f7fe fb39 	bl	8005d18 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 80076a6:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 80076aa:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 80076ac:	68b3      	ldr	r3, [r6, #8]
 80076ae:	6862      	ldr	r2, [r4, #4]
 80076b0:	f003 030c 	and.w	r3, r3, #12
 80076b4:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 80076b8:	d0a3      	beq.n	8007602 <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 80076ba:	f7fe fb2d 	bl	8005d18 <HAL_GetTick>
 80076be:	1bc0      	subs	r0, r0, r7
 80076c0:	4540      	cmp	r0, r8
 80076c2:	d9f3      	bls.n	80076ac <HAL_RCC_ClockConfig+0xd0>
        return HAL_TIMEOUT;
 80076c4:	2003      	movs	r0, #3
 80076c6:	e78f      	b.n	80075e8 <HAL_RCC_ClockConfig+0xc>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 80076c8:	1e91      	subs	r1, r2, #2
 80076ca:	2901      	cmp	r1, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80076cc:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 80076ce:	d802      	bhi.n	80076d6 <HAL_RCC_ClockConfig+0xfa>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80076d0:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 80076d4:	e7de      	b.n	8007694 <HAL_RCC_ClockConfig+0xb8>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80076d6:	f013 0f02 	tst.w	r3, #2
 80076da:	e7db      	b.n	8007694 <HAL_RCC_ClockConfig+0xb8>
    __HAL_FLASH_SET_LATENCY(FLatency);
 80076dc:	b2ea      	uxtb	r2, r5
 80076de:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 80076e0:	681b      	ldr	r3, [r3, #0]
 80076e2:	f003 030f 	and.w	r3, r3, #15
 80076e6:	42ab      	cmp	r3, r5
 80076e8:	f47f af7d 	bne.w	80075e6 <HAL_RCC_ClockConfig+0xa>
 80076ec:	e78f      	b.n	800760e <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 80076ee:	4905      	ldr	r1, [pc, #20]	; (8007704 <HAL_RCC_ClockConfig+0x128>)
 80076f0:	68e0      	ldr	r0, [r4, #12]
 80076f2:	688b      	ldr	r3, [r1, #8]
 80076f4:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 80076f8:	4303      	orrs	r3, r0
 80076fa:	608b      	str	r3, [r1, #8]
 80076fc:	e78a      	b.n	8007614 <HAL_RCC_ClockConfig+0x38>
 80076fe:	bf00      	nop
 8007700:	40023c00 	.word	0x40023c00
 8007704:	40023800 	.word	0x40023800
 8007708:	0802366c 	.word	0x0802366c
 800770c:	2000007c 	.word	0x2000007c
 8007710:	20000084 	.word	0x20000084

08007714 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 8007714:	4b04      	ldr	r3, [pc, #16]	; (8007728 <HAL_RCC_GetPCLK1Freq+0x14>)
 8007716:	4a05      	ldr	r2, [pc, #20]	; (800772c <HAL_RCC_GetPCLK1Freq+0x18>)
 8007718:	689b      	ldr	r3, [r3, #8]
 800771a:	f3c3 2382 	ubfx	r3, r3, #10, #3
 800771e:	5cd3      	ldrb	r3, [r2, r3]
 8007720:	4a03      	ldr	r2, [pc, #12]	; (8007730 <HAL_RCC_GetPCLK1Freq+0x1c>)
 8007722:	6810      	ldr	r0, [r2, #0]
}
 8007724:	40d8      	lsrs	r0, r3
 8007726:	4770      	bx	lr
 8007728:	40023800 	.word	0x40023800
 800772c:	0802367c 	.word	0x0802367c
 8007730:	2000007c 	.word	0x2000007c

08007734 <HAL_RCC_GetPCLK2Freq>:
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2)>> RCC_CFGR_PPRE2_Pos]);
 8007734:	4b04      	ldr	r3, [pc, #16]	; (8007748 <HAL_RCC_GetPCLK2Freq+0x14>)
 8007736:	4a05      	ldr	r2, [pc, #20]	; (800774c <HAL_RCC_GetPCLK2Freq+0x18>)
 8007738:	689b      	ldr	r3, [r3, #8]
 800773a:	f3c3 3342 	ubfx	r3, r3, #13, #3
 800773e:	5cd3      	ldrb	r3, [r2, r3]
 8007740:	4a03      	ldr	r2, [pc, #12]	; (8007750 <HAL_RCC_GetPCLK2Freq+0x1c>)
 8007742:	6810      	ldr	r0, [r2, #0]
}
 8007744:	40d8      	lsrs	r0, r3
 8007746:	4770      	bx	lr
 8007748:	40023800 	.word	0x40023800
 800774c:	0802367c 	.word	0x0802367c
 8007750:	2000007c 	.word	0x2000007c

08007754 <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 8007754:	230f      	movs	r3, #15
 8007756:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 8007758:	4b0b      	ldr	r3, [pc, #44]	; (8007788 <HAL_RCC_GetClockConfig+0x34>)
 800775a:	689a      	ldr	r2, [r3, #8]
 800775c:	f002 0203 	and.w	r2, r2, #3
 8007760:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 8007762:	689a      	ldr	r2, [r3, #8]
 8007764:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 8007768:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 800776a:	689a      	ldr	r2, [r3, #8]
 800776c:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 8007770:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 8007772:	689b      	ldr	r3, [r3, #8]
 8007774:	08db      	lsrs	r3, r3, #3
 8007776:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 800777a:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800777c:	4b03      	ldr	r3, [pc, #12]	; (800778c <HAL_RCC_GetClockConfig+0x38>)
 800777e:	681b      	ldr	r3, [r3, #0]
 8007780:	f003 030f 	and.w	r3, r3, #15
 8007784:	600b      	str	r3, [r1, #0]
}
 8007786:	4770      	bx	lr
 8007788:	40023800 	.word	0x40023800
 800778c:	40023c00 	.word	0x40023c00

08007790 <HAL_RCCEx_PeriphCLKConfig>:
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 8007790:	6803      	ldr	r3, [r0, #0]
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8007792:	f013 0f43 	tst.w	r3, #67	; 0x43
{
 8007796:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007798:	4604      	mov	r4, r0
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800779a:	f040 808c 	bne.w	80078b6 <HAL_RCCEx_PeriphCLKConfig+0x126>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800779e:	6823      	ldr	r3, [r4, #0]
 80077a0:	f013 0f0c 	tst.w	r3, #12
 80077a4:	d045      	beq.n	8007832 <HAL_RCCEx_PeriphCLKConfig+0xa2>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 80077a6:	4b8b      	ldr	r3, [pc, #556]	; (80079d4 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 80077a8:	4d8b      	ldr	r5, [pc, #556]	; (80079d8 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLSAI_DISABLE();
 80077aa:	2200      	movs	r2, #0
 80077ac:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 80077ae:	f7fe fab3 	bl	8005d18 <HAL_GetTick>
 80077b2:	4606      	mov	r6, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 80077b4:	682b      	ldr	r3, [r5, #0]
 80077b6:	009f      	lsls	r7, r3, #2
 80077b8:	f100 80cf 	bmi.w	800795a <HAL_RCCEx_PeriphCLKConfig+0x1ca>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 80077bc:	6821      	ldr	r1, [r4, #0]
 80077be:	074e      	lsls	r6, r1, #29
 80077c0:	d515      	bpl.n	80077ee <HAL_RCCEx_PeriphCLKConfig+0x5e>
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 80077c2:	e9d4 0304 	ldrd	r0, r3, [r4, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 80077c6:	f8d5 2088 	ldr.w	r2, [r5, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 80077ca:	061b      	lsls	r3, r3, #24
 80077cc:	f002 42e0 	and.w	r2, r2, #1879048192	; 0x70000000
 80077d0:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 80077d4:	4313      	orrs	r3, r2
 80077d6:	f8c5 3088 	str.w	r3, [r5, #136]	; 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 80077da:	f8d5 308c 	ldr.w	r3, [r5, #140]	; 0x8c
 80077de:	6a22      	ldr	r2, [r4, #32]
 80077e0:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 80077e4:	3a01      	subs	r2, #1
 80077e6:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80077ea:	f8c5 308c 	str.w	r3, [r5, #140]	; 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 80077ee:	070d      	lsls	r5, r1, #28
 80077f0:	d514      	bpl.n	800781c <HAL_RCCEx_PeriphCLKConfig+0x8c>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 80077f2:	4a79      	ldr	r2, [pc, #484]	; (80079d8 <HAL_RCCEx_PeriphCLKConfig+0x248>)
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 80077f4:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 80077f6:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 80077fa:	6920      	ldr	r0, [r4, #16]
 80077fc:	071b      	lsls	r3, r3, #28
 80077fe:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 8007802:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8007806:	430b      	orrs	r3, r1
 8007808:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 800780c:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 8007810:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8007812:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8007816:	430b      	orrs	r3, r1
 8007818:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    }
    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 800781c:	4b6d      	ldr	r3, [pc, #436]	; (80079d4 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800781e:	4e6e      	ldr	r6, [pc, #440]	; (80079d8 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLSAI_ENABLE();
 8007820:	2201      	movs	r2, #1
 8007822:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 8007824:	f7fe fa78 	bl	8005d18 <HAL_GetTick>
 8007828:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800782a:	6833      	ldr	r3, [r6, #0]
 800782c:	0098      	lsls	r0, r3, #2
 800782e:	f140 809b 	bpl.w	8007968 <HAL_RCCEx_PeriphCLKConfig+0x1d8>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 8007832:	6823      	ldr	r3, [r4, #0]
 8007834:	069b      	lsls	r3, r3, #26
 8007836:	d533      	bpl.n	80078a0 <HAL_RCCEx_PeriphCLKConfig+0x110>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 8007838:	2300      	movs	r3, #0
 800783a:	9301      	str	r3, [sp, #4]
 800783c:	4b66      	ldr	r3, [pc, #408]	; (80079d8 <HAL_RCCEx_PeriphCLKConfig+0x248>)

    /* Enable write access to Backup domain */
    PWR->CR |= PWR_CR_DBP;
 800783e:	4d67      	ldr	r5, [pc, #412]	; (80079dc <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PWR_CLK_ENABLE();
 8007840:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8007842:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8007846:	641a      	str	r2, [r3, #64]	; 0x40
 8007848:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800784a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800784e:	9301      	str	r3, [sp, #4]
 8007850:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 8007852:	682b      	ldr	r3, [r5, #0]
 8007854:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8007858:	602b      	str	r3, [r5, #0]

    /* Get tick */
    tickstart = HAL_GetTick();
 800785a:	f7fe fa5d 	bl	8005d18 <HAL_GetTick>
 800785e:	4606      	mov	r6, r0

    while((PWR->CR & PWR_CR_DBP) == RESET)
 8007860:	682b      	ldr	r3, [r5, #0]
 8007862:	05d9      	lsls	r1, r3, #23
 8007864:	f140 8087 	bpl.w	8007976 <HAL_RCCEx_PeriphCLKConfig+0x1e6>
      {
        return HAL_TIMEOUT;
      }
    }
    /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value */
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 8007868:	4d5b      	ldr	r5, [pc, #364]	; (80079d8 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 800786a:	6f2b      	ldr	r3, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800786c:	f413 7340 	ands.w	r3, r3, #768	; 0x300
 8007870:	f040 8088 	bne.w	8007984 <HAL_RCCEx_PeriphCLKConfig+0x1f4>
            return HAL_TIMEOUT;
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8007874:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8007876:	f403 7240 	and.w	r2, r3, #768	; 0x300
 800787a:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 800787e:	4a56      	ldr	r2, [pc, #344]	; (80079d8 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 8007880:	f040 80a4 	bne.w	80079cc <HAL_RCCEx_PeriphCLKConfig+0x23c>
 8007884:	6891      	ldr	r1, [r2, #8]
 8007886:	f023 4070 	bic.w	r0, r3, #4026531840	; 0xf0000000
 800788a:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 800788e:	f420 7040 	bic.w	r0, r0, #768	; 0x300
 8007892:	4301      	orrs	r1, r0
 8007894:	6091      	str	r1, [r2, #8]
 8007896:	6f11      	ldr	r1, [r2, #112]	; 0x70
 8007898:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800789c:	430b      	orrs	r3, r1
 800789e:	6713      	str	r3, [r2, #112]	; 0x70
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 80078a0:	6820      	ldr	r0, [r4, #0]
 80078a2:	f010 0010 	ands.w	r0, r0, #16
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 80078a6:	bf1f      	itttt	ne
 80078a8:	4b4d      	ldrne	r3, [pc, #308]	; (80079e0 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 80078aa:	f894 202c 	ldrbne.w	r2, [r4, #44]	; 0x2c
 80078ae:	f8c3 21e0 	strne.w	r2, [r3, #480]	; 0x1e0
  }
  return HAL_OK;
 80078b2:	2000      	movne	r0, #0
 80078b4:	e04f      	b.n	8007956 <HAL_RCCEx_PeriphCLKConfig+0x1c6>
    __HAL_RCC_PLLI2S_DISABLE();
 80078b6:	4b47      	ldr	r3, [pc, #284]	; (80079d4 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 80078b8:	4e47      	ldr	r6, [pc, #284]	; (80079d8 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLI2S_DISABLE();
 80078ba:	2200      	movs	r2, #0
 80078bc:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 80078be:	f7fe fa2b 	bl	8005d18 <HAL_GetTick>
 80078c2:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 80078c4:	6833      	ldr	r3, [r6, #0]
 80078c6:	011f      	lsls	r7, r3, #4
 80078c8:	d43f      	bmi.n	800794a <HAL_RCCEx_PeriphCLKConfig+0x1ba>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 80078ca:	6821      	ldr	r1, [r4, #0]
 80078cc:	07cd      	lsls	r5, r1, #31
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 80078ce:	bf41      	itttt	mi
 80078d0:	e9d4 2301 	ldrdmi	r2, r3, [r4, #4]
 80078d4:	071b      	lslmi	r3, r3, #28
 80078d6:	ea43 1382 	orrmi.w	r3, r3, r2, lsl #6
 80078da:	f8c6 3084 	strmi.w	r3, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 80078de:	0788      	lsls	r0, r1, #30
 80078e0:	d515      	bpl.n	800790e <HAL_RCCEx_PeriphCLKConfig+0x17e>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 80078e2:	4a3d      	ldr	r2, [pc, #244]	; (80079d8 <HAL_RCCEx_PeriphCLKConfig+0x248>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 80078e4:	68e3      	ldr	r3, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 80078e6:	f8d2 0084 	ldr.w	r0, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 80078ea:	6865      	ldr	r5, [r4, #4]
 80078ec:	061b      	lsls	r3, r3, #24
 80078ee:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 80078f2:	ea43 1385 	orr.w	r3, r3, r5, lsl #6
 80078f6:	4303      	orrs	r3, r0
 80078f8:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 80078fc:	f8d2 008c 	ldr.w	r0, [r2, #140]	; 0x8c
 8007900:	69e3      	ldr	r3, [r4, #28]
 8007902:	f020 001f 	bic.w	r0, r0, #31
 8007906:	3b01      	subs	r3, #1
 8007908:	4303      	orrs	r3, r0
 800790a:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 800790e:	0649      	lsls	r1, r1, #25
 8007910:	d50a      	bpl.n	8007928 <HAL_RCCEx_PeriphCLKConfig+0x198>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 8007912:	68e3      	ldr	r3, [r4, #12]
 8007914:	6862      	ldr	r2, [r4, #4]
 8007916:	061b      	lsls	r3, r3, #24
 8007918:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800791c:	68a2      	ldr	r2, [r4, #8]
 800791e:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 8007922:	4a2d      	ldr	r2, [pc, #180]	; (80079d8 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 8007924:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 8007928:	4b2a      	ldr	r3, [pc, #168]	; (80079d4 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800792a:	4e2b      	ldr	r6, [pc, #172]	; (80079d8 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLI2S_ENABLE();
 800792c:	2201      	movs	r2, #1
 800792e:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 8007930:	f7fe f9f2 	bl	8005d18 <HAL_GetTick>
 8007934:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8007936:	6833      	ldr	r3, [r6, #0]
 8007938:	011a      	lsls	r2, r3, #4
 800793a:	f53f af30 	bmi.w	800779e <HAL_RCCEx_PeriphCLKConfig+0xe>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800793e:	f7fe f9eb 	bl	8005d18 <HAL_GetTick>
 8007942:	1b40      	subs	r0, r0, r5
 8007944:	2802      	cmp	r0, #2
 8007946:	d9f6      	bls.n	8007936 <HAL_RCCEx_PeriphCLKConfig+0x1a6>
 8007948:	e004      	b.n	8007954 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800794a:	f7fe f9e5 	bl	8005d18 <HAL_GetTick>
 800794e:	1b40      	subs	r0, r0, r5
 8007950:	2802      	cmp	r0, #2
 8007952:	d9b7      	bls.n	80078c4 <HAL_RCCEx_PeriphCLKConfig+0x134>
        return HAL_TIMEOUT;
 8007954:	2003      	movs	r0, #3
}
 8007956:	b003      	add	sp, #12
 8007958:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800795a:	f7fe f9dd 	bl	8005d18 <HAL_GetTick>
 800795e:	1b80      	subs	r0, r0, r6
 8007960:	2802      	cmp	r0, #2
 8007962:	f67f af27 	bls.w	80077b4 <HAL_RCCEx_PeriphCLKConfig+0x24>
 8007966:	e7f5      	b.n	8007954 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 8007968:	f7fe f9d6 	bl	8005d18 <HAL_GetTick>
 800796c:	1b40      	subs	r0, r0, r5
 800796e:	2802      	cmp	r0, #2
 8007970:	f67f af5b 	bls.w	800782a <HAL_RCCEx_PeriphCLKConfig+0x9a>
 8007974:	e7ee      	b.n	8007954 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 8007976:	f7fe f9cf 	bl	8005d18 <HAL_GetTick>
 800797a:	1b80      	subs	r0, r0, r6
 800797c:	2802      	cmp	r0, #2
 800797e:	f67f af6f 	bls.w	8007860 <HAL_RCCEx_PeriphCLKConfig+0xd0>
 8007982:	e7e7      	b.n	8007954 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8007984:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8007986:	f402 7240 	and.w	r2, r2, #768	; 0x300
 800798a:	4293      	cmp	r3, r2
 800798c:	f43f af72 	beq.w	8007874 <HAL_RCCEx_PeriphCLKConfig+0xe4>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8007990:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 8007992:	4a10      	ldr	r2, [pc, #64]	; (80079d4 <HAL_RCCEx_PeriphCLKConfig+0x244>)
 8007994:	2101      	movs	r1, #1
 8007996:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800799a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 800799e:	2100      	movs	r1, #0
 80079a0:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      RCC->BDCR = tmpreg1;
 80079a4:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 80079a6:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 80079a8:	07da      	lsls	r2, r3, #31
 80079aa:	f57f af63 	bpl.w	8007874 <HAL_RCCEx_PeriphCLKConfig+0xe4>
        tickstart = HAL_GetTick();
 80079ae:	f7fe f9b3 	bl	8005d18 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80079b2:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 80079b6:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80079b8:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 80079ba:	079b      	lsls	r3, r3, #30
 80079bc:	f53f af5a 	bmi.w	8007874 <HAL_RCCEx_PeriphCLKConfig+0xe4>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80079c0:	f7fe f9aa 	bl	8005d18 <HAL_GetTick>
 80079c4:	1b80      	subs	r0, r0, r6
 80079c6:	42b8      	cmp	r0, r7
 80079c8:	d9f6      	bls.n	80079b8 <HAL_RCCEx_PeriphCLKConfig+0x228>
 80079ca:	e7c3      	b.n	8007954 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 80079cc:	6891      	ldr	r1, [r2, #8]
 80079ce:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 80079d2:	e75f      	b.n	8007894 <HAL_RCCEx_PeriphCLKConfig+0x104>
 80079d4:	42470000 	.word	0x42470000
 80079d8:	40023800 	.word	0x40023800
 80079dc:	40007000 	.word	0x40007000
 80079e0:	42471000 	.word	0x42471000

080079e4 <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure 
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{   
 80079e4:	b538      	push	{r3, r4, r5, lr}
 80079e6:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if(hsdram == NULL)
 80079e8:	4604      	mov	r4, r0
 80079ea:	b1c8      	cbz	r0, 8007a20 <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }
  
  if(hsdram->State == HAL_SDRAM_STATE_RESET)
 80079ec:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80079f0:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80079f4:	b91b      	cbnz	r3, 80079fe <HAL_SDRAM_Init+0x1a>
  {  
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 80079f6:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 80079fa:	f7fa fad5 	bl	8001fa8 <HAL_SDRAM_MspInit>
#endif
  }
  
  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 80079fe:	2302      	movs	r3, #2
 8007a00:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Initialize SDRAM control Interface */
  FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 8007a04:	1d21      	adds	r1, r4, #4
 8007a06:	6820      	ldr	r0, [r4, #0]
 8007a08:	f000 fcba 	bl	8008380 <FMC_SDRAM_Init>
  
  /* Initialize SDRAM timing Interface */
  FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank); 
 8007a0c:	6862      	ldr	r2, [r4, #4]
 8007a0e:	6820      	ldr	r0, [r4, #0]
 8007a10:	4629      	mov	r1, r5
 8007a12:	f000 fceb 	bl	80083ec <FMC_SDRAM_Timing_Init>
  
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 8007a16:	2301      	movs	r3, #1
 8007a18:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;
 8007a1c:	2000      	movs	r0, #0
}
 8007a1e:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8007a20:	2001      	movs	r0, #1
 8007a22:	e7fc      	b.n	8007a1e <HAL_SDRAM_Init+0x3a>

08007a24 <HAL_SDRAM_SendCommand>:
  * @param  Command SDRAM command structure
  * @param  Timeout Timeout duration
  * @retval HAL status
  */  
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 8007a24:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8007a26:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8007a2a:	2b02      	cmp	r3, #2
{
 8007a2c:	4604      	mov	r4, r0
 8007a2e:	460d      	mov	r5, r1
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8007a30:	b2d8      	uxtb	r0, r3
 8007a32:	d00d      	beq.n	8007a50 <HAL_SDRAM_SendCommand+0x2c>
  {
    return HAL_BUSY;
  }
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8007a34:	2302      	movs	r3, #2
 8007a36:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Send SDRAM command */
  FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 8007a3a:	6820      	ldr	r0, [r4, #0]
 8007a3c:	f000 fd12 	bl	8008464 <FMC_SDRAM_SendCommand>
  
  /* Update the SDRAM controller state */
  if(Command->CommandMode == FMC_SDRAM_CMD_PALL)
 8007a40:	682b      	ldr	r3, [r5, #0]
 8007a42:	2b02      	cmp	r3, #2
  {
    hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 8007a44:	bf0c      	ite	eq
 8007a46:	2305      	moveq	r3, #5
  }
  else
  {
    hsdram->State = HAL_SDRAM_STATE_READY;
 8007a48:	2301      	movne	r3, #1
 8007a4a:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  }
  
  return HAL_OK;  
 8007a4e:	2000      	movs	r0, #0
}
 8007a50:	bd38      	pop	{r3, r4, r5, pc}

08007a52 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.  
  * @param  RefreshRate The SDRAM refresh rate value       
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 8007a52:	b510      	push	{r4, lr}
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8007a54:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8007a58:	2b02      	cmp	r3, #2
{
 8007a5a:	4604      	mov	r4, r0
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8007a5c:	b2d8      	uxtb	r0, r3
 8007a5e:	d009      	beq.n	8007a74 <HAL_SDRAM_ProgramRefreshRate+0x22>
  {
    return HAL_BUSY;
  } 
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8007a60:	2302      	movs	r3, #2
 8007a62:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Program the refresh rate */
  FMC_SDRAM_ProgramRefreshRate(hsdram->Instance ,RefreshRate);
 8007a66:	6820      	ldr	r0, [r4, #0]
 8007a68:	f000 fd23 	bl	80084b2 <FMC_SDRAM_ProgramRefreshRate>
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 8007a6c:	2301      	movs	r3, #1
 8007a6e:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;   
 8007a72:	2000      	movs	r0, #0
}
 8007a74:	bd10      	pop	{r4, pc}

08007a76 <SPI_WaitFlagStateUntilTimeout.constprop.0>:
  * @param  State flag state to check
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
 8007a76:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007a78:	4604      	mov	r4, r0
 8007a7a:	460e      	mov	r6, r1
 8007a7c:	4615      	mov	r5, r2
 8007a7e:	461f      	mov	r7, r3
                                                       uint32_t Timeout, uint32_t Tickstart)
{
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8007a80:	6822      	ldr	r2, [r4, #0]
 8007a82:	6893      	ldr	r3, [r2, #8]
 8007a84:	ea36 0303 	bics.w	r3, r6, r3
 8007a88:	d001      	beq.n	8007a8e <SPI_WaitFlagStateUntilTimeout.constprop.0+0x18>
        return HAL_TIMEOUT;
      }
    }
  }

  return HAL_OK;
 8007a8a:	2000      	movs	r0, #0
 8007a8c:	e02d      	b.n	8007aea <SPI_WaitFlagStateUntilTimeout.constprop.0+0x74>
    if (Timeout != HAL_MAX_DELAY)
 8007a8e:	1c6b      	adds	r3, r5, #1
 8007a90:	d0f7      	beq.n	8007a82 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xc>
      if (((HAL_GetTick() - Tickstart) >= Timeout) || (Timeout == 0U))
 8007a92:	f7fe f941 	bl	8005d18 <HAL_GetTick>
 8007a96:	1bc0      	subs	r0, r0, r7
 8007a98:	4285      	cmp	r5, r0
 8007a9a:	d8f1      	bhi.n	8007a80 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xa>
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 8007a9c:	6823      	ldr	r3, [r4, #0]
 8007a9e:	685a      	ldr	r2, [r3, #4]
 8007aa0:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 8007aa4:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007aa6:	6862      	ldr	r2, [r4, #4]
 8007aa8:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 8007aac:	d10a      	bne.n	8007ac4 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x4e>
 8007aae:	68a2      	ldr	r2, [r4, #8]
 8007ab0:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 8007ab4:	d002      	beq.n	8007abc <SPI_WaitFlagStateUntilTimeout.constprop.0+0x46>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8007ab6:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 8007aba:	d103      	bne.n	8007ac4 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x4e>
          __HAL_SPI_DISABLE(hspi);
 8007abc:	681a      	ldr	r2, [r3, #0]
 8007abe:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8007ac2:	601a      	str	r2, [r3, #0]
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 8007ac4:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8007ac6:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 8007aca:	d107      	bne.n	8007adc <SPI_WaitFlagStateUntilTimeout.constprop.0+0x66>
          SPI_RESET_CRC(hspi);
 8007acc:	681a      	ldr	r2, [r3, #0]
 8007ace:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8007ad2:	601a      	str	r2, [r3, #0]
 8007ad4:	681a      	ldr	r2, [r3, #0]
 8007ad6:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8007ada:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 8007adc:	2301      	movs	r3, #1
 8007ade:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
        __HAL_UNLOCK(hspi);
 8007ae2:	2300      	movs	r3, #0
 8007ae4:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
 8007ae8:	2003      	movs	r0, #3
}
 8007aea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08007aec <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 8007aec:	b538      	push	{r3, r4, r5, lr}
 8007aee:	4613      	mov	r3, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007af0:	6842      	ldr	r2, [r0, #4]
 8007af2:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 8007af6:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007af8:	d11f      	bne.n	8007b3a <SPI_EndRxTransaction+0x4e>
 8007afa:	6882      	ldr	r2, [r0, #8]
 8007afc:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 8007b00:	d002      	beq.n	8007b08 <SPI_EndRxTransaction+0x1c>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8007b02:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 8007b06:	d107      	bne.n	8007b18 <SPI_EndRxTransaction+0x2c>
  {
    /* Disable SPI peripheral */
    __HAL_SPI_DISABLE(hspi);
 8007b08:	6825      	ldr	r5, [r4, #0]
 8007b0a:	6828      	ldr	r0, [r5, #0]
  }

  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
  {
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 8007b0c:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
    __HAL_SPI_DISABLE(hspi);
 8007b10:	f020 0040 	bic.w	r0, r0, #64	; 0x40
 8007b14:	6028      	str	r0, [r5, #0]
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 8007b16:	d007      	beq.n	8007b28 <SPI_EndRxTransaction+0x3c>
    {
      /* Control the BSY flag */
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8007b18:	460a      	mov	r2, r1
 8007b1a:	2180      	movs	r1, #128	; 0x80
 8007b1c:	4620      	mov	r0, r4
 8007b1e:	f7ff ffaa 	bl	8007a76 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 8007b22:	b920      	cbnz	r0, 8007b2e <SPI_EndRxTransaction+0x42>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 8007b24:	2000      	movs	r0, #0
}
 8007b26:	bd38      	pop	{r3, r4, r5, pc}
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8007b28:	460a      	mov	r2, r1
 8007b2a:	2101      	movs	r1, #1
 8007b2c:	e7f6      	b.n	8007b1c <SPI_EndRxTransaction+0x30>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8007b2e:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8007b30:	f043 0320 	orr.w	r3, r3, #32
 8007b34:	6563      	str	r3, [r4, #84]	; 0x54
      return HAL_TIMEOUT;
 8007b36:	2003      	movs	r0, #3
 8007b38:	e7f5      	b.n	8007b26 <SPI_EndRxTransaction+0x3a>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8007b3a:	460a      	mov	r2, r1
 8007b3c:	2101      	movs	r1, #1
 8007b3e:	e7ee      	b.n	8007b1e <SPI_EndRxTransaction+0x32>

08007b40 <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 8007b40:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8007b42:	4613      	mov	r3, r2
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8007b44:	4a12      	ldr	r2, [pc, #72]	; (8007b90 <SPI_EndRxTxTransaction+0x50>)
 8007b46:	6815      	ldr	r5, [r2, #0]
 8007b48:	4a12      	ldr	r2, [pc, #72]	; (8007b94 <SPI_EndRxTxTransaction+0x54>)
 8007b4a:	fbb5 f5f2 	udiv	r5, r5, r2
 8007b4e:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8007b52:	4355      	muls	r5, r2
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8007b54:	6842      	ldr	r2, [r0, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8007b56:	9501      	str	r5, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8007b58:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 8007b5c:	4604      	mov	r4, r0
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8007b5e:	d10b      	bne.n	8007b78 <SPI_EndRxTxTransaction+0x38>
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8007b60:	460a      	mov	r2, r1
 8007b62:	2180      	movs	r1, #128	; 0x80
 8007b64:	f7ff ff87 	bl	8007a76 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 8007b68:	b178      	cbz	r0, 8007b8a <SPI_EndRxTxTransaction+0x4a>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8007b6a:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8007b6c:	f043 0320 	orr.w	r3, r3, #32
 8007b70:	6563      	str	r3, [r4, #84]	; 0x54
      return HAL_TIMEOUT;
 8007b72:	2003      	movs	r0, #3
      count--;
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
  }

  return HAL_OK;
}
 8007b74:	b003      	add	sp, #12
 8007b76:	bd30      	pop	{r4, r5, pc}
      if (count == 0U)
 8007b78:	9b01      	ldr	r3, [sp, #4]
 8007b7a:	b133      	cbz	r3, 8007b8a <SPI_EndRxTxTransaction+0x4a>
      count--;
 8007b7c:	9b01      	ldr	r3, [sp, #4]
 8007b7e:	3b01      	subs	r3, #1
 8007b80:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 8007b82:	6823      	ldr	r3, [r4, #0]
 8007b84:	689b      	ldr	r3, [r3, #8]
 8007b86:	061b      	lsls	r3, r3, #24
 8007b88:	d4f6      	bmi.n	8007b78 <SPI_EndRxTxTransaction+0x38>
  return HAL_OK;
 8007b8a:	2000      	movs	r0, #0
 8007b8c:	e7f2      	b.n	8007b74 <SPI_EndRxTxTransaction+0x34>
 8007b8e:	bf00      	nop
 8007b90:	2000007c 	.word	0x2000007c
 8007b94:	016e3600 	.word	0x016e3600

08007b98 <HAL_SPI_Init>:
{
 8007b98:	b510      	push	{r4, lr}
  if (hspi == NULL)
 8007b9a:	4604      	mov	r4, r0
 8007b9c:	2800      	cmp	r0, #0
 8007b9e:	d036      	beq.n	8007c0e <HAL_SPI_Init+0x76>
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8007ba0:	2300      	movs	r3, #0
 8007ba2:	6283      	str	r3, [r0, #40]	; 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 8007ba4:	f890 3051 	ldrb.w	r3, [r0, #81]	; 0x51
 8007ba8:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8007bac:	b91b      	cbnz	r3, 8007bb6 <HAL_SPI_Init+0x1e>
    hspi->Lock = HAL_UNLOCKED;
 8007bae:	f880 2050 	strb.w	r2, [r0, #80]	; 0x50
    HAL_SPI_MspInit(hspi);
 8007bb2:	f7fa f9a1 	bl	8001ef8 <HAL_SPI_MspInit>
  __HAL_SPI_DISABLE(hspi);
 8007bb6:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, (hspi->Init.Mode | hspi->Init.Direction | hspi->Init.DataSize |
 8007bb8:	69a2      	ldr	r2, [r4, #24]
  hspi->State = HAL_SPI_STATE_BUSY;
 8007bba:	2302      	movs	r3, #2
 8007bbc:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_SPI_DISABLE(hspi);
 8007bc0:	680b      	ldr	r3, [r1, #0]
 8007bc2:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8007bc6:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, (hspi->Init.Mode | hspi->Init.Direction | hspi->Init.DataSize |
 8007bc8:	e9d4 3001 	ldrd	r3, r0, [r4, #4]
 8007bcc:	4303      	orrs	r3, r0
 8007bce:	68e0      	ldr	r0, [r4, #12]
 8007bd0:	4303      	orrs	r3, r0
 8007bd2:	6920      	ldr	r0, [r4, #16]
 8007bd4:	4303      	orrs	r3, r0
 8007bd6:	6960      	ldr	r0, [r4, #20]
 8007bd8:	4303      	orrs	r3, r0
 8007bda:	69e0      	ldr	r0, [r4, #28]
 8007bdc:	4303      	orrs	r3, r0
 8007bde:	6a20      	ldr	r0, [r4, #32]
 8007be0:	4303      	orrs	r3, r0
 8007be2:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8007be4:	4303      	orrs	r3, r0
 8007be6:	f402 7000 	and.w	r0, r2, #512	; 0x200
 8007bea:	4303      	orrs	r3, r0
 8007bec:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | hspi->Init.TIMode));
 8007bee:	0c12      	lsrs	r2, r2, #16
 8007bf0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007bf2:	f002 0204 	and.w	r2, r2, #4
 8007bf6:	431a      	orrs	r2, r3
 8007bf8:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 8007bfa:	69cb      	ldr	r3, [r1, #28]
 8007bfc:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8007c00:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8007c02:	2000      	movs	r0, #0
  hspi->State     = HAL_SPI_STATE_READY;
 8007c04:	2301      	movs	r3, #1
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8007c06:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 8007c08:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
}
 8007c0c:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8007c0e:	2001      	movs	r0, #1
 8007c10:	e7fc      	b.n	8007c0c <HAL_SPI_Init+0x74>

08007c12 <HAL_SPI_Transmit>:
{
 8007c12:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8007c16:	461e      	mov	r6, r3
  __HAL_LOCK(hspi);
 8007c18:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
 8007c1c:	2b01      	cmp	r3, #1
{
 8007c1e:	4604      	mov	r4, r0
 8007c20:	460d      	mov	r5, r1
 8007c22:	4617      	mov	r7, r2
  __HAL_LOCK(hspi);
 8007c24:	f000 809d 	beq.w	8007d62 <HAL_SPI_Transmit+0x150>
 8007c28:	2301      	movs	r3, #1
 8007c2a:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
  tickstart = HAL_GetTick();
 8007c2e:	f7fe f873 	bl	8005d18 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 8007c32:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 8007c36:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 8007c38:	4680      	mov	r8, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 8007c3a:	b2d8      	uxtb	r0, r3
 8007c3c:	f040 808f 	bne.w	8007d5e <HAL_SPI_Transmit+0x14c>
  if ((pData == NULL) || (Size == 0U))
 8007c40:	2d00      	cmp	r5, #0
 8007c42:	d05a      	beq.n	8007cfa <HAL_SPI_Transmit+0xe8>
 8007c44:	2f00      	cmp	r7, #0
 8007c46:	d058      	beq.n	8007cfa <HAL_SPI_Transmit+0xe8>
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 8007c48:	2303      	movs	r3, #3
 8007c4a:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007c4e:	68a2      	ldr	r2, [r4, #8]
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 8007c50:	6325      	str	r5, [r4, #48]	; 0x30
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8007c52:	2300      	movs	r3, #0
 8007c54:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->RxISR       = NULL;
 8007c56:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->TxXferCount = Size;
 8007c5a:	86e7      	strh	r7, [r4, #54]	; 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 8007c5c:	63a3      	str	r3, [r4, #56]	; 0x38
  hspi->RxXferCount = 0U;
 8007c5e:	87e3      	strh	r3, [r4, #62]	; 0x3e
  hspi->RxXferSize  = 0U;
 8007c60:	87a3      	strh	r3, [r4, #60]	; 0x3c
    SPI_1LINE_TX(hspi);
 8007c62:	6823      	ldr	r3, [r4, #0]
  hspi->TxXferSize  = Size;
 8007c64:	86a7      	strh	r7, [r4, #52]	; 0x34
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007c66:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
    SPI_1LINE_TX(hspi);
 8007c6a:	bf08      	it	eq
 8007c6c:	681a      	ldreq	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8007c6e:	68e1      	ldr	r1, [r4, #12]
    SPI_1LINE_TX(hspi);
 8007c70:	bf04      	itt	eq
 8007c72:	f442 4280 	orreq.w	r2, r2, #16384	; 0x4000
 8007c76:	601a      	streq	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8007c78:	681a      	ldr	r2, [r3, #0]
 8007c7a:	0652      	lsls	r2, r2, #25
    __HAL_SPI_ENABLE(hspi);
 8007c7c:	bf5e      	ittt	pl
 8007c7e:	681a      	ldrpl	r2, [r3, #0]
 8007c80:	f042 0240 	orrpl.w	r2, r2, #64	; 0x40
 8007c84:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8007c86:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8007c8a:	6862      	ldr	r2, [r4, #4]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8007c8c:	d141      	bne.n	8007d12 <HAL_SPI_Transmit+0x100>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8007c8e:	b10a      	cbz	r2, 8007c94 <HAL_SPI_Transmit+0x82>
 8007c90:	2f01      	cmp	r7, #1
 8007c92:	d107      	bne.n	8007ca4 <HAL_SPI_Transmit+0x92>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8007c94:	f835 2b02 	ldrh.w	r2, [r5], #2
 8007c98:	60da      	str	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8007c9a:	6325      	str	r5, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8007c9c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007c9e:	3b01      	subs	r3, #1
 8007ca0:	b29b      	uxth	r3, r3
 8007ca2:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 8007ca4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007ca6:	b29b      	uxth	r3, r3
 8007ca8:	b9a3      	cbnz	r3, 8007cd4 <HAL_SPI_Transmit+0xc2>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8007caa:	4642      	mov	r2, r8
 8007cac:	4631      	mov	r1, r6
 8007cae:	4620      	mov	r0, r4
 8007cb0:	f7ff ff46 	bl	8007b40 <SPI_EndRxTxTransaction>
 8007cb4:	2800      	cmp	r0, #0
 8007cb6:	d14f      	bne.n	8007d58 <HAL_SPI_Transmit+0x146>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8007cb8:	68a3      	ldr	r3, [r4, #8]
 8007cba:	b933      	cbnz	r3, 8007cca <HAL_SPI_Transmit+0xb8>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8007cbc:	9301      	str	r3, [sp, #4]
 8007cbe:	6823      	ldr	r3, [r4, #0]
 8007cc0:	68da      	ldr	r2, [r3, #12]
 8007cc2:	9201      	str	r2, [sp, #4]
 8007cc4:	689b      	ldr	r3, [r3, #8]
 8007cc6:	9301      	str	r3, [sp, #4]
 8007cc8:	9b01      	ldr	r3, [sp, #4]
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8007cca:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 8007ccc:	3800      	subs	r0, #0
 8007cce:	bf18      	it	ne
 8007cd0:	2001      	movne	r0, #1
error:
 8007cd2:	e012      	b.n	8007cfa <HAL_SPI_Transmit+0xe8>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8007cd4:	6822      	ldr	r2, [r4, #0]
 8007cd6:	6893      	ldr	r3, [r2, #8]
 8007cd8:	0798      	lsls	r0, r3, #30
 8007cda:	d505      	bpl.n	8007ce8 <HAL_SPI_Transmit+0xd6>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8007cdc:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8007cde:	f833 1b02 	ldrh.w	r1, [r3], #2
 8007ce2:	60d1      	str	r1, [r2, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8007ce4:	6323      	str	r3, [r4, #48]	; 0x30
 8007ce6:	e7d9      	b.n	8007c9c <HAL_SPI_Transmit+0x8a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8007ce8:	f7fe f816 	bl	8005d18 <HAL_GetTick>
 8007cec:	eba0 0008 	sub.w	r0, r0, r8
 8007cf0:	42b0      	cmp	r0, r6
 8007cf2:	d30b      	bcc.n	8007d0c <HAL_SPI_Transmit+0xfa>
 8007cf4:	1c71      	adds	r1, r6, #1
 8007cf6:	d0d5      	beq.n	8007ca4 <HAL_SPI_Transmit+0x92>
          errorcode = HAL_TIMEOUT;
 8007cf8:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 8007cfa:	2301      	movs	r3, #1
 8007cfc:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 8007d00:	2300      	movs	r3, #0
 8007d02:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 8007d06:	b002      	add	sp, #8
 8007d08:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8007d0c:	2e00      	cmp	r6, #0
 8007d0e:	d1c9      	bne.n	8007ca4 <HAL_SPI_Transmit+0x92>
 8007d10:	e7f2      	b.n	8007cf8 <HAL_SPI_Transmit+0xe6>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8007d12:	b10a      	cbz	r2, 8007d18 <HAL_SPI_Transmit+0x106>
 8007d14:	2f01      	cmp	r7, #1
 8007d16:	d108      	bne.n	8007d2a <HAL_SPI_Transmit+0x118>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8007d18:	782a      	ldrb	r2, [r5, #0]
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8007d1a:	731a      	strb	r2, [r3, #12]
        hspi->pTxBuffPtr += sizeof(uint8_t);
 8007d1c:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8007d1e:	3301      	adds	r3, #1
 8007d20:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8007d22:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007d24:	3b01      	subs	r3, #1
 8007d26:	b29b      	uxth	r3, r3
 8007d28:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 8007d2a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007d2c:	b29b      	uxth	r3, r3
 8007d2e:	2b00      	cmp	r3, #0
 8007d30:	d0bb      	beq.n	8007caa <HAL_SPI_Transmit+0x98>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8007d32:	6823      	ldr	r3, [r4, #0]
 8007d34:	689a      	ldr	r2, [r3, #8]
 8007d36:	0792      	lsls	r2, r2, #30
 8007d38:	d502      	bpl.n	8007d40 <HAL_SPI_Transmit+0x12e>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8007d3a:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8007d3c:	7812      	ldrb	r2, [r2, #0]
 8007d3e:	e7ec      	b.n	8007d1a <HAL_SPI_Transmit+0x108>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8007d40:	f7fd ffea 	bl	8005d18 <HAL_GetTick>
 8007d44:	eba0 0008 	sub.w	r0, r0, r8
 8007d48:	42b0      	cmp	r0, r6
 8007d4a:	d302      	bcc.n	8007d52 <HAL_SPI_Transmit+0x140>
 8007d4c:	1c73      	adds	r3, r6, #1
 8007d4e:	d0ec      	beq.n	8007d2a <HAL_SPI_Transmit+0x118>
 8007d50:	e7d2      	b.n	8007cf8 <HAL_SPI_Transmit+0xe6>
 8007d52:	2e00      	cmp	r6, #0
 8007d54:	d1e9      	bne.n	8007d2a <HAL_SPI_Transmit+0x118>
 8007d56:	e7cf      	b.n	8007cf8 <HAL_SPI_Transmit+0xe6>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8007d58:	2320      	movs	r3, #32
 8007d5a:	6563      	str	r3, [r4, #84]	; 0x54
 8007d5c:	e7ac      	b.n	8007cb8 <HAL_SPI_Transmit+0xa6>
    errorcode = HAL_BUSY;
 8007d5e:	2002      	movs	r0, #2
 8007d60:	e7cb      	b.n	8007cfa <HAL_SPI_Transmit+0xe8>
  __HAL_LOCK(hspi);
 8007d62:	2002      	movs	r0, #2
 8007d64:	e7cf      	b.n	8007d06 <HAL_SPI_Transmit+0xf4>

08007d66 <HAL_SPI_TransmitReceive>:
{
 8007d66:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8007d6a:	461e      	mov	r6, r3
  __HAL_LOCK(hspi);
 8007d6c:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
{
 8007d70:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  __HAL_LOCK(hspi);
 8007d72:	2b01      	cmp	r3, #1
{
 8007d74:	4604      	mov	r4, r0
 8007d76:	460d      	mov	r5, r1
 8007d78:	4691      	mov	r9, r2
  __HAL_LOCK(hspi);
 8007d7a:	f000 80e6 	beq.w	8007f4a <HAL_SPI_TransmitReceive+0x1e4>
 8007d7e:	2301      	movs	r3, #1
 8007d80:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
  tickstart = HAL_GetTick();
 8007d84:	f7fd ffc8 	bl	8005d18 <HAL_GetTick>
  tmp_state           = hspi->State;
 8007d88:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  tmp_mode            = hspi->Init.Mode;
 8007d8c:	6862      	ldr	r2, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 8007d8e:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 8007d90:	4680      	mov	r8, r0
  tmp_state           = hspi->State;
 8007d92:	b2d9      	uxtb	r1, r3
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 8007d94:	d00a      	beq.n	8007dac <HAL_SPI_TransmitReceive+0x46>
 8007d96:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 8007d9a:	f040 80d4 	bne.w	8007f46 <HAL_SPI_TransmitReceive+0x1e0>
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 8007d9e:	68a3      	ldr	r3, [r4, #8]
 8007da0:	2b00      	cmp	r3, #0
 8007da2:	f040 80d0 	bne.w	8007f46 <HAL_SPI_TransmitReceive+0x1e0>
 8007da6:	2904      	cmp	r1, #4
 8007da8:	f040 80cd 	bne.w	8007f46 <HAL_SPI_TransmitReceive+0x1e0>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 8007dac:	2d00      	cmp	r5, #0
 8007dae:	d040      	beq.n	8007e32 <HAL_SPI_TransmitReceive+0xcc>
 8007db0:	f1b9 0f00 	cmp.w	r9, #0
 8007db4:	d03d      	beq.n	8007e32 <HAL_SPI_TransmitReceive+0xcc>
 8007db6:	2e00      	cmp	r6, #0
 8007db8:	d03b      	beq.n	8007e32 <HAL_SPI_TransmitReceive+0xcc>
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 8007dba:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 8007dbe:	f8c4 9038 	str.w	r9, [r4, #56]	; 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 8007dc2:	2b04      	cmp	r3, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 8007dc4:	bf1c      	itt	ne
 8007dc6:	2305      	movne	r3, #5
 8007dc8:	f884 3051 	strbne.w	r3, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8007dcc:	2300      	movs	r3, #0
 8007dce:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->TxISR       = NULL;
 8007dd0:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8007dd4:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 8007dd6:	87e6      	strh	r6, [r4, #62]	; 0x3e
  hspi->TxXferCount = Size;
 8007dd8:	86e6      	strh	r6, [r4, #54]	; 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8007dda:	6819      	ldr	r1, [r3, #0]
  hspi->RxXferSize  = Size;
 8007ddc:	87a6      	strh	r6, [r4, #60]	; 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8007dde:	0649      	lsls	r1, r1, #25
    __HAL_SPI_ENABLE(hspi);
 8007de0:	bf58      	it	pl
 8007de2:	6819      	ldrpl	r1, [r3, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 8007de4:	6325      	str	r5, [r4, #48]	; 0x30
    __HAL_SPI_ENABLE(hspi);
 8007de6:	bf58      	it	pl
 8007de8:	f041 0140 	orrpl.w	r1, r1, #64	; 0x40
  hspi->TxXferSize  = Size;
 8007dec:	86a6      	strh	r6, [r4, #52]	; 0x34
    __HAL_SPI_ENABLE(hspi);
 8007dee:	bf58      	it	pl
 8007df0:	6019      	strpl	r1, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8007df2:	68e1      	ldr	r1, [r4, #12]
 8007df4:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
 8007df8:	d152      	bne.n	8007ea0 <HAL_SPI_TransmitReceive+0x13a>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8007dfa:	b10a      	cbz	r2, 8007e00 <HAL_SPI_TransmitReceive+0x9a>
 8007dfc:	2e01      	cmp	r6, #1
 8007dfe:	d107      	bne.n	8007e10 <HAL_SPI_TransmitReceive+0xaa>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8007e00:	f835 2b02 	ldrh.w	r2, [r5], #2
 8007e04:	60da      	str	r2, [r3, #12]
      hspi->TxXferCount--;
 8007e06:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8007e08:	6325      	str	r5, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 8007e0a:	3b01      	subs	r3, #1
 8007e0c:	b29b      	uxth	r3, r3
 8007e0e:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 1U;
 8007e10:	2501      	movs	r5, #1
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8007e12:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007e14:	b29b      	uxth	r3, r3
 8007e16:	b973      	cbnz	r3, 8007e36 <HAL_SPI_TransmitReceive+0xd0>
 8007e18:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007e1a:	b29b      	uxth	r3, r3
 8007e1c:	b95b      	cbnz	r3, 8007e36 <HAL_SPI_TransmitReceive+0xd0>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8007e1e:	4642      	mov	r2, r8
 8007e20:	4639      	mov	r1, r7
 8007e22:	4620      	mov	r0, r4
 8007e24:	f7ff fe8c 	bl	8007b40 <SPI_EndRxTxTransaction>
 8007e28:	2800      	cmp	r0, #0
 8007e2a:	f000 8081 	beq.w	8007f30 <HAL_SPI_TransmitReceive+0x1ca>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8007e2e:	2320      	movs	r3, #32
 8007e30:	6563      	str	r3, [r4, #84]	; 0x54
    errorcode = HAL_ERROR;
 8007e32:	2001      	movs	r0, #1
 8007e34:	e02b      	b.n	8007e8e <HAL_SPI_TransmitReceive+0x128>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8007e36:	6821      	ldr	r1, [r4, #0]
 8007e38:	688b      	ldr	r3, [r1, #8]
 8007e3a:	079e      	lsls	r6, r3, #30
 8007e3c:	d50d      	bpl.n	8007e5a <HAL_SPI_TransmitReceive+0xf4>
 8007e3e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007e40:	b29b      	uxth	r3, r3
 8007e42:	b153      	cbz	r3, 8007e5a <HAL_SPI_TransmitReceive+0xf4>
 8007e44:	b14d      	cbz	r5, 8007e5a <HAL_SPI_TransmitReceive+0xf4>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8007e46:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8007e48:	f833 2b02 	ldrh.w	r2, [r3], #2
 8007e4c:	60ca      	str	r2, [r1, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8007e4e:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8007e50:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007e52:	3b01      	subs	r3, #1
 8007e54:	b29b      	uxth	r3, r3
 8007e56:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 8007e58:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8007e5a:	688a      	ldr	r2, [r1, #8]
 8007e5c:	f012 0201 	ands.w	r2, r2, #1
 8007e60:	d00c      	beq.n	8007e7c <HAL_SPI_TransmitReceive+0x116>
 8007e62:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007e64:	b29b      	uxth	r3, r3
 8007e66:	b14b      	cbz	r3, 8007e7c <HAL_SPI_TransmitReceive+0x116>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8007e68:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8007e6a:	68c9      	ldr	r1, [r1, #12]
 8007e6c:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8007e70:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8007e72:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007e74:	3b01      	subs	r3, #1
 8007e76:	b29b      	uxth	r3, r3
 8007e78:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 8007e7a:	4615      	mov	r5, r2
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 8007e7c:	f7fd ff4c 	bl	8005d18 <HAL_GetTick>
 8007e80:	eba0 0008 	sub.w	r0, r0, r8
 8007e84:	42b8      	cmp	r0, r7
 8007e86:	d3c4      	bcc.n	8007e12 <HAL_SPI_TransmitReceive+0xac>
 8007e88:	1c78      	adds	r0, r7, #1
 8007e8a:	d0c2      	beq.n	8007e12 <HAL_SPI_TransmitReceive+0xac>
        errorcode = HAL_TIMEOUT;
 8007e8c:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 8007e8e:	2301      	movs	r3, #1
 8007e90:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 8007e94:	2300      	movs	r3, #0
 8007e96:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 8007e9a:	b003      	add	sp, #12
 8007e9c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8007ea0:	b10a      	cbz	r2, 8007ea6 <HAL_SPI_TransmitReceive+0x140>
 8007ea2:	2e01      	cmp	r6, #1
 8007ea4:	d108      	bne.n	8007eb8 <HAL_SPI_TransmitReceive+0x152>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8007ea6:	782a      	ldrb	r2, [r5, #0]
 8007ea8:	731a      	strb	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 8007eaa:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8007eac:	3301      	adds	r3, #1
 8007eae:	6323      	str	r3, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 8007eb0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007eb2:	3b01      	subs	r3, #1
 8007eb4:	b29b      	uxth	r3, r3
 8007eb6:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 1U;
 8007eb8:	2501      	movs	r5, #1
 8007eba:	e02d      	b.n	8007f18 <HAL_SPI_TransmitReceive+0x1b2>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8007ebc:	6822      	ldr	r2, [r4, #0]
 8007ebe:	6893      	ldr	r3, [r2, #8]
 8007ec0:	0799      	lsls	r1, r3, #30
 8007ec2:	d50e      	bpl.n	8007ee2 <HAL_SPI_TransmitReceive+0x17c>
 8007ec4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007ec6:	b29b      	uxth	r3, r3
 8007ec8:	b15b      	cbz	r3, 8007ee2 <HAL_SPI_TransmitReceive+0x17c>
 8007eca:	b155      	cbz	r5, 8007ee2 <HAL_SPI_TransmitReceive+0x17c>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 8007ecc:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8007ece:	781b      	ldrb	r3, [r3, #0]
 8007ed0:	7313      	strb	r3, [r2, #12]
        hspi->pTxBuffPtr++;
 8007ed2:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8007ed4:	3301      	adds	r3, #1
 8007ed6:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8007ed8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007eda:	3b01      	subs	r3, #1
 8007edc:	b29b      	uxth	r3, r3
 8007ede:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 8007ee0:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8007ee2:	6822      	ldr	r2, [r4, #0]
 8007ee4:	6891      	ldr	r1, [r2, #8]
 8007ee6:	f011 0101 	ands.w	r1, r1, #1
 8007eea:	d00d      	beq.n	8007f08 <HAL_SPI_TransmitReceive+0x1a2>
 8007eec:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007eee:	b29b      	uxth	r3, r3
 8007ef0:	b153      	cbz	r3, 8007f08 <HAL_SPI_TransmitReceive+0x1a2>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 8007ef2:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8007ef4:	68d2      	ldr	r2, [r2, #12]
 8007ef6:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr++;
 8007ef8:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8007efa:	3301      	adds	r3, #1
 8007efc:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8007efe:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007f00:	3b01      	subs	r3, #1
 8007f02:	b29b      	uxth	r3, r3
 8007f04:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 8007f06:	460d      	mov	r5, r1
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 8007f08:	f7fd ff06 	bl	8005d18 <HAL_GetTick>
 8007f0c:	eba0 0008 	sub.w	r0, r0, r8
 8007f10:	42b8      	cmp	r0, r7
 8007f12:	d30a      	bcc.n	8007f2a <HAL_SPI_TransmitReceive+0x1c4>
 8007f14:	1c7b      	adds	r3, r7, #1
 8007f16:	d1b9      	bne.n	8007e8c <HAL_SPI_TransmitReceive+0x126>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8007f18:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007f1a:	b29b      	uxth	r3, r3
 8007f1c:	2b00      	cmp	r3, #0
 8007f1e:	d1cd      	bne.n	8007ebc <HAL_SPI_TransmitReceive+0x156>
 8007f20:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007f22:	b29b      	uxth	r3, r3
 8007f24:	2b00      	cmp	r3, #0
 8007f26:	d1c9      	bne.n	8007ebc <HAL_SPI_TransmitReceive+0x156>
 8007f28:	e779      	b.n	8007e1e <HAL_SPI_TransmitReceive+0xb8>
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 8007f2a:	2f00      	cmp	r7, #0
 8007f2c:	d1f4      	bne.n	8007f18 <HAL_SPI_TransmitReceive+0x1b2>
 8007f2e:	e7ad      	b.n	8007e8c <HAL_SPI_TransmitReceive+0x126>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8007f30:	68a3      	ldr	r3, [r4, #8]
 8007f32:	2b00      	cmp	r3, #0
 8007f34:	d1ab      	bne.n	8007e8e <HAL_SPI_TransmitReceive+0x128>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8007f36:	6823      	ldr	r3, [r4, #0]
 8007f38:	9001      	str	r0, [sp, #4]
 8007f3a:	68da      	ldr	r2, [r3, #12]
 8007f3c:	9201      	str	r2, [sp, #4]
 8007f3e:	689b      	ldr	r3, [r3, #8]
 8007f40:	9301      	str	r3, [sp, #4]
 8007f42:	9b01      	ldr	r3, [sp, #4]
 8007f44:	e7a3      	b.n	8007e8e <HAL_SPI_TransmitReceive+0x128>
    errorcode = HAL_BUSY;
 8007f46:	2002      	movs	r0, #2
 8007f48:	e7a1      	b.n	8007e8e <HAL_SPI_TransmitReceive+0x128>
  __HAL_LOCK(hspi);
 8007f4a:	2002      	movs	r0, #2
 8007f4c:	e7a5      	b.n	8007e9a <HAL_SPI_TransmitReceive+0x134>

08007f4e <HAL_SPI_Receive>:
{
 8007f4e:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8007f52:	461d      	mov	r5, r3
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 8007f54:	6843      	ldr	r3, [r0, #4]
 8007f56:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
{
 8007f5a:	4604      	mov	r4, r0
 8007f5c:	4689      	mov	r9, r1
 8007f5e:	4617      	mov	r7, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 8007f60:	d10c      	bne.n	8007f7c <HAL_SPI_Receive+0x2e>
 8007f62:	6883      	ldr	r3, [r0, #8]
 8007f64:	b953      	cbnz	r3, 8007f7c <HAL_SPI_Receive+0x2e>
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 8007f66:	2304      	movs	r3, #4
 8007f68:	f880 3051 	strb.w	r3, [r0, #81]	; 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 8007f6c:	4613      	mov	r3, r2
 8007f6e:	9500      	str	r5, [sp, #0]
 8007f70:	460a      	mov	r2, r1
 8007f72:	f7ff fef8 	bl	8007d66 <HAL_SPI_TransmitReceive>
}
 8007f76:	b003      	add	sp, #12
 8007f78:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  __HAL_LOCK(hspi);
 8007f7c:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 8007f80:	2b01      	cmp	r3, #1
 8007f82:	f000 8084 	beq.w	800808e <HAL_SPI_Receive+0x140>
 8007f86:	2301      	movs	r3, #1
 8007f88:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 8007f8c:	f7fd fec4 	bl	8005d18 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 8007f90:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 8007f94:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 8007f96:	4680      	mov	r8, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 8007f98:	b2d8      	uxtb	r0, r3
 8007f9a:	d176      	bne.n	800808a <HAL_SPI_Receive+0x13c>
  if ((pData == NULL) || (Size == 0U))
 8007f9c:	f1b9 0f00 	cmp.w	r9, #0
 8007fa0:	d05a      	beq.n	8008058 <HAL_SPI_Receive+0x10a>
 8007fa2:	2f00      	cmp	r7, #0
 8007fa4:	d058      	beq.n	8008058 <HAL_SPI_Receive+0x10a>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007fa6:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 8007fa8:	f8c4 9038 	str.w	r9, [r4, #56]	; 0x38
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 8007fac:	2304      	movs	r3, #4
 8007fae:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8007fb2:	2600      	movs	r6, #0
    SPI_1LINE_RX(hspi);
 8007fb4:	6823      	ldr	r3, [r4, #0]
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8007fb6:	6566      	str	r6, [r4, #84]	; 0x54
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007fb8:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
  hspi->RxXferCount = Size;
 8007fbc:	87e7      	strh	r7, [r4, #62]	; 0x3e
  hspi->TxXferCount = 0U;
 8007fbe:	86e6      	strh	r6, [r4, #54]	; 0x36
    SPI_1LINE_RX(hspi);
 8007fc0:	bf08      	it	eq
 8007fc2:	681a      	ldreq	r2, [r3, #0]
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 8007fc4:	6326      	str	r6, [r4, #48]	; 0x30
    SPI_1LINE_RX(hspi);
 8007fc6:	bf08      	it	eq
 8007fc8:	f422 4280 	biceq.w	r2, r2, #16384	; 0x4000
  hspi->TxISR       = NULL;
 8007fcc:	e9c4 6610 	strd	r6, r6, [r4, #64]	; 0x40
  hspi->TxXferSize  = 0U;
 8007fd0:	86a6      	strh	r6, [r4, #52]	; 0x34
  hspi->RxXferSize  = Size;
 8007fd2:	87a7      	strh	r7, [r4, #60]	; 0x3c
    SPI_1LINE_RX(hspi);
 8007fd4:	bf08      	it	eq
 8007fd6:	601a      	streq	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8007fd8:	681a      	ldr	r2, [r3, #0]
 8007fda:	0656      	lsls	r6, r2, #25
    __HAL_SPI_ENABLE(hspi);
 8007fdc:	bf5e      	ittt	pl
 8007fde:	681a      	ldrpl	r2, [r3, #0]
 8007fe0:	f042 0240 	orrpl.w	r2, r2, #64	; 0x40
 8007fe4:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 8007fe6:	68e3      	ldr	r3, [r4, #12]
 8007fe8:	b1f3      	cbz	r3, 8008028 <HAL_SPI_Receive+0xda>
    while (hspi->RxXferCount > 0U)
 8007fea:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007fec:	b29b      	uxth	r3, r3
 8007fee:	b1fb      	cbz	r3, 8008030 <HAL_SPI_Receive+0xe2>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 8007ff0:	6823      	ldr	r3, [r4, #0]
 8007ff2:	689a      	ldr	r2, [r3, #8]
 8007ff4:	07d2      	lsls	r2, r2, #31
 8007ff6:	d539      	bpl.n	800806c <HAL_SPI_Receive+0x11e>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8007ff8:	68da      	ldr	r2, [r3, #12]
 8007ffa:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8007ffc:	f823 2b02 	strh.w	r2, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8008000:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8008002:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8008004:	3b01      	subs	r3, #1
 8008006:	b29b      	uxth	r3, r3
 8008008:	87e3      	strh	r3, [r4, #62]	; 0x3e
 800800a:	e7ee      	b.n	8007fea <HAL_SPI_Receive+0x9c>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800800c:	6823      	ldr	r3, [r4, #0]
 800800e:	689a      	ldr	r2, [r3, #8]
 8008010:	07d0      	lsls	r0, r2, #31
 8008012:	d518      	bpl.n	8008046 <HAL_SPI_Receive+0xf8>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 8008014:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8008016:	7b1b      	ldrb	r3, [r3, #12]
 8008018:	7013      	strb	r3, [r2, #0]
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800801a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800801c:	3301      	adds	r3, #1
 800801e:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8008020:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8008022:	3b01      	subs	r3, #1
 8008024:	b29b      	uxth	r3, r3
 8008026:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 8008028:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800802a:	b29b      	uxth	r3, r3
 800802c:	2b00      	cmp	r3, #0
 800802e:	d1ed      	bne.n	800800c <HAL_SPI_Receive+0xbe>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8008030:	4642      	mov	r2, r8
 8008032:	4629      	mov	r1, r5
 8008034:	4620      	mov	r0, r4
 8008036:	f7ff fd59 	bl	8007aec <SPI_EndRxTransaction>
 800803a:	bb18      	cbnz	r0, 8008084 <HAL_SPI_Receive+0x136>
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800803c:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800803e:	3800      	subs	r0, #0
 8008040:	bf18      	it	ne
 8008042:	2001      	movne	r0, #1
error :
 8008044:	e008      	b.n	8008058 <HAL_SPI_Receive+0x10a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8008046:	f7fd fe67 	bl	8005d18 <HAL_GetTick>
 800804a:	eba0 0008 	sub.w	r0, r0, r8
 800804e:	42a8      	cmp	r0, r5
 8008050:	d309      	bcc.n	8008066 <HAL_SPI_Receive+0x118>
 8008052:	1c69      	adds	r1, r5, #1
 8008054:	d0e8      	beq.n	8008028 <HAL_SPI_Receive+0xda>
          errorcode = HAL_TIMEOUT;
 8008056:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 8008058:	2301      	movs	r3, #1
 800805a:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800805e:	2300      	movs	r3, #0
 8008060:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  return errorcode;
 8008064:	e787      	b.n	8007f76 <HAL_SPI_Receive+0x28>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8008066:	2d00      	cmp	r5, #0
 8008068:	d1de      	bne.n	8008028 <HAL_SPI_Receive+0xda>
 800806a:	e7f4      	b.n	8008056 <HAL_SPI_Receive+0x108>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800806c:	f7fd fe54 	bl	8005d18 <HAL_GetTick>
 8008070:	eba0 0008 	sub.w	r0, r0, r8
 8008074:	42a8      	cmp	r0, r5
 8008076:	d302      	bcc.n	800807e <HAL_SPI_Receive+0x130>
 8008078:	1c6b      	adds	r3, r5, #1
 800807a:	d0b6      	beq.n	8007fea <HAL_SPI_Receive+0x9c>
 800807c:	e7eb      	b.n	8008056 <HAL_SPI_Receive+0x108>
 800807e:	2d00      	cmp	r5, #0
 8008080:	d1b3      	bne.n	8007fea <HAL_SPI_Receive+0x9c>
 8008082:	e7e8      	b.n	8008056 <HAL_SPI_Receive+0x108>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8008084:	2320      	movs	r3, #32
 8008086:	6563      	str	r3, [r4, #84]	; 0x54
 8008088:	e7d8      	b.n	800803c <HAL_SPI_Receive+0xee>
    errorcode = HAL_BUSY;
 800808a:	2002      	movs	r0, #2
 800808c:	e7e4      	b.n	8008058 <HAL_SPI_Receive+0x10a>
  __HAL_LOCK(hspi);
 800808e:	2002      	movs	r0, #2
 8008090:	e771      	b.n	8007f76 <HAL_SPI_Receive+0x28>

08008092 <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 8008092:	6803      	ldr	r3, [r0, #0]
 8008094:	68da      	ldr	r2, [r3, #12]
 8008096:	f042 0201 	orr.w	r2, r2, #1
 800809a:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800809c:	689a      	ldr	r2, [r3, #8]
 800809e:	f002 0207 	and.w	r2, r2, #7
  if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 80080a2:	2a06      	cmp	r2, #6
  {
    __HAL_TIM_ENABLE(htim);
 80080a4:	bf1e      	ittt	ne
 80080a6:	681a      	ldrne	r2, [r3, #0]
 80080a8:	f042 0201 	orrne.w	r2, r2, #1
 80080ac:	601a      	strne	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
}
 80080ae:	2000      	movs	r0, #0
 80080b0:	4770      	bx	lr

080080b2 <HAL_TIM_OC_DelayElapsedCallback>:
 80080b2:	4770      	bx	lr

080080b4 <HAL_TIM_IC_CaptureCallback>:
 80080b4:	4770      	bx	lr

080080b6 <HAL_TIM_PWM_PulseFinishedCallback>:
 80080b6:	4770      	bx	lr

080080b8 <HAL_TIM_TriggerCallback>:
 80080b8:	4770      	bx	lr

080080ba <HAL_TIM_IRQHandler>:
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
  /* Capture compare 1 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 80080ba:	6803      	ldr	r3, [r0, #0]
 80080bc:	691a      	ldr	r2, [r3, #16]
 80080be:	0791      	lsls	r1, r2, #30
{
 80080c0:	b510      	push	{r4, lr}
 80080c2:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 80080c4:	d50e      	bpl.n	80080e4 <HAL_TIM_IRQHandler+0x2a>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 80080c6:	68da      	ldr	r2, [r3, #12]
 80080c8:	0792      	lsls	r2, r2, #30
 80080ca:	d50b      	bpl.n	80080e4 <HAL_TIM_IRQHandler+0x2a>
    {
      {
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 80080cc:	f06f 0202 	mvn.w	r2, #2
 80080d0:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 80080d2:	2201      	movs	r2, #1
 80080d4:	7702      	strb	r2, [r0, #28]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 80080d6:	699b      	ldr	r3, [r3, #24]
 80080d8:	079b      	lsls	r3, r3, #30
 80080da:	d077      	beq.n	80081cc <HAL_TIM_IRQHandler+0x112>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 80080dc:	f7ff ffea 	bl	80080b4 <HAL_TIM_IC_CaptureCallback>
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
          HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80080e0:	2300      	movs	r3, #0
 80080e2:	7723      	strb	r3, [r4, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 80080e4:	6823      	ldr	r3, [r4, #0]
 80080e6:	691a      	ldr	r2, [r3, #16]
 80080e8:	0750      	lsls	r0, r2, #29
 80080ea:	d510      	bpl.n	800810e <HAL_TIM_IRQHandler+0x54>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 80080ec:	68da      	ldr	r2, [r3, #12]
 80080ee:	0751      	lsls	r1, r2, #29
 80080f0:	d50d      	bpl.n	800810e <HAL_TIM_IRQHandler+0x54>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 80080f2:	f06f 0204 	mvn.w	r2, #4
 80080f6:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 80080f8:	2202      	movs	r2, #2
 80080fa:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 80080fc:	699b      	ldr	r3, [r3, #24]
 80080fe:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8008102:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8008104:	d068      	beq.n	80081d8 <HAL_TIM_IRQHandler+0x11e>
        HAL_TIM_IC_CaptureCallback(htim);
 8008106:	f7ff ffd5 	bl	80080b4 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800810a:	2300      	movs	r3, #0
 800810c:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 3 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800810e:	6823      	ldr	r3, [r4, #0]
 8008110:	691a      	ldr	r2, [r3, #16]
 8008112:	0712      	lsls	r2, r2, #28
 8008114:	d50f      	bpl.n	8008136 <HAL_TIM_IRQHandler+0x7c>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 8008116:	68da      	ldr	r2, [r3, #12]
 8008118:	0710      	lsls	r0, r2, #28
 800811a:	d50c      	bpl.n	8008136 <HAL_TIM_IRQHandler+0x7c>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800811c:	f06f 0208 	mvn.w	r2, #8
 8008120:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 8008122:	2204      	movs	r2, #4
 8008124:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8008126:	69db      	ldr	r3, [r3, #28]
 8008128:	0799      	lsls	r1, r3, #30
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 800812a:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800812c:	d05a      	beq.n	80081e4 <HAL_TIM_IRQHandler+0x12a>
        HAL_TIM_IC_CaptureCallback(htim);
 800812e:	f7ff ffc1 	bl	80080b4 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8008132:	2300      	movs	r3, #0
 8008134:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 4 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 8008136:	6823      	ldr	r3, [r4, #0]
 8008138:	691a      	ldr	r2, [r3, #16]
 800813a:	06d2      	lsls	r2, r2, #27
 800813c:	d510      	bpl.n	8008160 <HAL_TIM_IRQHandler+0xa6>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 800813e:	68da      	ldr	r2, [r3, #12]
 8008140:	06d0      	lsls	r0, r2, #27
 8008142:	d50d      	bpl.n	8008160 <HAL_TIM_IRQHandler+0xa6>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 8008144:	f06f 0210 	mvn.w	r2, #16
 8008148:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800814a:	2208      	movs	r2, #8
 800814c:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800814e:	69db      	ldr	r3, [r3, #28]
 8008150:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8008154:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8008156:	d04b      	beq.n	80081f0 <HAL_TIM_IRQHandler+0x136>
        HAL_TIM_IC_CaptureCallback(htim);
 8008158:	f7ff ffac 	bl	80080b4 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800815c:	2300      	movs	r3, #0
 800815e:	7723      	strb	r3, [r4, #28]
    }
  }
  /* TIM Update event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 8008160:	6823      	ldr	r3, [r4, #0]
 8008162:	691a      	ldr	r2, [r3, #16]
 8008164:	07d1      	lsls	r1, r2, #31
 8008166:	d508      	bpl.n	800817a <HAL_TIM_IRQHandler+0xc0>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 8008168:	68da      	ldr	r2, [r3, #12]
 800816a:	07d2      	lsls	r2, r2, #31
 800816c:	d505      	bpl.n	800817a <HAL_TIM_IRQHandler+0xc0>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 800816e:	f06f 0201 	mvn.w	r2, #1
 8008172:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 8008174:	4620      	mov	r0, r4
 8008176:	f7f9 fca9 	bl	8001acc <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800817a:	6823      	ldr	r3, [r4, #0]
 800817c:	691a      	ldr	r2, [r3, #16]
 800817e:	0610      	lsls	r0, r2, #24
 8008180:	d508      	bpl.n	8008194 <HAL_TIM_IRQHandler+0xda>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 8008182:	68da      	ldr	r2, [r3, #12]
 8008184:	0611      	lsls	r1, r2, #24
 8008186:	d505      	bpl.n	8008194 <HAL_TIM_IRQHandler+0xda>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 8008188:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800818c:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
 800818e:	4620      	mov	r0, r4
 8008190:	f000 f8f5 	bl	800837e <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 8008194:	6823      	ldr	r3, [r4, #0]
 8008196:	691a      	ldr	r2, [r3, #16]
 8008198:	0652      	lsls	r2, r2, #25
 800819a:	d508      	bpl.n	80081ae <HAL_TIM_IRQHandler+0xf4>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 800819c:	68da      	ldr	r2, [r3, #12]
 800819e:	0650      	lsls	r0, r2, #25
 80081a0:	d505      	bpl.n	80081ae <HAL_TIM_IRQHandler+0xf4>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 80081a2:	f06f 0240 	mvn.w	r2, #64	; 0x40
 80081a6:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 80081a8:	4620      	mov	r0, r4
 80081aa:	f7ff ff85 	bl	80080b8 <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 80081ae:	6823      	ldr	r3, [r4, #0]
 80081b0:	691a      	ldr	r2, [r3, #16]
 80081b2:	0691      	lsls	r1, r2, #26
 80081b4:	d522      	bpl.n	80081fc <HAL_TIM_IRQHandler+0x142>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 80081b6:	68da      	ldr	r2, [r3, #12]
 80081b8:	0692      	lsls	r2, r2, #26
 80081ba:	d51f      	bpl.n	80081fc <HAL_TIM_IRQHandler+0x142>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 80081bc:	f06f 0220 	mvn.w	r2, #32
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
 80081c0:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 80081c2:	611a      	str	r2, [r3, #16]
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 80081c4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 80081c8:	f000 b8d8 	b.w	800837c <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 80081cc:	f7ff ff71 	bl	80080b2 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 80081d0:	4620      	mov	r0, r4
 80081d2:	f7ff ff70 	bl	80080b6 <HAL_TIM_PWM_PulseFinishedCallback>
 80081d6:	e783      	b.n	80080e0 <HAL_TIM_IRQHandler+0x26>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80081d8:	f7ff ff6b 	bl	80080b2 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80081dc:	4620      	mov	r0, r4
 80081de:	f7ff ff6a 	bl	80080b6 <HAL_TIM_PWM_PulseFinishedCallback>
 80081e2:	e792      	b.n	800810a <HAL_TIM_IRQHandler+0x50>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80081e4:	f7ff ff65 	bl	80080b2 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80081e8:	4620      	mov	r0, r4
 80081ea:	f7ff ff64 	bl	80080b6 <HAL_TIM_PWM_PulseFinishedCallback>
 80081ee:	e7a0      	b.n	8008132 <HAL_TIM_IRQHandler+0x78>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80081f0:	f7ff ff5f 	bl	80080b2 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80081f4:	4620      	mov	r0, r4
 80081f6:	f7ff ff5e 	bl	80080b6 <HAL_TIM_PWM_PulseFinishedCallback>
 80081fa:	e7af      	b.n	800815c <HAL_TIM_IRQHandler+0xa2>
}
 80081fc:	bd10      	pop	{r4, pc}
	...

08008200 <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8008200:	4a30      	ldr	r2, [pc, #192]	; (80082c4 <TIM_Base_SetConfig+0xc4>)
  tmpcr1 = TIMx->CR1;
 8008202:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8008204:	4290      	cmp	r0, r2
 8008206:	d012      	beq.n	800822e <TIM_Base_SetConfig+0x2e>
 8008208:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 800820c:	d00f      	beq.n	800822e <TIM_Base_SetConfig+0x2e>
 800820e:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 8008212:	4290      	cmp	r0, r2
 8008214:	d00b      	beq.n	800822e <TIM_Base_SetConfig+0x2e>
 8008216:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800821a:	4290      	cmp	r0, r2
 800821c:	d007      	beq.n	800822e <TIM_Base_SetConfig+0x2e>
 800821e:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008222:	4290      	cmp	r0, r2
 8008224:	d003      	beq.n	800822e <TIM_Base_SetConfig+0x2e>
 8008226:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800822a:	4290      	cmp	r0, r2
 800822c:	d119      	bne.n	8008262 <TIM_Base_SetConfig+0x62>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 800822e:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8008230:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 8008234:	4313      	orrs	r3, r2
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 8008236:	4a23      	ldr	r2, [pc, #140]	; (80082c4 <TIM_Base_SetConfig+0xc4>)
 8008238:	4290      	cmp	r0, r2
 800823a:	d029      	beq.n	8008290 <TIM_Base_SetConfig+0x90>
 800823c:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8008240:	d026      	beq.n	8008290 <TIM_Base_SetConfig+0x90>
 8008242:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 8008246:	4290      	cmp	r0, r2
 8008248:	d022      	beq.n	8008290 <TIM_Base_SetConfig+0x90>
 800824a:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800824e:	4290      	cmp	r0, r2
 8008250:	d01e      	beq.n	8008290 <TIM_Base_SetConfig+0x90>
 8008252:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008256:	4290      	cmp	r0, r2
 8008258:	d01a      	beq.n	8008290 <TIM_Base_SetConfig+0x90>
 800825a:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800825e:	4290      	cmp	r0, r2
 8008260:	d016      	beq.n	8008290 <TIM_Base_SetConfig+0x90>
 8008262:	4a19      	ldr	r2, [pc, #100]	; (80082c8 <TIM_Base_SetConfig+0xc8>)
 8008264:	4290      	cmp	r0, r2
 8008266:	d013      	beq.n	8008290 <TIM_Base_SetConfig+0x90>
 8008268:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800826c:	4290      	cmp	r0, r2
 800826e:	d00f      	beq.n	8008290 <TIM_Base_SetConfig+0x90>
 8008270:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008274:	4290      	cmp	r0, r2
 8008276:	d00b      	beq.n	8008290 <TIM_Base_SetConfig+0x90>
 8008278:	f5a2 3298 	sub.w	r2, r2, #77824	; 0x13000
 800827c:	4290      	cmp	r0, r2
 800827e:	d007      	beq.n	8008290 <TIM_Base_SetConfig+0x90>
 8008280:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008284:	4290      	cmp	r0, r2
 8008286:	d003      	beq.n	8008290 <TIM_Base_SetConfig+0x90>
 8008288:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800828c:	4290      	cmp	r0, r2
 800828e:	d103      	bne.n	8008298 <TIM_Base_SetConfig+0x98>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8008290:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 8008292:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8008296:	4313      	orrs	r3, r2
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8008298:	694a      	ldr	r2, [r1, #20]
 800829a:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800829e:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 80082a0:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 80082a2:	688b      	ldr	r3, [r1, #8]
 80082a4:	62c3      	str	r3, [r0, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 80082a6:	680b      	ldr	r3, [r1, #0]
 80082a8:	6283      	str	r3, [r0, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 80082aa:	4b06      	ldr	r3, [pc, #24]	; (80082c4 <TIM_Base_SetConfig+0xc4>)
 80082ac:	4298      	cmp	r0, r3
 80082ae:	d003      	beq.n	80082b8 <TIM_Base_SetConfig+0xb8>
 80082b0:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80082b4:	4298      	cmp	r0, r3
 80082b6:	d101      	bne.n	80082bc <TIM_Base_SetConfig+0xbc>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 80082b8:	690b      	ldr	r3, [r1, #16]
 80082ba:	6303      	str	r3, [r0, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 80082bc:	2301      	movs	r3, #1
 80082be:	6143      	str	r3, [r0, #20]
}
 80082c0:	4770      	bx	lr
 80082c2:	bf00      	nop
 80082c4:	40010000 	.word	0x40010000
 80082c8:	40014000 	.word	0x40014000

080082cc <HAL_TIM_Base_Init>:
{
 80082cc:	b510      	push	{r4, lr}
  if (htim == NULL)
 80082ce:	4604      	mov	r4, r0
 80082d0:	b1a0      	cbz	r0, 80082fc <HAL_TIM_Base_Init+0x30>
  if (htim->State == HAL_TIM_STATE_RESET)
 80082d2:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 80082d6:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80082da:	b91b      	cbnz	r3, 80082e4 <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 80082dc:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 80082e0:	f7f9 fe40 	bl	8001f64 <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 80082e4:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 80082e6:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 80082e8:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 80082ec:	1d21      	adds	r1, r4, #4
 80082ee:	f7ff ff87 	bl	8008200 <TIM_Base_SetConfig>
  htim->State = HAL_TIM_STATE_READY;
 80082f2:	2301      	movs	r3, #1
 80082f4:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 80082f8:	2000      	movs	r0, #0
}
 80082fa:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80082fc:	2001      	movs	r0, #1
 80082fe:	e7fc      	b.n	80082fa <HAL_TIM_Base_Init+0x2e>

08008300 <HAL_TIMEx_MasterConfigSynchronization>:
  *         mode.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIMEx_MasterConfigSynchronization(TIM_HandleTypeDef *htim,
                                                        TIM_MasterConfigTypeDef *sMasterConfig)
{
 8008300:	b530      	push	{r4, r5, lr}
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 8008302:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 8008306:	2b01      	cmp	r3, #1
 8008308:	f04f 0302 	mov.w	r3, #2
 800830c:	d032      	beq.n	8008374 <HAL_TIMEx_MasterConfigSynchronization+0x74>

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;
 800830e:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 8008312:	6803      	ldr	r3, [r0, #0]
  tmpsmcr = htim->Instance->SMCR;

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 8008314:	680d      	ldr	r5, [r1, #0]
  tmpcr2 = htim->Instance->CR2;
 8008316:	685c      	ldr	r4, [r3, #4]
  tmpsmcr = htim->Instance->SMCR;
 8008318:	689a      	ldr	r2, [r3, #8]
  tmpcr2 &= ~TIM_CR2_MMS;
 800831a:	f024 0470 	bic.w	r4, r4, #112	; 0x70
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800831e:	432c      	orrs	r4, r5

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 8008320:	605c      	str	r4, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8008322:	4c15      	ldr	r4, [pc, #84]	; (8008378 <HAL_TIMEx_MasterConfigSynchronization+0x78>)
 8008324:	42a3      	cmp	r3, r4
 8008326:	d01a      	beq.n	800835e <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8008328:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800832c:	d017      	beq.n	800835e <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 800832e:	f5a4 447c 	sub.w	r4, r4, #64512	; 0xfc00
 8008332:	42a3      	cmp	r3, r4
 8008334:	d013      	beq.n	800835e <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8008336:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800833a:	42a3      	cmp	r3, r4
 800833c:	d00f      	beq.n	800835e <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 800833e:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8008342:	42a3      	cmp	r3, r4
 8008344:	d00b      	beq.n	800835e <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8008346:	f504 4478 	add.w	r4, r4, #63488	; 0xf800
 800834a:	42a3      	cmp	r3, r4
 800834c:	d007      	beq.n	800835e <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 800834e:	f504 5470 	add.w	r4, r4, #15360	; 0x3c00
 8008352:	42a3      	cmp	r3, r4
 8008354:	d003      	beq.n	800835e <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8008356:	f5a4 3494 	sub.w	r4, r4, #75776	; 0x12800
 800835a:	42a3      	cmp	r3, r4
 800835c:	d104      	bne.n	8008368 <HAL_TIMEx_MasterConfigSynchronization+0x68>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800835e:	6849      	ldr	r1, [r1, #4]
    tmpsmcr &= ~TIM_SMCR_MSM;
 8008360:	f022 0280 	bic.w	r2, r2, #128	; 0x80
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 8008364:	430a      	orrs	r2, r1

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 8008366:	609a      	str	r2, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;
 8008368:	2301      	movs	r3, #1
 800836a:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  __HAL_UNLOCK(htim);
 800836e:	2300      	movs	r3, #0
 8008370:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  __HAL_LOCK(htim);
 8008374:	4618      	mov	r0, r3

  return HAL_OK;
}
 8008376:	bd30      	pop	{r4, r5, pc}
 8008378:	40010000 	.word	0x40010000

0800837c <HAL_TIMEx_CommutCallback>:
 800837c:	4770      	bx	lr

0800837e <HAL_TIMEx_BreakCallback>:
 800837e:	4770      	bx	lr

08008380 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure   
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 8008380:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
                                               Init->InternalBankNumber |\
                                               Init->CASLatency         |\
                                               Init->WriteProtection    |\
                                               Init->SDClockPeriod      |\
                                               Init->ReadBurst          |\
                                               Init->ReadPipeDelay
 8008384:	6a4a      	ldr	r2, [r1, #36]	; 0x24
                                               Init->ReadBurst          |\
 8008386:	e9d1 4307 	ldrd	r4, r3, [r1, #28]
                                               Init->RowBitsNumber      |\
 800838a:	e9d1 5801 	ldrd	r5, r8, [r1, #4]
                                               Init->InternalBankNumber |\
 800838e:	e9d1 ec03 	ldrd	lr, ip, [r1, #12]
                                               Init->WriteProtection    |\
 8008392:	e9d1 7605 	ldrd	r7, r6, [r1, #20]
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 8008396:	6809      	ldr	r1, [r1, #0]
 8008398:	2901      	cmp	r1, #1
 800839a:	ea43 0304 	orr.w	r3, r3, r4
 800839e:	4912      	ldr	r1, [pc, #72]	; (80083e8 <FMC_SDRAM_Init+0x68>)
    tmpr1 = Device->SDCR[FMC_SDRAM_BANK1];
 80083a0:	6804      	ldr	r4, [r0, #0]
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 80083a2:	d00f      	beq.n	80083c4 <FMC_SDRAM_Init+0x44>
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 80083a4:	431a      	orrs	r2, r3
 80083a6:	432a      	orrs	r2, r5
 80083a8:	ea42 0308 	orr.w	r3, r2, r8
 80083ac:	ea43 030e 	orr.w	r3, r3, lr
 80083b0:	ea43 030c 	orr.w	r3, r3, ip
 80083b4:	433b      	orrs	r3, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 80083b6:	4021      	ands	r1, r4
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 80083b8:	4333      	orrs	r3, r6
 80083ba:	430b      	orrs	r3, r1
                                               );
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 80083bc:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
  }  
  
  return HAL_OK;
}
 80083be:	2000      	movs	r0, #0
 80083c0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 80083c4:	4313      	orrs	r3, r2
    tmpr2 = Device->SDCR[FMC_SDRAM_BANK2];
 80083c6:	6842      	ldr	r2, [r0, #4]
    tmpr2 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 80083c8:	4011      	ands	r1, r2
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 80083ca:	ea45 0208 	orr.w	r2, r5, r8
 80083ce:	ea42 020e 	orr.w	r2, r2, lr
 80083d2:	ea42 020c 	orr.w	r2, r2, ip
 80083d6:	433a      	orrs	r2, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));
 80083d8:	f424 44f8 	bic.w	r4, r4, #31744	; 0x7c00
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 80083dc:	4332      	orrs	r2, r6
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 80083de:	4323      	orrs	r3, r4
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 80083e0:	430a      	orrs	r2, r1
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 80083e2:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
 80083e4:	6042      	str	r2, [r0, #4]
 80083e6:	e7ea      	b.n	80083be <FMC_SDRAM_Init+0x3e>
 80083e8:	ffff8000 	.word	0xffff8000

080083ec <FMC_SDRAM_Timing_Init>:
                          FMC_SDTR1_TRCD));
    
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
                       (((Timing->RowCycleDelay)-1U) << 12U)       |\
 80083ec:	68cb      	ldr	r3, [r1, #12]
{
 80083ee:	b5f0      	push	{r4, r5, r6, r7, lr}
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 80083f0:	680c      	ldr	r4, [r1, #0]
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
 80083f2:	688e      	ldr	r6, [r1, #8]
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
 80083f4:	690d      	ldr	r5, [r1, #16]
                       (((Timing->RowCycleDelay)-1U) << 12U)       |\
 80083f6:	1e5f      	subs	r7, r3, #1
                       (((Timing->RPDelay)-1U) << 20U)             |\
 80083f8:	694b      	ldr	r3, [r1, #20]
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 80083fa:	f104 3cff 	add.w	ip, r4, #4294967295
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
 80083fe:	684c      	ldr	r4, [r1, #4]
                       (((Timing->RCDDelay)-1U) << 24U));
 8008400:	6989      	ldr	r1, [r1, #24]
                       (((Timing->RPDelay)-1U) << 20U)             |\
 8008402:	3b01      	subs	r3, #1
 8008404:	051b      	lsls	r3, r3, #20
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
 8008406:	3c01      	subs	r4, #1
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
 8008408:	3e01      	subs	r6, #1
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
 800840a:	3d01      	subs	r5, #1
                       (((Timing->RCDDelay)-1U) << 24U));
 800840c:	3901      	subs	r1, #1
  if (Bank != FMC_SDRAM_BANK2) 
 800840e:	2a01      	cmp	r2, #1
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
 8008410:	ea4f 1404 	mov.w	r4, r4, lsl #4
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
 8008414:	ea4f 2606 	mov.w	r6, r6, lsl #8
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
 8008418:	ea4f 4505 	mov.w	r5, r5, lsl #16
                       (((Timing->RCDDelay)-1U) << 24U));
 800841c:	ea4f 6101 	mov.w	r1, r1, lsl #24
 8008420:	ea43 3307 	orr.w	r3, r3, r7, lsl #12
  if (Bank != FMC_SDRAM_BANK2) 
 8008424:	d00c      	beq.n	8008440 <FMC_SDRAM_Timing_Init+0x54>
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 8008426:	ea43 030c 	orr.w	r3, r3, ip
 800842a:	4323      	orrs	r3, r4
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 800842c:	6882      	ldr	r2, [r0, #8]
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 800842e:	4333      	orrs	r3, r6
 8008430:	432b      	orrs	r3, r5
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 8008432:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 8008436:	430b      	orrs	r3, r1
 8008438:	4313      	orrs	r3, r2
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 800843a:	6083      	str	r3, [r0, #8]

    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
  }
  return HAL_OK;
}
 800843c:	2000      	movs	r0, #0
 800843e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 8008440:	6887      	ldr	r7, [r0, #8]
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TRC | FMC_SDTR1_TRP));
 8008442:	f427 0770 	bic.w	r7, r7, #15728640	; 0xf00000
 8008446:	f427 4770 	bic.w	r7, r7, #61440	; 0xf000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 800844a:	4334      	orrs	r4, r6
    tmpr1 |= (uint32_t)((((Timing->RowCycleDelay)-1U) << 12U)       |\
 800844c:	433b      	orrs	r3, r7
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 800844e:	ea44 020c 	orr.w	r2, r4, ip
    tmpr2 = Device->SDTR[FMC_SDRAM_BANK2];
 8008452:	68c7      	ldr	r7, [r0, #12]
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 8008454:	6083      	str	r3, [r0, #8]
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8008456:	432a      	orrs	r2, r5
    tmpr2 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 8008458:	f007 4770 	and.w	r7, r7, #4026531840	; 0xf0000000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 800845c:	430a      	orrs	r2, r1
 800845e:	433a      	orrs	r2, r7
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
 8008460:	60c2      	str	r2, [r0, #12]
 8008462:	e7eb      	b.n	800843c <FMC_SDRAM_Timing_Init+0x50>

08008464 <FMC_SDRAM_SendCommand>:
  * @param  Timing Pointer to SDRAM Timing structure
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */  
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 8008464:	b573      	push	{r0, r1, r4, r5, r6, lr}
  __IO uint32_t tmpr = 0U;
 8008466:	2300      	movs	r3, #0
 8008468:	9301      	str	r3, [sp, #4]
{
 800846a:	4615      	mov	r5, r2
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));  

  /* Set command register */
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 800846c:	e9d1 3200 	ldrd	r3, r2, [r1]
 8008470:	4313      	orrs	r3, r2
                    (Command->CommandTarget)                |\
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
                    ((Command->ModeRegisterDefinition) << 9U)
 8008472:	68ca      	ldr	r2, [r1, #12]
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8008474:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
 8008478:	688a      	ldr	r2, [r1, #8]
 800847a:	3a01      	subs	r2, #1
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 800847c:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 8008480:	9301      	str	r3, [sp, #4]
                    );
    
  Device->SDCMR = tmpr;
 8008482:	9b01      	ldr	r3, [sp, #4]
 8008484:	6103      	str	r3, [r0, #16]
{
 8008486:	4604      	mov	r4, r0

  /* Get tick */ 
  tickstart = HAL_GetTick();
 8008488:	f7fd fc46 	bl	8005d18 <HAL_GetTick>
 800848c:	4606      	mov	r6, r0

  /* Wait until command is send */
  while(HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800848e:	69a3      	ldr	r3, [r4, #24]
 8008490:	f013 0320 	ands.w	r3, r3, #32
 8008494:	d101      	bne.n	800849a <FMC_SDRAM_SendCommand+0x36>
        return HAL_TIMEOUT;
      }
    }
  }

  return HAL_OK;
 8008496:	4618      	mov	r0, r3
 8008498:	e003      	b.n	80084a2 <FMC_SDRAM_SendCommand+0x3e>
    if(Timeout != HAL_MAX_DELAY)
 800849a:	1c6b      	adds	r3, r5, #1
 800849c:	d0f7      	beq.n	800848e <FMC_SDRAM_SendCommand+0x2a>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 800849e:	b915      	cbnz	r5, 80084a6 <FMC_SDRAM_SendCommand+0x42>
        return HAL_TIMEOUT;
 80084a0:	2003      	movs	r0, #3
}
 80084a2:	b002      	add	sp, #8
 80084a4:	bd70      	pop	{r4, r5, r6, pc}
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 80084a6:	f7fd fc37 	bl	8005d18 <HAL_GetTick>
 80084aa:	1b80      	subs	r0, r0, r6
 80084ac:	42a8      	cmp	r0, r5
 80084ae:	d9ee      	bls.n	800848e <FMC_SDRAM_SendCommand+0x2a>
 80084b0:	e7f6      	b.n	80084a0 <FMC_SDRAM_SendCommand+0x3c>

080084b2 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));
  
  /* Set the refresh rate in command register */
  Device->SDRTR |= (RefreshRate<<1U);
 80084b2:	6943      	ldr	r3, [r0, #20]
 80084b4:	ea43 0141 	orr.w	r1, r3, r1, lsl #1
 80084b8:	6141      	str	r1, [r0, #20]
  
  return HAL_OK;   
}
 80084ba:	2000      	movs	r0, #0
 80084bc:	4770      	bx	lr
	...

080084c0 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80084c0:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 80084c4:	b113      	cbz	r3, 80084cc <osKernelInitialize+0xc>
    stat = osErrorISR;
 80084c6:	f06f 0005 	mvn.w	r0, #5
 80084ca:	4770      	bx	lr
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80084cc:	f3ef 8210 	mrs	r2, PRIMASK
  return(result);
 80084d0:	4b07      	ldr	r3, [pc, #28]	; (80084f0 <osKernelInitialize+0x30>)
  if (IS_IRQ()) {
 80084d2:	b912      	cbnz	r2, 80084da <osKernelInitialize+0x1a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80084d4:	f3ef 8211 	mrs	r2, BASEPRI
 80084d8:	b112      	cbz	r2, 80084e0 <osKernelInitialize+0x20>
 80084da:	681a      	ldr	r2, [r3, #0]
 80084dc:	2a02      	cmp	r2, #2
 80084de:	d0f2      	beq.n	80084c6 <osKernelInitialize+0x6>
  }
  else {
    if (KernelState == osKernelInactive) {
 80084e0:	6818      	ldr	r0, [r3, #0]
 80084e2:	b910      	cbnz	r0, 80084ea <osKernelInitialize+0x2a>
      #if defined(USE_FREERTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 80084e4:	2201      	movs	r2, #1
 80084e6:	601a      	str	r2, [r3, #0]
      stat = osOK;
 80084e8:	4770      	bx	lr
    } else {
      stat = osError;
 80084ea:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 80084ee:	4770      	bx	lr
 80084f0:	20004a5c 	.word	0x20004a5c

080084f4 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 80084f4:	b508      	push	{r3, lr}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80084f6:	f3ef 8305 	mrs	r3, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 80084fa:	b113      	cbz	r3, 8008502 <osKernelStart+0xe>
    stat = osErrorISR;
 80084fc:	f06f 0005 	mvn.w	r0, #5
      stat = osError;
    }
  }

  return (stat);
}
 8008500:	bd08      	pop	{r3, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8008502:	f3ef 8210 	mrs	r2, PRIMASK
  return(result);
 8008506:	4b0a      	ldr	r3, [pc, #40]	; (8008530 <osKernelStart+0x3c>)
  if (IS_IRQ()) {
 8008508:	b912      	cbnz	r2, 8008510 <osKernelStart+0x1c>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800850a:	f3ef 8211 	mrs	r2, BASEPRI
 800850e:	b112      	cbz	r2, 8008516 <osKernelStart+0x22>
 8008510:	681a      	ldr	r2, [r3, #0]
 8008512:	2a02      	cmp	r2, #2
 8008514:	d0f2      	beq.n	80084fc <osKernelStart+0x8>
    if (KernelState == osKernelReady) {
 8008516:	681a      	ldr	r2, [r3, #0]
 8008518:	2a01      	cmp	r2, #1
 800851a:	d105      	bne.n	8008528 <osKernelStart+0x34>
      KernelState = osKernelRunning;
 800851c:	2202      	movs	r2, #2
 800851e:	601a      	str	r2, [r3, #0]
      vTaskStartScheduler();
 8008520:	f001 fbd8 	bl	8009cd4 <vTaskStartScheduler>
      stat = osOK;
 8008524:	2000      	movs	r0, #0
 8008526:	e7eb      	b.n	8008500 <osKernelStart+0xc>
      stat = osError;
 8008528:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 800852c:	e7e8      	b.n	8008500 <osKernelStart+0xc>
 800852e:	bf00      	nop
 8008530:	20004a5c 	.word	0x20004a5c

08008534 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8008534:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008536:	b087      	sub	sp, #28
 8008538:	4614      	mov	r4, r2
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 800853a:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800853c:	460b      	mov	r3, r1
  hTask = NULL;
 800853e:	9205      	str	r2, [sp, #20]
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008540:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 8008544:	bb22      	cbnz	r2, 8008590 <osThreadNew+0x5c>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8008546:	f3ef 8210 	mrs	r2, PRIMASK
 800854a:	b912      	cbnz	r2, 8008552 <osThreadNew+0x1e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800854c:	f3ef 8211 	mrs	r2, BASEPRI
 8008550:	b11a      	cbz	r2, 800855a <osThreadNew+0x26>
 8008552:	4a22      	ldr	r2, [pc, #136]	; (80085dc <osThreadNew+0xa8>)
 8008554:	6812      	ldr	r2, [r2, #0]
 8008556:	2a02      	cmp	r2, #2
 8008558:	d01a      	beq.n	8008590 <osThreadNew+0x5c>
 800855a:	b1c8      	cbz	r0, 8008590 <osThreadNew+0x5c>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 800855c:	2c00      	cmp	r4, #0
 800855e:	d02f      	beq.n	80085c0 <osThreadNew+0x8c>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 8008560:	69a5      	ldr	r5, [r4, #24]
 8008562:	2d00      	cmp	r5, #0
 8008564:	bf08      	it	eq
 8008566:	2518      	moveq	r5, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 8008568:	1e6a      	subs	r2, r5, #1
 800856a:	2a37      	cmp	r2, #55	; 0x37
 800856c:	46ac      	mov	ip, r5
 800856e:	d82b      	bhi.n	80085c8 <osThreadNew+0x94>
 8008570:	6862      	ldr	r2, [r4, #4]
 8008572:	07d2      	lsls	r2, r2, #31
 8008574:	d428      	bmi.n	80085c8 <osThreadNew+0x94>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 8008576:	6966      	ldr	r6, [r4, #20]
 8008578:	b16e      	cbz	r6, 8008596 <osThreadNew+0x62>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 800857a:	08b2      	lsrs	r2, r6, #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800857c:	e9d4 7e02 	ldrd	r7, lr, [r4, #8]
      if (attr->name != NULL) {
 8008580:	6821      	ldr	r1, [r4, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8008582:	b157      	cbz	r7, 800859a <osThreadNew+0x66>
 8008584:	f1be 0fbf 	cmp.w	lr, #191	; 0xbf
 8008588:	d902      	bls.n	8008590 <osThreadNew+0x5c>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800858a:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800858c:	b104      	cbz	r4, 8008590 <osThreadNew+0x5c>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800858e:	b9ee      	cbnz	r6, 80085cc <osThreadNew+0x98>
        }
      }
    }
  }

  return ((osThreadId_t)hTask);
 8008590:	9805      	ldr	r0, [sp, #20]
}
 8008592:	b007      	add	sp, #28
 8008594:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 8008596:	2280      	movs	r2, #128	; 0x80
 8008598:	e7f0      	b.n	800857c <osThreadNew+0x48>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 800859a:	f1be 0f00 	cmp.w	lr, #0
 800859e:	d1f7      	bne.n	8008590 <osThreadNew+0x5c>
      if (mem == 0) {
 80085a0:	6924      	ldr	r4, [r4, #16]
 80085a2:	2c00      	cmp	r4, #0
 80085a4:	d1f4      	bne.n	8008590 <osThreadNew+0x5c>
 80085a6:	460c      	mov	r4, r1
        if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 80085a8:	a905      	add	r1, sp, #20
 80085aa:	e9cd c100 	strd	ip, r1, [sp]
 80085ae:	b292      	uxth	r2, r2
 80085b0:	4621      	mov	r1, r4
 80085b2:	f001 fb61 	bl	8009c78 <xTaskCreate>
 80085b6:	2801      	cmp	r0, #1
          hTask = NULL;
 80085b8:	bf1c      	itt	ne
 80085ba:	2300      	movne	r3, #0
 80085bc:	9305      	strne	r3, [sp, #20]
 80085be:	e7e7      	b.n	8008590 <osThreadNew+0x5c>
    prio  = (UBaseType_t)osPriorityNormal;
 80085c0:	f04f 0c18 	mov.w	ip, #24
    stack = configMINIMAL_STACK_SIZE;
 80085c4:	2280      	movs	r2, #128	; 0x80
 80085c6:	e7ef      	b.n	80085a8 <osThreadNew+0x74>
        return (NULL);
 80085c8:	2000      	movs	r0, #0
 80085ca:	e7e2      	b.n	8008592 <osThreadNew+0x5e>
      hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 80085cc:	e9cd 4701 	strd	r4, r7, [sp, #4]
 80085d0:	9500      	str	r5, [sp, #0]
 80085d2:	f001 fb19 	bl	8009c08 <xTaskCreateStatic>
 80085d6:	9005      	str	r0, [sp, #20]
 80085d8:	e7da      	b.n	8008590 <osThreadNew+0x5c>
 80085da:	bf00      	nop
 80085dc:	20004a5c 	.word	0x20004a5c

080085e0 <osDelay>:

  /* Return flags before clearing */
  return (rflags);
}

osStatus_t osDelay (uint32_t ticks) {
 80085e0:	b508      	push	{r3, lr}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80085e2:	f3ef 8305 	mrs	r3, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 80085e6:	b113      	cbz	r3, 80085ee <osDelay+0xe>
    stat = osErrorISR;
 80085e8:	f06f 0005 	mvn.w	r0, #5
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
 80085ec:	bd08      	pop	{r3, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80085ee:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 80085f2:	b913      	cbnz	r3, 80085fa <osDelay+0x1a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80085f4:	f3ef 8311 	mrs	r3, BASEPRI
 80085f8:	b11b      	cbz	r3, 8008602 <osDelay+0x22>
 80085fa:	4b05      	ldr	r3, [pc, #20]	; (8008610 <osDelay+0x30>)
 80085fc:	681b      	ldr	r3, [r3, #0]
 80085fe:	2b02      	cmp	r3, #2
 8008600:	d0f2      	beq.n	80085e8 <osDelay+0x8>
    if (ticks != 0U) {
 8008602:	2800      	cmp	r0, #0
 8008604:	d0f2      	beq.n	80085ec <osDelay+0xc>
      vTaskDelay(ticks);
 8008606:	f001 fccd 	bl	8009fa4 <vTaskDelay>
    stat = osOK;
 800860a:	2000      	movs	r0, #0
 800860c:	e7ee      	b.n	80085ec <osDelay+0xc>
 800860e:	bf00      	nop
 8008610:	20004a5c 	.word	0x20004a5c

08008614 <osSemaphoreNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 8008614:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8008616:	460e      	mov	r6, r1
 8008618:	4615      	mov	r5, r2
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800861a:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800861e:	b11b      	cbz	r3, 8008628 <osSemaphoreNew+0x14>
        }

        if ((hSemaphore != NULL) && (initial_count != 0U)) {
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
            vSemaphoreDelete (hSemaphore);
            hSemaphore = NULL;
 8008620:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 8008622:	4620      	mov	r0, r4
 8008624:	b002      	add	sp, #8
 8008626:	bd70      	pop	{r4, r5, r6, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8008628:	f3ef 8310 	mrs	r3, PRIMASK
  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800862c:	b913      	cbnz	r3, 8008634 <osSemaphoreNew+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800862e:	f3ef 8311 	mrs	r3, BASEPRI
 8008632:	b11b      	cbz	r3, 800863c <osSemaphoreNew+0x28>
 8008634:	4b21      	ldr	r3, [pc, #132]	; (80086bc <osSemaphoreNew+0xa8>)
 8008636:	681b      	ldr	r3, [r3, #0]
 8008638:	2b02      	cmp	r3, #2
 800863a:	d0f1      	beq.n	8008620 <osSemaphoreNew+0xc>
 800863c:	2800      	cmp	r0, #0
 800863e:	d0ef      	beq.n	8008620 <osSemaphoreNew+0xc>
 8008640:	42b0      	cmp	r0, r6
 8008642:	d3ed      	bcc.n	8008620 <osSemaphoreNew+0xc>
    if (attr != NULL) {
 8008644:	b1ed      	cbz	r5, 8008682 <osSemaphoreNew+0x6e>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 8008646:	e9d5 3202 	ldrd	r3, r2, [r5, #8]
 800864a:	b1c3      	cbz	r3, 800867e <osSemaphoreNew+0x6a>
 800864c:	2a4f      	cmp	r2, #79	; 0x4f
 800864e:	d9e7      	bls.n	8008620 <osSemaphoreNew+0xc>
      if (max_count == 1U) {
 8008650:	2801      	cmp	r0, #1
 8008652:	d129      	bne.n	80086a8 <osSemaphoreNew+0x94>
          hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 8008654:	2203      	movs	r2, #3
 8008656:	9200      	str	r2, [sp, #0]
 8008658:	2200      	movs	r2, #0
 800865a:	4611      	mov	r1, r2
 800865c:	f000 fd2b 	bl	80090b6 <xQueueGenericCreateStatic>
          hSemaphore = xSemaphoreCreateBinary();
 8008660:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 8008662:	2800      	cmp	r0, #0
 8008664:	d0dc      	beq.n	8008620 <osSemaphoreNew+0xc>
 8008666:	b1ce      	cbz	r6, 800869c <osSemaphoreNew+0x88>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8008668:	2300      	movs	r3, #0
 800866a:	461a      	mov	r2, r3
 800866c:	4619      	mov	r1, r3
 800866e:	f000 fdd7 	bl	8009220 <xQueueGenericSend>
 8008672:	2801      	cmp	r0, #1
 8008674:	d012      	beq.n	800869c <osSemaphoreNew+0x88>
            vSemaphoreDelete (hSemaphore);
 8008676:	4620      	mov	r0, r4
 8008678:	f001 f912 	bl	80098a0 <vQueueDelete>
 800867c:	e7d0      	b.n	8008620 <osSemaphoreNew+0xc>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 800867e:	2a00      	cmp	r2, #0
 8008680:	d1ce      	bne.n	8008620 <osSemaphoreNew+0xc>
      if (max_count == 1U) {
 8008682:	2801      	cmp	r0, #1
 8008684:	d104      	bne.n	8008690 <osSemaphoreNew+0x7c>
          hSemaphore = xSemaphoreCreateBinary();
 8008686:	2203      	movs	r2, #3
 8008688:	2100      	movs	r1, #0
 800868a:	f000 fd62 	bl	8009152 <xQueueGenericCreate>
 800868e:	e7e7      	b.n	8008660 <osSemaphoreNew+0x4c>
          hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 8008690:	4631      	mov	r1, r6
 8008692:	f000 fda7 	bl	80091e4 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 8008696:	4604      	mov	r4, r0
 8008698:	2800      	cmp	r0, #0
 800869a:	d0c1      	beq.n	8008620 <osSemaphoreNew+0xc>
        if (attr != NULL) {
 800869c:	b95d      	cbnz	r5, 80086b6 <osSemaphoreNew+0xa2>
        vQueueAddToRegistry (hSemaphore, name);
 800869e:	4629      	mov	r1, r5
 80086a0:	4620      	mov	r0, r4
 80086a2:	f001 f8d7 	bl	8009854 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 80086a6:	e7bc      	b.n	8008622 <osSemaphoreNew+0xe>
          hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 80086a8:	461a      	mov	r2, r3
 80086aa:	4631      	mov	r1, r6
 80086ac:	f000 fd78 	bl	80091a0 <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 80086b0:	4604      	mov	r4, r0
 80086b2:	2800      	cmp	r0, #0
 80086b4:	d0b4      	beq.n	8008620 <osSemaphoreNew+0xc>
          name = attr->name;
 80086b6:	682d      	ldr	r5, [r5, #0]
 80086b8:	e7f1      	b.n	800869e <osSemaphoreNew+0x8a>
 80086ba:	bf00      	nop
 80086bc:	20004a5c 	.word	0x20004a5c

080086c0 <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 80086c0:	b513      	push	{r0, r1, r4, lr}
 80086c2:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 80086c4:	b918      	cbnz	r0, 80086ce <osSemaphoreAcquire+0xe>
    stat = osErrorParameter;
 80086c6:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 80086ca:	b002      	add	sp, #8
 80086cc:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80086ce:	f3ef 8305 	mrs	r3, IPSR
  else if (IS_IRQ()) {
 80086d2:	b163      	cbz	r3, 80086ee <osSemaphoreAcquire+0x2e>
    if (timeout != 0U) {
 80086d4:	2c00      	cmp	r4, #0
 80086d6:	d1f6      	bne.n	80086c6 <osSemaphoreAcquire+0x6>
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 80086d8:	aa01      	add	r2, sp, #4
 80086da:	4621      	mov	r1, r4
      yield = pdFALSE;
 80086dc:	9401      	str	r4, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 80086de:	f001 f869 	bl	80097b4 <xQueueReceiveFromISR>
 80086e2:	2801      	cmp	r0, #1
 80086e4:	d113      	bne.n	800870e <osSemaphoreAcquire+0x4e>
        portYIELD_FROM_ISR (yield);
 80086e6:	9b01      	ldr	r3, [sp, #4]
 80086e8:	b9a3      	cbnz	r3, 8008714 <osSemaphoreAcquire+0x54>
  stat = osOK;
 80086ea:	2000      	movs	r0, #0
 80086ec:	e7ed      	b.n	80086ca <osSemaphoreAcquire+0xa>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80086ee:	f3ef 8310 	mrs	r3, PRIMASK
  else if (IS_IRQ()) {
 80086f2:	b913      	cbnz	r3, 80086fa <osSemaphoreAcquire+0x3a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80086f4:	f3ef 8311 	mrs	r3, BASEPRI
 80086f8:	b11b      	cbz	r3, 8008702 <osSemaphoreAcquire+0x42>
 80086fa:	4b0d      	ldr	r3, [pc, #52]	; (8008730 <osSemaphoreAcquire+0x70>)
 80086fc:	681b      	ldr	r3, [r3, #0]
 80086fe:	2b02      	cmp	r3, #2
 8008700:	d0e8      	beq.n	80086d4 <osSemaphoreAcquire+0x14>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 8008702:	4621      	mov	r1, r4
 8008704:	f000 ff93 	bl	800962e <xQueueSemaphoreTake>
 8008708:	2801      	cmp	r0, #1
 800870a:	d0ee      	beq.n	80086ea <osSemaphoreAcquire+0x2a>
      if (timeout != 0U) {
 800870c:	b96c      	cbnz	r4, 800872a <osSemaphoreAcquire+0x6a>
        stat = osErrorResource;
 800870e:	f06f 0002 	mvn.w	r0, #2
 8008712:	e7da      	b.n	80086ca <osSemaphoreAcquire+0xa>
        portYIELD_FROM_ISR (yield);
 8008714:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008718:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800871c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008720:	f3bf 8f4f 	dsb	sy
 8008724:	f3bf 8f6f 	isb	sy
 8008728:	e7df      	b.n	80086ea <osSemaphoreAcquire+0x2a>
        stat = osErrorTimeout;
 800872a:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 800872e:	e7cc      	b.n	80086ca <osSemaphoreAcquire+0xa>
 8008730:	20004a5c 	.word	0x20004a5c

08008734 <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 8008734:	b513      	push	{r0, r1, r4, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8008736:	b370      	cbz	r0, 8008796 <osSemaphoreRelease+0x62>
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008738:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800873c:	b14b      	cbz	r3, 8008752 <osSemaphoreRelease+0x1e>
    yield = pdFALSE;
 800873e:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8008740:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 8008742:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8008744:	f000 fe80 	bl	8009448 <xQueueGiveFromISR>
 8008748:	2801      	cmp	r0, #1
 800874a:	d014      	beq.n	8008776 <osSemaphoreRelease+0x42>
      portYIELD_FROM_ISR (yield);
    }
  }
  else {
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
      stat = osErrorResource;
 800874c:	f06f 0002 	mvn.w	r0, #2
 8008750:	e014      	b.n	800877c <osSemaphoreRelease+0x48>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8008752:	f3ef 8310 	mrs	r3, PRIMASK
  else if (IS_IRQ()) {
 8008756:	b913      	cbnz	r3, 800875e <osSemaphoreRelease+0x2a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8008758:	f3ef 8311 	mrs	r3, BASEPRI
 800875c:	b11b      	cbz	r3, 8008766 <osSemaphoreRelease+0x32>
 800875e:	4b0f      	ldr	r3, [pc, #60]	; (800879c <osSemaphoreRelease+0x68>)
 8008760:	681b      	ldr	r3, [r3, #0]
 8008762:	2b02      	cmp	r3, #2
 8008764:	d0eb      	beq.n	800873e <osSemaphoreRelease+0xa>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8008766:	2300      	movs	r3, #0
 8008768:	461a      	mov	r2, r3
 800876a:	4619      	mov	r1, r3
 800876c:	f000 fd58 	bl	8009220 <xQueueGenericSend>
 8008770:	2801      	cmp	r0, #1
 8008772:	d002      	beq.n	800877a <osSemaphoreRelease+0x46>
 8008774:	e7ea      	b.n	800874c <osSemaphoreRelease+0x18>
      portYIELD_FROM_ISR (yield);
 8008776:	9b01      	ldr	r3, [sp, #4]
 8008778:	b913      	cbnz	r3, 8008780 <osSemaphoreRelease+0x4c>
  stat = osOK;
 800877a:	2000      	movs	r0, #0
    }
  }

  return (stat);
}
 800877c:	b002      	add	sp, #8
 800877e:	bd10      	pop	{r4, pc}
      portYIELD_FROM_ISR (yield);
 8008780:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008784:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008788:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800878c:	f3bf 8f4f 	dsb	sy
 8008790:	f3bf 8f6f 	isb	sy
 8008794:	e7f1      	b.n	800877a <osSemaphoreRelease+0x46>
    stat = osErrorParameter;
 8008796:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 800879a:	e7ef      	b.n	800877c <osSemaphoreRelease+0x48>
 800879c:	20004a5c 	.word	0x20004a5c

080087a0 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 80087a0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80087a2:	4614      	mov	r4, r2
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80087a4:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 80087a8:	b11b      	cbz	r3, 80087b2 <osMessageQueueNew+0x12>
  hQueue = NULL;
 80087aa:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 80087ac:	4628      	mov	r0, r5
 80087ae:	b002      	add	sp, #8
 80087b0:	bd70      	pop	{r4, r5, r6, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80087b2:	f3ef 8310 	mrs	r3, PRIMASK
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 80087b6:	b913      	cbnz	r3, 80087be <osMessageQueueNew+0x1e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80087b8:	f3ef 8311 	mrs	r3, BASEPRI
 80087bc:	b11b      	cbz	r3, 80087c6 <osMessageQueueNew+0x26>
 80087be:	4b1a      	ldr	r3, [pc, #104]	; (8008828 <osMessageQueueNew+0x88>)
 80087c0:	681b      	ldr	r3, [r3, #0]
 80087c2:	2b02      	cmp	r3, #2
 80087c4:	d0f1      	beq.n	80087aa <osMessageQueueNew+0xa>
 80087c6:	2800      	cmp	r0, #0
 80087c8:	d0ef      	beq.n	80087aa <osMessageQueueNew+0xa>
 80087ca:	2900      	cmp	r1, #0
 80087cc:	d0ed      	beq.n	80087aa <osMessageQueueNew+0xa>
    if (attr != NULL) {
 80087ce:	b1ec      	cbz	r4, 800880c <osMessageQueueNew+0x6c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 80087d0:	e9d4 3202 	ldrd	r3, r2, [r4, #8]
 80087d4:	b193      	cbz	r3, 80087fc <osMessageQueueNew+0x5c>
 80087d6:	2a4f      	cmp	r2, #79	; 0x4f
 80087d8:	d9e7      	bls.n	80087aa <osMessageQueueNew+0xa>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 80087da:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 80087dc:	2a00      	cmp	r2, #0
 80087de:	d0e4      	beq.n	80087aa <osMessageQueueNew+0xa>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 80087e0:	6966      	ldr	r6, [r4, #20]
 80087e2:	fb01 f500 	mul.w	r5, r1, r0
 80087e6:	42ae      	cmp	r6, r5
 80087e8:	d3df      	bcc.n	80087aa <osMessageQueueNew+0xa>
      hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 80087ea:	2500      	movs	r5, #0
 80087ec:	9500      	str	r5, [sp, #0]
 80087ee:	f000 fc62 	bl	80090b6 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 80087f2:	4605      	mov	r5, r0
 80087f4:	2800      	cmp	r0, #0
 80087f6:	d0d8      	beq.n	80087aa <osMessageQueueNew+0xa>
        name = attr->name;
 80087f8:	6824      	ldr	r4, [r4, #0]
 80087fa:	e00f      	b.n	800881c <osMessageQueueNew+0x7c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 80087fc:	2a00      	cmp	r2, #0
 80087fe:	d1d4      	bne.n	80087aa <osMessageQueueNew+0xa>
 8008800:	6923      	ldr	r3, [r4, #16]
 8008802:	2b00      	cmp	r3, #0
 8008804:	d1d1      	bne.n	80087aa <osMessageQueueNew+0xa>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 8008806:	6963      	ldr	r3, [r4, #20]
 8008808:	2b00      	cmp	r3, #0
 800880a:	d1ce      	bne.n	80087aa <osMessageQueueNew+0xa>
        hQueue = xQueueCreate (msg_count, msg_size);
 800880c:	2200      	movs	r2, #0
 800880e:	f000 fca0 	bl	8009152 <xQueueGenericCreate>
    if (hQueue != NULL) {
 8008812:	4605      	mov	r5, r0
 8008814:	2800      	cmp	r0, #0
 8008816:	d0c8      	beq.n	80087aa <osMessageQueueNew+0xa>
      if (attr != NULL) {
 8008818:	2c00      	cmp	r4, #0
 800881a:	d1ed      	bne.n	80087f8 <osMessageQueueNew+0x58>
      vQueueAddToRegistry (hQueue, name);
 800881c:	4621      	mov	r1, r4
 800881e:	4628      	mov	r0, r5
 8008820:	f001 f818 	bl	8009854 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 8008824:	e7c2      	b.n	80087ac <osMessageQueueNew+0xc>
 8008826:	bf00      	nop
 8008828:	20004a5c 	.word	0x20004a5c

0800882c <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 800882c:	b513      	push	{r0, r1, r4, lr}
 800882e:	461c      	mov	r4, r3
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008830:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8008834:	b123      	cbz	r3, 8008840 <osMessageQueuePut+0x14>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8008836:	b9d8      	cbnz	r0, 8008870 <osMessageQueuePut+0x44>
      stat = osErrorParameter;
 8008838:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 800883c:	b002      	add	sp, #8
 800883e:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8008840:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 8008844:	b913      	cbnz	r3, 800884c <osMessageQueuePut+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8008846:	f3ef 8311 	mrs	r3, BASEPRI
 800884a:	b11b      	cbz	r3, 8008854 <osMessageQueuePut+0x28>
 800884c:	4b17      	ldr	r3, [pc, #92]	; (80088ac <osMessageQueuePut+0x80>)
 800884e:	681b      	ldr	r3, [r3, #0]
 8008850:	2b02      	cmp	r3, #2
 8008852:	d0f0      	beq.n	8008836 <osMessageQueuePut+0xa>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8008854:	2800      	cmp	r0, #0
 8008856:	d0ef      	beq.n	8008838 <osMessageQueuePut+0xc>
 8008858:	2900      	cmp	r1, #0
 800885a:	d0ed      	beq.n	8008838 <osMessageQueuePut+0xc>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800885c:	2300      	movs	r3, #0
 800885e:	4622      	mov	r2, r4
 8008860:	f000 fcde 	bl	8009220 <xQueueGenericSend>
 8008864:	2801      	cmp	r0, #1
 8008866:	d010      	beq.n	800888a <osMessageQueuePut+0x5e>
        if (timeout != 0U) {
 8008868:	b9e4      	cbnz	r4, 80088a4 <osMessageQueuePut+0x78>
          stat = osErrorResource;
 800886a:	f06f 0002 	mvn.w	r0, #2
 800886e:	e7e5      	b.n	800883c <osMessageQueuePut+0x10>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8008870:	2900      	cmp	r1, #0
 8008872:	d0e1      	beq.n	8008838 <osMessageQueuePut+0xc>
 8008874:	2c00      	cmp	r4, #0
 8008876:	d1df      	bne.n	8008838 <osMessageQueuePut+0xc>
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8008878:	4623      	mov	r3, r4
 800887a:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800887c:	9401      	str	r4, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800887e:	f000 fd82 	bl	8009386 <xQueueGenericSendFromISR>
 8008882:	2801      	cmp	r0, #1
 8008884:	d1f1      	bne.n	800886a <osMessageQueuePut+0x3e>
        portYIELD_FROM_ISR (yield);
 8008886:	9b01      	ldr	r3, [sp, #4]
 8008888:	b90b      	cbnz	r3, 800888e <osMessageQueuePut+0x62>
  stat = osOK;
 800888a:	2000      	movs	r0, #0
 800888c:	e7d6      	b.n	800883c <osMessageQueuePut+0x10>
        portYIELD_FROM_ISR (yield);
 800888e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008892:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008896:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800889a:	f3bf 8f4f 	dsb	sy
 800889e:	f3bf 8f6f 	isb	sy
 80088a2:	e7f2      	b.n	800888a <osMessageQueuePut+0x5e>
          stat = osErrorTimeout;
 80088a4:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 80088a8:	e7c8      	b.n	800883c <osMessageQueuePut+0x10>
 80088aa:	bf00      	nop
 80088ac:	20004a5c 	.word	0x20004a5c

080088b0 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 80088b0:	b513      	push	{r0, r1, r4, lr}
 80088b2:	461c      	mov	r4, r3
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80088b4:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 80088b8:	b123      	cbz	r3, 80088c4 <osMessageQueueGet+0x14>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 80088ba:	b9d0      	cbnz	r0, 80088f2 <osMessageQueueGet+0x42>
      stat = osErrorParameter;
 80088bc:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 80088c0:	b002      	add	sp, #8
 80088c2:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80088c4:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 80088c8:	b913      	cbnz	r3, 80088d0 <osMessageQueueGet+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80088ca:	f3ef 8311 	mrs	r3, BASEPRI
 80088ce:	b11b      	cbz	r3, 80088d8 <osMessageQueueGet+0x28>
 80088d0:	4b16      	ldr	r3, [pc, #88]	; (800892c <osMessageQueueGet+0x7c>)
 80088d2:	681b      	ldr	r3, [r3, #0]
 80088d4:	2b02      	cmp	r3, #2
 80088d6:	d0f0      	beq.n	80088ba <osMessageQueueGet+0xa>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 80088d8:	2800      	cmp	r0, #0
 80088da:	d0ef      	beq.n	80088bc <osMessageQueueGet+0xc>
 80088dc:	2900      	cmp	r1, #0
 80088de:	d0ed      	beq.n	80088bc <osMessageQueueGet+0xc>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 80088e0:	4622      	mov	r2, r4
 80088e2:	f000 fe05 	bl	80094f0 <xQueueReceive>
 80088e6:	2801      	cmp	r0, #1
 80088e8:	d00f      	beq.n	800890a <osMessageQueueGet+0x5a>
        if (timeout != 0U) {
 80088ea:	b9dc      	cbnz	r4, 8008924 <osMessageQueueGet+0x74>
          stat = osErrorResource;
 80088ec:	f06f 0002 	mvn.w	r0, #2
 80088f0:	e7e6      	b.n	80088c0 <osMessageQueueGet+0x10>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 80088f2:	2900      	cmp	r1, #0
 80088f4:	d0e2      	beq.n	80088bc <osMessageQueueGet+0xc>
 80088f6:	2c00      	cmp	r4, #0
 80088f8:	d1e0      	bne.n	80088bc <osMessageQueueGet+0xc>
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 80088fa:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 80088fc:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 80088fe:	f000 ff59 	bl	80097b4 <xQueueReceiveFromISR>
 8008902:	2801      	cmp	r0, #1
 8008904:	d1f2      	bne.n	80088ec <osMessageQueueGet+0x3c>
        portYIELD_FROM_ISR (yield);
 8008906:	9b01      	ldr	r3, [sp, #4]
 8008908:	b90b      	cbnz	r3, 800890e <osMessageQueueGet+0x5e>
  stat = osOK;
 800890a:	2000      	movs	r0, #0
 800890c:	e7d8      	b.n	80088c0 <osMessageQueueGet+0x10>
        portYIELD_FROM_ISR (yield);
 800890e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008912:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008916:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800891a:	f3bf 8f4f 	dsb	sy
 800891e:	f3bf 8f6f 	isb	sy
 8008922:	e7f2      	b.n	800890a <osMessageQueueGet+0x5a>
          stat = osErrorTimeout;
 8008924:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8008928:	e7ca      	b.n	80088c0 <osMessageQueueGet+0x10>
 800892a:	bf00      	nop
 800892c:	20004a5c 	.word	0x20004a5c

08008930 <vApplicationGetIdleTaskMemory>:
/*
  vApplicationGetIdleTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 8008930:	4b03      	ldr	r3, [pc, #12]	; (8008940 <vApplicationGetIdleTaskMemory+0x10>)
 8008932:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 8008934:	4b03      	ldr	r3, [pc, #12]	; (8008944 <vApplicationGetIdleTaskMemory+0x14>)
 8008936:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 8008938:	2380      	movs	r3, #128	; 0x80
 800893a:	6013      	str	r3, [r2, #0]
}
 800893c:	4770      	bx	lr
 800893e:	bf00      	nop
 8008940:	2000499c 	.word	0x2000499c
 8008944:	2000479c 	.word	0x2000479c

08008948 <vApplicationGetTimerTaskMemory>:
/*
  vApplicationGetTimerTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 8008948:	4b03      	ldr	r3, [pc, #12]	; (8008958 <vApplicationGetTimerTaskMemory+0x10>)
 800894a:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 800894c:	4b03      	ldr	r3, [pc, #12]	; (800895c <vApplicationGetTimerTaskMemory+0x14>)
 800894e:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 8008950:	f44f 7380 	mov.w	r3, #256	; 0x100
 8008954:	6013      	str	r3, [r2, #0]
}
 8008956:	4770      	bx	lr
 8008958:	20004e60 	.word	0x20004e60
 800895c:	20004a60 	.word	0x20004a60

08008960 <prvInsertBlockIntoFreeList>:
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
{
 8008960:	b510      	push	{r4, lr}
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 8008962:	4b0f      	ldr	r3, [pc, #60]	; (80089a0 <prvInsertBlockIntoFreeList+0x40>)
 8008964:	461a      	mov	r2, r3
 8008966:	681b      	ldr	r3, [r3, #0]
 8008968:	4283      	cmp	r3, r0
 800896a:	d3fb      	bcc.n	8008964 <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800896c:	6854      	ldr	r4, [r2, #4]
 800896e:	1911      	adds	r1, r2, r4
 8008970:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 8008972:	bf01      	itttt	eq
 8008974:	6841      	ldreq	r1, [r0, #4]
 8008976:	4610      	moveq	r0, r2
 8008978:	1909      	addeq	r1, r1, r4
 800897a:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800897c:	6844      	ldr	r4, [r0, #4]
 800897e:	1901      	adds	r1, r0, r4
 8008980:	428b      	cmp	r3, r1
 8008982:	d107      	bne.n	8008994 <prvInsertBlockIntoFreeList+0x34>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 8008984:	4907      	ldr	r1, [pc, #28]	; (80089a4 <prvInsertBlockIntoFreeList+0x44>)
 8008986:	6809      	ldr	r1, [r1, #0]
 8008988:	428b      	cmp	r3, r1
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800898a:	bf1f      	itttt	ne
 800898c:	6859      	ldrne	r1, [r3, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800898e:	681b      	ldrne	r3, [r3, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 8008990:	1909      	addne	r1, r1, r4
 8008992:	6041      	strne	r1, [r0, #4]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 8008994:	4290      	cmp	r0, r2
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
 8008996:	6003      	str	r3, [r0, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 8008998:	bf18      	it	ne
 800899a:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 800899c:	bd10      	pop	{r4, pc}
 800899e:	bf00      	nop
 80089a0:	20014f30 	.word	0x20014f30
 80089a4:	20004f20 	.word	0x20004f20

080089a8 <pvPortMalloc>:
{
 80089a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80089ac:	4604      	mov	r4, r0
	vTaskSuspendAll();
 80089ae:	f001 f9e1 	bl	8009d74 <vTaskSuspendAll>
		if( pxEnd == NULL )
 80089b2:	4840      	ldr	r0, [pc, #256]	; (8008ab4 <pvPortMalloc+0x10c>)
 80089b4:	4d40      	ldr	r5, [pc, #256]	; (8008ab8 <pvPortMalloc+0x110>)
 80089b6:	6803      	ldr	r3, [r0, #0]
 80089b8:	bb0b      	cbnz	r3, 80089fe <pvPortMalloc+0x56>
	uxAddress = ( size_t ) ucHeap;
 80089ba:	4940      	ldr	r1, [pc, #256]	; (8008abc <pvPortMalloc+0x114>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 80089bc:	074e      	lsls	r6, r1, #29
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 80089be:	bf1f      	itttt	ne
 80089c0:	1dcb      	addne	r3, r1, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 80089c2:	f023 0307 	bicne.w	r3, r3, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 80089c6:	f501 3280 	addne.w	r2, r1, #65536	; 0x10000
 80089ca:	1ad2      	subne	r2, r2, r3
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 80089cc:	bf14      	ite	ne
 80089ce:	4619      	movne	r1, r3
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 80089d0:	f44f 3280 	moveq.w	r2, #65536	; 0x10000
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 80089d4:	440a      	add	r2, r1
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 80089d6:	4e3a      	ldr	r6, [pc, #232]	; (8008ac0 <pvPortMalloc+0x118>)
	uxAddress -= xHeapStructSize;
 80089d8:	3a08      	subs	r2, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 80089da:	f022 0207 	bic.w	r2, r2, #7
	xStart.xBlockSize = ( size_t ) 0;
 80089de:	2300      	movs	r3, #0
 80089e0:	6073      	str	r3, [r6, #4]
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 80089e2:	6031      	str	r1, [r6, #0]
	pxEnd->pxNextFreeBlock = NULL;
 80089e4:	e9c2 3300 	strd	r3, r3, [r2]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 80089e8:	1a53      	subs	r3, r2, r1
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 80089ea:	e9c1 2300 	strd	r2, r3, [r1]
	pxEnd = ( void * ) uxAddress;
 80089ee:	6002      	str	r2, [r0, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 80089f0:	4a34      	ldr	r2, [pc, #208]	; (8008ac4 <pvPortMalloc+0x11c>)
 80089f2:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 80089f4:	4a34      	ldr	r2, [pc, #208]	; (8008ac8 <pvPortMalloc+0x120>)
 80089f6:	6013      	str	r3, [r2, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 80089f8:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 80089fc:	602b      	str	r3, [r5, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 80089fe:	682f      	ldr	r7, [r5, #0]
 8008a00:	4227      	tst	r7, r4
 8008a02:	d151      	bne.n	8008aa8 <pvPortMalloc+0x100>
			if( xWantedSize > 0 )
 8008a04:	2c00      	cmp	r4, #0
 8008a06:	d042      	beq.n	8008a8e <pvPortMalloc+0xe6>
				xWantedSize += xHeapStructSize;
 8008a08:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 8008a0c:	0761      	lsls	r1, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 8008a0e:	bf1c      	itt	ne
 8008a10:	f023 0307 	bicne.w	r3, r3, #7
 8008a14:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 8008a16:	2b00      	cmp	r3, #0
 8008a18:	d046      	beq.n	8008aa8 <pvPortMalloc+0x100>
 8008a1a:	4c2b      	ldr	r4, [pc, #172]	; (8008ac8 <pvPortMalloc+0x120>)
 8008a1c:	6826      	ldr	r6, [r4, #0]
 8008a1e:	429e      	cmp	r6, r3
 8008a20:	d342      	bcc.n	8008aa8 <pvPortMalloc+0x100>
				pxBlock = xStart.pxNextFreeBlock;
 8008a22:	4a27      	ldr	r2, [pc, #156]	; (8008ac0 <pvPortMalloc+0x118>)
 8008a24:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 8008a26:	6869      	ldr	r1, [r5, #4]
 8008a28:	4299      	cmp	r1, r3
 8008a2a:	d204      	bcs.n	8008a36 <pvPortMalloc+0x8e>
 8008a2c:	f8d5 c000 	ldr.w	ip, [r5]
 8008a30:	f1bc 0f00 	cmp.w	ip, #0
 8008a34:	d115      	bne.n	8008a62 <pvPortMalloc+0xba>
				if( pxBlock != pxEnd )
 8008a36:	6800      	ldr	r0, [r0, #0]
 8008a38:	42a8      	cmp	r0, r5
 8008a3a:	d035      	beq.n	8008aa8 <pvPortMalloc+0x100>
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 8008a3c:	1ac9      	subs	r1, r1, r3
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8008a3e:	6828      	ldr	r0, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8008a40:	f8d2 8000 	ldr.w	r8, [r2]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8008a44:	6010      	str	r0, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 8008a46:	2910      	cmp	r1, #16
 8008a48:	d912      	bls.n	8008a70 <pvPortMalloc+0xc8>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 8008a4a:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 8008a4c:	0742      	lsls	r2, r0, #29
 8008a4e:	d00b      	beq.n	8008a68 <pvPortMalloc+0xc0>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 8008a50:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008a54:	f383 8811 	msr	BASEPRI, r3
 8008a58:	f3bf 8f6f 	isb	sy
 8008a5c:	f3bf 8f4f 	dsb	sy
 8008a60:	e7fe      	b.n	8008a60 <pvPortMalloc+0xb8>
 8008a62:	462a      	mov	r2, r5
 8008a64:	4665      	mov	r5, ip
 8008a66:	e7de      	b.n	8008a26 <pvPortMalloc+0x7e>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 8008a68:	6041      	str	r1, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 8008a6a:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 8008a6c:	f7ff ff78 	bl	8008960 <prvInsertBlockIntoFreeList>
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8008a70:	4914      	ldr	r1, [pc, #80]	; (8008ac4 <pvPortMalloc+0x11c>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8008a72:	686b      	ldr	r3, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8008a74:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8008a76:	1af6      	subs	r6, r6, r3
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8008a78:	431f      	orrs	r7, r3
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8008a7a:	4286      	cmp	r6, r0
					pxBlock->pxNextFreeBlock = NULL;
 8008a7c:	f04f 0300 	mov.w	r3, #0
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8008a80:	6026      	str	r6, [r4, #0]
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 8008a82:	bf38      	it	cc
 8008a84:	600e      	strcc	r6, [r1, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8008a86:	f108 0408 	add.w	r4, r8, #8
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8008a8a:	606f      	str	r7, [r5, #4]
					pxBlock->pxNextFreeBlock = NULL;
 8008a8c:	602b      	str	r3, [r5, #0]
	( void ) xTaskResumeAll();
 8008a8e:	f001 fa15 	bl	8009ebc <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 8008a92:	0763      	lsls	r3, r4, #29
 8008a94:	d00a      	beq.n	8008aac <pvPortMalloc+0x104>
 8008a96:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008a9a:	f383 8811 	msr	BASEPRI, r3
 8008a9e:	f3bf 8f6f 	isb	sy
 8008aa2:	f3bf 8f4f 	dsb	sy
 8008aa6:	e7fe      	b.n	8008aa6 <pvPortMalloc+0xfe>
void *pvReturn = NULL;
 8008aa8:	2400      	movs	r4, #0
 8008aaa:	e7f0      	b.n	8008a8e <pvPortMalloc+0xe6>
}
 8008aac:	4620      	mov	r0, r4
 8008aae:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008ab2:	bf00      	nop
 8008ab4:	20004f20 	.word	0x20004f20
 8008ab8:	20014f24 	.word	0x20014f24
 8008abc:	20004f24 	.word	0x20004f24
 8008ac0:	20014f30 	.word	0x20014f30
 8008ac4:	20014f2c 	.word	0x20014f2c
 8008ac8:	20014f28 	.word	0x20014f28

08008acc <vPortFree>:
{
 8008acc:	b510      	push	{r4, lr}
	if( pv != NULL )
 8008ace:	4604      	mov	r4, r0
 8008ad0:	b370      	cbz	r0, 8008b30 <vPortFree+0x64>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 8008ad2:	4a18      	ldr	r2, [pc, #96]	; (8008b34 <vPortFree+0x68>)
 8008ad4:	f850 3c04 	ldr.w	r3, [r0, #-4]
 8008ad8:	6812      	ldr	r2, [r2, #0]
 8008ada:	4213      	tst	r3, r2
 8008adc:	d108      	bne.n	8008af0 <vPortFree+0x24>
 8008ade:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008ae2:	f383 8811 	msr	BASEPRI, r3
 8008ae6:	f3bf 8f6f 	isb	sy
 8008aea:	f3bf 8f4f 	dsb	sy
 8008aee:	e7fe      	b.n	8008aee <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 8008af0:	f850 1c08 	ldr.w	r1, [r0, #-8]
 8008af4:	b141      	cbz	r1, 8008b08 <vPortFree+0x3c>
 8008af6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008afa:	f383 8811 	msr	BASEPRI, r3
 8008afe:	f3bf 8f6f 	isb	sy
 8008b02:	f3bf 8f4f 	dsb	sy
 8008b06:	e7fe      	b.n	8008b06 <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 8008b08:	ea23 0302 	bic.w	r3, r3, r2
 8008b0c:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 8008b10:	f001 f930 	bl	8009d74 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 8008b14:	4a08      	ldr	r2, [pc, #32]	; (8008b38 <vPortFree+0x6c>)
 8008b16:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8008b1a:	6811      	ldr	r1, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8008b1c:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 8008b20:	440b      	add	r3, r1
 8008b22:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8008b24:	f7ff ff1c 	bl	8008960 <prvInsertBlockIntoFreeList>
}
 8008b28:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				( void ) xTaskResumeAll();
 8008b2c:	f001 b9c6 	b.w	8009ebc <xTaskResumeAll>
}
 8008b30:	bd10      	pop	{r4, pc}
 8008b32:	bf00      	nop
 8008b34:	20014f24 	.word	0x20014f24
 8008b38:	20014f28 	.word	0x20014f28

08008b3c <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008b3c:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 8008b40:	f04f 32ff 	mov.w	r2, #4294967295

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008b44:	e9c0 2302 	strd	r2, r3, [r0, #8]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008b48:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008b4a:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 8008b4c:	2300      	movs	r3, #0
 8008b4e:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 8008b50:	4770      	bx	lr

08008b52 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 8008b52:	2300      	movs	r3, #0
 8008b54:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 8008b56:	4770      	bx	lr

08008b58 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 8008b58:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 8008b5a:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 8008b5c:	689a      	ldr	r2, [r3, #8]
 8008b5e:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 8008b60:	689a      	ldr	r2, [r3, #8]
 8008b62:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 8008b64:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8008b66:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8008b68:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8008b6a:	3301      	adds	r3, #1
 8008b6c:	6003      	str	r3, [r0, #0]
}
 8008b6e:	4770      	bx	lr

08008b70 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 8008b70:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 8008b72:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 8008b74:	1c63      	adds	r3, r4, #1
 8008b76:	d10a      	bne.n	8008b8e <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 8008b78:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 8008b7a:	685a      	ldr	r2, [r3, #4]
 8008b7c:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 8008b7e:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 8008b80:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 8008b82:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8008b84:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8008b86:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8008b88:	3301      	adds	r3, #1
 8008b8a:	6003      	str	r3, [r0, #0]
}
 8008b8c:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 8008b8e:	f100 0208 	add.w	r2, r0, #8
 8008b92:	4613      	mov	r3, r2
 8008b94:	6852      	ldr	r2, [r2, #4]
 8008b96:	6815      	ldr	r5, [r2, #0]
 8008b98:	42a5      	cmp	r5, r4
 8008b9a:	d9fa      	bls.n	8008b92 <vListInsert+0x22>
 8008b9c:	e7ed      	b.n	8008b7a <vListInsert+0xa>

08008b9e <uxListRemove>:
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8008b9e:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
List_t * const pxList = pxItemToRemove->pxContainer;
 8008ba2:	6903      	ldr	r3, [r0, #16]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8008ba4:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 8008ba6:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 8008ba8:	6859      	ldr	r1, [r3, #4]
 8008baa:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 8008bac:	bf08      	it	eq
 8008bae:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 8008bb0:	2200      	movs	r2, #0
 8008bb2:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 8008bb4:	681a      	ldr	r2, [r3, #0]
 8008bb6:	3a01      	subs	r2, #1
 8008bb8:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 8008bba:	6818      	ldr	r0, [r3, #0]
}
 8008bbc:	4770      	bx	lr
	...

08008bc0 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 8008bc0:	4808      	ldr	r0, [pc, #32]	; (8008be4 <prvPortStartFirstTask+0x24>)
 8008bc2:	6800      	ldr	r0, [r0, #0]
 8008bc4:	6800      	ldr	r0, [r0, #0]
 8008bc6:	f380 8808 	msr	MSP, r0
 8008bca:	f04f 0000 	mov.w	r0, #0
 8008bce:	f380 8814 	msr	CONTROL, r0
 8008bd2:	b662      	cpsie	i
 8008bd4:	b661      	cpsie	f
 8008bd6:	f3bf 8f4f 	dsb	sy
 8008bda:	f3bf 8f6f 	isb	sy
 8008bde:	df00      	svc	0
 8008be0:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 8008be2:	0000      	.short	0x0000
 8008be4:	e000ed08 	.word	0xe000ed08

08008be8 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 8008be8:	f8df 000c 	ldr.w	r0, [pc, #12]	; 8008bf8 <vPortEnableVFP+0x10>
 8008bec:	6801      	ldr	r1, [r0, #0]
 8008bee:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8008bf2:	6001      	str	r1, [r0, #0]
 8008bf4:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 8008bf6:	0000      	.short	0x0000
 8008bf8:	e000ed88 	.word	0xe000ed88

08008bfc <prvTaskExitError>:
{
 8008bfc:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 8008bfe:	2300      	movs	r3, #0
 8008c00:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 8008c02:	4b0d      	ldr	r3, [pc, #52]	; (8008c38 <prvTaskExitError+0x3c>)
 8008c04:	681b      	ldr	r3, [r3, #0]
 8008c06:	3301      	adds	r3, #1
 8008c08:	d008      	beq.n	8008c1c <prvTaskExitError+0x20>
 8008c0a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008c0e:	f383 8811 	msr	BASEPRI, r3
 8008c12:	f3bf 8f6f 	isb	sy
 8008c16:	f3bf 8f4f 	dsb	sy
 8008c1a:	e7fe      	b.n	8008c1a <prvTaskExitError+0x1e>
 8008c1c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008c20:	f383 8811 	msr	BASEPRI, r3
 8008c24:	f3bf 8f6f 	isb	sy
 8008c28:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 8008c2c:	9b01      	ldr	r3, [sp, #4]
 8008c2e:	2b00      	cmp	r3, #0
 8008c30:	d0fc      	beq.n	8008c2c <prvTaskExitError+0x30>
}
 8008c32:	b002      	add	sp, #8
 8008c34:	4770      	bx	lr
 8008c36:	bf00      	nop
 8008c38:	20000088 	.word	0x20000088

08008c3c <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 8008c3c:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8008c40:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 8008c44:	4b07      	ldr	r3, [pc, #28]	; (8008c64 <pxPortInitialiseStack+0x28>)
 8008c46:	f840 3c0c 	str.w	r3, [r0, #-12]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8008c4a:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 8008c4e:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8008c52:	f840 1c08 	str.w	r1, [r0, #-8]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 8008c56:	f840 2c20 	str.w	r2, [r0, #-32]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 8008c5a:	f840 3c24 	str.w	r3, [r0, #-36]
}
 8008c5e:	3844      	subs	r0, #68	; 0x44
 8008c60:	4770      	bx	lr
 8008c62:	bf00      	nop
 8008c64:	08008bfd 	.word	0x08008bfd
	...

08008c70 <SVC_Handler>:
	__asm volatile (
 8008c70:	4b07      	ldr	r3, [pc, #28]	; (8008c90 <pxCurrentTCBConst2>)
 8008c72:	6819      	ldr	r1, [r3, #0]
 8008c74:	6808      	ldr	r0, [r1, #0]
 8008c76:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008c7a:	f380 8809 	msr	PSP, r0
 8008c7e:	f3bf 8f6f 	isb	sy
 8008c82:	f04f 0000 	mov.w	r0, #0
 8008c86:	f380 8811 	msr	BASEPRI, r0
 8008c8a:	4770      	bx	lr
 8008c8c:	f3af 8000 	nop.w

08008c90 <pxCurrentTCBConst2>:
 8008c90:	20014f80 	.word	0x20014f80

08008c94 <vPortEnterCritical>:
 8008c94:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008c98:	f383 8811 	msr	BASEPRI, r3
 8008c9c:	f3bf 8f6f 	isb	sy
 8008ca0:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 8008ca4:	4a0a      	ldr	r2, [pc, #40]	; (8008cd0 <vPortEnterCritical+0x3c>)
 8008ca6:	6813      	ldr	r3, [r2, #0]
 8008ca8:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 8008caa:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 8008cac:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 8008cae:	d10e      	bne.n	8008cce <vPortEnterCritical+0x3a>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 8008cb0:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008cb4:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 8008cb8:	b2db      	uxtb	r3, r3
 8008cba:	b143      	cbz	r3, 8008cce <vPortEnterCritical+0x3a>
 8008cbc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008cc0:	f383 8811 	msr	BASEPRI, r3
 8008cc4:	f3bf 8f6f 	isb	sy
 8008cc8:	f3bf 8f4f 	dsb	sy
 8008ccc:	e7fe      	b.n	8008ccc <vPortEnterCritical+0x38>
}
 8008cce:	4770      	bx	lr
 8008cd0:	20000088 	.word	0x20000088

08008cd4 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 8008cd4:	4a08      	ldr	r2, [pc, #32]	; (8008cf8 <vPortExitCritical+0x24>)
 8008cd6:	6813      	ldr	r3, [r2, #0]
 8008cd8:	b943      	cbnz	r3, 8008cec <vPortExitCritical+0x18>
 8008cda:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008cde:	f383 8811 	msr	BASEPRI, r3
 8008ce2:	f3bf 8f6f 	isb	sy
 8008ce6:	f3bf 8f4f 	dsb	sy
 8008cea:	e7fe      	b.n	8008cea <vPortExitCritical+0x16>
	uxCriticalNesting--;
 8008cec:	3b01      	subs	r3, #1
 8008cee:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 8008cf0:	b90b      	cbnz	r3, 8008cf6 <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 8008cf2:	f383 8811 	msr	BASEPRI, r3
}
 8008cf6:	4770      	bx	lr
 8008cf8:	20000088 	.word	0x20000088
 8008cfc:	00000000 	.word	0x00000000

08008d00 <PendSV_Handler>:
	__asm volatile
 8008d00:	f3ef 8009 	mrs	r0, PSP
 8008d04:	f3bf 8f6f 	isb	sy
 8008d08:	4b15      	ldr	r3, [pc, #84]	; (8008d60 <pxCurrentTCBConst>)
 8008d0a:	681a      	ldr	r2, [r3, #0]
 8008d0c:	f01e 0f10 	tst.w	lr, #16
 8008d10:	bf08      	it	eq
 8008d12:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 8008d16:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008d1a:	6010      	str	r0, [r2, #0]
 8008d1c:	e92d 0009 	stmdb	sp!, {r0, r3}
 8008d20:	f04f 0050 	mov.w	r0, #80	; 0x50
 8008d24:	f380 8811 	msr	BASEPRI, r0
 8008d28:	f3bf 8f4f 	dsb	sy
 8008d2c:	f3bf 8f6f 	isb	sy
 8008d30:	f001 f95c 	bl	8009fec <vTaskSwitchContext>
 8008d34:	f04f 0000 	mov.w	r0, #0
 8008d38:	f380 8811 	msr	BASEPRI, r0
 8008d3c:	bc09      	pop	{r0, r3}
 8008d3e:	6819      	ldr	r1, [r3, #0]
 8008d40:	6808      	ldr	r0, [r1, #0]
 8008d42:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008d46:	f01e 0f10 	tst.w	lr, #16
 8008d4a:	bf08      	it	eq
 8008d4c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 8008d50:	f380 8809 	msr	PSP, r0
 8008d54:	f3bf 8f6f 	isb	sy
 8008d58:	4770      	bx	lr
 8008d5a:	bf00      	nop
 8008d5c:	f3af 8000 	nop.w

08008d60 <pxCurrentTCBConst>:
 8008d60:	20014f80 	.word	0x20014f80

08008d64 <SysTick_Handler>:
{
 8008d64:	b508      	push	{r3, lr}
	__asm volatile
 8008d66:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008d6a:	f383 8811 	msr	BASEPRI, r3
 8008d6e:	f3bf 8f6f 	isb	sy
 8008d72:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 8008d76:	f001 f80b 	bl	8009d90 <xTaskIncrementTick>
 8008d7a:	b128      	cbz	r0, 8008d88 <SysTick_Handler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 8008d7c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008d80:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008d84:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 8008d88:	2300      	movs	r3, #0
 8008d8a:	f383 8811 	msr	BASEPRI, r3
}
 8008d8e:	bd08      	pop	{r3, pc}

08008d90 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 8008d90:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 8008d94:	2300      	movs	r3, #0
 8008d96:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 8008d98:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 8008d9a:	4b05      	ldr	r3, [pc, #20]	; (8008db0 <vPortSetupTimerInterrupt+0x20>)
 8008d9c:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8008da0:	681b      	ldr	r3, [r3, #0]
 8008da2:	fbb3 f3f1 	udiv	r3, r3, r1
 8008da6:	3b01      	subs	r3, #1
 8008da8:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 8008daa:	2307      	movs	r3, #7
 8008dac:	6113      	str	r3, [r2, #16]
}
 8008dae:	4770      	bx	lr
 8008db0:	2000007c 	.word	0x2000007c

08008db4 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8008db4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
{
 8008db8:	b537      	push	{r0, r1, r2, r4, r5, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8008dba:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 8008dbe:	4a3a      	ldr	r2, [pc, #232]	; (8008ea8 <xPortStartScheduler+0xf4>)
 8008dc0:	4291      	cmp	r1, r2
 8008dc2:	d108      	bne.n	8008dd6 <xPortStartScheduler+0x22>
	__asm volatile
 8008dc4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008dc8:	f383 8811 	msr	BASEPRI, r3
 8008dcc:	f3bf 8f6f 	isb	sy
 8008dd0:	f3bf 8f4f 	dsb	sy
 8008dd4:	e7fe      	b.n	8008dd4 <xPortStartScheduler+0x20>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 8008dd6:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 8008dda:	4b34      	ldr	r3, [pc, #208]	; (8008eac <xPortStartScheduler+0xf8>)
 8008ddc:	429a      	cmp	r2, r3
 8008dde:	d108      	bne.n	8008df2 <xPortStartScheduler+0x3e>
 8008de0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008de4:	f383 8811 	msr	BASEPRI, r3
 8008de8:	f3bf 8f6f 	isb	sy
 8008dec:	f3bf 8f4f 	dsb	sy
 8008df0:	e7fe      	b.n	8008df0 <xPortStartScheduler+0x3c>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 8008df2:	4b2f      	ldr	r3, [pc, #188]	; (8008eb0 <xPortStartScheduler+0xfc>)
 8008df4:	781a      	ldrb	r2, [r3, #0]
 8008df6:	b2d2      	uxtb	r2, r2
 8008df8:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 8008dfa:	22ff      	movs	r2, #255	; 0xff
 8008dfc:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8008dfe:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8008e00:	4a2c      	ldr	r2, [pc, #176]	; (8008eb4 <xPortStartScheduler+0x100>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8008e02:	b2db      	uxtb	r3, r3
 8008e04:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8008e08:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8008e0c:	f003 0350 	and.w	r3, r3, #80	; 0x50
 8008e10:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 8008e12:	4a29      	ldr	r2, [pc, #164]	; (8008eb8 <xPortStartScheduler+0x104>)
 8008e14:	2307      	movs	r3, #7
 8008e16:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8008e18:	2100      	movs	r1, #0
 8008e1a:	f89d 0003 	ldrb.w	r0, [sp, #3]
 8008e1e:	0600      	lsls	r0, r0, #24
 8008e20:	f103 34ff 	add.w	r4, r3, #4294967295
 8008e24:	d40c      	bmi.n	8008e40 <xPortStartScheduler+0x8c>
 8008e26:	b111      	cbz	r1, 8008e2e <xPortStartScheduler+0x7a>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 8008e28:	2b03      	cmp	r3, #3
 8008e2a:	6013      	str	r3, [r2, #0]
 8008e2c:	d011      	beq.n	8008e52 <xPortStartScheduler+0x9e>
 8008e2e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008e32:	f383 8811 	msr	BASEPRI, r3
 8008e36:	f3bf 8f6f 	isb	sy
 8008e3a:	f3bf 8f4f 	dsb	sy
 8008e3e:	e7fe      	b.n	8008e3e <xPortStartScheduler+0x8a>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 8008e40:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8008e44:	005b      	lsls	r3, r3, #1
 8008e46:	b2db      	uxtb	r3, r3
 8008e48:	f88d 3003 	strb.w	r3, [sp, #3]
 8008e4c:	2101      	movs	r1, #1
 8008e4e:	4623      	mov	r3, r4
 8008e50:	e7e3      	b.n	8008e1a <xPortStartScheduler+0x66>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 8008e52:	f44f 7340 	mov.w	r3, #768	; 0x300
 8008e56:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8008e58:	9b01      	ldr	r3, [sp, #4]
 8008e5a:	4a15      	ldr	r2, [pc, #84]	; (8008eb0 <xPortStartScheduler+0xfc>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8008e5c:	f04f 24e0 	mov.w	r4, #3758153728	; 0xe000e000
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8008e60:	b2db      	uxtb	r3, r3
 8008e62:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8008e64:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 8008e68:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8008e6c:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 8008e70:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 8008e74:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 8008e78:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	vPortSetupTimerInterrupt();
 8008e7c:	f7ff ff88 	bl	8008d90 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 8008e80:	4b0e      	ldr	r3, [pc, #56]	; (8008ebc <xPortStartScheduler+0x108>)
 8008e82:	2500      	movs	r5, #0
 8008e84:	601d      	str	r5, [r3, #0]
	vPortEnableVFP();
 8008e86:	f7ff feaf 	bl	8008be8 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 8008e8a:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	; 0xf34
 8008e8e:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 8008e92:	f8c4 3f34 	str.w	r3, [r4, #3892]	; 0xf34
	prvPortStartFirstTask();
 8008e96:	f7ff fe93 	bl	8008bc0 <prvPortStartFirstTask>
	vTaskSwitchContext();
 8008e9a:	f001 f8a7 	bl	8009fec <vTaskSwitchContext>
	prvTaskExitError();
 8008e9e:	f7ff fead 	bl	8008bfc <prvTaskExitError>
}
 8008ea2:	4628      	mov	r0, r5
 8008ea4:	b003      	add	sp, #12
 8008ea6:	bd30      	pop	{r4, r5, pc}
 8008ea8:	410fc271 	.word	0x410fc271
 8008eac:	410fc270 	.word	0x410fc270
 8008eb0:	e000e400 	.word	0xe000e400
 8008eb4:	20014f38 	.word	0x20014f38
 8008eb8:	20014f3c 	.word	0x20014f3c
 8008ebc:	20000088 	.word	0x20000088

08008ec0 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 8008ec0:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 8008ec4:	2b0f      	cmp	r3, #15
 8008ec6:	d90e      	bls.n	8008ee6 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 8008ec8:	4a11      	ldr	r2, [pc, #68]	; (8008f10 <vPortValidateInterruptPriority+0x50>)
 8008eca:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 8008ecc:	4a11      	ldr	r2, [pc, #68]	; (8008f14 <vPortValidateInterruptPriority+0x54>)
 8008ece:	7812      	ldrb	r2, [r2, #0]
 8008ed0:	429a      	cmp	r2, r3
 8008ed2:	d908      	bls.n	8008ee6 <vPortValidateInterruptPriority+0x26>
 8008ed4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008ed8:	f383 8811 	msr	BASEPRI, r3
 8008edc:	f3bf 8f6f 	isb	sy
 8008ee0:	f3bf 8f4f 	dsb	sy
 8008ee4:	e7fe      	b.n	8008ee4 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 8008ee6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008eea:	4a0b      	ldr	r2, [pc, #44]	; (8008f18 <vPortValidateInterruptPriority+0x58>)
 8008eec:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 8008ef0:	6812      	ldr	r2, [r2, #0]
 8008ef2:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8008ef6:	4293      	cmp	r3, r2
 8008ef8:	d908      	bls.n	8008f0c <vPortValidateInterruptPriority+0x4c>
 8008efa:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008efe:	f383 8811 	msr	BASEPRI, r3
 8008f02:	f3bf 8f6f 	isb	sy
 8008f06:	f3bf 8f4f 	dsb	sy
 8008f0a:	e7fe      	b.n	8008f0a <vPortValidateInterruptPriority+0x4a>
	}
 8008f0c:	4770      	bx	lr
 8008f0e:	bf00      	nop
 8008f10:	e000e3f0 	.word	0xe000e3f0
 8008f14:	20014f38 	.word	0x20014f38
 8008f18:	20014f3c 	.word	0x20014f3c

08008f1c <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 8008f1c:	b510      	push	{r4, lr}
 8008f1e:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8008f20:	f7ff feb8 	bl	8008c94 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 8008f24:	6ba4      	ldr	r4, [r4, #56]	; 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8008f26:	f7ff fed5 	bl	8008cd4 <vPortExitCritical>

	return xReturn;
}
 8008f2a:	fab4 f084 	clz	r0, r4
 8008f2e:	0940      	lsrs	r0, r0, #5
 8008f30:	bd10      	pop	{r4, pc}

08008f32 <prvCopyDataToQueue>:
{
 8008f32:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008f34:	4615      	mov	r5, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8008f36:	6c02      	ldr	r2, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8008f38:	6b86      	ldr	r6, [r0, #56]	; 0x38
{
 8008f3a:	4604      	mov	r4, r0
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8008f3c:	b952      	cbnz	r2, 8008f54 <prvCopyDataToQueue+0x22>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8008f3e:	6807      	ldr	r7, [r0, #0]
 8008f40:	bb47      	cbnz	r7, 8008f94 <prvCopyDataToQueue+0x62>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 8008f42:	6880      	ldr	r0, [r0, #8]
 8008f44:	f001 f9ae 	bl	800a2a4 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 8008f48:	60a7      	str	r7, [r4, #8]
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 8008f4a:	4605      	mov	r5, r0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8008f4c:	3601      	adds	r6, #1
 8008f4e:	63a6      	str	r6, [r4, #56]	; 0x38
}
 8008f50:	4628      	mov	r0, r5
 8008f52:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	else if( xPosition == queueSEND_TO_BACK )
 8008f54:	b965      	cbnz	r5, 8008f70 <prvCopyDataToQueue+0x3e>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8008f56:	6840      	ldr	r0, [r0, #4]
 8008f58:	f017 fdea 	bl	8020b30 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008f5c:	6863      	ldr	r3, [r4, #4]
 8008f5e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8008f60:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8008f62:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008f64:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8008f66:	4293      	cmp	r3, r2
 8008f68:	d3f0      	bcc.n	8008f4c <prvCopyDataToQueue+0x1a>
			pxQueue->pcWriteTo = pxQueue->pcHead;
 8008f6a:	6823      	ldr	r3, [r4, #0]
 8008f6c:	6063      	str	r3, [r4, #4]
 8008f6e:	e7ed      	b.n	8008f4c <prvCopyDataToQueue+0x1a>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 8008f70:	68c0      	ldr	r0, [r0, #12]
 8008f72:	f017 fddd 	bl	8020b30 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8008f76:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8008f78:	68e3      	ldr	r3, [r4, #12]
 8008f7a:	4251      	negs	r1, r2
 8008f7c:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8008f7e:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8008f80:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8008f82:	4293      	cmp	r3, r2
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 8008f84:	bf3e      	ittt	cc
 8008f86:	68a3      	ldrcc	r3, [r4, #8]
 8008f88:	185b      	addcc	r3, r3, r1
 8008f8a:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 8008f8c:	2d02      	cmp	r5, #2
 8008f8e:	d101      	bne.n	8008f94 <prvCopyDataToQueue+0x62>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8008f90:	b116      	cbz	r6, 8008f98 <prvCopyDataToQueue+0x66>
				--uxMessagesWaiting;
 8008f92:	3e01      	subs	r6, #1
BaseType_t xReturn = pdFALSE;
 8008f94:	2500      	movs	r5, #0
 8008f96:	e7d9      	b.n	8008f4c <prvCopyDataToQueue+0x1a>
 8008f98:	4635      	mov	r5, r6
 8008f9a:	e7d7      	b.n	8008f4c <prvCopyDataToQueue+0x1a>

08008f9c <prvCopyDataFromQueue>:
{
 8008f9c:	4603      	mov	r3, r0
 8008f9e:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8008fa0:	6c1a      	ldr	r2, [r3, #64]	; 0x40
{
 8008fa2:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8008fa4:	b16a      	cbz	r2, 8008fc2 <prvCopyDataFromQueue+0x26>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008fa6:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8008fa8:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008faa:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8008fac:	428c      	cmp	r4, r1
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8008fae:	bf28      	it	cs
 8008fb0:	6819      	ldrcs	r1, [r3, #0]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008fb2:	60dc      	str	r4, [r3, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8008fb4:	bf28      	it	cs
 8008fb6:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8008fb8:	68d9      	ldr	r1, [r3, #12]
}
 8008fba:	f85d 4b04 	ldr.w	r4, [sp], #4
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8008fbe:	f017 bdb7 	b.w	8020b30 <memcpy>
}
 8008fc2:	f85d 4b04 	ldr.w	r4, [sp], #4
 8008fc6:	4770      	bx	lr

08008fc8 <prvUnlockQueue>:
{
 8008fc8:	b570      	push	{r4, r5, r6, lr}
 8008fca:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 8008fcc:	f7ff fe62 	bl	8008c94 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8008fd0:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8008fd4:	f104 0624 	add.w	r6, r4, #36	; 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 8008fd8:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8008fda:	2d00      	cmp	r5, #0
 8008fdc:	dc14      	bgt.n	8009008 <prvUnlockQueue+0x40>
		pxQueue->cTxLock = queueUNLOCKED;
 8008fde:	23ff      	movs	r3, #255	; 0xff
 8008fe0:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 8008fe4:	f7ff fe76 	bl	8008cd4 <vPortExitCritical>
	taskENTER_CRITICAL();
 8008fe8:	f7ff fe54 	bl	8008c94 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8008fec:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008ff0:	f104 0610 	add.w	r6, r4, #16
		int8_t cRxLock = pxQueue->cRxLock;
 8008ff4:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8008ff6:	2d00      	cmp	r5, #0
 8008ff8:	dc12      	bgt.n	8009020 <prvUnlockQueue+0x58>
		pxQueue->cRxLock = queueUNLOCKED;
 8008ffa:	23ff      	movs	r3, #255	; 0xff
 8008ffc:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
}
 8009000:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 8009004:	f7ff be66 	b.w	8008cd4 <vPortExitCritical>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8009008:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800900a:	2b00      	cmp	r3, #0
 800900c:	d0e7      	beq.n	8008fde <prvUnlockQueue+0x16>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800900e:	4630      	mov	r0, r6
 8009010:	f001 f864 	bl	800a0dc <xTaskRemoveFromEventList>
 8009014:	b108      	cbz	r0, 800901a <prvUnlockQueue+0x52>
						vTaskMissedYield();
 8009016:	f001 f8ed 	bl	800a1f4 <vTaskMissedYield>
			--cTxLock;
 800901a:	3d01      	subs	r5, #1
 800901c:	b26d      	sxtb	r5, r5
 800901e:	e7dc      	b.n	8008fda <prvUnlockQueue+0x12>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8009020:	6923      	ldr	r3, [r4, #16]
 8009022:	2b00      	cmp	r3, #0
 8009024:	d0e9      	beq.n	8008ffa <prvUnlockQueue+0x32>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8009026:	4630      	mov	r0, r6
 8009028:	f001 f858 	bl	800a0dc <xTaskRemoveFromEventList>
 800902c:	b108      	cbz	r0, 8009032 <prvUnlockQueue+0x6a>
					vTaskMissedYield();
 800902e:	f001 f8e1 	bl	800a1f4 <vTaskMissedYield>
				--cRxLock;
 8009032:	3d01      	subs	r5, #1
 8009034:	b26d      	sxtb	r5, r5
 8009036:	e7de      	b.n	8008ff6 <prvUnlockQueue+0x2e>

08009038 <xQueueGenericReset>:
{
 8009038:	b538      	push	{r3, r4, r5, lr}
 800903a:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800903c:	4604      	mov	r4, r0
 800903e:	b940      	cbnz	r0, 8009052 <xQueueGenericReset+0x1a>
 8009040:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009044:	f383 8811 	msr	BASEPRI, r3
 8009048:	f3bf 8f6f 	isb	sy
 800904c:	f3bf 8f4f 	dsb	sy
 8009050:	e7fe      	b.n	8009050 <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 8009052:	f7ff fe1f 	bl	8008c94 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009056:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	; 0x3c
 800905a:	6822      	ldr	r2, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800905c:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800905e:	434b      	muls	r3, r1
 8009060:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009062:	1a5b      	subs	r3, r3, r1
 8009064:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009066:	60a0      	str	r0, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009068:	60e3      	str	r3, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800906a:	2000      	movs	r0, #0
		pxQueue->cRxLock = queueUNLOCKED;
 800906c:	23ff      	movs	r3, #255	; 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800906e:	63a0      	str	r0, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 8009070:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 8009074:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
		if( xNewQueue == pdFALSE )
 8009078:	b9a5      	cbnz	r5, 80090a4 <xQueueGenericReset+0x6c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800907a:	6923      	ldr	r3, [r4, #16]
 800907c:	b173      	cbz	r3, 800909c <xQueueGenericReset+0x64>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800907e:	f104 0010 	add.w	r0, r4, #16
 8009082:	f001 f82b 	bl	800a0dc <xTaskRemoveFromEventList>
 8009086:	b148      	cbz	r0, 800909c <xQueueGenericReset+0x64>
					queueYIELD_IF_USING_PREEMPTION();
 8009088:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800908c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009090:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009094:	f3bf 8f4f 	dsb	sy
 8009098:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 800909c:	f7ff fe1a 	bl	8008cd4 <vPortExitCritical>
}
 80090a0:	2001      	movs	r0, #1
 80090a2:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 80090a4:	f104 0010 	add.w	r0, r4, #16
 80090a8:	f7ff fd48 	bl	8008b3c <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 80090ac:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80090b0:	f7ff fd44 	bl	8008b3c <vListInitialise>
 80090b4:	e7f2      	b.n	800909c <xQueueGenericReset+0x64>

080090b6 <xQueueGenericCreateStatic>:
	{
 80090b6:	b513      	push	{r0, r1, r4, lr}
 80090b8:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 80090ba:	b940      	cbnz	r0, 80090ce <xQueueGenericCreateStatic+0x18>
 80090bc:	f04f 0350 	mov.w	r3, #80	; 0x50
 80090c0:	f383 8811 	msr	BASEPRI, r3
 80090c4:	f3bf 8f6f 	isb	sy
 80090c8:	f3bf 8f4f 	dsb	sy
 80090cc:	e7fe      	b.n	80090cc <xQueueGenericCreateStatic+0x16>
		configASSERT( pxStaticQueue != NULL );
 80090ce:	b943      	cbnz	r3, 80090e2 <xQueueGenericCreateStatic+0x2c>
 80090d0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80090d4:	f383 8811 	msr	BASEPRI, r3
 80090d8:	f3bf 8f6f 	isb	sy
 80090dc:	f3bf 8f4f 	dsb	sy
 80090e0:	e7fe      	b.n	80090e0 <xQueueGenericCreateStatic+0x2a>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 80090e2:	b14a      	cbz	r2, 80090f8 <xQueueGenericCreateStatic+0x42>
 80090e4:	b991      	cbnz	r1, 800910c <xQueueGenericCreateStatic+0x56>
 80090e6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80090ea:	f383 8811 	msr	BASEPRI, r3
 80090ee:	f3bf 8f6f 	isb	sy
 80090f2:	f3bf 8f4f 	dsb	sy
 80090f6:	e7fe      	b.n	80090f6 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 80090f8:	b141      	cbz	r1, 800910c <xQueueGenericCreateStatic+0x56>
 80090fa:	f04f 0350 	mov.w	r3, #80	; 0x50
 80090fe:	f383 8811 	msr	BASEPRI, r3
 8009102:	f3bf 8f6f 	isb	sy
 8009106:	f3bf 8f4f 	dsb	sy
 800910a:	e7fe      	b.n	800910a <xQueueGenericCreateStatic+0x54>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800910c:	2350      	movs	r3, #80	; 0x50
 800910e:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 8009110:	9b01      	ldr	r3, [sp, #4]
 8009112:	2b50      	cmp	r3, #80	; 0x50
 8009114:	d008      	beq.n	8009128 <xQueueGenericCreateStatic+0x72>
 8009116:	f04f 0350 	mov.w	r3, #80	; 0x50
 800911a:	f383 8811 	msr	BASEPRI, r3
 800911e:	f3bf 8f6f 	isb	sy
 8009122:	f3bf 8f4f 	dsb	sy
 8009126:	e7fe      	b.n	8009126 <xQueueGenericCreateStatic+0x70>
	if( uxItemSize == ( UBaseType_t ) 0 )
 8009128:	2900      	cmp	r1, #0
 800912a:	bf08      	it	eq
 800912c:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800912e:	9b01      	ldr	r3, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8009130:	6022      	str	r2, [r4, #0]
 8009132:	2301      	movs	r3, #1
	pxNewQueue->uxItemSize = uxItemSize;
 8009134:	e9c4 010f 	strd	r0, r1, [r4, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8009138:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800913c:	4619      	mov	r1, r3
 800913e:	4620      	mov	r0, r4
 8009140:	f7ff ff7a 	bl	8009038 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8009144:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8009148:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
	}
 800914c:	4620      	mov	r0, r4
 800914e:	b002      	add	sp, #8
 8009150:	bd10      	pop	{r4, pc}

08009152 <xQueueGenericCreate>:
	{
 8009152:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009154:	460d      	mov	r5, r1
 8009156:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8009158:	4606      	mov	r6, r0
 800915a:	b940      	cbnz	r0, 800916e <xQueueGenericCreate+0x1c>
 800915c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009160:	f383 8811 	msr	BASEPRI, r3
 8009164:	f3bf 8f6f 	isb	sy
 8009168:	f3bf 8f4f 	dsb	sy
 800916c:	e7fe      	b.n	800916c <xQueueGenericCreate+0x1a>
			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800916e:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 8009170:	3050      	adds	r0, #80	; 0x50
 8009172:	f7ff fc19 	bl	80089a8 <pvPortMalloc>
		if( pxNewQueue != NULL )
 8009176:	4604      	mov	r4, r0
 8009178:	b170      	cbz	r0, 8009198 <xQueueGenericCreate+0x46>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800917a:	2300      	movs	r3, #0
 800917c:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 8009180:	b165      	cbz	r5, 800919c <xQueueGenericCreate+0x4a>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009182:	f100 0350 	add.w	r3, r0, #80	; 0x50
	pxNewQueue->uxItemSize = uxItemSize;
 8009186:	e9c4 650f 	strd	r6, r5, [r4, #60]	; 0x3c
 800918a:	6023      	str	r3, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800918c:	2101      	movs	r1, #1
 800918e:	4620      	mov	r0, r4
 8009190:	f7ff ff52 	bl	8009038 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8009194:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 8009198:	4620      	mov	r0, r4
 800919a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800919c:	4603      	mov	r3, r0
 800919e:	e7f2      	b.n	8009186 <xQueueGenericCreate+0x34>

080091a0 <xQueueCreateCountingSemaphoreStatic>:
	{
 80091a0:	b513      	push	{r0, r1, r4, lr}
 80091a2:	4613      	mov	r3, r2
 80091a4:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 80091a6:	b940      	cbnz	r0, 80091ba <xQueueCreateCountingSemaphoreStatic+0x1a>
 80091a8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80091ac:	f383 8811 	msr	BASEPRI, r3
 80091b0:	f3bf 8f6f 	isb	sy
 80091b4:	f3bf 8f4f 	dsb	sy
 80091b8:	e7fe      	b.n	80091b8 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 80091ba:	4288      	cmp	r0, r1
 80091bc:	d208      	bcs.n	80091d0 <xQueueCreateCountingSemaphoreStatic+0x30>
 80091be:	f04f 0350 	mov.w	r3, #80	; 0x50
 80091c2:	f383 8811 	msr	BASEPRI, r3
 80091c6:	f3bf 8f6f 	isb	sy
 80091ca:	f3bf 8f4f 	dsb	sy
 80091ce:	e7fe      	b.n	80091ce <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 80091d0:	2202      	movs	r2, #2
 80091d2:	9200      	str	r2, [sp, #0]
 80091d4:	2200      	movs	r2, #0
 80091d6:	4611      	mov	r1, r2
 80091d8:	f7ff ff6d 	bl	80090b6 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 80091dc:	b100      	cbz	r0, 80091e0 <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 80091de:	6384      	str	r4, [r0, #56]	; 0x38
	}
 80091e0:	b002      	add	sp, #8
 80091e2:	bd10      	pop	{r4, pc}

080091e4 <xQueueCreateCountingSemaphore>:
	{
 80091e4:	b510      	push	{r4, lr}
 80091e6:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 80091e8:	b940      	cbnz	r0, 80091fc <xQueueCreateCountingSemaphore+0x18>
 80091ea:	f04f 0350 	mov.w	r3, #80	; 0x50
 80091ee:	f383 8811 	msr	BASEPRI, r3
 80091f2:	f3bf 8f6f 	isb	sy
 80091f6:	f3bf 8f4f 	dsb	sy
 80091fa:	e7fe      	b.n	80091fa <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 80091fc:	4288      	cmp	r0, r1
 80091fe:	d208      	bcs.n	8009212 <xQueueCreateCountingSemaphore+0x2e>
 8009200:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009204:	f383 8811 	msr	BASEPRI, r3
 8009208:	f3bf 8f6f 	isb	sy
 800920c:	f3bf 8f4f 	dsb	sy
 8009210:	e7fe      	b.n	8009210 <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8009212:	2202      	movs	r2, #2
 8009214:	2100      	movs	r1, #0
 8009216:	f7ff ff9c 	bl	8009152 <xQueueGenericCreate>
		if( xHandle != NULL )
 800921a:	b100      	cbz	r0, 800921e <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800921c:	6384      	str	r4, [r0, #56]	; 0x38
	}
 800921e:	bd10      	pop	{r4, pc}

08009220 <xQueueGenericSend>:
{
 8009220:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009224:	b085      	sub	sp, #20
 8009226:	4688      	mov	r8, r1
 8009228:	9201      	str	r2, [sp, #4]
 800922a:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 800922c:	4604      	mov	r4, r0
 800922e:	b940      	cbnz	r0, 8009242 <xQueueGenericSend+0x22>
 8009230:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009234:	f383 8811 	msr	BASEPRI, r3
 8009238:	f3bf 8f6f 	isb	sy
 800923c:	f3bf 8f4f 	dsb	sy
 8009240:	e7fe      	b.n	8009240 <xQueueGenericSend+0x20>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8009242:	b951      	cbnz	r1, 800925a <xQueueGenericSend+0x3a>
 8009244:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8009246:	b143      	cbz	r3, 800925a <xQueueGenericSend+0x3a>
 8009248:	f04f 0350 	mov.w	r3, #80	; 0x50
 800924c:	f383 8811 	msr	BASEPRI, r3
 8009250:	f3bf 8f6f 	isb	sy
 8009254:	f3bf 8f4f 	dsb	sy
 8009258:	e7fe      	b.n	8009258 <xQueueGenericSend+0x38>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800925a:	2f02      	cmp	r7, #2
 800925c:	d10b      	bne.n	8009276 <xQueueGenericSend+0x56>
 800925e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8009260:	2b01      	cmp	r3, #1
 8009262:	d008      	beq.n	8009276 <xQueueGenericSend+0x56>
 8009264:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009268:	f383 8811 	msr	BASEPRI, r3
 800926c:	f3bf 8f6f 	isb	sy
 8009270:	f3bf 8f4f 	dsb	sy
 8009274:	e7fe      	b.n	8009274 <xQueueGenericSend+0x54>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8009276:	f000 ffc3 	bl	800a200 <xTaskGetSchedulerState>
 800927a:	4606      	mov	r6, r0
 800927c:	b950      	cbnz	r0, 8009294 <xQueueGenericSend+0x74>
 800927e:	9b01      	ldr	r3, [sp, #4]
 8009280:	b14b      	cbz	r3, 8009296 <xQueueGenericSend+0x76>
 8009282:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009286:	f383 8811 	msr	BASEPRI, r3
 800928a:	f3bf 8f6f 	isb	sy
 800928e:	f3bf 8f4f 	dsb	sy
 8009292:	e7fe      	b.n	8009292 <xQueueGenericSend+0x72>
 8009294:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 8009296:	f04f 0900 	mov.w	r9, #0
 800929a:	e037      	b.n	800930c <xQueueGenericSend+0xec>
				if( xTicksToWait == ( TickType_t ) 0 )
 800929c:	9d01      	ldr	r5, [sp, #4]
 800929e:	b91d      	cbnz	r5, 80092a8 <xQueueGenericSend+0x88>
					taskEXIT_CRITICAL();
 80092a0:	f7ff fd18 	bl	8008cd4 <vPortExitCritical>
			return errQUEUE_FULL;
 80092a4:	2000      	movs	r0, #0
 80092a6:	e052      	b.n	800934e <xQueueGenericSend+0x12e>
				else if( xEntryTimeSet == pdFALSE )
 80092a8:	b916      	cbnz	r6, 80092b0 <xQueueGenericSend+0x90>
					vTaskInternalSetTimeOutState( &xTimeOut );
 80092aa:	a802      	add	r0, sp, #8
 80092ac:	f000 ff5a 	bl	800a164 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 80092b0:	f7ff fd10 	bl	8008cd4 <vPortExitCritical>
		vTaskSuspendAll();
 80092b4:	f000 fd5e 	bl	8009d74 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 80092b8:	f7ff fcec 	bl	8008c94 <vPortEnterCritical>
 80092bc:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 80092c0:	2bff      	cmp	r3, #255	; 0xff
 80092c2:	bf08      	it	eq
 80092c4:	f884 9044 	strbeq.w	r9, [r4, #68]	; 0x44
 80092c8:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 80092cc:	2bff      	cmp	r3, #255	; 0xff
 80092ce:	bf08      	it	eq
 80092d0:	f884 9045 	strbeq.w	r9, [r4, #69]	; 0x45
 80092d4:	f7ff fcfe 	bl	8008cd4 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 80092d8:	a901      	add	r1, sp, #4
 80092da:	a802      	add	r0, sp, #8
 80092dc:	f000 ff4e 	bl	800a17c <xTaskCheckForTimeOut>
 80092e0:	2800      	cmp	r0, #0
 80092e2:	d14a      	bne.n	800937a <xQueueGenericSend+0x15a>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 80092e4:	f7ff fcd6 	bl	8008c94 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 80092e8:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80092ea:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80092ec:	429a      	cmp	r2, r3
 80092ee:	d131      	bne.n	8009354 <xQueueGenericSend+0x134>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 80092f0:	f7ff fcf0 	bl	8008cd4 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 80092f4:	9901      	ldr	r1, [sp, #4]
 80092f6:	f104 0010 	add.w	r0, r4, #16
 80092fa:	f000 feb7 	bl	800a06c <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 80092fe:	4620      	mov	r0, r4
 8009300:	f7ff fe62 	bl	8008fc8 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8009304:	f000 fdda 	bl	8009ebc <xTaskResumeAll>
 8009308:	b360      	cbz	r0, 8009364 <xQueueGenericSend+0x144>
 800930a:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 800930c:	f7ff fcc2 	bl	8008c94 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8009310:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8009312:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8009314:	429a      	cmp	r2, r3
 8009316:	d301      	bcc.n	800931c <xQueueGenericSend+0xfc>
 8009318:	2f02      	cmp	r7, #2
 800931a:	d1bf      	bne.n	800929c <xQueueGenericSend+0x7c>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800931c:	463a      	mov	r2, r7
 800931e:	4641      	mov	r1, r8
 8009320:	4620      	mov	r0, r4
 8009322:	f7ff fe06 	bl	8008f32 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8009326:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8009328:	b11b      	cbz	r3, 8009332 <xQueueGenericSend+0x112>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800932a:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800932e:	f000 fed5 	bl	800a0dc <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 8009332:	b148      	cbz	r0, 8009348 <xQueueGenericSend+0x128>
						queueYIELD_IF_USING_PREEMPTION();
 8009334:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009338:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800933c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009340:	f3bf 8f4f 	dsb	sy
 8009344:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8009348:	f7ff fcc4 	bl	8008cd4 <vPortExitCritical>
				return pdPASS;
 800934c:	2001      	movs	r0, #1
}
 800934e:	b005      	add	sp, #20
 8009350:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 8009354:	f7ff fcbe 	bl	8008cd4 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 8009358:	4620      	mov	r0, r4
 800935a:	f7ff fe35 	bl	8008fc8 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800935e:	f000 fdad 	bl	8009ebc <xTaskResumeAll>
 8009362:	e7d2      	b.n	800930a <xQueueGenericSend+0xea>
					portYIELD_WITHIN_API();
 8009364:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009368:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800936c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009370:	f3bf 8f4f 	dsb	sy
 8009374:	f3bf 8f6f 	isb	sy
 8009378:	e7c7      	b.n	800930a <xQueueGenericSend+0xea>
			prvUnlockQueue( pxQueue );
 800937a:	4620      	mov	r0, r4
 800937c:	f7ff fe24 	bl	8008fc8 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8009380:	f000 fd9c 	bl	8009ebc <xTaskResumeAll>
 8009384:	e78e      	b.n	80092a4 <xQueueGenericSend+0x84>

08009386 <xQueueGenericSendFromISR>:
{
 8009386:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800938a:	4689      	mov	r9, r1
 800938c:	4690      	mov	r8, r2
 800938e:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 8009390:	4604      	mov	r4, r0
 8009392:	b940      	cbnz	r0, 80093a6 <xQueueGenericSendFromISR+0x20>
 8009394:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009398:	f383 8811 	msr	BASEPRI, r3
 800939c:	f3bf 8f6f 	isb	sy
 80093a0:	f3bf 8f4f 	dsb	sy
 80093a4:	e7fe      	b.n	80093a4 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80093a6:	b951      	cbnz	r1, 80093be <xQueueGenericSendFromISR+0x38>
 80093a8:	6c03      	ldr	r3, [r0, #64]	; 0x40
 80093aa:	b143      	cbz	r3, 80093be <xQueueGenericSendFromISR+0x38>
 80093ac:	f04f 0350 	mov.w	r3, #80	; 0x50
 80093b0:	f383 8811 	msr	BASEPRI, r3
 80093b4:	f3bf 8f6f 	isb	sy
 80093b8:	f3bf 8f4f 	dsb	sy
 80093bc:	e7fe      	b.n	80093bc <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 80093be:	2f02      	cmp	r7, #2
 80093c0:	d10b      	bne.n	80093da <xQueueGenericSendFromISR+0x54>
 80093c2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80093c4:	2b01      	cmp	r3, #1
 80093c6:	d008      	beq.n	80093da <xQueueGenericSendFromISR+0x54>
 80093c8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80093cc:	f383 8811 	msr	BASEPRI, r3
 80093d0:	f3bf 8f6f 	isb	sy
 80093d4:	f3bf 8f4f 	dsb	sy
 80093d8:	e7fe      	b.n	80093d8 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 80093da:	f7ff fd71 	bl	8008ec0 <vPortValidateInterruptPriority>
	__asm volatile
 80093de:	f3ef 8611 	mrs	r6, BASEPRI
 80093e2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80093e6:	f383 8811 	msr	BASEPRI, r3
 80093ea:	f3bf 8f6f 	isb	sy
 80093ee:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 80093f2:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80093f4:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80093f6:	429a      	cmp	r2, r3
 80093f8:	d301      	bcc.n	80093fe <xQueueGenericSendFromISR+0x78>
 80093fa:	2f02      	cmp	r7, #2
 80093fc:	d122      	bne.n	8009444 <xQueueGenericSendFromISR+0xbe>
			const int8_t cTxLock = pxQueue->cTxLock;
 80093fe:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8009402:	463a      	mov	r2, r7
			const int8_t cTxLock = pxQueue->cTxLock;
 8009404:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8009406:	4649      	mov	r1, r9
 8009408:	4620      	mov	r0, r4
 800940a:	f7ff fd92 	bl	8008f32 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 800940e:	1c6b      	adds	r3, r5, #1
 8009410:	d113      	bne.n	800943a <xQueueGenericSendFromISR+0xb4>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8009412:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8009414:	b90b      	cbnz	r3, 800941a <xQueueGenericSendFromISR+0x94>
			xReturn = pdPASS;
 8009416:	2001      	movs	r0, #1
 8009418:	e00b      	b.n	8009432 <xQueueGenericSendFromISR+0xac>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800941a:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800941e:	f000 fe5d 	bl	800a0dc <xTaskRemoveFromEventList>
 8009422:	2800      	cmp	r0, #0
 8009424:	d0f7      	beq.n	8009416 <xQueueGenericSendFromISR+0x90>
							if( pxHigherPriorityTaskWoken != NULL )
 8009426:	f1b8 0f00 	cmp.w	r8, #0
 800942a:	d0f4      	beq.n	8009416 <xQueueGenericSendFromISR+0x90>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800942c:	2001      	movs	r0, #1
 800942e:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 8009432:	f386 8811 	msr	BASEPRI, r6
}
 8009436:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800943a:	3501      	adds	r5, #1
 800943c:	b26d      	sxtb	r5, r5
 800943e:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
 8009442:	e7e8      	b.n	8009416 <xQueueGenericSendFromISR+0x90>
			xReturn = errQUEUE_FULL;
 8009444:	2000      	movs	r0, #0
 8009446:	e7f4      	b.n	8009432 <xQueueGenericSendFromISR+0xac>

08009448 <xQueueGiveFromISR>:
{
 8009448:	b570      	push	{r4, r5, r6, lr}
 800944a:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800944c:	4604      	mov	r4, r0
 800944e:	b940      	cbnz	r0, 8009462 <xQueueGiveFromISR+0x1a>
	__asm volatile
 8009450:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009454:	f383 8811 	msr	BASEPRI, r3
 8009458:	f3bf 8f6f 	isb	sy
 800945c:	f3bf 8f4f 	dsb	sy
 8009460:	e7fe      	b.n	8009460 <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 8009462:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8009464:	b143      	cbz	r3, 8009478 <xQueueGiveFromISR+0x30>
 8009466:	f04f 0350 	mov.w	r3, #80	; 0x50
 800946a:	f383 8811 	msr	BASEPRI, r3
 800946e:	f3bf 8f6f 	isb	sy
 8009472:	f3bf 8f4f 	dsb	sy
 8009476:	e7fe      	b.n	8009476 <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 8009478:	6803      	ldr	r3, [r0, #0]
 800947a:	b953      	cbnz	r3, 8009492 <xQueueGiveFromISR+0x4a>
 800947c:	6883      	ldr	r3, [r0, #8]
 800947e:	b143      	cbz	r3, 8009492 <xQueueGiveFromISR+0x4a>
 8009480:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009484:	f383 8811 	msr	BASEPRI, r3
 8009488:	f3bf 8f6f 	isb	sy
 800948c:	f3bf 8f4f 	dsb	sy
 8009490:	e7fe      	b.n	8009490 <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8009492:	f7ff fd15 	bl	8008ec0 <vPortValidateInterruptPriority>
	__asm volatile
 8009496:	f3ef 8611 	mrs	r6, BASEPRI
 800949a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800949e:	f383 8811 	msr	BASEPRI, r3
 80094a2:	f3bf 8f6f 	isb	sy
 80094a6:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80094aa:	6ba2      	ldr	r2, [r4, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 80094ac:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80094ae:	4293      	cmp	r3, r2
 80094b0:	d91c      	bls.n	80094ec <xQueueGiveFromISR+0xa4>
			const int8_t cTxLock = pxQueue->cTxLock;
 80094b2:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 80094b6:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 80094b8:	29ff      	cmp	r1, #255	; 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 80094ba:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 80094bc:	63a2      	str	r2, [r4, #56]	; 0x38
			if( cTxLock == queueUNLOCKED )
 80094be:	d110      	bne.n	80094e2 <xQueueGiveFromISR+0x9a>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80094c0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80094c2:	b90b      	cbnz	r3, 80094c8 <xQueueGiveFromISR+0x80>
			xReturn = pdPASS;
 80094c4:	2001      	movs	r0, #1
 80094c6:	e009      	b.n	80094dc <xQueueGiveFromISR+0x94>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80094c8:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80094cc:	f000 fe06 	bl	800a0dc <xTaskRemoveFromEventList>
 80094d0:	2800      	cmp	r0, #0
 80094d2:	d0f7      	beq.n	80094c4 <xQueueGiveFromISR+0x7c>
							if( pxHigherPriorityTaskWoken != NULL )
 80094d4:	2d00      	cmp	r5, #0
 80094d6:	d0f5      	beq.n	80094c4 <xQueueGiveFromISR+0x7c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 80094d8:	2001      	movs	r0, #1
 80094da:	6028      	str	r0, [r5, #0]
	__asm volatile
 80094dc:	f386 8811 	msr	BASEPRI, r6
}
 80094e0:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 80094e2:	3301      	adds	r3, #1
 80094e4:	b25b      	sxtb	r3, r3
 80094e6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 80094ea:	e7eb      	b.n	80094c4 <xQueueGiveFromISR+0x7c>
			xReturn = errQUEUE_FULL;
 80094ec:	2000      	movs	r0, #0
 80094ee:	e7f5      	b.n	80094dc <xQueueGiveFromISR+0x94>

080094f0 <xQueueReceive>:
{
 80094f0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80094f4:	460f      	mov	r7, r1
 80094f6:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 80094f8:	4604      	mov	r4, r0
 80094fa:	b940      	cbnz	r0, 800950e <xQueueReceive+0x1e>
	__asm volatile
 80094fc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009500:	f383 8811 	msr	BASEPRI, r3
 8009504:	f3bf 8f6f 	isb	sy
 8009508:	f3bf 8f4f 	dsb	sy
 800950c:	e7fe      	b.n	800950c <xQueueReceive+0x1c>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800950e:	b951      	cbnz	r1, 8009526 <xQueueReceive+0x36>
 8009510:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8009512:	b143      	cbz	r3, 8009526 <xQueueReceive+0x36>
 8009514:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009518:	f383 8811 	msr	BASEPRI, r3
 800951c:	f3bf 8f6f 	isb	sy
 8009520:	f3bf 8f4f 	dsb	sy
 8009524:	e7fe      	b.n	8009524 <xQueueReceive+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8009526:	f000 fe6b 	bl	800a200 <xTaskGetSchedulerState>
 800952a:	4606      	mov	r6, r0
 800952c:	b950      	cbnz	r0, 8009544 <xQueueReceive+0x54>
 800952e:	9b01      	ldr	r3, [sp, #4]
 8009530:	b14b      	cbz	r3, 8009546 <xQueueReceive+0x56>
 8009532:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009536:	f383 8811 	msr	BASEPRI, r3
 800953a:	f3bf 8f6f 	isb	sy
 800953e:	f3bf 8f4f 	dsb	sy
 8009542:	e7fe      	b.n	8009542 <xQueueReceive+0x52>
 8009544:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 8009546:	f04f 0800 	mov.w	r8, #0
 800954a:	e03d      	b.n	80095c8 <xQueueReceive+0xd8>
				if( xTicksToWait == ( TickType_t ) 0 )
 800954c:	9d01      	ldr	r5, [sp, #4]
 800954e:	b91d      	cbnz	r5, 8009558 <xQueueReceive+0x68>
					taskEXIT_CRITICAL();
 8009550:	f7ff fbc0 	bl	8008cd4 <vPortExitCritical>
				return errQUEUE_EMPTY;
 8009554:	2000      	movs	r0, #0
 8009556:	e056      	b.n	8009606 <xQueueReceive+0x116>
				else if( xEntryTimeSet == pdFALSE )
 8009558:	b916      	cbnz	r6, 8009560 <xQueueReceive+0x70>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800955a:	a802      	add	r0, sp, #8
 800955c:	f000 fe02 	bl	800a164 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8009560:	f7ff fbb8 	bl	8008cd4 <vPortExitCritical>
		vTaskSuspendAll();
 8009564:	f000 fc06 	bl	8009d74 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8009568:	f7ff fb94 	bl	8008c94 <vPortEnterCritical>
 800956c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8009570:	2bff      	cmp	r3, #255	; 0xff
 8009572:	bf08      	it	eq
 8009574:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 8009578:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800957c:	2bff      	cmp	r3, #255	; 0xff
 800957e:	bf08      	it	eq
 8009580:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 8009584:	f7ff fba6 	bl	8008cd4 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8009588:	a901      	add	r1, sp, #4
 800958a:	a802      	add	r0, sp, #8
 800958c:	f000 fdf6 	bl	800a17c <xTaskCheckForTimeOut>
 8009590:	2800      	cmp	r0, #0
 8009592:	d141      	bne.n	8009618 <xQueueReceive+0x128>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8009594:	4620      	mov	r0, r4
 8009596:	f7ff fcc1 	bl	8008f1c <prvIsQueueEmpty>
 800959a:	b3b8      	cbz	r0, 800960c <xQueueReceive+0x11c>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800959c:	9901      	ldr	r1, [sp, #4]
 800959e:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80095a2:	f000 fd63 	bl	800a06c <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 80095a6:	4620      	mov	r0, r4
 80095a8:	f7ff fd0e 	bl	8008fc8 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 80095ac:	f000 fc86 	bl	8009ebc <xTaskResumeAll>
 80095b0:	b948      	cbnz	r0, 80095c6 <xQueueReceive+0xd6>
					portYIELD_WITHIN_API();
 80095b2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80095b6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80095ba:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80095be:	f3bf 8f4f 	dsb	sy
 80095c2:	f3bf 8f6f 	isb	sy
 80095c6:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 80095c8:	f7ff fb64 	bl	8008c94 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80095cc:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 80095ce:	2d00      	cmp	r5, #0
 80095d0:	d0bc      	beq.n	800954c <xQueueReceive+0x5c>
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 80095d2:	4639      	mov	r1, r7
 80095d4:	4620      	mov	r0, r4
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80095d6:	3d01      	subs	r5, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 80095d8:	f7ff fce0 	bl	8008f9c <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80095dc:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80095de:	6923      	ldr	r3, [r4, #16]
 80095e0:	b173      	cbz	r3, 8009600 <xQueueReceive+0x110>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80095e2:	f104 0010 	add.w	r0, r4, #16
 80095e6:	f000 fd79 	bl	800a0dc <xTaskRemoveFromEventList>
 80095ea:	b148      	cbz	r0, 8009600 <xQueueReceive+0x110>
						queueYIELD_IF_USING_PREEMPTION();
 80095ec:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80095f0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80095f4:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80095f8:	f3bf 8f4f 	dsb	sy
 80095fc:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8009600:	f7ff fb68 	bl	8008cd4 <vPortExitCritical>
				return pdPASS;
 8009604:	2001      	movs	r0, #1
}
 8009606:	b004      	add	sp, #16
 8009608:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
				prvUnlockQueue( pxQueue );
 800960c:	4620      	mov	r0, r4
 800960e:	f7ff fcdb 	bl	8008fc8 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8009612:	f000 fc53 	bl	8009ebc <xTaskResumeAll>
 8009616:	e7d6      	b.n	80095c6 <xQueueReceive+0xd6>
			prvUnlockQueue( pxQueue );
 8009618:	4620      	mov	r0, r4
 800961a:	f7ff fcd5 	bl	8008fc8 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800961e:	f000 fc4d 	bl	8009ebc <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8009622:	4620      	mov	r0, r4
 8009624:	f7ff fc7a 	bl	8008f1c <prvIsQueueEmpty>
 8009628:	2800      	cmp	r0, #0
 800962a:	d0cc      	beq.n	80095c6 <xQueueReceive+0xd6>
 800962c:	e792      	b.n	8009554 <xQueueReceive+0x64>

0800962e <xQueueSemaphoreTake>:
{
 800962e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009630:	b085      	sub	sp, #20
	configASSERT( ( pxQueue ) );
 8009632:	4604      	mov	r4, r0
{
 8009634:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 8009636:	b940      	cbnz	r0, 800964a <xQueueSemaphoreTake+0x1c>
 8009638:	f04f 0350 	mov.w	r3, #80	; 0x50
 800963c:	f383 8811 	msr	BASEPRI, r3
 8009640:	f3bf 8f6f 	isb	sy
 8009644:	f3bf 8f4f 	dsb	sy
 8009648:	e7fe      	b.n	8009648 <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 800964a:	6c05      	ldr	r5, [r0, #64]	; 0x40
 800964c:	b145      	cbz	r5, 8009660 <xQueueSemaphoreTake+0x32>
 800964e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009652:	f383 8811 	msr	BASEPRI, r3
 8009656:	f3bf 8f6f 	isb	sy
 800965a:	f3bf 8f4f 	dsb	sy
 800965e:	e7fe      	b.n	800965e <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8009660:	f000 fdce 	bl	800a200 <xTaskGetSchedulerState>
 8009664:	4606      	mov	r6, r0
 8009666:	b950      	cbnz	r0, 800967e <xQueueSemaphoreTake+0x50>
 8009668:	9b01      	ldr	r3, [sp, #4]
 800966a:	b15b      	cbz	r3, 8009684 <xQueueSemaphoreTake+0x56>
 800966c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009670:	f383 8811 	msr	BASEPRI, r3
 8009674:	f3bf 8f6f 	isb	sy
 8009678:	f3bf 8f4f 	dsb	sy
 800967c:	e7fe      	b.n	800967c <xQueueSemaphoreTake+0x4e>
 800967e:	462e      	mov	r6, r5
		prvLockQueue( pxQueue );
 8009680:	2700      	movs	r7, #0
 8009682:	e053      	b.n	800972c <xQueueSemaphoreTake+0xfe>
 8009684:	4605      	mov	r5, r0
 8009686:	e7fb      	b.n	8009680 <xQueueSemaphoreTake+0x52>
				if( xTicksToWait == ( TickType_t ) 0 )
 8009688:	9b01      	ldr	r3, [sp, #4]
 800968a:	b963      	cbnz	r3, 80096a6 <xQueueSemaphoreTake+0x78>
						configASSERT( xInheritanceOccurred == pdFALSE );
 800968c:	b145      	cbz	r5, 80096a0 <xQueueSemaphoreTake+0x72>
 800968e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009692:	f383 8811 	msr	BASEPRI, r3
 8009696:	f3bf 8f6f 	isb	sy
 800969a:	f3bf 8f4f 	dsb	sy
 800969e:	e7fe      	b.n	800969e <xQueueSemaphoreTake+0x70>
					taskEXIT_CRITICAL();
 80096a0:	f7ff fb18 	bl	8008cd4 <vPortExitCritical>
					return errQUEUE_EMPTY;
 80096a4:	e062      	b.n	800976c <xQueueSemaphoreTake+0x13e>
				else if( xEntryTimeSet == pdFALSE )
 80096a6:	b916      	cbnz	r6, 80096ae <xQueueSemaphoreTake+0x80>
					vTaskInternalSetTimeOutState( &xTimeOut );
 80096a8:	a802      	add	r0, sp, #8
 80096aa:	f000 fd5b 	bl	800a164 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 80096ae:	f7ff fb11 	bl	8008cd4 <vPortExitCritical>
		vTaskSuspendAll();
 80096b2:	f000 fb5f 	bl	8009d74 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 80096b6:	f7ff faed 	bl	8008c94 <vPortEnterCritical>
 80096ba:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 80096be:	2bff      	cmp	r3, #255	; 0xff
 80096c0:	bf08      	it	eq
 80096c2:	f884 7044 	strbeq.w	r7, [r4, #68]	; 0x44
 80096c6:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 80096ca:	2bff      	cmp	r3, #255	; 0xff
 80096cc:	bf08      	it	eq
 80096ce:	f884 7045 	strbeq.w	r7, [r4, #69]	; 0x45
 80096d2:	f7ff faff 	bl	8008cd4 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 80096d6:	a901      	add	r1, sp, #4
 80096d8:	a802      	add	r0, sp, #8
 80096da:	f000 fd4f 	bl	800a17c <xTaskCheckForTimeOut>
 80096de:	2800      	cmp	r0, #0
 80096e0:	d14d      	bne.n	800977e <xQueueSemaphoreTake+0x150>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 80096e2:	4620      	mov	r0, r4
 80096e4:	f7ff fc1a 	bl	8008f1c <prvIsQueueEmpty>
 80096e8:	2800      	cmp	r0, #0
 80096ea:	d042      	beq.n	8009772 <xQueueSemaphoreTake+0x144>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 80096ec:	6823      	ldr	r3, [r4, #0]
 80096ee:	b93b      	cbnz	r3, 8009700 <xQueueSemaphoreTake+0xd2>
						taskENTER_CRITICAL();
 80096f0:	f7ff fad0 	bl	8008c94 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 80096f4:	68a0      	ldr	r0, [r4, #8]
 80096f6:	f000 fd93 	bl	800a220 <xTaskPriorityInherit>
 80096fa:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 80096fc:	f7ff faea 	bl	8008cd4 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8009700:	9901      	ldr	r1, [sp, #4]
 8009702:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8009706:	f000 fcb1 	bl	800a06c <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800970a:	4620      	mov	r0, r4
 800970c:	f7ff fc5c 	bl	8008fc8 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8009710:	f000 fbd4 	bl	8009ebc <xTaskResumeAll>
 8009714:	b948      	cbnz	r0, 800972a <xQueueSemaphoreTake+0xfc>
					portYIELD_WITHIN_API();
 8009716:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800971a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800971e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009722:	f3bf 8f4f 	dsb	sy
 8009726:	f3bf 8f6f 	isb	sy
 800972a:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 800972c:	f7ff fab2 	bl	8008c94 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 8009730:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 8009732:	2b00      	cmp	r3, #0
 8009734:	d0a8      	beq.n	8009688 <xQueueSemaphoreTake+0x5a>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 8009736:	3b01      	subs	r3, #1
 8009738:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800973a:	6823      	ldr	r3, [r4, #0]
 800973c:	b913      	cbnz	r3, 8009744 <xQueueSemaphoreTake+0x116>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 800973e:	f000 fe47 	bl	800a3d0 <pvTaskIncrementMutexHeldCount>
 8009742:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8009744:	6923      	ldr	r3, [r4, #16]
 8009746:	b173      	cbz	r3, 8009766 <xQueueSemaphoreTake+0x138>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8009748:	f104 0010 	add.w	r0, r4, #16
 800974c:	f000 fcc6 	bl	800a0dc <xTaskRemoveFromEventList>
 8009750:	b148      	cbz	r0, 8009766 <xQueueSemaphoreTake+0x138>
						queueYIELD_IF_USING_PREEMPTION();
 8009752:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009756:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800975a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800975e:	f3bf 8f4f 	dsb	sy
 8009762:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8009766:	f7ff fab5 	bl	8008cd4 <vPortExitCritical>
				return pdPASS;
 800976a:	2501      	movs	r5, #1
}
 800976c:	4628      	mov	r0, r5
 800976e:	b005      	add	sp, #20
 8009770:	bdf0      	pop	{r4, r5, r6, r7, pc}
				prvUnlockQueue( pxQueue );
 8009772:	4620      	mov	r0, r4
 8009774:	f7ff fc28 	bl	8008fc8 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8009778:	f000 fba0 	bl	8009ebc <xTaskResumeAll>
 800977c:	e7d5      	b.n	800972a <xQueueSemaphoreTake+0xfc>
			prvUnlockQueue( pxQueue );
 800977e:	4620      	mov	r0, r4
 8009780:	f7ff fc22 	bl	8008fc8 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8009784:	f000 fb9a 	bl	8009ebc <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8009788:	4620      	mov	r0, r4
 800978a:	f7ff fbc7 	bl	8008f1c <prvIsQueueEmpty>
 800978e:	2800      	cmp	r0, #0
 8009790:	d0cb      	beq.n	800972a <xQueueSemaphoreTake+0xfc>
					if( xInheritanceOccurred != pdFALSE )
 8009792:	2d00      	cmp	r5, #0
 8009794:	d0ea      	beq.n	800976c <xQueueSemaphoreTake+0x13e>
						taskENTER_CRITICAL();
 8009796:	f7ff fa7d 	bl	8008c94 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 800979a:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800979c:	b119      	cbz	r1, 80097a6 <xQueueSemaphoreTake+0x178>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 800979e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80097a0:	6819      	ldr	r1, [r3, #0]
 80097a2:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 80097a6:	68a0      	ldr	r0, [r4, #8]
 80097a8:	f000 fdc0 	bl	800a32c <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 80097ac:	2500      	movs	r5, #0
						taskEXIT_CRITICAL();
 80097ae:	f7ff fa91 	bl	8008cd4 <vPortExitCritical>
 80097b2:	e7db      	b.n	800976c <xQueueSemaphoreTake+0x13e>

080097b4 <xQueueReceiveFromISR>:
{
 80097b4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80097b8:	4689      	mov	r9, r1
 80097ba:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 80097bc:	4605      	mov	r5, r0
 80097be:	b940      	cbnz	r0, 80097d2 <xQueueReceiveFromISR+0x1e>
 80097c0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80097c4:	f383 8811 	msr	BASEPRI, r3
 80097c8:	f3bf 8f6f 	isb	sy
 80097cc:	f3bf 8f4f 	dsb	sy
 80097d0:	e7fe      	b.n	80097d0 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80097d2:	b951      	cbnz	r1, 80097ea <xQueueReceiveFromISR+0x36>
 80097d4:	6c03      	ldr	r3, [r0, #64]	; 0x40
 80097d6:	b143      	cbz	r3, 80097ea <xQueueReceiveFromISR+0x36>
 80097d8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80097dc:	f383 8811 	msr	BASEPRI, r3
 80097e0:	f3bf 8f6f 	isb	sy
 80097e4:	f3bf 8f4f 	dsb	sy
 80097e8:	e7fe      	b.n	80097e8 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 80097ea:	f7ff fb69 	bl	8008ec0 <vPortValidateInterruptPriority>
	__asm volatile
 80097ee:	f3ef 8711 	mrs	r7, BASEPRI
 80097f2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80097f6:	f383 8811 	msr	BASEPRI, r3
 80097fa:	f3bf 8f6f 	isb	sy
 80097fe:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8009802:	6bac      	ldr	r4, [r5, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8009804:	b31c      	cbz	r4, 800984e <xQueueReceiveFromISR+0x9a>
			const int8_t cRxLock = pxQueue->cRxLock;
 8009806:	f895 6044 	ldrb.w	r6, [r5, #68]	; 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 800980a:	4649      	mov	r1, r9
			const int8_t cRxLock = pxQueue->cRxLock;
 800980c:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 800980e:	4628      	mov	r0, r5
 8009810:	f7ff fbc4 	bl	8008f9c <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8009814:	3c01      	subs	r4, #1
			if( cRxLock == queueUNLOCKED )
 8009816:	1c73      	adds	r3, r6, #1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8009818:	63ac      	str	r4, [r5, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 800981a:	d113      	bne.n	8009844 <xQueueReceiveFromISR+0x90>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800981c:	692b      	ldr	r3, [r5, #16]
 800981e:	b90b      	cbnz	r3, 8009824 <xQueueReceiveFromISR+0x70>
			xReturn = pdPASS;
 8009820:	2001      	movs	r0, #1
 8009822:	e00b      	b.n	800983c <xQueueReceiveFromISR+0x88>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8009824:	f105 0010 	add.w	r0, r5, #16
 8009828:	f000 fc58 	bl	800a0dc <xTaskRemoveFromEventList>
 800982c:	2800      	cmp	r0, #0
 800982e:	d0f7      	beq.n	8009820 <xQueueReceiveFromISR+0x6c>
						if( pxHigherPriorityTaskWoken != NULL )
 8009830:	f1b8 0f00 	cmp.w	r8, #0
 8009834:	d0f4      	beq.n	8009820 <xQueueReceiveFromISR+0x6c>
							*pxHigherPriorityTaskWoken = pdTRUE;
 8009836:	2001      	movs	r0, #1
 8009838:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 800983c:	f387 8811 	msr	BASEPRI, r7
}
 8009840:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 8009844:	3601      	adds	r6, #1
 8009846:	b276      	sxtb	r6, r6
 8009848:	f885 6044 	strb.w	r6, [r5, #68]	; 0x44
 800984c:	e7e8      	b.n	8009820 <xQueueReceiveFromISR+0x6c>
			xReturn = pdFAIL;
 800984e:	4620      	mov	r0, r4
 8009850:	e7f4      	b.n	800983c <xQueueReceiveFromISR+0x88>
	...

08009854 <vQueueAddToRegistry>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
	{
 8009854:	b510      	push	{r4, lr}

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 8009856:	4a07      	ldr	r2, [pc, #28]	; (8009874 <vQueueAddToRegistry+0x20>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8009858:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800985a:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
 800985e:	b92c      	cbnz	r4, 800986c <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 8009860:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 8009864:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 8009868:	6058      	str	r0, [r3, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 800986a:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800986c:	3301      	adds	r3, #1
 800986e:	2b08      	cmp	r3, #8
 8009870:	d1f3      	bne.n	800985a <vQueueAddToRegistry+0x6>
 8009872:	e7fa      	b.n	800986a <vQueueAddToRegistry+0x16>
 8009874:	20014f40 	.word	0x20014f40

08009878 <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueUnregisterQueue( QueueHandle_t xQueue )
	{
 8009878:	b510      	push	{r4, lr}

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800987a:	4a08      	ldr	r2, [pc, #32]	; (800989c <vQueueUnregisterQueue+0x24>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800987c:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800987e:	eb02 01c3 	add.w	r1, r2, r3, lsl #3
 8009882:	684c      	ldr	r4, [r1, #4]
 8009884:	4284      	cmp	r4, r0
 8009886:	d104      	bne.n	8009892 <vQueueUnregisterQueue+0x1a>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 8009888:	2000      	movs	r0, #0
 800988a:	f842 0033 	str.w	r0, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 800988e:	6048      	str	r0, [r1, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 8009890:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8009892:	3301      	adds	r3, #1
 8009894:	2b08      	cmp	r3, #8
 8009896:	d1f2      	bne.n	800987e <vQueueUnregisterQueue+0x6>
 8009898:	e7fa      	b.n	8009890 <vQueueUnregisterQueue+0x18>
 800989a:	bf00      	nop
 800989c:	20014f40 	.word	0x20014f40

080098a0 <vQueueDelete>:
{
 80098a0:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 80098a2:	4604      	mov	r4, r0
 80098a4:	b940      	cbnz	r0, 80098b8 <vQueueDelete+0x18>
	__asm volatile
 80098a6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80098aa:	f383 8811 	msr	BASEPRI, r3
 80098ae:	f3bf 8f6f 	isb	sy
 80098b2:	f3bf 8f4f 	dsb	sy
 80098b6:	e7fe      	b.n	80098b6 <vQueueDelete+0x16>
		vQueueUnregisterQueue( pxQueue );
 80098b8:	f7ff ffde 	bl	8009878 <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 80098bc:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 80098c0:	b923      	cbnz	r3, 80098cc <vQueueDelete+0x2c>
			vPortFree( pxQueue );
 80098c2:	4620      	mov	r0, r4
}
 80098c4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 80098c8:	f7ff b900 	b.w	8008acc <vPortFree>
}
 80098cc:	bd10      	pop	{r4, pc}

080098ce <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 80098ce:	b570      	push	{r4, r5, r6, lr}
 80098d0:	4604      	mov	r4, r0
 80098d2:	460d      	mov	r5, r1
 80098d4:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 80098d6:	f7ff f9dd 	bl	8008c94 <vPortEnterCritical>
 80098da:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 80098de:	2bff      	cmp	r3, #255	; 0xff
 80098e0:	bf04      	itt	eq
 80098e2:	2300      	moveq	r3, #0
 80098e4:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 80098e8:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 80098ec:	2bff      	cmp	r3, #255	; 0xff
 80098ee:	bf04      	itt	eq
 80098f0:	2300      	moveq	r3, #0
 80098f2:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 80098f6:	f7ff f9ed 	bl	8008cd4 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 80098fa:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80098fc:	b92b      	cbnz	r3, 800990a <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 80098fe:	4632      	mov	r2, r6
 8009900:	4629      	mov	r1, r5
 8009902:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8009906:	f000 fbcb 	bl	800a0a0 <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 800990a:	4620      	mov	r0, r4
	}
 800990c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 8009910:	f7ff bb5a 	b.w	8008fc8 <prvUnlockQueue>

08009914 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 8009914:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009918:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 800991a:	f7ff f9bb 	bl	8008c94 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 800991e:	4b30      	ldr	r3, [pc, #192]	; (80099e0 <prvAddNewTaskToReadyList+0xcc>)
		if( pxCurrentTCB == NULL )
 8009920:	4e30      	ldr	r6, [pc, #192]	; (80099e4 <prvAddNewTaskToReadyList+0xd0>)
		uxCurrentNumberOfTasks++;
 8009922:	681a      	ldr	r2, [r3, #0]
 8009924:	4f30      	ldr	r7, [pc, #192]	; (80099e8 <prvAddNewTaskToReadyList+0xd4>)
 8009926:	3201      	adds	r2, #1
 8009928:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 800992a:	6835      	ldr	r5, [r6, #0]
 800992c:	2d00      	cmp	r5, #0
 800992e:	d14b      	bne.n	80099c8 <prvAddNewTaskToReadyList+0xb4>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 8009930:	6034      	str	r4, [r6, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 8009932:	681b      	ldr	r3, [r3, #0]
 8009934:	2b01      	cmp	r3, #1
 8009936:	d11f      	bne.n	8009978 <prvAddNewTaskToReadyList+0x64>
 8009938:	46b8      	mov	r8, r7
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800993a:	4640      	mov	r0, r8
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800993c:	3501      	adds	r5, #1
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800993e:	f7ff f8fd 	bl	8008b3c <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8009942:	2d38      	cmp	r5, #56	; 0x38
 8009944:	f108 0814 	add.w	r8, r8, #20
 8009948:	d1f7      	bne.n	800993a <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 800994a:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8009a10 <prvAddNewTaskToReadyList+0xfc>
	vListInitialise( &xDelayedTaskList2 );
 800994e:	4d27      	ldr	r5, [pc, #156]	; (80099ec <prvAddNewTaskToReadyList+0xd8>)
	vListInitialise( &xDelayedTaskList1 );
 8009950:	4640      	mov	r0, r8
 8009952:	f7ff f8f3 	bl	8008b3c <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 8009956:	4628      	mov	r0, r5
 8009958:	f7ff f8f0 	bl	8008b3c <vListInitialise>
	vListInitialise( &xPendingReadyList );
 800995c:	4824      	ldr	r0, [pc, #144]	; (80099f0 <prvAddNewTaskToReadyList+0xdc>)
 800995e:	f7ff f8ed 	bl	8008b3c <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 8009962:	4824      	ldr	r0, [pc, #144]	; (80099f4 <prvAddNewTaskToReadyList+0xe0>)
 8009964:	f7ff f8ea 	bl	8008b3c <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 8009968:	4823      	ldr	r0, [pc, #140]	; (80099f8 <prvAddNewTaskToReadyList+0xe4>)
 800996a:	f7ff f8e7 	bl	8008b3c <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 800996e:	4b23      	ldr	r3, [pc, #140]	; (80099fc <prvAddNewTaskToReadyList+0xe8>)
 8009970:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 8009974:	4b22      	ldr	r3, [pc, #136]	; (8009a00 <prvAddNewTaskToReadyList+0xec>)
 8009976:	601d      	str	r5, [r3, #0]
		uxTaskNumber++;
 8009978:	4a22      	ldr	r2, [pc, #136]	; (8009a04 <prvAddNewTaskToReadyList+0xf0>)
 800997a:	6813      	ldr	r3, [r2, #0]
 800997c:	3301      	adds	r3, #1
 800997e:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 8009980:	4a21      	ldr	r2, [pc, #132]	; (8009a08 <prvAddNewTaskToReadyList+0xf4>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 8009982:	6463      	str	r3, [r4, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 8009984:	6811      	ldr	r1, [r2, #0]
 8009986:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8009988:	2014      	movs	r0, #20
 800998a:	428b      	cmp	r3, r1
 800998c:	fb00 7003 	mla	r0, r0, r3, r7
 8009990:	f104 0104 	add.w	r1, r4, #4
 8009994:	bf88      	it	hi
 8009996:	6013      	strhi	r3, [r2, #0]
 8009998:	f7ff f8de 	bl	8008b58 <vListInsertEnd>
	taskEXIT_CRITICAL();
 800999c:	f7ff f99a 	bl	8008cd4 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 80099a0:	4b1a      	ldr	r3, [pc, #104]	; (8009a0c <prvAddNewTaskToReadyList+0xf8>)
 80099a2:	681b      	ldr	r3, [r3, #0]
 80099a4:	b173      	cbz	r3, 80099c4 <prvAddNewTaskToReadyList+0xb0>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 80099a6:	6833      	ldr	r3, [r6, #0]
 80099a8:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80099aa:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80099ac:	429a      	cmp	r2, r3
 80099ae:	d209      	bcs.n	80099c4 <prvAddNewTaskToReadyList+0xb0>
			taskYIELD_IF_USING_PREEMPTION();
 80099b0:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80099b4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80099b8:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80099bc:	f3bf 8f4f 	dsb	sy
 80099c0:	f3bf 8f6f 	isb	sy
}
 80099c4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 80099c8:	4b10      	ldr	r3, [pc, #64]	; (8009a0c <prvAddNewTaskToReadyList+0xf8>)
 80099ca:	681b      	ldr	r3, [r3, #0]
 80099cc:	2b00      	cmp	r3, #0
 80099ce:	d1d3      	bne.n	8009978 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 80099d0:	6833      	ldr	r3, [r6, #0]
 80099d2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80099d4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80099d6:	429a      	cmp	r2, r3
					pxCurrentTCB = pxNewTCB;
 80099d8:	bf98      	it	ls
 80099da:	6034      	strls	r4, [r6, #0]
 80099dc:	e7cc      	b.n	8009978 <prvAddNewTaskToReadyList+0x64>
 80099de:	bf00      	nop
 80099e0:	200153ec 	.word	0x200153ec
 80099e4:	20014f80 	.word	0x20014f80
 80099e8:	20014f8c 	.word	0x20014f8c
 80099ec:	20015418 	.word	0x20015418
 80099f0:	20015434 	.word	0x20015434
 80099f4:	20015460 	.word	0x20015460
 80099f8:	2001544c 	.word	0x2001544c
 80099fc:	20014f84 	.word	0x20014f84
 8009a00:	20014f88 	.word	0x20014f88
 8009a04:	200153fc 	.word	0x200153fc
 8009a08:	20015400 	.word	0x20015400
 8009a0c:	20015448 	.word	0x20015448
 8009a10:	20015404 	.word	0x20015404

08009a14 <prvAddCurrentTaskToDelayedList>:
	}
#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 8009a14:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 8009a16:	4b15      	ldr	r3, [pc, #84]	; (8009a6c <prvAddCurrentTaskToDelayedList+0x58>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009a18:	4e15      	ldr	r6, [pc, #84]	; (8009a70 <prvAddCurrentTaskToDelayedList+0x5c>)
const TickType_t xConstTickCount = xTickCount;
 8009a1a:	681d      	ldr	r5, [r3, #0]
{
 8009a1c:	4604      	mov	r4, r0
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009a1e:	6830      	ldr	r0, [r6, #0]
 8009a20:	3004      	adds	r0, #4
{
 8009a22:	460f      	mov	r7, r1
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009a24:	f7ff f8bb 	bl	8008b9e <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 8009a28:	1c63      	adds	r3, r4, #1
 8009a2a:	d107      	bne.n	8009a3c <prvAddCurrentTaskToDelayedList+0x28>
 8009a2c:	b137      	cbz	r7, 8009a3c <prvAddCurrentTaskToDelayedList+0x28>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009a2e:	6831      	ldr	r1, [r6, #0]
 8009a30:	4810      	ldr	r0, [pc, #64]	; (8009a74 <prvAddCurrentTaskToDelayedList+0x60>)

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 8009a32:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009a36:	3104      	adds	r1, #4
 8009a38:	f7ff b88e 	b.w	8008b58 <vListInsertEnd>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 8009a3c:	6833      	ldr	r3, [r6, #0]
 8009a3e:	192c      	adds	r4, r5, r4
 8009a40:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 8009a42:	d307      	bcc.n	8009a54 <prvAddCurrentTaskToDelayedList+0x40>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009a44:	4b0c      	ldr	r3, [pc, #48]	; (8009a78 <prvAddCurrentTaskToDelayedList+0x64>)
 8009a46:	6818      	ldr	r0, [r3, #0]
 8009a48:	6831      	ldr	r1, [r6, #0]
}
 8009a4a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009a4e:	3104      	adds	r1, #4
 8009a50:	f7ff b88e 	b.w	8008b70 <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009a54:	4b09      	ldr	r3, [pc, #36]	; (8009a7c <prvAddCurrentTaskToDelayedList+0x68>)
 8009a56:	6818      	ldr	r0, [r3, #0]
 8009a58:	6831      	ldr	r1, [r6, #0]
 8009a5a:	3104      	adds	r1, #4
 8009a5c:	f7ff f888 	bl	8008b70 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 8009a60:	4b07      	ldr	r3, [pc, #28]	; (8009a80 <prvAddCurrentTaskToDelayedList+0x6c>)
 8009a62:	681a      	ldr	r2, [r3, #0]
 8009a64:	42a2      	cmp	r2, r4
					xNextTaskUnblockTime = xTimeToWake;
 8009a66:	bf88      	it	hi
 8009a68:	601c      	strhi	r4, [r3, #0]
}
 8009a6a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8009a6c:	20015474 	.word	0x20015474
 8009a70:	20014f80 	.word	0x20014f80
 8009a74:	2001544c 	.word	0x2001544c
 8009a78:	20014f88 	.word	0x20014f88
 8009a7c:	20014f84 	.word	0x20014f84
 8009a80:	2001542c 	.word	0x2001542c

08009a84 <prvResetNextTaskUnblockTime>:
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8009a84:	4a06      	ldr	r2, [pc, #24]	; (8009aa0 <prvResetNextTaskUnblockTime+0x1c>)
 8009a86:	6813      	ldr	r3, [r2, #0]
 8009a88:	6819      	ldr	r1, [r3, #0]
 8009a8a:	4b06      	ldr	r3, [pc, #24]	; (8009aa4 <prvResetNextTaskUnblockTime+0x20>)
 8009a8c:	b919      	cbnz	r1, 8009a96 <prvResetNextTaskUnblockTime+0x12>
		xNextTaskUnblockTime = portMAX_DELAY;
 8009a8e:	f04f 32ff 	mov.w	r2, #4294967295
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8009a92:	601a      	str	r2, [r3, #0]
}
 8009a94:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009a96:	6812      	ldr	r2, [r2, #0]
 8009a98:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8009a9a:	68d2      	ldr	r2, [r2, #12]
 8009a9c:	6852      	ldr	r2, [r2, #4]
 8009a9e:	e7f8      	b.n	8009a92 <prvResetNextTaskUnblockTime+0xe>
 8009aa0:	20014f84 	.word	0x20014f84
 8009aa4:	2001542c 	.word	0x2001542c

08009aa8 <prvDeleteTCB>:
	{
 8009aa8:	b510      	push	{r4, lr}
 8009aaa:	4604      	mov	r4, r0
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
 8009aac:	3058      	adds	r0, #88	; 0x58
 8009aae:	f017 fc31 	bl	8021314 <_reclaim_reent>
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8009ab2:	f894 30bd 	ldrb.w	r3, [r4, #189]	; 0xbd
 8009ab6:	b93b      	cbnz	r3, 8009ac8 <prvDeleteTCB+0x20>
				vPortFree( pxTCB->pxStack );
 8009ab8:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8009aba:	f7ff f807 	bl	8008acc <vPortFree>
				vPortFree( pxTCB );
 8009abe:	4620      	mov	r0, r4
	}
 8009ac0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 8009ac4:	f7ff b802 	b.w	8008acc <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 8009ac8:	2b01      	cmp	r3, #1
 8009aca:	d0f8      	beq.n	8009abe <prvDeleteTCB+0x16>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 8009acc:	2b02      	cmp	r3, #2
 8009ace:	d008      	beq.n	8009ae2 <prvDeleteTCB+0x3a>
 8009ad0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009ad4:	f383 8811 	msr	BASEPRI, r3
 8009ad8:	f3bf 8f6f 	isb	sy
 8009adc:	f3bf 8f4f 	dsb	sy
 8009ae0:	e7fe      	b.n	8009ae0 <prvDeleteTCB+0x38>
	}
 8009ae2:	bd10      	pop	{r4, pc}

08009ae4 <prvIdleTask>:
{
 8009ae4:	b580      	push	{r7, lr}
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8009ae6:	4c13      	ldr	r4, [pc, #76]	; (8009b34 <prvIdleTask+0x50>)
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009ae8:	4f13      	ldr	r7, [pc, #76]	; (8009b38 <prvIdleTask+0x54>)
				--uxCurrentNumberOfTasks;
 8009aea:	4d14      	ldr	r5, [pc, #80]	; (8009b3c <prvIdleTask+0x58>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8009aec:	6823      	ldr	r3, [r4, #0]
 8009aee:	b973      	cbnz	r3, 8009b0e <prvIdleTask+0x2a>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 8009af0:	4b13      	ldr	r3, [pc, #76]	; (8009b40 <prvIdleTask+0x5c>)
 8009af2:	681b      	ldr	r3, [r3, #0]
 8009af4:	2b01      	cmp	r3, #1
 8009af6:	d9f8      	bls.n	8009aea <prvIdleTask+0x6>
				taskYIELD();
 8009af8:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009afc:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009b00:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009b04:	f3bf 8f4f 	dsb	sy
 8009b08:	f3bf 8f6f 	isb	sy
 8009b0c:	e7ed      	b.n	8009aea <prvIdleTask+0x6>
			taskENTER_CRITICAL();
 8009b0e:	f7ff f8c1 	bl	8008c94 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009b12:	68fb      	ldr	r3, [r7, #12]
 8009b14:	68de      	ldr	r6, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8009b16:	1d30      	adds	r0, r6, #4
 8009b18:	f7ff f841 	bl	8008b9e <uxListRemove>
				--uxCurrentNumberOfTasks;
 8009b1c:	682b      	ldr	r3, [r5, #0]
 8009b1e:	3b01      	subs	r3, #1
 8009b20:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 8009b22:	6823      	ldr	r3, [r4, #0]
 8009b24:	3b01      	subs	r3, #1
 8009b26:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 8009b28:	f7ff f8d4 	bl	8008cd4 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 8009b2c:	4630      	mov	r0, r6
 8009b2e:	f7ff ffbb 	bl	8009aa8 <prvDeleteTCB>
 8009b32:	e7db      	b.n	8009aec <prvIdleTask+0x8>
 8009b34:	200153f0 	.word	0x200153f0
 8009b38:	20015460 	.word	0x20015460
 8009b3c:	200153ec 	.word	0x200153ec
 8009b40:	20014f8c 	.word	0x20014f8c

08009b44 <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8009b44:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009b48:	e9dd 8409 	ldrd	r8, r4, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8009b4c:	ea4f 0982 	mov.w	r9, r2, lsl #2
 8009b50:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8009b52:	4606      	mov	r6, r0
 8009b54:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8009b56:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8009b58:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8009b5a:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8009b5c:	f016 fff6 	bl	8020b4c <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 8009b60:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8009b62:	f1a9 0904 	sub.w	r9, r9, #4
 8009b66:	4491      	add	r9, r2
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 8009b68:	f029 0907 	bic.w	r9, r9, #7
	if( pcName != NULL )
 8009b6c:	2d00      	cmp	r5, #0
 8009b6e:	d042      	beq.n	8009bf6 <prvInitialiseNewTask.constprop.0+0xb2>
 8009b70:	1e6b      	subs	r3, r5, #1
 8009b72:	f104 0234 	add.w	r2, r4, #52	; 0x34
 8009b76:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8009b78:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 8009b7c:	f802 0b01 	strb.w	r0, [r2], #1
			if( pcName[ x ] == ( char ) 0x00 )
 8009b80:	b108      	cbz	r0, 8009b86 <prvInitialiseNewTask.constprop.0+0x42>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 8009b82:	42ab      	cmp	r3, r5
 8009b84:	d1f8      	bne.n	8009b78 <prvInitialiseNewTask.constprop.0+0x34>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 8009b86:	2300      	movs	r3, #0
 8009b88:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 8009b8c:	9d08      	ldr	r5, [sp, #32]
 8009b8e:	2d37      	cmp	r5, #55	; 0x37
 8009b90:	bf28      	it	cs
 8009b92:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 8009b94:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 8009b98:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 8009b9a:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8009b9c:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 8009b9e:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8009ba2:	f7fe ffd6 	bl	8008b52 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009ba6:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 8009baa:	f104 0018 	add.w	r0, r4, #24
 8009bae:	f7fe ffd0 	bl	8008b52 <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 8009bb2:	f8c4 a0b8 	str.w	sl, [r4, #184]	; 0xb8
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 8009bb6:	2260      	movs	r2, #96	; 0x60
 8009bb8:	4651      	mov	r1, sl
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 8009bba:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009bbc:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 8009bbe:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 8009bc0:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 8009bc4:	f884 a0bc 	strb.w	sl, [r4, #188]	; 0xbc
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 8009bc8:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8009bcc:	f016 ffbe 	bl	8020b4c <memset>
 8009bd0:	4b0a      	ldr	r3, [pc, #40]	; (8009bfc <prvInitialiseNewTask.constprop.0+0xb8>)
 8009bd2:	65e3      	str	r3, [r4, #92]	; 0x5c
 8009bd4:	4b0a      	ldr	r3, [pc, #40]	; (8009c00 <prvInitialiseNewTask.constprop.0+0xbc>)
 8009bd6:	6623      	str	r3, [r4, #96]	; 0x60
 8009bd8:	4b0a      	ldr	r3, [pc, #40]	; (8009c04 <prvInitialiseNewTask.constprop.0+0xc0>)
 8009bda:	6663      	str	r3, [r4, #100]	; 0x64
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 8009bdc:	463a      	mov	r2, r7
 8009bde:	4631      	mov	r1, r6
 8009be0:	4648      	mov	r0, r9
 8009be2:	f7ff f82b 	bl	8008c3c <pxPortInitialiseStack>
 8009be6:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 8009be8:	f1b8 0f00 	cmp.w	r8, #0
 8009bec:	d001      	beq.n	8009bf2 <prvInitialiseNewTask.constprop.0+0xae>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 8009bee:	f8c8 4000 	str.w	r4, [r8]
}
 8009bf2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 8009bf6:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 8009bfa:	e7c7      	b.n	8009b8c <prvInitialiseNewTask.constprop.0+0x48>
 8009bfc:	080246e8 	.word	0x080246e8
 8009c00:	08024708 	.word	0x08024708
 8009c04:	080246c8 	.word	0x080246c8

08009c08 <xTaskCreateStatic>:
	{
 8009c08:	b570      	push	{r4, r5, r6, lr}
 8009c0a:	b086      	sub	sp, #24
 8009c0c:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 8009c10:	b945      	cbnz	r5, 8009c24 <xTaskCreateStatic+0x1c>
 8009c12:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009c16:	f383 8811 	msr	BASEPRI, r3
 8009c1a:	f3bf 8f6f 	isb	sy
 8009c1e:	f3bf 8f4f 	dsb	sy
 8009c22:	e7fe      	b.n	8009c22 <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 8009c24:	b944      	cbnz	r4, 8009c38 <xTaskCreateStatic+0x30>
 8009c26:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009c2a:	f383 8811 	msr	BASEPRI, r3
 8009c2e:	f3bf 8f6f 	isb	sy
 8009c32:	f3bf 8f4f 	dsb	sy
 8009c36:	e7fe      	b.n	8009c36 <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 8009c38:	26c0      	movs	r6, #192	; 0xc0
 8009c3a:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 8009c3c:	9e05      	ldr	r6, [sp, #20]
 8009c3e:	2ec0      	cmp	r6, #192	; 0xc0
 8009c40:	d008      	beq.n	8009c54 <xTaskCreateStatic+0x4c>
 8009c42:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009c46:	f383 8811 	msr	BASEPRI, r3
 8009c4a:	f3bf 8f6f 	isb	sy
 8009c4e:	f3bf 8f4f 	dsb	sy
 8009c52:	e7fe      	b.n	8009c52 <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 8009c54:	6325      	str	r5, [r4, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 8009c56:	2502      	movs	r5, #2
 8009c58:	f884 50bd 	strb.w	r5, [r4, #189]	; 0xbd
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8009c5c:	ad04      	add	r5, sp, #16
 8009c5e:	9501      	str	r5, [sp, #4]
 8009c60:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8009c62:	9402      	str	r4, [sp, #8]
 8009c64:	9500      	str	r5, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 8009c66:	9e05      	ldr	r6, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8009c68:	f7ff ff6c 	bl	8009b44 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8009c6c:	4620      	mov	r0, r4
 8009c6e:	f7ff fe51 	bl	8009914 <prvAddNewTaskToReadyList>
	}
 8009c72:	9804      	ldr	r0, [sp, #16]
 8009c74:	b006      	add	sp, #24
 8009c76:	bd70      	pop	{r4, r5, r6, pc}

08009c78 <xTaskCreate>:
	{
 8009c78:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009c7c:	4607      	mov	r7, r0
 8009c7e:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8009c80:	0090      	lsls	r0, r2, #2
	{
 8009c82:	4688      	mov	r8, r1
 8009c84:	4616      	mov	r6, r2
 8009c86:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8009c88:	f7fe fe8e 	bl	80089a8 <pvPortMalloc>
			if( pxStack != NULL )
 8009c8c:	4605      	mov	r5, r0
 8009c8e:	b1e8      	cbz	r0, 8009ccc <xTaskCreate+0x54>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 8009c90:	20c0      	movs	r0, #192	; 0xc0
 8009c92:	f7fe fe89 	bl	80089a8 <pvPortMalloc>
				if( pxNewTCB != NULL )
 8009c96:	4604      	mov	r4, r0
 8009c98:	b1a8      	cbz	r0, 8009cc6 <xTaskCreate+0x4e>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 8009c9a:	2300      	movs	r3, #0
 8009c9c:	f880 30bd 	strb.w	r3, [r0, #189]	; 0xbd
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8009ca0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
					pxNewTCB->pxStack = pxStack;
 8009ca2:	6305      	str	r5, [r0, #48]	; 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8009ca4:	9301      	str	r3, [sp, #4]
 8009ca6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8009ca8:	9002      	str	r0, [sp, #8]
 8009caa:	9300      	str	r3, [sp, #0]
 8009cac:	4632      	mov	r2, r6
 8009cae:	464b      	mov	r3, r9
 8009cb0:	4641      	mov	r1, r8
 8009cb2:	4638      	mov	r0, r7
 8009cb4:	f7ff ff46 	bl	8009b44 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8009cb8:	4620      	mov	r0, r4
 8009cba:	f7ff fe2b 	bl	8009914 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 8009cbe:	2001      	movs	r0, #1
	}
 8009cc0:	b005      	add	sp, #20
 8009cc2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 8009cc6:	4628      	mov	r0, r5
 8009cc8:	f7fe ff00 	bl	8008acc <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 8009ccc:	f04f 30ff 	mov.w	r0, #4294967295
		return xReturn;
 8009cd0:	e7f6      	b.n	8009cc0 <xTaskCreate+0x48>
	...

08009cd4 <vTaskStartScheduler>:
{
 8009cd4:	b510      	push	{r4, lr}
 8009cd6:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 8009cd8:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8009cda:	aa07      	add	r2, sp, #28
 8009cdc:	a906      	add	r1, sp, #24
 8009cde:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 8009ce0:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8009ce4:	f7fe fe24 	bl	8008930 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 8009ce8:	9b05      	ldr	r3, [sp, #20]
 8009cea:	9302      	str	r3, [sp, #8]
 8009cec:	9b06      	ldr	r3, [sp, #24]
 8009cee:	9a07      	ldr	r2, [sp, #28]
 8009cf0:	4919      	ldr	r1, [pc, #100]	; (8009d58 <vTaskStartScheduler+0x84>)
 8009cf2:	481a      	ldr	r0, [pc, #104]	; (8009d5c <vTaskStartScheduler+0x88>)
 8009cf4:	e9cd 4300 	strd	r4, r3, [sp]
 8009cf8:	4623      	mov	r3, r4
 8009cfa:	f7ff ff85 	bl	8009c08 <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 8009cfe:	b340      	cbz	r0, 8009d52 <vTaskStartScheduler+0x7e>
			xReturn = xTimerCreateTimerTask();
 8009d00:	f000 fbc4 	bl	800a48c <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 8009d04:	2801      	cmp	r0, #1
 8009d06:	d119      	bne.n	8009d3c <vTaskStartScheduler+0x68>
 8009d08:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009d0c:	f383 8811 	msr	BASEPRI, r3
 8009d10:	f3bf 8f6f 	isb	sy
 8009d14:	f3bf 8f4f 	dsb	sy
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 8009d18:	4b11      	ldr	r3, [pc, #68]	; (8009d60 <vTaskStartScheduler+0x8c>)
 8009d1a:	4a12      	ldr	r2, [pc, #72]	; (8009d64 <vTaskStartScheduler+0x90>)
 8009d1c:	681b      	ldr	r3, [r3, #0]
 8009d1e:	3358      	adds	r3, #88	; 0x58
 8009d20:	6013      	str	r3, [r2, #0]
		xNextTaskUnblockTime = portMAX_DELAY;
 8009d22:	4b11      	ldr	r3, [pc, #68]	; (8009d68 <vTaskStartScheduler+0x94>)
 8009d24:	f04f 32ff 	mov.w	r2, #4294967295
 8009d28:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 8009d2a:	4b10      	ldr	r3, [pc, #64]	; (8009d6c <vTaskStartScheduler+0x98>)
 8009d2c:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 8009d2e:	4b10      	ldr	r3, [pc, #64]	; (8009d70 <vTaskStartScheduler+0x9c>)
 8009d30:	601c      	str	r4, [r3, #0]
}
 8009d32:	b008      	add	sp, #32
 8009d34:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		if( xPortStartScheduler() != pdFALSE )
 8009d38:	f7ff b83c 	b.w	8008db4 <xPortStartScheduler>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 8009d3c:	3001      	adds	r0, #1
 8009d3e:	d108      	bne.n	8009d52 <vTaskStartScheduler+0x7e>
 8009d40:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009d44:	f383 8811 	msr	BASEPRI, r3
 8009d48:	f3bf 8f6f 	isb	sy
 8009d4c:	f3bf 8f4f 	dsb	sy
 8009d50:	e7fe      	b.n	8009d50 <vTaskStartScheduler+0x7c>
}
 8009d52:	b008      	add	sp, #32
 8009d54:	bd10      	pop	{r4, pc}
 8009d56:	bf00      	nop
 8009d58:	08023684 	.word	0x08023684
 8009d5c:	08009ae5 	.word	0x08009ae5
 8009d60:	20014f80 	.word	0x20014f80
 8009d64:	20000104 	.word	0x20000104
 8009d68:	2001542c 	.word	0x2001542c
 8009d6c:	20015448 	.word	0x20015448
 8009d70:	20015474 	.word	0x20015474

08009d74 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 8009d74:	4a02      	ldr	r2, [pc, #8]	; (8009d80 <vTaskSuspendAll+0xc>)
 8009d76:	6813      	ldr	r3, [r2, #0]
 8009d78:	3301      	adds	r3, #1
 8009d7a:	6013      	str	r3, [r2, #0]
}
 8009d7c:	4770      	bx	lr
 8009d7e:	bf00      	nop
 8009d80:	200153f8 	.word	0x200153f8

08009d84 <xTaskGetTickCount>:
		xTicks = xTickCount;
 8009d84:	4b01      	ldr	r3, [pc, #4]	; (8009d8c <xTaskGetTickCount+0x8>)
 8009d86:	6818      	ldr	r0, [r3, #0]
}
 8009d88:	4770      	bx	lr
 8009d8a:	bf00      	nop
 8009d8c:	20015474 	.word	0x20015474

08009d90 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009d90:	4b3f      	ldr	r3, [pc, #252]	; (8009e90 <xTaskIncrementTick+0x100>)
 8009d92:	681b      	ldr	r3, [r3, #0]
{
 8009d94:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009d98:	2b00      	cmp	r3, #0
 8009d9a:	d173      	bne.n	8009e84 <xTaskIncrementTick+0xf4>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 8009d9c:	4b3d      	ldr	r3, [pc, #244]	; (8009e94 <xTaskIncrementTick+0x104>)
 8009d9e:	681d      	ldr	r5, [r3, #0]
 8009da0:	3501      	adds	r5, #1
		xTickCount = xConstTickCount;
 8009da2:	601d      	str	r5, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 8009da4:	b9bd      	cbnz	r5, 8009dd6 <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 8009da6:	4b3c      	ldr	r3, [pc, #240]	; (8009e98 <xTaskIncrementTick+0x108>)
 8009da8:	681a      	ldr	r2, [r3, #0]
 8009daa:	6812      	ldr	r2, [r2, #0]
 8009dac:	b142      	cbz	r2, 8009dc0 <xTaskIncrementTick+0x30>
 8009dae:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009db2:	f383 8811 	msr	BASEPRI, r3
 8009db6:	f3bf 8f6f 	isb	sy
 8009dba:	f3bf 8f4f 	dsb	sy
 8009dbe:	e7fe      	b.n	8009dbe <xTaskIncrementTick+0x2e>
 8009dc0:	4a36      	ldr	r2, [pc, #216]	; (8009e9c <xTaskIncrementTick+0x10c>)
 8009dc2:	6819      	ldr	r1, [r3, #0]
 8009dc4:	6810      	ldr	r0, [r2, #0]
 8009dc6:	6018      	str	r0, [r3, #0]
 8009dc8:	6011      	str	r1, [r2, #0]
 8009dca:	4a35      	ldr	r2, [pc, #212]	; (8009ea0 <xTaskIncrementTick+0x110>)
 8009dcc:	6813      	ldr	r3, [r2, #0]
 8009dce:	3301      	adds	r3, #1
 8009dd0:	6013      	str	r3, [r2, #0]
 8009dd2:	f7ff fe57 	bl	8009a84 <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 8009dd6:	4e33      	ldr	r6, [pc, #204]	; (8009ea4 <xTaskIncrementTick+0x114>)
 8009dd8:	4f33      	ldr	r7, [pc, #204]	; (8009ea8 <xTaskIncrementTick+0x118>)
 8009dda:	6833      	ldr	r3, [r6, #0]
 8009ddc:	f8df 80d4 	ldr.w	r8, [pc, #212]	; 8009eb4 <xTaskIncrementTick+0x124>
 8009de0:	42ab      	cmp	r3, r5
BaseType_t xSwitchRequired = pdFALSE;
 8009de2:	f04f 0400 	mov.w	r4, #0
		if( xConstTickCount >= xNextTaskUnblockTime )
 8009de6:	d911      	bls.n	8009e0c <xTaskIncrementTick+0x7c>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 8009de8:	f8d8 3000 	ldr.w	r3, [r8]
 8009dec:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009dee:	2214      	movs	r2, #20
 8009df0:	4353      	muls	r3, r2
 8009df2:	58fb      	ldr	r3, [r7, r3]
				xSwitchRequired = pdTRUE;
 8009df4:	2b02      	cmp	r3, #2
 8009df6:	bf28      	it	cs
 8009df8:	2401      	movcs	r4, #1
		if( xYieldPending != pdFALSE )
 8009dfa:	4b2c      	ldr	r3, [pc, #176]	; (8009eac <xTaskIncrementTick+0x11c>)
 8009dfc:	681b      	ldr	r3, [r3, #0]
			xSwitchRequired = pdTRUE;
 8009dfe:	2b00      	cmp	r3, #0
}
 8009e00:	bf0c      	ite	eq
 8009e02:	4620      	moveq	r0, r4
 8009e04:	2001      	movne	r0, #1
 8009e06:	b003      	add	sp, #12
 8009e08:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8009e0c:	f8df 9088 	ldr.w	r9, [pc, #136]	; 8009e98 <xTaskIncrementTick+0x108>
					prvAddTaskToReadyList( pxTCB );
 8009e10:	f8df a0a4 	ldr.w	sl, [pc, #164]	; 8009eb8 <xTaskIncrementTick+0x128>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8009e14:	f8d9 3000 	ldr.w	r3, [r9]
 8009e18:	681b      	ldr	r3, [r3, #0]
 8009e1a:	b91b      	cbnz	r3, 8009e24 <xTaskIncrementTick+0x94>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009e1c:	f04f 33ff 	mov.w	r3, #4294967295
 8009e20:	6033      	str	r3, [r6, #0]
					break;
 8009e22:	e7e1      	b.n	8009de8 <xTaskIncrementTick+0x58>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009e24:	f8d9 3000 	ldr.w	r3, [r9]
 8009e28:	68db      	ldr	r3, [r3, #12]
 8009e2a:	f8d3 b00c 	ldr.w	fp, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 8009e2e:	f8db 2004 	ldr.w	r2, [fp, #4]
					if( xConstTickCount < xItemValue )
 8009e32:	4295      	cmp	r5, r2
 8009e34:	d201      	bcs.n	8009e3a <xTaskIncrementTick+0xaa>
						xNextTaskUnblockTime = xItemValue;
 8009e36:	6032      	str	r2, [r6, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 8009e38:	e7d6      	b.n	8009de8 <xTaskIncrementTick+0x58>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8009e3a:	f10b 0104 	add.w	r1, fp, #4
 8009e3e:	4608      	mov	r0, r1
 8009e40:	9101      	str	r1, [sp, #4]
 8009e42:	f7fe feac 	bl	8008b9e <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 8009e46:	f8db 2028 	ldr.w	r2, [fp, #40]	; 0x28
 8009e4a:	9901      	ldr	r1, [sp, #4]
 8009e4c:	b122      	cbz	r2, 8009e58 <xTaskIncrementTick+0xc8>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8009e4e:	f10b 0018 	add.w	r0, fp, #24
 8009e52:	f7fe fea4 	bl	8008b9e <uxListRemove>
 8009e56:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 8009e58:	f8db 002c 	ldr.w	r0, [fp, #44]	; 0x2c
 8009e5c:	f8da 2000 	ldr.w	r2, [sl]
 8009e60:	2314      	movs	r3, #20
 8009e62:	4290      	cmp	r0, r2
 8009e64:	bf88      	it	hi
 8009e66:	f8ca 0000 	strhi.w	r0, [sl]
 8009e6a:	fb03 7000 	mla	r0, r3, r0, r7
 8009e6e:	f7fe fe73 	bl	8008b58 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8009e72:	f8d8 1000 	ldr.w	r1, [r8]
 8009e76:	f8db 202c 	ldr.w	r2, [fp, #44]	; 0x2c
 8009e7a:	6acb      	ldr	r3, [r1, #44]	; 0x2c
							xSwitchRequired = pdTRUE;
 8009e7c:	429a      	cmp	r2, r3
 8009e7e:	bf28      	it	cs
 8009e80:	2401      	movcs	r4, #1
 8009e82:	e7c7      	b.n	8009e14 <xTaskIncrementTick+0x84>
		++uxPendedTicks;
 8009e84:	4a0a      	ldr	r2, [pc, #40]	; (8009eb0 <xTaskIncrementTick+0x120>)
 8009e86:	6813      	ldr	r3, [r2, #0]
 8009e88:	3301      	adds	r3, #1
 8009e8a:	6013      	str	r3, [r2, #0]
BaseType_t xSwitchRequired = pdFALSE;
 8009e8c:	2400      	movs	r4, #0
 8009e8e:	e7b4      	b.n	8009dfa <xTaskIncrementTick+0x6a>
 8009e90:	200153f8 	.word	0x200153f8
 8009e94:	20015474 	.word	0x20015474
 8009e98:	20014f84 	.word	0x20014f84
 8009e9c:	20014f88 	.word	0x20014f88
 8009ea0:	20015430 	.word	0x20015430
 8009ea4:	2001542c 	.word	0x2001542c
 8009ea8:	20014f8c 	.word	0x20014f8c
 8009eac:	20015478 	.word	0x20015478
 8009eb0:	200153f4 	.word	0x200153f4
 8009eb4:	20014f80 	.word	0x20014f80
 8009eb8:	20015400 	.word	0x20015400

08009ebc <xTaskResumeAll>:
{
 8009ebc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	configASSERT( uxSchedulerSuspended );
 8009ebe:	4c31      	ldr	r4, [pc, #196]	; (8009f84 <xTaskResumeAll+0xc8>)
 8009ec0:	6823      	ldr	r3, [r4, #0]
 8009ec2:	b943      	cbnz	r3, 8009ed6 <xTaskResumeAll+0x1a>
 8009ec4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009ec8:	f383 8811 	msr	BASEPRI, r3
 8009ecc:	f3bf 8f6f 	isb	sy
 8009ed0:	f3bf 8f4f 	dsb	sy
 8009ed4:	e7fe      	b.n	8009ed4 <xTaskResumeAll+0x18>
	taskENTER_CRITICAL();
 8009ed6:	f7fe fedd 	bl	8008c94 <vPortEnterCritical>
		--uxSchedulerSuspended;
 8009eda:	6823      	ldr	r3, [r4, #0]
 8009edc:	3b01      	subs	r3, #1
 8009ede:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009ee0:	6824      	ldr	r4, [r4, #0]
 8009ee2:	b12c      	cbz	r4, 8009ef0 <xTaskResumeAll+0x34>
BaseType_t xAlreadyYielded = pdFALSE;
 8009ee4:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8009ee6:	f7fe fef5 	bl	8008cd4 <vPortExitCritical>
}
 8009eea:	4620      	mov	r0, r4
 8009eec:	b003      	add	sp, #12
 8009eee:	bdf0      	pop	{r4, r5, r6, r7, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 8009ef0:	4b25      	ldr	r3, [pc, #148]	; (8009f88 <xTaskResumeAll+0xcc>)
 8009ef2:	681b      	ldr	r3, [r3, #0]
 8009ef4:	2b00      	cmp	r3, #0
 8009ef6:	d0f5      	beq.n	8009ee4 <xTaskResumeAll+0x28>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8009ef8:	4d24      	ldr	r5, [pc, #144]	; (8009f8c <xTaskResumeAll+0xd0>)
					prvAddTaskToReadyList( pxTCB );
 8009efa:	4e25      	ldr	r6, [pc, #148]	; (8009f90 <xTaskResumeAll+0xd4>)
 8009efc:	4f25      	ldr	r7, [pc, #148]	; (8009f94 <xTaskResumeAll+0xd8>)
 8009efe:	e01e      	b.n	8009f3e <xTaskResumeAll+0x82>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009f00:	68eb      	ldr	r3, [r5, #12]
 8009f02:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8009f04:	f104 0018 	add.w	r0, r4, #24
 8009f08:	f7fe fe49 	bl	8008b9e <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8009f0c:	1d21      	adds	r1, r4, #4
 8009f0e:	4608      	mov	r0, r1
 8009f10:	9101      	str	r1, [sp, #4]
 8009f12:	f7fe fe44 	bl	8008b9e <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 8009f16:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8009f18:	6832      	ldr	r2, [r6, #0]
 8009f1a:	9901      	ldr	r1, [sp, #4]
 8009f1c:	2014      	movs	r0, #20
 8009f1e:	4293      	cmp	r3, r2
 8009f20:	fb00 7003 	mla	r0, r0, r3, r7
 8009f24:	bf88      	it	hi
 8009f26:	6033      	strhi	r3, [r6, #0]
 8009f28:	f7fe fe16 	bl	8008b58 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8009f2c:	4b1a      	ldr	r3, [pc, #104]	; (8009f98 <xTaskResumeAll+0xdc>)
 8009f2e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8009f30:	681b      	ldr	r3, [r3, #0]
 8009f32:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009f34:	429a      	cmp	r2, r3
 8009f36:	d302      	bcc.n	8009f3e <xTaskResumeAll+0x82>
						xYieldPending = pdTRUE;
 8009f38:	4b18      	ldr	r3, [pc, #96]	; (8009f9c <xTaskResumeAll+0xe0>)
 8009f3a:	2201      	movs	r2, #1
 8009f3c:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8009f3e:	682b      	ldr	r3, [r5, #0]
 8009f40:	2b00      	cmp	r3, #0
 8009f42:	d1dd      	bne.n	8009f00 <xTaskResumeAll+0x44>
				if( pxTCB != NULL )
 8009f44:	b10c      	cbz	r4, 8009f4a <xTaskResumeAll+0x8e>
					prvResetNextTaskUnblockTime();
 8009f46:	f7ff fd9d 	bl	8009a84 <prvResetNextTaskUnblockTime>
					UBaseType_t uxPendedCounts = uxPendedTicks; /* Non-volatile copy. */
 8009f4a:	4d15      	ldr	r5, [pc, #84]	; (8009fa0 <xTaskResumeAll+0xe4>)
 8009f4c:	682c      	ldr	r4, [r5, #0]
					if( uxPendedCounts > ( UBaseType_t ) 0U )
 8009f4e:	b144      	cbz	r4, 8009f62 <xTaskResumeAll+0xa6>
								xYieldPending = pdTRUE;
 8009f50:	4e12      	ldr	r6, [pc, #72]	; (8009f9c <xTaskResumeAll+0xe0>)
 8009f52:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 8009f54:	f7ff ff1c 	bl	8009d90 <xTaskIncrementTick>
 8009f58:	b100      	cbz	r0, 8009f5c <xTaskResumeAll+0xa0>
								xYieldPending = pdTRUE;
 8009f5a:	6037      	str	r7, [r6, #0]
						} while( uxPendedCounts > ( UBaseType_t ) 0U );
 8009f5c:	3c01      	subs	r4, #1
 8009f5e:	d1f9      	bne.n	8009f54 <xTaskResumeAll+0x98>
						uxPendedTicks = 0;
 8009f60:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 8009f62:	4b0e      	ldr	r3, [pc, #56]	; (8009f9c <xTaskResumeAll+0xe0>)
 8009f64:	681b      	ldr	r3, [r3, #0]
 8009f66:	2b00      	cmp	r3, #0
 8009f68:	d0bc      	beq.n	8009ee4 <xTaskResumeAll+0x28>
					taskYIELD_IF_USING_PREEMPTION();
 8009f6a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009f6e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009f72:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009f76:	f3bf 8f4f 	dsb	sy
 8009f7a:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 8009f7e:	2401      	movs	r4, #1
 8009f80:	e7b1      	b.n	8009ee6 <xTaskResumeAll+0x2a>
 8009f82:	bf00      	nop
 8009f84:	200153f8 	.word	0x200153f8
 8009f88:	200153ec 	.word	0x200153ec
 8009f8c:	20015434 	.word	0x20015434
 8009f90:	20015400 	.word	0x20015400
 8009f94:	20014f8c 	.word	0x20014f8c
 8009f98:	20014f80 	.word	0x20014f80
 8009f9c:	20015478 	.word	0x20015478
 8009fa0:	200153f4 	.word	0x200153f4

08009fa4 <vTaskDelay>:
	{
 8009fa4:	b508      	push	{r3, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 8009fa6:	b950      	cbnz	r0, 8009fbe <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 8009fa8:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009fac:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009fb0:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009fb4:	f3bf 8f4f 	dsb	sy
 8009fb8:	f3bf 8f6f 	isb	sy
	}
 8009fbc:	bd08      	pop	{r3, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 8009fbe:	4b0a      	ldr	r3, [pc, #40]	; (8009fe8 <vTaskDelay+0x44>)
 8009fc0:	6819      	ldr	r1, [r3, #0]
 8009fc2:	b141      	cbz	r1, 8009fd6 <vTaskDelay+0x32>
 8009fc4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009fc8:	f383 8811 	msr	BASEPRI, r3
 8009fcc:	f3bf 8f6f 	isb	sy
 8009fd0:	f3bf 8f4f 	dsb	sy
 8009fd4:	e7fe      	b.n	8009fd4 <vTaskDelay+0x30>
			vTaskSuspendAll();
 8009fd6:	f7ff fecd 	bl	8009d74 <vTaskSuspendAll>
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 8009fda:	f7ff fd1b 	bl	8009a14 <prvAddCurrentTaskToDelayedList>
			xAlreadyYielded = xTaskResumeAll();
 8009fde:	f7ff ff6d 	bl	8009ebc <xTaskResumeAll>
		if( xAlreadyYielded == pdFALSE )
 8009fe2:	2800      	cmp	r0, #0
 8009fe4:	d0e0      	beq.n	8009fa8 <vTaskDelay+0x4>
 8009fe6:	e7e9      	b.n	8009fbc <vTaskDelay+0x18>
 8009fe8:	200153f8 	.word	0x200153f8

08009fec <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 8009fec:	4b19      	ldr	r3, [pc, #100]	; (800a054 <vTaskSwitchContext+0x68>)
 8009fee:	681a      	ldr	r2, [r3, #0]
 8009ff0:	4b19      	ldr	r3, [pc, #100]	; (800a058 <vTaskSwitchContext+0x6c>)
{
 8009ff2:	b570      	push	{r4, r5, r6, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 8009ff4:	b112      	cbz	r2, 8009ffc <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 8009ff6:	2201      	movs	r2, #1
 8009ff8:	601a      	str	r2, [r3, #0]
}
 8009ffa:	bd70      	pop	{r4, r5, r6, pc}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009ffc:	4d17      	ldr	r5, [pc, #92]	; (800a05c <vTaskSwitchContext+0x70>)
		xYieldPending = pdFALSE;
 8009ffe:	601a      	str	r2, [r3, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a000:	682a      	ldr	r2, [r5, #0]
 800a002:	4917      	ldr	r1, [pc, #92]	; (800a060 <vTaskSwitchContext+0x74>)
 800a004:	2614      	movs	r6, #20
 800a006:	fb06 f302 	mul.w	r3, r6, r2
 800a00a:	18c8      	adds	r0, r1, r3
 800a00c:	58cc      	ldr	r4, [r1, r3]
 800a00e:	b1ac      	cbz	r4, 800a03c <vTaskSwitchContext+0x50>
 800a010:	6844      	ldr	r4, [r0, #4]
 800a012:	3308      	adds	r3, #8
 800a014:	6864      	ldr	r4, [r4, #4]
 800a016:	6044      	str	r4, [r0, #4]
 800a018:	440b      	add	r3, r1
 800a01a:	429c      	cmp	r4, r3
 800a01c:	bf04      	itt	eq
 800a01e:	6863      	ldreq	r3, [r4, #4]
 800a020:	6043      	streq	r3, [r0, #4]
 800a022:	2314      	movs	r3, #20
 800a024:	fb03 1102 	mla	r1, r3, r2, r1
 800a028:	684b      	ldr	r3, [r1, #4]
 800a02a:	68d9      	ldr	r1, [r3, #12]
 800a02c:	4b0d      	ldr	r3, [pc, #52]	; (800a064 <vTaskSwitchContext+0x78>)
 800a02e:	6019      	str	r1, [r3, #0]
 800a030:	602a      	str	r2, [r5, #0]
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800a032:	681b      	ldr	r3, [r3, #0]
 800a034:	4a0c      	ldr	r2, [pc, #48]	; (800a068 <vTaskSwitchContext+0x7c>)
 800a036:	3358      	adds	r3, #88	; 0x58
 800a038:	6013      	str	r3, [r2, #0]
}
 800a03a:	e7de      	b.n	8009ffa <vTaskSwitchContext+0xe>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a03c:	b942      	cbnz	r2, 800a050 <vTaskSwitchContext+0x64>
 800a03e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a042:	f383 8811 	msr	BASEPRI, r3
 800a046:	f3bf 8f6f 	isb	sy
 800a04a:	f3bf 8f4f 	dsb	sy
 800a04e:	e7fe      	b.n	800a04e <vTaskSwitchContext+0x62>
 800a050:	3a01      	subs	r2, #1
 800a052:	e7d8      	b.n	800a006 <vTaskSwitchContext+0x1a>
 800a054:	200153f8 	.word	0x200153f8
 800a058:	20015478 	.word	0x20015478
 800a05c:	20015400 	.word	0x20015400
 800a060:	20014f8c 	.word	0x20014f8c
 800a064:	20014f80 	.word	0x20014f80
 800a068:	20000104 	.word	0x20000104

0800a06c <vTaskPlaceOnEventList>:
{
 800a06c:	b510      	push	{r4, lr}
 800a06e:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 800a070:	b940      	cbnz	r0, 800a084 <vTaskPlaceOnEventList+0x18>
 800a072:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a076:	f383 8811 	msr	BASEPRI, r3
 800a07a:	f3bf 8f6f 	isb	sy
 800a07e:	f3bf 8f4f 	dsb	sy
 800a082:	e7fe      	b.n	800a082 <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800a084:	4b05      	ldr	r3, [pc, #20]	; (800a09c <vTaskPlaceOnEventList+0x30>)
 800a086:	6819      	ldr	r1, [r3, #0]
 800a088:	3118      	adds	r1, #24
 800a08a:	f7fe fd71 	bl	8008b70 <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800a08e:	4620      	mov	r0, r4
 800a090:	2101      	movs	r1, #1
}
 800a092:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800a096:	f7ff bcbd 	b.w	8009a14 <prvAddCurrentTaskToDelayedList>
 800a09a:	bf00      	nop
 800a09c:	20014f80 	.word	0x20014f80

0800a0a0 <vTaskPlaceOnEventListRestricted>:
	{
 800a0a0:	b538      	push	{r3, r4, r5, lr}
 800a0a2:	460d      	mov	r5, r1
 800a0a4:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 800a0a6:	b940      	cbnz	r0, 800a0ba <vTaskPlaceOnEventListRestricted+0x1a>
 800a0a8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a0ac:	f383 8811 	msr	BASEPRI, r3
 800a0b0:	f3bf 8f6f 	isb	sy
 800a0b4:	f3bf 8f4f 	dsb	sy
 800a0b8:	e7fe      	b.n	800a0b8 <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800a0ba:	4b07      	ldr	r3, [pc, #28]	; (800a0d8 <vTaskPlaceOnEventListRestricted+0x38>)
 800a0bc:	6819      	ldr	r1, [r3, #0]
 800a0be:	3118      	adds	r1, #24
 800a0c0:	f7fe fd4a 	bl	8008b58 <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 800a0c4:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800a0c6:	4621      	mov	r1, r4
 800a0c8:	bf0c      	ite	eq
 800a0ca:	4628      	moveq	r0, r5
 800a0cc:	f04f 30ff 	movne.w	r0, #4294967295
	}
 800a0d0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800a0d4:	f7ff bc9e 	b.w	8009a14 <prvAddCurrentTaskToDelayedList>
 800a0d8:	20014f80 	.word	0x20014f80

0800a0dc <xTaskRemoveFromEventList>:
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a0dc:	68c3      	ldr	r3, [r0, #12]
{
 800a0de:	b513      	push	{r0, r1, r4, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a0e0:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 800a0e2:	b944      	cbnz	r4, 800a0f6 <xTaskRemoveFromEventList+0x1a>
 800a0e4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a0e8:	f383 8811 	msr	BASEPRI, r3
 800a0ec:	f3bf 8f6f 	isb	sy
 800a0f0:	f3bf 8f4f 	dsb	sy
 800a0f4:	e7fe      	b.n	800a0f4 <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 800a0f6:	f104 0118 	add.w	r1, r4, #24
 800a0fa:	4608      	mov	r0, r1
 800a0fc:	9101      	str	r1, [sp, #4]
 800a0fe:	f7fe fd4e 	bl	8008b9e <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800a102:	4b12      	ldr	r3, [pc, #72]	; (800a14c <xTaskRemoveFromEventList+0x70>)
 800a104:	9901      	ldr	r1, [sp, #4]
 800a106:	681b      	ldr	r3, [r3, #0]
 800a108:	b9eb      	cbnz	r3, 800a146 <xTaskRemoveFromEventList+0x6a>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 800a10a:	1d21      	adds	r1, r4, #4
 800a10c:	4608      	mov	r0, r1
 800a10e:	9101      	str	r1, [sp, #4]
 800a110:	f7fe fd45 	bl	8008b9e <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 800a114:	4a0e      	ldr	r2, [pc, #56]	; (800a150 <xTaskRemoveFromEventList+0x74>)
 800a116:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800a118:	6810      	ldr	r0, [r2, #0]
 800a11a:	9901      	ldr	r1, [sp, #4]
 800a11c:	4283      	cmp	r3, r0
 800a11e:	bf88      	it	hi
 800a120:	6013      	strhi	r3, [r2, #0]
 800a122:	4a0c      	ldr	r2, [pc, #48]	; (800a154 <xTaskRemoveFromEventList+0x78>)
 800a124:	2014      	movs	r0, #20
 800a126:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800a12a:	f7fe fd15 	bl	8008b58 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 800a12e:	4b0a      	ldr	r3, [pc, #40]	; (800a158 <xTaskRemoveFromEventList+0x7c>)
 800a130:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800a132:	681b      	ldr	r3, [r3, #0]
 800a134:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a136:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 800a138:	bf85      	ittet	hi
 800a13a:	4b08      	ldrhi	r3, [pc, #32]	; (800a15c <xTaskRemoveFromEventList+0x80>)
 800a13c:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 800a13e:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 800a140:	6018      	strhi	r0, [r3, #0]
}
 800a142:	b002      	add	sp, #8
 800a144:	bd10      	pop	{r4, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800a146:	4806      	ldr	r0, [pc, #24]	; (800a160 <xTaskRemoveFromEventList+0x84>)
 800a148:	e7ef      	b.n	800a12a <xTaskRemoveFromEventList+0x4e>
 800a14a:	bf00      	nop
 800a14c:	200153f8 	.word	0x200153f8
 800a150:	20015400 	.word	0x20015400
 800a154:	20014f8c 	.word	0x20014f8c
 800a158:	20014f80 	.word	0x20014f80
 800a15c:	20015478 	.word	0x20015478
 800a160:	20015434 	.word	0x20015434

0800a164 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800a164:	4b03      	ldr	r3, [pc, #12]	; (800a174 <vTaskInternalSetTimeOutState+0x10>)
 800a166:	681b      	ldr	r3, [r3, #0]
 800a168:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800a16a:	4b03      	ldr	r3, [pc, #12]	; (800a178 <vTaskInternalSetTimeOutState+0x14>)
 800a16c:	681b      	ldr	r3, [r3, #0]
 800a16e:	6043      	str	r3, [r0, #4]
}
 800a170:	4770      	bx	lr
 800a172:	bf00      	nop
 800a174:	20015430 	.word	0x20015430
 800a178:	20015474 	.word	0x20015474

0800a17c <xTaskCheckForTimeOut>:
{
 800a17c:	b570      	push	{r4, r5, r6, lr}
 800a17e:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 800a180:	4605      	mov	r5, r0
 800a182:	b940      	cbnz	r0, 800a196 <xTaskCheckForTimeOut+0x1a>
 800a184:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a188:	f383 8811 	msr	BASEPRI, r3
 800a18c:	f3bf 8f6f 	isb	sy
 800a190:	f3bf 8f4f 	dsb	sy
 800a194:	e7fe      	b.n	800a194 <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 800a196:	b941      	cbnz	r1, 800a1aa <xTaskCheckForTimeOut+0x2e>
 800a198:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a19c:	f383 8811 	msr	BASEPRI, r3
 800a1a0:	f3bf 8f6f 	isb	sy
 800a1a4:	f3bf 8f4f 	dsb	sy
 800a1a8:	e7fe      	b.n	800a1a8 <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 800a1aa:	f7fe fd73 	bl	8008c94 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 800a1ae:	4b0f      	ldr	r3, [pc, #60]	; (800a1ec <xTaskCheckForTimeOut+0x70>)
 800a1b0:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 800a1b2:	6823      	ldr	r3, [r4, #0]
 800a1b4:	1c5a      	adds	r2, r3, #1
 800a1b6:	d010      	beq.n	800a1da <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800a1b8:	480d      	ldr	r0, [pc, #52]	; (800a1f0 <xTaskCheckForTimeOut+0x74>)
 800a1ba:	682e      	ldr	r6, [r5, #0]
 800a1bc:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800a1be:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800a1c0:	4286      	cmp	r6, r0
 800a1c2:	d001      	beq.n	800a1c8 <xTaskCheckForTimeOut+0x4c>
 800a1c4:	428a      	cmp	r2, r1
 800a1c6:	d90f      	bls.n	800a1e8 <xTaskCheckForTimeOut+0x6c>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800a1c8:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800a1ca:	4283      	cmp	r3, r0
 800a1cc:	d90a      	bls.n	800a1e4 <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 800a1ce:	1a5b      	subs	r3, r3, r1
 800a1d0:	4413      	add	r3, r2
 800a1d2:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 800a1d4:	4628      	mov	r0, r5
 800a1d6:	f7ff ffc5 	bl	800a164 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 800a1da:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 800a1dc:	f7fe fd7a 	bl	8008cd4 <vPortExitCritical>
}
 800a1e0:	4620      	mov	r0, r4
 800a1e2:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 800a1e4:	2300      	movs	r3, #0
 800a1e6:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 800a1e8:	2401      	movs	r4, #1
 800a1ea:	e7f7      	b.n	800a1dc <xTaskCheckForTimeOut+0x60>
 800a1ec:	20015474 	.word	0x20015474
 800a1f0:	20015430 	.word	0x20015430

0800a1f4 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 800a1f4:	4b01      	ldr	r3, [pc, #4]	; (800a1fc <vTaskMissedYield+0x8>)
 800a1f6:	2201      	movs	r2, #1
 800a1f8:	601a      	str	r2, [r3, #0]
}
 800a1fa:	4770      	bx	lr
 800a1fc:	20015478 	.word	0x20015478

0800a200 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 800a200:	4b05      	ldr	r3, [pc, #20]	; (800a218 <xTaskGetSchedulerState+0x18>)
 800a202:	681b      	ldr	r3, [r3, #0]
 800a204:	b133      	cbz	r3, 800a214 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800a206:	4b05      	ldr	r3, [pc, #20]	; (800a21c <xTaskGetSchedulerState+0x1c>)
 800a208:	681b      	ldr	r3, [r3, #0]
				xReturn = taskSCHEDULER_SUSPENDED;
 800a20a:	2b00      	cmp	r3, #0
 800a20c:	bf0c      	ite	eq
 800a20e:	2002      	moveq	r0, #2
 800a210:	2000      	movne	r0, #0
 800a212:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 800a214:	2001      	movs	r0, #1
	}
 800a216:	4770      	bx	lr
 800a218:	20015448 	.word	0x20015448
 800a21c:	200153f8 	.word	0x200153f8

0800a220 <xTaskPriorityInherit>:
	{
 800a220:	b573      	push	{r0, r1, r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 800a222:	4604      	mov	r4, r0
 800a224:	b348      	cbz	r0, 800a27a <xTaskPriorityInherit+0x5a>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 800a226:	4d1c      	ldr	r5, [pc, #112]	; (800a298 <xTaskPriorityInherit+0x78>)
 800a228:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800a22a:	682a      	ldr	r2, [r5, #0]
 800a22c:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800a22e:	4293      	cmp	r3, r2
 800a230:	d229      	bcs.n	800a286 <xTaskPriorityInherit+0x66>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a232:	6982      	ldr	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800a234:	4e19      	ldr	r6, [pc, #100]	; (800a29c <xTaskPriorityInherit+0x7c>)
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a236:	2a00      	cmp	r2, #0
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a238:	bfa1      	itttt	ge
 800a23a:	682a      	ldrge	r2, [r5, #0]
 800a23c:	6ad2      	ldrge	r2, [r2, #44]	; 0x2c
 800a23e:	f1c2 0238 	rsbge	r2, r2, #56	; 0x38
 800a242:	6182      	strge	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800a244:	2214      	movs	r2, #20
 800a246:	fb02 6303 	mla	r3, r2, r3, r6
 800a24a:	6942      	ldr	r2, [r0, #20]
 800a24c:	429a      	cmp	r2, r3
 800a24e:	d116      	bne.n	800a27e <xTaskPriorityInherit+0x5e>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a250:	1d01      	adds	r1, r0, #4
 800a252:	4608      	mov	r0, r1
 800a254:	9101      	str	r1, [sp, #4]
 800a256:	f7fe fca2 	bl	8008b9e <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a25a:	682b      	ldr	r3, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800a25c:	4a10      	ldr	r2, [pc, #64]	; (800a2a0 <xTaskPriorityInherit+0x80>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a25e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800a260:	6810      	ldr	r0, [r2, #0]
 800a262:	9901      	ldr	r1, [sp, #4]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a264:	62e3      	str	r3, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800a266:	4283      	cmp	r3, r0
 800a268:	f04f 0014 	mov.w	r0, #20
 800a26c:	fb00 6003 	mla	r0, r0, r3, r6
 800a270:	bf88      	it	hi
 800a272:	6013      	strhi	r3, [r2, #0]
 800a274:	f7fe fc70 	bl	8008b58 <vListInsertEnd>
				xReturn = pdTRUE;
 800a278:	2001      	movs	r0, #1
	}
 800a27a:	b002      	add	sp, #8
 800a27c:	bd70      	pop	{r4, r5, r6, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a27e:	682b      	ldr	r3, [r5, #0]
 800a280:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a282:	62c3      	str	r3, [r0, #44]	; 0x2c
 800a284:	e7f8      	b.n	800a278 <xTaskPriorityInherit+0x58>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 800a286:	682b      	ldr	r3, [r5, #0]
 800a288:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800a28a:	6adc      	ldr	r4, [r3, #44]	; 0x2c
 800a28c:	42a0      	cmp	r0, r4
 800a28e:	bf2c      	ite	cs
 800a290:	2000      	movcs	r0, #0
 800a292:	2001      	movcc	r0, #1
 800a294:	e7f1      	b.n	800a27a <xTaskPriorityInherit+0x5a>
 800a296:	bf00      	nop
 800a298:	20014f80 	.word	0x20014f80
 800a29c:	20014f8c 	.word	0x20014f8c
 800a2a0:	20015400 	.word	0x20015400

0800a2a4 <xTaskPriorityDisinherit>:
	{
 800a2a4:	b513      	push	{r0, r1, r4, lr}
		if( pxMutexHolder != NULL )
 800a2a6:	b910      	cbnz	r0, 800a2ae <xTaskPriorityDisinherit+0xa>
	BaseType_t xReturn = pdFALSE;
 800a2a8:	2000      	movs	r0, #0
	}
 800a2aa:	b002      	add	sp, #8
 800a2ac:	bd10      	pop	{r4, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 800a2ae:	4b1c      	ldr	r3, [pc, #112]	; (800a320 <xTaskPriorityDisinherit+0x7c>)
 800a2b0:	681c      	ldr	r4, [r3, #0]
 800a2b2:	4284      	cmp	r4, r0
 800a2b4:	d008      	beq.n	800a2c8 <xTaskPriorityDisinherit+0x24>
 800a2b6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a2ba:	f383 8811 	msr	BASEPRI, r3
 800a2be:	f3bf 8f6f 	isb	sy
 800a2c2:	f3bf 8f4f 	dsb	sy
 800a2c6:	e7fe      	b.n	800a2c6 <xTaskPriorityDisinherit+0x22>
			configASSERT( pxTCB->uxMutexesHeld );
 800a2c8:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800a2ca:	b943      	cbnz	r3, 800a2de <xTaskPriorityDisinherit+0x3a>
 800a2cc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a2d0:	f383 8811 	msr	BASEPRI, r3
 800a2d4:	f3bf 8f6f 	isb	sy
 800a2d8:	f3bf 8f4f 	dsb	sy
 800a2dc:	e7fe      	b.n	800a2dc <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800a2de:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800a2e0:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 800a2e2:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800a2e4:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 800a2e6:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800a2e8:	d0de      	beq.n	800a2a8 <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 800a2ea:	2b00      	cmp	r3, #0
 800a2ec:	d1dc      	bne.n	800a2a8 <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a2ee:	1d21      	adds	r1, r4, #4
 800a2f0:	4608      	mov	r0, r1
 800a2f2:	9101      	str	r1, [sp, #4]
 800a2f4:	f7fe fc53 	bl	8008b9e <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800a2f8:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 800a2fa:	9901      	ldr	r1, [sp, #4]
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800a2fc:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a2fe:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 800a302:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 800a304:	4a07      	ldr	r2, [pc, #28]	; (800a324 <xTaskPriorityDisinherit+0x80>)
 800a306:	6810      	ldr	r0, [r2, #0]
 800a308:	4283      	cmp	r3, r0
 800a30a:	bf88      	it	hi
 800a30c:	6013      	strhi	r3, [r2, #0]
 800a30e:	4a06      	ldr	r2, [pc, #24]	; (800a328 <xTaskPriorityDisinherit+0x84>)
 800a310:	2014      	movs	r0, #20
 800a312:	fb00 2003 	mla	r0, r0, r3, r2
 800a316:	f7fe fc1f 	bl	8008b58 <vListInsertEnd>
					xReturn = pdTRUE;
 800a31a:	2001      	movs	r0, #1
		return xReturn;
 800a31c:	e7c5      	b.n	800a2aa <xTaskPriorityDisinherit+0x6>
 800a31e:	bf00      	nop
 800a320:	20014f80 	.word	0x20014f80
 800a324:	20015400 	.word	0x20015400
 800a328:	20014f8c 	.word	0x20014f8c

0800a32c <vTaskPriorityDisinheritAfterTimeout>:
	{
 800a32c:	b537      	push	{r0, r1, r2, r4, r5, lr}
		if( pxMutexHolder != NULL )
 800a32e:	4604      	mov	r4, r0
 800a330:	2800      	cmp	r0, #0
 800a332:	d044      	beq.n	800a3be <vTaskPriorityDisinheritAfterTimeout+0x92>
			configASSERT( pxTCB->uxMutexesHeld );
 800a334:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800a336:	b942      	cbnz	r2, 800a34a <vTaskPriorityDisinheritAfterTimeout+0x1e>
 800a338:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a33c:	f383 8811 	msr	BASEPRI, r3
 800a340:	f3bf 8f6f 	isb	sy
 800a344:	f3bf 8f4f 	dsb	sy
 800a348:	e7fe      	b.n	800a348 <vTaskPriorityDisinheritAfterTimeout+0x1c>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800a34a:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 800a34c:	4299      	cmp	r1, r3
 800a34e:	bf38      	it	cc
 800a350:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 800a352:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800a354:	428b      	cmp	r3, r1
 800a356:	d032      	beq.n	800a3be <vTaskPriorityDisinheritAfterTimeout+0x92>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 800a358:	2a01      	cmp	r2, #1
 800a35a:	d130      	bne.n	800a3be <vTaskPriorityDisinheritAfterTimeout+0x92>
					configASSERT( pxTCB != pxCurrentTCB );
 800a35c:	4a19      	ldr	r2, [pc, #100]	; (800a3c4 <vTaskPriorityDisinheritAfterTimeout+0x98>)
 800a35e:	6812      	ldr	r2, [r2, #0]
 800a360:	4282      	cmp	r2, r0
 800a362:	d108      	bne.n	800a376 <vTaskPriorityDisinheritAfterTimeout+0x4a>
 800a364:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a368:	f383 8811 	msr	BASEPRI, r3
 800a36c:	f3bf 8f6f 	isb	sy
 800a370:	f3bf 8f4f 	dsb	sy
 800a374:	e7fe      	b.n	800a374 <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a376:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800a378:	4d13      	ldr	r5, [pc, #76]	; (800a3c8 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
					pxTCB->uxPriority = uxPriorityToUse;
 800a37a:	62c1      	str	r1, [r0, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a37c:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800a37e:	f04f 0214 	mov.w	r2, #20
 800a382:	fb02 5303 	mla	r3, r2, r3, r5
 800a386:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a388:	bfa4      	itt	ge
 800a38a:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
 800a38e:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800a390:	429a      	cmp	r2, r3
 800a392:	d114      	bne.n	800a3be <vTaskPriorityDisinheritAfterTimeout+0x92>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a394:	1d01      	adds	r1, r0, #4
 800a396:	4608      	mov	r0, r1
 800a398:	9101      	str	r1, [sp, #4]
 800a39a:	f7fe fc00 	bl	8008b9e <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 800a39e:	4a0b      	ldr	r2, [pc, #44]	; (800a3cc <vTaskPriorityDisinheritAfterTimeout+0xa0>)
 800a3a0:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800a3a2:	6810      	ldr	r0, [r2, #0]
 800a3a4:	9901      	ldr	r1, [sp, #4]
 800a3a6:	4283      	cmp	r3, r0
 800a3a8:	f04f 0014 	mov.w	r0, #20
 800a3ac:	fb00 5003 	mla	r0, r0, r3, r5
 800a3b0:	bf88      	it	hi
 800a3b2:	6013      	strhi	r3, [r2, #0]
	}
 800a3b4:	b003      	add	sp, #12
 800a3b6:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 800a3ba:	f7fe bbcd 	b.w	8008b58 <vListInsertEnd>
	}
 800a3be:	b003      	add	sp, #12
 800a3c0:	bd30      	pop	{r4, r5, pc}
 800a3c2:	bf00      	nop
 800a3c4:	20014f80 	.word	0x20014f80
 800a3c8:	20014f8c 	.word	0x20014f8c
 800a3cc:	20015400 	.word	0x20015400

0800a3d0 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 800a3d0:	4b04      	ldr	r3, [pc, #16]	; (800a3e4 <pvTaskIncrementMutexHeldCount+0x14>)
 800a3d2:	681a      	ldr	r2, [r3, #0]
 800a3d4:	b11a      	cbz	r2, 800a3de <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 800a3d6:	6819      	ldr	r1, [r3, #0]
 800a3d8:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 800a3da:	3201      	adds	r2, #1
 800a3dc:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 800a3de:	6818      	ldr	r0, [r3, #0]
	}
 800a3e0:	4770      	bx	lr
 800a3e2:	bf00      	nop
 800a3e4:	20014f80 	.word	0x20014f80

0800a3e8 <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 800a3e8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 800a3ea:	4c11      	ldr	r4, [pc, #68]	; (800a430 <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 800a3ec:	f7fe fc52 	bl	8008c94 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 800a3f0:	6825      	ldr	r5, [r4, #0]
 800a3f2:	b9bd      	cbnz	r5, 800a424 <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 800a3f4:	4f0f      	ldr	r7, [pc, #60]	; (800a434 <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 800a3f6:	4e10      	ldr	r6, [pc, #64]	; (800a438 <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 800a3f8:	4638      	mov	r0, r7
 800a3fa:	f7fe fb9f 	bl	8008b3c <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 800a3fe:	4630      	mov	r0, r6
 800a400:	f7fe fb9c 	bl	8008b3c <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 800a404:	4b0d      	ldr	r3, [pc, #52]	; (800a43c <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800a406:	4a0e      	ldr	r2, [pc, #56]	; (800a440 <prvCheckForValidListAndQueue+0x58>)
			pxCurrentTimerList = &xActiveTimerList1;
 800a408:	601f      	str	r7, [r3, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 800a40a:	4b0e      	ldr	r3, [pc, #56]	; (800a444 <prvCheckForValidListAndQueue+0x5c>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800a40c:	2110      	movs	r1, #16
			pxOverflowTimerList = &xActiveTimerList2;
 800a40e:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800a410:	200a      	movs	r0, #10
 800a412:	4b0d      	ldr	r3, [pc, #52]	; (800a448 <prvCheckForValidListAndQueue+0x60>)
 800a414:	9500      	str	r5, [sp, #0]
 800a416:	f7fe fe4e 	bl	80090b6 <xQueueGenericCreateStatic>
 800a41a:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 800a41c:	b110      	cbz	r0, 800a424 <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 800a41e:	490b      	ldr	r1, [pc, #44]	; (800a44c <prvCheckForValidListAndQueue+0x64>)
 800a420:	f7ff fa18 	bl	8009854 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 800a424:	b003      	add	sp, #12
 800a426:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 800a42a:	f7fe bc53 	b.w	8008cd4 <vPortExitCritical>
 800a42e:	bf00      	nop
 800a430:	200155a0 	.word	0x200155a0
 800a434:	20015524 	.word	0x20015524
 800a438:	20015538 	.word	0x20015538
 800a43c:	2001547c 	.word	0x2001547c
 800a440:	20015484 	.word	0x20015484
 800a444:	20015480 	.word	0x20015480
 800a448:	20015550 	.word	0x20015550
 800a44c:	08023689 	.word	0x08023689

0800a450 <prvInsertTimerInActiveList>:
	if( xNextExpiryTime <= xTimeNow )
 800a450:	4291      	cmp	r1, r2
{
 800a452:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800a454:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800a456:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 800a458:	d80a      	bhi.n	800a470 <prvInsertTimerInActiveList+0x20>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a45a:	1ad2      	subs	r2, r2, r3
 800a45c:	6983      	ldr	r3, [r0, #24]
 800a45e:	429a      	cmp	r2, r3
 800a460:	d20d      	bcs.n	800a47e <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800a462:	4b08      	ldr	r3, [pc, #32]	; (800a484 <prvInsertTimerInActiveList+0x34>)
 800a464:	1d01      	adds	r1, r0, #4
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a466:	6818      	ldr	r0, [r3, #0]
 800a468:	f7fe fb82 	bl	8008b70 <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 800a46c:	2000      	movs	r0, #0
}
 800a46e:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 800a470:	429a      	cmp	r2, r3
 800a472:	d201      	bcs.n	800a478 <prvInsertTimerInActiveList+0x28>
 800a474:	4299      	cmp	r1, r3
 800a476:	d202      	bcs.n	800a47e <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a478:	4b03      	ldr	r3, [pc, #12]	; (800a488 <prvInsertTimerInActiveList+0x38>)
 800a47a:	1d01      	adds	r1, r0, #4
 800a47c:	e7f3      	b.n	800a466 <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 800a47e:	2001      	movs	r0, #1
	return xProcessTimerNow;
 800a480:	e7f5      	b.n	800a46e <prvInsertTimerInActiveList+0x1e>
 800a482:	bf00      	nop
 800a484:	20015480 	.word	0x20015480
 800a488:	2001547c 	.word	0x2001547c

0800a48c <xTimerCreateTimerTask>:
{
 800a48c:	b510      	push	{r4, lr}
 800a48e:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 800a490:	f7ff ffaa 	bl	800a3e8 <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 800a494:	4b12      	ldr	r3, [pc, #72]	; (800a4e0 <xTimerCreateTimerTask+0x54>)
 800a496:	681b      	ldr	r3, [r3, #0]
 800a498:	b1b3      	cbz	r3, 800a4c8 <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 800a49a:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800a49c:	aa07      	add	r2, sp, #28
 800a49e:	a906      	add	r1, sp, #24
 800a4a0:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 800a4a2:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800a4a6:	f7fe fa4f 	bl	8008948 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 800a4aa:	9b05      	ldr	r3, [sp, #20]
 800a4ac:	9302      	str	r3, [sp, #8]
 800a4ae:	9b06      	ldr	r3, [sp, #24]
 800a4b0:	9301      	str	r3, [sp, #4]
 800a4b2:	2302      	movs	r3, #2
 800a4b4:	9300      	str	r3, [sp, #0]
 800a4b6:	9a07      	ldr	r2, [sp, #28]
 800a4b8:	490a      	ldr	r1, [pc, #40]	; (800a4e4 <xTimerCreateTimerTask+0x58>)
 800a4ba:	480b      	ldr	r0, [pc, #44]	; (800a4e8 <xTimerCreateTimerTask+0x5c>)
 800a4bc:	4623      	mov	r3, r4
 800a4be:	f7ff fba3 	bl	8009c08 <xTaskCreateStatic>
 800a4c2:	4b0a      	ldr	r3, [pc, #40]	; (800a4ec <xTimerCreateTimerTask+0x60>)
 800a4c4:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 800a4c6:	b940      	cbnz	r0, 800a4da <xTimerCreateTimerTask+0x4e>
 800a4c8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a4cc:	f383 8811 	msr	BASEPRI, r3
 800a4d0:	f3bf 8f6f 	isb	sy
 800a4d4:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 800a4d8:	e7fe      	b.n	800a4d8 <xTimerCreateTimerTask+0x4c>
}
 800a4da:	2001      	movs	r0, #1
 800a4dc:	b008      	add	sp, #32
 800a4de:	bd10      	pop	{r4, pc}
 800a4e0:	200155a0 	.word	0x200155a0
 800a4e4:	0802368e 	.word	0x0802368e
 800a4e8:	0800a5f5 	.word	0x0800a5f5
 800a4ec:	200155a4 	.word	0x200155a4

0800a4f0 <xTimerGenericCommand>:
{
 800a4f0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800a4f2:	4616      	mov	r6, r2
	configASSERT( xTimer );
 800a4f4:	4604      	mov	r4, r0
{
 800a4f6:	461a      	mov	r2, r3
	configASSERT( xTimer );
 800a4f8:	b940      	cbnz	r0, 800a50c <xTimerGenericCommand+0x1c>
 800a4fa:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a4fe:	f383 8811 	msr	BASEPRI, r3
 800a502:	f3bf 8f6f 	isb	sy
 800a506:	f3bf 8f4f 	dsb	sy
 800a50a:	e7fe      	b.n	800a50a <xTimerGenericCommand+0x1a>
	if( xTimerQueue != NULL )
 800a50c:	4d0d      	ldr	r5, [pc, #52]	; (800a544 <xTimerGenericCommand+0x54>)
 800a50e:	6828      	ldr	r0, [r5, #0]
 800a510:	b180      	cbz	r0, 800a534 <xTimerGenericCommand+0x44>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800a512:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800a514:	e9cd 1600 	strd	r1, r6, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800a518:	9402      	str	r4, [sp, #8]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800a51a:	dc0d      	bgt.n	800a538 <xTimerGenericCommand+0x48>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800a51c:	f7ff fe70 	bl	800a200 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800a520:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800a522:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800a524:	bf08      	it	eq
 800a526:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 800a528:	6828      	ldr	r0, [r5, #0]
 800a52a:	bf18      	it	ne
 800a52c:	461a      	movne	r2, r3
 800a52e:	4669      	mov	r1, sp
 800a530:	f7fe fe76 	bl	8009220 <xQueueGenericSend>
}
 800a534:	b004      	add	sp, #16
 800a536:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 800a538:	2300      	movs	r3, #0
 800a53a:	4669      	mov	r1, sp
 800a53c:	f7fe ff23 	bl	8009386 <xQueueGenericSendFromISR>
 800a540:	e7f8      	b.n	800a534 <xTimerGenericCommand+0x44>
 800a542:	bf00      	nop
 800a544:	200155a0 	.word	0x200155a0

0800a548 <prvSampleTimeNow>:
{
 800a548:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
	if( xTimeNow < xLastTime )
 800a54c:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 800a5f0 <prvSampleTimeNow+0xa8>
{
 800a550:	4606      	mov	r6, r0
	xTimeNow = xTaskGetTickCount();
 800a552:	f7ff fc17 	bl	8009d84 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800a556:	f8d8 3000 	ldr.w	r3, [r8]
 800a55a:	4283      	cmp	r3, r0
	xTimeNow = xTaskGetTickCount();
 800a55c:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 800a55e:	d940      	bls.n	800a5e2 <prvSampleTimeNow+0x9a>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800a560:	4f21      	ldr	r7, [pc, #132]	; (800a5e8 <prvSampleTimeNow+0xa0>)
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800a562:	f04f 0900 	mov.w	r9, #0
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800a566:	683b      	ldr	r3, [r7, #0]
 800a568:	681a      	ldr	r2, [r3, #0]
 800a56a:	b95a      	cbnz	r2, 800a584 <prvSampleTimeNow+0x3c>
	pxCurrentTimerList = pxOverflowTimerList;
 800a56c:	4a1f      	ldr	r2, [pc, #124]	; (800a5ec <prvSampleTimeNow+0xa4>)
 800a56e:	6811      	ldr	r1, [r2, #0]
 800a570:	6039      	str	r1, [r7, #0]
	pxOverflowTimerList = pxTemp;
 800a572:	6013      	str	r3, [r2, #0]
		*pxTimerListsWereSwitched = pdTRUE;
 800a574:	2301      	movs	r3, #1
}
 800a576:	4628      	mov	r0, r5
		*pxTimerListsWereSwitched = pdFALSE;
 800a578:	6033      	str	r3, [r6, #0]
	xLastTime = xTimeNow;
 800a57a:	f8c8 5000 	str.w	r5, [r8]
}
 800a57e:	b004      	add	sp, #16
 800a580:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800a584:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a586:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800a588:	f8d3 a000 	ldr.w	sl, [r3]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800a58c:	1d21      	adds	r1, r4, #4
 800a58e:	4608      	mov	r0, r1
 800a590:	9103      	str	r1, [sp, #12]
 800a592:	f7fe fb04 	bl	8008b9e <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a596:	6a23      	ldr	r3, [r4, #32]
 800a598:	4620      	mov	r0, r4
 800a59a:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800a59c:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800a5a0:	9903      	ldr	r1, [sp, #12]
 800a5a2:	f013 0f04 	tst.w	r3, #4
 800a5a6:	d0de      	beq.n	800a566 <prvSampleTimeNow+0x1e>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 800a5a8:	69a3      	ldr	r3, [r4, #24]
 800a5aa:	4453      	add	r3, sl
			if( xReloadTime > xNextExpireTime )
 800a5ac:	459a      	cmp	sl, r3
 800a5ae:	d205      	bcs.n	800a5bc <prvSampleTimeNow+0x74>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a5b0:	6838      	ldr	r0, [r7, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 800a5b2:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800a5b4:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a5b6:	f7fe fadb 	bl	8008b70 <vListInsert>
 800a5ba:	e7d4      	b.n	800a566 <prvSampleTimeNow+0x1e>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800a5bc:	2300      	movs	r3, #0
 800a5be:	f8cd 9000 	str.w	r9, [sp]
 800a5c2:	4652      	mov	r2, sl
 800a5c4:	4619      	mov	r1, r3
 800a5c6:	4620      	mov	r0, r4
 800a5c8:	f7ff ff92 	bl	800a4f0 <xTimerGenericCommand>
				configASSERT( xResult );
 800a5cc:	2800      	cmp	r0, #0
 800a5ce:	d1ca      	bne.n	800a566 <prvSampleTimeNow+0x1e>
 800a5d0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a5d4:	f383 8811 	msr	BASEPRI, r3
 800a5d8:	f3bf 8f6f 	isb	sy
 800a5dc:	f3bf 8f4f 	dsb	sy
 800a5e0:	e7fe      	b.n	800a5e0 <prvSampleTimeNow+0x98>
		*pxTimerListsWereSwitched = pdFALSE;
 800a5e2:	2300      	movs	r3, #0
 800a5e4:	e7c7      	b.n	800a576 <prvSampleTimeNow+0x2e>
 800a5e6:	bf00      	nop
 800a5e8:	2001547c 	.word	0x2001547c
 800a5ec:	20015480 	.word	0x20015480
 800a5f0:	2001554c 	.word	0x2001554c

0800a5f4 <prvTimerTask>:
{
 800a5f4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a5f8:	4d6e      	ldr	r5, [pc, #440]	; (800a7b4 <prvTimerTask+0x1c0>)
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800a5fa:	4e6f      	ldr	r6, [pc, #444]	; (800a7b8 <prvTimerTask+0x1c4>)
{
 800a5fc:	b089      	sub	sp, #36	; 0x24
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a5fe:	682b      	ldr	r3, [r5, #0]
 800a600:	f8d3 8000 	ldr.w	r8, [r3]
 800a604:	f1b8 0f00 	cmp.w	r8, #0
 800a608:	d035      	beq.n	800a676 <prvTimerTask+0x82>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800a60a:	68db      	ldr	r3, [r3, #12]
 800a60c:	f8d3 8000 	ldr.w	r8, [r3]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a610:	2400      	movs	r4, #0
	vTaskSuspendAll();
 800a612:	f7ff fbaf 	bl	8009d74 <vTaskSuspendAll>
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a616:	a804      	add	r0, sp, #16
 800a618:	f7ff ff96 	bl	800a548 <prvSampleTimeNow>
		if( xTimerListsWereSwitched == pdFALSE )
 800a61c:	9b04      	ldr	r3, [sp, #16]
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a61e:	4681      	mov	r9, r0
		if( xTimerListsWereSwitched == pdFALSE )
 800a620:	2b00      	cmp	r3, #0
 800a622:	d169      	bne.n	800a6f8 <prvTimerTask+0x104>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800a624:	2c00      	cmp	r4, #0
 800a626:	d14c      	bne.n	800a6c2 <prvTimerTask+0xce>
 800a628:	4540      	cmp	r0, r8
 800a62a:	d350      	bcc.n	800a6ce <prvTimerTask+0xda>
				( void ) xTaskResumeAll();
 800a62c:	f7ff fc46 	bl	8009ebc <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a630:	682b      	ldr	r3, [r5, #0]
 800a632:	68db      	ldr	r3, [r3, #12]
 800a634:	68df      	ldr	r7, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800a636:	1d38      	adds	r0, r7, #4
 800a638:	f7fe fab1 	bl	8008b9e <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800a63c:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800a640:	0758      	lsls	r0, r3, #29
 800a642:	d51a      	bpl.n	800a67a <prvTimerTask+0x86>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800a644:	69b9      	ldr	r1, [r7, #24]
 800a646:	4643      	mov	r3, r8
 800a648:	464a      	mov	r2, r9
 800a64a:	4441      	add	r1, r8
 800a64c:	4638      	mov	r0, r7
 800a64e:	f7ff feff 	bl	800a450 <prvInsertTimerInActiveList>
 800a652:	b1b0      	cbz	r0, 800a682 <prvTimerTask+0x8e>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800a654:	9400      	str	r4, [sp, #0]
 800a656:	4623      	mov	r3, r4
 800a658:	4642      	mov	r2, r8
 800a65a:	4621      	mov	r1, r4
 800a65c:	4638      	mov	r0, r7
 800a65e:	f7ff ff47 	bl	800a4f0 <xTimerGenericCommand>
			configASSERT( xResult );
 800a662:	b970      	cbnz	r0, 800a682 <prvTimerTask+0x8e>
 800a664:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a668:	f383 8811 	msr	BASEPRI, r3
 800a66c:	f3bf 8f6f 	isb	sy
 800a670:	f3bf 8f4f 	dsb	sy
 800a674:	e7fe      	b.n	800a674 <prvTimerTask+0x80>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a676:	2401      	movs	r4, #1
 800a678:	e7cb      	b.n	800a612 <prvTimerTask+0x1e>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800a67a:	f023 0301 	bic.w	r3, r3, #1
 800a67e:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a682:	6a3b      	ldr	r3, [r7, #32]
 800a684:	4638      	mov	r0, r7
 800a686:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800a688:	6830      	ldr	r0, [r6, #0]
 800a68a:	2200      	movs	r2, #0
 800a68c:	a904      	add	r1, sp, #16
 800a68e:	f7fe ff2f 	bl	80094f0 <xQueueReceive>
 800a692:	2800      	cmp	r0, #0
 800a694:	d0b3      	beq.n	800a5fe <prvTimerTask+0xa>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800a696:	9b04      	ldr	r3, [sp, #16]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800a698:	9806      	ldr	r0, [sp, #24]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800a69a:	2b00      	cmp	r3, #0
 800a69c:	db2f      	blt.n	800a6fe <prvTimerTask+0x10a>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 800a69e:	9c06      	ldr	r4, [sp, #24]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 800a6a0:	6963      	ldr	r3, [r4, #20]
 800a6a2:	2b00      	cmp	r3, #0
 800a6a4:	d132      	bne.n	800a70c <prvTimerTask+0x118>
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a6a6:	a803      	add	r0, sp, #12
 800a6a8:	f7ff ff4e 	bl	800a548 <prvSampleTimeNow>
			switch( xMessage.xMessageID )
 800a6ac:	9b04      	ldr	r3, [sp, #16]
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a6ae:	4602      	mov	r2, r0
			switch( xMessage.xMessageID )
 800a6b0:	2b09      	cmp	r3, #9
 800a6b2:	d8e9      	bhi.n	800a688 <prvTimerTask+0x94>
 800a6b4:	e8df f003 	tbb	[pc, r3]
 800a6b8:	572e2e2e 	.word	0x572e2e2e
 800a6bc:	2e2e765e 	.word	0x2e2e765e
 800a6c0:	5e57      	.short	0x5e57
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800a6c2:	4b3e      	ldr	r3, [pc, #248]	; (800a7bc <prvTimerTask+0x1c8>)
 800a6c4:	681b      	ldr	r3, [r3, #0]
 800a6c6:	681c      	ldr	r4, [r3, #0]
 800a6c8:	fab4 f484 	clz	r4, r4
 800a6cc:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800a6ce:	6830      	ldr	r0, [r6, #0]
 800a6d0:	4622      	mov	r2, r4
 800a6d2:	eba8 0109 	sub.w	r1, r8, r9
 800a6d6:	f7ff f8fa 	bl	80098ce <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 800a6da:	f7ff fbef 	bl	8009ebc <xTaskResumeAll>
 800a6de:	2800      	cmp	r0, #0
 800a6e0:	d1d2      	bne.n	800a688 <prvTimerTask+0x94>
					portYIELD_WITHIN_API();
 800a6e2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800a6e6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800a6ea:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800a6ee:	f3bf 8f4f 	dsb	sy
 800a6f2:	f3bf 8f6f 	isb	sy
 800a6f6:	e7c7      	b.n	800a688 <prvTimerTask+0x94>
			( void ) xTaskResumeAll();
 800a6f8:	f7ff fbe0 	bl	8009ebc <xTaskResumeAll>
}
 800a6fc:	e7c4      	b.n	800a688 <prvTimerTask+0x94>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800a6fe:	9b05      	ldr	r3, [sp, #20]
 800a700:	9907      	ldr	r1, [sp, #28]
 800a702:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 800a704:	9b04      	ldr	r3, [sp, #16]
 800a706:	2b00      	cmp	r3, #0
 800a708:	dbbe      	blt.n	800a688 <prvTimerTask+0x94>
 800a70a:	e7c8      	b.n	800a69e <prvTimerTask+0xaa>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800a70c:	1d20      	adds	r0, r4, #4
 800a70e:	f7fe fa46 	bl	8008b9e <uxListRemove>
 800a712:	e7c8      	b.n	800a6a6 <prvTimerTask+0xb2>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800a714:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800a718:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800a71a:	f043 0301 	orr.w	r3, r3, #1
 800a71e:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800a722:	9b05      	ldr	r3, [sp, #20]
 800a724:	4620      	mov	r0, r4
 800a726:	4419      	add	r1, r3
 800a728:	f7ff fe92 	bl	800a450 <prvInsertTimerInActiveList>
 800a72c:	2800      	cmp	r0, #0
 800a72e:	d0ab      	beq.n	800a688 <prvTimerTask+0x94>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a730:	6a23      	ldr	r3, [r4, #32]
 800a732:	4620      	mov	r0, r4
 800a734:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800a736:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800a73a:	0759      	lsls	r1, r3, #29
 800a73c:	d5a4      	bpl.n	800a688 <prvTimerTask+0x94>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800a73e:	69a2      	ldr	r2, [r4, #24]
 800a740:	9905      	ldr	r1, [sp, #20]
 800a742:	2300      	movs	r3, #0
 800a744:	440a      	add	r2, r1
 800a746:	9300      	str	r3, [sp, #0]
 800a748:	4619      	mov	r1, r3
 800a74a:	4620      	mov	r0, r4
 800a74c:	f7ff fed0 	bl	800a4f0 <xTimerGenericCommand>
							configASSERT( xResult );
 800a750:	2800      	cmp	r0, #0
 800a752:	d199      	bne.n	800a688 <prvTimerTask+0x94>
 800a754:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a758:	f383 8811 	msr	BASEPRI, r3
 800a75c:	f3bf 8f6f 	isb	sy
 800a760:	f3bf 8f4f 	dsb	sy
 800a764:	e7fe      	b.n	800a764 <prvTimerTask+0x170>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800a766:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800a76a:	f023 0301 	bic.w	r3, r3, #1
 800a76e:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 800a772:	e789      	b.n	800a688 <prvTimerTask+0x94>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800a774:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800a778:	f043 0301 	orr.w	r3, r3, #1
 800a77c:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 800a780:	9905      	ldr	r1, [sp, #20]
 800a782:	61a1      	str	r1, [r4, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800a784:	b941      	cbnz	r1, 800a798 <prvTimerTask+0x1a4>
 800a786:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a78a:	f383 8811 	msr	BASEPRI, r3
 800a78e:	f3bf 8f6f 	isb	sy
 800a792:	f3bf 8f4f 	dsb	sy
 800a796:	e7fe      	b.n	800a796 <prvTimerTask+0x1a2>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 800a798:	4603      	mov	r3, r0
 800a79a:	4401      	add	r1, r0
 800a79c:	4620      	mov	r0, r4
 800a79e:	f7ff fe57 	bl	800a450 <prvInsertTimerInActiveList>
					break;
 800a7a2:	e771      	b.n	800a688 <prvTimerTask+0x94>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 800a7a4:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800a7a8:	079a      	lsls	r2, r3, #30
 800a7aa:	d4de      	bmi.n	800a76a <prvTimerTask+0x176>
							vPortFree( pxTimer );
 800a7ac:	4620      	mov	r0, r4
 800a7ae:	f7fe f98d 	bl	8008acc <vPortFree>
 800a7b2:	e769      	b.n	800a688 <prvTimerTask+0x94>
 800a7b4:	2001547c 	.word	0x2001547c
 800a7b8:	200155a0 	.word	0x200155a0
 800a7bc:	20015480 	.word	0x20015480

0800a7c0 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800a7c0:	8880      	ldrh	r0, [r0, #4]
 800a7c2:	4770      	bx	lr

0800a7c4 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800a7c4:	b570      	push	{r4, r5, r6, lr}
 800a7c6:	6803      	ldr	r3, [r0, #0]
 800a7c8:	4605      	mov	r5, r0
 800a7ca:	460c      	mov	r4, r1
 800a7cc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a7ce:	2100      	movs	r1, #0
 800a7d0:	4798      	blx	r3
 800a7d2:	682b      	ldr	r3, [r5, #0]
 800a7d4:	4606      	mov	r6, r0
 800a7d6:	6a1b      	ldr	r3, [r3, #32]
 800a7d8:	4628      	mov	r0, r5
 800a7da:	4798      	blx	r3
 800a7dc:	1ba4      	subs	r4, r4, r6
 800a7de:	b2a4      	uxth	r4, r4
 800a7e0:	fbb4 f0f0 	udiv	r0, r4, r0
 800a7e4:	bd70      	pop	{r4, r5, r6, pc}

0800a7e6 <_ZN8touchgfx17AbstractPartition5clearEv>:
 800a7e6:	2300      	movs	r3, #0
 800a7e8:	8083      	strh	r3, [r0, #4]
 800a7ea:	4770      	bx	lr

0800a7ec <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800a7ec:	b510      	push	{r4, lr}
 800a7ee:	6803      	ldr	r3, [r0, #0]
 800a7f0:	8881      	ldrh	r1, [r0, #4]
 800a7f2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a7f4:	4604      	mov	r4, r0
 800a7f6:	4798      	blx	r3
 800a7f8:	88a3      	ldrh	r3, [r4, #4]
 800a7fa:	3301      	adds	r3, #1
 800a7fc:	80a3      	strh	r3, [r4, #4]
 800a7fe:	bd10      	pop	{r4, pc}

0800a800 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800a800:	6803      	ldr	r3, [r0, #0]
 800a802:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a804:	4718      	bx	r3

0800a806 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800a806:	4770      	bx	lr

0800a808 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800a808:	4a02      	ldr	r2, [pc, #8]	; (800a814 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800a80a:	6002      	str	r2, [r0, #0]
 800a80c:	2200      	movs	r2, #0
 800a80e:	8082      	strh	r2, [r0, #4]
 800a810:	4770      	bx	lr
 800a812:	bf00      	nop
 800a814:	080236a0 	.word	0x080236a0

0800a818 <_ZNK8touchgfx11ModalWindow18getBackgroundWidthEv>:
 800a818:	f8b0 008c 	ldrh.w	r0, [r0, #140]	; 0x8c
 800a81c:	4770      	bx	lr

0800a81e <_ZNK8touchgfx11ModalWindow19getBackgroundHeightEv>:
 800a81e:	f8b0 008e 	ldrh.w	r0, [r0, #142]	; 0x8e
 800a822:	4770      	bx	lr

0800a824 <_ZNK8touchgfx11ModalWindow13getShadeAlphaEv>:
 800a824:	f890 0052 	ldrb.w	r0, [r0, #82]	; 0x52
 800a828:	4770      	bx	lr

0800a82a <_ZNK8touchgfx11ModalWindow13getShadeColorEv>:
 800a82a:	6d40      	ldr	r0, [r0, #84]	; 0x54
 800a82c:	4770      	bx	lr

0800a82e <_ZN8touchgfx11ModalWindow4showEv>:
 800a82e:	2201      	movs	r2, #1
 800a830:	6803      	ldr	r3, [r0, #0]
 800a832:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 800a836:	695b      	ldr	r3, [r3, #20]
 800a838:	4718      	bx	r3

0800a83a <_ZN8touchgfx11ModalWindow4hideEv>:
 800a83a:	b510      	push	{r4, lr}
 800a83c:	6803      	ldr	r3, [r0, #0]
 800a83e:	4604      	mov	r4, r0
 800a840:	695b      	ldr	r3, [r3, #20]
 800a842:	4798      	blx	r3
 800a844:	2300      	movs	r3, #0
 800a846:	f884 3025 	strb.w	r3, [r4, #37]	; 0x25
 800a84a:	bd10      	pop	{r4, pc}

0800a84c <_ZN8touchgfx11ModalWindowD1Ev>:
 800a84c:	4770      	bx	lr

0800a84e <_ZN8touchgfx11ModalWindow3addERNS_8DrawableE>:
 800a84e:	3058      	adds	r0, #88	; 0x58
 800a850:	f000 b904 	b.w	800aa5c <_ZN8touchgfx9Container3addERNS_8DrawableE>

0800a854 <_ZN8touchgfx11ModalWindow13setShadeColorENS_9colortypeE>:
 800a854:	6541      	str	r1, [r0, #84]	; 0x54
 800a856:	302c      	adds	r0, #44	; 0x2c
 800a858:	f007 bbb9 	b.w	8011fce <_ZNK8touchgfx8Drawable10invalidateEv>

0800a85c <_ZN8touchgfx11ModalWindow13setShadeAlphaEh>:
 800a85c:	f880 1052 	strb.w	r1, [r0, #82]	; 0x52
 800a860:	302c      	adds	r0, #44	; 0x2c
 800a862:	f007 bbb4 	b.w	8011fce <_ZNK8touchgfx8Drawable10invalidateEv>

0800a866 <_ZN8touchgfx11ModalWindow6removeERNS_8DrawableE>:
 800a866:	3058      	adds	r0, #88	; 0x58
 800a868:	f000 b943 	b.w	800aaf2 <_ZN8touchgfx9Container6removeERNS_8DrawableE>

0800a86c <_ZN8touchgfx11ModalWindowD0Ev>:
 800a86c:	b510      	push	{r4, lr}
 800a86e:	21b0      	movs	r1, #176	; 0xb0
 800a870:	4604      	mov	r4, r0
 800a872:	f015 ff31 	bl	80206d8 <_ZdlPvj>
 800a876:	4620      	mov	r0, r4
 800a878:	bd10      	pop	{r4, pc}
	...

0800a87c <_ZN8touchgfx8DrawableC1Ev>:
 800a87c:	4a0a      	ldr	r2, [pc, #40]	; (800a8a8 <_ZN8touchgfx8DrawableC1Ev+0x2c>)
 800a87e:	6002      	str	r2, [r0, #0]
 800a880:	2200      	movs	r2, #0
 800a882:	8082      	strh	r2, [r0, #4]
 800a884:	80c2      	strh	r2, [r0, #6]
 800a886:	8102      	strh	r2, [r0, #8]
 800a888:	8142      	strh	r2, [r0, #10]
 800a88a:	8182      	strh	r2, [r0, #12]
 800a88c:	81c2      	strh	r2, [r0, #14]
 800a88e:	8202      	strh	r2, [r0, #16]
 800a890:	8242      	strh	r2, [r0, #18]
 800a892:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800a896:	61c2      	str	r2, [r0, #28]
 800a898:	8402      	strh	r2, [r0, #32]
 800a89a:	8442      	strh	r2, [r0, #34]	; 0x22
 800a89c:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800a8a0:	2201      	movs	r2, #1
 800a8a2:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 800a8a6:	4770      	bx	lr
 800a8a8:	080242dc 	.word	0x080242dc

0800a8ac <_ZN8touchgfx11ModalWindow13setBackgroundERKtss>:
 800a8ac:	b570      	push	{r4, r5, r6, lr}
 800a8ae:	4604      	mov	r4, r0
 800a8b0:	461e      	mov	r6, r3
 800a8b2:	f854 3b58 	ldr.w	r3, [r4], #88
 800a8b6:	4615      	mov	r5, r2
 800a8b8:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800a8bc:	4798      	blx	r3
 800a8be:	4632      	mov	r2, r6
 800a8c0:	4629      	mov	r1, r5
 800a8c2:	4620      	mov	r0, r4
 800a8c4:	f7f8 f9bc 	bl	8002c40 <_ZN8touchgfx8Drawable5setXYEss>
 800a8c8:	bd70      	pop	{r4, r5, r6, pc}

0800a8ca <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 800a8ca:	b570      	push	{r4, r5, r6, lr}
 800a8cc:	6803      	ldr	r3, [r0, #0]
 800a8ce:	4604      	mov	r4, r0
 800a8d0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a8d2:	4615      	mov	r5, r2
 800a8d4:	4798      	blx	r3
 800a8d6:	6823      	ldr	r3, [r4, #0]
 800a8d8:	4629      	mov	r1, r5
 800a8da:	4620      	mov	r0, r4
 800a8dc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800a8de:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a8e2:	4718      	bx	r3

0800a8e4 <_ZN8touchgfx11ModalWindow13setBackgroundERKt>:
 800a8e4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800a8e6:	880b      	ldrh	r3, [r1, #0]
 800a8e8:	a902      	add	r1, sp, #8
 800a8ea:	f100 0584 	add.w	r5, r0, #132	; 0x84
 800a8ee:	4604      	mov	r4, r0
 800a8f0:	f821 3d04 	strh.w	r3, [r1, #-4]!
 800a8f4:	4628      	mov	r0, r5
 800a8f6:	f003 ff25 	bl	800e744 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800a8fa:	2200      	movs	r2, #0
 800a8fc:	4611      	mov	r1, r2
 800a8fe:	4628      	mov	r0, r5
 800a900:	f7f8 f99e 	bl	8002c40 <_ZN8touchgfx8Drawable5setXYEss>
 800a904:	f9b4 608c 	ldrsh.w	r6, [r4, #140]	; 0x8c
 800a908:	f9b4 708e 	ldrsh.w	r7, [r4, #142]	; 0x8e
 800a90c:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 800a910:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800a914:	f104 0558 	add.w	r5, r4, #88	; 0x58
 800a918:	2302      	movs	r3, #2
 800a91a:	4628      	mov	r0, r5
 800a91c:	1bd2      	subs	r2, r2, r7
 800a91e:	1b89      	subs	r1, r1, r6
 800a920:	fb92 f2f3 	sdiv	r2, r2, r3
 800a924:	fb91 f1f3 	sdiv	r1, r1, r3
 800a928:	b212      	sxth	r2, r2
 800a92a:	b209      	sxth	r1, r1
 800a92c:	f7f8 f988 	bl	8002c40 <_ZN8touchgfx8Drawable5setXYEss>
 800a930:	463a      	mov	r2, r7
 800a932:	4631      	mov	r1, r6
 800a934:	4628      	mov	r0, r5
 800a936:	f7ff ffc8 	bl	800a8ca <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800a93a:	6823      	ldr	r3, [r4, #0]
 800a93c:	4620      	mov	r0, r4
 800a93e:	695b      	ldr	r3, [r3, #20]
 800a940:	4798      	blx	r3
 800a942:	b003      	add	sp, #12
 800a944:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0800a948 <_ZN8touchgfx11ModalWindowC1Ev>:
 800a948:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800a94c:	4604      	mov	r4, r0
 800a94e:	4625      	mov	r5, r4
 800a950:	f7ff ff94 	bl	800a87c <_ZN8touchgfx8DrawableC1Ev>
 800a954:	2600      	movs	r6, #0
 800a956:	4b36      	ldr	r3, [pc, #216]	; (800aa30 <_ZN8touchgfx11ModalWindowC1Ev+0xe8>)
 800a958:	62a6      	str	r6, [r4, #40]	; 0x28
 800a95a:	f845 3b2c 	str.w	r3, [r5], #44
 800a95e:	f04f 0a26 	mov.w	sl, #38	; 0x26
 800a962:	4652      	mov	r2, sl
 800a964:	4631      	mov	r1, r6
 800a966:	4628      	mov	r0, r5
 800a968:	f016 f8f0 	bl	8020b4c <memset>
 800a96c:	4628      	mov	r0, r5
 800a96e:	f7ff ff85 	bl	800a87c <_ZN8touchgfx8DrawableC1Ev>
 800a972:	f104 0858 	add.w	r8, r4, #88	; 0x58
 800a976:	4b2f      	ldr	r3, [pc, #188]	; (800aa34 <_ZN8touchgfx11ModalWindowC1Ev+0xec>)
 800a978:	62e3      	str	r3, [r4, #44]	; 0x2c
 800a97a:	f04f 09ff 	mov.w	r9, #255	; 0xff
 800a97e:	f884 9052 	strb.w	r9, [r4, #82]	; 0x52
 800a982:	6566      	str	r6, [r4, #84]	; 0x54
 800a984:	4640      	mov	r0, r8
 800a986:	f7ff ff79 	bl	800a87c <_ZN8touchgfx8DrawableC1Ev>
 800a98a:	f104 0784 	add.w	r7, r4, #132	; 0x84
 800a98e:	4b2a      	ldr	r3, [pc, #168]	; (800aa38 <_ZN8touchgfx11ModalWindowC1Ev+0xf0>)
 800a990:	65a3      	str	r3, [r4, #88]	; 0x58
 800a992:	4652      	mov	r2, sl
 800a994:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800a998:	4631      	mov	r1, r6
 800a99a:	f8c4 6080 	str.w	r6, [r4, #128]	; 0x80
 800a99e:	4638      	mov	r0, r7
 800a9a0:	f8ad 3004 	strh.w	r3, [sp, #4]
 800a9a4:	f016 f8d2 	bl	8020b4c <memset>
 800a9a8:	4638      	mov	r0, r7
 800a9aa:	f7ff ff67 	bl	800a87c <_ZN8touchgfx8DrawableC1Ev>
 800a9ae:	a902      	add	r1, sp, #8
 800a9b0:	4b22      	ldr	r3, [pc, #136]	; (800aa3c <_ZN8touchgfx11ModalWindowC1Ev+0xf4>)
 800a9b2:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
 800a9b6:	f831 3d04 	ldrh.w	r3, [r1, #-4]!
 800a9ba:	f8a4 30aa 	strh.w	r3, [r4, #170]	; 0xaa
 800a9be:	f884 90ac 	strb.w	r9, [r4, #172]	; 0xac
 800a9c2:	4638      	mov	r0, r7
 800a9c4:	f003 febe 	bl	800e744 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800a9c8:	4b1d      	ldr	r3, [pc, #116]	; (800aa40 <_ZN8touchgfx11ModalWindowC1Ev+0xf8>)
 800a9ca:	f9b3 2000 	ldrsh.w	r2, [r3]
 800a9ce:	4b1d      	ldr	r3, [pc, #116]	; (800aa44 <_ZN8touchgfx11ModalWindowC1Ev+0xfc>)
 800a9d0:	4620      	mov	r0, r4
 800a9d2:	f9b3 1000 	ldrsh.w	r1, [r3]
 800a9d6:	f7ff ff78 	bl	800a8ca <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800a9da:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 800a9de:	f9b4 a00a 	ldrsh.w	sl, [r4, #10]
 800a9e2:	4632      	mov	r2, r6
 800a9e4:	4631      	mov	r1, r6
 800a9e6:	4628      	mov	r0, r5
 800a9e8:	f7f8 f92a 	bl	8002c40 <_ZN8touchgfx8Drawable5setXYEss>
 800a9ec:	4652      	mov	r2, sl
 800a9ee:	4649      	mov	r1, r9
 800a9f0:	4628      	mov	r0, r5
 800a9f2:	f7ff ff6a 	bl	800a8ca <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800a9f6:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800a9fa:	6563      	str	r3, [r4, #84]	; 0x54
 800a9fc:	2301      	movs	r3, #1
 800a9fe:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
 800aa02:	2360      	movs	r3, #96	; 0x60
 800aa04:	f884 3052 	strb.w	r3, [r4, #82]	; 0x52
 800aa08:	4628      	mov	r0, r5
 800aa0a:	f007 fae0 	bl	8011fce <_ZNK8touchgfx8Drawable10invalidateEv>
 800aa0e:	4629      	mov	r1, r5
 800aa10:	4620      	mov	r0, r4
 800aa12:	f000 f823 	bl	800aa5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800aa16:	4641      	mov	r1, r8
 800aa18:	4620      	mov	r0, r4
 800aa1a:	f000 f81f 	bl	800aa5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800aa1e:	4640      	mov	r0, r8
 800aa20:	4639      	mov	r1, r7
 800aa22:	f000 f81b 	bl	800aa5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800aa26:	4620      	mov	r0, r4
 800aa28:	b002      	add	sp, #8
 800aa2a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800aa2e:	bf00      	nop
 800aa30:	080236d4 	.word	0x080236d4
 800aa34:	0802405c 	.word	0x0802405c
 800aa38:	0802378c 	.word	0x0802378c
 800aa3c:	080241a0 	.word	0x080241a0
 800aa40:	200155aa 	.word	0x200155aa
 800aa44:	200155a8 	.word	0x200155a8

0800aa48 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800aa48:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800aa4a:	2000      	movs	r0, #0
 800aa4c:	b12b      	cbz	r3, 800aa5a <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800aa4e:	b920      	cbnz	r0, 800aa5a <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800aa50:	1a5a      	subs	r2, r3, r1
 800aa52:	4250      	negs	r0, r2
 800aa54:	4150      	adcs	r0, r2
 800aa56:	699b      	ldr	r3, [r3, #24]
 800aa58:	e7f8      	b.n	800aa4c <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800aa5a:	4770      	bx	lr

0800aa5c <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800aa5c:	2300      	movs	r3, #0
 800aa5e:	6148      	str	r0, [r1, #20]
 800aa60:	618b      	str	r3, [r1, #24]
 800aa62:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800aa64:	b913      	cbnz	r3, 800aa6c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 800aa66:	6281      	str	r1, [r0, #40]	; 0x28
 800aa68:	4770      	bx	lr
 800aa6a:	4613      	mov	r3, r2
 800aa6c:	699a      	ldr	r2, [r3, #24]
 800aa6e:	2a00      	cmp	r2, #0
 800aa70:	d1fb      	bne.n	800aa6a <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 800aa72:	6199      	str	r1, [r3, #24]
 800aa74:	4770      	bx	lr

0800aa76 <_ZN8touchgfx9Container9removeAllEv>:
 800aa76:	2200      	movs	r2, #0
 800aa78:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800aa7a:	b123      	cbz	r3, 800aa86 <_ZN8touchgfx9Container9removeAllEv+0x10>
 800aa7c:	6999      	ldr	r1, [r3, #24]
 800aa7e:	6281      	str	r1, [r0, #40]	; 0x28
 800aa80:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800aa84:	e7f8      	b.n	800aa78 <_ZN8touchgfx9Container9removeAllEv+0x2>
 800aa86:	4770      	bx	lr

0800aa88 <_ZN8touchgfx9Container6unlinkEv>:
 800aa88:	2300      	movs	r3, #0
 800aa8a:	6283      	str	r3, [r0, #40]	; 0x28
 800aa8c:	4770      	bx	lr

0800aa8e <_ZNK8touchgfx9Container12getSolidRectEv>:
 800aa8e:	2200      	movs	r2, #0
 800aa90:	8002      	strh	r2, [r0, #0]
 800aa92:	8042      	strh	r2, [r0, #2]
 800aa94:	8082      	strh	r2, [r0, #4]
 800aa96:	80c2      	strh	r2, [r0, #6]
 800aa98:	4770      	bx	lr

0800aa9a <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800aa9a:	b570      	push	{r4, r5, r6, lr}
 800aa9c:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800aa9e:	460d      	mov	r5, r1
 800aaa0:	4616      	mov	r6, r2
 800aaa2:	b13c      	cbz	r4, 800aab4 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800aaa4:	6823      	ldr	r3, [r4, #0]
 800aaa6:	4620      	mov	r0, r4
 800aaa8:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800aaaa:	4632      	mov	r2, r6
 800aaac:	4629      	mov	r1, r5
 800aaae:	4798      	blx	r3
 800aab0:	69a4      	ldr	r4, [r4, #24]
 800aab2:	e7f6      	b.n	800aaa2 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800aab4:	bd70      	pop	{r4, r5, r6, pc}

0800aab6 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800aab6:	b538      	push	{r3, r4, r5, lr}
 800aab8:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800aaba:	460d      	mov	r5, r1
 800aabc:	b134      	cbz	r4, 800aacc <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800aabe:	682b      	ldr	r3, [r5, #0]
 800aac0:	4621      	mov	r1, r4
 800aac2:	689b      	ldr	r3, [r3, #8]
 800aac4:	4628      	mov	r0, r5
 800aac6:	4798      	blx	r3
 800aac8:	69a4      	ldr	r4, [r4, #24]
 800aaca:	e7f7      	b.n	800aabc <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800aacc:	bd38      	pop	{r3, r4, r5, pc}

0800aace <_ZNK8touchgfx9Container17invalidateContentEv>:
 800aace:	b510      	push	{r4, lr}
 800aad0:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800aad2:	b12c      	cbz	r4, 800aae0 <_ZNK8touchgfx9Container17invalidateContentEv+0x12>
 800aad4:	6823      	ldr	r3, [r4, #0]
 800aad6:	4620      	mov	r0, r4
 800aad8:	699b      	ldr	r3, [r3, #24]
 800aada:	4798      	blx	r3
 800aadc:	69a4      	ldr	r4, [r4, #24]
 800aade:	e7f8      	b.n	800aad2 <_ZNK8touchgfx9Container17invalidateContentEv+0x4>
 800aae0:	bd10      	pop	{r4, pc}

0800aae2 <_ZN8touchgfx9ContainerD1Ev>:
 800aae2:	4770      	bx	lr

0800aae4 <_ZN8touchgfx9ContainerD0Ev>:
 800aae4:	b510      	push	{r4, lr}
 800aae6:	212c      	movs	r1, #44	; 0x2c
 800aae8:	4604      	mov	r4, r0
 800aaea:	f015 fdf5 	bl	80206d8 <_ZdlPvj>
 800aaee:	4620      	mov	r0, r4
 800aaf0:	bd10      	pop	{r4, pc}

0800aaf2 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800aaf2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800aaf4:	b19b      	cbz	r3, 800ab1e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800aaf6:	428b      	cmp	r3, r1
 800aaf8:	d109      	bne.n	800ab0e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800aafa:	699a      	ldr	r2, [r3, #24]
 800aafc:	2100      	movs	r1, #0
 800aafe:	6159      	str	r1, [r3, #20]
 800ab00:	6282      	str	r2, [r0, #40]	; 0x28
 800ab02:	b902      	cbnz	r2, 800ab06 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800ab04:	4770      	bx	lr
 800ab06:	6199      	str	r1, [r3, #24]
 800ab08:	4770      	bx	lr
 800ab0a:	4613      	mov	r3, r2
 800ab0c:	b13a      	cbz	r2, 800ab1e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800ab0e:	699a      	ldr	r2, [r3, #24]
 800ab10:	428a      	cmp	r2, r1
 800ab12:	d1fa      	bne.n	800ab0a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800ab14:	698a      	ldr	r2, [r1, #24]
 800ab16:	619a      	str	r2, [r3, #24]
 800ab18:	2300      	movs	r3, #0
 800ab1a:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800ab1e:	4770      	bx	lr

0800ab20 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800ab20:	b410      	push	{r4}
 800ab22:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800ab24:	4604      	mov	r4, r0
 800ab26:	b92b      	cbnz	r3, 800ab34 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800ab28:	6803      	ldr	r3, [r0, #0]
 800ab2a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800ab2e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800ab30:	4611      	mov	r1, r2
 800ab32:	4718      	bx	r3
 800ab34:	b941      	cbnz	r1, 800ab48 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800ab36:	6193      	str	r3, [r2, #24]
 800ab38:	6282      	str	r2, [r0, #40]	; 0x28
 800ab3a:	6154      	str	r4, [r2, #20]
 800ab3c:	f85d 4b04 	ldr.w	r4, [sp], #4
 800ab40:	4770      	bx	lr
 800ab42:	4603      	mov	r3, r0
 800ab44:	2800      	cmp	r0, #0
 800ab46:	d0f9      	beq.n	800ab3c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800ab48:	4299      	cmp	r1, r3
 800ab4a:	6998      	ldr	r0, [r3, #24]
 800ab4c:	d1f9      	bne.n	800ab42 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800ab4e:	6190      	str	r0, [r2, #24]
 800ab50:	618a      	str	r2, [r1, #24]
 800ab52:	e7f2      	b.n	800ab3a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

0800ab54 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800ab54:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ab58:	461f      	mov	r7, r3
 800ab5a:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 800ab5e:	460d      	mov	r5, r1
 800ab60:	4616      	mov	r6, r2
 800ab62:	b103      	cbz	r3, 800ab66 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800ab64:	6038      	str	r0, [r7, #0]
 800ab66:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800ab68:	b314      	cbz	r4, 800abb0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800ab6a:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800ab6e:	b1eb      	cbz	r3, 800abac <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800ab70:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800ab74:	428d      	cmp	r5, r1
 800ab76:	db19      	blt.n	800abac <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800ab78:	8923      	ldrh	r3, [r4, #8]
 800ab7a:	b289      	uxth	r1, r1
 800ab7c:	440b      	add	r3, r1
 800ab7e:	b21b      	sxth	r3, r3
 800ab80:	429d      	cmp	r5, r3
 800ab82:	da13      	bge.n	800abac <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800ab84:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800ab88:	4296      	cmp	r6, r2
 800ab8a:	db0f      	blt.n	800abac <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800ab8c:	8963      	ldrh	r3, [r4, #10]
 800ab8e:	b292      	uxth	r2, r2
 800ab90:	4413      	add	r3, r2
 800ab92:	b21b      	sxth	r3, r3
 800ab94:	429e      	cmp	r6, r3
 800ab96:	da09      	bge.n	800abac <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800ab98:	6823      	ldr	r3, [r4, #0]
 800ab9a:	1ab2      	subs	r2, r6, r2
 800ab9c:	1a69      	subs	r1, r5, r1
 800ab9e:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 800aba2:	b212      	sxth	r2, r2
 800aba4:	463b      	mov	r3, r7
 800aba6:	b209      	sxth	r1, r1
 800aba8:	4620      	mov	r0, r4
 800abaa:	47c0      	blx	r8
 800abac:	69a4      	ldr	r4, [r4, #24]
 800abae:	e7db      	b.n	800ab68 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800abb0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800abb4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 800abb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800abb8:	4c6e      	ldr	r4, [pc, #440]	; (800ad74 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 800abba:	b0a1      	sub	sp, #132	; 0x84
 800abbc:	6824      	ldr	r4, [r4, #0]
 800abbe:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 800abc0:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 800abc4:	9303      	str	r3, [sp, #12]
 800abc6:	2400      	movs	r4, #0
 800abc8:	802c      	strh	r4, [r5, #0]
 800abca:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 800abcc:	802c      	strh	r4, [r5, #0]
 800abce:	601c      	str	r4, [r3, #0]
 800abd0:	4606      	mov	r6, r0
 800abd2:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800abd6:	f7ff ffbd 	bl	800ab54 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800abda:	f1b9 0f03 	cmp.w	r9, #3
 800abde:	f340 80c2 	ble.w	800ad66 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 800abe2:	4631      	mov	r1, r6
 800abe4:	a80c      	add	r0, sp, #48	; 0x30
 800abe6:	f007 fa8d 	bl	8012104 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800abea:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 800abee:	9306      	str	r3, [sp, #24]
 800abf0:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 800abf4:	9307      	str	r3, [sp, #28]
 800abf6:	9b03      	ldr	r3, [sp, #12]
 800abf8:	f8d3 a000 	ldr.w	sl, [r3]
 800abfc:	f1ba 0f00 	cmp.w	sl, #0
 800ac00:	f000 80b4 	beq.w	800ad6c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 800ac04:	4651      	mov	r1, sl
 800ac06:	a810      	add	r0, sp, #64	; 0x40
 800ac08:	f007 fa7c 	bl	8012104 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ac0c:	9b01      	ldr	r3, [sp, #4]
 800ac0e:	9a06      	ldr	r2, [sp, #24]
 800ac10:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 800ac14:	189d      	adds	r5, r3, r2
 800ac16:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 800ac1a:	9a07      	ldr	r2, [sp, #28]
 800ac1c:	2002      	movs	r0, #2
 800ac1e:	fb91 f1f0 	sdiv	r1, r1, r0
 800ac22:	4419      	add	r1, r3
 800ac24:	1a6d      	subs	r5, r5, r1
 800ac26:	9b02      	ldr	r3, [sp, #8]
 800ac28:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800ac2c:	4413      	add	r3, r2
 800ac2e:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 800ac32:	fb92 f2f0 	sdiv	r2, r2, r0
 800ac36:	440a      	add	r2, r1
 800ac38:	1a9b      	subs	r3, r3, r2
 800ac3a:	435b      	muls	r3, r3
 800ac3c:	fb05 3505 	mla	r5, r5, r5, r3
 800ac40:	4f4d      	ldr	r7, [pc, #308]	; (800ad78 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 800ac42:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800ac44:	ac10      	add	r4, sp, #64	; 0x40
 800ac46:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800ac48:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800ac4a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800ac4c:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800ac4e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800ac50:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 800ac54:	f1b9 0f0c 	cmp.w	r9, #12
 800ac58:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800ac5c:	f04f 0303 	mov.w	r3, #3
 800ac60:	bfc8      	it	gt
 800ac62:	4698      	movgt	r8, r3
 800ac64:	f8cd 9000 	str.w	r9, [sp]
 800ac68:	f04f 0400 	mov.w	r4, #0
 800ac6c:	bfdc      	itt	le
 800ac6e:	f109 32ff 	addle.w	r2, r9, #4294967295
 800ac72:	fb92 f8f3 	sdivle	r8, r2, r3
 800ac76:	1c63      	adds	r3, r4, #1
 800ac78:	aa10      	add	r2, sp, #64	; 0x40
 800ac7a:	f004 0401 	and.w	r4, r4, #1
 800ac7e:	9308      	str	r3, [sp, #32]
 800ac80:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 800ac84:	9b00      	ldr	r3, [sp, #0]
 800ac86:	fb93 f3f8 	sdiv	r3, r3, r8
 800ac8a:	b29b      	uxth	r3, r3
 800ac8c:	3404      	adds	r4, #4
 800ac8e:	f04f 0b00 	mov.w	fp, #0
 800ac92:	9304      	str	r3, [sp, #16]
 800ac94:	9a04      	ldr	r2, [sp, #16]
 800ac96:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800ac9a:	fb13 f302 	smulbb	r3, r3, r2
 800ac9e:	9a01      	ldr	r2, [sp, #4]
 800aca0:	b29b      	uxth	r3, r3
 800aca2:	1899      	adds	r1, r3, r2
 800aca4:	9305      	str	r3, [sp, #20]
 800aca6:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800acaa:	b209      	sxth	r1, r1
 800acac:	4299      	cmp	r1, r3
 800acae:	db4d      	blt.n	800ad4c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800acb0:	8932      	ldrh	r2, [r6, #8]
 800acb2:	4413      	add	r3, r2
 800acb4:	b21b      	sxth	r3, r3
 800acb6:	4299      	cmp	r1, r3
 800acb8:	da48      	bge.n	800ad4c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800acba:	9b04      	ldr	r3, [sp, #16]
 800acbc:	6827      	ldr	r7, [r4, #0]
 800acbe:	fb17 f703 	smulbb	r7, r7, r3
 800acc2:	9b02      	ldr	r3, [sp, #8]
 800acc4:	b2bf      	uxth	r7, r7
 800acc6:	18fa      	adds	r2, r7, r3
 800acc8:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800accc:	b212      	sxth	r2, r2
 800acce:	429a      	cmp	r2, r3
 800acd0:	db3c      	blt.n	800ad4c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800acd2:	8970      	ldrh	r0, [r6, #10]
 800acd4:	4403      	add	r3, r0
 800acd6:	b21b      	sxth	r3, r3
 800acd8:	429a      	cmp	r2, r3
 800acda:	da37      	bge.n	800ad4c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800acdc:	2300      	movs	r3, #0
 800acde:	930b      	str	r3, [sp, #44]	; 0x2c
 800ace0:	4630      	mov	r0, r6
 800ace2:	ab0b      	add	r3, sp, #44	; 0x2c
 800ace4:	f7ff ff36 	bl	800ab54 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800ace8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800acea:	b37a      	cbz	r2, 800ad4c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800acec:	4552      	cmp	r2, sl
 800acee:	d02d      	beq.n	800ad4c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800acf0:	4611      	mov	r1, r2
 800acf2:	a80e      	add	r0, sp, #56	; 0x38
 800acf4:	9209      	str	r2, [sp, #36]	; 0x24
 800acf6:	f007 fa05 	bl	8012104 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800acfa:	9a06      	ldr	r2, [sp, #24]
 800acfc:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 800ad00:	9b01      	ldr	r3, [sp, #4]
 800ad02:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 800ad06:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 800ad0a:	4413      	add	r3, r2
 800ad0c:	f04f 0e02 	mov.w	lr, #2
 800ad10:	fb91 f1fe 	sdiv	r1, r1, lr
 800ad14:	4401      	add	r1, r0
 800ad16:	1a58      	subs	r0, r3, r1
 800ad18:	9a07      	ldr	r2, [sp, #28]
 800ad1a:	9b02      	ldr	r3, [sp, #8]
 800ad1c:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 800ad20:	fb9c fcfe 	sdiv	ip, ip, lr
 800ad24:	4413      	add	r3, r2
 800ad26:	448c      	add	ip, r1
 800ad28:	eba3 030c 	sub.w	r3, r3, ip
 800ad2c:	435b      	muls	r3, r3
 800ad2e:	fb00 3300 	mla	r3, r0, r0, r3
 800ad32:	42ab      	cmp	r3, r5
 800ad34:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800ad36:	d208      	bcs.n	800ad4a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 800ad38:	9803      	ldr	r0, [sp, #12]
 800ad3a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800ad3c:	6001      	str	r1, [r0, #0]
 800ad3e:	992a      	ldr	r1, [sp, #168]	; 0xa8
 800ad40:	9805      	ldr	r0, [sp, #20]
 800ad42:	8008      	strh	r0, [r1, #0]
 800ad44:	992b      	ldr	r1, [sp, #172]	; 0xac
 800ad46:	461d      	mov	r5, r3
 800ad48:	800f      	strh	r7, [r1, #0]
 800ad4a:	4692      	mov	sl, r2
 800ad4c:	f10b 0b01 	add.w	fp, fp, #1
 800ad50:	f1bb 0f04 	cmp.w	fp, #4
 800ad54:	f104 0408 	add.w	r4, r4, #8
 800ad58:	d19c      	bne.n	800ac94 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 800ad5a:	9b00      	ldr	r3, [sp, #0]
 800ad5c:	9c08      	ldr	r4, [sp, #32]
 800ad5e:	444b      	add	r3, r9
 800ad60:	4544      	cmp	r4, r8
 800ad62:	9300      	str	r3, [sp, #0]
 800ad64:	d187      	bne.n	800ac76 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 800ad66:	b021      	add	sp, #132	; 0x84
 800ad68:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ad6c:	f04f 35ff 	mov.w	r5, #4294967295
 800ad70:	e766      	b.n	800ac40 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 800ad72:	bf00      	nop
 800ad74:	200155b4 	.word	0x200155b4
 800ad78:	08021a90 	.word	0x08021a90

0800ad7c <_ZN8touchgfx4RectaNERKS0_>:
 800ad7c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ad80:	f9b1 7000 	ldrsh.w	r7, [r1]
 800ad84:	888c      	ldrh	r4, [r1, #4]
 800ad86:	f9b0 9000 	ldrsh.w	r9, [r0]
 800ad8a:	443c      	add	r4, r7
 800ad8c:	b2a4      	uxth	r4, r4
 800ad8e:	fa0f f884 	sxth.w	r8, r4
 800ad92:	45c1      	cmp	r9, r8
 800ad94:	da2f      	bge.n	800adf6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800ad96:	8882      	ldrh	r2, [r0, #4]
 800ad98:	444a      	add	r2, r9
 800ad9a:	b292      	uxth	r2, r2
 800ad9c:	fa0f fe82 	sxth.w	lr, r2
 800ada0:	4577      	cmp	r7, lr
 800ada2:	da28      	bge.n	800adf6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800ada4:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800ada8:	88cb      	ldrh	r3, [r1, #6]
 800adaa:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800adae:	442b      	add	r3, r5
 800adb0:	b21b      	sxth	r3, r3
 800adb2:	429e      	cmp	r6, r3
 800adb4:	da1f      	bge.n	800adf6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800adb6:	88c3      	ldrh	r3, [r0, #6]
 800adb8:	4433      	add	r3, r6
 800adba:	b29b      	uxth	r3, r3
 800adbc:	fa0f fc83 	sxth.w	ip, r3
 800adc0:	4565      	cmp	r5, ip
 800adc2:	da18      	bge.n	800adf6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800adc4:	454f      	cmp	r7, r9
 800adc6:	bfb8      	it	lt
 800adc8:	464f      	movlt	r7, r9
 800adca:	42b5      	cmp	r5, r6
 800adcc:	bfb8      	it	lt
 800adce:	4635      	movlt	r5, r6
 800add0:	45f0      	cmp	r8, lr
 800add2:	bfd8      	it	le
 800add4:	4622      	movle	r2, r4
 800add6:	1bd2      	subs	r2, r2, r7
 800add8:	8082      	strh	r2, [r0, #4]
 800adda:	884a      	ldrh	r2, [r1, #2]
 800addc:	88c9      	ldrh	r1, [r1, #6]
 800adde:	8007      	strh	r7, [r0, #0]
 800ade0:	440a      	add	r2, r1
 800ade2:	b292      	uxth	r2, r2
 800ade4:	b211      	sxth	r1, r2
 800ade6:	458c      	cmp	ip, r1
 800ade8:	bfa8      	it	ge
 800adea:	4613      	movge	r3, r2
 800adec:	1b5b      	subs	r3, r3, r5
 800adee:	80c3      	strh	r3, [r0, #6]
 800adf0:	8045      	strh	r5, [r0, #2]
 800adf2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800adf6:	2300      	movs	r3, #0
 800adf8:	8003      	strh	r3, [r0, #0]
 800adfa:	8043      	strh	r3, [r0, #2]
 800adfc:	8083      	strh	r3, [r0, #4]
 800adfe:	80c3      	strh	r3, [r0, #6]
 800ae00:	e7f7      	b.n	800adf2 <_ZN8touchgfx4RectaNERKS0_+0x76>

0800ae02 <_ZNK8touchgfx4Rect7isEmptyEv>:
 800ae02:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800ae06:	2b00      	cmp	r3, #0
 800ae08:	dd06      	ble.n	800ae18 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800ae0a:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800ae0e:	2800      	cmp	r0, #0
 800ae10:	bfcc      	ite	gt
 800ae12:	2000      	movgt	r0, #0
 800ae14:	2001      	movle	r0, #1
 800ae16:	4770      	bx	lr
 800ae18:	2001      	movs	r0, #1
 800ae1a:	4770      	bx	lr

0800ae1c <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800ae1c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ae20:	2300      	movs	r3, #0
 800ae22:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800ae24:	8003      	strh	r3, [r0, #0]
 800ae26:	4604      	mov	r4, r0
 800ae28:	8043      	strh	r3, [r0, #2]
 800ae2a:	8083      	strh	r3, [r0, #4]
 800ae2c:	80c3      	strh	r3, [r0, #6]
 800ae2e:	2d00      	cmp	r5, #0
 800ae30:	d040      	beq.n	800aeb4 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800ae32:	1d28      	adds	r0, r5, #4
 800ae34:	f7ff ffe5 	bl	800ae02 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ae38:	b988      	cbnz	r0, 800ae5e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800ae3a:	4620      	mov	r0, r4
 800ae3c:	f7ff ffe1 	bl	800ae02 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ae40:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800ae44:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800ae48:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800ae4c:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800ae50:	b138      	cbz	r0, 800ae62 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800ae52:	8022      	strh	r2, [r4, #0]
 800ae54:	8063      	strh	r3, [r4, #2]
 800ae56:	f8a4 e004 	strh.w	lr, [r4, #4]
 800ae5a:	f8a4 c006 	strh.w	ip, [r4, #6]
 800ae5e:	69ad      	ldr	r5, [r5, #24]
 800ae60:	e7e5      	b.n	800ae2e <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800ae62:	f9b4 0000 	ldrsh.w	r0, [r4]
 800ae66:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800ae6a:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800ae6e:	4290      	cmp	r0, r2
 800ae70:	4607      	mov	r7, r0
 800ae72:	bfa8      	it	ge
 800ae74:	4617      	movge	r7, r2
 800ae76:	4472      	add	r2, lr
 800ae78:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800ae7c:	8027      	strh	r7, [r4, #0]
 800ae7e:	4299      	cmp	r1, r3
 800ae80:	460e      	mov	r6, r1
 800ae82:	4440      	add	r0, r8
 800ae84:	bfa8      	it	ge
 800ae86:	461e      	movge	r6, r3
 800ae88:	4471      	add	r1, lr
 800ae8a:	4463      	add	r3, ip
 800ae8c:	b200      	sxth	r0, r0
 800ae8e:	b212      	sxth	r2, r2
 800ae90:	b209      	sxth	r1, r1
 800ae92:	b21b      	sxth	r3, r3
 800ae94:	4290      	cmp	r0, r2
 800ae96:	bfac      	ite	ge
 800ae98:	ebc7 0200 	rsbge	r2, r7, r0
 800ae9c:	ebc7 0202 	rsblt	r2, r7, r2
 800aea0:	4299      	cmp	r1, r3
 800aea2:	bfac      	ite	ge
 800aea4:	ebc6 0301 	rsbge	r3, r6, r1
 800aea8:	ebc6 0303 	rsblt	r3, r6, r3
 800aeac:	8066      	strh	r6, [r4, #2]
 800aeae:	80a2      	strh	r2, [r4, #4]
 800aeb0:	80e3      	strh	r3, [r4, #6]
 800aeb2:	e7d4      	b.n	800ae5e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800aeb4:	4620      	mov	r0, r4
 800aeb6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800aeba <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800aeba:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800aebe:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800aec2:	b383      	cbz	r3, 800af26 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800aec4:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800aec6:	b374      	cbz	r4, 800af26 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800aec8:	f9b1 5000 	ldrsh.w	r5, [r1]
 800aecc:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800aed0:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800aed4:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800aed8:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800aedc:	b303      	cbz	r3, 800af20 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800aede:	4668      	mov	r0, sp
 800aee0:	1d21      	adds	r1, r4, #4
 800aee2:	f8ad 5000 	strh.w	r5, [sp]
 800aee6:	f8ad 6002 	strh.w	r6, [sp, #2]
 800aeea:	f8ad 7004 	strh.w	r7, [sp, #4]
 800aeee:	f8ad 8006 	strh.w	r8, [sp, #6]
 800aef2:	f7ff ff43 	bl	800ad7c <_ZN8touchgfx4RectaNERKS0_>
 800aef6:	4668      	mov	r0, sp
 800aef8:	f7ff ff83 	bl	800ae02 <_ZNK8touchgfx4Rect7isEmptyEv>
 800aefc:	b980      	cbnz	r0, 800af20 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800aefe:	f8bd 3000 	ldrh.w	r3, [sp]
 800af02:	88a2      	ldrh	r2, [r4, #4]
 800af04:	1a9b      	subs	r3, r3, r2
 800af06:	f8ad 3000 	strh.w	r3, [sp]
 800af0a:	88e2      	ldrh	r2, [r4, #6]
 800af0c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800af10:	1a9b      	subs	r3, r3, r2
 800af12:	f8ad 3002 	strh.w	r3, [sp, #2]
 800af16:	6823      	ldr	r3, [r4, #0]
 800af18:	4669      	mov	r1, sp
 800af1a:	689b      	ldr	r3, [r3, #8]
 800af1c:	4620      	mov	r0, r4
 800af1e:	4798      	blx	r3
 800af20:	69a4      	ldr	r4, [r4, #24]
 800af22:	2c00      	cmp	r4, #0
 800af24:	d1d8      	bne.n	800aed8 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800af26:	b002      	add	sp, #8
 800af28:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800af2c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800af2c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800af2e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800af32:	460d      	mov	r5, r1
 800af34:	4616      	mov	r6, r2
 800af36:	b323      	cbz	r3, 800af82 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800af38:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800af3a:	b314      	cbz	r4, 800af82 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800af3c:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800af40:	b1eb      	cbz	r3, 800af7e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800af42:	6828      	ldr	r0, [r5, #0]
 800af44:	6869      	ldr	r1, [r5, #4]
 800af46:	466b      	mov	r3, sp
 800af48:	c303      	stmia	r3!, {r0, r1}
 800af4a:	4668      	mov	r0, sp
 800af4c:	1d21      	adds	r1, r4, #4
 800af4e:	f7ff ff15 	bl	800ad7c <_ZN8touchgfx4RectaNERKS0_>
 800af52:	4668      	mov	r0, sp
 800af54:	f7ff ff55 	bl	800ae02 <_ZNK8touchgfx4Rect7isEmptyEv>
 800af58:	b988      	cbnz	r0, 800af7e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800af5a:	f8bd 3000 	ldrh.w	r3, [sp]
 800af5e:	88a2      	ldrh	r2, [r4, #4]
 800af60:	1a9b      	subs	r3, r3, r2
 800af62:	f8ad 3000 	strh.w	r3, [sp]
 800af66:	88e2      	ldrh	r2, [r4, #6]
 800af68:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800af6c:	1a9b      	subs	r3, r3, r2
 800af6e:	f8ad 3002 	strh.w	r3, [sp, #2]
 800af72:	6823      	ldr	r3, [r4, #0]
 800af74:	4632      	mov	r2, r6
 800af76:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800af78:	4669      	mov	r1, sp
 800af7a:	4620      	mov	r0, r4
 800af7c:	4798      	blx	r3
 800af7e:	69a4      	ldr	r4, [r4, #24]
 800af80:	e7db      	b.n	800af3a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800af82:	b002      	add	sp, #8
 800af84:	bd70      	pop	{r4, r5, r6, pc}

0800af86 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800af86:	b513      	push	{r0, r1, r4, lr}
 800af88:	6803      	ldr	r3, [r0, #0]
 800af8a:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 800af8e:	2300      	movs	r3, #0
 800af90:	e9cd 3300 	strd	r3, r3, [sp]
 800af94:	466b      	mov	r3, sp
 800af96:	47a0      	blx	r4
 800af98:	b002      	add	sp, #8
 800af9a:	bd10      	pop	{r4, pc}

0800af9c <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800af9c:	2301      	movs	r3, #1
 800af9e:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800afa2:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 800afa6:	4770      	bx	lr

0800afa8 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800afa8:	2301      	movs	r3, #1
 800afaa:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800afae:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 800afb2:	4770      	bx	lr

0800afb4 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800afb4:	6843      	ldr	r3, [r0, #4]
 800afb6:	2201      	movs	r2, #1
 800afb8:	725a      	strb	r2, [r3, #9]
 800afba:	6840      	ldr	r0, [r0, #4]
 800afbc:	6803      	ldr	r3, [r0, #0]
 800afbe:	691b      	ldr	r3, [r3, #16]
 800afc0:	4718      	bx	r3

0800afc2 <_ZN8touchgfx3HAL8flushDMAEv>:
 800afc2:	6840      	ldr	r0, [r0, #4]
 800afc4:	6803      	ldr	r3, [r0, #0]
 800afc6:	689b      	ldr	r3, [r3, #8]
 800afc8:	4718      	bx	r3

0800afca <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 800afca:	b530      	push	{r4, r5, lr}
 800afcc:	b08b      	sub	sp, #44	; 0x2c
 800afce:	6804      	ldr	r4, [r0, #0]
 800afd0:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 800afd4:	9509      	str	r5, [sp, #36]	; 0x24
 800afd6:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 800afda:	9508      	str	r5, [sp, #32]
 800afdc:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 800afe0:	9507      	str	r5, [sp, #28]
 800afe2:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 800afe6:	9506      	str	r5, [sp, #24]
 800afe8:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 800afec:	9505      	str	r5, [sp, #20]
 800afee:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 800aff2:	9504      	str	r5, [sp, #16]
 800aff4:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 800aff8:	9503      	str	r5, [sp, #12]
 800affa:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 800affe:	9502      	str	r5, [sp, #8]
 800b000:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 800b004:	e9cd 3500 	strd	r3, r5, [sp]
 800b008:	4613      	mov	r3, r2
 800b00a:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 800b00c:	2200      	movs	r2, #0
 800b00e:	47a0      	blx	r4
 800b010:	b00b      	add	sp, #44	; 0x2c
 800b012:	bd30      	pop	{r4, r5, pc}

0800b014 <_ZN8touchgfx3HAL10beginFrameEv>:
 800b014:	4b04      	ldr	r3, [pc, #16]	; (800b028 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800b016:	781b      	ldrb	r3, [r3, #0]
 800b018:	b123      	cbz	r3, 800b024 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800b01a:	f890 006a 	ldrb.w	r0, [r0, #106]	; 0x6a
 800b01e:	f080 0001 	eor.w	r0, r0, #1
 800b022:	4770      	bx	lr
 800b024:	2001      	movs	r0, #1
 800b026:	4770      	bx	lr
 800b028:	200155b2 	.word	0x200155b2

0800b02c <_ZN8touchgfx3HAL8endFrameEv>:
 800b02c:	b510      	push	{r4, lr}
 800b02e:	4604      	mov	r4, r0
 800b030:	6840      	ldr	r0, [r0, #4]
 800b032:	6803      	ldr	r3, [r0, #0]
 800b034:	689b      	ldr	r3, [r3, #8]
 800b036:	4798      	blx	r3
 800b038:	f894 3069 	ldrb.w	r3, [r4, #105]	; 0x69
 800b03c:	b113      	cbz	r3, 800b044 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800b03e:	2301      	movs	r3, #1
 800b040:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800b044:	bd10      	pop	{r4, pc}

0800b046 <_ZN8touchgfx3HAL10initializeEv>:
 800b046:	b510      	push	{r4, lr}
 800b048:	4604      	mov	r4, r0
 800b04a:	f7f5 fc4d 	bl	80008e8 <_ZN8touchgfx10OSWrappers10initializeEv>
 800b04e:	6860      	ldr	r0, [r4, #4]
 800b050:	6803      	ldr	r3, [r0, #0]
 800b052:	68db      	ldr	r3, [r3, #12]
 800b054:	4798      	blx	r3
 800b056:	68e0      	ldr	r0, [r4, #12]
 800b058:	6803      	ldr	r3, [r0, #0]
 800b05a:	689b      	ldr	r3, [r3, #8]
 800b05c:	4798      	blx	r3
 800b05e:	6823      	ldr	r3, [r4, #0]
 800b060:	4620      	mov	r0, r4
 800b062:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800b064:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b068:	4718      	bx	r3
	...

0800b06c <_ZN8touchgfx3HAL4tickEv>:
 800b06c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800b06e:	6803      	ldr	r3, [r0, #0]
 800b070:	4d5b      	ldr	r5, [pc, #364]	; (800b1e0 <_ZN8touchgfx3HAL4tickEv+0x174>)
 800b072:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800b076:	4604      	mov	r4, r0
 800b078:	4798      	blx	r3
 800b07a:	2800      	cmp	r0, #0
 800b07c:	f000 8095 	beq.w	800b1aa <_ZN8touchgfx3HAL4tickEv+0x13e>
 800b080:	2001      	movs	r0, #1
 800b082:	f7f5 fb5d 	bl	8000740 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800b086:	f894 3066 	ldrb.w	r3, [r4, #102]	; 0x66
 800b08a:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 800b08e:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 800b092:	2600      	movs	r6, #0
 800b094:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800b098:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 800b09c:	b133      	cbz	r3, 800b0ac <_ZN8touchgfx3HAL4tickEv+0x40>
 800b09e:	6823      	ldr	r3, [r4, #0]
 800b0a0:	4620      	mov	r0, r4
 800b0a2:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 800b0a6:	4798      	blx	r3
 800b0a8:	f884 6075 	strb.w	r6, [r4, #117]	; 0x75
 800b0ac:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 800b0b0:	6862      	ldr	r2, [r4, #4]
 800b0b2:	f083 0301 	eor.w	r3, r3, #1
 800b0b6:	7253      	strb	r3, [r2, #9]
 800b0b8:	2601      	movs	r6, #1
 800b0ba:	702e      	strb	r6, [r5, #0]
 800b0bc:	f005 fff0 	bl	80110a0 <_ZN8touchgfx11Application11getInstanceEv>
 800b0c0:	6803      	ldr	r3, [r0, #0]
 800b0c2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800b0c4:	4798      	blx	r3
 800b0c6:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 800b0ca:	b90b      	cbnz	r3, 800b0d0 <_ZN8touchgfx3HAL4tickEv+0x64>
 800b0cc:	f884 6067 	strb.w	r6, [r4, #103]	; 0x67
 800b0d0:	f005 ffe6 	bl	80110a0 <_ZN8touchgfx11Application11getInstanceEv>
 800b0d4:	6803      	ldr	r3, [r0, #0]
 800b0d6:	695b      	ldr	r3, [r3, #20]
 800b0d8:	4798      	blx	r3
 800b0da:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800b0dc:	6803      	ldr	r3, [r0, #0]
 800b0de:	691b      	ldr	r3, [r3, #16]
 800b0e0:	4798      	blx	r3
 800b0e2:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 800b0e6:	f894 2068 	ldrb.w	r2, [r4, #104]	; 0x68
 800b0ea:	3b01      	subs	r3, #1
 800b0ec:	b2db      	uxtb	r3, r3
 800b0ee:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 800b0f2:	b10a      	cbz	r2, 800b0f8 <_ZN8touchgfx3HAL4tickEv+0x8c>
 800b0f4:	2b00      	cmp	r3, #0
 800b0f6:	d1eb      	bne.n	800b0d0 <_ZN8touchgfx3HAL4tickEv+0x64>
 800b0f8:	4a3a      	ldr	r2, [pc, #232]	; (800b1e4 <_ZN8touchgfx3HAL4tickEv+0x178>)
 800b0fa:	f994 1064 	ldrsb.w	r1, [r4, #100]	; 0x64
 800b0fe:	7813      	ldrb	r3, [r2, #0]
 800b100:	3301      	adds	r3, #1
 800b102:	b25b      	sxtb	r3, r3
 800b104:	4299      	cmp	r1, r3
 800b106:	7013      	strb	r3, [r2, #0]
 800b108:	dc10      	bgt.n	800b12c <_ZN8touchgfx3HAL4tickEv+0xc0>
 800b10a:	68e0      	ldr	r0, [r4, #12]
 800b10c:	2300      	movs	r3, #0
 800b10e:	7013      	strb	r3, [r2, #0]
 800b110:	6803      	ldr	r3, [r0, #0]
 800b112:	aa03      	add	r2, sp, #12
 800b114:	68db      	ldr	r3, [r3, #12]
 800b116:	a902      	add	r1, sp, #8
 800b118:	4798      	blx	r3
 800b11a:	6823      	ldr	r3, [r4, #0]
 800b11c:	2800      	cmp	r0, #0
 800b11e:	d050      	beq.n	800b1c2 <_ZN8touchgfx3HAL4tickEv+0x156>
 800b120:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800b124:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800b128:	4620      	mov	r0, r4
 800b12a:	4798      	blx	r3
 800b12c:	6960      	ldr	r0, [r4, #20]
 800b12e:	2300      	movs	r3, #0
 800b130:	f88d 3007 	strb.w	r3, [sp, #7]
 800b134:	b158      	cbz	r0, 800b14e <_ZN8touchgfx3HAL4tickEv+0xe2>
 800b136:	6803      	ldr	r3, [r0, #0]
 800b138:	f10d 0107 	add.w	r1, sp, #7
 800b13c:	68db      	ldr	r3, [r3, #12]
 800b13e:	4798      	blx	r3
 800b140:	b128      	cbz	r0, 800b14e <_ZN8touchgfx3HAL4tickEv+0xe2>
 800b142:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800b144:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800b148:	6803      	ldr	r3, [r0, #0]
 800b14a:	68db      	ldr	r3, [r3, #12]
 800b14c:	4798      	blx	r3
 800b14e:	f104 001c 	add.w	r0, r4, #28
 800b152:	f014 fef9 	bl	801ff48 <_ZN8touchgfx8Gestures4tickEv>
 800b156:	f894 306c 	ldrb.w	r3, [r4, #108]	; 0x6c
 800b15a:	b30b      	cbz	r3, 800b1a0 <_ZN8touchgfx3HAL4tickEv+0x134>
 800b15c:	6920      	ldr	r0, [r4, #16]
 800b15e:	6803      	ldr	r3, [r0, #0]
 800b160:	691b      	ldr	r3, [r3, #16]
 800b162:	4798      	blx	r3
 800b164:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800b166:	4606      	mov	r6, r0
 800b168:	b903      	cbnz	r3, 800b16c <_ZN8touchgfx3HAL4tickEv+0x100>
 800b16a:	6720      	str	r0, [r4, #112]	; 0x70
 800b16c:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800b16e:	4a1e      	ldr	r2, [pc, #120]	; (800b1e8 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 800b170:	1af3      	subs	r3, r6, r3
 800b172:	4293      	cmp	r3, r2
 800b174:	d914      	bls.n	800b1a0 <_ZN8touchgfx3HAL4tickEv+0x134>
 800b176:	6920      	ldr	r0, [r4, #16]
 800b178:	6803      	ldr	r3, [r0, #0]
 800b17a:	699b      	ldr	r3, [r3, #24]
 800b17c:	4798      	blx	r3
 800b17e:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800b180:	2264      	movs	r2, #100	; 0x64
 800b182:	1af3      	subs	r3, r6, r3
 800b184:	fbb3 f3f2 	udiv	r3, r3, r2
 800b188:	fbb0 f0f3 	udiv	r0, r0, r3
 800b18c:	2800      	cmp	r0, #0
 800b18e:	dc1d      	bgt.n	800b1cc <_ZN8touchgfx3HAL4tickEv+0x160>
 800b190:	f884 2065 	strb.w	r2, [r4, #101]	; 0x65
 800b194:	6920      	ldr	r0, [r4, #16]
 800b196:	6803      	ldr	r3, [r0, #0]
 800b198:	2100      	movs	r1, #0
 800b19a:	69db      	ldr	r3, [r3, #28]
 800b19c:	4798      	blx	r3
 800b19e:	6726      	str	r6, [r4, #112]	; 0x70
 800b1a0:	f005 ff7e 	bl	80110a0 <_ZN8touchgfx11Application11getInstanceEv>
 800b1a4:	6803      	ldr	r3, [r0, #0]
 800b1a6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b1a8:	4798      	blx	r3
 800b1aa:	6823      	ldr	r3, [r4, #0]
 800b1ac:	4620      	mov	r0, r4
 800b1ae:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800b1b2:	4798      	blx	r3
 800b1b4:	2001      	movs	r0, #1
 800b1b6:	f7f5 fac4 	bl	8000742 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800b1ba:	2300      	movs	r3, #0
 800b1bc:	702b      	strb	r3, [r5, #0]
 800b1be:	b004      	add	sp, #16
 800b1c0:	bd70      	pop	{r4, r5, r6, pc}
 800b1c2:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 800b1c6:	4620      	mov	r0, r4
 800b1c8:	4798      	blx	r3
 800b1ca:	e7af      	b.n	800b12c <_ZN8touchgfx3HAL4tickEv+0xc0>
 800b1cc:	2863      	cmp	r0, #99	; 0x63
 800b1ce:	bfcb      	itete	gt
 800b1d0:	2300      	movgt	r3, #0
 800b1d2:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 800b1d6:	f884 3065 	strbgt.w	r3, [r4, #101]	; 0x65
 800b1da:	f884 0065 	strble.w	r0, [r4, #101]	; 0x65
 800b1de:	e7d9      	b.n	800b194 <_ZN8touchgfx3HAL4tickEv+0x128>
 800b1e0:	200155b8 	.word	0x200155b8
 800b1e4:	200155b9 	.word	0x200155b9
 800b1e8:	05f5e100 	.word	0x05f5e100

0800b1ec <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800b1ec:	f7f5 bbac 	b.w	8000948 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800b1f0 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800b1f0:	6581      	str	r1, [r0, #88]	; 0x58
 800b1f2:	301c      	adds	r0, #28
 800b1f4:	f014 bea6 	b.w	801ff44 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800b1f8 <_ZN8touchgfx3HAL5touchEll>:
 800b1f8:	b530      	push	{r4, r5, lr}
 800b1fa:	b087      	sub	sp, #28
 800b1fc:	4604      	mov	r4, r0
 800b1fe:	a804      	add	r0, sp, #16
 800b200:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800b204:	f005 fd0e 	bl	8010c24 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800b208:	9b04      	ldr	r3, [sp, #16]
 800b20a:	f8ad 300c 	strh.w	r3, [sp, #12]
 800b20e:	a906      	add	r1, sp, #24
 800b210:	9b05      	ldr	r3, [sp, #20]
 800b212:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800b216:	a803      	add	r0, sp, #12
 800b218:	f005 fd56 	bl	8010cc8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800b21c:	f894 106b 	ldrb.w	r1, [r4, #107]	; 0x6b
 800b220:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800b224:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800b228:	f104 001c 	add.w	r0, r4, #28
 800b22c:	b189      	cbz	r1, 800b252 <_ZN8touchgfx3HAL5touchEll+0x5a>
 800b22e:	f8b4 5060 	ldrh.w	r5, [r4, #96]	; 0x60
 800b232:	9300      	str	r3, [sp, #0]
 800b234:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 800b238:	4613      	mov	r3, r2
 800b23a:	462a      	mov	r2, r5
 800b23c:	f014 fe92 	bl	801ff64 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800b240:	b128      	cbz	r0, 800b24e <_ZN8touchgfx3HAL5touchEll+0x56>
 800b242:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800b246:	65e3      	str	r3, [r4, #92]	; 0x5c
 800b248:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800b24c:	6623      	str	r3, [r4, #96]	; 0x60
 800b24e:	b007      	add	sp, #28
 800b250:	bd30      	pop	{r4, r5, pc}
 800b252:	f014 fec7 	bl	801ffe4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800b256:	2301      	movs	r3, #1
 800b258:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800b25c:	e7f1      	b.n	800b242 <_ZN8touchgfx3HAL5touchEll+0x4a>

0800b25e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800b25e:	b510      	push	{r4, lr}
 800b260:	2b00      	cmp	r3, #0
 800b262:	d046      	beq.n	800b2f2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800b264:	ea81 0002 	eor.w	r0, r1, r2
 800b268:	07c4      	lsls	r4, r0, #31
 800b26a:	d508      	bpl.n	800b27e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800b26c:	440b      	add	r3, r1
 800b26e:	3a01      	subs	r2, #1
 800b270:	428b      	cmp	r3, r1
 800b272:	d93e      	bls.n	800b2f2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800b274:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800b278:	f801 0b01 	strb.w	r0, [r1], #1
 800b27c:	e7f8      	b.n	800b270 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800b27e:	07d0      	lsls	r0, r2, #31
 800b280:	bf42      	ittt	mi
 800b282:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800b286:	f801 0b01 	strbmi.w	r0, [r1], #1
 800b28a:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800b28e:	2b01      	cmp	r3, #1
 800b290:	d911      	bls.n	800b2b6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800b292:	ea81 0402 	eor.w	r4, r1, r2
 800b296:	07a4      	lsls	r4, r4, #30
 800b298:	4610      	mov	r0, r2
 800b29a:	d022      	beq.n	800b2e2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 800b29c:	f023 0401 	bic.w	r4, r3, #1
 800b2a0:	440c      	add	r4, r1
 800b2a2:	428c      	cmp	r4, r1
 800b2a4:	4602      	mov	r2, r0
 800b2a6:	d904      	bls.n	800b2b2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 800b2a8:	8812      	ldrh	r2, [r2, #0]
 800b2aa:	f821 2b02 	strh.w	r2, [r1], #2
 800b2ae:	3002      	adds	r0, #2
 800b2b0:	e7f7      	b.n	800b2a2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 800b2b2:	f003 0301 	and.w	r3, r3, #1
 800b2b6:	f023 0003 	bic.w	r0, r3, #3
 800b2ba:	4408      	add	r0, r1
 800b2bc:	4288      	cmp	r0, r1
 800b2be:	4614      	mov	r4, r2
 800b2c0:	d904      	bls.n	800b2cc <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 800b2c2:	6824      	ldr	r4, [r4, #0]
 800b2c4:	f841 4b04 	str.w	r4, [r1], #4
 800b2c8:	3204      	adds	r2, #4
 800b2ca:	e7f7      	b.n	800b2bc <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 800b2cc:	f003 0303 	and.w	r3, r3, #3
 800b2d0:	440b      	add	r3, r1
 800b2d2:	3a01      	subs	r2, #1
 800b2d4:	428b      	cmp	r3, r1
 800b2d6:	d90c      	bls.n	800b2f2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800b2d8:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800b2dc:	f801 0b01 	strb.w	r0, [r1], #1
 800b2e0:	e7f8      	b.n	800b2d4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 800b2e2:	0790      	lsls	r0, r2, #30
 800b2e4:	d0e7      	beq.n	800b2b6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800b2e6:	f832 0b02 	ldrh.w	r0, [r2], #2
 800b2ea:	f821 0b02 	strh.w	r0, [r1], #2
 800b2ee:	3b02      	subs	r3, #2
 800b2f0:	e7e1      	b.n	800b2b6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800b2f2:	2001      	movs	r0, #1
 800b2f4:	bd10      	pop	{r4, pc}

0800b2f6 <_ZN8touchgfx3HAL7noTouchEv>:
 800b2f6:	b510      	push	{r4, lr}
 800b2f8:	f890 306b 	ldrb.w	r3, [r0, #107]	; 0x6b
 800b2fc:	4604      	mov	r4, r0
 800b2fe:	b153      	cbz	r3, 800b316 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800b300:	f8b0 3060 	ldrh.w	r3, [r0, #96]	; 0x60
 800b304:	f8b0 205c 	ldrh.w	r2, [r0, #92]	; 0x5c
 800b308:	2101      	movs	r1, #1
 800b30a:	301c      	adds	r0, #28
 800b30c:	f014 fe6a 	bl	801ffe4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800b310:	2300      	movs	r3, #0
 800b312:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800b316:	bd10      	pop	{r4, pc}

0800b318 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800b318:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b31c:	b085      	sub	sp, #20
 800b31e:	ad04      	add	r5, sp, #16
 800b320:	4604      	mov	r4, r0
 800b322:	2000      	movs	r0, #0
 800b324:	f845 0d04 	str.w	r0, [r5, #-4]!
 800b328:	69a0      	ldr	r0, [r4, #24]
 800b32a:	6806      	ldr	r6, [r0, #0]
 800b32c:	9501      	str	r5, [sp, #4]
 800b32e:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 800b332:	9500      	str	r5, [sp, #0]
 800b334:	6835      	ldr	r5, [r6, #0]
 800b336:	4699      	mov	r9, r3
 800b338:	460f      	mov	r7, r1
 800b33a:	4690      	mov	r8, r2
 800b33c:	47a8      	blx	r5
 800b33e:	4d10      	ldr	r5, [pc, #64]	; (800b380 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 800b340:	4606      	mov	r6, r0
 800b342:	f8a5 9000 	strh.w	r9, [r5]
 800b346:	f7f7 f9d9 	bl	80026fc <_ZN8touchgfx3HAL3lcdEv>
 800b34a:	6803      	ldr	r3, [r0, #0]
 800b34c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b34e:	4798      	blx	r3
 800b350:	b128      	cbz	r0, 800b35e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 800b352:	2801      	cmp	r0, #1
 800b354:	d00b      	beq.n	800b36e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 800b356:	4630      	mov	r0, r6
 800b358:	b005      	add	sp, #20
 800b35a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b35e:	882b      	ldrh	r3, [r5, #0]
 800b360:	fb08 7203 	mla	r2, r8, r3, r7
 800b364:	9b03      	ldr	r3, [sp, #12]
 800b366:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800b36a:	63e3      	str	r3, [r4, #60]	; 0x3c
 800b36c:	e7f3      	b.n	800b356 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800b36e:	882a      	ldrh	r2, [r5, #0]
 800b370:	9b03      	ldr	r3, [sp, #12]
 800b372:	fb08 7202 	mla	r2, r8, r2, r7
 800b376:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800b37a:	1a9a      	subs	r2, r3, r2
 800b37c:	63e2      	str	r2, [r4, #60]	; 0x3c
 800b37e:	e7ea      	b.n	800b356 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800b380:	200155ae 	.word	0x200155ae

0800b384 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 800b384:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b386:	b08b      	sub	sp, #44	; 0x2c
 800b388:	4617      	mov	r7, r2
 800b38a:	4604      	mov	r4, r0
 800b38c:	460e      	mov	r6, r1
 800b38e:	461d      	mov	r5, r3
 800b390:	f7f7 f9b4 	bl	80026fc <_ZN8touchgfx3HAL3lcdEv>
 800b394:	6803      	ldr	r3, [r0, #0]
 800b396:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b398:	4798      	blx	r3
 800b39a:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800b39e:	9007      	str	r0, [sp, #28]
 800b3a0:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800b3a4:	4b0d      	ldr	r3, [pc, #52]	; (800b3dc <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 800b3a6:	6822      	ldr	r2, [r4, #0]
 800b3a8:	881b      	ldrh	r3, [r3, #0]
 800b3aa:	9306      	str	r3, [sp, #24]
 800b3ac:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800b3b0:	9305      	str	r3, [sp, #20]
 800b3b2:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 800b3b6:	9304      	str	r3, [sp, #16]
 800b3b8:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b3bc:	9303      	str	r3, [sp, #12]
 800b3be:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800b3c2:	9302      	str	r3, [sp, #8]
 800b3c4:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800b3c8:	e9cd 5300 	strd	r5, r3, [sp]
 800b3cc:	4631      	mov	r1, r6
 800b3ce:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 800b3d0:	463b      	mov	r3, r7
 800b3d2:	2200      	movs	r2, #0
 800b3d4:	4620      	mov	r0, r4
 800b3d6:	47a8      	blx	r5
 800b3d8:	b00b      	add	sp, #44	; 0x2c
 800b3da:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b3dc:	200155ae 	.word	0x200155ae

0800b3e0 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 800b3e0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b3e4:	4698      	mov	r8, r3
 800b3e6:	6803      	ldr	r3, [r0, #0]
 800b3e8:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 800b3ea:	4b15      	ldr	r3, [pc, #84]	; (800b440 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 800b3ec:	b08b      	sub	sp, #44	; 0x2c
 800b3ee:	4617      	mov	r7, r2
 800b3f0:	f8b3 9000 	ldrh.w	r9, [r3]
 800b3f4:	460e      	mov	r6, r1
 800b3f6:	4604      	mov	r4, r0
 800b3f8:	f7f7 f980 	bl	80026fc <_ZN8touchgfx3HAL3lcdEv>
 800b3fc:	6803      	ldr	r3, [r0, #0]
 800b3fe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b400:	4798      	blx	r3
 800b402:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800b406:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800b40a:	2302      	movs	r3, #2
 800b40c:	e9cd 9306 	strd	r9, r3, [sp, #24]
 800b410:	2301      	movs	r3, #1
 800b412:	9305      	str	r3, [sp, #20]
 800b414:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800b418:	9304      	str	r3, [sp, #16]
 800b41a:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800b41e:	9303      	str	r3, [sp, #12]
 800b420:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800b424:	9302      	str	r3, [sp, #8]
 800b426:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b42a:	2200      	movs	r2, #0
 800b42c:	e9cd 8300 	strd	r8, r3, [sp]
 800b430:	4631      	mov	r1, r6
 800b432:	463b      	mov	r3, r7
 800b434:	4620      	mov	r0, r4
 800b436:	47a8      	blx	r5
 800b438:	b00b      	add	sp, #44	; 0x2c
 800b43a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b43e:	bf00      	nop
 800b440:	200155ae 	.word	0x200155ae

0800b444 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 800b444:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b448:	4698      	mov	r8, r3
 800b44a:	6803      	ldr	r3, [r0, #0]
 800b44c:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 800b44e:	4b11      	ldr	r3, [pc, #68]	; (800b494 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 800b450:	b087      	sub	sp, #28
 800b452:	f8b3 9000 	ldrh.w	r9, [r3]
 800b456:	460e      	mov	r6, r1
 800b458:	4617      	mov	r7, r2
 800b45a:	4604      	mov	r4, r0
 800b45c:	f7f7 f94e 	bl	80026fc <_ZN8touchgfx3HAL3lcdEv>
 800b460:	6803      	ldr	r3, [r0, #0]
 800b462:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b464:	4798      	blx	r3
 800b466:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 800b46a:	f8cd 900c 	str.w	r9, [sp, #12]
 800b46e:	e9cd 0304 	strd	r0, r3, [sp, #16]
 800b472:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 800b476:	9302      	str	r3, [sp, #8]
 800b478:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800b47c:	9301      	str	r3, [sp, #4]
 800b47e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800b482:	9300      	str	r3, [sp, #0]
 800b484:	463a      	mov	r2, r7
 800b486:	4643      	mov	r3, r8
 800b488:	4631      	mov	r1, r6
 800b48a:	4620      	mov	r0, r4
 800b48c:	47a8      	blx	r5
 800b48e:	b007      	add	sp, #28
 800b490:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b494:	200155ae 	.word	0x200155ae

0800b498 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800b498:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b49c:	4604      	mov	r4, r0
 800b49e:	b08f      	sub	sp, #60	; 0x3c
 800b4a0:	4610      	mov	r0, r2
 800b4a2:	460d      	mov	r5, r1
 800b4a4:	4691      	mov	r9, r2
 800b4a6:	461e      	mov	r6, r3
 800b4a8:	f008 ff96 	bl	80143d8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800b4ac:	2800      	cmp	r0, #0
 800b4ae:	f000 809d 	beq.w	800b5ec <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 800b4b2:	6823      	ldr	r3, [r4, #0]
 800b4b4:	f8df b198 	ldr.w	fp, [pc, #408]	; 800b650 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 800b4b8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b4ba:	f8df a198 	ldr.w	sl, [pc, #408]	; 800b654 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 800b4be:	4f61      	ldr	r7, [pc, #388]	; (800b644 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800b4c0:	4620      	mov	r0, r4
 800b4c2:	4798      	blx	r3
 800b4c4:	6823      	ldr	r3, [r4, #0]
 800b4c6:	4620      	mov	r0, r4
 800b4c8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b4ca:	4798      	blx	r3
 800b4cc:	f8bb 3000 	ldrh.w	r3, [fp]
 800b4d0:	9301      	str	r3, [sp, #4]
 800b4d2:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 800b4d6:	f8ba 3000 	ldrh.w	r3, [sl]
 800b4da:	9302      	str	r3, [sp, #8]
 800b4dc:	883b      	ldrh	r3, [r7, #0]
 800b4de:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 800b4e2:	9303      	str	r3, [sp, #12]
 800b4e4:	4b58      	ldr	r3, [pc, #352]	; (800b648 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800b4e6:	9305      	str	r3, [sp, #20]
 800b4e8:	881a      	ldrh	r2, [r3, #0]
 800b4ea:	9204      	str	r2, [sp, #16]
 800b4ec:	4640      	mov	r0, r8
 800b4ee:	f009 f807 	bl	8014500 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800b4f2:	8038      	strh	r0, [r7, #0]
 800b4f4:	4640      	mov	r0, r8
 800b4f6:	f009 f837 	bl	8014568 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800b4fa:	9b05      	ldr	r3, [sp, #20]
 800b4fc:	b280      	uxth	r0, r0
 800b4fe:	8018      	strh	r0, [r3, #0]
 800b500:	4b52      	ldr	r3, [pc, #328]	; (800b64c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 800b502:	781b      	ldrb	r3, [r3, #0]
 800b504:	2b00      	cmp	r3, #0
 800b506:	d174      	bne.n	800b5f2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 800b508:	883b      	ldrh	r3, [r7, #0]
 800b50a:	f8ab 3000 	strh.w	r3, [fp]
 800b50e:	f8aa 0000 	strh.w	r0, [sl]
 800b512:	4648      	mov	r0, r9
 800b514:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 800b518:	f008 ff5e 	bl	80143d8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800b51c:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 800b520:	2200      	movs	r2, #0
 800b522:	4611      	mov	r1, r2
 800b524:	4628      	mov	r0, r5
 800b526:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 800b52a:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 800b52e:	f7f7 fb87 	bl	8002c40 <_ZN8touchgfx8Drawable5setXYEss>
 800b532:	2301      	movs	r3, #1
 800b534:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 800b538:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 800b53c:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800b540:	2b00      	cmp	r3, #0
 800b542:	dd5c      	ble.n	800b5fe <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800b544:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800b548:	2b00      	cmp	r3, #0
 800b54a:	dd58      	ble.n	800b5fe <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800b54c:	462a      	mov	r2, r5
 800b54e:	ab0a      	add	r3, sp, #40	; 0x28
 800b550:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800b554:	6851      	ldr	r1, [r2, #4]
 800b556:	c303      	stmia	r3!, {r0, r1}
 800b558:	4631      	mov	r1, r6
 800b55a:	a80a      	add	r0, sp, #40	; 0x28
 800b55c:	f7ff fc0e 	bl	800ad7c <_ZN8touchgfx4RectaNERKS0_>
 800b560:	4b38      	ldr	r3, [pc, #224]	; (800b644 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800b562:	f9b3 2000 	ldrsh.w	r2, [r3]
 800b566:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 800b56a:	2100      	movs	r1, #0
 800b56c:	aa0a      	add	r2, sp, #40	; 0x28
 800b56e:	4b36      	ldr	r3, [pc, #216]	; (800b648 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800b570:	910c      	str	r1, [sp, #48]	; 0x30
 800b572:	e892 0003 	ldmia.w	r2, {r0, r1}
 800b576:	f9b3 3000 	ldrsh.w	r3, [r3]
 800b57a:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800b57e:	ab08      	add	r3, sp, #32
 800b580:	e883 0003 	stmia.w	r3, {r0, r1}
 800b584:	4618      	mov	r0, r3
 800b586:	a90c      	add	r1, sp, #48	; 0x30
 800b588:	f7ff fbf8 	bl	800ad7c <_ZN8touchgfx4RectaNERKS0_>
 800b58c:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 800b58e:	2b00      	cmp	r3, #0
 800b590:	d13c      	bne.n	800b60c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 800b592:	2000      	movs	r0, #0
 800b594:	f884 0076 	strb.w	r0, [r4, #118]	; 0x76
 800b598:	2600      	movs	r6, #0
 800b59a:	682a      	ldr	r2, [r5, #0]
 800b59c:	696b      	ldr	r3, [r5, #20]
 800b59e:	616e      	str	r6, [r5, #20]
 800b5a0:	9305      	str	r3, [sp, #20]
 800b5a2:	6892      	ldr	r2, [r2, #8]
 800b5a4:	a908      	add	r1, sp, #32
 800b5a6:	4628      	mov	r0, r5
 800b5a8:	4790      	blx	r2
 800b5aa:	9b05      	ldr	r3, [sp, #20]
 800b5ac:	616b      	str	r3, [r5, #20]
 800b5ae:	4652      	mov	r2, sl
 800b5b0:	f884 6076 	strb.w	r6, [r4, #118]	; 0x76
 800b5b4:	4649      	mov	r1, r9
 800b5b6:	4628      	mov	r0, r5
 800b5b8:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 800b5bc:	f7f7 fb40 	bl	8002c40 <_ZN8touchgfx8Drawable5setXYEss>
 800b5c0:	4b23      	ldr	r3, [pc, #140]	; (800b650 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 800b5c2:	9a01      	ldr	r2, [sp, #4]
 800b5c4:	801a      	strh	r2, [r3, #0]
 800b5c6:	4b23      	ldr	r3, [pc, #140]	; (800b654 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 800b5c8:	9a02      	ldr	r2, [sp, #8]
 800b5ca:	801a      	strh	r2, [r3, #0]
 800b5cc:	4b1d      	ldr	r3, [pc, #116]	; (800b644 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800b5ce:	9a03      	ldr	r2, [sp, #12]
 800b5d0:	801a      	strh	r2, [r3, #0]
 800b5d2:	4b1d      	ldr	r3, [pc, #116]	; (800b648 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800b5d4:	9a04      	ldr	r2, [sp, #16]
 800b5d6:	801a      	strh	r2, [r3, #0]
 800b5d8:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 800b5dc:	6823      	ldr	r3, [r4, #0]
 800b5de:	4620      	mov	r0, r4
 800b5e0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b5e2:	4798      	blx	r3
 800b5e4:	6823      	ldr	r3, [r4, #0]
 800b5e6:	4620      	mov	r0, r4
 800b5e8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b5ea:	4798      	blx	r3
 800b5ec:	b00f      	add	sp, #60	; 0x3c
 800b5ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b5f2:	883b      	ldrh	r3, [r7, #0]
 800b5f4:	f8ab 0000 	strh.w	r0, [fp]
 800b5f8:	f8aa 3000 	strh.w	r3, [sl]
 800b5fc:	e789      	b.n	800b512 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 800b5fe:	462a      	mov	r2, r5
 800b600:	ab0a      	add	r3, sp, #40	; 0x28
 800b602:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800b606:	6851      	ldr	r1, [r2, #4]
 800b608:	c303      	stmia	r3!, {r0, r1}
 800b60a:	e7a9      	b.n	800b560 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 800b60c:	a807      	add	r0, sp, #28
 800b60e:	f009 f8e7 	bl	80147e0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800b612:	4606      	mov	r6, r0
 800b614:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 800b616:	6803      	ldr	r3, [r0, #0]
 800b618:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b61a:	4798      	blx	r3
 800b61c:	4286      	cmp	r6, r0
 800b61e:	d1b8      	bne.n	800b592 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 800b620:	f7f7 f86c 	bl	80026fc <_ZN8touchgfx3HAL3lcdEv>
 800b624:	6803      	ldr	r3, [r0, #0]
 800b626:	4606      	mov	r6, r0
 800b628:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800b62a:	9305      	str	r3, [sp, #20]
 800b62c:	a807      	add	r0, sp, #28
 800b62e:	f009 f8d7 	bl	80147e0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800b632:	9b05      	ldr	r3, [sp, #20]
 800b634:	4601      	mov	r1, r0
 800b636:	4630      	mov	r0, r6
 800b638:	4798      	blx	r3
 800b63a:	f080 0001 	eor.w	r0, r0, #1
 800b63e:	b2c0      	uxtb	r0, r0
 800b640:	e7a8      	b.n	800b594 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 800b642:	bf00      	nop
 800b644:	200155a8 	.word	0x200155a8
 800b648:	200155aa 	.word	0x200155aa
 800b64c:	200155ac 	.word	0x200155ac
 800b650:	200155ae 	.word	0x200155ae
 800b654:	200155b0 	.word	0x200155b0

0800b658 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800b658:	b510      	push	{r4, lr}
 800b65a:	4b07      	ldr	r3, [pc, #28]	; (800b678 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800b65c:	781b      	ldrb	r3, [r3, #0]
 800b65e:	4604      	mov	r4, r0
 800b660:	b13b      	cbz	r3, 800b672 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800b662:	6803      	ldr	r3, [r0, #0]
 800b664:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b666:	4798      	blx	r3
 800b668:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800b66a:	4283      	cmp	r3, r0
 800b66c:	d101      	bne.n	800b672 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800b66e:	6c20      	ldr	r0, [r4, #64]	; 0x40
 800b670:	bd10      	pop	{r4, pc}
 800b672:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 800b674:	e7fc      	b.n	800b670 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800b676:	bf00      	nop
 800b678:	200155b2 	.word	0x200155b2

0800b67c <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 800b67c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b680:	b08a      	sub	sp, #40	; 0x28
 800b682:	461d      	mov	r5, r3
 800b684:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800b688:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b68c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800b690:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b694:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800b698:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b69c:	2400      	movs	r4, #0
 800b69e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b6a2:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 800b6a6:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b6aa:	4690      	mov	r8, r2
 800b6ac:	4607      	mov	r7, r0
 800b6ae:	9404      	str	r4, [sp, #16]
 800b6b0:	f88d 4020 	strb.w	r4, [sp, #32]
 800b6b4:	f7ff ffd0 	bl	800b658 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b6b8:	fb06 8505 	mla	r5, r6, r5, r8
 800b6bc:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800b6c0:	6878      	ldr	r0, [r7, #4]
 800b6c2:	9505      	str	r5, [sp, #20]
 800b6c4:	f8ad 601e 	strh.w	r6, [sp, #30]
 800b6c8:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800b6cc:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 800b6d0:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 800b6d4:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 800b6d8:	6803      	ldr	r3, [r0, #0]
 800b6da:	a901      	add	r1, sp, #4
 800b6dc:	685b      	ldr	r3, [r3, #4]
 800b6de:	4798      	blx	r3
 800b6e0:	b00a      	add	sp, #40	; 0x28
 800b6e2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800b6e6 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 800b6e6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b6ea:	b08b      	sub	sp, #44	; 0x2c
 800b6ec:	2400      	movs	r4, #0
 800b6ee:	461d      	mov	r5, r3
 800b6f0:	f44f 6300 	mov.w	r3, #2048	; 0x800
 800b6f4:	4688      	mov	r8, r1
 800b6f6:	4691      	mov	r9, r2
 800b6f8:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 800b6fc:	9404      	str	r4, [sp, #16]
 800b6fe:	4607      	mov	r7, r0
 800b700:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800b704:	f7ff ffa8 	bl	800b658 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b708:	fb06 9505 	mla	r5, r6, r5, r9
 800b70c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b710:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b714:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800b718:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800b71c:	6878      	ldr	r0, [r7, #4]
 800b71e:	9505      	str	r5, [sp, #20]
 800b720:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b724:	f8ad 401c 	strh.w	r4, [sp, #28]
 800b728:	f8ad 601e 	strh.w	r6, [sp, #30]
 800b72c:	f8cd 8010 	str.w	r8, [sp, #16]
 800b730:	f8ad 4020 	strh.w	r4, [sp, #32]
 800b734:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800b738:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 800b73c:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 800b740:	6803      	ldr	r3, [r0, #0]
 800b742:	a901      	add	r1, sp, #4
 800b744:	685b      	ldr	r3, [r3, #4]
 800b746:	4798      	blx	r3
 800b748:	b00b      	add	sp, #44	; 0x2c
 800b74a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

0800b750 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 800b750:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b754:	b08a      	sub	sp, #40	; 0x28
 800b756:	4698      	mov	r8, r3
 800b758:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 800b75c:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 800b760:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 800b764:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 800b768:	2300      	movs	r3, #0
 800b76a:	2d0b      	cmp	r5, #11
 800b76c:	4606      	mov	r6, r0
 800b76e:	9304      	str	r3, [sp, #16]
 800b770:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 800b774:	d138      	bne.n	800b7e8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 800b776:	2380      	movs	r3, #128	; 0x80
 800b778:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b77c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800b780:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b784:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b788:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b78c:	f88d 0020 	strb.w	r0, [sp, #32]
 800b790:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800b794:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b798:	4630      	mov	r0, r6
 800b79a:	9203      	str	r2, [sp, #12]
 800b79c:	f7ff ff5c 	bl	800b658 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b7a0:	2c0b      	cmp	r4, #11
 800b7a2:	bf98      	it	ls
 800b7a4:	4b1b      	ldrls	r3, [pc, #108]	; (800b814 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 800b7a6:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 800b7aa:	bf98      	it	ls
 800b7ac:	5d19      	ldrbls	r1, [r3, r4]
 800b7ae:	f8ad 701e 	strh.w	r7, [sp, #30]
 800b7b2:	bf88      	it	hi
 800b7b4:	2100      	movhi	r1, #0
 800b7b6:	fb02 8307 	mla	r3, r2, r7, r8
 800b7ba:	10c9      	asrs	r1, r1, #3
 800b7bc:	fb01 0003 	mla	r0, r1, r3, r0
 800b7c0:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 800b7c4:	9005      	str	r0, [sp, #20]
 800b7c6:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 800b7ca:	6870      	ldr	r0, [r6, #4]
 800b7cc:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 800b7d0:	2300      	movs	r3, #0
 800b7d2:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800b7d6:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800b7da:	6803      	ldr	r3, [r0, #0]
 800b7dc:	a901      	add	r1, sp, #4
 800b7de:	685b      	ldr	r3, [r3, #4]
 800b7e0:	4798      	blx	r3
 800b7e2:	b00a      	add	sp, #40	; 0x28
 800b7e4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b7e8:	2d02      	cmp	r5, #2
 800b7ea:	d109      	bne.n	800b800 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 800b7ec:	28ff      	cmp	r0, #255	; 0xff
 800b7ee:	d105      	bne.n	800b7fc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 800b7f0:	f1bc 0f00 	cmp.w	ip, #0
 800b7f4:	bf14      	ite	ne
 800b7f6:	2340      	movne	r3, #64	; 0x40
 800b7f8:	2320      	moveq	r3, #32
 800b7fa:	e7bd      	b.n	800b778 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b7fc:	2340      	movs	r3, #64	; 0x40
 800b7fe:	e7bb      	b.n	800b778 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b800:	28ff      	cmp	r0, #255	; 0xff
 800b802:	d105      	bne.n	800b810 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 800b804:	f1bc 0f00 	cmp.w	ip, #0
 800b808:	bf14      	ite	ne
 800b80a:	2304      	movne	r3, #4
 800b80c:	2301      	moveq	r3, #1
 800b80e:	e7b3      	b.n	800b778 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b810:	2304      	movs	r3, #4
 800b812:	e7b1      	b.n	800b778 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b814:	08023814 	.word	0x08023814

0800b818 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 800b818:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b81c:	b08b      	sub	sp, #44	; 0x2c
 800b81e:	461d      	mov	r5, r3
 800b820:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 800b824:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 800b828:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 800b82c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 800b830:	bf14      	ite	ne
 800b832:	2308      	movne	r3, #8
 800b834:	2302      	moveq	r3, #2
 800b836:	2400      	movs	r4, #0
 800b838:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800b83c:	4688      	mov	r8, r1
 800b83e:	4693      	mov	fp, r2
 800b840:	9404      	str	r4, [sp, #16]
 800b842:	4607      	mov	r7, r0
 800b844:	f7ff ff08 	bl	800b658 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b848:	2e0b      	cmp	r6, #11
 800b84a:	bf98      	it	ls
 800b84c:	4b15      	ldrls	r3, [pc, #84]	; (800b8a4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 800b84e:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 800b852:	bf98      	it	ls
 800b854:	5d9c      	ldrbls	r4, [r3, r6]
 800b856:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800b85a:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b85e:	fb05 b50a 	mla	r5, r5, sl, fp
 800b862:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800b866:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b86a:	10e4      	asrs	r4, r4, #3
 800b86c:	fb04 0405 	mla	r4, r4, r5, r0
 800b870:	2300      	movs	r3, #0
 800b872:	6878      	ldr	r0, [r7, #4]
 800b874:	9405      	str	r4, [sp, #20]
 800b876:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b87a:	f8ad a01e 	strh.w	sl, [sp, #30]
 800b87e:	f8cd 8010 	str.w	r8, [sp, #16]
 800b882:	f88d 9020 	strb.w	r9, [sp, #32]
 800b886:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 800b88a:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800b88e:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 800b892:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 800b896:	6803      	ldr	r3, [r0, #0]
 800b898:	a901      	add	r1, sp, #4
 800b89a:	685b      	ldr	r3, [r3, #4]
 800b89c:	4798      	blx	r3
 800b89e:	b00b      	add	sp, #44	; 0x2c
 800b8a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b8a4:	08023814 	.word	0x08023814

0800b8a8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800b8a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b8ac:	461e      	mov	r6, r3
 800b8ae:	4b0a      	ldr	r3, [pc, #40]	; (800b8d8 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 800b8b0:	460f      	mov	r7, r1
 800b8b2:	881d      	ldrh	r5, [r3, #0]
 800b8b4:	4690      	mov	r8, r2
 800b8b6:	f7f6 ff21 	bl	80026fc <_ZN8touchgfx3HAL3lcdEv>
 800b8ba:	6803      	ldr	r3, [r0, #0]
 800b8bc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b8be:	4798      	blx	r3
 800b8c0:	280b      	cmp	r0, #11
 800b8c2:	bf9a      	itte	ls
 800b8c4:	4b05      	ldrls	r3, [pc, #20]	; (800b8dc <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800b8c6:	5c1c      	ldrbls	r4, [r3, r0]
 800b8c8:	2400      	movhi	r4, #0
 800b8ca:	fb08 7005 	mla	r0, r8, r5, r7
 800b8ce:	10e4      	asrs	r4, r4, #3
 800b8d0:	fb04 6000 	mla	r0, r4, r0, r6
 800b8d4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b8d8:	200155ae 	.word	0x200155ae
 800b8dc:	08023814 	.word	0x08023814

0800b8e0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 800b8e0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b8e2:	b08b      	sub	sp, #44	; 0x2c
 800b8e4:	461f      	mov	r7, r3
 800b8e6:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800b8ea:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b8ee:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800b8f2:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b8f6:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800b8fa:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b8fe:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b902:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b906:	2500      	movs	r5, #0
 800b908:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800b90c:	f88d 3020 	strb.w	r3, [sp, #32]
 800b910:	4604      	mov	r4, r0
 800b912:	4616      	mov	r6, r2
 800b914:	9504      	str	r5, [sp, #16]
 800b916:	f7ff fe9f 	bl	800b658 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b91a:	463a      	mov	r2, r7
 800b91c:	4631      	mov	r1, r6
 800b91e:	4603      	mov	r3, r0
 800b920:	4620      	mov	r0, r4
 800b922:	f7ff ffc1 	bl	800b8a8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b926:	4b0e      	ldr	r3, [pc, #56]	; (800b960 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 800b928:	9005      	str	r0, [sp, #20]
 800b92a:	881b      	ldrh	r3, [r3, #0]
 800b92c:	f8ad 301e 	strh.w	r3, [sp, #30]
 800b930:	f7f6 fee4 	bl	80026fc <_ZN8touchgfx3HAL3lcdEv>
 800b934:	6803      	ldr	r3, [r0, #0]
 800b936:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b938:	4798      	blx	r3
 800b93a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800b93c:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 800b940:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 800b944:	9304      	str	r3, [sp, #16]
 800b946:	6860      	ldr	r0, [r4, #4]
 800b948:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800b94c:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 800b950:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 800b954:	6803      	ldr	r3, [r0, #0]
 800b956:	a901      	add	r1, sp, #4
 800b958:	685b      	ldr	r3, [r3, #4]
 800b95a:	4798      	blx	r3
 800b95c:	b00b      	add	sp, #44	; 0x2c
 800b95e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b960:	200155ae 	.word	0x200155ae

0800b964 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800b964:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b966:	b08d      	sub	sp, #52	; 0x34
 800b968:	466b      	mov	r3, sp
 800b96a:	e883 0006 	stmia.w	r3, {r1, r2}
 800b96e:	2300      	movs	r3, #0
 800b970:	9306      	str	r3, [sp, #24]
 800b972:	6803      	ldr	r3, [r0, #0]
 800b974:	f8bd 6000 	ldrh.w	r6, [sp]
 800b978:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b97a:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800b97e:	2501      	movs	r5, #1
 800b980:	9503      	str	r5, [sp, #12]
 800b982:	4604      	mov	r4, r0
 800b984:	4798      	blx	r3
 800b986:	463a      	mov	r2, r7
 800b988:	4631      	mov	r1, r6
 800b98a:	4603      	mov	r3, r0
 800b98c:	4620      	mov	r0, r4
 800b98e:	f7ff ff8b 	bl	800b8a8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b992:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800b994:	9307      	str	r3, [sp, #28]
 800b996:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800b99a:	f8ad 3020 	strh.w	r3, [sp, #32]
 800b99e:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800b9a2:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800b9a6:	4b0f      	ldr	r3, [pc, #60]	; (800b9e4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 800b9a8:	9004      	str	r0, [sp, #16]
 800b9aa:	881b      	ldrh	r3, [r3, #0]
 800b9ac:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800b9b0:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800b9b4:	f7f6 fea2 	bl	80026fc <_ZN8touchgfx3HAL3lcdEv>
 800b9b8:	6803      	ldr	r3, [r0, #0]
 800b9ba:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b9bc:	4798      	blx	r3
 800b9be:	23ff      	movs	r3, #255	; 0xff
 800b9c0:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 800b9c4:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800b9c8:	6860      	ldr	r0, [r4, #4]
 800b9ca:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 800b9ce:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800b9d2:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800b9d6:	6803      	ldr	r3, [r0, #0]
 800b9d8:	a903      	add	r1, sp, #12
 800b9da:	685b      	ldr	r3, [r3, #4]
 800b9dc:	4798      	blx	r3
 800b9de:	6c60      	ldr	r0, [r4, #68]	; 0x44
 800b9e0:	b00d      	add	sp, #52	; 0x34
 800b9e2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b9e4:	200155ae 	.word	0x200155ae

0800b9e8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800b9e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b9ec:	b08c      	sub	sp, #48	; 0x30
 800b9ee:	461e      	mov	r6, r3
 800b9f0:	466d      	mov	r5, sp
 800b9f2:	2300      	movs	r3, #0
 800b9f4:	e885 0006 	stmia.w	r5, {r1, r2}
 800b9f8:	9306      	str	r3, [sp, #24]
 800b9fa:	6803      	ldr	r3, [r0, #0]
 800b9fc:	f8bd 7000 	ldrh.w	r7, [sp]
 800ba00:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800ba02:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 800ba06:	2501      	movs	r5, #1
 800ba08:	9503      	str	r5, [sp, #12]
 800ba0a:	4604      	mov	r4, r0
 800ba0c:	4798      	blx	r3
 800ba0e:	4642      	mov	r2, r8
 800ba10:	4639      	mov	r1, r7
 800ba12:	4603      	mov	r3, r0
 800ba14:	4620      	mov	r0, r4
 800ba16:	f7ff ff47 	bl	800b8a8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800ba1a:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800ba1e:	f8ad 3020 	strh.w	r3, [sp, #32]
 800ba22:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800ba26:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800ba2a:	4b11      	ldr	r3, [pc, #68]	; (800ba70 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 800ba2c:	9004      	str	r0, [sp, #16]
 800ba2e:	881b      	ldrh	r3, [r3, #0]
 800ba30:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800ba34:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800ba36:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800ba3a:	9607      	str	r6, [sp, #28]
 800ba3c:	f7f6 fe5e 	bl	80026fc <_ZN8touchgfx3HAL3lcdEv>
 800ba40:	6803      	ldr	r3, [r0, #0]
 800ba42:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ba44:	4798      	blx	r3
 800ba46:	23ff      	movs	r3, #255	; 0xff
 800ba48:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 800ba4c:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800ba50:	6860      	ldr	r0, [r4, #4]
 800ba52:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 800ba56:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800ba5a:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800ba5e:	6803      	ldr	r3, [r0, #0]
 800ba60:	a903      	add	r1, sp, #12
 800ba62:	685b      	ldr	r3, [r3, #4]
 800ba64:	4798      	blx	r3
 800ba66:	4630      	mov	r0, r6
 800ba68:	b00c      	add	sp, #48	; 0x30
 800ba6a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ba6e:	bf00      	nop
 800ba70:	200155ae 	.word	0x200155ae

0800ba74 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 800ba74:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ba76:	b085      	sub	sp, #20
 800ba78:	ac02      	add	r4, sp, #8
 800ba7a:	e884 0006 	stmia.w	r4, {r1, r2}
 800ba7e:	4605      	mov	r5, r0
 800ba80:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 800ba84:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 800ba88:	f7ff fde6 	bl	800b658 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800ba8c:	463a      	mov	r2, r7
 800ba8e:	4603      	mov	r3, r0
 800ba90:	4631      	mov	r1, r6
 800ba92:	4628      	mov	r0, r5
 800ba94:	f7ff ff08 	bl	800b8a8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800ba98:	4a05      	ldr	r2, [pc, #20]	; (800bab0 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 800ba9a:	682b      	ldr	r3, [r5, #0]
 800ba9c:	8812      	ldrh	r2, [r2, #0]
 800ba9e:	9200      	str	r2, [sp, #0]
 800baa0:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 800baa2:	e894 0006 	ldmia.w	r4, {r1, r2}
 800baa6:	4603      	mov	r3, r0
 800baa8:	4628      	mov	r0, r5
 800baaa:	47b0      	blx	r6
 800baac:	b005      	add	sp, #20
 800baae:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800bab0:	200155ae 	.word	0x200155ae

0800bab4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800bab4:	b570      	push	{r4, r5, r6, lr}
 800bab6:	f890 306a 	ldrb.w	r3, [r0, #106]	; 0x6a
 800baba:	4604      	mov	r4, r0
 800babc:	b19b      	cbz	r3, 800bae6 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800babe:	2002      	movs	r0, #2
 800bac0:	f7f4 fe40 	bl	8000744 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800bac4:	2300      	movs	r3, #0
 800bac6:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800baca:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 800bace:	6823      	ldr	r3, [r4, #0]
 800bad0:	4620      	mov	r0, r4
 800bad2:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 800bad6:	f7ff fdbf 	bl	800b658 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800bada:	462b      	mov	r3, r5
 800badc:	4601      	mov	r1, r0
 800bade:	4620      	mov	r0, r4
 800bae0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bae4:	4718      	bx	r3
 800bae6:	bd70      	pop	{r4, r5, r6, pc}

0800bae8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 800bae8:	b538      	push	{r3, r4, r5, lr}
 800baea:	f890 3078 	ldrb.w	r3, [r0, #120]	; 0x78
 800baee:	428b      	cmp	r3, r1
 800baf0:	4604      	mov	r4, r0
 800baf2:	460d      	mov	r5, r1
 800baf4:	d006      	beq.n	800bb04 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 800baf6:	6803      	ldr	r3, [r0, #0]
 800baf8:	b929      	cbnz	r1, 800bb06 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 800bafa:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 800bafe:	4798      	blx	r3
 800bb00:	f884 5078 	strb.w	r5, [r4, #120]	; 0x78
 800bb04:	bd38      	pop	{r3, r4, r5, pc}
 800bb06:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 800bb0a:	e7f8      	b.n	800bafe <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0800bb0c <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800bb0c:	b510      	push	{r4, lr}
 800bb0e:	4b0d      	ldr	r3, [pc, #52]	; (800bb44 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 800bb10:	781b      	ldrb	r3, [r3, #0]
 800bb12:	4604      	mov	r4, r0
 800bb14:	b95b      	cbnz	r3, 800bb2e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800bb16:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 800bb1a:	2b02      	cmp	r3, #2
 800bb1c:	d007      	beq.n	800bb2e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800bb1e:	6840      	ldr	r0, [r0, #4]
 800bb20:	f000 f92a 	bl	800bd78 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800bb24:	b118      	cbz	r0, 800bb2e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800bb26:	6862      	ldr	r2, [r4, #4]
 800bb28:	7a53      	ldrb	r3, [r2, #9]
 800bb2a:	2b00      	cmp	r3, #0
 800bb2c:	d0fc      	beq.n	800bb28 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 800bb2e:	f7f4 ff03 	bl	8000938 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800bb32:	4620      	mov	r0, r4
 800bb34:	2100      	movs	r1, #0
 800bb36:	f7ff ffd7 	bl	800bae8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800bb3a:	4620      	mov	r0, r4
 800bb3c:	f7ff fd8c 	bl	800b658 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800bb40:	bd10      	pop	{r4, pc}
 800bb42:	bf00      	nop
 800bb44:	200155b2 	.word	0x200155b2

0800bb48 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 800bb48:	b570      	push	{r4, r5, r6, lr}
 800bb4a:	4604      	mov	r4, r0
 800bb4c:	6803      	ldr	r3, [r0, #0]
 800bb4e:	b919      	cbnz	r1, 800bb58 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 800bb50:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800bb52:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bb56:	4718      	bx	r3
 800bb58:	2200      	movs	r2, #0
 800bb5a:	f890 6078 	ldrb.w	r6, [r0, #120]	; 0x78
 800bb5e:	f880 2078 	strb.w	r2, [r0, #120]	; 0x78
 800bb62:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800bb64:	4798      	blx	r3
 800bb66:	f884 6078 	strb.w	r6, [r4, #120]	; 0x78
 800bb6a:	4605      	mov	r5, r0
 800bb6c:	2101      	movs	r1, #1
 800bb6e:	4620      	mov	r0, r4
 800bb70:	f7ff ffba 	bl	800bae8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800bb74:	4628      	mov	r0, r5
 800bb76:	bd70      	pop	{r4, r5, r6, pc}

0800bb78 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800bb78:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800bb7c:	1a13      	subs	r3, r2, r0
 800bb7e:	4258      	negs	r0, r3
 800bb80:	4158      	adcs	r0, r3
 800bb82:	4770      	bx	lr

0800bb84 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800bb84:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800bb88:	1a9b      	subs	r3, r3, r2
 800bb8a:	2b00      	cmp	r3, #0
 800bb8c:	bfdc      	itt	le
 800bb8e:	6882      	ldrle	r2, [r0, #8]
 800bb90:	189b      	addle	r3, r3, r2
 800bb92:	2b01      	cmp	r3, #1
 800bb94:	bfcc      	ite	gt
 800bb96:	2000      	movgt	r0, #0
 800bb98:	2001      	movle	r0, #1
 800bb9a:	4770      	bx	lr

0800bb9c <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800bb9c:	6902      	ldr	r2, [r0, #16]
 800bb9e:	6843      	ldr	r3, [r0, #4]
 800bba0:	2024      	movs	r0, #36	; 0x24
 800bba2:	fb00 3002 	mla	r0, r0, r2, r3
 800bba6:	4770      	bx	lr

0800bba8 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800bba8:	6803      	ldr	r3, [r0, #0]
 800bbaa:	691b      	ldr	r3, [r3, #16]
 800bbac:	4718      	bx	r3

0800bbae <_ZN8touchgfx13DMA_Interface7executeEv>:
 800bbae:	b570      	push	{r4, r5, r6, lr}
 800bbb0:	2301      	movs	r3, #1
 800bbb2:	7203      	strb	r3, [r0, #8]
 800bbb4:	4604      	mov	r4, r0
 800bbb6:	6840      	ldr	r0, [r0, #4]
 800bbb8:	6803      	ldr	r3, [r0, #0]
 800bbba:	699b      	ldr	r3, [r3, #24]
 800bbbc:	4798      	blx	r3
 800bbbe:	6803      	ldr	r3, [r0, #0]
 800bbc0:	2b40      	cmp	r3, #64	; 0x40
 800bbc2:	4605      	mov	r5, r0
 800bbc4:	d00c      	beq.n	800bbe0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800bbc6:	d810      	bhi.n	800bbea <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 800bbc8:	2b04      	cmp	r3, #4
 800bbca:	d01d      	beq.n	800bc08 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 800bbcc:	d804      	bhi.n	800bbd8 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 800bbce:	2b01      	cmp	r3, #1
 800bbd0:	d006      	beq.n	800bbe0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800bbd2:	2b02      	cmp	r3, #2
 800bbd4:	d02c      	beq.n	800bc30 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 800bbd6:	bd70      	pop	{r4, r5, r6, pc}
 800bbd8:	2b08      	cmp	r3, #8
 800bbda:	d01d      	beq.n	800bc18 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 800bbdc:	2b20      	cmp	r3, #32
 800bbde:	d1fa      	bne.n	800bbd6 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 800bbe0:	6823      	ldr	r3, [r4, #0]
 800bbe2:	4620      	mov	r0, r4
 800bbe4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800bbe6:	4798      	blx	r3
 800bbe8:	e013      	b.n	800bc12 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800bbea:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800bbee:	d0f7      	beq.n	800bbe0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800bbf0:	d804      	bhi.n	800bbfc <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 800bbf2:	2b80      	cmp	r3, #128	; 0x80
 800bbf4:	d0f4      	beq.n	800bbe0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800bbf6:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800bbfa:	e7f0      	b.n	800bbde <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 800bbfc:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800bc00:	d0ee      	beq.n	800bbe0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800bc02:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800bc06:	e7e5      	b.n	800bbd4 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 800bc08:	6823      	ldr	r3, [r4, #0]
 800bc0a:	7f01      	ldrb	r1, [r0, #28]
 800bc0c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800bc0e:	4620      	mov	r0, r4
 800bc10:	4798      	blx	r3
 800bc12:	6823      	ldr	r3, [r4, #0]
 800bc14:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800bc16:	e006      	b.n	800bc26 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800bc18:	6823      	ldr	r3, [r4, #0]
 800bc1a:	7f01      	ldrb	r1, [r0, #28]
 800bc1c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800bc1e:	4620      	mov	r0, r4
 800bc20:	4798      	blx	r3
 800bc22:	6823      	ldr	r3, [r4, #0]
 800bc24:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800bc26:	4629      	mov	r1, r5
 800bc28:	4620      	mov	r0, r4
 800bc2a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bc2e:	4718      	bx	r3
 800bc30:	6823      	ldr	r3, [r4, #0]
 800bc32:	4620      	mov	r0, r4
 800bc34:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800bc36:	4798      	blx	r3
 800bc38:	e7f3      	b.n	800bc22 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

0800bc3a <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800bc3a:	4770      	bx	lr

0800bc3c <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800bc3c:	4770      	bx	lr

0800bc3e <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800bc3e:	4770      	bx	lr

0800bc40 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800bc40:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 800bc44:	1ad2      	subs	r2, r2, r3
 800bc46:	2a00      	cmp	r2, #0
 800bc48:	b510      	push	{r4, lr}
 800bc4a:	bfdc      	itt	le
 800bc4c:	6884      	ldrle	r4, [r0, #8]
 800bc4e:	1912      	addle	r2, r2, r4
 800bc50:	2a01      	cmp	r2, #1
 800bc52:	dd16      	ble.n	800bc82 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 800bc54:	6842      	ldr	r2, [r0, #4]
 800bc56:	2424      	movs	r4, #36	; 0x24
 800bc58:	fb04 2303 	mla	r3, r4, r3, r2
 800bc5c:	f101 0220 	add.w	r2, r1, #32
 800bc60:	f851 4b04 	ldr.w	r4, [r1], #4
 800bc64:	f843 4b04 	str.w	r4, [r3], #4
 800bc68:	4291      	cmp	r1, r2
 800bc6a:	d1f9      	bne.n	800bc60 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 800bc6c:	780a      	ldrb	r2, [r1, #0]
 800bc6e:	701a      	strb	r2, [r3, #0]
 800bc70:	68c3      	ldr	r3, [r0, #12]
 800bc72:	6882      	ldr	r2, [r0, #8]
 800bc74:	f3bf 8f5b 	dmb	ish
 800bc78:	3301      	adds	r3, #1
 800bc7a:	429a      	cmp	r2, r3
 800bc7c:	bfd8      	it	le
 800bc7e:	1a9b      	suble	r3, r3, r2
 800bc80:	60c3      	str	r3, [r0, #12]
 800bc82:	bd10      	pop	{r4, pc}

0800bc84 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800bc84:	6903      	ldr	r3, [r0, #16]
 800bc86:	6882      	ldr	r2, [r0, #8]
 800bc88:	f3bf 8f5b 	dmb	ish
 800bc8c:	3301      	adds	r3, #1
 800bc8e:	429a      	cmp	r2, r3
 800bc90:	bfd8      	it	le
 800bc92:	1a9b      	suble	r3, r3, r2
 800bc94:	6103      	str	r3, [r0, #16]
 800bc96:	4770      	bx	lr

0800bc98 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800bc98:	b570      	push	{r4, r5, r6, lr}
 800bc9a:	4604      	mov	r4, r0
 800bc9c:	460e      	mov	r6, r1
 800bc9e:	6860      	ldr	r0, [r4, #4]
 800bca0:	6803      	ldr	r3, [r0, #0]
 800bca2:	685b      	ldr	r3, [r3, #4]
 800bca4:	4798      	blx	r3
 800bca6:	2800      	cmp	r0, #0
 800bca8:	d1f9      	bne.n	800bc9e <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800bcaa:	4d0d      	ldr	r5, [pc, #52]	; (800bce0 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800bcac:	6828      	ldr	r0, [r5, #0]
 800bcae:	6803      	ldr	r3, [r0, #0]
 800bcb0:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800bcb2:	4798      	blx	r3
 800bcb4:	f7f4 fe4e 	bl	8000954 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800bcb8:	6828      	ldr	r0, [r5, #0]
 800bcba:	2101      	movs	r1, #1
 800bcbc:	f7ff ff14 	bl	800bae8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800bcc0:	6860      	ldr	r0, [r4, #4]
 800bcc2:	6803      	ldr	r3, [r0, #0]
 800bcc4:	4631      	mov	r1, r6
 800bcc6:	689b      	ldr	r3, [r3, #8]
 800bcc8:	4798      	blx	r3
 800bcca:	6823      	ldr	r3, [r4, #0]
 800bccc:	4620      	mov	r0, r4
 800bcce:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800bcd0:	4798      	blx	r3
 800bcd2:	6828      	ldr	r0, [r5, #0]
 800bcd4:	6803      	ldr	r3, [r0, #0]
 800bcd6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bcda:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800bcdc:	4718      	bx	r3
 800bcde:	bf00      	nop
 800bce0:	200155b4 	.word	0x200155b4

0800bce4 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800bce4:	b508      	push	{r3, lr}
 800bce6:	f7f4 fe27 	bl	8000938 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800bcea:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800bcee:	f7f4 be2b 	b.w	8000948 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800bcf2 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800bcf2:	b510      	push	{r4, lr}
 800bcf4:	2114      	movs	r1, #20
 800bcf6:	4604      	mov	r4, r0
 800bcf8:	f014 fcee 	bl	80206d8 <_ZdlPvj>
 800bcfc:	4620      	mov	r0, r4
 800bcfe:	bd10      	pop	{r4, pc}

0800bd00 <_ZN8touchgfx13DMA_Interface5startEv>:
 800bd00:	b510      	push	{r4, lr}
 800bd02:	4604      	mov	r4, r0
 800bd04:	6840      	ldr	r0, [r0, #4]
 800bd06:	6803      	ldr	r3, [r0, #0]
 800bd08:	681b      	ldr	r3, [r3, #0]
 800bd0a:	4798      	blx	r3
 800bd0c:	b948      	cbnz	r0, 800bd22 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800bd0e:	7a63      	ldrb	r3, [r4, #9]
 800bd10:	b13b      	cbz	r3, 800bd22 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800bd12:	7a23      	ldrb	r3, [r4, #8]
 800bd14:	b92b      	cbnz	r3, 800bd22 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800bd16:	6823      	ldr	r3, [r4, #0]
 800bd18:	4620      	mov	r0, r4
 800bd1a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800bd1c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bd20:	4718      	bx	r3
 800bd22:	bd10      	pop	{r4, pc}

0800bd24 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800bd24:	b570      	push	{r4, r5, r6, lr}
 800bd26:	4604      	mov	r4, r0
 800bd28:	6840      	ldr	r0, [r0, #4]
 800bd2a:	6803      	ldr	r3, [r0, #0]
 800bd2c:	681b      	ldr	r3, [r3, #0]
 800bd2e:	4798      	blx	r3
 800bd30:	4605      	mov	r5, r0
 800bd32:	b930      	cbnz	r0, 800bd42 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800bd34:	7a23      	ldrb	r3, [r4, #8]
 800bd36:	b123      	cbz	r3, 800bd42 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800bd38:	6860      	ldr	r0, [r4, #4]
 800bd3a:	6803      	ldr	r3, [r0, #0]
 800bd3c:	695b      	ldr	r3, [r3, #20]
 800bd3e:	4798      	blx	r3
 800bd40:	7225      	strb	r5, [r4, #8]
 800bd42:	6860      	ldr	r0, [r4, #4]
 800bd44:	6803      	ldr	r3, [r0, #0]
 800bd46:	681b      	ldr	r3, [r3, #0]
 800bd48:	4798      	blx	r3
 800bd4a:	b928      	cbnz	r0, 800bd58 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800bd4c:	6823      	ldr	r3, [r4, #0]
 800bd4e:	4620      	mov	r0, r4
 800bd50:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800bd52:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bd56:	4718      	bx	r3
 800bd58:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bd5c:	f7f4 be02 	b.w	8000964 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800bd60 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800bd60:	b510      	push	{r4, lr}
 800bd62:	4c04      	ldr	r4, [pc, #16]	; (800bd74 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800bd64:	6082      	str	r2, [r0, #8]
 800bd66:	2200      	movs	r2, #0
 800bd68:	e9c0 4100 	strd	r4, r1, [r0]
 800bd6c:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800bd70:	bd10      	pop	{r4, pc}
 800bd72:	bf00      	nop
 800bd74:	08023828 	.word	0x08023828

0800bd78 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800bd78:	6840      	ldr	r0, [r0, #4]
 800bd7a:	6803      	ldr	r3, [r0, #0]
 800bd7c:	681b      	ldr	r3, [r3, #0]
 800bd7e:	4718      	bx	r3

0800bd80 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 800bd80:	4b06      	ldr	r3, [pc, #24]	; (800bd9c <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
 800bd82:	60c1      	str	r1, [r0, #12]
 800bd84:	094a      	lsrs	r2, r1, #5
 800bd86:	ea03 2311 	and.w	r3, r3, r1, lsr #8
 800bd8a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 800bd8e:	4313      	orrs	r3, r2
 800bd90:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 800bd94:	4319      	orrs	r1, r3
 800bd96:	8201      	strh	r1, [r0, #16]
 800bd98:	4770      	bx	lr
 800bd9a:	bf00      	nop
 800bd9c:	fffff800 	.word	0xfffff800

0800bda0 <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 800bda0:	f1a0 0008 	sub.w	r0, r0, #8
 800bda4:	e7ec      	b.n	800bd80 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 800bda6:	bf00      	nop

0800bda8 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 800bda8:	b508      	push	{r3, lr}
 800bdaa:	4b05      	ldr	r3, [pc, #20]	; (800bdc0 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 800bdac:	6818      	ldr	r0, [r3, #0]
 800bdae:	6803      	ldr	r3, [r0, #0]
 800bdb0:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 800bdb4:	4798      	blx	r3
 800bdb6:	1e43      	subs	r3, r0, #1
 800bdb8:	4258      	negs	r0, r3
 800bdba:	4158      	adcs	r0, r3
 800bdbc:	bd08      	pop	{r3, pc}
 800bdbe:	bf00      	nop
 800bdc0:	200155b4 	.word	0x200155b4

0800bdc4 <_ZN8touchgfx13PainterRGB565D1Ev>:
 800bdc4:	4770      	bx	lr

0800bdc6 <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 800bdc6:	3808      	subs	r0, #8
 800bdc8:	4770      	bx	lr

0800bdca <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 800bdca:	b430      	push	{r4, r5}
 800bdcc:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 800bdd0:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 800bdd4:	8a02      	ldrh	r2, [r0, #16]
 800bdd6:	9202      	str	r2, [sp, #8]
 800bdd8:	f89d 3010 	ldrb.w	r3, [sp, #16]
 800bddc:	68c2      	ldr	r2, [r0, #12]
 800bdde:	4629      	mov	r1, r5
 800bde0:	4620      	mov	r0, r4
 800bde2:	bc30      	pop	{r4, r5}
 800bde4:	f7f4 bf7c 	b.w	8000ce0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

0800bde8 <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 800bde8:	f7f4 bf70 	b.w	8000ccc <_ZN8touchgfx5paint6rgb5658tearDownEv>

0800bdec <_ZN8touchgfx13PainterRGB565D0Ev>:
 800bdec:	b510      	push	{r4, lr}
 800bdee:	2114      	movs	r1, #20
 800bdf0:	4604      	mov	r4, r0
 800bdf2:	f014 fc71 	bl	80206d8 <_ZdlPvj>
 800bdf6:	4620      	mov	r0, r4
 800bdf8:	bd10      	pop	{r4, pc}

0800bdfa <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 800bdfa:	f1a0 0008 	sub.w	r0, r0, #8
 800bdfe:	e7f5      	b.n	800bdec <_ZN8touchgfx13PainterRGB565D0Ev>

0800be00 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 800be00:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800be02:	6803      	ldr	r3, [r0, #0]
 800be04:	460d      	mov	r5, r1
 800be06:	4604      	mov	r4, r0
 800be08:	4601      	mov	r1, r0
 800be0a:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800be0c:	a802      	add	r0, sp, #8
 800be0e:	4798      	blx	r3
 800be10:	6828      	ldr	r0, [r5, #0]
 800be12:	6869      	ldr	r1, [r5, #4]
 800be14:	466b      	mov	r3, sp
 800be16:	c303      	stmia	r3!, {r0, r1}
 800be18:	4668      	mov	r0, sp
 800be1a:	4619      	mov	r1, r3
 800be1c:	f7fe ffae 	bl	800ad7c <_ZN8touchgfx4RectaNERKS0_>
 800be20:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800be22:	b1a8      	cbz	r0, 800be50 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
 800be24:	6803      	ldr	r3, [r0, #0]
 800be26:	1d21      	adds	r1, r4, #4
 800be28:	68db      	ldr	r3, [r3, #12]
 800be2a:	4798      	blx	r3
 800be2c:	b180      	cbz	r0, 800be50 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
 800be2e:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800be32:	2b00      	cmp	r3, #0
 800be34:	dd0c      	ble.n	800be50 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
 800be36:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 800be3a:	2d00      	cmp	r5, #0
 800be3c:	dd08      	ble.n	800be50 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
 800be3e:	4a2d      	ldr	r2, [pc, #180]	; (800bef4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xf4>)
 800be40:	7812      	ldrb	r2, [r2, #0]
 800be42:	b13a      	cbz	r2, 800be54 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x54>
 800be44:	2a01      	cmp	r2, #1
 800be46:	d02d      	beq.n	800bea4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa4>
 800be48:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800be4a:	6803      	ldr	r3, [r0, #0]
 800be4c:	691b      	ldr	r3, [r3, #16]
 800be4e:	4798      	blx	r3
 800be50:	b004      	add	sp, #16
 800be52:	bd70      	pop	{r4, r5, r6, pc}
 800be54:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800be58:	441d      	add	r5, r3
 800be5a:	b2ad      	uxth	r5, r5
 800be5c:	b22e      	sxth	r6, r5
 800be5e:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 800be62:	42b3      	cmp	r3, r6
 800be64:	daf0      	bge.n	800be48 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800be66:	6823      	ldr	r3, [r4, #0]
 800be68:	4669      	mov	r1, sp
 800be6a:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800be6c:	4620      	mov	r0, r4
 800be6e:	4798      	blx	r3
 800be70:	b940      	cbnz	r0, 800be84 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x84>
 800be72:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800be76:	2b01      	cmp	r3, #1
 800be78:	d004      	beq.n	800be84 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x84>
 800be7a:	3301      	adds	r3, #1
 800be7c:	105b      	asrs	r3, r3, #1
 800be7e:	f8ad 3006 	strh.w	r3, [sp, #6]
 800be82:	e7f0      	b.n	800be66 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x66>
 800be84:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800be88:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800be8c:	4413      	add	r3, r2
 800be8e:	b29b      	uxth	r3, r3
 800be90:	441a      	add	r2, r3
 800be92:	b212      	sxth	r2, r2
 800be94:	4296      	cmp	r6, r2
 800be96:	f8ad 3002 	strh.w	r3, [sp, #2]
 800be9a:	dae0      	bge.n	800be5e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 800be9c:	1aeb      	subs	r3, r5, r3
 800be9e:	f8ad 3006 	strh.w	r3, [sp, #6]
 800bea2:	e7dc      	b.n	800be5e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 800bea4:	f8bd 5000 	ldrh.w	r5, [sp]
 800bea8:	441d      	add	r5, r3
 800beaa:	b2ad      	uxth	r5, r5
 800beac:	b22e      	sxth	r6, r5
 800beae:	f9bd 3000 	ldrsh.w	r3, [sp]
 800beb2:	42b3      	cmp	r3, r6
 800beb4:	dac8      	bge.n	800be48 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800beb6:	6823      	ldr	r3, [r4, #0]
 800beb8:	4669      	mov	r1, sp
 800beba:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800bebc:	4620      	mov	r0, r4
 800bebe:	4798      	blx	r3
 800bec0:	b940      	cbnz	r0, 800bed4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xd4>
 800bec2:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800bec6:	2b01      	cmp	r3, #1
 800bec8:	d004      	beq.n	800bed4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xd4>
 800beca:	3301      	adds	r3, #1
 800becc:	105b      	asrs	r3, r3, #1
 800bece:	f8ad 3004 	strh.w	r3, [sp, #4]
 800bed2:	e7f0      	b.n	800beb6 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xb6>
 800bed4:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 800bed8:	f8bd 3000 	ldrh.w	r3, [sp]
 800bedc:	4413      	add	r3, r2
 800bede:	b29b      	uxth	r3, r3
 800bee0:	441a      	add	r2, r3
 800bee2:	b212      	sxth	r2, r2
 800bee4:	4296      	cmp	r6, r2
 800bee6:	f8ad 3000 	strh.w	r3, [sp]
 800beea:	dae0      	bge.n	800beae <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 800beec:	1aeb      	subs	r3, r5, r3
 800beee:	f8ad 3004 	strh.w	r3, [sp, #4]
 800bef2:	e7dc      	b.n	800beae <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 800bef4:	200155ac 	.word	0x200155ac

0800bef8 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 800bef8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800befa:	6803      	ldr	r3, [r0, #0]
 800befc:	4604      	mov	r4, r0
 800befe:	4601      	mov	r1, r0
 800bf00:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800bf02:	4668      	mov	r0, sp
 800bf04:	4798      	blx	r3
 800bf06:	2100      	movs	r1, #0
 800bf08:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800bf0c:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800bf10:	9102      	str	r1, [sp, #8]
 800bf12:	4668      	mov	r0, sp
 800bf14:	a902      	add	r1, sp, #8
 800bf16:	f8ad 200c 	strh.w	r2, [sp, #12]
 800bf1a:	f8ad 300e 	strh.w	r3, [sp, #14]
 800bf1e:	f7fe ff2d 	bl	800ad7c <_ZN8touchgfx4RectaNERKS0_>
 800bf22:	6823      	ldr	r3, [r4, #0]
 800bf24:	4669      	mov	r1, sp
 800bf26:	691b      	ldr	r3, [r3, #16]
 800bf28:	4620      	mov	r0, r4
 800bf2a:	4798      	blx	r3
 800bf2c:	b004      	add	sp, #16
 800bf2e:	bd10      	pop	{r4, pc}

0800bf30 <_ZN8touchgfx12CanvasWidgetC1Ev>:
 800bf30:	2101      	movs	r1, #1
 800bf32:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800bf36:	490b      	ldr	r1, [pc, #44]	; (800bf64 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 800bf38:	6001      	str	r1, [r0, #0]
 800bf3a:	2200      	movs	r2, #0
 800bf3c:	21ff      	movs	r1, #255	; 0xff
 800bf3e:	8082      	strh	r2, [r0, #4]
 800bf40:	80c2      	strh	r2, [r0, #6]
 800bf42:	8102      	strh	r2, [r0, #8]
 800bf44:	8142      	strh	r2, [r0, #10]
 800bf46:	8182      	strh	r2, [r0, #12]
 800bf48:	81c2      	strh	r2, [r0, #14]
 800bf4a:	8202      	strh	r2, [r0, #16]
 800bf4c:	8242      	strh	r2, [r0, #18]
 800bf4e:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800bf52:	61c2      	str	r2, [r0, #28]
 800bf54:	8402      	strh	r2, [r0, #32]
 800bf56:	8442      	strh	r2, [r0, #34]	; 0x22
 800bf58:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800bf5c:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
 800bf60:	6282      	str	r2, [r0, #40]	; 0x28
 800bf62:	4770      	bx	lr
 800bf64:	08023884 	.word	0x08023884

0800bf68 <_ZN8touchgfx17AbstractDataGraph9setScaleXEib>:
 800bf68:	6301      	str	r1, [r0, #48]	; 0x30
 800bf6a:	4770      	bx	lr

0800bf6c <_ZNK8touchgfx17AbstractDataGraph9getScaleXEv>:
 800bf6c:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800bf6e:	4770      	bx	lr

0800bf70 <_ZN8touchgfx17AbstractDataGraph9setScaleYEib>:
 800bf70:	6341      	str	r1, [r0, #52]	; 0x34
 800bf72:	4770      	bx	lr

0800bf74 <_ZNK8touchgfx17AbstractDataGraph9getScaleYEv>:
 800bf74:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800bf76:	4770      	bx	lr

0800bf78 <_ZN8touchgfx16DynamicDataGraph14beforeAddValueEv>:
 800bf78:	4770      	bx	lr

0800bf7a <_ZNK8touchgfx16DynamicDataGraph9dataIndexEs>:
 800bf7a:	4608      	mov	r0, r1
 800bf7c:	4770      	bx	lr

0800bf7e <_ZNK8touchgfx16DynamicDataGraph18indexToGlobalIndexEs>:
 800bf7e:	4608      	mov	r0, r1
 800bf80:	4770      	bx	lr

0800bf82 <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE>:
 800bf82:	b530      	push	{r4, r5, lr}
 800bf84:	460d      	mov	r5, r1
 800bf86:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 800bf88:	8949      	ldrh	r1, [r1, #10]
 800bf8a:	1ac9      	subs	r1, r1, r3
 800bf8c:	6803      	ldr	r3, [r0, #0]
 800bf8e:	b085      	sub	sp, #20
 800bf90:	f8d3 3104 	ldr.w	r3, [r3, #260]	; 0x104
 800bf94:	f10d 0206 	add.w	r2, sp, #6
 800bf98:	b209      	sxth	r1, r1
 800bf9a:	4604      	mov	r4, r0
 800bf9c:	4798      	blx	r3
 800bf9e:	b1a0      	cbz	r0, 800bfca <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 800bfa0:	792b      	ldrb	r3, [r5, #4]
 800bfa2:	b993      	cbnz	r3, 800bfca <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 800bfa4:	f8d4 0128 	ldr.w	r0, [r4, #296]	; 0x128
 800bfa8:	b178      	cbz	r0, 800bfca <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 800bfaa:	6803      	ldr	r3, [r0, #0]
 800bfac:	68db      	ldr	r3, [r3, #12]
 800bfae:	4798      	blx	r3
 800bfb0:	b158      	cbz	r0, 800bfca <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 800bfb2:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800bfb6:	f8d4 0128 	ldr.w	r0, [r4, #296]	; 0x128
 800bfba:	f8ad 3008 	strh.w	r3, [sp, #8]
 800bfbe:	9503      	str	r5, [sp, #12]
 800bfc0:	6803      	ldr	r3, [r0, #0]
 800bfc2:	aa02      	add	r2, sp, #8
 800bfc4:	689b      	ldr	r3, [r3, #8]
 800bfc6:	4621      	mov	r1, r4
 800bfc8:	4798      	blx	r3
 800bfca:	b005      	add	sp, #20
 800bfcc:	bd30      	pop	{r4, r5, pc}

0800bfce <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii>:
 800bfce:	b510      	push	{r4, lr}
 800bfd0:	428a      	cmp	r2, r1
 800bfd2:	bfbe      	ittt	lt
 800bfd4:	460b      	movlt	r3, r1
 800bfd6:	4611      	movlt	r1, r2
 800bfd8:	461a      	movlt	r2, r3
 800bfda:	f8d0 312c 	ldr.w	r3, [r0, #300]	; 0x12c
 800bfde:	428b      	cmp	r3, r1
 800bfe0:	4604      	mov	r4, r0
 800bfe2:	d103      	bne.n	800bfec <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii+0x1e>
 800bfe4:	f8d0 3130 	ldr.w	r3, [r0, #304]	; 0x130
 800bfe8:	4293      	cmp	r3, r2
 800bfea:	d011      	beq.n	800c010 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii+0x42>
 800bfec:	f8c4 112c 	str.w	r1, [r4, #300]	; 0x12c
 800bff0:	f8c4 2130 	str.w	r2, [r4, #304]	; 0x130
 800bff4:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 800bff8:	f005 ffe9 	bl	8011fce <_ZNK8touchgfx8Drawable10invalidateEv>
 800bffc:	f104 0038 	add.w	r0, r4, #56	; 0x38
 800c000:	f005 ffe5 	bl	8011fce <_ZNK8touchgfx8Drawable10invalidateEv>
 800c004:	f104 00e8 	add.w	r0, r4, #232	; 0xe8
 800c008:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c00c:	f005 bfdf 	b.w	8011fce <_ZNK8touchgfx8Drawable10invalidateEv>
 800c010:	bd10      	pop	{r4, pc}

0800c012 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii>:
 800c012:	b510      	push	{r4, lr}
 800c014:	428a      	cmp	r2, r1
 800c016:	bfbe      	ittt	lt
 800c018:	460b      	movlt	r3, r1
 800c01a:	4611      	movlt	r1, r2
 800c01c:	461a      	movlt	r2, r3
 800c01e:	f8d0 3134 	ldr.w	r3, [r0, #308]	; 0x134
 800c022:	428b      	cmp	r3, r1
 800c024:	4604      	mov	r4, r0
 800c026:	d103      	bne.n	800c030 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii+0x1e>
 800c028:	f8d0 3138 	ldr.w	r3, [r0, #312]	; 0x138
 800c02c:	4293      	cmp	r3, r2
 800c02e:	d011      	beq.n	800c054 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii+0x42>
 800c030:	f8c4 1134 	str.w	r1, [r4, #308]	; 0x134
 800c034:	f8c4 2138 	str.w	r2, [r4, #312]	; 0x138
 800c038:	f104 0064 	add.w	r0, r4, #100	; 0x64
 800c03c:	f005 ffc7 	bl	8011fce <_ZNK8touchgfx8Drawable10invalidateEv>
 800c040:	f104 0038 	add.w	r0, r4, #56	; 0x38
 800c044:	f005 ffc3 	bl	8011fce <_ZNK8touchgfx8Drawable10invalidateEv>
 800c048:	f104 0090 	add.w	r0, r4, #144	; 0x90
 800c04c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c050:	f005 bfbd 	b.w	8011fce <_ZNK8touchgfx8Drawable10invalidateEv>
 800c054:	bd10      	pop	{r4, pc}

0800c056 <_ZN8touchgfx17AbstractDataGraph5clearEv>:
 800c056:	2300      	movs	r3, #0
 800c058:	f8a0 311e 	strh.w	r3, [r0, #286]	; 0x11e
 800c05c:	3038      	adds	r0, #56	; 0x38
 800c05e:	f005 bfb6 	b.w	8011fce <_ZNK8touchgfx8Drawable10invalidateEv>

0800c062 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi>:
 800c062:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c066:	f9b0 311e 	ldrsh.w	r3, [r0, #286]	; 0x11e
 800c06a:	4605      	mov	r5, r0
 800c06c:	4688      	mov	r8, r1
 800c06e:	4617      	mov	r7, r2
 800c070:	2b00      	cmp	r3, #0
 800c072:	d03f      	beq.n	800c0f4 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x92>
 800c074:	6803      	ldr	r3, [r0, #0]
 800c076:	f8d3 3130 	ldr.w	r3, [r3, #304]	; 0x130
 800c07a:	4798      	blx	r3
 800c07c:	682b      	ldr	r3, [r5, #0]
 800c07e:	4604      	mov	r4, r0
 800c080:	f8d3 3134 	ldr.w	r3, [r3, #308]	; 0x134
 800c084:	4628      	mov	r0, r5
 800c086:	4798      	blx	r3
 800c088:	4284      	cmp	r4, r0
 800c08a:	bfc8      	it	gt
 800c08c:	4623      	movgt	r3, r4
 800c08e:	f9b5 611e 	ldrsh.w	r6, [r5, #286]	; 0x11e
 800c092:	bfc4      	itt	gt
 800c094:	4604      	movgt	r4, r0
 800c096:	4618      	movgt	r0, r3
 800c098:	ea24 73e4 	bic.w	r3, r4, r4, asr #31
 800c09c:	42b3      	cmp	r3, r6
 800c09e:	da29      	bge.n	800c0f4 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x92>
 800c0a0:	42b0      	cmp	r0, r6
 800c0a2:	bfa8      	it	ge
 800c0a4:	4630      	movge	r0, r6
 800c0a6:	2800      	cmp	r0, #0
 800c0a8:	db24      	blt.n	800c0f4 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x92>
 800c0aa:	f1b8 0f00 	cmp.w	r8, #0
 800c0ae:	d11e      	bne.n	800c0ee <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x8c>
 800c0b0:	f8d5 2144 	ldr.w	r2, [r5, #324]	; 0x144
 800c0b4:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 800c0b8:	460c      	mov	r4, r1
 800c0ba:	009a      	lsls	r2, r3, #2
 800c0bc:	4298      	cmp	r0, r3
 800c0be:	dd0b      	ble.n	800c0d8 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x76>
 800c0c0:	f8d5 6144 	ldr.w	r6, [r5, #324]	; 0x144
 800c0c4:	58b6      	ldr	r6, [r6, r2]
 800c0c6:	42b1      	cmp	r1, r6
 800c0c8:	bfa8      	it	ge
 800c0ca:	4631      	movge	r1, r6
 800c0cc:	42b4      	cmp	r4, r6
 800c0ce:	bfb8      	it	lt
 800c0d0:	4634      	movlt	r4, r6
 800c0d2:	3301      	adds	r3, #1
 800c0d4:	3204      	adds	r2, #4
 800c0d6:	e7f1      	b.n	800c0bc <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x5a>
 800c0d8:	1bc9      	subs	r1, r1, r7
 800c0da:	193a      	adds	r2, r7, r4
 800c0dc:	4291      	cmp	r1, r2
 800c0de:	d009      	beq.n	800c0f4 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x92>
 800c0e0:	682b      	ldr	r3, [r5, #0]
 800c0e2:	4628      	mov	r0, r5
 800c0e4:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800c0e8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800c0ec:	4718      	bx	r3
 800c0ee:	427c      	negs	r4, r7
 800c0f0:	4639      	mov	r1, r7
 800c0f2:	e7e2      	b.n	800c0ba <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x58>
 800c0f4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800c0f8 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE>:
 800c0f8:	b530      	push	{r4, r5, lr}
 800c0fa:	790b      	ldrb	r3, [r1, #4]
 800c0fc:	2b02      	cmp	r3, #2
 800c0fe:	b085      	sub	sp, #20
 800c100:	4604      	mov	r4, r0
 800c102:	460d      	mov	r5, r1
 800c104:	d020      	beq.n	800c148 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800c106:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 800c108:	88c9      	ldrh	r1, [r1, #6]
 800c10a:	1ac9      	subs	r1, r1, r3
 800c10c:	6803      	ldr	r3, [r0, #0]
 800c10e:	f10d 0206 	add.w	r2, sp, #6
 800c112:	f8d3 3104 	ldr.w	r3, [r3, #260]	; 0x104
 800c116:	b209      	sxth	r1, r1
 800c118:	4798      	blx	r3
 800c11a:	b1a8      	cbz	r0, 800c148 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800c11c:	792b      	ldrb	r3, [r5, #4]
 800c11e:	2b01      	cmp	r3, #1
 800c120:	d812      	bhi.n	800c148 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800c122:	f8d4 0124 	ldr.w	r0, [r4, #292]	; 0x124
 800c126:	b178      	cbz	r0, 800c148 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800c128:	6803      	ldr	r3, [r0, #0]
 800c12a:	68db      	ldr	r3, [r3, #12]
 800c12c:	4798      	blx	r3
 800c12e:	b158      	cbz	r0, 800c148 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800c130:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800c134:	f8d4 0124 	ldr.w	r0, [r4, #292]	; 0x124
 800c138:	f8ad 3008 	strh.w	r3, [sp, #8]
 800c13c:	9503      	str	r5, [sp, #12]
 800c13e:	6803      	ldr	r3, [r0, #0]
 800c140:	aa02      	add	r2, sp, #8
 800c142:	689b      	ldr	r3, [r3, #8]
 800c144:	4621      	mov	r1, r4
 800c146:	4798      	blx	r3
 800c148:	b005      	add	sp, #20
 800c14a:	bd30      	pop	{r4, r5, pc}

0800c14c <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_>:
 800c14c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c150:	4604      	mov	r4, r0
 800c152:	f9b0 011e 	ldrsh.w	r0, [r0, #286]	; 0x11e
 800c156:	9e06      	ldr	r6, [sp, #24]
 800c158:	4690      	mov	r8, r2
 800c15a:	461f      	mov	r7, r3
 800c15c:	b928      	cbnz	r0, 800c16a <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1e>
 800c15e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800c162:	8033      	strh	r3, [r6, #0]
 800c164:	803b      	strh	r3, [r7, #0]
 800c166:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c16a:	f8b4 2118 	ldrh.w	r2, [r4, #280]	; 0x118
 800c16e:	f9b4 0116 	ldrsh.w	r0, [r4, #278]	; 0x116
 800c172:	1883      	adds	r3, r0, r2
 800c174:	f8b4 2040 	ldrh.w	r2, [r4, #64]	; 0x40
 800c178:	1ad2      	subs	r2, r2, r3
 800c17a:	b212      	sxth	r2, r2
 800c17c:	2a01      	cmp	r2, #1
 800c17e:	dc07      	bgt.n	800c190 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x44>
 800c180:	2300      	movs	r3, #0
 800c182:	803b      	strh	r3, [r7, #0]
 800c184:	f8b4 311e 	ldrh.w	r3, [r4, #286]	; 0x11e
 800c188:	3b01      	subs	r3, #1
 800c18a:	8033      	strh	r3, [r6, #0]
 800c18c:	2001      	movs	r0, #1
 800c18e:	e7ea      	b.n	800c166 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1a>
 800c190:	1a08      	subs	r0, r1, r0
 800c192:	f8d4 3130 	ldr.w	r3, [r4, #304]	; 0x130
 800c196:	f8d4 112c 	ldr.w	r1, [r4, #300]	; 0x12c
 800c19a:	6b25      	ldr	r5, [r4, #48]	; 0x30
 800c19c:	1a5b      	subs	r3, r3, r1
 800c19e:	ea4f 1040 	mov.w	r0, r0, lsl #5
 800c1a2:	d45b      	bmi.n	800c25c <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x110>
 800c1a4:	eb05 0343 	add.w	r3, r5, r3, lsl #1
 800c1a8:	fb93 f1f5 	sdiv	r1, r3, r5
 800c1ac:	2302      	movs	r3, #2
 800c1ae:	fb91 f1f3 	sdiv	r1, r1, r3
 800c1b2:	3a01      	subs	r2, #1
 800c1b4:	f006 f8cc 	bl	8012350 <_ZN8touchgfx6muldivElll>
 800c1b8:	f8d4 112c 	ldr.w	r1, [r4, #300]	; 0x12c
 800c1bc:	f8d4 c030 	ldr.w	ip, [r4, #48]	; 0x30
 800c1c0:	2900      	cmp	r1, #0
 800c1c2:	db57      	blt.n	800c274 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x128>
 800c1c4:	eb0c 0341 	add.w	r3, ip, r1, lsl #1
 800c1c8:	2502      	movs	r5, #2
 800c1ca:	fb93 f3fc 	sdiv	r3, r3, ip
 800c1ce:	fb93 f3f5 	sdiv	r3, r3, r5
 800c1d2:	eb00 1543 	add.w	r5, r0, r3, lsl #5
 800c1d6:	f8d4 2130 	ldr.w	r2, [r4, #304]	; 0x130
 800c1da:	f9b4 3116 	ldrsh.w	r3, [r4, #278]	; 0x116
 800c1de:	1a52      	subs	r2, r2, r1
 800c1e0:	eba8 0003 	sub.w	r0, r8, r3
 800c1e4:	ea4f 1040 	mov.w	r0, r0, lsl #5
 800c1e8:	d450      	bmi.n	800c28c <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x140>
 800c1ea:	eb0c 0242 	add.w	r2, ip, r2, lsl #1
 800c1ee:	fb92 f1fc 	sdiv	r1, r2, ip
 800c1f2:	2202      	movs	r2, #2
 800c1f4:	fb91 f1f2 	sdiv	r1, r1, r2
 800c1f8:	f8b4 2118 	ldrh.w	r2, [r4, #280]	; 0x118
 800c1fc:	4413      	add	r3, r2
 800c1fe:	f8b4 2040 	ldrh.w	r2, [r4, #64]	; 0x40
 800c202:	1ad2      	subs	r2, r2, r3
 800c204:	b212      	sxth	r2, r2
 800c206:	3a01      	subs	r2, #1
 800c208:	f006 f8a2 	bl	8012350 <_ZN8touchgfx6muldivElll>
 800c20c:	f8d4 312c 	ldr.w	r3, [r4, #300]	; 0x12c
 800c210:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800c212:	2b00      	cmp	r3, #0
 800c214:	db46      	blt.n	800c2a4 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x158>
 800c216:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 800c21a:	fb93 f3f2 	sdiv	r3, r3, r2
 800c21e:	2202      	movs	r2, #2
 800c220:	fb93 f3f2 	sdiv	r3, r3, r2
 800c224:	eb00 1343 	add.w	r3, r0, r3, lsl #5
 800c228:	429d      	cmp	r5, r3
 800c22a:	bfde      	ittt	le
 800c22c:	461a      	movle	r2, r3
 800c22e:	462b      	movle	r3, r5
 800c230:	4615      	movle	r5, r2
 800c232:	2d00      	cmp	r5, #0
 800c234:	bfa4      	itt	ge
 800c236:	351f      	addge	r5, #31
 800c238:	116d      	asrge	r5, r5, #5
 800c23a:	f04f 0020 	mov.w	r0, #32
 800c23e:	bfb8      	it	lt
 800c240:	fb95 f5f0 	sdivlt	r5, r5, r0
 800c244:	b22d      	sxth	r5, r5
 800c246:	2d00      	cmp	r5, #0
 800c248:	b21b      	sxth	r3, r3
 800c24a:	fb93 f3f0 	sdiv	r3, r3, r0
 800c24e:	803b      	strh	r3, [r7, #0]
 800c250:	8035      	strh	r5, [r6, #0]
 800c252:	da33      	bge.n	800c2bc <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x170>
 800c254:	2000      	movs	r0, #0
 800c256:	8030      	strh	r0, [r6, #0]
 800c258:	8038      	strh	r0, [r7, #0]
 800c25a:	e784      	b.n	800c166 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1a>
 800c25c:	f06f 0101 	mvn.w	r1, #1
 800c260:	fb01 5303 	mla	r3, r1, r3, r5
 800c264:	1e59      	subs	r1, r3, #1
 800c266:	2302      	movs	r3, #2
 800c268:	fb91 f1f5 	sdiv	r1, r1, r5
 800c26c:	fb91 f1f3 	sdiv	r1, r1, r3
 800c270:	4249      	negs	r1, r1
 800c272:	e79e      	b.n	800c1b2 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x66>
 800c274:	f06f 0301 	mvn.w	r3, #1
 800c278:	fb03 c301 	mla	r3, r3, r1, ip
 800c27c:	3b01      	subs	r3, #1
 800c27e:	2502      	movs	r5, #2
 800c280:	fb93 f3fc 	sdiv	r3, r3, ip
 800c284:	fb93 f3f5 	sdiv	r3, r3, r5
 800c288:	425b      	negs	r3, r3
 800c28a:	e7a2      	b.n	800c1d2 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x86>
 800c28c:	f06f 0101 	mvn.w	r1, #1
 800c290:	fb01 c202 	mla	r2, r1, r2, ip
 800c294:	1e51      	subs	r1, r2, #1
 800c296:	2202      	movs	r2, #2
 800c298:	fb91 f1fc 	sdiv	r1, r1, ip
 800c29c:	fb91 f1f2 	sdiv	r1, r1, r2
 800c2a0:	4249      	negs	r1, r1
 800c2a2:	e7a9      	b.n	800c1f8 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0xac>
 800c2a4:	f06f 0101 	mvn.w	r1, #1
 800c2a8:	fb01 2303 	mla	r3, r1, r3, r2
 800c2ac:	3b01      	subs	r3, #1
 800c2ae:	fb93 f3f2 	sdiv	r3, r3, r2
 800c2b2:	2202      	movs	r2, #2
 800c2b4:	fb93 f3f2 	sdiv	r3, r3, r2
 800c2b8:	425b      	negs	r3, r3
 800c2ba:	e7b3      	b.n	800c224 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0xd8>
 800c2bc:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800c2c0:	f9b7 2000 	ldrsh.w	r2, [r7]
 800c2c4:	4293      	cmp	r3, r2
 800c2c6:	dc05      	bgt.n	800c2d4 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x188>
 800c2c8:	3b01      	subs	r3, #1
 800c2ca:	b21b      	sxth	r3, r3
 800c2cc:	8033      	strh	r3, [r6, #0]
 800c2ce:	2000      	movs	r0, #0
 800c2d0:	803b      	strh	r3, [r7, #0]
 800c2d2:	e748      	b.n	800c166 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1a>
 800c2d4:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 800c2d8:	803a      	strh	r2, [r7, #0]
 800c2da:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800c2de:	f9b6 2000 	ldrsh.w	r2, [r6]
 800c2e2:	4293      	cmp	r3, r2
 800c2e4:	bfdc      	itt	le
 800c2e6:	f103 33ff 	addle.w	r3, r3, #4294967295
 800c2ea:	b21a      	sxthle	r2, r3
 800c2ec:	8032      	strh	r2, [r6, #0]
 800c2ee:	e74d      	b.n	800c18c <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x40>

0800c2f0 <_ZN8touchgfx9ContainerC1Ev>:
 800c2f0:	2101      	movs	r1, #1
 800c2f2:	2200      	movs	r2, #0
 800c2f4:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800c2f8:	4909      	ldr	r1, [pc, #36]	; (800c320 <_ZN8touchgfx9ContainerC1Ev+0x30>)
 800c2fa:	8082      	strh	r2, [r0, #4]
 800c2fc:	80c2      	strh	r2, [r0, #6]
 800c2fe:	8102      	strh	r2, [r0, #8]
 800c300:	8142      	strh	r2, [r0, #10]
 800c302:	8182      	strh	r2, [r0, #12]
 800c304:	81c2      	strh	r2, [r0, #14]
 800c306:	8202      	strh	r2, [r0, #16]
 800c308:	8242      	strh	r2, [r0, #18]
 800c30a:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800c30e:	61c2      	str	r2, [r0, #28]
 800c310:	8402      	strh	r2, [r0, #32]
 800c312:	8442      	strh	r2, [r0, #34]	; 0x22
 800c314:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800c318:	6001      	str	r1, [r0, #0]
 800c31a:	6282      	str	r2, [r0, #40]	; 0x28
 800c31c:	4770      	bx	lr
 800c31e:	bf00      	nop
 800c320:	0802378c 	.word	0x0802378c

0800c324 <_ZNK8touchgfx7CWRUtil2Q55roundEv>:
 800c324:	6800      	ldr	r0, [r0, #0]
 800c326:	2800      	cmp	r0, #0
 800c328:	bfbd      	ittte	lt
 800c32a:	380f      	sublt	r0, #15
 800c32c:	2320      	movlt	r3, #32
 800c32e:	fb90 f0f3 	sdivlt	r0, r0, r3
 800c332:	3010      	addge	r0, #16
 800c334:	bfa8      	it	ge
 800c336:	1140      	asrge	r0, r0, #5
 800c338:	4770      	bx	lr

0800c33a <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs>:
 800c33a:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c33e:	4605      	mov	r5, r0
 800c340:	f9b0 011e 	ldrsh.w	r0, [r0, #286]	; 0x11e
 800c344:	4688      	mov	r8, r1
 800c346:	4691      	mov	r9, r2
 800c348:	469a      	mov	sl, r3
 800c34a:	b360      	cbz	r0, 800c3a6 <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs+0x6c>
 800c34c:	2700      	movs	r7, #0
 800c34e:	f04f 3bff 	mov.w	fp, #4294967295
 800c352:	f9b5 311e 	ldrsh.w	r3, [r5, #286]	; 0x11e
 800c356:	b23e      	sxth	r6, r7
 800c358:	42b3      	cmp	r3, r6
 800c35a:	dd23      	ble.n	800c3a4 <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs+0x6a>
 800c35c:	682b      	ldr	r3, [r5, #0]
 800c35e:	4631      	mov	r1, r6
 800c360:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800c364:	4628      	mov	r0, r5
 800c366:	4798      	blx	r3
 800c368:	9001      	str	r0, [sp, #4]
 800c36a:	a801      	add	r0, sp, #4
 800c36c:	f7ff ffda 	bl	800c324 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c370:	682b      	ldr	r3, [r5, #0]
 800c372:	eba0 0008 	sub.w	r0, r0, r8
 800c376:	b204      	sxth	r4, r0
 800c378:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800c37c:	4631      	mov	r1, r6
 800c37e:	4628      	mov	r0, r5
 800c380:	4798      	blx	r3
 800c382:	9001      	str	r0, [sp, #4]
 800c384:	a801      	add	r0, sp, #4
 800c386:	f7ff ffcd 	bl	800c324 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c38a:	eba0 0009 	sub.w	r0, r0, r9
 800c38e:	fb10 f000 	smulbb	r0, r0, r0
 800c392:	fb04 0404 	mla	r4, r4, r4, r0
 800c396:	455c      	cmp	r4, fp
 800c398:	bf3c      	itt	cc
 800c39a:	f8aa 6000 	strhcc.w	r6, [sl]
 800c39e:	46a3      	movcc	fp, r4
 800c3a0:	3701      	adds	r7, #1
 800c3a2:	e7d6      	b.n	800c352 <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs+0x18>
 800c3a4:	2001      	movs	r0, #1
 800c3a6:	b003      	add	sp, #12
 800c3a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800c3ac <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs>:
 800c3ac:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800c3b0:	4604      	mov	r4, r0
 800c3b2:	f9b0 011e 	ldrsh.w	r0, [r0, #286]	; 0x11e
 800c3b6:	4688      	mov	r8, r1
 800c3b8:	4691      	mov	r9, r2
 800c3ba:	b1f8      	cbz	r0, 800c3fc <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs+0x50>
 800c3bc:	2500      	movs	r5, #0
 800c3be:	f04f 37ff 	mov.w	r7, #4294967295
 800c3c2:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800c3c6:	b22e      	sxth	r6, r5
 800c3c8:	42b3      	cmp	r3, r6
 800c3ca:	dd16      	ble.n	800c3fa <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs+0x4e>
 800c3cc:	6823      	ldr	r3, [r4, #0]
 800c3ce:	4631      	mov	r1, r6
 800c3d0:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800c3d4:	4620      	mov	r0, r4
 800c3d6:	4798      	blx	r3
 800c3d8:	9001      	str	r0, [sp, #4]
 800c3da:	a801      	add	r0, sp, #4
 800c3dc:	f7ff ffa2 	bl	800c324 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c3e0:	b200      	sxth	r0, r0
 800c3e2:	eba0 0008 	sub.w	r0, r0, r8
 800c3e6:	2800      	cmp	r0, #0
 800c3e8:	bfb8      	it	lt
 800c3ea:	4240      	neglt	r0, r0
 800c3ec:	42b8      	cmp	r0, r7
 800c3ee:	bf3c      	itt	cc
 800c3f0:	f8a9 6000 	strhcc.w	r6, [r9]
 800c3f4:	4607      	movcc	r7, r0
 800c3f6:	3501      	adds	r5, #1
 800c3f8:	e7e3      	b.n	800c3c2 <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs+0x16>
 800c3fa:	2001      	movs	r0, #1
 800c3fc:	b003      	add	sp, #12
 800c3fe:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800c402 <_ZN8touchgfx17AbstractDataGraph19setGraphAreaPaddingEssss>:
 800c402:	f8a0 3118 	strh.w	r3, [r0, #280]	; 0x118
 800c406:	f9bd 3000 	ldrsh.w	r3, [sp]
 800c40a:	f8a0 1114 	strh.w	r1, [r0, #276]	; 0x114
 800c40e:	f8a0 2116 	strh.w	r2, [r0, #278]	; 0x116
 800c412:	f8a0 311a 	strh.w	r3, [r0, #282]	; 0x11a
 800c416:	4770      	bx	lr

0800c418 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>:
 800c418:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c41a:	4604      	mov	r4, r0
 800c41c:	3038      	adds	r0, #56	; 0x38
 800c41e:	460d      	mov	r5, r1
 800c420:	f7fe fb1c 	bl	800aa5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c424:	f9b4 2042 	ldrsh.w	r2, [r4, #66]	; 0x42
 800c428:	9200      	str	r2, [sp, #0]
 800c42a:	2200      	movs	r2, #0
 800c42c:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800c430:	4611      	mov	r1, r2
 800c432:	4628      	mov	r0, r5
 800c434:	f7f6 fc43 	bl	8002cbe <_ZN8touchgfx8Drawable11setPositionEssss>
 800c438:	b003      	add	sp, #12
 800c43a:	bd30      	pop	{r4, r5, pc}

0800c43c <_ZN8touchgfx17AbstractDataGraph14addLeftElementERNS_23AbstractGraphDecorationE>:
 800c43c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c43e:	4604      	mov	r4, r0
 800c440:	3064      	adds	r0, #100	; 0x64
 800c442:	460d      	mov	r5, r1
 800c444:	f7fe fb0a 	bl	800aa5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c448:	f9b4 206e 	ldrsh.w	r2, [r4, #110]	; 0x6e
 800c44c:	9200      	str	r2, [sp, #0]
 800c44e:	2200      	movs	r2, #0
 800c450:	f9b4 306c 	ldrsh.w	r3, [r4, #108]	; 0x6c
 800c454:	4611      	mov	r1, r2
 800c456:	4628      	mov	r0, r5
 800c458:	f7f6 fc31 	bl	8002cbe <_ZN8touchgfx8Drawable11setPositionEssss>
 800c45c:	b003      	add	sp, #12
 800c45e:	bd30      	pop	{r4, r5, pc}

0800c460 <_ZN8touchgfx17AbstractDataGraph16addBottomElementERNS_23AbstractGraphDecorationE>:
 800c460:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c462:	4604      	mov	r4, r0
 800c464:	30e8      	adds	r0, #232	; 0xe8
 800c466:	460d      	mov	r5, r1
 800c468:	f7fe faf8 	bl	800aa5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c46c:	f9b4 20f2 	ldrsh.w	r2, [r4, #242]	; 0xf2
 800c470:	9200      	str	r2, [sp, #0]
 800c472:	2200      	movs	r2, #0
 800c474:	f9b4 30f0 	ldrsh.w	r3, [r4, #240]	; 0xf0
 800c478:	4611      	mov	r1, r2
 800c47a:	4628      	mov	r0, r5
 800c47c:	f7f6 fc1f 	bl	8002cbe <_ZN8touchgfx8Drawable11setPositionEssss>
 800c480:	b003      	add	sp, #12
 800c482:	bd30      	pop	{r4, r5, pc}

0800c484 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs>:
 800c484:	b538      	push	{r3, r4, r5, lr}
 800c486:	f9b0 311e 	ldrsh.w	r3, [r0, #286]	; 0x11e
 800c48a:	428b      	cmp	r3, r1
 800c48c:	460d      	mov	r5, r1
 800c48e:	dd08      	ble.n	800c4a2 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs+0x1e>
 800c490:	6e04      	ldr	r4, [r0, #96]	; 0x60
 800c492:	b134      	cbz	r4, 800c4a2 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs+0x1e>
 800c494:	6823      	ldr	r3, [r4, #0]
 800c496:	4620      	mov	r0, r4
 800c498:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800c49a:	4629      	mov	r1, r5
 800c49c:	4798      	blx	r3
 800c49e:	69a4      	ldr	r4, [r4, #24]
 800c4a0:	e7f7      	b.n	800c492 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs+0xe>
 800c4a2:	bd38      	pop	{r3, r4, r5, pc}

0800c4a4 <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs>:
 800c4a4:	b570      	push	{r4, r5, r6, lr}
 800c4a6:	f8d0 40e4 	ldr.w	r4, [r0, #228]	; 0xe4
 800c4aa:	4606      	mov	r6, r0
 800c4ac:	460d      	mov	r5, r1
 800c4ae:	b134      	cbz	r4, 800c4be <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0x1a>
 800c4b0:	6823      	ldr	r3, [r4, #0]
 800c4b2:	4620      	mov	r0, r4
 800c4b4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800c4b6:	4629      	mov	r1, r5
 800c4b8:	4798      	blx	r3
 800c4ba:	69a4      	ldr	r4, [r4, #24]
 800c4bc:	e7f7      	b.n	800c4ae <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0xa>
 800c4be:	f8d6 4110 	ldr.w	r4, [r6, #272]	; 0x110
 800c4c2:	b134      	cbz	r4, 800c4d2 <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0x2e>
 800c4c4:	6823      	ldr	r3, [r4, #0]
 800c4c6:	4620      	mov	r0, r4
 800c4c8:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800c4ca:	4629      	mov	r1, r5
 800c4cc:	4798      	blx	r3
 800c4ce:	69a4      	ldr	r4, [r4, #24]
 800c4d0:	e7f7      	b.n	800c4c2 <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0x1e>
 800c4d2:	bd70      	pop	{r4, r5, r6, pc}

0800c4d4 <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv>:
 800c4d4:	b538      	push	{r3, r4, r5, lr}
 800c4d6:	4604      	mov	r4, r0
 800c4d8:	2500      	movs	r5, #0
 800c4da:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800c4de:	42ab      	cmp	r3, r5
 800c4e0:	db05      	blt.n	800c4ee <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv+0x1a>
 800c4e2:	b229      	sxth	r1, r5
 800c4e4:	4620      	mov	r0, r4
 800c4e6:	f7ff ffdd 	bl	800c4a4 <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs>
 800c4ea:	3501      	adds	r5, #1
 800c4ec:	e7f5      	b.n	800c4da <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv+0x6>
 800c4ee:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 800c4f2:	f005 fd6c 	bl	8011fce <_ZNK8touchgfx8Drawable10invalidateEv>
 800c4f6:	f104 00e8 	add.w	r0, r4, #232	; 0xe8
 800c4fa:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c4fe:	f005 bd66 	b.w	8011fce <_ZNK8touchgfx8Drawable10invalidateEv>

0800c502 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>:
 800c502:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c504:	6e05      	ldr	r5, [r0, #96]	; 0x60
 800c506:	4604      	mov	r4, r0
 800c508:	b15d      	cbz	r5, 800c522 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x20>
 800c50a:	f9b4 2042 	ldrsh.w	r2, [r4, #66]	; 0x42
 800c50e:	9200      	str	r2, [sp, #0]
 800c510:	2200      	movs	r2, #0
 800c512:	4628      	mov	r0, r5
 800c514:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800c518:	4611      	mov	r1, r2
 800c51a:	f7f6 fbd0 	bl	8002cbe <_ZN8touchgfx8Drawable11setPositionEssss>
 800c51e:	69ad      	ldr	r5, [r5, #24]
 800c520:	e7f2      	b.n	800c508 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x6>
 800c522:	f8d4 50e4 	ldr.w	r5, [r4, #228]	; 0xe4
 800c526:	b15d      	cbz	r5, 800c540 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x3e>
 800c528:	f9b4 20c6 	ldrsh.w	r2, [r4, #198]	; 0xc6
 800c52c:	9200      	str	r2, [sp, #0]
 800c52e:	2200      	movs	r2, #0
 800c530:	4628      	mov	r0, r5
 800c532:	f9b4 30c4 	ldrsh.w	r3, [r4, #196]	; 0xc4
 800c536:	4611      	mov	r1, r2
 800c538:	f7f6 fbc1 	bl	8002cbe <_ZN8touchgfx8Drawable11setPositionEssss>
 800c53c:	69ad      	ldr	r5, [r5, #24]
 800c53e:	e7f2      	b.n	800c526 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x24>
 800c540:	f8d4 508c 	ldr.w	r5, [r4, #140]	; 0x8c
 800c544:	b15d      	cbz	r5, 800c55e <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x5c>
 800c546:	f9b4 206e 	ldrsh.w	r2, [r4, #110]	; 0x6e
 800c54a:	9200      	str	r2, [sp, #0]
 800c54c:	2200      	movs	r2, #0
 800c54e:	4628      	mov	r0, r5
 800c550:	f9b4 306c 	ldrsh.w	r3, [r4, #108]	; 0x6c
 800c554:	4611      	mov	r1, r2
 800c556:	f7f6 fbb2 	bl	8002cbe <_ZN8touchgfx8Drawable11setPositionEssss>
 800c55a:	69ad      	ldr	r5, [r5, #24]
 800c55c:	e7f2      	b.n	800c544 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x42>
 800c55e:	f8d4 50b8 	ldr.w	r5, [r4, #184]	; 0xb8
 800c562:	b15d      	cbz	r5, 800c57c <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x7a>
 800c564:	f9b4 209a 	ldrsh.w	r2, [r4, #154]	; 0x9a
 800c568:	9200      	str	r2, [sp, #0]
 800c56a:	2200      	movs	r2, #0
 800c56c:	4628      	mov	r0, r5
 800c56e:	f9b4 3098 	ldrsh.w	r3, [r4, #152]	; 0x98
 800c572:	4611      	mov	r1, r2
 800c574:	f7f6 fba3 	bl	8002cbe <_ZN8touchgfx8Drawable11setPositionEssss>
 800c578:	69ad      	ldr	r5, [r5, #24]
 800c57a:	e7f2      	b.n	800c562 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x60>
 800c57c:	f8d4 5110 	ldr.w	r5, [r4, #272]	; 0x110
 800c580:	b15d      	cbz	r5, 800c59a <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x98>
 800c582:	f9b4 20f2 	ldrsh.w	r2, [r4, #242]	; 0xf2
 800c586:	9200      	str	r2, [sp, #0]
 800c588:	2200      	movs	r2, #0
 800c58a:	4628      	mov	r0, r5
 800c58c:	f9b4 30f0 	ldrsh.w	r3, [r4, #240]	; 0xf0
 800c590:	4611      	mov	r1, r2
 800c592:	f7f6 fb94 	bl	8002cbe <_ZN8touchgfx8Drawable11setPositionEssss>
 800c596:	69ad      	ldr	r5, [r5, #24]
 800c598:	e7f2      	b.n	800c580 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x7e>
 800c59a:	6823      	ldr	r3, [r4, #0]
 800c59c:	695b      	ldr	r3, [r3, #20]
 800c59e:	4620      	mov	r0, r4
 800c5a0:	b003      	add	sp, #12
 800c5a2:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800c5a6:	4718      	bx	r3

0800c5a8 <_ZN8touchgfx17AbstractDataGraph8setWidthEs>:
 800c5a8:	b430      	push	{r4, r5}
 800c5aa:	f8b0 4098 	ldrh.w	r4, [r0, #152]	; 0x98
 800c5ae:	f8a0 10c4 	strh.w	r1, [r0, #196]	; 0xc4
 800c5b2:	b28a      	uxth	r2, r1
 800c5b4:	1b15      	subs	r5, r2, r4
 800c5b6:	f8a0 5094 	strh.w	r5, [r0, #148]	; 0x94
 800c5ba:	f8b0 506c 	ldrh.w	r5, [r0, #108]	; 0x6c
 800c5be:	f8a0 10f0 	strh.w	r1, [r0, #240]	; 0xf0
 800c5c2:	442c      	add	r4, r5
 800c5c4:	1b12      	subs	r2, r2, r4
 800c5c6:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 800c5ca:	8101      	strh	r1, [r0, #8]
 800c5cc:	bc30      	pop	{r4, r5}
 800c5ce:	f7ff bf98 	b.w	800c502 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>

0800c5d2 <_ZN8touchgfx17AbstractDataGraph9setHeightEs>:
 800c5d2:	b430      	push	{r4, r5}
 800c5d4:	f8b0 40f2 	ldrh.w	r4, [r0, #242]	; 0xf2
 800c5d8:	f8a0 106e 	strh.w	r1, [r0, #110]	; 0x6e
 800c5dc:	b28a      	uxth	r2, r1
 800c5de:	1b15      	subs	r5, r2, r4
 800c5e0:	f8a0 50ee 	strh.w	r5, [r0, #238]	; 0xee
 800c5e4:	f8b0 50c6 	ldrh.w	r5, [r0, #198]	; 0xc6
 800c5e8:	f8a0 109a 	strh.w	r1, [r0, #154]	; 0x9a
 800c5ec:	442c      	add	r4, r5
 800c5ee:	1b12      	subs	r2, r2, r4
 800c5f0:	f8a0 2042 	strh.w	r2, [r0, #66]	; 0x42
 800c5f4:	8141      	strh	r1, [r0, #10]
 800c5f6:	bc30      	pop	{r4, r5}
 800c5f8:	f7ff bf83 	b.w	800c502 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>

0800c5fc <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>:
 800c5fc:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800c600:	f9bd 7028 	ldrsh.w	r7, [sp, #40]	; 0x28
 800c604:	fa1f fa83 	uxth.w	sl, r3
 800c608:	4699      	mov	r9, r3
 800c60a:	8903      	ldrh	r3, [r0, #8]
 800c60c:	4604      	mov	r4, r0
 800c60e:	4615      	mov	r5, r2
 800c610:	fa1f f887 	uxth.w	r8, r7
 800c614:	4452      	add	r2, sl
 800c616:	8940      	ldrh	r0, [r0, #10]
 800c618:	1a9b      	subs	r3, r3, r2
 800c61a:	eb08 0201 	add.w	r2, r8, r1
 800c61e:	1a80      	subs	r0, r0, r2
 800c620:	b200      	sxth	r0, r0
 800c622:	460e      	mov	r6, r1
 800c624:	9000      	str	r0, [sp, #0]
 800c626:	460a      	mov	r2, r1
 800c628:	f104 0038 	add.w	r0, r4, #56	; 0x38
 800c62c:	4629      	mov	r1, r5
 800c62e:	b21b      	sxth	r3, r3
 800c630:	f7f6 fb45 	bl	8002cbe <_ZN8touchgfx8Drawable11setPositionEssss>
 800c634:	2200      	movs	r2, #0
 800c636:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800c63a:	9600      	str	r6, [sp, #0]
 800c63c:	4611      	mov	r1, r2
 800c63e:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 800c642:	f7f6 fb3c 	bl	8002cbe <_ZN8touchgfx8Drawable11setPositionEssss>
 800c646:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800c64a:	9300      	str	r3, [sp, #0]
 800c64c:	2200      	movs	r2, #0
 800c64e:	462b      	mov	r3, r5
 800c650:	4611      	mov	r1, r2
 800c652:	f104 0064 	add.w	r0, r4, #100	; 0x64
 800c656:	f7f6 fb32 	bl	8002cbe <_ZN8touchgfx8Drawable11setPositionEssss>
 800c65a:	8921      	ldrh	r1, [r4, #8]
 800c65c:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800c660:	9300      	str	r3, [sp, #0]
 800c662:	eba1 010a 	sub.w	r1, r1, sl
 800c666:	464b      	mov	r3, r9
 800c668:	f104 0090 	add.w	r0, r4, #144	; 0x90
 800c66c:	2200      	movs	r2, #0
 800c66e:	b209      	sxth	r1, r1
 800c670:	f7f6 fb25 	bl	8002cbe <_ZN8touchgfx8Drawable11setPositionEssss>
 800c674:	8962      	ldrh	r2, [r4, #10]
 800c676:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800c67a:	9700      	str	r7, [sp, #0]
 800c67c:	eba2 0208 	sub.w	r2, r2, r8
 800c680:	f104 00e8 	add.w	r0, r4, #232	; 0xe8
 800c684:	b212      	sxth	r2, r2
 800c686:	2100      	movs	r1, #0
 800c688:	f7f6 fb19 	bl	8002cbe <_ZN8touchgfx8Drawable11setPositionEssss>
 800c68c:	4620      	mov	r0, r4
 800c68e:	b002      	add	sp, #8
 800c690:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c694:	f7ff bf35 	b.w	800c502 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>

0800c698 <_ZN8touchgfx17AbstractDataGraphC1Es>:
 800c698:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c69c:	b085      	sub	sp, #20
 800c69e:	4604      	mov	r4, r0
 800c6a0:	9103      	str	r1, [sp, #12]
 800c6a2:	f7ff fe25 	bl	800c2f0 <_ZN8touchgfx9ContainerC1Ev>
 800c6a6:	4b2d      	ldr	r3, [pc, #180]	; (800c75c <_ZN8touchgfx17AbstractDataGraphC1Es+0xc4>)
 800c6a8:	6023      	str	r3, [r4, #0]
 800c6aa:	2601      	movs	r6, #1
 800c6ac:	23ff      	movs	r3, #255	; 0xff
 800c6ae:	f104 0b38 	add.w	fp, r4, #56	; 0x38
 800c6b2:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 800c6b6:	f104 0964 	add.w	r9, r4, #100	; 0x64
 800c6ba:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 800c6be:	4658      	mov	r0, fp
 800c6c0:	f7ff fe16 	bl	800c2f0 <_ZN8touchgfx9ContainerC1Ev>
 800c6c4:	f104 0890 	add.w	r8, r4, #144	; 0x90
 800c6c8:	4648      	mov	r0, r9
 800c6ca:	f7ff fe11 	bl	800c2f0 <_ZN8touchgfx9ContainerC1Ev>
 800c6ce:	f104 0abc 	add.w	sl, r4, #188	; 0xbc
 800c6d2:	4640      	mov	r0, r8
 800c6d4:	f7ff fe0c 	bl	800c2f0 <_ZN8touchgfx9ContainerC1Ev>
 800c6d8:	f104 07e8 	add.w	r7, r4, #232	; 0xe8
 800c6dc:	4650      	mov	r0, sl
 800c6de:	f7ff fe07 	bl	800c2f0 <_ZN8touchgfx9ContainerC1Ev>
 800c6e2:	4638      	mov	r0, r7
 800c6e4:	f7ff fe04 	bl	800c2f0 <_ZN8touchgfx9ContainerC1Ev>
 800c6e8:	2500      	movs	r5, #0
 800c6ea:	9903      	ldr	r1, [sp, #12]
 800c6ec:	f8a4 111c 	strh.w	r1, [r4, #284]	; 0x11c
 800c6f0:	4620      	mov	r0, r4
 800c6f2:	4659      	mov	r1, fp
 800c6f4:	f8c4 5114 	str.w	r5, [r4, #276]	; 0x114
 800c6f8:	f8c4 5118 	str.w	r5, [r4, #280]	; 0x118
 800c6fc:	f8a4 511e 	strh.w	r5, [r4, #286]	; 0x11e
 800c700:	f8a4 5120 	strh.w	r5, [r4, #288]	; 0x120
 800c704:	f8c4 5124 	str.w	r5, [r4, #292]	; 0x124
 800c708:	f8c4 5128 	str.w	r5, [r4, #296]	; 0x128
 800c70c:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
 800c710:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 800c714:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 800c718:	f8c4 5138 	str.w	r5, [r4, #312]	; 0x138
 800c71c:	f7fe f99e 	bl	800aa5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c720:	4651      	mov	r1, sl
 800c722:	4620      	mov	r0, r4
 800c724:	f7fe f99a 	bl	800aa5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c728:	4649      	mov	r1, r9
 800c72a:	4620      	mov	r0, r4
 800c72c:	f7fe f996 	bl	800aa5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c730:	4641      	mov	r1, r8
 800c732:	4620      	mov	r0, r4
 800c734:	f7fe f992 	bl	800aa5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c738:	4639      	mov	r1, r7
 800c73a:	4620      	mov	r0, r4
 800c73c:	f7fe f98e 	bl	800aa5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c740:	4620      	mov	r0, r4
 800c742:	9500      	str	r5, [sp, #0]
 800c744:	462b      	mov	r3, r5
 800c746:	462a      	mov	r2, r5
 800c748:	4629      	mov	r1, r5
 800c74a:	f7ff ff57 	bl	800c5fc <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>
 800c74e:	4620      	mov	r0, r4
 800c750:	f884 6024 	strb.w	r6, [r4, #36]	; 0x24
 800c754:	b005      	add	sp, #20
 800c756:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c75a:	bf00      	nop
 800c75c:	08023a94 	.word	0x08023a94

0800c760 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>:
 800c760:	4291      	cmp	r1, r2
 800c762:	4613      	mov	r3, r2
 800c764:	d003      	beq.n	800c76e <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii+0xe>
 800c766:	460a      	mov	r2, r1
 800c768:	4619      	mov	r1, r3
 800c76a:	f005 bdf1 	b.w	8012350 <_ZN8touchgfx6muldivElll>
 800c76e:	4770      	bx	lr

0800c770 <_ZN8touchgfx16DynamicDataGraph9setScaleXEib>:
 800c770:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c774:	6803      	ldr	r3, [r0, #0]
 800c776:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800c77a:	460d      	mov	r5, r1
 800c77c:	4604      	mov	r4, r0
 800c77e:	4798      	blx	r3
 800c780:	42a8      	cmp	r0, r5
 800c782:	4606      	mov	r6, r0
 800c784:	d024      	beq.n	800c7d0 <_ZN8touchgfx16DynamicDataGraph9setScaleXEib+0x60>
 800c786:	6823      	ldr	r3, [r4, #0]
 800c788:	4601      	mov	r1, r0
 800c78a:	462a      	mov	r2, r5
 800c78c:	f8d4 012c 	ldr.w	r0, [r4, #300]	; 0x12c
 800c790:	f8d3 70a4 	ldr.w	r7, [r3, #164]	; 0xa4
 800c794:	f7ff ffe4 	bl	800c760 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800c798:	462a      	mov	r2, r5
 800c79a:	4680      	mov	r8, r0
 800c79c:	4631      	mov	r1, r6
 800c79e:	f8d4 0130 	ldr.w	r0, [r4, #304]	; 0x130
 800c7a2:	f7ff ffdd 	bl	800c760 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800c7a6:	4641      	mov	r1, r8
 800c7a8:	4602      	mov	r2, r0
 800c7aa:	4620      	mov	r0, r4
 800c7ac:	47b8      	blx	r7
 800c7ae:	462a      	mov	r2, r5
 800c7b0:	4631      	mov	r1, r6
 800c7b2:	f8d4 013c 	ldr.w	r0, [r4, #316]	; 0x13c
 800c7b6:	f7ff ffd3 	bl	800c760 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800c7ba:	462a      	mov	r2, r5
 800c7bc:	f8c4 013c 	str.w	r0, [r4, #316]	; 0x13c
 800c7c0:	4631      	mov	r1, r6
 800c7c2:	f8d4 0140 	ldr.w	r0, [r4, #320]	; 0x140
 800c7c6:	f7ff ffcb 	bl	800c760 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800c7ca:	6325      	str	r5, [r4, #48]	; 0x30
 800c7cc:	f8c4 0140 	str.w	r0, [r4, #320]	; 0x140
 800c7d0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800c7d4 <_ZN8touchgfx16DynamicDataGraph9setScaleYEib>:
 800c7d4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800c7d8:	4604      	mov	r4, r0
 800c7da:	460f      	mov	r7, r1
 800c7dc:	b1ba      	cbz	r2, 800c80e <_ZN8touchgfx16DynamicDataGraph9setScaleYEib+0x3a>
 800c7de:	6803      	ldr	r3, [r0, #0]
 800c7e0:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800c7e4:	4798      	blx	r3
 800c7e6:	2600      	movs	r6, #0
 800c7e8:	4681      	mov	r9, r0
 800c7ea:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800c7ee:	b235      	sxth	r5, r6
 800c7f0:	42ab      	cmp	r3, r5
 800c7f2:	f106 0601 	add.w	r6, r6, #1
 800c7f6:	dd0a      	ble.n	800c80e <_ZN8touchgfx16DynamicDataGraph9setScaleYEib+0x3a>
 800c7f8:	f8d4 8144 	ldr.w	r8, [r4, #324]	; 0x144
 800c7fc:	463a      	mov	r2, r7
 800c7fe:	4649      	mov	r1, r9
 800c800:	f858 0025 	ldr.w	r0, [r8, r5, lsl #2]
 800c804:	f7ff ffac 	bl	800c760 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800c808:	f848 0025 	str.w	r0, [r8, r5, lsl #2]
 800c80c:	e7ed      	b.n	800c7ea <_ZN8touchgfx16DynamicDataGraph9setScaleYEib+0x16>
 800c80e:	6367      	str	r7, [r4, #52]	; 0x34
 800c810:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

0800c814 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>:
 800c814:	b570      	push	{r4, r5, r6, lr}
 800c816:	6803      	ldr	r3, [r0, #0]
 800c818:	4604      	mov	r4, r0
 800c81a:	f8d3 3178 	ldr.w	r3, [r3, #376]	; 0x178
 800c81e:	460d      	mov	r5, r1
 800c820:	4798      	blx	r3
 800c822:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 800c826:	3301      	adds	r3, #1
 800c828:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
 800c82c:	6823      	ldr	r3, [r4, #0]
 800c82e:	4629      	mov	r1, r5
 800c830:	4620      	mov	r0, r4
 800c832:	f8d3 317c 	ldr.w	r3, [r3, #380]	; 0x17c
 800c836:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c83a:	4718      	bx	r3

0800c83c <_ZN8touchgfx16GraphElementLineD1Ev>:
 800c83c:	4770      	bx	lr

0800c83e <_ZN8touchgfx16GraphElementLineD0Ev>:
 800c83e:	b510      	push	{r4, lr}
 800c840:	2130      	movs	r1, #48	; 0x30
 800c842:	4604      	mov	r4, r0
 800c844:	f013 ff48 	bl	80206d8 <_ZdlPvj>
 800c848:	4620      	mov	r0, r4
 800c84a:	bd10      	pop	{r4, pc}

0800c84c <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800c84c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c84e:	4604      	mov	r4, r0
 800c850:	4608      	mov	r0, r1
 800c852:	460d      	mov	r5, r1
 800c854:	f7fe fad5 	bl	800ae02 <_ZNK8touchgfx4Rect7isEmptyEv>
 800c858:	b978      	cbnz	r0, 800c87a <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 800c85a:	4620      	mov	r0, r4
 800c85c:	f7fe fad1 	bl	800ae02 <_ZNK8touchgfx4Rect7isEmptyEv>
 800c860:	f9b5 6000 	ldrsh.w	r6, [r5]
 800c864:	b150      	cbz	r0, 800c87c <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 800c866:	8026      	strh	r6, [r4, #0]
 800c868:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800c86c:	8063      	strh	r3, [r4, #2]
 800c86e:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800c872:	80a3      	strh	r3, [r4, #4]
 800c874:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800c878:	80e3      	strh	r3, [r4, #6]
 800c87a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800c87c:	f9b4 1000 	ldrsh.w	r1, [r4]
 800c880:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800c884:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800c888:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 800c88c:	88ed      	ldrh	r5, [r5, #6]
 800c88e:	42b1      	cmp	r1, r6
 800c890:	460f      	mov	r7, r1
 800c892:	bfa8      	it	ge
 800c894:	4637      	movge	r7, r6
 800c896:	4293      	cmp	r3, r2
 800c898:	4618      	mov	r0, r3
 800c89a:	4466      	add	r6, ip
 800c89c:	bfa8      	it	ge
 800c89e:	4610      	movge	r0, r2
 800c8a0:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800c8a4:	8027      	strh	r7, [r4, #0]
 800c8a6:	442a      	add	r2, r5
 800c8a8:	88e5      	ldrh	r5, [r4, #6]
 800c8aa:	8060      	strh	r0, [r4, #2]
 800c8ac:	4461      	add	r1, ip
 800c8ae:	442b      	add	r3, r5
 800c8b0:	b236      	sxth	r6, r6
 800c8b2:	b209      	sxth	r1, r1
 800c8b4:	b212      	sxth	r2, r2
 800c8b6:	b21b      	sxth	r3, r3
 800c8b8:	428e      	cmp	r6, r1
 800c8ba:	bfac      	ite	ge
 800c8bc:	ebc7 0106 	rsbge	r1, r7, r6
 800c8c0:	ebc7 0101 	rsblt	r1, r7, r1
 800c8c4:	429a      	cmp	r2, r3
 800c8c6:	bfac      	ite	ge
 800c8c8:	ebc0 0202 	rsbge	r2, r0, r2
 800c8cc:	ebc0 0203 	rsblt	r2, r0, r3
 800c8d0:	80a1      	strh	r1, [r4, #4]
 800c8d2:	80e2      	strh	r2, [r4, #6]
 800c8d4:	e7d1      	b.n	800c87a <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>

0800c8d6 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>:
 800c8d6:	6800      	ldr	r0, [r0, #0]
 800c8d8:	2800      	cmp	r0, #0
 800c8da:	bfb9      	ittee	lt
 800c8dc:	2320      	movlt	r3, #32
 800c8de:	fb90 f0f3 	sdivlt	r0, r0, r3
 800c8e2:	301f      	addge	r0, #31
 800c8e4:	1140      	asrge	r0, r0, #5
 800c8e6:	4770      	bx	lr

0800c8e8 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE>:
 800c8e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c8ec:	6803      	ldr	r3, [r0, #0]
 800c8ee:	6945      	ldr	r5, [r0, #20]
 800c8f0:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800c8f2:	b093      	sub	sp, #76	; 0x4c
 800c8f4:	4604      	mov	r4, r0
 800c8f6:	460f      	mov	r7, r1
 800c8f8:	2d00      	cmp	r5, #0
 800c8fa:	f000 81ad 	beq.w	800cc58 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x370>
 800c8fe:	696d      	ldr	r5, [r5, #20]
 800c900:	4798      	blx	r3
 800c902:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800c906:	2b00      	cmp	r3, #0
 800c908:	d077      	beq.n	800c9fa <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800c90a:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 800c90e:	fb13 f000 	smulbb	r0, r3, r0
 800c912:	b283      	uxth	r3, r0
 800c914:	1c58      	adds	r0, r3, #1
 800c916:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 800c91a:	1200      	asrs	r0, r0, #8
 800c91c:	d06d      	beq.n	800c9fa <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800c91e:	b2c3      	uxtb	r3, r0
 800c920:	9308      	str	r3, [sp, #32]
 800c922:	6823      	ldr	r3, [r4, #0]
 800c924:	f10d 0840 	add.w	r8, sp, #64	; 0x40
 800c928:	462a      	mov	r2, r5
 800c92a:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800c92e:	4621      	mov	r1, r4
 800c930:	4640      	mov	r0, r8
 800c932:	4798      	blx	r3
 800c934:	e898 0003 	ldmia.w	r8, {r0, r1}
 800c938:	ae0e      	add	r6, sp, #56	; 0x38
 800c93a:	e886 0003 	stmia.w	r6, {r0, r1}
 800c93e:	4639      	mov	r1, r7
 800c940:	4630      	mov	r0, r6
 800c942:	f7fe fa1b 	bl	800ad7c <_ZN8touchgfx4RectaNERKS0_>
 800c946:	6823      	ldr	r3, [r4, #0]
 800c948:	4629      	mov	r1, r5
 800c94a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800c94e:	4620      	mov	r0, r4
 800c950:	4798      	blx	r3
 800c952:	6823      	ldr	r3, [r4, #0]
 800c954:	4607      	mov	r7, r0
 800c956:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800c95a:	4629      	mov	r1, r5
 800c95c:	4620      	mov	r0, r4
 800c95e:	4798      	blx	r3
 800c960:	4681      	mov	r9, r0
 800c962:	f894 0038 	ldrb.w	r0, [r4, #56]	; 0x38
 800c966:	0103      	lsls	r3, r0, #4
 800c968:	9309      	str	r3, [sp, #36]	; 0x24
 800c96a:	6823      	ldr	r3, [r4, #0]
 800c96c:	4629      	mov	r1, r5
 800c96e:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 800c972:	4620      	mov	r0, r4
 800c974:	4798      	blx	r3
 800c976:	b203      	sxth	r3, r0
 800c978:	9306      	str	r3, [sp, #24]
 800c97a:	6823      	ldr	r3, [r4, #0]
 800c97c:	4629      	mov	r1, r5
 800c97e:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 800c982:	4620      	mov	r0, r4
 800c984:	4798      	blx	r3
 800c986:	2f00      	cmp	r7, #0
 800c988:	b203      	sxth	r3, r0
 800c98a:	9307      	str	r3, [sp, #28]
 800c98c:	d138      	bne.n	800ca00 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x118>
 800c98e:	f1b9 0f00 	cmp.w	r9, #0
 800c992:	d132      	bne.n	800c9fa <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800c994:	6823      	ldr	r3, [r4, #0]
 800c996:	464a      	mov	r2, r9
 800c998:	4629      	mov	r1, r5
 800c99a:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800c99e:	4620      	mov	r0, r4
 800c9a0:	4798      	blx	r3
 800c9a2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c9a4:	1ac0      	subs	r0, r0, r3
 800c9a6:	9010      	str	r0, [sp, #64]	; 0x40
 800c9a8:	4640      	mov	r0, r8
 800c9aa:	f7ff fcbb 	bl	800c324 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c9ae:	6823      	ldr	r3, [r4, #0]
 800c9b0:	4607      	mov	r7, r0
 800c9b2:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800c9b6:	4629      	mov	r1, r5
 800c9b8:	4620      	mov	r0, r4
 800c9ba:	4798      	blx	r3
 800c9bc:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800c9c0:	1a38      	subs	r0, r7, r0
 800c9c2:	fa0f f880 	sxth.w	r8, r0
 800c9c6:	eb13 0f08 	cmn.w	r3, r8
 800c9ca:	d416      	bmi.n	800c9fa <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800c9cc:	6823      	ldr	r3, [r4, #0]
 800c9ce:	4629      	mov	r1, r5
 800c9d0:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 800c9d4:	4620      	mov	r0, r4
 800c9d6:	4798      	blx	r3
 800c9d8:	4580      	cmp	r8, r0
 800c9da:	da0e      	bge.n	800c9fa <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800c9dc:	9a08      	ldr	r2, [sp, #32]
 800c9de:	6823      	ldr	r3, [r4, #0]
 800c9e0:	9202      	str	r2, [sp, #8]
 800c9e2:	b23f      	sxth	r7, r7
 800c9e4:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 800c9e8:	9201      	str	r2, [sp, #4]
 800c9ea:	9700      	str	r7, [sp, #0]
 800c9ec:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 800c9f0:	4631      	mov	r1, r6
 800c9f2:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800c9f6:	4620      	mov	r0, r4
 800c9f8:	47a8      	blx	r5
 800c9fa:	b013      	add	sp, #76	; 0x4c
 800c9fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ca00:	ddfb      	ble.n	800c9fa <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800ca02:	6823      	ldr	r3, [r4, #0]
 800ca04:	4629      	mov	r1, r5
 800ca06:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800ca0a:	4620      	mov	r0, r4
 800ca0c:	4798      	blx	r3
 800ca0e:	6823      	ldr	r3, [r4, #0]
 800ca10:	4683      	mov	fp, r0
 800ca12:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 800ca16:	4629      	mov	r1, r5
 800ca18:	4620      	mov	r0, r4
 800ca1a:	4798      	blx	r3
 800ca1c:	eba0 030b 	sub.w	r3, r0, fp
 800ca20:	2b00      	cmp	r3, #0
 800ca22:	bfb8      	it	lt
 800ca24:	425b      	neglt	r3, r3
 800ca26:	fb93 f3f7 	sdiv	r3, r3, r7
 800ca2a:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800ca2e:	4680      	mov	r8, r0
 800ca30:	dce3      	bgt.n	800c9fa <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800ca32:	6823      	ldr	r3, [r4, #0]
 800ca34:	465a      	mov	r2, fp
 800ca36:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800ca3a:	4629      	mov	r1, r5
 800ca3c:	4620      	mov	r0, r4
 800ca3e:	4798      	blx	r3
 800ca40:	6823      	ldr	r3, [r4, #0]
 800ca42:	4606      	mov	r6, r0
 800ca44:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800ca48:	4642      	mov	r2, r8
 800ca4a:	4629      	mov	r1, r5
 800ca4c:	4620      	mov	r0, r4
 800ca4e:	4798      	blx	r3
 800ca50:	42b0      	cmp	r0, r6
 800ca52:	bfa2      	ittt	ge
 800ca54:	4643      	movge	r3, r8
 800ca56:	46d8      	movge	r8, fp
 800ca58:	469b      	movge	fp, r3
 800ca5a:	45d8      	cmp	r8, fp
 800ca5c:	bfac      	ite	ge
 800ca5e:	f04f 33ff 	movge.w	r3, #4294967295
 800ca62:	2301      	movlt	r3, #1
 800ca64:	fb98 f6f7 	sdiv	r6, r8, r7
 800ca68:	fb9b f2f7 	sdiv	r2, fp, r7
 800ca6c:	1af6      	subs	r6, r6, r3
 800ca6e:	441a      	add	r2, r3
 800ca70:	4296      	cmp	r6, r2
 800ca72:	bfac      	ite	ge
 800ca74:	f04f 3aff 	movge.w	sl, #4294967295
 800ca78:	f04f 0a01 	movlt.w	sl, #1
 800ca7c:	f1b9 0f00 	cmp.w	r9, #0
 800ca80:	d13e      	bne.n	800cb00 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x218>
 800ca82:	fb07 fb0a 	mul.w	fp, r7, sl
 800ca86:	eb0a 0802 	add.w	r8, sl, r2
 800ca8a:	4377      	muls	r7, r6
 800ca8c:	45b0      	cmp	r8, r6
 800ca8e:	d0b4      	beq.n	800c9fa <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800ca90:	6823      	ldr	r3, [r4, #0]
 800ca92:	463a      	mov	r2, r7
 800ca94:	4629      	mov	r1, r5
 800ca96:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800ca9a:	4620      	mov	r0, r4
 800ca9c:	4798      	blx	r3
 800ca9e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800caa0:	1ac0      	subs	r0, r0, r3
 800caa2:	9010      	str	r0, [sp, #64]	; 0x40
 800caa4:	a810      	add	r0, sp, #64	; 0x40
 800caa6:	f7ff fc3d 	bl	800c324 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800caaa:	6823      	ldr	r3, [r4, #0]
 800caac:	4681      	mov	r9, r0
 800caae:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800cab2:	4629      	mov	r1, r5
 800cab4:	4620      	mov	r0, r4
 800cab6:	4798      	blx	r3
 800cab8:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 800cabc:	eba9 0000 	sub.w	r0, r9, r0
 800cac0:	b203      	sxth	r3, r0
 800cac2:	42da      	cmn	r2, r3
 800cac4:	9304      	str	r3, [sp, #16]
 800cac6:	d418      	bmi.n	800cafa <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x212>
 800cac8:	6822      	ldr	r2, [r4, #0]
 800caca:	4629      	mov	r1, r5
 800cacc:	f8d2 20a8 	ldr.w	r2, [r2, #168]	; 0xa8
 800cad0:	4620      	mov	r0, r4
 800cad2:	4790      	blx	r2
 800cad4:	9b04      	ldr	r3, [sp, #16]
 800cad6:	4283      	cmp	r3, r0
 800cad8:	da0f      	bge.n	800cafa <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x212>
 800cada:	9b08      	ldr	r3, [sp, #32]
 800cadc:	9302      	str	r3, [sp, #8]
 800cade:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800cae2:	6822      	ldr	r2, [r4, #0]
 800cae4:	9301      	str	r3, [sp, #4]
 800cae6:	fa0f f389 	sxth.w	r3, r9
 800caea:	9300      	str	r3, [sp, #0]
 800caec:	f8d2 9088 	ldr.w	r9, [r2, #136]	; 0x88
 800caf0:	a90e      	add	r1, sp, #56	; 0x38
 800caf2:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800caf6:	4620      	mov	r0, r4
 800caf8:	47c8      	blx	r9
 800cafa:	4456      	add	r6, sl
 800cafc:	445f      	add	r7, fp
 800cafe:	e7c5      	b.n	800ca8c <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x1a4>
 800cb00:	fb98 f8f9 	sdiv	r8, r8, r9
 800cb04:	eba8 0203 	sub.w	r2, r8, r3
 800cb08:	fb9b f8f9 	sdiv	r8, fp, r9
 800cb0c:	4498      	add	r8, r3
 800cb0e:	4542      	cmp	r2, r8
 800cb10:	bfac      	ite	ge
 800cb12:	f04f 33ff 	movge.w	r3, #4294967295
 800cb16:	2301      	movlt	r3, #1
 800cb18:	930a      	str	r3, [sp, #40]	; 0x28
 800cb1a:	6823      	ldr	r3, [r4, #0]
 800cb1c:	9204      	str	r2, [sp, #16]
 800cb1e:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800cb22:	fb02 f209 	mul.w	r2, r2, r9
 800cb26:	4629      	mov	r1, r5
 800cb28:	4620      	mov	r0, r4
 800cb2a:	4798      	blx	r3
 800cb2c:	f10d 0b48 	add.w	fp, sp, #72	; 0x48
 800cb30:	f84b 0d08 	str.w	r0, [fp, #-8]!
 800cb34:	4658      	mov	r0, fp
 800cb36:	f7ff fbf5 	bl	800c324 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800cb3a:	b203      	sxth	r3, r0
 800cb3c:	9305      	str	r3, [sp, #20]
 800cb3e:	6823      	ldr	r3, [r4, #0]
 800cb40:	fb06 f207 	mul.w	r2, r6, r7
 800cb44:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800cb48:	4629      	mov	r1, r5
 800cb4a:	4620      	mov	r0, r4
 800cb4c:	4798      	blx	r3
 800cb4e:	9010      	str	r0, [sp, #64]	; 0x40
 800cb50:	4658      	mov	r0, fp
 800cb52:	f7ff fbe7 	bl	800c324 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800cb56:	fb07 f20a 	mul.w	r2, r7, sl
 800cb5a:	920b      	str	r2, [sp, #44]	; 0x2c
 800cb5c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800cb5e:	4442      	add	r2, r8
 800cb60:	b203      	sxth	r3, r0
 800cb62:	920c      	str	r2, [sp, #48]	; 0x30
 800cb64:	9a05      	ldr	r2, [sp, #20]
 800cb66:	429a      	cmp	r2, r3
 800cb68:	dc16      	bgt.n	800cb98 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x2b0>
 800cb6a:	eb06 080a 	add.w	r8, r6, sl
 800cb6e:	fb07 f808 	mul.w	r8, r7, r8
 800cb72:	9a05      	ldr	r2, [sp, #20]
 800cb74:	429a      	cmp	r2, r3
 800cb76:	db54      	blt.n	800cc22 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x33a>
 800cb78:	6823      	ldr	r3, [r4, #0]
 800cb7a:	4642      	mov	r2, r8
 800cb7c:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800cb80:	4629      	mov	r1, r5
 800cb82:	4620      	mov	r0, r4
 800cb84:	4798      	blx	r3
 800cb86:	9010      	str	r0, [sp, #64]	; 0x40
 800cb88:	4658      	mov	r0, fp
 800cb8a:	f7ff fbcb 	bl	800c324 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800cb8e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800cb90:	4456      	add	r6, sl
 800cb92:	b203      	sxth	r3, r0
 800cb94:	4490      	add	r8, r2
 800cb96:	e7ec      	b.n	800cb72 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x28a>
 800cb98:	6823      	ldr	r3, [r4, #0]
 800cb9a:	fb07 f206 	mul.w	r2, r7, r6
 800cb9e:	4629      	mov	r1, r5
 800cba0:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800cba4:	4620      	mov	r0, r4
 800cba6:	4798      	blx	r3
 800cba8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800cbaa:	1ac0      	subs	r0, r0, r3
 800cbac:	9010      	str	r0, [sp, #64]	; 0x40
 800cbae:	4658      	mov	r0, fp
 800cbb0:	f7ff fbb8 	bl	800c324 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800cbb4:	6823      	ldr	r3, [r4, #0]
 800cbb6:	4680      	mov	r8, r0
 800cbb8:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800cbbc:	4629      	mov	r1, r5
 800cbbe:	4620      	mov	r0, r4
 800cbc0:	4798      	blx	r3
 800cbc2:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 800cbc6:	eba8 0000 	sub.w	r0, r8, r0
 800cbca:	b203      	sxth	r3, r0
 800cbcc:	42da      	cmn	r2, r3
 800cbce:	930d      	str	r3, [sp, #52]	; 0x34
 800cbd0:	d418      	bmi.n	800cc04 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x31c>
 800cbd2:	6822      	ldr	r2, [r4, #0]
 800cbd4:	4629      	mov	r1, r5
 800cbd6:	f8d2 20a8 	ldr.w	r2, [r2, #168]	; 0xa8
 800cbda:	4620      	mov	r0, r4
 800cbdc:	4790      	blx	r2
 800cbde:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800cbe0:	4283      	cmp	r3, r0
 800cbe2:	da0f      	bge.n	800cc04 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x31c>
 800cbe4:	9b08      	ldr	r3, [sp, #32]
 800cbe6:	9302      	str	r3, [sp, #8]
 800cbe8:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800cbec:	6822      	ldr	r2, [r4, #0]
 800cbee:	9301      	str	r3, [sp, #4]
 800cbf0:	fa0f f388 	sxth.w	r3, r8
 800cbf4:	9300      	str	r3, [sp, #0]
 800cbf6:	f8d2 8088 	ldr.w	r8, [r2, #136]	; 0x88
 800cbfa:	a90e      	add	r1, sp, #56	; 0x38
 800cbfc:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800cc00:	4620      	mov	r0, r4
 800cc02:	47c0      	blx	r8
 800cc04:	6823      	ldr	r3, [r4, #0]
 800cc06:	4456      	add	r6, sl
 800cc08:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800cc0c:	fb06 f207 	mul.w	r2, r6, r7
 800cc10:	4629      	mov	r1, r5
 800cc12:	4620      	mov	r0, r4
 800cc14:	4798      	blx	r3
 800cc16:	9010      	str	r0, [sp, #64]	; 0x40
 800cc18:	4658      	mov	r0, fp
 800cc1a:	f7ff fb83 	bl	800c324 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800cc1e:	b203      	sxth	r3, r0
 800cc20:	e7a0      	b.n	800cb64 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x27c>
 800cc22:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800cc24:	930d      	str	r3, [sp, #52]	; 0x34
 800cc26:	9b04      	ldr	r3, [sp, #16]
 800cc28:	4413      	add	r3, r2
 800cc2a:	9304      	str	r3, [sp, #16]
 800cc2c:	9a04      	ldr	r2, [sp, #16]
 800cc2e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800cc30:	4293      	cmp	r3, r2
 800cc32:	f43f aee2 	beq.w	800c9fa <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800cc36:	9b04      	ldr	r3, [sp, #16]
 800cc38:	6822      	ldr	r2, [r4, #0]
 800cc3a:	4629      	mov	r1, r5
 800cc3c:	f8d2 80ac 	ldr.w	r8, [r2, #172]	; 0xac
 800cc40:	4620      	mov	r0, r4
 800cc42:	fb03 f209 	mul.w	r2, r3, r9
 800cc46:	47c0      	blx	r8
 800cc48:	9010      	str	r0, [sp, #64]	; 0x40
 800cc4a:	4658      	mov	r0, fp
 800cc4c:	f7ff fb6a 	bl	800c324 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800cc50:	b203      	sxth	r3, r0
 800cc52:	9305      	str	r3, [sp, #20]
 800cc54:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800cc56:	e785      	b.n	800cb64 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x27c>
 800cc58:	4798      	blx	r3
 800cc5a:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 800cc5e:	deff      	udf	#255	; 0xff

0800cc60 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>:
 800cc60:	b510      	push	{r4, lr}
 800cc62:	ea80 73e0 	eor.w	r3, r0, r0, asr #31
 800cc66:	ea81 74e1 	eor.w	r4, r1, r1, asr #31
 800cc6a:	eba4 74e1 	sub.w	r4, r4, r1, asr #31
 800cc6e:	eba3 73e0 	sub.w	r3, r3, r0, asr #31
 800cc72:	13a4      	asrs	r4, r4, #14
 800cc74:	139b      	asrs	r3, r3, #14
 800cc76:	429c      	cmp	r4, r3
 800cc78:	bfb8      	it	lt
 800cc7a:	461c      	movlt	r4, r3
 800cc7c:	2c01      	cmp	r4, #1
 800cc7e:	dd07      	ble.n	800cc90 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x30>
 800cc80:	fb91 f1f4 	sdiv	r1, r1, r4
 800cc84:	fb90 f0f4 	sdiv	r0, r0, r4
 800cc88:	f7ff ffea 	bl	800cc60 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 800cc8c:	4360      	muls	r0, r4
 800cc8e:	bd10      	pop	{r4, pc}
 800cc90:	4340      	muls	r0, r0
 800cc92:	fb01 0101 	mla	r1, r1, r1, r0
 800cc96:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
 800cc9a:	bfb4      	ite	lt
 800cc9c:	f44f 4380 	movlt.w	r3, #16384	; 0x4000
 800cca0:	f04f 4380 	movge.w	r3, #1073741824	; 0x40000000
 800cca4:	2000      	movs	r0, #0
 800cca6:	18c2      	adds	r2, r0, r3
 800cca8:	428a      	cmp	r2, r1
 800ccaa:	bf9c      	itt	ls
 800ccac:	1898      	addls	r0, r3, r2
 800ccae:	1a89      	subls	r1, r1, r2
 800ccb0:	089b      	lsrs	r3, r3, #2
 800ccb2:	ea4f 0050 	mov.w	r0, r0, lsr #1
 800ccb6:	d1f6      	bne.n	800cca6 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x46>
 800ccb8:	e7e9      	b.n	800cc8e <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x2e>

0800ccba <_ZNK8touchgfx20AbstractGraphElement21rectFromQ5CoordinatesENS_7CWRUtil2Q5ES2_S2_S2_>:
 800ccba:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ccbc:	9906      	ldr	r1, [sp, #24]
 800ccbe:	4291      	cmp	r1, r2
 800ccc0:	bfbc      	itt	lt
 800ccc2:	9206      	strlt	r2, [sp, #24]
 800ccc4:	460a      	movlt	r2, r1
 800ccc6:	9907      	ldr	r1, [sp, #28]
 800ccc8:	428b      	cmp	r3, r1
 800ccca:	4606      	mov	r6, r0
 800cccc:	461c      	mov	r4, r3
 800ccce:	f04f 0020 	mov.w	r0, #32
 800ccd2:	bfc8      	it	gt
 800ccd4:	460c      	movgt	r4, r1
 800ccd6:	fb92 f5f0 	sdiv	r5, r2, r0
 800ccda:	fb94 f4f0 	sdiv	r4, r4, r0
 800ccde:	a806      	add	r0, sp, #24
 800cce0:	bfc8      	it	gt
 800cce2:	9307      	strgt	r3, [sp, #28]
 800cce4:	f7ff fdf7 	bl	800c8d6 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 800cce8:	4607      	mov	r7, r0
 800ccea:	a807      	add	r0, sp, #28
 800ccec:	f7ff fdf3 	bl	800c8d6 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 800ccf0:	1b7a      	subs	r2, r7, r5
 800ccf2:	1b00      	subs	r0, r0, r4
 800ccf4:	80f0      	strh	r0, [r6, #6]
 800ccf6:	8035      	strh	r5, [r6, #0]
 800ccf8:	8074      	strh	r4, [r6, #2]
 800ccfa:	80b2      	strh	r2, [r6, #4]
 800ccfc:	4630      	mov	r0, r6
 800ccfe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800cd00 <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>:
 800cd00:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800cd02:	9c08      	ldr	r4, [sp, #32]
 800cd04:	2602      	movs	r6, #2
 800cd06:	3401      	adds	r4, #1
 800cd08:	fb94 f4f6 	sdiv	r4, r4, r6
 800cd0c:	18a6      	adds	r6, r4, r2
 800cd0e:	191f      	adds	r7, r3, r4
 800cd10:	e9cd 6700 	strd	r6, r7, [sp]
 800cd14:	1b1b      	subs	r3, r3, r4
 800cd16:	1b12      	subs	r2, r2, r4
 800cd18:	4605      	mov	r5, r0
 800cd1a:	f7ff ffce 	bl	800ccba <_ZNK8touchgfx20AbstractGraphElement21rectFromQ5CoordinatesENS_7CWRUtil2Q5ES2_S2_S2_>
 800cd1e:	4628      	mov	r0, r5
 800cd20:	b003      	add	sp, #12
 800cd22:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800cd24 <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs>:
 800cd24:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800cd28:	6943      	ldr	r3, [r0, #20]
 800cd2a:	b087      	sub	sp, #28
 800cd2c:	4606      	mov	r6, r0
 800cd2e:	460d      	mov	r5, r1
 800cd30:	2b00      	cmp	r3, #0
 800cd32:	d072      	beq.n	800ce1a <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs+0xf6>
 800cd34:	695c      	ldr	r4, [r3, #20]
 800cd36:	f890 702c 	ldrb.w	r7, [r0, #44]	; 0x2c
 800cd3a:	6823      	ldr	r3, [r4, #0]
 800cd3c:	4620      	mov	r0, r4
 800cd3e:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800cd42:	4798      	blx	r3
 800cd44:	6823      	ldr	r3, [r4, #0]
 800cd46:	4680      	mov	r8, r0
 800cd48:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800cd4c:	4629      	mov	r1, r5
 800cd4e:	4620      	mov	r0, r4
 800cd50:	4798      	blx	r3
 800cd52:	017f      	lsls	r7, r7, #5
 800cd54:	4603      	mov	r3, r0
 800cd56:	9700      	str	r7, [sp, #0]
 800cd58:	4642      	mov	r2, r8
 800cd5a:	4631      	mov	r1, r6
 800cd5c:	a802      	add	r0, sp, #8
 800cd5e:	f7ff ffcf 	bl	800cd00 <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>
 800cd62:	2d00      	cmp	r5, #0
 800cd64:	dd1b      	ble.n	800cd9e <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs+0x7a>
 800cd66:	6823      	ldr	r3, [r4, #0]
 800cd68:	f105 38ff 	add.w	r8, r5, #4294967295
 800cd6c:	fa0f f888 	sxth.w	r8, r8
 800cd70:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800cd74:	4641      	mov	r1, r8
 800cd76:	4620      	mov	r0, r4
 800cd78:	4798      	blx	r3
 800cd7a:	6823      	ldr	r3, [r4, #0]
 800cd7c:	4681      	mov	r9, r0
 800cd7e:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800cd82:	4641      	mov	r1, r8
 800cd84:	4620      	mov	r0, r4
 800cd86:	4798      	blx	r3
 800cd88:	4631      	mov	r1, r6
 800cd8a:	4603      	mov	r3, r0
 800cd8c:	9700      	str	r7, [sp, #0]
 800cd8e:	a804      	add	r0, sp, #16
 800cd90:	464a      	mov	r2, r9
 800cd92:	f7ff ffb5 	bl	800cd00 <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>
 800cd96:	a904      	add	r1, sp, #16
 800cd98:	a802      	add	r0, sp, #8
 800cd9a:	f7ff fd57 	bl	800c84c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800cd9e:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800cda2:	3b01      	subs	r3, #1
 800cda4:	429d      	cmp	r5, r3
 800cda6:	da19      	bge.n	800cddc <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs+0xb8>
 800cda8:	6823      	ldr	r3, [r4, #0]
 800cdaa:	3501      	adds	r5, #1
 800cdac:	b22d      	sxth	r5, r5
 800cdae:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800cdb2:	4629      	mov	r1, r5
 800cdb4:	4620      	mov	r0, r4
 800cdb6:	4798      	blx	r3
 800cdb8:	6823      	ldr	r3, [r4, #0]
 800cdba:	4680      	mov	r8, r0
 800cdbc:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800cdc0:	4629      	mov	r1, r5
 800cdc2:	4620      	mov	r0, r4
 800cdc4:	4798      	blx	r3
 800cdc6:	4631      	mov	r1, r6
 800cdc8:	4603      	mov	r3, r0
 800cdca:	9700      	str	r7, [sp, #0]
 800cdcc:	a804      	add	r0, sp, #16
 800cdce:	4642      	mov	r2, r8
 800cdd0:	f7ff ff96 	bl	800cd00 <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>
 800cdd4:	a904      	add	r1, sp, #16
 800cdd6:	a802      	add	r0, sp, #8
 800cdd8:	f7ff fd38 	bl	800c84c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800cddc:	f9b4 1114 	ldrsh.w	r1, [r4, #276]	; 0x114
 800cde0:	f8b4 311a 	ldrh.w	r3, [r4, #282]	; 0x11a
 800cde4:	f9b4 0040 	ldrsh.w	r0, [r4, #64]	; 0x40
 800cde8:	18ca      	adds	r2, r1, r3
 800cdea:	f8b4 3042 	ldrh.w	r3, [r4, #66]	; 0x42
 800cdee:	f8ad 1012 	strh.w	r1, [sp, #18]
 800cdf2:	1a9b      	subs	r3, r3, r2
 800cdf4:	f8ad 0014 	strh.w	r0, [sp, #20]
 800cdf8:	2200      	movs	r2, #0
 800cdfa:	a904      	add	r1, sp, #16
 800cdfc:	a802      	add	r0, sp, #8
 800cdfe:	f8ad 2010 	strh.w	r2, [sp, #16]
 800ce02:	f8ad 3016 	strh.w	r3, [sp, #22]
 800ce06:	f7fd ffb9 	bl	800ad7c <_ZN8touchgfx4RectaNERKS0_>
 800ce0a:	6833      	ldr	r3, [r6, #0]
 800ce0c:	a902      	add	r1, sp, #8
 800ce0e:	691b      	ldr	r3, [r3, #16]
 800ce10:	4630      	mov	r0, r6
 800ce12:	4798      	blx	r3
 800ce14:	b007      	add	sp, #28
 800ce16:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ce1a:	681b      	ldr	r3, [r3, #0]
 800ce1c:	deff      	udf	#255	; 0xff

0800ce1e <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE>:
 800ce1e:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 800ce22:	2b00      	cmp	r3, #0
 800ce24:	da05      	bge.n	800ce32 <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE+0x14>
 800ce26:	880a      	ldrh	r2, [r1, #0]
 800ce28:	b29b      	uxth	r3, r3
 800ce2a:	441a      	add	r2, r3
 800ce2c:	425b      	negs	r3, r3
 800ce2e:	800a      	strh	r2, [r1, #0]
 800ce30:	808b      	strh	r3, [r1, #4]
 800ce32:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800ce36:	2b00      	cmp	r3, #0
 800ce38:	da05      	bge.n	800ce46 <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE+0x28>
 800ce3a:	884a      	ldrh	r2, [r1, #2]
 800ce3c:	b29b      	uxth	r3, r3
 800ce3e:	441a      	add	r2, r3
 800ce40:	425b      	negs	r3, r3
 800ce42:	804a      	strh	r2, [r1, #2]
 800ce44:	80cb      	strh	r3, [r1, #6]
 800ce46:	4770      	bx	lr

0800ce48 <_ZNK8touchgfx20GraphElementGridBase8drawLineERKNS_4RectEssssh>:
 800ce48:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800ce4a:	4604      	mov	r4, r0
 800ce4c:	460d      	mov	r5, r1
 800ce4e:	6801      	ldr	r1, [r0, #0]
 800ce50:	f9bd 0024 	ldrsh.w	r0, [sp, #36]	; 0x24
 800ce54:	9001      	str	r0, [sp, #4]
 800ce56:	f9bd 0020 	ldrsh.w	r0, [sp, #32]
 800ce5a:	9000      	str	r0, [sp, #0]
 800ce5c:	f8d1 6090 	ldr.w	r6, [r1, #144]	; 0x90
 800ce60:	a802      	add	r0, sp, #8
 800ce62:	4621      	mov	r1, r4
 800ce64:	47b0      	blx	r6
 800ce66:	a902      	add	r1, sp, #8
 800ce68:	4620      	mov	r0, r4
 800ce6a:	f7ff ffd8 	bl	800ce1e <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE>
 800ce6e:	a802      	add	r0, sp, #8
 800ce70:	4629      	mov	r1, r5
 800ce72:	f7fd ff83 	bl	800ad7c <_ZN8touchgfx4RectaNERKS0_>
 800ce76:	a802      	add	r0, sp, #8
 800ce78:	f7fd ffc3 	bl	800ae02 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ce7c:	b968      	cbnz	r0, 800ce9a <_ZNK8touchgfx20GraphElementGridBase8drawLineERKNS_4RectEssssh+0x52>
 800ce7e:	6823      	ldr	r3, [r4, #0]
 800ce80:	a902      	add	r1, sp, #8
 800ce82:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ce84:	4620      	mov	r0, r4
 800ce86:	4798      	blx	r3
 800ce88:	f7f5 fc38 	bl	80026fc <_ZN8touchgfx3HAL3lcdEv>
 800ce8c:	6803      	ldr	r3, [r0, #0]
 800ce8e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800ce90:	6a1d      	ldr	r5, [r3, #32]
 800ce92:	f89d 3028 	ldrb.w	r3, [sp, #40]	; 0x28
 800ce96:	a902      	add	r1, sp, #8
 800ce98:	47a8      	blx	r5
 800ce9a:	b004      	add	sp, #16
 800ce9c:	bd70      	pop	{r4, r5, r6, pc}

0800ce9e <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss>:
 800ce9e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cea2:	b08b      	sub	sp, #44	; 0x2c
 800cea4:	461e      	mov	r6, r3
 800cea6:	f9bd 3050 	ldrsh.w	r3, [sp, #80]	; 0x50
 800ceaa:	9304      	str	r3, [sp, #16]
 800ceac:	429e      	cmp	r6, r3
 800ceae:	4689      	mov	r9, r1
 800ceb0:	4615      	mov	r5, r2
 800ceb2:	d072      	beq.n	800cf9a <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0xfc>
 800ceb4:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800ceb8:	015b      	lsls	r3, r3, #5
 800ceba:	9303      	str	r3, [sp, #12]
 800cebc:	6813      	ldr	r3, [r2, #0]
 800cebe:	4610      	mov	r0, r2
 800cec0:	4631      	mov	r1, r6
 800cec2:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800cec6:	4798      	blx	r3
 800cec8:	ab0a      	add	r3, sp, #40	; 0x28
 800ceca:	4634      	mov	r4, r6
 800cecc:	f843 0d10 	str.w	r0, [r3, #-16]!
 800ced0:	4618      	mov	r0, r3
 800ced2:	f7ff fa27 	bl	800c324 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800ced6:	682b      	ldr	r3, [r5, #0]
 800ced8:	4631      	mov	r1, r6
 800ceda:	0147      	lsls	r7, r0, #5
 800cedc:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800cee0:	4628      	mov	r0, r5
 800cee2:	4798      	blx	r3
 800cee4:	ab0a      	add	r3, sp, #40	; 0x28
 800cee6:	f843 0d0c 	str.w	r0, [r3, #-12]!
 800ceea:	4618      	mov	r0, r3
 800ceec:	f7ff fa1a 	bl	800c324 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800cef0:	ea4f 1840 	mov.w	r8, r0, lsl #5
 800cef4:	4642      	mov	r2, r8
 800cef6:	4639      	mov	r1, r7
 800cef8:	4648      	mov	r0, r9
 800cefa:	f013 fb9b 	bl	8020634 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 800cefe:	2301      	movs	r3, #1
 800cf00:	9300      	str	r3, [sp, #0]
 800cf02:	9b00      	ldr	r3, [sp, #0]
 800cf04:	441c      	add	r4, r3
 800cf06:	682b      	ldr	r3, [r5, #0]
 800cf08:	b224      	sxth	r4, r4
 800cf0a:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800cf0e:	4621      	mov	r1, r4
 800cf10:	4628      	mov	r0, r5
 800cf12:	4798      	blx	r3
 800cf14:	9008      	str	r0, [sp, #32]
 800cf16:	a808      	add	r0, sp, #32
 800cf18:	f7ff fa04 	bl	800c324 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800cf1c:	0143      	lsls	r3, r0, #5
 800cf1e:	9301      	str	r3, [sp, #4]
 800cf20:	682b      	ldr	r3, [r5, #0]
 800cf22:	4621      	mov	r1, r4
 800cf24:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800cf28:	4628      	mov	r0, r5
 800cf2a:	4798      	blx	r3
 800cf2c:	9009      	str	r0, [sp, #36]	; 0x24
 800cf2e:	a809      	add	r0, sp, #36	; 0x24
 800cf30:	f7ff f9f8 	bl	800c324 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800cf34:	0143      	lsls	r3, r0, #5
 800cf36:	9302      	str	r3, [sp, #8]
 800cf38:	9b01      	ldr	r3, [sp, #4]
 800cf3a:	eba3 0b07 	sub.w	fp, r3, r7
 800cf3e:	9b02      	ldr	r3, [sp, #8]
 800cf40:	eba3 0a08 	sub.w	sl, r3, r8
 800cf44:	4651      	mov	r1, sl
 800cf46:	4658      	mov	r0, fp
 800cf48:	f7ff fe8a 	bl	800cc60 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 800cf4c:	b318      	cbz	r0, 800cf96 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0xf8>
 800cf4e:	4602      	mov	r2, r0
 800cf50:	4651      	mov	r1, sl
 800cf52:	9005      	str	r0, [sp, #20]
 800cf54:	9803      	ldr	r0, [sp, #12]
 800cf56:	f005 f9fb 	bl	8012350 <_ZN8touchgfx6muldivElll>
 800cf5a:	2302      	movs	r3, #2
 800cf5c:	fb90 faf3 	sdiv	sl, r0, r3
 800cf60:	9b05      	ldr	r3, [sp, #20]
 800cf62:	9803      	ldr	r0, [sp, #12]
 800cf64:	461a      	mov	r2, r3
 800cf66:	4659      	mov	r1, fp
 800cf68:	f005 f9f2 	bl	8012350 <_ZN8touchgfx6muldivElll>
 800cf6c:	2302      	movs	r3, #2
 800cf6e:	eba7 010a 	sub.w	r1, r7, sl
 800cf72:	fb90 fbf3 	sdiv	fp, r0, r3
 800cf76:	4648      	mov	r0, r9
 800cf78:	eb0b 0208 	add.w	r2, fp, r8
 800cf7c:	f013 fa30 	bl	80203e0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800cf80:	9b02      	ldr	r3, [sp, #8]
 800cf82:	eb03 020b 	add.w	r2, r3, fp
 800cf86:	9b01      	ldr	r3, [sp, #4]
 800cf88:	4648      	mov	r0, r9
 800cf8a:	eba3 010a 	sub.w	r1, r3, sl
 800cf8e:	f013 fa27 	bl	80203e0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800cf92:	e9dd 7801 	ldrd	r7, r8, [sp, #4]
 800cf96:	42a6      	cmp	r6, r4
 800cf98:	db02      	blt.n	800cfa0 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0x102>
 800cf9a:	b00b      	add	sp, #44	; 0x2c
 800cf9c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cfa0:	9b00      	ldr	r3, [sp, #0]
 800cfa2:	9a04      	ldr	r2, [sp, #16]
 800cfa4:	42a2      	cmp	r2, r4
 800cfa6:	bf08      	it	eq
 800cfa8:	f04f 33ff 	moveq.w	r3, #4294967295
 800cfac:	e7a8      	b.n	800cf00 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0x62>
	...

0800cfb0 <_ZN8touchgfx6CanvasD1Ev>:
 800cfb0:	b510      	push	{r4, lr}
 800cfb2:	4b04      	ldr	r3, [pc, #16]	; (800cfc4 <_ZN8touchgfx6CanvasD1Ev+0x14>)
 800cfb4:	4604      	mov	r4, r0
 800cfb6:	f840 3b20 	str.w	r3, [r0], #32
 800cfba:	f001 fd23 	bl	800ea04 <_ZN8touchgfx7OutlineD1Ev>
 800cfbe:	4620      	mov	r0, r4
 800cfc0:	bd10      	pop	{r4, pc}
 800cfc2:	bf00      	nop
 800cfc4:	08023bc4 	.word	0x08023bc4

0800cfc8 <_ZN8touchgfx6CanvasD0Ev>:
 800cfc8:	b510      	push	{r4, lr}
 800cfca:	4604      	mov	r4, r0
 800cfcc:	f7ff fff0 	bl	800cfb0 <_ZN8touchgfx6CanvasD1Ev>
 800cfd0:	4620      	mov	r0, r4
 800cfd2:	2170      	movs	r1, #112	; 0x70
 800cfd4:	f013 fb80 	bl	80206d8 <_ZdlPvj>
 800cfd8:	4620      	mov	r0, r4
 800cfda:	bd10      	pop	{r4, pc}

0800cfdc <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE>:
 800cfdc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cfe0:	6943      	ldr	r3, [r0, #20]
 800cfe2:	b0a2      	sub	sp, #136	; 0x88
 800cfe4:	4606      	mov	r6, r0
 800cfe6:	460f      	mov	r7, r1
 800cfe8:	2b00      	cmp	r3, #0
 800cfea:	d06a      	beq.n	800d0c2 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xe6>
 800cfec:	695c      	ldr	r4, [r3, #20]
 800cfee:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800cff2:	2b01      	cmp	r3, #1
 800cff4:	dc04      	bgt.n	800d000 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0x24>
 800cff6:	2401      	movs	r4, #1
 800cff8:	4620      	mov	r0, r4
 800cffa:	b022      	add	sp, #136	; 0x88
 800cffc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d000:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800d004:	ad22      	add	r5, sp, #136	; 0x88
 800d006:	011b      	lsls	r3, r3, #4
 800d008:	f845 3d70 	str.w	r3, [r5, #-112]!
 800d00c:	4628      	mov	r0, r5
 800d00e:	f7ff fc62 	bl	800c8d6 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 800d012:	8839      	ldrh	r1, [r7, #0]
 800d014:	88ba      	ldrh	r2, [r7, #4]
 800d016:	6823      	ldr	r3, [r4, #0]
 800d018:	b280      	uxth	r0, r0
 800d01a:	440a      	add	r2, r1
 800d01c:	4402      	add	r2, r0
 800d01e:	1a09      	subs	r1, r1, r0
 800d020:	f10d 000e 	add.w	r0, sp, #14
 800d024:	9000      	str	r0, [sp, #0]
 800d026:	f8d3 8124 	ldr.w	r8, [r3, #292]	; 0x124
 800d02a:	b212      	sxth	r2, r2
 800d02c:	ab03      	add	r3, sp, #12
 800d02e:	b209      	sxth	r1, r1
 800d030:	4620      	mov	r0, r4
 800d032:	47c0      	blx	r8
 800d034:	2800      	cmp	r0, #0
 800d036:	d0de      	beq.n	800cff6 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0x1a>
 800d038:	f9b4 1114 	ldrsh.w	r1, [r4, #276]	; 0x114
 800d03c:	f8b4 311a 	ldrh.w	r3, [r4, #282]	; 0x11a
 800d040:	f9b4 0040 	ldrsh.w	r0, [r4, #64]	; 0x40
 800d044:	f8ad 1012 	strh.w	r1, [sp, #18]
 800d048:	18ca      	adds	r2, r1, r3
 800d04a:	f8b4 3042 	ldrh.w	r3, [r4, #66]	; 0x42
 800d04e:	f8ad 0014 	strh.w	r0, [sp, #20]
 800d052:	1a9b      	subs	r3, r3, r2
 800d054:	4639      	mov	r1, r7
 800d056:	2200      	movs	r2, #0
 800d058:	a804      	add	r0, sp, #16
 800d05a:	f8ad 3016 	strh.w	r3, [sp, #22]
 800d05e:	f8ad 2010 	strh.w	r2, [sp, #16]
 800d062:	f7fd fe8b 	bl	800ad7c <_ZN8touchgfx4RectaNERKS0_>
 800d066:	aa04      	add	r2, sp, #16
 800d068:	4631      	mov	r1, r6
 800d06a:	4628      	mov	r0, r5
 800d06c:	f013 f90a 	bl	8020284 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 800d070:	f9b4 7120 	ldrsh.w	r7, [r4, #288]	; 0x120
 800d074:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800d078:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
 800d07c:	2f00      	cmp	r7, #0
 800d07e:	dd03      	ble.n	800d088 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xac>
 800d080:	42bb      	cmp	r3, r7
 800d082:	da01      	bge.n	800d088 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xac>
 800d084:	42ba      	cmp	r2, r7
 800d086:	da0f      	bge.n	800d0a8 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xcc>
 800d088:	9200      	str	r2, [sp, #0]
 800d08a:	4622      	mov	r2, r4
 800d08c:	4629      	mov	r1, r5
 800d08e:	4630      	mov	r0, r6
 800d090:	f7ff ff05 	bl	800ce9e <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss>
 800d094:	f894 102c 	ldrb.w	r1, [r4, #44]	; 0x2c
 800d098:	4628      	mov	r0, r5
 800d09a:	f013 fa1d 	bl	80204d8 <_ZN8touchgfx6Canvas6renderEh>
 800d09e:	4604      	mov	r4, r0
 800d0a0:	4628      	mov	r0, r5
 800d0a2:	f7ff ff85 	bl	800cfb0 <_ZN8touchgfx6CanvasD1Ev>
 800d0a6:	e7a7      	b.n	800cff8 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0x1c>
 800d0a8:	1e7a      	subs	r2, r7, #1
 800d0aa:	b212      	sxth	r2, r2
 800d0ac:	9200      	str	r2, [sp, #0]
 800d0ae:	4629      	mov	r1, r5
 800d0b0:	4622      	mov	r2, r4
 800d0b2:	4630      	mov	r0, r6
 800d0b4:	f7ff fef3 	bl	800ce9e <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss>
 800d0b8:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800d0bc:	9300      	str	r3, [sp, #0]
 800d0be:	463b      	mov	r3, r7
 800d0c0:	e7e3      	b.n	800d08a <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xae>
 800d0c2:	f8b3 311e 	ldrh.w	r3, [r3, #286]	; 0x11e
 800d0c6:	deff      	udf	#255	; 0xff

0800d0c8 <_ZN8touchgfx15GraphLabelsBase22invalidateGraphPointAtEs>:
 800d0c8:	4770      	bx	lr

0800d0ca <_ZNK8touchgfx15GraphLabelsBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE>:
 800d0ca:	6c80      	ldr	r0, [r0, #72]	; 0x48
 800d0cc:	b118      	cbz	r0, 800d0d6 <_ZNK8touchgfx15GraphLabelsBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE+0xc>
 800d0ce:	6803      	ldr	r3, [r0, #0]
 800d0d0:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800d0d4:	4718      	bx	r3
 800d0d6:	4770      	bx	lr

0800d0d8 <_ZNK8touchgfx12GraphLabelsX22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:
 800d0d8:	680b      	ldr	r3, [r1, #0]
 800d0da:	4608      	mov	r0, r1
 800d0dc:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 800d0e0:	4718      	bx	r3

0800d0e2 <_ZNK8touchgfx12GraphLabelsX22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
 800d0e2:	680b      	ldr	r3, [r1, #0]
 800d0e4:	4608      	mov	r0, r1
 800d0e6:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 800d0ea:	4718      	bx	r3

0800d0ec <_ZNK8touchgfx12GraphLabelsY22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:
 800d0ec:	680b      	ldr	r3, [r1, #0]
 800d0ee:	4608      	mov	r0, r1
 800d0f0:	f8d3 30ec 	ldr.w	r3, [r3, #236]	; 0xec
 800d0f4:	4718      	bx	r3

0800d0f6 <_ZNK8touchgfx12GraphLabelsY22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
 800d0f6:	680b      	ldr	r3, [r1, #0]
 800d0f8:	4608      	mov	r0, r1
 800d0fa:	f8d3 30f8 	ldr.w	r3, [r3, #248]	; 0xf8
 800d0fe:	4718      	bx	r3

0800d100 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE>:
 800d100:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d104:	4a37      	ldr	r2, [pc, #220]	; (800d1e4 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xe4>)
 800d106:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 800d108:	8812      	ldrh	r2, [r2, #0]
 800d10a:	429a      	cmp	r2, r3
 800d10c:	b087      	sub	sp, #28
 800d10e:	4604      	mov	r4, r0
 800d110:	4689      	mov	r9, r1
 800d112:	d937      	bls.n	800d184 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800d114:	4a34      	ldr	r2, [pc, #208]	; (800d1e8 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xe8>)
 800d116:	6812      	ldr	r2, [r2, #0]
 800d118:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800d11c:	4b33      	ldr	r3, [pc, #204]	; (800d1ec <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xec>)
 800d11e:	681b      	ldr	r3, [r3, #0]
 800d120:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
 800d124:	f1b8 0f00 	cmp.w	r8, #0
 800d128:	d02c      	beq.n	800d184 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800d12a:	6803      	ldr	r3, [r0, #0]
 800d12c:	6945      	ldr	r5, [r0, #20]
 800d12e:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800d130:	2d00      	cmp	r5, #0
 800d132:	d052      	beq.n	800d1da <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xda>
 800d134:	696f      	ldr	r7, [r5, #20]
 800d136:	4798      	blx	r3
 800d138:	f897 502c 	ldrb.w	r5, [r7, #44]	; 0x2c
 800d13c:	fb15 f000 	smulbb	r0, r5, r0
 800d140:	b280      	uxth	r0, r0
 800d142:	1c45      	adds	r5, r0, #1
 800d144:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 800d148:	122d      	asrs	r5, r5, #8
 800d14a:	d01b      	beq.n	800d184 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800d14c:	6823      	ldr	r3, [r4, #0]
 800d14e:	4639      	mov	r1, r7
 800d150:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800d154:	4620      	mov	r0, r4
 800d156:	4798      	blx	r3
 800d158:	6823      	ldr	r3, [r4, #0]
 800d15a:	4606      	mov	r6, r0
 800d15c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800d160:	4639      	mov	r1, r7
 800d162:	4620      	mov	r0, r4
 800d164:	4798      	blx	r3
 800d166:	b2ed      	uxtb	r5, r5
 800d168:	4683      	mov	fp, r0
 800d16a:	b970      	cbnz	r0, 800d18a <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x8a>
 800d16c:	b96e      	cbnz	r6, 800d18a <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x8a>
 800d16e:	e9cd 6501 	strd	r6, r5, [sp, #4]
 800d172:	6823      	ldr	r3, [r4, #0]
 800d174:	9600      	str	r6, [sp, #0]
 800d176:	f8d3 508c 	ldr.w	r5, [r3, #140]	; 0x8c
 800d17a:	4642      	mov	r2, r8
 800d17c:	463b      	mov	r3, r7
 800d17e:	4649      	mov	r1, r9
 800d180:	4620      	mov	r0, r4
 800d182:	47a8      	blx	r5
 800d184:	b007      	add	sp, #28
 800d186:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d18a:	2e00      	cmp	r6, #0
 800d18c:	ddfa      	ble.n	800d184 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800d18e:	6823      	ldr	r3, [r4, #0]
 800d190:	4639      	mov	r1, r7
 800d192:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800d196:	4620      	mov	r0, r4
 800d198:	4798      	blx	r3
 800d19a:	6823      	ldr	r3, [r4, #0]
 800d19c:	4682      	mov	sl, r0
 800d19e:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800d1a2:	4639      	mov	r1, r7
 800d1a4:	4620      	mov	r0, r4
 800d1a6:	4798      	blx	r3
 800d1a8:	4582      	cmp	sl, r0
 800d1aa:	bfde      	ittt	le
 800d1ac:	4603      	movle	r3, r0
 800d1ae:	4650      	movle	r0, sl
 800d1b0:	469a      	movle	sl, r3
 800d1b2:	ebaa 0300 	sub.w	r3, sl, r0
 800d1b6:	fb93 f3f6 	sdiv	r3, r3, r6
 800d1ba:	2b64      	cmp	r3, #100	; 0x64
 800d1bc:	dce2      	bgt.n	800d184 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800d1be:	e9cd b503 	strd	fp, r5, [sp, #12]
 800d1c2:	e9cd a601 	strd	sl, r6, [sp, #4]
 800d1c6:	6823      	ldr	r3, [r4, #0]
 800d1c8:	9000      	str	r0, [sp, #0]
 800d1ca:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 800d1ce:	4642      	mov	r2, r8
 800d1d0:	463b      	mov	r3, r7
 800d1d2:	4649      	mov	r1, r9
 800d1d4:	4620      	mov	r0, r4
 800d1d6:	47a8      	blx	r5
 800d1d8:	e7d4      	b.n	800d184 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800d1da:	4798      	blx	r3
 800d1dc:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 800d1e0:	deff      	udf	#255	; 0xff
 800d1e2:	bf00      	nop
 800d1e4:	20015610 	.word	0x20015610
 800d1e8:	2001560c 	.word	0x2001560c
 800d1ec:	20015614 	.word	0x20015614

0800d1f0 <_ZN8touchgfx12GraphLabelsYD1Ev>:
 800d1f0:	4770      	bx	lr

0800d1f2 <_ZN8touchgfx12GraphLabelsXD1Ev>:
 800d1f2:	4770      	bx	lr

0800d1f4 <_ZNK8touchgfx12GraphLabelsX31getCorrectlyScaledLabelIntervalEPKNS_17AbstractDataGraphE>:
 800d1f4:	b538      	push	{r3, r4, r5, lr}
 800d1f6:	680a      	ldr	r2, [r1, #0]
 800d1f8:	e9d0 540c 	ldrd	r5, r4, [r0, #48]	; 0x30
 800d1fc:	f8d2 208c 	ldr.w	r2, [r2, #140]	; 0x8c
 800d200:	4608      	mov	r0, r1
 800d202:	4790      	blx	r2
 800d204:	4629      	mov	r1, r5
 800d206:	4602      	mov	r2, r0
 800d208:	4620      	mov	r0, r4
 800d20a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800d20e:	f7ff baa7 	b.w	800c760 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>

0800d212 <_ZNK8touchgfx12GraphLabelsY31getCorrectlyScaledLabelIntervalEPKNS_17AbstractDataGraphE>:
 800d212:	b538      	push	{r3, r4, r5, lr}
 800d214:	680a      	ldr	r2, [r1, #0]
 800d216:	e9d0 540c 	ldrd	r5, r4, [r0, #48]	; 0x30
 800d21a:	f8d2 2094 	ldr.w	r2, [r2, #148]	; 0x94
 800d21e:	4608      	mov	r0, r1
 800d220:	4790      	blx	r2
 800d222:	4629      	mov	r1, r5
 800d224:	4602      	mov	r2, r0
 800d226:	4620      	mov	r0, r4
 800d228:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800d22c:	f7ff ba98 	b.w	800c760 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>

0800d230 <_ZN8touchgfx12GraphLabelsYD0Ev>:
 800d230:	b510      	push	{r4, lr}
 800d232:	214c      	movs	r1, #76	; 0x4c
 800d234:	4604      	mov	r4, r0
 800d236:	f013 fa4f 	bl	80206d8 <_ZdlPvj>
 800d23a:	4620      	mov	r0, r4
 800d23c:	bd10      	pop	{r4, pc}

0800d23e <_ZN8touchgfx12GraphLabelsXD0Ev>:
 800d23e:	b510      	push	{r4, lr}
 800d240:	214c      	movs	r1, #76	; 0x4c
 800d242:	4604      	mov	r4, r0
 800d244:	f013 fa48 	bl	80206d8 <_ZdlPvj>
 800d248:	4620      	mov	r0, r4
 800d24a:	bd10      	pop	{r4, pc}

0800d24c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>:
 800d24c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d250:	b08d      	sub	sp, #52	; 0x34
 800d252:	e9dd 9a18 	ldrd	r9, sl, [sp, #96]	; 0x60
 800d256:	9309      	str	r3, [sp, #36]	; 0x24
 800d258:	f89d 3068 	ldrb.w	r3, [sp, #104]	; 0x68
 800d25c:	930a      	str	r3, [sp, #40]	; 0x28
 800d25e:	4606      	mov	r6, r0
 800d260:	e9cd 1207 	strd	r1, r2, [sp, #28]
 800d264:	e9dd 7816 	ldrd	r7, r8, [sp, #88]	; 0x58
 800d268:	f1b9 0f00 	cmp.w	r9, #0
 800d26c:	d117      	bne.n	800d29e <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x52>
 800d26e:	2f00      	cmp	r7, #0
 800d270:	dc7c      	bgt.n	800d36c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x120>
 800d272:	f1b8 0f00 	cmp.w	r8, #0
 800d276:	da01      	bge.n	800d27c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x30>
 800d278:	2f00      	cmp	r7, #0
 800d27a:	d17a      	bne.n	800d372 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x126>
 800d27c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d27e:	9318      	str	r3, [sp, #96]	; 0x60
 800d280:	2300      	movs	r3, #0
 800d282:	e9cd 3316 	strd	r3, r3, [sp, #88]	; 0x58
 800d286:	6832      	ldr	r2, [r6, #0]
 800d288:	9907      	ldr	r1, [sp, #28]
 800d28a:	f8d2 408c 	ldr.w	r4, [r2, #140]	; 0x8c
 800d28e:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800d292:	4630      	mov	r0, r6
 800d294:	46a4      	mov	ip, r4
 800d296:	b00d      	add	sp, #52	; 0x34
 800d298:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d29c:	4760      	bx	ip
 800d29e:	fb97 f4f9 	sdiv	r4, r7, r9
 800d2a2:	1e63      	subs	r3, r4, #1
 800d2a4:	9305      	str	r3, [sp, #20]
 800d2a6:	f1ba 0f00 	cmp.w	sl, #0
 800d2aa:	d122      	bne.n	800d2f2 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xa6>
 800d2ac:	fb98 faf9 	sdiv	sl, r8, r9
 800d2b0:	fb03 f509 	mul.w	r5, r3, r9
 800d2b4:	f10a 0a02 	add.w	sl, sl, #2
 800d2b8:	9b05      	ldr	r3, [sp, #20]
 800d2ba:	459a      	cmp	sl, r3
 800d2bc:	d059      	beq.n	800d372 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x126>
 800d2be:	42af      	cmp	r7, r5
 800d2c0:	dc5a      	bgt.n	800d378 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x12c>
 800d2c2:	45a8      	cmp	r8, r5
 800d2c4:	da01      	bge.n	800d2ca <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x7e>
 800d2c6:	42af      	cmp	r7, r5
 800d2c8:	db0e      	blt.n	800d2e8 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x9c>
 800d2ca:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d2cc:	9302      	str	r3, [sp, #8]
 800d2ce:	9905      	ldr	r1, [sp, #20]
 800d2d0:	6b73      	ldr	r3, [r6, #52]	; 0x34
 800d2d2:	6832      	ldr	r2, [r6, #0]
 800d2d4:	434b      	muls	r3, r1
 800d2d6:	e9cd 5300 	strd	r5, r3, [sp]
 800d2da:	9907      	ldr	r1, [sp, #28]
 800d2dc:	f8d2 b08c 	ldr.w	fp, [r2, #140]	; 0x8c
 800d2e0:	4630      	mov	r0, r6
 800d2e2:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800d2e6:	47d8      	blx	fp
 800d2e8:	9b05      	ldr	r3, [sp, #20]
 800d2ea:	3301      	adds	r3, #1
 800d2ec:	9305      	str	r3, [sp, #20]
 800d2ee:	444d      	add	r5, r9
 800d2f0:	e7e2      	b.n	800d2b8 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x6c>
 800d2f2:	fb97 f3fa 	sdiv	r3, r7, sl
 800d2f6:	3b01      	subs	r3, #1
 800d2f8:	9306      	str	r3, [sp, #24]
 800d2fa:	9a06      	ldr	r2, [sp, #24]
 800d2fc:	fb98 f3fa 	sdiv	r3, r8, sl
 800d300:	fb02 fb0a 	mul.w	fp, r2, sl
 800d304:	9a05      	ldr	r2, [sp, #20]
 800d306:	3302      	adds	r3, #2
 800d308:	fb02 f509 	mul.w	r5, r2, r9
 800d30c:	930b      	str	r3, [sp, #44]	; 0x2c
 800d30e:	45ab      	cmp	fp, r5
 800d310:	dd1d      	ble.n	800d34e <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x102>
 800d312:	42af      	cmp	r7, r5
 800d314:	dc08      	bgt.n	800d328 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xdc>
 800d316:	45a8      	cmp	r8, r5
 800d318:	da08      	bge.n	800d32c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xe0>
 800d31a:	42af      	cmp	r7, r5
 800d31c:	da06      	bge.n	800d32c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xe0>
 800d31e:	9b05      	ldr	r3, [sp, #20]
 800d320:	3301      	adds	r3, #1
 800d322:	9305      	str	r3, [sp, #20]
 800d324:	444d      	add	r5, r9
 800d326:	e7f2      	b.n	800d30e <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xc2>
 800d328:	45a8      	cmp	r8, r5
 800d32a:	dcf8      	bgt.n	800d31e <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xd2>
 800d32c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d32e:	9302      	str	r3, [sp, #8]
 800d330:	9905      	ldr	r1, [sp, #20]
 800d332:	6b73      	ldr	r3, [r6, #52]	; 0x34
 800d334:	6832      	ldr	r2, [r6, #0]
 800d336:	434b      	muls	r3, r1
 800d338:	e9cd 5300 	strd	r5, r3, [sp]
 800d33c:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 800d340:	9907      	ldr	r1, [sp, #28]
 800d342:	461c      	mov	r4, r3
 800d344:	4630      	mov	r0, r6
 800d346:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800d34a:	47a0      	blx	r4
 800d34c:	e7e7      	b.n	800d31e <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xd2>
 800d34e:	45ab      	cmp	fp, r5
 800d350:	db04      	blt.n	800d35c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x110>
 800d352:	9b05      	ldr	r3, [sp, #20]
 800d354:	3301      	adds	r3, #1
 800d356:	9305      	str	r3, [sp, #20]
 800d358:	444d      	add	r5, r9
 800d35a:	e7f8      	b.n	800d34e <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x102>
 800d35c:	9b06      	ldr	r3, [sp, #24]
 800d35e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800d360:	3301      	adds	r3, #1
 800d362:	4293      	cmp	r3, r2
 800d364:	9306      	str	r3, [sp, #24]
 800d366:	d004      	beq.n	800d372 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x126>
 800d368:	44d3      	add	fp, sl
 800d36a:	e7d0      	b.n	800d30e <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xc2>
 800d36c:	f1b8 0f00 	cmp.w	r8, #0
 800d370:	dd84      	ble.n	800d27c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x30>
 800d372:	b00d      	add	sp, #52	; 0x34
 800d374:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d378:	45a8      	cmp	r8, r5
 800d37a:	dcb5      	bgt.n	800d2e8 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x9c>
 800d37c:	e7a5      	b.n	800d2ca <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x7e>

0800d37e <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>:
 800d37e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d382:	f9b3 4120 	ldrsh.w	r4, [r3, #288]	; 0x120
 800d386:	b089      	sub	sp, #36	; 0x24
 800d388:	2c00      	cmp	r4, #0
 800d38a:	9007      	str	r0, [sp, #28]
 800d38c:	468a      	mov	sl, r1
 800d38e:	4693      	mov	fp, r2
 800d390:	461d      	mov	r5, r3
 800d392:	e9dd c612 	ldrd	ip, r6, [sp, #72]	; 0x48
 800d396:	e9dd 7814 	ldrd	r7, r8, [sp, #80]	; 0x50
 800d39a:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 800d39e:	dd03      	ble.n	800d3a8 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x2a>
 800d3a0:	4564      	cmp	r4, ip
 800d3a2:	dd01      	ble.n	800d3a8 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x2a>
 800d3a4:	42b4      	cmp	r4, r6
 800d3a6:	dd0e      	ble.n	800d3c6 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x48>
 800d3a8:	e9cd 8915 	strd	r8, r9, [sp, #84]	; 0x54
 800d3ac:	e9cd 6713 	strd	r6, r7, [sp, #76]	; 0x4c
 800d3b0:	f8cd c048 	str.w	ip, [sp, #72]	; 0x48
 800d3b4:	9807      	ldr	r0, [sp, #28]
 800d3b6:	462b      	mov	r3, r5
 800d3b8:	465a      	mov	r2, fp
 800d3ba:	4651      	mov	r1, sl
 800d3bc:	b009      	add	sp, #36	; 0x24
 800d3be:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d3c2:	f7ff bf43 	b.w	800d24c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>
 800d3c6:	f104 3eff 	add.w	lr, r4, #4294967295
 800d3ca:	e9cd 8903 	strd	r8, r9, [sp, #12]
 800d3ce:	9702      	str	r7, [sp, #8]
 800d3d0:	e9cd ce00 	strd	ip, lr, [sp]
 800d3d4:	f7ff ff3a 	bl	800d24c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>
 800d3d8:	e9cd 8915 	strd	r8, r9, [sp, #84]	; 0x54
 800d3dc:	e9cd 6713 	strd	r6, r7, [sp, #76]	; 0x4c
 800d3e0:	9412      	str	r4, [sp, #72]	; 0x48
 800d3e2:	e7e7      	b.n	800d3b4 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x36>

0800d3e4 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>:
 800d3e4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d3e8:	f1b3 0900 	subs.w	r9, r3, #0
 800d3ec:	460d      	mov	r5, r1
 800d3ee:	4690      	mov	r8, r2
 800d3f0:	9f08      	ldr	r7, [sp, #32]
 800d3f2:	f8bd a024 	ldrh.w	sl, [sp, #36]	; 0x24
 800d3f6:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 800d3f8:	da18      	bge.n	800d42c <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x48>
 800d3fa:	2a01      	cmp	r2, #1
 800d3fc:	dd16      	ble.n	800d42c <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x48>
 800d3fe:	232d      	movs	r3, #45	; 0x2d
 800d400:	800b      	strh	r3, [r1, #0]
 800d402:	f1c9 0900 	rsb	r9, r9, #0
 800d406:	2001      	movs	r0, #1
 800d408:	2f00      	cmp	r7, #0
 800d40a:	d111      	bne.n	800d430 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x4c>
 800d40c:	eba8 0100 	sub.w	r1, r8, r0
 800d410:	2302      	movs	r3, #2
 800d412:	eb05 0040 	add.w	r0, r5, r0, lsl #1
 800d416:	fb96 f3f3 	sdiv	r3, r6, r3
 800d41a:	4a24      	ldr	r2, [pc, #144]	; (800d4ac <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc8>)
 800d41c:	444b      	add	r3, r9
 800d41e:	b289      	uxth	r1, r1
 800d420:	fb93 f3f6 	sdiv	r3, r3, r6
 800d424:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d428:	f006 bdf8 	b.w	801401c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800d42c:	2000      	movs	r0, #0
 800d42e:	e7eb      	b.n	800d408 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x24>
 800d430:	dd39      	ble.n	800d4a6 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc2>
 800d432:	fb99 f4f6 	sdiv	r4, r9, r6
 800d436:	eba8 0100 	sub.w	r1, r8, r0
 800d43a:	4623      	mov	r3, r4
 800d43c:	4a1b      	ldr	r2, [pc, #108]	; (800d4ac <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc8>)
 800d43e:	b289      	uxth	r1, r1
 800d440:	eb05 0040 	add.w	r0, r5, r0, lsl #1
 800d444:	f006 fdea 	bl	801401c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800d448:	4628      	mov	r0, r5
 800d44a:	f006 fa73 	bl	8013934 <_ZN8touchgfx7Unicode6strlenEPKt>
 800d44e:	f108 38ff 	add.w	r8, r8, #4294967295
 800d452:	4580      	cmp	r8, r0
 800d454:	dd27      	ble.n	800d4a6 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc2>
 800d456:	f825 a010 	strh.w	sl, [r5, r0, lsl #1]
 800d45a:	fb06 9314 	mls	r3, r6, r4, r9
 800d45e:	3001      	adds	r0, #1
 800d460:	2200      	movs	r2, #0
 800d462:	f04f 090a 	mov.w	r9, #10
 800d466:	f107 3aff 	add.w	sl, r7, #4294967295
 800d46a:	f04f 0e02 	mov.w	lr, #2
 800d46e:	fb96 fefe 	sdiv	lr, r6, lr
 800d472:	4580      	cmp	r8, r0
 800d474:	4684      	mov	ip, r0
 800d476:	dd13      	ble.n	800d4a0 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xbc>
 800d478:	fb09 f303 	mul.w	r3, r9, r3
 800d47c:	4592      	cmp	sl, r2
 800d47e:	f102 0201 	add.w	r2, r2, #1
 800d482:	bf08      	it	eq
 800d484:	4473      	addeq	r3, lr
 800d486:	f100 0c01 	add.w	ip, r0, #1
 800d48a:	fb93 f4f6 	sdiv	r4, r3, r6
 800d48e:	4297      	cmp	r7, r2
 800d490:	f104 0130 	add.w	r1, r4, #48	; 0x30
 800d494:	f825 1010 	strh.w	r1, [r5, r0, lsl #1]
 800d498:	fb06 3314 	mls	r3, r6, r4, r3
 800d49c:	4660      	mov	r0, ip
 800d49e:	d1e8      	bne.n	800d472 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x8e>
 800d4a0:	2300      	movs	r3, #0
 800d4a2:	f825 301c 	strh.w	r3, [r5, ip, lsl #1]
 800d4a6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800d4aa:	bf00      	nop
 800d4ac:	08023550 	.word	0x08023550

0800d4b0 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs>:
 800d4b0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d4b4:	4a6b      	ldr	r2, [pc, #428]	; (800d664 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1b4>)
 800d4b6:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 800d4b8:	8812      	ldrh	r2, [r2, #0]
 800d4ba:	429a      	cmp	r2, r3
 800d4bc:	b092      	sub	sp, #72	; 0x48
 800d4be:	4604      	mov	r4, r0
 800d4c0:	460e      	mov	r6, r1
 800d4c2:	d93a      	bls.n	800d53a <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800d4c4:	4a68      	ldr	r2, [pc, #416]	; (800d668 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1b8>)
 800d4c6:	6812      	ldr	r2, [r2, #0]
 800d4c8:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800d4cc:	4b67      	ldr	r3, [pc, #412]	; (800d66c <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1bc>)
 800d4ce:	681b      	ldr	r3, [r3, #0]
 800d4d0:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
 800d4d4:	f1b8 0f00 	cmp.w	r8, #0
 800d4d8:	d02f      	beq.n	800d53a <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800d4da:	6803      	ldr	r3, [r0, #0]
 800d4dc:	6945      	ldr	r5, [r0, #20]
 800d4de:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800d4e0:	2d00      	cmp	r5, #0
 800d4e2:	f000 80ba 	beq.w	800d65a <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1aa>
 800d4e6:	696f      	ldr	r7, [r5, #20]
 800d4e8:	4798      	blx	r3
 800d4ea:	f897 302c 	ldrb.w	r3, [r7, #44]	; 0x2c
 800d4ee:	fb13 f000 	smulbb	r0, r3, r0
 800d4f2:	b280      	uxth	r0, r0
 800d4f4:	1c43      	adds	r3, r0, #1
 800d4f6:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 800d4fa:	0a03      	lsrs	r3, r0, #8
 800d4fc:	d01d      	beq.n	800d53a <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800d4fe:	6b39      	ldr	r1, [r7, #48]	; 0x30
 800d500:	6823      	ldr	r3, [r4, #0]
 800d502:	434e      	muls	r6, r1
 800d504:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800d508:	4639      	mov	r1, r7
 800d50a:	4620      	mov	r0, r4
 800d50c:	4798      	blx	r3
 800d50e:	6823      	ldr	r3, [r4, #0]
 800d510:	4605      	mov	r5, r0
 800d512:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800d516:	4639      	mov	r1, r7
 800d518:	4620      	mov	r0, r4
 800d51a:	4798      	blx	r3
 800d51c:	2d00      	cmp	r5, #0
 800d51e:	dd0f      	ble.n	800d540 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x90>
 800d520:	fb96 f3f5 	sdiv	r3, r6, r5
 800d524:	436b      	muls	r3, r5
 800d526:	1b9a      	subs	r2, r3, r6
 800d528:	4253      	negs	r3, r2
 800d52a:	4153      	adcs	r3, r2
 800d52c:	2800      	cmp	r0, #0
 800d52e:	dd09      	ble.n	800d544 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x94>
 800d530:	fb96 f2f0 	sdiv	r2, r6, r0
 800d534:	4350      	muls	r0, r2
 800d536:	42b0      	cmp	r0, r6
 800d538:	d10e      	bne.n	800d558 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xa8>
 800d53a:	b012      	add	sp, #72	; 0x48
 800d53c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800d540:	2300      	movs	r3, #0
 800d542:	e7f3      	b.n	800d52c <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x7c>
 800d544:	d108      	bne.n	800d558 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xa8>
 800d546:	2d00      	cmp	r5, #0
 800d548:	f040 8084 	bne.w	800d654 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1a4>
 800d54c:	2e00      	cmp	r6, #0
 800d54e:	d055      	beq.n	800d5fc <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x14c>
 800d550:	2b00      	cmp	r3, #0
 800d552:	d0f2      	beq.n	800d53a <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800d554:	462a      	mov	r2, r5
 800d556:	e007      	b.n	800d568 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xb8>
 800d558:	2b00      	cmp	r3, #0
 800d55a:	d0ee      	beq.n	800d53a <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800d55c:	2d00      	cmp	r5, #0
 800d55e:	d0f9      	beq.n	800d554 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xa4>
 800d560:	fb96 f2f5 	sdiv	r2, r6, r5
 800d564:	6b65      	ldr	r5, [r4, #52]	; 0x34
 800d566:	436a      	muls	r2, r5
 800d568:	683b      	ldr	r3, [r7, #0]
 800d56a:	f8df 9104 	ldr.w	r9, [pc, #260]	; 800d670 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1c0>
 800d56e:	f8d3 3110 	ldr.w	r3, [r3, #272]	; 0x110
 800d572:	4631      	mov	r1, r6
 800d574:	4638      	mov	r0, r7
 800d576:	4798      	blx	r3
 800d578:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800d57a:	9302      	str	r3, [sp, #8]
 800d57c:	f8b4 3044 	ldrh.w	r3, [r4, #68]	; 0x44
 800d580:	9301      	str	r3, [sp, #4]
 800d582:	f8b4 3042 	ldrh.w	r3, [r4, #66]	; 0x42
 800d586:	9300      	str	r3, [sp, #0]
 800d588:	a908      	add	r1, sp, #32
 800d58a:	4603      	mov	r3, r0
 800d58c:	2214      	movs	r2, #20
 800d58e:	4620      	mov	r0, r4
 800d590:	f7ff ff28 	bl	800d3e4 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>
 800d594:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800d598:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800d59a:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800d59e:	f8d8 3000 	ldr.w	r3, [r8]
 800d5a2:	d12d      	bne.n	800d600 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x150>
 800d5a4:	f8d9 0000 	ldr.w	r0, [r9]
 800d5a8:	699d      	ldr	r5, [r3, #24]
 800d5aa:	f7f7 fc0f 	bl	8004dcc <_ZNK8touchgfx5Texts7getTextEt>
 800d5ae:	aa08      	add	r2, sp, #32
 800d5b0:	4601      	mov	r1, r0
 800d5b2:	4640      	mov	r0, r8
 800d5b4:	47a8      	blx	r5
 800d5b6:	4605      	mov	r5, r0
 800d5b8:	683b      	ldr	r3, [r7, #0]
 800d5ba:	f8b7 806c 	ldrh.w	r8, [r7, #108]	; 0x6c
 800d5be:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 800d5c2:	4631      	mov	r1, r6
 800d5c4:	4638      	mov	r0, r7
 800d5c6:	4798      	blx	r3
 800d5c8:	ab12      	add	r3, sp, #72	; 0x48
 800d5ca:	f843 0d34 	str.w	r0, [r3, #-52]!
 800d5ce:	4618      	mov	r0, r3
 800d5d0:	f7fe fea8 	bl	800c324 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800d5d4:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800d5d8:	f8ad 301e 	strh.w	r3, [sp, #30]
 800d5dc:	4440      	add	r0, r8
 800d5de:	6823      	ldr	r3, [r4, #0]
 800d5e0:	f8ad 501c 	strh.w	r5, [sp, #28]
 800d5e4:	eba0 0055 	sub.w	r0, r0, r5, lsr #1
 800d5e8:	2200      	movs	r2, #0
 800d5ea:	f8ad 0018 	strh.w	r0, [sp, #24]
 800d5ee:	f8ad 201a 	strh.w	r2, [sp, #26]
 800d5f2:	691b      	ldr	r3, [r3, #16]
 800d5f4:	a906      	add	r1, sp, #24
 800d5f6:	4620      	mov	r0, r4
 800d5f8:	4798      	blx	r3
 800d5fa:	e79e      	b.n	800d53a <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800d5fc:	4632      	mov	r2, r6
 800d5fe:	e7b3      	b.n	800d568 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xb8>
 800d600:	f8d9 0000 	ldr.w	r0, [r9]
 800d604:	6a9d      	ldr	r5, [r3, #40]	; 0x28
 800d606:	f7f7 fbe1 	bl	8004dcc <_ZNK8touchgfx5Texts7getTextEt>
 800d60a:	aa08      	add	r2, sp, #32
 800d60c:	4601      	mov	r1, r0
 800d60e:	4640      	mov	r0, r8
 800d610:	47a8      	blx	r5
 800d612:	f8d8 3000 	ldr.w	r3, [r8]
 800d616:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800d618:	f8d3 a040 	ldr.w	sl, [r3, #64]	; 0x40
 800d61c:	4605      	mov	r5, r0
 800d61e:	f8d9 0000 	ldr.w	r0, [r9]
 800d622:	f7f7 fbd3 	bl	8004dcc <_ZNK8touchgfx5Texts7getTextEt>
 800d626:	aa08      	add	r2, sp, #32
 800d628:	4601      	mov	r1, r0
 800d62a:	4640      	mov	r0, r8
 800d62c:	47d0      	blx	sl
 800d62e:	f8d8 3000 	ldr.w	r3, [r8]
 800d632:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800d634:	f8d3 a024 	ldr.w	sl, [r3, #36]	; 0x24
 800d638:	fb15 f500 	smulbb	r5, r5, r0
 800d63c:	f8d9 0000 	ldr.w	r0, [r9]
 800d640:	f7f7 fbc4 	bl	8004dcc <_ZNK8touchgfx5Texts7getTextEt>
 800d644:	aa08      	add	r2, sp, #32
 800d646:	4601      	mov	r1, r0
 800d648:	4640      	mov	r0, r8
 800d64a:	47d0      	blx	sl
 800d64c:	b2ad      	uxth	r5, r5
 800d64e:	4405      	add	r5, r0
 800d650:	b2ad      	uxth	r5, r5
 800d652:	e7b1      	b.n	800d5b8 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x108>
 800d654:	2b00      	cmp	r3, #0
 800d656:	d183      	bne.n	800d560 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xb0>
 800d658:	e76f      	b.n	800d53a <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800d65a:	4798      	blx	r3
 800d65c:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 800d660:	deff      	udf	#255	; 0xff
 800d662:	bf00      	nop
 800d664:	20015610 	.word	0x20015610
 800d668:	2001560c 	.word	0x2001560c
 800d66c:	20015614 	.word	0x20015614
 800d670:	20015618 	.word	0x20015618

0800d674 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih>:
 800d674:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d678:	461d      	mov	r5, r3
 800d67a:	b099      	sub	sp, #100	; 0x64
 800d67c:	681b      	ldr	r3, [r3, #0]
 800d67e:	4604      	mov	r4, r0
 800d680:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 800d684:	4689      	mov	r9, r1
 800d686:	4628      	mov	r0, r5
 800d688:	9922      	ldr	r1, [sp, #136]	; 0x88
 800d68a:	4690      	mov	r8, r2
 800d68c:	4798      	blx	r3
 800d68e:	af18      	add	r7, sp, #96	; 0x60
 800d690:	f847 0d28 	str.w	r0, [r7, #-40]!
 800d694:	4638      	mov	r0, r7
 800d696:	f7fe fe45 	bl	800c324 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800d69a:	f8b5 3116 	ldrh.w	r3, [r5, #278]	; 0x116
 800d69e:	1ac0      	subs	r0, r0, r3
 800d6a0:	b200      	sxth	r0, r0
 800d6a2:	2800      	cmp	r0, #0
 800d6a4:	f2c0 80b0 	blt.w	800d808 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x194>
 800d6a8:	f8b5 2118 	ldrh.w	r2, [r5, #280]	; 0x118
 800d6ac:	441a      	add	r2, r3
 800d6ae:	f8b5 3040 	ldrh.w	r3, [r5, #64]	; 0x40
 800d6b2:	1a9b      	subs	r3, r3, r2
 800d6b4:	b21b      	sxth	r3, r3
 800d6b6:	4298      	cmp	r0, r3
 800d6b8:	f280 80a6 	bge.w	800d808 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x194>
 800d6bc:	682b      	ldr	r3, [r5, #0]
 800d6be:	e9dd 1222 	ldrd	r1, r2, [sp, #136]	; 0x88
 800d6c2:	f8d3 3110 	ldr.w	r3, [r3, #272]	; 0x110
 800d6c6:	4628      	mov	r0, r5
 800d6c8:	4798      	blx	r3
 800d6ca:	682b      	ldr	r3, [r5, #0]
 800d6cc:	f8b4 a042 	ldrh.w	sl, [r4, #66]	; 0x42
 800d6d0:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800d6d4:	f8b4 b044 	ldrh.w	fp, [r4, #68]	; 0x44
 800d6d8:	4606      	mov	r6, r0
 800d6da:	4628      	mov	r0, r5
 800d6dc:	4798      	blx	r3
 800d6de:	f8cd a000 	str.w	sl, [sp]
 800d6e2:	e9cd b001 	strd	fp, r0, [sp, #4]
 800d6e6:	4633      	mov	r3, r6
 800d6e8:	4639      	mov	r1, r7
 800d6ea:	2214      	movs	r2, #20
 800d6ec:	4620      	mov	r0, r4
 800d6ee:	f7ff fe79 	bl	800d3e4 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>
 800d6f2:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800d6f6:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800d6f8:	f8df a16c 	ldr.w	sl, [pc, #364]	; 800d868 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1f4>
 800d6fc:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800d700:	f8d8 3000 	ldr.w	r3, [r8]
 800d704:	f040 8083 	bne.w	800d80e <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x19a>
 800d708:	f8da 0000 	ldr.w	r0, [sl]
 800d70c:	699e      	ldr	r6, [r3, #24]
 800d70e:	f7f7 fb5d 	bl	8004dcc <_ZNK8touchgfx5Texts7getTextEt>
 800d712:	463a      	mov	r2, r7
 800d714:	4601      	mov	r1, r0
 800d716:	4640      	mov	r0, r8
 800d718:	47b0      	blx	r6
 800d71a:	4606      	mov	r6, r0
 800d71c:	682b      	ldr	r3, [r5, #0]
 800d71e:	9922      	ldr	r1, [sp, #136]	; 0x88
 800d720:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 800d724:	f8b5 a06c 	ldrh.w	sl, [r5, #108]	; 0x6c
 800d728:	4628      	mov	r0, r5
 800d72a:	4798      	blx	r3
 800d72c:	f10d 0b60 	add.w	fp, sp, #96	; 0x60
 800d730:	ad05      	add	r5, sp, #20
 800d732:	f84b 0d3c 	str.w	r0, [fp, #-60]!
 800d736:	4658      	mov	r0, fp
 800d738:	f7fe fdf4 	bl	800c324 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800d73c:	4450      	add	r0, sl
 800d73e:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800d742:	f8ad 6018 	strh.w	r6, [sp, #24]
 800d746:	eba0 0056 	sub.w	r0, r0, r6, lsr #1
 800d74a:	f04f 0a00 	mov.w	sl, #0
 800d74e:	f8ad 301a 	strh.w	r3, [sp, #26]
 800d752:	f8ad 0014 	strh.w	r0, [sp, #20]
 800d756:	f8ad a016 	strh.w	sl, [sp, #22]
 800d75a:	e895 0003 	ldmia.w	r5, {r0, r1}
 800d75e:	ae07      	add	r6, sp, #28
 800d760:	e886 0003 	stmia.w	r6, {r0, r1}
 800d764:	4649      	mov	r1, r9
 800d766:	4630      	mov	r0, r6
 800d768:	f7fd fb08 	bl	800ad7c <_ZN8touchgfx4RectaNERKS0_>
 800d76c:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800d770:	4553      	cmp	r3, sl
 800d772:	dd49      	ble.n	800d808 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x194>
 800d774:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800d778:	4553      	cmp	r3, sl
 800d77a:	dd45      	ble.n	800d808 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x194>
 800d77c:	f8bd 301c 	ldrh.w	r3, [sp, #28]
 800d780:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800d784:	1a9b      	subs	r3, r3, r2
 800d786:	f8ad 301c 	strh.w	r3, [sp, #28]
 800d78a:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800d78e:	f8bd 301e 	ldrh.w	r3, [sp, #30]
 800d792:	1a9b      	subs	r3, r3, r2
 800d794:	f8ad 301e 	strh.w	r3, [sp, #30]
 800d798:	6823      	ldr	r3, [r4, #0]
 800d79a:	4620      	mov	r0, r4
 800d79c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d79e:	4629      	mov	r1, r5
 800d7a0:	4798      	blx	r3
 800d7a2:	4b30      	ldr	r3, [pc, #192]	; (800d864 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1f0>)
 800d7a4:	f8b4 903c 	ldrh.w	r9, [r4, #60]	; 0x3c
 800d7a8:	681b      	ldr	r3, [r3, #0]
 800d7aa:	f894 1040 	ldrb.w	r1, [r4, #64]	; 0x40
 800d7ae:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800d7b0:	eb03 0349 	add.w	r3, r3, r9, lsl #1
 800d7b4:	785b      	ldrb	r3, [r3, #1]
 800d7b6:	920b      	str	r2, [sp, #44]	; 0x2c
 800d7b8:	f3c3 0001 	ubfx	r0, r3, #0, #2
 800d7bc:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800d7c0:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800d7c4:	f89d 3090 	ldrb.w	r3, [sp, #144]	; 0x90
 800d7c8:	f88d 102a 	strb.w	r1, [sp, #42]	; 0x2a
 800d7cc:	f88d 3032 	strb.w	r3, [sp, #50]	; 0x32
 800d7d0:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 800d7d4:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 800d7d8:	f8ad a030 	strh.w	sl, [sp, #48]	; 0x30
 800d7dc:	f88d a033 	strb.w	sl, [sp, #51]	; 0x33
 800d7e0:	f88d a034 	strb.w	sl, [sp, #52]	; 0x34
 800d7e4:	f7f4 ff8a 	bl	80026fc <_ZN8touchgfx3HAL3lcdEv>
 800d7e8:	4b1f      	ldr	r3, [pc, #124]	; (800d868 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1f4>)
 800d7ea:	4604      	mov	r4, r0
 800d7ec:	4649      	mov	r1, r9
 800d7ee:	6818      	ldr	r0, [r3, #0]
 800d7f0:	f7f7 faec 	bl	8004dcc <_ZNK8touchgfx5Texts7getTextEt>
 800d7f4:	e9cd 7a02 	strd	r7, sl, [sp, #8]
 800d7f8:	e9cd b000 	strd	fp, r0, [sp]
 800d7fc:	4633      	mov	r3, r6
 800d7fe:	e895 0006 	ldmia.w	r5, {r1, r2}
 800d802:	4620      	mov	r0, r4
 800d804:	f7f7 fa94 	bl	8004d30 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800d808:	b019      	add	sp, #100	; 0x64
 800d80a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d80e:	f8da 0000 	ldr.w	r0, [sl]
 800d812:	6a9e      	ldr	r6, [r3, #40]	; 0x28
 800d814:	f7f7 fada 	bl	8004dcc <_ZNK8touchgfx5Texts7getTextEt>
 800d818:	463a      	mov	r2, r7
 800d81a:	4601      	mov	r1, r0
 800d81c:	4640      	mov	r0, r8
 800d81e:	47b0      	blx	r6
 800d820:	f8d8 3000 	ldr.w	r3, [r8]
 800d824:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800d826:	f8d3 b040 	ldr.w	fp, [r3, #64]	; 0x40
 800d82a:	4606      	mov	r6, r0
 800d82c:	f8da 0000 	ldr.w	r0, [sl]
 800d830:	f7f7 facc 	bl	8004dcc <_ZNK8touchgfx5Texts7getTextEt>
 800d834:	463a      	mov	r2, r7
 800d836:	4601      	mov	r1, r0
 800d838:	4640      	mov	r0, r8
 800d83a:	47d8      	blx	fp
 800d83c:	f8d8 3000 	ldr.w	r3, [r8]
 800d840:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800d842:	f8d3 b024 	ldr.w	fp, [r3, #36]	; 0x24
 800d846:	fb16 f600 	smulbb	r6, r6, r0
 800d84a:	f8da 0000 	ldr.w	r0, [sl]
 800d84e:	f7f7 fabd 	bl	8004dcc <_ZNK8touchgfx5Texts7getTextEt>
 800d852:	463a      	mov	r2, r7
 800d854:	4601      	mov	r1, r0
 800d856:	4640      	mov	r0, r8
 800d858:	47d8      	blx	fp
 800d85a:	b2b6      	uxth	r6, r6
 800d85c:	4406      	add	r6, r0
 800d85e:	b2b6      	uxth	r6, r6
 800d860:	e75c      	b.n	800d71c <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xa8>
 800d862:	bf00      	nop
 800d864:	2001560c 	.word	0x2001560c
 800d868:	20015618 	.word	0x20015618

0800d86c <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih>:
 800d86c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d870:	4698      	mov	r8, r3
 800d872:	b099      	sub	sp, #100	; 0x64
 800d874:	681b      	ldr	r3, [r3, #0]
 800d876:	4604      	mov	r4, r0
 800d878:	f8d3 3118 	ldr.w	r3, [r3, #280]	; 0x118
 800d87c:	4689      	mov	r9, r1
 800d87e:	4640      	mov	r0, r8
 800d880:	9922      	ldr	r1, [sp, #136]	; 0x88
 800d882:	4617      	mov	r7, r2
 800d884:	4798      	blx	r3
 800d886:	ae18      	add	r6, sp, #96	; 0x60
 800d888:	f846 0d28 	str.w	r0, [r6, #-40]!
 800d88c:	4630      	mov	r0, r6
 800d88e:	f7fe fd49 	bl	800c324 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800d892:	f8b8 3114 	ldrh.w	r3, [r8, #276]	; 0x114
 800d896:	1ac0      	subs	r0, r0, r3
 800d898:	b200      	sxth	r0, r0
 800d89a:	2800      	cmp	r0, #0
 800d89c:	f2c0 80c0 	blt.w	800da20 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1b4>
 800d8a0:	f8b8 211a 	ldrh.w	r2, [r8, #282]	; 0x11a
 800d8a4:	441a      	add	r2, r3
 800d8a6:	f8b8 3042 	ldrh.w	r3, [r8, #66]	; 0x42
 800d8aa:	1a9b      	subs	r3, r3, r2
 800d8ac:	b21b      	sxth	r3, r3
 800d8ae:	4298      	cmp	r0, r3
 800d8b0:	f280 80b6 	bge.w	800da20 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1b4>
 800d8b4:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800d8b6:	9302      	str	r3, [sp, #8]
 800d8b8:	f8b4 3044 	ldrh.w	r3, [r4, #68]	; 0x44
 800d8bc:	9301      	str	r3, [sp, #4]
 800d8be:	f8b4 3042 	ldrh.w	r3, [r4, #66]	; 0x42
 800d8c2:	9300      	str	r3, [sp, #0]
 800d8c4:	4631      	mov	r1, r6
 800d8c6:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800d8c8:	f8df a174 	ldr.w	sl, [pc, #372]	; 800da40 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1d4>
 800d8cc:	2214      	movs	r2, #20
 800d8ce:	4620      	mov	r0, r4
 800d8d0:	f7ff fd88 	bl	800d3e4 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>
 800d8d4:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800d8d8:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800d8da:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800d8de:	683b      	ldr	r3, [r7, #0]
 800d8e0:	f040 80a1 	bne.w	800da26 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1ba>
 800d8e4:	f8da 0000 	ldr.w	r0, [sl]
 800d8e8:	6a9d      	ldr	r5, [r3, #40]	; 0x28
 800d8ea:	f7f7 fa6f 	bl	8004dcc <_ZNK8touchgfx5Texts7getTextEt>
 800d8ee:	4632      	mov	r2, r6
 800d8f0:	4601      	mov	r1, r0
 800d8f2:	4638      	mov	r0, r7
 800d8f4:	47a8      	blx	r5
 800d8f6:	683b      	ldr	r3, [r7, #0]
 800d8f8:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800d8fa:	f8d3 b040 	ldr.w	fp, [r3, #64]	; 0x40
 800d8fe:	4605      	mov	r5, r0
 800d900:	f8da 0000 	ldr.w	r0, [sl]
 800d904:	f7f7 fa62 	bl	8004dcc <_ZNK8touchgfx5Texts7getTextEt>
 800d908:	4632      	mov	r2, r6
 800d90a:	4601      	mov	r1, r0
 800d90c:	4638      	mov	r0, r7
 800d90e:	47d8      	blx	fp
 800d910:	683b      	ldr	r3, [r7, #0]
 800d912:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800d914:	f8d3 b024 	ldr.w	fp, [r3, #36]	; 0x24
 800d918:	fb15 f500 	smulbb	r5, r5, r0
 800d91c:	f8da 0000 	ldr.w	r0, [sl]
 800d920:	f7f7 fa54 	bl	8004dcc <_ZNK8touchgfx5Texts7getTextEt>
 800d924:	4632      	mov	r2, r6
 800d926:	4601      	mov	r1, r0
 800d928:	4638      	mov	r0, r7
 800d92a:	47d8      	blx	fp
 800d92c:	b2ad      	uxth	r5, r5
 800d92e:	4405      	add	r5, r0
 800d930:	b2ad      	uxth	r5, r5
 800d932:	f8d8 3000 	ldr.w	r3, [r8]
 800d936:	9922      	ldr	r1, [sp, #136]	; 0x88
 800d938:	f8d3 3118 	ldr.w	r3, [r3, #280]	; 0x118
 800d93c:	f8b8 a0c6 	ldrh.w	sl, [r8, #198]	; 0xc6
 800d940:	4640      	mov	r0, r8
 800d942:	4798      	blx	r3
 800d944:	f10d 0b60 	add.w	fp, sp, #96	; 0x60
 800d948:	f04f 0800 	mov.w	r8, #0
 800d94c:	f84b 0d3c 	str.w	r0, [fp, #-60]!
 800d950:	4658      	mov	r0, fp
 800d952:	f7fe fce7 	bl	800c324 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800d956:	4450      	add	r0, sl
 800d958:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800d95c:	f8ad 3018 	strh.w	r3, [sp, #24]
 800d960:	eba0 0055 	sub.w	r0, r0, r5, lsr #1
 800d964:	f8ad 501a 	strh.w	r5, [sp, #26]
 800d968:	f8ad 8014 	strh.w	r8, [sp, #20]
 800d96c:	f8ad 0016 	strh.w	r0, [sp, #22]
 800d970:	ad05      	add	r5, sp, #20
 800d972:	e895 0003 	ldmia.w	r5, {r0, r1}
 800d976:	f10d 0a1c 	add.w	sl, sp, #28
 800d97a:	e88a 0003 	stmia.w	sl, {r0, r1}
 800d97e:	4649      	mov	r1, r9
 800d980:	4650      	mov	r0, sl
 800d982:	f7fd f9fb 	bl	800ad7c <_ZN8touchgfx4RectaNERKS0_>
 800d986:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800d98a:	4543      	cmp	r3, r8
 800d98c:	dd48      	ble.n	800da20 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1b4>
 800d98e:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800d992:	4543      	cmp	r3, r8
 800d994:	dd44      	ble.n	800da20 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1b4>
 800d996:	f8bd 301c 	ldrh.w	r3, [sp, #28]
 800d99a:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800d99e:	1a9b      	subs	r3, r3, r2
 800d9a0:	f8ad 301c 	strh.w	r3, [sp, #28]
 800d9a4:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800d9a8:	f8bd 301e 	ldrh.w	r3, [sp, #30]
 800d9ac:	1a9b      	subs	r3, r3, r2
 800d9ae:	f8ad 301e 	strh.w	r3, [sp, #30]
 800d9b2:	6823      	ldr	r3, [r4, #0]
 800d9b4:	4620      	mov	r0, r4
 800d9b6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d9b8:	4629      	mov	r1, r5
 800d9ba:	4798      	blx	r3
 800d9bc:	4b1f      	ldr	r3, [pc, #124]	; (800da3c <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1d0>)
 800d9be:	f8b4 903c 	ldrh.w	r9, [r4, #60]	; 0x3c
 800d9c2:	681b      	ldr	r3, [r3, #0]
 800d9c4:	f894 1040 	ldrb.w	r1, [r4, #64]	; 0x40
 800d9c8:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800d9ca:	eb03 0349 	add.w	r3, r3, r9, lsl #1
 800d9ce:	785b      	ldrb	r3, [r3, #1]
 800d9d0:	920b      	str	r2, [sp, #44]	; 0x2c
 800d9d2:	f3c3 0001 	ubfx	r0, r3, #0, #2
 800d9d6:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800d9da:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800d9de:	f89d 3090 	ldrb.w	r3, [sp, #144]	; 0x90
 800d9e2:	f88d 102a 	strb.w	r1, [sp, #42]	; 0x2a
 800d9e6:	f88d 3032 	strb.w	r3, [sp, #50]	; 0x32
 800d9ea:	9709      	str	r7, [sp, #36]	; 0x24
 800d9ec:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 800d9f0:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 800d9f4:	f88d 8033 	strb.w	r8, [sp, #51]	; 0x33
 800d9f8:	f88d 8034 	strb.w	r8, [sp, #52]	; 0x34
 800d9fc:	f7f4 fe7e 	bl	80026fc <_ZN8touchgfx3HAL3lcdEv>
 800da00:	4b0f      	ldr	r3, [pc, #60]	; (800da40 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1d4>)
 800da02:	4604      	mov	r4, r0
 800da04:	4649      	mov	r1, r9
 800da06:	6818      	ldr	r0, [r3, #0]
 800da08:	f7f7 f9e0 	bl	8004dcc <_ZNK8touchgfx5Texts7getTextEt>
 800da0c:	e9cd 6802 	strd	r6, r8, [sp, #8]
 800da10:	e9cd b000 	strd	fp, r0, [sp]
 800da14:	4653      	mov	r3, sl
 800da16:	e895 0006 	ldmia.w	r5, {r1, r2}
 800da1a:	4620      	mov	r0, r4
 800da1c:	f7f7 f988 	bl	8004d30 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800da20:	b019      	add	sp, #100	; 0x64
 800da22:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800da26:	f8da 0000 	ldr.w	r0, [sl]
 800da2a:	699d      	ldr	r5, [r3, #24]
 800da2c:	f7f7 f9ce 	bl	8004dcc <_ZNK8touchgfx5Texts7getTextEt>
 800da30:	4632      	mov	r2, r6
 800da32:	4601      	mov	r1, r0
 800da34:	4638      	mov	r0, r7
 800da36:	47a8      	blx	r5
 800da38:	4605      	mov	r5, r0
 800da3a:	e77a      	b.n	800d932 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xc6>
 800da3c:	2001560c 	.word	0x2001560c
 800da40:	20015618 	.word	0x20015618

0800da44 <_ZN8touchgfx15GraphScrollData5clearEv>:
 800da44:	b510      	push	{r4, lr}
 800da46:	4604      	mov	r4, r0
 800da48:	f7fe fb05 	bl	800c056 <_ZN8touchgfx17AbstractDataGraph5clearEv>
 800da4c:	2300      	movs	r3, #0
 800da4e:	f8a4 314c 	strh.w	r3, [r4, #332]	; 0x14c
 800da52:	bd10      	pop	{r4, pc}

0800da54 <_ZN8touchgfx15GraphScrollData14beforeAddValueEv>:
 800da54:	f9b0 211e 	ldrsh.w	r2, [r0, #286]	; 0x11e
 800da58:	f9b0 311c 	ldrsh.w	r3, [r0, #284]	; 0x11c
 800da5c:	429a      	cmp	r2, r3
 800da5e:	d101      	bne.n	800da64 <_ZN8touchgfx15GraphScrollData14beforeAddValueEv+0x10>
 800da60:	f7fe bd38 	b.w	800c4d4 <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv>
 800da64:	4770      	bx	lr

0800da66 <_ZNK8touchgfx15GraphScrollData18indexToGlobalIndexEs>:
 800da66:	b538      	push	{r3, r4, r5, lr}
 800da68:	f9b0 411c 	ldrsh.w	r4, [r0, #284]	; 0x11c
 800da6c:	f9b0 511e 	ldrsh.w	r5, [r0, #286]	; 0x11e
 800da70:	42a5      	cmp	r5, r4
 800da72:	da04      	bge.n	800da7e <_ZNK8touchgfx15GraphScrollData18indexToGlobalIndexEs+0x18>
 800da74:	6803      	ldr	r3, [r0, #0]
 800da76:	f8d3 3180 	ldr.w	r3, [r3, #384]	; 0x180
 800da7a:	4798      	blx	r3
 800da7c:	bd38      	pop	{r3, r4, r5, pc}
 800da7e:	f8d0 0148 	ldr.w	r0, [r0, #328]	; 0x148
 800da82:	4408      	add	r0, r1
 800da84:	1b00      	subs	r0, r0, r4
 800da86:	e7f9      	b.n	800da7c <_ZNK8touchgfx15GraphScrollData18indexToGlobalIndexEs+0x16>

0800da88 <_ZN8touchgfx15GraphScrollData8addValueEi>:
 800da88:	b570      	push	{r4, r5, r6, lr}
 800da8a:	f9b0 514c 	ldrsh.w	r5, [r0, #332]	; 0x14c
 800da8e:	f9b0 611e 	ldrsh.w	r6, [r0, #286]	; 0x11e
 800da92:	f9b0 211c 	ldrsh.w	r2, [r0, #284]	; 0x11c
 800da96:	4604      	mov	r4, r0
 800da98:	1c6b      	adds	r3, r5, #1
 800da9a:	b21b      	sxth	r3, r3
 800da9c:	42ae      	cmp	r6, r5
 800da9e:	bf08      	it	eq
 800daa0:	f8a4 311e 	strheq.w	r3, [r4, #286]	; 0x11e
 800daa4:	fb93 f0f2 	sdiv	r0, r3, r2
 800daa8:	fb02 3010 	mls	r0, r2, r0, r3
 800daac:	f8d4 3144 	ldr.w	r3, [r4, #324]	; 0x144
 800dab0:	f8a4 014c 	strh.w	r0, [r4, #332]	; 0x14c
 800dab4:	4296      	cmp	r6, r2
 800dab6:	f843 1025 	str.w	r1, [r3, r5, lsl #2]
 800daba:	d108      	bne.n	800dace <_ZN8touchgfx15GraphScrollData8addValueEi+0x46>
 800dabc:	f104 0038 	add.w	r0, r4, #56	; 0x38
 800dac0:	f004 fa85 	bl	8011fce <_ZNK8touchgfx8Drawable10invalidateEv>
 800dac4:	4620      	mov	r0, r4
 800dac6:	f7fe fd05 	bl	800c4d4 <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv>
 800daca:	4628      	mov	r0, r5
 800dacc:	bd70      	pop	{r4, r5, r6, pc}
 800dace:	4629      	mov	r1, r5
 800dad0:	4620      	mov	r0, r4
 800dad2:	f7fe fcd7 	bl	800c484 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs>
 800dad6:	e7f8      	b.n	800daca <_ZN8touchgfx15GraphScrollData8addValueEi+0x42>

0800dad8 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 800dad8:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 800dadc:	4770      	bx	lr

0800dade <_ZN8touchgfx14AbstractButton13executeActionEv>:
 800dade:	b510      	push	{r4, lr}
 800dae0:	4604      	mov	r4, r0
 800dae2:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800dae4:	b150      	cbz	r0, 800dafc <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800dae6:	6803      	ldr	r3, [r0, #0]
 800dae8:	68db      	ldr	r3, [r3, #12]
 800daea:	4798      	blx	r3
 800daec:	b130      	cbz	r0, 800dafc <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800daee:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800daf0:	6803      	ldr	r3, [r0, #0]
 800daf2:	4621      	mov	r1, r4
 800daf4:	689b      	ldr	r3, [r3, #8]
 800daf6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800dafa:	4718      	bx	r3
 800dafc:	bd10      	pop	{r4, pc}

0800dafe <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 800dafe:	b570      	push	{r4, r5, r6, lr}
 800db00:	790b      	ldrb	r3, [r1, #4]
 800db02:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 800db06:	2b00      	cmp	r3, #0
 800db08:	bf0c      	ite	eq
 800db0a:	2301      	moveq	r3, #1
 800db0c:	2300      	movne	r3, #0
 800db0e:	4604      	mov	r4, r0
 800db10:	460e      	mov	r6, r1
 800db12:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 800db16:	d109      	bne.n	800db2c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 800db18:	b14d      	cbz	r5, 800db2e <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 800db1a:	7933      	ldrb	r3, [r6, #4]
 800db1c:	2b01      	cmp	r3, #1
 800db1e:	d10c      	bne.n	800db3a <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 800db20:	6823      	ldr	r3, [r4, #0]
 800db22:	4620      	mov	r0, r4
 800db24:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800db26:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800db2a:	4718      	bx	r3
 800db2c:	b12d      	cbz	r5, 800db3a <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 800db2e:	6823      	ldr	r3, [r4, #0]
 800db30:	4620      	mov	r0, r4
 800db32:	695b      	ldr	r3, [r3, #20]
 800db34:	4798      	blx	r3
 800db36:	2d00      	cmp	r5, #0
 800db38:	d1ef      	bne.n	800db1a <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 800db3a:	bd70      	pop	{r4, r5, r6, pc}

0800db3c <_ZN8touchgfx12ToggleButtonD1Ev>:
 800db3c:	4770      	bx	lr

0800db3e <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE>:
 800db3e:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800db42:	b133      	cbz	r3, 800db52 <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE+0x14>
 800db44:	790b      	ldrb	r3, [r1, #4]
 800db46:	2b01      	cmp	r3, #1
 800db48:	bf01      	itttt	eq
 800db4a:	8dc3      	ldrheq	r3, [r0, #46]	; 0x2e
 800db4c:	8e02      	ldrheq	r2, [r0, #48]	; 0x30
 800db4e:	85c2      	strheq	r2, [r0, #46]	; 0x2e
 800db50:	8603      	strheq	r3, [r0, #48]	; 0x30
 800db52:	f7ff bfd4 	b.w	800dafe <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>

0800db56 <_ZN8touchgfx12ToggleButton10setBitmapsERKNS_6BitmapES3_>:
 800db56:	8813      	ldrh	r3, [r2, #0]
 800db58:	8683      	strh	r3, [r0, #52]	; 0x34
 800db5a:	f000 bbd0 	b.w	800e2fe <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>

0800db5e <_ZN8touchgfx12ToggleButtonD0Ev>:
 800db5e:	b510      	push	{r4, lr}
 800db60:	2138      	movs	r1, #56	; 0x38
 800db62:	4604      	mov	r4, r0
 800db64:	f012 fdb8 	bl	80206d8 <_ZdlPvj>
 800db68:	4620      	mov	r0, r4
 800db6a:	bd10      	pop	{r4, pc}

0800db6c <_ZNK8touchgfx6Button17invalidateContentEv>:
 800db6c:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 800db70:	b12a      	cbz	r2, 800db7e <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800db72:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800db76:	b112      	cbz	r2, 800db7e <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800db78:	6803      	ldr	r3, [r0, #0]
 800db7a:	695b      	ldr	r3, [r3, #20]
 800db7c:	4718      	bx	r3
 800db7e:	4770      	bx	lr

0800db80 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 800db80:	2000      	movs	r0, #0
 800db82:	4770      	bx	lr

0800db84 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 800db84:	4b07      	ldr	r3, [pc, #28]	; (800dba4 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 800db86:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800db88:	881b      	ldrh	r3, [r3, #0]
 800db8a:	4293      	cmp	r3, r2
 800db8c:	bf81      	itttt	hi
 800db8e:	4b06      	ldrhi	r3, [pc, #24]	; (800dba8 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 800db90:	681b      	ldrhi	r3, [r3, #0]
 800db92:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 800db96:	7858      	ldrbhi	r0, [r3, #1]
 800db98:	bf8c      	ite	hi
 800db9a:	f000 0003 	andhi.w	r0, r0, #3
 800db9e:	2000      	movls	r0, #0
 800dba0:	4770      	bx	lr
 800dba2:	bf00      	nop
 800dba4:	20015610 	.word	0x20015610
 800dba8:	2001560c 	.word	0x2001560c

0800dbac <_ZN8touchgfx8TextAreaD1Ev>:
 800dbac:	4770      	bx	lr
	...

0800dbb0 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 800dbb0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800dbb4:	4b10      	ldr	r3, [pc, #64]	; (800dbf8 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 800dbb6:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800dbb8:	881b      	ldrh	r3, [r3, #0]
 800dbba:	428b      	cmp	r3, r1
 800dbbc:	4604      	mov	r4, r0
 800dbbe:	d918      	bls.n	800dbf2 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 800dbc0:	6803      	ldr	r3, [r0, #0]
 800dbc2:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 800dbc4:	4b0d      	ldr	r3, [pc, #52]	; (800dbfc <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 800dbc6:	6818      	ldr	r0, [r3, #0]
 800dbc8:	f7f7 f900 	bl	8004dcc <_ZNK8touchgfx5Texts7getTextEt>
 800dbcc:	6823      	ldr	r3, [r4, #0]
 800dbce:	4606      	mov	r6, r0
 800dbd0:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800dbd2:	4620      	mov	r0, r4
 800dbd4:	4798      	blx	r3
 800dbd6:	6823      	ldr	r3, [r4, #0]
 800dbd8:	4607      	mov	r7, r0
 800dbda:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800dbde:	4620      	mov	r0, r4
 800dbe0:	4798      	blx	r3
 800dbe2:	463a      	mov	r2, r7
 800dbe4:	4603      	mov	r3, r0
 800dbe6:	4631      	mov	r1, r6
 800dbe8:	4620      	mov	r0, r4
 800dbea:	46ac      	mov	ip, r5
 800dbec:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800dbf0:	4760      	bx	ip
 800dbf2:	2000      	movs	r0, #0
 800dbf4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800dbf8:	20015610 	.word	0x20015610
 800dbfc:	20015618 	.word	0x20015618

0800dc00 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 800dc00:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800dc04:	4b17      	ldr	r3, [pc, #92]	; (800dc64 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 800dc06:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800dc08:	881b      	ldrh	r3, [r3, #0]
 800dc0a:	428b      	cmp	r3, r1
 800dc0c:	4604      	mov	r4, r0
 800dc0e:	d926      	bls.n	800dc5e <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 800dc10:	4b15      	ldr	r3, [pc, #84]	; (800dc68 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 800dc12:	681b      	ldr	r3, [r3, #0]
 800dc14:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 800dc18:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 800dc1c:	4b13      	ldr	r3, [pc, #76]	; (800dc6c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 800dc1e:	7855      	ldrb	r5, [r2, #1]
 800dc20:	681b      	ldr	r3, [r3, #0]
 800dc22:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 800dc26:	6833      	ldr	r3, [r6, #0]
 800dc28:	69df      	ldr	r7, [r3, #28]
 800dc2a:	4b11      	ldr	r3, [pc, #68]	; (800dc70 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 800dc2c:	6818      	ldr	r0, [r3, #0]
 800dc2e:	f7f7 f8cd 	bl	8004dcc <_ZNK8touchgfx5Texts7getTextEt>
 800dc32:	6823      	ldr	r3, [r4, #0]
 800dc34:	4680      	mov	r8, r0
 800dc36:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800dc38:	4620      	mov	r0, r4
 800dc3a:	4798      	blx	r3
 800dc3c:	6823      	ldr	r3, [r4, #0]
 800dc3e:	4681      	mov	r9, r0
 800dc40:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800dc44:	4620      	mov	r0, r4
 800dc46:	4798      	blx	r3
 800dc48:	f3c5 0581 	ubfx	r5, r5, #2, #2
 800dc4c:	9000      	str	r0, [sp, #0]
 800dc4e:	464b      	mov	r3, r9
 800dc50:	4642      	mov	r2, r8
 800dc52:	4629      	mov	r1, r5
 800dc54:	4630      	mov	r0, r6
 800dc56:	47b8      	blx	r7
 800dc58:	b003      	add	sp, #12
 800dc5a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800dc5e:	2000      	movs	r0, #0
 800dc60:	e7fa      	b.n	800dc58 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 800dc62:	bf00      	nop
 800dc64:	20015610 	.word	0x20015610
 800dc68:	2001560c 	.word	0x2001560c
 800dc6c:	20015614 	.word	0x20015614
 800dc70:	20015618 	.word	0x20015618

0800dc74 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 800dc74:	b40e      	push	{r1, r2, r3}
 800dc76:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800dc7a:	4b2f      	ldr	r3, [pc, #188]	; (800dd38 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 800dc7c:	881a      	ldrh	r2, [r3, #0]
 800dc7e:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 800dc80:	429a      	cmp	r2, r3
 800dc82:	b09d      	sub	sp, #116	; 0x74
 800dc84:	4604      	mov	r4, r0
 800dc86:	d954      	bls.n	800dd32 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 800dc88:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 800dd3c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 800dc8c:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 800dd40 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 800dc90:	aa26      	add	r2, sp, #152	; 0x98
 800dc92:	9202      	str	r2, [sp, #8]
 800dc94:	f8d9 2000 	ldr.w	r2, [r9]
 800dc98:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800dc9c:	f8d8 3000 	ldr.w	r3, [r8]
 800dca0:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800dca4:	682b      	ldr	r3, [r5, #0]
 800dca6:	4628      	mov	r0, r5
 800dca8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800dcaa:	4798      	blx	r3
 800dcac:	b207      	sxth	r7, r0
 800dcae:	4606      	mov	r6, r0
 800dcb0:	a803      	add	r0, sp, #12
 800dcb2:	f004 fedc 	bl	8012a6e <_ZN8touchgfx12TextProviderC1Ev>
 800dcb6:	682b      	ldr	r3, [r5, #0]
 800dcb8:	4628      	mov	r0, r5
 800dcba:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800dcbc:	4798      	blx	r3
 800dcbe:	682b      	ldr	r3, [r5, #0]
 800dcc0:	4682      	mov	sl, r0
 800dcc2:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800dcc4:	4628      	mov	r0, r5
 800dcc6:	4798      	blx	r3
 800dcc8:	4653      	mov	r3, sl
 800dcca:	9000      	str	r0, [sp, #0]
 800dccc:	9a02      	ldr	r2, [sp, #8]
 800dcce:	9925      	ldr	r1, [sp, #148]	; 0x94
 800dcd0:	a803      	add	r0, sp, #12
 800dcd2:	f004 ff27 	bl	8012b24 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800dcd6:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800dcd8:	f8d9 3000 	ldr.w	r3, [r9]
 800dcdc:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 800dce0:	8925      	ldrh	r5, [r4, #8]
 800dce2:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 800dce6:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 800dcea:	eba5 050c 	sub.w	r5, r5, ip
 800dcee:	784a      	ldrb	r2, [r1, #1]
 800dcf0:	f8d8 3000 	ldr.w	r3, [r8]
 800dcf4:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 800dcf8:	b22d      	sxth	r5, r5
 800dcfa:	9500      	str	r5, [sp, #0]
 800dcfc:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800dd00:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800dd04:	a803      	add	r0, sp, #12
 800dd06:	f002 fd21 	bl	801074c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 800dd0a:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 800dd0e:	18b9      	adds	r1, r7, r2
 800dd10:	2900      	cmp	r1, #0
 800dd12:	b203      	sxth	r3, r0
 800dd14:	dd0b      	ble.n	800dd2e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 800dd16:	3b01      	subs	r3, #1
 800dd18:	fb13 f302 	smulbb	r3, r3, r2
 800dd1c:	fb16 3300 	smlabb	r3, r6, r0, r3
 800dd20:	b21f      	sxth	r7, r3
 800dd22:	4638      	mov	r0, r7
 800dd24:	b01d      	add	sp, #116	; 0x74
 800dd26:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800dd2a:	b003      	add	sp, #12
 800dd2c:	4770      	bx	lr
 800dd2e:	2b00      	cmp	r3, #0
 800dd30:	dcf7      	bgt.n	800dd22 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800dd32:	2700      	movs	r7, #0
 800dd34:	e7f5      	b.n	800dd22 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800dd36:	bf00      	nop
 800dd38:	20015610 	.word	0x20015610
 800dd3c:	2001560c 	.word	0x2001560c
 800dd40:	20015614 	.word	0x20015614

0800dd44 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 800dd44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dd48:	4bbb      	ldr	r3, [pc, #748]	; (800e038 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f4>)
 800dd4a:	460c      	mov	r4, r1
 800dd4c:	881b      	ldrh	r3, [r3, #0]
 800dd4e:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 800dd50:	428b      	cmp	r3, r1
 800dd52:	b0a9      	sub	sp, #164	; 0xa4
 800dd54:	4681      	mov	r9, r0
 800dd56:	d809      	bhi.n	800dd6c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 800dd58:	2300      	movs	r3, #0
 800dd5a:	f04f 32ff 	mov.w	r2, #4294967295
 800dd5e:	e9c0 3200 	strd	r3, r2, [r0]
 800dd62:	6083      	str	r3, [r0, #8]
 800dd64:	4648      	mov	r0, r9
 800dd66:	b029      	add	sp, #164	; 0xa4
 800dd68:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dd6c:	f8df b2d0 	ldr.w	fp, [pc, #720]	; 800e040 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 800dd70:	f8df 82d0 	ldr.w	r8, [pc, #720]	; 800e044 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>
 800dd74:	f8db 3000 	ldr.w	r3, [fp]
 800dd78:	f8d8 0000 	ldr.w	r0, [r8]
 800dd7c:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 800dd80:	4bae      	ldr	r3, [pc, #696]	; (800e03c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 800dd82:	681b      	ldr	r3, [r3, #0]
 800dd84:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800dd88:	f7f7 f820 	bl	8004dcc <_ZNK8touchgfx5Texts7getTextEt>
 800dd8c:	682b      	ldr	r3, [r5, #0]
 800dd8e:	4607      	mov	r7, r0
 800dd90:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800dd92:	4628      	mov	r0, r5
 800dd94:	4798      	blx	r3
 800dd96:	8ea6      	ldrh	r6, [r4, #52]	; 0x34
 800dd98:	f8cd 800c 	str.w	r8, [sp, #12]
 800dd9c:	4430      	add	r0, r6
 800dd9e:	f894 6039 	ldrb.w	r6, [r4, #57]	; 0x39
 800dda2:	b283      	uxth	r3, r0
 800dda4:	f10d 0a3c 	add.w	sl, sp, #60	; 0x3c
 800dda8:	9302      	str	r3, [sp, #8]
 800ddaa:	4650      	mov	r0, sl
 800ddac:	2e00      	cmp	r6, #0
 800ddae:	f040 8091 	bne.w	800ded4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 800ddb2:	f004 fe5c 	bl	8012a6e <_ZN8touchgfx12TextProviderC1Ev>
 800ddb6:	682b      	ldr	r3, [r5, #0]
 800ddb8:	4628      	mov	r0, r5
 800ddba:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800ddbc:	4798      	blx	r3
 800ddbe:	682b      	ldr	r3, [r5, #0]
 800ddc0:	9005      	str	r0, [sp, #20]
 800ddc2:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800ddc4:	4628      	mov	r0, r5
 800ddc6:	4798      	blx	r3
 800ddc8:	6823      	ldr	r3, [r4, #0]
 800ddca:	4680      	mov	r8, r0
 800ddcc:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800ddce:	4620      	mov	r0, r4
 800ddd0:	4798      	blx	r3
 800ddd2:	6822      	ldr	r2, [r4, #0]
 800ddd4:	9004      	str	r0, [sp, #16]
 800ddd6:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 800ddda:	4620      	mov	r0, r4
 800dddc:	4790      	blx	r2
 800ddde:	9905      	ldr	r1, [sp, #20]
 800dde0:	9b04      	ldr	r3, [sp, #16]
 800dde2:	9001      	str	r0, [sp, #4]
 800dde4:	9300      	str	r3, [sp, #0]
 800dde6:	460a      	mov	r2, r1
 800dde8:	4643      	mov	r3, r8
 800ddea:	4639      	mov	r1, r7
 800ddec:	4650      	mov	r0, sl
 800ddee:	f004 feae 	bl	8012b4e <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800ddf2:	4637      	mov	r7, r6
 800ddf4:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800ddf6:	f8db 3000 	ldr.w	r3, [fp]
 800ddfa:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800ddfe:	4629      	mov	r1, r5
 800de00:	785b      	ldrb	r3, [r3, #1]
 800de02:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800de06:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800de0a:	4650      	mov	r0, sl
 800de0c:	f002 f9f0 	bl	80101f0 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800de10:	4287      	cmp	r7, r0
 800de12:	bfb8      	it	lt
 800de14:	b207      	sxthlt	r7, r0
 800de16:	3601      	adds	r6, #1
 800de18:	4650      	mov	r0, sl
 800de1a:	b2b6      	uxth	r6, r6
 800de1c:	f004 fe4e 	bl	8012abc <_ZN8touchgfx12TextProvider11endOfStringEv>
 800de20:	2800      	cmp	r0, #0
 800de22:	d0e7      	beq.n	800ddf4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xb0>
 800de24:	9b02      	ldr	r3, [sp, #8]
 800de26:	f8b4 8034 	ldrh.w	r8, [r4, #52]	; 0x34
 800de2a:	fb13 f606 	smulbb	r6, r3, r6
 800de2e:	eba6 0608 	sub.w	r6, r6, r8
 800de32:	b2b6      	uxth	r6, r6
 800de34:	fa0f f886 	sxth.w	r8, r6
 800de38:	f1b8 0f00 	cmp.w	r8, #0
 800de3c:	dd06      	ble.n	800de4c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x108>
 800de3e:	682b      	ldr	r3, [r5, #0]
 800de40:	4628      	mov	r0, r5
 800de42:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800de44:	4798      	blx	r3
 800de46:	4430      	add	r0, r6
 800de48:	fa0f f880 	sxth.w	r8, r0
 800de4c:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800de50:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800de54:	6823      	ldr	r3, [r4, #0]
 800de56:	bf08      	it	eq
 800de58:	f9b4 6008 	ldrsheq.w	r6, [r4, #8]
 800de5c:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800de5e:	bf18      	it	ne
 800de60:	f9b4 600a 	ldrshne.w	r6, [r4, #10]
 800de64:	4620      	mov	r0, r4
 800de66:	4798      	blx	r3
 800de68:	2801      	cmp	r0, #1
 800de6a:	b2ba      	uxth	r2, r7
 800de6c:	f000 80d1 	beq.w	800e012 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ce>
 800de70:	2802      	cmp	r0, #2
 800de72:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 800de76:	f000 80d2 	beq.w	800e01e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2da>
 800de7a:	b21e      	sxth	r6, r3
 800de7c:	7a29      	ldrb	r1, [r5, #8]
 800de7e:	7a6d      	ldrb	r5, [r5, #9]
 800de80:	1a76      	subs	r6, r6, r1
 800de82:	4429      	add	r1, r5
 800de84:	440a      	add	r2, r1
 800de86:	f894 1038 	ldrb.w	r1, [r4, #56]	; 0x38
 800de8a:	b2b3      	uxth	r3, r6
 800de8c:	b292      	uxth	r2, r2
 800de8e:	2902      	cmp	r1, #2
 800de90:	b21f      	sxth	r7, r3
 800de92:	b216      	sxth	r6, r2
 800de94:	f000 80c6 	beq.w	800e024 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2e0>
 800de98:	2903      	cmp	r1, #3
 800de9a:	f000 80d5 	beq.w	800e048 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>
 800de9e:	2901      	cmp	r1, #1
 800dea0:	f040 80db 	bne.w	800e05a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x316>
 800dea4:	8923      	ldrh	r3, [r4, #8]
 800dea6:	4632      	mov	r2, r6
 800dea8:	eba3 0308 	sub.w	r3, r3, r8
 800deac:	4646      	mov	r6, r8
 800deae:	463d      	mov	r5, r7
 800deb0:	4690      	mov	r8, r2
 800deb2:	b21f      	sxth	r7, r3
 800deb4:	9b03      	ldr	r3, [sp, #12]
 800deb6:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800deb8:	6818      	ldr	r0, [r3, #0]
 800deba:	f7f6 ff87 	bl	8004dcc <_ZNK8touchgfx5Texts7getTextEt>
 800debe:	f8a9 7000 	strh.w	r7, [r9]
 800dec2:	f8a9 5002 	strh.w	r5, [r9, #2]
 800dec6:	f8a9 6004 	strh.w	r6, [r9, #4]
 800deca:	f8a9 8006 	strh.w	r8, [r9, #6]
 800dece:	f8c9 0008 	str.w	r0, [r9, #8]
 800ded2:	e747      	b.n	800dd64 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 800ded4:	f004 fdcb 	bl	8012a6e <_ZN8touchgfx12TextProviderC1Ev>
 800ded8:	682b      	ldr	r3, [r5, #0]
 800deda:	4628      	mov	r0, r5
 800dedc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800dede:	4798      	blx	r3
 800dee0:	682b      	ldr	r3, [r5, #0]
 800dee2:	4606      	mov	r6, r0
 800dee4:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800dee6:	4628      	mov	r0, r5
 800dee8:	4798      	blx	r3
 800deea:	6823      	ldr	r3, [r4, #0]
 800deec:	4680      	mov	r8, r0
 800deee:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800def0:	4620      	mov	r0, r4
 800def2:	4798      	blx	r3
 800def4:	6822      	ldr	r2, [r4, #0]
 800def6:	9004      	str	r0, [sp, #16]
 800def8:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 800defc:	4620      	mov	r0, r4
 800defe:	4790      	blx	r2
 800df00:	9b04      	ldr	r3, [sp, #16]
 800df02:	9001      	str	r0, [sp, #4]
 800df04:	4632      	mov	r2, r6
 800df06:	9300      	str	r3, [sp, #0]
 800df08:	4639      	mov	r1, r7
 800df0a:	4643      	mov	r3, r8
 800df0c:	4650      	mov	r0, sl
 800df0e:	f004 fe1e 	bl	8012b4e <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800df12:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800df16:	f9b4 8008 	ldrsh.w	r8, [r4, #8]
 800df1a:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800df1c:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 800df20:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800df24:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800df28:	bf0a      	itet	eq
 800df2a:	4642      	moveq	r2, r8
 800df2c:	461a      	movne	r2, r3
 800df2e:	4698      	moveq	r8, r3
 800df30:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 800df34:	1ad2      	subs	r2, r2, r3
 800df36:	f8db 3000 	ldr.w	r3, [fp]
 800df3a:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800df3e:	7859      	ldrb	r1, [r3, #1]
 800df40:	f8cd a020 	str.w	sl, [sp, #32]
 800df44:	2300      	movs	r3, #0
 800df46:	f3c1 0181 	ubfx	r1, r1, #2, #2
 800df4a:	f8ad 301c 	strh.w	r3, [sp, #28]
 800df4e:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 800df52:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 800df56:	950a      	str	r5, [sp, #40]	; 0x28
 800df58:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800df5c:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800df60:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 800df64:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 800df68:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 800df6c:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800df70:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 800df74:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 800df78:	b350      	cbz	r0, 800dfd0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28c>
 800df7a:	682b      	ldr	r3, [r5, #0]
 800df7c:	4628      	mov	r0, r5
 800df7e:	695b      	ldr	r3, [r3, #20]
 800df80:	4798      	blx	r3
 800df82:	4607      	mov	r7, r0
 800df84:	b320      	cbz	r0, 800dfd0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28c>
 800df86:	980a      	ldr	r0, [sp, #40]	; 0x28
 800df88:	6803      	ldr	r3, [r0, #0]
 800df8a:	4639      	mov	r1, r7
 800df8c:	68db      	ldr	r3, [r3, #12]
 800df8e:	4798      	blx	r3
 800df90:	4606      	mov	r6, r0
 800df92:	b1e8      	cbz	r0, 800dfd0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28c>
 800df94:	7b43      	ldrb	r3, [r0, #13]
 800df96:	7a82      	ldrb	r2, [r0, #10]
 800df98:	005b      	lsls	r3, r3, #1
 800df9a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800df9e:	4313      	orrs	r3, r2
 800dfa0:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 800dfa4:	f89d 3025 	ldrb.w	r3, [sp, #37]	; 0x25
 800dfa8:	2b04      	cmp	r3, #4
 800dfaa:	d111      	bne.n	800dfd0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28c>
 800dfac:	980a      	ldr	r0, [sp, #40]	; 0x28
 800dfae:	6803      	ldr	r3, [r0, #0]
 800dfb0:	4632      	mov	r2, r6
 800dfb2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800dfb4:	4639      	mov	r1, r7
 800dfb6:	4798      	blx	r3
 800dfb8:	7b73      	ldrb	r3, [r6, #13]
 800dfba:	005b      	lsls	r3, r3, #1
 800dfbc:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800dfc0:	7ab3      	ldrb	r3, [r6, #10]
 800dfc2:	4313      	orrs	r3, r2
 800dfc4:	4418      	add	r0, r3
 800dfc6:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800dfca:	4418      	add	r0, r3
 800dfcc:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
 800dfd0:	f9bd a008 	ldrsh.w	sl, [sp, #8]
 800dfd4:	2600      	movs	r6, #0
 800dfd6:	ea4f 0b4a 	mov.w	fp, sl, lsl #1
 800dfda:	4637      	mov	r7, r6
 800dfdc:	45c3      	cmp	fp, r8
 800dfde:	bfd4      	ite	le
 800dfe0:	2100      	movle	r1, #0
 800dfe2:	2101      	movgt	r1, #1
 800dfe4:	a807      	add	r0, sp, #28
 800dfe6:	f002 fae2 	bl	80105ae <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800dfea:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 800dfee:	429f      	cmp	r7, r3
 800dff0:	bfb8      	it	lt
 800dff2:	b21f      	sxthlt	r7, r3
 800dff4:	9b02      	ldr	r3, [sp, #8]
 800dff6:	eba8 0803 	sub.w	r8, r8, r3
 800dffa:	f8bd 301c 	ldrh.w	r3, [sp, #28]
 800dffe:	3601      	adds	r6, #1
 800e000:	b2b6      	uxth	r6, r6
 800e002:	fa0f f888 	sxth.w	r8, r8
 800e006:	2b00      	cmp	r3, #0
 800e008:	f43f af0c 	beq.w	800de24 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xe0>
 800e00c:	45c2      	cmp	sl, r8
 800e00e:	dbe5      	blt.n	800dfdc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x298>
 800e010:	e708      	b.n	800de24 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xe0>
 800e012:	1bf6      	subs	r6, r6, r7
 800e014:	2702      	movs	r7, #2
 800e016:	fb96 f6f7 	sdiv	r6, r6, r7
 800e01a:	b236      	sxth	r6, r6
 800e01c:	e72e      	b.n	800de7c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x138>
 800e01e:	4413      	add	r3, r2
 800e020:	1af6      	subs	r6, r6, r3
 800e022:	e7fa      	b.n	800e01a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2d6>
 800e024:	8925      	ldrh	r5, [r4, #8]
 800e026:	1aad      	subs	r5, r5, r2
 800e028:	1aed      	subs	r5, r5, r3
 800e02a:	b22f      	sxth	r7, r5
 800e02c:	8965      	ldrh	r5, [r4, #10]
 800e02e:	eba5 0508 	sub.w	r5, r5, r8
 800e032:	b22d      	sxth	r5, r5
 800e034:	e73e      	b.n	800deb4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x170>
 800e036:	bf00      	nop
 800e038:	20015610 	.word	0x20015610
 800e03c:	20015614 	.word	0x20015614
 800e040:	2001560c 	.word	0x2001560c
 800e044:	20015618 	.word	0x20015618
 800e048:	8965      	ldrh	r5, [r4, #10]
 800e04a:	1aad      	subs	r5, r5, r2
 800e04c:	1aed      	subs	r5, r5, r3
 800e04e:	4633      	mov	r3, r6
 800e050:	b22d      	sxth	r5, r5
 800e052:	4646      	mov	r6, r8
 800e054:	2700      	movs	r7, #0
 800e056:	4698      	mov	r8, r3
 800e058:	e72c      	b.n	800deb4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x170>
 800e05a:	2500      	movs	r5, #0
 800e05c:	e72a      	b.n	800deb4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x170>
 800e05e:	bf00      	nop

0800e060 <_ZN8touchgfx8TextAreaD0Ev>:
 800e060:	b510      	push	{r4, lr}
 800e062:	2148      	movs	r1, #72	; 0x48
 800e064:	4604      	mov	r4, r0
 800e066:	f012 fb37 	bl	80206d8 <_ZdlPvj>
 800e06a:	4620      	mov	r0, r4
 800e06c:	bd10      	pop	{r4, pc}
	...

0800e070 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 800e070:	b513      	push	{r0, r1, r4, lr}
 800e072:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 800e076:	4604      	mov	r4, r0
 800e078:	b1fb      	cbz	r3, 800e0ba <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800e07a:	4b16      	ldr	r3, [pc, #88]	; (800e0d4 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 800e07c:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800e07e:	881b      	ldrh	r3, [r3, #0]
 800e080:	428b      	cmp	r3, r1
 800e082:	d91a      	bls.n	800e0ba <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800e084:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800e088:	2b00      	cmp	r3, #0
 800e08a:	dd16      	ble.n	800e0ba <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800e08c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800e090:	2b00      	cmp	r3, #0
 800e092:	dd12      	ble.n	800e0ba <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800e094:	4b10      	ldr	r3, [pc, #64]	; (800e0d8 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 800e096:	6818      	ldr	r0, [r3, #0]
 800e098:	f7f6 fe98 	bl	8004dcc <_ZNK8touchgfx5Texts7getTextEt>
 800e09c:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 800e0a0:	6822      	ldr	r2, [r4, #0]
 800e0a2:	2b00      	cmp	r3, #0
 800e0a4:	db06      	blt.n	800e0b4 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 800e0a6:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800e0aa:	2b00      	cmp	r3, #0
 800e0ac:	db02      	blt.n	800e0b4 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 800e0ae:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800e0b0:	4298      	cmp	r0, r3
 800e0b2:	d004      	beq.n	800e0be <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 800e0b4:	6953      	ldr	r3, [r2, #20]
 800e0b6:	4620      	mov	r0, r4
 800e0b8:	4798      	blx	r3
 800e0ba:	b002      	add	sp, #8
 800e0bc:	bd10      	pop	{r4, pc}
 800e0be:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 800e0c2:	c903      	ldmia	r1, {r0, r1}
 800e0c4:	466b      	mov	r3, sp
 800e0c6:	e883 0003 	stmia.w	r3, {r0, r1}
 800e0ca:	6912      	ldr	r2, [r2, #16]
 800e0cc:	4619      	mov	r1, r3
 800e0ce:	4620      	mov	r0, r4
 800e0d0:	4790      	blx	r2
 800e0d2:	e7f2      	b.n	800e0ba <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800e0d4:	20015610 	.word	0x20015610
 800e0d8:	20015618 	.word	0x20015618

0800e0dc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 800e0dc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e0e0:	4b44      	ldr	r3, [pc, #272]	; (800e1f4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 800e0e2:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800e0e4:	881b      	ldrh	r3, [r3, #0]
 800e0e6:	4293      	cmp	r3, r2
 800e0e8:	b08e      	sub	sp, #56	; 0x38
 800e0ea:	4604      	mov	r4, r0
 800e0ec:	d97e      	bls.n	800e1ec <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800e0ee:	6808      	ldr	r0, [r1, #0]
 800e0f0:	4d41      	ldr	r5, [pc, #260]	; (800e1f8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 800e0f2:	6849      	ldr	r1, [r1, #4]
 800e0f4:	ab05      	add	r3, sp, #20
 800e0f6:	c303      	stmia	r3!, {r0, r1}
 800e0f8:	4611      	mov	r1, r2
 800e0fa:	6828      	ldr	r0, [r5, #0]
 800e0fc:	f7f6 fe66 	bl	8004dcc <_ZNK8touchgfx5Texts7getTextEt>
 800e100:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 800e104:	2b00      	cmp	r3, #0
 800e106:	db11      	blt.n	800e12c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800e108:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800e10c:	2b00      	cmp	r3, #0
 800e10e:	db0d      	blt.n	800e12c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800e110:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800e112:	4298      	cmp	r0, r3
 800e114:	d10a      	bne.n	800e12c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800e116:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 800e11a:	e892 0003 	ldmia.w	r2, {r0, r1}
 800e11e:	ab09      	add	r3, sp, #36	; 0x24
 800e120:	e883 0003 	stmia.w	r3, {r0, r1}
 800e124:	4619      	mov	r1, r3
 800e126:	a805      	add	r0, sp, #20
 800e128:	f7fc fe28 	bl	800ad7c <_ZN8touchgfx4RectaNERKS0_>
 800e12c:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800e130:	2b00      	cmp	r3, #0
 800e132:	dd5b      	ble.n	800e1ec <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800e134:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800e138:	2b00      	cmp	r3, #0
 800e13a:	dd57      	ble.n	800e1ec <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800e13c:	4f2f      	ldr	r7, [pc, #188]	; (800e1fc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 800e13e:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800e140:	683b      	ldr	r3, [r7, #0]
 800e142:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800e146:	4b2e      	ldr	r3, [pc, #184]	; (800e200 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 800e148:	681b      	ldr	r3, [r3, #0]
 800e14a:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 800e14e:	2e00      	cmp	r6, #0
 800e150:	d04c      	beq.n	800e1ec <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800e152:	6823      	ldr	r3, [r4, #0]
 800e154:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
 800e158:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800e15a:	4620      	mov	r0, r4
 800e15c:	4798      	blx	r3
 800e15e:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800e160:	683b      	ldr	r3, [r7, #0]
 800e162:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
 800e166:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
 800e16a:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
 800e16e:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800e170:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800e174:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 800e178:	785b      	ldrb	r3, [r3, #1]
 800e17a:	9609      	str	r6, [sp, #36]	; 0x24
 800e17c:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800e180:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800e184:	4b1f      	ldr	r3, [pc, #124]	; (800e204 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 800e186:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 800e18a:	681b      	ldr	r3, [r3, #0]
 800e18c:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
 800e190:	910b      	str	r1, [sp, #44]	; 0x2c
 800e192:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
 800e196:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
 800e19a:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
 800e19e:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
 800e1a2:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800e1a6:	b10a      	cbz	r2, 800e1ac <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 800e1a8:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 800e1aa:	b906      	cbnz	r6, 800e1ae <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 800e1ac:	689e      	ldr	r6, [r3, #8]
 800e1ae:	af07      	add	r7, sp, #28
 800e1b0:	4621      	mov	r1, r4
 800e1b2:	4638      	mov	r0, r7
 800e1b4:	f003 ffa6 	bl	8012104 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e1b8:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800e1ba:	6828      	ldr	r0, [r5, #0]
 800e1bc:	f7f6 fe06 	bl	8004dcc <_ZNK8touchgfx5Texts7getTextEt>
 800e1c0:	6823      	ldr	r3, [r4, #0]
 800e1c2:	4605      	mov	r5, r0
 800e1c4:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800e1c6:	4620      	mov	r0, r4
 800e1c8:	4798      	blx	r3
 800e1ca:	6823      	ldr	r3, [r4, #0]
 800e1cc:	4680      	mov	r8, r0
 800e1ce:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800e1d2:	4620      	mov	r0, r4
 800e1d4:	4798      	blx	r3
 800e1d6:	e9cd 8002 	strd	r8, r0, [sp, #8]
 800e1da:	ab09      	add	r3, sp, #36	; 0x24
 800e1dc:	9300      	str	r3, [sp, #0]
 800e1de:	9501      	str	r5, [sp, #4]
 800e1e0:	ab05      	add	r3, sp, #20
 800e1e2:	e897 0006 	ldmia.w	r7, {r1, r2}
 800e1e6:	4630      	mov	r0, r6
 800e1e8:	f7f6 fda2 	bl	8004d30 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800e1ec:	b00e      	add	sp, #56	; 0x38
 800e1ee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e1f2:	bf00      	nop
 800e1f4:	20015610 	.word	0x20015610
 800e1f8:	20015618 	.word	0x20015618
 800e1fc:	2001560c 	.word	0x2001560c
 800e200:	20015614 	.word	0x20015614
 800e204:	200155b4 	.word	0x200155b4

0800e208 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 800e208:	b538      	push	{r3, r4, r5, lr}
 800e20a:	4b0e      	ldr	r3, [pc, #56]	; (800e244 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 800e20c:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800e20e:	881b      	ldrh	r3, [r3, #0]
 800e210:	429a      	cmp	r2, r3
 800e212:	4604      	mov	r4, r0
 800e214:	d214      	bcs.n	800e240 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 800e216:	6803      	ldr	r3, [r0, #0]
 800e218:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800e21a:	4798      	blx	r3
 800e21c:	6823      	ldr	r3, [r4, #0]
 800e21e:	4605      	mov	r5, r0
 800e220:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800e222:	4620      	mov	r0, r4
 800e224:	4798      	blx	r3
 800e226:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800e22a:	b22d      	sxth	r5, r5
 800e22c:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800e230:	4601      	mov	r1, r0
 800e232:	bf06      	itte	eq
 800e234:	4602      	moveq	r2, r0
 800e236:	4629      	moveq	r1, r5
 800e238:	462a      	movne	r2, r5
 800e23a:	4620      	mov	r0, r4
 800e23c:	f7fc fb45 	bl	800a8ca <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800e240:	bd38      	pop	{r3, r4, r5, pc}
 800e242:	bf00      	nop
 800e244:	20015610 	.word	0x20015610

0800e248 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 800e248:	b530      	push	{r4, r5, lr}
 800e24a:	888b      	ldrh	r3, [r1, #4]
 800e24c:	8583      	strh	r3, [r0, #44]	; 0x2c
 800e24e:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800e252:	b085      	sub	sp, #20
 800e254:	4604      	mov	r4, r0
 800e256:	b923      	cbnz	r3, 800e262 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800e258:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800e25c:	b90b      	cbnz	r3, 800e262 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800e25e:	f7ff ffd3 	bl	800e208 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 800e262:	6823      	ldr	r3, [r4, #0]
 800e264:	466d      	mov	r5, sp
 800e266:	4621      	mov	r1, r4
 800e268:	4628      	mov	r0, r5
 800e26a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800e26e:	4798      	blx	r3
 800e270:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800e274:	343c      	adds	r4, #60	; 0x3c
 800e276:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800e27a:	b005      	add	sp, #20
 800e27c:	bd30      	pop	{r4, r5, pc}

0800e27e <_ZNK8touchgfx3Box12getSolidRectEv>:
 800e27e:	2300      	movs	r3, #0
 800e280:	8083      	strh	r3, [r0, #4]
 800e282:	80c3      	strh	r3, [r0, #6]
 800e284:	8003      	strh	r3, [r0, #0]
 800e286:	8043      	strh	r3, [r0, #2]
 800e288:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 800e28c:	2bff      	cmp	r3, #255	; 0xff
 800e28e:	bf01      	itttt	eq
 800e290:	890b      	ldrheq	r3, [r1, #8]
 800e292:	8083      	strheq	r3, [r0, #4]
 800e294:	894b      	ldrheq	r3, [r1, #10]
 800e296:	80c3      	strheq	r3, [r0, #6]
 800e298:	4770      	bx	lr
	...

0800e29c <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800e29c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e29e:	4604      	mov	r4, r0
 800e2a0:	6808      	ldr	r0, [r1, #0]
 800e2a2:	6849      	ldr	r1, [r1, #4]
 800e2a4:	466b      	mov	r3, sp
 800e2a6:	c303      	stmia	r3!, {r0, r1}
 800e2a8:	6823      	ldr	r3, [r4, #0]
 800e2aa:	4669      	mov	r1, sp
 800e2ac:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e2ae:	4620      	mov	r0, r4
 800e2b0:	4798      	blx	r3
 800e2b2:	4b08      	ldr	r3, [pc, #32]	; (800e2d4 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800e2b4:	681b      	ldr	r3, [r3, #0]
 800e2b6:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800e2ba:	b10a      	cbz	r2, 800e2c0 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800e2bc:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800e2be:	b900      	cbnz	r0, 800e2c2 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800e2c0:	6898      	ldr	r0, [r3, #8]
 800e2c2:	6803      	ldr	r3, [r0, #0]
 800e2c4:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800e2c6:	6a1d      	ldr	r5, [r3, #32]
 800e2c8:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800e2cc:	4669      	mov	r1, sp
 800e2ce:	47a8      	blx	r5
 800e2d0:	b003      	add	sp, #12
 800e2d2:	bd30      	pop	{r4, r5, pc}
 800e2d4:	200155b4 	.word	0x200155b4

0800e2d8 <_ZN8touchgfx3BoxD1Ev>:
 800e2d8:	4770      	bx	lr

0800e2da <_ZN8touchgfx3BoxD0Ev>:
 800e2da:	b510      	push	{r4, lr}
 800e2dc:	212c      	movs	r1, #44	; 0x2c
 800e2de:	4604      	mov	r4, r0
 800e2e0:	f012 f9fa 	bl	80206d8 <_ZdlPvj>
 800e2e4:	4620      	mov	r0, r4
 800e2e6:	bd10      	pop	{r4, pc}

0800e2e8 <_ZNK8touchgfx3Box17invalidateContentEv>:
 800e2e8:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 800e2ec:	b12a      	cbz	r2, 800e2fa <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800e2ee:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800e2f2:	b112      	cbz	r2, 800e2fa <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800e2f4:	6803      	ldr	r3, [r0, #0]
 800e2f6:	695b      	ldr	r3, [r3, #20]
 800e2f8:	4718      	bx	r3
 800e2fa:	4770      	bx	lr

0800e2fc <_ZN8touchgfx6ButtonD1Ev>:
 800e2fc:	4770      	bx	lr

0800e2fe <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 800e2fe:	b570      	push	{r4, r5, r6, lr}
 800e300:	880b      	ldrh	r3, [r1, #0]
 800e302:	85c3      	strh	r3, [r0, #46]	; 0x2e
 800e304:	4605      	mov	r5, r0
 800e306:	8813      	ldrh	r3, [r2, #0]
 800e308:	f825 3f30 	strh.w	r3, [r5, #48]!
 800e30c:	4604      	mov	r4, r0
 800e30e:	4628      	mov	r0, r5
 800e310:	f006 f8f6 	bl	8014500 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800e314:	4606      	mov	r6, r0
 800e316:	4628      	mov	r0, r5
 800e318:	f006 f926 	bl	8014568 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800e31c:	6823      	ldr	r3, [r4, #0]
 800e31e:	4605      	mov	r5, r0
 800e320:	4631      	mov	r1, r6
 800e322:	4620      	mov	r0, r4
 800e324:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800e326:	4798      	blx	r3
 800e328:	6823      	ldr	r3, [r4, #0]
 800e32a:	4629      	mov	r1, r5
 800e32c:	4620      	mov	r0, r4
 800e32e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800e330:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e334:	4718      	bx	r3

0800e336 <_ZN8touchgfx6ButtonD0Ev>:
 800e336:	b510      	push	{r4, lr}
 800e338:	2134      	movs	r1, #52	; 0x34
 800e33a:	4604      	mov	r4, r0
 800e33c:	f012 f9cc 	bl	80206d8 <_ZdlPvj>
 800e340:	4620      	mov	r0, r4
 800e342:	bd10      	pop	{r4, pc}

0800e344 <_ZNK8touchgfx6Button12getSolidRectEv>:
 800e344:	b510      	push	{r4, lr}
 800e346:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 800e34a:	2bff      	cmp	r3, #255	; 0xff
 800e34c:	4604      	mov	r4, r0
 800e34e:	d006      	beq.n	800e35e <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 800e350:	2300      	movs	r3, #0
 800e352:	8003      	strh	r3, [r0, #0]
 800e354:	8043      	strh	r3, [r0, #2]
 800e356:	8083      	strh	r3, [r0, #4]
 800e358:	80c3      	strh	r3, [r0, #6]
 800e35a:	4620      	mov	r0, r4
 800e35c:	bd10      	pop	{r4, pc}
 800e35e:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 800e362:	b11b      	cbz	r3, 800e36c <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 800e364:	3130      	adds	r1, #48	; 0x30
 800e366:	f006 f933 	bl	80145d0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800e36a:	e7f6      	b.n	800e35a <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 800e36c:	312e      	adds	r1, #46	; 0x2e
 800e36e:	e7fa      	b.n	800e366 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>

0800e370 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 800e370:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e374:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800e378:	b08a      	sub	sp, #40	; 0x28
 800e37a:	4604      	mov	r4, r0
 800e37c:	4688      	mov	r8, r1
 800e37e:	2b00      	cmp	r3, #0
 800e380:	d066      	beq.n	800e450 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 800e382:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800e384:	f8ad 3014 	strh.w	r3, [sp, #20]
 800e388:	a805      	add	r0, sp, #20
 800e38a:	f006 f8b9 	bl	8014500 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800e38e:	4607      	mov	r7, r0
 800e390:	a805      	add	r0, sp, #20
 800e392:	f006 f8e9 	bl	8014568 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800e396:	f9b8 6000 	ldrsh.w	r6, [r8]
 800e39a:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 800e39e:	4432      	add	r2, r6
 800e3a0:	b292      	uxth	r2, r2
 800e3a2:	2300      	movs	r3, #0
 800e3a4:	fa0f fc82 	sxth.w	ip, r2
 800e3a8:	459c      	cmp	ip, r3
 800e3aa:	9306      	str	r3, [sp, #24]
 800e3ac:	dd52      	ble.n	800e454 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800e3ae:	42b7      	cmp	r7, r6
 800e3b0:	dd50      	ble.n	800e454 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800e3b2:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 800e3b6:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 800e3ba:	442b      	add	r3, r5
 800e3bc:	b29b      	uxth	r3, r3
 800e3be:	b219      	sxth	r1, r3
 800e3c0:	2900      	cmp	r1, #0
 800e3c2:	dd47      	ble.n	800e454 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800e3c4:	42a8      	cmp	r0, r5
 800e3c6:	dd45      	ble.n	800e454 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800e3c8:	4567      	cmp	r7, ip
 800e3ca:	bfb8      	it	lt
 800e3cc:	b2ba      	uxthlt	r2, r7
 800e3ce:	4288      	cmp	r0, r1
 800e3d0:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 800e3d4:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 800e3d8:	bfb8      	it	lt
 800e3da:	b283      	uxthlt	r3, r0
 800e3dc:	1b92      	subs	r2, r2, r6
 800e3de:	1b5b      	subs	r3, r3, r5
 800e3e0:	f8ad 201c 	strh.w	r2, [sp, #28]
 800e3e4:	f8ad 301e 	strh.w	r3, [sp, #30]
 800e3e8:	f8ad 6018 	strh.w	r6, [sp, #24]
 800e3ec:	f8ad 501a 	strh.w	r5, [sp, #26]
 800e3f0:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800e3f4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800e3f8:	429a      	cmp	r2, r3
 800e3fa:	d026      	beq.n	800e44a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800e3fc:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800e400:	2b00      	cmp	r3, #0
 800e402:	dd22      	ble.n	800e44a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800e404:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800e408:	2b00      	cmp	r3, #0
 800e40a:	dd1e      	ble.n	800e44a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800e40c:	2300      	movs	r3, #0
 800e40e:	e9cd 3308 	strd	r3, r3, [sp, #32]
 800e412:	6823      	ldr	r3, [r4, #0]
 800e414:	a908      	add	r1, sp, #32
 800e416:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e418:	4620      	mov	r0, r4
 800e41a:	4798      	blx	r3
 800e41c:	4b0f      	ldr	r3, [pc, #60]	; (800e45c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 800e41e:	681b      	ldr	r3, [r3, #0]
 800e420:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800e424:	b10a      	cbz	r2, 800e42a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 800e426:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800e428:	b900      	cbnz	r0, 800e42c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 800e42a:	6898      	ldr	r0, [r3, #8]
 800e42c:	6801      	ldr	r1, [r0, #0]
 800e42e:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800e432:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 800e436:	2501      	movs	r5, #1
 800e438:	9502      	str	r5, [sp, #8]
 800e43a:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 800e43e:	9401      	str	r4, [sp, #4]
 800e440:	ac06      	add	r4, sp, #24
 800e442:	9400      	str	r4, [sp, #0]
 800e444:	688c      	ldr	r4, [r1, #8]
 800e446:	a905      	add	r1, sp, #20
 800e448:	47a0      	blx	r4
 800e44a:	b00a      	add	sp, #40	; 0x28
 800e44c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e450:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800e452:	e797      	b.n	800e384 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 800e454:	2300      	movs	r3, #0
 800e456:	9307      	str	r3, [sp, #28]
 800e458:	e7ca      	b.n	800e3f0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 800e45a:	bf00      	nop
 800e45c:	200155b4 	.word	0x200155b4

0800e460 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 800e460:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e464:	4b2f      	ldr	r3, [pc, #188]	; (800e524 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 800e466:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800e468:	881b      	ldrh	r3, [r3, #0]
 800e46a:	4293      	cmp	r3, r2
 800e46c:	b08d      	sub	sp, #52	; 0x34
 800e46e:	4604      	mov	r4, r0
 800e470:	460f      	mov	r7, r1
 800e472:	d954      	bls.n	800e51e <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 800e474:	4b2c      	ldr	r3, [pc, #176]	; (800e528 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 800e476:	6819      	ldr	r1, [r3, #0]
 800e478:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 800e47c:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 800e480:	4a2a      	ldr	r2, [pc, #168]	; (800e52c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 800e482:	6812      	ldr	r2, [r2, #0]
 800e484:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 800e488:	2900      	cmp	r1, #0
 800e48a:	d048      	beq.n	800e51e <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 800e48c:	785a      	ldrb	r2, [r3, #1]
 800e48e:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 800e492:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 800e496:	4b26      	ldr	r3, [pc, #152]	; (800e530 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 800e498:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
 800e49c:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 800e4a0:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 800e4a4:	6b26      	ldr	r6, [r4, #48]	; 0x30
 800e4a6:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
 800e4aa:	9107      	str	r1, [sp, #28]
 800e4ac:	f3c2 0801 	ubfx	r8, r2, #0, #2
 800e4b0:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800e4b4:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
 800e4b8:	681a      	ldr	r2, [r3, #0]
 800e4ba:	f88d 8020 	strb.w	r8, [sp, #32]
 800e4be:	f892 3076 	ldrb.w	r3, [r2, #118]	; 0x76
 800e4c2:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 800e4c6:	9609      	str	r6, [sp, #36]	; 0x24
 800e4c8:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 800e4cc:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
 800e4d0:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
 800e4d4:	b10b      	cbz	r3, 800e4da <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 800e4d6:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
 800e4d8:	b905      	cbnz	r5, 800e4dc <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 800e4da:	6895      	ldr	r5, [r2, #8]
 800e4dc:	ae05      	add	r6, sp, #20
 800e4de:	4621      	mov	r1, r4
 800e4e0:	4630      	mov	r0, r6
 800e4e2:	f003 fe0f 	bl	8012104 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e4e6:	4b13      	ldr	r3, [pc, #76]	; (800e534 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 800e4e8:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800e4ea:	6818      	ldr	r0, [r3, #0]
 800e4ec:	f7f6 fc6e 	bl	8004dcc <_ZNK8touchgfx5Texts7getTextEt>
 800e4f0:	6823      	ldr	r3, [r4, #0]
 800e4f2:	4680      	mov	r8, r0
 800e4f4:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800e4f6:	4620      	mov	r0, r4
 800e4f8:	4798      	blx	r3
 800e4fa:	6823      	ldr	r3, [r4, #0]
 800e4fc:	4681      	mov	r9, r0
 800e4fe:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800e502:	4620      	mov	r0, r4
 800e504:	4798      	blx	r3
 800e506:	e9cd 9002 	strd	r9, r0, [sp, #8]
 800e50a:	ab07      	add	r3, sp, #28
 800e50c:	9300      	str	r3, [sp, #0]
 800e50e:	f8cd 8004 	str.w	r8, [sp, #4]
 800e512:	463b      	mov	r3, r7
 800e514:	e896 0006 	ldmia.w	r6, {r1, r2}
 800e518:	4628      	mov	r0, r5
 800e51a:	f7f6 fc09 	bl	8004d30 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800e51e:	b00d      	add	sp, #52	; 0x34
 800e520:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e524:	20015610 	.word	0x20015610
 800e528:	2001560c 	.word	0x2001560c
 800e52c:	20015614 	.word	0x20015614
 800e530:	200155b4 	.word	0x200155b4
 800e534:	20015618 	.word	0x20015618

0800e538 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
 800e538:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e53c:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 800e540:	b0a0      	sub	sp, #128	; 0x80
 800e542:	4604      	mov	r4, r0
 800e544:	b193      	cbz	r3, 800e56c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800e546:	4b30      	ldr	r3, [pc, #192]	; (800e608 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xd0>)
 800e548:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800e54a:	881b      	ldrh	r3, [r3, #0]
 800e54c:	428b      	cmp	r3, r1
 800e54e:	d90d      	bls.n	800e56c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800e550:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800e554:	2b00      	cmp	r3, #0
 800e556:	dd09      	ble.n	800e56c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800e558:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800e55c:	2b00      	cmp	r3, #0
 800e55e:	dd05      	ble.n	800e56c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800e560:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 800e564:	b12b      	cbz	r3, 800e572 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x3a>
 800e566:	6803      	ldr	r3, [r0, #0]
 800e568:	695b      	ldr	r3, [r3, #20]
 800e56a:	4798      	blx	r3
 800e56c:	b020      	add	sp, #128	; 0x80
 800e56e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e572:	4b26      	ldr	r3, [pc, #152]	; (800e60c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xd4>)
 800e574:	681b      	ldr	r3, [r3, #0]
 800e576:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 800e57a:	4b25      	ldr	r3, [pc, #148]	; (800e610 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xd8>)
 800e57c:	681b      	ldr	r3, [r3, #0]
 800e57e:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800e582:	4b24      	ldr	r3, [pc, #144]	; (800e614 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xdc>)
 800e584:	6818      	ldr	r0, [r3, #0]
 800e586:	f7f6 fc21 	bl	8004dcc <_ZNK8touchgfx5Texts7getTextEt>
 800e58a:	4606      	mov	r6, r0
 800e58c:	a807      	add	r0, sp, #28
 800e58e:	f004 fa6e 	bl	8012a6e <_ZN8touchgfx12TextProviderC1Ev>
 800e592:	682b      	ldr	r3, [r5, #0]
 800e594:	4628      	mov	r0, r5
 800e596:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800e598:	4798      	blx	r3
 800e59a:	682b      	ldr	r3, [r5, #0]
 800e59c:	4607      	mov	r7, r0
 800e59e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800e5a0:	4628      	mov	r0, r5
 800e5a2:	4798      	blx	r3
 800e5a4:	6823      	ldr	r3, [r4, #0]
 800e5a6:	4605      	mov	r5, r0
 800e5a8:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800e5aa:	4620      	mov	r0, r4
 800e5ac:	4798      	blx	r3
 800e5ae:	6823      	ldr	r3, [r4, #0]
 800e5b0:	4680      	mov	r8, r0
 800e5b2:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800e5b6:	4620      	mov	r0, r4
 800e5b8:	4798      	blx	r3
 800e5ba:	462b      	mov	r3, r5
 800e5bc:	e9cd 8000 	strd	r8, r0, [sp]
 800e5c0:	463a      	mov	r2, r7
 800e5c2:	a807      	add	r0, sp, #28
 800e5c4:	4631      	mov	r1, r6
 800e5c6:	f004 fac2 	bl	8012b4e <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800e5ca:	a807      	add	r0, sp, #28
 800e5cc:	f004 fe7a 	bl	80132c4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800e5d0:	280a      	cmp	r0, #10
 800e5d2:	d103      	bne.n	800e5dc <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xa4>
 800e5d4:	6823      	ldr	r3, [r4, #0]
 800e5d6:	4620      	mov	r0, r4
 800e5d8:	695b      	ldr	r3, [r3, #20]
 800e5da:	e7c6      	b.n	800e56a <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x32>
 800e5dc:	a807      	add	r0, sp, #28
 800e5de:	f004 fe71 	bl	80132c4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800e5e2:	2800      	cmp	r0, #0
 800e5e4:	d1f4      	bne.n	800e5d0 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x98>
 800e5e6:	ad04      	add	r5, sp, #16
 800e5e8:	4621      	mov	r1, r4
 800e5ea:	4628      	mov	r0, r5
 800e5ec:	f7ff fbaa 	bl	800dd44 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800e5f0:	e895 0003 	ldmia.w	r5, {r0, r1}
 800e5f4:	6822      	ldr	r2, [r4, #0]
 800e5f6:	ab02      	add	r3, sp, #8
 800e5f8:	e883 0003 	stmia.w	r3, {r0, r1}
 800e5fc:	6912      	ldr	r2, [r2, #16]
 800e5fe:	4619      	mov	r1, r3
 800e600:	4620      	mov	r0, r4
 800e602:	4790      	blx	r2
 800e604:	e7b2      	b.n	800e56c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800e606:	bf00      	nop
 800e608:	20015610 	.word	0x20015610
 800e60c:	2001560c 	.word	0x2001560c
 800e610:	20015614 	.word	0x20015614
 800e614:	20015618 	.word	0x20015618

0800e618 <_ZN8touchgfx13BoxWithBorderD1Ev>:
 800e618:	4770      	bx	lr

0800e61a <_ZN8touchgfx13BoxWithBorderD0Ev>:
 800e61a:	b510      	push	{r4, lr}
 800e61c:	2134      	movs	r1, #52	; 0x34
 800e61e:	4604      	mov	r4, r0
 800e620:	f012 f85a 	bl	80206d8 <_ZdlPvj>
 800e624:	4620      	mov	r0, r4
 800e626:	bd10      	pop	{r4, pc}

0800e628 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE>:
 800e628:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e62c:	4604      	mov	r4, r0
 800e62e:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800e630:	8962      	ldrh	r2, [r4, #10]
 800e632:	b218      	sxth	r0, r3
 800e634:	460e      	mov	r6, r1
 800e636:	005b      	lsls	r3, r3, #1
 800e638:	8921      	ldrh	r1, [r4, #8]
 800e63a:	b29b      	uxth	r3, r3
 800e63c:	1ac9      	subs	r1, r1, r3
 800e63e:	b08e      	sub	sp, #56	; 0x38
 800e640:	b209      	sxth	r1, r1
 800e642:	1ad3      	subs	r3, r2, r3
 800e644:	b21b      	sxth	r3, r3
 800e646:	2900      	cmp	r1, #0
 800e648:	f8ad 0000 	strh.w	r0, [sp]
 800e64c:	f8ad 0002 	strh.w	r0, [sp, #2]
 800e650:	f8ad 1004 	strh.w	r1, [sp, #4]
 800e654:	f8ad 3006 	strh.w	r3, [sp, #6]
 800e658:	dd5e      	ble.n	800e718 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 800e65a:	2b00      	cmp	r3, #0
 800e65c:	dd5c      	ble.n	800e718 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 800e65e:	6830      	ldr	r0, [r6, #0]
 800e660:	6871      	ldr	r1, [r6, #4]
 800e662:	ab02      	add	r3, sp, #8
 800e664:	c303      	stmia	r3!, {r0, r1}
 800e666:	4669      	mov	r1, sp
 800e668:	a802      	add	r0, sp, #8
 800e66a:	f7fc fb87 	bl	800ad7c <_ZN8touchgfx4RectaNERKS0_>
 800e66e:	4620      	mov	r0, r4
 800e670:	a902      	add	r1, sp, #8
 800e672:	f7ff fe13 	bl	800e29c <_ZNK8touchgfx3Box4drawERKNS_4RectE>
 800e676:	8e20      	ldrh	r0, [r4, #48]	; 0x30
 800e678:	2800      	cmp	r0, #0
 800e67a:	d05f      	beq.n	800e73c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 800e67c:	8963      	ldrh	r3, [r4, #10]
 800e67e:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800e682:	f8ad 101c 	strh.w	r1, [sp, #28]
 800e686:	1a1f      	subs	r7, r3, r0
 800e688:	eba3 0340 	sub.w	r3, r3, r0, lsl #1
 800e68c:	b202      	sxth	r2, r0
 800e68e:	2500      	movs	r5, #0
 800e690:	b21b      	sxth	r3, r3
 800e692:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
 800e696:	1a09      	subs	r1, r1, r0
 800e698:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 800e69c:	9506      	str	r5, [sp, #24]
 800e69e:	f8ad 201e 	strh.w	r2, [sp, #30]
 800e6a2:	f8ad 5020 	strh.w	r5, [sp, #32]
 800e6a6:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 800e6aa:	f8ad 5028 	strh.w	r5, [sp, #40]	; 0x28
 800e6ae:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 800e6b2:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800e6b6:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800e6ba:	f8ad 1030 	strh.w	r1, [sp, #48]	; 0x30
 800e6be:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 800e6c2:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 800e6c6:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800e6ca:	af04      	add	r7, sp, #16
 800e6cc:	ab06      	add	r3, sp, #24
 800e6ce:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800e6d2:	e893 0003 	ldmia.w	r3, {r0, r1}
 800e6d6:	e887 0003 	stmia.w	r7, {r0, r1}
 800e6da:	4631      	mov	r1, r6
 800e6dc:	4638      	mov	r0, r7
 800e6de:	f7fc fb4d 	bl	800ad7c <_ZN8touchgfx4RectaNERKS0_>
 800e6e2:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800e6e6:	2b00      	cmp	r3, #0
 800e6e8:	dd12      	ble.n	800e710 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 800e6ea:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800e6ee:	2b00      	cmp	r3, #0
 800e6f0:	dd0e      	ble.n	800e710 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 800e6f2:	6823      	ldr	r3, [r4, #0]
 800e6f4:	4639      	mov	r1, r7
 800e6f6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e6f8:	4620      	mov	r0, r4
 800e6fa:	4798      	blx	r3
 800e6fc:	f7f3 fffe 	bl	80026fc <_ZN8touchgfx3HAL3lcdEv>
 800e700:	6803      	ldr	r3, [r0, #0]
 800e702:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800e704:	f8d3 8020 	ldr.w	r8, [r3, #32]
 800e708:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800e70c:	4639      	mov	r1, r7
 800e70e:	47c0      	blx	r8
 800e710:	3501      	adds	r5, #1
 800e712:	2d04      	cmp	r5, #4
 800e714:	d1da      	bne.n	800e6cc <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xa4>
 800e716:	e011      	b.n	800e73c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 800e718:	6830      	ldr	r0, [r6, #0]
 800e71a:	6871      	ldr	r1, [r6, #4]
 800e71c:	ab06      	add	r3, sp, #24
 800e71e:	c303      	stmia	r3!, {r0, r1}
 800e720:	6823      	ldr	r3, [r4, #0]
 800e722:	a906      	add	r1, sp, #24
 800e724:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e726:	4620      	mov	r0, r4
 800e728:	4798      	blx	r3
 800e72a:	f7f3 ffe7 	bl	80026fc <_ZN8touchgfx3HAL3lcdEv>
 800e72e:	6803      	ldr	r3, [r0, #0]
 800e730:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800e732:	6a1d      	ldr	r5, [r3, #32]
 800e734:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800e738:	a906      	add	r1, sp, #24
 800e73a:	47a8      	blx	r5
 800e73c:	b00e      	add	sp, #56	; 0x38
 800e73e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800e742 <_ZN8touchgfx5ImageD1Ev>:
 800e742:	4770      	bx	lr

0800e744 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 800e744:	b570      	push	{r4, r5, r6, lr}
 800e746:	880b      	ldrh	r3, [r1, #0]
 800e748:	84c3      	strh	r3, [r0, #38]	; 0x26
 800e74a:	4604      	mov	r4, r0
 800e74c:	4608      	mov	r0, r1
 800e74e:	460d      	mov	r5, r1
 800e750:	f005 fed6 	bl	8014500 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800e754:	4606      	mov	r6, r0
 800e756:	4628      	mov	r0, r5
 800e758:	f005 ff06 	bl	8014568 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800e75c:	6823      	ldr	r3, [r4, #0]
 800e75e:	4605      	mov	r5, r0
 800e760:	4631      	mov	r1, r6
 800e762:	4620      	mov	r0, r4
 800e764:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800e766:	4798      	blx	r3
 800e768:	6823      	ldr	r3, [r4, #0]
 800e76a:	4629      	mov	r1, r5
 800e76c:	4620      	mov	r0, r4
 800e76e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800e770:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e774:	4718      	bx	r3

0800e776 <_ZN8touchgfx5ImageD0Ev>:
 800e776:	b510      	push	{r4, lr}
 800e778:	212c      	movs	r1, #44	; 0x2c
 800e77a:	4604      	mov	r4, r0
 800e77c:	f011 ffac 	bl	80206d8 <_ZdlPvj>
 800e780:	4620      	mov	r0, r4
 800e782:	bd10      	pop	{r4, pc}

0800e784 <_ZNK8touchgfx5Image12getSolidRectEv>:
 800e784:	b510      	push	{r4, lr}
 800e786:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 800e78a:	2bff      	cmp	r3, #255	; 0xff
 800e78c:	4604      	mov	r4, r0
 800e78e:	d006      	beq.n	800e79e <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 800e790:	2300      	movs	r3, #0
 800e792:	8003      	strh	r3, [r0, #0]
 800e794:	8043      	strh	r3, [r0, #2]
 800e796:	8083      	strh	r3, [r0, #4]
 800e798:	80c3      	strh	r3, [r0, #6]
 800e79a:	4620      	mov	r0, r4
 800e79c:	bd10      	pop	{r4, pc}
 800e79e:	3126      	adds	r1, #38	; 0x26
 800e7a0:	f005 ff16 	bl	80145d0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800e7a4:	e7f9      	b.n	800e79a <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

0800e7a6 <_ZNK8touchgfx5Image17invalidateContentEv>:
 800e7a6:	f890 2028 	ldrb.w	r2, [r0, #40]	; 0x28
 800e7aa:	b12a      	cbz	r2, 800e7b8 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 800e7ac:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800e7b0:	b112      	cbz	r2, 800e7b8 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 800e7b2:	6803      	ldr	r3, [r0, #0]
 800e7b4:	695b      	ldr	r3, [r3, #20]
 800e7b6:	4718      	bx	r3
 800e7b8:	4770      	bx	lr
	...

0800e7bc <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 800e7bc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e7c0:	4604      	mov	r4, r0
 800e7c2:	b088      	sub	sp, #32
 800e7c4:	f854 3b26 	ldr.w	r3, [r4], #38
 800e7c8:	2500      	movs	r5, #0
 800e7ca:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e7cc:	460f      	mov	r7, r1
 800e7ce:	e9cd 5504 	strd	r5, r5, [sp, #16]
 800e7d2:	a904      	add	r1, sp, #16
 800e7d4:	4606      	mov	r6, r0
 800e7d6:	4798      	blx	r3
 800e7d8:	4620      	mov	r0, r4
 800e7da:	f005 fe91 	bl	8014500 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800e7de:	4680      	mov	r8, r0
 800e7e0:	4620      	mov	r0, r4
 800e7e2:	f005 fec1 	bl	8014568 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800e7e6:	9506      	str	r5, [sp, #24]
 800e7e8:	ad06      	add	r5, sp, #24
 800e7ea:	f8ad 001e 	strh.w	r0, [sp, #30]
 800e7ee:	4639      	mov	r1, r7
 800e7f0:	4628      	mov	r0, r5
 800e7f2:	f8ad 801c 	strh.w	r8, [sp, #28]
 800e7f6:	f7fc fac1 	bl	800ad7c <_ZN8touchgfx4RectaNERKS0_>
 800e7fa:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800e7fe:	2b00      	cmp	r3, #0
 800e800:	dd19      	ble.n	800e836 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800e802:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800e806:	2b00      	cmp	r3, #0
 800e808:	dd15      	ble.n	800e836 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800e80a:	4b0c      	ldr	r3, [pc, #48]	; (800e83c <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 800e80c:	681b      	ldr	r3, [r3, #0]
 800e80e:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800e812:	b10a      	cbz	r2, 800e818 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 800e814:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800e816:	b900      	cbnz	r0, 800e81a <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 800e818:	6898      	ldr	r0, [r3, #8]
 800e81a:	6801      	ldr	r1, [r0, #0]
 800e81c:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 800e820:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 800e824:	2701      	movs	r7, #1
 800e826:	9702      	str	r7, [sp, #8]
 800e828:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 800e82c:	e9cd 5600 	strd	r5, r6, [sp]
 800e830:	688d      	ldr	r5, [r1, #8]
 800e832:	4621      	mov	r1, r4
 800e834:	47a8      	blx	r5
 800e836:	b008      	add	sp, #32
 800e838:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e83c:	200155b4 	.word	0x200155b4

0800e840 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 800e840:	4770      	bx	lr

0800e842 <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 800e842:	b510      	push	{r4, lr}
 800e844:	2148      	movs	r1, #72	; 0x48
 800e846:	4604      	mov	r4, r0
 800e848:	f011 ff46 	bl	80206d8 <_ZdlPvj>
 800e84c:	4620      	mov	r0, r4
 800e84e:	bd10      	pop	{r4, pc}

0800e850 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 800e850:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e854:	b08d      	sub	sp, #52	; 0x34
 800e856:	4604      	mov	r4, r0
 800e858:	4688      	mov	r8, r1
 800e85a:	f7ff fd89 	bl	800e370 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 800e85e:	4a4d      	ldr	r2, [pc, #308]	; (800e994 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x144>)
 800e860:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800e862:	8812      	ldrh	r2, [r2, #0]
 800e864:	429a      	cmp	r2, r3
 800e866:	f240 8081 	bls.w	800e96c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11c>
 800e86a:	4e4b      	ldr	r6, [pc, #300]	; (800e998 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x148>)
 800e86c:	6832      	ldr	r2, [r6, #0]
 800e86e:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800e872:	4b4a      	ldr	r3, [pc, #296]	; (800e99c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x14c>)
 800e874:	681b      	ldr	r3, [r3, #0]
 800e876:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 800e87a:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
 800e87e:	2300      	movs	r3, #0
 800e880:	e9cd 3303 	strd	r3, r3, [sp, #12]
 800e884:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e888:	2b03      	cmp	r3, #3
 800e88a:	d811      	bhi.n	800e8b0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 800e88c:	e8df f003 	tbb	[pc, r3]
 800e890:	71027102 	.word	0x71027102
 800e894:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800e898:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800e89c:	f8ad 1010 	strh.w	r1, [sp, #16]
 800e8a0:	1a9b      	subs	r3, r3, r2
 800e8a2:	2002      	movs	r0, #2
 800e8a4:	f8ad 2012 	strh.w	r2, [sp, #18]
 800e8a8:	fb93 f3f0 	sdiv	r3, r3, r0
 800e8ac:	f8ad 300e 	strh.w	r3, [sp, #14]
 800e8b0:	ad03      	add	r5, sp, #12
 800e8b2:	e895 0003 	ldmia.w	r5, {r0, r1}
 800e8b6:	f10d 0914 	add.w	r9, sp, #20
 800e8ba:	e889 0003 	stmia.w	r9, {r0, r1}
 800e8be:	4641      	mov	r1, r8
 800e8c0:	4648      	mov	r0, r9
 800e8c2:	f7fc fa5b 	bl	800ad7c <_ZN8touchgfx4RectaNERKS0_>
 800e8c6:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800e8ca:	2b00      	cmp	r3, #0
 800e8cc:	dd4e      	ble.n	800e96c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11c>
 800e8ce:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800e8d2:	2b00      	cmp	r3, #0
 800e8d4:	dd4a      	ble.n	800e96c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11c>
 800e8d6:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 800e8da:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800e8de:	1a9b      	subs	r3, r3, r2
 800e8e0:	f8ad 3014 	strh.w	r3, [sp, #20]
 800e8e4:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 800e8e8:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800e8ec:	1a9b      	subs	r3, r3, r2
 800e8ee:	f8ad 3016 	strh.w	r3, [sp, #22]
 800e8f2:	6823      	ldr	r3, [r4, #0]
 800e8f4:	4629      	mov	r1, r5
 800e8f6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e8f8:	4620      	mov	r0, r4
 800e8fa:	4798      	blx	r3
 800e8fc:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800e900:	2b00      	cmp	r3, #0
 800e902:	d045      	beq.n	800e990 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x140>
 800e904:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800e906:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 800e908:	6833      	ldr	r3, [r6, #0]
 800e90a:	f894 0032 	ldrb.w	r0, [r4, #50]	; 0x32
 800e90e:	f894 4044 	ldrb.w	r4, [r4, #68]	; 0x44
 800e912:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800e916:	785b      	ldrb	r3, [r3, #1]
 800e918:	9209      	str	r2, [sp, #36]	; 0x24
 800e91a:	f3c3 0601 	ubfx	r6, r3, #0, #2
 800e91e:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800e922:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 800e926:	2300      	movs	r3, #0
 800e928:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800e92c:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 800e930:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 800e934:	4b1a      	ldr	r3, [pc, #104]	; (800e9a0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x150>)
 800e936:	9707      	str	r7, [sp, #28]
 800e938:	681b      	ldr	r3, [r3, #0]
 800e93a:	f88d 6020 	strb.w	r6, [sp, #32]
 800e93e:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800e942:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800e946:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800e94a:	b10a      	cbz	r2, 800e950 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x100>
 800e94c:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 800e94e:	b904      	cbnz	r4, 800e952 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
 800e950:	689c      	ldr	r4, [r3, #8]
 800e952:	4b14      	ldr	r3, [pc, #80]	; (800e9a4 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x154>)
 800e954:	6818      	ldr	r0, [r3, #0]
 800e956:	f7f6 fa39 	bl	8004dcc <_ZNK8touchgfx5Texts7getTextEt>
 800e95a:	ab07      	add	r3, sp, #28
 800e95c:	9001      	str	r0, [sp, #4]
 800e95e:	9300      	str	r3, [sp, #0]
 800e960:	e895 0006 	ldmia.w	r5, {r1, r2}
 800e964:	464b      	mov	r3, r9
 800e966:	4620      	mov	r0, r4
 800e968:	f7f6 f9e2 	bl	8004d30 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800e96c:	b00d      	add	sp, #52	; 0x34
 800e96e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e972:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800e976:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 800e97a:	f8ad 2010 	strh.w	r2, [sp, #16]
 800e97e:	1a9b      	subs	r3, r3, r2
 800e980:	2002      	movs	r0, #2
 800e982:	f8ad 1012 	strh.w	r1, [sp, #18]
 800e986:	fb93 f3f0 	sdiv	r3, r3, r0
 800e98a:	f8ad 300c 	strh.w	r3, [sp, #12]
 800e98e:	e78f      	b.n	800e8b0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 800e990:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 800e992:	e7b8      	b.n	800e906 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb6>
 800e994:	20015610 	.word	0x20015610
 800e998:	2001560c 	.word	0x2001560c
 800e99c:	20015614 	.word	0x20015614
 800e9a0:	200155b4 	.word	0x200155b4
 800e9a4:	20015618 	.word	0x20015618

0800e9a8 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 800e9a8:	b510      	push	{r4, lr}
 800e9aa:	2101      	movs	r1, #1
 800e9ac:	4c13      	ldr	r4, [pc, #76]	; (800e9fc <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 800e9ae:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800e9b2:	2200      	movs	r2, #0
 800e9b4:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 800e9b8:	6004      	str	r4, [r0, #0]
 800e9ba:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800e9be:	4c10      	ldr	r4, [pc, #64]	; (800ea00 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 800e9c0:	8082      	strh	r2, [r0, #4]
 800e9c2:	80c2      	strh	r2, [r0, #6]
 800e9c4:	8102      	strh	r2, [r0, #8]
 800e9c6:	8142      	strh	r2, [r0, #10]
 800e9c8:	8182      	strh	r2, [r0, #12]
 800e9ca:	81c2      	strh	r2, [r0, #14]
 800e9cc:	8202      	strh	r2, [r0, #16]
 800e9ce:	8242      	strh	r2, [r0, #18]
 800e9d0:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800e9d4:	61c2      	str	r2, [r0, #28]
 800e9d6:	8402      	strh	r2, [r0, #32]
 800e9d8:	8442      	strh	r2, [r0, #34]	; 0x22
 800e9da:	6282      	str	r2, [r0, #40]	; 0x28
 800e9dc:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 800e9e0:	85c1      	strh	r1, [r0, #46]	; 0x2e
 800e9e2:	8601      	strh	r1, [r0, #48]	; 0x30
 800e9e4:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 800e9e8:	6344      	str	r4, [r0, #52]	; 0x34
 800e9ea:	8701      	strh	r1, [r0, #56]	; 0x38
 800e9ec:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
 800e9f0:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
 800e9f4:	f880 2045 	strb.w	r2, [r0, #69]	; 0x45
 800e9f8:	bd10      	pop	{r4, pc}
 800e9fa:	bf00      	nop
 800e9fc:	0802420c 	.word	0x0802420c
 800ea00:	0802220c 	.word	0x0802220c

0800ea04 <_ZN8touchgfx7OutlineD1Ev>:
 800ea04:	4770      	bx	lr

0800ea06 <_ZN8touchgfx7OutlineD0Ev>:
 800ea06:	b510      	push	{r4, lr}
 800ea08:	2130      	movs	r1, #48	; 0x30
 800ea0a:	4604      	mov	r4, r0
 800ea0c:	f011 fe64 	bl	80206d8 <_ZdlPvj>
 800ea10:	4620      	mov	r0, r4
 800ea12:	bd10      	pop	{r4, pc}

0800ea14 <_ZN8touchgfx7Outline5resetEv>:
 800ea14:	b510      	push	{r4, lr}
 800ea16:	4604      	mov	r4, r0
 800ea18:	f000 fe8c 	bl	800f734 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 800ea1c:	60e0      	str	r0, [r4, #12]
 800ea1e:	f000 fe8f 	bl	800f740 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 800ea22:	68e3      	ldr	r3, [r4, #12]
 800ea24:	6123      	str	r3, [r4, #16]
 800ea26:	08c0      	lsrs	r0, r0, #3
 800ea28:	2200      	movs	r2, #0
 800ea2a:	f647 71ff 	movw	r1, #32767	; 0x7fff
 800ea2e:	3801      	subs	r0, #1
 800ea30:	6060      	str	r0, [r4, #4]
 800ea32:	60a2      	str	r2, [r4, #8]
 800ea34:	8019      	strh	r1, [r3, #0]
 800ea36:	8059      	strh	r1, [r3, #2]
 800ea38:	809a      	strh	r2, [r3, #4]
 800ea3a:	80da      	strh	r2, [r3, #6]
 800ea3c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800ea3e:	f023 0301 	bic.w	r3, r3, #1
 800ea42:	f043 0302 	orr.w	r3, r3, #2
 800ea46:	6263      	str	r3, [r4, #36]	; 0x24
 800ea48:	bd10      	pop	{r4, pc}
	...

0800ea4c <_ZN8touchgfx7OutlineC1Ev>:
 800ea4c:	b510      	push	{r4, lr}
 800ea4e:	4b0a      	ldr	r3, [pc, #40]	; (800ea78 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 800ea50:	6003      	str	r3, [r0, #0]
 800ea52:	2300      	movs	r3, #0
 800ea54:	e9c0 3301 	strd	r3, r3, [r0, #4]
 800ea58:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800ea5c:	e9c0 3305 	strd	r3, r3, [r0, #20]
 800ea60:	e9c0 3307 	strd	r3, r3, [r0, #28]
 800ea64:	6243      	str	r3, [r0, #36]	; 0x24
 800ea66:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 800ea6a:	4604      	mov	r4, r0
 800ea6c:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 800ea70:	f7ff ffd0 	bl	800ea14 <_ZN8touchgfx7Outline5resetEv>
 800ea74:	4620      	mov	r0, r4
 800ea76:	bd10      	pop	{r4, pc}
 800ea78:	08024280 	.word	0x08024280

0800ea7c <_ZN8touchgfx7Outline10renderLineEiiii>:
 800ea7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ea80:	b093      	sub	sp, #76	; 0x4c
 800ea82:	1156      	asrs	r6, r2, #5
 800ea84:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 800ea86:	9305      	str	r3, [sp, #20]
 800ea88:	f004 051f 	and.w	r5, r4, #31
 800ea8c:	1153      	asrs	r3, r2, #5
 800ea8e:	9504      	str	r5, [sp, #16]
 800ea90:	1165      	asrs	r5, r4, #5
 800ea92:	9303      	str	r3, [sp, #12]
 800ea94:	42ae      	cmp	r6, r5
 800ea96:	ea4f 1364 	mov.w	r3, r4, asr #5
 800ea9a:	9306      	str	r3, [sp, #24]
 800ea9c:	f002 031f 	and.w	r3, r2, #31
 800eaa0:	f040 80f8 	bne.w	800ec94 <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 800eaa4:	9c04      	ldr	r4, [sp, #16]
 800eaa6:	9a05      	ldr	r2, [sp, #20]
 800eaa8:	42a3      	cmp	r3, r4
 800eaaa:	ea4f 1e62 	mov.w	lr, r2, asr #5
 800eaae:	6902      	ldr	r2, [r0, #16]
 800eab0:	d125      	bne.n	800eafe <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 800eab2:	f9b2 3000 	ldrsh.w	r3, [r2]
 800eab6:	459e      	cmp	lr, r3
 800eab8:	d103      	bne.n	800eac2 <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 800eaba:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 800eabe:	429e      	cmp	r6, r3
 800eac0:	d035      	beq.n	800eb2e <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800eac2:	88d1      	ldrh	r1, [r2, #6]
 800eac4:	8893      	ldrh	r3, [r2, #4]
 800eac6:	430b      	orrs	r3, r1
 800eac8:	d010      	beq.n	800eaec <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 800eaca:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 800eace:	2b00      	cmp	r3, #0
 800ead0:	db0c      	blt.n	800eaec <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 800ead2:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 800ead4:	428b      	cmp	r3, r1
 800ead6:	da09      	bge.n	800eaec <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 800ead8:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 800eadc:	428b      	cmp	r3, r1
 800eade:	bf38      	it	cc
 800eae0:	3208      	addcc	r2, #8
 800eae2:	f103 0301 	add.w	r3, r3, #1
 800eae6:	bf38      	it	cc
 800eae8:	6102      	strcc	r2, [r0, #16]
 800eaea:	6083      	str	r3, [r0, #8]
 800eaec:	6903      	ldr	r3, [r0, #16]
 800eaee:	9a03      	ldr	r2, [sp, #12]
 800eaf0:	f8a3 e000 	strh.w	lr, [r3]
 800eaf4:	805a      	strh	r2, [r3, #2]
 800eaf6:	2200      	movs	r2, #0
 800eaf8:	809a      	strh	r2, [r3, #4]
 800eafa:	80da      	strh	r2, [r3, #6]
 800eafc:	e017      	b.n	800eb2e <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800eafe:	9c05      	ldr	r4, [sp, #20]
 800eb00:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 800eb04:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 800eb08:	f004 041f 	and.w	r4, r4, #31
 800eb0c:	114e      	asrs	r6, r1, #5
 800eb0e:	9402      	str	r4, [sp, #8]
 800eb10:	9c04      	ldr	r4, [sp, #16]
 800eb12:	4576      	cmp	r6, lr
 800eb14:	f001 0c1f 	and.w	ip, r1, #31
 800eb18:	eba4 0403 	sub.w	r4, r4, r3
 800eb1c:	d10a      	bne.n	800eb34 <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 800eb1e:	9b02      	ldr	r3, [sp, #8]
 800eb20:	449c      	add	ip, r3
 800eb22:	44a0      	add	r8, r4
 800eb24:	fb04 a40c 	mla	r4, r4, ip, sl
 800eb28:	f8a2 8004 	strh.w	r8, [r2, #4]
 800eb2c:	80d4      	strh	r4, [r2, #6]
 800eb2e:	b013      	add	sp, #76	; 0x4c
 800eb30:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800eb34:	9d05      	ldr	r5, [sp, #20]
 800eb36:	1a69      	subs	r1, r5, r1
 800eb38:	bf5b      	ittet	pl
 800eb3a:	f1cc 0520 	rsbpl	r5, ip, #32
 800eb3e:	436c      	mulpl	r4, r5
 800eb40:	2500      	movmi	r5, #0
 800eb42:	2520      	movpl	r5, #32
 800eb44:	bf44      	itt	mi
 800eb46:	fb04 f40c 	mulmi.w	r4, r4, ip
 800eb4a:	4249      	negmi	r1, r1
 800eb4c:	9501      	str	r5, [sp, #4]
 800eb4e:	9f01      	ldr	r7, [sp, #4]
 800eb50:	fb94 f5f1 	sdiv	r5, r4, r1
 800eb54:	fb01 4415 	mls	r4, r1, r5, r4
 800eb58:	bf54      	ite	pl
 800eb5a:	f04f 0901 	movpl.w	r9, #1
 800eb5e:	f04f 39ff 	movmi.w	r9, #4294967295
 800eb62:	2c00      	cmp	r4, #0
 800eb64:	bfb8      	it	lt
 800eb66:	f105 35ff 	addlt.w	r5, r5, #4294967295
 800eb6a:	44bc      	add	ip, r7
 800eb6c:	44a8      	add	r8, r5
 800eb6e:	fb05 ac0c 	mla	ip, r5, ip, sl
 800eb72:	f8a2 8004 	strh.w	r8, [r2, #4]
 800eb76:	f8a2 c006 	strh.w	ip, [r2, #6]
 800eb7a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800eb7e:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 800eb82:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 800eb86:	bfb8      	it	lt
 800eb88:	1864      	addlt	r4, r4, r1
 800eb8a:	ea58 0202 	orrs.w	r2, r8, r2
 800eb8e:	444e      	add	r6, r9
 800eb90:	d011      	beq.n	800ebb6 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 800eb92:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 800eb96:	f1b8 0f00 	cmp.w	r8, #0
 800eb9a:	db0c      	blt.n	800ebb6 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 800eb9c:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 800eb9e:	4590      	cmp	r8, r2
 800eba0:	da09      	bge.n	800ebb6 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 800eba2:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 800eba6:	4590      	cmp	r8, r2
 800eba8:	bf3c      	itt	cc
 800ebaa:	f10c 0208 	addcc.w	r2, ip, #8
 800ebae:	6102      	strcc	r2, [r0, #16]
 800ebb0:	f108 0201 	add.w	r2, r8, #1
 800ebb4:	6082      	str	r2, [r0, #8]
 800ebb6:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800ebba:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800ebbe:	f8ac 6000 	strh.w	r6, [ip]
 800ebc2:	2700      	movs	r7, #0
 800ebc4:	45b6      	cmp	lr, r6
 800ebc6:	f8ac 2002 	strh.w	r2, [ip, #2]
 800ebca:	f8ac 7004 	strh.w	r7, [ip, #4]
 800ebce:	f8ac 7006 	strh.w	r7, [ip, #6]
 800ebd2:	442b      	add	r3, r5
 800ebd4:	d04d      	beq.n	800ec72 <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 800ebd6:	9f04      	ldr	r7, [sp, #16]
 800ebd8:	1aff      	subs	r7, r7, r3
 800ebda:	443d      	add	r5, r7
 800ebdc:	016d      	lsls	r5, r5, #5
 800ebde:	fb95 f8f1 	sdiv	r8, r5, r1
 800ebe2:	fb01 5518 	mls	r5, r1, r8, r5
 800ebe6:	2d00      	cmp	r5, #0
 800ebe8:	bfb8      	it	lt
 800ebea:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800ebee:	f108 0701 	add.w	r7, r8, #1
 800ebf2:	bfb8      	it	lt
 800ebf4:	186d      	addlt	r5, r5, r1
 800ebf6:	1a64      	subs	r4, r4, r1
 800ebf8:	9703      	str	r7, [sp, #12]
 800ebfa:	f04f 0a00 	mov.w	sl, #0
 800ebfe:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800ec02:	1964      	adds	r4, r4, r5
 800ec04:	bf58      	it	pl
 800ec06:	9f03      	ldrpl	r7, [sp, #12]
 800ec08:	f8bc b004 	ldrh.w	fp, [ip, #4]
 800ec0c:	bf48      	it	mi
 800ec0e:	4647      	movmi	r7, r8
 800ec10:	44bb      	add	fp, r7
 800ec12:	f8ac b004 	strh.w	fp, [ip, #4]
 800ec16:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800ec1a:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800ec1e:	f8ac b006 	strh.w	fp, [ip, #6]
 800ec22:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800ec26:	443b      	add	r3, r7
 800ec28:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800ec2c:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800ec30:	bf58      	it	pl
 800ec32:	1a64      	subpl	r4, r4, r1
 800ec34:	ea5b 0707 	orrs.w	r7, fp, r7
 800ec38:	444e      	add	r6, r9
 800ec3a:	d011      	beq.n	800ec60 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 800ec3c:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 800ec40:	f1bb 0f00 	cmp.w	fp, #0
 800ec44:	db0c      	blt.n	800ec60 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 800ec46:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800ec48:	45bb      	cmp	fp, r7
 800ec4a:	da09      	bge.n	800ec60 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 800ec4c:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800ec50:	45bb      	cmp	fp, r7
 800ec52:	bf3c      	itt	cc
 800ec54:	f10c 0708 	addcc.w	r7, ip, #8
 800ec58:	6107      	strcc	r7, [r0, #16]
 800ec5a:	f10b 0701 	add.w	r7, fp, #1
 800ec5e:	6087      	str	r7, [r0, #8]
 800ec60:	6907      	ldr	r7, [r0, #16]
 800ec62:	45b6      	cmp	lr, r6
 800ec64:	803e      	strh	r6, [r7, #0]
 800ec66:	807a      	strh	r2, [r7, #2]
 800ec68:	f8a7 a004 	strh.w	sl, [r7, #4]
 800ec6c:	f8a7 a006 	strh.w	sl, [r7, #6]
 800ec70:	d1c5      	bne.n	800ebfe <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 800ec72:	9a04      	ldr	r2, [sp, #16]
 800ec74:	1ad3      	subs	r3, r2, r3
 800ec76:	6902      	ldr	r2, [r0, #16]
 800ec78:	8891      	ldrh	r1, [r2, #4]
 800ec7a:	88d6      	ldrh	r6, [r2, #6]
 800ec7c:	4419      	add	r1, r3
 800ec7e:	8091      	strh	r1, [r2, #4]
 800ec80:	9902      	ldr	r1, [sp, #8]
 800ec82:	f101 0c20 	add.w	ip, r1, #32
 800ec86:	9901      	ldr	r1, [sp, #4]
 800ec88:	ebac 0c01 	sub.w	ip, ip, r1
 800ec8c:	fb03 630c 	mla	r3, r3, ip, r6
 800ec90:	80d3      	strh	r3, [r2, #6]
 800ec92:	e74c      	b.n	800eb2e <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800ec94:	9d05      	ldr	r5, [sp, #20]
 800ec96:	1aa2      	subs	r2, r4, r2
 800ec98:	eba5 0501 	sub.w	r5, r5, r1
 800ec9c:	9508      	str	r5, [sp, #32]
 800ec9e:	9202      	str	r2, [sp, #8]
 800eca0:	f140 8128 	bpl.w	800eef4 <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 800eca4:	9a03      	ldr	r2, [sp, #12]
 800eca6:	2a00      	cmp	r2, #0
 800eca8:	f6ff af41 	blt.w	800eb2e <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800ecac:	9a02      	ldr	r2, [sp, #8]
 800ecae:	4252      	negs	r2, r2
 800ecb0:	9202      	str	r2, [sp, #8]
 800ecb2:	9a06      	ldr	r2, [sp, #24]
 800ecb4:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 800ecb8:	f04f 34ff 	mov.w	r4, #4294967295
 800ecbc:	9206      	str	r2, [sp, #24]
 800ecbe:	462a      	mov	r2, r5
 800ecc0:	940b      	str	r4, [sp, #44]	; 0x2c
 800ecc2:	435a      	muls	r2, r3
 800ecc4:	2400      	movs	r4, #0
 800ecc6:	9d02      	ldr	r5, [sp, #8]
 800ecc8:	9401      	str	r4, [sp, #4]
 800ecca:	9c02      	ldr	r4, [sp, #8]
 800eccc:	fb92 f4f4 	sdiv	r4, r2, r4
 800ecd0:	fb05 2214 	mls	r2, r5, r4, r2
 800ecd4:	2a00      	cmp	r2, #0
 800ecd6:	9207      	str	r2, [sp, #28]
 800ecd8:	bfbc      	itt	lt
 800ecda:	1952      	addlt	r2, r2, r5
 800ecdc:	9207      	strlt	r2, [sp, #28]
 800ecde:	9a01      	ldr	r2, [sp, #4]
 800ece0:	6905      	ldr	r5, [r0, #16]
 800ece2:	bfb8      	it	lt
 800ece4:	f104 34ff 	addlt.w	r4, r4, #4294967295
 800ece8:	eb04 0901 	add.w	r9, r4, r1
 800ecec:	429a      	cmp	r2, r3
 800ecee:	ea4f 1669 	mov.w	r6, r9, asr #5
 800ecf2:	f040 8112 	bne.w	800ef1a <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 800ecf6:	f9b5 3000 	ldrsh.w	r3, [r5]
 800ecfa:	429e      	cmp	r6, r3
 800ecfc:	d104      	bne.n	800ed08 <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 800ecfe:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800ed02:	9a03      	ldr	r2, [sp, #12]
 800ed04:	429a      	cmp	r2, r3
 800ed06:	d01b      	beq.n	800ed40 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 800ed08:	88ea      	ldrh	r2, [r5, #6]
 800ed0a:	88ab      	ldrh	r3, [r5, #4]
 800ed0c:	4313      	orrs	r3, r2
 800ed0e:	d010      	beq.n	800ed32 <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 800ed10:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800ed14:	2a00      	cmp	r2, #0
 800ed16:	db0c      	blt.n	800ed32 <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 800ed18:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800ed1a:	429a      	cmp	r2, r3
 800ed1c:	da09      	bge.n	800ed32 <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 800ed1e:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 800ed22:	429a      	cmp	r2, r3
 800ed24:	bf38      	it	cc
 800ed26:	3508      	addcc	r5, #8
 800ed28:	f102 0201 	add.w	r2, r2, #1
 800ed2c:	bf38      	it	cc
 800ed2e:	6105      	strcc	r5, [r0, #16]
 800ed30:	6082      	str	r2, [r0, #8]
 800ed32:	6903      	ldr	r3, [r0, #16]
 800ed34:	9a03      	ldr	r2, [sp, #12]
 800ed36:	805a      	strh	r2, [r3, #2]
 800ed38:	2200      	movs	r2, #0
 800ed3a:	801e      	strh	r6, [r3, #0]
 800ed3c:	809a      	strh	r2, [r3, #4]
 800ed3e:	80da      	strh	r2, [r3, #6]
 800ed40:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800ed42:	9a03      	ldr	r2, [sp, #12]
 800ed44:	6901      	ldr	r1, [r0, #16]
 800ed46:	441a      	add	r2, r3
 800ed48:	f9b1 3000 	ldrsh.w	r3, [r1]
 800ed4c:	42b3      	cmp	r3, r6
 800ed4e:	d103      	bne.n	800ed58 <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 800ed50:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800ed54:	429a      	cmp	r2, r3
 800ed56:	d01a      	beq.n	800ed8e <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 800ed58:	88cc      	ldrh	r4, [r1, #6]
 800ed5a:	888b      	ldrh	r3, [r1, #4]
 800ed5c:	4323      	orrs	r3, r4
 800ed5e:	d010      	beq.n	800ed82 <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 800ed60:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 800ed64:	2c00      	cmp	r4, #0
 800ed66:	db0c      	blt.n	800ed82 <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 800ed68:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800ed6a:	429c      	cmp	r4, r3
 800ed6c:	da09      	bge.n	800ed82 <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 800ed6e:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 800ed72:	429c      	cmp	r4, r3
 800ed74:	bf38      	it	cc
 800ed76:	3108      	addcc	r1, #8
 800ed78:	f104 0401 	add.w	r4, r4, #1
 800ed7c:	bf38      	it	cc
 800ed7e:	6101      	strcc	r1, [r0, #16]
 800ed80:	6084      	str	r4, [r0, #8]
 800ed82:	6903      	ldr	r3, [r0, #16]
 800ed84:	2100      	movs	r1, #0
 800ed86:	801e      	strh	r6, [r3, #0]
 800ed88:	805a      	strh	r2, [r3, #2]
 800ed8a:	8099      	strh	r1, [r3, #4]
 800ed8c:	80d9      	strh	r1, [r3, #6]
 800ed8e:	9b06      	ldr	r3, [sp, #24]
 800ed90:	4293      	cmp	r3, r2
 800ed92:	f000 8082 	beq.w	800ee9a <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 800ed96:	9b08      	ldr	r3, [sp, #32]
 800ed98:	9c02      	ldr	r4, [sp, #8]
 800ed9a:	9902      	ldr	r1, [sp, #8]
 800ed9c:	015b      	lsls	r3, r3, #5
 800ed9e:	fb93 f1f1 	sdiv	r1, r3, r1
 800eda2:	fb04 3311 	mls	r3, r4, r1, r3
 800eda6:	2b00      	cmp	r3, #0
 800eda8:	9103      	str	r1, [sp, #12]
 800edaa:	9308      	str	r3, [sp, #32]
 800edac:	da04      	bge.n	800edb8 <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 800edae:	1e4b      	subs	r3, r1, #1
 800edb0:	9303      	str	r3, [sp, #12]
 800edb2:	9b08      	ldr	r3, [sp, #32]
 800edb4:	4423      	add	r3, r4
 800edb6:	9308      	str	r3, [sp, #32]
 800edb8:	9b07      	ldr	r3, [sp, #28]
 800edba:	9902      	ldr	r1, [sp, #8]
 800edbc:	1a5b      	subs	r3, r3, r1
 800edbe:	9307      	str	r3, [sp, #28]
 800edc0:	9b01      	ldr	r3, [sp, #4]
 800edc2:	f1c3 0320 	rsb	r3, r3, #32
 800edc6:	930e      	str	r3, [sp, #56]	; 0x38
 800edc8:	990e      	ldr	r1, [sp, #56]	; 0x38
 800edca:	9b01      	ldr	r3, [sp, #4]
 800edcc:	1a5b      	subs	r3, r3, r1
 800edce:	464f      	mov	r7, r9
 800edd0:	930a      	str	r3, [sp, #40]	; 0x28
 800edd2:	2600      	movs	r6, #0
 800edd4:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 800edd8:	185b      	adds	r3, r3, r1
 800edda:	bf58      	it	pl
 800eddc:	9902      	ldrpl	r1, [sp, #8]
 800edde:	9307      	str	r3, [sp, #28]
 800ede0:	bf5d      	ittte	pl
 800ede2:	1a5b      	subpl	r3, r3, r1
 800ede4:	9307      	strpl	r3, [sp, #28]
 800ede6:	9b03      	ldrpl	r3, [sp, #12]
 800ede8:	9903      	ldrmi	r1, [sp, #12]
 800edea:	bf58      	it	pl
 800edec:	1c59      	addpl	r1, r3, #1
 800edee:	4489      	add	r9, r1
 800edf0:	2a00      	cmp	r2, #0
 800edf2:	ea4f 1a69 	mov.w	sl, r9, asr #5
 800edf6:	db2e      	blt.n	800ee56 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800edf8:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800edfa:	4293      	cmp	r3, r2
 800edfc:	dd2b      	ble.n	800ee56 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800edfe:	9c01      	ldr	r4, [sp, #4]
 800ee00:	6905      	ldr	r5, [r0, #16]
 800ee02:	46a0      	mov	r8, r4
 800ee04:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 800ee06:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 800ee0a:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 800ee0e:	45a0      	cmp	r8, r4
 800ee10:	f040 814f 	bne.w	800f0b2 <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 800ee14:	f9b5 1000 	ldrsh.w	r1, [r5]
 800ee18:	4551      	cmp	r1, sl
 800ee1a:	d103      	bne.n	800ee24 <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 800ee1c:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 800ee20:	4291      	cmp	r1, r2
 800ee22:	d018      	beq.n	800ee56 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800ee24:	ea5c 010e 	orrs.w	r1, ip, lr
 800ee28:	d00f      	beq.n	800ee4a <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 800ee2a:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 800ee2e:	2900      	cmp	r1, #0
 800ee30:	db0b      	blt.n	800ee4a <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 800ee32:	428b      	cmp	r3, r1
 800ee34:	dd09      	ble.n	800ee4a <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 800ee36:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 800ee3a:	4299      	cmp	r1, r3
 800ee3c:	bf38      	it	cc
 800ee3e:	3508      	addcc	r5, #8
 800ee40:	f101 0101 	add.w	r1, r1, #1
 800ee44:	bf38      	it	cc
 800ee46:	6105      	strcc	r5, [r0, #16]
 800ee48:	6081      	str	r1, [r0, #8]
 800ee4a:	6903      	ldr	r3, [r0, #16]
 800ee4c:	f8a3 a000 	strh.w	sl, [r3]
 800ee50:	805a      	strh	r2, [r3, #2]
 800ee52:	809e      	strh	r6, [r3, #4]
 800ee54:	80de      	strh	r6, [r3, #6]
 800ee56:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800ee58:	6901      	ldr	r1, [r0, #16]
 800ee5a:	441a      	add	r2, r3
 800ee5c:	88cc      	ldrh	r4, [r1, #6]
 800ee5e:	888b      	ldrh	r3, [r1, #4]
 800ee60:	4323      	orrs	r3, r4
 800ee62:	d010      	beq.n	800ee86 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 800ee64:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 800ee68:	2c00      	cmp	r4, #0
 800ee6a:	db0c      	blt.n	800ee86 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 800ee6c:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800ee6e:	429c      	cmp	r4, r3
 800ee70:	da09      	bge.n	800ee86 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 800ee72:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 800ee76:	429c      	cmp	r4, r3
 800ee78:	bf38      	it	cc
 800ee7a:	3108      	addcc	r1, #8
 800ee7c:	f104 0401 	add.w	r4, r4, #1
 800ee80:	bf38      	it	cc
 800ee82:	6101      	strcc	r1, [r0, #16]
 800ee84:	6084      	str	r4, [r0, #8]
 800ee86:	6903      	ldr	r3, [r0, #16]
 800ee88:	f8a3 a000 	strh.w	sl, [r3]
 800ee8c:	805a      	strh	r2, [r3, #2]
 800ee8e:	809e      	strh	r6, [r3, #4]
 800ee90:	80de      	strh	r6, [r3, #6]
 800ee92:	9b06      	ldr	r3, [sp, #24]
 800ee94:	4293      	cmp	r3, r2
 800ee96:	464f      	mov	r7, r9
 800ee98:	d19c      	bne.n	800edd4 <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 800ee9a:	9b01      	ldr	r3, [sp, #4]
 800ee9c:	6907      	ldr	r7, [r0, #16]
 800ee9e:	f1c3 0620 	rsb	r6, r3, #32
 800eea2:	9b05      	ldr	r3, [sp, #20]
 800eea4:	ea4f 1e63 	mov.w	lr, r3, asr #5
 800eea8:	9b04      	ldr	r3, [sp, #16]
 800eeaa:	429e      	cmp	r6, r3
 800eeac:	f040 81cc 	bne.w	800f248 <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 800eeb0:	f9b7 3000 	ldrsh.w	r3, [r7]
 800eeb4:	459e      	cmp	lr, r3
 800eeb6:	d104      	bne.n	800eec2 <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 800eeb8:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800eebc:	429a      	cmp	r2, r3
 800eebe:	f43f ae36 	beq.w	800eb2e <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800eec2:	88f9      	ldrh	r1, [r7, #6]
 800eec4:	88bb      	ldrh	r3, [r7, #4]
 800eec6:	430b      	orrs	r3, r1
 800eec8:	d010      	beq.n	800eeec <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 800eeca:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800eece:	2b00      	cmp	r3, #0
 800eed0:	db0c      	blt.n	800eeec <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 800eed2:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 800eed4:	428b      	cmp	r3, r1
 800eed6:	da09      	bge.n	800eeec <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 800eed8:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 800eedc:	428b      	cmp	r3, r1
 800eede:	bf38      	it	cc
 800eee0:	3708      	addcc	r7, #8
 800eee2:	f103 0301 	add.w	r3, r3, #1
 800eee6:	bf38      	it	cc
 800eee8:	6107      	strcc	r7, [r0, #16]
 800eeea:	6083      	str	r3, [r0, #8]
 800eeec:	6903      	ldr	r3, [r0, #16]
 800eeee:	f8a3 e000 	strh.w	lr, [r3]
 800eef2:	e5ff      	b.n	800eaf4 <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 800eef4:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 800eef6:	9c03      	ldr	r4, [sp, #12]
 800eef8:	42a2      	cmp	r2, r4
 800eefa:	f6ff ae18 	blt.w	800eb2e <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800eefe:	9c06      	ldr	r4, [sp, #24]
 800ef00:	42a2      	cmp	r2, r4
 800ef02:	bfb8      	it	lt
 800ef04:	3201      	addlt	r2, #1
 800ef06:	9c08      	ldr	r4, [sp, #32]
 800ef08:	bfb8      	it	lt
 800ef0a:	9206      	strlt	r2, [sp, #24]
 800ef0c:	f1c3 0220 	rsb	r2, r3, #32
 800ef10:	4362      	muls	r2, r4
 800ef12:	2401      	movs	r4, #1
 800ef14:	940b      	str	r4, [sp, #44]	; 0x2c
 800ef16:	2420      	movs	r4, #32
 800ef18:	e6d5      	b.n	800ecc6 <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 800ef1a:	f009 021f 	and.w	r2, r9, #31
 800ef1e:	ea4f 1861 	mov.w	r8, r1, asr #5
 800ef22:	920c      	str	r2, [sp, #48]	; 0x30
 800ef24:	9a01      	ldr	r2, [sp, #4]
 800ef26:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 800ef2a:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 800ef2e:	45b0      	cmp	r8, r6
 800ef30:	f001 011f 	and.w	r1, r1, #31
 800ef34:	eba2 0203 	sub.w	r2, r2, r3
 800ef38:	d108      	bne.n	800ef4c <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 800ef3a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800ef3c:	4419      	add	r1, r3
 800ef3e:	4496      	add	lr, r2
 800ef40:	fb02 a101 	mla	r1, r2, r1, sl
 800ef44:	f8a5 e004 	strh.w	lr, [r5, #4]
 800ef48:	80e9      	strh	r1, [r5, #6]
 800ef4a:	e6f9      	b.n	800ed40 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 800ef4c:	2c00      	cmp	r4, #0
 800ef4e:	f2c0 80a9 	blt.w	800f0a4 <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 800ef52:	2701      	movs	r7, #1
 800ef54:	f1c1 0c20 	rsb	ip, r1, #32
 800ef58:	970a      	str	r7, [sp, #40]	; 0x28
 800ef5a:	fb02 f20c 	mul.w	r2, r2, ip
 800ef5e:	2720      	movs	r7, #32
 800ef60:	9709      	str	r7, [sp, #36]	; 0x24
 800ef62:	fb92 fcf4 	sdiv	ip, r2, r4
 800ef66:	9f09      	ldr	r7, [sp, #36]	; 0x24
 800ef68:	fb04 221c 	mls	r2, r4, ip, r2
 800ef6c:	2a00      	cmp	r2, #0
 800ef6e:	bfb8      	it	lt
 800ef70:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 800ef74:	4439      	add	r1, r7
 800ef76:	fb0c a101 	mla	r1, ip, r1, sl
 800ef7a:	80e9      	strh	r1, [r5, #6]
 800ef7c:	44e6      	add	lr, ip
 800ef7e:	990a      	ldr	r1, [sp, #40]	; 0x28
 800ef80:	f8a5 e004 	strh.w	lr, [r5, #4]
 800ef84:	eb08 0501 	add.w	r5, r8, r1
 800ef88:	6901      	ldr	r1, [r0, #16]
 800ef8a:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 800ef8e:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 800ef92:	bfb8      	it	lt
 800ef94:	1912      	addlt	r2, r2, r4
 800ef96:	ea58 070e 	orrs.w	r7, r8, lr
 800ef9a:	d010      	beq.n	800efbe <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 800ef9c:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 800efa0:	f1be 0f00 	cmp.w	lr, #0
 800efa4:	db0b      	blt.n	800efbe <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 800efa6:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800efa8:	45be      	cmp	lr, r7
 800efaa:	da08      	bge.n	800efbe <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 800efac:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 800efb0:	45be      	cmp	lr, r7
 800efb2:	bf3c      	itt	cc
 800efb4:	3108      	addcc	r1, #8
 800efb6:	6101      	strcc	r1, [r0, #16]
 800efb8:	f10e 0101 	add.w	r1, lr, #1
 800efbc:	6081      	str	r1, [r0, #8]
 800efbe:	6901      	ldr	r1, [r0, #16]
 800efc0:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 800efc4:	800d      	strh	r5, [r1, #0]
 800efc6:	f04f 0e00 	mov.w	lr, #0
 800efca:	42ae      	cmp	r6, r5
 800efcc:	f8a1 8002 	strh.w	r8, [r1, #2]
 800efd0:	f8a1 e004 	strh.w	lr, [r1, #4]
 800efd4:	f8a1 e006 	strh.w	lr, [r1, #6]
 800efd8:	4463      	add	r3, ip
 800efda:	d054      	beq.n	800f086 <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 800efdc:	9901      	ldr	r1, [sp, #4]
 800efde:	1ac9      	subs	r1, r1, r3
 800efe0:	4461      	add	r1, ip
 800efe2:	0149      	lsls	r1, r1, #5
 800efe4:	fb91 fef4 	sdiv	lr, r1, r4
 800efe8:	fb04 111e 	mls	r1, r4, lr, r1
 800efec:	2900      	cmp	r1, #0
 800efee:	bfb8      	it	lt
 800eff0:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 800eff4:	f10e 0701 	add.w	r7, lr, #1
 800eff8:	bfb8      	it	lt
 800effa:	1909      	addlt	r1, r1, r4
 800effc:	1b12      	subs	r2, r2, r4
 800effe:	970d      	str	r7, [sp, #52]	; 0x34
 800f000:	f8d0 a010 	ldr.w	sl, [r0, #16]
 800f004:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 800f006:	f8ba b004 	ldrh.w	fp, [sl, #4]
 800f00a:	1852      	adds	r2, r2, r1
 800f00c:	bf54      	ite	pl
 800f00e:	f8dd c034 	ldrpl.w	ip, [sp, #52]	; 0x34
 800f012:	46f4      	movmi	ip, lr
 800f014:	44e3      	add	fp, ip
 800f016:	f8aa b004 	strh.w	fp, [sl, #4]
 800f01a:	f8ba b006 	ldrh.w	fp, [sl, #6]
 800f01e:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 800f022:	f8aa b006 	strh.w	fp, [sl, #6]
 800f026:	4463      	add	r3, ip
 800f028:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800f02c:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800f030:	f8bc a004 	ldrh.w	sl, [ip, #4]
 800f034:	bf58      	it	pl
 800f036:	1b12      	subpl	r2, r2, r4
 800f038:	443d      	add	r5, r7
 800f03a:	ea5b 070a 	orrs.w	r7, fp, sl
 800f03e:	d014      	beq.n	800f06a <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 800f040:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 800f044:	f1ba 0f00 	cmp.w	sl, #0
 800f048:	db0f      	blt.n	800f06a <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 800f04a:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800f04c:	45ba      	cmp	sl, r7
 800f04e:	da0c      	bge.n	800f06a <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 800f050:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 800f054:	45ba      	cmp	sl, r7
 800f056:	bf38      	it	cc
 800f058:	f10c 0c08 	addcc.w	ip, ip, #8
 800f05c:	f10a 0a01 	add.w	sl, sl, #1
 800f060:	bf38      	it	cc
 800f062:	f8c0 c010 	strcc.w	ip, [r0, #16]
 800f066:	f8c0 a008 	str.w	sl, [r0, #8]
 800f06a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800f06e:	f04f 0700 	mov.w	r7, #0
 800f072:	42ae      	cmp	r6, r5
 800f074:	f8ac 5000 	strh.w	r5, [ip]
 800f078:	f8ac 8002 	strh.w	r8, [ip, #2]
 800f07c:	f8ac 7004 	strh.w	r7, [ip, #4]
 800f080:	f8ac 7006 	strh.w	r7, [ip, #6]
 800f084:	d1bc      	bne.n	800f000 <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 800f086:	6904      	ldr	r4, [r0, #16]
 800f088:	9a01      	ldr	r2, [sp, #4]
 800f08a:	990c      	ldr	r1, [sp, #48]	; 0x30
 800f08c:	1ad3      	subs	r3, r2, r3
 800f08e:	88a2      	ldrh	r2, [r4, #4]
 800f090:	441a      	add	r2, r3
 800f092:	80a2      	strh	r2, [r4, #4]
 800f094:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800f096:	3120      	adds	r1, #32
 800f098:	1a89      	subs	r1, r1, r2
 800f09a:	88e2      	ldrh	r2, [r4, #6]
 800f09c:	fb03 2301 	mla	r3, r3, r1, r2
 800f0a0:	80e3      	strh	r3, [r4, #6]
 800f0a2:	e64d      	b.n	800ed40 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 800f0a4:	f04f 37ff 	mov.w	r7, #4294967295
 800f0a8:	970a      	str	r7, [sp, #40]	; 0x28
 800f0aa:	434a      	muls	r2, r1
 800f0ac:	4264      	negs	r4, r4
 800f0ae:	2700      	movs	r7, #0
 800f0b0:	e756      	b.n	800ef60 <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 800f0b2:	ea4f 1867 	mov.w	r8, r7, asr #5
 800f0b6:	f009 031f 	and.w	r3, r9, #31
 800f0ba:	45d0      	cmp	r8, sl
 800f0bc:	f007 071f 	and.w	r7, r7, #31
 800f0c0:	930f      	str	r3, [sp, #60]	; 0x3c
 800f0c2:	fa1f fc8c 	uxth.w	ip, ip
 800f0c6:	fa1f fe8e 	uxth.w	lr, lr
 800f0ca:	d10a      	bne.n	800f0e2 <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 800f0cc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800f0ce:	449c      	add	ip, r3
 800f0d0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800f0d2:	f8a5 c004 	strh.w	ip, [r5, #4]
 800f0d6:	441f      	add	r7, r3
 800f0d8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800f0da:	fb03 e707 	mla	r7, r3, r7, lr
 800f0de:	80ef      	strh	r7, [r5, #6]
 800f0e0:	e6b9      	b.n	800ee56 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800f0e2:	2900      	cmp	r1, #0
 800f0e4:	f2c0 80a8 	blt.w	800f238 <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 800f0e8:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800f0ea:	f1c7 0320 	rsb	r3, r7, #32
 800f0ee:	4363      	muls	r3, r4
 800f0f0:	2401      	movs	r4, #1
 800f0f2:	940d      	str	r4, [sp, #52]	; 0x34
 800f0f4:	2420      	movs	r4, #32
 800f0f6:	940c      	str	r4, [sp, #48]	; 0x30
 800f0f8:	fb93 f4f1 	sdiv	r4, r3, r1
 800f0fc:	fb01 3b14 	mls	fp, r1, r4, r3
 800f100:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800f102:	f1bb 0f00 	cmp.w	fp, #0
 800f106:	bfb8      	it	lt
 800f108:	f104 34ff 	addlt.w	r4, r4, #4294967295
 800f10c:	441f      	add	r7, r3
 800f10e:	fb04 e707 	mla	r7, r4, r7, lr
 800f112:	44a4      	add	ip, r4
 800f114:	f8a5 c004 	strh.w	ip, [r5, #4]
 800f118:	80ef      	strh	r7, [r5, #6]
 800f11a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800f11e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f120:	f8bc e006 	ldrh.w	lr, [ip, #6]
 800f124:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800f128:	bfb8      	it	lt
 800f12a:	448b      	addlt	fp, r1
 800f12c:	eb08 0503 	add.w	r5, r8, r3
 800f130:	ea5e 0307 	orrs.w	r3, lr, r7
 800f134:	d011      	beq.n	800f15a <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 800f136:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 800f13a:	f1be 0f00 	cmp.w	lr, #0
 800f13e:	db0c      	blt.n	800f15a <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 800f140:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800f142:	45be      	cmp	lr, r7
 800f144:	da09      	bge.n	800f15a <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 800f146:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 800f14a:	45be      	cmp	lr, r7
 800f14c:	bf3c      	itt	cc
 800f14e:	f10c 0708 	addcc.w	r7, ip, #8
 800f152:	6107      	strcc	r7, [r0, #16]
 800f154:	f10e 0701 	add.w	r7, lr, #1
 800f158:	6087      	str	r7, [r0, #8]
 800f15a:	6907      	ldr	r7, [r0, #16]
 800f15c:	b213      	sxth	r3, r2
 800f15e:	9310      	str	r3, [sp, #64]	; 0x40
 800f160:	807b      	strh	r3, [r7, #2]
 800f162:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f164:	803d      	strh	r5, [r7, #0]
 800f166:	4555      	cmp	r5, sl
 800f168:	80be      	strh	r6, [r7, #4]
 800f16a:	80fe      	strh	r6, [r7, #6]
 800f16c:	eb04 0c03 	add.w	ip, r4, r3
 800f170:	d051      	beq.n	800f216 <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 800f172:	9b01      	ldr	r3, [sp, #4]
 800f174:	eba3 070c 	sub.w	r7, r3, ip
 800f178:	443c      	add	r4, r7
 800f17a:	0164      	lsls	r4, r4, #5
 800f17c:	fb94 f8f1 	sdiv	r8, r4, r1
 800f180:	fb01 4418 	mls	r4, r1, r8, r4
 800f184:	2c00      	cmp	r4, #0
 800f186:	bfb8      	it	lt
 800f188:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800f18c:	ebab 0301 	sub.w	r3, fp, r1
 800f190:	f108 0701 	add.w	r7, r8, #1
 800f194:	bfb8      	it	lt
 800f196:	1864      	addlt	r4, r4, r1
 800f198:	9309      	str	r3, [sp, #36]	; 0x24
 800f19a:	9711      	str	r7, [sp, #68]	; 0x44
 800f19c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f19e:	f8d0 e010 	ldr.w	lr, [r0, #16]
 800f1a2:	191b      	adds	r3, r3, r4
 800f1a4:	bf58      	it	pl
 800f1a6:	9f11      	ldrpl	r7, [sp, #68]	; 0x44
 800f1a8:	f8be b004 	ldrh.w	fp, [lr, #4]
 800f1ac:	9309      	str	r3, [sp, #36]	; 0x24
 800f1ae:	bf48      	it	mi
 800f1b0:	4647      	movmi	r7, r8
 800f1b2:	44bb      	add	fp, r7
 800f1b4:	f8ae b004 	strh.w	fp, [lr, #4]
 800f1b8:	f8be b006 	ldrh.w	fp, [lr, #6]
 800f1bc:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800f1c0:	f8ae b006 	strh.w	fp, [lr, #6]
 800f1c4:	f8d0 e010 	ldr.w	lr, [r0, #16]
 800f1c8:	44bc      	add	ip, r7
 800f1ca:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 800f1cc:	f8be b006 	ldrh.w	fp, [lr, #6]
 800f1d0:	443d      	add	r5, r7
 800f1d2:	f8be 7004 	ldrh.w	r7, [lr, #4]
 800f1d6:	bf5c      	itt	pl
 800f1d8:	1a5b      	subpl	r3, r3, r1
 800f1da:	9309      	strpl	r3, [sp, #36]	; 0x24
 800f1dc:	ea5b 0307 	orrs.w	r3, fp, r7
 800f1e0:	d011      	beq.n	800f206 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 800f1e2:	f9be b002 	ldrsh.w	fp, [lr, #2]
 800f1e6:	f1bb 0f00 	cmp.w	fp, #0
 800f1ea:	db0c      	blt.n	800f206 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 800f1ec:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800f1ee:	45bb      	cmp	fp, r7
 800f1f0:	da09      	bge.n	800f206 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 800f1f2:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800f1f6:	45bb      	cmp	fp, r7
 800f1f8:	bf3c      	itt	cc
 800f1fa:	f10e 0708 	addcc.w	r7, lr, #8
 800f1fe:	6107      	strcc	r7, [r0, #16]
 800f200:	f10b 0701 	add.w	r7, fp, #1
 800f204:	6087      	str	r7, [r0, #8]
 800f206:	6907      	ldr	r7, [r0, #16]
 800f208:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f20a:	803d      	strh	r5, [r7, #0]
 800f20c:	4555      	cmp	r5, sl
 800f20e:	807b      	strh	r3, [r7, #2]
 800f210:	80be      	strh	r6, [r7, #4]
 800f212:	80fe      	strh	r6, [r7, #6]
 800f214:	d1c2      	bne.n	800f19c <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 800f216:	9b01      	ldr	r3, [sp, #4]
 800f218:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 800f21a:	eba3 0c0c 	sub.w	ip, r3, ip
 800f21e:	6903      	ldr	r3, [r0, #16]
 800f220:	8899      	ldrh	r1, [r3, #4]
 800f222:	4461      	add	r1, ip
 800f224:	8099      	strh	r1, [r3, #4]
 800f226:	990c      	ldr	r1, [sp, #48]	; 0x30
 800f228:	3720      	adds	r7, #32
 800f22a:	1a7f      	subs	r7, r7, r1
 800f22c:	88d9      	ldrh	r1, [r3, #6]
 800f22e:	fb0c 1c07 	mla	ip, ip, r7, r1
 800f232:	f8a3 c006 	strh.w	ip, [r3, #6]
 800f236:	e60e      	b.n	800ee56 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800f238:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800f23a:	f04f 34ff 	mov.w	r4, #4294967295
 800f23e:	940d      	str	r4, [sp, #52]	; 0x34
 800f240:	437b      	muls	r3, r7
 800f242:	4249      	negs	r1, r1
 800f244:	2400      	movs	r4, #0
 800f246:	e756      	b.n	800f0f6 <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 800f248:	9905      	ldr	r1, [sp, #20]
 800f24a:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 800f24e:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 800f252:	f001 011f 	and.w	r1, r1, #31
 800f256:	ea4f 1b69 	mov.w	fp, r9, asr #5
 800f25a:	9102      	str	r1, [sp, #8]
 800f25c:	9904      	ldr	r1, [sp, #16]
 800f25e:	45f3      	cmp	fp, lr
 800f260:	f009 0c1f 	and.w	ip, r9, #31
 800f264:	eba1 0406 	sub.w	r4, r1, r6
 800f268:	d108      	bne.n	800f27c <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 800f26a:	9b02      	ldr	r3, [sp, #8]
 800f26c:	449c      	add	ip, r3
 800f26e:	44a0      	add	r8, r4
 800f270:	fb04 a40c 	mla	r4, r4, ip, sl
 800f274:	f8a7 8004 	strh.w	r8, [r7, #4]
 800f278:	80fc      	strh	r4, [r7, #6]
 800f27a:	e458      	b.n	800eb2e <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800f27c:	9905      	ldr	r1, [sp, #20]
 800f27e:	ebb1 0109 	subs.w	r1, r1, r9
 800f282:	bf5b      	ittet	pl
 800f284:	f1cc 0520 	rsbpl	r5, ip, #32
 800f288:	436c      	mulpl	r4, r5
 800f28a:	2500      	movmi	r5, #0
 800f28c:	2520      	movpl	r5, #32
 800f28e:	bf44      	itt	mi
 800f290:	fb04 f40c 	mulmi.w	r4, r4, ip
 800f294:	4249      	negmi	r1, r1
 800f296:	9501      	str	r5, [sp, #4]
 800f298:	9b01      	ldr	r3, [sp, #4]
 800f29a:	fb94 f5f1 	sdiv	r5, r4, r1
 800f29e:	fb01 4415 	mls	r4, r1, r5, r4
 800f2a2:	bf54      	ite	pl
 800f2a4:	f04f 0901 	movpl.w	r9, #1
 800f2a8:	f04f 39ff 	movmi.w	r9, #4294967295
 800f2ac:	2c00      	cmp	r4, #0
 800f2ae:	bfb8      	it	lt
 800f2b0:	f105 35ff 	addlt.w	r5, r5, #4294967295
 800f2b4:	449c      	add	ip, r3
 800f2b6:	44a8      	add	r8, r5
 800f2b8:	fb05 ac0c 	mla	ip, r5, ip, sl
 800f2bc:	f8a7 8004 	strh.w	r8, [r7, #4]
 800f2c0:	f8a7 c006 	strh.w	ip, [r7, #6]
 800f2c4:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800f2c8:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 800f2cc:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800f2d0:	bfb8      	it	lt
 800f2d2:	1864      	addlt	r4, r4, r1
 800f2d4:	ea58 0707 	orrs.w	r7, r8, r7
 800f2d8:	eb0b 0309 	add.w	r3, fp, r9
 800f2dc:	d011      	beq.n	800f302 <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 800f2de:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 800f2e2:	f1b8 0f00 	cmp.w	r8, #0
 800f2e6:	db0c      	blt.n	800f302 <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 800f2e8:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800f2ea:	45b8      	cmp	r8, r7
 800f2ec:	da09      	bge.n	800f302 <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 800f2ee:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 800f2f2:	45b8      	cmp	r8, r7
 800f2f4:	bf3c      	itt	cc
 800f2f6:	f10c 0708 	addcc.w	r7, ip, #8
 800f2fa:	6107      	strcc	r7, [r0, #16]
 800f2fc:	f108 0701 	add.w	r7, r8, #1
 800f300:	6087      	str	r7, [r0, #8]
 800f302:	6907      	ldr	r7, [r0, #16]
 800f304:	f04f 0c00 	mov.w	ip, #0
 800f308:	b212      	sxth	r2, r2
 800f30a:	459e      	cmp	lr, r3
 800f30c:	803b      	strh	r3, [r7, #0]
 800f30e:	807a      	strh	r2, [r7, #2]
 800f310:	f8a7 c004 	strh.w	ip, [r7, #4]
 800f314:	f8a7 c006 	strh.w	ip, [r7, #6]
 800f318:	442e      	add	r6, r5
 800f31a:	d04d      	beq.n	800f3b8 <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 800f31c:	9f04      	ldr	r7, [sp, #16]
 800f31e:	1bbf      	subs	r7, r7, r6
 800f320:	443d      	add	r5, r7
 800f322:	016d      	lsls	r5, r5, #5
 800f324:	fb95 f8f1 	sdiv	r8, r5, r1
 800f328:	fb01 5518 	mls	r5, r1, r8, r5
 800f32c:	4565      	cmp	r5, ip
 800f32e:	bfb8      	it	lt
 800f330:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800f334:	f108 0701 	add.w	r7, r8, #1
 800f338:	bfb8      	it	lt
 800f33a:	186d      	addlt	r5, r5, r1
 800f33c:	1a64      	subs	r4, r4, r1
 800f33e:	9703      	str	r7, [sp, #12]
 800f340:	f04f 0a00 	mov.w	sl, #0
 800f344:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800f348:	1964      	adds	r4, r4, r5
 800f34a:	bf58      	it	pl
 800f34c:	9f03      	ldrpl	r7, [sp, #12]
 800f34e:	f8bc b004 	ldrh.w	fp, [ip, #4]
 800f352:	bf48      	it	mi
 800f354:	4647      	movmi	r7, r8
 800f356:	44bb      	add	fp, r7
 800f358:	f8ac b004 	strh.w	fp, [ip, #4]
 800f35c:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800f360:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800f364:	f8ac b006 	strh.w	fp, [ip, #6]
 800f368:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800f36c:	443e      	add	r6, r7
 800f36e:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800f372:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800f376:	bf58      	it	pl
 800f378:	1a64      	subpl	r4, r4, r1
 800f37a:	ea5b 0707 	orrs.w	r7, fp, r7
 800f37e:	444b      	add	r3, r9
 800f380:	d011      	beq.n	800f3a6 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 800f382:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 800f386:	f1bb 0f00 	cmp.w	fp, #0
 800f38a:	db0c      	blt.n	800f3a6 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 800f38c:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800f38e:	45bb      	cmp	fp, r7
 800f390:	da09      	bge.n	800f3a6 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 800f392:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800f396:	45bb      	cmp	fp, r7
 800f398:	bf3c      	itt	cc
 800f39a:	f10c 0708 	addcc.w	r7, ip, #8
 800f39e:	6107      	strcc	r7, [r0, #16]
 800f3a0:	f10b 0701 	add.w	r7, fp, #1
 800f3a4:	6087      	str	r7, [r0, #8]
 800f3a6:	6907      	ldr	r7, [r0, #16]
 800f3a8:	459e      	cmp	lr, r3
 800f3aa:	803b      	strh	r3, [r7, #0]
 800f3ac:	807a      	strh	r2, [r7, #2]
 800f3ae:	f8a7 a004 	strh.w	sl, [r7, #4]
 800f3b2:	f8a7 a006 	strh.w	sl, [r7, #6]
 800f3b6:	d1c5      	bne.n	800f344 <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 800f3b8:	9b04      	ldr	r3, [sp, #16]
 800f3ba:	1b9e      	subs	r6, r3, r6
 800f3bc:	6903      	ldr	r3, [r0, #16]
 800f3be:	889a      	ldrh	r2, [r3, #4]
 800f3c0:	4432      	add	r2, r6
 800f3c2:	809a      	strh	r2, [r3, #4]
 800f3c4:	9a02      	ldr	r2, [sp, #8]
 800f3c6:	f102 0c20 	add.w	ip, r2, #32
 800f3ca:	9a01      	ldr	r2, [sp, #4]
 800f3cc:	ebac 0c02 	sub.w	ip, ip, r2
 800f3d0:	88da      	ldrh	r2, [r3, #6]
 800f3d2:	fb06 260c 	mla	r6, r6, ip, r2
 800f3d6:	80de      	strh	r6, [r3, #6]
 800f3d8:	f7ff bba9 	b.w	800eb2e <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

0800f3dc <_ZN8touchgfx7Outline6lineToEii>:
 800f3dc:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800f3de:	079b      	lsls	r3, r3, #30
 800f3e0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800f3e2:	460e      	mov	r6, r1
 800f3e4:	4615      	mov	r5, r2
 800f3e6:	d511      	bpl.n	800f40c <_ZN8touchgfx7Outline6lineToEii+0x30>
 800f3e8:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 800f3ec:	ea86 0701 	eor.w	r7, r6, r1
 800f3f0:	ea85 0302 	eor.w	r3, r5, r2
 800f3f4:	433b      	orrs	r3, r7
 800f3f6:	d009      	beq.n	800f40c <_ZN8touchgfx7Outline6lineToEii+0x30>
 800f3f8:	4633      	mov	r3, r6
 800f3fa:	9500      	str	r5, [sp, #0]
 800f3fc:	f7ff fb3e 	bl	800ea7c <_ZN8touchgfx7Outline10renderLineEiiii>
 800f400:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800f402:	e9c0 6505 	strd	r6, r5, [r0, #20]
 800f406:	f043 0301 	orr.w	r3, r3, #1
 800f40a:	6243      	str	r3, [r0, #36]	; 0x24
 800f40c:	b003      	add	sp, #12
 800f40e:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800f410 <_ZN8touchgfx7Outline6moveToEii>:
 800f410:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f412:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800f414:	4615      	mov	r5, r2
 800f416:	079a      	lsls	r2, r3, #30
 800f418:	4604      	mov	r4, r0
 800f41a:	460e      	mov	r6, r1
 800f41c:	d401      	bmi.n	800f422 <_ZN8touchgfx7Outline6moveToEii+0x12>
 800f41e:	f7ff faf9 	bl	800ea14 <_ZN8touchgfx7Outline5resetEv>
 800f422:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800f424:	07db      	lsls	r3, r3, #31
 800f426:	d504      	bpl.n	800f432 <_ZN8touchgfx7Outline6moveToEii+0x22>
 800f428:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 800f42c:	4620      	mov	r0, r4
 800f42e:	f7ff ffd5 	bl	800f3dc <_ZN8touchgfx7Outline6lineToEii>
 800f432:	6923      	ldr	r3, [r4, #16]
 800f434:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f438:	1170      	asrs	r0, r6, #5
 800f43a:	4290      	cmp	r0, r2
 800f43c:	ea4f 1165 	mov.w	r1, r5, asr #5
 800f440:	d103      	bne.n	800f44a <_ZN8touchgfx7Outline6moveToEii+0x3a>
 800f442:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800f446:	4291      	cmp	r1, r2
 800f448:	d01a      	beq.n	800f480 <_ZN8touchgfx7Outline6moveToEii+0x70>
 800f44a:	88df      	ldrh	r7, [r3, #6]
 800f44c:	889a      	ldrh	r2, [r3, #4]
 800f44e:	433a      	orrs	r2, r7
 800f450:	d010      	beq.n	800f474 <_ZN8touchgfx7Outline6moveToEii+0x64>
 800f452:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800f456:	2a00      	cmp	r2, #0
 800f458:	db0c      	blt.n	800f474 <_ZN8touchgfx7Outline6moveToEii+0x64>
 800f45a:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 800f45c:	42ba      	cmp	r2, r7
 800f45e:	da09      	bge.n	800f474 <_ZN8touchgfx7Outline6moveToEii+0x64>
 800f460:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 800f464:	42ba      	cmp	r2, r7
 800f466:	bf38      	it	cc
 800f468:	3308      	addcc	r3, #8
 800f46a:	f102 0201 	add.w	r2, r2, #1
 800f46e:	bf38      	it	cc
 800f470:	6123      	strcc	r3, [r4, #16]
 800f472:	60a2      	str	r2, [r4, #8]
 800f474:	6923      	ldr	r3, [r4, #16]
 800f476:	2200      	movs	r2, #0
 800f478:	8018      	strh	r0, [r3, #0]
 800f47a:	8059      	strh	r1, [r3, #2]
 800f47c:	809a      	strh	r2, [r3, #4]
 800f47e:	80da      	strh	r2, [r3, #6]
 800f480:	6166      	str	r6, [r4, #20]
 800f482:	e9c4 5606 	strd	r5, r6, [r4, #24]
 800f486:	6225      	str	r5, [r4, #32]
 800f488:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800f48a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 800f48a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f48e:	b0d0      	sub	sp, #320	; 0x140
 800f490:	466c      	mov	r4, sp
 800f492:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 800f496:	4627      	mov	r7, r4
 800f498:	1a0d      	subs	r5, r1, r0
 800f49a:	2d48      	cmp	r5, #72	; 0x48
 800f49c:	f100 0308 	add.w	r3, r0, #8
 800f4a0:	f340 80d5 	ble.w	800f64e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 800f4a4:	112d      	asrs	r5, r5, #4
 800f4a6:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 800f4aa:	f9b0 9000 	ldrsh.w	r9, [r0]
 800f4ae:	6816      	ldr	r6, [r2, #0]
 800f4b0:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 800f4b4:	6006      	str	r6, [r0, #0]
 800f4b6:	6856      	ldr	r6, [r2, #4]
 800f4b8:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 800f4bc:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 800f4c0:	6046      	str	r6, [r0, #4]
 800f4c2:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 800f4c6:	f8a2 8002 	strh.w	r8, [r2, #2]
 800f4ca:	f8a2 e004 	strh.w	lr, [r2, #4]
 800f4ce:	f8a2 c006 	strh.w	ip, [r2, #6]
 800f4d2:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 800f4d6:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 800f4da:	4565      	cmp	r5, ip
 800f4dc:	f1a1 0208 	sub.w	r2, r1, #8
 800f4e0:	db06      	blt.n	800f4f0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 800f4e2:	d119      	bne.n	800f518 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 800f4e4:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 800f4e8:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 800f4ec:	42ae      	cmp	r6, r5
 800f4ee:	dd13      	ble.n	800f518 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 800f4f0:	460e      	mov	r6, r1
 800f4f2:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 800f4f6:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 800f4fa:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 800f4fe:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 800f502:	601d      	str	r5, [r3, #0]
 800f504:	6875      	ldr	r5, [r6, #4]
 800f506:	605d      	str	r5, [r3, #4]
 800f508:	f821 9c08 	strh.w	r9, [r1, #-8]
 800f50c:	f821 cc06 	strh.w	ip, [r1, #-6]
 800f510:	f821 8c04 	strh.w	r8, [r1, #-4]
 800f514:	f821 ec02 	strh.w	lr, [r1, #-2]
 800f518:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800f51c:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 800f520:	42ae      	cmp	r6, r5
 800f522:	db06      	blt.n	800f532 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 800f524:	d116      	bne.n	800f554 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 800f526:	f9b0 c000 	ldrsh.w	ip, [r0]
 800f52a:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 800f52e:	45ac      	cmp	ip, r5
 800f530:	da10      	bge.n	800f554 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 800f532:	681d      	ldr	r5, [r3, #0]
 800f534:	f9b0 8000 	ldrsh.w	r8, [r0]
 800f538:	6005      	str	r5, [r0, #0]
 800f53a:	685d      	ldr	r5, [r3, #4]
 800f53c:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 800f540:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 800f544:	f8a0 8008 	strh.w	r8, [r0, #8]
 800f548:	6045      	str	r5, [r0, #4]
 800f54a:	8146      	strh	r6, [r0, #10]
 800f54c:	f8a0 e00c 	strh.w	lr, [r0, #12]
 800f550:	f8a0 c00e 	strh.w	ip, [r0, #14]
 800f554:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 800f558:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 800f55c:	4565      	cmp	r5, ip
 800f55e:	db06      	blt.n	800f56e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 800f560:	d119      	bne.n	800f596 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800f562:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 800f566:	f9b0 5000 	ldrsh.w	r5, [r0]
 800f56a:	42ae      	cmp	r6, r5
 800f56c:	da13      	bge.n	800f596 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800f56e:	460e      	mov	r6, r1
 800f570:	f9b0 9000 	ldrsh.w	r9, [r0]
 800f574:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 800f578:	6005      	str	r5, [r0, #0]
 800f57a:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 800f57e:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 800f582:	6875      	ldr	r5, [r6, #4]
 800f584:	6045      	str	r5, [r0, #4]
 800f586:	f821 9c08 	strh.w	r9, [r1, #-8]
 800f58a:	f821 cc06 	strh.w	ip, [r1, #-6]
 800f58e:	f821 8c04 	strh.w	r8, [r1, #-4]
 800f592:	f821 ec02 	strh.w	lr, [r1, #-2]
 800f596:	3308      	adds	r3, #8
 800f598:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 800f59c:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 800f5a0:	45e6      	cmp	lr, ip
 800f5a2:	dbf8      	blt.n	800f596 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800f5a4:	d105      	bne.n	800f5b2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800f5a6:	f9b3 6000 	ldrsh.w	r6, [r3]
 800f5aa:	f9b0 5000 	ldrsh.w	r5, [r0]
 800f5ae:	42ae      	cmp	r6, r5
 800f5b0:	dbf1      	blt.n	800f596 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800f5b2:	4615      	mov	r5, r2
 800f5b4:	3a08      	subs	r2, #8
 800f5b6:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 800f5ba:	45b4      	cmp	ip, r6
 800f5bc:	dbf9      	blt.n	800f5b2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800f5be:	d105      	bne.n	800f5cc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 800f5c0:	f9b0 8000 	ldrsh.w	r8, [r0]
 800f5c4:	f9b2 6000 	ldrsh.w	r6, [r2]
 800f5c8:	45b0      	cmp	r8, r6
 800f5ca:	dbf2      	blt.n	800f5b2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800f5cc:	4293      	cmp	r3, r2
 800f5ce:	f1a5 0608 	sub.w	r6, r5, #8
 800f5d2:	d816      	bhi.n	800f602 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 800f5d4:	f8d6 c000 	ldr.w	ip, [r6]
 800f5d8:	f9b3 a000 	ldrsh.w	sl, [r3]
 800f5dc:	f8c3 c000 	str.w	ip, [r3]
 800f5e0:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 800f5e4:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 800f5e8:	f8d6 c004 	ldr.w	ip, [r6, #4]
 800f5ec:	f8c3 c004 	str.w	ip, [r3, #4]
 800f5f0:	f825 ac08 	strh.w	sl, [r5, #-8]
 800f5f4:	f825 ec06 	strh.w	lr, [r5, #-6]
 800f5f8:	f825 9c04 	strh.w	r9, [r5, #-4]
 800f5fc:	f825 8c02 	strh.w	r8, [r5, #-2]
 800f600:	e7c9      	b.n	800f596 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800f602:	f8d6 e000 	ldr.w	lr, [r6]
 800f606:	f9b0 a000 	ldrsh.w	sl, [r0]
 800f60a:	f8c0 e000 	str.w	lr, [r0]
 800f60e:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 800f612:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 800f616:	f8d6 e004 	ldr.w	lr, [r6, #4]
 800f61a:	f8c0 e004 	str.w	lr, [r0, #4]
 800f61e:	f825 ac08 	strh.w	sl, [r5, #-8]
 800f622:	f825 cc06 	strh.w	ip, [r5, #-6]
 800f626:	f825 9c04 	strh.w	r9, [r5, #-4]
 800f62a:	f825 8c02 	strh.w	r8, [r5, #-2]
 800f62e:	1acd      	subs	r5, r1, r3
 800f630:	1a16      	subs	r6, r2, r0
 800f632:	10ed      	asrs	r5, r5, #3
 800f634:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 800f638:	bfb5      	itete	lt
 800f63a:	e9c4 0200 	strdlt	r0, r2, [r4]
 800f63e:	e9c4 3100 	strdge	r3, r1, [r4]
 800f642:	460a      	movlt	r2, r1
 800f644:	4603      	movge	r3, r0
 800f646:	3408      	adds	r4, #8
 800f648:	4618      	mov	r0, r3
 800f64a:	4611      	mov	r1, r2
 800f64c:	e724      	b.n	800f498 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 800f64e:	4299      	cmp	r1, r3
 800f650:	d928      	bls.n	800f6a4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 800f652:	f1a3 0210 	sub.w	r2, r3, #16
 800f656:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 800f65a:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 800f65e:	45ac      	cmp	ip, r5
 800f660:	db06      	blt.n	800f670 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 800f662:	d11d      	bne.n	800f6a0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 800f664:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 800f668:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 800f66c:	42ae      	cmp	r6, r5
 800f66e:	da17      	bge.n	800f6a0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 800f670:	4615      	mov	r5, r2
 800f672:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 800f676:	f855 6f08 	ldr.w	r6, [r5, #8]!
 800f67a:	6116      	str	r6, [r2, #16]
 800f67c:	686e      	ldr	r6, [r5, #4]
 800f67e:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 800f682:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 800f686:	f8a2 9008 	strh.w	r9, [r2, #8]
 800f68a:	42a8      	cmp	r0, r5
 800f68c:	6156      	str	r6, [r2, #20]
 800f68e:	f8a2 c00a 	strh.w	ip, [r2, #10]
 800f692:	f8a2 800c 	strh.w	r8, [r2, #12]
 800f696:	f8a2 e00e 	strh.w	lr, [r2, #14]
 800f69a:	f1a2 0208 	sub.w	r2, r2, #8
 800f69e:	d1da      	bne.n	800f656 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 800f6a0:	3308      	adds	r3, #8
 800f6a2:	e7d4      	b.n	800f64e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 800f6a4:	42bc      	cmp	r4, r7
 800f6a6:	d903      	bls.n	800f6b0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 800f6a8:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 800f6ac:	3c08      	subs	r4, #8
 800f6ae:	e6f3      	b.n	800f498 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 800f6b0:	b050      	add	sp, #320	; 0x140
 800f6b2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0800f6b6 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 800f6b6:	b510      	push	{r4, lr}
 800f6b8:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800f6ba:	07da      	lsls	r2, r3, #31
 800f6bc:	4604      	mov	r4, r0
 800f6be:	d507      	bpl.n	800f6d0 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 800f6c0:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 800f6c4:	f7ff fe8a 	bl	800f3dc <_ZN8touchgfx7Outline6lineToEii>
 800f6c8:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800f6ca:	f023 0301 	bic.w	r3, r3, #1
 800f6ce:	6243      	str	r3, [r0, #36]	; 0x24
 800f6d0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800f6d2:	079b      	lsls	r3, r3, #30
 800f6d4:	d521      	bpl.n	800f71a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 800f6d6:	6923      	ldr	r3, [r4, #16]
 800f6d8:	88d9      	ldrh	r1, [r3, #6]
 800f6da:	889a      	ldrh	r2, [r3, #4]
 800f6dc:	430a      	orrs	r2, r1
 800f6de:	d010      	beq.n	800f702 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800f6e0:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800f6e4:	2a00      	cmp	r2, #0
 800f6e6:	db0c      	blt.n	800f702 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800f6e8:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800f6ea:	428a      	cmp	r2, r1
 800f6ec:	da09      	bge.n	800f702 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800f6ee:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 800f6f2:	4291      	cmp	r1, r2
 800f6f4:	bf88      	it	hi
 800f6f6:	3308      	addhi	r3, #8
 800f6f8:	f102 0201 	add.w	r2, r2, #1
 800f6fc:	bf88      	it	hi
 800f6fe:	6123      	strhi	r3, [r4, #16]
 800f700:	60a2      	str	r2, [r4, #8]
 800f702:	68a1      	ldr	r1, [r4, #8]
 800f704:	b129      	cbz	r1, 800f712 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 800f706:	6863      	ldr	r3, [r4, #4]
 800f708:	4299      	cmp	r1, r3
 800f70a:	d802      	bhi.n	800f712 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 800f70c:	68e0      	ldr	r0, [r4, #12]
 800f70e:	f7ff febc 	bl	800f48a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 800f712:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800f714:	f023 0302 	bic.w	r3, r3, #2
 800f718:	6263      	str	r3, [r4, #36]	; 0x24
 800f71a:	68e0      	ldr	r0, [r4, #12]
 800f71c:	bd10      	pop	{r4, pc}
	...

0800f720 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 800f720:	4b02      	ldr	r3, [pc, #8]	; (800f72c <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 800f722:	6018      	str	r0, [r3, #0]
 800f724:	4b02      	ldr	r3, [pc, #8]	; (800f730 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 800f726:	6019      	str	r1, [r3, #0]
 800f728:	4770      	bx	lr
 800f72a:	bf00      	nop
 800f72c:	200155bc 	.word	0x200155bc
 800f730:	200155c0 	.word	0x200155c0

0800f734 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 800f734:	4b01      	ldr	r3, [pc, #4]	; (800f73c <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 800f736:	6818      	ldr	r0, [r3, #0]
 800f738:	4770      	bx	lr
 800f73a:	bf00      	nop
 800f73c:	200155bc 	.word	0x200155bc

0800f740 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 800f740:	4b01      	ldr	r3, [pc, #4]	; (800f748 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 800f742:	6818      	ldr	r0, [r3, #0]
 800f744:	4770      	bx	lr
 800f746:	bf00      	nop
 800f748:	200155c0 	.word	0x200155c0

0800f74c <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 800f74c:	b510      	push	{r4, lr}
 800f74e:	6803      	ldr	r3, [r0, #0]
 800f750:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f752:	460c      	mov	r4, r1
 800f754:	4798      	blx	r3
 800f756:	1b03      	subs	r3, r0, r4
 800f758:	4258      	negs	r0, r3
 800f75a:	4158      	adcs	r0, r3
 800f75c:	bd10      	pop	{r4, pc}
	...

0800f760 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 800f760:	4b01      	ldr	r3, [pc, #4]	; (800f768 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 800f762:	6019      	str	r1, [r3, #0]
 800f764:	4770      	bx	lr
 800f766:	bf00      	nop
 800f768:	200155c4 	.word	0x200155c4

0800f76c <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800f76c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f770:	4696      	mov	lr, r2
 800f772:	4605      	mov	r5, r0
 800f774:	4614      	mov	r4, r2
 800f776:	460e      	mov	r6, r1
 800f778:	461f      	mov	r7, r3
 800f77a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800f77e:	b097      	sub	sp, #92	; 0x5c
 800f780:	f10d 0c1c 	add.w	ip, sp, #28
 800f784:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800f788:	f8de 3000 	ldr.w	r3, [lr]
 800f78c:	f8cc 3000 	str.w	r3, [ip]
 800f790:	f104 0e14 	add.w	lr, r4, #20
 800f794:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800f798:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800f79c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800f7a0:	f8de 3000 	ldr.w	r3, [lr]
 800f7a4:	f8cc 3000 	str.w	r3, [ip]
 800f7a8:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800f7ac:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800f7b0:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800f7b4:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800f7b8:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 800f7bc:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 800f7c0:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 800f7c4:	f8de 3000 	ldr.w	r3, [lr]
 800f7c8:	f8cc 3000 	str.w	r3, [ip]
 800f7cc:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800f7ce:	682b      	ldr	r3, [r5, #0]
 800f7d0:	9201      	str	r2, [sp, #4]
 800f7d2:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800f7d6:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800f7d8:	9200      	str	r2, [sp, #0]
 800f7da:	f8cd 8008 	str.w	r8, [sp, #8]
 800f7de:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 800f7e2:	aa07      	add	r2, sp, #28
 800f7e4:	463b      	mov	r3, r7
 800f7e6:	4631      	mov	r1, r6
 800f7e8:	4628      	mov	r0, r5
 800f7ea:	47d8      	blx	fp
 800f7ec:	46a6      	mov	lr, r4
 800f7ee:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800f7f2:	f10d 0c1c 	add.w	ip, sp, #28
 800f7f6:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800f7fa:	f8de 3000 	ldr.w	r3, [lr]
 800f7fe:	f8cc 3000 	str.w	r3, [ip]
 800f802:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800f806:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800f80a:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800f80e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800f812:	343c      	adds	r4, #60	; 0x3c
 800f814:	f8de 3000 	ldr.w	r3, [lr]
 800f818:	f8cc 3000 	str.w	r3, [ip]
 800f81c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800f81e:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800f822:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800f826:	6823      	ldr	r3, [r4, #0]
 800f828:	f8cc 3000 	str.w	r3, [ip]
 800f82c:	682b      	ldr	r3, [r5, #0]
 800f82e:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800f832:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800f834:	9201      	str	r2, [sp, #4]
 800f836:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800f838:	9200      	str	r2, [sp, #0]
 800f83a:	f8cd 8008 	str.w	r8, [sp, #8]
 800f83e:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 800f840:	aa07      	add	r2, sp, #28
 800f842:	463b      	mov	r3, r7
 800f844:	4631      	mov	r1, r6
 800f846:	4628      	mov	r0, r5
 800f848:	47a0      	blx	r4
 800f84a:	b017      	add	sp, #92	; 0x5c
 800f84c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800f850 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800f850:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f854:	b08d      	sub	sp, #52	; 0x34
 800f856:	4688      	mov	r8, r1
 800f858:	9916      	ldr	r1, [sp, #88]	; 0x58
 800f85a:	f8d3 c000 	ldr.w	ip, [r3]
 800f85e:	680f      	ldr	r7, [r1, #0]
 800f860:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 800f864:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 800f868:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 800f86c:	edd3 6a07 	vldr	s13, [r3, #28]
 800f870:	9918      	ldr	r1, [sp, #96]	; 0x60
 800f872:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 800f876:	f9b1 9000 	ldrsh.w	r9, [r1]
 800f87a:	f9ba 1000 	ldrsh.w	r1, [sl]
 800f87e:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 800f882:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 800f886:	eba7 070c 	sub.w	r7, r7, ip
 800f88a:	42bc      	cmp	r4, r7
 800f88c:	bfa8      	it	ge
 800f88e:	463c      	movge	r4, r7
 800f890:	ee07 4a90 	vmov	s15, r4
 800f894:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800f898:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 800f89c:	ee25 4a04 	vmul.f32	s8, s10, s8
 800f8a0:	ee65 4a24 	vmul.f32	s9, s10, s9
 800f8a4:	ee25 5a27 	vmul.f32	s10, s10, s15
 800f8a8:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 800f8ac:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800f8b0:	eb09 0e0c 	add.w	lr, r9, ip
 800f8b4:	4571      	cmp	r1, lr
 800f8b6:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800f8ba:	ee32 1a05 	vadd.f32	s2, s4, s10
 800f8be:	ee36 0a84 	vadd.f32	s0, s13, s8
 800f8c2:	ee61 1a87 	vmul.f32	s3, s3, s14
 800f8c6:	ee22 2a07 	vmul.f32	s4, s4, s14
 800f8ca:	f340 808d 	ble.w	800f9e8 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 800f8ce:	eba1 060e 	sub.w	r6, r1, lr
 800f8d2:	fb96 f5f4 	sdiv	r5, r6, r4
 800f8d6:	ee07 5a10 	vmov	s14, r5
 800f8da:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f8de:	2d00      	cmp	r5, #0
 800f8e0:	fb04 6615 	mls	r6, r4, r5, r6
 800f8e4:	eea7 0a04 	vfma.f32	s0, s14, s8
 800f8e8:	eee7 0a24 	vfma.f32	s1, s14, s9
 800f8ec:	eea7 1a05 	vfma.f32	s2, s14, s10
 800f8f0:	dd13      	ble.n	800f91a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 800f8f2:	ee70 6a44 	vsub.f32	s13, s0, s8
 800f8f6:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800f8fa:	eef5 6a40 	vcmp.f32	s13, #0.0
 800f8fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f902:	bf18      	it	ne
 800f904:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800f908:	ee31 2a45 	vsub.f32	s4, s2, s10
 800f90c:	bf08      	it	eq
 800f90e:	eeb0 7a67 	vmoveq.f32	s14, s15
 800f912:	ee61 1a87 	vmul.f32	s3, s3, s14
 800f916:	ee22 2a07 	vmul.f32	s4, s4, s14
 800f91a:	fb05 f204 	mul.w	r2, r5, r4
 800f91e:	1abf      	subs	r7, r7, r2
 800f920:	4494      	add	ip, r2
 800f922:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 800f926:	4411      	add	r1, r2
 800f928:	eb09 020c 	add.w	r2, r9, ip
 800f92c:	443a      	add	r2, r7
 800f92e:	b209      	sxth	r1, r1
 800f930:	428a      	cmp	r2, r1
 800f932:	bfc4      	itt	gt
 800f934:	eba1 0209 	subgt.w	r2, r1, r9
 800f938:	eba2 070c 	subgt.w	r7, r2, ip
 800f93c:	2f00      	cmp	r7, #0
 800f93e:	dd50      	ble.n	800f9e2 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 800f940:	fb97 f1f4 	sdiv	r1, r7, r4
 800f944:	fb04 7211 	mls	r2, r4, r1, r7
 800f948:	b90a      	cbnz	r2, 800f94e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 800f94a:	3901      	subs	r1, #1
 800f94c:	4622      	mov	r2, r4
 800f94e:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800f952:	6840      	ldr	r0, [r0, #4]
 800f954:	900b      	str	r0, [sp, #44]	; 0x2c
 800f956:	f8d0 a000 	ldr.w	sl, [r0]
 800f95a:	9817      	ldr	r0, [sp, #92]	; 0x5c
 800f95c:	9008      	str	r0, [sp, #32]
 800f95e:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 800f962:	9818      	ldr	r0, [sp, #96]	; 0x60
 800f964:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 800f968:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 800f96c:	695b      	ldr	r3, [r3, #20]
 800f96e:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800f970:	445b      	add	r3, fp
 800f972:	eef0 6a42 	vmov.f32	s13, s4
 800f976:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800f97a:	ee21 3a23 	vmul.f32	s6, s2, s7
 800f97e:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800f982:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800f986:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800f98a:	9307      	str	r3, [sp, #28]
 800f98c:	ee17 7a90 	vmov	r7, s15
 800f990:	ee73 7a42 	vsub.f32	s15, s6, s4
 800f994:	eeb0 7a61 	vmov.f32	s14, s3
 800f998:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800f99c:	ee16 3a90 	vmov	r3, s13
 800f9a0:	fb97 f7f4 	sdiv	r7, r7, r4
 800f9a4:	ee17 ca90 	vmov	ip, s15
 800f9a8:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800f9ac:	fb9c fcf4 	sdiv	ip, ip, r4
 800f9b0:	fb0c 3306 	mla	r3, ip, r6, r3
 800f9b4:	9302      	str	r3, [sp, #8]
 800f9b6:	ee17 3a10 	vmov	r3, s14
 800f9ba:	44b6      	add	lr, r6
 800f9bc:	fb04 e505 	mla	r5, r4, r5, lr
 800f9c0:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 800f9c4:	fb07 3706 	mla	r7, r7, r6, r3
 800f9c8:	e9cd 8505 	strd	r8, r5, [sp, #20]
 800f9cc:	e9cd 4700 	strd	r4, r7, [sp]
 800f9d0:	2900      	cmp	r1, #0
 800f9d2:	bfcc      	ite	gt
 800f9d4:	46a1      	movgt	r9, r4
 800f9d6:	4691      	movle	r9, r2
 800f9d8:	eba9 0306 	sub.w	r3, r9, r6
 800f9dc:	f8da 4008 	ldr.w	r4, [sl, #8]
 800f9e0:	47a0      	blx	r4
 800f9e2:	b00d      	add	sp, #52	; 0x34
 800f9e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f9e8:	2500      	movs	r5, #0
 800f9ea:	462e      	mov	r6, r5
 800f9ec:	e799      	b.n	800f922 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

0800f9f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800f9f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f9f4:	b0db      	sub	sp, #364	; 0x16c
 800f9f6:	461d      	mov	r5, r3
 800f9f8:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 800f9fc:	930a      	str	r3, [sp, #40]	; 0x28
 800f9fe:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 800fa02:	930b      	str	r3, [sp, #44]	; 0x2c
 800fa04:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 800fa08:	9310      	str	r3, [sp, #64]	; 0x40
 800fa0a:	6803      	ldr	r3, [r0, #0]
 800fa0c:	910f      	str	r1, [sp, #60]	; 0x3c
 800fa0e:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 800fa10:	9009      	str	r0, [sp, #36]	; 0x24
 800fa12:	4614      	mov	r4, r2
 800fa14:	4629      	mov	r1, r5
 800fa16:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 800fa1a:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 800fa1e:	47b8      	blx	r7
 800fa20:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800fa22:	6058      	str	r0, [r3, #4]
 800fa24:	2800      	cmp	r0, #0
 800fa26:	f000 83a1 	beq.w	801016c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fa2a:	682b      	ldr	r3, [r5, #0]
 800fa2c:	9314      	str	r3, [sp, #80]	; 0x50
 800fa2e:	686b      	ldr	r3, [r5, #4]
 800fa30:	9315      	str	r3, [sp, #84]	; 0x54
 800fa32:	4bc4      	ldr	r3, [pc, #784]	; (800fd44 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 800fa34:	ed94 7a02 	vldr	s14, [r4, #8]
 800fa38:	7819      	ldrb	r1, [r3, #0]
 800fa3a:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 800fa3e:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 800fa42:	2900      	cmp	r1, #0
 800fa44:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800fa48:	bf16      	itet	ne
 800fa4a:	4619      	movne	r1, r3
 800fa4c:	4611      	moveq	r1, r2
 800fa4e:	4613      	movne	r3, r2
 800fa50:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800fa54:	9116      	str	r1, [sp, #88]	; 0x58
 800fa56:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 800fa5a:	f240 8387 	bls.w	801016c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fa5e:	ed94 7a07 	vldr	s14, [r4, #28]
 800fa62:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800fa66:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800fa6a:	f240 837f 	bls.w	801016c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fa6e:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 800fa72:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800fa76:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800fa7a:	f240 8377 	bls.w	801016c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fa7e:	6822      	ldr	r2, [r4, #0]
 800fa80:	4bb1      	ldr	r3, [pc, #708]	; (800fd48 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 800fa82:	429a      	cmp	r2, r3
 800fa84:	f2c0 8372 	blt.w	801016c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fa88:	49b0      	ldr	r1, [pc, #704]	; (800fd4c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 800fa8a:	6963      	ldr	r3, [r4, #20]
 800fa8c:	428a      	cmp	r2, r1
 800fa8e:	f300 836d 	bgt.w	801016c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fa92:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800fa96:	48ae      	ldr	r0, [pc, #696]	; (800fd50 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 800fa98:	33ff      	adds	r3, #255	; 0xff
 800fa9a:	4283      	cmp	r3, r0
 800fa9c:	f200 8366 	bhi.w	801016c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800faa0:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800faa2:	4dac      	ldr	r5, [pc, #688]	; (800fd54 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 800faa4:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800faa8:	33ff      	adds	r3, #255	; 0xff
 800faaa:	42ab      	cmp	r3, r5
 800faac:	f200 835e 	bhi.w	801016c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fab0:	6862      	ldr	r2, [r4, #4]
 800fab2:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 800fab6:	33ff      	adds	r3, #255	; 0xff
 800fab8:	4283      	cmp	r3, r0
 800faba:	f200 8357 	bhi.w	801016c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fabe:	69a1      	ldr	r1, [r4, #24]
 800fac0:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 800fac4:	33ff      	adds	r3, #255	; 0xff
 800fac6:	4283      	cmp	r3, r0
 800fac8:	f200 8350 	bhi.w	801016c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800facc:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800face:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 800fad2:	30ff      	adds	r0, #255	; 0xff
 800fad4:	42a8      	cmp	r0, r5
 800fad6:	f200 8349 	bhi.w	801016c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fada:	428a      	cmp	r2, r1
 800fadc:	f280 8110 	bge.w	800fd00 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 800fae0:	429a      	cmp	r2, r3
 800fae2:	f300 8119 	bgt.w	800fd18 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 800fae6:	4299      	cmp	r1, r3
 800fae8:	f280 811d 	bge.w	800fd26 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 800faec:	2502      	movs	r5, #2
 800faee:	2701      	movs	r7, #1
 800faf0:	46a9      	mov	r9, r5
 800faf2:	46b8      	mov	r8, r7
 800faf4:	f04f 0a00 	mov.w	sl, #0
 800faf8:	4621      	mov	r1, r4
 800fafa:	a849      	add	r0, sp, #292	; 0x124
 800fafc:	f003 fcfe 	bl	80134fc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 800fb00:	4622      	mov	r2, r4
 800fb02:	4653      	mov	r3, sl
 800fb04:	a949      	add	r1, sp, #292	; 0x124
 800fb06:	f8cd 9000 	str.w	r9, [sp]
 800fb0a:	a819      	add	r0, sp, #100	; 0x64
 800fb0c:	f003 fe26 	bl	801375c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800fb10:	4622      	mov	r2, r4
 800fb12:	4653      	mov	r3, sl
 800fb14:	a949      	add	r1, sp, #292	; 0x124
 800fb16:	f8cd 8000 	str.w	r8, [sp]
 800fb1a:	a829      	add	r0, sp, #164	; 0xa4
 800fb1c:	f003 fe1e 	bl	801375c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800fb20:	4643      	mov	r3, r8
 800fb22:	4622      	mov	r2, r4
 800fb24:	a949      	add	r1, sp, #292	; 0x124
 800fb26:	f8cd 9000 	str.w	r9, [sp]
 800fb2a:	a839      	add	r0, sp, #228	; 0xe4
 800fb2c:	f003 fe16 	bl	801375c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800fb30:	42af      	cmp	r7, r5
 800fb32:	bfb5      	itete	lt
 800fb34:	2300      	movlt	r3, #0
 800fb36:	2301      	movge	r3, #1
 800fb38:	930e      	strlt	r3, [sp, #56]	; 0x38
 800fb3a:	930e      	strge	r3, [sp, #56]	; 0x38
 800fb3c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800fb3e:	e893 0003 	ldmia.w	r3, {r0, r1}
 800fb42:	af12      	add	r7, sp, #72	; 0x48
 800fb44:	bfb9      	ittee	lt
 800fb46:	ad29      	addlt	r5, sp, #164	; 0xa4
 800fb48:	ac19      	addlt	r4, sp, #100	; 0x64
 800fb4a:	ad19      	addge	r5, sp, #100	; 0x64
 800fb4c:	ac29      	addge	r4, sp, #164	; 0xa4
 800fb4e:	e887 0003 	stmia.w	r7, {r0, r1}
 800fb52:	b928      	cbnz	r0, 800fb60 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 800fb54:	4b80      	ldr	r3, [pc, #512]	; (800fd58 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 800fb56:	6818      	ldr	r0, [r3, #0]
 800fb58:	6803      	ldr	r3, [r0, #0]
 800fb5a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800fb5c:	4798      	blx	r3
 800fb5e:	6038      	str	r0, [r7, #0]
 800fb60:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800fb62:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800fb66:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800fb6a:	930c      	str	r3, [sp, #48]	; 0x30
 800fb6c:	990c      	ldr	r1, [sp, #48]	; 0x30
 800fb6e:	6963      	ldr	r3, [r4, #20]
 800fb70:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 800fb72:	440b      	add	r3, r1
 800fb74:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800fb78:	4408      	add	r0, r1
 800fb7a:	b200      	sxth	r0, r0
 800fb7c:	4283      	cmp	r3, r0
 800fb7e:	900d      	str	r0, [sp, #52]	; 0x34
 800fb80:	f280 80dd 	bge.w	800fd3e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 800fb84:	428b      	cmp	r3, r1
 800fb86:	da08      	bge.n	800fb9a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800fb88:	2a00      	cmp	r2, #0
 800fb8a:	dd06      	ble.n	800fb9a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800fb8c:	1acb      	subs	r3, r1, r3
 800fb8e:	429a      	cmp	r2, r3
 800fb90:	f2c0 80e4 	blt.w	800fd5c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 800fb94:	2b00      	cmp	r3, #0
 800fb96:	f300 80e2 	bgt.w	800fd5e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 800fb9a:	6967      	ldr	r7, [r4, #20]
 800fb9c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800fb9e:	443b      	add	r3, r7
 800fba0:	461f      	mov	r7, r3
 800fba2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800fba4:	1bdf      	subs	r7, r3, r7
 800fba6:	4297      	cmp	r7, r2
 800fba8:	bfa8      	it	ge
 800fbaa:	4617      	movge	r7, r2
 800fbac:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800fbb0:	2f00      	cmp	r7, #0
 800fbb2:	f340 8166 	ble.w	800fe82 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 800fbb6:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800fbb8:	6829      	ldr	r1, [r5, #0]
 800fbba:	f9b3 2000 	ldrsh.w	r2, [r3]
 800fbbe:	f9bb 3000 	ldrsh.w	r3, [fp]
 800fbc2:	6820      	ldr	r0, [r4, #0]
 800fbc4:	4411      	add	r1, r2
 800fbc6:	4299      	cmp	r1, r3
 800fbc8:	dd1a      	ble.n	800fc00 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800fbca:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800fbce:	440b      	add	r3, r1
 800fbd0:	4402      	add	r2, r0
 800fbd2:	b21b      	sxth	r3, r3
 800fbd4:	429a      	cmp	r2, r3
 800fbd6:	dc13      	bgt.n	800fc00 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800fbd8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800fbda:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800fbdc:	681b      	ldr	r3, [r3, #0]
 800fbde:	9206      	str	r2, [sp, #24]
 800fbe0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800fbe2:	9205      	str	r2, [sp, #20]
 800fbe4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800fbe6:	9500      	str	r5, [sp, #0]
 800fbe8:	e9cd b203 	strd	fp, r2, [sp, #12]
 800fbec:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800fbee:	9809      	ldr	r0, [sp, #36]	; 0x24
 800fbf0:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800fbf4:	a912      	add	r1, sp, #72	; 0x48
 800fbf6:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 800fbfa:	aa49      	add	r2, sp, #292	; 0x124
 800fbfc:	4623      	mov	r3, r4
 800fbfe:	47c8      	blx	r9
 800fc00:	e9d4 2300 	ldrd	r2, r3, [r4]
 800fc04:	441a      	add	r2, r3
 800fc06:	6963      	ldr	r3, [r4, #20]
 800fc08:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800fc0c:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800fc10:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800fc14:	68a1      	ldr	r1, [r4, #8]
 800fc16:	ed94 6a08 	vldr	s12, [r4, #32]
 800fc1a:	6022      	str	r2, [r4, #0]
 800fc1c:	3301      	adds	r3, #1
 800fc1e:	6163      	str	r3, [r4, #20]
 800fc20:	69a3      	ldr	r3, [r4, #24]
 800fc22:	ee37 7a27 	vadd.f32	s14, s14, s15
 800fc26:	3b01      	subs	r3, #1
 800fc28:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800fc2c:	61a3      	str	r3, [r4, #24]
 800fc2e:	6923      	ldr	r3, [r4, #16]
 800fc30:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800fc34:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800fc38:	edd4 6a07 	vldr	s13, [r4, #28]
 800fc3c:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800fc40:	440b      	add	r3, r1
 800fc42:	68e1      	ldr	r1, [r4, #12]
 800fc44:	6123      	str	r3, [r4, #16]
 800fc46:	ee76 6a86 	vadd.f32	s13, s13, s12
 800fc4a:	428b      	cmp	r3, r1
 800fc4c:	edc4 6a07 	vstr	s13, [r4, #28]
 800fc50:	db15      	blt.n	800fc7e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 800fc52:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800fc56:	ee76 6a26 	vadd.f32	s13, s12, s13
 800fc5a:	3201      	adds	r2, #1
 800fc5c:	edc4 6a07 	vstr	s13, [r4, #28]
 800fc60:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800fc64:	6022      	str	r2, [r4, #0]
 800fc66:	ee36 7a87 	vadd.f32	s14, s13, s14
 800fc6a:	1a5b      	subs	r3, r3, r1
 800fc6c:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800fc70:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800fc74:	6123      	str	r3, [r4, #16]
 800fc76:	ee77 7a27 	vadd.f32	s15, s14, s15
 800fc7a:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800fc7e:	e9d5 2300 	ldrd	r2, r3, [r5]
 800fc82:	441a      	add	r2, r3
 800fc84:	696b      	ldr	r3, [r5, #20]
 800fc86:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800fc8a:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800fc8e:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800fc92:	68a9      	ldr	r1, [r5, #8]
 800fc94:	ed95 6a08 	vldr	s12, [r5, #32]
 800fc98:	602a      	str	r2, [r5, #0]
 800fc9a:	3301      	adds	r3, #1
 800fc9c:	616b      	str	r3, [r5, #20]
 800fc9e:	69ab      	ldr	r3, [r5, #24]
 800fca0:	ee37 7a27 	vadd.f32	s14, s14, s15
 800fca4:	3b01      	subs	r3, #1
 800fca6:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800fcaa:	61ab      	str	r3, [r5, #24]
 800fcac:	692b      	ldr	r3, [r5, #16]
 800fcae:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800fcb2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800fcb6:	edd5 6a07 	vldr	s13, [r5, #28]
 800fcba:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800fcbe:	440b      	add	r3, r1
 800fcc0:	68e9      	ldr	r1, [r5, #12]
 800fcc2:	612b      	str	r3, [r5, #16]
 800fcc4:	ee76 6a86 	vadd.f32	s13, s13, s12
 800fcc8:	428b      	cmp	r3, r1
 800fcca:	edc5 6a07 	vstr	s13, [r5, #28]
 800fcce:	db15      	blt.n	800fcfc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 800fcd0:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800fcd4:	ee76 6a26 	vadd.f32	s13, s12, s13
 800fcd8:	3201      	adds	r2, #1
 800fcda:	edc5 6a07 	vstr	s13, [r5, #28]
 800fcde:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800fce2:	602a      	str	r2, [r5, #0]
 800fce4:	ee36 7a87 	vadd.f32	s14, s13, s14
 800fce8:	1a5b      	subs	r3, r3, r1
 800fcea:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800fcee:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800fcf2:	612b      	str	r3, [r5, #16]
 800fcf4:	ee77 7a27 	vadd.f32	s15, s14, s15
 800fcf8:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800fcfc:	3f01      	subs	r7, #1
 800fcfe:	e757      	b.n	800fbb0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 800fd00:	4299      	cmp	r1, r3
 800fd02:	dc13      	bgt.n	800fd2c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 800fd04:	429a      	cmp	r2, r3
 800fd06:	da14      	bge.n	800fd32 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 800fd08:	2502      	movs	r5, #2
 800fd0a:	2703      	movs	r7, #3
 800fd0c:	46a9      	mov	r9, r5
 800fd0e:	f04f 0800 	mov.w	r8, #0
 800fd12:	f04f 0a01 	mov.w	sl, #1
 800fd16:	e6ef      	b.n	800faf8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800fd18:	2501      	movs	r5, #1
 800fd1a:	2700      	movs	r7, #0
 800fd1c:	46a9      	mov	r9, r5
 800fd1e:	46b8      	mov	r8, r7
 800fd20:	f04f 0a02 	mov.w	sl, #2
 800fd24:	e6e8      	b.n	800faf8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800fd26:	2501      	movs	r5, #1
 800fd28:	2702      	movs	r7, #2
 800fd2a:	e6e1      	b.n	800faf0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 800fd2c:	2500      	movs	r5, #0
 800fd2e:	2701      	movs	r7, #1
 800fd30:	e7f4      	b.n	800fd1c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 800fd32:	2702      	movs	r7, #2
 800fd34:	2503      	movs	r5, #3
 800fd36:	f04f 0900 	mov.w	r9, #0
 800fd3a:	46b8      	mov	r8, r7
 800fd3c:	e7e9      	b.n	800fd12 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 800fd3e:	4613      	mov	r3, r2
 800fd40:	e728      	b.n	800fb94 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 800fd42:	bf00      	nop
 800fd44:	200155ac 	.word	0x200155ac
 800fd48:	fffd8f01 	.word	0xfffd8f01
 800fd4c:	00027100 	.word	0x00027100
 800fd50:	0004e1ff 	.word	0x0004e1ff
 800fd54:	0004e1fe 	.word	0x0004e1fe
 800fd58:	200155b4 	.word	0x200155b4
 800fd5c:	4613      	mov	r3, r2
 800fd5e:	992b      	ldr	r1, [sp, #172]	; 0xac
 800fd60:	9111      	str	r1, [sp, #68]	; 0x44
 800fd62:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 800fd66:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 800fd6a:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 800fd6c:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 800fd70:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 800fd74:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 800fd78:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 800fd7c:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 800fd80:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 800fd84:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 800fd88:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 800fd8c:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 800fd90:	469e      	mov	lr, r3
 800fd92:	469c      	mov	ip, r3
 800fd94:	f04f 0900 	mov.w	r9, #0
 800fd98:	f1bc 0f00 	cmp.w	ip, #0
 800fd9c:	d147      	bne.n	800fe2e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 800fd9e:	eb03 0c07 	add.w	ip, r3, r7
 800fda2:	1ad7      	subs	r7, r2, r3
 800fda4:	f1b9 0f00 	cmp.w	r9, #0
 800fda8:	d009      	beq.n	800fdbe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 800fdaa:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 800fdae:	9029      	str	r0, [sp, #164]	; 0xa4
 800fdb0:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 800fdb4:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 800fdb8:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 800fdbc:	912d      	str	r1, [sp, #180]	; 0xb4
 800fdbe:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800fdc0:	9111      	str	r1, [sp, #68]	; 0x44
 800fdc2:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 800fdc6:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 800fdca:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 800fdce:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 800fdd2:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 800fdd6:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 800fdda:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 800fdde:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 800fde2:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 800fde6:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 800fdea:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 800fdee:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 800fdf2:	f04f 0800 	mov.w	r8, #0
 800fdf6:	f1be 0f00 	cmp.w	lr, #0
 800fdfa:	d031      	beq.n	800fe60 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 800fdfc:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800fdfe:	4431      	add	r1, r6
 800fe00:	4549      	cmp	r1, r9
 800fe02:	4450      	add	r0, sl
 800fe04:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800fe08:	ee37 7a04 	vadd.f32	s14, s14, s8
 800fe0c:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800fe10:	db08      	blt.n	800fe24 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 800fe12:	ee77 7a85 	vadd.f32	s15, s15, s10
 800fe16:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800fe1a:	ee37 7a06 	vadd.f32	s14, s14, s12
 800fe1e:	3001      	adds	r0, #1
 800fe20:	eba1 0109 	sub.w	r1, r1, r9
 800fe24:	f10e 3eff 	add.w	lr, lr, #4294967295
 800fe28:	f04f 0801 	mov.w	r8, #1
 800fe2c:	e7e3      	b.n	800fdf6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 800fe2e:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800fe30:	4431      	add	r1, r6
 800fe32:	4541      	cmp	r1, r8
 800fe34:	4450      	add	r0, sl
 800fe36:	ee37 7a24 	vadd.f32	s14, s14, s9
 800fe3a:	ee77 7a84 	vadd.f32	s15, s15, s8
 800fe3e:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800fe42:	db08      	blt.n	800fe56 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 800fe44:	ee76 6a85 	vadd.f32	s13, s13, s10
 800fe48:	ee37 7a25 	vadd.f32	s14, s14, s11
 800fe4c:	ee77 7a86 	vadd.f32	s15, s15, s12
 800fe50:	3001      	adds	r0, #1
 800fe52:	eba1 0108 	sub.w	r1, r1, r8
 800fe56:	f10c 3cff 	add.w	ip, ip, #4294967295
 800fe5a:	f04f 0901 	mov.w	r9, #1
 800fe5e:	e79b      	b.n	800fd98 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 800fe60:	449c      	add	ip, r3
 800fe62:	1aff      	subs	r7, r7, r3
 800fe64:	f1b8 0f00 	cmp.w	r8, #0
 800fe68:	d009      	beq.n	800fe7e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 800fe6a:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 800fe6e:	9019      	str	r0, [sp, #100]	; 0x64
 800fe70:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 800fe74:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 800fe78:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 800fe7c:	911d      	str	r1, [sp, #116]	; 0x74
 800fe7e:	1ad2      	subs	r2, r2, r3
 800fe80:	e68b      	b.n	800fb9a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800fe82:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800fe84:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 800fe86:	2b00      	cmp	r3, #0
 800fe88:	f000 80d1 	beq.w	801002e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 800fe8c:	ad19      	add	r5, sp, #100	; 0x64
 800fe8e:	ac39      	add	r4, sp, #228	; 0xe4
 800fe90:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800fe92:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800fe96:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800fe9a:	930c      	str	r3, [sp, #48]	; 0x30
 800fe9c:	990c      	ldr	r1, [sp, #48]	; 0x30
 800fe9e:	6963      	ldr	r3, [r4, #20]
 800fea0:	440b      	add	r3, r1
 800fea2:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800fea6:	4408      	add	r0, r1
 800fea8:	b200      	sxth	r0, r0
 800feaa:	4283      	cmp	r3, r0
 800feac:	900d      	str	r0, [sp, #52]	; 0x34
 800feae:	f280 80c1 	bge.w	8010034 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 800feb2:	428b      	cmp	r3, r1
 800feb4:	da08      	bge.n	800fec8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800feb6:	2a00      	cmp	r2, #0
 800feb8:	dd06      	ble.n	800fec8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800feba:	1acb      	subs	r3, r1, r3
 800febc:	429a      	cmp	r2, r3
 800febe:	f2c0 80bb 	blt.w	8010038 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 800fec2:	2b00      	cmp	r3, #0
 800fec4:	f300 80b9 	bgt.w	801003a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 800fec8:	6967      	ldr	r7, [r4, #20]
 800feca:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800fecc:	443b      	add	r3, r7
 800fece:	461f      	mov	r7, r3
 800fed0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800fed2:	1bdf      	subs	r7, r3, r7
 800fed4:	4297      	cmp	r7, r2
 800fed6:	bfa8      	it	ge
 800fed8:	4617      	movge	r7, r2
 800feda:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800fede:	2f00      	cmp	r7, #0
 800fee0:	f340 813c 	ble.w	801015c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 800fee4:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800fee6:	6829      	ldr	r1, [r5, #0]
 800fee8:	f9b3 2000 	ldrsh.w	r2, [r3]
 800feec:	f9bb 3000 	ldrsh.w	r3, [fp]
 800fef0:	6820      	ldr	r0, [r4, #0]
 800fef2:	4411      	add	r1, r2
 800fef4:	4299      	cmp	r1, r3
 800fef6:	dd1a      	ble.n	800ff2e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800fef8:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800fefc:	440b      	add	r3, r1
 800fefe:	4402      	add	r2, r0
 800ff00:	b21b      	sxth	r3, r3
 800ff02:	429a      	cmp	r2, r3
 800ff04:	dc13      	bgt.n	800ff2e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800ff06:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800ff08:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800ff0a:	681b      	ldr	r3, [r3, #0]
 800ff0c:	9206      	str	r2, [sp, #24]
 800ff0e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800ff10:	9205      	str	r2, [sp, #20]
 800ff12:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800ff14:	9500      	str	r5, [sp, #0]
 800ff16:	e9cd b203 	strd	fp, r2, [sp, #12]
 800ff1a:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800ff1c:	9809      	ldr	r0, [sp, #36]	; 0x24
 800ff1e:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800ff22:	a912      	add	r1, sp, #72	; 0x48
 800ff24:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 800ff28:	aa49      	add	r2, sp, #292	; 0x124
 800ff2a:	4623      	mov	r3, r4
 800ff2c:	47c8      	blx	r9
 800ff2e:	e9d4 2300 	ldrd	r2, r3, [r4]
 800ff32:	441a      	add	r2, r3
 800ff34:	6963      	ldr	r3, [r4, #20]
 800ff36:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800ff3a:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800ff3e:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800ff42:	68a1      	ldr	r1, [r4, #8]
 800ff44:	ed94 6a08 	vldr	s12, [r4, #32]
 800ff48:	6022      	str	r2, [r4, #0]
 800ff4a:	3301      	adds	r3, #1
 800ff4c:	6163      	str	r3, [r4, #20]
 800ff4e:	69a3      	ldr	r3, [r4, #24]
 800ff50:	ee37 7a27 	vadd.f32	s14, s14, s15
 800ff54:	3b01      	subs	r3, #1
 800ff56:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800ff5a:	61a3      	str	r3, [r4, #24]
 800ff5c:	6923      	ldr	r3, [r4, #16]
 800ff5e:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800ff62:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ff66:	edd4 6a07 	vldr	s13, [r4, #28]
 800ff6a:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800ff6e:	440b      	add	r3, r1
 800ff70:	68e1      	ldr	r1, [r4, #12]
 800ff72:	6123      	str	r3, [r4, #16]
 800ff74:	ee76 6a86 	vadd.f32	s13, s13, s12
 800ff78:	428b      	cmp	r3, r1
 800ff7a:	edc4 6a07 	vstr	s13, [r4, #28]
 800ff7e:	db15      	blt.n	800ffac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 800ff80:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800ff84:	ee76 6a26 	vadd.f32	s13, s12, s13
 800ff88:	3201      	adds	r2, #1
 800ff8a:	edc4 6a07 	vstr	s13, [r4, #28]
 800ff8e:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800ff92:	6022      	str	r2, [r4, #0]
 800ff94:	ee36 7a87 	vadd.f32	s14, s13, s14
 800ff98:	1a5b      	subs	r3, r3, r1
 800ff9a:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800ff9e:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800ffa2:	6123      	str	r3, [r4, #16]
 800ffa4:	ee77 7a27 	vadd.f32	s15, s14, s15
 800ffa8:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800ffac:	e9d5 2300 	ldrd	r2, r3, [r5]
 800ffb0:	441a      	add	r2, r3
 800ffb2:	696b      	ldr	r3, [r5, #20]
 800ffb4:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800ffb8:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800ffbc:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800ffc0:	68a9      	ldr	r1, [r5, #8]
 800ffc2:	ed95 6a08 	vldr	s12, [r5, #32]
 800ffc6:	602a      	str	r2, [r5, #0]
 800ffc8:	3301      	adds	r3, #1
 800ffca:	616b      	str	r3, [r5, #20]
 800ffcc:	69ab      	ldr	r3, [r5, #24]
 800ffce:	ee37 7a27 	vadd.f32	s14, s14, s15
 800ffd2:	3b01      	subs	r3, #1
 800ffd4:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800ffd8:	61ab      	str	r3, [r5, #24]
 800ffda:	692b      	ldr	r3, [r5, #16]
 800ffdc:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800ffe0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ffe4:	edd5 6a07 	vldr	s13, [r5, #28]
 800ffe8:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800ffec:	440b      	add	r3, r1
 800ffee:	68e9      	ldr	r1, [r5, #12]
 800fff0:	612b      	str	r3, [r5, #16]
 800fff2:	ee76 6a86 	vadd.f32	s13, s13, s12
 800fff6:	428b      	cmp	r3, r1
 800fff8:	edc5 6a07 	vstr	s13, [r5, #28]
 800fffc:	db15      	blt.n	801002a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 800fffe:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8010002:	ee76 6a26 	vadd.f32	s13, s12, s13
 8010006:	3201      	adds	r2, #1
 8010008:	edc5 6a07 	vstr	s13, [r5, #28]
 801000c:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 8010010:	602a      	str	r2, [r5, #0]
 8010012:	ee36 7a87 	vadd.f32	s14, s13, s14
 8010016:	1a5b      	subs	r3, r3, r1
 8010018:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801001c:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 8010020:	612b      	str	r3, [r5, #16]
 8010022:	ee77 7a27 	vadd.f32	s15, s14, s15
 8010026:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 801002a:	3f01      	subs	r7, #1
 801002c:	e757      	b.n	800fede <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 801002e:	ad39      	add	r5, sp, #228	; 0xe4
 8010030:	ac19      	add	r4, sp, #100	; 0x64
 8010032:	e72d      	b.n	800fe90 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 8010034:	4613      	mov	r3, r2
 8010036:	e744      	b.n	800fec2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 8010038:	4613      	mov	r3, r2
 801003a:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 801003e:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 8010040:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 8010044:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 8010048:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 801004c:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 8010050:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 8010054:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 8010058:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 801005c:	993d      	ldr	r1, [sp, #244]	; 0xf4
 801005e:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 8010062:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 8010066:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 801006a:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 801006e:	960e      	str	r6, [sp, #56]	; 0x38
 8010070:	469e      	mov	lr, r3
 8010072:	461f      	mov	r7, r3
 8010074:	f04f 0900 	mov.w	r9, #0
 8010078:	2f00      	cmp	r7, #0
 801007a:	d146      	bne.n	801010a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 801007c:	449c      	add	ip, r3
 801007e:	1ad7      	subs	r7, r2, r3
 8010080:	f1b9 0f00 	cmp.w	r9, #0
 8010084:	d009      	beq.n	801009a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 8010086:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 801008a:	9039      	str	r0, [sp, #228]	; 0xe4
 801008c:	913d      	str	r1, [sp, #244]	; 0xf4
 801008e:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 8010092:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 8010096:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 801009a:	991b      	ldr	r1, [sp, #108]	; 0x6c
 801009c:	910e      	str	r1, [sp, #56]	; 0x38
 801009e:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 80100a2:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 80100a6:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 80100aa:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 80100ae:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 80100b2:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 80100b6:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 80100ba:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 80100be:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 80100c2:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 80100c6:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 80100ca:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 80100ce:	f04f 0800 	mov.w	r8, #0
 80100d2:	f1be 0f00 	cmp.w	lr, #0
 80100d6:	d030      	beq.n	801013a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 80100d8:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 80100da:	4431      	add	r1, r6
 80100dc:	4549      	cmp	r1, r9
 80100de:	4450      	add	r0, sl
 80100e0:	ee76 6aa4 	vadd.f32	s13, s13, s9
 80100e4:	ee37 7a04 	vadd.f32	s14, s14, s8
 80100e8:	ee77 7aa3 	vadd.f32	s15, s15, s7
 80100ec:	db08      	blt.n	8010100 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 80100ee:	ee77 7a85 	vadd.f32	s15, s15, s10
 80100f2:	ee76 6aa5 	vadd.f32	s13, s13, s11
 80100f6:	ee37 7a06 	vadd.f32	s14, s14, s12
 80100fa:	3001      	adds	r0, #1
 80100fc:	eba1 0109 	sub.w	r1, r1, r9
 8010100:	f10e 3eff 	add.w	lr, lr, #4294967295
 8010104:	f04f 0801 	mov.w	r8, #1
 8010108:	e7e3      	b.n	80100d2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 801010a:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 801010c:	4431      	add	r1, r6
 801010e:	4541      	cmp	r1, r8
 8010110:	4450      	add	r0, sl
 8010112:	ee37 7a24 	vadd.f32	s14, s14, s9
 8010116:	ee77 7a84 	vadd.f32	s15, s15, s8
 801011a:	ee76 6aa3 	vadd.f32	s13, s13, s7
 801011e:	db08      	blt.n	8010132 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 8010120:	ee76 6a85 	vadd.f32	s13, s13, s10
 8010124:	ee37 7a25 	vadd.f32	s14, s14, s11
 8010128:	ee77 7a86 	vadd.f32	s15, s15, s12
 801012c:	3001      	adds	r0, #1
 801012e:	eba1 0108 	sub.w	r1, r1, r8
 8010132:	3f01      	subs	r7, #1
 8010134:	f04f 0901 	mov.w	r9, #1
 8010138:	e79e      	b.n	8010078 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 801013a:	449c      	add	ip, r3
 801013c:	1aff      	subs	r7, r7, r3
 801013e:	f1b8 0f00 	cmp.w	r8, #0
 8010142:	d009      	beq.n	8010158 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 8010144:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 8010148:	9019      	str	r0, [sp, #100]	; 0x64
 801014a:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 801014e:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8010152:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8010156:	911d      	str	r1, [sp, #116]	; 0x74
 8010158:	1ad2      	subs	r2, r2, r3
 801015a:	e6b5      	b.n	800fec8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 801015c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801015e:	681b      	ldr	r3, [r3, #0]
 8010160:	b923      	cbnz	r3, 801016c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8010162:	4b04      	ldr	r3, [pc, #16]	; (8010174 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 8010164:	6818      	ldr	r0, [r3, #0]
 8010166:	6803      	ldr	r3, [r0, #0]
 8010168:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801016a:	4798      	blx	r3
 801016c:	b05b      	add	sp, #364	; 0x16c
 801016e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010172:	bf00      	nop
 8010174:	200155b4 	.word	0x200155b4

08010178 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>:
 8010178:	b570      	push	{r4, r5, r6, lr}
 801017a:	4604      	mov	r4, r0
 801017c:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8010180:	9804      	ldr	r0, [sp, #16]
 8010182:	6061      	str	r1, [r4, #4]
 8010184:	2500      	movs	r5, #0
 8010186:	8025      	strh	r5, [r4, #0]
 8010188:	7223      	strb	r3, [r4, #8]
 801018a:	7266      	strb	r6, [r4, #9]
 801018c:	60e0      	str	r0, [r4, #12]
 801018e:	8222      	strh	r2, [r4, #16]
 8010190:	8265      	strh	r5, [r4, #18]
 8010192:	82a5      	strh	r5, [r4, #20]
 8010194:	82e5      	strh	r5, [r4, #22]
 8010196:	8325      	strh	r5, [r4, #24]
 8010198:	8365      	strh	r5, [r4, #26]
 801019a:	83a5      	strh	r5, [r4, #28]
 801019c:	77a5      	strb	r5, [r4, #30]
 801019e:	b32e      	cbz	r6, 80101ec <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 80101a0:	6803      	ldr	r3, [r0, #0]
 80101a2:	695b      	ldr	r3, [r3, #20]
 80101a4:	4798      	blx	r3
 80101a6:	4606      	mov	r6, r0
 80101a8:	b300      	cbz	r0, 80101ec <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 80101aa:	68e0      	ldr	r0, [r4, #12]
 80101ac:	6803      	ldr	r3, [r0, #0]
 80101ae:	4631      	mov	r1, r6
 80101b0:	68db      	ldr	r3, [r3, #12]
 80101b2:	4798      	blx	r3
 80101b4:	4605      	mov	r5, r0
 80101b6:	b1c8      	cbz	r0, 80101ec <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 80101b8:	7b43      	ldrb	r3, [r0, #13]
 80101ba:	7a82      	ldrb	r2, [r0, #10]
 80101bc:	005b      	lsls	r3, r3, #1
 80101be:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80101c2:	4313      	orrs	r3, r2
 80101c4:	83a3      	strh	r3, [r4, #28]
 80101c6:	7a63      	ldrb	r3, [r4, #9]
 80101c8:	2b04      	cmp	r3, #4
 80101ca:	d10f      	bne.n	80101ec <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 80101cc:	68e0      	ldr	r0, [r4, #12]
 80101ce:	6803      	ldr	r3, [r0, #0]
 80101d0:	462a      	mov	r2, r5
 80101d2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80101d4:	4631      	mov	r1, r6
 80101d6:	4798      	blx	r3
 80101d8:	7b6b      	ldrb	r3, [r5, #13]
 80101da:	005b      	lsls	r3, r3, #1
 80101dc:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80101e0:	7aab      	ldrb	r3, [r5, #10]
 80101e2:	4313      	orrs	r3, r2
 80101e4:	4418      	add	r0, r3
 80101e6:	8ba3      	ldrh	r3, [r4, #28]
 80101e8:	4418      	add	r0, r3
 80101ea:	83a0      	strh	r0, [r4, #28]
 80101ec:	4620      	mov	r0, r4
 80101ee:	bd70      	pop	{r4, r5, r6, pc}

080101f0 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 80101f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80101f4:	2400      	movs	r4, #0
 80101f6:	b085      	sub	sp, #20
 80101f8:	4681      	mov	r9, r0
 80101fa:	4688      	mov	r8, r1
 80101fc:	4692      	mov	sl, r2
 80101fe:	469b      	mov	fp, r3
 8010200:	4627      	mov	r7, r4
 8010202:	4625      	mov	r5, r4
 8010204:	4626      	mov	r6, r4
 8010206:	4554      	cmp	r4, sl
 8010208:	da2a      	bge.n	8010260 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 801020a:	2300      	movs	r3, #0
 801020c:	9303      	str	r3, [sp, #12]
 801020e:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8010212:	429d      	cmp	r5, r3
 8010214:	d004      	beq.n	8010220 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 8010216:	f242 030b 	movw	r3, #8203	; 0x200b
 801021a:	429d      	cmp	r5, r3
 801021c:	bf18      	it	ne
 801021e:	462f      	movne	r7, r5
 8010220:	ab03      	add	r3, sp, #12
 8010222:	4642      	mov	r2, r8
 8010224:	4659      	mov	r1, fp
 8010226:	4648      	mov	r0, r9
 8010228:	f002 ff7e 	bl	8013128 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801022c:	4605      	mov	r5, r0
 801022e:	b1b8      	cbz	r0, 8010260 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8010230:	280a      	cmp	r0, #10
 8010232:	d015      	beq.n	8010260 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8010234:	9a03      	ldr	r2, [sp, #12]
 8010236:	b18a      	cbz	r2, 801025c <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 8010238:	7b50      	ldrb	r0, [r2, #13]
 801023a:	7a93      	ldrb	r3, [r2, #10]
 801023c:	8895      	ldrh	r5, [r2, #4]
 801023e:	0040      	lsls	r0, r0, #1
 8010240:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8010244:	4303      	orrs	r3, r0
 8010246:	9301      	str	r3, [sp, #4]
 8010248:	f8d8 3000 	ldr.w	r3, [r8]
 801024c:	4639      	mov	r1, r7
 801024e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010250:	4640      	mov	r0, r8
 8010252:	4798      	blx	r3
 8010254:	9b01      	ldr	r3, [sp, #4]
 8010256:	4418      	add	r0, r3
 8010258:	4406      	add	r6, r0
 801025a:	b2b6      	uxth	r6, r6
 801025c:	3401      	adds	r4, #1
 801025e:	e7d2      	b.n	8010206 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 8010260:	4630      	mov	r0, r6
 8010262:	b005      	add	sp, #20
 8010264:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010268 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 8010268:	2a02      	cmp	r2, #2
 801026a:	b530      	push	{r4, r5, lr}
 801026c:	d011      	beq.n	8010292 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 801026e:	2a03      	cmp	r2, #3
 8010270:	d01c      	beq.n	80102ac <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 8010272:	2a01      	cmp	r2, #1
 8010274:	d10c      	bne.n	8010290 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8010276:	888b      	ldrh	r3, [r1, #4]
 8010278:	8801      	ldrh	r1, [r0, #0]
 801027a:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 801027e:	8844      	ldrh	r4, [r0, #2]
 8010280:	8004      	strh	r4, [r0, #0]
 8010282:	1a5b      	subs	r3, r3, r1
 8010284:	1a9b      	subs	r3, r3, r2
 8010286:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 801028a:	8043      	strh	r3, [r0, #2]
 801028c:	8081      	strh	r1, [r0, #4]
 801028e:	80c2      	strh	r2, [r0, #6]
 8010290:	bd30      	pop	{r4, r5, pc}
 8010292:	88cb      	ldrh	r3, [r1, #6]
 8010294:	8842      	ldrh	r2, [r0, #2]
 8010296:	1a9b      	subs	r3, r3, r2
 8010298:	88c2      	ldrh	r2, [r0, #6]
 801029a:	1a9b      	subs	r3, r3, r2
 801029c:	888a      	ldrh	r2, [r1, #4]
 801029e:	8801      	ldrh	r1, [r0, #0]
 80102a0:	8043      	strh	r3, [r0, #2]
 80102a2:	1a52      	subs	r2, r2, r1
 80102a4:	8881      	ldrh	r1, [r0, #4]
 80102a6:	1a52      	subs	r2, r2, r1
 80102a8:	8002      	strh	r2, [r0, #0]
 80102aa:	e7f1      	b.n	8010290 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 80102ac:	88cb      	ldrh	r3, [r1, #6]
 80102ae:	8841      	ldrh	r1, [r0, #2]
 80102b0:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 80102b4:	f9b0 5000 	ldrsh.w	r5, [r0]
 80102b8:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 80102bc:	8045      	strh	r5, [r0, #2]
 80102be:	1a5b      	subs	r3, r3, r1
 80102c0:	1a9b      	subs	r3, r3, r2
 80102c2:	8003      	strh	r3, [r0, #0]
 80102c4:	8082      	strh	r2, [r0, #4]
 80102c6:	80c4      	strh	r4, [r0, #6]
 80102c8:	e7e2      	b.n	8010290 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

080102ca <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 80102ca:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80102ce:	b09f      	sub	sp, #124	; 0x7c
 80102d0:	9116      	str	r1, [sp, #88]	; 0x58
 80102d2:	9317      	str	r3, [sp, #92]	; 0x5c
 80102d4:	9929      	ldr	r1, [sp, #164]	; 0xa4
 80102d6:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80102d8:	8809      	ldrh	r1, [r1, #0]
 80102da:	889b      	ldrh	r3, [r3, #4]
 80102dc:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 80102e0:	9212      	str	r2, [sp, #72]	; 0x48
 80102e2:	440b      	add	r3, r1
 80102e4:	b21b      	sxth	r3, r3
 80102e6:	9310      	str	r3, [sp, #64]	; 0x40
 80102e8:	f8d8 3000 	ldr.w	r3, [r8]
 80102ec:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 80102f0:	7a59      	ldrb	r1, [r3, #9]
 80102f2:	7a1b      	ldrb	r3, [r3, #8]
 80102f4:	9011      	str	r0, [sp, #68]	; 0x44
 80102f6:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 80102fa:	9114      	str	r1, [sp, #80]	; 0x50
 80102fc:	9315      	str	r3, [sp, #84]	; 0x54
 80102fe:	f9bd 50a0 	ldrsh.w	r5, [sp, #160]	; 0xa0
 8010302:	2a00      	cmp	r2, #0
 8010304:	d06a      	beq.n	80103dc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 8010306:	f898 3010 	ldrb.w	r3, [r8, #16]
 801030a:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801030c:	2b04      	cmp	r3, #4
 801030e:	bf14      	ite	ne
 8010310:	2301      	movne	r3, #1
 8010312:	2302      	moveq	r3, #2
 8010314:	4413      	add	r3, r2
 8010316:	f04f 0900 	mov.w	r9, #0
 801031a:	930f      	str	r3, [sp, #60]	; 0x3c
 801031c:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 8010320:	464c      	mov	r4, r9
 8010322:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 8010326:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 801032a:	4293      	cmp	r3, r2
 801032c:	f280 808f 	bge.w	801044e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8010330:	2300      	movs	r3, #0
 8010332:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 8010336:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 801033a:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 801033e:	429c      	cmp	r4, r3
 8010340:	d006      	beq.n	8010350 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 8010342:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8010344:	f242 020b 	movw	r2, #8203	; 0x200b
 8010348:	4294      	cmp	r4, r2
 801034a:	bf18      	it	ne
 801034c:	4623      	movne	r3, r4
 801034e:	930d      	str	r3, [sp, #52]	; 0x34
 8010350:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010352:	992d      	ldr	r1, [sp, #180]	; 0xb4
 8010354:	f8d8 2000 	ldr.w	r2, [r8]
 8010358:	428b      	cmp	r3, r1
 801035a:	db41      	blt.n	80103e0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 801035c:	6813      	ldr	r3, [r2, #0]
 801035e:	4610      	mov	r0, r2
 8010360:	695b      	ldr	r3, [r3, #20]
 8010362:	4798      	blx	r3
 8010364:	4604      	mov	r4, r0
 8010366:	f8d8 0000 	ldr.w	r0, [r8]
 801036a:	6803      	ldr	r3, [r0, #0]
 801036c:	aa1d      	add	r2, sp, #116	; 0x74
 801036e:	689e      	ldr	r6, [r3, #8]
 8010370:	4621      	mov	r1, r4
 8010372:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8010376:	47b0      	blx	r6
 8010378:	901c      	str	r0, [sp, #112]	; 0x70
 801037a:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 801037e:	429c      	cmp	r4, r3
 8010380:	f000 80e9 	beq.w	8010556 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 8010384:	f242 030b 	movw	r3, #8203	; 0x200b
 8010388:	429c      	cmp	r4, r3
 801038a:	f000 80e4 	beq.w	8010556 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 801038e:	2c00      	cmp	r4, #0
 8010390:	f000 80f6 	beq.w	8010580 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b6>
 8010394:	2c0a      	cmp	r4, #10
 8010396:	d060      	beq.n	801045a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8010398:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 801039a:	b36a      	cbz	r2, 80103f8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 801039c:	8894      	ldrh	r4, [r2, #4]
 801039e:	f1bb 0f00 	cmp.w	fp, #0
 80103a2:	d03b      	beq.n	801041c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 80103a4:	f892 900d 	ldrb.w	r9, [r2, #13]
 80103a8:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80103ac:	f409 7380 	and.w	r3, r9, #256	; 0x100
 80103b0:	f892 900a 	ldrb.w	r9, [r2, #10]
 80103b4:	f1bb 0f01 	cmp.w	fp, #1
 80103b8:	ea49 0903 	orr.w	r9, r9, r3
 80103bc:	d134      	bne.n	8010428 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 80103be:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80103c0:	eba5 0509 	sub.w	r5, r5, r9
 80103c4:	2b00      	cmp	r3, #0
 80103c6:	d14f      	bne.n	8010468 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 80103c8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80103ca:	eb09 0305 	add.w	r3, r9, r5
 80103ce:	4413      	add	r3, r2
 80103d0:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80103d2:	f9b2 2000 	ldrsh.w	r2, [r2]
 80103d6:	4293      	cmp	r3, r2
 80103d8:	da51      	bge.n	801047e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 80103da:	e038      	b.n	801044e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 80103dc:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80103de:	e79a      	b.n	8010316 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 80103e0:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 80103e4:	9301      	str	r3, [sp, #4]
 80103e6:	ab1d      	add	r3, sp, #116	; 0x74
 80103e8:	9300      	str	r3, [sp, #0]
 80103ea:	4659      	mov	r1, fp
 80103ec:	ab1c      	add	r3, sp, #112	; 0x70
 80103ee:	982c      	ldr	r0, [sp, #176]	; 0xb0
 80103f0:	f002 fee3 	bl	80131ba <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 80103f4:	4604      	mov	r4, r0
 80103f6:	e7c0      	b.n	801037a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 80103f8:	f8d8 0000 	ldr.w	r0, [r8]
 80103fc:	6803      	ldr	r3, [r0, #0]
 80103fe:	691b      	ldr	r3, [r3, #16]
 8010400:	4798      	blx	r3
 8010402:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8010406:	4298      	cmp	r0, r3
 8010408:	f000 80a5 	beq.w	8010556 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 801040c:	f242 030b 	movw	r3, #8203	; 0x200b
 8010410:	4298      	cmp	r0, r3
 8010412:	f000 80a0 	beq.w	8010556 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 8010416:	f1bb 0f00 	cmp.w	fp, #0
 801041a:	d100      	bne.n	801041e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 801041c:	444d      	add	r5, r9
 801041e:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8010420:	2a00      	cmp	r2, #0
 8010422:	d1bf      	bne.n	80103a4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 8010424:	4691      	mov	r9, r2
 8010426:	e096      	b.n	8010556 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 8010428:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801042a:	2b00      	cmp	r3, #0
 801042c:	f000 80aa 	beq.w	8010584 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8010430:	f1bb 0f00 	cmp.w	fp, #0
 8010434:	d118      	bne.n	8010468 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8010436:	f8d8 0000 	ldr.w	r0, [r8]
 801043a:	990d      	ldr	r1, [sp, #52]	; 0x34
 801043c:	6803      	ldr	r3, [r0, #0]
 801043e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010440:	4798      	blx	r3
 8010442:	4405      	add	r5, r0
 8010444:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8010446:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8010448:	1aeb      	subs	r3, r5, r3
 801044a:	4293      	cmp	r3, r2
 801044c:	dd17      	ble.n	801047e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 801044e:	2c00      	cmp	r4, #0
 8010450:	f000 8096 	beq.w	8010580 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b6>
 8010454:	2c0a      	cmp	r4, #10
 8010456:	f040 8084 	bne.w	8010562 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 801045a:	240a      	movs	r4, #10
 801045c:	fab4 f084 	clz	r0, r4
 8010460:	0940      	lsrs	r0, r0, #5
 8010462:	b01f      	add	sp, #124	; 0x7c
 8010464:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010468:	f8d8 0000 	ldr.w	r0, [r8]
 801046c:	990d      	ldr	r1, [sp, #52]	; 0x34
 801046e:	6803      	ldr	r3, [r0, #0]
 8010470:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010472:	4798      	blx	r3
 8010474:	f1bb 0f01 	cmp.w	fp, #1
 8010478:	eba5 0500 	sub.w	r5, r5, r0
 801047c:	d0a4      	beq.n	80103c8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 801047e:	981c      	ldr	r0, [sp, #112]	; 0x70
 8010480:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8010482:	f990 1009 	ldrsb.w	r1, [r0, #9]
 8010486:	f9b3 6000 	ldrsh.w	r6, [r3]
 801048a:	7b43      	ldrb	r3, [r0, #13]
 801048c:	015b      	lsls	r3, r3, #5
 801048e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8010492:	7983      	ldrb	r3, [r0, #6]
 8010494:	4429      	add	r1, r5
 8010496:	4313      	orrs	r3, r2
 8010498:	440b      	add	r3, r1
 801049a:	42b3      	cmp	r3, r6
 801049c:	db5b      	blt.n	8010556 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 801049e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80104a0:	4299      	cmp	r1, r3
 80104a2:	da58      	bge.n	8010556 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 80104a4:	f8d8 0000 	ldr.w	r0, [r8]
 80104a8:	6803      	ldr	r3, [r0, #0]
 80104aa:	42ae      	cmp	r6, r5
 80104ac:	bfc8      	it	gt
 80104ae:	1b76      	subgt	r6, r6, r5
 80104b0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80104b2:	bfcc      	ite	gt
 80104b4:	b2b6      	uxthgt	r6, r6
 80104b6:	2600      	movle	r6, #0
 80104b8:	4798      	blx	r3
 80104ba:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80104bc:	7b5a      	ldrb	r2, [r3, #13]
 80104be:	00d1      	lsls	r1, r2, #3
 80104c0:	f401 7780 	and.w	r7, r1, #256	; 0x100
 80104c4:	7a19      	ldrb	r1, [r3, #8]
 80104c6:	4339      	orrs	r1, r7
 80104c8:	0657      	lsls	r7, r2, #25
 80104ca:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 80104cc:	bf44      	itt	mi
 80104ce:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 80104d2:	b209      	sxthmi	r1, r1
 80104d4:	19c7      	adds	r7, r0, r7
 80104d6:	1a7f      	subs	r7, r7, r1
 80104d8:	9929      	ldr	r1, [sp, #164]	; 0xa4
 80104da:	b2bf      	uxth	r7, r7
 80104dc:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 80104e0:	fa0f fa87 	sxth.w	sl, r7
 80104e4:	4551      	cmp	r1, sl
 80104e6:	dd3a      	ble.n	801055e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x294>
 80104e8:	0112      	lsls	r2, r2, #4
 80104ea:	79d8      	ldrb	r0, [r3, #7]
 80104ec:	f402 7280 	and.w	r2, r2, #256	; 0x100
 80104f0:	4302      	orrs	r2, r0
 80104f2:	4492      	add	sl, r2
 80104f4:	4551      	cmp	r1, sl
 80104f6:	dc2e      	bgt.n	8010556 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 80104f8:	1bcf      	subs	r7, r1, r7
 80104fa:	b2bf      	uxth	r7, r7
 80104fc:	468a      	mov	sl, r1
 80104fe:	9319      	str	r3, [sp, #100]	; 0x64
 8010500:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8010502:	f8d8 0000 	ldr.w	r0, [r8]
 8010506:	681a      	ldr	r2, [r3, #0]
 8010508:	6801      	ldr	r1, [r0, #0]
 801050a:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 801050c:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 801050e:	9313      	str	r3, [sp, #76]	; 0x4c
 8010510:	9218      	str	r2, [sp, #96]	; 0x60
 8010512:	6b89      	ldr	r1, [r1, #56]	; 0x38
 8010514:	4788      	blx	r1
 8010516:	f898 1006 	ldrb.w	r1, [r8, #6]
 801051a:	910b      	str	r1, [sp, #44]	; 0x2c
 801051c:	f898 100e 	ldrb.w	r1, [r8, #14]
 8010520:	910a      	str	r1, [sp, #40]	; 0x28
 8010522:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 8010526:	9109      	str	r1, [sp, #36]	; 0x24
 8010528:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801052a:	f8d8 1008 	ldr.w	r1, [r8, #8]
 801052e:	9305      	str	r3, [sp, #20]
 8010530:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8010532:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8010534:	9206      	str	r2, [sp, #24]
 8010536:	e9cd 0107 	strd	r0, r1, [sp, #28]
 801053a:	e9cd 7303 	strd	r7, r3, [sp, #12]
 801053e:	e9cd a601 	strd	sl, r6, [sp, #4]
 8010542:	442e      	add	r6, r5
 8010544:	b236      	sxth	r6, r6
 8010546:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8010548:	9600      	str	r6, [sp, #0]
 801054a:	681a      	ldr	r2, [r3, #0]
 801054c:	9916      	ldr	r1, [sp, #88]	; 0x58
 801054e:	685b      	ldr	r3, [r3, #4]
 8010550:	9811      	ldr	r0, [sp, #68]	; 0x44
 8010552:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8010554:	47b0      	blx	r6
 8010556:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010558:	3301      	adds	r3, #1
 801055a:	930e      	str	r3, [sp, #56]	; 0x38
 801055c:	e6e3      	b.n	8010326 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 801055e:	2700      	movs	r7, #0
 8010560:	e7cd      	b.n	80104fe <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
 8010562:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8010564:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8010566:	3501      	adds	r5, #1
 8010568:	429d      	cmp	r5, r3
 801056a:	f6bf af77 	bge.w	801045c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 801056e:	4659      	mov	r1, fp
 8010570:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8010572:	f7f4 fb99 	bl	8004ca8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8010576:	4604      	mov	r4, r0
 8010578:	b110      	cbz	r0, 8010580 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b6>
 801057a:	280a      	cmp	r0, #10
 801057c:	d1f2      	bne.n	8010564 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29a>
 801057e:	e76c      	b.n	801045a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8010580:	2400      	movs	r4, #0
 8010582:	e76b      	b.n	801045c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 8010584:	f1bb 0f00 	cmp.w	fp, #0
 8010588:	f43f af5c 	beq.w	8010444 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 801058c:	e777      	b.n	801047e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

0801058e <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 801058e:	b530      	push	{r4, r5, lr}
 8010590:	8a44      	ldrh	r4, [r0, #18]
 8010592:	8ac5      	ldrh	r5, [r0, #22]
 8010594:	82c3      	strh	r3, [r0, #22]
 8010596:	442c      	add	r4, r5
 8010598:	1ae4      	subs	r4, r4, r3
 801059a:	8244      	strh	r4, [r0, #18]
 801059c:	8b03      	ldrh	r3, [r0, #24]
 801059e:	8a84      	ldrh	r4, [r0, #20]
 80105a0:	4422      	add	r2, r4
 80105a2:	440c      	add	r4, r1
 80105a4:	1a59      	subs	r1, r3, r1
 80105a6:	8342      	strh	r2, [r0, #26]
 80105a8:	8284      	strh	r4, [r0, #20]
 80105aa:	8301      	strh	r1, [r0, #24]
 80105ac:	bd30      	pop	{r4, r5, pc}

080105ae <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>:
 80105ae:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80105b2:	7a43      	ldrb	r3, [r0, #9]
 80105b4:	1eda      	subs	r2, r3, #3
 80105b6:	b087      	sub	sp, #28
 80105b8:	4604      	mov	r4, r0
 80105ba:	b2d2      	uxtb	r2, r2
 80105bc:	460f      	mov	r7, r1
 80105be:	2900      	cmp	r1, #0
 80105c0:	d036      	beq.n	8010630 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x82>
 80105c2:	2a01      	cmp	r2, #1
 80105c4:	d932      	bls.n	801062c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x7e>
 80105c6:	1e58      	subs	r0, r3, #1
 80105c8:	f1d0 0b00 	rsbs	fp, r0, #0
 80105cc:	eb4b 0b00 	adc.w	fp, fp, r0
 80105d0:	1e99      	subs	r1, r3, #2
 80105d2:	424b      	negs	r3, r1
 80105d4:	414b      	adcs	r3, r1
 80105d6:	9303      	str	r3, [sp, #12]
 80105d8:	2300      	movs	r3, #0
 80105da:	e9cd 3301 	strd	r3, r3, [sp, #4]
 80105de:	2500      	movs	r5, #0
 80105e0:	8265      	strh	r5, [r4, #18]
 80105e2:	82a5      	strh	r5, [r4, #20]
 80105e4:	46a9      	mov	r9, r5
 80105e6:	f242 0a0b 	movw	sl, #8203	; 0x200b
 80105ea:	2300      	movs	r3, #0
 80105ec:	9305      	str	r3, [sp, #20]
 80105ee:	8823      	ldrh	r3, [r4, #0]
 80105f0:	2b20      	cmp	r3, #32
 80105f2:	d02b      	beq.n	801064c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x9e>
 80105f4:	eba3 020a 	sub.w	r2, r3, sl
 80105f8:	4256      	negs	r6, r2
 80105fa:	4156      	adcs	r6, r2
 80105fc:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8010600:	4293      	cmp	r3, r2
 8010602:	d004      	beq.n	801060e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 8010604:	4553      	cmp	r3, sl
 8010606:	bf16      	itet	ne
 8010608:	4699      	movne	r9, r3
 801060a:	2601      	moveq	r6, #1
 801060c:	2600      	movne	r6, #0
 801060e:	ab05      	add	r3, sp, #20
 8010610:	68e2      	ldr	r2, [r4, #12]
 8010612:	7a21      	ldrb	r1, [r4, #8]
 8010614:	6860      	ldr	r0, [r4, #4]
 8010616:	f002 fd87 	bl	8013128 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801061a:	8020      	strh	r0, [r4, #0]
 801061c:	b9c8      	cbnz	r0, 8010652 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xa4>
 801061e:	8b22      	ldrh	r2, [r4, #24]
 8010620:	2300      	movs	r3, #0
 8010622:	4611      	mov	r1, r2
 8010624:	4620      	mov	r0, r4
 8010626:	f7ff ffb2 	bl	801058e <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 801062a:	e066      	b.n	80106fa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 801062c:	468b      	mov	fp, r1
 801062e:	e7cf      	b.n	80105d0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x22>
 8010630:	3b01      	subs	r3, #1
 8010632:	2a01      	cmp	r2, #1
 8010634:	bf8c      	ite	hi
 8010636:	2200      	movhi	r2, #0
 8010638:	2201      	movls	r2, #1
 801063a:	2b01      	cmp	r3, #1
 801063c:	bf8c      	ite	hi
 801063e:	2300      	movhi	r3, #0
 8010640:	2301      	movls	r3, #1
 8010642:	9202      	str	r2, [sp, #8]
 8010644:	9301      	str	r3, [sp, #4]
 8010646:	9103      	str	r1, [sp, #12]
 8010648:	468b      	mov	fp, r1
 801064a:	e7c8      	b.n	80105de <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x30>
 801064c:	4699      	mov	r9, r3
 801064e:	2601      	movs	r6, #1
 8010650:	e7dd      	b.n	801060e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 8010652:	8ae3      	ldrh	r3, [r4, #22]
 8010654:	280a      	cmp	r0, #10
 8010656:	f103 0301 	add.w	r3, r3, #1
 801065a:	82e3      	strh	r3, [r4, #22]
 801065c:	d0df      	beq.n	801061e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x70>
 801065e:	9a05      	ldr	r2, [sp, #20]
 8010660:	bb42      	cbnz	r2, 80106b4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x106>
 8010662:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8010666:	4298      	cmp	r0, r3
 8010668:	d001      	beq.n	801066e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 801066a:	4550      	cmp	r0, sl
 801066c:	d1bd      	bne.n	80105ea <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 801066e:	8823      	ldrh	r3, [r4, #0]
 8010670:	8b21      	ldrh	r1, [r4, #24]
 8010672:	2b20      	cmp	r3, #32
 8010674:	d001      	beq.n	801067a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xcc>
 8010676:	4553      	cmp	r3, sl
 8010678:	d131      	bne.n	80106de <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x130>
 801067a:	2e00      	cmp	r6, #0
 801067c:	bf0a      	itet	eq
 801067e:	460d      	moveq	r5, r1
 8010680:	4630      	movne	r0, r6
 8010682:	2001      	moveq	r0, #1
 8010684:	440a      	add	r2, r1
 8010686:	8aa3      	ldrh	r3, [r4, #20]
 8010688:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 801068c:	b292      	uxth	r2, r2
 801068e:	8322      	strh	r2, [r4, #24]
 8010690:	4413      	add	r3, r2
 8010692:	2f00      	cmp	r7, #0
 8010694:	d03a      	beq.n	801070c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x15e>
 8010696:	f1bb 0f00 	cmp.w	fp, #0
 801069a:	d102      	bne.n	80106a2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xf4>
 801069c:	9903      	ldr	r1, [sp, #12]
 801069e:	b301      	cbz	r1, 80106e2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 80106a0:	b1f8      	cbz	r0, 80106e2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 80106a2:	8ba1      	ldrh	r1, [r4, #28]
 80106a4:	4419      	add	r1, r3
 80106a6:	458c      	cmp	ip, r1
 80106a8:	da2a      	bge.n	8010700 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 80106aa:	8a61      	ldrh	r1, [r4, #18]
 80106ac:	b341      	cbz	r1, 8010700 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 80106ae:	4563      	cmp	r3, ip
 80106b0:	dd9b      	ble.n	80105ea <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 80106b2:	e01c      	b.n	80106ee <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x140>
 80106b4:	8893      	ldrh	r3, [r2, #4]
 80106b6:	8023      	strh	r3, [r4, #0]
 80106b8:	f892 800d 	ldrb.w	r8, [r2, #13]
 80106bc:	ea4f 0848 	mov.w	r8, r8, lsl #1
 80106c0:	f408 7080 	and.w	r0, r8, #256	; 0x100
 80106c4:	f892 800a 	ldrb.w	r8, [r2, #10]
 80106c8:	ea48 0800 	orr.w	r8, r8, r0
 80106cc:	68e0      	ldr	r0, [r4, #12]
 80106ce:	6803      	ldr	r3, [r0, #0]
 80106d0:	4649      	mov	r1, r9
 80106d2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80106d4:	4798      	blx	r3
 80106d6:	eb08 0200 	add.w	r2, r8, r0
 80106da:	b292      	uxth	r2, r2
 80106dc:	e7c7      	b.n	801066e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 80106de:	2000      	movs	r0, #0
 80106e0:	e7d0      	b.n	8010684 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xd6>
 80106e2:	4563      	cmp	r3, ip
 80106e4:	dd81      	ble.n	80105ea <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 80106e6:	8a63      	ldrh	r3, [r4, #18]
 80106e8:	2b00      	cmp	r3, #0
 80106ea:	f43f af7e 	beq.w	80105ea <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 80106ee:	2301      	movs	r3, #1
 80106f0:	77a3      	strb	r3, [r4, #30]
 80106f2:	8ba2      	ldrh	r2, [r4, #28]
 80106f4:	8b63      	ldrh	r3, [r4, #26]
 80106f6:	4413      	add	r3, r2
 80106f8:	8363      	strh	r3, [r4, #26]
 80106fa:	b007      	add	sp, #28
 80106fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010700:	2300      	movs	r3, #0
 8010702:	4611      	mov	r1, r2
 8010704:	4620      	mov	r0, r4
 8010706:	f7ff ff42 	bl	801058e <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 801070a:	e76e      	b.n	80105ea <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 801070c:	4563      	cmp	r3, ip
 801070e:	dd14      	ble.n	801073a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x18c>
 8010710:	9b02      	ldr	r3, [sp, #8]
 8010712:	b113      	cbz	r3, 801071a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x16c>
 8010714:	2301      	movs	r3, #1
 8010716:	460a      	mov	r2, r1
 8010718:	e783      	b.n	8010622 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x74>
 801071a:	9b01      	ldr	r3, [sp, #4]
 801071c:	2b00      	cmp	r3, #0
 801071e:	f43f af64 	beq.w	80105ea <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8010722:	2800      	cmp	r0, #0
 8010724:	f47f af61 	bne.w	80105ea <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8010728:	b116      	cbz	r6, 8010730 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x182>
 801072a:	2301      	movs	r3, #1
 801072c:	462a      	mov	r2, r5
 801072e:	e779      	b.n	8010624 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x76>
 8010730:	8a63      	ldrh	r3, [r4, #18]
 8010732:	2b00      	cmp	r3, #0
 8010734:	f43f af59 	beq.w	80105ea <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8010738:	e7df      	b.n	80106fa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 801073a:	2800      	cmp	r0, #0
 801073c:	f47f af55 	bne.w	80105ea <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8010740:	2e00      	cmp	r6, #0
 8010742:	f43f af52 	beq.w	80105ea <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8010746:	2301      	movs	r3, #1
 8010748:	462a      	mov	r2, r5
 801074a:	e7db      	b.n	8010704 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x156>

0801074c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 801074c:	b530      	push	{r4, r5, lr}
 801074e:	4605      	mov	r5, r0
 8010750:	b08b      	sub	sp, #44	; 0x2c
 8010752:	b191      	cbz	r1, 801077a <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x2e>
 8010754:	e9cd 3100 	strd	r3, r1, [sp]
 8010758:	4613      	mov	r3, r2
 801075a:	4601      	mov	r1, r0
 801075c:	f8bd 2038 	ldrh.w	r2, [sp, #56]	; 0x38
 8010760:	a802      	add	r0, sp, #8
 8010762:	f7ff fd09 	bl	8010178 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 8010766:	2401      	movs	r4, #1
 8010768:	2100      	movs	r1, #0
 801076a:	a802      	add	r0, sp, #8
 801076c:	f7ff ff1f 	bl	80105ae <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 8010770:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8010774:	b163      	cbz	r3, 8010790 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 8010776:	3401      	adds	r4, #1
 8010778:	e7f6      	b.n	8010768 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x1c>
 801077a:	f002 fda3 	bl	80132c4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801077e:	2401      	movs	r4, #1
 8010780:	280a      	cmp	r0, #10
 8010782:	4628      	mov	r0, r5
 8010784:	bf08      	it	eq
 8010786:	3401      	addeq	r4, #1
 8010788:	f002 fd9c 	bl	80132c4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801078c:	2800      	cmp	r0, #0
 801078e:	d1f7      	bne.n	8010780 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 8010790:	b2a0      	uxth	r0, r4
 8010792:	b00b      	add	sp, #44	; 0x2c
 8010794:	bd30      	pop	{r4, r5, pc}

08010796 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 8010796:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801079a:	b0e5      	sub	sp, #404	; 0x194
 801079c:	4689      	mov	r9, r1
 801079e:	f8dd a1b8 	ldr.w	sl, [sp, #440]	; 0x1b8
 80107a2:	900a      	str	r0, [sp, #40]	; 0x28
 80107a4:	461c      	mov	r4, r3
 80107a6:	f1ba 0f00 	cmp.w	sl, #0
 80107aa:	f000 80b4 	beq.w	8010916 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 80107ae:	681b      	ldr	r3, [r3, #0]
 80107b0:	2b00      	cmp	r3, #0
 80107b2:	f000 80b0 	beq.w	8010916 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 80107b6:	7ba3      	ldrb	r3, [r4, #14]
 80107b8:	2b00      	cmp	r3, #0
 80107ba:	f000 80ac 	beq.w	8010916 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 80107be:	6810      	ldr	r0, [r2, #0]
 80107c0:	6851      	ldr	r1, [r2, #4]
 80107c2:	f9b9 2004 	ldrsh.w	r2, [r9, #4]
 80107c6:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 80107ca:	f10d 0834 	add.w	r8, sp, #52	; 0x34
 80107ce:	4643      	mov	r3, r8
 80107d0:	c303      	stmia	r3!, {r0, r1}
 80107d2:	2500      	movs	r5, #0
 80107d4:	f9b9 3006 	ldrsh.w	r3, [r9, #6]
 80107d8:	79a2      	ldrb	r2, [r4, #6]
 80107da:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 80107de:	a90f      	add	r1, sp, #60	; 0x3c
 80107e0:	4640      	mov	r0, r8
 80107e2:	950f      	str	r5, [sp, #60]	; 0x3c
 80107e4:	f7ff fd40 	bl	8010268 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 80107e8:	a90f      	add	r1, sp, #60	; 0x3c
 80107ea:	4608      	mov	r0, r1
 80107ec:	79a2      	ldrb	r2, [r4, #6]
 80107ee:	af19      	add	r7, sp, #100	; 0x64
 80107f0:	f7ff fd3a 	bl	8010268 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 80107f4:	4638      	mov	r0, r7
 80107f6:	f002 f93a 	bl	8012a6e <_ZN8touchgfx12TextProviderC1Ev>
 80107fa:	6820      	ldr	r0, [r4, #0]
 80107fc:	6803      	ldr	r3, [r0, #0]
 80107fe:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8010800:	4798      	blx	r3
 8010802:	4606      	mov	r6, r0
 8010804:	6820      	ldr	r0, [r4, #0]
 8010806:	6803      	ldr	r3, [r0, #0]
 8010808:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801080a:	4798      	blx	r3
 801080c:	4633      	mov	r3, r6
 801080e:	9000      	str	r0, [sp, #0]
 8010810:	9a6f      	ldr	r2, [sp, #444]	; 0x1bc
 8010812:	4651      	mov	r1, sl
 8010814:	4638      	mov	r0, r7
 8010816:	f002 f985 	bl	8012b24 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801081a:	6820      	ldr	r0, [r4, #0]
 801081c:	7923      	ldrb	r3, [r4, #4]
 801081e:	9308      	str	r3, [sp, #32]
 8010820:	6803      	ldr	r3, [r0, #0]
 8010822:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010824:	4798      	blx	r3
 8010826:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801082a:	181e      	adds	r6, r3, r0
 801082c:	42ae      	cmp	r6, r5
 801082e:	dd06      	ble.n	801083e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xa8>
 8010830:	f9b8 2002 	ldrsh.w	r2, [r8, #2]
 8010834:	4282      	cmp	r2, r0
 8010836:	bfa4      	itt	ge
 8010838:	189d      	addge	r5, r3, r2
 801083a:	fb95 f5f6 	sdivge	r5, r5, r6
 801083e:	a832      	add	r0, sp, #200	; 0xc8
 8010840:	f002 f915 	bl	8012a6e <_ZN8touchgfx12TextProviderC1Ev>
 8010844:	7c23      	ldrb	r3, [r4, #16]
 8010846:	b17b      	cbz	r3, 8010868 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xd2>
 8010848:	6820      	ldr	r0, [r4, #0]
 801084a:	6803      	ldr	r3, [r0, #0]
 801084c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801084e:	4798      	blx	r3
 8010850:	4683      	mov	fp, r0
 8010852:	6820      	ldr	r0, [r4, #0]
 8010854:	6803      	ldr	r3, [r0, #0]
 8010856:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8010858:	4798      	blx	r3
 801085a:	465b      	mov	r3, fp
 801085c:	9000      	str	r0, [sp, #0]
 801085e:	9a6f      	ldr	r2, [sp, #444]	; 0x1bc
 8010860:	4651      	mov	r1, sl
 8010862:	a832      	add	r0, sp, #200	; 0xc8
 8010864:	f002 f95e 	bl	8012b24 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8010868:	7be1      	ldrb	r1, [r4, #15]
 801086a:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 801086e:	7963      	ldrb	r3, [r4, #5]
 8010870:	1a52      	subs	r2, r2, r1
 8010872:	7c21      	ldrb	r1, [r4, #16]
 8010874:	9101      	str	r1, [sp, #4]
 8010876:	6821      	ldr	r1, [r4, #0]
 8010878:	9100      	str	r1, [sp, #0]
 801087a:	b292      	uxth	r2, r2
 801087c:	a932      	add	r1, sp, #200	; 0xc8
 801087e:	a811      	add	r0, sp, #68	; 0x44
 8010880:	f7ff fc7a 	bl	8010178 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 8010884:	7c23      	ldrb	r3, [r4, #16]
 8010886:	b9bb      	cbnz	r3, 80108b8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>
 8010888:	fa1f fa86 	uxth.w	sl, r6
 801088c:	2d00      	cmp	r5, #0
 801088e:	dd45      	ble.n	801091c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x186>
 8010890:	4638      	mov	r0, r7
 8010892:	f002 fd17 	bl	80132c4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8010896:	2800      	cmp	r0, #0
 8010898:	d03d      	beq.n	8010916 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 801089a:	280a      	cmp	r0, #10
 801089c:	d1f6      	bne.n	801088c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf6>
 801089e:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 80108a2:	4453      	add	r3, sl
 80108a4:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 80108a8:	f8bd 3042 	ldrh.w	r3, [sp, #66]	; 0x42
 80108ac:	eba3 030a 	sub.w	r3, r3, sl
 80108b0:	3d01      	subs	r5, #1
 80108b2:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 80108b6:	e7e9      	b.n	801088c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf6>
 80108b8:	0073      	lsls	r3, r6, #1
 80108ba:	9309      	str	r3, [sp, #36]	; 0x24
 80108bc:	f64f 7bff 	movw	fp, #65535	; 0xffff
 80108c0:	fa1f fa86 	uxth.w	sl, r6
 80108c4:	2d00      	cmp	r5, #0
 80108c6:	dd29      	ble.n	801091c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x186>
 80108c8:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 80108cc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80108ce:	428b      	cmp	r3, r1
 80108d0:	bfd4      	ite	le
 80108d2:	2100      	movle	r1, #0
 80108d4:	2101      	movgt	r1, #1
 80108d6:	a811      	add	r0, sp, #68	; 0x44
 80108d8:	f7ff fe69 	bl	80105ae <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 80108dc:	f8bd 3056 	ldrh.w	r3, [sp, #86]	; 0x56
 80108e0:	3b01      	subs	r3, #1
 80108e2:	b29b      	uxth	r3, r3
 80108e4:	455b      	cmp	r3, fp
 80108e6:	930b      	str	r3, [sp, #44]	; 0x2c
 80108e8:	d005      	beq.n	80108f6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x160>
 80108ea:	7961      	ldrb	r1, [r4, #5]
 80108ec:	4638      	mov	r0, r7
 80108ee:	f7f4 f9db 	bl	8004ca8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80108f2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80108f4:	e7f4      	b.n	80108e0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x14a>
 80108f6:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 80108fa:	4453      	add	r3, sl
 80108fc:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 8010900:	f8bd 3042 	ldrh.w	r3, [sp, #66]	; 0x42
 8010904:	eba3 030a 	sub.w	r3, r3, sl
 8010908:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 801090c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8010910:	3d01      	subs	r5, #1
 8010912:	2b00      	cmp	r3, #0
 8010914:	d1d6      	bne.n	80108c4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x12e>
 8010916:	b065      	add	sp, #404	; 0x194
 8010918:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801091c:	0075      	lsls	r5, r6, #1
 801091e:	f04f 0a00 	mov.w	sl, #0
 8010922:	7c23      	ldrb	r3, [r4, #16]
 8010924:	2b00      	cmp	r3, #0
 8010926:	d066      	beq.n	80109f6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x260>
 8010928:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 801092c:	428d      	cmp	r5, r1
 801092e:	bfd4      	ite	le
 8010930:	2100      	movle	r1, #0
 8010932:	2101      	movgt	r1, #1
 8010934:	a811      	add	r0, sp, #68	; 0x44
 8010936:	f7ff fe3a 	bl	80105ae <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 801093a:	9b08      	ldr	r3, [sp, #32]
 801093c:	2b00      	cmp	r3, #0
 801093e:	d055      	beq.n	80109ec <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 8010940:	f894 b010 	ldrb.w	fp, [r4, #16]
 8010944:	2264      	movs	r2, #100	; 0x64
 8010946:	4639      	mov	r1, r7
 8010948:	a84b      	add	r0, sp, #300	; 0x12c
 801094a:	f010 f8f1 	bl	8020b30 <memcpy>
 801094e:	f1bb 0f00 	cmp.w	fp, #0
 8010952:	d058      	beq.n	8010a06 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x270>
 8010954:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 8010958:	7922      	ldrb	r2, [r4, #4]
 801095a:	2a01      	cmp	r2, #1
 801095c:	d13c      	bne.n	80109d8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x242>
 801095e:	f9bd 0040 	ldrsh.w	r0, [sp, #64]	; 0x40
 8010962:	1ac0      	subs	r0, r0, r3
 8010964:	2302      	movs	r3, #2
 8010966:	fb90 f0f3 	sdiv	r0, r0, r3
 801096a:	b200      	sxth	r0, r0
 801096c:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8010970:	4418      	add	r0, r3
 8010972:	7c23      	ldrb	r3, [r4, #16]
 8010974:	b200      	sxth	r0, r0
 8010976:	2b00      	cmp	r3, #0
 8010978:	d03a      	beq.n	80109f0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25a>
 801097a:	f8bd 2056 	ldrh.w	r2, [sp, #86]	; 0x56
 801097e:	f89d 1062 	ldrb.w	r1, [sp, #98]	; 0x62
 8010982:	9000      	str	r0, [sp, #0]
 8010984:	e9cd 2105 	strd	r2, r1, [sp, #20]
 8010988:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	; 0x3e
 801098c:	980a      	ldr	r0, [sp, #40]	; 0x28
 801098e:	e9cd a703 	strd	sl, r7, [sp, #12]
 8010992:	e9cd 8401 	strd	r8, r4, [sp, #4]
 8010996:	464a      	mov	r2, r9
 8010998:	2100      	movs	r1, #0
 801099a:	f7ff fc96 	bl	80102ca <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 801099e:	2800      	cmp	r0, #0
 80109a0:	d1b9      	bne.n	8010916 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 80109a2:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 80109a6:	b2b2      	uxth	r2, r6
 80109a8:	4611      	mov	r1, r2
 80109aa:	4413      	add	r3, r2
 80109ac:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 80109b0:	1a52      	subs	r2, r2, r1
 80109b2:	7c21      	ldrb	r1, [r4, #16]
 80109b4:	b21b      	sxth	r3, r3
 80109b6:	b212      	sxth	r2, r2
 80109b8:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 80109bc:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 80109c0:	b109      	cbz	r1, 80109c6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x230>
 80109c2:	42b2      	cmp	r2, r6
 80109c4:	dba7      	blt.n	8010916 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 80109c6:	f8b8 2006 	ldrh.w	r2, [r8, #6]
 80109ca:	f8b8 1002 	ldrh.w	r1, [r8, #2]
 80109ce:	440a      	add	r2, r1
 80109d0:	b212      	sxth	r2, r2
 80109d2:	4293      	cmp	r3, r2
 80109d4:	dda5      	ble.n	8010922 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x18c>
 80109d6:	e79e      	b.n	8010916 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 80109d8:	2a02      	cmp	r2, #2
 80109da:	d105      	bne.n	80109e8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 80109dc:	7be2      	ldrb	r2, [r4, #15]
 80109de:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 80109e2:	1a80      	subs	r0, r0, r2
 80109e4:	1ac0      	subs	r0, r0, r3
 80109e6:	e7c0      	b.n	801096a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d4>
 80109e8:	2000      	movs	r0, #0
 80109ea:	e7bf      	b.n	801096c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d6>
 80109ec:	7be0      	ldrb	r0, [r4, #15]
 80109ee:	e7bd      	b.n	801096c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d6>
 80109f0:	f647 72ff 	movw	r2, #32767	; 0x7fff
 80109f4:	e7c3      	b.n	801097e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e8>
 80109f6:	9b08      	ldr	r3, [sp, #32]
 80109f8:	2b00      	cmp	r3, #0
 80109fa:	d0f7      	beq.n	80109ec <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 80109fc:	2264      	movs	r2, #100	; 0x64
 80109fe:	4639      	mov	r1, r7
 8010a00:	a84b      	add	r0, sp, #300	; 0x12c
 8010a02:	f010 f895 	bl	8020b30 <memcpy>
 8010a06:	2300      	movs	r3, #0
 8010a08:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8010a0c:	6821      	ldr	r1, [r4, #0]
 8010a0e:	a84b      	add	r0, sp, #300	; 0x12c
 8010a10:	f7ff fbee 	bl	80101f0 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8010a14:	b203      	sxth	r3, r0
 8010a16:	e79f      	b.n	8010958 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c2>

08010a18 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 8010a18:	2b03      	cmp	r3, #3
 8010a1a:	d818      	bhi.n	8010a4e <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 8010a1c:	e8df f003 	tbb	[pc, r3]
 8010a20:	130d0602 	.word	0x130d0602
 8010a24:	f9b0 2000 	ldrsh.w	r2, [r0]
 8010a28:	1850      	adds	r0, r2, r1
 8010a2a:	4770      	bx	lr
 8010a2c:	8803      	ldrh	r3, [r0, #0]
 8010a2e:	8880      	ldrh	r0, [r0, #4]
 8010a30:	4418      	add	r0, r3
 8010a32:	b200      	sxth	r0, r0
 8010a34:	1a80      	subs	r0, r0, r2
 8010a36:	3801      	subs	r0, #1
 8010a38:	4770      	bx	lr
 8010a3a:	8803      	ldrh	r3, [r0, #0]
 8010a3c:	8880      	ldrh	r0, [r0, #4]
 8010a3e:	4418      	add	r0, r3
 8010a40:	b200      	sxth	r0, r0
 8010a42:	1a40      	subs	r0, r0, r1
 8010a44:	e7f7      	b.n	8010a36 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 8010a46:	f9b0 0000 	ldrsh.w	r0, [r0]
 8010a4a:	4410      	add	r0, r2
 8010a4c:	4770      	bx	lr
 8010a4e:	2000      	movs	r0, #0
 8010a50:	4770      	bx	lr

08010a52 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 8010a52:	2b03      	cmp	r3, #3
 8010a54:	d817      	bhi.n	8010a86 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 8010a56:	e8df f003 	tbb	[pc, r3]
 8010a5a:	0602      	.short	0x0602
 8010a5c:	1009      	.short	0x1009
 8010a5e:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8010a62:	1850      	adds	r0, r2, r1
 8010a64:	4770      	bx	lr
 8010a66:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8010a6a:	e7fa      	b.n	8010a62 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 8010a6c:	8843      	ldrh	r3, [r0, #2]
 8010a6e:	88c0      	ldrh	r0, [r0, #6]
 8010a70:	4418      	add	r0, r3
 8010a72:	b200      	sxth	r0, r0
 8010a74:	1a80      	subs	r0, r0, r2
 8010a76:	3801      	subs	r0, #1
 8010a78:	4770      	bx	lr
 8010a7a:	8843      	ldrh	r3, [r0, #2]
 8010a7c:	88c0      	ldrh	r0, [r0, #6]
 8010a7e:	4418      	add	r0, r3
 8010a80:	b200      	sxth	r0, r0
 8010a82:	1a40      	subs	r0, r0, r1
 8010a84:	e7f7      	b.n	8010a76 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 8010a86:	2000      	movs	r0, #0
 8010a88:	4770      	bx	lr
	...

08010a8c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 8010a8c:	4b01      	ldr	r3, [pc, #4]	; (8010a94 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 8010a8e:	2200      	movs	r2, #0
 8010a90:	601a      	str	r2, [r3, #0]
 8010a92:	4770      	bx	lr
 8010a94:	200155c4 	.word	0x200155c4

08010a98 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 8010a98:	4603      	mov	r3, r0
 8010a9a:	b1c8      	cbz	r0, 8010ad0 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 8010a9c:	0c02      	lsrs	r2, r0, #16
 8010a9e:	0412      	lsls	r2, r2, #16
 8010aa0:	b9a2      	cbnz	r2, 8010acc <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 8010aa2:	0403      	lsls	r3, r0, #16
 8010aa4:	2010      	movs	r0, #16
 8010aa6:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8010aaa:	bf04      	itt	eq
 8010aac:	021b      	lsleq	r3, r3, #8
 8010aae:	3008      	addeq	r0, #8
 8010ab0:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8010ab4:	bf04      	itt	eq
 8010ab6:	011b      	lsleq	r3, r3, #4
 8010ab8:	3004      	addeq	r0, #4
 8010aba:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8010abe:	bf04      	itt	eq
 8010ac0:	009b      	lsleq	r3, r3, #2
 8010ac2:	3002      	addeq	r0, #2
 8010ac4:	2b00      	cmp	r3, #0
 8010ac6:	db04      	blt.n	8010ad2 <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 8010ac8:	3001      	adds	r0, #1
 8010aca:	4770      	bx	lr
 8010acc:	2000      	movs	r0, #0
 8010ace:	e7ea      	b.n	8010aa6 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 8010ad0:	2020      	movs	r0, #32
 8010ad2:	4770      	bx	lr

08010ad4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 8010ad4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010ad8:	b087      	sub	sp, #28
 8010ada:	4681      	mov	r9, r0
 8010adc:	4698      	mov	r8, r3
 8010ade:	4610      	mov	r0, r2
 8010ae0:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 8010ae4:	460d      	mov	r5, r1
 8010ae6:	b981      	cbnz	r1, 8010b0a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x36>
 8010ae8:	b14b      	cbz	r3, 8010afe <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x2a>
 8010aea:	460b      	mov	r3, r1
 8010aec:	e9cd 4700 	strd	r4, r7, [sp]
 8010af0:	464a      	mov	r2, r9
 8010af2:	4641      	mov	r1, r8
 8010af4:	f7ff ffee 	bl	8010ad4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8010af8:	b007      	add	sp, #28
 8010afa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010afe:	f04f 33ff 	mov.w	r3, #4294967295
 8010b02:	603b      	str	r3, [r7, #0]
 8010b04:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8010b08:	e7f6      	b.n	8010af8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 8010b0a:	fa32 fa01 	lsrs.w	sl, r2, r1
 8010b0e:	d107      	bne.n	8010b20 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4c>
 8010b10:	fb09 f602 	mul.w	r6, r9, r2
 8010b14:	fbb6 f0f4 	udiv	r0, r6, r4
 8010b18:	fb04 6610 	mls	r6, r4, r0, r6
 8010b1c:	603e      	str	r6, [r7, #0]
 8010b1e:	e7eb      	b.n	8010af8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 8010b20:	2601      	movs	r6, #1
 8010b22:	408e      	lsls	r6, r1
 8010b24:	3e01      	subs	r6, #1
 8010b26:	4016      	ands	r6, r2
 8010b28:	fa09 fb01 	lsl.w	fp, r9, r1
 8010b2c:	4630      	mov	r0, r6
 8010b2e:	fbbb f3f4 	udiv	r3, fp, r4
 8010b32:	9302      	str	r3, [sp, #8]
 8010b34:	fb0a f303 	mul.w	r3, sl, r3
 8010b38:	9303      	str	r3, [sp, #12]
 8010b3a:	f7ff ffad 	bl	8010a98 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8010b3e:	464a      	mov	r2, r9
 8010b40:	460b      	mov	r3, r1
 8010b42:	e9cd 4700 	strd	r4, r7, [sp]
 8010b46:	4601      	mov	r1, r0
 8010b48:	4630      	mov	r0, r6
 8010b4a:	f7ff ffc3 	bl	8010ad4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8010b4e:	9b02      	ldr	r3, [sp, #8]
 8010b50:	fb04 bb13 	mls	fp, r4, r3, fp
 8010b54:	4606      	mov	r6, r0
 8010b56:	4658      	mov	r0, fp
 8010b58:	eb05 0108 	add.w	r1, r5, r8
 8010b5c:	f7ff ff9c 	bl	8010a98 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8010b60:	ab05      	add	r3, sp, #20
 8010b62:	e9cd 4300 	strd	r4, r3, [sp]
 8010b66:	465a      	mov	r2, fp
 8010b68:	4603      	mov	r3, r0
 8010b6a:	4650      	mov	r0, sl
 8010b6c:	f7ff ffb2 	bl	8010ad4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8010b70:	6839      	ldr	r1, [r7, #0]
 8010b72:	9a05      	ldr	r2, [sp, #20]
 8010b74:	9b03      	ldr	r3, [sp, #12]
 8010b76:	4411      	add	r1, r2
 8010b78:	fbb1 f2f4 	udiv	r2, r1, r4
 8010b7c:	18d3      	adds	r3, r2, r3
 8010b7e:	441e      	add	r6, r3
 8010b80:	fb04 1412 	mls	r4, r4, r2, r1
 8010b84:	4430      	add	r0, r6
 8010b86:	603c      	str	r4, [r7, #0]
 8010b88:	e7b6      	b.n	8010af8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>

08010b8a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 8010b8a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010b8e:	b085      	sub	sp, #20
 8010b90:	f1b0 0900 	subs.w	r9, r0, #0
 8010b94:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8010b96:	461d      	mov	r5, r3
 8010b98:	bfbf      	itttt	lt
 8010b9a:	6823      	ldrlt	r3, [r4, #0]
 8010b9c:	425b      	neglt	r3, r3
 8010b9e:	f1c9 0900 	rsblt	r9, r9, #0
 8010ba2:	6023      	strlt	r3, [r4, #0]
 8010ba4:	bfb4      	ite	lt
 8010ba6:	f04f 36ff 	movlt.w	r6, #4294967295
 8010baa:	2601      	movge	r6, #1
 8010bac:	2a00      	cmp	r2, #0
 8010bae:	4617      	mov	r7, r2
 8010bb0:	da04      	bge.n	8010bbc <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 8010bb2:	6823      	ldr	r3, [r4, #0]
 8010bb4:	425b      	negs	r3, r3
 8010bb6:	4257      	negs	r7, r2
 8010bb8:	4276      	negs	r6, r6
 8010bba:	6023      	str	r3, [r4, #0]
 8010bbc:	2d00      	cmp	r5, #0
 8010bbe:	4638      	mov	r0, r7
 8010bc0:	bfba      	itte	lt
 8010bc2:	426d      	neglt	r5, r5
 8010bc4:	f04f 38ff 	movlt.w	r8, #4294967295
 8010bc8:	f04f 0801 	movge.w	r8, #1
 8010bcc:	f7ff ff64 	bl	8010a98 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8010bd0:	ab03      	add	r3, sp, #12
 8010bd2:	e9cd 5300 	strd	r5, r3, [sp]
 8010bd6:	463a      	mov	r2, r7
 8010bd8:	4603      	mov	r3, r0
 8010bda:	4648      	mov	r0, r9
 8010bdc:	f7ff ff7a 	bl	8010ad4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8010be0:	6823      	ldr	r3, [r4, #0]
 8010be2:	9a03      	ldr	r2, [sp, #12]
 8010be4:	4546      	cmp	r6, r8
 8010be6:	441a      	add	r2, r3
 8010be8:	fb92 f3f5 	sdiv	r3, r2, r5
 8010bec:	4418      	add	r0, r3
 8010bee:	bf18      	it	ne
 8010bf0:	4240      	negne	r0, r0
 8010bf2:	fb05 2313 	mls	r3, r5, r3, r2
 8010bf6:	1c72      	adds	r2, r6, #1
 8010bf8:	6023      	str	r3, [r4, #0]
 8010bfa:	d105      	bne.n	8010c08 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 8010bfc:	2b00      	cmp	r3, #0
 8010bfe:	f1c3 0200 	rsb	r2, r3, #0
 8010c02:	db0b      	blt.n	8010c1c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 8010c04:	6022      	str	r2, [r4, #0]
 8010c06:	e006      	b.n	8010c16 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8010c08:	2e01      	cmp	r6, #1
 8010c0a:	d104      	bne.n	8010c16 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8010c0c:	2b00      	cmp	r3, #0
 8010c0e:	da02      	bge.n	8010c16 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8010c10:	442b      	add	r3, r5
 8010c12:	3801      	subs	r0, #1
 8010c14:	6023      	str	r3, [r4, #0]
 8010c16:	b005      	add	sp, #20
 8010c18:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010c1c:	3801      	subs	r0, #1
 8010c1e:	1b52      	subs	r2, r2, r5
 8010c20:	e7f0      	b.n	8010c04 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>
	...

08010c24 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 8010c24:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8010c28:	4c1c      	ldr	r4, [pc, #112]	; (8010c9c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 8010c2a:	6807      	ldr	r7, [r0, #0]
 8010c2c:	69a3      	ldr	r3, [r4, #24]
 8010c2e:	4605      	mov	r5, r0
 8010c30:	b92b      	cbnz	r3, 8010c3e <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 8010c32:	6840      	ldr	r0, [r0, #4]
 8010c34:	e9c5 7000 	strd	r7, r0, [r5]
 8010c38:	b004      	add	sp, #16
 8010c3a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010c3e:	68a2      	ldr	r2, [r4, #8]
 8010c40:	6820      	ldr	r0, [r4, #0]
 8010c42:	ae04      	add	r6, sp, #16
 8010c44:	f04f 0802 	mov.w	r8, #2
 8010c48:	fb93 f1f8 	sdiv	r1, r3, r8
 8010c4c:	440a      	add	r2, r1
 8010c4e:	f846 2d04 	str.w	r2, [r6, #-4]!
 8010c52:	69e1      	ldr	r1, [r4, #28]
 8010c54:	9600      	str	r6, [sp, #0]
 8010c56:	463a      	mov	r2, r7
 8010c58:	f7ff ff97 	bl	8010b8a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8010c5c:	69a3      	ldr	r3, [r4, #24]
 8010c5e:	686a      	ldr	r2, [r5, #4]
 8010c60:	6a21      	ldr	r1, [r4, #32]
 8010c62:	9600      	str	r6, [sp, #0]
 8010c64:	4607      	mov	r7, r0
 8010c66:	6860      	ldr	r0, [r4, #4]
 8010c68:	f7ff ff8f 	bl	8010b8a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8010c6c:	6962      	ldr	r2, [r4, #20]
 8010c6e:	69a3      	ldr	r3, [r4, #24]
 8010c70:	fb93 f8f8 	sdiv	r8, r3, r8
 8010c74:	4442      	add	r2, r8
 8010c76:	9203      	str	r2, [sp, #12]
 8010c78:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8010c7a:	682a      	ldr	r2, [r5, #0]
 8010c7c:	9600      	str	r6, [sp, #0]
 8010c7e:	4407      	add	r7, r0
 8010c80:	68e0      	ldr	r0, [r4, #12]
 8010c82:	f7ff ff82 	bl	8010b8a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8010c86:	9600      	str	r6, [sp, #0]
 8010c88:	4680      	mov	r8, r0
 8010c8a:	69a3      	ldr	r3, [r4, #24]
 8010c8c:	686a      	ldr	r2, [r5, #4]
 8010c8e:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 8010c90:	6920      	ldr	r0, [r4, #16]
 8010c92:	f7ff ff7a 	bl	8010b8a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8010c96:	4440      	add	r0, r8
 8010c98:	e7cc      	b.n	8010c34 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 8010c9a:	bf00      	nop
 8010c9c:	200155c8 	.word	0x200155c8

08010ca0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 8010ca0:	4b07      	ldr	r3, [pc, #28]	; (8010cc0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 8010ca2:	781b      	ldrb	r3, [r3, #0]
 8010ca4:	2b01      	cmp	r3, #1
 8010ca6:	d109      	bne.n	8010cbc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 8010ca8:	f9b1 3000 	ldrsh.w	r3, [r1]
 8010cac:	f9b0 2000 	ldrsh.w	r2, [r0]
 8010cb0:	8003      	strh	r3, [r0, #0]
 8010cb2:	4b04      	ldr	r3, [pc, #16]	; (8010cc4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 8010cb4:	881b      	ldrh	r3, [r3, #0]
 8010cb6:	3b01      	subs	r3, #1
 8010cb8:	1a9b      	subs	r3, r3, r2
 8010cba:	800b      	strh	r3, [r1, #0]
 8010cbc:	4770      	bx	lr
 8010cbe:	bf00      	nop
 8010cc0:	200155ac 	.word	0x200155ac
 8010cc4:	200155a8 	.word	0x200155a8

08010cc8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 8010cc8:	b510      	push	{r4, lr}
 8010cca:	4b07      	ldr	r3, [pc, #28]	; (8010ce8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 8010ccc:	781b      	ldrb	r3, [r3, #0]
 8010cce:	2b01      	cmp	r3, #1
 8010cd0:	d108      	bne.n	8010ce4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 8010cd2:	4b06      	ldr	r3, [pc, #24]	; (8010cec <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 8010cd4:	880c      	ldrh	r4, [r1, #0]
 8010cd6:	881b      	ldrh	r3, [r3, #0]
 8010cd8:	f9b0 2000 	ldrsh.w	r2, [r0]
 8010cdc:	3b01      	subs	r3, #1
 8010cde:	1b1b      	subs	r3, r3, r4
 8010ce0:	8003      	strh	r3, [r0, #0]
 8010ce2:	800a      	strh	r2, [r1, #0]
 8010ce4:	bd10      	pop	{r4, pc}
 8010ce6:	bf00      	nop
 8010ce8:	200155ac 	.word	0x200155ac
 8010cec:	200155a8 	.word	0x200155a8

08010cf0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 8010cf0:	b510      	push	{r4, lr}
 8010cf2:	4b0a      	ldr	r3, [pc, #40]	; (8010d1c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 8010cf4:	781b      	ldrb	r3, [r3, #0]
 8010cf6:	2b01      	cmp	r3, #1
 8010cf8:	d10e      	bne.n	8010d18 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 8010cfa:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8010cfe:	8843      	ldrh	r3, [r0, #2]
 8010d00:	f9b0 4000 	ldrsh.w	r4, [r0]
 8010d04:	8044      	strh	r4, [r0, #2]
 8010d06:	18ca      	adds	r2, r1, r3
 8010d08:	4b05      	ldr	r3, [pc, #20]	; (8010d20 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 8010d0a:	881b      	ldrh	r3, [r3, #0]
 8010d0c:	1a9b      	subs	r3, r3, r2
 8010d0e:	8003      	strh	r3, [r0, #0]
 8010d10:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8010d14:	80c3      	strh	r3, [r0, #6]
 8010d16:	8081      	strh	r1, [r0, #4]
 8010d18:	bd10      	pop	{r4, pc}
 8010d1a:	bf00      	nop
 8010d1c:	200155ac 	.word	0x200155ac
 8010d20:	200155a8 	.word	0x200155a8

08010d24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 8010d24:	4b08      	ldr	r3, [pc, #32]	; (8010d48 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 8010d26:	781b      	ldrb	r3, [r3, #0]
 8010d28:	2b01      	cmp	r3, #1
 8010d2a:	d10c      	bne.n	8010d46 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 8010d2c:	8803      	ldrh	r3, [r0, #0]
 8010d2e:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 8010d32:	8842      	ldrh	r2, [r0, #2]
 8010d34:	8002      	strh	r2, [r0, #0]
 8010d36:	185a      	adds	r2, r3, r1
 8010d38:	4b04      	ldr	r3, [pc, #16]	; (8010d4c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 8010d3a:	881b      	ldrh	r3, [r3, #0]
 8010d3c:	1a9b      	subs	r3, r3, r2
 8010d3e:	8043      	strh	r3, [r0, #2]
 8010d40:	88c3      	ldrh	r3, [r0, #6]
 8010d42:	8083      	strh	r3, [r0, #4]
 8010d44:	80c1      	strh	r1, [r0, #6]
 8010d46:	4770      	bx	lr
 8010d48:	200155ac 	.word	0x200155ac
 8010d4c:	200155a8 	.word	0x200155a8

08010d50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 8010d50:	b510      	push	{r4, lr}
 8010d52:	4b07      	ldr	r3, [pc, #28]	; (8010d70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 8010d54:	781b      	ldrb	r3, [r3, #0]
 8010d56:	2b01      	cmp	r3, #1
 8010d58:	d108      	bne.n	8010d6c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 8010d5a:	f9b1 3000 	ldrsh.w	r3, [r1]
 8010d5e:	f9b0 4000 	ldrsh.w	r4, [r0]
 8010d62:	8003      	strh	r3, [r0, #0]
 8010d64:	8893      	ldrh	r3, [r2, #4]
 8010d66:	3b01      	subs	r3, #1
 8010d68:	1b1b      	subs	r3, r3, r4
 8010d6a:	800b      	strh	r3, [r1, #0]
 8010d6c:	bd10      	pop	{r4, pc}
 8010d6e:	bf00      	nop
 8010d70:	200155ac 	.word	0x200155ac

08010d74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 8010d74:	b510      	push	{r4, lr}
 8010d76:	4b0a      	ldr	r3, [pc, #40]	; (8010da0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 8010d78:	781b      	ldrb	r3, [r3, #0]
 8010d7a:	2b01      	cmp	r3, #1
 8010d7c:	460a      	mov	r2, r1
 8010d7e:	d10d      	bne.n	8010d9c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 8010d80:	8881      	ldrh	r1, [r0, #4]
 8010d82:	8803      	ldrh	r3, [r0, #0]
 8010d84:	440b      	add	r3, r1
 8010d86:	4601      	mov	r1, r0
 8010d88:	3b01      	subs	r3, #1
 8010d8a:	f821 3b02 	strh.w	r3, [r1], #2
 8010d8e:	f7ff ffdf 	bl	8010d50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 8010d92:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8010d96:	88c2      	ldrh	r2, [r0, #6]
 8010d98:	8082      	strh	r2, [r0, #4]
 8010d9a:	80c3      	strh	r3, [r0, #6]
 8010d9c:	bd10      	pop	{r4, pc}
 8010d9e:	bf00      	nop
 8010da0:	200155ac 	.word	0x200155ac

08010da4 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 8010da4:	b570      	push	{r4, r5, r6, lr}
 8010da6:	4c0b      	ldr	r4, [pc, #44]	; (8010dd4 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 8010da8:	2300      	movs	r3, #0
 8010daa:	4605      	mov	r5, r0
 8010dac:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 8010db0:	6820      	ldr	r0, [r4, #0]
 8010db2:	460e      	mov	r6, r1
 8010db4:	b110      	cbz	r0, 8010dbc <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x18>
 8010db6:	6803      	ldr	r3, [r0, #0]
 8010db8:	695b      	ldr	r3, [r3, #20]
 8010dba:	4798      	blx	r3
 8010dbc:	6026      	str	r6, [r4, #0]
 8010dbe:	6833      	ldr	r3, [r6, #0]
 8010dc0:	4630      	mov	r0, r6
 8010dc2:	68db      	ldr	r3, [r3, #12]
 8010dc4:	4798      	blx	r3
 8010dc6:	682b      	ldr	r3, [r5, #0]
 8010dc8:	4628      	mov	r0, r5
 8010dca:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010dcc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010dd0:	4718      	bx	r3
 8010dd2:	bf00      	nop
 8010dd4:	200155f8 	.word	0x200155f8

08010dd8 <_ZN8touchgfx11Application13requestRedrawEv>:
 8010dd8:	4b06      	ldr	r3, [pc, #24]	; (8010df4 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 8010dda:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010dde:	4b06      	ldr	r3, [pc, #24]	; (8010df8 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 8010de0:	f8a0 2130 	strh.w	r2, [r0, #304]	; 0x130
 8010de4:	f9b3 3000 	ldrsh.w	r3, [r3]
 8010de8:	f8a0 3132 	strh.w	r3, [r0, #306]	; 0x132
 8010dec:	2100      	movs	r1, #0
 8010dee:	f8c0 112c 	str.w	r1, [r0, #300]	; 0x12c
 8010df2:	4770      	bx	lr
 8010df4:	200155a8 	.word	0x200155a8
 8010df8:	200155aa 	.word	0x200155aa

08010dfc <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 8010dfc:	4b03      	ldr	r3, [pc, #12]	; (8010e0c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 8010dfe:	6818      	ldr	r0, [r3, #0]
 8010e00:	b110      	cbz	r0, 8010e08 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 8010e02:	6803      	ldr	r3, [r0, #0]
 8010e04:	699b      	ldr	r3, [r3, #24]
 8010e06:	4718      	bx	r3
 8010e08:	4770      	bx	lr
 8010e0a:	bf00      	nop
 8010e0c:	200155f8 	.word	0x200155f8

08010e10 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 8010e10:	4770      	bx	lr
	...

08010e14 <_ZN8touchgfx11Application4drawEv>:
 8010e14:	b507      	push	{r0, r1, r2, lr}
 8010e16:	4b09      	ldr	r3, [pc, #36]	; (8010e3c <_ZN8touchgfx11Application4drawEv+0x28>)
 8010e18:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010e1c:	4b08      	ldr	r3, [pc, #32]	; (8010e40 <_ZN8touchgfx11Application4drawEv+0x2c>)
 8010e1e:	f8ad 2004 	strh.w	r2, [sp, #4]
 8010e22:	f9b3 3000 	ldrsh.w	r3, [r3]
 8010e26:	f8ad 3006 	strh.w	r3, [sp, #6]
 8010e2a:	6803      	ldr	r3, [r0, #0]
 8010e2c:	2100      	movs	r1, #0
 8010e2e:	9100      	str	r1, [sp, #0]
 8010e30:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8010e32:	4669      	mov	r1, sp
 8010e34:	4798      	blx	r3
 8010e36:	b003      	add	sp, #12
 8010e38:	f85d fb04 	ldr.w	pc, [sp], #4
 8010e3c:	200155a8 	.word	0x200155a8
 8010e40:	200155aa 	.word	0x200155aa

08010e44 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 8010e44:	4b03      	ldr	r3, [pc, #12]	; (8010e54 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 8010e46:	6818      	ldr	r0, [r3, #0]
 8010e48:	b110      	cbz	r0, 8010e50 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 8010e4a:	6803      	ldr	r3, [r0, #0]
 8010e4c:	69db      	ldr	r3, [r3, #28]
 8010e4e:	4718      	bx	r3
 8010e50:	4770      	bx	lr
 8010e52:	bf00      	nop
 8010e54:	200155f8 	.word	0x200155f8

08010e58 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 8010e58:	4b03      	ldr	r3, [pc, #12]	; (8010e68 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 8010e5a:	6818      	ldr	r0, [r3, #0]
 8010e5c:	b110      	cbz	r0, 8010e64 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 8010e5e:	6803      	ldr	r3, [r0, #0]
 8010e60:	6a1b      	ldr	r3, [r3, #32]
 8010e62:	4718      	bx	r3
 8010e64:	4770      	bx	lr
 8010e66:	bf00      	nop
 8010e68:	200155f8 	.word	0x200155f8

08010e6c <_ZN8touchgfx11Application16clearCachedAreasEv>:
 8010e6c:	2300      	movs	r3, #0
 8010e6e:	f8a0 30e8 	strh.w	r3, [r0, #232]	; 0xe8
 8010e72:	4770      	bx	lr

08010e74 <_ZN8touchgfx11Application14handleKeyEventEh>:
 8010e74:	4b03      	ldr	r3, [pc, #12]	; (8010e84 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 8010e76:	6818      	ldr	r0, [r3, #0]
 8010e78:	b110      	cbz	r0, 8010e80 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 8010e7a:	6803      	ldr	r3, [r0, #0]
 8010e7c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8010e7e:	4718      	bx	r3
 8010e80:	4770      	bx	lr
 8010e82:	bf00      	nop
 8010e84:	200155f8 	.word	0x200155f8

08010e88 <_ZN8touchgfx11Application15handleTickEventEv>:
 8010e88:	b570      	push	{r4, r5, r6, lr}
 8010e8a:	4d32      	ldr	r5, [pc, #200]	; (8010f54 <_ZN8touchgfx11Application15handleTickEventEv+0xcc>)
 8010e8c:	4604      	mov	r4, r0
 8010e8e:	6828      	ldr	r0, [r5, #0]
 8010e90:	b140      	cbz	r0, 8010ea4 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8010e92:	7a03      	ldrb	r3, [r0, #8]
 8010e94:	b933      	cbnz	r3, 8010ea4 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8010e96:	f884 3134 	strb.w	r3, [r4, #308]	; 0x134
 8010e9a:	6803      	ldr	r3, [r0, #0]
 8010e9c:	689b      	ldr	r3, [r3, #8]
 8010e9e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010ea2:	4718      	bx	r3
 8010ea4:	f894 3134 	ldrb.w	r3, [r4, #308]	; 0x134
 8010ea8:	b97b      	cbnz	r3, 8010eca <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8010eaa:	b170      	cbz	r0, 8010eca <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8010eac:	7a03      	ldrb	r3, [r0, #8]
 8010eae:	b163      	cbz	r3, 8010eca <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8010eb0:	4b29      	ldr	r3, [pc, #164]	; (8010f58 <_ZN8touchgfx11Application15handleTickEventEv+0xd0>)
 8010eb2:	6818      	ldr	r0, [r3, #0]
 8010eb4:	b110      	cbz	r0, 8010ebc <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 8010eb6:	6803      	ldr	r3, [r0, #0]
 8010eb8:	691b      	ldr	r3, [r3, #16]
 8010eba:	4798      	blx	r3
 8010ebc:	6828      	ldr	r0, [r5, #0]
 8010ebe:	6803      	ldr	r3, [r0, #0]
 8010ec0:	68db      	ldr	r3, [r3, #12]
 8010ec2:	4798      	blx	r3
 8010ec4:	2301      	movs	r3, #1
 8010ec6:	f884 3134 	strb.w	r3, [r4, #308]	; 0x134
 8010eca:	2500      	movs	r5, #0
 8010ecc:	f8b4 0084 	ldrh.w	r0, [r4, #132]	; 0x84
 8010ed0:	42a8      	cmp	r0, r5
 8010ed2:	dd0c      	ble.n	8010eee <_ZN8touchgfx11Application15handleTickEventEv+0x66>
 8010ed4:	1963      	adds	r3, r4, r5
 8010ed6:	f893 2088 	ldrb.w	r2, [r3, #136]	; 0x88
 8010eda:	b132      	cbz	r2, 8010eea <_ZN8touchgfx11Application15handleTickEventEv+0x62>
 8010edc:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 8010ee0:	4413      	add	r3, r2
 8010ee2:	6858      	ldr	r0, [r3, #4]
 8010ee4:	6803      	ldr	r3, [r0, #0]
 8010ee6:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8010ee8:	4798      	blx	r3
 8010eea:	3501      	adds	r5, #1
 8010eec:	e7ee      	b.n	8010ecc <_ZN8touchgfx11Application15handleTickEventEv+0x44>
 8010eee:	2300      	movs	r3, #0
 8010ef0:	461a      	mov	r2, r3
 8010ef2:	4298      	cmp	r0, r3
 8010ef4:	d015      	beq.n	8010f22 <_ZN8touchgfx11Application15handleTickEventEv+0x9a>
 8010ef6:	18e1      	adds	r1, r4, r3
 8010ef8:	f891 5088 	ldrb.w	r5, [r1, #136]	; 0x88
 8010efc:	b16d      	cbz	r5, 8010f1a <_ZN8touchgfx11Application15handleTickEventEv+0x92>
 8010efe:	429a      	cmp	r2, r3
 8010f00:	d00a      	beq.n	8010f18 <_ZN8touchgfx11Application15handleTickEventEv+0x90>
 8010f02:	eb03 0643 	add.w	r6, r3, r3, lsl #1
 8010f06:	4431      	add	r1, r6
 8010f08:	684e      	ldr	r6, [r1, #4]
 8010f0a:	b291      	uxth	r1, r2
 8010f0c:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8010f10:	604e      	str	r6, [r1, #4]
 8010f12:	18a1      	adds	r1, r4, r2
 8010f14:	f881 5088 	strb.w	r5, [r1, #136]	; 0x88
 8010f18:	3201      	adds	r2, #1
 8010f1a:	3301      	adds	r3, #1
 8010f1c:	e7e9      	b.n	8010ef2 <_ZN8touchgfx11Application15handleTickEventEv+0x6a>
 8010f1e:	f8a4 3084 	strh.w	r3, [r4, #132]	; 0x84
 8010f22:	f8b4 5084 	ldrh.w	r5, [r4, #132]	; 0x84
 8010f26:	4295      	cmp	r5, r2
 8010f28:	dd0d      	ble.n	8010f46 <_ZN8touchgfx11Application15handleTickEventEv+0xbe>
 8010f2a:	1e6b      	subs	r3, r5, #1
 8010f2c:	b29b      	uxth	r3, r3
 8010f2e:	eb04 0183 	add.w	r1, r4, r3, lsl #2
 8010f32:	4618      	mov	r0, r3
 8010f34:	3104      	adds	r1, #4
 8010f36:	4285      	cmp	r5, r0
 8010f38:	ddf1      	ble.n	8010f1e <_ZN8touchgfx11Application15handleTickEventEv+0x96>
 8010f3a:	f851 6f04 	ldr.w	r6, [r1, #4]!
 8010f3e:	f841 6c04 	str.w	r6, [r1, #-4]
 8010f42:	3001      	adds	r0, #1
 8010f44:	e7f7      	b.n	8010f36 <_ZN8touchgfx11Application15handleTickEventEv+0xae>
 8010f46:	4b04      	ldr	r3, [pc, #16]	; (8010f58 <_ZN8touchgfx11Application15handleTickEventEv+0xd0>)
 8010f48:	6818      	ldr	r0, [r3, #0]
 8010f4a:	b110      	cbz	r0, 8010f52 <_ZN8touchgfx11Application15handleTickEventEv+0xca>
 8010f4c:	6803      	ldr	r3, [r0, #0]
 8010f4e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010f50:	e7a5      	b.n	8010e9e <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 8010f52:	bd70      	pop	{r4, r5, r6, pc}
 8010f54:	200155fc 	.word	0x200155fc
 8010f58:	200155f8 	.word	0x200155f8

08010f5c <_ZN8touchgfx11ApplicationD1Ev>:
 8010f5c:	4770      	bx	lr

08010f5e <_ZN8touchgfx11ApplicationD0Ev>:
 8010f5e:	b510      	push	{r4, lr}
 8010f60:	f44f 719c 	mov.w	r1, #312	; 0x138
 8010f64:	4604      	mov	r4, r0
 8010f66:	f00f fbb7 	bl	80206d8 <_ZdlPvj>
 8010f6a:	4620      	mov	r0, r4
 8010f6c:	bd10      	pop	{r4, pc}

08010f6e <_ZNK8touchgfx4Rect9intersectERKS0_>:
 8010f6e:	b510      	push	{r4, lr}
 8010f70:	f9b1 4000 	ldrsh.w	r4, [r1]
 8010f74:	888a      	ldrh	r2, [r1, #4]
 8010f76:	f9b0 3000 	ldrsh.w	r3, [r0]
 8010f7a:	4422      	add	r2, r4
 8010f7c:	b212      	sxth	r2, r2
 8010f7e:	4293      	cmp	r3, r2
 8010f80:	da15      	bge.n	8010fae <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8010f82:	8882      	ldrh	r2, [r0, #4]
 8010f84:	4413      	add	r3, r2
 8010f86:	b21b      	sxth	r3, r3
 8010f88:	429c      	cmp	r4, r3
 8010f8a:	da10      	bge.n	8010fae <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8010f8c:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8010f90:	88c9      	ldrh	r1, [r1, #6]
 8010f92:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8010f96:	4419      	add	r1, r3
 8010f98:	b209      	sxth	r1, r1
 8010f9a:	428a      	cmp	r2, r1
 8010f9c:	da07      	bge.n	8010fae <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8010f9e:	88c0      	ldrh	r0, [r0, #6]
 8010fa0:	4410      	add	r0, r2
 8010fa2:	b200      	sxth	r0, r0
 8010fa4:	4283      	cmp	r3, r0
 8010fa6:	bfac      	ite	ge
 8010fa8:	2000      	movge	r0, #0
 8010faa:	2001      	movlt	r0, #1
 8010fac:	bd10      	pop	{r4, pc}
 8010fae:	2000      	movs	r0, #0
 8010fb0:	e7fc      	b.n	8010fac <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

08010fb2 <_ZN8touchgfx4Rect10restrictToEss>:
 8010fb2:	f9b0 3000 	ldrsh.w	r3, [r0]
 8010fb6:	2b00      	cmp	r3, #0
 8010fb8:	b510      	push	{r4, lr}
 8010fba:	da04      	bge.n	8010fc6 <_ZN8touchgfx4Rect10restrictToEss+0x14>
 8010fbc:	8884      	ldrh	r4, [r0, #4]
 8010fbe:	4423      	add	r3, r4
 8010fc0:	8083      	strh	r3, [r0, #4]
 8010fc2:	2300      	movs	r3, #0
 8010fc4:	8003      	strh	r3, [r0, #0]
 8010fc6:	f9b0 4000 	ldrsh.w	r4, [r0]
 8010fca:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8010fce:	1b09      	subs	r1, r1, r4
 8010fd0:	428b      	cmp	r3, r1
 8010fd2:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8010fd6:	bfc8      	it	gt
 8010fd8:	8081      	strhgt	r1, [r0, #4]
 8010fda:	2b00      	cmp	r3, #0
 8010fdc:	da04      	bge.n	8010fe8 <_ZN8touchgfx4Rect10restrictToEss+0x36>
 8010fde:	88c1      	ldrh	r1, [r0, #6]
 8010fe0:	440b      	add	r3, r1
 8010fe2:	80c3      	strh	r3, [r0, #6]
 8010fe4:	2300      	movs	r3, #0
 8010fe6:	8043      	strh	r3, [r0, #2]
 8010fe8:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8010fec:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8010ff0:	1a52      	subs	r2, r2, r1
 8010ff2:	4293      	cmp	r3, r2
 8010ff4:	bfc8      	it	gt
 8010ff6:	80c2      	strhgt	r2, [r0, #6]
 8010ff8:	bd10      	pop	{r4, pc}
	...

08010ffc <_ZN8touchgfx11Application4drawERNS_4RectE>:
 8010ffc:	b510      	push	{r4, lr}
 8010ffe:	4b10      	ldr	r3, [pc, #64]	; (8011040 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 8011000:	f9b3 2000 	ldrsh.w	r2, [r3]
 8011004:	4b0f      	ldr	r3, [pc, #60]	; (8011044 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 8011006:	460c      	mov	r4, r1
 8011008:	4620      	mov	r0, r4
 801100a:	f9b3 1000 	ldrsh.w	r1, [r3]
 801100e:	f7ff ffd0 	bl	8010fb2 <_ZN8touchgfx4Rect10restrictToEss>
 8011012:	4b0d      	ldr	r3, [pc, #52]	; (8011048 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 8011014:	6818      	ldr	r0, [r3, #0]
 8011016:	b190      	cbz	r0, 801103e <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 8011018:	6803      	ldr	r3, [r0, #0]
 801101a:	4621      	mov	r1, r4
 801101c:	689b      	ldr	r3, [r3, #8]
 801101e:	4798      	blx	r3
 8011020:	4b0a      	ldr	r3, [pc, #40]	; (801104c <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 8011022:	6818      	ldr	r0, [r3, #0]
 8011024:	b118      	cbz	r0, 801102e <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 8011026:	6803      	ldr	r3, [r0, #0]
 8011028:	4621      	mov	r1, r4
 801102a:	689b      	ldr	r3, [r3, #8]
 801102c:	4798      	blx	r3
 801102e:	4b08      	ldr	r3, [pc, #32]	; (8011050 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 8011030:	6818      	ldr	r0, [r3, #0]
 8011032:	6803      	ldr	r3, [r0, #0]
 8011034:	4621      	mov	r1, r4
 8011036:	69db      	ldr	r3, [r3, #28]
 8011038:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801103c:	4718      	bx	r3
 801103e:	bd10      	pop	{r4, pc}
 8011040:	200155aa 	.word	0x200155aa
 8011044:	200155a8 	.word	0x200155a8
 8011048:	200155f8 	.word	0x200155f8
 801104c:	200155f4 	.word	0x200155f4
 8011050:	200155b4 	.word	0x200155b4

08011054 <_ZNK8touchgfx4Rect8includesERKS0_>:
 8011054:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011056:	4606      	mov	r6, r0
 8011058:	4608      	mov	r0, r1
 801105a:	460f      	mov	r7, r1
 801105c:	f7f9 fed1 	bl	800ae02 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011060:	b9e8      	cbnz	r0, 801109e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8011062:	f9b7 5000 	ldrsh.w	r5, [r7]
 8011066:	f9b6 4000 	ldrsh.w	r4, [r6]
 801106a:	42a5      	cmp	r5, r4
 801106c:	db17      	blt.n	801109e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801106e:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8011072:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 8011076:	429a      	cmp	r2, r3
 8011078:	db11      	blt.n	801109e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801107a:	88b9      	ldrh	r1, [r7, #4]
 801107c:	440d      	add	r5, r1
 801107e:	88b1      	ldrh	r1, [r6, #4]
 8011080:	440c      	add	r4, r1
 8011082:	b22d      	sxth	r5, r5
 8011084:	b224      	sxth	r4, r4
 8011086:	42a5      	cmp	r5, r4
 8011088:	dc09      	bgt.n	801109e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801108a:	88f8      	ldrh	r0, [r7, #6]
 801108c:	4410      	add	r0, r2
 801108e:	88f2      	ldrh	r2, [r6, #6]
 8011090:	4413      	add	r3, r2
 8011092:	b200      	sxth	r0, r0
 8011094:	b21b      	sxth	r3, r3
 8011096:	4298      	cmp	r0, r3
 8011098:	bfcc      	ite	gt
 801109a:	2000      	movgt	r0, #0
 801109c:	2001      	movle	r0, #1
 801109e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080110a0 <_ZN8touchgfx11Application11getInstanceEv>:
 80110a0:	4b01      	ldr	r3, [pc, #4]	; (80110a8 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 80110a2:	6818      	ldr	r0, [r3, #0]
 80110a4:	4770      	bx	lr
 80110a6:	bf00      	nop
 80110a8:	20015608 	.word	0x20015608

080110ac <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
 80110ac:	2300      	movs	r3, #0
 80110ae:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 80110b2:	f100 0288 	add.w	r2, r0, #136	; 0x88
 80110b6:	30a8      	adds	r0, #168	; 0xa8
 80110b8:	f802 3b01 	strb.w	r3, [r2], #1
 80110bc:	4282      	cmp	r2, r0
 80110be:	d1fb      	bne.n	80110b8 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv+0xc>
 80110c0:	4770      	bx	lr

080110c2 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 80110c2:	4603      	mov	r3, r0
 80110c4:	f100 0140 	add.w	r1, r0, #64	; 0x40
 80110c8:	2200      	movs	r2, #0
 80110ca:	801a      	strh	r2, [r3, #0]
 80110cc:	805a      	strh	r2, [r3, #2]
 80110ce:	809a      	strh	r2, [r3, #4]
 80110d0:	80da      	strh	r2, [r3, #6]
 80110d2:	3308      	adds	r3, #8
 80110d4:	428b      	cmp	r3, r1
 80110d6:	d1f8      	bne.n	80110ca <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 80110d8:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 80110dc:	4770      	bx	lr
	...

080110e0 <_ZN8touchgfx11ApplicationC1Ev>:
 80110e0:	b570      	push	{r4, r5, r6, lr}
 80110e2:	4b19      	ldr	r3, [pc, #100]	; (8011148 <_ZN8touchgfx11ApplicationC1Ev+0x68>)
 80110e4:	6003      	str	r3, [r0, #0]
 80110e6:	2500      	movs	r5, #0
 80110e8:	4604      	mov	r4, r0
 80110ea:	f8a0 5084 	strh.w	r5, [r0, #132]	; 0x84
 80110ee:	30a8      	adds	r0, #168	; 0xa8
 80110f0:	f7ff ffe7 	bl	80110c2 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80110f4:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 80110f8:	f7ff ffe3 	bl	80110c2 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80110fc:	f8a4 512c 	strh.w	r5, [r4, #300]	; 0x12c
 8011100:	f8a4 512e 	strh.w	r5, [r4, #302]	; 0x12e
 8011104:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 8011108:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 801110c:	f884 5134 	strb.w	r5, [r4, #308]	; 0x134
 8011110:	490e      	ldr	r1, [pc, #56]	; (801114c <_ZN8touchgfx11ApplicationC1Ev+0x6c>)
 8011112:	480f      	ldr	r0, [pc, #60]	; (8011150 <_ZN8touchgfx11ApplicationC1Ev+0x70>)
 8011114:	4e0f      	ldr	r6, [pc, #60]	; (8011154 <_ZN8touchgfx11ApplicationC1Ev+0x74>)
 8011116:	f00e fec3 	bl	801fea0 <CRC_Lock>
 801111a:	4b0f      	ldr	r3, [pc, #60]	; (8011158 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 801111c:	b158      	cbz	r0, 8011136 <_ZN8touchgfx11ApplicationC1Ev+0x56>
 801111e:	801d      	strh	r5, [r3, #0]
 8011120:	4a0e      	ldr	r2, [pc, #56]	; (801115c <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 8011122:	2300      	movs	r3, #0
 8011124:	6013      	str	r3, [r2, #0]
 8011126:	4a0e      	ldr	r2, [pc, #56]	; (8011160 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 8011128:	6033      	str	r3, [r6, #0]
 801112a:	4620      	mov	r0, r4
 801112c:	6013      	str	r3, [r2, #0]
 801112e:	f7ff ffbd 	bl	80110ac <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
 8011132:	4620      	mov	r0, r4
 8011134:	bd70      	pop	{r4, r5, r6, pc}
 8011136:	f44f 6280 	mov.w	r2, #1024	; 0x400
 801113a:	2002      	movs	r0, #2
 801113c:	801a      	strh	r2, [r3, #0]
 801113e:	6030      	str	r0, [r6, #0]
 8011140:	f001 fae8 	bl	8012714 <_ZN8touchgfx6Screen4drawEv>
 8011144:	e7ec      	b.n	8011120 <_ZN8touchgfx11ApplicationC1Ev+0x40>
 8011146:	bf00      	nop
 8011148:	08024290 	.word	0x08024290
 801114c:	b5e8b5cd 	.word	0xb5e8b5cd
 8011150:	f407a5c2 	.word	0xf407a5c2
 8011154:	200155f8 	.word	0x200155f8
 8011158:	2000008c 	.word	0x2000008c
 801115c:	20015608 	.word	0x20015608
 8011160:	200155fc 	.word	0x200155fc

08011164 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 8011164:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 8011168:	3b01      	subs	r3, #1
 801116a:	b29b      	uxth	r3, r3
 801116c:	428b      	cmp	r3, r1
 801116e:	b510      	push	{r4, lr}
 8011170:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 8011174:	d908      	bls.n	8011188 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 8011176:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 801117a:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 801117e:	681a      	ldr	r2, [r3, #0]
 8011180:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 8011184:	685a      	ldr	r2, [r3, #4]
 8011186:	6062      	str	r2, [r4, #4]
 8011188:	bd10      	pop	{r4, pc}
	...

0801118c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 801118c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011190:	4b94      	ldr	r3, [pc, #592]	; (80113e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>)
 8011192:	b08f      	sub	sp, #60	; 0x3c
 8011194:	ac0a      	add	r4, sp, #40	; 0x28
 8011196:	e884 0006 	stmia.w	r4, {r1, r2}
 801119a:	f9b3 2000 	ldrsh.w	r2, [r3]
 801119e:	4b92      	ldr	r3, [pc, #584]	; (80113e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x25c>)
 80111a0:	4683      	mov	fp, r0
 80111a2:	f9b3 1000 	ldrsh.w	r1, [r3]
 80111a6:	4620      	mov	r0, r4
 80111a8:	f7ff ff03 	bl	8010fb2 <_ZN8touchgfx4Rect10restrictToEss>
 80111ac:	4620      	mov	r0, r4
 80111ae:	f7f9 fe28 	bl	800ae02 <_ZNK8touchgfx4Rect7isEmptyEv>
 80111b2:	2800      	cmp	r0, #0
 80111b4:	d16a      	bne.n	801128c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80111b6:	9403      	str	r4, [sp, #12]
 80111b8:	f8bb 50e8 	ldrh.w	r5, [fp, #232]	; 0xe8
 80111bc:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 80111c0:	eb0b 06c5 	add.w	r6, fp, r5, lsl #3
 80111c4:	2400      	movs	r4, #0
 80111c6:	9301      	str	r3, [sp, #4]
 80111c8:	36a0      	adds	r6, #160	; 0xa0
 80111ca:	42a5      	cmp	r5, r4
 80111cc:	d00d      	beq.n	80111ea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e>
 80111ce:	eba6 01c4 	sub.w	r1, r6, r4, lsl #3
 80111d2:	9803      	ldr	r0, [sp, #12]
 80111d4:	f7ff ff3e 	bl	8011054 <_ZNK8touchgfx4Rect8includesERKS0_>
 80111d8:	b128      	cbz	r0, 80111e6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a>
 80111da:	1e69      	subs	r1, r5, #1
 80111dc:	1b09      	subs	r1, r1, r4
 80111de:	b289      	uxth	r1, r1
 80111e0:	9801      	ldr	r0, [sp, #4]
 80111e2:	f7ff ffbf 	bl	8011164 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80111e6:	3401      	adds	r4, #1
 80111e8:	e7ef      	b.n	80111ca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e>
 80111ea:	f8bb 70e8 	ldrh.w	r7, [fp, #232]	; 0xe8
 80111ee:	9704      	str	r7, [sp, #16]
 80111f0:	1e7b      	subs	r3, r7, #1
 80111f2:	9302      	str	r3, [sp, #8]
 80111f4:	eb0b 0ac7 	add.w	sl, fp, r7, lsl #3
 80111f8:	2400      	movs	r4, #0
 80111fa:	4655      	mov	r5, sl
 80111fc:	9705      	str	r7, [sp, #20]
 80111fe:	4626      	mov	r6, r4
 8011200:	9b05      	ldr	r3, [sp, #20]
 8011202:	2b00      	cmp	r3, #0
 8011204:	d078      	beq.n	80112f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x16c>
 8011206:	9903      	ldr	r1, [sp, #12]
 8011208:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 801120c:	f7ff feaf 	bl	8010f6e <_ZNK8touchgfx4Rect9intersectERKS0_>
 8011210:	b360      	cbz	r0, 801126c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8011212:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 8011216:	f9b5 c0a0 	ldrsh.w	ip, [r5, #160]	; 0xa0
 801121a:	f9bd 902a 	ldrsh.w	r9, [sp, #42]	; 0x2a
 801121e:	f9b5 80a2 	ldrsh.w	r8, [r5, #162]	; 0xa2
 8011222:	45e6      	cmp	lr, ip
 8011224:	db35      	blt.n	8011292 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8011226:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 801122a:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 801122e:	4472      	add	r2, lr
 8011230:	4463      	add	r3, ip
 8011232:	b212      	sxth	r2, r2
 8011234:	b21b      	sxth	r3, r3
 8011236:	429a      	cmp	r2, r3
 8011238:	dc2b      	bgt.n	8011292 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 801123a:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 801123e:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8011242:	fa1f f288 	uxth.w	r2, r8
 8011246:	4413      	add	r3, r2
 8011248:	b29b      	uxth	r3, r3
 801124a:	45c1      	cmp	r9, r8
 801124c:	fa0f fe83 	sxth.w	lr, r3
 8011250:	fa1f fc89 	uxth.w	ip, r9
 8011254:	db0f      	blt.n	8011276 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 8011256:	eba3 030c 	sub.w	r3, r3, ip
 801125a:	1ac9      	subs	r1, r1, r3
 801125c:	b209      	sxth	r1, r1
 801125e:	2900      	cmp	r1, #0
 8011260:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8011264:	dd12      	ble.n	801128c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8011266:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 801126a:	4604      	mov	r4, r0
 801126c:	9b05      	ldr	r3, [sp, #20]
 801126e:	3b01      	subs	r3, #1
 8011270:	9305      	str	r3, [sp, #20]
 8011272:	3d08      	subs	r5, #8
 8011274:	e7c4      	b.n	8011200 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x74>
 8011276:	4461      	add	r1, ip
 8011278:	b209      	sxth	r1, r1
 801127a:	4571      	cmp	r1, lr
 801127c:	dc3a      	bgt.n	80112f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 801127e:	eba2 020c 	sub.w	r2, r2, ip
 8011282:	b212      	sxth	r2, r2
 8011284:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 8011288:	2a00      	cmp	r2, #0
 801128a:	dcee      	bgt.n	801126a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 801128c:	b00f      	add	sp, #60	; 0x3c
 801128e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011292:	45c1      	cmp	r9, r8
 8011294:	db2e      	blt.n	80112f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 8011296:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 801129a:	4499      	add	r9, r3
 801129c:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 80112a0:	4498      	add	r8, r3
 80112a2:	fa0f f989 	sxth.w	r9, r9
 80112a6:	fa0f f888 	sxth.w	r8, r8
 80112aa:	45c1      	cmp	r9, r8
 80112ac:	dc22      	bgt.n	80112f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 80112ae:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 80112b2:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 80112b6:	fa1f f28c 	uxth.w	r2, ip
 80112ba:	4413      	add	r3, r2
 80112bc:	b29b      	uxth	r3, r3
 80112be:	45e6      	cmp	lr, ip
 80112c0:	fa1f f88e 	uxth.w	r8, lr
 80112c4:	fa0f f983 	sxth.w	r9, r3
 80112c8:	db0a      	blt.n	80112e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x154>
 80112ca:	eba3 0308 	sub.w	r3, r3, r8
 80112ce:	1ac9      	subs	r1, r1, r3
 80112d0:	b209      	sxth	r1, r1
 80112d2:	2900      	cmp	r1, #0
 80112d4:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 80112d8:	ddd8      	ble.n	801128c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80112da:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 80112de:	e7c4      	b.n	801126a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 80112e0:	4441      	add	r1, r8
 80112e2:	b209      	sxth	r1, r1
 80112e4:	4549      	cmp	r1, r9
 80112e6:	dc05      	bgt.n	80112f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 80112e8:	eba2 0208 	sub.w	r2, r2, r8
 80112ec:	b212      	sxth	r2, r2
 80112ee:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 80112f2:	e7c9      	b.n	8011288 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 80112f4:	4606      	mov	r6, r0
 80112f6:	e7b9      	b.n	801126c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 80112f8:	2c00      	cmp	r4, #0
 80112fa:	f47f af7d 	bne.w	80111f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c>
 80112fe:	2e00      	cmp	r6, #0
 8011300:	f000 81e1 	beq.w	80116c6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 8011304:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 8011308:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 801130c:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8011310:	b2b9      	uxth	r1, r7
 8011312:	9105      	str	r1, [sp, #20]
 8011314:	9805      	ldr	r0, [sp, #20]
 8011316:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 801131a:	4401      	add	r1, r0
 801131c:	b2b3      	uxth	r3, r6
 801131e:	b289      	uxth	r1, r1
 8011320:	441a      	add	r2, r3
 8011322:	9106      	str	r1, [sp, #24]
 8011324:	b292      	uxth	r2, r2
 8011326:	f9bd 9018 	ldrsh.w	r9, [sp, #24]
 801132a:	fa0f f882 	sxth.w	r8, r2
 801132e:	4655      	mov	r5, sl
 8011330:	e9cd 2307 	strd	r2, r3, [sp, #28]
 8011334:	9b04      	ldr	r3, [sp, #16]
 8011336:	2b00      	cmp	r3, #0
 8011338:	d058      	beq.n	80113ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x260>
 801133a:	9903      	ldr	r1, [sp, #12]
 801133c:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 8011340:	f7ff fe15 	bl	8010f6e <_ZNK8touchgfx4Rect9intersectERKS0_>
 8011344:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 8011348:	b1d8      	cbz	r0, 8011382 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 801134a:	f9b5 e0a0 	ldrsh.w	lr, [r5, #160]	; 0xa0
 801134e:	f9b5 10a2 	ldrsh.w	r1, [r5, #162]	; 0xa2
 8011352:	4576      	cmp	r6, lr
 8011354:	dc26      	bgt.n	80113a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x218>
 8011356:	f8b5 c0a4 	ldrh.w	ip, [r5, #164]	; 0xa4
 801135a:	44f4      	add	ip, lr
 801135c:	fa0f fc8c 	sxth.w	ip, ip
 8011360:	45e0      	cmp	r8, ip
 8011362:	db1f      	blt.n	80113a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x218>
 8011364:	428f      	cmp	r7, r1
 8011366:	fa1f fc81 	uxth.w	ip, r1
 801136a:	f8b5 10a6 	ldrh.w	r1, [r5, #166]	; 0xa6
 801136e:	dc0f      	bgt.n	8011390 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x204>
 8011370:	9806      	ldr	r0, [sp, #24]
 8011372:	f8a5 90a2 	strh.w	r9, [r5, #162]	; 0xa2
 8011376:	eba0 0c0c 	sub.w	ip, r0, ip
 801137a:	eba1 010c 	sub.w	r1, r1, ip
 801137e:	f8a5 10a6 	strh.w	r1, [r5, #166]	; 0xa6
 8011382:	4620      	mov	r0, r4
 8011384:	9904      	ldr	r1, [sp, #16]
 8011386:	3901      	subs	r1, #1
 8011388:	9104      	str	r1, [sp, #16]
 801138a:	3d08      	subs	r5, #8
 801138c:	4604      	mov	r4, r0
 801138e:	e7cf      	b.n	8011330 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a4>
 8011390:	4461      	add	r1, ip
 8011392:	b209      	sxth	r1, r1
 8011394:	4549      	cmp	r1, r9
 8011396:	dcf5      	bgt.n	8011384 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 8011398:	9905      	ldr	r1, [sp, #20]
 801139a:	eba1 0c0c 	sub.w	ip, r1, ip
 801139e:	f8a5 c0a6 	strh.w	ip, [r5, #166]	; 0xa6
 80113a2:	e7ee      	b.n	8011382 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 80113a4:	428f      	cmp	r7, r1
 80113a6:	dced      	bgt.n	8011384 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 80113a8:	f8b5 c0a6 	ldrh.w	ip, [r5, #166]	; 0xa6
 80113ac:	4461      	add	r1, ip
 80113ae:	b209      	sxth	r1, r1
 80113b0:	4589      	cmp	r9, r1
 80113b2:	dbe7      	blt.n	8011384 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 80113b4:	4576      	cmp	r6, lr
 80113b6:	fa1f fc8e 	uxth.w	ip, lr
 80113ba:	f8b5 10a4 	ldrh.w	r1, [r5, #164]	; 0xa4
 80113be:	dc08      	bgt.n	80113d2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x246>
 80113c0:	eba2 0c0c 	sub.w	ip, r2, ip
 80113c4:	eba1 010c 	sub.w	r1, r1, ip
 80113c8:	f8a5 80a0 	strh.w	r8, [r5, #160]	; 0xa0
 80113cc:	f8a5 10a4 	strh.w	r1, [r5, #164]	; 0xa4
 80113d0:	e7d7      	b.n	8011382 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 80113d2:	4461      	add	r1, ip
 80113d4:	b209      	sxth	r1, r1
 80113d6:	4588      	cmp	r8, r1
 80113d8:	dbd4      	blt.n	8011384 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 80113da:	eba3 0c0c 	sub.w	ip, r3, ip
 80113de:	f8a5 c0a4 	strh.w	ip, [r5, #164]	; 0xa4
 80113e2:	e7ce      	b.n	8011382 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 80113e4:	200155aa 	.word	0x200155aa
 80113e8:	200155a8 	.word	0x200155a8
 80113ec:	2c00      	cmp	r4, #0
 80113ee:	f000 816a 	beq.w	80116c6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 80113f2:	9b02      	ldr	r3, [sp, #8]
 80113f4:	3301      	adds	r3, #1
 80113f6:	f000 8166 	beq.w	80116c6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 80113fa:	f10a 04a0 	add.w	r4, sl, #160	; 0xa0
 80113fe:	4621      	mov	r1, r4
 8011400:	9803      	ldr	r0, [sp, #12]
 8011402:	f7ff fe27 	bl	8011054 <_ZNK8touchgfx4Rect8includesERKS0_>
 8011406:	b120      	cbz	r0, 8011412 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x286>
 8011408:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801140c:	9801      	ldr	r0, [sp, #4]
 801140e:	f7ff fea9 	bl	8011164 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8011412:	9903      	ldr	r1, [sp, #12]
 8011414:	4620      	mov	r0, r4
 8011416:	f7ff fdaa 	bl	8010f6e <_ZNK8touchgfx4Rect9intersectERKS0_>
 801141a:	2800      	cmp	r0, #0
 801141c:	f000 809b 	beq.w	8011556 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ca>
 8011420:	f9ba 00a0 	ldrsh.w	r0, [sl, #160]	; 0xa0
 8011424:	f9ba 30a4 	ldrsh.w	r3, [sl, #164]	; 0xa4
 8011428:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 801142c:	9309      	str	r3, [sp, #36]	; 0x24
 801142e:	b281      	uxth	r1, r0
 8011430:	eb01 0c03 	add.w	ip, r1, r3
 8011434:	fa1f f98c 	uxth.w	r9, ip
 8011438:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 801143c:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 8011440:	f9ba 20a2 	ldrsh.w	r2, [sl, #162]	; 0xa2
 8011444:	b2ab      	uxth	r3, r5
 8011446:	eb03 040c 	add.w	r4, r3, ip
 801144a:	b2a4      	uxth	r4, r4
 801144c:	9405      	str	r4, [sp, #20]
 801144e:	f9bd 4014 	ldrsh.w	r4, [sp, #20]
 8011452:	9404      	str	r4, [sp, #16]
 8011454:	4285      	cmp	r5, r0
 8011456:	f8bb 40e8 	ldrh.w	r4, [fp, #232]	; 0xe8
 801145a:	f340 809a 	ble.w	8011592 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x406>
 801145e:	1a5b      	subs	r3, r3, r1
 8011460:	b29b      	uxth	r3, r3
 8011462:	4596      	cmp	lr, r2
 8011464:	fa0f f589 	sxth.w	r5, r9
 8011468:	b21e      	sxth	r6, r3
 801146a:	dd2e      	ble.n	80114ca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x33e>
 801146c:	9f02      	ldr	r7, [sp, #8]
 801146e:	f8bd 002e 	ldrh.w	r0, [sp, #46]	; 0x2e
 8011472:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 8011476:	9f04      	ldr	r7, [sp, #16]
 8011478:	1b7f      	subs	r7, r7, r5
 801147a:	f8b8 50ae 	ldrh.w	r5, [r8, #174]	; 0xae
 801147e:	fa1f fe8e 	uxth.w	lr, lr
 8011482:	b292      	uxth	r2, r2
 8011484:	ebae 0102 	sub.w	r1, lr, r2
 8011488:	4486      	add	lr, r0
 801148a:	442a      	add	r2, r5
 801148c:	b289      	uxth	r1, r1
 801148e:	fa0f fe8e 	sxth.w	lr, lr
 8011492:	b212      	sxth	r2, r2
 8011494:	b20c      	sxth	r4, r1
 8011496:	ebae 0202 	sub.w	r2, lr, r2
 801149a:	4367      	muls	r7, r4
 801149c:	4372      	muls	r2, r6
 801149e:	4297      	cmp	r7, r2
 80114a0:	db09      	blt.n	80114b6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x32a>
 80114a2:	f8b8 20a8 	ldrh.w	r2, [r8, #168]	; 0xa8
 80114a6:	f8a8 40ae 	strh.w	r4, [r8, #174]	; 0xae
 80114aa:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80114ae:	449c      	add	ip, r3
 80114b0:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 80114b4:	e680      	b.n	80111b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80114b6:	4401      	add	r1, r0
 80114b8:	f8b8 30aa 	ldrh.w	r3, [r8, #170]	; 0xaa
 80114bc:	f8a8 60ac 	strh.w	r6, [r8, #172]	; 0xac
 80114c0:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80114c4:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 80114c8:	e676      	b.n	80111b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80114ca:	9f04      	ldr	r7, [sp, #16]
 80114cc:	42bd      	cmp	r5, r7
 80114ce:	da27      	bge.n	8011520 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x394>
 80114d0:	9902      	ldr	r1, [sp, #8]
 80114d2:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 80114d6:	eb0b 00c1 	add.w	r0, fp, r1, lsl #3
 80114da:	eb04 010e 	add.w	r1, r4, lr
 80114de:	fa1f f881 	uxth.w	r8, r1
 80114e2:	f8b0 10ae 	ldrh.w	r1, [r0, #174]	; 0xae
 80114e6:	4411      	add	r1, r2
 80114e8:	eba1 0108 	sub.w	r1, r1, r8
 80114ec:	b289      	uxth	r1, r1
 80114ee:	fa0f f988 	sxth.w	r9, r8
 80114f2:	eba2 020e 	sub.w	r2, r2, lr
 80114f6:	fa0f f881 	sxth.w	r8, r1
 80114fa:	1b7f      	subs	r7, r7, r5
 80114fc:	4372      	muls	r2, r6
 80114fe:	fb08 f707 	mul.w	r7, r8, r7
 8011502:	42ba      	cmp	r2, r7
 8011504:	dc06      	bgt.n	8011514 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 8011506:	f8a0 90aa 	strh.w	r9, [r0, #170]	; 0xaa
 801150a:	f8a0 80ae 	strh.w	r8, [r0, #174]	; 0xae
 801150e:	f8b0 20a8 	ldrh.w	r2, [r0, #168]	; 0xa8
 8011512:	e7ca      	b.n	80114aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 8011514:	f8a0 60ac 	strh.w	r6, [r0, #172]	; 0xac
 8011518:	4421      	add	r1, r4
 801151a:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 801151e:	e64b      	b.n	80111b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8011520:	9d05      	ldr	r5, [sp, #20]
 8011522:	eba9 0505 	sub.w	r5, r9, r5
 8011526:	b2ad      	uxth	r5, r5
 8011528:	2c06      	cmp	r4, #6
 801152a:	fa0f fe85 	sxth.w	lr, r5
 801152e:	d818      	bhi.n	8011562 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3d6>
 8011530:	9b04      	ldr	r3, [sp, #16]
 8011532:	f8aa 30a0 	strh.w	r3, [sl, #160]	; 0xa0
 8011536:	1c63      	adds	r3, r4, #1
 8011538:	f9ba 10a6 	ldrsh.w	r1, [sl, #166]	; 0xa6
 801153c:	f8aa e0a4 	strh.w	lr, [sl, #164]	; 0xa4
 8011540:	f8ab 30e8 	strh.w	r3, [fp, #232]	; 0xe8
 8011544:	9b01      	ldr	r3, [sp, #4]
 8011546:	9d01      	ldr	r5, [sp, #4]
 8011548:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 801154c:	f825 0034 	strh.w	r0, [r5, r4, lsl #3]
 8011550:	805a      	strh	r2, [r3, #2]
 8011552:	809e      	strh	r6, [r3, #4]
 8011554:	80d9      	strh	r1, [r3, #6]
 8011556:	9b02      	ldr	r3, [sp, #8]
 8011558:	3b01      	subs	r3, #1
 801155a:	9302      	str	r3, [sp, #8]
 801155c:	f1aa 0a08 	sub.w	sl, sl, #8
 8011560:	e747      	b.n	80113f2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x266>
 8011562:	9a02      	ldr	r2, [sp, #8]
 8011564:	45b6      	cmp	lr, r6
 8011566:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 801156a:	db0d      	blt.n	8011588 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3fc>
 801156c:	449c      	add	ip, r3
 801156e:	fa1f fc8c 	uxth.w	ip, ip
 8011572:	445a      	add	r2, fp
 8011574:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8011578:	448c      	add	ip, r1
 801157a:	f8ad 0028 	strh.w	r0, [sp, #40]	; 0x28
 801157e:	f8a2 c0a8 	strh.w	ip, [r2, #168]	; 0xa8
 8011582:	f8a2 e0ac 	strh.w	lr, [r2, #172]	; 0xac
 8011586:	e617      	b.n	80111b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8011588:	445a      	add	r2, fp
 801158a:	44ac      	add	ip, r5
 801158c:	f8a2 60ac 	strh.w	r6, [r2, #172]	; 0xac
 8011590:	e78e      	b.n	80114b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x324>
 8011592:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 8011596:	fa1f f18e 	uxth.w	r1, lr
 801159a:	eb01 0806 	add.w	r8, r1, r6
 801159e:	b293      	uxth	r3, r2
 80115a0:	fa1f f888 	uxth.w	r8, r8
 80115a4:	9306      	str	r3, [sp, #24]
 80115a6:	fa0f f388 	sxth.w	r3, r8
 80115aa:	9307      	str	r3, [sp, #28]
 80115ac:	9f06      	ldr	r7, [sp, #24]
 80115ae:	f8ba 30a6 	ldrh.w	r3, [sl, #166]	; 0xa6
 80115b2:	443b      	add	r3, r7
 80115b4:	b29b      	uxth	r3, r3
 80115b6:	4596      	cmp	lr, r2
 80115b8:	9308      	str	r3, [sp, #32]
 80115ba:	da25      	bge.n	8011608 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x47c>
 80115bc:	9905      	ldr	r1, [sp, #20]
 80115be:	eba3 0308 	sub.w	r3, r3, r8
 80115c2:	eba9 0401 	sub.w	r4, r9, r1
 80115c6:	b2a4      	uxth	r4, r4
 80115c8:	b29b      	uxth	r3, r3
 80115ca:	fa0f f984 	sxth.w	r9, r4
 80115ce:	b219      	sxth	r1, r3
 80115d0:	eba2 020e 	sub.w	r2, r2, lr
 80115d4:	1b40      	subs	r0, r0, r5
 80115d6:	fb09 f202 	mul.w	r2, r9, r2
 80115da:	4348      	muls	r0, r1
 80115dc:	4282      	cmp	r2, r0
 80115de:	9a02      	ldr	r2, [sp, #8]
 80115e0:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80115e4:	445a      	add	r2, fp
 80115e6:	dc06      	bgt.n	80115f6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46a>
 80115e8:	9b07      	ldr	r3, [sp, #28]
 80115ea:	f8a2 10ae 	strh.w	r1, [r2, #174]	; 0xae
 80115ee:	f8a2 30aa 	strh.w	r3, [r2, #170]	; 0xaa
 80115f2:	44a4      	add	ip, r4
 80115f4:	e75c      	b.n	80114b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x324>
 80115f6:	9904      	ldr	r1, [sp, #16]
 80115f8:	f8a2 90ac 	strh.w	r9, [r2, #172]	; 0xac
 80115fc:	f8a2 10a8 	strh.w	r1, [r2, #168]	; 0xa8
 8011600:	4433      	add	r3, r6
 8011602:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8011606:	e5d7      	b.n	80111b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8011608:	9f06      	ldr	r7, [sp, #24]
 801160a:	9b04      	ldr	r3, [sp, #16]
 801160c:	1bc9      	subs	r1, r1, r7
 801160e:	fa0f f789 	sxth.w	r7, r9
 8011612:	b289      	uxth	r1, r1
 8011614:	429f      	cmp	r7, r3
 8011616:	fa0f fe81 	sxth.w	lr, r1
 801161a:	dd22      	ble.n	8011662 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4d6>
 801161c:	9a05      	ldr	r2, [sp, #20]
 801161e:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8011622:	1b40      	subs	r0, r0, r5
 8011624:	eba9 0202 	sub.w	r2, r9, r2
 8011628:	9d07      	ldr	r5, [sp, #28]
 801162a:	b292      	uxth	r2, r2
 801162c:	eba5 0a03 	sub.w	sl, r5, r3
 8011630:	b214      	sxth	r4, r2
 8011632:	9b02      	ldr	r3, [sp, #8]
 8011634:	fb0e f000 	mul.w	r0, lr, r0
 8011638:	fb04 fa0a 	mul.w	sl, r4, sl
 801163c:	00db      	lsls	r3, r3, #3
 801163e:	4550      	cmp	r0, sl
 8011640:	445b      	add	r3, fp
 8011642:	db03      	blt.n	801164c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c0>
 8011644:	f8a3 e0ae 	strh.w	lr, [r3, #174]	; 0xae
 8011648:	4494      	add	ip, r2
 801164a:	e731      	b.n	80114b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x324>
 801164c:	9a04      	ldr	r2, [sp, #16]
 801164e:	f8a3 20a8 	strh.w	r2, [r3, #168]	; 0xa8
 8011652:	f8a3 40ac 	strh.w	r4, [r3, #172]	; 0xac
 8011656:	f8b3 30aa 	ldrh.w	r3, [r3, #170]	; 0xaa
 801165a:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801165e:	4431      	add	r1, r6
 8011660:	e75b      	b.n	801151a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38e>
 8011662:	9b08      	ldr	r3, [sp, #32]
 8011664:	eba3 0308 	sub.w	r3, r3, r8
 8011668:	b29b      	uxth	r3, r3
 801166a:	2c06      	cmp	r4, #6
 801166c:	b21d      	sxth	r5, r3
 801166e:	d813      	bhi.n	8011698 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x50c>
 8011670:	9b07      	ldr	r3, [sp, #28]
 8011672:	f8aa 30a2 	strh.w	r3, [sl, #162]	; 0xa2
 8011676:	1c63      	adds	r3, r4, #1
 8011678:	f8aa 50a6 	strh.w	r5, [sl, #166]	; 0xa6
 801167c:	f8ab 30e8 	strh.w	r3, [fp, #232]	; 0xe8
 8011680:	9b01      	ldr	r3, [sp, #4]
 8011682:	9901      	ldr	r1, [sp, #4]
 8011684:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8011688:	f821 0034 	strh.w	r0, [r1, r4, lsl #3]
 801168c:	805a      	strh	r2, [r3, #2]
 801168e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8011690:	809a      	strh	r2, [r3, #4]
 8011692:	f8a3 e006 	strh.w	lr, [r3, #6]
 8011696:	e75e      	b.n	8011556 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ca>
 8011698:	9802      	ldr	r0, [sp, #8]
 801169a:	4575      	cmp	r5, lr
 801169c:	ea4f 00c0 	mov.w	r0, r0, lsl #3
 80116a0:	db0d      	blt.n	80116be <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x532>
 80116a2:	4431      	add	r1, r6
 80116a4:	9b06      	ldr	r3, [sp, #24]
 80116a6:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 80116aa:	b289      	uxth	r1, r1
 80116ac:	4458      	add	r0, fp
 80116ae:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80116b2:	4419      	add	r1, r3
 80116b4:	f8a0 10aa 	strh.w	r1, [r0, #170]	; 0xaa
 80116b8:	f8a0 50ae 	strh.w	r5, [r0, #174]	; 0xae
 80116bc:	e57c      	b.n	80111b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80116be:	4458      	add	r0, fp
 80116c0:	f8a0 e0ae 	strh.w	lr, [r0, #174]	; 0xae
 80116c4:	e79c      	b.n	8011600 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x474>
 80116c6:	f8bb 60e8 	ldrh.w	r6, [fp, #232]	; 0xe8
 80116ca:	2e07      	cmp	r6, #7
 80116cc:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 80116d0:	d812      	bhi.n	80116f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56c>
 80116d2:	1c75      	adds	r5, r6, #1
 80116d4:	f8ab 50e8 	strh.w	r5, [fp, #232]	; 0xe8
 80116d8:	9d01      	ldr	r5, [sp, #4]
 80116da:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 80116de:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 80116e2:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 80116e6:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 80116ea:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 80116ee:	442c      	add	r4, r5
 80116f0:	8061      	strh	r1, [r4, #2]
 80116f2:	80a2      	strh	r2, [r4, #4]
 80116f4:	80e3      	strh	r3, [r4, #6]
 80116f6:	e5c9      	b.n	801128c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80116f8:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 80116fc:	3e01      	subs	r6, #1
 80116fe:	445c      	add	r4, fp
 8011700:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 8011704:	f04f 37ff 	mov.w	r7, #4294967295
 8011708:	2500      	movs	r5, #0
 801170a:	9305      	str	r3, [sp, #20]
 801170c:	f9b4 30a4 	ldrsh.w	r3, [r4, #164]	; 0xa4
 8011710:	9302      	str	r3, [sp, #8]
 8011712:	1e72      	subs	r2, r6, #1
 8011714:	f9b4 30a6 	ldrsh.w	r3, [r4, #166]	; 0xa6
 8011718:	9304      	str	r3, [sp, #16]
 801171a:	4691      	mov	r9, r2
 801171c:	f104 03a0 	add.w	r3, r4, #160	; 0xa0
 8011720:	f1b9 3fff 	cmp.w	r9, #4294967295
 8011724:	bf14      	ite	ne
 8011726:	9905      	ldrne	r1, [sp, #20]
 8011728:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 801172c:	6818      	ldr	r0, [r3, #0]
 801172e:	9207      	str	r2, [sp, #28]
 8011730:	bf18      	it	ne
 8011732:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 8011736:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 801173a:	f8be 1006 	ldrh.w	r1, [lr, #6]
 801173e:	f8be 8004 	ldrh.w	r8, [lr, #4]
 8011742:	9306      	str	r3, [sp, #24]
 8011744:	fb18 f801 	smulbb	r8, r8, r1
 8011748:	6859      	ldr	r1, [r3, #4]
 801174a:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 801174e:	4671      	mov	r1, lr
 8011750:	a80c      	add	r0, sp, #48	; 0x30
 8011752:	f7fb f87b 	bl	800c84c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8011756:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 801175a:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 801175e:	9b04      	ldr	r3, [sp, #16]
 8011760:	9a02      	ldr	r2, [sp, #8]
 8011762:	fb10 f001 	smulbb	r0, r0, r1
 8011766:	fb02 8803 	mla	r8, r2, r3, r8
 801176a:	eba0 0108 	sub.w	r1, r0, r8
 801176e:	f04f 0c08 	mov.w	ip, #8
 8011772:	fb90 f0fc 	sdiv	r0, r0, ip
 8011776:	4288      	cmp	r0, r1
 8011778:	dc20      	bgt.n	80117bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x630>
 801177a:	4551      	cmp	r1, sl
 801177c:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8011780:	da03      	bge.n	801178a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fe>
 8011782:	b1d9      	cbz	r1, 80117bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x630>
 8011784:	468a      	mov	sl, r1
 8011786:	464f      	mov	r7, r9
 8011788:	4635      	mov	r5, r6
 801178a:	f109 39ff 	add.w	r9, r9, #4294967295
 801178e:	f119 0f02 	cmn.w	r9, #2
 8011792:	d1c5      	bne.n	8011720 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8011794:	4616      	mov	r6, r2
 8011796:	3201      	adds	r2, #1
 8011798:	f1a4 0408 	sub.w	r4, r4, #8
 801179c:	d1b6      	bne.n	801170c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x580>
 801179e:	9b01      	ldr	r3, [sp, #4]
 80117a0:	b2ac      	uxth	r4, r5
 80117a2:	00ed      	lsls	r5, r5, #3
 80117a4:	1958      	adds	r0, r3, r5
 80117a6:	1c7b      	adds	r3, r7, #1
 80117a8:	d10b      	bne.n	80117c2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x636>
 80117aa:	4601      	mov	r1, r0
 80117ac:	9803      	ldr	r0, [sp, #12]
 80117ae:	f7fb f84d 	bl	800c84c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 80117b2:	4621      	mov	r1, r4
 80117b4:	9801      	ldr	r0, [sp, #4]
 80117b6:	f7ff fcd5 	bl	8011164 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80117ba:	e4fd      	b.n	80111b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80117bc:	464f      	mov	r7, r9
 80117be:	4635      	mov	r5, r6
 80117c0:	e7ed      	b.n	801179e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x612>
 80117c2:	9b01      	ldr	r3, [sp, #4]
 80117c4:	00ff      	lsls	r7, r7, #3
 80117c6:	19d9      	adds	r1, r3, r7
 80117c8:	f7fb f840 	bl	800c84c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 80117cc:	9b03      	ldr	r3, [sp, #12]
 80117ce:	cb03      	ldmia	r3!, {r0, r1}
 80117d0:	445f      	add	r7, fp
 80117d2:	445d      	add	r5, fp
 80117d4:	f8c7 00a8 	str.w	r0, [r7, #168]	; 0xa8
 80117d8:	f8c7 10ac 	str.w	r1, [r7, #172]	; 0xac
 80117dc:	f855 0fa8 	ldr.w	r0, [r5, #168]!
 80117e0:	9b03      	ldr	r3, [sp, #12]
 80117e2:	6869      	ldr	r1, [r5, #4]
 80117e4:	c303      	stmia	r3!, {r0, r1}
 80117e6:	e7e4      	b.n	80117b2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x626>

080117e8 <_ZN8touchgfx11Application10invalidateEv>:
 80117e8:	4b09      	ldr	r3, [pc, #36]	; (8011810 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 80117ea:	f9b3 2000 	ldrsh.w	r2, [r3]
 80117ee:	4b09      	ldr	r3, [pc, #36]	; (8011814 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 80117f0:	b082      	sub	sp, #8
 80117f2:	f9b3 3000 	ldrsh.w	r3, [r3]
 80117f6:	f8ad 3006 	strh.w	r3, [sp, #6]
 80117fa:	2100      	movs	r1, #0
 80117fc:	9100      	str	r1, [sp, #0]
 80117fe:	f8ad 2004 	strh.w	r2, [sp, #4]
 8011802:	ab02      	add	r3, sp, #8
 8011804:	e913 0006 	ldmdb	r3, {r1, r2}
 8011808:	b002      	add	sp, #8
 801180a:	f7ff bcbf 	b.w	801118c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 801180e:	bf00      	nop
 8011810:	200155a8 	.word	0x200155a8
 8011814:	200155aa 	.word	0x200155aa

08011818 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 8011818:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801181c:	f500 7696 	add.w	r6, r0, #300	; 0x12c
 8011820:	b09b      	sub	sp, #108	; 0x6c
 8011822:	4604      	mov	r4, r0
 8011824:	4630      	mov	r0, r6
 8011826:	f7f9 faec 	bl	800ae02 <_ZNK8touchgfx4Rect7isEmptyEv>
 801182a:	4605      	mov	r5, r0
 801182c:	b940      	cbnz	r0, 8011840 <_ZN8touchgfx11Application15drawCachedAreasEv+0x28>
 801182e:	e896 0006 	ldmia.w	r6, {r1, r2}
 8011832:	4620      	mov	r0, r4
 8011834:	f7ff fcaa 	bl	801118c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8011838:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
 801183c:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 8011840:	4bc9      	ldr	r3, [pc, #804]	; (8011b68 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8011842:	681b      	ldr	r3, [r3, #0]
 8011844:	2b00      	cmp	r3, #0
 8011846:	d03e      	beq.n	80118c6 <_ZN8touchgfx11Application15drawCachedAreasEv+0xae>
 8011848:	4dc8      	ldr	r5, [pc, #800]	; (8011b6c <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 801184a:	4628      	mov	r0, r5
 801184c:	f7f9 fad9 	bl	800ae02 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011850:	4606      	mov	r6, r0
 8011852:	2800      	cmp	r0, #0
 8011854:	d137      	bne.n	80118c6 <_ZN8touchgfx11Application15drawCachedAreasEv+0xae>
 8011856:	4628      	mov	r0, r5
 8011858:	f7ff fa4a 	bl	8010cf0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 801185c:	6829      	ldr	r1, [r5, #0]
 801185e:	686a      	ldr	r2, [r5, #4]
 8011860:	4620      	mov	r0, r4
 8011862:	f7ff fc93 	bl	801118c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8011866:	802e      	strh	r6, [r5, #0]
 8011868:	806e      	strh	r6, [r5, #2]
 801186a:	80ae      	strh	r6, [r5, #4]
 801186c:	80ee      	strh	r6, [r5, #6]
 801186e:	ae09      	add	r6, sp, #36	; 0x24
 8011870:	4630      	mov	r0, r6
 8011872:	f7ff fc26 	bl	80110c2 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8011876:	4abe      	ldr	r2, [pc, #760]	; (8011b70 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 8011878:	f8b4 70e8 	ldrh.w	r7, [r4, #232]	; 0xe8
 801187c:	8815      	ldrh	r5, [r2, #0]
 801187e:	9202      	str	r2, [sp, #8]
 8011880:	462b      	mov	r3, r5
 8011882:	f104 00a8 	add.w	r0, r4, #168	; 0xa8
 8011886:	429f      	cmp	r7, r3
 8011888:	d924      	bls.n	80118d4 <_ZN8touchgfx11Application15drawCachedAreasEv+0xbc>
 801188a:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 801188e:	2907      	cmp	r1, #7
 8011890:	d816      	bhi.n	80118c0 <_ZN8touchgfx11Application15drawCachedAreasEv+0xa8>
 8011892:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 8011896:	f930 8033 	ldrsh.w	r8, [r0, r3, lsl #3]
 801189a:	f9b2 9002 	ldrsh.w	r9, [r2, #2]
 801189e:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 80118a2:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 80118a6:	1c4a      	adds	r2, r1, #1
 80118a8:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 80118ac:	eb06 02c1 	add.w	r2, r6, r1, lsl #3
 80118b0:	f826 8031 	strh.w	r8, [r6, r1, lsl #3]
 80118b4:	f8a2 9002 	strh.w	r9, [r2, #2]
 80118b8:	f8a2 e004 	strh.w	lr, [r2, #4]
 80118bc:	f8a2 c006 	strh.w	ip, [r2, #6]
 80118c0:	3301      	adds	r3, #1
 80118c2:	b29b      	uxth	r3, r3
 80118c4:	e7df      	b.n	8011886 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6e>
 80118c6:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 80118ca:	2b00      	cmp	r3, #0
 80118cc:	d1cf      	bne.n	801186e <_ZN8touchgfx11Application15drawCachedAreasEv+0x56>
 80118ce:	b01b      	add	sp, #108	; 0x6c
 80118d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80118d4:	462f      	mov	r7, r5
 80118d6:	f8b4 312a 	ldrh.w	r3, [r4, #298]	; 0x12a
 80118da:	42bb      	cmp	r3, r7
 80118dc:	d90b      	bls.n	80118f6 <_ZN8touchgfx11Application15drawCachedAreasEv+0xde>
 80118de:	eb04 03c7 	add.w	r3, r4, r7, lsl #3
 80118e2:	4620      	mov	r0, r4
 80118e4:	f8d3 10ea 	ldr.w	r1, [r3, #234]	; 0xea
 80118e8:	f8d3 20ee 	ldr.w	r2, [r3, #238]	; 0xee
 80118ec:	3701      	adds	r7, #1
 80118ee:	f7ff fc4d 	bl	801118c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 80118f2:	b2bf      	uxth	r7, r7
 80118f4:	e7ef      	b.n	80118d6 <_ZN8touchgfx11Application15drawCachedAreasEv+0xbe>
 80118f6:	4a9f      	ldr	r2, [pc, #636]	; (8011b74 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 80118f8:	6813      	ldr	r3, [r2, #0]
 80118fa:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 80118fe:	2b01      	cmp	r3, #1
 8011900:	4690      	mov	r8, r2
 8011902:	f040 80e6 	bne.w	8011ad2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ba>
 8011906:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 801190a:	f8b4 70e8 	ldrh.w	r7, [r4, #232]	; 0xe8
 801190e:	4629      	mov	r1, r5
 8011910:	33aa      	adds	r3, #170	; 0xaa
 8011912:	2500      	movs	r5, #0
 8011914:	428f      	cmp	r7, r1
 8011916:	f103 0308 	add.w	r3, r3, #8
 801191a:	dd0a      	ble.n	8011932 <_ZN8touchgfx11Application15drawCachedAreasEv+0x11a>
 801191c:	f833 2c08 	ldrh.w	r2, [r3, #-8]
 8011920:	f833 0c04 	ldrh.w	r0, [r3, #-4]
 8011924:	4402      	add	r2, r0
 8011926:	b212      	sxth	r2, r2
 8011928:	4295      	cmp	r5, r2
 801192a:	bfb8      	it	lt
 801192c:	4615      	movlt	r5, r2
 801192e:	3101      	adds	r1, #1
 8011930:	e7f0      	b.n	8011914 <_ZN8touchgfx11Application15drawCachedAreasEv+0xfc>
 8011932:	4b91      	ldr	r3, [pc, #580]	; (8011b78 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 8011934:	f8df b23c 	ldr.w	fp, [pc, #572]	; 8011b74 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>
 8011938:	881b      	ldrh	r3, [r3, #0]
 801193a:	2b0f      	cmp	r3, #15
 801193c:	bf88      	it	hi
 801193e:	ea4f 0ad3 	movhi.w	sl, r3, lsr #3
 8011942:	f04f 0300 	mov.w	r3, #0
 8011946:	e9cd 3305 	strd	r3, r3, [sp, #20]
 801194a:	bf98      	it	ls
 801194c:	f04f 0a01 	movls.w	sl, #1
 8011950:	46d8      	mov	r8, fp
 8011952:	f8bd 701a 	ldrh.w	r7, [sp, #26]
 8011956:	f8bd 0016 	ldrh.w	r0, [sp, #22]
 801195a:	4438      	add	r0, r7
 801195c:	b207      	sxth	r7, r0
 801195e:	f8db 0000 	ldr.w	r0, [fp]
 8011962:	42bd      	cmp	r5, r7
 8011964:	6803      	ldr	r3, [r0, #0]
 8011966:	f340 8084 	ble.w	8011a72 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 801196a:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 801196e:	4798      	blx	r3
 8011970:	eb07 030a 	add.w	r3, r7, sl
 8011974:	4298      	cmp	r0, r3
 8011976:	da07      	bge.n	8011988 <_ZN8touchgfx11Application15drawCachedAreasEv+0x170>
 8011978:	4285      	cmp	r5, r0
 801197a:	dd05      	ble.n	8011988 <_ZN8touchgfx11Application15drawCachedAreasEv+0x170>
 801197c:	4287      	cmp	r7, r0
 801197e:	dd6d      	ble.n	8011a5c <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8011980:	2f00      	cmp	r7, #0
 8011982:	dd6b      	ble.n	8011a5c <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8011984:	4628      	mov	r0, r5
 8011986:	e004      	b.n	8011992 <_ZN8touchgfx11Application15drawCachedAreasEv+0x17a>
 8011988:	4287      	cmp	r7, r0
 801198a:	dcfb      	bgt.n	8011984 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16c>
 801198c:	42a8      	cmp	r0, r5
 801198e:	bfa8      	it	ge
 8011990:	4628      	movge	r0, r5
 8011992:	4b7a      	ldr	r3, [pc, #488]	; (8011b7c <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>)
 8011994:	f8ad 7016 	strh.w	r7, [sp, #22]
 8011998:	f9b3 3000 	ldrsh.w	r3, [r3]
 801199c:	f8ad 3018 	strh.w	r3, [sp, #24]
 80119a0:	9b02      	ldr	r3, [sp, #8]
 80119a2:	1bc0      	subs	r0, r0, r7
 80119a4:	2200      	movs	r2, #0
 80119a6:	881f      	ldrh	r7, [r3, #0]
 80119a8:	f8ad 2014 	strh.w	r2, [sp, #20]
 80119ac:	f8ad 001a 	strh.w	r0, [sp, #26]
 80119b0:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 80119b4:	42bb      	cmp	r3, r7
 80119b6:	d9cc      	bls.n	8011952 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13a>
 80119b8:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 80119bc:	ab07      	add	r3, sp, #28
 80119be:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 80119c2:	6851      	ldr	r1, [r2, #4]
 80119c4:	c303      	stmia	r3!, {r0, r1}
 80119c6:	a905      	add	r1, sp, #20
 80119c8:	a807      	add	r0, sp, #28
 80119ca:	f7ff fad0 	bl	8010f6e <_ZNK8touchgfx4Rect9intersectERKS0_>
 80119ce:	2800      	cmp	r0, #0
 80119d0:	d04c      	beq.n	8011a6c <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 80119d2:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 80119d6:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 80119da:	f8bd 9020 	ldrh.w	r9, [sp, #32]
 80119de:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 80119e2:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 80119e6:	9303      	str	r3, [sp, #12]
 80119e8:	4686      	mov	lr, r0
 80119ea:	4290      	cmp	r0, r2
 80119ec:	4448      	add	r0, r9
 80119ee:	f8bd 9018 	ldrh.w	r9, [sp, #24]
 80119f2:	bfb8      	it	lt
 80119f4:	4696      	movlt	lr, r2
 80119f6:	444a      	add	r2, r9
 80119f8:	4299      	cmp	r1, r3
 80119fa:	b280      	uxth	r0, r0
 80119fc:	b292      	uxth	r2, r2
 80119fe:	468c      	mov	ip, r1
 8011a00:	fa0f f982 	sxth.w	r9, r2
 8011a04:	bfb8      	it	lt
 8011a06:	469c      	movlt	ip, r3
 8011a08:	b203      	sxth	r3, r0
 8011a0a:	454b      	cmp	r3, r9
 8011a0c:	bfb8      	it	lt
 8011a0e:	4602      	movlt	r2, r0
 8011a10:	eba2 020e 	sub.w	r2, r2, lr
 8011a14:	f8ad 2020 	strh.w	r2, [sp, #32]
 8011a18:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8011a1c:	9b03      	ldr	r3, [sp, #12]
 8011a1e:	f8ad e01c 	strh.w	lr, [sp, #28]
 8011a22:	4411      	add	r1, r2
 8011a24:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8011a28:	f8ad c01e 	strh.w	ip, [sp, #30]
 8011a2c:	4413      	add	r3, r2
 8011a2e:	b289      	uxth	r1, r1
 8011a30:	b29b      	uxth	r3, r3
 8011a32:	b208      	sxth	r0, r1
 8011a34:	b21a      	sxth	r2, r3
 8011a36:	4290      	cmp	r0, r2
 8011a38:	bfb8      	it	lt
 8011a3a:	460b      	movlt	r3, r1
 8011a3c:	eba3 030c 	sub.w	r3, r3, ip
 8011a40:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8011a44:	a807      	add	r0, sp, #28
 8011a46:	f7f9 f9dc 	bl	800ae02 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011a4a:	b920      	cbnz	r0, 8011a56 <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 8011a4c:	6823      	ldr	r3, [r4, #0]
 8011a4e:	a907      	add	r1, sp, #28
 8011a50:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8011a52:	4620      	mov	r0, r4
 8011a54:	4798      	blx	r3
 8011a56:	3701      	adds	r7, #1
 8011a58:	b2bf      	uxth	r7, r7
 8011a5a:	e7a9      	b.n	80119b0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 8011a5c:	f8d8 0000 	ldr.w	r0, [r8]
 8011a60:	6803      	ldr	r3, [r0, #0]
 8011a62:	2101      	movs	r1, #1
 8011a64:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8011a68:	4798      	blx	r3
 8011a6a:	e772      	b.n	8011952 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13a>
 8011a6c:	e9cd 0007 	strd	r0, r0, [sp, #28]
 8011a70:	e7e8      	b.n	8011a44 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 8011a72:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011a74:	4798      	blx	r3
 8011a76:	4b42      	ldr	r3, [pc, #264]	; (8011b80 <_ZN8touchgfx11Application15drawCachedAreasEv+0x368>)
 8011a78:	781b      	ldrb	r3, [r3, #0]
 8011a7a:	2b00      	cmp	r3, #0
 8011a7c:	f43f af27 	beq.w	80118ce <_ZN8touchgfx11Application15drawCachedAreasEv+0xb6>
 8011a80:	2300      	movs	r3, #0
 8011a82:	f8a4 312a 	strh.w	r3, [r4, #298]	; 0x12a
 8011a86:	9b02      	ldr	r3, [sp, #8]
 8011a88:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 8011a8c:	881b      	ldrh	r3, [r3, #0]
 8011a8e:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 8011a92:	429d      	cmp	r5, r3
 8011a94:	f67f af1b 	bls.w	80118ce <_ZN8touchgfx11Application15drawCachedAreasEv+0xb6>
 8011a98:	f8b4 112a 	ldrh.w	r1, [r4, #298]	; 0x12a
 8011a9c:	2907      	cmp	r1, #7
 8011a9e:	d815      	bhi.n	8011acc <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b4>
 8011aa0:	eb06 02c3 	add.w	r2, r6, r3, lsl #3
 8011aa4:	f936 8033 	ldrsh.w	r8, [r6, r3, lsl #3]
 8011aa8:	f9b2 e002 	ldrsh.w	lr, [r2, #2]
 8011aac:	f9b2 c004 	ldrsh.w	ip, [r2, #4]
 8011ab0:	f9b2 7006 	ldrsh.w	r7, [r2, #6]
 8011ab4:	1c4a      	adds	r2, r1, #1
 8011ab6:	f8a4 212a 	strh.w	r2, [r4, #298]	; 0x12a
 8011aba:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 8011abe:	f820 8031 	strh.w	r8, [r0, r1, lsl #3]
 8011ac2:	f8a2 e002 	strh.w	lr, [r2, #2]
 8011ac6:	f8a2 c004 	strh.w	ip, [r2, #4]
 8011aca:	80d7      	strh	r7, [r2, #6]
 8011acc:	3301      	adds	r3, #1
 8011ace:	b29b      	uxth	r3, r3
 8011ad0:	e7df      	b.n	8011a92 <_ZN8touchgfx11Application15drawCachedAreasEv+0x27a>
 8011ad2:	2b02      	cmp	r3, #2
 8011ad4:	f040 8136 	bne.w	8011d44 <_ZN8touchgfx11Application15drawCachedAreasEv+0x52c>
 8011ad8:	4b2a      	ldr	r3, [pc, #168]	; (8011b84 <_ZN8touchgfx11Application15drawCachedAreasEv+0x36c>)
 8011ada:	781b      	ldrb	r3, [r3, #0]
 8011adc:	2b01      	cmp	r3, #1
 8011ade:	f104 09a8 	add.w	r9, r4, #168	; 0xa8
 8011ae2:	f000 809c 	beq.w	8011c1e <_ZN8touchgfx11Application15drawCachedAreasEv+0x406>
 8011ae6:	9b02      	ldr	r3, [sp, #8]
 8011ae8:	f8b4 20e8 	ldrh.w	r2, [r4, #232]	; 0xe8
 8011aec:	f8b3 b000 	ldrh.w	fp, [r3]
 8011af0:	f10b 0b01 	add.w	fp, fp, #1
 8011af4:	fa1f fb8b 	uxth.w	fp, fp
 8011af8:	2a00      	cmp	r2, #0
 8011afa:	d0bc      	beq.n	8011a76 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8011afc:	f8b4 50aa 	ldrh.w	r5, [r4, #170]	; 0xaa
 8011b00:	f8b4 30ae 	ldrh.w	r3, [r4, #174]	; 0xae
 8011b04:	441d      	add	r5, r3
 8011b06:	b22d      	sxth	r5, r5
 8011b08:	4659      	mov	r1, fp
 8011b0a:	f04f 0800 	mov.w	r8, #0
 8011b0e:	b28b      	uxth	r3, r1
 8011b10:	429a      	cmp	r2, r3
 8011b12:	ea4f 07c8 	mov.w	r7, r8, lsl #3
 8011b16:	f240 80c1 	bls.w	8011c9c <_ZN8touchgfx11Application15drawCachedAreasEv+0x484>
 8011b1a:	4427      	add	r7, r4
 8011b1c:	eb04 0ec1 	add.w	lr, r4, r1, lsl #3
 8011b20:	f9b7 30aa 	ldrsh.w	r3, [r7, #170]	; 0xaa
 8011b24:	f9be c0aa 	ldrsh.w	ip, [lr, #170]	; 0xaa
 8011b28:	4563      	cmp	r3, ip
 8011b2a:	4608      	mov	r0, r1
 8011b2c:	f340 80a3 	ble.w	8011c76 <_ZN8touchgfx11Application15drawCachedAreasEv+0x45e>
 8011b30:	f8be 50ae 	ldrh.w	r5, [lr, #174]	; 0xae
 8011b34:	4465      	add	r5, ip
 8011b36:	b22d      	sxth	r5, r5
 8011b38:	429d      	cmp	r5, r3
 8011b3a:	bfa8      	it	ge
 8011b3c:	461d      	movge	r5, r3
 8011b3e:	3101      	adds	r1, #1
 8011b40:	4680      	mov	r8, r0
 8011b42:	e7e4      	b.n	8011b0e <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f6>
 8011b44:	d10b      	bne.n	8011b5e <_ZN8touchgfx11Application15drawCachedAreasEv+0x346>
 8011b46:	f9b5 c0ae 	ldrsh.w	ip, [r5, #174]	; 0xae
 8011b4a:	f9ba 10ae 	ldrsh.w	r1, [sl, #174]	; 0xae
 8011b4e:	458c      	cmp	ip, r1
 8011b50:	bfb4      	ite	lt
 8011b52:	469c      	movlt	ip, r3
 8011b54:	46bc      	movge	ip, r7
 8011b56:	4572      	cmp	r2, lr
 8011b58:	bfb8      	it	lt
 8011b5a:	4672      	movlt	r2, lr
 8011b5c:	e088      	b.n	8011c70 <_ZN8touchgfx11Application15drawCachedAreasEv+0x458>
 8011b5e:	428a      	cmp	r2, r1
 8011b60:	bfb8      	it	lt
 8011b62:	460a      	movlt	r2, r1
 8011b64:	46bc      	mov	ip, r7
 8011b66:	e083      	b.n	8011c70 <_ZN8touchgfx11Application15drawCachedAreasEv+0x458>
 8011b68:	200155f4 	.word	0x200155f4
 8011b6c:	20015600 	.word	0x20015600
 8011b70:	2000008c 	.word	0x2000008c
 8011b74:	200155b4 	.word	0x200155b4
 8011b78:	200155aa 	.word	0x200155aa
 8011b7c:	200155a8 	.word	0x200155a8
 8011b80:	200155b2 	.word	0x200155b2
 8011b84:	200155ac 	.word	0x200155ac
 8011b88:	1961      	adds	r1, r4, r5
 8011b8a:	ab07      	add	r3, sp, #28
 8011b8c:	f851 0fa8 	ldr.w	r0, [r1, #168]!
 8011b90:	6849      	ldr	r1, [r1, #4]
 8011b92:	c303      	stmia	r3!, {r0, r1}
 8011b94:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8011b98:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8011b9c:	2b13      	cmp	r3, #19
 8011b9e:	bfd8      	it	le
 8011ba0:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 8011ba4:	f8ad 201c 	strh.w	r2, [sp, #28]
 8011ba8:	440b      	add	r3, r1
 8011baa:	1a9b      	subs	r3, r3, r2
 8011bac:	a807      	add	r0, sp, #28
 8011bae:	f8ad 3020 	strh.w	r3, [sp, #32]
 8011bb2:	f7ff f8b7 	bl	8010d24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8011bb6:	a807      	add	r0, sp, #28
 8011bb8:	f7f9 f923 	bl	800ae02 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011bbc:	bb78      	cbnz	r0, 8011c1e <_ZN8touchgfx11Application15drawCachedAreasEv+0x406>
 8011bbe:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 8011bc2:	f8d8 0000 	ldr.w	r0, [r8]
 8011bc6:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8011bca:	f8d0 e000 	ldr.w	lr, [r0]
 8011bce:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 8011bd2:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8011bd6:	f1bc 0f14 	cmp.w	ip, #20
 8011bda:	bfa8      	it	ge
 8011bdc:	f04f 0c14 	movge.w	ip, #20
 8011be0:	fa1f fc8c 	uxth.w	ip, ip
 8011be4:	f8cd c000 	str.w	ip, [sp]
 8011be8:	f8de a090 	ldr.w	sl, [lr, #144]	; 0x90
 8011bec:	47d0      	blx	sl
 8011bee:	4682      	mov	sl, r0
 8011bf0:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8011bf4:	a807      	add	r0, sp, #28
 8011bf6:	f7ff f87b 	bl	8010cf0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8011bfa:	6823      	ldr	r3, [r4, #0]
 8011bfc:	4425      	add	r5, r4
 8011bfe:	4620      	mov	r0, r4
 8011c00:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8011c02:	a907      	add	r1, sp, #28
 8011c04:	4798      	blx	r3
 8011c06:	f8b5 00ac 	ldrh.w	r0, [r5, #172]	; 0xac
 8011c0a:	eba0 000a 	sub.w	r0, r0, sl
 8011c0e:	b200      	sxth	r0, r0
 8011c10:	f8a5 00ac 	strh.w	r0, [r5, #172]	; 0xac
 8011c14:	b918      	cbnz	r0, 8011c1e <_ZN8touchgfx11Application15drawCachedAreasEv+0x406>
 8011c16:	b2b9      	uxth	r1, r7
 8011c18:	4648      	mov	r0, r9
 8011c1a:	f7ff faa3 	bl	8011164 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8011c1e:	f8b4 b0e8 	ldrh.w	fp, [r4, #232]	; 0xe8
 8011c22:	f1bb 0f00 	cmp.w	fp, #0
 8011c26:	f43f af26 	beq.w	8011a76 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8011c2a:	9b02      	ldr	r3, [sp, #8]
 8011c2c:	f9b4 20a8 	ldrsh.w	r2, [r4, #168]	; 0xa8
 8011c30:	881b      	ldrh	r3, [r3, #0]
 8011c32:	3301      	adds	r3, #1
 8011c34:	b29b      	uxth	r3, r3
 8011c36:	2700      	movs	r7, #0
 8011c38:	b299      	uxth	r1, r3
 8011c3a:	458b      	cmp	fp, r1
 8011c3c:	ea4f 05c7 	mov.w	r5, r7, lsl #3
 8011c40:	d9a2      	bls.n	8011b88 <_ZN8touchgfx11Application15drawCachedAreasEv+0x370>
 8011c42:	4425      	add	r5, r4
 8011c44:	eb04 0ac3 	add.w	sl, r4, r3, lsl #3
 8011c48:	f8b5 10ac 	ldrh.w	r1, [r5, #172]	; 0xac
 8011c4c:	f8b5 00a8 	ldrh.w	r0, [r5, #168]	; 0xa8
 8011c50:	f9ba e0a8 	ldrsh.w	lr, [sl, #168]	; 0xa8
 8011c54:	4408      	add	r0, r1
 8011c56:	f8ba 10ac 	ldrh.w	r1, [sl, #172]	; 0xac
 8011c5a:	4471      	add	r1, lr
 8011c5c:	b200      	sxth	r0, r0
 8011c5e:	b209      	sxth	r1, r1
 8011c60:	4288      	cmp	r0, r1
 8011c62:	469c      	mov	ip, r3
 8011c64:	f6bf af6e 	bge.w	8011b44 <_ZN8touchgfx11Application15drawCachedAreasEv+0x32c>
 8011c68:	4586      	cmp	lr, r0
 8011c6a:	4672      	mov	r2, lr
 8011c6c:	bfb8      	it	lt
 8011c6e:	4602      	movlt	r2, r0
 8011c70:	3301      	adds	r3, #1
 8011c72:	4667      	mov	r7, ip
 8011c74:	e7e0      	b.n	8011c38 <_ZN8touchgfx11Application15drawCachedAreasEv+0x420>
 8011c76:	d10c      	bne.n	8011c92 <_ZN8touchgfx11Application15drawCachedAreasEv+0x47a>
 8011c78:	f9b7 70ac 	ldrsh.w	r7, [r7, #172]	; 0xac
 8011c7c:	f9be 00ac 	ldrsh.w	r0, [lr, #172]	; 0xac
 8011c80:	4287      	cmp	r7, r0
 8011c82:	bfb4      	ite	lt
 8011c84:	4608      	movlt	r0, r1
 8011c86:	4640      	movge	r0, r8
 8011c88:	f8be 70ae 	ldrh.w	r7, [lr, #174]	; 0xae
 8011c8c:	443b      	add	r3, r7
 8011c8e:	b21b      	sxth	r3, r3
 8011c90:	e752      	b.n	8011b38 <_ZN8touchgfx11Application15drawCachedAreasEv+0x320>
 8011c92:	4565      	cmp	r5, ip
 8011c94:	bfa8      	it	ge
 8011c96:	4665      	movge	r5, ip
 8011c98:	4640      	mov	r0, r8
 8011c9a:	e750      	b.n	8011b3e <_ZN8touchgfx11Application15drawCachedAreasEv+0x326>
 8011c9c:	eb09 0007 	add.w	r0, r9, r7
 8011ca0:	4427      	add	r7, r4
 8011ca2:	9203      	str	r2, [sp, #12]
 8011ca4:	f9b7 a0ae 	ldrsh.w	sl, [r7, #174]	; 0xae
 8011ca8:	f1ba 0f13 	cmp.w	sl, #19
 8011cac:	bfde      	ittt	le
 8011cae:	f8b7 50aa 	ldrhle.w	r5, [r7, #170]	; 0xaa
 8011cb2:	4455      	addle	r5, sl
 8011cb4:	b22d      	sxthle	r5, r5
 8011cb6:	f7f9 f8a4 	bl	800ae02 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011cba:	9a03      	ldr	r2, [sp, #12]
 8011cbc:	2800      	cmp	r0, #0
 8011cbe:	f47f af1b 	bne.w	8011af8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2e0>
 8011cc2:	f9b7 20aa 	ldrsh.w	r2, [r7, #170]	; 0xaa
 8011cc6:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8011cca:	482a      	ldr	r0, [pc, #168]	; (8011d74 <_ZN8touchgfx11Application15drawCachedAreasEv+0x55c>)
 8011ccc:	f9b7 10a8 	ldrsh.w	r1, [r7, #168]	; 0xa8
 8011cd0:	f9b7 30ac 	ldrsh.w	r3, [r7, #172]	; 0xac
 8011cd4:	6800      	ldr	r0, [r0, #0]
 8011cd6:	f8ad 101c 	strh.w	r1, [sp, #28]
 8011cda:	1aad      	subs	r5, r5, r2
 8011cdc:	2d14      	cmp	r5, #20
 8011cde:	f8ad 201e 	strh.w	r2, [sp, #30]
 8011ce2:	f8ad 3020 	strh.w	r3, [sp, #32]
 8011ce6:	bfa8      	it	ge
 8011ce8:	2514      	movge	r5, #20
 8011cea:	f8d0 c000 	ldr.w	ip, [r0]
 8011cee:	b2ad      	uxth	r5, r5
 8011cf0:	fa1f fa8a 	uxth.w	sl, sl
 8011cf4:	4555      	cmp	r5, sl
 8011cf6:	bf94      	ite	ls
 8011cf8:	9500      	strls	r5, [sp, #0]
 8011cfa:	f8cd a000 	strhi.w	sl, [sp]
 8011cfe:	b292      	uxth	r2, r2
 8011d00:	f8dc 5090 	ldr.w	r5, [ip, #144]	; 0x90
 8011d04:	b29b      	uxth	r3, r3
 8011d06:	b289      	uxth	r1, r1
 8011d08:	47a8      	blx	r5
 8011d0a:	6823      	ldr	r3, [r4, #0]
 8011d0c:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8011d10:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8011d12:	a907      	add	r1, sp, #28
 8011d14:	4620      	mov	r0, r4
 8011d16:	4798      	blx	r3
 8011d18:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 8011d1c:	f8b7 30ae 	ldrh.w	r3, [r7, #174]	; 0xae
 8011d20:	f8b7 20aa 	ldrh.w	r2, [r7, #170]	; 0xaa
 8011d24:	1a5b      	subs	r3, r3, r1
 8011d26:	440a      	add	r2, r1
 8011d28:	b21b      	sxth	r3, r3
 8011d2a:	f8a7 20aa 	strh.w	r2, [r7, #170]	; 0xaa
 8011d2e:	f8a7 30ae 	strh.w	r3, [r7, #174]	; 0xae
 8011d32:	2b00      	cmp	r3, #0
 8011d34:	f47f aed7 	bne.w	8011ae6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ce>
 8011d38:	fa1f f188 	uxth.w	r1, r8
 8011d3c:	4648      	mov	r0, r9
 8011d3e:	f7ff fa11 	bl	8011164 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8011d42:	e6d0      	b.n	8011ae6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ce>
 8011d44:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 8011d48:	42ab      	cmp	r3, r5
 8011d4a:	f67f ae94 	bls.w	8011a76 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8011d4e:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
 8011d52:	ab07      	add	r3, sp, #28
 8011d54:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 8011d58:	6851      	ldr	r1, [r2, #4]
 8011d5a:	c303      	stmia	r3!, {r0, r1}
 8011d5c:	a807      	add	r0, sp, #28
 8011d5e:	f7f9 f850 	bl	800ae02 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011d62:	b920      	cbnz	r0, 8011d6e <_ZN8touchgfx11Application15drawCachedAreasEv+0x556>
 8011d64:	6823      	ldr	r3, [r4, #0]
 8011d66:	a907      	add	r1, sp, #28
 8011d68:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8011d6a:	4620      	mov	r0, r4
 8011d6c:	4798      	blx	r3
 8011d6e:	3501      	adds	r5, #1
 8011d70:	b2ad      	uxth	r5, r5
 8011d72:	e7e7      	b.n	8011d44 <_ZN8touchgfx11Application15drawCachedAreasEv+0x52c>
 8011d74:	200155b4 	.word	0x200155b4

08011d78 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8011d78:	4b03      	ldr	r3, [pc, #12]	; (8011d88 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 8011d7a:	2200      	movs	r2, #0
 8011d7c:	801a      	strh	r2, [r3, #0]
 8011d7e:	805a      	strh	r2, [r3, #2]
 8011d80:	809a      	strh	r2, [r3, #4]
 8011d82:	80da      	strh	r2, [r3, #6]
 8011d84:	4770      	bx	lr
 8011d86:	bf00      	nop
 8011d88:	20015600 	.word	0x20015600

08011d8c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 8011d8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011d90:	4606      	mov	r6, r0
 8011d92:	b09d      	sub	sp, #116	; 0x74
 8011d94:	a803      	add	r0, sp, #12
 8011d96:	4614      	mov	r4, r2
 8011d98:	468a      	mov	sl, r1
 8011d9a:	461d      	mov	r5, r3
 8011d9c:	f000 fe67 	bl	8012a6e <_ZN8touchgfx12TextProviderC1Ev>
 8011da0:	6833      	ldr	r3, [r6, #0]
 8011da2:	4630      	mov	r0, r6
 8011da4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8011da6:	4798      	blx	r3
 8011da8:	6833      	ldr	r3, [r6, #0]
 8011daa:	4607      	mov	r7, r0
 8011dac:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8011dae:	4630      	mov	r0, r6
 8011db0:	4798      	blx	r3
 8011db2:	462a      	mov	r2, r5
 8011db4:	9000      	str	r0, [sp, #0]
 8011db6:	4621      	mov	r1, r4
 8011db8:	463b      	mov	r3, r7
 8011dba:	a803      	add	r0, sp, #12
 8011dbc:	f000 feb2 	bl	8012b24 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8011dc0:	2500      	movs	r5, #0
 8011dc2:	462c      	mov	r4, r5
 8011dc4:	46a9      	mov	r9, r5
 8011dc6:	46a8      	mov	r8, r5
 8011dc8:	f242 0b0b 	movw	fp, #8203	; 0x200b
 8011dcc:	2300      	movs	r3, #0
 8011dce:	9302      	str	r3, [sp, #8]
 8011dd0:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8011dd4:	429c      	cmp	r4, r3
 8011dd6:	d002      	beq.n	8011dde <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8011dd8:	455c      	cmp	r4, fp
 8011dda:	bf18      	it	ne
 8011ddc:	4625      	movne	r5, r4
 8011dde:	ab02      	add	r3, sp, #8
 8011de0:	4632      	mov	r2, r6
 8011de2:	4651      	mov	r1, sl
 8011de4:	a803      	add	r0, sp, #12
 8011de6:	f001 f99f 	bl	8013128 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8011dea:	4604      	mov	r4, r0
 8011dec:	b108      	cbz	r0, 8011df2 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 8011dee:	280a      	cmp	r0, #10
 8011df0:	d10a      	bne.n	8011e08 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 8011df2:	45c1      	cmp	r9, r8
 8011df4:	bf38      	it	cc
 8011df6:	46c1      	movcc	r9, r8
 8011df8:	f04f 0800 	mov.w	r8, #0
 8011dfc:	2c00      	cmp	r4, #0
 8011dfe:	d1e5      	bne.n	8011dcc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8011e00:	4648      	mov	r0, r9
 8011e02:	b01d      	add	sp, #116	; 0x74
 8011e04:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011e08:	9a02      	ldr	r2, [sp, #8]
 8011e0a:	2a00      	cmp	r2, #0
 8011e0c:	d0de      	beq.n	8011dcc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8011e0e:	7b57      	ldrb	r7, [r2, #13]
 8011e10:	6833      	ldr	r3, [r6, #0]
 8011e12:	8894      	ldrh	r4, [r2, #4]
 8011e14:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8011e16:	007f      	lsls	r7, r7, #1
 8011e18:	f407 7080 	and.w	r0, r7, #256	; 0x100
 8011e1c:	7a97      	ldrb	r7, [r2, #10]
 8011e1e:	4629      	mov	r1, r5
 8011e20:	4307      	orrs	r7, r0
 8011e22:	4630      	mov	r0, r6
 8011e24:	4798      	blx	r3
 8011e26:	4438      	add	r0, r7
 8011e28:	4480      	add	r8, r0
 8011e2a:	fa1f f888 	uxth.w	r8, r8
 8011e2e:	e7e5      	b.n	8011dfc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

08011e30 <_ZNK8touchgfx4Font12getCharWidthEt>:
 8011e30:	b508      	push	{r3, lr}
 8011e32:	6803      	ldr	r3, [r0, #0]
 8011e34:	68db      	ldr	r3, [r3, #12]
 8011e36:	4798      	blx	r3
 8011e38:	b128      	cbz	r0, 8011e46 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 8011e3a:	7b43      	ldrb	r3, [r0, #13]
 8011e3c:	7a80      	ldrb	r0, [r0, #10]
 8011e3e:	005b      	lsls	r3, r3, #1
 8011e40:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8011e44:	4318      	orrs	r0, r3
 8011e46:	bd08      	pop	{r3, pc}

08011e48 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 8011e48:	b40e      	push	{r1, r2, r3}
 8011e4a:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011e4c:	b09e      	sub	sp, #120	; 0x78
 8011e4e:	ab23      	add	r3, sp, #140	; 0x8c
 8011e50:	4605      	mov	r5, r0
 8011e52:	f853 4b04 	ldr.w	r4, [r3], #4
 8011e56:	9303      	str	r3, [sp, #12]
 8011e58:	a805      	add	r0, sp, #20
 8011e5a:	f000 fe08 	bl	8012a6e <_ZN8touchgfx12TextProviderC1Ev>
 8011e5e:	682b      	ldr	r3, [r5, #0]
 8011e60:	4628      	mov	r0, r5
 8011e62:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8011e64:	4798      	blx	r3
 8011e66:	682b      	ldr	r3, [r5, #0]
 8011e68:	4606      	mov	r6, r0
 8011e6a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8011e6c:	4628      	mov	r0, r5
 8011e6e:	4798      	blx	r3
 8011e70:	4633      	mov	r3, r6
 8011e72:	ae1e      	add	r6, sp, #120	; 0x78
 8011e74:	4621      	mov	r1, r4
 8011e76:	9000      	str	r0, [sp, #0]
 8011e78:	9a03      	ldr	r2, [sp, #12]
 8011e7a:	2400      	movs	r4, #0
 8011e7c:	a805      	add	r0, sp, #20
 8011e7e:	f000 fe51 	bl	8012b24 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8011e82:	f846 4d68 	str.w	r4, [r6, #-104]!
 8011e86:	462a      	mov	r2, r5
 8011e88:	4633      	mov	r3, r6
 8011e8a:	4621      	mov	r1, r4
 8011e8c:	a805      	add	r0, sp, #20
 8011e8e:	f001 f94b 	bl	8013128 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8011e92:	b1f0      	cbz	r0, 8011ed2 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 8011e94:	280a      	cmp	r0, #10
 8011e96:	d018      	beq.n	8011eca <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8011e98:	9f04      	ldr	r7, [sp, #16]
 8011e9a:	b1b7      	cbz	r7, 8011eca <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8011e9c:	7b78      	ldrb	r0, [r7, #13]
 8011e9e:	7a3b      	ldrb	r3, [r7, #8]
 8011ea0:	88aa      	ldrh	r2, [r5, #4]
 8011ea2:	00c1      	lsls	r1, r0, #3
 8011ea4:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8011ea8:	4319      	orrs	r1, r3
 8011eaa:	0643      	lsls	r3, r0, #25
 8011eac:	bf44      	itt	mi
 8011eae:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 8011eb2:	b219      	sxthmi	r1, r3
 8011eb4:	0100      	lsls	r0, r0, #4
 8011eb6:	79fb      	ldrb	r3, [r7, #7]
 8011eb8:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8011ebc:	4303      	orrs	r3, r0
 8011ebe:	4413      	add	r3, r2
 8011ec0:	1a5b      	subs	r3, r3, r1
 8011ec2:	b29b      	uxth	r3, r3
 8011ec4:	42a3      	cmp	r3, r4
 8011ec6:	bfc8      	it	gt
 8011ec8:	b21c      	sxthgt	r4, r3
 8011eca:	4633      	mov	r3, r6
 8011ecc:	462a      	mov	r2, r5
 8011ece:	2100      	movs	r1, #0
 8011ed0:	e7dc      	b.n	8011e8c <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 8011ed2:	b2a0      	uxth	r0, r4
 8011ed4:	b01e      	add	sp, #120	; 0x78
 8011ed6:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8011eda:	b003      	add	sp, #12
 8011edc:	4770      	bx	lr

08011ede <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 8011ede:	b40e      	push	{r1, r2, r3}
 8011ee0:	b570      	push	{r4, r5, r6, lr}
 8011ee2:	b09d      	sub	sp, #116	; 0x74
 8011ee4:	ab21      	add	r3, sp, #132	; 0x84
 8011ee6:	4604      	mov	r4, r0
 8011ee8:	f853 5b04 	ldr.w	r5, [r3], #4
 8011eec:	9302      	str	r3, [sp, #8]
 8011eee:	a803      	add	r0, sp, #12
 8011ef0:	f000 fdbd 	bl	8012a6e <_ZN8touchgfx12TextProviderC1Ev>
 8011ef4:	6823      	ldr	r3, [r4, #0]
 8011ef6:	4620      	mov	r0, r4
 8011ef8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8011efa:	4798      	blx	r3
 8011efc:	6823      	ldr	r3, [r4, #0]
 8011efe:	4606      	mov	r6, r0
 8011f00:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8011f02:	4620      	mov	r0, r4
 8011f04:	4798      	blx	r3
 8011f06:	4633      	mov	r3, r6
 8011f08:	9000      	str	r0, [sp, #0]
 8011f0a:	9a02      	ldr	r2, [sp, #8]
 8011f0c:	4629      	mov	r1, r5
 8011f0e:	a803      	add	r0, sp, #12
 8011f10:	f000 fe08 	bl	8012b24 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8011f14:	a803      	add	r0, sp, #12
 8011f16:	f001 f9d5 	bl	80132c4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8011f1a:	2401      	movs	r4, #1
 8011f1c:	b2a3      	uxth	r3, r4
 8011f1e:	b140      	cbz	r0, 8011f32 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 8011f20:	280a      	cmp	r0, #10
 8011f22:	bf08      	it	eq
 8011f24:	3301      	addeq	r3, #1
 8011f26:	a803      	add	r0, sp, #12
 8011f28:	bf08      	it	eq
 8011f2a:	b21c      	sxtheq	r4, r3
 8011f2c:	f001 f9ca 	bl	80132c4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8011f30:	e7f4      	b.n	8011f1c <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 8011f32:	4618      	mov	r0, r3
 8011f34:	b01d      	add	sp, #116	; 0x74
 8011f36:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011f3a:	b003      	add	sp, #12
 8011f3c:	4770      	bx	lr

08011f3e <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 8011f3e:	b40e      	push	{r1, r2, r3}
 8011f40:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011f42:	b09e      	sub	sp, #120	; 0x78
 8011f44:	ab23      	add	r3, sp, #140	; 0x8c
 8011f46:	4604      	mov	r4, r0
 8011f48:	f853 5b04 	ldr.w	r5, [r3], #4
 8011f4c:	9303      	str	r3, [sp, #12]
 8011f4e:	a805      	add	r0, sp, #20
 8011f50:	f000 fd8d 	bl	8012a6e <_ZN8touchgfx12TextProviderC1Ev>
 8011f54:	6823      	ldr	r3, [r4, #0]
 8011f56:	4620      	mov	r0, r4
 8011f58:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8011f5a:	4798      	blx	r3
 8011f5c:	6823      	ldr	r3, [r4, #0]
 8011f5e:	4606      	mov	r6, r0
 8011f60:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8011f62:	4620      	mov	r0, r4
 8011f64:	4798      	blx	r3
 8011f66:	4633      	mov	r3, r6
 8011f68:	4629      	mov	r1, r5
 8011f6a:	9000      	str	r0, [sp, #0]
 8011f6c:	9a03      	ldr	r2, [sp, #12]
 8011f6e:	a805      	add	r0, sp, #20
 8011f70:	ad1e      	add	r5, sp, #120	; 0x78
 8011f72:	f000 fdd7 	bl	8012b24 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8011f76:	2100      	movs	r1, #0
 8011f78:	f845 1d68 	str.w	r1, [r5, #-104]!
 8011f7c:	4622      	mov	r2, r4
 8011f7e:	462b      	mov	r3, r5
 8011f80:	a805      	add	r0, sp, #20
 8011f82:	f001 f8d1 	bl	8013128 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8011f86:	26ff      	movs	r6, #255	; 0xff
 8011f88:	b1d8      	cbz	r0, 8011fc2 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x84>
 8011f8a:	280a      	cmp	r0, #10
 8011f8c:	d012      	beq.n	8011fb4 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 8011f8e:	9804      	ldr	r0, [sp, #16]
 8011f90:	b180      	cbz	r0, 8011fb4 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 8011f92:	7b47      	ldrb	r7, [r0, #13]
 8011f94:	7922      	ldrb	r2, [r4, #4]
 8011f96:	00fb      	lsls	r3, r7, #3
 8011f98:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8011f9c:	7a03      	ldrb	r3, [r0, #8]
 8011f9e:	430b      	orrs	r3, r1
 8011fa0:	0679      	lsls	r1, r7, #25
 8011fa2:	bf44      	itt	mi
 8011fa4:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8011fa8:	b21b      	sxthmi	r3, r3
 8011faa:	1ad3      	subs	r3, r2, r3
 8011fac:	b2db      	uxtb	r3, r3
 8011fae:	429e      	cmp	r6, r3
 8011fb0:	bf28      	it	cs
 8011fb2:	461e      	movcs	r6, r3
 8011fb4:	462b      	mov	r3, r5
 8011fb6:	4622      	mov	r2, r4
 8011fb8:	2100      	movs	r1, #0
 8011fba:	a805      	add	r0, sp, #20
 8011fbc:	f001 f8b4 	bl	8013128 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8011fc0:	e7e2      	b.n	8011f88 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4a>
 8011fc2:	4630      	mov	r0, r6
 8011fc4:	b01e      	add	sp, #120	; 0x78
 8011fc6:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8011fca:	b003      	add	sp, #12
 8011fcc:	4770      	bx	lr

08011fce <_ZNK8touchgfx8Drawable10invalidateEv>:
 8011fce:	b513      	push	{r0, r1, r4, lr}
 8011fd0:	6803      	ldr	r3, [r0, #0]
 8011fd2:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8011fd6:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8011fda:	f8ad 1004 	strh.w	r1, [sp, #4]
 8011fde:	2400      	movs	r4, #0
 8011fe0:	9400      	str	r4, [sp, #0]
 8011fe2:	f8ad 2006 	strh.w	r2, [sp, #6]
 8011fe6:	691b      	ldr	r3, [r3, #16]
 8011fe8:	4669      	mov	r1, sp
 8011fea:	4798      	blx	r3
 8011fec:	b002      	add	sp, #8
 8011fee:	bd10      	pop	{r4, pc}

08011ff0 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 8011ff0:	b538      	push	{r3, r4, r5, lr}
 8011ff2:	680b      	ldr	r3, [r1, #0]
 8011ff4:	460c      	mov	r4, r1
 8011ff6:	68db      	ldr	r3, [r3, #12]
 8011ff8:	4605      	mov	r5, r0
 8011ffa:	4798      	blx	r3
 8011ffc:	6823      	ldr	r3, [r4, #0]
 8011ffe:	4620      	mov	r0, r4
 8012000:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012002:	4629      	mov	r1, r5
 8012004:	4798      	blx	r3
 8012006:	4628      	mov	r0, r5
 8012008:	bd38      	pop	{r3, r4, r5, pc}

0801200a <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 801200a:	b410      	push	{r4}
 801200c:	880a      	ldrh	r2, [r1, #0]
 801200e:	8884      	ldrh	r4, [r0, #4]
 8012010:	4422      	add	r2, r4
 8012012:	800a      	strh	r2, [r1, #0]
 8012014:	88c4      	ldrh	r4, [r0, #6]
 8012016:	884a      	ldrh	r2, [r1, #2]
 8012018:	4422      	add	r2, r4
 801201a:	804a      	strh	r2, [r1, #2]
 801201c:	6940      	ldr	r0, [r0, #20]
 801201e:	b120      	cbz	r0, 801202a <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 8012020:	6803      	ldr	r3, [r0, #0]
 8012022:	f85d 4b04 	ldr.w	r4, [sp], #4
 8012026:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012028:	4718      	bx	r3
 801202a:	f85d 4b04 	ldr.w	r4, [sp], #4
 801202e:	4770      	bx	lr

08012030 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 8012030:	b570      	push	{r4, r5, r6, lr}
 8012032:	8882      	ldrh	r2, [r0, #4]
 8012034:	880b      	ldrh	r3, [r1, #0]
 8012036:	4413      	add	r3, r2
 8012038:	800b      	strh	r3, [r1, #0]
 801203a:	88c2      	ldrh	r2, [r0, #6]
 801203c:	884b      	ldrh	r3, [r1, #2]
 801203e:	460c      	mov	r4, r1
 8012040:	4413      	add	r3, r2
 8012042:	804b      	strh	r3, [r1, #2]
 8012044:	4605      	mov	r5, r0
 8012046:	1d01      	adds	r1, r0, #4
 8012048:	4620      	mov	r0, r4
 801204a:	f7f8 fe97 	bl	800ad7c <_ZN8touchgfx4RectaNERKS0_>
 801204e:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8012052:	2b00      	cmp	r3, #0
 8012054:	dd0b      	ble.n	801206e <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8012056:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801205a:	2b00      	cmp	r3, #0
 801205c:	dd07      	ble.n	801206e <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 801205e:	6968      	ldr	r0, [r5, #20]
 8012060:	b128      	cbz	r0, 801206e <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8012062:	6803      	ldr	r3, [r0, #0]
 8012064:	4621      	mov	r1, r4
 8012066:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012068:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801206c:	4718      	bx	r3
 801206e:	bd70      	pop	{r4, r5, r6, pc}

08012070 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8012070:	b570      	push	{r4, r5, r6, lr}
 8012072:	8882      	ldrh	r2, [r0, #4]
 8012074:	880b      	ldrh	r3, [r1, #0]
 8012076:	4413      	add	r3, r2
 8012078:	800b      	strh	r3, [r1, #0]
 801207a:	88c2      	ldrh	r2, [r0, #6]
 801207c:	884b      	ldrh	r3, [r1, #2]
 801207e:	460c      	mov	r4, r1
 8012080:	4413      	add	r3, r2
 8012082:	804b      	strh	r3, [r1, #2]
 8012084:	4605      	mov	r5, r0
 8012086:	1d01      	adds	r1, r0, #4
 8012088:	4620      	mov	r0, r4
 801208a:	f7f8 fe77 	bl	800ad7c <_ZN8touchgfx4RectaNERKS0_>
 801208e:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8012092:	2b00      	cmp	r3, #0
 8012094:	dd18      	ble.n	80120c8 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 8012096:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801209a:	2b00      	cmp	r3, #0
 801209c:	dd14      	ble.n	80120c8 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 801209e:	6968      	ldr	r0, [r5, #20]
 80120a0:	b128      	cbz	r0, 80120ae <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 80120a2:	6803      	ldr	r3, [r0, #0]
 80120a4:	4621      	mov	r1, r4
 80120a6:	691b      	ldr	r3, [r3, #16]
 80120a8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80120ac:	4718      	bx	r3
 80120ae:	4b07      	ldr	r3, [pc, #28]	; (80120cc <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 80120b0:	681b      	ldr	r3, [r3, #0]
 80120b2:	3304      	adds	r3, #4
 80120b4:	429d      	cmp	r5, r3
 80120b6:	d107      	bne.n	80120c8 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 80120b8:	f7fe fff2 	bl	80110a0 <_ZN8touchgfx11Application11getInstanceEv>
 80120bc:	6821      	ldr	r1, [r4, #0]
 80120be:	6862      	ldr	r2, [r4, #4]
 80120c0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80120c4:	f7ff b862 	b.w	801118c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 80120c8:	bd70      	pop	{r4, r5, r6, pc}
 80120ca:	bf00      	nop
 80120cc:	200155f8 	.word	0x200155f8

080120d0 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 80120d0:	b570      	push	{r4, r5, r6, lr}
 80120d2:	4604      	mov	r4, r0
 80120d4:	4616      	mov	r6, r2
 80120d6:	460d      	mov	r5, r1
 80120d8:	b901      	cbnz	r1, 80120dc <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 80120da:	b192      	cbz	r2, 8012102 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 80120dc:	6823      	ldr	r3, [r4, #0]
 80120de:	4620      	mov	r0, r4
 80120e0:	699b      	ldr	r3, [r3, #24]
 80120e2:	4798      	blx	r3
 80120e4:	88e2      	ldrh	r2, [r4, #6]
 80120e6:	88a1      	ldrh	r1, [r4, #4]
 80120e8:	4432      	add	r2, r6
 80120ea:	4429      	add	r1, r5
 80120ec:	4620      	mov	r0, r4
 80120ee:	b212      	sxth	r2, r2
 80120f0:	b209      	sxth	r1, r1
 80120f2:	f7f0 fda5 	bl	8002c40 <_ZN8touchgfx8Drawable5setXYEss>
 80120f6:	6823      	ldr	r3, [r4, #0]
 80120f8:	4620      	mov	r0, r4
 80120fa:	699b      	ldr	r3, [r3, #24]
 80120fc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012100:	4718      	bx	r3
 8012102:	bd70      	pop	{r4, r5, r6, pc}

08012104 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 8012104:	b510      	push	{r4, lr}
 8012106:	4604      	mov	r4, r0
 8012108:	4608      	mov	r0, r1
 801210a:	2300      	movs	r3, #0
 801210c:	8023      	strh	r3, [r4, #0]
 801210e:	8063      	strh	r3, [r4, #2]
 8012110:	6803      	ldr	r3, [r0, #0]
 8012112:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8012116:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 801211a:	80a1      	strh	r1, [r4, #4]
 801211c:	80e2      	strh	r2, [r4, #6]
 801211e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012120:	4621      	mov	r1, r4
 8012122:	4798      	blx	r3
 8012124:	4620      	mov	r0, r4
 8012126:	bd10      	pop	{r4, pc}

08012128 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>:
 8012128:	b530      	push	{r4, r5, lr}
 801212a:	8083      	strh	r3, [r0, #4]
 801212c:	f89d 300c 	ldrb.w	r3, [sp, #12]
 8012130:	f89d 5010 	ldrb.w	r5, [sp, #16]
 8012134:	7183      	strb	r3, [r0, #6]
 8012136:	79c3      	ldrb	r3, [r0, #7]
 8012138:	6101      	str	r1, [r0, #16]
 801213a:	f365 0306 	bfi	r3, r5, #0, #7
 801213e:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8012142:	8282      	strh	r2, [r0, #20]
 8012144:	f365 13c7 	bfi	r3, r5, #7, #1
 8012148:	71c3      	strb	r3, [r0, #7]
 801214a:	f89d 3018 	ldrb.w	r3, [sp, #24]
 801214e:	7203      	strb	r3, [r0, #8]
 8012150:	f89d 301c 	ldrb.w	r3, [sp, #28]
 8012154:	7243      	strb	r3, [r0, #9]
 8012156:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 801215a:	8143      	strh	r3, [r0, #10]
 801215c:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 8012160:	8183      	strh	r3, [r0, #12]
 8012162:	4b01      	ldr	r3, [pc, #4]	; (8012168 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt+0x40>)
 8012164:	6003      	str	r3, [r0, #0]
 8012166:	bd30      	pop	{r4, r5, pc}
 8012168:	08024344 	.word	0x08024344

0801216c <_ZNK8touchgfx9ConstFont4findEt>:
 801216c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801216e:	6904      	ldr	r4, [r0, #16]
 8012170:	b3bc      	cbz	r4, 80121e2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8012172:	88a3      	ldrh	r3, [r4, #4]
 8012174:	8a82      	ldrh	r2, [r0, #20]
 8012176:	1acb      	subs	r3, r1, r3
 8012178:	f102 32ff 	add.w	r2, r2, #4294967295
 801217c:	d431      	bmi.n	80121e2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801217e:	4293      	cmp	r3, r2
 8012180:	dd0c      	ble.n	801219c <_ZNK8touchgfx9ConstFont4findEt+0x30>
 8012182:	230e      	movs	r3, #14
 8012184:	fb03 4302 	mla	r3, r3, r2, r4
 8012188:	889b      	ldrh	r3, [r3, #4]
 801218a:	1a5b      	subs	r3, r3, r1
 801218c:	1ad3      	subs	r3, r2, r3
 801218e:	429a      	cmp	r2, r3
 8012190:	db27      	blt.n	80121e2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8012192:	2b00      	cmp	r3, #0
 8012194:	bfbc      	itt	lt
 8012196:	2302      	movlt	r3, #2
 8012198:	fb92 f3f3 	sdivlt	r3, r2, r3
 801219c:	2500      	movs	r5, #0
 801219e:	260e      	movs	r6, #14
 80121a0:	4295      	cmp	r5, r2
 80121a2:	dc1e      	bgt.n	80121e2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80121a4:	fb06 4003 	mla	r0, r6, r3, r4
 80121a8:	8887      	ldrh	r7, [r0, #4]
 80121aa:	42b9      	cmp	r1, r7
 80121ac:	d01a      	beq.n	80121e4 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 80121ae:	d20d      	bcs.n	80121cc <_ZNK8touchgfx9ConstFont4findEt+0x60>
 80121b0:	1e5a      	subs	r2, r3, #1
 80121b2:	4295      	cmp	r5, r2
 80121b4:	dc15      	bgt.n	80121e2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80121b6:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 80121ba:	1a5b      	subs	r3, r3, r1
 80121bc:	1ad3      	subs	r3, r2, r3
 80121be:	429a      	cmp	r2, r3
 80121c0:	db0f      	blt.n	80121e2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80121c2:	429d      	cmp	r5, r3
 80121c4:	ddec      	ble.n	80121a0 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80121c6:	1953      	adds	r3, r2, r5
 80121c8:	105b      	asrs	r3, r3, #1
 80121ca:	e7e9      	b.n	80121a0 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80121cc:	1c5d      	adds	r5, r3, #1
 80121ce:	42aa      	cmp	r2, r5
 80121d0:	db07      	blt.n	80121e2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80121d2:	8a43      	ldrh	r3, [r0, #18]
 80121d4:	1acb      	subs	r3, r1, r3
 80121d6:	442b      	add	r3, r5
 80121d8:	429d      	cmp	r5, r3
 80121da:	dc02      	bgt.n	80121e2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80121dc:	429a      	cmp	r2, r3
 80121de:	dadf      	bge.n	80121a0 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80121e0:	e7f1      	b.n	80121c6 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 80121e2:	2000      	movs	r0, #0
 80121e4:	bdf0      	pop	{r4, r5, r6, r7, pc}

080121e6 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 80121e6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80121e8:	4604      	mov	r4, r0
 80121ea:	4617      	mov	r7, r2
 80121ec:	461e      	mov	r6, r3
 80121ee:	b911      	cbnz	r1, 80121f6 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 80121f0:	2500      	movs	r5, #0
 80121f2:	4628      	mov	r0, r5
 80121f4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80121f6:	290a      	cmp	r1, #10
 80121f8:	d0fa      	beq.n	80121f0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80121fa:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 80121fe:	4291      	cmp	r1, r2
 8012200:	d0f6      	beq.n	80121f0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8012202:	f242 020b 	movw	r2, #8203	; 0x200b
 8012206:	4291      	cmp	r1, r2
 8012208:	d0f2      	beq.n	80121f0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801220a:	f7ff ffaf 	bl	801216c <_ZNK8touchgfx9ConstFont4findEt>
 801220e:	4605      	mov	r5, r0
 8012210:	b950      	cbnz	r0, 8012228 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 8012212:	6823      	ldr	r3, [r4, #0]
 8012214:	4620      	mov	r0, r4
 8012216:	691b      	ldr	r3, [r3, #16]
 8012218:	4798      	blx	r3
 801221a:	4601      	mov	r1, r0
 801221c:	4620      	mov	r0, r4
 801221e:	f7ff ffa5 	bl	801216c <_ZNK8touchgfx9ConstFont4findEt>
 8012222:	4605      	mov	r5, r0
 8012224:	2800      	cmp	r0, #0
 8012226:	d0e3      	beq.n	80121f0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8012228:	6823      	ldr	r3, [r4, #0]
 801222a:	4629      	mov	r1, r5
 801222c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801222e:	4620      	mov	r0, r4
 8012230:	4798      	blx	r3
 8012232:	6038      	str	r0, [r7, #0]
 8012234:	6823      	ldr	r3, [r4, #0]
 8012236:	4620      	mov	r0, r4
 8012238:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801223a:	4798      	blx	r3
 801223c:	7030      	strb	r0, [r6, #0]
 801223e:	e7d8      	b.n	80121f2 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

08012240 <_ZN8touchgfx4clzuEm>:
 8012240:	4603      	mov	r3, r0
 8012242:	b1c8      	cbz	r0, 8012278 <_ZN8touchgfx4clzuEm+0x38>
 8012244:	0c02      	lsrs	r2, r0, #16
 8012246:	0412      	lsls	r2, r2, #16
 8012248:	b9a2      	cbnz	r2, 8012274 <_ZN8touchgfx4clzuEm+0x34>
 801224a:	0403      	lsls	r3, r0, #16
 801224c:	2010      	movs	r0, #16
 801224e:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8012252:	bf04      	itt	eq
 8012254:	021b      	lsleq	r3, r3, #8
 8012256:	3008      	addeq	r0, #8
 8012258:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 801225c:	bf04      	itt	eq
 801225e:	011b      	lsleq	r3, r3, #4
 8012260:	3004      	addeq	r0, #4
 8012262:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8012266:	bf04      	itt	eq
 8012268:	009b      	lsleq	r3, r3, #2
 801226a:	3002      	addeq	r0, #2
 801226c:	2b00      	cmp	r3, #0
 801226e:	db04      	blt.n	801227a <_ZN8touchgfx4clzuEm+0x3a>
 8012270:	3001      	adds	r0, #1
 8012272:	4770      	bx	lr
 8012274:	2000      	movs	r0, #0
 8012276:	e7ea      	b.n	801224e <_ZN8touchgfx4clzuEm+0xe>
 8012278:	2020      	movs	r0, #32
 801227a:	4770      	bx	lr

0801227c <_ZN8touchgfx7muldivuEmmmRm>:
 801227c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012280:	4680      	mov	r8, r0
 8012282:	460f      	mov	r7, r1
 8012284:	4615      	mov	r5, r2
 8012286:	461e      	mov	r6, r3
 8012288:	f7ff ffda 	bl	8012240 <_ZN8touchgfx4clzuEm>
 801228c:	b998      	cbnz	r0, 80122b6 <_ZN8touchgfx7muldivuEmmmRm+0x3a>
 801228e:	4608      	mov	r0, r1
 8012290:	f7ff ffd6 	bl	8012240 <_ZN8touchgfx4clzuEm>
 8012294:	2800      	cmp	r0, #0
 8012296:	dd08      	ble.n	80122aa <_ZN8touchgfx7muldivuEmmmRm+0x2e>
 8012298:	4633      	mov	r3, r6
 801229a:	462a      	mov	r2, r5
 801229c:	4641      	mov	r1, r8
 801229e:	4638      	mov	r0, r7
 80122a0:	f7ff ffec 	bl	801227c <_ZN8touchgfx7muldivuEmmmRm>
 80122a4:	b003      	add	sp, #12
 80122a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80122aa:	f04f 33ff 	mov.w	r3, #4294967295
 80122ae:	6033      	str	r3, [r6, #0]
 80122b0:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 80122b4:	e7f6      	b.n	80122a4 <_ZN8touchgfx7muldivuEmmmRm+0x28>
 80122b6:	fa31 f900 	lsrs.w	r9, r1, r0
 80122ba:	fb01 f308 	mul.w	r3, r1, r8
 80122be:	d105      	bne.n	80122cc <_ZN8touchgfx7muldivuEmmmRm+0x50>
 80122c0:	fbb3 f0f5 	udiv	r0, r3, r5
 80122c4:	fb05 3510 	mls	r5, r5, r0, r3
 80122c8:	6035      	str	r5, [r6, #0]
 80122ca:	e7eb      	b.n	80122a4 <_ZN8touchgfx7muldivuEmmmRm+0x28>
 80122cc:	2301      	movs	r3, #1
 80122ce:	fa08 fb00 	lsl.w	fp, r8, r0
 80122d2:	fa03 f000 	lsl.w	r0, r3, r0
 80122d6:	3801      	subs	r0, #1
 80122d8:	462a      	mov	r2, r5
 80122da:	4633      	mov	r3, r6
 80122dc:	4641      	mov	r1, r8
 80122de:	4038      	ands	r0, r7
 80122e0:	f7ff ffcc 	bl	801227c <_ZN8touchgfx7muldivuEmmmRm>
 80122e4:	fbbb faf5 	udiv	sl, fp, r5
 80122e8:	462a      	mov	r2, r5
 80122ea:	4607      	mov	r7, r0
 80122ec:	ab01      	add	r3, sp, #4
 80122ee:	fb05 b11a 	mls	r1, r5, sl, fp
 80122f2:	4648      	mov	r0, r9
 80122f4:	f7ff ffc2 	bl	801227c <_ZN8touchgfx7muldivuEmmmRm>
 80122f8:	9b01      	ldr	r3, [sp, #4]
 80122fa:	6832      	ldr	r2, [r6, #0]
 80122fc:	fb09 f40a 	mul.w	r4, r9, sl
 8012300:	441a      	add	r2, r3
 8012302:	fbb2 f3f5 	udiv	r3, r2, r5
 8012306:	441c      	add	r4, r3
 8012308:	443c      	add	r4, r7
 801230a:	4420      	add	r0, r4
 801230c:	fb05 2513 	mls	r5, r5, r3, r2
 8012310:	e7da      	b.n	80122c8 <_ZN8touchgfx7muldivuEmmmRm+0x4c>

08012312 <_ZN8touchgfx6muldivElllRl>:
 8012312:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8012314:	2800      	cmp	r0, #0
 8012316:	bfba      	itte	lt
 8012318:	4240      	neglt	r0, r0
 801231a:	f04f 34ff 	movlt.w	r4, #4294967295
 801231e:	2401      	movge	r4, #1
 8012320:	2900      	cmp	r1, #0
 8012322:	bfbc      	itt	lt
 8012324:	4249      	neglt	r1, r1
 8012326:	4264      	neglt	r4, r4
 8012328:	2a00      	cmp	r2, #0
 801232a:	bfb6      	itet	lt
 801232c:	4265      	neglt	r5, r4
 801232e:	4625      	movge	r5, r4
 8012330:	4252      	neglt	r2, r2
 8012332:	4288      	cmp	r0, r1
 8012334:	461e      	mov	r6, r3
 8012336:	bfc2      	ittt	gt
 8012338:	4603      	movgt	r3, r0
 801233a:	4608      	movgt	r0, r1
 801233c:	4619      	movgt	r1, r3
 801233e:	ab01      	add	r3, sp, #4
 8012340:	f7ff ff9c 	bl	801227c <_ZN8touchgfx7muldivuEmmmRm>
 8012344:	9b01      	ldr	r3, [sp, #4]
 8012346:	4368      	muls	r0, r5
 8012348:	435c      	muls	r4, r3
 801234a:	6034      	str	r4, [r6, #0]
 801234c:	b002      	add	sp, #8
 801234e:	bd70      	pop	{r4, r5, r6, pc}

08012350 <_ZN8touchgfx6muldivElll>:
 8012350:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8012352:	4606      	mov	r6, r0
 8012354:	ab01      	add	r3, sp, #4
 8012356:	460d      	mov	r5, r1
 8012358:	4614      	mov	r4, r2
 801235a:	f7ff ffda 	bl	8012312 <_ZN8touchgfx6muldivElllRl>
 801235e:	2e00      	cmp	r6, #0
 8012360:	db20      	blt.n	80123a4 <_ZN8touchgfx6muldivElll+0x54>
 8012362:	bf14      	ite	ne
 8012364:	2301      	movne	r3, #1
 8012366:	2300      	moveq	r3, #0
 8012368:	2d00      	cmp	r5, #0
 801236a:	db1e      	blt.n	80123aa <_ZN8touchgfx6muldivElll+0x5a>
 801236c:	bf14      	ite	ne
 801236e:	2201      	movne	r2, #1
 8012370:	2200      	moveq	r2, #0
 8012372:	2c00      	cmp	r4, #0
 8012374:	fb03 f202 	mul.w	r2, r3, r2
 8012378:	db1a      	blt.n	80123b0 <_ZN8touchgfx6muldivElll+0x60>
 801237a:	bf14      	ite	ne
 801237c:	2301      	movne	r3, #1
 801237e:	2300      	moveq	r3, #0
 8012380:	4353      	muls	r3, r2
 8012382:	2b01      	cmp	r3, #1
 8012384:	d117      	bne.n	80123b6 <_ZN8touchgfx6muldivElll+0x66>
 8012386:	9b01      	ldr	r3, [sp, #4]
 8012388:	2c00      	cmp	r4, #0
 801238a:	bfb8      	it	lt
 801238c:	4264      	neglt	r4, r4
 801238e:	2b00      	cmp	r3, #0
 8012390:	f104 0401 	add.w	r4, r4, #1
 8012394:	bfb8      	it	lt
 8012396:	425b      	neglt	r3, r3
 8012398:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 801239c:	db00      	blt.n	80123a0 <_ZN8touchgfx6muldivElll+0x50>
 801239e:	3001      	adds	r0, #1
 80123a0:	b002      	add	sp, #8
 80123a2:	bd70      	pop	{r4, r5, r6, pc}
 80123a4:	f04f 33ff 	mov.w	r3, #4294967295
 80123a8:	e7de      	b.n	8012368 <_ZN8touchgfx6muldivElll+0x18>
 80123aa:	f04f 32ff 	mov.w	r2, #4294967295
 80123ae:	e7e0      	b.n	8012372 <_ZN8touchgfx6muldivElll+0x22>
 80123b0:	f04f 33ff 	mov.w	r3, #4294967295
 80123b4:	e7e4      	b.n	8012380 <_ZN8touchgfx6muldivElll+0x30>
 80123b6:	3301      	adds	r3, #1
 80123b8:	d1f2      	bne.n	80123a0 <_ZN8touchgfx6muldivElll+0x50>
 80123ba:	9b01      	ldr	r3, [sp, #4]
 80123bc:	2c00      	cmp	r4, #0
 80123be:	bfb8      	it	lt
 80123c0:	4264      	neglt	r4, r4
 80123c2:	2b00      	cmp	r3, #0
 80123c4:	bfb8      	it	lt
 80123c6:	425b      	neglt	r3, r3
 80123c8:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 80123cc:	bfc8      	it	gt
 80123ce:	f100 30ff 	addgt.w	r0, r0, #4294967295
 80123d2:	e7e5      	b.n	80123a0 <_ZN8touchgfx6muldivElll+0x50>

080123d4 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 80123d4:	2000      	movs	r0, #0
 80123d6:	4770      	bx	lr

080123d8 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 80123d8:	2001      	movs	r0, #1
 80123da:	4770      	bx	lr

080123dc <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 80123dc:	2002      	movs	r0, #2
 80123de:	4770      	bx	lr

080123e0 <_ZN8touchgfx6ScreenD1Ev>:
 80123e0:	4770      	bx	lr

080123e2 <_ZN8touchgfx12GestureEventD1Ev>:
 80123e2:	4770      	bx	lr

080123e4 <_ZN8touchgfx9DragEventD1Ev>:
 80123e4:	4770      	bx	lr

080123e6 <_ZN8touchgfx10ClickEventD1Ev>:
 80123e6:	4770      	bx	lr

080123e8 <_ZN8touchgfx10ClickEventD0Ev>:
 80123e8:	b510      	push	{r4, lr}
 80123ea:	210c      	movs	r1, #12
 80123ec:	4604      	mov	r4, r0
 80123ee:	f00e f973 	bl	80206d8 <_ZdlPvj>
 80123f2:	4620      	mov	r0, r4
 80123f4:	bd10      	pop	{r4, pc}

080123f6 <_ZN8touchgfx9DragEventD0Ev>:
 80123f6:	b510      	push	{r4, lr}
 80123f8:	2110      	movs	r1, #16
 80123fa:	4604      	mov	r4, r0
 80123fc:	f00e f96c 	bl	80206d8 <_ZdlPvj>
 8012400:	4620      	mov	r0, r4
 8012402:	bd10      	pop	{r4, pc}

08012404 <_ZN8touchgfx12GestureEventD0Ev>:
 8012404:	b510      	push	{r4, lr}
 8012406:	210c      	movs	r1, #12
 8012408:	4604      	mov	r4, r0
 801240a:	f00e f965 	bl	80206d8 <_ZdlPvj>
 801240e:	4620      	mov	r0, r4
 8012410:	bd10      	pop	{r4, pc}

08012412 <_ZN8touchgfx6ScreenD0Ev>:
 8012412:	b510      	push	{r4, lr}
 8012414:	213c      	movs	r1, #60	; 0x3c
 8012416:	4604      	mov	r4, r0
 8012418:	f00e f95e 	bl	80206d8 <_ZdlPvj>
 801241c:	4620      	mov	r0, r4
 801241e:	bd10      	pop	{r4, pc}

08012420 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 8012420:	b530      	push	{r4, r5, lr}
 8012422:	460d      	mov	r5, r1
 8012424:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8012426:	b087      	sub	sp, #28
 8012428:	4604      	mov	r4, r0
 801242a:	b301      	cbz	r1, 801246e <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 801242c:	a801      	add	r0, sp, #4
 801242e:	f7ff fe69 	bl	8012104 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012432:	892a      	ldrh	r2, [r5, #8]
 8012434:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8012438:	7928      	ldrb	r0, [r5, #4]
 801243a:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 801243e:	f88d 0010 	strb.w	r0, [sp, #16]
 8012442:	1ad2      	subs	r2, r2, r3
 8012444:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8012446:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8012448:	f8ad 1012 	strh.w	r1, [sp, #18]
 801244c:	441a      	add	r2, r3
 801244e:	896b      	ldrh	r3, [r5, #10]
 8012450:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 8012454:	f8ad 2014 	strh.w	r2, [sp, #20]
 8012458:	1b5b      	subs	r3, r3, r5
 801245a:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 801245c:	442b      	add	r3, r5
 801245e:	4d05      	ldr	r5, [pc, #20]	; (8012474 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 8012460:	9503      	str	r5, [sp, #12]
 8012462:	f8ad 3016 	strh.w	r3, [sp, #22]
 8012466:	6803      	ldr	r3, [r0, #0]
 8012468:	a903      	add	r1, sp, #12
 801246a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801246c:	4798      	blx	r3
 801246e:	b007      	add	sp, #28
 8012470:	bd30      	pop	{r4, r5, pc}
 8012472:	bf00      	nop
 8012474:	080243c4 	.word	0x080243c4

08012478 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8012478:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801247c:	6b03      	ldr	r3, [r0, #48]	; 0x30
 801247e:	b08a      	sub	sp, #40	; 0x28
 8012480:	4604      	mov	r4, r0
 8012482:	460d      	mov	r5, r1
 8012484:	b113      	cbz	r3, 801248c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 8012486:	790b      	ldrb	r3, [r1, #4]
 8012488:	2b00      	cmp	r3, #0
 801248a:	d044      	beq.n	8012516 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801248c:	f104 0804 	add.w	r8, r4, #4
 8012490:	4641      	mov	r1, r8
 8012492:	a803      	add	r0, sp, #12
 8012494:	f7ff fe36 	bl	8012104 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012498:	792b      	ldrb	r3, [r5, #4]
 801249a:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801249e:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 80124a2:	b983      	cbnz	r3, 80124c6 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 80124a4:	892a      	ldrh	r2, [r5, #8]
 80124a6:	88e9      	ldrh	r1, [r5, #6]
 80124a8:	f104 0336 	add.w	r3, r4, #54	; 0x36
 80124ac:	1b92      	subs	r2, r2, r6
 80124ae:	1bc9      	subs	r1, r1, r7
 80124b0:	9301      	str	r3, [sp, #4]
 80124b2:	f104 0334 	add.w	r3, r4, #52	; 0x34
 80124b6:	9300      	str	r3, [sp, #0]
 80124b8:	b212      	sxth	r2, r2
 80124ba:	f104 0330 	add.w	r3, r4, #48	; 0x30
 80124be:	b209      	sxth	r1, r1
 80124c0:	4640      	mov	r0, r8
 80124c2:	f7f8 fb77 	bl	800abb4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 80124c6:	6b21      	ldr	r1, [r4, #48]	; 0x30
 80124c8:	b329      	cbz	r1, 8012516 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80124ca:	a805      	add	r0, sp, #20
 80124cc:	f7ff fe1a 	bl	8012104 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80124d0:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 80124d4:	792b      	ldrb	r3, [r5, #4]
 80124d6:	6b20      	ldr	r0, [r4, #48]	; 0x30
 80124d8:	f88d 3020 	strb.w	r3, [sp, #32]
 80124dc:	1abf      	subs	r7, r7, r2
 80124de:	88ea      	ldrh	r2, [r5, #6]
 80124e0:	4417      	add	r7, r2
 80124e2:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 80124e4:	4417      	add	r7, r2
 80124e6:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 80124ea:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 80124ee:	1ab6      	subs	r6, r6, r2
 80124f0:	892a      	ldrh	r2, [r5, #8]
 80124f2:	4416      	add	r6, r2
 80124f4:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80124f6:	4416      	add	r6, r2
 80124f8:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 80124fc:	4a07      	ldr	r2, [pc, #28]	; (801251c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 80124fe:	9207      	str	r2, [sp, #28]
 8012500:	2600      	movs	r6, #0
 8012502:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 8012506:	6803      	ldr	r3, [r0, #0]
 8012508:	a907      	add	r1, sp, #28
 801250a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801250c:	4798      	blx	r3
 801250e:	792b      	ldrb	r3, [r5, #4]
 8012510:	b10b      	cbz	r3, 8012516 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8012512:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 8012516:	b00a      	add	sp, #40	; 0x28
 8012518:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801251c:	0802439c 	.word	0x0802439c

08012520 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 8012520:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012524:	460c      	mov	r4, r1
 8012526:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8012528:	b088      	sub	sp, #32
 801252a:	4605      	mov	r5, r0
 801252c:	2900      	cmp	r1, #0
 801252e:	d06d      	beq.n	801260c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 8012530:	4668      	mov	r0, sp
 8012532:	f7ff fde7 	bl	8012104 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012536:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 8012538:	88e3      	ldrh	r3, [r4, #6]
 801253a:	f9bd 8000 	ldrsh.w	r8, [sp]
 801253e:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 8012542:	440b      	add	r3, r1
 8012544:	b21b      	sxth	r3, r3
 8012546:	4543      	cmp	r3, r8
 8012548:	db31      	blt.n	80125ae <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801254a:	f8bd c004 	ldrh.w	ip, [sp, #4]
 801254e:	44c4      	add	ip, r8
 8012550:	fa0f fc8c 	sxth.w	ip, ip
 8012554:	4563      	cmp	r3, ip
 8012556:	da2a      	bge.n	80125ae <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8012558:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 801255a:	8926      	ldrh	r6, [r4, #8]
 801255c:	4416      	add	r6, r2
 801255e:	b236      	sxth	r6, r6
 8012560:	42be      	cmp	r6, r7
 8012562:	db24      	blt.n	80125ae <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8012564:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8012568:	4438      	add	r0, r7
 801256a:	b200      	sxth	r0, r0
 801256c:	4286      	cmp	r6, r0
 801256e:	da1e      	bge.n	80125ae <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8012570:	8963      	ldrh	r3, [r4, #10]
 8012572:	4419      	add	r1, r3
 8012574:	b209      	sxth	r1, r1
 8012576:	4541      	cmp	r1, r8
 8012578:	db08      	blt.n	801258c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801257a:	4561      	cmp	r1, ip
 801257c:	da06      	bge.n	801258c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801257e:	89a3      	ldrh	r3, [r4, #12]
 8012580:	441a      	add	r2, r3
 8012582:	b212      	sxth	r2, r2
 8012584:	42ba      	cmp	r2, r7
 8012586:	db01      	blt.n	801258c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8012588:	4282      	cmp	r2, r0
 801258a:	db10      	blt.n	80125ae <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801258c:	4b21      	ldr	r3, [pc, #132]	; (8012614 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 801258e:	9304      	str	r3, [sp, #16]
 8012590:	2302      	movs	r3, #2
 8012592:	f88d 3014 	strb.w	r3, [sp, #20]
 8012596:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8012598:	2300      	movs	r3, #0
 801259a:	f8ad 3016 	strh.w	r3, [sp, #22]
 801259e:	f8ad 3018 	strh.w	r3, [sp, #24]
 80125a2:	f8ad 301a 	strh.w	r3, [sp, #26]
 80125a6:	6803      	ldr	r3, [r0, #0]
 80125a8:	a904      	add	r1, sp, #16
 80125aa:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80125ac:	4798      	blx	r3
 80125ae:	1d29      	adds	r1, r5, #4
 80125b0:	a802      	add	r0, sp, #8
 80125b2:	f7ff fda7 	bl	8012104 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80125b6:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 80125ba:	88e0      	ldrh	r0, [r4, #6]
 80125bc:	7921      	ldrb	r1, [r4, #4]
 80125be:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 80125c2:	8922      	ldrh	r2, [r4, #8]
 80125c4:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 80125c6:	f88d 1014 	strb.w	r1, [sp, #20]
 80125ca:	eba3 0808 	sub.w	r8, r3, r8
 80125ce:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80125d2:	1bdf      	subs	r7, r3, r7
 80125d4:	b2bb      	uxth	r3, r7
 80125d6:	fa1f f888 	uxth.w	r8, r8
 80125da:	8967      	ldrh	r7, [r4, #10]
 80125dc:	89a4      	ldrh	r4, [r4, #12]
 80125de:	4440      	add	r0, r8
 80125e0:	4460      	add	r0, ip
 80125e2:	441a      	add	r2, r3
 80125e4:	44b8      	add	r8, r7
 80125e6:	4423      	add	r3, r4
 80125e8:	f8ad 0016 	strh.w	r0, [sp, #22]
 80125ec:	4433      	add	r3, r6
 80125ee:	4432      	add	r2, r6
 80125f0:	44e0      	add	r8, ip
 80125f2:	4c09      	ldr	r4, [pc, #36]	; (8012618 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 80125f4:	6b28      	ldr	r0, [r5, #48]	; 0x30
 80125f6:	9404      	str	r4, [sp, #16]
 80125f8:	f8ad 2018 	strh.w	r2, [sp, #24]
 80125fc:	f8ad 801a 	strh.w	r8, [sp, #26]
 8012600:	f8ad 301c 	strh.w	r3, [sp, #28]
 8012604:	6803      	ldr	r3, [r0, #0]
 8012606:	a904      	add	r1, sp, #16
 8012608:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801260a:	4798      	blx	r3
 801260c:	b008      	add	sp, #32
 801260e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012612:	bf00      	nop
 8012614:	0802439c 	.word	0x0802439c
 8012618:	080243b0 	.word	0x080243b0

0801261c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 801261c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801261e:	4604      	mov	r4, r0
 8012620:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 8012624:	3201      	adds	r2, #1
 8012626:	d112      	bne.n	801264e <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 8012628:	6803      	ldr	r3, [r0, #0]
 801262a:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 801262e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8012632:	f8ad 1004 	strh.w	r1, [sp, #4]
 8012636:	2500      	movs	r5, #0
 8012638:	9500      	str	r5, [sp, #0]
 801263a:	466d      	mov	r5, sp
 801263c:	4629      	mov	r1, r5
 801263e:	f8ad 2006 	strh.w	r2, [sp, #6]
 8012642:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012644:	4798      	blx	r3
 8012646:	e895 0003 	ldmia.w	r5, {r0, r1}
 801264a:	e884 0003 	stmia.w	r4, {r0, r1}
 801264e:	4620      	mov	r0, r4
 8012650:	b003      	add	sp, #12
 8012652:	bd30      	pop	{r4, r5, pc}

08012654 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8012654:	b513      	push	{r0, r1, r4, lr}
 8012656:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 801265a:	3301      	adds	r3, #1
 801265c:	4604      	mov	r4, r0
 801265e:	d109      	bne.n	8012674 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 8012660:	4601      	mov	r1, r0
 8012662:	4668      	mov	r0, sp
 8012664:	f7ff fd4e 	bl	8012104 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012668:	f8bd 3000 	ldrh.w	r3, [sp]
 801266c:	8423      	strh	r3, [r4, #32]
 801266e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8012672:	8463      	strh	r3, [r4, #34]	; 0x22
 8012674:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8012678:	b002      	add	sp, #8
 801267a:	bd10      	pop	{r4, pc}

0801267c <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 801267c:	b513      	push	{r0, r1, r4, lr}
 801267e:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 8012682:	3301      	adds	r3, #1
 8012684:	4604      	mov	r4, r0
 8012686:	d109      	bne.n	801269c <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8012688:	4601      	mov	r1, r0
 801268a:	4668      	mov	r0, sp
 801268c:	f7ff fd3a 	bl	8012104 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012690:	f8bd 3000 	ldrh.w	r3, [sp]
 8012694:	8423      	strh	r3, [r4, #32]
 8012696:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801269a:	8463      	strh	r3, [r4, #34]	; 0x22
 801269c:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 80126a0:	b002      	add	sp, #8
 80126a2:	bd10      	pop	{r4, pc}

080126a4 <_ZN8touchgfx6ScreenC1Ev>:
 80126a4:	b570      	push	{r4, r5, r6, lr}
 80126a6:	4605      	mov	r5, r0
 80126a8:	4b16      	ldr	r3, [pc, #88]	; (8012704 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 80126aa:	f845 3b04 	str.w	r3, [r5], #4
 80126ae:	2300      	movs	r3, #0
 80126b0:	8103      	strh	r3, [r0, #8]
 80126b2:	8143      	strh	r3, [r0, #10]
 80126b4:	8183      	strh	r3, [r0, #12]
 80126b6:	81c3      	strh	r3, [r0, #14]
 80126b8:	8203      	strh	r3, [r0, #16]
 80126ba:	8243      	strh	r3, [r0, #18]
 80126bc:	8283      	strh	r3, [r0, #20]
 80126be:	82c3      	strh	r3, [r0, #22]
 80126c0:	e9c0 3306 	strd	r3, r3, [r0, #24]
 80126c4:	6203      	str	r3, [r0, #32]
 80126c6:	8483      	strh	r3, [r0, #36]	; 0x24
 80126c8:	84c3      	strh	r3, [r0, #38]	; 0x26
 80126ca:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 80126ce:	4a0e      	ldr	r2, [pc, #56]	; (8012708 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 80126d0:	6343      	str	r3, [r0, #52]	; 0x34
 80126d2:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 80126d6:	4b0d      	ldr	r3, [pc, #52]	; (801270c <_ZN8touchgfx6ScreenC1Ev+0x68>)
 80126d8:	6042      	str	r2, [r0, #4]
 80126da:	f9b3 6000 	ldrsh.w	r6, [r3]
 80126de:	6b93      	ldr	r3, [r2, #56]	; 0x38
 80126e0:	4a0b      	ldr	r2, [pc, #44]	; (8012710 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 80126e2:	4604      	mov	r4, r0
 80126e4:	2101      	movs	r1, #1
 80126e6:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 80126ea:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 80126ee:	f9b2 1000 	ldrsh.w	r1, [r2]
 80126f2:	4628      	mov	r0, r5
 80126f4:	4798      	blx	r3
 80126f6:	6863      	ldr	r3, [r4, #4]
 80126f8:	4628      	mov	r0, r5
 80126fa:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80126fc:	4631      	mov	r1, r6
 80126fe:	4798      	blx	r3
 8012700:	4620      	mov	r0, r4
 8012702:	bd70      	pop	{r4, r5, r6, pc}
 8012704:	080243d8 	.word	0x080243d8
 8012708:	0802378c 	.word	0x0802378c
 801270c:	200155aa 	.word	0x200155aa
 8012710:	200155a8 	.word	0x200155a8

08012714 <_ZN8touchgfx6Screen4drawEv>:
 8012714:	b507      	push	{r0, r1, r2, lr}
 8012716:	4b09      	ldr	r3, [pc, #36]	; (801273c <_ZN8touchgfx6Screen4drawEv+0x28>)
 8012718:	f9b3 2000 	ldrsh.w	r2, [r3]
 801271c:	4b08      	ldr	r3, [pc, #32]	; (8012740 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 801271e:	f8ad 2004 	strh.w	r2, [sp, #4]
 8012722:	f9b3 3000 	ldrsh.w	r3, [r3]
 8012726:	f8ad 3006 	strh.w	r3, [sp, #6]
 801272a:	6803      	ldr	r3, [r0, #0]
 801272c:	2100      	movs	r1, #0
 801272e:	9100      	str	r1, [sp, #0]
 8012730:	689b      	ldr	r3, [r3, #8]
 8012732:	4669      	mov	r1, sp
 8012734:	4798      	blx	r3
 8012736:	b003      	add	sp, #12
 8012738:	f85d fb04 	ldr.w	pc, [sp], #4
 801273c:	200155a8 	.word	0x200155a8
 8012740:	200155aa 	.word	0x200155aa

08012744 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 8012744:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012748:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 801274c:	2b00      	cmp	r3, #0
 801274e:	b089      	sub	sp, #36	; 0x24
 8012750:	4680      	mov	r8, r0
 8012752:	460c      	mov	r4, r1
 8012754:	4615      	mov	r5, r2
 8012756:	dd0e      	ble.n	8012776 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8012758:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 801275c:	2b00      	cmp	r3, #0
 801275e:	dd0a      	ble.n	8012776 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8012760:	4628      	mov	r0, r5
 8012762:	f7ff ff5b 	bl	801261c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8012766:	4621      	mov	r1, r4
 8012768:	f7fe fc01 	bl	8010f6e <_ZNK8touchgfx4Rect9intersectERKS0_>
 801276c:	69eb      	ldr	r3, [r5, #28]
 801276e:	b928      	cbnz	r0, 801277c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 8012770:	461d      	mov	r5, r3
 8012772:	2b00      	cmp	r3, #0
 8012774:	d1f4      	bne.n	8012760 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 8012776:	b009      	add	sp, #36	; 0x24
 8012778:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801277c:	ae04      	add	r6, sp, #16
 801277e:	2b00      	cmp	r3, #0
 8012780:	f000 80b5 	beq.w	80128ee <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8012784:	682b      	ldr	r3, [r5, #0]
 8012786:	4629      	mov	r1, r5
 8012788:	68db      	ldr	r3, [r3, #12]
 801278a:	a802      	add	r0, sp, #8
 801278c:	4798      	blx	r3
 801278e:	4628      	mov	r0, r5
 8012790:	f7ff ff60 	bl	8012654 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8012794:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8012798:	4407      	add	r7, r0
 801279a:	4628      	mov	r0, r5
 801279c:	f7ff ff6e 	bl	801267c <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 80127a0:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80127a4:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 80127a8:	f8ad 2014 	strh.w	r2, [sp, #20]
 80127ac:	4418      	add	r0, r3
 80127ae:	4621      	mov	r1, r4
 80127b0:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 80127b4:	f8ad 0012 	strh.w	r0, [sp, #18]
 80127b8:	b23f      	sxth	r7, r7
 80127ba:	4630      	mov	r0, r6
 80127bc:	f8ad 3016 	strh.w	r3, [sp, #22]
 80127c0:	f8ad 7010 	strh.w	r7, [sp, #16]
 80127c4:	f7f8 fada 	bl	800ad7c <_ZN8touchgfx4RectaNERKS0_>
 80127c8:	4628      	mov	r0, r5
 80127ca:	f7ff ff27 	bl	801261c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80127ce:	4602      	mov	r2, r0
 80127d0:	e896 0003 	ldmia.w	r6, {r0, r1}
 80127d4:	ab06      	add	r3, sp, #24
 80127d6:	e883 0003 	stmia.w	r3, {r0, r1}
 80127da:	4611      	mov	r1, r2
 80127dc:	4618      	mov	r0, r3
 80127de:	f7f8 facd 	bl	800ad7c <_ZN8touchgfx4RectaNERKS0_>
 80127e2:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80127e6:	f9b4 1000 	ldrsh.w	r1, [r4]
 80127ea:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 80127ee:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 80127f2:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 80127f6:	4299      	cmp	r1, r3
 80127f8:	d10b      	bne.n	8012812 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80127fa:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80127fe:	4552      	cmp	r2, sl
 8012800:	d107      	bne.n	8012812 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8012802:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8012806:	455a      	cmp	r2, fp
 8012808:	d103      	bne.n	8012812 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801280a:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 801280e:	454a      	cmp	r2, r9
 8012810:	d06d      	beq.n	80128ee <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8012812:	f1bb 0f00 	cmp.w	fp, #0
 8012816:	dd65      	ble.n	80128e4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8012818:	f1b9 0f00 	cmp.w	r9, #0
 801281c:	dd62      	ble.n	80128e4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 801281e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8012822:	fa1f f08a 	uxth.w	r0, sl
 8012826:	4552      	cmp	r2, sl
 8012828:	9000      	str	r0, [sp, #0]
 801282a:	da12      	bge.n	8012852 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 801282c:	9301      	str	r3, [sp, #4]
 801282e:	9b00      	ldr	r3, [sp, #0]
 8012830:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8012834:	f8ad 2012 	strh.w	r2, [sp, #18]
 8012838:	1a9a      	subs	r2, r3, r2
 801283a:	f8ad 1010 	strh.w	r1, [sp, #16]
 801283e:	f8ad 0014 	strh.w	r0, [sp, #20]
 8012842:	f8ad 2016 	strh.w	r2, [sp, #22]
 8012846:	69ea      	ldr	r2, [r5, #28]
 8012848:	4631      	mov	r1, r6
 801284a:	4640      	mov	r0, r8
 801284c:	f7ff ff7a 	bl	8012744 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8012850:	9b01      	ldr	r3, [sp, #4]
 8012852:	f9b4 2000 	ldrsh.w	r2, [r4]
 8012856:	429a      	cmp	r2, r3
 8012858:	b29f      	uxth	r7, r3
 801285a:	da0d      	bge.n	8012878 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 801285c:	f8ad 2010 	strh.w	r2, [sp, #16]
 8012860:	1aba      	subs	r2, r7, r2
 8012862:	f8ad a012 	strh.w	sl, [sp, #18]
 8012866:	f8ad 2014 	strh.w	r2, [sp, #20]
 801286a:	f8ad 9016 	strh.w	r9, [sp, #22]
 801286e:	69ea      	ldr	r2, [r5, #28]
 8012870:	4631      	mov	r1, r6
 8012872:	4640      	mov	r0, r8
 8012874:	f7ff ff66 	bl	8012744 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8012878:	8822      	ldrh	r2, [r4, #0]
 801287a:	88a3      	ldrh	r3, [r4, #4]
 801287c:	445f      	add	r7, fp
 801287e:	4413      	add	r3, r2
 8012880:	b29b      	uxth	r3, r3
 8012882:	b2bf      	uxth	r7, r7
 8012884:	b23a      	sxth	r2, r7
 8012886:	b219      	sxth	r1, r3
 8012888:	4291      	cmp	r1, r2
 801288a:	dd0d      	ble.n	80128a8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 801288c:	1bdb      	subs	r3, r3, r7
 801288e:	f8ad 2010 	strh.w	r2, [sp, #16]
 8012892:	f8ad a012 	strh.w	sl, [sp, #18]
 8012896:	f8ad 3014 	strh.w	r3, [sp, #20]
 801289a:	f8ad 9016 	strh.w	r9, [sp, #22]
 801289e:	69ea      	ldr	r2, [r5, #28]
 80128a0:	4631      	mov	r1, r6
 80128a2:	4640      	mov	r0, r8
 80128a4:	f7ff ff4e 	bl	8012744 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80128a8:	88e2      	ldrh	r2, [r4, #6]
 80128aa:	8863      	ldrh	r3, [r4, #2]
 80128ac:	4413      	add	r3, r2
 80128ae:	9a00      	ldr	r2, [sp, #0]
 80128b0:	444a      	add	r2, r9
 80128b2:	b29b      	uxth	r3, r3
 80128b4:	fa1f f982 	uxth.w	r9, r2
 80128b8:	fa0f f289 	sxth.w	r2, r9
 80128bc:	b219      	sxth	r1, r3
 80128be:	428a      	cmp	r2, r1
 80128c0:	da15      	bge.n	80128ee <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80128c2:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80128c6:	f9b4 0000 	ldrsh.w	r0, [r4]
 80128ca:	f8ad 1014 	strh.w	r1, [sp, #20]
 80128ce:	eba3 0309 	sub.w	r3, r3, r9
 80128d2:	f8ad 0010 	strh.w	r0, [sp, #16]
 80128d6:	f8ad 2012 	strh.w	r2, [sp, #18]
 80128da:	f8ad 3016 	strh.w	r3, [sp, #22]
 80128de:	69ea      	ldr	r2, [r5, #28]
 80128e0:	4631      	mov	r1, r6
 80128e2:	e001      	b.n	80128e8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 80128e4:	69ea      	ldr	r2, [r5, #28]
 80128e6:	4621      	mov	r1, r4
 80128e8:	4640      	mov	r0, r8
 80128ea:	f7ff ff2b 	bl	8012744 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80128ee:	4628      	mov	r0, r5
 80128f0:	f7ff fe94 	bl	801261c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80128f4:	6861      	ldr	r1, [r4, #4]
 80128f6:	4602      	mov	r2, r0
 80128f8:	6820      	ldr	r0, [r4, #0]
 80128fa:	4633      	mov	r3, r6
 80128fc:	c303      	stmia	r3!, {r0, r1}
 80128fe:	4611      	mov	r1, r2
 8012900:	4630      	mov	r0, r6
 8012902:	f7f8 fa3b 	bl	800ad7c <_ZN8touchgfx4RectaNERKS0_>
 8012906:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 801290a:	2b00      	cmp	r3, #0
 801290c:	f77f af33 	ble.w	8012776 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8012910:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8012914:	2b00      	cmp	r3, #0
 8012916:	f77f af2e 	ble.w	8012776 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801291a:	4628      	mov	r0, r5
 801291c:	f7ff fe9a 	bl	8012654 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8012920:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8012924:	1a18      	subs	r0, r3, r0
 8012926:	f8ad 0010 	strh.w	r0, [sp, #16]
 801292a:	4628      	mov	r0, r5
 801292c:	f7ff fea6 	bl	801267c <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8012930:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8012934:	1a18      	subs	r0, r3, r0
 8012936:	f8ad 0012 	strh.w	r0, [sp, #18]
 801293a:	682b      	ldr	r3, [r5, #0]
 801293c:	4631      	mov	r1, r6
 801293e:	689b      	ldr	r3, [r3, #8]
 8012940:	4628      	mov	r0, r5
 8012942:	4798      	blx	r3
 8012944:	e717      	b.n	8012776 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

08012946 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 8012946:	b570      	push	{r4, r5, r6, lr}
 8012948:	460c      	mov	r4, r1
 801294a:	b086      	sub	sp, #24
 801294c:	1d06      	adds	r6, r0, #4
 801294e:	2300      	movs	r3, #0
 8012950:	4631      	mov	r1, r6
 8012952:	4605      	mov	r5, r0
 8012954:	a802      	add	r0, sp, #8
 8012956:	9301      	str	r3, [sp, #4]
 8012958:	f7ff fbd4 	bl	8012104 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801295c:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8012960:	8822      	ldrh	r2, [r4, #0]
 8012962:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8012966:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801296a:	f8ad 0014 	strh.w	r0, [sp, #20]
 801296e:	1ad2      	subs	r2, r2, r3
 8012970:	8863      	ldrh	r3, [r4, #2]
 8012972:	f8ad 2010 	strh.w	r2, [sp, #16]
 8012976:	1a5b      	subs	r3, r3, r1
 8012978:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 801297c:	f8ad 1016 	strh.w	r1, [sp, #22]
 8012980:	aa01      	add	r2, sp, #4
 8012982:	a904      	add	r1, sp, #16
 8012984:	4630      	mov	r0, r6
 8012986:	f8ad 3012 	strh.w	r3, [sp, #18]
 801298a:	f7f8 facf 	bl	800af2c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 801298e:	9a01      	ldr	r2, [sp, #4]
 8012990:	b11a      	cbz	r2, 801299a <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 8012992:	4621      	mov	r1, r4
 8012994:	4628      	mov	r0, r5
 8012996:	f7ff fed5 	bl	8012744 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801299a:	b006      	add	sp, #24
 801299c:	bd70      	pop	{r4, r5, r6, pc}

0801299e <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 801299e:	b530      	push	{r4, r5, lr}
 80129a0:	4602      	mov	r2, r0
 80129a2:	4604      	mov	r4, r0
 80129a4:	f852 0f08 	ldr.w	r0, [r2, #8]!
 80129a8:	b085      	sub	sp, #20
 80129aa:	460d      	mov	r5, r1
 80129ac:	6851      	ldr	r1, [r2, #4]
 80129ae:	466b      	mov	r3, sp
 80129b0:	c303      	stmia	r3!, {r0, r1}
 80129b2:	4629      	mov	r1, r5
 80129b4:	4668      	mov	r0, sp
 80129b6:	f7f8 f9e1 	bl	800ad7c <_ZN8touchgfx4RectaNERKS0_>
 80129ba:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80129be:	b12b      	cbz	r3, 80129cc <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 80129c0:	4669      	mov	r1, sp
 80129c2:	4620      	mov	r0, r4
 80129c4:	f7ff ffbf 	bl	8012946 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 80129c8:	b005      	add	sp, #20
 80129ca:	bd30      	pop	{r4, r5, pc}
 80129cc:	3404      	adds	r4, #4
 80129ce:	4621      	mov	r1, r4
 80129d0:	a802      	add	r0, sp, #8
 80129d2:	f7ff fb97 	bl	8012104 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80129d6:	f8bd 3000 	ldrh.w	r3, [sp]
 80129da:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 80129de:	1a9b      	subs	r3, r3, r2
 80129e0:	f8ad 3000 	strh.w	r3, [sp]
 80129e4:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80129e8:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80129ec:	4669      	mov	r1, sp
 80129ee:	1a9b      	subs	r3, r3, r2
 80129f0:	4620      	mov	r0, r4
 80129f2:	f8ad 3002 	strh.w	r3, [sp, #2]
 80129f6:	f7f8 fa60 	bl	800aeba <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 80129fa:	e7e5      	b.n	80129c8 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

080129fc <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 80129fc:	680a      	ldr	r2, [r1, #0]
 80129fe:	460b      	mov	r3, r1
 8012a00:	6992      	ldr	r2, [r2, #24]
 8012a02:	1d01      	adds	r1, r0, #4
 8012a04:	4618      	mov	r0, r3
 8012a06:	4710      	bx	r2

08012a08 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 8012a08:	4298      	cmp	r0, r3
 8012a0a:	d200      	bcs.n	8012a0e <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 8012a0c:	b913      	cbnz	r3, 8012a14 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 8012a0e:	440a      	add	r2, r1
 8012a10:	b210      	sxth	r0, r2
 8012a12:	4770      	bx	lr
 8012a14:	ee07 0a90 	vmov	s15, r0
 8012a18:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8012a1c:	ee07 3a90 	vmov	s15, r3
 8012a20:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012a24:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8012a28:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8012a2c:	ee37 7a66 	vsub.f32	s14, s14, s13
 8012a30:	ee07 2a90 	vmov	s15, r2
 8012a34:	ee67 5a07 	vmul.f32	s11, s14, s14
 8012a38:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 8012a3c:	eee5 6a87 	vfma.f32	s13, s11, s14
 8012a40:	ee07 1a90 	vmov	s15, r1
 8012a44:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012a48:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8012a4c:	eee6 7a26 	vfma.f32	s15, s12, s13
 8012a50:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8012a54:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012a58:	bfcc      	ite	gt
 8012a5a:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8012a5e:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 8012a62:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8012a66:	ee17 3a90 	vmov	r3, s15
 8012a6a:	b218      	sxth	r0, r3
 8012a6c:	4770      	bx	lr

08012a6e <_ZN8touchgfx12TextProviderC1Ev>:
 8012a6e:	b538      	push	{r3, r4, r5, lr}
 8012a70:	2500      	movs	r5, #0
 8012a72:	2302      	movs	r3, #2
 8012a74:	4604      	mov	r4, r0
 8012a76:	e9c0 5500 	strd	r5, r5, [r0]
 8012a7a:	7403      	strb	r3, [r0, #16]
 8012a7c:	6145      	str	r5, [r0, #20]
 8012a7e:	7605      	strb	r5, [r0, #24]
 8012a80:	83c5      	strh	r5, [r0, #30]
 8012a82:	8405      	strh	r5, [r0, #32]
 8012a84:	86c5      	strh	r5, [r0, #54]	; 0x36
 8012a86:	8705      	strh	r5, [r0, #56]	; 0x38
 8012a88:	87c5      	strh	r5, [r0, #62]	; 0x3e
 8012a8a:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 8012a8e:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 8012a92:	220e      	movs	r2, #14
 8012a94:	4629      	mov	r1, r5
 8012a96:	304c      	adds	r0, #76	; 0x4c
 8012a98:	f00e f858 	bl	8020b4c <memset>
 8012a9c:	2301      	movs	r3, #1
 8012a9e:	4620      	mov	r0, r4
 8012aa0:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 8012aa4:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8012aa8:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 8012aac:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 8012ab0:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 8012ab4:	f7f2 f93a 	bl	8004d2c <_ZN8touchgfx12TextProvider18initializeInternalEv>
 8012ab8:	4620      	mov	r0, r4
 8012aba:	bd38      	pop	{r3, r4, r5, pc}

08012abc <_ZN8touchgfx12TextProvider11endOfStringEv>:
 8012abc:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8012abe:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8012ac2:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 8012ac4:	fab0 f080 	clz	r0, r0
 8012ac8:	0940      	lsrs	r0, r0, #5
 8012aca:	4770      	bx	lr

08012acc <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 8012acc:	b530      	push	{r4, r5, lr}
 8012ace:	2500      	movs	r5, #0
 8012ad0:	2401      	movs	r4, #1
 8012ad2:	6843      	ldr	r3, [r0, #4]
 8012ad4:	b913      	cbnz	r3, 8012adc <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 8012ad6:	6803      	ldr	r3, [r0, #0]
 8012ad8:	b313      	cbz	r3, 8012b20 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8012ada:	6043      	str	r3, [r0, #4]
 8012adc:	7e03      	ldrb	r3, [r0, #24]
 8012ade:	b143      	cbz	r3, 8012af2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 8012ae0:	6943      	ldr	r3, [r0, #20]
 8012ae2:	b12b      	cbz	r3, 8012af0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8012ae4:	881a      	ldrh	r2, [r3, #0]
 8012ae6:	b11a      	cbz	r2, 8012af0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8012ae8:	1c9a      	adds	r2, r3, #2
 8012aea:	6142      	str	r2, [r0, #20]
 8012aec:	8818      	ldrh	r0, [r3, #0]
 8012aee:	bd30      	pop	{r4, r5, pc}
 8012af0:	7605      	strb	r5, [r0, #24]
 8012af2:	6843      	ldr	r3, [r0, #4]
 8012af4:	8819      	ldrh	r1, [r3, #0]
 8012af6:	b199      	cbz	r1, 8012b20 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8012af8:	1c9a      	adds	r2, r3, #2
 8012afa:	2902      	cmp	r1, #2
 8012afc:	6042      	str	r2, [r0, #4]
 8012afe:	d1f5      	bne.n	8012aec <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 8012b00:	7c03      	ldrb	r3, [r0, #16]
 8012b02:	2b01      	cmp	r3, #1
 8012b04:	d8e5      	bhi.n	8012ad2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8012b06:	1c5a      	adds	r2, r3, #1
 8012b08:	3302      	adds	r3, #2
 8012b0a:	7402      	strb	r2, [r0, #16]
 8012b0c:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8012b10:	6143      	str	r3, [r0, #20]
 8012b12:	2b00      	cmp	r3, #0
 8012b14:	d0dd      	beq.n	8012ad2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8012b16:	881b      	ldrh	r3, [r3, #0]
 8012b18:	2b00      	cmp	r3, #0
 8012b1a:	d0da      	beq.n	8012ad2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8012b1c:	7604      	strb	r4, [r0, #24]
 8012b1e:	e7d8      	b.n	8012ad2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8012b20:	2000      	movs	r0, #0
 8012b22:	e7e4      	b.n	8012aee <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

08012b24 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 8012b24:	b430      	push	{r4, r5}
 8012b26:	6001      	str	r1, [r0, #0]
 8012b28:	2100      	movs	r1, #0
 8012b2a:	6041      	str	r1, [r0, #4]
 8012b2c:	6815      	ldr	r5, [r2, #0]
 8012b2e:	6085      	str	r5, [r0, #8]
 8012b30:	6852      	ldr	r2, [r2, #4]
 8012b32:	6443      	str	r3, [r0, #68]	; 0x44
 8012b34:	9b02      	ldr	r3, [sp, #8]
 8012b36:	60c2      	str	r2, [r0, #12]
 8012b38:	7401      	strb	r1, [r0, #16]
 8012b3a:	6141      	str	r1, [r0, #20]
 8012b3c:	7601      	strb	r1, [r0, #24]
 8012b3e:	8701      	strh	r1, [r0, #56]	; 0x38
 8012b40:	8401      	strh	r1, [r0, #32]
 8012b42:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 8012b46:	6483      	str	r3, [r0, #72]	; 0x48
 8012b48:	bc30      	pop	{r4, r5}
 8012b4a:	f7f2 b8ef 	b.w	8004d2c <_ZN8touchgfx12TextProvider18initializeInternalEv>

08012b4e <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 8012b4e:	b408      	push	{r3}
 8012b50:	b510      	push	{r4, lr}
 8012b52:	b085      	sub	sp, #20
 8012b54:	ac07      	add	r4, sp, #28
 8012b56:	f854 3b04 	ldr.w	r3, [r4], #4
 8012b5a:	9300      	str	r3, [sp, #0]
 8012b5c:	4613      	mov	r3, r2
 8012b5e:	4622      	mov	r2, r4
 8012b60:	9403      	str	r4, [sp, #12]
 8012b62:	f7ff ffdf 	bl	8012b24 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8012b66:	b005      	add	sp, #20
 8012b68:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012b6c:	b001      	add	sp, #4
 8012b6e:	4770      	bx	lr

08012b70 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 8012b70:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012b72:	4605      	mov	r5, r0
 8012b74:	4608      	mov	r0, r1
 8012b76:	b1e9      	cbz	r1, 8012bb4 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 8012b78:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 8012b7c:	460b      	mov	r3, r1
 8012b7e:	f101 0708 	add.w	r7, r1, #8
 8012b82:	4622      	mov	r2, r4
 8012b84:	6818      	ldr	r0, [r3, #0]
 8012b86:	6859      	ldr	r1, [r3, #4]
 8012b88:	4626      	mov	r6, r4
 8012b8a:	c603      	stmia	r6!, {r0, r1}
 8012b8c:	3308      	adds	r3, #8
 8012b8e:	42bb      	cmp	r3, r7
 8012b90:	4634      	mov	r4, r6
 8012b92:	d1f7      	bne.n	8012b84 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 8012b94:	6818      	ldr	r0, [r3, #0]
 8012b96:	6030      	str	r0, [r6, #0]
 8012b98:	889b      	ldrh	r3, [r3, #4]
 8012b9a:	80b3      	strh	r3, [r6, #4]
 8012b9c:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 8012ba0:	015b      	lsls	r3, r3, #5
 8012ba2:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8012ba6:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 8012baa:	430b      	orrs	r3, r1
 8012bac:	425b      	negs	r3, r3
 8012bae:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 8012bb2:	4610      	mov	r0, r2
 8012bb4:	bdf0      	pop	{r4, r5, r6, r7, pc}

08012bb6 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 8012bb6:	b538      	push	{r3, r4, r5, lr}
 8012bb8:	460c      	mov	r4, r1
 8012bba:	6811      	ldr	r1, [r2, #0]
 8012bbc:	4610      	mov	r0, r2
 8012bbe:	68cd      	ldr	r5, [r1, #12]
 8012bc0:	4619      	mov	r1, r3
 8012bc2:	47a8      	blx	r5
 8012bc4:	2800      	cmp	r0, #0
 8012bc6:	bf08      	it	eq
 8012bc8:	4620      	moveq	r0, r4
 8012bca:	bd38      	pop	{r3, r4, r5, pc}

08012bcc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8012bcc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8012bce:	4604      	mov	r4, r0
 8012bd0:	4615      	mov	r5, r2
 8012bd2:	4608      	mov	r0, r1
 8012bd4:	b93a      	cbnz	r2, 8012be6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 8012bd6:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8012bda:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 8012bde:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 8012be2:	4628      	mov	r0, r5
 8012be4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8012be6:	f892 c00d 	ldrb.w	ip, [r2, #13]
 8012bea:	8893      	ldrh	r3, [r2, #4]
 8012bec:	ea4f 160c 	mov.w	r6, ip, lsl #4
 8012bf0:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8012bf4:	79ee      	ldrb	r6, [r5, #7]
 8012bf6:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 8012bfa:	4316      	orrs	r6, r2
 8012bfc:	19da      	adds	r2, r3, r7
 8012bfe:	b291      	uxth	r1, r2
 8012c00:	291d      	cmp	r1, #29
 8012c02:	b2b7      	uxth	r7, r6
 8012c04:	d87a      	bhi.n	8012cfc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 8012c06:	2201      	movs	r2, #1
 8012c08:	408a      	lsls	r2, r1
 8012c0a:	4975      	ldr	r1, [pc, #468]	; (8012de0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 8012c0c:	420a      	tst	r2, r1
 8012c0e:	ea4f 06e6 	mov.w	r6, r6, asr #3
 8012c12:	d12d      	bne.n	8012c70 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 8012c14:	f412 7f60 	tst.w	r2, #896	; 0x380
 8012c18:	d070      	beq.n	8012cfc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 8012c1a:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 8012c1e:	462b      	mov	r3, r5
 8012c20:	f105 0e08 	add.w	lr, r5, #8
 8012c24:	4615      	mov	r5, r2
 8012c26:	6818      	ldr	r0, [r3, #0]
 8012c28:	6859      	ldr	r1, [r3, #4]
 8012c2a:	4694      	mov	ip, r2
 8012c2c:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8012c30:	3308      	adds	r3, #8
 8012c32:	4573      	cmp	r3, lr
 8012c34:	4662      	mov	r2, ip
 8012c36:	d1f6      	bne.n	8012c26 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 8012c38:	6818      	ldr	r0, [r3, #0]
 8012c3a:	f8cc 0000 	str.w	r0, [ip]
 8012c3e:	889b      	ldrh	r3, [r3, #4]
 8012c40:	f8ac 3004 	strh.w	r3, [ip, #4]
 8012c44:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 8012c48:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 8012c4c:	b2b3      	uxth	r3, r6
 8012c4e:	1aca      	subs	r2, r1, r3
 8012c50:	b292      	uxth	r2, r2
 8012c52:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 8012c56:	10d2      	asrs	r2, r2, #3
 8012c58:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 8012c5c:	f002 0260 	and.w	r2, r2, #96	; 0x60
 8012c60:	4302      	orrs	r2, r0
 8012c62:	1bcf      	subs	r7, r1, r7
 8012c64:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 8012c68:	1afb      	subs	r3, r7, r3
 8012c6a:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8012c6e:	e7b8      	b.n	8012be2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8012c70:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8012c72:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8012c76:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 8012c78:	f640 6333 	movw	r3, #3635	; 0xe33
 8012c7c:	4299      	cmp	r1, r3
 8012c7e:	d110      	bne.n	8012ca2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 8012c80:	6803      	ldr	r3, [r0, #0]
 8012c82:	68db      	ldr	r3, [r3, #12]
 8012c84:	4798      	blx	r3
 8012c86:	7b41      	ldrb	r1, [r0, #13]
 8012c88:	00cb      	lsls	r3, r1, #3
 8012c8a:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8012c8e:	7a03      	ldrb	r3, [r0, #8]
 8012c90:	0648      	lsls	r0, r1, #25
 8012c92:	ea43 0302 	orr.w	r3, r3, r2
 8012c96:	bf44      	itt	mi
 8012c98:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8012c9c:	b21b      	sxthmi	r3, r3
 8012c9e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8012ca2:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 8012ca6:	443b      	add	r3, r7
 8012ca8:	4433      	add	r3, r6
 8012caa:	b29b      	uxth	r3, r3
 8012cac:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 8012cb0:	462a      	mov	r2, r5
 8012cb2:	f105 0c08 	add.w	ip, r5, #8
 8012cb6:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8012cba:	4635      	mov	r5, r6
 8012cbc:	6810      	ldr	r0, [r2, #0]
 8012cbe:	6851      	ldr	r1, [r2, #4]
 8012cc0:	4637      	mov	r7, r6
 8012cc2:	c703      	stmia	r7!, {r0, r1}
 8012cc4:	3208      	adds	r2, #8
 8012cc6:	4562      	cmp	r2, ip
 8012cc8:	463e      	mov	r6, r7
 8012cca:	d1f7      	bne.n	8012cbc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 8012ccc:	6810      	ldr	r0, [r2, #0]
 8012cce:	6038      	str	r0, [r7, #0]
 8012cd0:	8892      	ldrh	r2, [r2, #4]
 8012cd2:	80ba      	strh	r2, [r7, #4]
 8012cd4:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8012cd8:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8012cdc:	10db      	asrs	r3, r3, #3
 8012cde:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8012ce2:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8012ce6:	4313      	orrs	r3, r2
 8012ce8:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8012cec:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 8012cf0:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 8012cf4:	1a9b      	subs	r3, r3, r2
 8012cf6:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 8012cfa:	e772      	b.n	8012be2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8012cfc:	f023 0204 	bic.w	r2, r3, #4
 8012d00:	f640 611b 	movw	r1, #3611	; 0xe1b
 8012d04:	428a      	cmp	r2, r1
 8012d06:	d003      	beq.n	8012d10 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 8012d08:	f640 621d 	movw	r2, #3613	; 0xe1d
 8012d0c:	4293      	cmp	r3, r2
 8012d0e:	d120      	bne.n	8012d52 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x186>
 8012d10:	3b01      	subs	r3, #1
 8012d12:	4602      	mov	r2, r0
 8012d14:	b29b      	uxth	r3, r3
 8012d16:	4629      	mov	r1, r5
 8012d18:	4620      	mov	r0, r4
 8012d1a:	f7ff ff4c 	bl	8012bb6 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8012d1e:	7b41      	ldrb	r1, [r0, #13]
 8012d20:	00cb      	lsls	r3, r1, #3
 8012d22:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8012d26:	7a03      	ldrb	r3, [r0, #8]
 8012d28:	0649      	lsls	r1, r1, #25
 8012d2a:	ea43 0302 	orr.w	r3, r3, r2
 8012d2e:	bf44      	itt	mi
 8012d30:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8012d34:	b21b      	sxthmi	r3, r3
 8012d36:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8012d3a:	7b6b      	ldrb	r3, [r5, #13]
 8012d3c:	7aaa      	ldrb	r2, [r5, #10]
 8012d3e:	005b      	lsls	r3, r3, #1
 8012d40:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8012d44:	4313      	orrs	r3, r2
 8012d46:	115a      	asrs	r2, r3, #5
 8012d48:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 8012d4c:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8012d50:	e036      	b.n	8012dc0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 8012d52:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 8012d56:	f402 7180 	and.w	r1, r2, #256	; 0x100
 8012d5a:	7a2a      	ldrb	r2, [r5, #8]
 8012d5c:	f01c 0f40 	tst.w	ip, #64	; 0x40
 8012d60:	ea42 0201 	orr.w	r2, r2, r1
 8012d64:	bf1c      	itt	ne
 8012d66:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 8012d6a:	b212      	sxthne	r2, r2
 8012d6c:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8012d70:	f640 6109 	movw	r1, #3593	; 0xe09
 8012d74:	f023 0210 	bic.w	r2, r3, #16
 8012d78:	428a      	cmp	r2, r1
 8012d7a:	d003      	beq.n	8012d84 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b8>
 8012d7c:	f640 6213 	movw	r2, #3603	; 0xe13
 8012d80:	4293      	cmp	r3, r2
 8012d82:	d12a      	bne.n	8012dda <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 8012d84:	7b6e      	ldrb	r6, [r5, #13]
 8012d86:	0076      	lsls	r6, r6, #1
 8012d88:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8012d8c:	7aae      	ldrb	r6, [r5, #10]
 8012d8e:	4316      	orrs	r6, r2
 8012d90:	f640 6213 	movw	r2, #3603	; 0xe13
 8012d94:	4293      	cmp	r3, r2
 8012d96:	bf18      	it	ne
 8012d98:	f103 33ff 	addne.w	r3, r3, #4294967295
 8012d9c:	4602      	mov	r2, r0
 8012d9e:	bf14      	ite	ne
 8012da0:	b29b      	uxthne	r3, r3
 8012da2:	f640 630c 	movweq	r3, #3596	; 0xe0c
 8012da6:	4629      	mov	r1, r5
 8012da8:	4620      	mov	r0, r4
 8012daa:	f7ff ff04 	bl	8012bb6 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8012dae:	7b43      	ldrb	r3, [r0, #13]
 8012db0:	7a82      	ldrb	r2, [r0, #10]
 8012db2:	005b      	lsls	r3, r3, #1
 8012db4:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8012db8:	4313      	orrs	r3, r2
 8012dba:	1af6      	subs	r6, r6, r3
 8012dbc:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 8012dc0:	7b69      	ldrb	r1, [r5, #13]
 8012dc2:	00cb      	lsls	r3, r1, #3
 8012dc4:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8012dc8:	7a2b      	ldrb	r3, [r5, #8]
 8012dca:	4313      	orrs	r3, r2
 8012dcc:	064a      	lsls	r2, r1, #25
 8012dce:	bf44      	itt	mi
 8012dd0:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8012dd4:	b21b      	sxthmi	r3, r3
 8012dd6:	1bdb      	subs	r3, r3, r7
 8012dd8:	e747      	b.n	8012c6a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 8012dda:	2300      	movs	r3, #0
 8012ddc:	e7b6      	b.n	8012d4c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x180>
 8012dde:	bf00      	nop
 8012de0:	3fc00079 	.word	0x3fc00079

08012de4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 8012de4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012de8:	4604      	mov	r4, r0
 8012dea:	b942      	cbnz	r2, 8012dfe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8012dec:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8012df0:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 8012df4:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 8012df8:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8012dfc:	e047      	b.n	8012e8e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8012dfe:	7b51      	ldrb	r1, [r2, #13]
 8012e00:	8893      	ldrh	r3, [r2, #4]
 8012e02:	010d      	lsls	r5, r1, #4
 8012e04:	f405 7080 	and.w	r0, r5, #256	; 0x100
 8012e08:	79d5      	ldrb	r5, [r2, #7]
 8012e0a:	4305      	orrs	r5, r0
 8012e0c:	2d04      	cmp	r5, #4
 8012e0e:	bfcc      	ite	gt
 8012e10:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 8012e14:	f04f 0e01 	movle.w	lr, #1
 8012e18:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 8012e1c:	f200 80ab 	bhi.w	8012f76 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 8012e20:	f240 60e7 	movw	r0, #1767	; 0x6e7
 8012e24:	4283      	cmp	r3, r0
 8012e26:	d216      	bcs.n	8012e56 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012e28:	f240 605b 	movw	r0, #1627	; 0x65b
 8012e2c:	4283      	cmp	r3, r0
 8012e2e:	d859      	bhi.n	8012ee4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 8012e30:	f240 6057 	movw	r0, #1623	; 0x657
 8012e34:	4283      	cmp	r3, r0
 8012e36:	d20e      	bcs.n	8012e56 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012e38:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8012e3c:	d24a      	bcs.n	8012ed4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 8012e3e:	f240 604e 	movw	r0, #1614	; 0x64e
 8012e42:	4283      	cmp	r3, r0
 8012e44:	d207      	bcs.n	8012e56 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012e46:	f240 601a 	movw	r0, #1562	; 0x61a
 8012e4a:	4283      	cmp	r3, r0
 8012e4c:	d02a      	beq.n	8012ea4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012e4e:	d821      	bhi.n	8012e94 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 8012e50:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 8012e54:	d35b      	bcc.n	8012f0e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8012e56:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 8012e5a:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8012e5e:	f040 80d0 	bne.w	8013002 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8012e62:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 8012e66:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8012e6a:	f040 80ca 	bne.w	8013002 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8012e6e:	00cb      	lsls	r3, r1, #3
 8012e70:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8012e74:	7a13      	ldrb	r3, [r2, #8]
 8012e76:	0649      	lsls	r1, r1, #25
 8012e78:	ea43 0300 	orr.w	r3, r3, r0
 8012e7c:	bf44      	itt	mi
 8012e7e:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8012e82:	b21b      	sxthmi	r3, r3
 8012e84:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8012e88:	1b5d      	subs	r5, r3, r5
 8012e8a:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8012e8e:	4610      	mov	r0, r2
 8012e90:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012e94:	f240 604b 	movw	r0, #1611	; 0x64b
 8012e98:	4283      	cmp	r3, r0
 8012e9a:	d338      	bcc.n	8012f0e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8012e9c:	f240 604c 	movw	r0, #1612	; 0x64c
 8012ea0:	4283      	cmp	r3, r0
 8012ea2:	d9d8      	bls.n	8012e56 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012ea4:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 8012ea8:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 8012eac:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8012eb0:	f040 80f2 	bne.w	8013098 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8012eb4:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8012eb8:	f040 80ee 	bne.w	8013098 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8012ebc:	00cb      	lsls	r3, r1, #3
 8012ebe:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8012ec2:	7a13      	ldrb	r3, [r2, #8]
 8012ec4:	064e      	lsls	r6, r1, #25
 8012ec6:	ea43 0300 	orr.w	r3, r3, r0
 8012eca:	bf44      	itt	mi
 8012ecc:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8012ed0:	b21b      	sxthmi	r3, r3
 8012ed2:	e7d9      	b.n	8012e88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 8012ed4:	f240 6054 	movw	r0, #1620	; 0x654
 8012ed8:	4283      	cmp	r3, r0
 8012eda:	d8e3      	bhi.n	8012ea4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012edc:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8012ee0:	d9e0      	bls.n	8012ea4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012ee2:	e7b8      	b.n	8012e56 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012ee4:	f240 6074 	movw	r0, #1652	; 0x674
 8012ee8:	4283      	cmp	r3, r0
 8012eea:	d0b4      	beq.n	8012e56 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012eec:	d82d      	bhi.n	8012f4a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 8012eee:	f240 605e 	movw	r0, #1630	; 0x65e
 8012ef2:	4283      	cmp	r3, r0
 8012ef4:	d804      	bhi.n	8012f00 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 8012ef6:	f240 605d 	movw	r0, #1629	; 0x65d
 8012efa:	4283      	cmp	r3, r0
 8012efc:	d3d2      	bcc.n	8012ea4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012efe:	e7aa      	b.n	8012e56 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012f00:	f240 605f 	movw	r0, #1631	; 0x65f
 8012f04:	4283      	cmp	r3, r0
 8012f06:	d0cd      	beq.n	8012ea4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012f08:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 8012f0c:	d0a3      	beq.n	8012e56 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012f0e:	00cb      	lsls	r3, r1, #3
 8012f10:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8012f14:	7a13      	ldrb	r3, [r2, #8]
 8012f16:	0649      	lsls	r1, r1, #25
 8012f18:	ea43 0300 	orr.w	r3, r3, r0
 8012f1c:	bf44      	itt	mi
 8012f1e:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8012f22:	b21b      	sxthmi	r3, r3
 8012f24:	1b5d      	subs	r5, r3, r5
 8012f26:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8012f2a:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8012f2e:	7b53      	ldrb	r3, [r2, #13]
 8012f30:	015b      	lsls	r3, r3, #5
 8012f32:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8012f36:	7993      	ldrb	r3, [r2, #6]
 8012f38:	430b      	orrs	r3, r1
 8012f3a:	005b      	lsls	r3, r3, #1
 8012f3c:	2105      	movs	r1, #5
 8012f3e:	fb93 f3f1 	sdiv	r3, r3, r1
 8012f42:	f992 1009 	ldrsb.w	r1, [r2, #9]
 8012f46:	440b      	add	r3, r1
 8012f48:	e756      	b.n	8012df8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 8012f4a:	f240 60e2 	movw	r0, #1762	; 0x6e2
 8012f4e:	4283      	cmp	r3, r0
 8012f50:	d809      	bhi.n	8012f66 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 8012f52:	f240 60df 	movw	r0, #1759	; 0x6df
 8012f56:	4283      	cmp	r3, r0
 8012f58:	f4bf af7d 	bcs.w	8012e56 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012f5c:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 8012f60:	2b05      	cmp	r3, #5
 8012f62:	d8d4      	bhi.n	8012f0e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8012f64:	e777      	b.n	8012e56 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012f66:	f240 60e3 	movw	r0, #1763	; 0x6e3
 8012f6a:	4283      	cmp	r3, r0
 8012f6c:	d09a      	beq.n	8012ea4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012f6e:	f240 60e4 	movw	r0, #1764	; 0x6e4
 8012f72:	4283      	cmp	r3, r0
 8012f74:	e7ca      	b.n	8012f0c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8012f76:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 8012f7a:	d22b      	bcs.n	8012fd4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 8012f7c:	f640 00ed 	movw	r0, #2285	; 0x8ed
 8012f80:	4283      	cmp	r3, r0
 8012f82:	d28f      	bcs.n	8012ea4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012f84:	f640 00e5 	movw	r0, #2277	; 0x8e5
 8012f88:	4283      	cmp	r3, r0
 8012f8a:	d816      	bhi.n	8012fba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 8012f8c:	f640 00e4 	movw	r0, #2276	; 0x8e4
 8012f90:	4283      	cmp	r3, r0
 8012f92:	f4bf af60 	bcs.w	8012e56 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012f96:	f240 60ec 	movw	r0, #1772	; 0x6ec
 8012f9a:	4283      	cmp	r3, r0
 8012f9c:	d80a      	bhi.n	8012fb4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 8012f9e:	f240 60eb 	movw	r0, #1771	; 0x6eb
 8012fa2:	4283      	cmp	r3, r0
 8012fa4:	f4bf af57 	bcs.w	8012e56 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012fa8:	f240 60ea 	movw	r0, #1770	; 0x6ea
 8012fac:	4283      	cmp	r3, r0
 8012fae:	f43f af79 	beq.w	8012ea4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012fb2:	e7ac      	b.n	8012f0e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8012fb4:	f240 60ed 	movw	r0, #1773	; 0x6ed
 8012fb8:	e7f8      	b.n	8012fac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 8012fba:	f640 00e8 	movw	r0, #2280	; 0x8e8
 8012fbe:	4283      	cmp	r3, r0
 8012fc0:	d802      	bhi.n	8012fc8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 8012fc2:	f640 00e7 	movw	r0, #2279	; 0x8e7
 8012fc6:	e798      	b.n	8012efa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 8012fc8:	f640 00e9 	movw	r0, #2281	; 0x8e9
 8012fcc:	4283      	cmp	r3, r0
 8012fce:	f47f af42 	bne.w	8012e56 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012fd2:	e767      	b.n	8012ea4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012fd4:	f640 00f6 	movw	r0, #2294	; 0x8f6
 8012fd8:	4283      	cmp	r3, r0
 8012fda:	f43f af63 	beq.w	8012ea4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012fde:	d802      	bhi.n	8012fe6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 8012fe0:	f640 00f2 	movw	r0, #2290	; 0x8f2
 8012fe4:	e7f2      	b.n	8012fcc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 8012fe6:	f640 00fa 	movw	r0, #2298	; 0x8fa
 8012fea:	4283      	cmp	r3, r0
 8012fec:	d805      	bhi.n	8012ffa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 8012fee:	f640 00f9 	movw	r0, #2297	; 0x8f9
 8012ff2:	4283      	cmp	r3, r0
 8012ff4:	f4ff af2f 	bcc.w	8012e56 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012ff8:	e754      	b.n	8012ea4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012ffa:	f640 00fe 	movw	r0, #2302	; 0x8fe
 8012ffe:	4283      	cmp	r3, r0
 8013000:	e7af      	b.n	8012f62 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 8013002:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8013006:	4617      	mov	r7, r2
 8013008:	f102 0808 	add.w	r8, r2, #8
 801300c:	4666      	mov	r6, ip
 801300e:	6838      	ldr	r0, [r7, #0]
 8013010:	6879      	ldr	r1, [r7, #4]
 8013012:	46e6      	mov	lr, ip
 8013014:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8013018:	3708      	adds	r7, #8
 801301a:	4547      	cmp	r7, r8
 801301c:	46f4      	mov	ip, lr
 801301e:	d1f6      	bne.n	801300e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 8013020:	6838      	ldr	r0, [r7, #0]
 8013022:	f8ce 0000 	str.w	r0, [lr]
 8013026:	88b9      	ldrh	r1, [r7, #4]
 8013028:	f8ae 1004 	strh.w	r1, [lr, #4]
 801302c:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8013030:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8013034:	d009      	beq.n	801304a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 8013036:	7b51      	ldrb	r1, [r2, #13]
 8013038:	7992      	ldrb	r2, [r2, #6]
 801303a:	0149      	lsls	r1, r1, #5
 801303c:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8013040:	4311      	orrs	r1, r2
 8013042:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8013046:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 801304a:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801304e:	b2ad      	uxth	r5, r5
 8013050:	d00d      	beq.n	801306e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 8013052:	442b      	add	r3, r5
 8013054:	b29b      	uxth	r3, r3
 8013056:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 801305a:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 801305e:	10db      	asrs	r3, r3, #3
 8013060:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8013064:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8013068:	4313      	orrs	r3, r2
 801306a:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 801306e:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8013072:	00cb      	lsls	r3, r1, #3
 8013074:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8013078:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 801307c:	064f      	lsls	r7, r1, #25
 801307e:	ea43 0302 	orr.w	r3, r3, r2
 8013082:	bf44      	itt	mi
 8013084:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8013088:	b21b      	sxthmi	r3, r3
 801308a:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801308e:	1b5b      	subs	r3, r3, r5
 8013090:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8013094:	4632      	mov	r2, r6
 8013096:	e6fa      	b.n	8012e8e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8013098:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 801309c:	4617      	mov	r7, r2
 801309e:	f102 0908 	add.w	r9, r2, #8
 80130a2:	4666      	mov	r6, ip
 80130a4:	6838      	ldr	r0, [r7, #0]
 80130a6:	6879      	ldr	r1, [r7, #4]
 80130a8:	46e0      	mov	r8, ip
 80130aa:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 80130ae:	3708      	adds	r7, #8
 80130b0:	454f      	cmp	r7, r9
 80130b2:	46c4      	mov	ip, r8
 80130b4:	d1f6      	bne.n	80130a4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 80130b6:	6838      	ldr	r0, [r7, #0]
 80130b8:	f8c8 0000 	str.w	r0, [r8]
 80130bc:	88b9      	ldrh	r1, [r7, #4]
 80130be:	f8a8 1004 	strh.w	r1, [r8, #4]
 80130c2:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 80130c6:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 80130ca:	d009      	beq.n	80130e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 80130cc:	7b51      	ldrb	r1, [r2, #13]
 80130ce:	7992      	ldrb	r2, [r2, #6]
 80130d0:	0149      	lsls	r1, r1, #5
 80130d2:	f401 7180 	and.w	r1, r1, #256	; 0x100
 80130d6:	4311      	orrs	r1, r2
 80130d8:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 80130dc:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 80130e0:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 80130e4:	d00e      	beq.n	8013104 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 80130e6:	eba3 030e 	sub.w	r3, r3, lr
 80130ea:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 80130ee:	b29b      	uxth	r3, r3
 80130f0:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 80130f4:	10db      	asrs	r3, r3, #3
 80130f6:	f003 0360 	and.w	r3, r3, #96	; 0x60
 80130fa:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 80130fe:	4313      	orrs	r3, r2
 8013100:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8013104:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8013108:	00cb      	lsls	r3, r1, #3
 801310a:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801310e:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8013112:	0648      	lsls	r0, r1, #25
 8013114:	ea43 0302 	orr.w	r3, r3, r2
 8013118:	bf44      	itt	mi
 801311a:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801311e:	b21b      	sxthmi	r3, r3
 8013120:	1b5d      	subs	r5, r3, r5
 8013122:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8013126:	e7b5      	b.n	8013094 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

08013128 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 8013128:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801312c:	461e      	mov	r6, r3
 801312e:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8013130:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8013134:	4604      	mov	r4, r0
 8013136:	4617      	mov	r7, r2
 8013138:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 801313c:	f7f1 fdb4 	bl	8004ca8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8013140:	4605      	mov	r5, r0
 8013142:	b918      	cbnz	r0, 801314c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 8013144:	6030      	str	r0, [r6, #0]
 8013146:	4628      	mov	r0, r5
 8013148:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801314c:	683b      	ldr	r3, [r7, #0]
 801314e:	4601      	mov	r1, r0
 8013150:	68db      	ldr	r3, [r3, #12]
 8013152:	4638      	mov	r0, r7
 8013154:	4798      	blx	r3
 8013156:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 801315a:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 801315e:	4602      	mov	r2, r0
 8013160:	6030      	str	r0, [r6, #0]
 8013162:	d213      	bcs.n	801318c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 8013164:	4643      	mov	r3, r8
 8013166:	4639      	mov	r1, r7
 8013168:	4620      	mov	r0, r4
 801316a:	f7ff fe3b 	bl	8012de4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801316e:	6030      	str	r0, [r6, #0]
 8013170:	6833      	ldr	r3, [r6, #0]
 8013172:	b143      	cbz	r3, 8013186 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 8013174:	7b5a      	ldrb	r2, [r3, #13]
 8013176:	7a9b      	ldrb	r3, [r3, #10]
 8013178:	0052      	lsls	r2, r2, #1
 801317a:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801317e:	4313      	orrs	r3, r2
 8013180:	bf0c      	ite	eq
 8013182:	2301      	moveq	r3, #1
 8013184:	2300      	movne	r3, #0
 8013186:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 801318a:	e7dc      	b.n	8013146 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 801318c:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8013190:	b29b      	uxth	r3, r3
 8013192:	2b7f      	cmp	r3, #127	; 0x7f
 8013194:	d804      	bhi.n	80131a0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 8013196:	4639      	mov	r1, r7
 8013198:	4620      	mov	r0, r4
 801319a:	f7ff fd17 	bl	8012bcc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801319e:	e7e6      	b.n	801316e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 80131a0:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 80131a4:	2b00      	cmp	r3, #0
 80131a6:	d0e3      	beq.n	8013170 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 80131a8:	f640 1302 	movw	r3, #2306	; 0x902
 80131ac:	429d      	cmp	r5, r3
 80131ae:	d1df      	bne.n	8013170 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 80131b0:	4601      	mov	r1, r0
 80131b2:	4620      	mov	r0, r4
 80131b4:	f7ff fcdc 	bl	8012b70 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 80131b8:	e7d9      	b.n	801316e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

080131ba <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 80131ba:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80131be:	461e      	mov	r6, r3
 80131c0:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80131c2:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80131c6:	4604      	mov	r4, r0
 80131c8:	4617      	mov	r7, r2
 80131ca:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 80131ce:	f7f1 fd6b 	bl	8004ca8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80131d2:	4605      	mov	r5, r0
 80131d4:	b918      	cbnz	r0, 80131de <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 80131d6:	6030      	str	r0, [r6, #0]
 80131d8:	4628      	mov	r0, r5
 80131da:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80131de:	683b      	ldr	r3, [r7, #0]
 80131e0:	4601      	mov	r1, r0
 80131e2:	f8d3 9008 	ldr.w	r9, [r3, #8]
 80131e6:	4638      	mov	r0, r7
 80131e8:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 80131ec:	47c8      	blx	r9
 80131ee:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 80131f2:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 80131f6:	4602      	mov	r2, r0
 80131f8:	6030      	str	r0, [r6, #0]
 80131fa:	d213      	bcs.n	8013224 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 80131fc:	4643      	mov	r3, r8
 80131fe:	4639      	mov	r1, r7
 8013200:	4620      	mov	r0, r4
 8013202:	f7ff fdef 	bl	8012de4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8013206:	6030      	str	r0, [r6, #0]
 8013208:	6833      	ldr	r3, [r6, #0]
 801320a:	b143      	cbz	r3, 801321e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 801320c:	7b5a      	ldrb	r2, [r3, #13]
 801320e:	7a9b      	ldrb	r3, [r3, #10]
 8013210:	0052      	lsls	r2, r2, #1
 8013212:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8013216:	4313      	orrs	r3, r2
 8013218:	bf0c      	ite	eq
 801321a:	2301      	moveq	r3, #1
 801321c:	2300      	movne	r3, #0
 801321e:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 8013222:	e7d9      	b.n	80131d8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 8013224:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8013228:	b29b      	uxth	r3, r3
 801322a:	2b7f      	cmp	r3, #127	; 0x7f
 801322c:	d804      	bhi.n	8013238 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 801322e:	4639      	mov	r1, r7
 8013230:	4620      	mov	r0, r4
 8013232:	f7ff fccb 	bl	8012bcc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8013236:	e7e6      	b.n	8013206 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 8013238:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 801323c:	2b00      	cmp	r3, #0
 801323e:	d0e3      	beq.n	8013208 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8013240:	f640 1302 	movw	r3, #2306	; 0x902
 8013244:	429d      	cmp	r5, r3
 8013246:	d1df      	bne.n	8013208 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8013248:	4601      	mov	r1, r0
 801324a:	4620      	mov	r0, r4
 801324c:	f7ff fc90 	bl	8012b70 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8013250:	e7d9      	b.n	8013206 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

08013252 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 8013252:	b510      	push	{r4, lr}
 8013254:	4604      	mov	r4, r0
 8013256:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 801325a:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801325c:	b1f1      	cbz	r1, 801329c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 801325e:	2b0a      	cmp	r3, #10
 8013260:	d02f      	beq.n	80132c2 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 8013262:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 8013264:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 8013268:	3901      	subs	r1, #1
 801326a:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 801326c:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 8013270:	1c51      	adds	r1, r2, #1
 8013272:	b289      	uxth	r1, r1
 8013274:	2901      	cmp	r1, #1
 8013276:	bf84      	itt	hi
 8013278:	f102 32ff 	addhi.w	r2, r2, #4294967295
 801327c:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 801327e:	f103 0201 	add.w	r2, r3, #1
 8013282:	8722      	strh	r2, [r4, #56]	; 0x38
 8013284:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8013286:	bf98      	it	ls
 8013288:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 801328a:	4413      	add	r3, r2
 801328c:	b29b      	uxth	r3, r3
 801328e:	2b09      	cmp	r3, #9
 8013290:	bf88      	it	hi
 8013292:	3b0a      	subhi	r3, #10
 8013294:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8013298:	8458      	strh	r0, [r3, #34]	; 0x22
 801329a:	e7dc      	b.n	8013256 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 801329c:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801329e:	2b0a      	cmp	r3, #10
 80132a0:	d00f      	beq.n	80132c2 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 80132a2:	4620      	mov	r0, r4
 80132a4:	f7ff fc12 	bl	8012acc <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 80132a8:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80132aa:	1c5a      	adds	r2, r3, #1
 80132ac:	8722      	strh	r2, [r4, #56]	; 0x38
 80132ae:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80132b0:	4413      	add	r3, r2
 80132b2:	b29b      	uxth	r3, r3
 80132b4:	2b09      	cmp	r3, #9
 80132b6:	bf88      	it	hi
 80132b8:	3b0a      	subhi	r3, #10
 80132ba:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80132be:	8458      	strh	r0, [r3, #34]	; 0x22
 80132c0:	e7ec      	b.n	801329c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 80132c2:	bd10      	pop	{r4, pc}

080132c4 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 80132c4:	b538      	push	{r3, r4, r5, lr}
 80132c6:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80132c8:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 80132cc:	4604      	mov	r4, r0
 80132ce:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 80132d0:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 80132d2:	3a01      	subs	r2, #1
 80132d4:	8702      	strh	r2, [r0, #56]	; 0x38
 80132d6:	1c5a      	adds	r2, r3, #1
 80132d8:	b292      	uxth	r2, r2
 80132da:	2a09      	cmp	r2, #9
 80132dc:	bf86      	itte	hi
 80132de:	3b09      	subhi	r3, #9
 80132e0:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 80132e2:	86c2      	strhls	r2, [r0, #54]	; 0x36
 80132e4:	f7ff ffb5 	bl	8013252 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 80132e8:	8c23      	ldrh	r3, [r4, #32]
 80132ea:	2b01      	cmp	r3, #1
 80132ec:	bf9c      	itt	ls
 80132ee:	3301      	addls	r3, #1
 80132f0:	8423      	strhls	r3, [r4, #32]
 80132f2:	8be3      	ldrh	r3, [r4, #30]
 80132f4:	b90b      	cbnz	r3, 80132fa <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 80132f6:	2302      	movs	r3, #2
 80132f8:	83e3      	strh	r3, [r4, #30]
 80132fa:	8be3      	ldrh	r3, [r4, #30]
 80132fc:	3b01      	subs	r3, #1
 80132fe:	b29b      	uxth	r3, r3
 8013300:	83e3      	strh	r3, [r4, #30]
 8013302:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013306:	4628      	mov	r0, r5
 8013308:	8365      	strh	r5, [r4, #26]
 801330a:	bd38      	pop	{r3, r4, r5, pc}

0801330c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 801330c:	428a      	cmp	r2, r1
 801330e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013312:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 8013314:	d931      	bls.n	801337a <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 8013316:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 8013318:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 801331c:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 8013320:	19ee      	adds	r6, r5, r7
 8013322:	1a54      	subs	r4, r2, r1
 8013324:	3e01      	subs	r6, #1
 8013326:	fa1f fe84 	uxth.w	lr, r4
 801332a:	b2b4      	uxth	r4, r6
 801332c:	eba4 090e 	sub.w	r9, r4, lr
 8013330:	fa1f f989 	uxth.w	r9, r9
 8013334:	2c09      	cmp	r4, #9
 8013336:	4626      	mov	r6, r4
 8013338:	bf88      	it	hi
 801333a:	f1a4 060a 	subhi.w	r6, r4, #10
 801333e:	f1bc 0f00 	cmp.w	ip, #0
 8013342:	bf08      	it	eq
 8013344:	f04f 0c02 	moveq.w	ip, #2
 8013348:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801334c:	f10c 3cff 	add.w	ip, ip, #4294967295
 8013350:	fa1f fc8c 	uxth.w	ip, ip
 8013354:	3c01      	subs	r4, #1
 8013356:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 801335a:	b2a4      	uxth	r4, r4
 801335c:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 8013360:	454c      	cmp	r4, r9
 8013362:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 8013366:	d1e5      	bne.n	8013334 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 8013368:	eba5 050e 	sub.w	r5, r5, lr
 801336c:	eb0e 0408 	add.w	r4, lr, r8
 8013370:	8705      	strh	r5, [r0, #56]	; 0x38
 8013372:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 8013376:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 801337a:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 801337c:	1a64      	subs	r4, r4, r1
 801337e:	4439      	add	r1, r7
 8013380:	b289      	uxth	r1, r1
 8013382:	2909      	cmp	r1, #9
 8013384:	bf88      	it	hi
 8013386:	390a      	subhi	r1, #10
 8013388:	8704      	strh	r4, [r0, #56]	; 0x38
 801338a:	86c1      	strh	r1, [r0, #54]	; 0x36
 801338c:	250a      	movs	r5, #10
 801338e:	b18a      	cbz	r2, 80133b4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 8013390:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 8013392:	3a01      	subs	r2, #1
 8013394:	b292      	uxth	r2, r2
 8013396:	3101      	adds	r1, #1
 8013398:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 801339c:	8701      	strh	r1, [r0, #56]	; 0x38
 801339e:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 80133a0:	b901      	cbnz	r1, 80133a4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 80133a2:	86c5      	strh	r5, [r0, #54]	; 0x36
 80133a4:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 80133a6:	3901      	subs	r1, #1
 80133a8:	b289      	uxth	r1, r1
 80133aa:	86c1      	strh	r1, [r0, #54]	; 0x36
 80133ac:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 80133b0:	844c      	strh	r4, [r1, #34]	; 0x22
 80133b2:	e7ec      	b.n	801338e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 80133b4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80133b8:	f7ff bf4b 	b.w	8013252 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

080133bc <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 80133bc:	b570      	push	{r4, r5, r6, lr}
 80133be:	2500      	movs	r5, #0
 80133c0:	4295      	cmp	r5, r2
 80133c2:	d011      	beq.n	80133e8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 80133c4:	8bc4      	ldrh	r4, [r0, #30]
 80133c6:	f831 6b02 	ldrh.w	r6, [r1], #2
 80133ca:	4414      	add	r4, r2
 80133cc:	3c01      	subs	r4, #1
 80133ce:	1b64      	subs	r4, r4, r5
 80133d0:	b2a4      	uxth	r4, r4
 80133d2:	2c01      	cmp	r4, #1
 80133d4:	bf88      	it	hi
 80133d6:	3c02      	subhi	r4, #2
 80133d8:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80133dc:	8b64      	ldrh	r4, [r4, #26]
 80133de:	42b4      	cmp	r4, r6
 80133e0:	d117      	bne.n	8013412 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 80133e2:	3501      	adds	r5, #1
 80133e4:	b2ad      	uxth	r5, r5
 80133e6:	e7eb      	b.n	80133c0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 80133e8:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80133ec:	2400      	movs	r4, #0
 80133ee:	4413      	add	r3, r2
 80133f0:	b2a2      	uxth	r2, r4
 80133f2:	429a      	cmp	r2, r3
 80133f4:	da0f      	bge.n	8013416 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 80133f6:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 80133f8:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 80133fc:	4432      	add	r2, r6
 80133fe:	b292      	uxth	r2, r2
 8013400:	2a09      	cmp	r2, #9
 8013402:	bf88      	it	hi
 8013404:	3a0a      	subhi	r2, #10
 8013406:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801340a:	3401      	adds	r4, #1
 801340c:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 801340e:	42aa      	cmp	r2, r5
 8013410:	d0ee      	beq.n	80133f0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 8013412:	2000      	movs	r0, #0
 8013414:	bd70      	pop	{r4, r5, r6, pc}
 8013416:	2001      	movs	r0, #1
 8013418:	e7fc      	b.n	8013414 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

0801341a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 801341a:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801341e:	4605      	mov	r5, r0
 8013420:	4616      	mov	r6, r2
 8013422:	1c8c      	adds	r4, r1, #2
 8013424:	8809      	ldrh	r1, [r1, #0]
 8013426:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 801342a:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 801342e:	42b3      	cmp	r3, r6
 8013430:	d124      	bne.n	801347c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 8013432:	f3c1 2903 	ubfx	r9, r1, #8, #4
 8013436:	f3c1 1803 	ubfx	r8, r1, #4, #4
 801343a:	f001 070f 	and.w	r7, r1, #15
 801343e:	f8cd 8000 	str.w	r8, [sp]
 8013442:	464b      	mov	r3, r9
 8013444:	4652      	mov	r2, sl
 8013446:	4621      	mov	r1, r4
 8013448:	4628      	mov	r0, r5
 801344a:	f7ff ffb7 	bl	80133bc <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 801344e:	4683      	mov	fp, r0
 8013450:	b168      	cbz	r0, 801346e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 8013452:	eb0a 0109 	add.w	r1, sl, r9
 8013456:	4441      	add	r1, r8
 8013458:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 801345c:	463a      	mov	r2, r7
 801345e:	4649      	mov	r1, r9
 8013460:	4628      	mov	r0, r5
 8013462:	f7ff ff53 	bl	801330c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 8013466:	4658      	mov	r0, fp
 8013468:	b003      	add	sp, #12
 801346a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801346e:	eb07 010a 	add.w	r1, r7, sl
 8013472:	4449      	add	r1, r9
 8013474:	4441      	add	r1, r8
 8013476:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 801347a:	e7d2      	b.n	8013422 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 801347c:	f04f 0b00 	mov.w	fp, #0
 8013480:	e7f1      	b.n	8013466 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

08013482 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 8013482:	b570      	push	{r4, r5, r6, lr}
 8013484:	8810      	ldrh	r0, [r2, #0]
 8013486:	4298      	cmp	r0, r3
 8013488:	d817      	bhi.n	80134ba <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801348a:	1e48      	subs	r0, r1, #1
 801348c:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 8013490:	4298      	cmp	r0, r3
 8013492:	d312      	bcc.n	80134ba <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8013494:	2400      	movs	r4, #0
 8013496:	428c      	cmp	r4, r1
 8013498:	d20f      	bcs.n	80134ba <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801349a:	1860      	adds	r0, r4, r1
 801349c:	1040      	asrs	r0, r0, #1
 801349e:	0085      	lsls	r5, r0, #2
 80134a0:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 80134a4:	42b3      	cmp	r3, r6
 80134a6:	d902      	bls.n	80134ae <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 80134a8:	3001      	adds	r0, #1
 80134aa:	b284      	uxth	r4, r0
 80134ac:	e7f3      	b.n	8013496 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 80134ae:	d201      	bcs.n	80134b4 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 80134b0:	b281      	uxth	r1, r0
 80134b2:	e7f0      	b.n	8013496 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 80134b4:	442a      	add	r2, r5
 80134b6:	8850      	ldrh	r0, [r2, #2]
 80134b8:	bd70      	pop	{r4, r5, r6, pc}
 80134ba:	2000      	movs	r0, #0
 80134bc:	e7fc      	b.n	80134b8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

080134be <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 80134be:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80134c2:	6c45      	ldr	r5, [r0, #68]	; 0x44
 80134c4:	886f      	ldrh	r7, [r5, #2]
 80134c6:	4604      	mov	r4, r0
 80134c8:	087f      	lsrs	r7, r7, #1
 80134ca:	260b      	movs	r6, #11
 80134cc:	3e01      	subs	r6, #1
 80134ce:	d013      	beq.n	80134f8 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 80134d0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80134d2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80134d6:	462a      	mov	r2, r5
 80134d8:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 80134dc:	4639      	mov	r1, r7
 80134de:	4643      	mov	r3, r8
 80134e0:	4620      	mov	r0, r4
 80134e2:	f7ff ffce 	bl	8013482 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 80134e6:	b138      	cbz	r0, 80134f8 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 80134e8:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 80134ec:	4642      	mov	r2, r8
 80134ee:	4620      	mov	r0, r4
 80134f0:	f7ff ff93 	bl	801341a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 80134f4:	2800      	cmp	r0, #0
 80134f6:	d1e9      	bne.n	80134cc <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 80134f8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080134fc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 80134fc:	b570      	push	{r4, r5, r6, lr}
 80134fe:	694a      	ldr	r2, [r1, #20]
 8013500:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8013502:	684b      	ldr	r3, [r1, #4]
 8013504:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 8013506:	1b54      	subs	r4, r2, r5
 8013508:	f000 8106 	beq.w	8013718 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 801350c:	1b9b      	subs	r3, r3, r6
 801350e:	d003      	beq.n	8013518 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8013510:	4363      	muls	r3, r4
 8013512:	2210      	movs	r2, #16
 8013514:	fb93 f3f2 	sdiv	r3, r3, r2
 8013518:	680c      	ldr	r4, [r1, #0]
 801351a:	698a      	ldr	r2, [r1, #24]
 801351c:	1b65      	subs	r5, r4, r5
 801351e:	f000 80fd 	beq.w	801371c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 8013522:	1b92      	subs	r2, r2, r6
 8013524:	d003      	beq.n	801352e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8013526:	436a      	muls	r2, r5
 8013528:	2410      	movs	r4, #16
 801352a:	fb92 f2f4 	sdiv	r2, r2, r4
 801352e:	1a9b      	subs	r3, r3, r2
 8013530:	ee07 3a90 	vmov	s15, r3
 8013534:	ed9f 4a88 	vldr	s8, [pc, #544]	; 8013758 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 8013538:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801353c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8013540:	ee67 7a84 	vmul.f32	s15, s15, s8
 8013544:	460a      	mov	r2, r1
 8013546:	ee87 3a27 	vdiv.f32	s6, s14, s15
 801354a:	4603      	mov	r3, r0
 801354c:	f100 040c 	add.w	r4, r0, #12
 8013550:	eeb1 6a43 	vneg.f32	s12, s6
 8013554:	edd2 7a02 	vldr	s15, [r2, #8]
 8013558:	eec7 6a27 	vdiv.f32	s13, s14, s15
 801355c:	3214      	adds	r2, #20
 801355e:	ece3 6a01 	vstmia	r3!, {s13}
 8013562:	ed52 7a02 	vldr	s15, [r2, #-8]
 8013566:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801356a:	429c      	cmp	r4, r3
 801356c:	edc3 7a02 	vstr	s15, [r3, #8]
 8013570:	ed52 7a01 	vldr	s15, [r2, #-4]
 8013574:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8013578:	edc3 7a05 	vstr	s15, [r3, #20]
 801357c:	d1ea      	bne.n	8013554 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 801357e:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8013580:	698b      	ldr	r3, [r1, #24]
 8013582:	edd0 4a02 	vldr	s9, [r0, #8]
 8013586:	edd0 3a00 	vldr	s7, [r0]
 801358a:	edd0 6a01 	vldr	s13, [r0, #4]
 801358e:	ed90 5a05 	vldr	s10, [r0, #20]
 8013592:	ed90 2a03 	vldr	s4, [r0, #12]
 8013596:	edd0 5a04 	vldr	s11, [r0, #16]
 801359a:	ed90 1a07 	vldr	s2, [r0, #28]
 801359e:	edd0 2a06 	vldr	s5, [r0, #24]
 80135a2:	1a9b      	subs	r3, r3, r2
 80135a4:	ee07 3a90 	vmov	s15, r3
 80135a8:	684b      	ldr	r3, [r1, #4]
 80135aa:	1a9b      	subs	r3, r3, r2
 80135ac:	ee07 3a10 	vmov	s14, r3
 80135b0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80135b4:	ee76 6ae4 	vsub.f32	s13, s13, s9
 80135b8:	ee67 7a84 	vmul.f32	s15, s15, s8
 80135bc:	ee73 4ae4 	vsub.f32	s9, s7, s9
 80135c0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80135c4:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 80135c8:	ee27 7a04 	vmul.f32	s14, s14, s8
 80135cc:	ee75 5ac5 	vsub.f32	s11, s11, s10
 80135d0:	eee6 7a87 	vfma.f32	s15, s13, s14
 80135d4:	ee32 5a45 	vsub.f32	s10, s4, s10
 80135d8:	ee67 7a83 	vmul.f32	s15, s15, s6
 80135dc:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 80135e0:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 80135e2:	694a      	ldr	r2, [r1, #20]
 80135e4:	1b13      	subs	r3, r2, r4
 80135e6:	ee07 3a10 	vmov	s14, r3
 80135ea:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80135ee:	680b      	ldr	r3, [r1, #0]
 80135f0:	ee27 7a04 	vmul.f32	s14, s14, s8
 80135f4:	1b1b      	subs	r3, r3, r4
 80135f6:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 80135fa:	ee07 3a10 	vmov	s14, r3
 80135fe:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013602:	ee27 7a04 	vmul.f32	s14, s14, s8
 8013606:	eee6 4a87 	vfma.f32	s9, s13, s14
 801360a:	ee64 4a86 	vmul.f32	s9, s9, s12
 801360e:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 8013612:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8013614:	698b      	ldr	r3, [r1, #24]
 8013616:	1a9b      	subs	r3, r3, r2
 8013618:	ee06 3a90 	vmov	s13, r3
 801361c:	684b      	ldr	r3, [r1, #4]
 801361e:	1a9b      	subs	r3, r3, r2
 8013620:	ee07 3a10 	vmov	s14, r3
 8013624:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8013628:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801362c:	ee66 6a84 	vmul.f32	s13, s13, s8
 8013630:	ee27 7a04 	vmul.f32	s14, s14, s8
 8013634:	ee65 6a66 	vnmul.f32	s13, s10, s13
 8013638:	eee5 6a87 	vfma.f32	s13, s11, s14
 801363c:	ee66 6a83 	vmul.f32	s13, s13, s6
 8013640:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 8013644:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8013646:	694a      	ldr	r2, [r1, #20]
 8013648:	1b13      	subs	r3, r2, r4
 801364a:	ee07 3a10 	vmov	s14, r3
 801364e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013652:	680b      	ldr	r3, [r1, #0]
 8013654:	ee27 7a04 	vmul.f32	s14, s14, s8
 8013658:	1b1b      	subs	r3, r3, r4
 801365a:	ee25 5a47 	vnmul.f32	s10, s10, s14
 801365e:	ee07 3a10 	vmov	s14, r3
 8013662:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013666:	ee27 7a04 	vmul.f32	s14, s14, s8
 801366a:	eea5 5a87 	vfma.f32	s10, s11, s14
 801366e:	edd0 5a08 	vldr	s11, [r0, #32]
 8013672:	ee25 5a06 	vmul.f32	s10, s10, s12
 8013676:	ee31 1a65 	vsub.f32	s2, s2, s11
 801367a:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 801367e:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8013680:	698b      	ldr	r3, [r1, #24]
 8013682:	1a9b      	subs	r3, r3, r2
 8013684:	ee07 3a10 	vmov	s14, r3
 8013688:	684b      	ldr	r3, [r1, #4]
 801368a:	1a9b      	subs	r3, r3, r2
 801368c:	ee01 3a90 	vmov	s3, r3
 8013690:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013694:	ee72 5ae5 	vsub.f32	s11, s5, s11
 8013698:	ee27 7a04 	vmul.f32	s14, s14, s8
 801369c:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 80136a0:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 80136a4:	ee61 1a84 	vmul.f32	s3, s3, s8
 80136a8:	eea1 7a21 	vfma.f32	s14, s2, s3
 80136ac:	ee27 7a03 	vmul.f32	s14, s14, s6
 80136b0:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 80136b4:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 80136b6:	694a      	ldr	r2, [r1, #20]
 80136b8:	1b13      	subs	r3, r2, r4
 80136ba:	ee03 3a10 	vmov	s6, r3
 80136be:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 80136c2:	680b      	ldr	r3, [r1, #0]
 80136c4:	ee23 3a04 	vmul.f32	s6, s6, s8
 80136c8:	1b1b      	subs	r3, r3, r4
 80136ca:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 80136ce:	ee03 3a10 	vmov	s6, r3
 80136d2:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 80136d6:	ee23 4a04 	vmul.f32	s8, s6, s8
 80136da:	eee1 5a04 	vfma.f32	s11, s2, s8
 80136de:	ee25 6a86 	vmul.f32	s12, s11, s12
 80136e2:	ee62 5a67 	vnmul.f32	s11, s4, s15
 80136e6:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 80136ea:	eee3 5aa6 	vfma.f32	s11, s7, s13
 80136ee:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 80136f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80136f6:	dd13      	ble.n	8013720 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 80136f8:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80136fc:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 8013700:	63c3      	str	r3, [r0, #60]	; 0x3c
 8013702:	eee3 7a87 	vfma.f32	s15, s7, s14
 8013706:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801370a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801370e:	dd15      	ble.n	801373c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 8013710:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8013714:	6403      	str	r3, [r0, #64]	; 0x40
 8013716:	bd70      	pop	{r4, r5, r6, pc}
 8013718:	4623      	mov	r3, r4
 801371a:	e6fd      	b.n	8013518 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 801371c:	462a      	mov	r2, r5
 801371e:	e706      	b.n	801352e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8013720:	d502      	bpl.n	8013728 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 8013722:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8013726:	e7e9      	b.n	80136fc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 8013728:	ee22 2a64 	vnmul.f32	s4, s4, s9
 801372c:	eea3 2a85 	vfma.f32	s4, s7, s10
 8013730:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 8013734:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013738:	dade      	bge.n	80136f8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 801373a:	e7f2      	b.n	8013722 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 801373c:	d502      	bpl.n	8013744 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 801373e:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8013742:	e7e7      	b.n	8013714 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 8013744:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 8013748:	eee3 4a86 	vfma.f32	s9, s7, s12
 801374c:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8013750:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013754:	dadc      	bge.n	8013710 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 8013756:	e7f2      	b.n	801373e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8013758:	3d800000 	.word	0x3d800000

0801375c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 801375c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013760:	2714      	movs	r7, #20
 8013762:	435f      	muls	r7, r3
 8013764:	eb02 0c07 	add.w	ip, r2, r7
 8013768:	f8dc 5004 	ldr.w	r5, [ip, #4]
 801376c:	f115 0e0f 	adds.w	lr, r5, #15
 8013770:	f100 80a2 	bmi.w	80138b8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 8013774:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 8013778:	9c08      	ldr	r4, [sp, #32]
 801377a:	f8c0 e014 	str.w	lr, [r0, #20]
 801377e:	2614      	movs	r6, #20
 8013780:	4366      	muls	r6, r4
 8013782:	eb02 0806 	add.w	r8, r2, r6
 8013786:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801378a:	f115 040f 	adds.w	r4, r5, #15
 801378e:	f100 809f 	bmi.w	80138d0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 8013792:	1124      	asrs	r4, r4, #4
 8013794:	eba4 040e 	sub.w	r4, r4, lr
 8013798:	6184      	str	r4, [r0, #24]
 801379a:	2c00      	cmp	r4, #0
 801379c:	f000 808a 	beq.w	80138b4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 80137a0:	f8dc 9004 	ldr.w	r9, [ip, #4]
 80137a4:	f8d8 4004 	ldr.w	r4, [r8, #4]
 80137a8:	5995      	ldr	r5, [r2, r6]
 80137aa:	eba4 0809 	sub.w	r8, r4, r9
 80137ae:	59d4      	ldr	r4, [r2, r7]
 80137b0:	eba5 0a04 	sub.w	sl, r5, r4
 80137b4:	ea4f 150a 	mov.w	r5, sl, lsl #4
 80137b8:	fb0e fe05 	mul.w	lr, lr, r5
 80137bc:	fb0a ee19 	mls	lr, sl, r9, lr
 80137c0:	fb08 e404 	mla	r4, r8, r4, lr
 80137c4:	ea4f 1608 	mov.w	r6, r8, lsl #4
 80137c8:	3c01      	subs	r4, #1
 80137ca:	19a4      	adds	r4, r4, r6
 80137cc:	f100 808c 	bmi.w	80138e8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 80137d0:	fb94 fef6 	sdiv	lr, r4, r6
 80137d4:	f8c0 e000 	str.w	lr, [r0]
 80137d8:	fb06 441e 	mls	r4, r6, lr, r4
 80137dc:	6104      	str	r4, [r0, #16]
 80137de:	2d00      	cmp	r5, #0
 80137e0:	f2c0 8095 	blt.w	801390e <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 80137e4:	fb95 f4f6 	sdiv	r4, r5, r6
 80137e8:	6044      	str	r4, [r0, #4]
 80137ea:	fb06 5514 	mls	r5, r6, r4, r5
 80137ee:	6085      	str	r5, [r0, #8]
 80137f0:	60c6      	str	r6, [r0, #12]
 80137f2:	f8dc 4004 	ldr.w	r4, [ip, #4]
 80137f6:	6945      	ldr	r5, [r0, #20]
 80137f8:	59d2      	ldr	r2, [r2, r7]
 80137fa:	eddf 6a4d 	vldr	s13, [pc, #308]	; 8013930 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 80137fe:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 8013802:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 8013806:	ee07 4a10 	vmov	s14, r4
 801380a:	6804      	ldr	r4, [r0, #0]
 801380c:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 8013810:	ee07 2a90 	vmov	s15, r2
 8013814:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013818:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801381c:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8013820:	ee27 7a26 	vmul.f32	s14, s14, s13
 8013824:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8013828:	edd3 6a00 	vldr	s13, [r3]
 801382c:	eee6 6a07 	vfma.f32	s13, s12, s14
 8013830:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 8013834:	eee6 6a27 	vfma.f32	s13, s12, s15
 8013838:	edc0 6a07 	vstr	s13, [r0, #28]
 801383c:	edd0 6a01 	vldr	s13, [r0, #4]
 8013840:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 8013844:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 8013848:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801384c:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8013850:	ed80 6a08 	vstr	s12, [r0, #32]
 8013854:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 8013856:	6242      	str	r2, [r0, #36]	; 0x24
 8013858:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 801385c:	ed93 6a03 	vldr	s12, [r3, #12]
 8013860:	eea5 6a87 	vfma.f32	s12, s11, s14
 8013864:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8013868:	eea5 6aa7 	vfma.f32	s12, s11, s15
 801386c:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 8013870:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8013874:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 8013878:	eea6 6aa5 	vfma.f32	s12, s13, s11
 801387c:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 8013880:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8013882:	6302      	str	r2, [r0, #48]	; 0x30
 8013884:	ed93 6a06 	vldr	s12, [r3, #24]
 8013888:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 801388c:	eea5 6a87 	vfma.f32	s12, s11, s14
 8013890:	eeb0 7a46 	vmov.f32	s14, s12
 8013894:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 8013898:	eea6 7a27 	vfma.f32	s14, s12, s15
 801389c:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 80138a0:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 80138a4:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 80138a8:	eee6 7a87 	vfma.f32	s15, s13, s14
 80138ac:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 80138b0:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 80138b2:	63c3      	str	r3, [r0, #60]	; 0x3c
 80138b4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80138b8:	f1c5 0501 	rsb	r5, r5, #1
 80138bc:	f015 050f 	ands.w	r5, r5, #15
 80138c0:	bf18      	it	ne
 80138c2:	2501      	movne	r5, #1
 80138c4:	2410      	movs	r4, #16
 80138c6:	fb9e fef4 	sdiv	lr, lr, r4
 80138ca:	ebae 0e05 	sub.w	lr, lr, r5
 80138ce:	e753      	b.n	8013778 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 80138d0:	f1c5 0501 	rsb	r5, r5, #1
 80138d4:	f015 050f 	ands.w	r5, r5, #15
 80138d8:	bf18      	it	ne
 80138da:	2501      	movne	r5, #1
 80138dc:	f04f 0910 	mov.w	r9, #16
 80138e0:	fb94 f4f9 	sdiv	r4, r4, r9
 80138e4:	1b64      	subs	r4, r4, r5
 80138e6:	e755      	b.n	8013794 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 80138e8:	4264      	negs	r4, r4
 80138ea:	fb94 fef6 	sdiv	lr, r4, r6
 80138ee:	f1ce 0800 	rsb	r8, lr, #0
 80138f2:	fb06 441e 	mls	r4, r6, lr, r4
 80138f6:	f8c0 8000 	str.w	r8, [r0]
 80138fa:	6104      	str	r4, [r0, #16]
 80138fc:	2c00      	cmp	r4, #0
 80138fe:	f43f af6e 	beq.w	80137de <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 8013902:	ea6f 0e0e 	mvn.w	lr, lr
 8013906:	f8c0 e000 	str.w	lr, [r0]
 801390a:	1b34      	subs	r4, r6, r4
 801390c:	e766      	b.n	80137dc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 801390e:	426d      	negs	r5, r5
 8013910:	fb95 f4f6 	sdiv	r4, r5, r6
 8013914:	f1c4 0e00 	rsb	lr, r4, #0
 8013918:	fb06 5514 	mls	r5, r6, r4, r5
 801391c:	f8c0 e004 	str.w	lr, [r0, #4]
 8013920:	6085      	str	r5, [r0, #8]
 8013922:	2d00      	cmp	r5, #0
 8013924:	f43f af64 	beq.w	80137f0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 8013928:	43e4      	mvns	r4, r4
 801392a:	6044      	str	r4, [r0, #4]
 801392c:	1b75      	subs	r5, r6, r5
 801392e:	e75e      	b.n	80137ee <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 8013930:	3d800000 	.word	0x3d800000

08013934 <_ZN8touchgfx7Unicode6strlenEPKt>:
 8013934:	4602      	mov	r2, r0
 8013936:	b148      	cbz	r0, 801394c <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 8013938:	2300      	movs	r3, #0
 801393a:	b298      	uxth	r0, r3
 801393c:	3301      	adds	r3, #1
 801393e:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 8013942:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 8013946:	2900      	cmp	r1, #0
 8013948:	d1f7      	bne.n	801393a <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 801394a:	4770      	bx	lr
 801394c:	4770      	bx	lr

0801394e <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 801394e:	b530      	push	{r4, r5, lr}
 8013950:	4604      	mov	r4, r0
 8013952:	b159      	cbz	r1, 801396c <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 8013954:	b148      	cbz	r0, 801396a <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8013956:	2300      	movs	r3, #0
 8013958:	b298      	uxth	r0, r3
 801395a:	4282      	cmp	r2, r0
 801395c:	d905      	bls.n	801396a <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 801395e:	5ccd      	ldrb	r5, [r1, r3]
 8013960:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 8013964:	3301      	adds	r3, #1
 8013966:	2d00      	cmp	r5, #0
 8013968:	d1f6      	bne.n	8013958 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 801396a:	bd30      	pop	{r4, r5, pc}
 801396c:	4608      	mov	r0, r1
 801396e:	e7fc      	b.n	801396a <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

08013970 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>:
 8013970:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013972:	b08b      	sub	sp, #44	; 0x2c
 8013974:	468c      	mov	ip, r1
 8013976:	2100      	movs	r1, #0
 8013978:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 801397c:	ae01      	add	r6, sp, #4
 801397e:	211f      	movs	r1, #31
 8013980:	fbb0 f7f3 	udiv	r7, r0, r3
 8013984:	fb03 0517 	mls	r5, r3, r7, r0
 8013988:	b2ec      	uxtb	r4, r5
 801398a:	2d09      	cmp	r5, #9
 801398c:	bfd4      	ite	le
 801398e:	3430      	addle	r4, #48	; 0x30
 8013990:	3457      	addgt	r4, #87	; 0x57
 8013992:	b2e4      	uxtb	r4, r4
 8013994:	558c      	strb	r4, [r1, r6]
 8013996:	4638      	mov	r0, r7
 8013998:	1e4c      	subs	r4, r1, #1
 801399a:	b92f      	cbnz	r7, 80139a8 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x38>
 801399c:	4431      	add	r1, r6
 801399e:	4660      	mov	r0, ip
 80139a0:	f7ff ffd5 	bl	801394e <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 80139a4:	b00b      	add	sp, #44	; 0x2c
 80139a6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80139a8:	4621      	mov	r1, r4
 80139aa:	e7e9      	b.n	8013980 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x10>

080139ac <_ZN8touchgfx7Unicode4itoaElPtti>:
 80139ac:	b5f0      	push	{r4, r5, r6, r7, lr}
 80139ae:	4607      	mov	r7, r0
 80139b0:	b08b      	sub	sp, #44	; 0x2c
 80139b2:	4608      	mov	r0, r1
 80139b4:	b341      	cbz	r1, 8013a08 <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 80139b6:	1e99      	subs	r1, r3, #2
 80139b8:	2922      	cmp	r1, #34	; 0x22
 80139ba:	d825      	bhi.n	8013a08 <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 80139bc:	2100      	movs	r1, #0
 80139be:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 80139c2:	463c      	mov	r4, r7
 80139c4:	261f      	movs	r6, #31
 80139c6:	f10d 0c04 	add.w	ip, sp, #4
 80139ca:	fb94 fef3 	sdiv	lr, r4, r3
 80139ce:	fb03 441e 	mls	r4, r3, lr, r4
 80139d2:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 80139d6:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 80139da:	b2ec      	uxtb	r4, r5
 80139dc:	2d09      	cmp	r5, #9
 80139de:	bfd4      	ite	le
 80139e0:	3430      	addle	r4, #48	; 0x30
 80139e2:	3457      	addgt	r4, #87	; 0x57
 80139e4:	b2e4      	uxtb	r4, r4
 80139e6:	f80c 4006 	strb.w	r4, [ip, r6]
 80139ea:	4674      	mov	r4, lr
 80139ec:	1e71      	subs	r1, r6, #1
 80139ee:	b96c      	cbnz	r4, 8013a0c <_ZN8touchgfx7Unicode4itoaElPtti+0x60>
 80139f0:	2f00      	cmp	r7, #0
 80139f2:	da05      	bge.n	8013a00 <_ZN8touchgfx7Unicode4itoaElPtti+0x54>
 80139f4:	ab0a      	add	r3, sp, #40	; 0x28
 80139f6:	4419      	add	r1, r3
 80139f8:	232d      	movs	r3, #45	; 0x2d
 80139fa:	f801 3c24 	strb.w	r3, [r1, #-36]
 80139fe:	1eb1      	subs	r1, r6, #2
 8013a00:	3101      	adds	r1, #1
 8013a02:	4461      	add	r1, ip
 8013a04:	f7ff ffa3 	bl	801394e <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8013a08:	b00b      	add	sp, #44	; 0x2c
 8013a0a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013a0c:	460e      	mov	r6, r1
 8013a0e:	e7dc      	b.n	80139ca <_ZN8touchgfx7Unicode4itoaElPtti+0x1e>

08013a10 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 8013a10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013a14:	4691      	mov	r9, r2
 8013a16:	b085      	sub	sp, #20
 8013a18:	6802      	ldr	r2, [r0, #0]
 8013a1a:	9201      	str	r2, [sp, #4]
 8013a1c:	4688      	mov	r8, r1
 8013a1e:	4683      	mov	fp, r0
 8013a20:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 8013a24:	9103      	str	r1, [sp, #12]
 8013a26:	4610      	mov	r0, r2
 8013a28:	461c      	mov	r4, r3
 8013a2a:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 8013a2e:	9302      	str	r3, [sp, #8]
 8013a30:	f7ff ff80 	bl	8013934 <_ZN8touchgfx7Unicode6strlenEPKt>
 8013a34:	f1b8 0f00 	cmp.w	r8, #0
 8013a38:	bf0c      	ite	eq
 8013a3a:	4684      	moveq	ip, r0
 8013a3c:	f100 0c01 	addne.w	ip, r0, #1
 8013a40:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 8013a44:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 8013a48:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8013a4a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8013a4c:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 8013a50:	9903      	ldr	r1, [sp, #12]
 8013a52:	fa1f fc8c 	uxth.w	ip, ip
 8013a56:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 8013a5a:	d041      	beq.n	8013ae0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8013a5c:	d834      	bhi.n	8013ac8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 8013a5e:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 8013a62:	d059      	beq.n	8013b18 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 8013a64:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 8013a68:	d03a      	beq.n	8013ae0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8013a6a:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 8013a6e:	d034      	beq.n	8013ada <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8013a70:	2400      	movs	r4, #0
 8013a72:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 8013a76:	3a01      	subs	r2, #1
 8013a78:	b169      	cbz	r1, 8013a96 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8013a7a:	9911      	ldr	r1, [sp, #68]	; 0x44
 8013a7c:	458c      	cmp	ip, r1
 8013a7e:	da09      	bge.n	8013a94 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8013a80:	eba1 010c 	sub.w	r1, r1, ip
 8013a84:	b289      	uxth	r1, r1
 8013a86:	b933      	cbnz	r3, 8013a96 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8013a88:	2e00      	cmp	r6, #0
 8013a8a:	d051      	beq.n	8013b30 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8013a8c:	2800      	cmp	r0, #0
 8013a8e:	d04f      	beq.n	8013b30 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8013a90:	440c      	add	r4, r1
 8013a92:	b2a4      	uxth	r4, r4
 8013a94:	2100      	movs	r1, #0
 8013a96:	682b      	ldr	r3, [r5, #0]
 8013a98:	4293      	cmp	r3, r2
 8013a9a:	da07      	bge.n	8013aac <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8013a9c:	f1b8 0f00 	cmp.w	r8, #0
 8013aa0:	d004      	beq.n	8013aac <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8013aa2:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 8013aa6:	682b      	ldr	r3, [r5, #0]
 8013aa8:	3301      	adds	r3, #1
 8013aaa:	602b      	str	r3, [r5, #0]
 8013aac:	2730      	movs	r7, #48	; 0x30
 8013aae:	2c00      	cmp	r4, #0
 8013ab0:	d04e      	beq.n	8013b50 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8013ab2:	682e      	ldr	r6, [r5, #0]
 8013ab4:	3c01      	subs	r4, #1
 8013ab6:	42b2      	cmp	r2, r6
 8013ab8:	b2a4      	uxth	r4, r4
 8013aba:	dd49      	ble.n	8013b50 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8013abc:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8013ac0:	682b      	ldr	r3, [r5, #0]
 8013ac2:	3301      	adds	r3, #1
 8013ac4:	602b      	str	r3, [r5, #0]
 8013ac6:	e7f2      	b.n	8013aae <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 8013ac8:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 8013acc:	d01d      	beq.n	8013b0a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 8013ace:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 8013ad2:	d002      	beq.n	8013ada <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8013ad4:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 8013ad8:	e7c9      	b.n	8013a6e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 8013ada:	4684      	mov	ip, r0
 8013adc:	f04f 0800 	mov.w	r8, #0
 8013ae0:	2c00      	cmp	r4, #0
 8013ae2:	d0c6      	beq.n	8013a72 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8013ae4:	b947      	cbnz	r7, 8013af8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8013ae6:	2801      	cmp	r0, #1
 8013ae8:	d106      	bne.n	8013af8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8013aea:	8814      	ldrh	r4, [r2, #0]
 8013aec:	2c30      	cmp	r4, #48	; 0x30
 8013aee:	bf02      	ittt	eq
 8013af0:	3202      	addeq	r2, #2
 8013af2:	f8cb 2000 	streq.w	r2, [fp]
 8013af6:	4638      	moveq	r0, r7
 8013af8:	45bc      	cmp	ip, r7
 8013afa:	da14      	bge.n	8013b26 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 8013afc:	b2bf      	uxth	r7, r7
 8013afe:	eba7 040c 	sub.w	r4, r7, ip
 8013b02:	b2a4      	uxth	r4, r4
 8013b04:	46bc      	mov	ip, r7
 8013b06:	2600      	movs	r6, #0
 8013b08:	e7b3      	b.n	8013a72 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8013b0a:	4684      	mov	ip, r0
 8013b0c:	b16c      	cbz	r4, 8013b2a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 8013b0e:	42b8      	cmp	r0, r7
 8013b10:	dd00      	ble.n	8013b14 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 8013b12:	b2b8      	uxth	r0, r7
 8013b14:	2400      	movs	r4, #0
 8013b16:	e003      	b.n	8013b20 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 8013b18:	f04f 0c01 	mov.w	ip, #1
 8013b1c:	2400      	movs	r4, #0
 8013b1e:	4660      	mov	r0, ip
 8013b20:	4626      	mov	r6, r4
 8013b22:	46a0      	mov	r8, r4
 8013b24:	e7a5      	b.n	8013a72 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8013b26:	2400      	movs	r4, #0
 8013b28:	e7ed      	b.n	8013b06 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 8013b2a:	4626      	mov	r6, r4
 8013b2c:	46a0      	mov	r8, r4
 8013b2e:	e7a0      	b.n	8013a72 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8013b30:	2900      	cmp	r1, #0
 8013b32:	d0b0      	beq.n	8013a96 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8013b34:	2720      	movs	r7, #32
 8013b36:	682e      	ldr	r6, [r5, #0]
 8013b38:	2900      	cmp	r1, #0
 8013b3a:	d0ac      	beq.n	8013a96 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8013b3c:	3901      	subs	r1, #1
 8013b3e:	4296      	cmp	r6, r2
 8013b40:	b289      	uxth	r1, r1
 8013b42:	daa7      	bge.n	8013a94 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8013b44:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8013b48:	682b      	ldr	r3, [r5, #0]
 8013b4a:	3301      	adds	r3, #1
 8013b4c:	602b      	str	r3, [r5, #0]
 8013b4e:	e7f2      	b.n	8013b36 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 8013b50:	b188      	cbz	r0, 8013b76 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8013b52:	682b      	ldr	r3, [r5, #0]
 8013b54:	3801      	subs	r0, #1
 8013b56:	429a      	cmp	r2, r3
 8013b58:	b280      	uxth	r0, r0
 8013b5a:	dd0c      	ble.n	8013b76 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8013b5c:	f8db 3000 	ldr.w	r3, [fp]
 8013b60:	1c9c      	adds	r4, r3, #2
 8013b62:	f8cb 4000 	str.w	r4, [fp]
 8013b66:	881c      	ldrh	r4, [r3, #0]
 8013b68:	682b      	ldr	r3, [r5, #0]
 8013b6a:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 8013b6e:	682b      	ldr	r3, [r5, #0]
 8013b70:	3301      	adds	r3, #1
 8013b72:	602b      	str	r3, [r5, #0]
 8013b74:	e7ec      	b.n	8013b50 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8013b76:	2620      	movs	r6, #32
 8013b78:	b151      	cbz	r1, 8013b90 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8013b7a:	6828      	ldr	r0, [r5, #0]
 8013b7c:	3901      	subs	r1, #1
 8013b7e:	4282      	cmp	r2, r0
 8013b80:	b289      	uxth	r1, r1
 8013b82:	dd05      	ble.n	8013b90 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8013b84:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 8013b88:	682b      	ldr	r3, [r5, #0]
 8013b8a:	3301      	adds	r3, #1
 8013b8c:	602b      	str	r3, [r5, #0]
 8013b8e:	e7f3      	b.n	8013b78 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 8013b90:	b005      	add	sp, #20
 8013b92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08013b96 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 8013b96:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013b9a:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 8013b9e:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 8013ba2:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 8013ba6:	2400      	movs	r4, #0
 8013ba8:	8014      	strh	r4, [r2, #0]
 8013baa:	701c      	strb	r4, [r3, #0]
 8013bac:	f888 4000 	strb.w	r4, [r8]
 8013bb0:	f88c 4000 	strb.w	r4, [ip]
 8013bb4:	f88e 4000 	strb.w	r4, [lr]
 8013bb8:	703c      	strb	r4, [r7, #0]
 8013bba:	6804      	ldr	r4, [r0, #0]
 8013bbc:	b1a4      	cbz	r4, 8013be8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 8013bbe:	8824      	ldrh	r4, [r4, #0]
 8013bc0:	f04f 0901 	mov.w	r9, #1
 8013bc4:	b314      	cbz	r4, 8013c0c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8013bc6:	2c2b      	cmp	r4, #43	; 0x2b
 8013bc8:	d001      	beq.n	8013bce <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 8013bca:	2c20      	cmp	r4, #32
 8013bcc:	d110      	bne.n	8013bf0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 8013bce:	8014      	strh	r4, [r2, #0]
 8013bd0:	6804      	ldr	r4, [r0, #0]
 8013bd2:	b10c      	cbz	r4, 8013bd8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 8013bd4:	3402      	adds	r4, #2
 8013bd6:	6004      	str	r4, [r0, #0]
 8013bd8:	680c      	ldr	r4, [r1, #0]
 8013bda:	b10c      	cbz	r4, 8013be0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 8013bdc:	3401      	adds	r4, #1
 8013bde:	600c      	str	r4, [r1, #0]
 8013be0:	6804      	ldr	r4, [r0, #0]
 8013be2:	b17c      	cbz	r4, 8013c04 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 8013be4:	8824      	ldrh	r4, [r4, #0]
 8013be6:	e7ed      	b.n	8013bc4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8013be8:	680c      	ldr	r4, [r1, #0]
 8013bea:	b17c      	cbz	r4, 8013c0c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8013bec:	7824      	ldrb	r4, [r4, #0]
 8013bee:	e7e7      	b.n	8013bc0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 8013bf0:	2c2d      	cmp	r4, #45	; 0x2d
 8013bf2:	d102      	bne.n	8013bfa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 8013bf4:	f883 9000 	strb.w	r9, [r3]
 8013bf8:	e7ea      	b.n	8013bd0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8013bfa:	2c23      	cmp	r4, #35	; 0x23
 8013bfc:	d107      	bne.n	8013c0e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 8013bfe:	f888 9000 	strb.w	r9, [r8]
 8013c02:	e7e5      	b.n	8013bd0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8013c04:	680c      	ldr	r4, [r1, #0]
 8013c06:	b10c      	cbz	r4, 8013c0c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8013c08:	7824      	ldrb	r4, [r4, #0]
 8013c0a:	e7db      	b.n	8013bc4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8013c0c:	2400      	movs	r4, #0
 8013c0e:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8013c12:	2b09      	cmp	r3, #9
 8013c14:	d901      	bls.n	8013c1a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 8013c16:	2c2a      	cmp	r4, #42	; 0x2a
 8013c18:	d122      	bne.n	8013c60 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8013c1a:	2301      	movs	r3, #1
 8013c1c:	2c30      	cmp	r4, #48	; 0x30
 8013c1e:	f88e 3000 	strb.w	r3, [lr]
 8013c22:	d10d      	bne.n	8013c40 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8013c24:	f88c 3000 	strb.w	r3, [ip]
 8013c28:	6803      	ldr	r3, [r0, #0]
 8013c2a:	b10b      	cbz	r3, 8013c30 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 8013c2c:	3302      	adds	r3, #2
 8013c2e:	6003      	str	r3, [r0, #0]
 8013c30:	680b      	ldr	r3, [r1, #0]
 8013c32:	b10b      	cbz	r3, 8013c38 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 8013c34:	3301      	adds	r3, #1
 8013c36:	600b      	str	r3, [r1, #0]
 8013c38:	6803      	ldr	r3, [r0, #0]
 8013c3a:	2b00      	cmp	r3, #0
 8013c3c:	d02f      	beq.n	8013c9e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 8013c3e:	881c      	ldrh	r4, [r3, #0]
 8013c40:	2c2a      	cmp	r4, #42	; 0x2a
 8013c42:	d135      	bne.n	8013cb0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8013c44:	f04f 33ff 	mov.w	r3, #4294967295
 8013c48:	6033      	str	r3, [r6, #0]
 8013c4a:	6803      	ldr	r3, [r0, #0]
 8013c4c:	b10b      	cbz	r3, 8013c52 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 8013c4e:	3302      	adds	r3, #2
 8013c50:	6003      	str	r3, [r0, #0]
 8013c52:	680b      	ldr	r3, [r1, #0]
 8013c54:	b10b      	cbz	r3, 8013c5a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 8013c56:	3301      	adds	r3, #1
 8013c58:	600b      	str	r3, [r1, #0]
 8013c5a:	6803      	ldr	r3, [r0, #0]
 8013c5c:	b31b      	cbz	r3, 8013ca6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 8013c5e:	881c      	ldrh	r4, [r3, #0]
 8013c60:	2c2e      	cmp	r4, #46	; 0x2e
 8013c62:	d11a      	bne.n	8013c9a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8013c64:	2301      	movs	r3, #1
 8013c66:	703b      	strb	r3, [r7, #0]
 8013c68:	6803      	ldr	r3, [r0, #0]
 8013c6a:	b10b      	cbz	r3, 8013c70 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 8013c6c:	3302      	adds	r3, #2
 8013c6e:	6003      	str	r3, [r0, #0]
 8013c70:	680b      	ldr	r3, [r1, #0]
 8013c72:	b10b      	cbz	r3, 8013c78 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 8013c74:	3301      	adds	r3, #1
 8013c76:	600b      	str	r3, [r1, #0]
 8013c78:	6803      	ldr	r3, [r0, #0]
 8013c7a:	2b00      	cmp	r3, #0
 8013c7c:	d036      	beq.n	8013cec <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 8013c7e:	881b      	ldrh	r3, [r3, #0]
 8013c80:	2b2a      	cmp	r3, #42	; 0x2a
 8013c82:	d137      	bne.n	8013cf4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8013c84:	f04f 33ff 	mov.w	r3, #4294967295
 8013c88:	602b      	str	r3, [r5, #0]
 8013c8a:	6803      	ldr	r3, [r0, #0]
 8013c8c:	b10b      	cbz	r3, 8013c92 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 8013c8e:	3302      	adds	r3, #2
 8013c90:	6003      	str	r3, [r0, #0]
 8013c92:	680b      	ldr	r3, [r1, #0]
 8013c94:	b10b      	cbz	r3, 8013c9a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8013c96:	3301      	adds	r3, #1
 8013c98:	600b      	str	r3, [r1, #0]
 8013c9a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013c9e:	680c      	ldr	r4, [r1, #0]
 8013ca0:	b134      	cbz	r4, 8013cb0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8013ca2:	7824      	ldrb	r4, [r4, #0]
 8013ca4:	e7cc      	b.n	8013c40 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8013ca6:	680b      	ldr	r3, [r1, #0]
 8013ca8:	2b00      	cmp	r3, #0
 8013caa:	d0f6      	beq.n	8013c9a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8013cac:	781c      	ldrb	r4, [r3, #0]
 8013cae:	e7d7      	b.n	8013c60 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8013cb0:	2300      	movs	r3, #0
 8013cb2:	6033      	str	r3, [r6, #0]
 8013cb4:	220a      	movs	r2, #10
 8013cb6:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 8013cba:	fa1f f38c 	uxth.w	r3, ip
 8013cbe:	2b09      	cmp	r3, #9
 8013cc0:	d8ce      	bhi.n	8013c60 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8013cc2:	6833      	ldr	r3, [r6, #0]
 8013cc4:	fb02 c303 	mla	r3, r2, r3, ip
 8013cc8:	6033      	str	r3, [r6, #0]
 8013cca:	6803      	ldr	r3, [r0, #0]
 8013ccc:	b10b      	cbz	r3, 8013cd2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 8013cce:	3302      	adds	r3, #2
 8013cd0:	6003      	str	r3, [r0, #0]
 8013cd2:	680b      	ldr	r3, [r1, #0]
 8013cd4:	b10b      	cbz	r3, 8013cda <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 8013cd6:	3301      	adds	r3, #1
 8013cd8:	600b      	str	r3, [r1, #0]
 8013cda:	6803      	ldr	r3, [r0, #0]
 8013cdc:	b10b      	cbz	r3, 8013ce2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 8013cde:	881c      	ldrh	r4, [r3, #0]
 8013ce0:	e7e9      	b.n	8013cb6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8013ce2:	680c      	ldr	r4, [r1, #0]
 8013ce4:	2c00      	cmp	r4, #0
 8013ce6:	d0e6      	beq.n	8013cb6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8013ce8:	7824      	ldrb	r4, [r4, #0]
 8013cea:	e7e4      	b.n	8013cb6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8013cec:	680b      	ldr	r3, [r1, #0]
 8013cee:	b10b      	cbz	r3, 8013cf4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8013cf0:	781b      	ldrb	r3, [r3, #0]
 8013cf2:	e7c5      	b.n	8013c80 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 8013cf4:	2200      	movs	r2, #0
 8013cf6:	602a      	str	r2, [r5, #0]
 8013cf8:	240a      	movs	r4, #10
 8013cfa:	3b30      	subs	r3, #48	; 0x30
 8013cfc:	b29e      	uxth	r6, r3
 8013cfe:	2e09      	cmp	r6, #9
 8013d00:	682a      	ldr	r2, [r5, #0]
 8013d02:	d813      	bhi.n	8013d2c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 8013d04:	fb04 3302 	mla	r3, r4, r2, r3
 8013d08:	602b      	str	r3, [r5, #0]
 8013d0a:	6803      	ldr	r3, [r0, #0]
 8013d0c:	b10b      	cbz	r3, 8013d12 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 8013d0e:	3302      	adds	r3, #2
 8013d10:	6003      	str	r3, [r0, #0]
 8013d12:	680b      	ldr	r3, [r1, #0]
 8013d14:	b10b      	cbz	r3, 8013d1a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 8013d16:	3301      	adds	r3, #1
 8013d18:	600b      	str	r3, [r1, #0]
 8013d1a:	6803      	ldr	r3, [r0, #0]
 8013d1c:	b10b      	cbz	r3, 8013d22 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 8013d1e:	881b      	ldrh	r3, [r3, #0]
 8013d20:	e7eb      	b.n	8013cfa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8013d22:	680b      	ldr	r3, [r1, #0]
 8013d24:	2b00      	cmp	r3, #0
 8013d26:	d0e8      	beq.n	8013cfa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8013d28:	781b      	ldrb	r3, [r3, #0]
 8013d2a:	e7e6      	b.n	8013cfa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8013d2c:	2a06      	cmp	r2, #6
 8013d2e:	bfa8      	it	ge
 8013d30:	2206      	movge	r2, #6
 8013d32:	602a      	str	r2, [r5, #0]
 8013d34:	e7b1      	b.n	8013c9a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

08013d36 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 8013d36:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013d3a:	b0a3      	sub	sp, #140	; 0x8c
 8013d3c:	2600      	movs	r6, #0
 8013d3e:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 8013d42:	4607      	mov	r7, r0
 8013d44:	4688      	mov	r8, r1
 8013d46:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8013d4a:	4631      	mov	r1, r6
 8013d4c:	2242      	movs	r2, #66	; 0x42
 8013d4e:	4648      	mov	r0, r9
 8013d50:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 8013d52:	960d      	str	r6, [sp, #52]	; 0x34
 8013d54:	f00c fefa 	bl	8020b4c <memset>
 8013d58:	b15f      	cbz	r7, 8013d72 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 8013d5a:	f108 3aff 	add.w	sl, r8, #4294967295
 8013d5e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8013d60:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013d62:	b152      	cbz	r2, 8013d7a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 8013d64:	8812      	ldrh	r2, [r2, #0]
 8013d66:	b10a      	cbz	r2, 8013d6c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8013d68:	459a      	cmp	sl, r3
 8013d6a:	dc2e      	bgt.n	8013dca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 8013d6c:	2200      	movs	r2, #0
 8013d6e:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8013d72:	4638      	mov	r0, r7
 8013d74:	b023      	add	sp, #140	; 0x8c
 8013d76:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013d7a:	9a08      	ldr	r2, [sp, #32]
 8013d7c:	2a00      	cmp	r2, #0
 8013d7e:	d0f5      	beq.n	8013d6c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8013d80:	7812      	ldrb	r2, [r2, #0]
 8013d82:	e7f0      	b.n	8013d66 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 8013d84:	2d00      	cmp	r5, #0
 8013d86:	d0ea      	beq.n	8013d5e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8013d88:	782a      	ldrb	r2, [r5, #0]
 8013d8a:	b142      	cbz	r2, 8013d9e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 8013d8c:	2a25      	cmp	r2, #37	; 0x25
 8013d8e:	d001      	beq.n	8013d94 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 8013d90:	459a      	cmp	sl, r3
 8013d92:	dc08      	bgt.n	8013da6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 8013d94:	f1bb 0f00 	cmp.w	fp, #0
 8013d98:	d121      	bne.n	8013dde <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 8013d9a:	2d00      	cmp	r5, #0
 8013d9c:	d0df      	beq.n	8013d5e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8013d9e:	782a      	ldrb	r2, [r5, #0]
 8013da0:	f04f 0b00 	mov.w	fp, #0
 8013da4:	e01d      	b.n	8013de2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 8013da6:	f1bb 0f00 	cmp.w	fp, #0
 8013daa:	d078      	beq.n	8013e9e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 8013dac:	f8bb 2000 	ldrh.w	r2, [fp]
 8013db0:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8013db4:	f1bb 0f00 	cmp.w	fp, #0
 8013db8:	d002      	beq.n	8013dc0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 8013dba:	f10b 0202 	add.w	r2, fp, #2
 8013dbe:	9209      	str	r2, [sp, #36]	; 0x24
 8013dc0:	b10d      	cbz	r5, 8013dc6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 8013dc2:	3501      	adds	r5, #1
 8013dc4:	9508      	str	r5, [sp, #32]
 8013dc6:	3301      	adds	r3, #1
 8013dc8:	930d      	str	r3, [sp, #52]	; 0x34
 8013dca:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 8013dce:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013dd0:	f1bb 0f00 	cmp.w	fp, #0
 8013dd4:	d0d6      	beq.n	8013d84 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 8013dd6:	f8bb 2000 	ldrh.w	r2, [fp]
 8013dda:	2a00      	cmp	r2, #0
 8013ddc:	d1d6      	bne.n	8013d8c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 8013dde:	f8bb 2000 	ldrh.w	r2, [fp]
 8013de2:	2a00      	cmp	r2, #0
 8013de4:	d0bb      	beq.n	8013d5e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8013de6:	459a      	cmp	sl, r3
 8013de8:	ddb9      	ble.n	8013d5e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8013dea:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 8013dee:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 8013df2:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 8013df6:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 8013dfa:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 8013dfe:	960e      	str	r6, [sp, #56]	; 0x38
 8013e00:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 8013e04:	960f      	str	r6, [sp, #60]	; 0x3c
 8013e06:	f1bb 0f00 	cmp.w	fp, #0
 8013e0a:	d002      	beq.n	8013e12 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 8013e0c:	f10b 0302 	add.w	r3, fp, #2
 8013e10:	9309      	str	r3, [sp, #36]	; 0x24
 8013e12:	b10d      	cbz	r5, 8013e18 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 8013e14:	1c6b      	adds	r3, r5, #1
 8013e16:	9308      	str	r3, [sp, #32]
 8013e18:	ab0f      	add	r3, sp, #60	; 0x3c
 8013e1a:	9305      	str	r3, [sp, #20]
 8013e1c:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 8013e20:	9304      	str	r3, [sp, #16]
 8013e22:	ab0e      	add	r3, sp, #56	; 0x38
 8013e24:	9303      	str	r3, [sp, #12]
 8013e26:	ab0c      	add	r3, sp, #48	; 0x30
 8013e28:	9302      	str	r3, [sp, #8]
 8013e2a:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 8013e2e:	9301      	str	r3, [sp, #4]
 8013e30:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8013e34:	9300      	str	r3, [sp, #0]
 8013e36:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 8013e3a:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 8013e3e:	a908      	add	r1, sp, #32
 8013e40:	a809      	add	r0, sp, #36	; 0x24
 8013e42:	f7ff fea8 	bl	8013b96 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8013e46:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013e48:	2b00      	cmp	r3, #0
 8013e4a:	bfbe      	ittt	lt
 8013e4c:	6823      	ldrlt	r3, [r4, #0]
 8013e4e:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8013e52:	930e      	strlt	r3, [sp, #56]	; 0x38
 8013e54:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8013e56:	bfb8      	it	lt
 8013e58:	3404      	addlt	r4, #4
 8013e5a:	2b00      	cmp	r3, #0
 8013e5c:	bfb8      	it	lt
 8013e5e:	6823      	ldrlt	r3, [r4, #0]
 8013e60:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8013e64:	bfbe      	ittt	lt
 8013e66:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8013e6a:	930f      	strlt	r3, [sp, #60]	; 0x3c
 8013e6c:	3404      	addlt	r4, #4
 8013e6e:	b1d9      	cbz	r1, 8013ea8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 8013e70:	880b      	ldrh	r3, [r1, #0]
 8013e72:	2b69      	cmp	r3, #105	; 0x69
 8013e74:	d01f      	beq.n	8013eb6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8013e76:	d82f      	bhi.n	8013ed8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 8013e78:	2b58      	cmp	r3, #88	; 0x58
 8013e7a:	d01c      	beq.n	8013eb6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8013e7c:	d818      	bhi.n	8013eb0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 8013e7e:	2b25      	cmp	r3, #37	; 0x25
 8013e80:	d034      	beq.n	8013eec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 8013e82:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 8013e86:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013e88:	f1bb 0f00 	cmp.w	fp, #0
 8013e8c:	f000 80b8 	beq.w	8014000 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 8013e90:	f8bb 5000 	ldrh.w	r5, [fp]
 8013e94:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 8013e98:	3301      	adds	r3, #1
 8013e9a:	930d      	str	r3, [sp, #52]	; 0x34
 8013e9c:	e029      	b.n	8013ef2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8013e9e:	b10d      	cbz	r5, 8013ea4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 8013ea0:	782a      	ldrb	r2, [r5, #0]
 8013ea2:	e785      	b.n	8013db0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8013ea4:	462a      	mov	r2, r5
 8013ea6:	e783      	b.n	8013db0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8013ea8:	2a00      	cmp	r2, #0
 8013eaa:	d0ea      	beq.n	8013e82 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8013eac:	7813      	ldrb	r3, [r2, #0]
 8013eae:	e7e0      	b.n	8013e72 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 8013eb0:	3b63      	subs	r3, #99	; 0x63
 8013eb2:	2b01      	cmp	r3, #1
 8013eb4:	d8e5      	bhi.n	8013e82 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8013eb6:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 8013eba:	b329      	cbz	r1, 8013f08 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 8013ebc:	880b      	ldrh	r3, [r1, #0]
 8013ebe:	2b69      	cmp	r3, #105	; 0x69
 8013ec0:	d063      	beq.n	8013f8a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8013ec2:	d825      	bhi.n	8013f10 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 8013ec4:	2b63      	cmp	r3, #99	; 0x63
 8013ec6:	d038      	beq.n	8013f3a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 8013ec8:	2b64      	cmp	r3, #100	; 0x64
 8013eca:	d05e      	beq.n	8013f8a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8013ecc:	2b58      	cmp	r3, #88	; 0x58
 8013ece:	d07b      	beq.n	8013fc8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 8013ed0:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 8013ed4:	4625      	mov	r5, r4
 8013ed6:	e036      	b.n	8013f46 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8013ed8:	2b73      	cmp	r3, #115	; 0x73
 8013eda:	d0ec      	beq.n	8013eb6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8013edc:	d802      	bhi.n	8013ee4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 8013ede:	2b6f      	cmp	r3, #111	; 0x6f
 8013ee0:	d1cf      	bne.n	8013e82 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8013ee2:	e7e8      	b.n	8013eb6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8013ee4:	2b75      	cmp	r3, #117	; 0x75
 8013ee6:	d0e6      	beq.n	8013eb6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8013ee8:	2b78      	cmp	r3, #120	; 0x78
 8013eea:	e7f9      	b.n	8013ee0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 8013eec:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8013eee:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 8013ef2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013ef4:	b10b      	cbz	r3, 8013efa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 8013ef6:	3302      	adds	r3, #2
 8013ef8:	9309      	str	r3, [sp, #36]	; 0x24
 8013efa:	9b08      	ldr	r3, [sp, #32]
 8013efc:	2b00      	cmp	r3, #0
 8013efe:	f43f af2e 	beq.w	8013d5e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8013f02:	3301      	adds	r3, #1
 8013f04:	9308      	str	r3, [sp, #32]
 8013f06:	e72a      	b.n	8013d5e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8013f08:	2a00      	cmp	r2, #0
 8013f0a:	d0e1      	beq.n	8013ed0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8013f0c:	7813      	ldrb	r3, [r2, #0]
 8013f0e:	e7d6      	b.n	8013ebe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 8013f10:	2b73      	cmp	r3, #115	; 0x73
 8013f12:	d036      	beq.n	8013f82 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 8013f14:	d807      	bhi.n	8013f26 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 8013f16:	2b6f      	cmp	r3, #111	; 0x6f
 8013f18:	d1da      	bne.n	8013ed0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8013f1a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8013f1c:	1d25      	adds	r5, r4, #4
 8013f1e:	eba8 0202 	sub.w	r2, r8, r2
 8013f22:	2308      	movs	r3, #8
 8013f24:	e04a      	b.n	8013fbc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8013f26:	2b75      	cmp	r3, #117	; 0x75
 8013f28:	d043      	beq.n	8013fb2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 8013f2a:	2b78      	cmp	r3, #120	; 0x78
 8013f2c:	d1d0      	bne.n	8013ed0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8013f2e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8013f30:	1d25      	adds	r5, r4, #4
 8013f32:	eba8 0202 	sub.w	r2, r8, r2
 8013f36:	2310      	movs	r3, #16
 8013f38:	e040      	b.n	8013fbc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8013f3a:	6823      	ldr	r3, [r4, #0]
 8013f3c:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 8013f40:	1d25      	adds	r5, r4, #4
 8013f42:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 8013f46:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013f48:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 8013f4c:	2b00      	cmp	r3, #0
 8013f4e:	d052      	beq.n	8013ff6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 8013f50:	881a      	ldrh	r2, [r3, #0]
 8013f52:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 8013f56:	a80d      	add	r0, sp, #52	; 0x34
 8013f58:	9005      	str	r0, [sp, #20]
 8013f5a:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 8013f5e:	9004      	str	r0, [sp, #16]
 8013f60:	980e      	ldr	r0, [sp, #56]	; 0x38
 8013f62:	9003      	str	r0, [sp, #12]
 8013f64:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 8013f68:	9002      	str	r0, [sp, #8]
 8013f6a:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8013f6c:	9001      	str	r0, [sp, #4]
 8013f6e:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 8013f72:	9000      	str	r0, [sp, #0]
 8013f74:	e9cd 8706 	strd	r8, r7, [sp, #24]
 8013f78:	a810      	add	r0, sp, #64	; 0x40
 8013f7a:	f7ff fd49 	bl	8013a10 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 8013f7e:	462c      	mov	r4, r5
 8013f80:	e7b7      	b.n	8013ef2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8013f82:	6823      	ldr	r3, [r4, #0]
 8013f84:	1d25      	adds	r5, r4, #4
 8013f86:	9310      	str	r3, [sp, #64]	; 0x40
 8013f88:	e7dd      	b.n	8013f46 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8013f8a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8013f8c:	6820      	ldr	r0, [r4, #0]
 8013f8e:	eba8 0202 	sub.w	r2, r8, r2
 8013f92:	230a      	movs	r3, #10
 8013f94:	b292      	uxth	r2, r2
 8013f96:	4649      	mov	r1, r9
 8013f98:	f7ff fd08 	bl	80139ac <_ZN8touchgfx7Unicode4itoaElPtti>
 8013f9c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8013fa0:	2b2d      	cmp	r3, #45	; 0x2d
 8013fa2:	f104 0504 	add.w	r5, r4, #4
 8013fa6:	d1ce      	bne.n	8013f46 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8013fa8:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8013fac:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013fae:	3302      	adds	r3, #2
 8013fb0:	e7e9      	b.n	8013f86 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 8013fb2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8013fb4:	1d25      	adds	r5, r4, #4
 8013fb6:	eba8 0202 	sub.w	r2, r8, r2
 8013fba:	230a      	movs	r3, #10
 8013fbc:	b292      	uxth	r2, r2
 8013fbe:	4649      	mov	r1, r9
 8013fc0:	6820      	ldr	r0, [r4, #0]
 8013fc2:	f7ff fcd5 	bl	8013970 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 8013fc6:	e7be      	b.n	8013f46 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8013fc8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8013fca:	6820      	ldr	r0, [r4, #0]
 8013fcc:	eba8 0202 	sub.w	r2, r8, r2
 8013fd0:	b292      	uxth	r2, r2
 8013fd2:	2310      	movs	r3, #16
 8013fd4:	4649      	mov	r1, r9
 8013fd6:	f7ff fccb 	bl	8013970 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 8013fda:	1d25      	adds	r5, r4, #4
 8013fdc:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 8013fe0:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 8013fe4:	2b00      	cmp	r3, #0
 8013fe6:	d0ae      	beq.n	8013f46 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8013fe8:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 8013fec:	2919      	cmp	r1, #25
 8013fee:	d8f7      	bhi.n	8013fe0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8013ff0:	3b20      	subs	r3, #32
 8013ff2:	8013      	strh	r3, [r2, #0]
 8013ff4:	e7f4      	b.n	8013fe0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8013ff6:	9a08      	ldr	r2, [sp, #32]
 8013ff8:	2a00      	cmp	r2, #0
 8013ffa:	d0aa      	beq.n	8013f52 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8013ffc:	7812      	ldrb	r2, [r2, #0]
 8013ffe:	e7a8      	b.n	8013f52 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8014000:	2d00      	cmp	r5, #0
 8014002:	f43f af47 	beq.w	8013e94 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 8014006:	782d      	ldrb	r5, [r5, #0]
 8014008:	e744      	b.n	8013e94 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

0801400a <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 801400a:	b507      	push	{r0, r1, r2, lr}
 801400c:	9300      	str	r3, [sp, #0]
 801400e:	4613      	mov	r3, r2
 8014010:	2200      	movs	r2, #0
 8014012:	f7ff fe90 	bl	8013d36 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 8014016:	b003      	add	sp, #12
 8014018:	f85d fb04 	ldr.w	pc, [sp], #4

0801401c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 801401c:	b40c      	push	{r2, r3}
 801401e:	b507      	push	{r0, r1, r2, lr}
 8014020:	ab04      	add	r3, sp, #16
 8014022:	f853 2b04 	ldr.w	r2, [r3], #4
 8014026:	9301      	str	r3, [sp, #4]
 8014028:	f7ff ffef 	bl	801400a <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 801402c:	b003      	add	sp, #12
 801402e:	f85d eb04 	ldr.w	lr, [sp], #4
 8014032:	b002      	add	sp, #8
 8014034:	4770      	bx	lr
	...

08014038 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>:
 8014038:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801403c:	b0c3      	sub	sp, #268	; 0x10c
 801403e:	2600      	movs	r6, #0
 8014040:	f10d 0840 	add.w	r8, sp, #64	; 0x40
 8014044:	4607      	mov	r7, r0
 8014046:	4689      	mov	r9, r1
 8014048:	e9cd 3208 	strd	r3, r2, [sp, #32]
 801404c:	4631      	mov	r1, r6
 801404e:	22c8      	movs	r2, #200	; 0xc8
 8014050:	4640      	mov	r0, r8
 8014052:	f8dd a130 	ldr.w	sl, [sp, #304]	; 0x130
 8014056:	960c      	str	r6, [sp, #48]	; 0x30
 8014058:	f00c fd78 	bl	8020b4c <memset>
 801405c:	b17f      	cbz	r7, 801407e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x46>
 801405e:	eddf 5aa4 	vldr	s11, [pc, #656]	; 80142f0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2b8>
 8014062:	f8df b298 	ldr.w	fp, [pc, #664]	; 80142fc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c4>
 8014066:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8014068:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801406a:	b162      	cbz	r2, 8014086 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x4e>
 801406c:	8812      	ldrh	r2, [r2, #0]
 801406e:	b11a      	cbz	r2, 8014078 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x40>
 8014070:	f109 31ff 	add.w	r1, r9, #4294967295
 8014074:	4299      	cmp	r1, r3
 8014076:	dc26      	bgt.n	80140c6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x8e>
 8014078:	2200      	movs	r2, #0
 801407a:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 801407e:	4638      	mov	r0, r7
 8014080:	b043      	add	sp, #268	; 0x10c
 8014082:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014086:	9a08      	ldr	r2, [sp, #32]
 8014088:	2a00      	cmp	r2, #0
 801408a:	d0f5      	beq.n	8014078 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x40>
 801408c:	7812      	ldrb	r2, [r2, #0]
 801408e:	e7ee      	b.n	801406e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36>
 8014090:	2c00      	cmp	r4, #0
 8014092:	d0e8      	beq.n	8014066 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 8014094:	7822      	ldrb	r2, [r4, #0]
 8014096:	b132      	cbz	r2, 80140a6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x6e>
 8014098:	2a25      	cmp	r2, #37	; 0x25
 801409a:	d001      	beq.n	80140a0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x68>
 801409c:	4299      	cmp	r1, r3
 801409e:	dc05      	bgt.n	80140ac <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x74>
 80140a0:	b9cd      	cbnz	r5, 80140d6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x9e>
 80140a2:	2c00      	cmp	r4, #0
 80140a4:	d0df      	beq.n	8014066 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 80140a6:	7822      	ldrb	r2, [r4, #0]
 80140a8:	2500      	movs	r5, #0
 80140aa:	e015      	b.n	80140d8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xa0>
 80140ac:	2d00      	cmp	r5, #0
 80140ae:	d073      	beq.n	8014198 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x160>
 80140b0:	882a      	ldrh	r2, [r5, #0]
 80140b2:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 80140b6:	b10d      	cbz	r5, 80140bc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x84>
 80140b8:	3502      	adds	r5, #2
 80140ba:	9509      	str	r5, [sp, #36]	; 0x24
 80140bc:	b10c      	cbz	r4, 80140c2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x8a>
 80140be:	3401      	adds	r4, #1
 80140c0:	9408      	str	r4, [sp, #32]
 80140c2:	3301      	adds	r3, #1
 80140c4:	930c      	str	r3, [sp, #48]	; 0x30
 80140c6:	e9dd 4508 	ldrd	r4, r5, [sp, #32]
 80140ca:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80140cc:	2d00      	cmp	r5, #0
 80140ce:	d0df      	beq.n	8014090 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x58>
 80140d0:	882a      	ldrh	r2, [r5, #0]
 80140d2:	2a00      	cmp	r2, #0
 80140d4:	d1e0      	bne.n	8014098 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x60>
 80140d6:	882a      	ldrh	r2, [r5, #0]
 80140d8:	2a00      	cmp	r2, #0
 80140da:	d0c4      	beq.n	8014066 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 80140dc:	4299      	cmp	r1, r3
 80140de:	ddc2      	ble.n	8014066 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 80140e0:	2300      	movs	r3, #0
 80140e2:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 80140e6:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80140ea:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80140ee:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 80140f2:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 80140f6:	930d      	str	r3, [sp, #52]	; 0x34
 80140f8:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
 80140fc:	930e      	str	r3, [sp, #56]	; 0x38
 80140fe:	b10d      	cbz	r5, 8014104 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xcc>
 8014100:	1cab      	adds	r3, r5, #2
 8014102:	9309      	str	r3, [sp, #36]	; 0x24
 8014104:	b10c      	cbz	r4, 801410a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xd2>
 8014106:	1c63      	adds	r3, r4, #1
 8014108:	9308      	str	r3, [sp, #32]
 801410a:	ab0e      	add	r3, sp, #56	; 0x38
 801410c:	9305      	str	r3, [sp, #20]
 801410e:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 8014112:	9304      	str	r3, [sp, #16]
 8014114:	ab0d      	add	r3, sp, #52	; 0x34
 8014116:	9303      	str	r3, [sp, #12]
 8014118:	ab0b      	add	r3, sp, #44	; 0x2c
 801411a:	9302      	str	r3, [sp, #8]
 801411c:	f10d 032b 	add.w	r3, sp, #43	; 0x2b
 8014120:	9301      	str	r3, [sp, #4]
 8014122:	f10d 032a 	add.w	r3, sp, #42	; 0x2a
 8014126:	9300      	str	r3, [sp, #0]
 8014128:	f10d 022e 	add.w	r2, sp, #46	; 0x2e
 801412c:	f10d 0329 	add.w	r3, sp, #41	; 0x29
 8014130:	a908      	add	r1, sp, #32
 8014132:	a809      	add	r0, sp, #36	; 0x24
 8014134:	f7ff fd2f 	bl	8013b96 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8014138:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801413a:	2b00      	cmp	r3, #0
 801413c:	da0b      	bge.n	8014156 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x11e>
 801413e:	eb0a 0386 	add.w	r3, sl, r6, lsl #2
 8014142:	edd3 7a00 	vldr	s15, [r3]
 8014146:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801414a:	3601      	adds	r6, #1
 801414c:	ee17 3a90 	vmov	r3, s15
 8014150:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014154:	930d      	str	r3, [sp, #52]	; 0x34
 8014156:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014158:	2b00      	cmp	r3, #0
 801415a:	da0b      	bge.n	8014174 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x13c>
 801415c:	eb0a 0386 	add.w	r3, sl, r6, lsl #2
 8014160:	edd3 7a00 	vldr	s15, [r3]
 8014164:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8014168:	3601      	adds	r6, #1
 801416a:	ee17 3a90 	vmov	r3, s15
 801416e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014172:	930e      	str	r3, [sp, #56]	; 0x38
 8014174:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014176:	b1a3      	cbz	r3, 80141a2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x16a>
 8014178:	881a      	ldrh	r2, [r3, #0]
 801417a:	2a25      	cmp	r2, #37	; 0x25
 801417c:	d016      	beq.n	80141ac <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x174>
 801417e:	2a66      	cmp	r2, #102	; 0x66
 8014180:	d01a      	beq.n	80141b8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x180>
 8014182:	e9cd 4508 	strd	r4, r5, [sp, #32]
 8014186:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014188:	2d00      	cmp	r5, #0
 801418a:	f000 80fe 	beq.w	801438a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x352>
 801418e:	882c      	ldrh	r4, [r5, #0]
 8014190:	f827 4013 	strh.w	r4, [r7, r3, lsl #1]
 8014194:	3301      	adds	r3, #1
 8014196:	e00d      	b.n	80141b4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x17c>
 8014198:	b10c      	cbz	r4, 801419e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x166>
 801419a:	7822      	ldrb	r2, [r4, #0]
 801419c:	e789      	b.n	80140b2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7a>
 801419e:	4622      	mov	r2, r4
 80141a0:	e787      	b.n	80140b2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7a>
 80141a2:	9b08      	ldr	r3, [sp, #32]
 80141a4:	2b00      	cmp	r3, #0
 80141a6:	d0ec      	beq.n	8014182 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x14a>
 80141a8:	781a      	ldrb	r2, [r3, #0]
 80141aa:	e7e6      	b.n	801417a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x142>
 80141ac:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80141ae:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 80141b2:	3302      	adds	r3, #2
 80141b4:	930c      	str	r3, [sp, #48]	; 0x30
 80141b6:	e042      	b.n	801423e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x206>
 80141b8:	eb0a 0386 	add.w	r3, sl, r6, lsl #2
 80141bc:	edd3 7a00 	vldr	s15, [r3]
 80141c0:	f89d 302d 	ldrb.w	r3, [sp, #45]	; 0x2d
 80141c4:	f8cd 803c 	str.w	r8, [sp, #60]	; 0x3c
 80141c8:	3601      	adds	r6, #1
 80141ca:	b923      	cbnz	r3, 80141d6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x19e>
 80141cc:	2301      	movs	r3, #1
 80141ce:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
 80141d2:	2306      	movs	r3, #6
 80141d4:	930e      	str	r3, [sp, #56]	; 0x38
 80141d6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80141da:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80141de:	bf48      	it	mi
 80141e0:	eef1 7a67 	vnegmi.f32	s15, s15
 80141e4:	eeb0 7ae7 	vabs.f32	s14, s15
 80141e8:	bf48      	it	mi
 80141ea:	232d      	movmi	r3, #45	; 0x2d
 80141ec:	eeb4 7a65 	vcmp.f32	s14, s11
 80141f0:	bf48      	it	mi
 80141f2:	f8ad 302e 	strhmi.w	r3, [sp, #46]	; 0x2e
 80141f6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80141fa:	dd2b      	ble.n	8014254 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x21c>
 80141fc:	f8cd b040 	str.w	fp, [sp, #64]	; 0x40
 8014200:	2366      	movs	r3, #102	; 0x66
 8014202:	9311      	str	r3, [sp, #68]	; 0x44
 8014204:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014206:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 801420a:	2b00      	cmp	r3, #0
 801420c:	f000 80b7 	beq.w	801437e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x346>
 8014210:	881a      	ldrh	r2, [r3, #0]
 8014212:	f89d 302d 	ldrb.w	r3, [sp, #45]	; 0x2d
 8014216:	a80c      	add	r0, sp, #48	; 0x30
 8014218:	9005      	str	r0, [sp, #20]
 801421a:	f89d 0029 	ldrb.w	r0, [sp, #41]	; 0x29
 801421e:	9004      	str	r0, [sp, #16]
 8014220:	980d      	ldr	r0, [sp, #52]	; 0x34
 8014222:	9003      	str	r0, [sp, #12]
 8014224:	f89d 002c 	ldrb.w	r0, [sp, #44]	; 0x2c
 8014228:	9002      	str	r0, [sp, #8]
 801422a:	980e      	ldr	r0, [sp, #56]	; 0x38
 801422c:	9001      	str	r0, [sp, #4]
 801422e:	f89d 002b 	ldrb.w	r0, [sp, #43]	; 0x2b
 8014232:	9000      	str	r0, [sp, #0]
 8014234:	e9cd 9706 	strd	r9, r7, [sp, #24]
 8014238:	a80f      	add	r0, sp, #60	; 0x3c
 801423a:	f7ff fbe9 	bl	8013a10 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 801423e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014240:	b10b      	cbz	r3, 8014246 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x20e>
 8014242:	3302      	adds	r3, #2
 8014244:	9309      	str	r3, [sp, #36]	; 0x24
 8014246:	9b08      	ldr	r3, [sp, #32]
 8014248:	2b00      	cmp	r3, #0
 801424a:	f43f af0c 	beq.w	8014066 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 801424e:	3301      	adds	r3, #1
 8014250:	9308      	str	r3, [sp, #32]
 8014252:	e708      	b.n	8014066 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 8014254:	eef4 7a67 	vcmp.f32	s15, s15
 8014258:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801425c:	d60b      	bvs.n	8014276 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x23e>
 801425e:	980e      	ldr	r0, [sp, #56]	; 0x38
 8014260:	ed9f 7a24 	vldr	s14, [pc, #144]	; 80142f4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2bc>
 8014264:	2300      	movs	r3, #0
 8014266:	eeb2 6a04 	vmov.f32	s12, #36	; 0x41200000  10.0
 801426a:	4283      	cmp	r3, r0
 801426c:	da07      	bge.n	801427e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x246>
 801426e:	ee87 7a06 	vdiv.f32	s14, s14, s12
 8014272:	3301      	adds	r3, #1
 8014274:	e7f9      	b.n	801426a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x232>
 8014276:	4b20      	ldr	r3, [pc, #128]	; (80142f8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c0>)
 8014278:	9310      	str	r3, [sp, #64]	; 0x40
 801427a:	236e      	movs	r3, #110	; 0x6e
 801427c:	e7c1      	b.n	8014202 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1ca>
 801427e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8014282:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8014286:	eeb0 7a67 	vmov.f32	s14, s15
 801428a:	eeb4 7ac6 	vcmpe.f32	s14, s12
 801428e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014292:	da27      	bge.n	80142e4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2ac>
 8014294:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8014296:	2100      	movs	r1, #0
 8014298:	eeb6 5a00 	vmov.f32	s10, #96	; 0x3f000000  0.5
 801429c:	eba9 0202 	sub.w	r2, r9, r2
 80142a0:	eef4 6ac5 	vcmpe.f32	s13, s10
 80142a4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80142a8:	b28c      	uxth	r4, r1
 80142aa:	db2a      	blt.n	8014302 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2ca>
 80142ac:	1a53      	subs	r3, r2, r1
 80142ae:	2b00      	cmp	r3, #0
 80142b0:	dd27      	ble.n	8014302 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2ca>
 80142b2:	2963      	cmp	r1, #99	; 0x63
 80142b4:	d024      	beq.n	8014300 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c8>
 80142b6:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 80142ba:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 80142be:	ee17 3a10 	vmov	r3, s14
 80142c2:	2b09      	cmp	r3, #9
 80142c4:	bfa8      	it	ge
 80142c6:	2309      	movge	r3, #9
 80142c8:	ee07 3a10 	vmov	s14, r3
 80142cc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80142d0:	f103 0430 	add.w	r4, r3, #48	; 0x30
 80142d4:	f828 4011 	strh.w	r4, [r8, r1, lsl #1]
 80142d8:	eee7 7a66 	vfms.f32	s15, s14, s13
 80142dc:	3101      	adds	r1, #1
 80142de:	eec6 6a86 	vdiv.f32	s13, s13, s12
 80142e2:	e7dd      	b.n	80142a0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x268>
 80142e4:	ee66 6a86 	vmul.f32	s13, s13, s12
 80142e8:	ee87 7a06 	vdiv.f32	s14, s14, s12
 80142ec:	e7cd      	b.n	801428a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x252>
 80142ee:	bf00      	nop
 80142f0:	7f7fffff 	.word	0x7f7fffff
 80142f4:	3f000002 	.word	0x3f000002
 80142f8:	0061006e 	.word	0x0061006e
 80142fc:	006e0069 	.word	0x006e0069
 8014300:	460c      	mov	r4, r1
 8014302:	2a63      	cmp	r2, #99	; 0x63
 8014304:	bfd4      	ite	le
 8014306:	ebc4 0202 	rsble	r2, r4, r2
 801430a:	f1c4 0263 	rsbgt	r2, r4, #99	; 0x63
 801430e:	2a00      	cmp	r2, #0
 8014310:	dd30      	ble.n	8014374 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x33c>
 8014312:	4603      	mov	r3, r0
 8014314:	2501      	movs	r5, #1
 8014316:	210a      	movs	r1, #10
 8014318:	2b00      	cmp	r3, #0
 801431a:	dd0d      	ble.n	8014338 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x300>
 801431c:	ee67 7a86 	vmul.f32	s15, s15, s12
 8014320:	3b01      	subs	r3, #1
 8014322:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8014326:	ee17 ca10 	vmov	ip, s14
 801432a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801432e:	fb01 c505 	mla	r5, r1, r5, ip
 8014332:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8014336:	e7ef      	b.n	8014318 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e0>
 8014338:	2800      	cmp	r0, #0
 801433a:	f100 33ff 	add.w	r3, r0, #4294967295
 801433e:	bfac      	ite	ge
 8014340:	1a18      	subge	r0, r3, r0
 8014342:	4618      	movlt	r0, r3
 8014344:	0064      	lsls	r4, r4, #1
 8014346:	900e      	str	r0, [sp, #56]	; 0x38
 8014348:	230a      	movs	r3, #10
 801434a:	b292      	uxth	r2, r2
 801434c:	eb08 0104 	add.w	r1, r8, r4
 8014350:	4628      	mov	r0, r5
 8014352:	f7ff fb2b 	bl	80139ac <_ZN8touchgfx7Unicode4itoaElPtti>
 8014356:	2d01      	cmp	r5, #1
 8014358:	dc0a      	bgt.n	8014370 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x338>
 801435a:	f89d 302a 	ldrb.w	r3, [sp, #42]	; 0x2a
 801435e:	2b00      	cmp	r3, #0
 8014360:	bf0c      	ite	eq
 8014362:	2300      	moveq	r3, #0
 8014364:	232e      	movne	r3, #46	; 0x2e
 8014366:	aa42      	add	r2, sp, #264	; 0x108
 8014368:	4414      	add	r4, r2
 801436a:	f824 3cc8 	strh.w	r3, [r4, #-200]
 801436e:	e749      	b.n	8014204 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1cc>
 8014370:	232e      	movs	r3, #46	; 0x2e
 8014372:	e7f8      	b.n	8014366 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x32e>
 8014374:	ab42      	add	r3, sp, #264	; 0x108
 8014376:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 801437a:	2300      	movs	r3, #0
 801437c:	e7f5      	b.n	801436a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x332>
 801437e:	9a08      	ldr	r2, [sp, #32]
 8014380:	2a00      	cmp	r2, #0
 8014382:	f43f af46 	beq.w	8014212 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1da>
 8014386:	7812      	ldrb	r2, [r2, #0]
 8014388:	e743      	b.n	8014212 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1da>
 801438a:	2c00      	cmp	r4, #0
 801438c:	f43f af00 	beq.w	8014190 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x158>
 8014390:	7824      	ldrb	r4, [r4, #0]
 8014392:	e6fd      	b.n	8014190 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x158>

08014394 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>:
 8014394:	b507      	push	{r0, r1, r2, lr}
 8014396:	9300      	str	r3, [sp, #0]
 8014398:	4613      	mov	r3, r2
 801439a:	2200      	movs	r2, #0
 801439c:	f7ff fe4c 	bl	8014038 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>
 80143a0:	b003      	add	sp, #12
 80143a2:	f85d fb04 	ldr.w	pc, [sp], #4
	...

080143a8 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 80143a8:	4b01      	ldr	r3, [pc, #4]	; (80143b0 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 80143aa:	6018      	str	r0, [r3, #0]
 80143ac:	4770      	bx	lr
 80143ae:	bf00      	nop
 80143b0:	2001561c 	.word	0x2001561c

080143b4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 80143b4:	4b06      	ldr	r3, [pc, #24]	; (80143d0 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 80143b6:	881a      	ldrh	r2, [r3, #0]
 80143b8:	4282      	cmp	r2, r0
 80143ba:	d807      	bhi.n	80143cc <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 80143bc:	4b05      	ldr	r3, [pc, #20]	; (80143d4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 80143be:	881b      	ldrh	r3, [r3, #0]
 80143c0:	4413      	add	r3, r2
 80143c2:	4298      	cmp	r0, r3
 80143c4:	bfac      	ite	ge
 80143c6:	2000      	movge	r0, #0
 80143c8:	2001      	movlt	r0, #1
 80143ca:	4770      	bx	lr
 80143cc:	2000      	movs	r0, #0
 80143ce:	4770      	bx	lr
 80143d0:	2001563c 	.word	0x2001563c
 80143d4:	20015640 	.word	0x20015640

080143d8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 80143d8:	b508      	push	{r3, lr}
 80143da:	4601      	mov	r1, r0
 80143dc:	f7ff ffea 	bl	80143b4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 80143e0:	b118      	cbz	r0, 80143ea <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 80143e2:	4b02      	ldr	r3, [pc, #8]	; (80143ec <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 80143e4:	681b      	ldr	r3, [r3, #0]
 80143e6:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 80143ea:	bd08      	pop	{r3, pc}
 80143ec:	20015620 	.word	0x20015620

080143f0 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 80143f0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80143f2:	4c24      	ldr	r4, [pc, #144]	; (8014484 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 80143f4:	6823      	ldr	r3, [r4, #0]
 80143f6:	2b00      	cmp	r3, #0
 80143f8:	d042      	beq.n	8014480 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 80143fa:	4a23      	ldr	r2, [pc, #140]	; (8014488 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 80143fc:	4d23      	ldr	r5, [pc, #140]	; (801448c <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 80143fe:	8811      	ldrh	r1, [r2, #0]
 8014400:	f8b5 c000 	ldrh.w	ip, [r5]
 8014404:	4822      	ldr	r0, [pc, #136]	; (8014490 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 8014406:	4461      	add	r1, ip
 8014408:	1c4a      	adds	r2, r1, #1
 801440a:	f022 0201 	bic.w	r2, r2, #1
 801440e:	008f      	lsls	r7, r1, #2
 8014410:	0412      	lsls	r2, r2, #16
 8014412:	19de      	adds	r6, r3, r7
 8014414:	0c12      	lsrs	r2, r2, #16
 8014416:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 801441a:	6006      	str	r6, [r0, #0]
 801441c:	4e1d      	ldr	r6, [pc, #116]	; (8014494 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 801441e:	19da      	adds	r2, r3, r7
 8014420:	6032      	str	r2, [r6, #0]
 8014422:	220e      	movs	r2, #14
 8014424:	fb02 f20c 	mul.w	r2, r2, ip
 8014428:	3203      	adds	r2, #3
 801442a:	f022 0203 	bic.w	r2, r2, #3
 801442e:	443a      	add	r2, r7
 8014430:	4f19      	ldr	r7, [pc, #100]	; (8014498 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 8014432:	4413      	add	r3, r2
 8014434:	603b      	str	r3, [r7, #0]
 8014436:	4f19      	ldr	r7, [pc, #100]	; (801449c <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 8014438:	2300      	movs	r3, #0
 801443a:	803b      	strh	r3, [r7, #0]
 801443c:	4f18      	ldr	r7, [pc, #96]	; (80144a0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 801443e:	683f      	ldr	r7, [r7, #0]
 8014440:	1aba      	subs	r2, r7, r2
 8014442:	4f18      	ldr	r7, [pc, #96]	; (80144a4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 8014444:	603a      	str	r2, [r7, #0]
 8014446:	4a18      	ldr	r2, [pc, #96]	; (80144a8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 8014448:	469c      	mov	ip, r3
 801444a:	8013      	strh	r3, [r2, #0]
 801444c:	f64f 77ff 	movw	r7, #65535	; 0xffff
 8014450:	428b      	cmp	r3, r1
 8014452:	d10d      	bne.n	8014470 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 8014454:	882d      	ldrh	r5, [r5, #0]
 8014456:	6830      	ldr	r0, [r6, #0]
 8014458:	2300      	movs	r3, #0
 801445a:	240e      	movs	r4, #14
 801445c:	429d      	cmp	r5, r3
 801445e:	d90f      	bls.n	8014480 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8014460:	fb04 0203 	mla	r2, r4, r3, r0
 8014464:	3301      	adds	r3, #1
 8014466:	7b11      	ldrb	r1, [r2, #12]
 8014468:	f36f 1145 	bfc	r1, #5, #1
 801446c:	7311      	strb	r1, [r2, #12]
 801446e:	e7f5      	b.n	801445c <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 8014470:	6822      	ldr	r2, [r4, #0]
 8014472:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 8014476:	6802      	ldr	r2, [r0, #0]
 8014478:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 801447c:	3301      	adds	r3, #1
 801447e:	e7e7      	b.n	8014450 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 8014480:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8014482:	bf00      	nop
 8014484:	20015620 	.word	0x20015620
 8014488:	2001563c 	.word	0x2001563c
 801448c:	20015640 	.word	0x20015640
 8014490:	20015634 	.word	0x20015634
 8014494:	20015624 	.word	0x20015624
 8014498:	2001562c 	.word	0x2001562c
 801449c:	2001563e 	.word	0x2001563e
 80144a0:	20015628 	.word	0x20015628
 80144a4:	20015638 	.word	0x20015638
 80144a8:	20015630 	.word	0x20015630

080144ac <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 80144ac:	4b06      	ldr	r3, [pc, #24]	; (80144c8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 80144ae:	681b      	ldr	r3, [r3, #0]
 80144b0:	b943      	cbnz	r3, 80144c4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 80144b2:	b139      	cbz	r1, 80144c4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 80144b4:	4b05      	ldr	r3, [pc, #20]	; (80144cc <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 80144b6:	801a      	strh	r2, [r3, #0]
 80144b8:	4b05      	ldr	r3, [pc, #20]	; (80144d0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 80144ba:	6019      	str	r1, [r3, #0]
 80144bc:	4b05      	ldr	r3, [pc, #20]	; (80144d4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 80144be:	6018      	str	r0, [r3, #0]
 80144c0:	f7ff bf96 	b.w	80143f0 <_ZN8touchgfx6Bitmap10clearCacheEv>
 80144c4:	4770      	bx	lr
 80144c6:	bf00      	nop
 80144c8:	2001562c 	.word	0x2001562c
 80144cc:	20015640 	.word	0x20015640
 80144d0:	20015628 	.word	0x20015628
 80144d4:	20015620 	.word	0x20015620

080144d8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 80144d8:	b470      	push	{r4, r5, r6}
 80144da:	4c07      	ldr	r4, [pc, #28]	; (80144f8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 80144dc:	6826      	ldr	r6, [r4, #0]
 80144de:	4605      	mov	r5, r0
 80144e0:	4610      	mov	r0, r2
 80144e2:	9a03      	ldr	r2, [sp, #12]
 80144e4:	b936      	cbnz	r6, 80144f4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 80144e6:	6025      	str	r5, [r4, #0]
 80144e8:	4c04      	ldr	r4, [pc, #16]	; (80144fc <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 80144ea:	8021      	strh	r1, [r4, #0]
 80144ec:	bc70      	pop	{r4, r5, r6}
 80144ee:	4619      	mov	r1, r3
 80144f0:	f7ff bfdc 	b.w	80144ac <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 80144f4:	bc70      	pop	{r4, r5, r6}
 80144f6:	4770      	bx	lr
 80144f8:	20015644 	.word	0x20015644
 80144fc:	2001563c 	.word	0x2001563c

08014500 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 8014500:	4a12      	ldr	r2, [pc, #72]	; (801454c <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 8014502:	8803      	ldrh	r3, [r0, #0]
 8014504:	8812      	ldrh	r2, [r2, #0]
 8014506:	4293      	cmp	r3, r2
 8014508:	d207      	bcs.n	801451a <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 801450a:	4a11      	ldr	r2, [pc, #68]	; (8014550 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 801450c:	6812      	ldr	r2, [r2, #0]
 801450e:	2114      	movs	r1, #20
 8014510:	fb01 2303 	mla	r3, r1, r3, r2
 8014514:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8014518:	4770      	bx	lr
 801451a:	490e      	ldr	r1, [pc, #56]	; (8014554 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 801451c:	8809      	ldrh	r1, [r1, #0]
 801451e:	4411      	add	r1, r2
 8014520:	428b      	cmp	r3, r1
 8014522:	da04      	bge.n	801452e <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 8014524:	1a9b      	subs	r3, r3, r2
 8014526:	4a0c      	ldr	r2, [pc, #48]	; (8014558 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 8014528:	210e      	movs	r1, #14
 801452a:	6812      	ldr	r2, [r2, #0]
 801452c:	e7f0      	b.n	8014510 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 801452e:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8014532:	4293      	cmp	r3, r2
 8014534:	d108      	bne.n	8014548 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 8014536:	4b09      	ldr	r3, [pc, #36]	; (801455c <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 8014538:	781b      	ldrb	r3, [r3, #0]
 801453a:	b91b      	cbnz	r3, 8014544 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 801453c:	4b08      	ldr	r3, [pc, #32]	; (8014560 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 801453e:	f9b3 0000 	ldrsh.w	r0, [r3]
 8014542:	4770      	bx	lr
 8014544:	4b07      	ldr	r3, [pc, #28]	; (8014564 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 8014546:	e7fa      	b.n	801453e <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 8014548:	2000      	movs	r0, #0
 801454a:	4770      	bx	lr
 801454c:	2001563c 	.word	0x2001563c
 8014550:	20015644 	.word	0x20015644
 8014554:	20015640 	.word	0x20015640
 8014558:	20015624 	.word	0x20015624
 801455c:	200155ac 	.word	0x200155ac
 8014560:	200155ae 	.word	0x200155ae
 8014564:	200155b0 	.word	0x200155b0

08014568 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 8014568:	4a12      	ldr	r2, [pc, #72]	; (80145b4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 801456a:	8803      	ldrh	r3, [r0, #0]
 801456c:	8812      	ldrh	r2, [r2, #0]
 801456e:	4293      	cmp	r3, r2
 8014570:	d207      	bcs.n	8014582 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 8014572:	4a11      	ldr	r2, [pc, #68]	; (80145b8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 8014574:	6812      	ldr	r2, [r2, #0]
 8014576:	2114      	movs	r1, #20
 8014578:	fb01 2303 	mla	r3, r1, r3, r2
 801457c:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 8014580:	4770      	bx	lr
 8014582:	490e      	ldr	r1, [pc, #56]	; (80145bc <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 8014584:	8809      	ldrh	r1, [r1, #0]
 8014586:	4411      	add	r1, r2
 8014588:	428b      	cmp	r3, r1
 801458a:	da04      	bge.n	8014596 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 801458c:	1a9b      	subs	r3, r3, r2
 801458e:	4a0c      	ldr	r2, [pc, #48]	; (80145c0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 8014590:	210e      	movs	r1, #14
 8014592:	6812      	ldr	r2, [r2, #0]
 8014594:	e7f0      	b.n	8014578 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 8014596:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801459a:	4293      	cmp	r3, r2
 801459c:	d108      	bne.n	80145b0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 801459e:	4b09      	ldr	r3, [pc, #36]	; (80145c4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 80145a0:	781b      	ldrb	r3, [r3, #0]
 80145a2:	b91b      	cbnz	r3, 80145ac <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 80145a4:	4b08      	ldr	r3, [pc, #32]	; (80145c8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 80145a6:	f9b3 0000 	ldrsh.w	r0, [r3]
 80145aa:	4770      	bx	lr
 80145ac:	4b07      	ldr	r3, [pc, #28]	; (80145cc <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 80145ae:	e7fa      	b.n	80145a6 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 80145b0:	2000      	movs	r0, #0
 80145b2:	4770      	bx	lr
 80145b4:	2001563c 	.word	0x2001563c
 80145b8:	20015644 	.word	0x20015644
 80145bc:	20015640 	.word	0x20015640
 80145c0:	20015624 	.word	0x20015624
 80145c4:	200155ac 	.word	0x200155ac
 80145c8:	200155b0 	.word	0x200155b0
 80145cc:	200155ae 	.word	0x200155ae

080145d0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 80145d0:	b510      	push	{r4, lr}
 80145d2:	4a1f      	ldr	r2, [pc, #124]	; (8014650 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 80145d4:	880b      	ldrh	r3, [r1, #0]
 80145d6:	8812      	ldrh	r2, [r2, #0]
 80145d8:	4293      	cmp	r3, r2
 80145da:	d213      	bcs.n	8014604 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 80145dc:	4a1d      	ldr	r2, [pc, #116]	; (8014654 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 80145de:	6812      	ldr	r2, [r2, #0]
 80145e0:	2114      	movs	r1, #20
 80145e2:	fb01 2303 	mla	r3, r1, r3, r2
 80145e6:	8a1a      	ldrh	r2, [r3, #16]
 80145e8:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 80145ec:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 80145f0:	8a5b      	ldrh	r3, [r3, #18]
 80145f2:	8004      	strh	r4, [r0, #0]
 80145f4:	f3c2 020c 	ubfx	r2, r2, #0, #13
 80145f8:	f3c3 030c 	ubfx	r3, r3, #0, #13
 80145fc:	8041      	strh	r1, [r0, #2]
 80145fe:	8082      	strh	r2, [r0, #4]
 8014600:	80c3      	strh	r3, [r0, #6]
 8014602:	e00e      	b.n	8014622 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8014604:	4914      	ldr	r1, [pc, #80]	; (8014658 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 8014606:	8809      	ldrh	r1, [r1, #0]
 8014608:	4411      	add	r1, r2
 801460a:	428b      	cmp	r3, r1
 801460c:	da0a      	bge.n	8014624 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 801460e:	1a9b      	subs	r3, r3, r2
 8014610:	4a12      	ldr	r2, [pc, #72]	; (801465c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 8014612:	6812      	ldr	r2, [r2, #0]
 8014614:	210e      	movs	r1, #14
 8014616:	fb01 2303 	mla	r3, r1, r3, r2
 801461a:	681a      	ldr	r2, [r3, #0]
 801461c:	6002      	str	r2, [r0, #0]
 801461e:	685a      	ldr	r2, [r3, #4]
 8014620:	6042      	str	r2, [r0, #4]
 8014622:	bd10      	pop	{r4, pc}
 8014624:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8014628:	4293      	cmp	r3, r2
 801462a:	d10b      	bne.n	8014644 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 801462c:	4b0c      	ldr	r3, [pc, #48]	; (8014660 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 801462e:	f9b3 1000 	ldrsh.w	r1, [r3]
 8014632:	4b0c      	ldr	r3, [pc, #48]	; (8014664 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 8014634:	8081      	strh	r1, [r0, #4]
 8014636:	f9b3 2000 	ldrsh.w	r2, [r3]
 801463a:	80c2      	strh	r2, [r0, #6]
 801463c:	2300      	movs	r3, #0
 801463e:	8003      	strh	r3, [r0, #0]
 8014640:	8043      	strh	r3, [r0, #2]
 8014642:	e7ee      	b.n	8014622 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8014644:	2300      	movs	r3, #0
 8014646:	8003      	strh	r3, [r0, #0]
 8014648:	8043      	strh	r3, [r0, #2]
 801464a:	8083      	strh	r3, [r0, #4]
 801464c:	e7d8      	b.n	8014600 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 801464e:	bf00      	nop
 8014650:	2001563c 	.word	0x2001563c
 8014654:	20015644 	.word	0x20015644
 8014658:	20015640 	.word	0x20015640
 801465c:	20015624 	.word	0x20015624
 8014660:	200155a8 	.word	0x200155a8
 8014664:	200155aa 	.word	0x200155aa

08014668 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 8014668:	4a17      	ldr	r2, [pc, #92]	; (80146c8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 801466a:	8803      	ldrh	r3, [r0, #0]
 801466c:	8812      	ldrh	r2, [r2, #0]
 801466e:	4293      	cmp	r3, r2
 8014670:	d213      	bcs.n	801469a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 8014672:	4a16      	ldr	r2, [pc, #88]	; (80146cc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 8014674:	6812      	ldr	r2, [r2, #0]
 8014676:	2114      	movs	r1, #20
 8014678:	fb01 2303 	mla	r3, r1, r3, r2
 801467c:	8a1a      	ldrh	r2, [r3, #16]
 801467e:	8919      	ldrh	r1, [r3, #8]
 8014680:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8014684:	428a      	cmp	r2, r1
 8014686:	db1d      	blt.n	80146c4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8014688:	8a58      	ldrh	r0, [r3, #18]
 801468a:	f3c0 000c 	ubfx	r0, r0, #0, #13
 801468e:	895b      	ldrh	r3, [r3, #10]
 8014690:	4298      	cmp	r0, r3
 8014692:	bfac      	ite	ge
 8014694:	2000      	movge	r0, #0
 8014696:	2001      	movlt	r0, #1
 8014698:	4770      	bx	lr
 801469a:	490d      	ldr	r1, [pc, #52]	; (80146d0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 801469c:	8809      	ldrh	r1, [r1, #0]
 801469e:	4411      	add	r1, r2
 80146a0:	428b      	cmp	r3, r1
 80146a2:	da0d      	bge.n	80146c0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 80146a4:	1a9b      	subs	r3, r3, r2
 80146a6:	4a0b      	ldr	r2, [pc, #44]	; (80146d4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 80146a8:	6812      	ldr	r2, [r2, #0]
 80146aa:	210e      	movs	r1, #14
 80146ac:	fb01 2303 	mla	r3, r1, r3, r2
 80146b0:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 80146b4:	891a      	ldrh	r2, [r3, #8]
 80146b6:	4291      	cmp	r1, r2
 80146b8:	db04      	blt.n	80146c4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 80146ba:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 80146be:	e7e6      	b.n	801468e <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 80146c0:	2000      	movs	r0, #0
 80146c2:	4770      	bx	lr
 80146c4:	2001      	movs	r0, #1
 80146c6:	4770      	bx	lr
 80146c8:	2001563c 	.word	0x2001563c
 80146cc:	20015644 	.word	0x20015644
 80146d0:	20015640 	.word	0x20015640
 80146d4:	20015624 	.word	0x20015624

080146d8 <_ZNK8touchgfx6Bitmap7getDataEv>:
 80146d8:	4a12      	ldr	r2, [pc, #72]	; (8014724 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 80146da:	8803      	ldrh	r3, [r0, #0]
 80146dc:	8811      	ldrh	r1, [r2, #0]
 80146de:	428b      	cmp	r3, r1
 80146e0:	d20b      	bcs.n	80146fa <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 80146e2:	4a11      	ldr	r2, [pc, #68]	; (8014728 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 80146e4:	6812      	ldr	r2, [r2, #0]
 80146e6:	b112      	cbz	r2, 80146ee <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 80146e8:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80146ec:	b9c0      	cbnz	r0, 8014720 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 80146ee:	4a0f      	ldr	r2, [pc, #60]	; (801472c <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 80146f0:	6811      	ldr	r1, [r2, #0]
 80146f2:	2214      	movs	r2, #20
 80146f4:	4353      	muls	r3, r2
 80146f6:	58c8      	ldr	r0, [r1, r3]
 80146f8:	4770      	bx	lr
 80146fa:	4a0d      	ldr	r2, [pc, #52]	; (8014730 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 80146fc:	8812      	ldrh	r2, [r2, #0]
 80146fe:	440a      	add	r2, r1
 8014700:	4293      	cmp	r3, r2
 8014702:	da04      	bge.n	801470e <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 8014704:	4a08      	ldr	r2, [pc, #32]	; (8014728 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8014706:	6812      	ldr	r2, [r2, #0]
 8014708:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 801470c:	4770      	bx	lr
 801470e:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8014712:	4293      	cmp	r3, r2
 8014714:	d103      	bne.n	801471e <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 8014716:	4b07      	ldr	r3, [pc, #28]	; (8014734 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 8014718:	681b      	ldr	r3, [r3, #0]
 801471a:	6c58      	ldr	r0, [r3, #68]	; 0x44
 801471c:	4770      	bx	lr
 801471e:	2000      	movs	r0, #0
 8014720:	4770      	bx	lr
 8014722:	bf00      	nop
 8014724:	2001563c 	.word	0x2001563c
 8014728:	20015620 	.word	0x20015620
 801472c:	20015644 	.word	0x20015644
 8014730:	20015640 	.word	0x20015640
 8014734:	200155b4 	.word	0x200155b4

08014738 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 8014738:	4b24      	ldr	r3, [pc, #144]	; (80147cc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 801473a:	8802      	ldrh	r2, [r0, #0]
 801473c:	8818      	ldrh	r0, [r3, #0]
 801473e:	4282      	cmp	r2, r0
 8014740:	d221      	bcs.n	8014786 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 8014742:	4b23      	ldr	r3, [pc, #140]	; (80147d0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 8014744:	6819      	ldr	r1, [r3, #0]
 8014746:	2314      	movs	r3, #20
 8014748:	fb03 1302 	mla	r3, r3, r2, r1
 801474c:	6858      	ldr	r0, [r3, #4]
 801474e:	2800      	cmp	r0, #0
 8014750:	d03a      	beq.n	80147c8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8014752:	4920      	ldr	r1, [pc, #128]	; (80147d4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8014754:	6809      	ldr	r1, [r1, #0]
 8014756:	2900      	cmp	r1, #0
 8014758:	d036      	beq.n	80147c8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801475a:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 801475e:	2900      	cmp	r1, #0
 8014760:	d032      	beq.n	80147c8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8014762:	891a      	ldrh	r2, [r3, #8]
 8014764:	8958      	ldrh	r0, [r3, #10]
 8014766:	4350      	muls	r0, r2
 8014768:	7c5a      	ldrb	r2, [r3, #17]
 801476a:	7cdb      	ldrb	r3, [r3, #19]
 801476c:	0952      	lsrs	r2, r2, #5
 801476e:	f3c3 1342 	ubfx	r3, r3, #5, #3
 8014772:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8014776:	2b0b      	cmp	r3, #11
 8014778:	bf18      	it	ne
 801477a:	0040      	lslne	r0, r0, #1
 801477c:	3003      	adds	r0, #3
 801477e:	f020 0003 	bic.w	r0, r0, #3
 8014782:	4408      	add	r0, r1
 8014784:	4770      	bx	lr
 8014786:	4b14      	ldr	r3, [pc, #80]	; (80147d8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8014788:	881b      	ldrh	r3, [r3, #0]
 801478a:	4403      	add	r3, r0
 801478c:	429a      	cmp	r2, r3
 801478e:	da1a      	bge.n	80147c6 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8014790:	4b12      	ldr	r3, [pc, #72]	; (80147dc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 8014792:	681b      	ldr	r3, [r3, #0]
 8014794:	1a10      	subs	r0, r2, r0
 8014796:	210e      	movs	r1, #14
 8014798:	fb01 3000 	mla	r0, r1, r0, r3
 801479c:	7b03      	ldrb	r3, [r0, #12]
 801479e:	f003 031f 	and.w	r3, r3, #31
 80147a2:	2b0b      	cmp	r3, #11
 80147a4:	d10b      	bne.n	80147be <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 80147a6:	8903      	ldrh	r3, [r0, #8]
 80147a8:	8940      	ldrh	r0, [r0, #10]
 80147aa:	4358      	muls	r0, r3
 80147ac:	4b09      	ldr	r3, [pc, #36]	; (80147d4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 80147ae:	6819      	ldr	r1, [r3, #0]
 80147b0:	3003      	adds	r0, #3
 80147b2:	f020 0303 	bic.w	r3, r0, #3
 80147b6:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 80147ba:	4418      	add	r0, r3
 80147bc:	4770      	bx	lr
 80147be:	2b0d      	cmp	r3, #13
 80147c0:	d101      	bne.n	80147c6 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 80147c2:	300d      	adds	r0, #13
 80147c4:	4770      	bx	lr
 80147c6:	2000      	movs	r0, #0
 80147c8:	4770      	bx	lr
 80147ca:	bf00      	nop
 80147cc:	2001563c 	.word	0x2001563c
 80147d0:	20015644 	.word	0x20015644
 80147d4:	20015620 	.word	0x20015620
 80147d8:	20015640 	.word	0x20015640
 80147dc:	20015624 	.word	0x20015624

080147e0 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 80147e0:	b510      	push	{r4, lr}
 80147e2:	4a17      	ldr	r2, [pc, #92]	; (8014840 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 80147e4:	8803      	ldrh	r3, [r0, #0]
 80147e6:	8812      	ldrh	r2, [r2, #0]
 80147e8:	4293      	cmp	r3, r2
 80147ea:	d20c      	bcs.n	8014806 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 80147ec:	4a15      	ldr	r2, [pc, #84]	; (8014844 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 80147ee:	6812      	ldr	r2, [r2, #0]
 80147f0:	2114      	movs	r1, #20
 80147f2:	fb01 2303 	mla	r3, r1, r3, r2
 80147f6:	7c58      	ldrb	r0, [r3, #17]
 80147f8:	0942      	lsrs	r2, r0, #5
 80147fa:	7cd8      	ldrb	r0, [r3, #19]
 80147fc:	f3c0 1042 	ubfx	r0, r0, #5, #3
 8014800:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 8014804:	bd10      	pop	{r4, pc}
 8014806:	4910      	ldr	r1, [pc, #64]	; (8014848 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 8014808:	8809      	ldrh	r1, [r1, #0]
 801480a:	4411      	add	r1, r2
 801480c:	428b      	cmp	r3, r1
 801480e:	da09      	bge.n	8014824 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 8014810:	1a9b      	subs	r3, r3, r2
 8014812:	4a0e      	ldr	r2, [pc, #56]	; (801484c <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 8014814:	6812      	ldr	r2, [r2, #0]
 8014816:	210e      	movs	r1, #14
 8014818:	fb01 2303 	mla	r3, r1, r3, r2
 801481c:	7b18      	ldrb	r0, [r3, #12]
 801481e:	f000 001f 	and.w	r0, r0, #31
 8014822:	e7ef      	b.n	8014804 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 8014824:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8014828:	4293      	cmp	r3, r2
 801482a:	d106      	bne.n	801483a <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 801482c:	f7ed ff66 	bl	80026fc <_ZN8touchgfx3HAL3lcdEv>
 8014830:	6803      	ldr	r3, [r0, #0]
 8014832:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014836:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014838:	4718      	bx	r3
 801483a:	2000      	movs	r0, #0
 801483c:	e7e2      	b.n	8014804 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 801483e:	bf00      	nop
 8014840:	2001563c 	.word	0x2001563c
 8014844:	20015644 	.word	0x20015644
 8014848:	20015640 	.word	0x20015640
 801484c:	20015624 	.word	0x20015624

08014850 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 8014850:	2010      	movs	r0, #16
 8014852:	4770      	bx	lr

08014854 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 8014854:	2000      	movs	r0, #0
 8014856:	4770      	bx	lr

08014858 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8014858:	4b02      	ldr	r3, [pc, #8]	; (8014864 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 801485a:	8818      	ldrh	r0, [r3, #0]
 801485c:	0040      	lsls	r0, r0, #1
 801485e:	b280      	uxth	r0, r0
 8014860:	4770      	bx	lr
 8014862:	bf00      	nop
 8014864:	200155ae 	.word	0x200155ae

08014868 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8014868:	2bff      	cmp	r3, #255	; 0xff
 801486a:	d050      	beq.n	801490e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 801486c:	2a0b      	cmp	r2, #11
 801486e:	d04a      	beq.n	8014906 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8014870:	d80e      	bhi.n	8014890 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 8014872:	2a03      	cmp	r2, #3
 8014874:	d03f      	beq.n	80148f6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 8014876:	d804      	bhi.n	8014882 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8014878:	2a01      	cmp	r2, #1
 801487a:	d03e      	beq.n	80148fa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 801487c:	d93f      	bls.n	80148fe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 801487e:	6b80      	ldr	r0, [r0, #56]	; 0x38
 8014880:	4770      	bx	lr
 8014882:	2a09      	cmp	r2, #9
 8014884:	d03f      	beq.n	8014906 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8014886:	d83c      	bhi.n	8014902 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8014888:	2a08      	cmp	r2, #8
 801488a:	d03a      	beq.n	8014902 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 801488c:	2000      	movs	r0, #0
 801488e:	4770      	bx	lr
 8014890:	2a2f      	cmp	r2, #47	; 0x2f
 8014892:	d024      	beq.n	80148de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 8014894:	d80d      	bhi.n	80148b2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 8014896:	2a2d      	cmp	r2, #45	; 0x2d
 8014898:	d014      	beq.n	80148c4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 801489a:	d826      	bhi.n	80148ea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 801489c:	2a2c      	cmp	r2, #44	; 0x2c
 801489e:	d1f5      	bne.n	801488c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80148a0:	684b      	ldr	r3, [r1, #4]
 80148a2:	781b      	ldrb	r3, [r3, #0]
 80148a4:	2b01      	cmp	r3, #1
 80148a6:	d018      	beq.n	80148da <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 80148a8:	d323      	bcc.n	80148f2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 80148aa:	2b02      	cmp	r3, #2
 80148ac:	d1ee      	bne.n	801488c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80148ae:	6880      	ldr	r0, [r0, #8]
 80148b0:	4770      	bx	lr
 80148b2:	2a31      	cmp	r2, #49	; 0x31
 80148b4:	d004      	beq.n	80148c0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 80148b6:	d328      	bcc.n	801490a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 80148b8:	2a32      	cmp	r2, #50	; 0x32
 80148ba:	d026      	beq.n	801490a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 80148bc:	2a33      	cmp	r2, #51	; 0x33
 80148be:	d1e5      	bne.n	801488c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80148c0:	6f00      	ldr	r0, [r0, #112]	; 0x70
 80148c2:	4770      	bx	lr
 80148c4:	684b      	ldr	r3, [r1, #4]
 80148c6:	781b      	ldrb	r3, [r3, #0]
 80148c8:	2b01      	cmp	r3, #1
 80148ca:	d004      	beq.n	80148d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 80148cc:	d30b      	bcc.n	80148e6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80148ce:	2b02      	cmp	r3, #2
 80148d0:	d1dc      	bne.n	801488c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80148d2:	6900      	ldr	r0, [r0, #16]
 80148d4:	4770      	bx	lr
 80148d6:	6a00      	ldr	r0, [r0, #32]
 80148d8:	4770      	bx	lr
 80148da:	6980      	ldr	r0, [r0, #24]
 80148dc:	4770      	bx	lr
 80148de:	684b      	ldr	r3, [r1, #4]
 80148e0:	781b      	ldrb	r3, [r3, #0]
 80148e2:	2b00      	cmp	r3, #0
 80148e4:	d1d2      	bne.n	801488c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80148e6:	6b00      	ldr	r0, [r0, #48]	; 0x30
 80148e8:	4770      	bx	lr
 80148ea:	684b      	ldr	r3, [r1, #4]
 80148ec:	781b      	ldrb	r3, [r3, #0]
 80148ee:	2b00      	cmp	r3, #0
 80148f0:	d1cc      	bne.n	801488c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80148f2:	6a80      	ldr	r0, [r0, #40]	; 0x28
 80148f4:	4770      	bx	lr
 80148f6:	6c80      	ldr	r0, [r0, #72]	; 0x48
 80148f8:	4770      	bx	lr
 80148fa:	6d00      	ldr	r0, [r0, #80]	; 0x50
 80148fc:	4770      	bx	lr
 80148fe:	6c00      	ldr	r0, [r0, #64]	; 0x40
 8014900:	4770      	bx	lr
 8014902:	6d80      	ldr	r0, [r0, #88]	; 0x58
 8014904:	4770      	bx	lr
 8014906:	6e00      	ldr	r0, [r0, #96]	; 0x60
 8014908:	4770      	bx	lr
 801490a:	6e80      	ldr	r0, [r0, #104]	; 0x68
 801490c:	4770      	bx	lr
 801490e:	2a0b      	cmp	r2, #11
 8014910:	d049      	beq.n	80149a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8014912:	d80e      	bhi.n	8014932 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 8014914:	2a03      	cmp	r2, #3
 8014916:	d040      	beq.n	801499a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 8014918:	d804      	bhi.n	8014924 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 801491a:	2a01      	cmp	r2, #1
 801491c:	d03f      	beq.n	801499e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 801491e:	d940      	bls.n	80149a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 8014920:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8014922:	4770      	bx	lr
 8014924:	2a09      	cmp	r2, #9
 8014926:	d03e      	beq.n	80149a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8014928:	d801      	bhi.n	801492e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 801492a:	2a08      	cmp	r2, #8
 801492c:	d1ae      	bne.n	801488c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801492e:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 8014930:	4770      	bx	lr
 8014932:	2a2f      	cmp	r2, #47	; 0x2f
 8014934:	d024      	beq.n	8014980 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 8014936:	d80d      	bhi.n	8014954 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 8014938:	2a2d      	cmp	r2, #45	; 0x2d
 801493a:	d014      	beq.n	8014966 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 801493c:	d826      	bhi.n	801498c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 801493e:	2a2c      	cmp	r2, #44	; 0x2c
 8014940:	d1a4      	bne.n	801488c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014942:	684b      	ldr	r3, [r1, #4]
 8014944:	781b      	ldrb	r3, [r3, #0]
 8014946:	2b01      	cmp	r3, #1
 8014948:	d018      	beq.n	801497c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 801494a:	d324      	bcc.n	8014996 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 801494c:	2b02      	cmp	r3, #2
 801494e:	d19d      	bne.n	801488c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014950:	68c0      	ldr	r0, [r0, #12]
 8014952:	4770      	bx	lr
 8014954:	2a31      	cmp	r2, #49	; 0x31
 8014956:	d004      	beq.n	8014962 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 8014958:	d327      	bcc.n	80149aa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801495a:	2a32      	cmp	r2, #50	; 0x32
 801495c:	d025      	beq.n	80149aa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801495e:	2a33      	cmp	r2, #51	; 0x33
 8014960:	d194      	bne.n	801488c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014962:	6f40      	ldr	r0, [r0, #116]	; 0x74
 8014964:	4770      	bx	lr
 8014966:	684b      	ldr	r3, [r1, #4]
 8014968:	781b      	ldrb	r3, [r3, #0]
 801496a:	2b01      	cmp	r3, #1
 801496c:	d004      	beq.n	8014978 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 801496e:	d30b      	bcc.n	8014988 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 8014970:	2b02      	cmp	r3, #2
 8014972:	d18b      	bne.n	801488c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014974:	6940      	ldr	r0, [r0, #20]
 8014976:	4770      	bx	lr
 8014978:	6a40      	ldr	r0, [r0, #36]	; 0x24
 801497a:	4770      	bx	lr
 801497c:	69c0      	ldr	r0, [r0, #28]
 801497e:	4770      	bx	lr
 8014980:	684b      	ldr	r3, [r1, #4]
 8014982:	781b      	ldrb	r3, [r3, #0]
 8014984:	2b00      	cmp	r3, #0
 8014986:	d181      	bne.n	801488c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014988:	6b40      	ldr	r0, [r0, #52]	; 0x34
 801498a:	4770      	bx	lr
 801498c:	684b      	ldr	r3, [r1, #4]
 801498e:	781b      	ldrb	r3, [r3, #0]
 8014990:	2b00      	cmp	r3, #0
 8014992:	f47f af7b 	bne.w	801488c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014996:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 8014998:	4770      	bx	lr
 801499a:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 801499c:	4770      	bx	lr
 801499e:	6d40      	ldr	r0, [r0, #84]	; 0x54
 80149a0:	4770      	bx	lr
 80149a2:	6c40      	ldr	r0, [r0, #68]	; 0x44
 80149a4:	4770      	bx	lr
 80149a6:	6e40      	ldr	r0, [r0, #100]	; 0x64
 80149a8:	4770      	bx	lr
 80149aa:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 80149ac:	4770      	bx	lr

080149ae <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80149ae:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80149b2:	b087      	sub	sp, #28
 80149b4:	9815      	ldr	r0, [sp, #84]	; 0x54
 80149b6:	9205      	str	r2, [sp, #20]
 80149b8:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80149bc:	9202      	str	r2, [sp, #8]
 80149be:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 80149c2:	9101      	str	r1, [sp, #4]
 80149c4:	6841      	ldr	r1, [r0, #4]
 80149c6:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 80149ca:	fb01 2404 	mla	r4, r1, r4, r2
 80149ce:	6802      	ldr	r2, [r0, #0]
 80149d0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80149d4:	f8de 2000 	ldr.w	r2, [lr]
 80149d8:	9203      	str	r2, [sp, #12]
 80149da:	f8de 2004 	ldr.w	r2, [lr, #4]
 80149de:	3204      	adds	r2, #4
 80149e0:	9204      	str	r2, [sp, #16]
 80149e2:	9a02      	ldr	r2, [sp, #8]
 80149e4:	43d6      	mvns	r6, r2
 80149e6:	b2f6      	uxtb	r6, r6
 80149e8:	9a01      	ldr	r2, [sp, #4]
 80149ea:	2a00      	cmp	r2, #0
 80149ec:	dc03      	bgt.n	80149f6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80149ee:	9a05      	ldr	r2, [sp, #20]
 80149f0:	2a00      	cmp	r2, #0
 80149f2:	f340 8129 	ble.w	8014c48 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80149f6:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80149f8:	f9be c008 	ldrsh.w	ip, [lr, #8]
 80149fc:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8014a00:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8014a04:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8014a06:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8014a0a:	2b00      	cmp	r3, #0
 8014a0c:	dd0e      	ble.n	8014a2c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8014a0e:	1408      	asrs	r0, r1, #16
 8014a10:	d405      	bmi.n	8014a1e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8014a12:	4560      	cmp	r0, ip
 8014a14:	da03      	bge.n	8014a1e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8014a16:	1410      	asrs	r0, r2, #16
 8014a18:	d401      	bmi.n	8014a1e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8014a1a:	42b8      	cmp	r0, r7
 8014a1c:	db07      	blt.n	8014a2e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8014a1e:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8014a20:	4401      	add	r1, r0
 8014a22:	9814      	ldr	r0, [sp, #80]	; 0x50
 8014a24:	3b01      	subs	r3, #1
 8014a26:	4402      	add	r2, r0
 8014a28:	3402      	adds	r4, #2
 8014a2a:	e7ee      	b.n	8014a0a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8014a2c:	d071      	beq.n	8014b12 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8014a2e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8014a30:	1e58      	subs	r0, r3, #1
 8014a32:	fb05 1500 	mla	r5, r5, r0, r1
 8014a36:	142d      	asrs	r5, r5, #16
 8014a38:	d45f      	bmi.n	8014afa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8014a3a:	4565      	cmp	r5, ip
 8014a3c:	da5d      	bge.n	8014afa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8014a3e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8014a40:	fb05 2000 	mla	r0, r5, r0, r2
 8014a44:	1400      	asrs	r0, r0, #16
 8014a46:	d458      	bmi.n	8014afa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8014a48:	42b8      	cmp	r0, r7
 8014a4a:	da56      	bge.n	8014afa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8014a4c:	f8bd b008 	ldrh.w	fp, [sp, #8]
 8014a50:	4699      	mov	r9, r3
 8014a52:	46a2      	mov	sl, r4
 8014a54:	f1b9 0f00 	cmp.w	r9, #0
 8014a58:	dd57      	ble.n	8014b0a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 8014a5a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8014a5e:	9803      	ldr	r0, [sp, #12]
 8014a60:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8014a64:	140d      	asrs	r5, r1, #16
 8014a66:	fb07 000c 	mla	r0, r7, ip, r0
 8014a6a:	f109 39ff 	add.w	r9, r9, #4294967295
 8014a6e:	5d40      	ldrb	r0, [r0, r5]
 8014a70:	9d04      	ldr	r5, [sp, #16]
 8014a72:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8014a76:	f8ba 5000 	ldrh.w	r5, [sl]
 8014a7a:	122f      	asrs	r7, r5, #8
 8014a7c:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8014a80:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8014a84:	fb17 f706 	smulbb	r7, r7, r6
 8014a88:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8014a8c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8014a90:	00ed      	lsls	r5, r5, #3
 8014a92:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8014a96:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8014a9a:	10c7      	asrs	r7, r0, #3
 8014a9c:	b2ed      	uxtb	r5, r5
 8014a9e:	00c0      	lsls	r0, r0, #3
 8014aa0:	fb18 f806 	smulbb	r8, r8, r6
 8014aa4:	fb15 f506 	smulbb	r5, r5, r6
 8014aa8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8014aac:	b2c0      	uxtb	r0, r0
 8014aae:	fa1f fc8c 	uxth.w	ip, ip
 8014ab2:	fb07 870b 	mla	r7, r7, fp, r8
 8014ab6:	fb00 500b 	mla	r0, r0, fp, r5
 8014aba:	b280      	uxth	r0, r0
 8014abc:	b2bf      	uxth	r7, r7
 8014abe:	f10c 0501 	add.w	r5, ip, #1
 8014ac2:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8014ac6:	f107 0801 	add.w	r8, r7, #1
 8014aca:	1c45      	adds	r5, r0, #1
 8014acc:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8014ad0:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8014ad4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8014ad6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8014ada:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8014ade:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8014ae2:	ea45 0c0c 	orr.w	ip, r5, ip
 8014ae6:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8014aea:	4401      	add	r1, r0
 8014aec:	9814      	ldr	r0, [sp, #80]	; 0x50
 8014aee:	ea4c 0c08 	orr.w	ip, ip, r8
 8014af2:	f82a cb02 	strh.w	ip, [sl], #2
 8014af6:	4402      	add	r2, r0
 8014af8:	e7ac      	b.n	8014a54 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8014afa:	f8bd a008 	ldrh.w	sl, [sp, #8]
 8014afe:	f04f 0800 	mov.w	r8, #0
 8014b02:	eb03 0008 	add.w	r0, r3, r8
 8014b06:	2800      	cmp	r0, #0
 8014b08:	dc41      	bgt.n	8014b8e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8014b0a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014b0e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014b12:	9b01      	ldr	r3, [sp, #4]
 8014b14:	2b00      	cmp	r3, #0
 8014b16:	f340 8097 	ble.w	8014c48 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8014b1a:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014b1e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8014b22:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8014b26:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014b28:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014b2c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014b30:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014b34:	eef0 6a62 	vmov.f32	s13, s5
 8014b38:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014b3c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014b40:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014b44:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8014b48:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014b4c:	eef0 6a43 	vmov.f32	s13, s6
 8014b50:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014b54:	ee12 2a90 	vmov	r2, s5
 8014b58:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014b5c:	fb92 f3f3 	sdiv	r3, r2, r3
 8014b60:	ee13 2a10 	vmov	r2, s6
 8014b64:	9313      	str	r3, [sp, #76]	; 0x4c
 8014b66:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014b68:	fb92 f3f3 	sdiv	r3, r2, r3
 8014b6c:	9314      	str	r3, [sp, #80]	; 0x50
 8014b6e:	9b01      	ldr	r3, [sp, #4]
 8014b70:	9a05      	ldr	r2, [sp, #20]
 8014b72:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014b76:	3b01      	subs	r3, #1
 8014b78:	9301      	str	r3, [sp, #4]
 8014b7a:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8014b7e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014b80:	eeb0 3a67 	vmov.f32	s6, s15
 8014b84:	bf08      	it	eq
 8014b86:	4613      	moveq	r3, r2
 8014b88:	eef0 2a47 	vmov.f32	s5, s14
 8014b8c:	e72c      	b.n	80149e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8014b8e:	140f      	asrs	r7, r1, #16
 8014b90:	d453      	bmi.n	8014c3a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8014b92:	f8de 5008 	ldr.w	r5, [lr, #8]
 8014b96:	42bd      	cmp	r5, r7
 8014b98:	dd4f      	ble.n	8014c3a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8014b9a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8014b9e:	d44c      	bmi.n	8014c3a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8014ba0:	f8de 000c 	ldr.w	r0, [lr, #12]
 8014ba4:	4560      	cmp	r0, ip
 8014ba6:	dd48      	ble.n	8014c3a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8014ba8:	9803      	ldr	r0, [sp, #12]
 8014baa:	b22d      	sxth	r5, r5
 8014bac:	fb0c 0505 	mla	r5, ip, r5, r0
 8014bb0:	5de8      	ldrb	r0, [r5, r7]
 8014bb2:	9d04      	ldr	r5, [sp, #16]
 8014bb4:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8014bb8:	f06f 0501 	mvn.w	r5, #1
 8014bbc:	fb05 fb08 	mul.w	fp, r5, r8
 8014bc0:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8014bc4:	f834 500b 	ldrh.w	r5, [r4, fp]
 8014bc8:	122f      	asrs	r7, r5, #8
 8014bca:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8014bce:	fb17 f706 	smulbb	r7, r7, r6
 8014bd2:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8014bd6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8014bda:	00ed      	lsls	r5, r5, #3
 8014bdc:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8014be0:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8014be4:	10c7      	asrs	r7, r0, #3
 8014be6:	b2ed      	uxtb	r5, r5
 8014be8:	00c0      	lsls	r0, r0, #3
 8014bea:	fb19 f906 	smulbb	r9, r9, r6
 8014bee:	fb15 f506 	smulbb	r5, r5, r6
 8014bf2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8014bf6:	b2c0      	uxtb	r0, r0
 8014bf8:	fa1f fc8c 	uxth.w	ip, ip
 8014bfc:	fb07 970a 	mla	r7, r7, sl, r9
 8014c00:	fb00 500a 	mla	r0, r0, sl, r5
 8014c04:	b2bf      	uxth	r7, r7
 8014c06:	b280      	uxth	r0, r0
 8014c08:	f10c 0501 	add.w	r5, ip, #1
 8014c0c:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8014c10:	f107 0901 	add.w	r9, r7, #1
 8014c14:	1c45      	adds	r5, r0, #1
 8014c16:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8014c1a:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8014c1e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8014c22:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8014c26:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8014c2a:	ea45 0c0c 	orr.w	ip, r5, ip
 8014c2e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8014c32:	ea4c 0c09 	orr.w	ip, ip, r9
 8014c36:	f824 c00b 	strh.w	ip, [r4, fp]
 8014c3a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8014c3c:	4401      	add	r1, r0
 8014c3e:	9814      	ldr	r0, [sp, #80]	; 0x50
 8014c40:	f108 38ff 	add.w	r8, r8, #4294967295
 8014c44:	4402      	add	r2, r0
 8014c46:	e75c      	b.n	8014b02 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8014c48:	b007      	add	sp, #28
 8014c4a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014c4e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014c4e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014c52:	b085      	sub	sp, #20
 8014c54:	4693      	mov	fp, r2
 8014c56:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8014c58:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8014c5a:	6870      	ldr	r0, [r6, #4]
 8014c5c:	9100      	str	r1, [sp, #0]
 8014c5e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8014c62:	fb00 2404 	mla	r4, r0, r4, r2
 8014c66:	6832      	ldr	r2, [r6, #0]
 8014c68:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014c6c:	682a      	ldr	r2, [r5, #0]
 8014c6e:	9201      	str	r2, [sp, #4]
 8014c70:	686a      	ldr	r2, [r5, #4]
 8014c72:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8014c76:	3204      	adds	r2, #4
 8014c78:	9202      	str	r2, [sp, #8]
 8014c7a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8014c7e:	9a00      	ldr	r2, [sp, #0]
 8014c80:	2a00      	cmp	r2, #0
 8014c82:	dc03      	bgt.n	8014c8c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8014c84:	f1bb 0f00 	cmp.w	fp, #0
 8014c88:	f340 80a0 	ble.w	8014dcc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8014c8c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8014c8e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8014c92:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8014c96:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8014c9a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8014c9c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8014ca0:	2b00      	cmp	r3, #0
 8014ca2:	dd0c      	ble.n	8014cbe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8014ca4:	1406      	asrs	r6, r0, #16
 8014ca6:	d405      	bmi.n	8014cb4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014ca8:	454e      	cmp	r6, r9
 8014caa:	da03      	bge.n	8014cb4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014cac:	1416      	asrs	r6, r2, #16
 8014cae:	d401      	bmi.n	8014cb4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014cb0:	4546      	cmp	r6, r8
 8014cb2:	db05      	blt.n	8014cc0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014cb4:	4470      	add	r0, lr
 8014cb6:	4462      	add	r2, ip
 8014cb8:	3b01      	subs	r3, #1
 8014cba:	3402      	adds	r4, #2
 8014cbc:	e7f0      	b.n	8014ca0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8014cbe:	d00f      	beq.n	8014ce0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8014cc0:	1e5e      	subs	r6, r3, #1
 8014cc2:	fb0e 0706 	mla	r7, lr, r6, r0
 8014cc6:	143f      	asrs	r7, r7, #16
 8014cc8:	d541      	bpl.n	8014d4e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 8014cca:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8014cce:	4698      	mov	r8, r3
 8014cd0:	9603      	str	r6, [sp, #12]
 8014cd2:	f1b8 0f00 	cmp.w	r8, #0
 8014cd6:	dc59      	bgt.n	8014d8c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8014cd8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014cdc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014ce0:	9b00      	ldr	r3, [sp, #0]
 8014ce2:	2b00      	cmp	r3, #0
 8014ce4:	dd72      	ble.n	8014dcc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8014ce6:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014cea:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014cee:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014cf2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014cf4:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014cf8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014cfc:	eeb0 6a62 	vmov.f32	s12, s5
 8014d00:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014d04:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014d08:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014d0c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8014d10:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014d14:	eeb0 6a43 	vmov.f32	s12, s6
 8014d18:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014d1c:	ee12 2a90 	vmov	r2, s5
 8014d20:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014d24:	fb92 fef3 	sdiv	lr, r2, r3
 8014d28:	ee13 2a10 	vmov	r2, s6
 8014d2c:	fb92 fcf3 	sdiv	ip, r2, r3
 8014d30:	9b00      	ldr	r3, [sp, #0]
 8014d32:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014d36:	3b01      	subs	r3, #1
 8014d38:	9300      	str	r3, [sp, #0]
 8014d3a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8014d3e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014d40:	eeb0 3a67 	vmov.f32	s6, s15
 8014d44:	bf08      	it	eq
 8014d46:	465b      	moveq	r3, fp
 8014d48:	eef0 2a47 	vmov.f32	s5, s14
 8014d4c:	e797      	b.n	8014c7e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8014d4e:	454f      	cmp	r7, r9
 8014d50:	dabb      	bge.n	8014cca <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8014d52:	fb0c 2606 	mla	r6, ip, r6, r2
 8014d56:	1436      	asrs	r6, r6, #16
 8014d58:	d4b7      	bmi.n	8014cca <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8014d5a:	4546      	cmp	r6, r8
 8014d5c:	dab5      	bge.n	8014cca <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8014d5e:	461e      	mov	r6, r3
 8014d60:	46a0      	mov	r8, r4
 8014d62:	2e00      	cmp	r6, #0
 8014d64:	ddb8      	ble.n	8014cd8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8014d66:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8014d6a:	9901      	ldr	r1, [sp, #4]
 8014d6c:	1417      	asrs	r7, r2, #16
 8014d6e:	ea4f 4920 	mov.w	r9, r0, asr #16
 8014d72:	fb0a 1707 	mla	r7, sl, r7, r1
 8014d76:	9902      	ldr	r1, [sp, #8]
 8014d78:	f817 7009 	ldrb.w	r7, [r7, r9]
 8014d7c:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8014d80:	f828 7b02 	strh.w	r7, [r8], #2
 8014d84:	4470      	add	r0, lr
 8014d86:	4462      	add	r2, ip
 8014d88:	3e01      	subs	r6, #1
 8014d8a:	e7ea      	b.n	8014d62 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8014d8c:	ea5f 4920 	movs.w	r9, r0, asr #16
 8014d90:	d417      	bmi.n	8014dc2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8014d92:	68ae      	ldr	r6, [r5, #8]
 8014d94:	454e      	cmp	r6, r9
 8014d96:	dd14      	ble.n	8014dc2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8014d98:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8014d9c:	d411      	bmi.n	8014dc2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8014d9e:	68ef      	ldr	r7, [r5, #12]
 8014da0:	4557      	cmp	r7, sl
 8014da2:	dd0e      	ble.n	8014dc2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8014da4:	9f01      	ldr	r7, [sp, #4]
 8014da6:	b236      	sxth	r6, r6
 8014da8:	fb0a 7606 	mla	r6, sl, r6, r7
 8014dac:	9f02      	ldr	r7, [sp, #8]
 8014dae:	f816 6009 	ldrb.w	r6, [r6, r9]
 8014db2:	f06f 0101 	mvn.w	r1, #1
 8014db6:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8014dba:	fb01 f608 	mul.w	r6, r1, r8
 8014dbe:	9903      	ldr	r1, [sp, #12]
 8014dc0:	538f      	strh	r7, [r1, r6]
 8014dc2:	4470      	add	r0, lr
 8014dc4:	4462      	add	r2, ip
 8014dc6:	f108 38ff 	add.w	r8, r8, #4294967295
 8014dca:	e782      	b.n	8014cd2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8014dcc:	b005      	add	sp, #20
 8014dce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014dd2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014dd2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014dd6:	b087      	sub	sp, #28
 8014dd8:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8014dda:	9205      	str	r2, [sp, #20]
 8014ddc:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8014de0:	9203      	str	r2, [sp, #12]
 8014de2:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8014de6:	9102      	str	r1, [sp, #8]
 8014de8:	6861      	ldr	r1, [r4, #4]
 8014dea:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8014dee:	fb01 2000 	mla	r0, r1, r0, r2
 8014df2:	6822      	ldr	r2, [r4, #0]
 8014df4:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 8014df8:	9200      	str	r2, [sp, #0]
 8014dfa:	f8dc 2000 	ldr.w	r2, [ip]
 8014dfe:	9204      	str	r2, [sp, #16]
 8014e00:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8014e04:	3204      	adds	r2, #4
 8014e06:	9201      	str	r2, [sp, #4]
 8014e08:	9a03      	ldr	r2, [sp, #12]
 8014e0a:	43d5      	mvns	r5, r2
 8014e0c:	b2ed      	uxtb	r5, r5
 8014e0e:	9a02      	ldr	r2, [sp, #8]
 8014e10:	2a00      	cmp	r2, #0
 8014e12:	dc03      	bgt.n	8014e1c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8014e14:	9a05      	ldr	r2, [sp, #20]
 8014e16:	2a00      	cmp	r2, #0
 8014e18:	f340 812c 	ble.w	8015074 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8014e1c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8014e1e:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 8014e22:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 8014e26:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8014e2a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8014e2c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8014e30:	2b00      	cmp	r3, #0
 8014e32:	dd10      	ble.n	8014e56 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8014e34:	140c      	asrs	r4, r1, #16
 8014e36:	d405      	bmi.n	8014e44 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014e38:	4574      	cmp	r4, lr
 8014e3a:	da03      	bge.n	8014e44 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014e3c:	1414      	asrs	r4, r2, #16
 8014e3e:	d401      	bmi.n	8014e44 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014e40:	42bc      	cmp	r4, r7
 8014e42:	db09      	blt.n	8014e58 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8014e44:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8014e46:	9800      	ldr	r0, [sp, #0]
 8014e48:	4421      	add	r1, r4
 8014e4a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8014e4c:	3002      	adds	r0, #2
 8014e4e:	4422      	add	r2, r4
 8014e50:	3b01      	subs	r3, #1
 8014e52:	9000      	str	r0, [sp, #0]
 8014e54:	e7ec      	b.n	8014e30 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8014e56:	d071      	beq.n	8014f3c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8014e58:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8014e5a:	1e5c      	subs	r4, r3, #1
 8014e5c:	fb06 1604 	mla	r6, r6, r4, r1
 8014e60:	1436      	asrs	r6, r6, #16
 8014e62:	d45d      	bmi.n	8014f20 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8014e64:	4576      	cmp	r6, lr
 8014e66:	da5b      	bge.n	8014f20 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8014e68:	9e14      	ldr	r6, [sp, #80]	; 0x50
 8014e6a:	fb06 2404 	mla	r4, r6, r4, r2
 8014e6e:	1424      	asrs	r4, r4, #16
 8014e70:	d456      	bmi.n	8014f20 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8014e72:	42bc      	cmp	r4, r7
 8014e74:	da54      	bge.n	8014f20 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8014e76:	f8dd 9000 	ldr.w	r9, [sp]
 8014e7a:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 8014e7e:	4698      	mov	r8, r3
 8014e80:	f1b8 0f00 	cmp.w	r8, #0
 8014e84:	dd54      	ble.n	8014f30 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8014e86:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8014e8a:	9804      	ldr	r0, [sp, #16]
 8014e8c:	1414      	asrs	r4, r2, #16
 8014e8e:	fb07 0404 	mla	r4, r7, r4, r0
 8014e92:	140e      	asrs	r6, r1, #16
 8014e94:	9801      	ldr	r0, [sp, #4]
 8014e96:	f814 e006 	ldrb.w	lr, [r4, r6]
 8014e9a:	f8b9 4000 	ldrh.w	r4, [r9]
 8014e9e:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8014ea2:	eb00 0b0e 	add.w	fp, r0, lr
 8014ea6:	1227      	asrs	r7, r4, #8
 8014ea8:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8014eac:	f89b b001 	ldrb.w	fp, [fp, #1]
 8014eb0:	f810 e00e 	ldrb.w	lr, [r0, lr]
 8014eb4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8014eb6:	fb16 f60a 	smulbb	r6, r6, sl
 8014eba:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8014ebe:	fb07 6705 	mla	r7, r7, r5, r6
 8014ec2:	10e6      	asrs	r6, r4, #3
 8014ec4:	00e4      	lsls	r4, r4, #3
 8014ec6:	b2e4      	uxtb	r4, r4
 8014ec8:	fb1b fb0a 	smulbb	fp, fp, sl
 8014ecc:	fb14 f405 	smulbb	r4, r4, r5
 8014ed0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8014ed4:	b2bf      	uxth	r7, r7
 8014ed6:	fb06 b605 	mla	r6, r6, r5, fp
 8014eda:	fb0e 4e0a 	mla	lr, lr, sl, r4
 8014ede:	b2b6      	uxth	r6, r6
 8014ee0:	fa1f fe8e 	uxth.w	lr, lr
 8014ee4:	1c7c      	adds	r4, r7, #1
 8014ee6:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8014eea:	f106 0b01 	add.w	fp, r6, #1
 8014eee:	f10e 0401 	add.w	r4, lr, #1
 8014ef2:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 8014ef6:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8014efa:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8014efe:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8014f02:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8014f06:	4327      	orrs	r7, r4
 8014f08:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8014f0c:	4401      	add	r1, r0
 8014f0e:	9814      	ldr	r0, [sp, #80]	; 0x50
 8014f10:	ea47 070b 	orr.w	r7, r7, fp
 8014f14:	f829 7b02 	strh.w	r7, [r9], #2
 8014f18:	4402      	add	r2, r0
 8014f1a:	f108 38ff 	add.w	r8, r8, #4294967295
 8014f1e:	e7af      	b.n	8014e80 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8014f20:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 8014f24:	f04f 0e00 	mov.w	lr, #0
 8014f28:	eb03 040e 	add.w	r4, r3, lr
 8014f2c:	2c00      	cmp	r4, #0
 8014f2e:	dc43      	bgt.n	8014fb8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8014f30:	9a00      	ldr	r2, [sp, #0]
 8014f32:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014f36:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8014f3a:	9300      	str	r3, [sp, #0]
 8014f3c:	9b02      	ldr	r3, [sp, #8]
 8014f3e:	2b00      	cmp	r3, #0
 8014f40:	f340 8098 	ble.w	8015074 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8014f44:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014f48:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8014f4c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8014f50:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014f52:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014f56:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014f5a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014f5e:	eef0 6a62 	vmov.f32	s13, s5
 8014f62:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014f66:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014f6a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014f6e:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8014f72:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014f76:	eef0 6a43 	vmov.f32	s13, s6
 8014f7a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014f7e:	ee12 2a90 	vmov	r2, s5
 8014f82:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014f86:	fb92 f3f3 	sdiv	r3, r2, r3
 8014f8a:	ee13 2a10 	vmov	r2, s6
 8014f8e:	9313      	str	r3, [sp, #76]	; 0x4c
 8014f90:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014f92:	fb92 f3f3 	sdiv	r3, r2, r3
 8014f96:	9314      	str	r3, [sp, #80]	; 0x50
 8014f98:	9b02      	ldr	r3, [sp, #8]
 8014f9a:	9a05      	ldr	r2, [sp, #20]
 8014f9c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014fa0:	3b01      	subs	r3, #1
 8014fa2:	9302      	str	r3, [sp, #8]
 8014fa4:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8014fa8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014faa:	eeb0 3a67 	vmov.f32	s6, s15
 8014fae:	bf08      	it	eq
 8014fb0:	4613      	moveq	r3, r2
 8014fb2:	eef0 2a47 	vmov.f32	s5, s14
 8014fb6:	e72a      	b.n	8014e0e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8014fb8:	140f      	asrs	r7, r1, #16
 8014fba:	d454      	bmi.n	8015066 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8014fbc:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8014fc0:	42be      	cmp	r6, r7
 8014fc2:	dd50      	ble.n	8015066 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8014fc4:	ea5f 4822 	movs.w	r8, r2, asr #16
 8014fc8:	d44d      	bmi.n	8015066 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8014fca:	f8dc 400c 	ldr.w	r4, [ip, #12]
 8014fce:	4544      	cmp	r4, r8
 8014fd0:	dd49      	ble.n	8015066 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8014fd2:	9c04      	ldr	r4, [sp, #16]
 8014fd4:	b236      	sxth	r6, r6
 8014fd6:	fb08 4606 	mla	r6, r8, r6, r4
 8014fda:	f06f 0001 	mvn.w	r0, #1
 8014fde:	f816 8007 	ldrb.w	r8, [r6, r7]
 8014fe2:	9c01      	ldr	r4, [sp, #4]
 8014fe4:	fb00 fa0e 	mul.w	sl, r0, lr
 8014fe8:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8014fec:	9800      	ldr	r0, [sp, #0]
 8014fee:	eb04 0b08 	add.w	fp, r4, r8
 8014ff2:	f830 400a 	ldrh.w	r4, [r0, sl]
 8014ff6:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8014ffa:	9801      	ldr	r0, [sp, #4]
 8014ffc:	f89b b001 	ldrb.w	fp, [fp, #1]
 8015000:	f810 8008 	ldrb.w	r8, [r0, r8]
 8015004:	9800      	ldr	r0, [sp, #0]
 8015006:	1227      	asrs	r7, r4, #8
 8015008:	fb16 f609 	smulbb	r6, r6, r9
 801500c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8015010:	fb07 6705 	mla	r7, r7, r5, r6
 8015014:	10e6      	asrs	r6, r4, #3
 8015016:	00e4      	lsls	r4, r4, #3
 8015018:	b2e4      	uxtb	r4, r4
 801501a:	fb1b fb09 	smulbb	fp, fp, r9
 801501e:	fb14 f405 	smulbb	r4, r4, r5
 8015022:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8015026:	b2bf      	uxth	r7, r7
 8015028:	fb06 b605 	mla	r6, r6, r5, fp
 801502c:	fb08 4809 	mla	r8, r8, r9, r4
 8015030:	b2b6      	uxth	r6, r6
 8015032:	fa1f f888 	uxth.w	r8, r8
 8015036:	1c7c      	adds	r4, r7, #1
 8015038:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801503c:	f106 0b01 	add.w	fp, r6, #1
 8015040:	f108 0401 	add.w	r4, r8, #1
 8015044:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 8015048:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801504c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8015050:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8015054:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8015058:	4327      	orrs	r7, r4
 801505a:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801505e:	ea47 070b 	orr.w	r7, r7, fp
 8015062:	f820 700a 	strh.w	r7, [r0, sl]
 8015066:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8015068:	4401      	add	r1, r0
 801506a:	9814      	ldr	r0, [sp, #80]	; 0x50
 801506c:	f10e 3eff 	add.w	lr, lr, #4294967295
 8015070:	4402      	add	r2, r0
 8015072:	e759      	b.n	8014f28 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8015074:	b007      	add	sp, #28
 8015076:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801507c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801507c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015080:	b085      	sub	sp, #20
 8015082:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8015086:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8015088:	9203      	str	r2, [sp, #12]
 801508a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801508e:	6870      	ldr	r0, [r6, #4]
 8015090:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8015092:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 8015096:	686f      	ldr	r7, [r5, #4]
 8015098:	9101      	str	r1, [sp, #4]
 801509a:	fb00 2404 	mla	r4, r0, r4, r2
 801509e:	6832      	ldr	r2, [r6, #0]
 80150a0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80150a4:	682a      	ldr	r2, [r5, #0]
 80150a6:	9202      	str	r2, [sp, #8]
 80150a8:	3704      	adds	r7, #4
 80150aa:	9a01      	ldr	r2, [sp, #4]
 80150ac:	2a00      	cmp	r2, #0
 80150ae:	dc03      	bgt.n	80150b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80150b0:	9a03      	ldr	r2, [sp, #12]
 80150b2:	2a00      	cmp	r2, #0
 80150b4:	f340 80cc 	ble.w	8015250 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80150b8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80150ba:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 80150be:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 80150c2:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80150c6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80150c8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80150cc:	2b00      	cmp	r3, #0
 80150ce:	dd0d      	ble.n	80150ec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80150d0:	1406      	asrs	r6, r0, #16
 80150d2:	d405      	bmi.n	80150e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80150d4:	454e      	cmp	r6, r9
 80150d6:	da03      	bge.n	80150e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80150d8:	1416      	asrs	r6, r2, #16
 80150da:	d401      	bmi.n	80150e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80150dc:	4546      	cmp	r6, r8
 80150de:	db06      	blt.n	80150ee <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80150e0:	9e12      	ldr	r6, [sp, #72]	; 0x48
 80150e2:	4460      	add	r0, ip
 80150e4:	4432      	add	r2, r6
 80150e6:	3b01      	subs	r3, #1
 80150e8:	3402      	adds	r4, #2
 80150ea:	e7ef      	b.n	80150cc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 80150ec:	d00f      	beq.n	801510e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80150ee:	1e5e      	subs	r6, r3, #1
 80150f0:	fb0c 0e06 	mla	lr, ip, r6, r0
 80150f4:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 80150f8:	d543      	bpl.n	8015182 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 80150fa:	4698      	mov	r8, r3
 80150fc:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 8015100:	f1b8 0f00 	cmp.w	r8, #0
 8015104:	dc71      	bgt.n	80151ea <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8015106:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801510a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801510e:	9b01      	ldr	r3, [sp, #4]
 8015110:	2b00      	cmp	r3, #0
 8015112:	f340 809d 	ble.w	8015250 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8015116:	ee30 0a04 	vadd.f32	s0, s0, s8
 801511a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801511e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015122:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015124:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015128:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801512c:	eeb0 6a62 	vmov.f32	s12, s5
 8015130:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015134:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015138:	ee77 2a62 	vsub.f32	s5, s14, s5
 801513c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8015140:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015144:	eeb0 6a43 	vmov.f32	s12, s6
 8015148:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801514c:	ee12 2a90 	vmov	r2, s5
 8015150:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015154:	fb92 fcf3 	sdiv	ip, r2, r3
 8015158:	ee13 2a10 	vmov	r2, s6
 801515c:	fb92 f3f3 	sdiv	r3, r2, r3
 8015160:	9312      	str	r3, [sp, #72]	; 0x48
 8015162:	9b01      	ldr	r3, [sp, #4]
 8015164:	9a03      	ldr	r2, [sp, #12]
 8015166:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801516a:	3b01      	subs	r3, #1
 801516c:	9301      	str	r3, [sp, #4]
 801516e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8015172:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015174:	eeb0 3a67 	vmov.f32	s6, s15
 8015178:	bf08      	it	eq
 801517a:	4613      	moveq	r3, r2
 801517c:	eef0 2a47 	vmov.f32	s5, s14
 8015180:	e793      	b.n	80150aa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8015182:	45ce      	cmp	lr, r9
 8015184:	dab9      	bge.n	80150fa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8015186:	9912      	ldr	r1, [sp, #72]	; 0x48
 8015188:	fb01 2606 	mla	r6, r1, r6, r2
 801518c:	1436      	asrs	r6, r6, #16
 801518e:	d4b4      	bmi.n	80150fa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8015190:	4546      	cmp	r6, r8
 8015192:	dab2      	bge.n	80150fa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8015194:	4698      	mov	r8, r3
 8015196:	46a2      	mov	sl, r4
 8015198:	f1b8 0f00 	cmp.w	r8, #0
 801519c:	ddb3      	ble.n	8015106 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801519e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 80151a2:	9902      	ldr	r1, [sp, #8]
 80151a4:	1416      	asrs	r6, r2, #16
 80151a6:	fb09 1606 	mla	r6, r9, r6, r1
 80151aa:	ea4f 4e20 	mov.w	lr, r0, asr #16
 80151ae:	492a      	ldr	r1, [pc, #168]	; (8015258 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 80151b0:	f816 e00e 	ldrb.w	lr, [r6, lr]
 80151b4:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80151b8:	eb07 0b0e 	add.w	fp, r7, lr
 80151bc:	4460      	add	r0, ip
 80151be:	f89b 6001 	ldrb.w	r6, [fp, #1]
 80151c2:	f89b 9002 	ldrb.w	r9, [fp, #2]
 80151c6:	00f6      	lsls	r6, r6, #3
 80151c8:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 80151cc:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80151d0:	ea49 0606 	orr.w	r6, r9, r6
 80151d4:	f817 900e 	ldrb.w	r9, [r7, lr]
 80151d8:	9912      	ldr	r1, [sp, #72]	; 0x48
 80151da:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 80151de:	f82a 6b02 	strh.w	r6, [sl], #2
 80151e2:	440a      	add	r2, r1
 80151e4:	f108 38ff 	add.w	r8, r8, #4294967295
 80151e8:	e7d6      	b.n	8015198 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80151ea:	ea5f 4920 	movs.w	r9, r0, asr #16
 80151ee:	d429      	bmi.n	8015244 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80151f0:	68ae      	ldr	r6, [r5, #8]
 80151f2:	454e      	cmp	r6, r9
 80151f4:	dd26      	ble.n	8015244 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80151f6:	ea5f 4b22 	movs.w	fp, r2, asr #16
 80151fa:	d423      	bmi.n	8015244 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80151fc:	68e9      	ldr	r1, [r5, #12]
 80151fe:	4559      	cmp	r1, fp
 8015200:	dd20      	ble.n	8015244 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8015202:	9902      	ldr	r1, [sp, #8]
 8015204:	fa0f fe86 	sxth.w	lr, r6
 8015208:	fb0b 1e0e 	mla	lr, fp, lr, r1
 801520c:	f06f 0101 	mvn.w	r1, #1
 8015210:	f81e e009 	ldrb.w	lr, [lr, r9]
 8015214:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8015218:	eb07 060e 	add.w	r6, r7, lr
 801521c:	fb01 f908 	mul.w	r9, r1, r8
 8015220:	f896 b002 	ldrb.w	fp, [r6, #2]
 8015224:	7876      	ldrb	r6, [r6, #1]
 8015226:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 801522a:	00f6      	lsls	r6, r6, #3
 801522c:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 8015230:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8015234:	ea4b 0606 	orr.w	r6, fp, r6
 8015238:	f817 b00e 	ldrb.w	fp, [r7, lr]
 801523c:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 8015240:	f82a 6009 	strh.w	r6, [sl, r9]
 8015244:	9912      	ldr	r1, [sp, #72]	; 0x48
 8015246:	4460      	add	r0, ip
 8015248:	440a      	add	r2, r1
 801524a:	f108 38ff 	add.w	r8, r8, #4294967295
 801524e:	e757      	b.n	8015100 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8015250:	b005      	add	sp, #20
 8015252:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015256:	bf00      	nop
 8015258:	fffff800 	.word	0xfffff800

0801525c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801525c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015260:	b087      	sub	sp, #28
 8015262:	468b      	mov	fp, r1
 8015264:	9815      	ldr	r0, [sp, #84]	; 0x54
 8015266:	9204      	str	r2, [sp, #16]
 8015268:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801526c:	9205      	str	r2, [sp, #20]
 801526e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8015272:	6841      	ldr	r1, [r0, #4]
 8015274:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8015278:	fb01 2404 	mla	r4, r1, r4, r2
 801527c:	6802      	ldr	r2, [r0, #0]
 801527e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015282:	f8dc 2000 	ldr.w	r2, [ip]
 8015286:	9201      	str	r2, [sp, #4]
 8015288:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801528c:	3204      	adds	r2, #4
 801528e:	9202      	str	r2, [sp, #8]
 8015290:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8015294:	f1bb 0f00 	cmp.w	fp, #0
 8015298:	dc03      	bgt.n	80152a2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801529a:	9a04      	ldr	r2, [sp, #16]
 801529c:	2a00      	cmp	r2, #0
 801529e:	f340 8138 	ble.w	8015512 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 80152a2:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80152a4:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 80152a8:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 80152ac:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80152b0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80152b2:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80152b6:	2b00      	cmp	r3, #0
 80152b8:	dd0e      	ble.n	80152d8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80152ba:	1402      	asrs	r2, r0, #16
 80152bc:	d405      	bmi.n	80152ca <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80152be:	42ba      	cmp	r2, r7
 80152c0:	da03      	bge.n	80152ca <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80152c2:	140a      	asrs	r2, r1, #16
 80152c4:	d401      	bmi.n	80152ca <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80152c6:	42b2      	cmp	r2, r6
 80152c8:	db07      	blt.n	80152da <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80152ca:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80152cc:	4410      	add	r0, r2
 80152ce:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80152d0:	3b01      	subs	r3, #1
 80152d2:	4411      	add	r1, r2
 80152d4:	3402      	adds	r4, #2
 80152d6:	e7ee      	b.n	80152b6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 80152d8:	d019      	beq.n	801530e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 80152da:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80152dc:	1e5a      	subs	r2, r3, #1
 80152de:	fb05 0502 	mla	r5, r5, r2, r0
 80152e2:	142d      	asrs	r5, r5, #16
 80152e4:	d409      	bmi.n	80152fa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80152e6:	42bd      	cmp	r5, r7
 80152e8:	da07      	bge.n	80152fa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80152ea:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80152ec:	fb05 1202 	mla	r2, r5, r2, r1
 80152f0:	1412      	asrs	r2, r2, #16
 80152f2:	d402      	bmi.n	80152fa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80152f4:	42b2      	cmp	r2, r6
 80152f6:	f2c0 80ac 	blt.w	8015452 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 80152fa:	f04f 0e00 	mov.w	lr, #0
 80152fe:	eb03 020e 	add.w	r2, r3, lr
 8015302:	2a00      	cmp	r2, #0
 8015304:	dc3e      	bgt.n	8015384 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8015306:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801530a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801530e:	f1bb 0f00 	cmp.w	fp, #0
 8015312:	f340 80fe 	ble.w	8015512 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8015316:	ee30 0a04 	vadd.f32	s0, s0, s8
 801531a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801531e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015322:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015324:	f1bb 0b01 	subs.w	fp, fp, #1
 8015328:	ee31 1a05 	vadd.f32	s2, s2, s10
 801532c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015330:	eeb0 6a62 	vmov.f32	s12, s5
 8015334:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015338:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801533c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015340:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8015344:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015348:	eeb0 6a43 	vmov.f32	s12, s6
 801534c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015350:	ee12 2a90 	vmov	r2, s5
 8015354:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015358:	fb92 f3f3 	sdiv	r3, r2, r3
 801535c:	ee13 2a10 	vmov	r2, s6
 8015360:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015364:	9313      	str	r3, [sp, #76]	; 0x4c
 8015366:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015368:	fb92 f3f3 	sdiv	r3, r2, r3
 801536c:	9a04      	ldr	r2, [sp, #16]
 801536e:	9314      	str	r3, [sp, #80]	; 0x50
 8015370:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8015374:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015376:	eeb0 3a67 	vmov.f32	s6, s15
 801537a:	bf08      	it	eq
 801537c:	4613      	moveq	r3, r2
 801537e:	eef0 2a47 	vmov.f32	s5, s14
 8015382:	e787      	b.n	8015294 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8015384:	1406      	asrs	r6, r0, #16
 8015386:	d45d      	bmi.n	8015444 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8015388:	f8dc 5008 	ldr.w	r5, [ip, #8]
 801538c:	42b5      	cmp	r5, r6
 801538e:	dd59      	ble.n	8015444 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8015390:	140f      	asrs	r7, r1, #16
 8015392:	d457      	bmi.n	8015444 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8015394:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8015398:	42ba      	cmp	r2, r7
 801539a:	dd53      	ble.n	8015444 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801539c:	9a01      	ldr	r2, [sp, #4]
 801539e:	b22d      	sxth	r5, r5
 80153a0:	fb07 2505 	mla	r5, r7, r5, r2
 80153a4:	5daa      	ldrb	r2, [r5, r6]
 80153a6:	9d02      	ldr	r5, [sp, #8]
 80153a8:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 80153ac:	0e2e      	lsrs	r6, r5, #24
 80153ae:	d049      	beq.n	8015444 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80153b0:	f06f 0201 	mvn.w	r2, #1
 80153b4:	fb02 f20e 	mul.w	r2, r2, lr
 80153b8:	9203      	str	r2, [sp, #12]
 80153ba:	f834 8002 	ldrh.w	r8, [r4, r2]
 80153be:	9a05      	ldr	r2, [sp, #20]
 80153c0:	4356      	muls	r6, r2
 80153c2:	1c72      	adds	r2, r6, #1
 80153c4:	eb02 2226 	add.w	r2, r2, r6, asr #8
 80153c8:	1212      	asrs	r2, r2, #8
 80153ca:	fa1f f982 	uxth.w	r9, r2
 80153ce:	ea4f 2728 	mov.w	r7, r8, asr #8
 80153d2:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80153d6:	43d2      	mvns	r2, r2
 80153d8:	b2d2      	uxtb	r2, r2
 80153da:	fb16 f609 	smulbb	r6, r6, r9
 80153de:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80153e2:	fb07 6702 	mla	r7, r7, r2, r6
 80153e6:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80153ea:	ea4f 06e8 	mov.w	r6, r8, asr #3
 80153ee:	b2ed      	uxtb	r5, r5
 80153f0:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80153f4:	fa5f f888 	uxtb.w	r8, r8
 80153f8:	fb15 f509 	smulbb	r5, r5, r9
 80153fc:	fb08 5502 	mla	r5, r8, r2, r5
 8015400:	b2bf      	uxth	r7, r7
 8015402:	fb1a fa09 	smulbb	sl, sl, r9
 8015406:	b2ad      	uxth	r5, r5
 8015408:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801540c:	fb06 a602 	mla	r6, r6, r2, sl
 8015410:	1c7a      	adds	r2, r7, #1
 8015412:	f105 0a01 	add.w	sl, r5, #1
 8015416:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801541a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801541e:	b2b6      	uxth	r6, r6
 8015420:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015424:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8015428:	ea4a 0707 	orr.w	r7, sl, r7
 801542c:	f106 0a01 	add.w	sl, r6, #1
 8015430:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8015434:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015438:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801543c:	9a03      	ldr	r2, [sp, #12]
 801543e:	ea47 070a 	orr.w	r7, r7, sl
 8015442:	52a7      	strh	r7, [r4, r2]
 8015444:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8015446:	4410      	add	r0, r2
 8015448:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801544a:	f10e 3eff 	add.w	lr, lr, #4294967295
 801544e:	4411      	add	r1, r2
 8015450:	e755      	b.n	80152fe <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8015452:	f04f 0800 	mov.w	r8, #0
 8015456:	eba3 0208 	sub.w	r2, r3, r8
 801545a:	2a00      	cmp	r2, #0
 801545c:	f77f af53 	ble.w	8015306 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8015460:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 8015464:	9f01      	ldr	r7, [sp, #4]
 8015466:	140a      	asrs	r2, r1, #16
 8015468:	1405      	asrs	r5, r0, #16
 801546a:	fb06 7202 	mla	r2, r6, r2, r7
 801546e:	5d52      	ldrb	r2, [r2, r5]
 8015470:	9d02      	ldr	r5, [sp, #8]
 8015472:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8015476:	0e2e      	lsrs	r6, r5, #24
 8015478:	d044      	beq.n	8015504 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801547a:	9a05      	ldr	r2, [sp, #20]
 801547c:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8015480:	4356      	muls	r6, r2
 8015482:	1c72      	adds	r2, r6, #1
 8015484:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8015488:	1212      	asrs	r2, r2, #8
 801548a:	fa1f f982 	uxth.w	r9, r2
 801548e:	ea4f 272e 	mov.w	r7, lr, asr #8
 8015492:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8015496:	43d2      	mvns	r2, r2
 8015498:	b2d2      	uxtb	r2, r2
 801549a:	fb16 f609 	smulbb	r6, r6, r9
 801549e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80154a2:	fb07 6702 	mla	r7, r7, r2, r6
 80154a6:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80154aa:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80154ae:	b2ed      	uxtb	r5, r5
 80154b0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80154b4:	fa5f fe8e 	uxtb.w	lr, lr
 80154b8:	fb15 f509 	smulbb	r5, r5, r9
 80154bc:	fb0e 5502 	mla	r5, lr, r2, r5
 80154c0:	b2bf      	uxth	r7, r7
 80154c2:	fb1a fa09 	smulbb	sl, sl, r9
 80154c6:	b2ad      	uxth	r5, r5
 80154c8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80154cc:	fb06 a602 	mla	r6, r6, r2, sl
 80154d0:	1c7a      	adds	r2, r7, #1
 80154d2:	f105 0a01 	add.w	sl, r5, #1
 80154d6:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80154da:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80154de:	b2b6      	uxth	r6, r6
 80154e0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80154e4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80154e8:	ea4a 0707 	orr.w	r7, sl, r7
 80154ec:	f106 0a01 	add.w	sl, r6, #1
 80154f0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80154f4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80154f8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80154fc:	ea47 070a 	orr.w	r7, r7, sl
 8015500:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8015504:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8015506:	4410      	add	r0, r2
 8015508:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801550a:	f108 0801 	add.w	r8, r8, #1
 801550e:	4411      	add	r1, r2
 8015510:	e7a1      	b.n	8015456 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8015512:	b007      	add	sp, #28
 8015514:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015518 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015518:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801551c:	b085      	sub	sp, #20
 801551e:	468b      	mov	fp, r1
 8015520:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8015522:	9203      	str	r2, [sp, #12]
 8015524:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8015528:	6841      	ldr	r1, [r0, #4]
 801552a:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801552e:	fb01 2404 	mla	r4, r1, r4, r2
 8015532:	6802      	ldr	r2, [r0, #0]
 8015534:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015538:	f8de 2000 	ldr.w	r2, [lr]
 801553c:	9200      	str	r2, [sp, #0]
 801553e:	f8de 2004 	ldr.w	r2, [lr, #4]
 8015542:	3204      	adds	r2, #4
 8015544:	9201      	str	r2, [sp, #4]
 8015546:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801554a:	f1bb 0f00 	cmp.w	fp, #0
 801554e:	dc03      	bgt.n	8015558 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8015550:	9a03      	ldr	r2, [sp, #12]
 8015552:	2a00      	cmp	r2, #0
 8015554:	f340 8153 	ble.w	80157fe <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8015558:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801555a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801555e:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8015562:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8015566:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015568:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801556c:	2b00      	cmp	r3, #0
 801556e:	dd0e      	ble.n	801558e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8015570:	1408      	asrs	r0, r1, #16
 8015572:	d405      	bmi.n	8015580 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8015574:	42b8      	cmp	r0, r7
 8015576:	da03      	bge.n	8015580 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8015578:	1410      	asrs	r0, r2, #16
 801557a:	d401      	bmi.n	8015580 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801557c:	42b0      	cmp	r0, r6
 801557e:	db07      	blt.n	8015590 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8015580:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015582:	4401      	add	r1, r0
 8015584:	9812      	ldr	r0, [sp, #72]	; 0x48
 8015586:	3b01      	subs	r3, #1
 8015588:	4402      	add	r2, r0
 801558a:	3402      	adds	r4, #2
 801558c:	e7ee      	b.n	801556c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801558e:	d017      	beq.n	80155c0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8015590:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8015592:	1e58      	subs	r0, r3, #1
 8015594:	fb05 1500 	mla	r5, r5, r0, r1
 8015598:	142d      	asrs	r5, r5, #16
 801559a:	d409      	bmi.n	80155b0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801559c:	42bd      	cmp	r5, r7
 801559e:	da07      	bge.n	80155b0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80155a0:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80155a2:	fb05 2000 	mla	r0, r5, r0, r2
 80155a6:	1400      	asrs	r0, r0, #16
 80155a8:	d402      	bmi.n	80155b0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80155aa:	42b0      	cmp	r0, r6
 80155ac:	f2c0 80bc 	blt.w	8015728 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 80155b0:	2600      	movs	r6, #0
 80155b2:	1998      	adds	r0, r3, r6
 80155b4:	2800      	cmp	r0, #0
 80155b6:	dc3e      	bgt.n	8015636 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 80155b8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80155bc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80155c0:	f1bb 0f00 	cmp.w	fp, #0
 80155c4:	f340 811b 	ble.w	80157fe <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 80155c8:	ee30 0a04 	vadd.f32	s0, s0, s8
 80155cc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80155d0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80155d4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80155d6:	f1bb 0b01 	subs.w	fp, fp, #1
 80155da:	ee31 1a05 	vadd.f32	s2, s2, s10
 80155de:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80155e2:	eeb0 6a62 	vmov.f32	s12, s5
 80155e6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80155ea:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80155ee:	ee77 2a62 	vsub.f32	s5, s14, s5
 80155f2:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80155f6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80155fa:	eeb0 6a43 	vmov.f32	s12, s6
 80155fe:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015602:	ee12 2a90 	vmov	r2, s5
 8015606:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801560a:	fb92 f3f3 	sdiv	r3, r2, r3
 801560e:	ee13 2a10 	vmov	r2, s6
 8015612:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015616:	9311      	str	r3, [sp, #68]	; 0x44
 8015618:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801561a:	fb92 f3f3 	sdiv	r3, r2, r3
 801561e:	9a03      	ldr	r2, [sp, #12]
 8015620:	9312      	str	r3, [sp, #72]	; 0x48
 8015622:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8015626:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015628:	eeb0 3a67 	vmov.f32	s6, s15
 801562c:	bf08      	it	eq
 801562e:	4613      	moveq	r3, r2
 8015630:	eef0 2a47 	vmov.f32	s5, s14
 8015634:	e789      	b.n	801554a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8015636:	140f      	asrs	r7, r1, #16
 8015638:	d426      	bmi.n	8015688 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801563a:	f8de 5008 	ldr.w	r5, [lr, #8]
 801563e:	42bd      	cmp	r5, r7
 8015640:	dd22      	ble.n	8015688 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8015642:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8015646:	d41f      	bmi.n	8015688 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8015648:	f8de 000c 	ldr.w	r0, [lr, #12]
 801564c:	4560      	cmp	r0, ip
 801564e:	dd1b      	ble.n	8015688 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8015650:	9800      	ldr	r0, [sp, #0]
 8015652:	b22d      	sxth	r5, r5
 8015654:	fb0c 0505 	mla	r5, ip, r5, r0
 8015658:	5de8      	ldrb	r0, [r5, r7]
 801565a:	9d01      	ldr	r5, [sp, #4]
 801565c:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8015660:	0e07      	lsrs	r7, r0, #24
 8015662:	2fff      	cmp	r7, #255	; 0xff
 8015664:	d116      	bne.n	8015694 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8015666:	f06f 0501 	mvn.w	r5, #1
 801566a:	fb05 f706 	mul.w	r7, r5, r6
 801566e:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 8015672:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8015676:	0945      	lsrs	r5, r0, #5
 8015678:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801567c:	ea4c 0505 	orr.w	r5, ip, r5
 8015680:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8015684:	4305      	orrs	r5, r0
 8015686:	53e5      	strh	r5, [r4, r7]
 8015688:	9811      	ldr	r0, [sp, #68]	; 0x44
 801568a:	4401      	add	r1, r0
 801568c:	9812      	ldr	r0, [sp, #72]	; 0x48
 801568e:	3e01      	subs	r6, #1
 8015690:	4402      	add	r2, r0
 8015692:	e78e      	b.n	80155b2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8015694:	b2fd      	uxtb	r5, r7
 8015696:	2f00      	cmp	r7, #0
 8015698:	d0f6      	beq.n	8015688 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801569a:	f06f 0701 	mvn.w	r7, #1
 801569e:	4377      	muls	r7, r6
 80156a0:	fa1f f985 	uxth.w	r9, r5
 80156a4:	f834 8007 	ldrh.w	r8, [r4, r7]
 80156a8:	9702      	str	r7, [sp, #8]
 80156aa:	ea4f 2c28 	mov.w	ip, r8, asr #8
 80156ae:	f3c0 4707 	ubfx	r7, r0, #16, #8
 80156b2:	43ed      	mvns	r5, r5
 80156b4:	b2ed      	uxtb	r5, r5
 80156b6:	fb17 f709 	smulbb	r7, r7, r9
 80156ba:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80156be:	fb0c 7c05 	mla	ip, ip, r5, r7
 80156c2:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 80156c6:	ea4f 07e8 	mov.w	r7, r8, asr #3
 80156ca:	b2c0      	uxtb	r0, r0
 80156cc:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80156d0:	fa5f f888 	uxtb.w	r8, r8
 80156d4:	fb10 f009 	smulbb	r0, r0, r9
 80156d8:	fb08 0005 	mla	r0, r8, r5, r0
 80156dc:	b280      	uxth	r0, r0
 80156de:	fa1f fc8c 	uxth.w	ip, ip
 80156e2:	fb1a fa09 	smulbb	sl, sl, r9
 80156e6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80156ea:	fb07 a705 	mla	r7, r7, r5, sl
 80156ee:	f100 0a01 	add.w	sl, r0, #1
 80156f2:	f10c 0501 	add.w	r5, ip, #1
 80156f6:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 80156fa:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80156fe:	b2bf      	uxth	r7, r7
 8015700:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015704:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8015708:	ea4a 0c0c 	orr.w	ip, sl, ip
 801570c:	f107 0a01 	add.w	sl, r7, #1
 8015710:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8015714:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015718:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801571c:	9802      	ldr	r0, [sp, #8]
 801571e:	ea4c 0c0a 	orr.w	ip, ip, sl
 8015722:	f824 c000 	strh.w	ip, [r4, r0]
 8015726:	e7af      	b.n	8015688 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8015728:	f04f 0800 	mov.w	r8, #0
 801572c:	eba3 0008 	sub.w	r0, r3, r8
 8015730:	2800      	cmp	r0, #0
 8015732:	f77f af41 	ble.w	80155b8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8015736:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801573a:	9f00      	ldr	r7, [sp, #0]
 801573c:	1410      	asrs	r0, r2, #16
 801573e:	140d      	asrs	r5, r1, #16
 8015740:	fb06 7000 	mla	r0, r6, r0, r7
 8015744:	5d40      	ldrb	r0, [r0, r5]
 8015746:	9d01      	ldr	r5, [sp, #4]
 8015748:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801574c:	0e2e      	lsrs	r6, r5, #24
 801574e:	2eff      	cmp	r6, #255	; 0xff
 8015750:	d112      	bne.n	8015778 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 8015752:	482c      	ldr	r0, [pc, #176]	; (8015804 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8015754:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8015758:	0968      	lsrs	r0, r5, #5
 801575a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801575e:	4330      	orrs	r0, r6
 8015760:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8015764:	4328      	orrs	r0, r5
 8015766:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 801576a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801576c:	4401      	add	r1, r0
 801576e:	9812      	ldr	r0, [sp, #72]	; 0x48
 8015770:	f108 0801 	add.w	r8, r8, #1
 8015774:	4402      	add	r2, r0
 8015776:	e7d9      	b.n	801572c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8015778:	b2f0      	uxtb	r0, r6
 801577a:	2e00      	cmp	r6, #0
 801577c:	d0f5      	beq.n	801576a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801577e:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 8015782:	fa1f f980 	uxth.w	r9, r0
 8015786:	ea4f 272c 	mov.w	r7, ip, asr #8
 801578a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801578e:	43c0      	mvns	r0, r0
 8015790:	b2c0      	uxtb	r0, r0
 8015792:	fb16 f609 	smulbb	r6, r6, r9
 8015796:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801579a:	fb07 6700 	mla	r7, r7, r0, r6
 801579e:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80157a2:	ea4f 06ec 	mov.w	r6, ip, asr #3
 80157a6:	b2ed      	uxtb	r5, r5
 80157a8:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80157ac:	fa5f fc8c 	uxtb.w	ip, ip
 80157b0:	fb15 f509 	smulbb	r5, r5, r9
 80157b4:	fb0c 5500 	mla	r5, ip, r0, r5
 80157b8:	b2bf      	uxth	r7, r7
 80157ba:	fb1a fa09 	smulbb	sl, sl, r9
 80157be:	b2ad      	uxth	r5, r5
 80157c0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80157c4:	fb06 a600 	mla	r6, r6, r0, sl
 80157c8:	1c78      	adds	r0, r7, #1
 80157ca:	f105 0a01 	add.w	sl, r5, #1
 80157ce:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 80157d2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80157d6:	b2b6      	uxth	r6, r6
 80157d8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80157dc:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80157e0:	ea4a 0707 	orr.w	r7, sl, r7
 80157e4:	f106 0a01 	add.w	sl, r6, #1
 80157e8:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80157ec:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80157f0:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80157f4:	ea47 070a 	orr.w	r7, r7, sl
 80157f8:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 80157fc:	e7b5      	b.n	801576a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 80157fe:	b005      	add	sp, #20
 8015800:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015804:	fffff800 	.word	0xfffff800

08015808 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015808:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801580c:	b087      	sub	sp, #28
 801580e:	468b      	mov	fp, r1
 8015810:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8015812:	9204      	str	r2, [sp, #16]
 8015814:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8015818:	9205      	str	r2, [sp, #20]
 801581a:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801581e:	6861      	ldr	r1, [r4, #4]
 8015820:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8015824:	fb01 2000 	mla	r0, r1, r0, r2
 8015828:	6822      	ldr	r2, [r4, #0]
 801582a:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801582e:	f8de 2000 	ldr.w	r2, [lr]
 8015832:	9201      	str	r2, [sp, #4]
 8015834:	f8de 2004 	ldr.w	r2, [lr, #4]
 8015838:	9202      	str	r2, [sp, #8]
 801583a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801583e:	f1bb 0f00 	cmp.w	fp, #0
 8015842:	dc03      	bgt.n	801584c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8015844:	9a04      	ldr	r2, [sp, #16]
 8015846:	2a00      	cmp	r2, #0
 8015848:	f340 8142 	ble.w	8015ad0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801584c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801584e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8015852:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8015856:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801585a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801585c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8015860:	2b00      	cmp	r3, #0
 8015862:	dd0e      	ble.n	8015882 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8015864:	140c      	asrs	r4, r1, #16
 8015866:	d405      	bmi.n	8015874 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8015868:	42bc      	cmp	r4, r7
 801586a:	da03      	bge.n	8015874 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801586c:	1414      	asrs	r4, r2, #16
 801586e:	d401      	bmi.n	8015874 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8015870:	42b4      	cmp	r4, r6
 8015872:	db07      	blt.n	8015884 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8015874:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8015876:	4421      	add	r1, r4
 8015878:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801587a:	3b01      	subs	r3, #1
 801587c:	4422      	add	r2, r4
 801587e:	3002      	adds	r0, #2
 8015880:	e7ee      	b.n	8015860 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8015882:	d019      	beq.n	80158b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8015884:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8015886:	1e5c      	subs	r4, r3, #1
 8015888:	fb05 1504 	mla	r5, r5, r4, r1
 801588c:	142d      	asrs	r5, r5, #16
 801588e:	d409      	bmi.n	80158a4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8015890:	42bd      	cmp	r5, r7
 8015892:	da07      	bge.n	80158a4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8015894:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8015896:	fb05 2404 	mla	r4, r5, r4, r2
 801589a:	1424      	asrs	r4, r4, #16
 801589c:	d402      	bmi.n	80158a4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801589e:	42b4      	cmp	r4, r6
 80158a0:	f2c0 80b1 	blt.w	8015a06 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 80158a4:	f04f 0800 	mov.w	r8, #0
 80158a8:	eb03 0408 	add.w	r4, r3, r8
 80158ac:	2c00      	cmp	r4, #0
 80158ae:	dc3e      	bgt.n	801592e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 80158b0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80158b4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80158b8:	f1bb 0f00 	cmp.w	fp, #0
 80158bc:	f340 8108 	ble.w	8015ad0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 80158c0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80158c4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80158c8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80158cc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80158ce:	f1bb 0b01 	subs.w	fp, fp, #1
 80158d2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80158d6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80158da:	eeb0 6a62 	vmov.f32	s12, s5
 80158de:	ee61 7a27 	vmul.f32	s15, s2, s15
 80158e2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80158e6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80158ea:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80158ee:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80158f2:	eeb0 6a43 	vmov.f32	s12, s6
 80158f6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80158fa:	ee12 2a90 	vmov	r2, s5
 80158fe:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015902:	fb92 f3f3 	sdiv	r3, r2, r3
 8015906:	ee13 2a10 	vmov	r2, s6
 801590a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801590e:	9313      	str	r3, [sp, #76]	; 0x4c
 8015910:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015912:	fb92 f3f3 	sdiv	r3, r2, r3
 8015916:	9a04      	ldr	r2, [sp, #16]
 8015918:	9314      	str	r3, [sp, #80]	; 0x50
 801591a:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801591e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015920:	eeb0 3a67 	vmov.f32	s6, s15
 8015924:	bf08      	it	eq
 8015926:	4613      	moveq	r3, r2
 8015928:	eef0 2a47 	vmov.f32	s5, s14
 801592c:	e787      	b.n	801583e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 801592e:	140e      	asrs	r6, r1, #16
 8015930:	d462      	bmi.n	80159f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8015932:	f8de 5008 	ldr.w	r5, [lr, #8]
 8015936:	42b5      	cmp	r5, r6
 8015938:	dd5e      	ble.n	80159f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801593a:	1417      	asrs	r7, r2, #16
 801593c:	d45c      	bmi.n	80159f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801593e:	f8de 400c 	ldr.w	r4, [lr, #12]
 8015942:	42bc      	cmp	r4, r7
 8015944:	dd58      	ble.n	80159f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8015946:	b22d      	sxth	r5, r5
 8015948:	fb07 6505 	mla	r5, r7, r5, r6
 801594c:	9c02      	ldr	r4, [sp, #8]
 801594e:	5d66      	ldrb	r6, [r4, r5]
 8015950:	2e00      	cmp	r6, #0
 8015952:	d051      	beq.n	80159f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8015954:	9c01      	ldr	r4, [sp, #4]
 8015956:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 801595a:	f06f 0401 	mvn.w	r4, #1
 801595e:	fb04 f408 	mul.w	r4, r4, r8
 8015962:	9403      	str	r4, [sp, #12]
 8015964:	5b05      	ldrh	r5, [r0, r4]
 8015966:	9c05      	ldr	r4, [sp, #20]
 8015968:	4366      	muls	r6, r4
 801596a:	1c74      	adds	r4, r6, #1
 801596c:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8015970:	1224      	asrs	r4, r4, #8
 8015972:	b2a7      	uxth	r7, r4
 8015974:	122e      	asrs	r6, r5, #8
 8015976:	43e4      	mvns	r4, r4
 8015978:	b2e4      	uxtb	r4, r4
 801597a:	ea4f 2c29 	mov.w	ip, r9, asr #8
 801597e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8015982:	fb16 f604 	smulbb	r6, r6, r4
 8015986:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801598a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801598e:	00ed      	lsls	r5, r5, #3
 8015990:	fb0c 6c07 	mla	ip, ip, r7, r6
 8015994:	b2ed      	uxtb	r5, r5
 8015996:	ea4f 06e9 	mov.w	r6, r9, asr #3
 801599a:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801599e:	fb15 f504 	smulbb	r5, r5, r4
 80159a2:	fa5f f989 	uxtb.w	r9, r9
 80159a6:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80159aa:	fb09 5507 	mla	r5, r9, r7, r5
 80159ae:	fb1a fa04 	smulbb	sl, sl, r4
 80159b2:	fa1f fc8c 	uxth.w	ip, ip
 80159b6:	b2ad      	uxth	r5, r5
 80159b8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80159bc:	fb06 a607 	mla	r6, r6, r7, sl
 80159c0:	f10c 0401 	add.w	r4, ip, #1
 80159c4:	f105 0a01 	add.w	sl, r5, #1
 80159c8:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 80159cc:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80159d0:	b2b6      	uxth	r6, r6
 80159d2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80159d6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80159da:	ea4a 0c0c 	orr.w	ip, sl, ip
 80159de:	f106 0a01 	add.w	sl, r6, #1
 80159e2:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80159e6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80159ea:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80159ee:	9c03      	ldr	r4, [sp, #12]
 80159f0:	ea4c 0c0a 	orr.w	ip, ip, sl
 80159f4:	f820 c004 	strh.w	ip, [r0, r4]
 80159f8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80159fa:	4421      	add	r1, r4
 80159fc:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80159fe:	f108 38ff 	add.w	r8, r8, #4294967295
 8015a02:	4422      	add	r2, r4
 8015a04:	e750      	b.n	80158a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8015a06:	f04f 0900 	mov.w	r9, #0
 8015a0a:	eba3 0409 	sub.w	r4, r3, r9
 8015a0e:	2c00      	cmp	r4, #0
 8015a10:	f77f af4e 	ble.w	80158b0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8015a14:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8015a18:	140d      	asrs	r5, r1, #16
 8015a1a:	1414      	asrs	r4, r2, #16
 8015a1c:	fb06 5404 	mla	r4, r6, r4, r5
 8015a20:	9d02      	ldr	r5, [sp, #8]
 8015a22:	5d2e      	ldrb	r6, [r5, r4]
 8015a24:	2e00      	cmp	r6, #0
 8015a26:	d04c      	beq.n	8015ac2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 8015a28:	9d01      	ldr	r5, [sp, #4]
 8015a2a:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 8015a2e:	9c05      	ldr	r4, [sp, #20]
 8015a30:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8015a34:	4366      	muls	r6, r4
 8015a36:	1c74      	adds	r4, r6, #1
 8015a38:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8015a3c:	1224      	asrs	r4, r4, #8
 8015a3e:	b2a7      	uxth	r7, r4
 8015a40:	122e      	asrs	r6, r5, #8
 8015a42:	43e4      	mvns	r4, r4
 8015a44:	b2e4      	uxtb	r4, r4
 8015a46:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8015a4a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8015a4e:	fb16 f604 	smulbb	r6, r6, r4
 8015a52:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8015a56:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8015a5a:	00ed      	lsls	r5, r5, #3
 8015a5c:	fb0c 6c07 	mla	ip, ip, r7, r6
 8015a60:	b2ed      	uxtb	r5, r5
 8015a62:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8015a66:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8015a6a:	fb15 f504 	smulbb	r5, r5, r4
 8015a6e:	fa5f f888 	uxtb.w	r8, r8
 8015a72:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8015a76:	fb08 5507 	mla	r5, r8, r7, r5
 8015a7a:	fb1a fa04 	smulbb	sl, sl, r4
 8015a7e:	fa1f fc8c 	uxth.w	ip, ip
 8015a82:	b2ad      	uxth	r5, r5
 8015a84:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8015a88:	fb06 a607 	mla	r6, r6, r7, sl
 8015a8c:	f10c 0401 	add.w	r4, ip, #1
 8015a90:	f105 0a01 	add.w	sl, r5, #1
 8015a94:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8015a98:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015a9c:	b2b6      	uxth	r6, r6
 8015a9e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015aa2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8015aa6:	ea4a 0c0c 	orr.w	ip, sl, ip
 8015aaa:	f106 0a01 	add.w	sl, r6, #1
 8015aae:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8015ab2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015ab6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015aba:	ea4c 0c0a 	orr.w	ip, ip, sl
 8015abe:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8015ac2:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8015ac4:	4421      	add	r1, r4
 8015ac6:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8015ac8:	f109 0901 	add.w	r9, r9, #1
 8015acc:	4422      	add	r2, r4
 8015ace:	e79c      	b.n	8015a0a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8015ad0:	b007      	add	sp, #28
 8015ad2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015ad6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015ad6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015ada:	b085      	sub	sp, #20
 8015adc:	468b      	mov	fp, r1
 8015ade:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8015ae0:	9203      	str	r2, [sp, #12]
 8015ae2:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 8015ae6:	6861      	ldr	r1, [r4, #4]
 8015ae8:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8015aec:	fb01 2000 	mla	r0, r1, r0, r2
 8015af0:	6822      	ldr	r2, [r4, #0]
 8015af2:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8015af6:	f8d8 2000 	ldr.w	r2, [r8]
 8015afa:	9200      	str	r2, [sp, #0]
 8015afc:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8015b00:	9201      	str	r2, [sp, #4]
 8015b02:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8015b06:	f1bb 0f00 	cmp.w	fp, #0
 8015b0a:	dc03      	bgt.n	8015b14 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8015b0c:	9a03      	ldr	r2, [sp, #12]
 8015b0e:	2a00      	cmp	r2, #0
 8015b10:	f340 8146 	ble.w	8015da0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8015b14:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8015b16:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8015b1a:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8015b1e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8015b22:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015b24:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8015b28:	2b00      	cmp	r3, #0
 8015b2a:	dd0e      	ble.n	8015b4a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8015b2c:	140c      	asrs	r4, r1, #16
 8015b2e:	d405      	bmi.n	8015b3c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015b30:	42bc      	cmp	r4, r7
 8015b32:	da03      	bge.n	8015b3c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015b34:	1414      	asrs	r4, r2, #16
 8015b36:	d401      	bmi.n	8015b3c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015b38:	42b4      	cmp	r4, r6
 8015b3a:	db07      	blt.n	8015b4c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8015b3c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8015b3e:	4421      	add	r1, r4
 8015b40:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8015b42:	3b01      	subs	r3, #1
 8015b44:	4422      	add	r2, r4
 8015b46:	3002      	adds	r0, #2
 8015b48:	e7ee      	b.n	8015b28 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8015b4a:	d017      	beq.n	8015b7c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8015b4c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8015b4e:	1e5c      	subs	r4, r3, #1
 8015b50:	fb05 1504 	mla	r5, r5, r4, r1
 8015b54:	142d      	asrs	r5, r5, #16
 8015b56:	d409      	bmi.n	8015b6c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8015b58:	42bd      	cmp	r5, r7
 8015b5a:	da07      	bge.n	8015b6c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8015b5c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8015b5e:	fb05 2404 	mla	r4, r5, r4, r2
 8015b62:	1424      	asrs	r4, r4, #16
 8015b64:	d402      	bmi.n	8015b6c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8015b66:	42b4      	cmp	r4, r6
 8015b68:	f2c0 80b3 	blt.w	8015cd2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8015b6c:	2600      	movs	r6, #0
 8015b6e:	199c      	adds	r4, r3, r6
 8015b70:	2c00      	cmp	r4, #0
 8015b72:	dc3e      	bgt.n	8015bf2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8015b74:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015b78:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8015b7c:	f1bb 0f00 	cmp.w	fp, #0
 8015b80:	f340 810e 	ble.w	8015da0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8015b84:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015b88:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015b8c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015b90:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015b92:	f1bb 0b01 	subs.w	fp, fp, #1
 8015b96:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015b9a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015b9e:	eeb0 6a62 	vmov.f32	s12, s5
 8015ba2:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015ba6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015baa:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015bae:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8015bb2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015bb6:	eeb0 6a43 	vmov.f32	s12, s6
 8015bba:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015bbe:	ee12 2a90 	vmov	r2, s5
 8015bc2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015bc6:	fb92 f3f3 	sdiv	r3, r2, r3
 8015bca:	ee13 2a10 	vmov	r2, s6
 8015bce:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015bd2:	9311      	str	r3, [sp, #68]	; 0x44
 8015bd4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015bd6:	fb92 f3f3 	sdiv	r3, r2, r3
 8015bda:	9a03      	ldr	r2, [sp, #12]
 8015bdc:	9312      	str	r3, [sp, #72]	; 0x48
 8015bde:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8015be2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015be4:	eeb0 3a67 	vmov.f32	s6, s15
 8015be8:	bf08      	it	eq
 8015bea:	4613      	moveq	r3, r2
 8015bec:	eef0 2a47 	vmov.f32	s5, s14
 8015bf0:	e789      	b.n	8015b06 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8015bf2:	140f      	asrs	r7, r1, #16
 8015bf4:	d418      	bmi.n	8015c28 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8015bf6:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8015bfa:	42bd      	cmp	r5, r7
 8015bfc:	dd14      	ble.n	8015c28 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8015bfe:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8015c02:	d411      	bmi.n	8015c28 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8015c04:	f8d8 400c 	ldr.w	r4, [r8, #12]
 8015c08:	4564      	cmp	r4, ip
 8015c0a:	dd0d      	ble.n	8015c28 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8015c0c:	b22d      	sxth	r5, r5
 8015c0e:	fb0c 7505 	mla	r5, ip, r5, r7
 8015c12:	9c01      	ldr	r4, [sp, #4]
 8015c14:	5d64      	ldrb	r4, [r4, r5]
 8015c16:	2cff      	cmp	r4, #255	; 0xff
 8015c18:	d10c      	bne.n	8015c34 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8015c1a:	9c00      	ldr	r4, [sp, #0]
 8015c1c:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 8015c20:	f06f 0401 	mvn.w	r4, #1
 8015c24:	4374      	muls	r4, r6
 8015c26:	5305      	strh	r5, [r0, r4]
 8015c28:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8015c2a:	4421      	add	r1, r4
 8015c2c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8015c2e:	3e01      	subs	r6, #1
 8015c30:	4422      	add	r2, r4
 8015c32:	e79c      	b.n	8015b6e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8015c34:	2c00      	cmp	r4, #0
 8015c36:	d0f7      	beq.n	8015c28 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8015c38:	9f00      	ldr	r7, [sp, #0]
 8015c3a:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 8015c3e:	f06f 0501 	mvn.w	r5, #1
 8015c42:	4375      	muls	r5, r6
 8015c44:	9502      	str	r5, [sp, #8]
 8015c46:	5b45      	ldrh	r5, [r0, r5]
 8015c48:	fa1f fc84 	uxth.w	ip, r4
 8015c4c:	122f      	asrs	r7, r5, #8
 8015c4e:	43e4      	mvns	r4, r4
 8015c50:	b2e4      	uxtb	r4, r4
 8015c52:	ea4f 2e29 	mov.w	lr, r9, asr #8
 8015c56:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8015c5a:	fb17 f704 	smulbb	r7, r7, r4
 8015c5e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8015c62:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8015c66:	00ed      	lsls	r5, r5, #3
 8015c68:	fb0e 7e0c 	mla	lr, lr, ip, r7
 8015c6c:	b2ed      	uxtb	r5, r5
 8015c6e:	ea4f 07e9 	mov.w	r7, r9, asr #3
 8015c72:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8015c76:	fb15 f504 	smulbb	r5, r5, r4
 8015c7a:	fa5f f989 	uxtb.w	r9, r9
 8015c7e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8015c82:	fb09 550c 	mla	r5, r9, ip, r5
 8015c86:	fb1a fa04 	smulbb	sl, sl, r4
 8015c8a:	fa1f fe8e 	uxth.w	lr, lr
 8015c8e:	b2ad      	uxth	r5, r5
 8015c90:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8015c94:	fb07 a70c 	mla	r7, r7, ip, sl
 8015c98:	f10e 0401 	add.w	r4, lr, #1
 8015c9c:	f105 0a01 	add.w	sl, r5, #1
 8015ca0:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 8015ca4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015ca8:	b2bf      	uxth	r7, r7
 8015caa:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015cae:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8015cb2:	ea4a 0e0e 	orr.w	lr, sl, lr
 8015cb6:	f107 0a01 	add.w	sl, r7, #1
 8015cba:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8015cbe:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015cc2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015cc6:	9c02      	ldr	r4, [sp, #8]
 8015cc8:	ea4e 0e0a 	orr.w	lr, lr, sl
 8015ccc:	f820 e004 	strh.w	lr, [r0, r4]
 8015cd0:	e7aa      	b.n	8015c28 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8015cd2:	f04f 0900 	mov.w	r9, #0
 8015cd6:	eba3 0409 	sub.w	r4, r3, r9
 8015cda:	2c00      	cmp	r4, #0
 8015cdc:	f77f af4a 	ble.w	8015b74 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015ce0:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8015ce4:	1414      	asrs	r4, r2, #16
 8015ce6:	140d      	asrs	r5, r1, #16
 8015ce8:	fb06 5504 	mla	r5, r6, r4, r5
 8015cec:	9c01      	ldr	r4, [sp, #4]
 8015cee:	5d64      	ldrb	r4, [r4, r5]
 8015cf0:	2cff      	cmp	r4, #255	; 0xff
 8015cf2:	d10b      	bne.n	8015d0c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8015cf4:	9c00      	ldr	r4, [sp, #0]
 8015cf6:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 8015cfa:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 8015cfe:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8015d00:	4421      	add	r1, r4
 8015d02:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8015d04:	f109 0901 	add.w	r9, r9, #1
 8015d08:	4422      	add	r2, r4
 8015d0a:	e7e4      	b.n	8015cd6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8015d0c:	2c00      	cmp	r4, #0
 8015d0e:	d0f6      	beq.n	8015cfe <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8015d10:	9e00      	ldr	r6, [sp, #0]
 8015d12:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 8015d16:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8015d1a:	b2a7      	uxth	r7, r4
 8015d1c:	122e      	asrs	r6, r5, #8
 8015d1e:	43e4      	mvns	r4, r4
 8015d20:	b2e4      	uxtb	r4, r4
 8015d22:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8015d26:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8015d2a:	fb16 f604 	smulbb	r6, r6, r4
 8015d2e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8015d32:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8015d36:	00ed      	lsls	r5, r5, #3
 8015d38:	fb0c 6c07 	mla	ip, ip, r7, r6
 8015d3c:	b2ed      	uxtb	r5, r5
 8015d3e:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8015d42:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8015d46:	fb15 f504 	smulbb	r5, r5, r4
 8015d4a:	fa5f fe8e 	uxtb.w	lr, lr
 8015d4e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8015d52:	fb0e 5507 	mla	r5, lr, r7, r5
 8015d56:	fb1a fa04 	smulbb	sl, sl, r4
 8015d5a:	fa1f fc8c 	uxth.w	ip, ip
 8015d5e:	b2ad      	uxth	r5, r5
 8015d60:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8015d64:	fb06 a607 	mla	r6, r6, r7, sl
 8015d68:	f10c 0401 	add.w	r4, ip, #1
 8015d6c:	f105 0a01 	add.w	sl, r5, #1
 8015d70:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8015d74:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015d78:	b2b6      	uxth	r6, r6
 8015d7a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015d7e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8015d82:	ea4a 0c0c 	orr.w	ip, sl, ip
 8015d86:	f106 0a01 	add.w	sl, r6, #1
 8015d8a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8015d8e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015d92:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015d96:	ea4c 0c0a 	orr.w	ip, ip, sl
 8015d9a:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8015d9e:	e7ae      	b.n	8015cfe <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8015da0:	b005      	add	sp, #20
 8015da2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015da6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015da6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015daa:	b085      	sub	sp, #20
 8015dac:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8015dae:	9203      	str	r2, [sp, #12]
 8015db0:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 8015db4:	9201      	str	r2, [sp, #4]
 8015db6:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8015dba:	9100      	str	r1, [sp, #0]
 8015dbc:	6841      	ldr	r1, [r0, #4]
 8015dbe:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 8015dc2:	fb01 2404 	mla	r4, r1, r4, r2
 8015dc6:	6802      	ldr	r2, [r0, #0]
 8015dc8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015dcc:	f8de 2000 	ldr.w	r2, [lr]
 8015dd0:	9202      	str	r2, [sp, #8]
 8015dd2:	9a01      	ldr	r2, [sp, #4]
 8015dd4:	43d6      	mvns	r6, r2
 8015dd6:	b2f6      	uxtb	r6, r6
 8015dd8:	9a00      	ldr	r2, [sp, #0]
 8015dda:	2a00      	cmp	r2, #0
 8015ddc:	dc03      	bgt.n	8015de6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8015dde:	9a03      	ldr	r2, [sp, #12]
 8015de0:	2a00      	cmp	r2, #0
 8015de2:	f340 8124 	ble.w	801602e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8015de6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8015de8:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8015dec:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8015df0:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8015df4:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015df6:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8015dfa:	2b00      	cmp	r3, #0
 8015dfc:	dd0e      	ble.n	8015e1c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8015dfe:	1408      	asrs	r0, r1, #16
 8015e00:	d405      	bmi.n	8015e0e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8015e02:	4560      	cmp	r0, ip
 8015e04:	da03      	bge.n	8015e0e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8015e06:	1410      	asrs	r0, r2, #16
 8015e08:	d401      	bmi.n	8015e0e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8015e0a:	42b8      	cmp	r0, r7
 8015e0c:	db07      	blt.n	8015e1e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8015e0e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015e10:	4401      	add	r1, r0
 8015e12:	9812      	ldr	r0, [sp, #72]	; 0x48
 8015e14:	3b01      	subs	r3, #1
 8015e16:	4402      	add	r2, r0
 8015e18:	3402      	adds	r4, #2
 8015e1a:	e7ee      	b.n	8015dfa <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8015e1c:	d06e      	beq.n	8015efc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8015e1e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8015e20:	1e58      	subs	r0, r3, #1
 8015e22:	fb05 1500 	mla	r5, r5, r0, r1
 8015e26:	142d      	asrs	r5, r5, #16
 8015e28:	d45c      	bmi.n	8015ee4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8015e2a:	4565      	cmp	r5, ip
 8015e2c:	da5a      	bge.n	8015ee4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8015e2e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8015e30:	fb05 2000 	mla	r0, r5, r0, r2
 8015e34:	1400      	asrs	r0, r0, #16
 8015e36:	d455      	bmi.n	8015ee4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8015e38:	42b8      	cmp	r0, r7
 8015e3a:	da53      	bge.n	8015ee4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8015e3c:	f8bd b004 	ldrh.w	fp, [sp, #4]
 8015e40:	4699      	mov	r9, r3
 8015e42:	46a2      	mov	sl, r4
 8015e44:	f1b9 0f00 	cmp.w	r9, #0
 8015e48:	dd54      	ble.n	8015ef4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8015e4a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8015e4e:	140d      	asrs	r5, r1, #16
 8015e50:	1410      	asrs	r0, r2, #16
 8015e52:	fb07 5000 	mla	r0, r7, r0, r5
 8015e56:	9d02      	ldr	r5, [sp, #8]
 8015e58:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8015e5c:	f8ba 5000 	ldrh.w	r5, [sl]
 8015e60:	122f      	asrs	r7, r5, #8
 8015e62:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8015e66:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8015e6a:	fb17 f706 	smulbb	r7, r7, r6
 8015e6e:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8015e72:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8015e76:	00ed      	lsls	r5, r5, #3
 8015e78:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8015e7c:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8015e80:	10c7      	asrs	r7, r0, #3
 8015e82:	b2ed      	uxtb	r5, r5
 8015e84:	00c0      	lsls	r0, r0, #3
 8015e86:	fb18 f806 	smulbb	r8, r8, r6
 8015e8a:	fb15 f506 	smulbb	r5, r5, r6
 8015e8e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8015e92:	b2c0      	uxtb	r0, r0
 8015e94:	fa1f fc8c 	uxth.w	ip, ip
 8015e98:	fb07 870b 	mla	r7, r7, fp, r8
 8015e9c:	fb00 500b 	mla	r0, r0, fp, r5
 8015ea0:	b280      	uxth	r0, r0
 8015ea2:	b2bf      	uxth	r7, r7
 8015ea4:	f10c 0501 	add.w	r5, ip, #1
 8015ea8:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8015eac:	f107 0801 	add.w	r8, r7, #1
 8015eb0:	1c45      	adds	r5, r0, #1
 8015eb2:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8015eb6:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8015eba:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015ebc:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8015ec0:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8015ec4:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8015ec8:	ea45 0c0c 	orr.w	ip, r5, ip
 8015ecc:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8015ed0:	4401      	add	r1, r0
 8015ed2:	9812      	ldr	r0, [sp, #72]	; 0x48
 8015ed4:	ea4c 0c08 	orr.w	ip, ip, r8
 8015ed8:	f82a cb02 	strh.w	ip, [sl], #2
 8015edc:	4402      	add	r2, r0
 8015ede:	f109 39ff 	add.w	r9, r9, #4294967295
 8015ee2:	e7af      	b.n	8015e44 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015ee4:	f8bd a004 	ldrh.w	sl, [sp, #4]
 8015ee8:	f04f 0800 	mov.w	r8, #0
 8015eec:	eb03 0008 	add.w	r0, r3, r8
 8015ef0:	2800      	cmp	r0, #0
 8015ef2:	dc41      	bgt.n	8015f78 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8015ef4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015ef8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015efc:	9b00      	ldr	r3, [sp, #0]
 8015efe:	2b00      	cmp	r3, #0
 8015f00:	f340 8095 	ble.w	801602e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8015f04:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015f08:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8015f0c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8015f10:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015f12:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015f16:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015f1a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015f1e:	eef0 6a62 	vmov.f32	s13, s5
 8015f22:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015f26:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015f2a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015f2e:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 8015f32:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015f36:	eef0 6a43 	vmov.f32	s13, s6
 8015f3a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015f3e:	ee12 2a90 	vmov	r2, s5
 8015f42:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015f46:	fb92 f3f3 	sdiv	r3, r2, r3
 8015f4a:	ee13 2a10 	vmov	r2, s6
 8015f4e:	9311      	str	r3, [sp, #68]	; 0x44
 8015f50:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015f52:	fb92 f3f3 	sdiv	r3, r2, r3
 8015f56:	9312      	str	r3, [sp, #72]	; 0x48
 8015f58:	9b00      	ldr	r3, [sp, #0]
 8015f5a:	9a03      	ldr	r2, [sp, #12]
 8015f5c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015f60:	3b01      	subs	r3, #1
 8015f62:	9300      	str	r3, [sp, #0]
 8015f64:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 8015f68:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015f6a:	eeb0 3a67 	vmov.f32	s6, s15
 8015f6e:	bf08      	it	eq
 8015f70:	4613      	moveq	r3, r2
 8015f72:	eef0 2a47 	vmov.f32	s5, s14
 8015f76:	e72f      	b.n	8015dd8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8015f78:	140f      	asrs	r7, r1, #16
 8015f7a:	d451      	bmi.n	8016020 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8015f7c:	f8de 5008 	ldr.w	r5, [lr, #8]
 8015f80:	42bd      	cmp	r5, r7
 8015f82:	dd4d      	ble.n	8016020 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8015f84:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8015f88:	d44a      	bmi.n	8016020 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8015f8a:	f8de 000c 	ldr.w	r0, [lr, #12]
 8015f8e:	4560      	cmp	r0, ip
 8015f90:	dd46      	ble.n	8016020 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8015f92:	b22d      	sxth	r5, r5
 8015f94:	fb0c 7505 	mla	r5, ip, r5, r7
 8015f98:	9802      	ldr	r0, [sp, #8]
 8015f9a:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 8015f9e:	f06f 0501 	mvn.w	r5, #1
 8015fa2:	fb05 fb08 	mul.w	fp, r5, r8
 8015fa6:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8015faa:	f834 500b 	ldrh.w	r5, [r4, fp]
 8015fae:	122f      	asrs	r7, r5, #8
 8015fb0:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8015fb4:	fb17 f706 	smulbb	r7, r7, r6
 8015fb8:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8015fbc:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8015fc0:	00ed      	lsls	r5, r5, #3
 8015fc2:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8015fc6:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8015fca:	10c7      	asrs	r7, r0, #3
 8015fcc:	b2ed      	uxtb	r5, r5
 8015fce:	00c0      	lsls	r0, r0, #3
 8015fd0:	fb19 f906 	smulbb	r9, r9, r6
 8015fd4:	fb15 f506 	smulbb	r5, r5, r6
 8015fd8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8015fdc:	b2c0      	uxtb	r0, r0
 8015fde:	fa1f fc8c 	uxth.w	ip, ip
 8015fe2:	fb07 970a 	mla	r7, r7, sl, r9
 8015fe6:	fb00 500a 	mla	r0, r0, sl, r5
 8015fea:	b2bf      	uxth	r7, r7
 8015fec:	b280      	uxth	r0, r0
 8015fee:	f10c 0501 	add.w	r5, ip, #1
 8015ff2:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8015ff6:	f107 0901 	add.w	r9, r7, #1
 8015ffa:	1c45      	adds	r5, r0, #1
 8015ffc:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8016000:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8016004:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8016008:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801600c:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8016010:	ea45 0c0c 	orr.w	ip, r5, ip
 8016014:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8016018:	ea4c 0c09 	orr.w	ip, ip, r9
 801601c:	f824 c00b 	strh.w	ip, [r4, fp]
 8016020:	9811      	ldr	r0, [sp, #68]	; 0x44
 8016022:	4401      	add	r1, r0
 8016024:	9812      	ldr	r0, [sp, #72]	; 0x48
 8016026:	f108 38ff 	add.w	r8, r8, #4294967295
 801602a:	4402      	add	r2, r0
 801602c:	e75e      	b.n	8015eec <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 801602e:	b005      	add	sp, #20
 8016030:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016034 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016034:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016038:	b085      	sub	sp, #20
 801603a:	4693      	mov	fp, r2
 801603c:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801603e:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8016040:	6870      	ldr	r0, [r6, #4]
 8016042:	9101      	str	r1, [sp, #4]
 8016044:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8016048:	fb00 2404 	mla	r4, r0, r4, r2
 801604c:	6832      	ldr	r2, [r6, #0]
 801604e:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8016052:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8016056:	682a      	ldr	r2, [r5, #0]
 8016058:	9202      	str	r2, [sp, #8]
 801605a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801605e:	9a01      	ldr	r2, [sp, #4]
 8016060:	2a00      	cmp	r2, #0
 8016062:	dc03      	bgt.n	801606c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8016064:	f1bb 0f00 	cmp.w	fp, #0
 8016068:	f340 809a 	ble.w	80161a0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801606c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801606e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8016072:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8016076:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801607a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801607c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8016080:	2b00      	cmp	r3, #0
 8016082:	dd0c      	ble.n	801609e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8016084:	1406      	asrs	r6, r0, #16
 8016086:	d405      	bmi.n	8016094 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8016088:	454e      	cmp	r6, r9
 801608a:	da03      	bge.n	8016094 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801608c:	1416      	asrs	r6, r2, #16
 801608e:	d401      	bmi.n	8016094 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8016090:	4546      	cmp	r6, r8
 8016092:	db05      	blt.n	80160a0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8016094:	4470      	add	r0, lr
 8016096:	4462      	add	r2, ip
 8016098:	3b01      	subs	r3, #1
 801609a:	3402      	adds	r4, #2
 801609c:	e7f0      	b.n	8016080 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801609e:	d00f      	beq.n	80160c0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80160a0:	1e5e      	subs	r6, r3, #1
 80160a2:	fb0e 0706 	mla	r7, lr, r6, r0
 80160a6:	143f      	asrs	r7, r7, #16
 80160a8:	d541      	bpl.n	801612e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 80160aa:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 80160ae:	4698      	mov	r8, r3
 80160b0:	9603      	str	r6, [sp, #12]
 80160b2:	f1b8 0f00 	cmp.w	r8, #0
 80160b6:	dc56      	bgt.n	8016166 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 80160b8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80160bc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80160c0:	9b01      	ldr	r3, [sp, #4]
 80160c2:	2b00      	cmp	r3, #0
 80160c4:	dd6c      	ble.n	80161a0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 80160c6:	ee30 0a04 	vadd.f32	s0, s0, s8
 80160ca:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80160ce:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80160d2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80160d4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80160d8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80160dc:	eeb0 6a62 	vmov.f32	s12, s5
 80160e0:	ee61 7a27 	vmul.f32	s15, s2, s15
 80160e4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80160e8:	ee77 2a62 	vsub.f32	s5, s14, s5
 80160ec:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80160f0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80160f4:	eeb0 6a43 	vmov.f32	s12, s6
 80160f8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80160fc:	ee12 2a90 	vmov	r2, s5
 8016100:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016104:	fb92 fef3 	sdiv	lr, r2, r3
 8016108:	ee13 2a10 	vmov	r2, s6
 801610c:	fb92 fcf3 	sdiv	ip, r2, r3
 8016110:	9b01      	ldr	r3, [sp, #4]
 8016112:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016116:	3b01      	subs	r3, #1
 8016118:	9301      	str	r3, [sp, #4]
 801611a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801611e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016120:	eeb0 3a67 	vmov.f32	s6, s15
 8016124:	bf08      	it	eq
 8016126:	465b      	moveq	r3, fp
 8016128:	eef0 2a47 	vmov.f32	s5, s14
 801612c:	e797      	b.n	801605e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801612e:	454f      	cmp	r7, r9
 8016130:	dabb      	bge.n	80160aa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8016132:	fb0c 2606 	mla	r6, ip, r6, r2
 8016136:	1436      	asrs	r6, r6, #16
 8016138:	d4b7      	bmi.n	80160aa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801613a:	4546      	cmp	r6, r8
 801613c:	dab5      	bge.n	80160aa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801613e:	461e      	mov	r6, r3
 8016140:	46a0      	mov	r8, r4
 8016142:	2e00      	cmp	r6, #0
 8016144:	ddb8      	ble.n	80160b8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8016146:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801614a:	9902      	ldr	r1, [sp, #8]
 801614c:	1417      	asrs	r7, r2, #16
 801614e:	ea4f 4920 	mov.w	r9, r0, asr #16
 8016152:	fb0a 9707 	mla	r7, sl, r7, r9
 8016156:	4470      	add	r0, lr
 8016158:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801615c:	f828 7b02 	strh.w	r7, [r8], #2
 8016160:	4462      	add	r2, ip
 8016162:	3e01      	subs	r6, #1
 8016164:	e7ed      	b.n	8016142 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 8016166:	ea5f 4920 	movs.w	r9, r0, asr #16
 801616a:	d414      	bmi.n	8016196 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801616c:	68ae      	ldr	r6, [r5, #8]
 801616e:	454e      	cmp	r6, r9
 8016170:	dd11      	ble.n	8016196 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8016172:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8016176:	d40e      	bmi.n	8016196 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8016178:	68ef      	ldr	r7, [r5, #12]
 801617a:	4557      	cmp	r7, sl
 801617c:	dd0b      	ble.n	8016196 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801617e:	b236      	sxth	r6, r6
 8016180:	fb0a 9606 	mla	r6, sl, r6, r9
 8016184:	9f02      	ldr	r7, [sp, #8]
 8016186:	f06f 0101 	mvn.w	r1, #1
 801618a:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801618e:	fb01 f608 	mul.w	r6, r1, r8
 8016192:	9903      	ldr	r1, [sp, #12]
 8016194:	538f      	strh	r7, [r1, r6]
 8016196:	4470      	add	r0, lr
 8016198:	4462      	add	r2, ip
 801619a:	f108 38ff 	add.w	r8, r8, #4294967295
 801619e:	e788      	b.n	80160b2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80161a0:	b005      	add	sp, #20
 80161a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080161a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80161a6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80161aa:	b087      	sub	sp, #28
 80161ac:	468b      	mov	fp, r1
 80161ae:	9815      	ldr	r0, [sp, #84]	; 0x54
 80161b0:	9203      	str	r2, [sp, #12]
 80161b2:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80161b6:	9204      	str	r2, [sp, #16]
 80161b8:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 80161bc:	6841      	ldr	r1, [r0, #4]
 80161be:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 80161c2:	fb01 2505 	mla	r5, r1, r5, r2
 80161c6:	6802      	ldr	r2, [r0, #0]
 80161c8:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 80161cc:	f8d9 2000 	ldr.w	r2, [r9]
 80161d0:	9201      	str	r2, [sp, #4]
 80161d2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80161d6:	f1bb 0f00 	cmp.w	fp, #0
 80161da:	dc03      	bgt.n	80161e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80161dc:	9a03      	ldr	r2, [sp, #12]
 80161de:	2a00      	cmp	r2, #0
 80161e0:	f340 8159 	ble.w	8016496 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 80161e4:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80161e6:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 80161ea:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 80161ee:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80161f2:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80161f4:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80161f8:	2b00      	cmp	r3, #0
 80161fa:	dd0e      	ble.n	801621a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80161fc:	1402      	asrs	r2, r0, #16
 80161fe:	d405      	bmi.n	801620c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8016200:	42ba      	cmp	r2, r7
 8016202:	da03      	bge.n	801620c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8016204:	140a      	asrs	r2, r1, #16
 8016206:	d401      	bmi.n	801620c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8016208:	42b2      	cmp	r2, r6
 801620a:	db07      	blt.n	801621c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801620c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801620e:	4410      	add	r0, r2
 8016210:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016212:	3b01      	subs	r3, #1
 8016214:	4411      	add	r1, r2
 8016216:	3502      	adds	r5, #2
 8016218:	e7ee      	b.n	80161f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801621a:	d017      	beq.n	801624c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801621c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801621e:	1e5a      	subs	r2, r3, #1
 8016220:	fb04 0402 	mla	r4, r4, r2, r0
 8016224:	1424      	asrs	r4, r4, #16
 8016226:	d409      	bmi.n	801623c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8016228:	42bc      	cmp	r4, r7
 801622a:	da07      	bge.n	801623c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801622c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801622e:	fb04 1202 	mla	r2, r4, r2, r1
 8016232:	1412      	asrs	r2, r2, #16
 8016234:	d402      	bmi.n	801623c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8016236:	42b2      	cmp	r2, r6
 8016238:	f2c0 80bf 	blt.w	80163ba <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801623c:	2700      	movs	r7, #0
 801623e:	19da      	adds	r2, r3, r7
 8016240:	2a00      	cmp	r2, #0
 8016242:	dc3e      	bgt.n	80162c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8016244:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016248:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801624c:	f1bb 0f00 	cmp.w	fp, #0
 8016250:	f340 8121 	ble.w	8016496 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8016254:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016258:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801625c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8016260:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016262:	f1bb 0b01 	subs.w	fp, fp, #1
 8016266:	ee31 1a05 	vadd.f32	s2, s2, s10
 801626a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801626e:	eeb0 6a62 	vmov.f32	s12, s5
 8016272:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016276:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801627a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801627e:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8016282:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016286:	eeb0 6a43 	vmov.f32	s12, s6
 801628a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801628e:	ee12 2a90 	vmov	r2, s5
 8016292:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016296:	fb92 f3f3 	sdiv	r3, r2, r3
 801629a:	ee13 2a10 	vmov	r2, s6
 801629e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80162a2:	9313      	str	r3, [sp, #76]	; 0x4c
 80162a4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80162a6:	fb92 f3f3 	sdiv	r3, r2, r3
 80162aa:	9a03      	ldr	r2, [sp, #12]
 80162ac:	9314      	str	r3, [sp, #80]	; 0x50
 80162ae:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80162b2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80162b4:	eeb0 3a67 	vmov.f32	s6, s15
 80162b8:	bf08      	it	eq
 80162ba:	4613      	moveq	r3, r2
 80162bc:	eef0 2a47 	vmov.f32	s5, s14
 80162c0:	e789      	b.n	80161d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 80162c2:	1406      	asrs	r6, r0, #16
 80162c4:	d42d      	bmi.n	8016322 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80162c6:	f8d9 4008 	ldr.w	r4, [r9, #8]
 80162ca:	42b4      	cmp	r4, r6
 80162cc:	dd29      	ble.n	8016322 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80162ce:	ea5f 4c21 	movs.w	ip, r1, asr #16
 80162d2:	d426      	bmi.n	8016322 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80162d4:	f8d9 200c 	ldr.w	r2, [r9, #12]
 80162d8:	4562      	cmp	r2, ip
 80162da:	dd22      	ble.n	8016322 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80162dc:	b224      	sxth	r4, r4
 80162de:	9a01      	ldr	r2, [sp, #4]
 80162e0:	fb0c 6404 	mla	r4, ip, r4, r6
 80162e4:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 80162e8:	0e22      	lsrs	r2, r4, #24
 80162ea:	d01a      	beq.n	8016322 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80162ec:	9e04      	ldr	r6, [sp, #16]
 80162ee:	4372      	muls	r2, r6
 80162f0:	1c56      	adds	r6, r2, #1
 80162f2:	eb06 2222 	add.w	r2, r6, r2, asr #8
 80162f6:	1212      	asrs	r2, r2, #8
 80162f8:	0a26      	lsrs	r6, r4, #8
 80162fa:	2aff      	cmp	r2, #255	; 0xff
 80162fc:	9605      	str	r6, [sp, #20]
 80162fe:	d116      	bne.n	801632e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8016300:	f06f 0201 	mvn.w	r2, #1
 8016304:	fb02 fc07 	mul.w	ip, r2, r7
 8016308:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801630c:	0962      	lsrs	r2, r4, #5
 801630e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016312:	f026 0607 	bic.w	r6, r6, #7
 8016316:	4316      	orrs	r6, r2
 8016318:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801631c:	4326      	orrs	r6, r4
 801631e:	f825 600c 	strh.w	r6, [r5, ip]
 8016322:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8016324:	4410      	add	r0, r2
 8016326:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016328:	3f01      	subs	r7, #1
 801632a:	4411      	add	r1, r2
 801632c:	e787      	b.n	801623e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801632e:	f06f 0601 	mvn.w	r6, #1
 8016332:	437e      	muls	r6, r7
 8016334:	fa1f fa82 	uxth.w	sl, r2
 8016338:	f835 8006 	ldrh.w	r8, [r5, r6]
 801633c:	9602      	str	r6, [sp, #8]
 801633e:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8016342:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 8016346:	43d2      	mvns	r2, r2
 8016348:	b2d2      	uxtb	r2, r2
 801634a:	fb1c fc0a 	smulbb	ip, ip, sl
 801634e:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8016352:	fb0e ce02 	mla	lr, lr, r2, ip
 8016356:	b2e4      	uxtb	r4, r4
 8016358:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801635c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8016360:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8016364:	fa5f f888 	uxtb.w	r8, r8
 8016368:	fb14 f40a 	smulbb	r4, r4, sl
 801636c:	fb08 4402 	mla	r4, r8, r2, r4
 8016370:	fa1f fe8e 	uxth.w	lr, lr
 8016374:	fb16 f60a 	smulbb	r6, r6, sl
 8016378:	b2a4      	uxth	r4, r4
 801637a:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801637e:	fb0c 6c02 	mla	ip, ip, r2, r6
 8016382:	f10e 0201 	add.w	r2, lr, #1
 8016386:	1c66      	adds	r6, r4, #1
 8016388:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801638c:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8016390:	fa1f fc8c 	uxth.w	ip, ip
 8016394:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8016398:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801639c:	ea46 0e0e 	orr.w	lr, r6, lr
 80163a0:	f10c 0601 	add.w	r6, ip, #1
 80163a4:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 80163a8:	0976      	lsrs	r6, r6, #5
 80163aa:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80163ae:	9a02      	ldr	r2, [sp, #8]
 80163b0:	ea4e 0e06 	orr.w	lr, lr, r6
 80163b4:	f825 e002 	strh.w	lr, [r5, r2]
 80163b8:	e7b3      	b.n	8016322 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80163ba:	f04f 0800 	mov.w	r8, #0
 80163be:	eba3 0208 	sub.w	r2, r3, r8
 80163c2:	2a00      	cmp	r2, #0
 80163c4:	f77f af3e 	ble.w	8016244 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80163c8:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 80163cc:	1404      	asrs	r4, r0, #16
 80163ce:	140a      	asrs	r2, r1, #16
 80163d0:	fb06 4202 	mla	r2, r6, r2, r4
 80163d4:	9c01      	ldr	r4, [sp, #4]
 80163d6:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 80163da:	0e22      	lsrs	r2, r4, #24
 80163dc:	d016      	beq.n	801640c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 80163de:	9e04      	ldr	r6, [sp, #16]
 80163e0:	4372      	muls	r2, r6
 80163e2:	1c56      	adds	r6, r2, #1
 80163e4:	eb06 2222 	add.w	r2, r6, r2, asr #8
 80163e8:	1212      	asrs	r2, r2, #8
 80163ea:	2aff      	cmp	r2, #255	; 0xff
 80163ec:	ea4f 2614 	mov.w	r6, r4, lsr #8
 80163f0:	d113      	bne.n	801641a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 80163f2:	0962      	lsrs	r2, r4, #5
 80163f4:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 80163f8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80163fc:	f026 0607 	bic.w	r6, r6, #7
 8016400:	4316      	orrs	r6, r2
 8016402:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8016406:	4326      	orrs	r6, r4
 8016408:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 801640c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801640e:	4410      	add	r0, r2
 8016410:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016412:	f108 0801 	add.w	r8, r8, #1
 8016416:	4411      	add	r1, r2
 8016418:	e7d1      	b.n	80163be <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 801641a:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 801641e:	fa1f fa82 	uxth.w	sl, r2
 8016422:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8016426:	f3c4 4707 	ubfx	r7, r4, #16, #8
 801642a:	43d2      	mvns	r2, r2
 801642c:	b2d2      	uxtb	r2, r2
 801642e:	fb17 f70a 	smulbb	r7, r7, sl
 8016432:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8016436:	fb0c 7c02 	mla	ip, ip, r2, r7
 801643a:	b2e4      	uxtb	r4, r4
 801643c:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8016440:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8016444:	fa5f fe8e 	uxtb.w	lr, lr
 8016448:	fb14 f40a 	smulbb	r4, r4, sl
 801644c:	fb0e 4402 	mla	r4, lr, r2, r4
 8016450:	b2f6      	uxtb	r6, r6
 8016452:	fa1f fc8c 	uxth.w	ip, ip
 8016456:	fb16 f60a 	smulbb	r6, r6, sl
 801645a:	b2a4      	uxth	r4, r4
 801645c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8016460:	fb07 6702 	mla	r7, r7, r2, r6
 8016464:	f10c 0201 	add.w	r2, ip, #1
 8016468:	1c66      	adds	r6, r4, #1
 801646a:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801646e:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8016472:	b2bf      	uxth	r7, r7
 8016474:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8016478:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801647c:	ea46 0c0c 	orr.w	ip, r6, ip
 8016480:	1c7e      	adds	r6, r7, #1
 8016482:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8016486:	0976      	lsrs	r6, r6, #5
 8016488:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801648c:	ea4c 0c06 	orr.w	ip, ip, r6
 8016490:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 8016494:	e7ba      	b.n	801640c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8016496:	b007      	add	sp, #28
 8016498:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801649c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801649c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80164a0:	b085      	sub	sp, #20
 80164a2:	468b      	mov	fp, r1
 80164a4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80164a6:	9203      	str	r2, [sp, #12]
 80164a8:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80164ac:	6841      	ldr	r1, [r0, #4]
 80164ae:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 80164b2:	fb01 2404 	mla	r4, r1, r4, r2
 80164b6:	6802      	ldr	r2, [r0, #0]
 80164b8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80164bc:	f8d8 2000 	ldr.w	r2, [r8]
 80164c0:	9201      	str	r2, [sp, #4]
 80164c2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80164c6:	f1bb 0f00 	cmp.w	fp, #0
 80164ca:	dc03      	bgt.n	80164d4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80164cc:	9a03      	ldr	r2, [sp, #12]
 80164ce:	2a00      	cmp	r2, #0
 80164d0:	f340 814f 	ble.w	8016772 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 80164d4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80164d6:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 80164da:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 80164de:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80164e2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80164e4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80164e8:	2b00      	cmp	r3, #0
 80164ea:	dd0e      	ble.n	801650a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80164ec:	1408      	asrs	r0, r1, #16
 80164ee:	d405      	bmi.n	80164fc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80164f0:	42b8      	cmp	r0, r7
 80164f2:	da03      	bge.n	80164fc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80164f4:	1410      	asrs	r0, r2, #16
 80164f6:	d401      	bmi.n	80164fc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80164f8:	42b0      	cmp	r0, r6
 80164fa:	db07      	blt.n	801650c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80164fc:	9811      	ldr	r0, [sp, #68]	; 0x44
 80164fe:	4401      	add	r1, r0
 8016500:	9812      	ldr	r0, [sp, #72]	; 0x48
 8016502:	3b01      	subs	r3, #1
 8016504:	4402      	add	r2, r0
 8016506:	3402      	adds	r4, #2
 8016508:	e7ee      	b.n	80164e8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801650a:	d017      	beq.n	801653c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801650c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801650e:	1e58      	subs	r0, r3, #1
 8016510:	fb05 1500 	mla	r5, r5, r0, r1
 8016514:	142d      	asrs	r5, r5, #16
 8016516:	d409      	bmi.n	801652c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8016518:	42bd      	cmp	r5, r7
 801651a:	da07      	bge.n	801652c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801651c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801651e:	fb05 2000 	mla	r0, r5, r0, r2
 8016522:	1400      	asrs	r0, r0, #16
 8016524:	d402      	bmi.n	801652c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8016526:	42b0      	cmp	r0, r6
 8016528:	f2c0 80ba 	blt.w	80166a0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801652c:	2600      	movs	r6, #0
 801652e:	1998      	adds	r0, r3, r6
 8016530:	2800      	cmp	r0, #0
 8016532:	dc3e      	bgt.n	80165b2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8016534:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016538:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801653c:	f1bb 0f00 	cmp.w	fp, #0
 8016540:	f340 8117 	ble.w	8016772 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8016544:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016548:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801654c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8016550:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016552:	f1bb 0b01 	subs.w	fp, fp, #1
 8016556:	ee31 1a05 	vadd.f32	s2, s2, s10
 801655a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801655e:	eeb0 6a62 	vmov.f32	s12, s5
 8016562:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016566:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801656a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801656e:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8016572:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016576:	eeb0 6a43 	vmov.f32	s12, s6
 801657a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801657e:	ee12 2a90 	vmov	r2, s5
 8016582:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016586:	fb92 f3f3 	sdiv	r3, r2, r3
 801658a:	ee13 2a10 	vmov	r2, s6
 801658e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016592:	9311      	str	r3, [sp, #68]	; 0x44
 8016594:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016596:	fb92 f3f3 	sdiv	r3, r2, r3
 801659a:	9a03      	ldr	r2, [sp, #12]
 801659c:	9312      	str	r3, [sp, #72]	; 0x48
 801659e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80165a2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80165a4:	eeb0 3a67 	vmov.f32	s6, s15
 80165a8:	bf08      	it	eq
 80165aa:	4613      	moveq	r3, r2
 80165ac:	eef0 2a47 	vmov.f32	s5, s14
 80165b0:	e789      	b.n	80164c6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 80165b2:	140f      	asrs	r7, r1, #16
 80165b4:	d424      	bmi.n	8016600 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80165b6:	f8d8 5008 	ldr.w	r5, [r8, #8]
 80165ba:	42bd      	cmp	r5, r7
 80165bc:	dd20      	ble.n	8016600 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80165be:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80165c2:	d41d      	bmi.n	8016600 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80165c4:	f8d8 000c 	ldr.w	r0, [r8, #12]
 80165c8:	4560      	cmp	r0, ip
 80165ca:	dd19      	ble.n	8016600 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80165cc:	b22d      	sxth	r5, r5
 80165ce:	fb0c 7505 	mla	r5, ip, r5, r7
 80165d2:	9801      	ldr	r0, [sp, #4]
 80165d4:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 80165d8:	0e07      	lsrs	r7, r0, #24
 80165da:	2fff      	cmp	r7, #255	; 0xff
 80165dc:	d116      	bne.n	801660c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80165de:	f06f 0501 	mvn.w	r5, #1
 80165e2:	fb05 f706 	mul.w	r7, r5, r6
 80165e6:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 80165ea:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 80165ee:	0945      	lsrs	r5, r0, #5
 80165f0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80165f4:	ea4c 0505 	orr.w	r5, ip, r5
 80165f8:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 80165fc:	4305      	orrs	r5, r0
 80165fe:	53e5      	strh	r5, [r4, r7]
 8016600:	9811      	ldr	r0, [sp, #68]	; 0x44
 8016602:	4401      	add	r1, r0
 8016604:	9812      	ldr	r0, [sp, #72]	; 0x48
 8016606:	3e01      	subs	r6, #1
 8016608:	4402      	add	r2, r0
 801660a:	e790      	b.n	801652e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801660c:	b2fd      	uxtb	r5, r7
 801660e:	2f00      	cmp	r7, #0
 8016610:	d0f6      	beq.n	8016600 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8016612:	f06f 0701 	mvn.w	r7, #1
 8016616:	4377      	muls	r7, r6
 8016618:	fa1f f985 	uxth.w	r9, r5
 801661c:	f834 e007 	ldrh.w	lr, [r4, r7]
 8016620:	9702      	str	r7, [sp, #8]
 8016622:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8016626:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801662a:	43ed      	mvns	r5, r5
 801662c:	b2ed      	uxtb	r5, r5
 801662e:	fb17 f709 	smulbb	r7, r7, r9
 8016632:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8016636:	fb0c 7c05 	mla	ip, ip, r5, r7
 801663a:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801663e:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8016642:	b2c0      	uxtb	r0, r0
 8016644:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8016648:	fa5f fe8e 	uxtb.w	lr, lr
 801664c:	fb10 f009 	smulbb	r0, r0, r9
 8016650:	fb0e 0005 	mla	r0, lr, r5, r0
 8016654:	b280      	uxth	r0, r0
 8016656:	fa1f fc8c 	uxth.w	ip, ip
 801665a:	fb1a fa09 	smulbb	sl, sl, r9
 801665e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8016662:	fb07 a705 	mla	r7, r7, r5, sl
 8016666:	f100 0a01 	add.w	sl, r0, #1
 801666a:	f10c 0501 	add.w	r5, ip, #1
 801666e:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8016672:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8016676:	b2bf      	uxth	r7, r7
 8016678:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801667c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8016680:	ea4a 0c0c 	orr.w	ip, sl, ip
 8016684:	f107 0a01 	add.w	sl, r7, #1
 8016688:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801668c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016690:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8016694:	9802      	ldr	r0, [sp, #8]
 8016696:	ea4c 0c0a 	orr.w	ip, ip, sl
 801669a:	f824 c000 	strh.w	ip, [r4, r0]
 801669e:	e7af      	b.n	8016600 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80166a0:	f04f 0e00 	mov.w	lr, #0
 80166a4:	eba3 000e 	sub.w	r0, r3, lr
 80166a8:	2800      	cmp	r0, #0
 80166aa:	f77f af43 	ble.w	8016534 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80166ae:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 80166b2:	140d      	asrs	r5, r1, #16
 80166b4:	1410      	asrs	r0, r2, #16
 80166b6:	fb06 5000 	mla	r0, r6, r0, r5
 80166ba:	9d01      	ldr	r5, [sp, #4]
 80166bc:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 80166c0:	0e2e      	lsrs	r6, r5, #24
 80166c2:	2eff      	cmp	r6, #255	; 0xff
 80166c4:	d112      	bne.n	80166ec <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 80166c6:	482c      	ldr	r0, [pc, #176]	; (8016778 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 80166c8:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 80166cc:	0968      	lsrs	r0, r5, #5
 80166ce:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80166d2:	4330      	orrs	r0, r6
 80166d4:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80166d8:	4328      	orrs	r0, r5
 80166da:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 80166de:	9811      	ldr	r0, [sp, #68]	; 0x44
 80166e0:	4401      	add	r1, r0
 80166e2:	9812      	ldr	r0, [sp, #72]	; 0x48
 80166e4:	f10e 0e01 	add.w	lr, lr, #1
 80166e8:	4402      	add	r2, r0
 80166ea:	e7db      	b.n	80166a4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 80166ec:	b2f0      	uxtb	r0, r6
 80166ee:	2e00      	cmp	r6, #0
 80166f0:	d0f5      	beq.n	80166de <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 80166f2:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 80166f6:	fa1f f980 	uxth.w	r9, r0
 80166fa:	ea4f 272c 	mov.w	r7, ip, asr #8
 80166fe:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8016702:	43c0      	mvns	r0, r0
 8016704:	b2c0      	uxtb	r0, r0
 8016706:	fb16 f609 	smulbb	r6, r6, r9
 801670a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801670e:	fb07 6700 	mla	r7, r7, r0, r6
 8016712:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8016716:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801671a:	b2ed      	uxtb	r5, r5
 801671c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8016720:	fa5f fc8c 	uxtb.w	ip, ip
 8016724:	fb15 f509 	smulbb	r5, r5, r9
 8016728:	fb0c 5500 	mla	r5, ip, r0, r5
 801672c:	b2bf      	uxth	r7, r7
 801672e:	fb1a fa09 	smulbb	sl, sl, r9
 8016732:	b2ad      	uxth	r5, r5
 8016734:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8016738:	fb06 a600 	mla	r6, r6, r0, sl
 801673c:	1c78      	adds	r0, r7, #1
 801673e:	f105 0a01 	add.w	sl, r5, #1
 8016742:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8016746:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801674a:	b2b6      	uxth	r6, r6
 801674c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8016750:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8016754:	ea4a 0707 	orr.w	r7, sl, r7
 8016758:	f106 0a01 	add.w	sl, r6, #1
 801675c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8016760:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016764:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8016768:	ea47 070a 	orr.w	r7, r7, sl
 801676c:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 8016770:	e7b5      	b.n	80166de <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8016772:	b005      	add	sp, #20
 8016774:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016778:	fffff800 	.word	0xfffff800

0801677c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801677c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016780:	b087      	sub	sp, #28
 8016782:	468b      	mov	fp, r1
 8016784:	9815      	ldr	r0, [sp, #84]	; 0x54
 8016786:	9203      	str	r2, [sp, #12]
 8016788:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801678c:	9204      	str	r2, [sp, #16]
 801678e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8016792:	6841      	ldr	r1, [r0, #4]
 8016794:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 8016798:	fb01 2404 	mla	r4, r1, r4, r2
 801679c:	6802      	ldr	r2, [r0, #0]
 801679e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80167a2:	f8d9 2008 	ldr.w	r2, [r9, #8]
 80167a6:	3201      	adds	r2, #1
 80167a8:	f022 0201 	bic.w	r2, r2, #1
 80167ac:	9200      	str	r2, [sp, #0]
 80167ae:	f8d9 2000 	ldr.w	r2, [r9]
 80167b2:	9201      	str	r2, [sp, #4]
 80167b4:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80167b8:	f1bb 0f00 	cmp.w	fp, #0
 80167bc:	dc03      	bgt.n	80167c6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80167be:	9a03      	ldr	r2, [sp, #12]
 80167c0:	2a00      	cmp	r2, #0
 80167c2:	f340 8169 	ble.w	8016a98 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 80167c6:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80167c8:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 80167cc:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 80167d0:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80167d4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80167d6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80167da:	2b00      	cmp	r3, #0
 80167dc:	dd0e      	ble.n	80167fc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80167de:	1402      	asrs	r2, r0, #16
 80167e0:	d405      	bmi.n	80167ee <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80167e2:	42ba      	cmp	r2, r7
 80167e4:	da03      	bge.n	80167ee <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80167e6:	140a      	asrs	r2, r1, #16
 80167e8:	d401      	bmi.n	80167ee <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80167ea:	42b2      	cmp	r2, r6
 80167ec:	db07      	blt.n	80167fe <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80167ee:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80167f0:	4410      	add	r0, r2
 80167f2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80167f4:	3b01      	subs	r3, #1
 80167f6:	4411      	add	r1, r2
 80167f8:	3402      	adds	r4, #2
 80167fa:	e7ee      	b.n	80167da <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 80167fc:	d017      	beq.n	801682e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 80167fe:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8016800:	1e5a      	subs	r2, r3, #1
 8016802:	fb05 0502 	mla	r5, r5, r2, r0
 8016806:	142d      	asrs	r5, r5, #16
 8016808:	d409      	bmi.n	801681e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801680a:	42bd      	cmp	r5, r7
 801680c:	da07      	bge.n	801681e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801680e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8016810:	fb05 1202 	mla	r2, r5, r2, r1
 8016814:	1412      	asrs	r2, r2, #16
 8016816:	d402      	bmi.n	801681e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8016818:	42b2      	cmp	r2, r6
 801681a:	f2c0 80c7 	blt.w	80169ac <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 801681e:	2700      	movs	r7, #0
 8016820:	19da      	adds	r2, r3, r7
 8016822:	2a00      	cmp	r2, #0
 8016824:	dc3e      	bgt.n	80168a4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8016826:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801682a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801682e:	f1bb 0f00 	cmp.w	fp, #0
 8016832:	f340 8131 	ble.w	8016a98 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8016836:	ee30 0a04 	vadd.f32	s0, s0, s8
 801683a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801683e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8016842:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016844:	f1bb 0b01 	subs.w	fp, fp, #1
 8016848:	ee31 1a05 	vadd.f32	s2, s2, s10
 801684c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8016850:	eeb0 6a62 	vmov.f32	s12, s5
 8016854:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016858:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801685c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8016860:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8016864:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016868:	eeb0 6a43 	vmov.f32	s12, s6
 801686c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8016870:	ee12 2a90 	vmov	r2, s5
 8016874:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016878:	fb92 f3f3 	sdiv	r3, r2, r3
 801687c:	ee13 2a10 	vmov	r2, s6
 8016880:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016884:	9313      	str	r3, [sp, #76]	; 0x4c
 8016886:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016888:	fb92 f3f3 	sdiv	r3, r2, r3
 801688c:	9a03      	ldr	r2, [sp, #12]
 801688e:	9314      	str	r3, [sp, #80]	; 0x50
 8016890:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8016894:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016896:	eeb0 3a67 	vmov.f32	s6, s15
 801689a:	bf08      	it	eq
 801689c:	4613      	moveq	r3, r2
 801689e:	eef0 2a47 	vmov.f32	s5, s14
 80168a2:	e789      	b.n	80167b8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80168a4:	1405      	asrs	r5, r0, #16
 80168a6:	d435      	bmi.n	8016914 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80168a8:	f8d9 2008 	ldr.w	r2, [r9, #8]
 80168ac:	42aa      	cmp	r2, r5
 80168ae:	dd31      	ble.n	8016914 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80168b0:	140e      	asrs	r6, r1, #16
 80168b2:	d42f      	bmi.n	8016914 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80168b4:	f8d9 200c 	ldr.w	r2, [r9, #12]
 80168b8:	42b2      	cmp	r2, r6
 80168ba:	dd2b      	ble.n	8016914 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80168bc:	9a00      	ldr	r2, [sp, #0]
 80168be:	fb06 5502 	mla	r5, r6, r2, r5
 80168c2:	086a      	lsrs	r2, r5, #1
 80168c4:	9e01      	ldr	r6, [sp, #4]
 80168c6:	5cb2      	ldrb	r2, [r6, r2]
 80168c8:	07ee      	lsls	r6, r5, #31
 80168ca:	bf54      	ite	pl
 80168cc:	f002 020f 	andpl.w	r2, r2, #15
 80168d0:	1112      	asrmi	r2, r2, #4
 80168d2:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80168d6:	b2d2      	uxtb	r2, r2
 80168d8:	b1e2      	cbz	r2, 8016914 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80168da:	9d04      	ldr	r5, [sp, #16]
 80168dc:	436a      	muls	r2, r5
 80168de:	1c55      	adds	r5, r2, #1
 80168e0:	eb05 2222 	add.w	r2, r5, r2, asr #8
 80168e4:	4d6e      	ldr	r5, [pc, #440]	; (8016aa0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 80168e6:	682d      	ldr	r5, [r5, #0]
 80168e8:	1212      	asrs	r2, r2, #8
 80168ea:	0a2e      	lsrs	r6, r5, #8
 80168ec:	2aff      	cmp	r2, #255	; 0xff
 80168ee:	9605      	str	r6, [sp, #20]
 80168f0:	d116      	bne.n	8016920 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80168f2:	f06f 0201 	mvn.w	r2, #1
 80168f6:	fb02 fc07 	mul.w	ip, r2, r7
 80168fa:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 80168fe:	096a      	lsrs	r2, r5, #5
 8016900:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016904:	f026 0607 	bic.w	r6, r6, #7
 8016908:	4316      	orrs	r6, r2
 801690a:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801690e:	432e      	orrs	r6, r5
 8016910:	f824 600c 	strh.w	r6, [r4, ip]
 8016914:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8016916:	4410      	add	r0, r2
 8016918:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801691a:	3f01      	subs	r7, #1
 801691c:	4411      	add	r1, r2
 801691e:	e77f      	b.n	8016820 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8016920:	f06f 0601 	mvn.w	r6, #1
 8016924:	437e      	muls	r6, r7
 8016926:	fa1f fa82 	uxth.w	sl, r2
 801692a:	f834 8006 	ldrh.w	r8, [r4, r6]
 801692e:	9602      	str	r6, [sp, #8]
 8016930:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8016934:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 8016938:	43d2      	mvns	r2, r2
 801693a:	b2d2      	uxtb	r2, r2
 801693c:	fb1c fc0a 	smulbb	ip, ip, sl
 8016940:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8016944:	fb0e ce02 	mla	lr, lr, r2, ip
 8016948:	b2ed      	uxtb	r5, r5
 801694a:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801694e:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8016952:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8016956:	fa5f f888 	uxtb.w	r8, r8
 801695a:	fb15 f50a 	smulbb	r5, r5, sl
 801695e:	fb08 5502 	mla	r5, r8, r2, r5
 8016962:	fa1f fe8e 	uxth.w	lr, lr
 8016966:	fb16 f60a 	smulbb	r6, r6, sl
 801696a:	b2ad      	uxth	r5, r5
 801696c:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8016970:	fb0c 6c02 	mla	ip, ip, r2, r6
 8016974:	f10e 0201 	add.w	r2, lr, #1
 8016978:	1c6e      	adds	r6, r5, #1
 801697a:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801697e:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 8016982:	fa1f fc8c 	uxth.w	ip, ip
 8016986:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801698a:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801698e:	ea46 0e0e 	orr.w	lr, r6, lr
 8016992:	f10c 0601 	add.w	r6, ip, #1
 8016996:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801699a:	0976      	lsrs	r6, r6, #5
 801699c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80169a0:	9a02      	ldr	r2, [sp, #8]
 80169a2:	ea4e 0e06 	orr.w	lr, lr, r6
 80169a6:	f824 e002 	strh.w	lr, [r4, r2]
 80169aa:	e7b3      	b.n	8016914 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80169ac:	f04f 0800 	mov.w	r8, #0
 80169b0:	eba3 0208 	sub.w	r2, r3, r8
 80169b4:	2a00      	cmp	r2, #0
 80169b6:	f77f af36 	ble.w	8016826 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 80169ba:	9e00      	ldr	r6, [sp, #0]
 80169bc:	1402      	asrs	r2, r0, #16
 80169be:	140d      	asrs	r5, r1, #16
 80169c0:	fb06 2505 	mla	r5, r6, r5, r2
 80169c4:	086a      	lsrs	r2, r5, #1
 80169c6:	9e01      	ldr	r6, [sp, #4]
 80169c8:	5cb2      	ldrb	r2, [r6, r2]
 80169ca:	07ed      	lsls	r5, r5, #31
 80169cc:	bf54      	ite	pl
 80169ce:	f002 020f 	andpl.w	r2, r2, #15
 80169d2:	1112      	asrmi	r2, r2, #4
 80169d4:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80169d8:	b2d2      	uxtb	r2, r2
 80169da:	b1c2      	cbz	r2, 8016a0e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 80169dc:	9d04      	ldr	r5, [sp, #16]
 80169de:	436a      	muls	r2, r5
 80169e0:	1c55      	adds	r5, r2, #1
 80169e2:	eb05 2222 	add.w	r2, r5, r2, asr #8
 80169e6:	4d2e      	ldr	r5, [pc, #184]	; (8016aa0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 80169e8:	1212      	asrs	r2, r2, #8
 80169ea:	682e      	ldr	r6, [r5, #0]
 80169ec:	2aff      	cmp	r2, #255	; 0xff
 80169ee:	ea4f 2516 	mov.w	r5, r6, lsr #8
 80169f2:	d113      	bne.n	8016a1c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 80169f4:	0972      	lsrs	r2, r6, #5
 80169f6:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 80169fa:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80169fe:	f025 0507 	bic.w	r5, r5, #7
 8016a02:	4315      	orrs	r5, r2
 8016a04:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8016a08:	4335      	orrs	r5, r6
 8016a0a:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 8016a0e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8016a10:	4410      	add	r0, r2
 8016a12:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016a14:	f108 0801 	add.w	r8, r8, #1
 8016a18:	4411      	add	r1, r2
 8016a1a:	e7c9      	b.n	80169b0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8016a1c:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8016a20:	fa1f fa82 	uxth.w	sl, r2
 8016a24:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8016a28:	f3c6 4707 	ubfx	r7, r6, #16, #8
 8016a2c:	43d2      	mvns	r2, r2
 8016a2e:	b2d2      	uxtb	r2, r2
 8016a30:	fb17 f70a 	smulbb	r7, r7, sl
 8016a34:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8016a38:	fb0c 7c02 	mla	ip, ip, r2, r7
 8016a3c:	b2f6      	uxtb	r6, r6
 8016a3e:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8016a42:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8016a46:	fa5f fe8e 	uxtb.w	lr, lr
 8016a4a:	fb16 f60a 	smulbb	r6, r6, sl
 8016a4e:	fb0e 6602 	mla	r6, lr, r2, r6
 8016a52:	b2ed      	uxtb	r5, r5
 8016a54:	fa1f fc8c 	uxth.w	ip, ip
 8016a58:	fb15 f50a 	smulbb	r5, r5, sl
 8016a5c:	b2b6      	uxth	r6, r6
 8016a5e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8016a62:	fb07 5702 	mla	r7, r7, r2, r5
 8016a66:	f10c 0201 	add.w	r2, ip, #1
 8016a6a:	1c75      	adds	r5, r6, #1
 8016a6c:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8016a70:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8016a74:	b2bf      	uxth	r7, r7
 8016a76:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8016a7a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8016a7e:	ea45 0c0c 	orr.w	ip, r5, ip
 8016a82:	1c7d      	adds	r5, r7, #1
 8016a84:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 8016a88:	096d      	lsrs	r5, r5, #5
 8016a8a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8016a8e:	ea4c 0c05 	orr.w	ip, ip, r5
 8016a92:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 8016a96:	e7ba      	b.n	8016a0e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8016a98:	b007      	add	sp, #28
 8016a9a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016a9e:	bf00      	nop
 8016aa0:	200155c4 	.word	0x200155c4

08016aa4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016aa4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016aa8:	b087      	sub	sp, #28
 8016aaa:	f8df 830c 	ldr.w	r8, [pc, #780]	; 8016db8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8016aae:	9815      	ldr	r0, [sp, #84]	; 0x54
 8016ab0:	9205      	str	r2, [sp, #20]
 8016ab2:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8016ab6:	9101      	str	r1, [sp, #4]
 8016ab8:	6841      	ldr	r1, [r0, #4]
 8016aba:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 8016abe:	fb01 2404 	mla	r4, r1, r4, r2
 8016ac2:	6802      	ldr	r2, [r0, #0]
 8016ac4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8016ac8:	f8db 2008 	ldr.w	r2, [fp, #8]
 8016acc:	3201      	adds	r2, #1
 8016ace:	f022 0201 	bic.w	r2, r2, #1
 8016ad2:	9202      	str	r2, [sp, #8]
 8016ad4:	f8db 2000 	ldr.w	r2, [fp]
 8016ad8:	9203      	str	r2, [sp, #12]
 8016ada:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8016ade:	9a01      	ldr	r2, [sp, #4]
 8016ae0:	2a00      	cmp	r2, #0
 8016ae2:	dc03      	bgt.n	8016aec <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8016ae4:	9a05      	ldr	r2, [sp, #20]
 8016ae6:	2a00      	cmp	r2, #0
 8016ae8:	f340 8162 	ble.w	8016db0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8016aec:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8016aee:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 8016af2:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 8016af6:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8016afa:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8016afc:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8016b00:	2b00      	cmp	r3, #0
 8016b02:	dd0e      	ble.n	8016b22 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8016b04:	1402      	asrs	r2, r0, #16
 8016b06:	d405      	bmi.n	8016b14 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8016b08:	42ba      	cmp	r2, r7
 8016b0a:	da03      	bge.n	8016b14 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8016b0c:	140a      	asrs	r2, r1, #16
 8016b0e:	d401      	bmi.n	8016b14 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8016b10:	42b2      	cmp	r2, r6
 8016b12:	db07      	blt.n	8016b24 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8016b14:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8016b16:	4410      	add	r0, r2
 8016b18:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016b1a:	3b01      	subs	r3, #1
 8016b1c:	4411      	add	r1, r2
 8016b1e:	3402      	adds	r4, #2
 8016b20:	e7ee      	b.n	8016b00 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8016b22:	d017      	beq.n	8016b54 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8016b24:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8016b26:	1e5a      	subs	r2, r3, #1
 8016b28:	fb05 0502 	mla	r5, r5, r2, r0
 8016b2c:	142d      	asrs	r5, r5, #16
 8016b2e:	d409      	bmi.n	8016b44 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8016b30:	42bd      	cmp	r5, r7
 8016b32:	da07      	bge.n	8016b44 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8016b34:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8016b36:	fb05 1202 	mla	r2, r5, r2, r1
 8016b3a:	1412      	asrs	r2, r2, #16
 8016b3c:	d402      	bmi.n	8016b44 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8016b3e:	42b2      	cmp	r2, r6
 8016b40:	f2c0 80c3 	blt.w	8016cca <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 8016b44:	2500      	movs	r5, #0
 8016b46:	195a      	adds	r2, r3, r5
 8016b48:	2a00      	cmp	r2, #0
 8016b4a:	dc3f      	bgt.n	8016bcc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8016b4c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016b50:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016b54:	9b01      	ldr	r3, [sp, #4]
 8016b56:	2b00      	cmp	r3, #0
 8016b58:	f340 812a 	ble.w	8016db0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8016b5c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016b60:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8016b64:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8016b68:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016b6a:	ee31 1a05 	vadd.f32	s2, s2, s10
 8016b6e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8016b72:	eeb0 6a62 	vmov.f32	s12, s5
 8016b76:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016b7a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016b7e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8016b82:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8016b86:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016b8a:	eeb0 6a43 	vmov.f32	s12, s6
 8016b8e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8016b92:	ee12 2a90 	vmov	r2, s5
 8016b96:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016b9a:	fb92 f3f3 	sdiv	r3, r2, r3
 8016b9e:	ee13 2a10 	vmov	r2, s6
 8016ba2:	9313      	str	r3, [sp, #76]	; 0x4c
 8016ba4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016ba6:	fb92 f3f3 	sdiv	r3, r2, r3
 8016baa:	9314      	str	r3, [sp, #80]	; 0x50
 8016bac:	9b01      	ldr	r3, [sp, #4]
 8016bae:	9a05      	ldr	r2, [sp, #20]
 8016bb0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016bb4:	3b01      	subs	r3, #1
 8016bb6:	9301      	str	r3, [sp, #4]
 8016bb8:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8016bbc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016bbe:	eeb0 3a67 	vmov.f32	s6, s15
 8016bc2:	bf08      	it	eq
 8016bc4:	4613      	moveq	r3, r2
 8016bc6:	eef0 2a47 	vmov.f32	s5, s14
 8016bca:	e788      	b.n	8016ade <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8016bcc:	1406      	asrs	r6, r0, #16
 8016bce:	d42c      	bmi.n	8016c2a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016bd0:	f8db 2008 	ldr.w	r2, [fp, #8]
 8016bd4:	42b2      	cmp	r2, r6
 8016bd6:	dd28      	ble.n	8016c2a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016bd8:	140f      	asrs	r7, r1, #16
 8016bda:	d426      	bmi.n	8016c2a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016bdc:	f8db 200c 	ldr.w	r2, [fp, #12]
 8016be0:	42ba      	cmp	r2, r7
 8016be2:	dd22      	ble.n	8016c2a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016be4:	9a02      	ldr	r2, [sp, #8]
 8016be6:	fb07 6602 	mla	r6, r7, r2, r6
 8016bea:	0872      	lsrs	r2, r6, #1
 8016bec:	9f03      	ldr	r7, [sp, #12]
 8016bee:	5cba      	ldrb	r2, [r7, r2]
 8016bf0:	07f6      	lsls	r6, r6, #31
 8016bf2:	bf54      	ite	pl
 8016bf4:	f002 020f 	andpl.w	r2, r2, #15
 8016bf8:	1112      	asrmi	r2, r2, #4
 8016bfa:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8016bfe:	b2d2      	uxtb	r2, r2
 8016c00:	2aff      	cmp	r2, #255	; 0xff
 8016c02:	d118      	bne.n	8016c36 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 8016c04:	f8d8 2000 	ldr.w	r2, [r8]
 8016c08:	f06f 0601 	mvn.w	r6, #1
 8016c0c:	fb06 f705 	mul.w	r7, r6, r5
 8016c10:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 8016c14:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 8016c18:	0956      	lsrs	r6, r2, #5
 8016c1a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8016c1e:	ea4c 0606 	orr.w	r6, ip, r6
 8016c22:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8016c26:	4316      	orrs	r6, r2
 8016c28:	53e6      	strh	r6, [r4, r7]
 8016c2a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8016c2c:	4410      	add	r0, r2
 8016c2e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016c30:	3d01      	subs	r5, #1
 8016c32:	4411      	add	r1, r2
 8016c34:	e787      	b.n	8016b46 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8016c36:	2a00      	cmp	r2, #0
 8016c38:	d0f7      	beq.n	8016c2a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016c3a:	f06f 0601 	mvn.w	r6, #1
 8016c3e:	436e      	muls	r6, r5
 8016c40:	f8d8 c000 	ldr.w	ip, [r8]
 8016c44:	f834 e006 	ldrh.w	lr, [r4, r6]
 8016c48:	9604      	str	r6, [sp, #16]
 8016c4a:	fa1f f982 	uxth.w	r9, r2
 8016c4e:	ea4f 272e 	mov.w	r7, lr, asr #8
 8016c52:	f3cc 4607 	ubfx	r6, ip, #16, #8
 8016c56:	43d2      	mvns	r2, r2
 8016c58:	b2d2      	uxtb	r2, r2
 8016c5a:	fb16 f609 	smulbb	r6, r6, r9
 8016c5e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8016c62:	fb07 6702 	mla	r7, r7, r2, r6
 8016c66:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 8016c6a:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8016c6e:	fa5f fc8c 	uxtb.w	ip, ip
 8016c72:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8016c76:	fa5f fe8e 	uxtb.w	lr, lr
 8016c7a:	fb1c fc09 	smulbb	ip, ip, r9
 8016c7e:	fb0e cc02 	mla	ip, lr, r2, ip
 8016c82:	b2bf      	uxth	r7, r7
 8016c84:	fb1a fa09 	smulbb	sl, sl, r9
 8016c88:	fa1f fc8c 	uxth.w	ip, ip
 8016c8c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8016c90:	fb06 a602 	mla	r6, r6, r2, sl
 8016c94:	1c7a      	adds	r2, r7, #1
 8016c96:	f10c 0a01 	add.w	sl, ip, #1
 8016c9a:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8016c9e:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 8016ca2:	b2b6      	uxth	r6, r6
 8016ca4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8016ca8:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8016cac:	ea4a 0707 	orr.w	r7, sl, r7
 8016cb0:	f106 0a01 	add.w	sl, r6, #1
 8016cb4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8016cb8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016cbc:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8016cc0:	9a04      	ldr	r2, [sp, #16]
 8016cc2:	ea47 070a 	orr.w	r7, r7, sl
 8016cc6:	52a7      	strh	r7, [r4, r2]
 8016cc8:	e7af      	b.n	8016c2a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016cca:	f04f 0e00 	mov.w	lr, #0
 8016cce:	eba3 020e 	sub.w	r2, r3, lr
 8016cd2:	2a00      	cmp	r2, #0
 8016cd4:	f77f af3a 	ble.w	8016b4c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8016cd8:	9e02      	ldr	r6, [sp, #8]
 8016cda:	1402      	asrs	r2, r0, #16
 8016cdc:	140d      	asrs	r5, r1, #16
 8016cde:	fb06 2505 	mla	r5, r6, r5, r2
 8016ce2:	086a      	lsrs	r2, r5, #1
 8016ce4:	9e03      	ldr	r6, [sp, #12]
 8016ce6:	5cb2      	ldrb	r2, [r6, r2]
 8016ce8:	07ed      	lsls	r5, r5, #31
 8016cea:	bf54      	ite	pl
 8016cec:	f002 020f 	andpl.w	r2, r2, #15
 8016cf0:	1112      	asrmi	r2, r2, #4
 8016cf2:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8016cf6:	b2d2      	uxtb	r2, r2
 8016cf8:	2aff      	cmp	r2, #255	; 0xff
 8016cfa:	d115      	bne.n	8016d28 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 8016cfc:	f8d8 5000 	ldr.w	r5, [r8]
 8016d00:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 8016d04:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 8016d08:	096a      	lsrs	r2, r5, #5
 8016d0a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016d0e:	4332      	orrs	r2, r6
 8016d10:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8016d14:	432a      	orrs	r2, r5
 8016d16:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 8016d1a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8016d1c:	4410      	add	r0, r2
 8016d1e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016d20:	f10e 0e01 	add.w	lr, lr, #1
 8016d24:	4411      	add	r1, r2
 8016d26:	e7d2      	b.n	8016cce <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8016d28:	2a00      	cmp	r2, #0
 8016d2a:	d0f6      	beq.n	8016d1a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8016d2c:	f8d8 7000 	ldr.w	r7, [r8]
 8016d30:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8016d34:	fa1f f982 	uxth.w	r9, r2
 8016d38:	ea4f 262c 	mov.w	r6, ip, asr #8
 8016d3c:	f3c7 4507 	ubfx	r5, r7, #16, #8
 8016d40:	43d2      	mvns	r2, r2
 8016d42:	b2d2      	uxtb	r2, r2
 8016d44:	fb15 f509 	smulbb	r5, r5, r9
 8016d48:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8016d4c:	fb06 5602 	mla	r6, r6, r2, r5
 8016d50:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 8016d54:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8016d58:	b2ff      	uxtb	r7, r7
 8016d5a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8016d5e:	fa5f fc8c 	uxtb.w	ip, ip
 8016d62:	fb17 f709 	smulbb	r7, r7, r9
 8016d66:	fb0c 7702 	mla	r7, ip, r2, r7
 8016d6a:	b2b6      	uxth	r6, r6
 8016d6c:	fb1a fa09 	smulbb	sl, sl, r9
 8016d70:	b2bf      	uxth	r7, r7
 8016d72:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8016d76:	fb05 a502 	mla	r5, r5, r2, sl
 8016d7a:	1c72      	adds	r2, r6, #1
 8016d7c:	f107 0a01 	add.w	sl, r7, #1
 8016d80:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8016d84:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8016d88:	b2ad      	uxth	r5, r5
 8016d8a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8016d8e:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8016d92:	ea4a 0606 	orr.w	r6, sl, r6
 8016d96:	f105 0a01 	add.w	sl, r5, #1
 8016d9a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8016d9e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016da2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8016da6:	ea46 060a 	orr.w	r6, r6, sl
 8016daa:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 8016dae:	e7b4      	b.n	8016d1a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8016db0:	b007      	add	sp, #28
 8016db2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016db6:	bf00      	nop
 8016db8:	200155c4 	.word	0x200155c4

08016dbc <_ZN8touchgfx8LCD16bppD1Ev>:
 8016dbc:	4770      	bx	lr

08016dbe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 8016dbe:	4770      	bx	lr

08016dc0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 8016dc0:	4770      	bx	lr

08016dc2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 8016dc2:	4770      	bx	lr

08016dc4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 8016dc4:	4770      	bx	lr

08016dc6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8016dc6:	4770      	bx	lr

08016dc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8016dc8:	4770      	bx	lr

08016dca <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8016dca:	4770      	bx	lr

08016dcc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8016dcc:	4770      	bx	lr

08016dce <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8016dce:	4770      	bx	lr

08016dd0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8016dd0:	4770      	bx	lr

08016dd2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8016dd2:	4770      	bx	lr

08016dd4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8016dd4:	4770      	bx	lr

08016dd6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8016dd6:	4770      	bx	lr

08016dd8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8016dd8:	4770      	bx	lr

08016dda <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8016dda:	4770      	bx	lr

08016ddc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 8016ddc:	4770      	bx	lr

08016dde <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8016dde:	4770      	bx	lr

08016de0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8016de0:	4770      	bx	lr

08016de2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8016de2:	4770      	bx	lr

08016de4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8016de4:	4770      	bx	lr

08016de6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8016de6:	4770      	bx	lr

08016de8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8016de8:	4770      	bx	lr

08016dea <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8016dea:	4770      	bx	lr

08016dec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8016dec:	4770      	bx	lr

08016dee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8016dee:	4770      	bx	lr

08016df0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8016df0:	4770      	bx	lr

08016df2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8016df2:	4770      	bx	lr

08016df4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8016df4:	4770      	bx	lr

08016df6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 8016df6:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8016dfa:	b088      	sub	sp, #32
 8016dfc:	ac08      	add	r4, sp, #32
 8016dfe:	4606      	mov	r6, r0
 8016e00:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 8016e04:	4620      	mov	r0, r4
 8016e06:	4688      	mov	r8, r1
 8016e08:	4691      	mov	r9, r2
 8016e0a:	f7fd fc65 	bl	80146d8 <_ZNK8touchgfx6Bitmap7getDataEv>
 8016e0e:	6833      	ldr	r3, [r6, #0]
 8016e10:	4605      	mov	r5, r0
 8016e12:	4620      	mov	r0, r4
 8016e14:	699f      	ldr	r7, [r3, #24]
 8016e16:	f7fd fb73 	bl	8014500 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8016e1a:	4682      	mov	sl, r0
 8016e1c:	4620      	mov	r0, r4
 8016e1e:	f7fd fba3 	bl	8014568 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8016e22:	9500      	str	r5, [sp, #0]
 8016e24:	e9cd a001 	strd	sl, r0, [sp, #4]
 8016e28:	464b      	mov	r3, r9
 8016e2a:	a806      	add	r0, sp, #24
 8016e2c:	4642      	mov	r2, r8
 8016e2e:	4631      	mov	r1, r6
 8016e30:	47b8      	blx	r7
 8016e32:	4628      	mov	r0, r5
 8016e34:	b008      	add	sp, #32
 8016e36:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

08016e3c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 8016e3c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8016e40:	2300      	movs	r3, #0
 8016e42:	9300      	str	r3, [sp, #0]
 8016e44:	4b3d      	ldr	r3, [pc, #244]	; (8016f3c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 8016e46:	781b      	ldrb	r3, [r3, #0]
 8016e48:	2b00      	cmp	r3, #0
 8016e4a:	d137      	bne.n	8016ebc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 8016e4c:	4a3c      	ldr	r2, [pc, #240]	; (8016f40 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8016e4e:	f9b2 2000 	ldrsh.w	r2, [r2]
 8016e52:	f8ad 2004 	strh.w	r2, [sp, #4]
 8016e56:	2b00      	cmp	r3, #0
 8016e58:	d132      	bne.n	8016ec0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 8016e5a:	4b3a      	ldr	r3, [pc, #232]	; (8016f44 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8016e5c:	f9b3 3000 	ldrsh.w	r3, [r3]
 8016e60:	6808      	ldr	r0, [r1, #0]
 8016e62:	6849      	ldr	r1, [r1, #4]
 8016e64:	f8ad 3006 	strh.w	r3, [sp, #6]
 8016e68:	ac02      	add	r4, sp, #8
 8016e6a:	ab02      	add	r3, sp, #8
 8016e6c:	c303      	stmia	r3!, {r0, r1}
 8016e6e:	4669      	mov	r1, sp
 8016e70:	4620      	mov	r0, r4
 8016e72:	f7f9 ff7f 	bl	8010d74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016e76:	4668      	mov	r0, sp
 8016e78:	f7f9 ff54 	bl	8010d24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016e7c:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8016e80:	f8bd 2000 	ldrh.w	r2, [sp]
 8016e84:	4d30      	ldr	r5, [pc, #192]	; (8016f48 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 8016e86:	4413      	add	r3, r2
 8016e88:	f8ad 3008 	strh.w	r3, [sp, #8]
 8016e8c:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8016e90:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8016e94:	6828      	ldr	r0, [r5, #0]
 8016e96:	4413      	add	r3, r2
 8016e98:	f8ad 300a 	strh.w	r3, [sp, #10]
 8016e9c:	6803      	ldr	r3, [r0, #0]
 8016e9e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8016ea0:	4798      	blx	r3
 8016ea2:	f010 0f01 	tst.w	r0, #1
 8016ea6:	462f      	mov	r7, r5
 8016ea8:	d00c      	beq.n	8016ec4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 8016eaa:	6828      	ldr	r0, [r5, #0]
 8016eac:	6803      	ldr	r3, [r0, #0]
 8016eae:	e894 0006 	ldmia.w	r4, {r1, r2}
 8016eb2:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8016eb4:	4798      	blx	r3
 8016eb6:	b004      	add	sp, #16
 8016eb8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8016ebc:	4a21      	ldr	r2, [pc, #132]	; (8016f44 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8016ebe:	e7c6      	b.n	8016e4e <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 8016ec0:	4b1f      	ldr	r3, [pc, #124]	; (8016f40 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8016ec2:	e7cb      	b.n	8016e5c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 8016ec4:	6838      	ldr	r0, [r7, #0]
 8016ec6:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 8016eca:	6803      	ldr	r3, [r0, #0]
 8016ecc:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 8016ed0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8016ed2:	4798      	blx	r3
 8016ed4:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 8016ed8:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8016edc:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 8016ee0:	fb16 3602 	smlabb	r6, r6, r2, r3
 8016ee4:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8016ee8:	6838      	ldr	r0, [r7, #0]
 8016eea:	6803      	ldr	r3, [r0, #0]
 8016eec:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8016eee:	4798      	blx	r3
 8016ef0:	4a13      	ldr	r2, [pc, #76]	; (8016f40 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8016ef2:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 8016ef6:	8813      	ldrh	r3, [r2, #0]
 8016ef8:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8016efc:	fb03 1404 	mla	r4, r3, r4, r1
 8016f00:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8016f04:	435d      	muls	r5, r3
 8016f06:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8016f0a:	ea4f 0848 	mov.w	r8, r8, lsl #1
 8016f0e:	4691      	mov	r9, r2
 8016f10:	6838      	ldr	r0, [r7, #0]
 8016f12:	42ac      	cmp	r4, r5
 8016f14:	6803      	ldr	r3, [r0, #0]
 8016f16:	d20e      	bcs.n	8016f36 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 8016f18:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 8016f1c:	4632      	mov	r2, r6
 8016f1e:	4643      	mov	r3, r8
 8016f20:	4621      	mov	r1, r4
 8016f22:	47d0      	blx	sl
 8016f24:	f8b9 3000 	ldrh.w	r3, [r9]
 8016f28:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016f2c:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8016f30:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8016f34:	e7ec      	b.n	8016f10 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 8016f36:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016f38:	4798      	blx	r3
 8016f3a:	e7bc      	b.n	8016eb6 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 8016f3c:	200155ac 	.word	0x200155ac
 8016f40:	200155ae 	.word	0x200155ae
 8016f44:	200155b0 	.word	0x200155b0
 8016f48:	200155b4 	.word	0x200155b4

08016f4c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 8016f4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016f50:	b08b      	sub	sp, #44	; 0x2c
 8016f52:	460f      	mov	r7, r1
 8016f54:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 8016f58:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 8016f5c:	4616      	mov	r6, r2
 8016f5e:	f1bb 0f00 	cmp.w	fp, #0
 8016f62:	d049      	beq.n	8016ff8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 8016f64:	6810      	ldr	r0, [r2, #0]
 8016f66:	6851      	ldr	r1, [r2, #4]
 8016f68:	ad06      	add	r5, sp, #24
 8016f6a:	c503      	stmia	r5!, {r0, r1}
 8016f6c:	6818      	ldr	r0, [r3, #0]
 8016f6e:	6859      	ldr	r1, [r3, #4]
 8016f70:	ad08      	add	r5, sp, #32
 8016f72:	c503      	stmia	r5!, {r0, r1}
 8016f74:	a806      	add	r0, sp, #24
 8016f76:	f7f9 fed5 	bl	8010d24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016f7a:	4631      	mov	r1, r6
 8016f7c:	a808      	add	r0, sp, #32
 8016f7e:	f7f9 fef9 	bl	8010d74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016f82:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8016f86:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8016f8a:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 8016f8e:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 8016f92:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 8016f96:	fb16 2103 	smlabb	r1, r6, r3, r2
 8016f9a:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 8016f9e:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 8016fa2:	4f5f      	ldr	r7, [pc, #380]	; (8017120 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8016fa4:	440a      	add	r2, r1
 8016fa6:	f8ad 2020 	strh.w	r2, [sp, #32]
 8016faa:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8016fae:	6838      	ldr	r0, [r7, #0]
 8016fb0:	4413      	add	r3, r2
 8016fb2:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8016fb6:	6803      	ldr	r3, [r0, #0]
 8016fb8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8016fba:	4798      	blx	r3
 8016fbc:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8016fc0:	46b9      	mov	r9, r7
 8016fc2:	d01c      	beq.n	8016ffe <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb2>
 8016fc4:	f010 0f04 	tst.w	r0, #4
 8016fc8:	d01d      	beq.n	8017006 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8016fca:	f8d9 0000 	ldr.w	r0, [r9]
 8016fce:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8016fd2:	6801      	ldr	r1, [r0, #0]
 8016fd4:	f8cd b00c 	str.w	fp, [sp, #12]
 8016fd8:	2700      	movs	r7, #0
 8016fda:	e9cd 4704 	strd	r4, r7, [sp, #16]
 8016fde:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 8016fe2:	9402      	str	r4, [sp, #8]
 8016fe4:	b2ad      	uxth	r5, r5
 8016fe6:	fa1f f488 	uxth.w	r4, r8
 8016fea:	9501      	str	r5, [sp, #4]
 8016fec:	9400      	str	r4, [sp, #0]
 8016fee:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 8016ff0:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8016ff4:	4631      	mov	r1, r6
 8016ff6:	47a0      	blx	r4
 8016ff8:	b00b      	add	sp, #44	; 0x2c
 8016ffa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016ffe:	b914      	cbnz	r4, 8017006 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8017000:	f010 0f01 	tst.w	r0, #1
 8017004:	e7e0      	b.n	8016fc8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7c>
 8017006:	f8d9 0000 	ldr.w	r0, [r9]
 801700a:	6803      	ldr	r3, [r0, #0]
 801700c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801700e:	4798      	blx	r3
 8017010:	4b44      	ldr	r3, [pc, #272]	; (8017124 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 8017012:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 8017016:	881a      	ldrh	r2, [r3, #0]
 8017018:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801701c:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8017020:	fb02 1404 	mla	r4, r2, r4, r1
 8017024:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8017028:	469a      	mov	sl, r3
 801702a:	fb05 f502 	mul.w	r5, r5, r2
 801702e:	ea4f 0748 	mov.w	r7, r8, lsl #1
 8017032:	d059      	beq.n	80170e8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 8017034:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 8017038:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801703c:	fa1f f28b 	uxth.w	r2, fp
 8017040:	fa1f f989 	uxth.w	r9, r9
 8017044:	469e      	mov	lr, r3
 8017046:	42ac      	cmp	r4, r5
 8017048:	d264      	bcs.n	8017114 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801704a:	eb04 0a07 	add.w	sl, r4, r7
 801704e:	4554      	cmp	r4, sl
 8017050:	d23d      	bcs.n	80170ce <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 8017052:	8821      	ldrh	r1, [r4, #0]
 8017054:	f836 3b02 	ldrh.w	r3, [r6], #2
 8017058:	1208      	asrs	r0, r1, #8
 801705a:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801705e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8017062:	fb10 f009 	smulbb	r0, r0, r9
 8017066:	ea4f 0be1 	mov.w	fp, r1, asr #3
 801706a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801706e:	00c9      	lsls	r1, r1, #3
 8017070:	fb0c 0c02 	mla	ip, ip, r2, r0
 8017074:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8017078:	10d8      	asrs	r0, r3, #3
 801707a:	b2c9      	uxtb	r1, r1
 801707c:	00db      	lsls	r3, r3, #3
 801707e:	fa1f fc8c 	uxth.w	ip, ip
 8017082:	fb1b fb09 	smulbb	fp, fp, r9
 8017086:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801708a:	b2db      	uxtb	r3, r3
 801708c:	fb11 f109 	smulbb	r1, r1, r9
 8017090:	fb00 b002 	mla	r0, r0, r2, fp
 8017094:	fb03 1302 	mla	r3, r3, r2, r1
 8017098:	f10c 0b01 	add.w	fp, ip, #1
 801709c:	b29b      	uxth	r3, r3
 801709e:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 80170a2:	b280      	uxth	r0, r0
 80170a4:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 80170a8:	f103 0c01 	add.w	ip, r3, #1
 80170ac:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 80170b0:	1c43      	adds	r3, r0, #1
 80170b2:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80170b6:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80170ba:	0940      	lsrs	r0, r0, #5
 80170bc:	ea4c 0c0b 	orr.w	ip, ip, fp
 80170c0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80170c4:	ea4c 0c00 	orr.w	ip, ip, r0
 80170c8:	f824 cb02 	strh.w	ip, [r4], #2
 80170cc:	e7bf      	b.n	801704e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 80170ce:	f8be 3000 	ldrh.w	r3, [lr]
 80170d2:	eba3 0308 	sub.w	r3, r3, r8
 80170d6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80170da:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80170de:	eba3 0308 	sub.w	r3, r3, r8
 80170e2:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 80170e6:	e7ae      	b.n	8017046 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 80170e8:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 80170ec:	f8d9 0000 	ldr.w	r0, [r9]
 80170f0:	42ac      	cmp	r4, r5
 80170f2:	6803      	ldr	r3, [r0, #0]
 80170f4:	d20e      	bcs.n	8017114 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 80170f6:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 80170fa:	4632      	mov	r2, r6
 80170fc:	463b      	mov	r3, r7
 80170fe:	4621      	mov	r1, r4
 8017100:	47c0      	blx	r8
 8017102:	f8ba 3000 	ldrh.w	r3, [sl]
 8017106:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801710a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801710e:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8017112:	e7eb      	b.n	80170ec <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 8017114:	4b02      	ldr	r3, [pc, #8]	; (8017120 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8017116:	6818      	ldr	r0, [r3, #0]
 8017118:	6803      	ldr	r3, [r0, #0]
 801711a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801711c:	4798      	blx	r3
 801711e:	e76b      	b.n	8016ff8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 8017120:	200155b4 	.word	0x200155b4
 8017124:	200155ae 	.word	0x200155ae

08017128 <_ZN8touchgfx8LCD16bppD0Ev>:
 8017128:	b510      	push	{r4, lr}
 801712a:	2178      	movs	r1, #120	; 0x78
 801712c:	4604      	mov	r4, r0
 801712e:	f009 fad3 	bl	80206d8 <_ZdlPvj>
 8017132:	4620      	mov	r0, r4
 8017134:	bd10      	pop	{r4, pc}

08017136 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8017136:	b510      	push	{r4, lr}
 8017138:	2104      	movs	r1, #4
 801713a:	4604      	mov	r4, r0
 801713c:	f009 facc 	bl	80206d8 <_ZdlPvj>
 8017140:	4620      	mov	r0, r4
 8017142:	bd10      	pop	{r4, pc}

08017144 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8017144:	b510      	push	{r4, lr}
 8017146:	2104      	movs	r1, #4
 8017148:	4604      	mov	r4, r0
 801714a:	f009 fac5 	bl	80206d8 <_ZdlPvj>
 801714e:	4620      	mov	r0, r4
 8017150:	bd10      	pop	{r4, pc}

08017152 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8017152:	b510      	push	{r4, lr}
 8017154:	2104      	movs	r1, #4
 8017156:	4604      	mov	r4, r0
 8017158:	f009 fabe 	bl	80206d8 <_ZdlPvj>
 801715c:	4620      	mov	r0, r4
 801715e:	bd10      	pop	{r4, pc}

08017160 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8017160:	b510      	push	{r4, lr}
 8017162:	2104      	movs	r1, #4
 8017164:	4604      	mov	r4, r0
 8017166:	f009 fab7 	bl	80206d8 <_ZdlPvj>
 801716a:	4620      	mov	r0, r4
 801716c:	bd10      	pop	{r4, pc}

0801716e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801716e:	b510      	push	{r4, lr}
 8017170:	2104      	movs	r1, #4
 8017172:	4604      	mov	r4, r0
 8017174:	f009 fab0 	bl	80206d8 <_ZdlPvj>
 8017178:	4620      	mov	r0, r4
 801717a:	bd10      	pop	{r4, pc}

0801717c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 801717c:	b510      	push	{r4, lr}
 801717e:	2104      	movs	r1, #4
 8017180:	4604      	mov	r4, r0
 8017182:	f009 faa9 	bl	80206d8 <_ZdlPvj>
 8017186:	4620      	mov	r0, r4
 8017188:	bd10      	pop	{r4, pc}

0801718a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801718a:	b510      	push	{r4, lr}
 801718c:	2104      	movs	r1, #4
 801718e:	4604      	mov	r4, r0
 8017190:	f009 faa2 	bl	80206d8 <_ZdlPvj>
 8017194:	4620      	mov	r0, r4
 8017196:	bd10      	pop	{r4, pc}

08017198 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8017198:	b510      	push	{r4, lr}
 801719a:	2104      	movs	r1, #4
 801719c:	4604      	mov	r4, r0
 801719e:	f009 fa9b 	bl	80206d8 <_ZdlPvj>
 80171a2:	4620      	mov	r0, r4
 80171a4:	bd10      	pop	{r4, pc}

080171a6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 80171a6:	b510      	push	{r4, lr}
 80171a8:	2104      	movs	r1, #4
 80171aa:	4604      	mov	r4, r0
 80171ac:	f009 fa94 	bl	80206d8 <_ZdlPvj>
 80171b0:	4620      	mov	r0, r4
 80171b2:	bd10      	pop	{r4, pc}

080171b4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 80171b4:	b510      	push	{r4, lr}
 80171b6:	2104      	movs	r1, #4
 80171b8:	4604      	mov	r4, r0
 80171ba:	f009 fa8d 	bl	80206d8 <_ZdlPvj>
 80171be:	4620      	mov	r0, r4
 80171c0:	bd10      	pop	{r4, pc}

080171c2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 80171c2:	b510      	push	{r4, lr}
 80171c4:	2104      	movs	r1, #4
 80171c6:	4604      	mov	r4, r0
 80171c8:	f009 fa86 	bl	80206d8 <_ZdlPvj>
 80171cc:	4620      	mov	r0, r4
 80171ce:	bd10      	pop	{r4, pc}

080171d0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 80171d0:	b510      	push	{r4, lr}
 80171d2:	2104      	movs	r1, #4
 80171d4:	4604      	mov	r4, r0
 80171d6:	f009 fa7f 	bl	80206d8 <_ZdlPvj>
 80171da:	4620      	mov	r0, r4
 80171dc:	bd10      	pop	{r4, pc}

080171de <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 80171de:	b510      	push	{r4, lr}
 80171e0:	2104      	movs	r1, #4
 80171e2:	4604      	mov	r4, r0
 80171e4:	f009 fa78 	bl	80206d8 <_ZdlPvj>
 80171e8:	4620      	mov	r0, r4
 80171ea:	bd10      	pop	{r4, pc}

080171ec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 80171ec:	b510      	push	{r4, lr}
 80171ee:	2104      	movs	r1, #4
 80171f0:	4604      	mov	r4, r0
 80171f2:	f009 fa71 	bl	80206d8 <_ZdlPvj>
 80171f6:	4620      	mov	r0, r4
 80171f8:	bd10      	pop	{r4, pc}

080171fa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 80171fa:	b510      	push	{r4, lr}
 80171fc:	2104      	movs	r1, #4
 80171fe:	4604      	mov	r4, r0
 8017200:	f009 fa6a 	bl	80206d8 <_ZdlPvj>
 8017204:	4620      	mov	r0, r4
 8017206:	bd10      	pop	{r4, pc}

08017208 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8017208:	b510      	push	{r4, lr}
 801720a:	2104      	movs	r1, #4
 801720c:	4604      	mov	r4, r0
 801720e:	f009 fa63 	bl	80206d8 <_ZdlPvj>
 8017212:	4620      	mov	r0, r4
 8017214:	bd10      	pop	{r4, pc}

08017216 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8017216:	b510      	push	{r4, lr}
 8017218:	2104      	movs	r1, #4
 801721a:	4604      	mov	r4, r0
 801721c:	f009 fa5c 	bl	80206d8 <_ZdlPvj>
 8017220:	4620      	mov	r0, r4
 8017222:	bd10      	pop	{r4, pc}

08017224 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8017224:	b510      	push	{r4, lr}
 8017226:	2104      	movs	r1, #4
 8017228:	4604      	mov	r4, r0
 801722a:	f009 fa55 	bl	80206d8 <_ZdlPvj>
 801722e:	4620      	mov	r0, r4
 8017230:	bd10      	pop	{r4, pc}

08017232 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8017232:	b510      	push	{r4, lr}
 8017234:	2104      	movs	r1, #4
 8017236:	4604      	mov	r4, r0
 8017238:	f009 fa4e 	bl	80206d8 <_ZdlPvj>
 801723c:	4620      	mov	r0, r4
 801723e:	bd10      	pop	{r4, pc}

08017240 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 8017240:	b510      	push	{r4, lr}
 8017242:	2104      	movs	r1, #4
 8017244:	4604      	mov	r4, r0
 8017246:	f009 fa47 	bl	80206d8 <_ZdlPvj>
 801724a:	4620      	mov	r0, r4
 801724c:	bd10      	pop	{r4, pc}

0801724e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801724e:	b510      	push	{r4, lr}
 8017250:	2104      	movs	r1, #4
 8017252:	4604      	mov	r4, r0
 8017254:	f009 fa40 	bl	80206d8 <_ZdlPvj>
 8017258:	4620      	mov	r0, r4
 801725a:	bd10      	pop	{r4, pc}

0801725c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801725c:	b510      	push	{r4, lr}
 801725e:	2104      	movs	r1, #4
 8017260:	4604      	mov	r4, r0
 8017262:	f009 fa39 	bl	80206d8 <_ZdlPvj>
 8017266:	4620      	mov	r0, r4
 8017268:	bd10      	pop	{r4, pc}

0801726a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801726a:	b510      	push	{r4, lr}
 801726c:	2104      	movs	r1, #4
 801726e:	4604      	mov	r4, r0
 8017270:	f009 fa32 	bl	80206d8 <_ZdlPvj>
 8017274:	4620      	mov	r0, r4
 8017276:	bd10      	pop	{r4, pc}

08017278 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8017278:	b510      	push	{r4, lr}
 801727a:	2104      	movs	r1, #4
 801727c:	4604      	mov	r4, r0
 801727e:	f009 fa2b 	bl	80206d8 <_ZdlPvj>
 8017282:	4620      	mov	r0, r4
 8017284:	bd10      	pop	{r4, pc}

08017286 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 8017286:	b510      	push	{r4, lr}
 8017288:	2104      	movs	r1, #4
 801728a:	4604      	mov	r4, r0
 801728c:	f009 fa24 	bl	80206d8 <_ZdlPvj>
 8017290:	4620      	mov	r0, r4
 8017292:	bd10      	pop	{r4, pc}

08017294 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 8017294:	b510      	push	{r4, lr}
 8017296:	2104      	movs	r1, #4
 8017298:	4604      	mov	r4, r0
 801729a:	f009 fa1d 	bl	80206d8 <_ZdlPvj>
 801729e:	4620      	mov	r0, r4
 80172a0:	bd10      	pop	{r4, pc}

080172a2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 80172a2:	b510      	push	{r4, lr}
 80172a4:	2104      	movs	r1, #4
 80172a6:	4604      	mov	r4, r0
 80172a8:	f009 fa16 	bl	80206d8 <_ZdlPvj>
 80172ac:	4620      	mov	r0, r4
 80172ae:	bd10      	pop	{r4, pc}

080172b0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 80172b0:	b510      	push	{r4, lr}
 80172b2:	2104      	movs	r1, #4
 80172b4:	4604      	mov	r4, r0
 80172b6:	f009 fa0f 	bl	80206d8 <_ZdlPvj>
 80172ba:	4620      	mov	r0, r4
 80172bc:	bd10      	pop	{r4, pc}
	...

080172c0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 80172c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80172c4:	b091      	sub	sp, #68	; 0x44
 80172c6:	469b      	mov	fp, r3
 80172c8:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 80172cc:	4616      	mov	r6, r2
 80172ce:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
 80172d2:	f9b3 2000 	ldrsh.w	r2, [r3]
 80172d6:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 80172da:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80172de:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80172e2:	4604      	mov	r4, r0
 80172e4:	460d      	mov	r5, r1
 80172e6:	4640      	mov	r0, r8
 80172e8:	4659      	mov	r1, fp
 80172ea:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 80172ee:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 80172f2:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 80172f6:	f7f3 fd41 	bl	800ad7c <_ZN8touchgfx4RectaNERKS0_>
 80172fa:	4631      	mov	r1, r6
 80172fc:	4640      	mov	r0, r8
 80172fe:	f7f3 fd3d 	bl	800ad7c <_ZN8touchgfx4RectaNERKS0_>
 8017302:	4b74      	ldr	r3, [pc, #464]	; (80174d4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 8017304:	8818      	ldrh	r0, [r3, #0]
 8017306:	4b74      	ldr	r3, [pc, #464]	; (80174d8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 8017308:	8819      	ldrh	r1, [r3, #0]
 801730a:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801730e:	2b00      	cmp	r3, #0
 8017310:	b202      	sxth	r2, r0
 8017312:	b20e      	sxth	r6, r1
 8017314:	da07      	bge.n	8017326 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 8017316:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 801731a:	4463      	add	r3, ip
 801731c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8017320:	2300      	movs	r3, #0
 8017322:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8017326:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801732a:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801732e:	1ad2      	subs	r2, r2, r3
 8017330:	4594      	cmp	ip, r2
 8017332:	bfc4      	itt	gt
 8017334:	1ac2      	subgt	r2, r0, r3
 8017336:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
 801733a:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801733e:	2a00      	cmp	r2, #0
 8017340:	da07      	bge.n	8017352 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 8017342:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
 8017346:	4462      	add	r2, ip
 8017348:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 801734c:	2200      	movs	r2, #0
 801734e:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 8017352:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 8017356:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801735a:	eba6 060a 	sub.w	r6, r6, sl
 801735e:	42b2      	cmp	r2, r6
 8017360:	bfc4      	itt	gt
 8017362:	eba1 020a 	subgt.w	r2, r1, sl
 8017366:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
 801736a:	4a5c      	ldr	r2, [pc, #368]	; (80174dc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 801736c:	7812      	ldrb	r2, [r2, #0]
 801736e:	b9a2      	cbnz	r2, 801739a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 8017370:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 8017374:	4286      	cmp	r6, r0
 8017376:	4640      	mov	r0, r8
 8017378:	9303      	str	r3, [sp, #12]
 801737a:	bf14      	ite	ne
 801737c:	2600      	movne	r6, #0
 801737e:	2601      	moveq	r6, #1
 8017380:	f7f3 fd3f 	bl	800ae02 <_ZNK8touchgfx4Rect7isEmptyEv>
 8017384:	9b03      	ldr	r3, [sp, #12]
 8017386:	b160      	cbz	r0, 80173a2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 8017388:	2300      	movs	r3, #0
 801738a:	8023      	strh	r3, [r4, #0]
 801738c:	8063      	strh	r3, [r4, #2]
 801738e:	80a3      	strh	r3, [r4, #4]
 8017390:	4620      	mov	r0, r4
 8017392:	80e3      	strh	r3, [r4, #6]
 8017394:	b011      	add	sp, #68	; 0x44
 8017396:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801739a:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801739e:	428e      	cmp	r6, r1
 80173a0:	e7e9      	b.n	8017376 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 80173a2:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 80173a6:	9205      	str	r2, [sp, #20]
 80173a8:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 80173ac:	9206      	str	r2, [sp, #24]
 80173ae:	f8bb 2000 	ldrh.w	r2, [fp]
 80173b2:	900e      	str	r0, [sp, #56]	; 0x38
 80173b4:	1a9b      	subs	r3, r3, r2
 80173b6:	b21b      	sxth	r3, r3
 80173b8:	9303      	str	r3, [sp, #12]
 80173ba:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 80173be:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 80173c2:	ebaa 0a03 	sub.w	sl, sl, r3
 80173c6:	fa0f f38a 	sxth.w	r3, sl
 80173ca:	9304      	str	r3, [sp, #16]
 80173cc:	9b03      	ldr	r3, [sp, #12]
 80173ce:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 80173d2:	9b04      	ldr	r3, [sp, #16]
 80173d4:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 80173d8:	9b05      	ldr	r3, [sp, #20]
 80173da:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80173de:	a90e      	add	r1, sp, #56	; 0x38
 80173e0:	9b06      	ldr	r3, [sp, #24]
 80173e2:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80173e6:	a80c      	add	r0, sp, #48	; 0x30
 80173e8:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 80173ec:	f7f9 fcc2 	bl	8010d74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80173f0:	4640      	mov	r0, r8
 80173f2:	f7f9 fc97 	bl	8010d24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80173f6:	a80e      	add	r0, sp, #56	; 0x38
 80173f8:	f7f9 fc94 	bl	8010d24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80173fc:	4b38      	ldr	r3, [pc, #224]	; (80174e0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 80173fe:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 8017402:	881b      	ldrh	r3, [r3, #0]
 8017404:	9307      	str	r3, [sp, #28]
 8017406:	682b      	ldr	r3, [r5, #0]
 8017408:	f8df b0d8 	ldr.w	fp, [pc, #216]	; 80174e4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801740c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801740e:	4628      	mov	r0, r5
 8017410:	4798      	blx	r3
 8017412:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
 8017416:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 801741a:	4681      	mov	r9, r0
 801741c:	fb1a 3305 	smlabb	r3, sl, r5, r3
 8017420:	f8db 0000 	ldr.w	r0, [fp]
 8017424:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8017426:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801742a:	6803      	ldr	r3, [r0, #0]
 801742c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801742e:	4798      	blx	r3
 8017430:	4607      	mov	r7, r0
 8017432:	f8db 0000 	ldr.w	r0, [fp]
 8017436:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 801743a:	6803      	ldr	r3, [r0, #0]
 801743c:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8017440:	9109      	str	r1, [sp, #36]	; 0x24
 8017442:	9208      	str	r2, [sp, #32]
 8017444:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017446:	4798      	blx	r3
 8017448:	f010 0f01 	tst.w	r0, #1
 801744c:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8017450:	d012      	beq.n	8017478 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 8017452:	f8db 0000 	ldr.w	r0, [fp]
 8017456:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 801745a:	6803      	ldr	r3, [r0, #0]
 801745c:	9200      	str	r2, [sp, #0]
 801745e:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 8017460:	e898 0006 	ldmia.w	r8, {r1, r2}
 8017464:	462b      	mov	r3, r5
 8017466:	47b0      	blx	r6
 8017468:	9b03      	ldr	r3, [sp, #12]
 801746a:	8023      	strh	r3, [r4, #0]
 801746c:	9b04      	ldr	r3, [sp, #16]
 801746e:	8063      	strh	r3, [r4, #2]
 8017470:	9b05      	ldr	r3, [sp, #20]
 8017472:	80a3      	strh	r3, [r4, #4]
 8017474:	9b06      	ldr	r3, [sp, #24]
 8017476:	e78b      	b.n	8017390 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 8017478:	fb09 f202 	mul.w	r2, r9, r2
 801747c:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 8017480:	440f      	add	r7, r1
 8017482:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 8017486:	b166      	cbz	r6, 80174a2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 8017488:	9a07      	ldr	r2, [sp, #28]
 801748a:	4592      	cmp	sl, r2
 801748c:	d109      	bne.n	80174a2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801748e:	f8db 0000 	ldr.w	r0, [fp]
 8017492:	6802      	ldr	r2, [r0, #0]
 8017494:	fb09 f303 	mul.w	r3, r9, r3
 8017498:	6b56      	ldr	r6, [r2, #52]	; 0x34
 801749a:	4629      	mov	r1, r5
 801749c:	463a      	mov	r2, r7
 801749e:	47b0      	blx	r6
 80174a0:	e7e2      	b.n	8017468 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 80174a2:	fb0a f303 	mul.w	r3, sl, r3
 80174a6:	f8df b03c 	ldr.w	fp, [pc, #60]	; 80174e4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 80174aa:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 80174ae:	ea4f 064a 	mov.w	r6, sl, lsl #1
 80174b2:	4545      	cmp	r5, r8
 80174b4:	d2d8      	bcs.n	8017468 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 80174b6:	f8db 0000 	ldr.w	r0, [fp]
 80174ba:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 80174be:	6802      	ldr	r2, [r0, #0]
 80174c0:	4629      	mov	r1, r5
 80174c2:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 80174c6:	005b      	lsls	r3, r3, #1
 80174c8:	463a      	mov	r2, r7
 80174ca:	47d0      	blx	sl
 80174cc:	444f      	add	r7, r9
 80174ce:	4435      	add	r5, r6
 80174d0:	e7ef      	b.n	80174b2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 80174d2:	bf00      	nop
 80174d4:	200155a8 	.word	0x200155a8
 80174d8:	200155aa 	.word	0x200155aa
 80174dc:	200155ac 	.word	0x200155ac
 80174e0:	200155ae 	.word	0x200155ae
 80174e4:	200155b4 	.word	0x200155b4

080174e8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 80174e8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80174ea:	4606      	mov	r6, r0
 80174ec:	b087      	sub	sp, #28
 80174ee:	460c      	mov	r4, r1
 80174f0:	4617      	mov	r7, r2
 80174f2:	461d      	mov	r5, r3
 80174f4:	b333      	cbz	r3, 8017544 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 80174f6:	4608      	mov	r0, r1
 80174f8:	f7f3 fc83 	bl	800ae02 <_ZNK8touchgfx4Rect7isEmptyEv>
 80174fc:	bb10      	cbnz	r0, 8017544 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 80174fe:	6820      	ldr	r0, [r4, #0]
 8017500:	6861      	ldr	r1, [r4, #4]
 8017502:	4c1c      	ldr	r4, [pc, #112]	; (8017574 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 8017504:	ab04      	add	r3, sp, #16
 8017506:	c303      	stmia	r3!, {r0, r1}
 8017508:	a804      	add	r0, sp, #16
 801750a:	f7f9 fc0b 	bl	8010d24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801750e:	6820      	ldr	r0, [r4, #0]
 8017510:	6803      	ldr	r3, [r0, #0]
 8017512:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017514:	4798      	blx	r3
 8017516:	2dff      	cmp	r5, #255	; 0xff
 8017518:	d016      	beq.n	8017548 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 801751a:	f010 0f08 	tst.w	r0, #8
 801751e:	6820      	ldr	r0, [r4, #0]
 8017520:	d015      	beq.n	801754e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 8017522:	2400      	movs	r4, #0
 8017524:	6801      	ldr	r1, [r0, #0]
 8017526:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801752a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801752e:	e9cd 5402 	strd	r5, r4, [sp, #8]
 8017532:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 8017536:	9401      	str	r4, [sp, #4]
 8017538:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 801753c:	9400      	str	r4, [sp, #0]
 801753e:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 8017540:	4639      	mov	r1, r7
 8017542:	47a0      	blx	r4
 8017544:	b007      	add	sp, #28
 8017546:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8017548:	f010 0f02 	tst.w	r0, #2
 801754c:	e7e7      	b.n	801751e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 801754e:	6803      	ldr	r3, [r0, #0]
 8017550:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017552:	4798      	blx	r3
 8017554:	4b08      	ldr	r3, [pc, #32]	; (8017578 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 8017556:	881a      	ldrh	r2, [r3, #0]
 8017558:	6833      	ldr	r3, [r6, #0]
 801755a:	e9cd 7500 	strd	r7, r5, [sp]
 801755e:	4601      	mov	r1, r0
 8017560:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 8017562:	4630      	mov	r0, r6
 8017564:	ab04      	add	r3, sp, #16
 8017566:	47a8      	blx	r5
 8017568:	6820      	ldr	r0, [r4, #0]
 801756a:	6803      	ldr	r3, [r0, #0]
 801756c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801756e:	4798      	blx	r3
 8017570:	e7e8      	b.n	8017544 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8017572:	bf00      	nop
 8017574:	200155b4 	.word	0x200155b4
 8017578:	200155ae 	.word	0x200155ae

0801757c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 801757c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017580:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 8017584:	9e08      	ldr	r6, [sp, #32]
 8017586:	4688      	mov	r8, r1
 8017588:	4614      	mov	r4, r2
 801758a:	461d      	mov	r5, r3
 801758c:	2f00      	cmp	r7, #0
 801758e:	f000 80a9 	beq.w	80176e4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8017592:	4618      	mov	r0, r3
 8017594:	f7f3 fc35 	bl	800ae02 <_ZNK8touchgfx4Rect7isEmptyEv>
 8017598:	2800      	cmp	r0, #0
 801759a:	f040 80a3 	bne.w	80176e4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801759e:	f9b5 1000 	ldrsh.w	r1, [r5]
 80175a2:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 80175a6:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 80175aa:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 80175ae:	fb04 1303 	mla	r3, r4, r3, r1
 80175b2:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 80175b6:	4365      	muls	r5, r4
 80175b8:	2fff      	cmp	r7, #255	; 0xff
 80175ba:	eba4 0200 	sub.w	r2, r4, r0
 80175be:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 80175c2:	ea4f 2816 	mov.w	r8, r6, lsr #8
 80175c6:	d04a      	beq.n	801765e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 80175c8:	b2bc      	uxth	r4, r7
 80175ca:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 80175ce:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 80175d2:	fa5f f788 	uxtb.w	r7, r8
 80175d6:	b2f3      	uxtb	r3, r6
 80175d8:	0040      	lsls	r0, r0, #1
 80175da:	fb0e fe04 	mul.w	lr, lr, r4
 80175de:	4367      	muls	r7, r4
 80175e0:	4363      	muls	r3, r4
 80175e2:	ea4f 0842 	mov.w	r8, r2, lsl #1
 80175e6:	fa1f fc8c 	uxth.w	ip, ip
 80175ea:	42a9      	cmp	r1, r5
 80175ec:	d27a      	bcs.n	80176e4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 80175ee:	eb01 0900 	add.w	r9, r1, r0
 80175f2:	4549      	cmp	r1, r9
 80175f4:	d231      	bcs.n	801765a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 80175f6:	880a      	ldrh	r2, [r1, #0]
 80175f8:	1214      	asrs	r4, r2, #8
 80175fa:	10d6      	asrs	r6, r2, #3
 80175fc:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8017600:	00d2      	lsls	r2, r2, #3
 8017602:	b2d2      	uxtb	r2, r2
 8017604:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8017608:	fb14 f40c 	smulbb	r4, r4, ip
 801760c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8017610:	4474      	add	r4, lr
 8017612:	fb12 f20c 	smulbb	r2, r2, ip
 8017616:	b2a4      	uxth	r4, r4
 8017618:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801761c:	441a      	add	r2, r3
 801761e:	b292      	uxth	r2, r2
 8017620:	f104 0a01 	add.w	sl, r4, #1
 8017624:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8017628:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801762c:	fb16 f60c 	smulbb	r6, r6, ip
 8017630:	f102 0a01 	add.w	sl, r2, #1
 8017634:	443e      	add	r6, r7
 8017636:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 801763a:	b2b6      	uxth	r6, r6
 801763c:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8017640:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8017644:	4322      	orrs	r2, r4
 8017646:	1c74      	adds	r4, r6, #1
 8017648:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 801764c:	0976      	lsrs	r6, r6, #5
 801764e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8017652:	4332      	orrs	r2, r6
 8017654:	f821 2b02 	strh.w	r2, [r1], #2
 8017658:	e7cb      	b.n	80175f2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 801765a:	4441      	add	r1, r8
 801765c:	e7c5      	b.n	80175ea <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 801765e:	4f22      	ldr	r7, [pc, #136]	; (80176e8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 8017660:	0973      	lsrs	r3, r6, #5
 8017662:	ea08 0707 	and.w	r7, r8, r7
 8017666:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801766a:	433b      	orrs	r3, r7
 801766c:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8017670:	4333      	orrs	r3, r6
 8017672:	07e7      	lsls	r7, r4, #31
 8017674:	b29b      	uxth	r3, r3
 8017676:	d50b      	bpl.n	8017690 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 8017678:	0040      	lsls	r0, r0, #1
 801767a:	0052      	lsls	r2, r2, #1
 801767c:	42a9      	cmp	r1, r5
 801767e:	d231      	bcs.n	80176e4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8017680:	180c      	adds	r4, r1, r0
 8017682:	42a1      	cmp	r1, r4
 8017684:	d202      	bcs.n	801768c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 8017686:	f821 3b02 	strh.w	r3, [r1], #2
 801768a:	e7fa      	b.n	8017682 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 801768c:	4411      	add	r1, r2
 801768e:	e7f5      	b.n	801767c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 8017690:	078e      	lsls	r6, r1, #30
 8017692:	d008      	beq.n	80176a6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 8017694:	0066      	lsls	r6, r4, #1
 8017696:	460a      	mov	r2, r1
 8017698:	42aa      	cmp	r2, r5
 801769a:	d202      	bcs.n	80176a2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 801769c:	8013      	strh	r3, [r2, #0]
 801769e:	4432      	add	r2, r6
 80176a0:	e7fa      	b.n	8017698 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 80176a2:	3102      	adds	r1, #2
 80176a4:	3801      	subs	r0, #1
 80176a6:	07c2      	lsls	r2, r0, #31
 80176a8:	d50b      	bpl.n	80176c2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 80176aa:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 80176ae:	3a01      	subs	r2, #1
 80176b0:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 80176b4:	0066      	lsls	r6, r4, #1
 80176b6:	42aa      	cmp	r2, r5
 80176b8:	d202      	bcs.n	80176c0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 80176ba:	8013      	strh	r3, [r2, #0]
 80176bc:	4432      	add	r2, r6
 80176be:	e7fa      	b.n	80176b6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 80176c0:	3801      	subs	r0, #1
 80176c2:	b178      	cbz	r0, 80176e4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 80176c4:	1040      	asrs	r0, r0, #1
 80176c6:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 80176ca:	0080      	lsls	r0, r0, #2
 80176cc:	0064      	lsls	r4, r4, #1
 80176ce:	42a9      	cmp	r1, r5
 80176d0:	d208      	bcs.n	80176e4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 80176d2:	180e      	adds	r6, r1, r0
 80176d4:	460a      	mov	r2, r1
 80176d6:	42b2      	cmp	r2, r6
 80176d8:	d202      	bcs.n	80176e0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 80176da:	f842 3b04 	str.w	r3, [r2], #4
 80176de:	e7fa      	b.n	80176d6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 80176e0:	4421      	add	r1, r4
 80176e2:	e7f4      	b.n	80176ce <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 80176e4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80176e8:	00fff800 	.word	0x00fff800

080176ec <_ZN8touchgfx8LCD16bppC1Ev>:
 80176ec:	2200      	movs	r2, #0
 80176ee:	4910      	ldr	r1, [pc, #64]	; (8017730 <_ZN8touchgfx8LCD16bppC1Ev+0x44>)
 80176f0:	6042      	str	r2, [r0, #4]
 80176f2:	6001      	str	r1, [r0, #0]
 80176f4:	e9c0 2202 	strd	r2, r2, [r0, #8]
 80176f8:	e9c0 2204 	strd	r2, r2, [r0, #16]
 80176fc:	e9c0 2206 	strd	r2, r2, [r0, #24]
 8017700:	e9c0 2208 	strd	r2, r2, [r0, #32]
 8017704:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 8017708:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 801770c:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 8017710:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 8017714:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 8017718:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 801771c:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 8017720:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 8017724:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 8017728:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 801772c:	4770      	bx	lr
 801772e:	bf00      	nop
 8017730:	0802463c 	.word	0x0802463c

08017734 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 8017734:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017738:	460d      	mov	r5, r1
 801773a:	b08d      	sub	sp, #52	; 0x34
 801773c:	4604      	mov	r4, r0
 801773e:	6808      	ldr	r0, [r1, #0]
 8017740:	6849      	ldr	r1, [r1, #4]
 8017742:	4699      	mov	r9, r3
 8017744:	ab08      	add	r3, sp, #32
 8017746:	c303      	stmia	r3!, {r0, r1}
 8017748:	6810      	ldr	r0, [r2, #0]
 801774a:	6851      	ldr	r1, [r2, #4]
 801774c:	ab0a      	add	r3, sp, #40	; 0x28
 801774e:	c303      	stmia	r3!, {r0, r1}
 8017750:	a808      	add	r0, sp, #32
 8017752:	f7f9 fae7 	bl	8010d24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017756:	4629      	mov	r1, r5
 8017758:	a80a      	add	r0, sp, #40	; 0x28
 801775a:	f7f9 fb0b 	bl	8010d74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801775e:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8017762:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 8017766:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 801776a:	4d63      	ldr	r5, [pc, #396]	; (80178f8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801776c:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 8017770:	6828      	ldr	r0, [r5, #0]
 8017772:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 8017776:	fb11 2103 	smlabb	r1, r1, r3, r2
 801777a:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801777e:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 8017782:	440a      	add	r2, r1
 8017784:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8017788:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 801778c:	4413      	add	r3, r2
 801778e:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8017792:	6803      	ldr	r3, [r0, #0]
 8017794:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017796:	4798      	blx	r3
 8017798:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801779c:	d119      	bne.n	80177d2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801779e:	f010 0f20 	tst.w	r0, #32
 80177a2:	6828      	ldr	r0, [r5, #0]
 80177a4:	d018      	beq.n	80177d8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 80177a6:	2500      	movs	r5, #0
 80177a8:	6801      	ldr	r1, [r0, #0]
 80177aa:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 80177ae:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 80177b2:	e9cd 9503 	strd	r9, r5, [sp, #12]
 80177b6:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 80177ba:	9502      	str	r5, [sp, #8]
 80177bc:	b2b6      	uxth	r6, r6
 80177be:	fa1f f588 	uxth.w	r5, r8
 80177c2:	9601      	str	r6, [sp, #4]
 80177c4:	9500      	str	r5, [sp, #0]
 80177c6:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 80177c8:	4621      	mov	r1, r4
 80177ca:	47a8      	blx	r5
 80177cc:	b00d      	add	sp, #52	; 0x34
 80177ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80177d2:	f010 0f40 	tst.w	r0, #64	; 0x40
 80177d6:	e7e4      	b.n	80177a2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 80177d8:	6803      	ldr	r3, [r0, #0]
 80177da:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80177dc:	4798      	blx	r3
 80177de:	4947      	ldr	r1, [pc, #284]	; (80178fc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 80177e0:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 80177e4:	880b      	ldrh	r3, [r1, #0]
 80177e6:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 80177ea:	fb03 5202 	mla	r2, r3, r2, r5
 80177ee:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80177f2:	4373      	muls	r3, r6
 80177f4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80177f8:	9307      	str	r3, [sp, #28]
 80177fa:	ea4f 0348 	mov.w	r3, r8, lsl #1
 80177fe:	9306      	str	r3, [sp, #24]
 8017800:	468a      	mov	sl, r1
 8017802:	9b07      	ldr	r3, [sp, #28]
 8017804:	4298      	cmp	r0, r3
 8017806:	d270      	bcs.n	80178ea <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 8017808:	9b06      	ldr	r3, [sp, #24]
 801780a:	4621      	mov	r1, r4
 801780c:	eb00 0b03 	add.w	fp, r0, r3
 8017810:	4558      	cmp	r0, fp
 8017812:	d25d      	bcs.n	80178d0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 8017814:	f851 4b04 	ldr.w	r4, [r1], #4
 8017818:	0e23      	lsrs	r3, r4, #24
 801781a:	d014      	beq.n	8017846 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801781c:	2bff      	cmp	r3, #255	; 0xff
 801781e:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 8017822:	d112      	bne.n	801784a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8017824:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8017828:	d10f      	bne.n	801784a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801782a:	0963      	lsrs	r3, r4, #5
 801782c:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8017830:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017834:	f02c 0c07 	bic.w	ip, ip, #7
 8017838:	ea43 0c0c 	orr.w	ip, r3, ip
 801783c:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8017840:	ea4c 0404 	orr.w	r4, ip, r4
 8017844:	8004      	strh	r4, [r0, #0]
 8017846:	3002      	adds	r0, #2
 8017848:	e7e2      	b.n	8017810 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 801784a:	fb09 f303 	mul.w	r3, r9, r3
 801784e:	8807      	ldrh	r7, [r0, #0]
 8017850:	1c5a      	adds	r2, r3, #1
 8017852:	eb02 2223 	add.w	r2, r2, r3, asr #8
 8017856:	1212      	asrs	r2, r2, #8
 8017858:	123e      	asrs	r6, r7, #8
 801785a:	b293      	uxth	r3, r2
 801785c:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 8017860:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8017864:	43d2      	mvns	r2, r2
 8017866:	b2d2      	uxtb	r2, r2
 8017868:	10fd      	asrs	r5, r7, #3
 801786a:	fb1e fe03 	smulbb	lr, lr, r3
 801786e:	00ff      	lsls	r7, r7, #3
 8017870:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8017874:	fb06 e602 	mla	r6, r6, r2, lr
 8017878:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801787c:	b2ff      	uxtb	r7, r7
 801787e:	fa5f fc8c 	uxtb.w	ip, ip
 8017882:	b2e4      	uxtb	r4, r4
 8017884:	b2b6      	uxth	r6, r6
 8017886:	fb1c fc03 	smulbb	ip, ip, r3
 801788a:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801788e:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 8017892:	fb14 f403 	smulbb	r4, r4, r3
 8017896:	fb05 c502 	mla	r5, r5, r2, ip
 801789a:	f106 0e01 	add.w	lr, r6, #1
 801789e:	fb07 4702 	mla	r7, r7, r2, r4
 80178a2:	b2ad      	uxth	r5, r5
 80178a4:	b2bf      	uxth	r7, r7
 80178a6:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 80178aa:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 80178ae:	f105 0c01 	add.w	ip, r5, #1
 80178b2:	1c7e      	adds	r6, r7, #1
 80178b4:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 80178b8:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80178bc:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80178c0:	096d      	lsrs	r5, r5, #5
 80178c2:	ea46 060e 	orr.w	r6, r6, lr
 80178c6:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80178ca:	432e      	orrs	r6, r5
 80178cc:	8006      	strh	r6, [r0, #0]
 80178ce:	e7ba      	b.n	8017846 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 80178d0:	f8ba 3000 	ldrh.w	r3, [sl]
 80178d4:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 80178d8:	eba3 0308 	sub.w	r3, r3, r8
 80178dc:	eba4 0408 	sub.w	r4, r4, r8
 80178e0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80178e4:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 80178e8:	e78b      	b.n	8017802 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 80178ea:	4b03      	ldr	r3, [pc, #12]	; (80178f8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 80178ec:	6818      	ldr	r0, [r3, #0]
 80178ee:	6803      	ldr	r3, [r0, #0]
 80178f0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80178f2:	4798      	blx	r3
 80178f4:	e76a      	b.n	80177cc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 80178f6:	bf00      	nop
 80178f8:	200155b4 	.word	0x200155b4
 80178fc:	200155ae 	.word	0x200155ae

08017900 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 8017900:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8017904:	460c      	mov	r4, r1
 8017906:	b085      	sub	sp, #20
 8017908:	6810      	ldr	r0, [r2, #0]
 801790a:	6851      	ldr	r1, [r2, #4]
 801790c:	466d      	mov	r5, sp
 801790e:	c503      	stmia	r5!, {r0, r1}
 8017910:	6818      	ldr	r0, [r3, #0]
 8017912:	6859      	ldr	r1, [r3, #4]
 8017914:	4616      	mov	r6, r2
 8017916:	c503      	stmia	r5!, {r0, r1}
 8017918:	4668      	mov	r0, sp
 801791a:	f7f9 fa03 	bl	8010d24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801791e:	4631      	mov	r1, r6
 8017920:	a802      	add	r0, sp, #8
 8017922:	f7f9 fa27 	bl	8010d74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017926:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 801792a:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 801792e:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8017932:	4d28      	ldr	r5, [pc, #160]	; (80179d4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 8017934:	4e28      	ldr	r6, [pc, #160]	; (80179d8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 8017936:	6828      	ldr	r0, [r5, #0]
 8017938:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801793c:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 8017940:	fb11 2103 	smlabb	r1, r1, r3, r2
 8017944:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8017948:	f8bd 1000 	ldrh.w	r1, [sp]
 801794c:	440a      	add	r2, r1
 801794e:	f8ad 2008 	strh.w	r2, [sp, #8]
 8017952:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8017956:	4413      	add	r3, r2
 8017958:	f8ad 300a 	strh.w	r3, [sp, #10]
 801795c:	6803      	ldr	r3, [r0, #0]
 801795e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017960:	4798      	blx	r3
 8017962:	8833      	ldrh	r3, [r6, #0]
 8017964:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 8017968:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801796c:	f8df e06c 	ldr.w	lr, [pc, #108]	; 80179dc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 8017970:	fb03 1202 	mla	r2, r3, r2, r1
 8017974:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8017978:	fb08 f303 	mul.w	r3, r8, r3
 801797c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8017980:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 8017984:	4298      	cmp	r0, r3
 8017986:	d21d      	bcs.n	80179c4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 8017988:	eb00 080c 	add.w	r8, r0, ip
 801798c:	4540      	cmp	r0, r8
 801798e:	d20f      	bcs.n	80179b0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 8017990:	f854 1b04 	ldr.w	r1, [r4], #4
 8017994:	ea4f 1951 	mov.w	r9, r1, lsr #5
 8017998:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 801799c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80179a0:	ea42 0209 	orr.w	r2, r2, r9
 80179a4:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 80179a8:	430a      	orrs	r2, r1
 80179aa:	f820 2b02 	strh.w	r2, [r0], #2
 80179ae:	e7ed      	b.n	801798c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 80179b0:	8832      	ldrh	r2, [r6, #0]
 80179b2:	1bd2      	subs	r2, r2, r7
 80179b4:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80179b8:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 80179bc:	1bd2      	subs	r2, r2, r7
 80179be:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 80179c2:	e7df      	b.n	8017984 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 80179c4:	6828      	ldr	r0, [r5, #0]
 80179c6:	6803      	ldr	r3, [r0, #0]
 80179c8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80179ca:	4798      	blx	r3
 80179cc:	b005      	add	sp, #20
 80179ce:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80179d2:	bf00      	nop
 80179d4:	200155b4 	.word	0x200155b4
 80179d8:	200155ae 	.word	0x200155ae
 80179dc:	fffff800 	.word	0xfffff800

080179e0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 80179e0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80179e4:	460e      	mov	r6, r1
 80179e6:	b08e      	sub	sp, #56	; 0x38
 80179e8:	4604      	mov	r4, r0
 80179ea:	6808      	ldr	r0, [r1, #0]
 80179ec:	6849      	ldr	r1, [r1, #4]
 80179ee:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 8017bc8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 80179f2:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 8017bcc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 80179f6:	461d      	mov	r5, r3
 80179f8:	ab0a      	add	r3, sp, #40	; 0x28
 80179fa:	c303      	stmia	r3!, {r0, r1}
 80179fc:	6810      	ldr	r0, [r2, #0]
 80179fe:	6851      	ldr	r1, [r2, #4]
 8017a00:	ab0c      	add	r3, sp, #48	; 0x30
 8017a02:	c303      	stmia	r3!, {r0, r1}
 8017a04:	a80a      	add	r0, sp, #40	; 0x28
 8017a06:	f7f9 f98d 	bl	8010d24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017a0a:	4631      	mov	r1, r6
 8017a0c:	a80c      	add	r0, sp, #48	; 0x30
 8017a0e:	f7f9 f9b1 	bl	8010d74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017a12:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8017a16:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8017a1a:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8017a1e:	f8d8 0000 	ldr.w	r0, [r8]
 8017a22:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 8017a26:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 8017a2a:	fb11 2103 	smlabb	r1, r1, r3, r2
 8017a2e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8017a32:	440c      	add	r4, r1
 8017a34:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 8017a38:	440a      	add	r2, r1
 8017a3a:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8017a3e:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 8017a42:	4413      	add	r3, r2
 8017a44:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8017a48:	6803      	ldr	r3, [r0, #0]
 8017a4a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017a4c:	4798      	blx	r3
 8017a4e:	2dff      	cmp	r5, #255	; 0xff
 8017a50:	d124      	bne.n	8017a9c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 8017a52:	f010 0f01 	tst.w	r0, #1
 8017a56:	f8d8 0000 	ldr.w	r0, [r8]
 8017a5a:	d022      	beq.n	8017aa2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 8017a5c:	2100      	movs	r1, #0
 8017a5e:	f8d0 c000 	ldr.w	ip, [r0]
 8017a62:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8017a66:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 8017a6a:	e9cd 1107 	strd	r1, r1, [sp, #28]
 8017a6e:	f04f 0e01 	mov.w	lr, #1
 8017a72:	f8cd e018 	str.w	lr, [sp, #24]
 8017a76:	f8b9 e000 	ldrh.w	lr, [r9]
 8017a7a:	9503      	str	r5, [sp, #12]
 8017a7c:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 8017a80:	b2b6      	uxth	r6, r6
 8017a82:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8017a86:	9102      	str	r1, [sp, #8]
 8017a88:	b2bf      	uxth	r7, r7
 8017a8a:	9601      	str	r6, [sp, #4]
 8017a8c:	9700      	str	r7, [sp, #0]
 8017a8e:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 8017a92:	4621      	mov	r1, r4
 8017a94:	47a8      	blx	r5
 8017a96:	b00e      	add	sp, #56	; 0x38
 8017a98:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017a9c:	f010 0f04 	tst.w	r0, #4
 8017aa0:	e7d9      	b.n	8017a56 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 8017aa2:	6803      	ldr	r3, [r0, #0]
 8017aa4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017aa6:	4798      	blx	r3
 8017aa8:	f8b9 3000 	ldrh.w	r3, [r9]
 8017aac:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 8017ab0:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 8017ab4:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 8017ab8:	fb03 1202 	mla	r2, r3, r2, r1
 8017abc:	ebac 0c07 	sub.w	ip, ip, r7
 8017ac0:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8017ac4:	435e      	muls	r6, r3
 8017ac6:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 8017aca:	2dff      	cmp	r5, #255	; 0xff
 8017acc:	eba3 0707 	sub.w	r7, r3, r7
 8017ad0:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8017ad4:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8017ad8:	ea4f 0747 	mov.w	r7, r7, lsl #1
 8017adc:	d049      	beq.n	8017b72 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 8017ade:	43eb      	mvns	r3, r5
 8017ae0:	fa1f f985 	uxth.w	r9, r5
 8017ae4:	b2db      	uxtb	r3, r3
 8017ae6:	42b0      	cmp	r0, r6
 8017ae8:	d266      	bcs.n	8017bb8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8017aea:	eb00 0a0e 	add.w	sl, r0, lr
 8017aee:	4550      	cmp	r0, sl
 8017af0:	4621      	mov	r1, r4
 8017af2:	f104 0403 	add.w	r4, r4, #3
 8017af6:	d25b      	bcs.n	8017bb0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 8017af8:	8802      	ldrh	r2, [r0, #0]
 8017afa:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8017afe:	ea4f 2822 	mov.w	r8, r2, asr #8
 8017b02:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 8017b06:	fb11 f109 	smulbb	r1, r1, r9
 8017b0a:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 8017b0e:	10d5      	asrs	r5, r2, #3
 8017b10:	fb08 1803 	mla	r8, r8, r3, r1
 8017b14:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 8017b18:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8017b1c:	fb11 f109 	smulbb	r1, r1, r9
 8017b20:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8017b24:	fb05 1503 	mla	r5, r5, r3, r1
 8017b28:	00d2      	lsls	r2, r2, #3
 8017b2a:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8017b2e:	b2d2      	uxtb	r2, r2
 8017b30:	fb11 f109 	smulbb	r1, r1, r9
 8017b34:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8017b38:	fa1f f888 	uxth.w	r8, r8
 8017b3c:	fb02 1203 	mla	r2, r2, r3, r1
 8017b40:	b292      	uxth	r2, r2
 8017b42:	f108 0101 	add.w	r1, r8, #1
 8017b46:	b2ad      	uxth	r5, r5
 8017b48:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 8017b4c:	1c51      	adds	r1, r2, #1
 8017b4e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8017b52:	1c69      	adds	r1, r5, #1
 8017b54:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8017b58:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 8017b5c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8017b60:	096d      	lsrs	r5, r5, #5
 8017b62:	ea42 0208 	orr.w	r2, r2, r8
 8017b66:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8017b6a:	432a      	orrs	r2, r5
 8017b6c:	f820 2b02 	strh.w	r2, [r0], #2
 8017b70:	e7bd      	b.n	8017aee <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 8017b72:	4a14      	ldr	r2, [pc, #80]	; (8017bc4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 8017b74:	42b0      	cmp	r0, r6
 8017b76:	d21f      	bcs.n	8017bb8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8017b78:	eb00 050e 	add.w	r5, r0, lr
 8017b7c:	42a8      	cmp	r0, r5
 8017b7e:	4621      	mov	r1, r4
 8017b80:	f104 0403 	add.w	r4, r4, #3
 8017b84:	d210      	bcs.n	8017ba8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 8017b86:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 8017b8a:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8017b8e:	00db      	lsls	r3, r3, #3
 8017b90:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 8017b94:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017b98:	430b      	orrs	r3, r1
 8017b9a:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8017b9e:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 8017ba2:	f820 3b02 	strh.w	r3, [r0], #2
 8017ba6:	e7e9      	b.n	8017b7c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 8017ba8:	4438      	add	r0, r7
 8017baa:	eb01 040c 	add.w	r4, r1, ip
 8017bae:	e7e1      	b.n	8017b74 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 8017bb0:	4438      	add	r0, r7
 8017bb2:	eb01 040c 	add.w	r4, r1, ip
 8017bb6:	e796      	b.n	8017ae6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 8017bb8:	4b03      	ldr	r3, [pc, #12]	; (8017bc8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 8017bba:	6818      	ldr	r0, [r3, #0]
 8017bbc:	6803      	ldr	r3, [r0, #0]
 8017bbe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017bc0:	4798      	blx	r3
 8017bc2:	e768      	b.n	8017a96 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 8017bc4:	fffff800 	.word	0xfffff800
 8017bc8:	200155b4 	.word	0x200155b4
 8017bcc:	200155ae 	.word	0x200155ae

08017bd0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 8017bd0:	b4f0      	push	{r4, r5, r6, r7}
 8017bd2:	4616      	mov	r6, r2
 8017bd4:	2e01      	cmp	r6, #1
 8017bd6:	461c      	mov	r4, r3
 8017bd8:	460d      	mov	r5, r1
 8017bda:	9a04      	ldr	r2, [sp, #16]
 8017bdc:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8017be0:	f89d 7018 	ldrb.w	r7, [sp, #24]
 8017be4:	d012      	beq.n	8017c0c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 8017be6:	d303      	bcc.n	8017bf0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 8017be8:	2e02      	cmp	r6, #2
 8017bea:	d00a      	beq.n	8017c02 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 8017bec:	bcf0      	pop	{r4, r5, r6, r7}
 8017bee:	4770      	bx	lr
 8017bf0:	6805      	ldr	r5, [r0, #0]
 8017bf2:	e9cd 3704 	strd	r3, r7, [sp, #16]
 8017bf6:	68ed      	ldr	r5, [r5, #12]
 8017bf8:	4613      	mov	r3, r2
 8017bfa:	46ac      	mov	ip, r5
 8017bfc:	4622      	mov	r2, r4
 8017bfe:	bcf0      	pop	{r4, r5, r6, r7}
 8017c00:	4760      	bx	ip
 8017c02:	4621      	mov	r1, r4
 8017c04:	4628      	mov	r0, r5
 8017c06:	bcf0      	pop	{r4, r5, r6, r7}
 8017c08:	f7ff bd94 	b.w	8017734 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8017c0c:	4621      	mov	r1, r4
 8017c0e:	4628      	mov	r0, r5
 8017c10:	bcf0      	pop	{r4, r5, r6, r7}
 8017c12:	f7ff bee5 	b.w	80179e0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

08017c18 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 8017c18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017c1c:	4681      	mov	r9, r0
 8017c1e:	b093      	sub	sp, #76	; 0x4c
 8017c20:	6810      	ldr	r0, [r2, #0]
 8017c22:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 8017c26:	4f6d      	ldr	r7, [pc, #436]	; (8017ddc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 8017c28:	4688      	mov	r8, r1
 8017c2a:	6851      	ldr	r1, [r2, #4]
 8017c2c:	ac0e      	add	r4, sp, #56	; 0x38
 8017c2e:	c403      	stmia	r4!, {r0, r1}
 8017c30:	6818      	ldr	r0, [r3, #0]
 8017c32:	6859      	ldr	r1, [r3, #4]
 8017c34:	ac10      	add	r4, sp, #64	; 0x40
 8017c36:	4616      	mov	r6, r2
 8017c38:	c403      	stmia	r4!, {r0, r1}
 8017c3a:	a80e      	add	r0, sp, #56	; 0x38
 8017c3c:	f7f9 f872 	bl	8010d24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017c40:	4631      	mov	r1, r6
 8017c42:	a810      	add	r0, sp, #64	; 0x40
 8017c44:	f7f9 f896 	bl	8010d74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017c48:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 8017c4c:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 8017c50:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 8017c54:	4e62      	ldr	r6, [pc, #392]	; (8017de0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8017c56:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 8017c5a:	6830      	ldr	r0, [r6, #0]
 8017c5c:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 8017c60:	fb11 2103 	smlabb	r1, r1, r3, r2
 8017c64:	4489      	add	r9, r1
 8017c66:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 8017c6a:	440a      	add	r2, r1
 8017c6c:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8017c70:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8017c74:	4413      	add	r3, r2
 8017c76:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8017c7a:	6803      	ldr	r3, [r0, #0]
 8017c7c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017c7e:	4798      	blx	r3
 8017c80:	f010 0f80 	tst.w	r0, #128	; 0x80
 8017c84:	6830      	ldr	r0, [r6, #0]
 8017c86:	d01d      	beq.n	8017cc4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 8017c88:	2200      	movs	r2, #0
 8017c8a:	6801      	ldr	r1, [r0, #0]
 8017c8c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8017c90:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8017c94:	220b      	movs	r2, #11
 8017c96:	9207      	str	r2, [sp, #28]
 8017c98:	883a      	ldrh	r2, [r7, #0]
 8017c9a:	9206      	str	r2, [sp, #24]
 8017c9c:	2201      	movs	r2, #1
 8017c9e:	e9cd a204 	strd	sl, r2, [sp, #16]
 8017ca2:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 8017ca6:	9203      	str	r2, [sp, #12]
 8017ca8:	b2a4      	uxth	r4, r4
 8017caa:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 8017cae:	9200      	str	r2, [sp, #0]
 8017cb0:	b2ad      	uxth	r5, r5
 8017cb2:	9502      	str	r5, [sp, #8]
 8017cb4:	9401      	str	r4, [sp, #4]
 8017cb6:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 8017cb8:	4642      	mov	r2, r8
 8017cba:	4649      	mov	r1, r9
 8017cbc:	47a0      	blx	r4
 8017cbe:	b013      	add	sp, #76	; 0x4c
 8017cc0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017cc4:	6803      	ldr	r3, [r0, #0]
 8017cc6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017cc8:	4798      	blx	r3
 8017cca:	883b      	ldrh	r3, [r7, #0]
 8017ccc:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 8017cd0:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 8017cd4:	fb03 1202 	mla	r2, r3, r2, r1
 8017cd8:	435d      	muls	r5, r3
 8017cda:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8017cde:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 8017ce2:	920c      	str	r2, [sp, #48]	; 0x30
 8017ce4:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 8017ce8:	1b12      	subs	r2, r2, r4
 8017cea:	920d      	str	r2, [sp, #52]	; 0x34
 8017cec:	0062      	lsls	r2, r4, #1
 8017cee:	1b1c      	subs	r4, r3, r4
 8017cf0:	0063      	lsls	r3, r4, #1
 8017cf2:	920a      	str	r2, [sp, #40]	; 0x28
 8017cf4:	930b      	str	r3, [sp, #44]	; 0x2c
 8017cf6:	f04f 0e04 	mov.w	lr, #4
 8017cfa:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8017cfc:	4298      	cmp	r0, r3
 8017cfe:	d266      	bcs.n	8017dce <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 8017d00:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017d02:	eb00 0b03 	add.w	fp, r0, r3
 8017d06:	4558      	cmp	r0, fp
 8017d08:	d25c      	bcs.n	8017dc4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 8017d0a:	f819 3b01 	ldrb.w	r3, [r9], #1
 8017d0e:	fb1e e303 	smlabb	r3, lr, r3, lr
 8017d12:	f858 2003 	ldr.w	r2, [r8, r3]
 8017d16:	0e11      	lsrs	r1, r2, #24
 8017d18:	d012      	beq.n	8017d40 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8017d1a:	29ff      	cmp	r1, #255	; 0xff
 8017d1c:	ea4f 2712 	mov.w	r7, r2, lsr #8
 8017d20:	d110      	bne.n	8017d44 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8017d22:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8017d26:	d10d      	bne.n	8017d44 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8017d28:	0953      	lsrs	r3, r2, #5
 8017d2a:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 8017d2e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017d32:	f027 0707 	bic.w	r7, r7, #7
 8017d36:	431f      	orrs	r7, r3
 8017d38:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8017d3c:	433a      	orrs	r2, r7
 8017d3e:	8002      	strh	r2, [r0, #0]
 8017d40:	3002      	adds	r0, #2
 8017d42:	e7e0      	b.n	8017d06 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 8017d44:	fb0a f101 	mul.w	r1, sl, r1
 8017d48:	8806      	ldrh	r6, [r0, #0]
 8017d4a:	1c4b      	adds	r3, r1, #1
 8017d4c:	eb03 2321 	add.w	r3, r3, r1, asr #8
 8017d50:	1235      	asrs	r5, r6, #8
 8017d52:	10f4      	asrs	r4, r6, #3
 8017d54:	121b      	asrs	r3, r3, #8
 8017d56:	00f6      	lsls	r6, r6, #3
 8017d58:	b299      	uxth	r1, r3
 8017d5a:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 8017d5e:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8017d62:	b2f6      	uxtb	r6, r6
 8017d64:	43db      	mvns	r3, r3
 8017d66:	b2d2      	uxtb	r2, r2
 8017d68:	b2db      	uxtb	r3, r3
 8017d6a:	fb1c fc01 	smulbb	ip, ip, r1
 8017d6e:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8017d72:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8017d76:	fb12 f201 	smulbb	r2, r2, r1
 8017d7a:	fb05 c503 	mla	r5, r5, r3, ip
 8017d7e:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8017d82:	b2ff      	uxtb	r7, r7
 8017d84:	fb06 2203 	mla	r2, r6, r3, r2
 8017d88:	b2ad      	uxth	r5, r5
 8017d8a:	fb17 f701 	smulbb	r7, r7, r1
 8017d8e:	b292      	uxth	r2, r2
 8017d90:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 8017d94:	fb04 7403 	mla	r4, r4, r3, r7
 8017d98:	f105 0c01 	add.w	ip, r5, #1
 8017d9c:	1c57      	adds	r7, r2, #1
 8017d9e:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8017da2:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8017da6:	b2a4      	uxth	r4, r4
 8017da8:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8017dac:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8017db0:	433d      	orrs	r5, r7
 8017db2:	1c67      	adds	r7, r4, #1
 8017db4:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 8017db8:	0964      	lsrs	r4, r4, #5
 8017dba:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8017dbe:	4325      	orrs	r5, r4
 8017dc0:	8005      	strh	r5, [r0, #0]
 8017dc2:	e7bd      	b.n	8017d40 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8017dc4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8017dc6:	4418      	add	r0, r3
 8017dc8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017dca:	4499      	add	r9, r3
 8017dcc:	e795      	b.n	8017cfa <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 8017dce:	4b04      	ldr	r3, [pc, #16]	; (8017de0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8017dd0:	6818      	ldr	r0, [r3, #0]
 8017dd2:	6803      	ldr	r3, [r0, #0]
 8017dd4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017dd6:	4798      	blx	r3
 8017dd8:	e771      	b.n	8017cbe <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 8017dda:	bf00      	nop
 8017ddc:	200155ae 	.word	0x200155ae
 8017de0:	200155b4 	.word	0x200155b4

08017de4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 8017de4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017de8:	b087      	sub	sp, #28
 8017dea:	4680      	mov	r8, r0
 8017dec:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 8017df0:	460d      	mov	r5, r1
 8017df2:	4614      	mov	r4, r2
 8017df4:	2e00      	cmp	r6, #0
 8017df6:	f000 80b9 	beq.w	8017f6c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 8017dfa:	6810      	ldr	r0, [r2, #0]
 8017dfc:	6851      	ldr	r1, [r2, #4]
 8017dfe:	af02      	add	r7, sp, #8
 8017e00:	c703      	stmia	r7!, {r0, r1}
 8017e02:	6818      	ldr	r0, [r3, #0]
 8017e04:	6859      	ldr	r1, [r3, #4]
 8017e06:	af04      	add	r7, sp, #16
 8017e08:	c703      	stmia	r7!, {r0, r1}
 8017e0a:	a802      	add	r0, sp, #8
 8017e0c:	f7f8 ff8a 	bl	8010d24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017e10:	4621      	mov	r1, r4
 8017e12:	a804      	add	r0, sp, #16
 8017e14:	f7f8 ffae 	bl	8010d74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017e18:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8017e1c:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8017e20:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 8017e24:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 8017e28:	fb14 2103 	smlabb	r1, r4, r3, r2
 8017e2c:	eb08 0401 	add.w	r4, r8, r1
 8017e30:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8017e34:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8017e38:	440a      	add	r2, r1
 8017e3a:	f8ad 2010 	strh.w	r2, [sp, #16]
 8017e3e:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8017e42:	4413      	add	r3, r2
 8017e44:	f8ad 3012 	strh.w	r3, [sp, #18]
 8017e48:	4b4a      	ldr	r3, [pc, #296]	; (8017f74 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8017e4a:	6818      	ldr	r0, [r3, #0]
 8017e4c:	6803      	ldr	r3, [r0, #0]
 8017e4e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017e50:	4798      	blx	r3
 8017e52:	4b49      	ldr	r3, [pc, #292]	; (8017f78 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 8017e54:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 8017e58:	881a      	ldrh	r2, [r3, #0]
 8017e5a:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 8017e5e:	2eff      	cmp	r6, #255	; 0xff
 8017e60:	fb02 c101 	mla	r1, r2, r1, ip
 8017e64:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8017e68:	fb02 f207 	mul.w	r2, r2, r7
 8017e6c:	f105 0104 	add.w	r1, r5, #4
 8017e70:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 8017e74:	461d      	mov	r5, r3
 8017e76:	d05a      	beq.n	8017f2e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 8017e78:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 8017e7c:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8017e80:	b2b6      	uxth	r6, r6
 8017e82:	fa1f fe8e 	uxth.w	lr, lr
 8017e86:	9301      	str	r3, [sp, #4]
 8017e88:	4282      	cmp	r2, r0
 8017e8a:	d96a      	bls.n	8017f62 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8017e8c:	eb00 0b0a 	add.w	fp, r0, sl
 8017e90:	4583      	cmp	fp, r0
 8017e92:	d940      	bls.n	8017f16 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 8017e94:	f814 3b01 	ldrb.w	r3, [r4], #1
 8017e98:	8805      	ldrh	r5, [r0, #0]
 8017e9a:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8017e9e:	122f      	asrs	r7, r5, #8
 8017ea0:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8017ea4:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8017ea8:	fb17 f70e 	smulbb	r7, r7, lr
 8017eac:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8017eb0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8017eb4:	00ed      	lsls	r5, r5, #3
 8017eb6:	fb0c 7c06 	mla	ip, ip, r6, r7
 8017eba:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8017ebe:	10df      	asrs	r7, r3, #3
 8017ec0:	b2ed      	uxtb	r5, r5
 8017ec2:	00db      	lsls	r3, r3, #3
 8017ec4:	fa1f fc8c 	uxth.w	ip, ip
 8017ec8:	fb19 f90e 	smulbb	r9, r9, lr
 8017ecc:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8017ed0:	b2db      	uxtb	r3, r3
 8017ed2:	fb15 f50e 	smulbb	r5, r5, lr
 8017ed6:	fb07 9706 	mla	r7, r7, r6, r9
 8017eda:	fb03 5306 	mla	r3, r3, r6, r5
 8017ede:	f10c 0901 	add.w	r9, ip, #1
 8017ee2:	b29b      	uxth	r3, r3
 8017ee4:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8017ee8:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 8017eec:	f103 0c01 	add.w	ip, r3, #1
 8017ef0:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8017ef4:	b2bf      	uxth	r7, r7
 8017ef6:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8017efa:	ea4c 0c09 	orr.w	ip, ip, r9
 8017efe:	f107 0901 	add.w	r9, r7, #1
 8017f02:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 8017f06:	097f      	lsrs	r7, r7, #5
 8017f08:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8017f0c:	ea4c 0c07 	orr.w	ip, ip, r7
 8017f10:	f820 cb02 	strh.w	ip, [r0], #2
 8017f14:	e7bc      	b.n	8017e90 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 8017f16:	9b01      	ldr	r3, [sp, #4]
 8017f18:	881b      	ldrh	r3, [r3, #0]
 8017f1a:	eba3 0308 	sub.w	r3, r3, r8
 8017f1e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017f22:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8017f26:	eba3 0308 	sub.w	r3, r3, r8
 8017f2a:	441c      	add	r4, r3
 8017f2c:	e7ac      	b.n	8017e88 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 8017f2e:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8017f32:	4282      	cmp	r2, r0
 8017f34:	d915      	bls.n	8017f62 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8017f36:	eb00 060a 	add.w	r6, r0, sl
 8017f3a:	4286      	cmp	r6, r0
 8017f3c:	d906      	bls.n	8017f4c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 8017f3e:	f814 3b01 	ldrb.w	r3, [r4], #1
 8017f42:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8017f46:	f820 3b02 	strh.w	r3, [r0], #2
 8017f4a:	e7f6      	b.n	8017f3a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 8017f4c:	882b      	ldrh	r3, [r5, #0]
 8017f4e:	eba3 0308 	sub.w	r3, r3, r8
 8017f52:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017f56:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8017f5a:	eba3 0308 	sub.w	r3, r3, r8
 8017f5e:	441c      	add	r4, r3
 8017f60:	e7e7      	b.n	8017f32 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 8017f62:	4b04      	ldr	r3, [pc, #16]	; (8017f74 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8017f64:	6818      	ldr	r0, [r3, #0]
 8017f66:	6803      	ldr	r3, [r0, #0]
 8017f68:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017f6a:	4798      	blx	r3
 8017f6c:	b007      	add	sp, #28
 8017f6e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017f72:	bf00      	nop
 8017f74:	200155b4 	.word	0x200155b4
 8017f78:	200155ae 	.word	0x200155ae

08017f7c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 8017f7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017f80:	b091      	sub	sp, #68	; 0x44
 8017f82:	4680      	mov	r8, r0
 8017f84:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 8017f88:	460f      	mov	r7, r1
 8017f8a:	4614      	mov	r4, r2
 8017f8c:	2d00      	cmp	r5, #0
 8017f8e:	d051      	beq.n	8018034 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 8017f90:	6810      	ldr	r0, [r2, #0]
 8017f92:	6851      	ldr	r1, [r2, #4]
 8017f94:	f8df 9200 	ldr.w	r9, [pc, #512]	; 8018198 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 8017f98:	ae0c      	add	r6, sp, #48	; 0x30
 8017f9a:	c603      	stmia	r6!, {r0, r1}
 8017f9c:	6818      	ldr	r0, [r3, #0]
 8017f9e:	6859      	ldr	r1, [r3, #4]
 8017fa0:	ae0e      	add	r6, sp, #56	; 0x38
 8017fa2:	c603      	stmia	r6!, {r0, r1}
 8017fa4:	a80c      	add	r0, sp, #48	; 0x30
 8017fa6:	f7f8 febd 	bl	8010d24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017faa:	4621      	mov	r1, r4
 8017fac:	a80e      	add	r0, sp, #56	; 0x38
 8017fae:	f7f8 fee1 	bl	8010d74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017fb2:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 8017fb6:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8017fba:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8017fbe:	f8d9 0000 	ldr.w	r0, [r9]
 8017fc2:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 8017fc6:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 8017fca:	fb11 2103 	smlabb	r1, r1, r3, r2
 8017fce:	eb08 0401 	add.w	r4, r8, r1
 8017fd2:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 8017fd6:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 801819c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 8017fda:	440a      	add	r2, r1
 8017fdc:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 8017fe0:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 8017fe4:	4413      	add	r3, r2
 8017fe6:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 8017fea:	6803      	ldr	r3, [r0, #0]
 8017fec:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017fee:	4798      	blx	r3
 8017ff0:	f010 0f80 	tst.w	r0, #128	; 0x80
 8017ff4:	f8d9 0000 	ldr.w	r0, [r9]
 8017ff8:	d01f      	beq.n	801803a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 8017ffa:	2200      	movs	r2, #0
 8017ffc:	6801      	ldr	r1, [r0, #0]
 8017ffe:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8018002:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8018006:	220b      	movs	r2, #11
 8018008:	9207      	str	r2, [sp, #28]
 801800a:	f8b8 2000 	ldrh.w	r2, [r8]
 801800e:	9206      	str	r2, [sp, #24]
 8018010:	2201      	movs	r2, #1
 8018012:	e9cd 5204 	strd	r5, r2, [sp, #16]
 8018016:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 801801a:	9203      	str	r2, [sp, #12]
 801801c:	fa1f f28a 	uxth.w	r2, sl
 8018020:	9202      	str	r2, [sp, #8]
 8018022:	b2b6      	uxth	r6, r6
 8018024:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8018028:	9200      	str	r2, [sp, #0]
 801802a:	9601      	str	r6, [sp, #4]
 801802c:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 801802e:	463a      	mov	r2, r7
 8018030:	4621      	mov	r1, r4
 8018032:	47a8      	blx	r5
 8018034:	b011      	add	sp, #68	; 0x44
 8018036:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801803a:	6803      	ldr	r3, [r0, #0]
 801803c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801803e:	4798      	blx	r3
 8018040:	f8b8 2000 	ldrh.w	r2, [r8]
 8018044:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8018048:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 801804c:	2dff      	cmp	r5, #255	; 0xff
 801804e:	fb02 1303 	mla	r3, r2, r3, r1
 8018052:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018056:	ea4f 0946 	mov.w	r9, r6, lsl #1
 801805a:	fb0a fa02 	mul.w	sl, sl, r2
 801805e:	d062      	beq.n	8018126 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 8018060:	ea6f 0c05 	mvn.w	ip, r5
 8018064:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 8018068:	930a      	str	r3, [sp, #40]	; 0x28
 801806a:	b2ad      	uxth	r5, r5
 801806c:	fa5f fc8c 	uxtb.w	ip, ip
 8018070:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 8018074:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018076:	4298      	cmp	r0, r3
 8018078:	f080 8085 	bcs.w	8018186 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801807c:	eb00 0b09 	add.w	fp, r0, r9
 8018080:	4558      	cmp	r0, fp
 8018082:	d246      	bcs.n	8018112 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 8018084:	f814 eb01 	ldrb.w	lr, [r4], #1
 8018088:	2303      	movs	r3, #3
 801808a:	2204      	movs	r2, #4
 801808c:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 8018090:	eb07 0a0e 	add.w	sl, r7, lr
 8018094:	8803      	ldrh	r3, [r0, #0]
 8018096:	f89a 8002 	ldrb.w	r8, [sl, #2]
 801809a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801809e:	1219      	asrs	r1, r3, #8
 80180a0:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80180a4:	fb18 f805 	smulbb	r8, r8, r5
 80180a8:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 80180ac:	10da      	asrs	r2, r3, #3
 80180ae:	fb01 810c 	mla	r1, r1, ip, r8
 80180b2:	00db      	lsls	r3, r3, #3
 80180b4:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80180b8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80180bc:	b2db      	uxtb	r3, r3
 80180be:	fb18 f805 	smulbb	r8, r8, r5
 80180c2:	fb1e fe05 	smulbb	lr, lr, r5
 80180c6:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 80180ca:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 80180ce:	b289      	uxth	r1, r1
 80180d0:	fb02 820c 	mla	r2, r2, ip, r8
 80180d4:	fb03 e30c 	mla	r3, r3, ip, lr
 80180d8:	b292      	uxth	r2, r2
 80180da:	b29b      	uxth	r3, r3
 80180dc:	f101 0801 	add.w	r8, r1, #1
 80180e0:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 80180e4:	f103 0e01 	add.w	lr, r3, #1
 80180e8:	f102 0801 	add.w	r8, r2, #1
 80180ec:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 80180f0:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 80180f4:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 80180f8:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 80180fc:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8018100:	ea4e 0101 	orr.w	r1, lr, r1
 8018104:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8018108:	ea41 0108 	orr.w	r1, r1, r8
 801810c:	f820 1b02 	strh.w	r1, [r0], #2
 8018110:	e7b6      	b.n	8018080 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 8018112:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018114:	881b      	ldrh	r3, [r3, #0]
 8018116:	1b9b      	subs	r3, r3, r6
 8018118:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801811c:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8018120:	1b9b      	subs	r3, r3, r6
 8018122:	441c      	add	r4, r3
 8018124:	e7a6      	b.n	8018074 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 8018126:	491b      	ldr	r1, [pc, #108]	; (8018194 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 8018128:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 801812c:	2203      	movs	r2, #3
 801812e:	2504      	movs	r5, #4
 8018130:	4550      	cmp	r0, sl
 8018132:	d228      	bcs.n	8018186 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8018134:	eb00 0c09 	add.w	ip, r0, r9
 8018138:	4560      	cmp	r0, ip
 801813a:	4623      	mov	r3, r4
 801813c:	d219      	bcs.n	8018172 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 801813e:	f893 e000 	ldrb.w	lr, [r3]
 8018142:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 8018146:	eb07 0b0e 	add.w	fp, r7, lr
 801814a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801814e:	f89b 3002 	ldrb.w	r3, [fp, #2]
 8018152:	f89b b001 	ldrb.w	fp, [fp, #1]
 8018156:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 801815a:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 801815e:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8018162:	ea43 030b 	orr.w	r3, r3, fp
 8018166:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 801816a:	3401      	adds	r4, #1
 801816c:	f820 3b02 	strh.w	r3, [r0], #2
 8018170:	e7e2      	b.n	8018138 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 8018172:	f8b8 3000 	ldrh.w	r3, [r8]
 8018176:	1b9b      	subs	r3, r3, r6
 8018178:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801817c:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8018180:	1b9b      	subs	r3, r3, r6
 8018182:	441c      	add	r4, r3
 8018184:	e7d4      	b.n	8018130 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 8018186:	4b04      	ldr	r3, [pc, #16]	; (8018198 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 8018188:	6818      	ldr	r0, [r3, #0]
 801818a:	6803      	ldr	r3, [r0, #0]
 801818c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801818e:	4798      	blx	r3
 8018190:	e750      	b.n	8018034 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 8018192:	bf00      	nop
 8018194:	fffff800 	.word	0xfffff800
 8018198:	200155b4 	.word	0x200155b4
 801819c:	200155ae 	.word	0x200155ae

080181a0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 80181a0:	b430      	push	{r4, r5}
 80181a2:	780d      	ldrb	r5, [r1, #0]
 80181a4:	f89d 4008 	ldrb.w	r4, [sp, #8]
 80181a8:	2d01      	cmp	r5, #1
 80181aa:	d00a      	beq.n	80181c2 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x22>
 80181ac:	d305      	bcc.n	80181ba <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1a>
 80181ae:	2d02      	cmp	r5, #2
 80181b0:	d10b      	bne.n	80181ca <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x2a>
 80181b2:	9402      	str	r4, [sp, #8]
 80181b4:	bc30      	pop	{r4, r5}
 80181b6:	f7ff be15 	b.w	8017de4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 80181ba:	9402      	str	r4, [sp, #8]
 80181bc:	bc30      	pop	{r4, r5}
 80181be:	f7ff bd2b 	b.w	8017c18 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 80181c2:	9402      	str	r4, [sp, #8]
 80181c4:	bc30      	pop	{r4, r5}
 80181c6:	f7ff bed9 	b.w	8017f7c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 80181ca:	bc30      	pop	{r4, r5}
 80181cc:	4770      	bx	lr
	...

080181d0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 80181d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80181d4:	4604      	mov	r4, r0
 80181d6:	b087      	sub	sp, #28
 80181d8:	6810      	ldr	r0, [r2, #0]
 80181da:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 80181de:	f8df 9238 	ldr.w	r9, [pc, #568]	; 8018418 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 80181e2:	460e      	mov	r6, r1
 80181e4:	6851      	ldr	r1, [r2, #4]
 80181e6:	ad02      	add	r5, sp, #8
 80181e8:	c503      	stmia	r5!, {r0, r1}
 80181ea:	6818      	ldr	r0, [r3, #0]
 80181ec:	6859      	ldr	r1, [r3, #4]
 80181ee:	ad04      	add	r5, sp, #16
 80181f0:	4617      	mov	r7, r2
 80181f2:	c503      	stmia	r5!, {r0, r1}
 80181f4:	a802      	add	r0, sp, #8
 80181f6:	f7f8 fd95 	bl	8010d24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80181fa:	4639      	mov	r1, r7
 80181fc:	a804      	add	r0, sp, #16
 80181fe:	f7f8 fdb9 	bl	8010d74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8018202:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8018206:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801820a:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 801820e:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8018212:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 8018216:	fb11 2103 	smlabb	r1, r1, r3, r2
 801821a:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801821e:	440e      	add	r6, r1
 8018220:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8018224:	440a      	add	r2, r1
 8018226:	f8ad 2010 	strh.w	r2, [sp, #16]
 801822a:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801822e:	4413      	add	r3, r2
 8018230:	f8ad 3012 	strh.w	r3, [sp, #18]
 8018234:	4b77      	ldr	r3, [pc, #476]	; (8018414 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 8018236:	6818      	ldr	r0, [r3, #0]
 8018238:	6803      	ldr	r3, [r0, #0]
 801823a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801823c:	4798      	blx	r3
 801823e:	f8b9 b000 	ldrh.w	fp, [r9]
 8018242:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8018246:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801824a:	fb0b 2303 	mla	r3, fp, r3, r2
 801824e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018252:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8018256:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801825a:	fb05 f50b 	mul.w	r5, r5, fp
 801825e:	9300      	str	r3, [sp, #0]
 8018260:	d069      	beq.n	8018336 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 8018262:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 8018266:	4558      	cmp	r0, fp
 8018268:	f080 80cc 	bcs.w	8018404 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801826c:	9b00      	ldr	r3, [sp, #0]
 801826e:	18c3      	adds	r3, r0, r3
 8018270:	9301      	str	r3, [sp, #4]
 8018272:	4631      	mov	r1, r6
 8018274:	9b01      	ldr	r3, [sp, #4]
 8018276:	4298      	cmp	r0, r3
 8018278:	d24f      	bcs.n	801831a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 801827a:	f811 2b01 	ldrb.w	r2, [r1], #1
 801827e:	2a00      	cmp	r2, #0
 8018280:	d048      	beq.n	8018314 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8018282:	fb0a f202 	mul.w	r2, sl, r2
 8018286:	1c53      	adds	r3, r2, #1
 8018288:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801828c:	121b      	asrs	r3, r3, #8
 801828e:	d041      	beq.n	8018314 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8018290:	8802      	ldrh	r2, [r0, #0]
 8018292:	f8b4 c000 	ldrh.w	ip, [r4]
 8018296:	b29e      	uxth	r6, r3
 8018298:	1215      	asrs	r5, r2, #8
 801829a:	43db      	mvns	r3, r3
 801829c:	b2db      	uxtb	r3, r3
 801829e:	ea4f 272c 	mov.w	r7, ip, asr #8
 80182a2:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80182a6:	fb15 f503 	smulbb	r5, r5, r3
 80182aa:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 80182ae:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80182b2:	00d2      	lsls	r2, r2, #3
 80182b4:	fb07 5706 	mla	r7, r7, r6, r5
 80182b8:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 80182bc:	ea4f 05ec 	mov.w	r5, ip, asr #3
 80182c0:	b2d2      	uxtb	r2, r2
 80182c2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80182c6:	b2bf      	uxth	r7, r7
 80182c8:	fb1e fe03 	smulbb	lr, lr, r3
 80182cc:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80182d0:	fa5f fc8c 	uxtb.w	ip, ip
 80182d4:	fb12 f203 	smulbb	r2, r2, r3
 80182d8:	fb05 e506 	mla	r5, r5, r6, lr
 80182dc:	fb0c 2c06 	mla	ip, ip, r6, r2
 80182e0:	f107 0e01 	add.w	lr, r7, #1
 80182e4:	fa1f fc8c 	uxth.w	ip, ip
 80182e8:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 80182ec:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 80182f0:	f10c 0701 	add.w	r7, ip, #1
 80182f4:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80182f8:	b2ad      	uxth	r5, r5
 80182fa:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80182fe:	ea47 070e 	orr.w	r7, r7, lr
 8018302:	f105 0e01 	add.w	lr, r5, #1
 8018306:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801830a:	096d      	lsrs	r5, r5, #5
 801830c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8018310:	432f      	orrs	r7, r5
 8018312:	8007      	strh	r7, [r0, #0]
 8018314:	3002      	adds	r0, #2
 8018316:	3402      	adds	r4, #2
 8018318:	e7ac      	b.n	8018274 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 801831a:	f8b9 3000 	ldrh.w	r3, [r9]
 801831e:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8018322:	eba3 0308 	sub.w	r3, r3, r8
 8018326:	eba6 0608 	sub.w	r6, r6, r8
 801832a:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801832e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018332:	440e      	add	r6, r1
 8018334:	e797      	b.n	8018266 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 8018336:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801833a:	42a8      	cmp	r0, r5
 801833c:	d262      	bcs.n	8018404 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801833e:	9b00      	ldr	r3, [sp, #0]
 8018340:	4631      	mov	r1, r6
 8018342:	eb00 0b03 	add.w	fp, r0, r3
 8018346:	4558      	cmp	r0, fp
 8018348:	d24e      	bcs.n	80183e8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 801834a:	f811 3b01 	ldrb.w	r3, [r1], #1
 801834e:	b12b      	cbz	r3, 801835c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8018350:	2bff      	cmp	r3, #255	; 0xff
 8018352:	f8b4 e000 	ldrh.w	lr, [r4]
 8018356:	d104      	bne.n	8018362 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 8018358:	f8a0 e000 	strh.w	lr, [r0]
 801835c:	3002      	adds	r0, #2
 801835e:	3402      	adds	r4, #2
 8018360:	e7f1      	b.n	8018346 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 8018362:	8802      	ldrh	r2, [r0, #0]
 8018364:	b29f      	uxth	r7, r3
 8018366:	1216      	asrs	r6, r2, #8
 8018368:	43db      	mvns	r3, r3
 801836a:	b2db      	uxtb	r3, r3
 801836c:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8018370:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8018374:	fb16 f603 	smulbb	r6, r6, r3
 8018378:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801837c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8018380:	00d2      	lsls	r2, r2, #3
 8018382:	fb0c 6c07 	mla	ip, ip, r7, r6
 8018386:	b2d2      	uxtb	r2, r2
 8018388:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801838c:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8018390:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8018394:	fb1a fa03 	smulbb	sl, sl, r3
 8018398:	fa1f fc8c 	uxth.w	ip, ip
 801839c:	fb12 f303 	smulbb	r3, r2, r3
 80183a0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80183a4:	fa5f fe8e 	uxtb.w	lr, lr
 80183a8:	fb06 a607 	mla	r6, r6, r7, sl
 80183ac:	f10c 0201 	add.w	r2, ip, #1
 80183b0:	fb0e 3307 	mla	r3, lr, r7, r3
 80183b4:	b2b6      	uxth	r6, r6
 80183b6:	b29b      	uxth	r3, r3
 80183b8:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 80183bc:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 80183c0:	f106 0a01 	add.w	sl, r6, #1
 80183c4:	f103 0c01 	add.w	ip, r3, #1
 80183c8:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 80183cc:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 80183d0:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80183d4:	0976      	lsrs	r6, r6, #5
 80183d6:	ea4c 0c02 	orr.w	ip, ip, r2
 80183da:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80183de:	ea4c 0c06 	orr.w	ip, ip, r6
 80183e2:	f8a0 c000 	strh.w	ip, [r0]
 80183e6:	e7b9      	b.n	801835c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 80183e8:	f8b9 3000 	ldrh.w	r3, [r9]
 80183ec:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 80183f0:	eba3 0308 	sub.w	r3, r3, r8
 80183f4:	eba6 0608 	sub.w	r6, r6, r8
 80183f8:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 80183fc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018400:	440e      	add	r6, r1
 8018402:	e79a      	b.n	801833a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 8018404:	4b03      	ldr	r3, [pc, #12]	; (8018414 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 8018406:	6818      	ldr	r0, [r3, #0]
 8018408:	6803      	ldr	r3, [r0, #0]
 801840a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801840c:	4798      	blx	r3
 801840e:	b007      	add	sp, #28
 8018410:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018414:	200155b4 	.word	0x200155b4
 8018418:	200155ae 	.word	0x200155ae

0801841c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 801841c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018420:	b089      	sub	sp, #36	; 0x24
 8018422:	4682      	mov	sl, r0
 8018424:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 8018428:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801842a:	460f      	mov	r7, r1
 801842c:	4691      	mov	r9, r2
 801842e:	4698      	mov	r8, r3
 8018430:	2e00      	cmp	r6, #0
 8018432:	d036      	beq.n	80184a2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8018434:	4608      	mov	r0, r1
 8018436:	f7fc f863 	bl	8014500 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801843a:	4605      	mov	r5, r0
 801843c:	4638      	mov	r0, r7
 801843e:	f7fc f893 	bl	8014568 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8018442:	f8ad 000e 	strh.w	r0, [sp, #14]
 8018446:	4638      	mov	r0, r7
 8018448:	f8ad 9008 	strh.w	r9, [sp, #8]
 801844c:	f8ad 500c 	strh.w	r5, [sp, #12]
 8018450:	f8ad 800a 	strh.w	r8, [sp, #10]
 8018454:	f7fc f940 	bl	80146d8 <_ZNK8touchgfx6Bitmap7getDataEv>
 8018458:	4605      	mov	r5, r0
 801845a:	4638      	mov	r0, r7
 801845c:	f7fc f96c 	bl	8014738 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8018460:	4681      	mov	r9, r0
 8018462:	4638      	mov	r0, r7
 8018464:	f7fc f9bc 	bl	80147e0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8018468:	280b      	cmp	r0, #11
 801846a:	d81a      	bhi.n	80184a2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 801846c:	e8df f000 	tbb	[pc, r0]
 8018470:	1906aebd 	.word	0x1906aebd
 8018474:	19191919 	.word	0x19191919
 8018478:	b5191919 	.word	0xb5191919
 801847c:	4bb0      	ldr	r3, [pc, #704]	; (8018740 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 801847e:	6818      	ldr	r0, [r3, #0]
 8018480:	6803      	ldr	r3, [r0, #0]
 8018482:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8018484:	4798      	blx	r3
 8018486:	2eff      	cmp	r6, #255	; 0xff
 8018488:	d121      	bne.n	80184ce <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb2>
 801848a:	0683      	lsls	r3, r0, #26
 801848c:	d41f      	bmi.n	80184ce <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb2>
 801848e:	4638      	mov	r0, r7
 8018490:	f7fc f8ea 	bl	8014668 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8018494:	b940      	cbnz	r0, 80184a8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x8c>
 8018496:	4623      	mov	r3, r4
 8018498:	aa02      	add	r2, sp, #8
 801849a:	4629      	mov	r1, r5
 801849c:	4650      	mov	r0, sl
 801849e:	f7ff fa2f 	bl	8017900 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 80184a2:	b009      	add	sp, #36	; 0x24
 80184a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80184a8:	f10d 0818 	add.w	r8, sp, #24
 80184ac:	4639      	mov	r1, r7
 80184ae:	4640      	mov	r0, r8
 80184b0:	f7fc f88e 	bl	80145d0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80184b4:	e898 0003 	ldmia.w	r8, {r0, r1}
 80184b8:	af04      	add	r7, sp, #16
 80184ba:	e887 0003 	stmia.w	r7, {r0, r1}
 80184be:	4638      	mov	r0, r7
 80184c0:	4621      	mov	r1, r4
 80184c2:	f7f2 fc5b 	bl	800ad7c <_ZN8touchgfx4RectaNERKS0_>
 80184c6:	4638      	mov	r0, r7
 80184c8:	f7f2 fc9b 	bl	800ae02 <_ZNK8touchgfx4Rect7isEmptyEv>
 80184cc:	b130      	cbz	r0, 80184dc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc0>
 80184ce:	4633      	mov	r3, r6
 80184d0:	4622      	mov	r2, r4
 80184d2:	a902      	add	r1, sp, #8
 80184d4:	4628      	mov	r0, r5
 80184d6:	f7ff f92d 	bl	8017734 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80184da:	e7e2      	b.n	80184a2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 80184dc:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80184e0:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80184e4:	4293      	cmp	r3, r2
 80184e6:	dd12      	ble.n	801850e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf2>
 80184e8:	1a9b      	subs	r3, r3, r2
 80184ea:	f9b4 0000 	ldrsh.w	r0, [r4]
 80184ee:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80184f2:	f8ad 0018 	strh.w	r0, [sp, #24]
 80184f6:	f8ad 201a 	strh.w	r2, [sp, #26]
 80184fa:	f8ad 101c 	strh.w	r1, [sp, #28]
 80184fe:	f8ad 301e 	strh.w	r3, [sp, #30]
 8018502:	4642      	mov	r2, r8
 8018504:	4633      	mov	r3, r6
 8018506:	a902      	add	r1, sp, #8
 8018508:	4628      	mov	r0, r5
 801850a:	f7ff f913 	bl	8017734 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801850e:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8018512:	f9b4 2000 	ldrsh.w	r2, [r4]
 8018516:	4293      	cmp	r3, r2
 8018518:	dd12      	ble.n	8018540 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x124>
 801851a:	1a9b      	subs	r3, r3, r2
 801851c:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8018520:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8018524:	f8ad 2018 	strh.w	r2, [sp, #24]
 8018528:	f8ad 001a 	strh.w	r0, [sp, #26]
 801852c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8018530:	f8ad 101e 	strh.w	r1, [sp, #30]
 8018534:	23ff      	movs	r3, #255	; 0xff
 8018536:	4642      	mov	r2, r8
 8018538:	a902      	add	r1, sp, #8
 801853a:	4628      	mov	r0, r5
 801853c:	f7ff f8fa 	bl	8017734 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8018540:	463b      	mov	r3, r7
 8018542:	aa02      	add	r2, sp, #8
 8018544:	4629      	mov	r1, r5
 8018546:	4650      	mov	r0, sl
 8018548:	f7ff f9da 	bl	8017900 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801854c:	88a2      	ldrh	r2, [r4, #4]
 801854e:	8823      	ldrh	r3, [r4, #0]
 8018550:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8018554:	4413      	add	r3, r2
 8018556:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801855a:	440a      	add	r2, r1
 801855c:	b29b      	uxth	r3, r3
 801855e:	b292      	uxth	r2, r2
 8018560:	b211      	sxth	r1, r2
 8018562:	b218      	sxth	r0, r3
 8018564:	4288      	cmp	r0, r1
 8018566:	dd12      	ble.n	801858e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x172>
 8018568:	1a9b      	subs	r3, r3, r2
 801856a:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801856e:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 8018572:	f8ad 1018 	strh.w	r1, [sp, #24]
 8018576:	f8ad 301c 	strh.w	r3, [sp, #28]
 801857a:	f8ad 001e 	strh.w	r0, [sp, #30]
 801857e:	23ff      	movs	r3, #255	; 0xff
 8018580:	4642      	mov	r2, r8
 8018582:	a902      	add	r1, sp, #8
 8018584:	4628      	mov	r0, r5
 8018586:	f8ad 601a 	strh.w	r6, [sp, #26]
 801858a:	f7ff f8d3 	bl	8017734 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801858e:	88e2      	ldrh	r2, [r4, #6]
 8018590:	8863      	ldrh	r3, [r4, #2]
 8018592:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8018596:	4413      	add	r3, r2
 8018598:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801859c:	440a      	add	r2, r1
 801859e:	b29b      	uxth	r3, r3
 80185a0:	b292      	uxth	r2, r2
 80185a2:	b211      	sxth	r1, r2
 80185a4:	b218      	sxth	r0, r3
 80185a6:	4288      	cmp	r0, r1
 80185a8:	f77f af7b 	ble.w	80184a2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 80185ac:	1a9b      	subs	r3, r3, r2
 80185ae:	f9b4 6000 	ldrsh.w	r6, [r4]
 80185b2:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80185b6:	f8ad 301e 	strh.w	r3, [sp, #30]
 80185ba:	f8ad 6018 	strh.w	r6, [sp, #24]
 80185be:	f8ad 101a 	strh.w	r1, [sp, #26]
 80185c2:	f8ad 001c 	strh.w	r0, [sp, #28]
 80185c6:	23ff      	movs	r3, #255	; 0xff
 80185c8:	4642      	mov	r2, r8
 80185ca:	e782      	b.n	80184d2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb6>
 80185cc:	4633      	mov	r3, r6
 80185ce:	4622      	mov	r2, r4
 80185d0:	a902      	add	r1, sp, #8
 80185d2:	4628      	mov	r0, r5
 80185d4:	f7ff fa04 	bl	80179e0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 80185d8:	e763      	b.n	80184a2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 80185da:	9600      	str	r6, [sp, #0]
 80185dc:	4623      	mov	r3, r4
 80185de:	aa02      	add	r2, sp, #8
 80185e0:	4649      	mov	r1, r9
 80185e2:	4628      	mov	r0, r5
 80185e4:	f7ff fddc 	bl	80181a0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 80185e8:	e75b      	b.n	80184a2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 80185ea:	4638      	mov	r0, r7
 80185ec:	f7fc f83c 	bl	8014668 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 80185f0:	b950      	cbnz	r0, 8018608 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ec>
 80185f2:	e9cd 6000 	strd	r6, r0, [sp]
 80185f6:	f8da 3000 	ldr.w	r3, [sl]
 80185fa:	aa02      	add	r2, sp, #8
 80185fc:	68de      	ldr	r6, [r3, #12]
 80185fe:	4629      	mov	r1, r5
 8018600:	4623      	mov	r3, r4
 8018602:	4650      	mov	r0, sl
 8018604:	47b0      	blx	r6
 8018606:	e74c      	b.n	80184a2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8018608:	f10d 0818 	add.w	r8, sp, #24
 801860c:	4639      	mov	r1, r7
 801860e:	4640      	mov	r0, r8
 8018610:	f7fb ffde 	bl	80145d0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8018614:	e898 0003 	ldmia.w	r8, {r0, r1}
 8018618:	af04      	add	r7, sp, #16
 801861a:	e887 0003 	stmia.w	r7, {r0, r1}
 801861e:	4638      	mov	r0, r7
 8018620:	4621      	mov	r1, r4
 8018622:	f7f2 fbab 	bl	800ad7c <_ZN8touchgfx4RectaNERKS0_>
 8018626:	4638      	mov	r0, r7
 8018628:	f7f2 fbeb 	bl	800ae02 <_ZNK8touchgfx4Rect7isEmptyEv>
 801862c:	b138      	cbz	r0, 801863e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x222>
 801862e:	9600      	str	r6, [sp, #0]
 8018630:	4623      	mov	r3, r4
 8018632:	aa02      	add	r2, sp, #8
 8018634:	4649      	mov	r1, r9
 8018636:	4628      	mov	r0, r5
 8018638:	f7ff fdca 	bl	80181d0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801863c:	e731      	b.n	80184a2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 801863e:	e9cd 6000 	strd	r6, r0, [sp]
 8018642:	f8da 3000 	ldr.w	r3, [sl]
 8018646:	aa02      	add	r2, sp, #8
 8018648:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801864c:	4629      	mov	r1, r5
 801864e:	463b      	mov	r3, r7
 8018650:	4650      	mov	r0, sl
 8018652:	47d8      	blx	fp
 8018654:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8018658:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801865c:	4293      	cmp	r3, r2
 801865e:	dd13      	ble.n	8018688 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26c>
 8018660:	f9b4 0000 	ldrsh.w	r0, [r4]
 8018664:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8018668:	f8ad 0018 	strh.w	r0, [sp, #24]
 801866c:	1a9b      	subs	r3, r3, r2
 801866e:	f8ad 201a 	strh.w	r2, [sp, #26]
 8018672:	f8ad 101c 	strh.w	r1, [sp, #28]
 8018676:	f8ad 301e 	strh.w	r3, [sp, #30]
 801867a:	9600      	str	r6, [sp, #0]
 801867c:	4643      	mov	r3, r8
 801867e:	aa02      	add	r2, sp, #8
 8018680:	4649      	mov	r1, r9
 8018682:	4628      	mov	r0, r5
 8018684:	f7ff fda4 	bl	80181d0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8018688:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801868c:	f9b4 2000 	ldrsh.w	r2, [r4]
 8018690:	4293      	cmp	r3, r2
 8018692:	dd13      	ble.n	80186bc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a0>
 8018694:	1a9b      	subs	r3, r3, r2
 8018696:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801869a:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801869e:	f8ad 2018 	strh.w	r2, [sp, #24]
 80186a2:	f8ad 001a 	strh.w	r0, [sp, #26]
 80186a6:	f8ad 301c 	strh.w	r3, [sp, #28]
 80186aa:	f8ad 101e 	strh.w	r1, [sp, #30]
 80186ae:	9600      	str	r6, [sp, #0]
 80186b0:	4643      	mov	r3, r8
 80186b2:	aa02      	add	r2, sp, #8
 80186b4:	4649      	mov	r1, r9
 80186b6:	4628      	mov	r0, r5
 80186b8:	f7ff fd8a 	bl	80181d0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80186bc:	88a2      	ldrh	r2, [r4, #4]
 80186be:	8823      	ldrh	r3, [r4, #0]
 80186c0:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 80186c4:	4413      	add	r3, r2
 80186c6:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80186ca:	440a      	add	r2, r1
 80186cc:	b29b      	uxth	r3, r3
 80186ce:	b292      	uxth	r2, r2
 80186d0:	b211      	sxth	r1, r2
 80186d2:	b218      	sxth	r0, r3
 80186d4:	4288      	cmp	r0, r1
 80186d6:	dd13      	ble.n	8018700 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e4>
 80186d8:	1a9b      	subs	r3, r3, r2
 80186da:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 80186de:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 80186e2:	f8ad 1018 	strh.w	r1, [sp, #24]
 80186e6:	f8ad 301c 	strh.w	r3, [sp, #28]
 80186ea:	f8ad 001e 	strh.w	r0, [sp, #30]
 80186ee:	9600      	str	r6, [sp, #0]
 80186f0:	4643      	mov	r3, r8
 80186f2:	aa02      	add	r2, sp, #8
 80186f4:	4649      	mov	r1, r9
 80186f6:	4628      	mov	r0, r5
 80186f8:	f8ad 701a 	strh.w	r7, [sp, #26]
 80186fc:	f7ff fd68 	bl	80181d0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8018700:	88e2      	ldrh	r2, [r4, #6]
 8018702:	8863      	ldrh	r3, [r4, #2]
 8018704:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8018708:	4413      	add	r3, r2
 801870a:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801870e:	440a      	add	r2, r1
 8018710:	b29b      	uxth	r3, r3
 8018712:	b292      	uxth	r2, r2
 8018714:	b211      	sxth	r1, r2
 8018716:	b218      	sxth	r0, r3
 8018718:	4288      	cmp	r0, r1
 801871a:	f77f aec2 	ble.w	80184a2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 801871e:	f9b4 7000 	ldrsh.w	r7, [r4]
 8018722:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8018726:	f8ad 7018 	strh.w	r7, [sp, #24]
 801872a:	1a9b      	subs	r3, r3, r2
 801872c:	f8ad 301e 	strh.w	r3, [sp, #30]
 8018730:	f8ad 101a 	strh.w	r1, [sp, #26]
 8018734:	f8ad 001c 	strh.w	r0, [sp, #28]
 8018738:	9600      	str	r6, [sp, #0]
 801873a:	4643      	mov	r3, r8
 801873c:	e779      	b.n	8018632 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x216>
 801873e:	bf00      	nop
 8018740:	200155b4 	.word	0x200155b4

08018744 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 8018744:	b180      	cbz	r0, 8018768 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 8018746:	2903      	cmp	r1, #3
 8018748:	d81c      	bhi.n	8018784 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801874a:	e8df f001 	tbb	[pc, r1]
 801874e:	1d02      	.short	0x1d02
 8018750:	1f08      	.short	0x1f08
 8018752:	4b10      	ldr	r3, [pc, #64]	; (8018794 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8018754:	8818      	ldrh	r0, [r3, #0]
 8018756:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801875a:	4240      	negs	r0, r0
 801875c:	4770      	bx	lr
 801875e:	4b0d      	ldr	r3, [pc, #52]	; (8018794 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8018760:	8818      	ldrh	r0, [r3, #0]
 8018762:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8018766:	4770      	bx	lr
 8018768:	2903      	cmp	r1, #3
 801876a:	d80b      	bhi.n	8018784 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801876c:	a301      	add	r3, pc, #4	; (adr r3, 8018774 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 801876e:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 8018772:	bf00      	nop
 8018774:	08018789 	.word	0x08018789
 8018778:	0801875f 	.word	0x0801875f
 801877c:	0801878d 	.word	0x0801878d
 8018780:	08018753 	.word	0x08018753
 8018784:	2000      	movs	r0, #0
 8018786:	4770      	bx	lr
 8018788:	2001      	movs	r0, #1
 801878a:	4770      	bx	lr
 801878c:	f04f 30ff 	mov.w	r0, #4294967295
 8018790:	4770      	bx	lr
 8018792:	bf00      	nop
 8018794:	200155ae 	.word	0x200155ae

08018798 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 8018798:	b180      	cbz	r0, 80187bc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 801879a:	2903      	cmp	r1, #3
 801879c:	d81c      	bhi.n	80187d8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801879e:	e8df f001 	tbb	[pc, r1]
 80187a2:	021d      	.short	0x021d
 80187a4:	071f      	.short	0x071f
 80187a6:	4b10      	ldr	r3, [pc, #64]	; (80187e8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 80187a8:	8818      	ldrh	r0, [r3, #0]
 80187aa:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80187ae:	4770      	bx	lr
 80187b0:	4b0d      	ldr	r3, [pc, #52]	; (80187e8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 80187b2:	8818      	ldrh	r0, [r3, #0]
 80187b4:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80187b8:	4240      	negs	r0, r0
 80187ba:	4770      	bx	lr
 80187bc:	2903      	cmp	r1, #3
 80187be:	d80b      	bhi.n	80187d8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 80187c0:	a301      	add	r3, pc, #4	; (adr r3, 80187c8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 80187c2:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 80187c6:	bf00      	nop
 80187c8:	080187a7 	.word	0x080187a7
 80187cc:	080187e1 	.word	0x080187e1
 80187d0:	080187b1 	.word	0x080187b1
 80187d4:	080187dd 	.word	0x080187dd
 80187d8:	2000      	movs	r0, #0
 80187da:	4770      	bx	lr
 80187dc:	2001      	movs	r0, #1
 80187de:	4770      	bx	lr
 80187e0:	f04f 30ff 	mov.w	r0, #4294967295
 80187e4:	4770      	bx	lr
 80187e6:	bf00      	nop
 80187e8:	200155ae 	.word	0x200155ae

080187ec <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 80187ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80187f0:	b099      	sub	sp, #100	; 0x64
 80187f2:	910b      	str	r1, [sp, #44]	; 0x2c
 80187f4:	a914      	add	r1, sp, #80	; 0x50
 80187f6:	e881 000c 	stmia.w	r1, {r2, r3}
 80187fa:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 80187fe:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 8018802:	f891 900d 	ldrb.w	r9, [r1, #13]
 8018806:	9309      	str	r3, [sp, #36]	; 0x24
 8018808:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801880c:	9310      	str	r3, [sp, #64]	; 0x40
 801880e:	ea4f 1749 	mov.w	r7, r9, lsl #5
 8018812:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 8018816:	930c      	str	r3, [sp, #48]	; 0x30
 8018818:	f407 7380 	and.w	r3, r7, #256	; 0x100
 801881c:	798f      	ldrb	r7, [r1, #6]
 801881e:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
 8018822:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 8018826:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
 801882a:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 801882e:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 8018832:	431f      	orrs	r7, r3
 8018834:	f000 8195 	beq.w	8018b62 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8018838:	ea4f 1909 	mov.w	r9, r9, lsl #4
 801883c:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8018840:	f891 9007 	ldrb.w	r9, [r1, #7]
 8018844:	ea59 0903 	orrs.w	r9, r9, r3
 8018848:	f000 818b 	beq.w	8018b62 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801884c:	f991 3009 	ldrsb.w	r3, [r1, #9]
 8018850:	b29b      	uxth	r3, r3
 8018852:	2d00      	cmp	r5, #0
 8018854:	f000 812e 	beq.w	8018ab4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 8018858:	1aed      	subs	r5, r5, r3
 801885a:	b2ad      	uxth	r5, r5
 801885c:	042b      	lsls	r3, r5, #16
 801885e:	d502      	bpl.n	8018866 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 8018860:	1b64      	subs	r4, r4, r5
 8018862:	b224      	sxth	r4, r4
 8018864:	2500      	movs	r5, #0
 8018866:	f9b2 1000 	ldrsh.w	r1, [r2]
 801886a:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 801886e:	428c      	cmp	r4, r1
 8018870:	b28b      	uxth	r3, r1
 8018872:	bfbf      	itttt	lt
 8018874:	18ed      	addlt	r5, r5, r3
 8018876:	1b2c      	sublt	r4, r5, r4
 8018878:	b2a5      	uxthlt	r5, r4
 801887a:	460c      	movlt	r4, r1
 801887c:	8891      	ldrh	r1, [r2, #4]
 801887e:	440b      	add	r3, r1
 8018880:	b21b      	sxth	r3, r3
 8018882:	930f      	str	r3, [sp, #60]	; 0x3c
 8018884:	88d3      	ldrh	r3, [r2, #6]
 8018886:	8852      	ldrh	r2, [r2, #2]
 8018888:	4413      	add	r3, r2
 801888a:	b21b      	sxth	r3, r3
 801888c:	930d      	str	r3, [sp, #52]	; 0x34
 801888e:	4bbe      	ldr	r3, [pc, #760]	; (8018b88 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 8018890:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8018892:	f893 b000 	ldrb.w	fp, [r3]
 8018896:	f10b 3cff 	add.w	ip, fp, #4294967295
 801889a:	f1dc 0300 	rsbs	r3, ip, #0
 801889e:	eb43 030c 	adc.w	r3, r3, ip
 80188a2:	930e      	str	r3, [sp, #56]	; 0x38
 80188a4:	4621      	mov	r1, r4
 80188a6:	4653      	mov	r3, sl
 80188a8:	a814      	add	r0, sp, #80	; 0x50
 80188aa:	f7f8 f8b5 	bl	8010a18 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 80188ae:	4621      	mov	r1, r4
 80188b0:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 80188b4:	4653      	mov	r3, sl
 80188b6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80188b8:	a814      	add	r0, sp, #80	; 0x50
 80188ba:	f7f8 f8ca 	bl	8010a52 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 80188be:	a918      	add	r1, sp, #96	; 0x60
 80188c0:	f821 0d02 	strh.w	r0, [r1, #-2]!
 80188c4:	a817      	add	r0, sp, #92	; 0x5c
 80188c6:	f7f8 f9eb 	bl	8010ca0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 80188ca:	f1ba 0f00 	cmp.w	sl, #0
 80188ce:	f040 80f4 	bne.w	8018aba <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 80188d2:	f1bb 0f01 	cmp.w	fp, #1
 80188d6:	f040 80f8 	bne.w	8018aca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 80188da:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80188dc:	2b00      	cmp	r3, #0
 80188de:	f040 8145 	bne.w	8018b6c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 80188e2:	b2ba      	uxth	r2, r7
 80188e4:	b905      	cbnz	r5, 80188e8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 80188e6:	b16e      	cbz	r6, 8018904 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 80188e8:	fb06 5302 	mla	r3, r6, r2, r5
 80188ec:	9828      	ldr	r0, [sp, #160]	; 0xa0
 80188ee:	fb08 f303 	mul.w	r3, r8, r3
 80188f2:	4631      	mov	r1, r6
 80188f4:	f003 0607 	and.w	r6, r3, #7
 80188f8:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 80188fc:	9328      	str	r3, [sp, #160]	; 0xa0
 80188fe:	eba9 0301 	sub.w	r3, r9, r1
 8018902:	930a      	str	r3, [sp, #40]	; 0x28
 8018904:	4651      	mov	r1, sl
 8018906:	980e      	ldr	r0, [sp, #56]	; 0x38
 8018908:	f7ff ff1c 	bl	8018744 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 801890c:	4681      	mov	r9, r0
 801890e:	980e      	ldr	r0, [sp, #56]	; 0x38
 8018910:	f7ff ff42 	bl	8018798 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 8018914:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018916:	9909      	ldr	r1, [sp, #36]	; 0x24
 8018918:	eba3 0a01 	sub.w	sl, r3, r1
 801891c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801891e:	459a      	cmp	sl, r3
 8018920:	bfa8      	it	ge
 8018922:	469a      	movge	sl, r3
 8018924:	f1ba 0f00 	cmp.w	sl, #0
 8018928:	4683      	mov	fp, r0
 801892a:	f340 811a 	ble.w	8018b62 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801892e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8018930:	1b64      	subs	r4, r4, r5
 8018932:	1b1c      	subs	r4, r3, r4
 8018934:	42bc      	cmp	r4, r7
 8018936:	bfd4      	ite	le
 8018938:	ebc5 0504 	rsble	r5, r5, r4
 801893c:	ebc5 0507 	rsbgt	r5, r5, r7
 8018940:	2d00      	cmp	r5, #0
 8018942:	f340 810e 	ble.w	8018b62 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8018946:	1b52      	subs	r2, r2, r5
 8018948:	fb08 f302 	mul.w	r3, r8, r2
 801894c:	930f      	str	r3, [sp, #60]	; 0x3c
 801894e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018950:	2b00      	cmp	r3, #0
 8018952:	f040 8116 	bne.w	8018b82 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 8018956:	4b8d      	ldr	r3, [pc, #564]	; (8018b8c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 8018958:	6818      	ldr	r0, [r3, #0]
 801895a:	6803      	ldr	r3, [r0, #0]
 801895c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801895e:	4798      	blx	r3
 8018960:	2301      	movs	r3, #1
 8018962:	fa03 f308 	lsl.w	r3, r3, r8
 8018966:	4a8a      	ldr	r2, [pc, #552]	; (8018b90 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 8018968:	3b01      	subs	r3, #1
 801896a:	b2db      	uxtb	r3, r3
 801896c:	8811      	ldrh	r1, [r2, #0]
 801896e:	930e      	str	r3, [sp, #56]	; 0x38
 8018970:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 8018974:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 8018978:	fb01 2303 	mla	r3, r1, r3, r2
 801897c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8018980:	930a      	str	r3, [sp, #40]	; 0x28
 8018982:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018984:	f3c3 4307 	ubfx	r3, r3, #16, #8
 8018988:	9313      	str	r3, [sp, #76]	; 0x4c
 801898a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801898c:	0a19      	lsrs	r1, r3, #8
 801898e:	b2cb      	uxtb	r3, r1
 8018990:	9312      	str	r3, [sp, #72]	; 0x48
 8018992:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018994:	b2db      	uxtb	r3, r3
 8018996:	9311      	str	r3, [sp, #68]	; 0x44
 8018998:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801899a:	095a      	lsrs	r2, r3, #5
 801899c:	4b7d      	ldr	r3, [pc, #500]	; (8018b94 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 801899e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80189a2:	400b      	ands	r3, r1
 80189a4:	4313      	orrs	r3, r2
 80189a6:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 80189a8:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80189ac:	4313      	orrs	r3, r2
 80189ae:	b29b      	uxth	r3, r3
 80189b0:	9310      	str	r3, [sp, #64]	; 0x40
 80189b2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80189b4:	781a      	ldrb	r2, [r3, #0]
 80189b6:	ea4f 0349 	mov.w	r3, r9, lsl #1
 80189ba:	4132      	asrs	r2, r6
 80189bc:	fb05 b919 	mls	r9, r5, r9, fp
 80189c0:	fb03 fb05 	mul.w	fp, r3, r5
 80189c4:	b2d2      	uxtb	r2, r2
 80189c6:	930d      	str	r3, [sp, #52]	; 0x34
 80189c8:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 80189cc:	f11a 3aff 	adds.w	sl, sl, #4294967295
 80189d0:	f0c0 80f5 	bcc.w	8018bbe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 80189d4:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 80189d8:	46ae      	mov	lr, r5
 80189da:	f11e 3eff 	adds.w	lr, lr, #4294967295
 80189de:	f0c0 80dd 	bcc.w	8018b9c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 80189e2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80189e4:	4013      	ands	r3, r2
 80189e6:	d055      	beq.n	8018a94 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 80189e8:	20ff      	movs	r0, #255	; 0xff
 80189ea:	990e      	ldr	r1, [sp, #56]	; 0x38
 80189ec:	fb90 f1f1 	sdiv	r1, r0, r1
 80189f0:	434b      	muls	r3, r1
 80189f2:	2bfe      	cmp	r3, #254	; 0xfe
 80189f4:	dd03      	ble.n	80189fe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 80189f6:	990c      	ldr	r1, [sp, #48]	; 0x30
 80189f8:	4281      	cmp	r1, r0
 80189fa:	f000 80cd 	beq.w	8018b98 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 80189fe:	990c      	ldr	r1, [sp, #48]	; 0x30
 8018a00:	f8bc 4000 	ldrh.w	r4, [ip]
 8018a04:	fb11 f303 	smulbb	r3, r1, r3
 8018a08:	b29b      	uxth	r3, r3
 8018a0a:	1c59      	adds	r1, r3, #1
 8018a0c:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8018a10:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8018a14:	b29f      	uxth	r7, r3
 8018a16:	43db      	mvns	r3, r3
 8018a18:	b2db      	uxtb	r3, r3
 8018a1a:	9309      	str	r3, [sp, #36]	; 0x24
 8018a1c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8018a1e:	1220      	asrs	r0, r4, #8
 8018a20:	fb13 f907 	smulbb	r9, r3, r7
 8018a24:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8018a28:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018a2a:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 8018a2e:	fb00 9003 	mla	r0, r0, r3, r9
 8018a32:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8018a34:	10e1      	asrs	r1, r4, #3
 8018a36:	fb13 f907 	smulbb	r9, r3, r7
 8018a3a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8018a3e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018a40:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 8018a44:	fb01 9103 	mla	r1, r1, r3, r9
 8018a48:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8018a4a:	00e4      	lsls	r4, r4, #3
 8018a4c:	fb13 f707 	smulbb	r7, r3, r7
 8018a50:	b2e4      	uxtb	r4, r4
 8018a52:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018a54:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8018a58:	fb04 7403 	mla	r4, r4, r3, r7
 8018a5c:	b280      	uxth	r0, r0
 8018a5e:	b2a4      	uxth	r4, r4
 8018a60:	1c43      	adds	r3, r0, #1
 8018a62:	f104 0901 	add.w	r9, r4, #1
 8018a66:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8018a6a:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 8018a6e:	b289      	uxth	r1, r1
 8018a70:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 8018a74:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8018a78:	ea49 0000 	orr.w	r0, r9, r0
 8018a7c:	f101 0901 	add.w	r9, r1, #1
 8018a80:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 8018a84:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8018a88:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8018a8c:	ea40 0009 	orr.w	r0, r0, r9
 8018a90:	f8ac 0000 	strh.w	r0, [ip]
 8018a94:	4446      	add	r6, r8
 8018a96:	b2b6      	uxth	r6, r6
 8018a98:	2e07      	cmp	r6, #7
 8018a9a:	bf81      	itttt	hi
 8018a9c:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 8018a9e:	785a      	ldrbhi	r2, [r3, #1]
 8018aa0:	3301      	addhi	r3, #1
 8018aa2:	9328      	strhi	r3, [sp, #160]	; 0xa0
 8018aa4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018aa6:	bf9a      	itte	ls
 8018aa8:	fa42 f208 	asrls.w	r2, r2, r8
 8018aac:	b2d2      	uxtbls	r2, r2
 8018aae:	2600      	movhi	r6, #0
 8018ab0:	449c      	add	ip, r3
 8018ab2:	e792      	b.n	80189da <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 8018ab4:	441c      	add	r4, r3
 8018ab6:	b224      	sxth	r4, r4
 8018ab8:	e6d5      	b.n	8018866 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 8018aba:	f1ba 0f01 	cmp.w	sl, #1
 8018abe:	f47f af0c 	bne.w	80188da <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018ac2:	f1bb 0f01 	cmp.w	fp, #1
 8018ac6:	f47f af08 	bne.w	80188da <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018aca:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 8018b8c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 8018ace:	f8db 0000 	ldr.w	r0, [fp]
 8018ad2:	6803      	ldr	r3, [r0, #0]
 8018ad4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8018ad6:	4798      	blx	r3
 8018ad8:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 8018adc:	465a      	mov	r2, fp
 8018ade:	d006      	beq.n	8018aee <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 8018ae0:	f1b8 0f04 	cmp.w	r8, #4
 8018ae4:	d140      	bne.n	8018b68 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 8018ae6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018ae8:	3300      	adds	r3, #0
 8018aea:	bf18      	it	ne
 8018aec:	2301      	movne	r3, #1
 8018aee:	0580      	lsls	r0, r0, #22
 8018af0:	d56e      	bpl.n	8018bd0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 8018af2:	f1b8 0f08 	cmp.w	r8, #8
 8018af6:	d16b      	bne.n	8018bd0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 8018af8:	2b00      	cmp	r3, #0
 8018afa:	bf0c      	ite	eq
 8018afc:	f44f 7100 	moveq.w	r1, #512	; 0x200
 8018b00:	f44f 7180 	movne.w	r1, #256	; 0x100
 8018b04:	2d00      	cmp	r5, #0
 8018b06:	f47f aee8 	bne.w	80188da <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018b0a:	2e00      	cmp	r6, #0
 8018b0c:	f47f aee5 	bne.w	80188da <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018b10:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8018b12:	19e3      	adds	r3, r4, r7
 8018b14:	4283      	cmp	r3, r0
 8018b16:	f73f aee0 	bgt.w	80188da <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018b1a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018b1c:	980d      	ldr	r0, [sp, #52]	; 0x34
 8018b1e:	444b      	add	r3, r9
 8018b20:	4283      	cmp	r3, r0
 8018b22:	f73f aeda 	bgt.w	80188da <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018b26:	6810      	ldr	r0, [r2, #0]
 8018b28:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 8018b2c:	6804      	ldr	r4, [r0, #0]
 8018b2e:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 8018b32:	b2bf      	uxth	r7, r7
 8018b34:	f1b8 0f08 	cmp.w	r8, #8
 8018b38:	f04f 0500 	mov.w	r5, #0
 8018b3c:	bf18      	it	ne
 8018b3e:	3701      	addne	r7, #1
 8018b40:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8018b44:	990c      	ldr	r1, [sp, #48]	; 0x30
 8018b46:	9104      	str	r1, [sp, #16]
 8018b48:	bf18      	it	ne
 8018b4a:	f027 0701 	bicne.w	r7, r7, #1
 8018b4e:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8018b50:	bf18      	it	ne
 8018b52:	b2bf      	uxthne	r7, r7
 8018b54:	e9cd 7102 	strd	r7, r1, [sp, #8]
 8018b58:	e9cd 7900 	strd	r7, r9, [sp]
 8018b5c:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8018b5e:	6d64      	ldr	r4, [r4, #84]	; 0x54
 8018b60:	47a0      	blx	r4
 8018b62:	b019      	add	sp, #100	; 0x64
 8018b64:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018b68:	2300      	movs	r3, #0
 8018b6a:	e7c0      	b.n	8018aee <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 8018b6c:	2208      	movs	r2, #8
 8018b6e:	fb92 f3f8 	sdiv	r3, r2, r8
 8018b72:	1e5a      	subs	r2, r3, #1
 8018b74:	443a      	add	r2, r7
 8018b76:	fb92 f2f3 	sdiv	r2, r2, r3
 8018b7a:	fb12 f203 	smulbb	r2, r2, r3
 8018b7e:	b292      	uxth	r2, r2
 8018b80:	e6b0      	b.n	80188e4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 8018b82:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8018b84:	e6ec      	b.n	8018960 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 8018b86:	bf00      	nop
 8018b88:	200155ac 	.word	0x200155ac
 8018b8c:	200155b4 	.word	0x200155b4
 8018b90:	200155ae 	.word	0x200155ae
 8018b94:	00fff800 	.word	0x00fff800
 8018b98:	9810      	ldr	r0, [sp, #64]	; 0x40
 8018b9a:	e779      	b.n	8018a90 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 8018b9c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8018b9e:	b153      	cbz	r3, 8018bb6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 8018ba0:	441e      	add	r6, r3
 8018ba2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018ba4:	b2b6      	uxth	r6, r6
 8018ba6:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 8018baa:	f006 0607 	and.w	r6, r6, #7
 8018bae:	781a      	ldrb	r2, [r3, #0]
 8018bb0:	9328      	str	r3, [sp, #160]	; 0xa0
 8018bb2:	4132      	asrs	r2, r6
 8018bb4:	b2d2      	uxtb	r2, r2
 8018bb6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018bb8:	445b      	add	r3, fp
 8018bba:	930a      	str	r3, [sp, #40]	; 0x28
 8018bbc:	e706      	b.n	80189cc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 8018bbe:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018bc0:	2b00      	cmp	r3, #0
 8018bc2:	d1ce      	bne.n	8018b62 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8018bc4:	4b05      	ldr	r3, [pc, #20]	; (8018bdc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 8018bc6:	6818      	ldr	r0, [r3, #0]
 8018bc8:	6803      	ldr	r3, [r0, #0]
 8018bca:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8018bcc:	4798      	blx	r3
 8018bce:	e7c8      	b.n	8018b62 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8018bd0:	2b00      	cmp	r3, #0
 8018bd2:	f43f ae82 	beq.w	80188da <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018bd6:	f44f 7180 	mov.w	r1, #256	; 0x100
 8018bda:	e793      	b.n	8018b04 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 8018bdc:	200155b4 	.word	0x200155b4

08018be0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 8018be0:	b538      	push	{r3, r4, r5, lr}
 8018be2:	4c15      	ldr	r4, [pc, #84]	; (8018c38 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 8018be4:	7823      	ldrb	r3, [r4, #0]
 8018be6:	f3bf 8f5b 	dmb	ish
 8018bea:	07da      	lsls	r2, r3, #31
 8018bec:	4605      	mov	r5, r0
 8018bee:	d40b      	bmi.n	8018c08 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8018bf0:	4620      	mov	r0, r4
 8018bf2:	f007 fd73 	bl	80206dc <__cxa_guard_acquire>
 8018bf6:	b138      	cbz	r0, 8018c08 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8018bf8:	4620      	mov	r0, r4
 8018bfa:	f007 fd7b 	bl	80206f4 <__cxa_guard_release>
 8018bfe:	4a0f      	ldr	r2, [pc, #60]	; (8018c3c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8018c00:	490f      	ldr	r1, [pc, #60]	; (8018c40 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 8018c02:	4810      	ldr	r0, [pc, #64]	; (8018c44 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8018c04:	f007 fd63 	bl	80206ce <__aeabi_atexit>
 8018c08:	4c0f      	ldr	r4, [pc, #60]	; (8018c48 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 8018c0a:	7823      	ldrb	r3, [r4, #0]
 8018c0c:	f3bf 8f5b 	dmb	ish
 8018c10:	07db      	lsls	r3, r3, #31
 8018c12:	d40b      	bmi.n	8018c2c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8018c14:	4620      	mov	r0, r4
 8018c16:	f007 fd61 	bl	80206dc <__cxa_guard_acquire>
 8018c1a:	b138      	cbz	r0, 8018c2c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8018c1c:	4620      	mov	r0, r4
 8018c1e:	f007 fd69 	bl	80206f4 <__cxa_guard_release>
 8018c22:	4a06      	ldr	r2, [pc, #24]	; (8018c3c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8018c24:	4909      	ldr	r1, [pc, #36]	; (8018c4c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 8018c26:	480a      	ldr	r0, [pc, #40]	; (8018c50 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8018c28:	f007 fd51 	bl	80206ce <__aeabi_atexit>
 8018c2c:	4b05      	ldr	r3, [pc, #20]	; (8018c44 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8018c2e:	612b      	str	r3, [r5, #16]
 8018c30:	4b07      	ldr	r3, [pc, #28]	; (8018c50 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8018c32:	616b      	str	r3, [r5, #20]
 8018c34:	bd38      	pop	{r3, r4, r5, pc}
 8018c36:	bf00      	nop
 8018c38:	20015688 	.word	0x20015688
 8018c3c:	20000000 	.word	0x20000000
 8018c40:	08016df1 	.word	0x08016df1
 8018c44:	200000d0 	.word	0x200000d0
 8018c48:	2001568c 	.word	0x2001568c
 8018c4c:	08016def 	.word	0x08016def
 8018c50:	200000d4 	.word	0x200000d4

08018c54 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 8018c54:	b538      	push	{r3, r4, r5, lr}
 8018c56:	4c15      	ldr	r4, [pc, #84]	; (8018cac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 8018c58:	7823      	ldrb	r3, [r4, #0]
 8018c5a:	f3bf 8f5b 	dmb	ish
 8018c5e:	07da      	lsls	r2, r3, #31
 8018c60:	4605      	mov	r5, r0
 8018c62:	d40b      	bmi.n	8018c7c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8018c64:	4620      	mov	r0, r4
 8018c66:	f007 fd39 	bl	80206dc <__cxa_guard_acquire>
 8018c6a:	b138      	cbz	r0, 8018c7c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8018c6c:	4620      	mov	r0, r4
 8018c6e:	f007 fd41 	bl	80206f4 <__cxa_guard_release>
 8018c72:	4a0f      	ldr	r2, [pc, #60]	; (8018cb0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8018c74:	490f      	ldr	r1, [pc, #60]	; (8018cb4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 8018c76:	4810      	ldr	r0, [pc, #64]	; (8018cb8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8018c78:	f007 fd29 	bl	80206ce <__aeabi_atexit>
 8018c7c:	4c0f      	ldr	r4, [pc, #60]	; (8018cbc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 8018c7e:	7823      	ldrb	r3, [r4, #0]
 8018c80:	f3bf 8f5b 	dmb	ish
 8018c84:	07db      	lsls	r3, r3, #31
 8018c86:	d40b      	bmi.n	8018ca0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8018c88:	4620      	mov	r0, r4
 8018c8a:	f007 fd27 	bl	80206dc <__cxa_guard_acquire>
 8018c8e:	b138      	cbz	r0, 8018ca0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8018c90:	4620      	mov	r0, r4
 8018c92:	f007 fd2f 	bl	80206f4 <__cxa_guard_release>
 8018c96:	4a06      	ldr	r2, [pc, #24]	; (8018cb0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8018c98:	4909      	ldr	r1, [pc, #36]	; (8018cc0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 8018c9a:	480a      	ldr	r0, [pc, #40]	; (8018cc4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8018c9c:	f007 fd17 	bl	80206ce <__aeabi_atexit>
 8018ca0:	4b05      	ldr	r3, [pc, #20]	; (8018cb8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8018ca2:	60ab      	str	r3, [r5, #8]
 8018ca4:	4b07      	ldr	r3, [pc, #28]	; (8018cc4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8018ca6:	60eb      	str	r3, [r5, #12]
 8018ca8:	bd38      	pop	{r3, r4, r5, pc}
 8018caa:	bf00      	nop
 8018cac:	20015660 	.word	0x20015660
 8018cb0:	20000000 	.word	0x20000000
 8018cb4:	08016df5 	.word	0x08016df5
 8018cb8:	200000a8 	.word	0x200000a8
 8018cbc:	20015664 	.word	0x20015664
 8018cc0:	08016df3 	.word	0x08016df3
 8018cc4:	200000ac 	.word	0x200000ac

08018cc8 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 8018cc8:	b510      	push	{r4, lr}
 8018cca:	4604      	mov	r4, r0
 8018ccc:	f7ff ff88 	bl	8018be0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 8018cd0:	4620      	mov	r0, r4
 8018cd2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018cd6:	f7ff bfbd 	b.w	8018c54 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

08018cdc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 8018cdc:	b538      	push	{r3, r4, r5, lr}
 8018cde:	4c15      	ldr	r4, [pc, #84]	; (8018d34 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 8018ce0:	7823      	ldrb	r3, [r4, #0]
 8018ce2:	f3bf 8f5b 	dmb	ish
 8018ce6:	07da      	lsls	r2, r3, #31
 8018ce8:	4605      	mov	r5, r0
 8018cea:	d40b      	bmi.n	8018d04 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8018cec:	4620      	mov	r0, r4
 8018cee:	f007 fcf5 	bl	80206dc <__cxa_guard_acquire>
 8018cf2:	b138      	cbz	r0, 8018d04 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8018cf4:	4620      	mov	r0, r4
 8018cf6:	f007 fcfd 	bl	80206f4 <__cxa_guard_release>
 8018cfa:	4a0f      	ldr	r2, [pc, #60]	; (8018d38 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8018cfc:	490f      	ldr	r1, [pc, #60]	; (8018d3c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 8018cfe:	4810      	ldr	r0, [pc, #64]	; (8018d40 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8018d00:	f007 fce5 	bl	80206ce <__aeabi_atexit>
 8018d04:	4c0f      	ldr	r4, [pc, #60]	; (8018d44 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 8018d06:	7823      	ldrb	r3, [r4, #0]
 8018d08:	f3bf 8f5b 	dmb	ish
 8018d0c:	07db      	lsls	r3, r3, #31
 8018d0e:	d40b      	bmi.n	8018d28 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8018d10:	4620      	mov	r0, r4
 8018d12:	f007 fce3 	bl	80206dc <__cxa_guard_acquire>
 8018d16:	b138      	cbz	r0, 8018d28 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8018d18:	4620      	mov	r0, r4
 8018d1a:	f007 fceb 	bl	80206f4 <__cxa_guard_release>
 8018d1e:	4a06      	ldr	r2, [pc, #24]	; (8018d38 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8018d20:	4909      	ldr	r1, [pc, #36]	; (8018d48 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 8018d22:	480a      	ldr	r0, [pc, #40]	; (8018d4c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8018d24:	f007 fcd3 	bl	80206ce <__aeabi_atexit>
 8018d28:	4b05      	ldr	r3, [pc, #20]	; (8018d40 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8018d2a:	622b      	str	r3, [r5, #32]
 8018d2c:	4b07      	ldr	r3, [pc, #28]	; (8018d4c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8018d2e:	626b      	str	r3, [r5, #36]	; 0x24
 8018d30:	bd38      	pop	{r3, r4, r5, pc}
 8018d32:	bf00      	nop
 8018d34:	20015690 	.word	0x20015690
 8018d38:	20000000 	.word	0x20000000
 8018d3c:	08016de9 	.word	0x08016de9
 8018d40:	200000d8 	.word	0x200000d8
 8018d44:	20015694 	.word	0x20015694
 8018d48:	08016de7 	.word	0x08016de7
 8018d4c:	200000dc 	.word	0x200000dc

08018d50 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 8018d50:	b538      	push	{r3, r4, r5, lr}
 8018d52:	4c15      	ldr	r4, [pc, #84]	; (8018da8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 8018d54:	7823      	ldrb	r3, [r4, #0]
 8018d56:	f3bf 8f5b 	dmb	ish
 8018d5a:	07da      	lsls	r2, r3, #31
 8018d5c:	4605      	mov	r5, r0
 8018d5e:	d40b      	bmi.n	8018d78 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8018d60:	4620      	mov	r0, r4
 8018d62:	f007 fcbb 	bl	80206dc <__cxa_guard_acquire>
 8018d66:	b138      	cbz	r0, 8018d78 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8018d68:	4620      	mov	r0, r4
 8018d6a:	f007 fcc3 	bl	80206f4 <__cxa_guard_release>
 8018d6e:	4a0f      	ldr	r2, [pc, #60]	; (8018dac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8018d70:	490f      	ldr	r1, [pc, #60]	; (8018db0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 8018d72:	4810      	ldr	r0, [pc, #64]	; (8018db4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8018d74:	f007 fcab 	bl	80206ce <__aeabi_atexit>
 8018d78:	4c0f      	ldr	r4, [pc, #60]	; (8018db8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 8018d7a:	7823      	ldrb	r3, [r4, #0]
 8018d7c:	f3bf 8f5b 	dmb	ish
 8018d80:	07db      	lsls	r3, r3, #31
 8018d82:	d40b      	bmi.n	8018d9c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8018d84:	4620      	mov	r0, r4
 8018d86:	f007 fca9 	bl	80206dc <__cxa_guard_acquire>
 8018d8a:	b138      	cbz	r0, 8018d9c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8018d8c:	4620      	mov	r0, r4
 8018d8e:	f007 fcb1 	bl	80206f4 <__cxa_guard_release>
 8018d92:	4a06      	ldr	r2, [pc, #24]	; (8018dac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8018d94:	4909      	ldr	r1, [pc, #36]	; (8018dbc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 8018d96:	480a      	ldr	r0, [pc, #40]	; (8018dc0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8018d98:	f007 fc99 	bl	80206ce <__aeabi_atexit>
 8018d9c:	4b05      	ldr	r3, [pc, #20]	; (8018db4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8018d9e:	61ab      	str	r3, [r5, #24]
 8018da0:	4b07      	ldr	r3, [pc, #28]	; (8018dc0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8018da2:	61eb      	str	r3, [r5, #28]
 8018da4:	bd38      	pop	{r3, r4, r5, pc}
 8018da6:	bf00      	nop
 8018da8:	20015668 	.word	0x20015668
 8018dac:	20000000 	.word	0x20000000
 8018db0:	08016ded 	.word	0x08016ded
 8018db4:	200000b0 	.word	0x200000b0
 8018db8:	2001566c 	.word	0x2001566c
 8018dbc:	08016deb 	.word	0x08016deb
 8018dc0:	200000b4 	.word	0x200000b4

08018dc4 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 8018dc4:	b510      	push	{r4, lr}
 8018dc6:	4604      	mov	r4, r0
 8018dc8:	f7ff ff88 	bl	8018cdc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 8018dcc:	4620      	mov	r0, r4
 8018dce:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018dd2:	f7ff bfbd 	b.w	8018d50 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

08018dd8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 8018dd8:	b538      	push	{r3, r4, r5, lr}
 8018dda:	4c15      	ldr	r4, [pc, #84]	; (8018e30 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 8018ddc:	7823      	ldrb	r3, [r4, #0]
 8018dde:	f3bf 8f5b 	dmb	ish
 8018de2:	07da      	lsls	r2, r3, #31
 8018de4:	4605      	mov	r5, r0
 8018de6:	d40b      	bmi.n	8018e00 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8018de8:	4620      	mov	r0, r4
 8018dea:	f007 fc77 	bl	80206dc <__cxa_guard_acquire>
 8018dee:	b138      	cbz	r0, 8018e00 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8018df0:	4620      	mov	r0, r4
 8018df2:	f007 fc7f 	bl	80206f4 <__cxa_guard_release>
 8018df6:	4a0f      	ldr	r2, [pc, #60]	; (8018e34 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8018df8:	490f      	ldr	r1, [pc, #60]	; (8018e38 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 8018dfa:	4810      	ldr	r0, [pc, #64]	; (8018e3c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8018dfc:	f007 fc67 	bl	80206ce <__aeabi_atexit>
 8018e00:	4c0f      	ldr	r4, [pc, #60]	; (8018e40 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 8018e02:	7823      	ldrb	r3, [r4, #0]
 8018e04:	f3bf 8f5b 	dmb	ish
 8018e08:	07db      	lsls	r3, r3, #31
 8018e0a:	d40b      	bmi.n	8018e24 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8018e0c:	4620      	mov	r0, r4
 8018e0e:	f007 fc65 	bl	80206dc <__cxa_guard_acquire>
 8018e12:	b138      	cbz	r0, 8018e24 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8018e14:	4620      	mov	r0, r4
 8018e16:	f007 fc6d 	bl	80206f4 <__cxa_guard_release>
 8018e1a:	4a06      	ldr	r2, [pc, #24]	; (8018e34 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8018e1c:	4909      	ldr	r1, [pc, #36]	; (8018e44 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 8018e1e:	480a      	ldr	r0, [pc, #40]	; (8018e48 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8018e20:	f007 fc55 	bl	80206ce <__aeabi_atexit>
 8018e24:	4b05      	ldr	r3, [pc, #20]	; (8018e3c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8018e26:	632b      	str	r3, [r5, #48]	; 0x30
 8018e28:	4b07      	ldr	r3, [pc, #28]	; (8018e48 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8018e2a:	636b      	str	r3, [r5, #52]	; 0x34
 8018e2c:	bd38      	pop	{r3, r4, r5, pc}
 8018e2e:	bf00      	nop
 8018e30:	200156a0 	.word	0x200156a0
 8018e34:	20000000 	.word	0x20000000
 8018e38:	08016de1 	.word	0x08016de1
 8018e3c:	200000e8 	.word	0x200000e8
 8018e40:	200156a4 	.word	0x200156a4
 8018e44:	08016ddf 	.word	0x08016ddf
 8018e48:	200000ec 	.word	0x200000ec

08018e4c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 8018e4c:	b538      	push	{r3, r4, r5, lr}
 8018e4e:	4c15      	ldr	r4, [pc, #84]	; (8018ea4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 8018e50:	7823      	ldrb	r3, [r4, #0]
 8018e52:	f3bf 8f5b 	dmb	ish
 8018e56:	07da      	lsls	r2, r3, #31
 8018e58:	4605      	mov	r5, r0
 8018e5a:	d40b      	bmi.n	8018e74 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8018e5c:	4620      	mov	r0, r4
 8018e5e:	f007 fc3d 	bl	80206dc <__cxa_guard_acquire>
 8018e62:	b138      	cbz	r0, 8018e74 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8018e64:	4620      	mov	r0, r4
 8018e66:	f007 fc45 	bl	80206f4 <__cxa_guard_release>
 8018e6a:	4a0f      	ldr	r2, [pc, #60]	; (8018ea8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8018e6c:	490f      	ldr	r1, [pc, #60]	; (8018eac <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 8018e6e:	4810      	ldr	r0, [pc, #64]	; (8018eb0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8018e70:	f007 fc2d 	bl	80206ce <__aeabi_atexit>
 8018e74:	4c0f      	ldr	r4, [pc, #60]	; (8018eb4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 8018e76:	7823      	ldrb	r3, [r4, #0]
 8018e78:	f3bf 8f5b 	dmb	ish
 8018e7c:	07db      	lsls	r3, r3, #31
 8018e7e:	d40b      	bmi.n	8018e98 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8018e80:	4620      	mov	r0, r4
 8018e82:	f007 fc2b 	bl	80206dc <__cxa_guard_acquire>
 8018e86:	b138      	cbz	r0, 8018e98 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8018e88:	4620      	mov	r0, r4
 8018e8a:	f007 fc33 	bl	80206f4 <__cxa_guard_release>
 8018e8e:	4a06      	ldr	r2, [pc, #24]	; (8018ea8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8018e90:	4909      	ldr	r1, [pc, #36]	; (8018eb8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 8018e92:	480a      	ldr	r0, [pc, #40]	; (8018ebc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8018e94:	f007 fc1b 	bl	80206ce <__aeabi_atexit>
 8018e98:	4b05      	ldr	r3, [pc, #20]	; (8018eb0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8018e9a:	62ab      	str	r3, [r5, #40]	; 0x28
 8018e9c:	4b07      	ldr	r3, [pc, #28]	; (8018ebc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8018e9e:	62eb      	str	r3, [r5, #44]	; 0x2c
 8018ea0:	bd38      	pop	{r3, r4, r5, pc}
 8018ea2:	bf00      	nop
 8018ea4:	20015670 	.word	0x20015670
 8018ea8:	20000000 	.word	0x20000000
 8018eac:	08016de5 	.word	0x08016de5
 8018eb0:	200000b8 	.word	0x200000b8
 8018eb4:	20015674 	.word	0x20015674
 8018eb8:	08016de3 	.word	0x08016de3
 8018ebc:	200000bc 	.word	0x200000bc

08018ec0 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 8018ec0:	b510      	push	{r4, lr}
 8018ec2:	4604      	mov	r4, r0
 8018ec4:	f7ff ff88 	bl	8018dd8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 8018ec8:	4620      	mov	r0, r4
 8018eca:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018ece:	f7ff bfbd 	b.w	8018e4c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

08018ed4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 8018ed4:	b538      	push	{r3, r4, r5, lr}
 8018ed6:	4c15      	ldr	r4, [pc, #84]	; (8018f2c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 8018ed8:	7823      	ldrb	r3, [r4, #0]
 8018eda:	f3bf 8f5b 	dmb	ish
 8018ede:	07da      	lsls	r2, r3, #31
 8018ee0:	4605      	mov	r5, r0
 8018ee2:	d40b      	bmi.n	8018efc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8018ee4:	4620      	mov	r0, r4
 8018ee6:	f007 fbf9 	bl	80206dc <__cxa_guard_acquire>
 8018eea:	b138      	cbz	r0, 8018efc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8018eec:	4620      	mov	r0, r4
 8018eee:	f007 fc01 	bl	80206f4 <__cxa_guard_release>
 8018ef2:	4a0f      	ldr	r2, [pc, #60]	; (8018f30 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8018ef4:	490f      	ldr	r1, [pc, #60]	; (8018f34 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 8018ef6:	4810      	ldr	r0, [pc, #64]	; (8018f38 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8018ef8:	f007 fbe9 	bl	80206ce <__aeabi_atexit>
 8018efc:	4c0f      	ldr	r4, [pc, #60]	; (8018f3c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 8018efe:	7823      	ldrb	r3, [r4, #0]
 8018f00:	f3bf 8f5b 	dmb	ish
 8018f04:	07db      	lsls	r3, r3, #31
 8018f06:	d40b      	bmi.n	8018f20 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8018f08:	4620      	mov	r0, r4
 8018f0a:	f007 fbe7 	bl	80206dc <__cxa_guard_acquire>
 8018f0e:	b138      	cbz	r0, 8018f20 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8018f10:	4620      	mov	r0, r4
 8018f12:	f007 fbef 	bl	80206f4 <__cxa_guard_release>
 8018f16:	4a06      	ldr	r2, [pc, #24]	; (8018f30 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8018f18:	4909      	ldr	r1, [pc, #36]	; (8018f40 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 8018f1a:	480a      	ldr	r0, [pc, #40]	; (8018f44 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8018f1c:	f007 fbd7 	bl	80206ce <__aeabi_atexit>
 8018f20:	4b05      	ldr	r3, [pc, #20]	; (8018f38 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8018f22:	652b      	str	r3, [r5, #80]	; 0x50
 8018f24:	4b07      	ldr	r3, [pc, #28]	; (8018f44 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8018f26:	656b      	str	r3, [r5, #84]	; 0x54
 8018f28:	bd38      	pop	{r3, r4, r5, pc}
 8018f2a:	bf00      	nop
 8018f2c:	200156a8 	.word	0x200156a8
 8018f30:	20000000 	.word	0x20000000
 8018f34:	08016dd1 	.word	0x08016dd1
 8018f38:	200000f0 	.word	0x200000f0
 8018f3c:	200156ac 	.word	0x200156ac
 8018f40:	08016dcf 	.word	0x08016dcf
 8018f44:	200000f4 	.word	0x200000f4

08018f48 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 8018f48:	b538      	push	{r3, r4, r5, lr}
 8018f4a:	4c15      	ldr	r4, [pc, #84]	; (8018fa0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 8018f4c:	7823      	ldrb	r3, [r4, #0]
 8018f4e:	f3bf 8f5b 	dmb	ish
 8018f52:	07da      	lsls	r2, r3, #31
 8018f54:	4605      	mov	r5, r0
 8018f56:	d40b      	bmi.n	8018f70 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8018f58:	4620      	mov	r0, r4
 8018f5a:	f007 fbbf 	bl	80206dc <__cxa_guard_acquire>
 8018f5e:	b138      	cbz	r0, 8018f70 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8018f60:	4620      	mov	r0, r4
 8018f62:	f007 fbc7 	bl	80206f4 <__cxa_guard_release>
 8018f66:	4a0f      	ldr	r2, [pc, #60]	; (8018fa4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8018f68:	490f      	ldr	r1, [pc, #60]	; (8018fa8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 8018f6a:	4810      	ldr	r0, [pc, #64]	; (8018fac <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8018f6c:	f007 fbaf 	bl	80206ce <__aeabi_atexit>
 8018f70:	4c0f      	ldr	r4, [pc, #60]	; (8018fb0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 8018f72:	7823      	ldrb	r3, [r4, #0]
 8018f74:	f3bf 8f5b 	dmb	ish
 8018f78:	07db      	lsls	r3, r3, #31
 8018f7a:	d40b      	bmi.n	8018f94 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8018f7c:	4620      	mov	r0, r4
 8018f7e:	f007 fbad 	bl	80206dc <__cxa_guard_acquire>
 8018f82:	b138      	cbz	r0, 8018f94 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8018f84:	4620      	mov	r0, r4
 8018f86:	f007 fbb5 	bl	80206f4 <__cxa_guard_release>
 8018f8a:	4a06      	ldr	r2, [pc, #24]	; (8018fa4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8018f8c:	4909      	ldr	r1, [pc, #36]	; (8018fb4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 8018f8e:	480a      	ldr	r0, [pc, #40]	; (8018fb8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8018f90:	f007 fb9d 	bl	80206ce <__aeabi_atexit>
 8018f94:	4b05      	ldr	r3, [pc, #20]	; (8018fac <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8018f96:	64ab      	str	r3, [r5, #72]	; 0x48
 8018f98:	4b07      	ldr	r3, [pc, #28]	; (8018fb8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8018f9a:	64eb      	str	r3, [r5, #76]	; 0x4c
 8018f9c:	bd38      	pop	{r3, r4, r5, pc}
 8018f9e:	bf00      	nop
 8018fa0:	200156b0 	.word	0x200156b0
 8018fa4:	20000000 	.word	0x20000000
 8018fa8:	08016dd5 	.word	0x08016dd5
 8018fac:	200000f8 	.word	0x200000f8
 8018fb0:	200156b4 	.word	0x200156b4
 8018fb4:	08016dd3 	.word	0x08016dd3
 8018fb8:	200000fc 	.word	0x200000fc

08018fbc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 8018fbc:	b538      	push	{r3, r4, r5, lr}
 8018fbe:	4c15      	ldr	r4, [pc, #84]	; (8019014 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 8018fc0:	7823      	ldrb	r3, [r4, #0]
 8018fc2:	f3bf 8f5b 	dmb	ish
 8018fc6:	07da      	lsls	r2, r3, #31
 8018fc8:	4605      	mov	r5, r0
 8018fca:	d40b      	bmi.n	8018fe4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8018fcc:	4620      	mov	r0, r4
 8018fce:	f007 fb85 	bl	80206dc <__cxa_guard_acquire>
 8018fd2:	b138      	cbz	r0, 8018fe4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8018fd4:	4620      	mov	r0, r4
 8018fd6:	f007 fb8d 	bl	80206f4 <__cxa_guard_release>
 8018fda:	4a0f      	ldr	r2, [pc, #60]	; (8019018 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8018fdc:	490f      	ldr	r1, [pc, #60]	; (801901c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 8018fde:	4810      	ldr	r0, [pc, #64]	; (8019020 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8018fe0:	f007 fb75 	bl	80206ce <__aeabi_atexit>
 8018fe4:	4c0f      	ldr	r4, [pc, #60]	; (8019024 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 8018fe6:	7823      	ldrb	r3, [r4, #0]
 8018fe8:	f3bf 8f5b 	dmb	ish
 8018fec:	07db      	lsls	r3, r3, #31
 8018fee:	d40b      	bmi.n	8019008 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8018ff0:	4620      	mov	r0, r4
 8018ff2:	f007 fb73 	bl	80206dc <__cxa_guard_acquire>
 8018ff6:	b138      	cbz	r0, 8019008 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8018ff8:	4620      	mov	r0, r4
 8018ffa:	f007 fb7b 	bl	80206f4 <__cxa_guard_release>
 8018ffe:	4a06      	ldr	r2, [pc, #24]	; (8019018 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8019000:	4909      	ldr	r1, [pc, #36]	; (8019028 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 8019002:	480a      	ldr	r0, [pc, #40]	; (801902c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8019004:	f007 fb63 	bl	80206ce <__aeabi_atexit>
 8019008:	4b05      	ldr	r3, [pc, #20]	; (8019020 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801900a:	642b      	str	r3, [r5, #64]	; 0x40
 801900c:	4b07      	ldr	r3, [pc, #28]	; (801902c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801900e:	646b      	str	r3, [r5, #68]	; 0x44
 8019010:	bd38      	pop	{r3, r4, r5, pc}
 8019012:	bf00      	nop
 8019014:	20015678 	.word	0x20015678
 8019018:	20000000 	.word	0x20000000
 801901c:	08016dd9 	.word	0x08016dd9
 8019020:	200000c0 	.word	0x200000c0
 8019024:	2001567c 	.word	0x2001567c
 8019028:	08016dd7 	.word	0x08016dd7
 801902c:	200000c4 	.word	0x200000c4

08019030 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 8019030:	b538      	push	{r3, r4, r5, lr}
 8019032:	4c15      	ldr	r4, [pc, #84]	; (8019088 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 8019034:	7823      	ldrb	r3, [r4, #0]
 8019036:	f3bf 8f5b 	dmb	ish
 801903a:	07da      	lsls	r2, r3, #31
 801903c:	4605      	mov	r5, r0
 801903e:	d40b      	bmi.n	8019058 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8019040:	4620      	mov	r0, r4
 8019042:	f007 fb4b 	bl	80206dc <__cxa_guard_acquire>
 8019046:	b138      	cbz	r0, 8019058 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8019048:	4620      	mov	r0, r4
 801904a:	f007 fb53 	bl	80206f4 <__cxa_guard_release>
 801904e:	4a0f      	ldr	r2, [pc, #60]	; (801908c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8019050:	490f      	ldr	r1, [pc, #60]	; (8019090 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 8019052:	4810      	ldr	r0, [pc, #64]	; (8019094 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8019054:	f007 fb3b 	bl	80206ce <__aeabi_atexit>
 8019058:	4c0f      	ldr	r4, [pc, #60]	; (8019098 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 801905a:	7823      	ldrb	r3, [r4, #0]
 801905c:	f3bf 8f5b 	dmb	ish
 8019060:	07db      	lsls	r3, r3, #31
 8019062:	d40b      	bmi.n	801907c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8019064:	4620      	mov	r0, r4
 8019066:	f007 fb39 	bl	80206dc <__cxa_guard_acquire>
 801906a:	b138      	cbz	r0, 801907c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801906c:	4620      	mov	r0, r4
 801906e:	f007 fb41 	bl	80206f4 <__cxa_guard_release>
 8019072:	4a06      	ldr	r2, [pc, #24]	; (801908c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8019074:	4909      	ldr	r1, [pc, #36]	; (801909c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 8019076:	480a      	ldr	r0, [pc, #40]	; (80190a0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8019078:	f007 fb29 	bl	80206ce <__aeabi_atexit>
 801907c:	4b05      	ldr	r3, [pc, #20]	; (8019094 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801907e:	63ab      	str	r3, [r5, #56]	; 0x38
 8019080:	4b07      	ldr	r3, [pc, #28]	; (80190a0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8019082:	63eb      	str	r3, [r5, #60]	; 0x3c
 8019084:	bd38      	pop	{r3, r4, r5, pc}
 8019086:	bf00      	nop
 8019088:	20015698 	.word	0x20015698
 801908c:	20000000 	.word	0x20000000
 8019090:	08016ddd 	.word	0x08016ddd
 8019094:	200000e0 	.word	0x200000e0
 8019098:	2001569c 	.word	0x2001569c
 801909c:	08016ddb 	.word	0x08016ddb
 80190a0:	200000e4 	.word	0x200000e4

080190a4 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 80190a4:	b510      	push	{r4, lr}
 80190a6:	4604      	mov	r4, r0
 80190a8:	f7ff ff14 	bl	8018ed4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 80190ac:	4620      	mov	r0, r4
 80190ae:	f7ff ff85 	bl	8018fbc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 80190b2:	4620      	mov	r0, r4
 80190b4:	f7ff ff48 	bl	8018f48 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 80190b8:	4620      	mov	r0, r4
 80190ba:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80190be:	f7ff bfb7 	b.w	8019030 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

080190c4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 80190c4:	b538      	push	{r3, r4, r5, lr}
 80190c6:	4c15      	ldr	r4, [pc, #84]	; (801911c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 80190c8:	7823      	ldrb	r3, [r4, #0]
 80190ca:	f3bf 8f5b 	dmb	ish
 80190ce:	07da      	lsls	r2, r3, #31
 80190d0:	4605      	mov	r5, r0
 80190d2:	d40b      	bmi.n	80190ec <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 80190d4:	4620      	mov	r0, r4
 80190d6:	f007 fb01 	bl	80206dc <__cxa_guard_acquire>
 80190da:	b138      	cbz	r0, 80190ec <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 80190dc:	4620      	mov	r0, r4
 80190de:	f007 fb09 	bl	80206f4 <__cxa_guard_release>
 80190e2:	4a0f      	ldr	r2, [pc, #60]	; (8019120 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 80190e4:	490f      	ldr	r1, [pc, #60]	; (8019124 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 80190e6:	4810      	ldr	r0, [pc, #64]	; (8019128 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 80190e8:	f007 faf1 	bl	80206ce <__aeabi_atexit>
 80190ec:	4c0f      	ldr	r4, [pc, #60]	; (801912c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 80190ee:	7823      	ldrb	r3, [r4, #0]
 80190f0:	f3bf 8f5b 	dmb	ish
 80190f4:	07db      	lsls	r3, r3, #31
 80190f6:	d40b      	bmi.n	8019110 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 80190f8:	4620      	mov	r0, r4
 80190fa:	f007 faef 	bl	80206dc <__cxa_guard_acquire>
 80190fe:	b138      	cbz	r0, 8019110 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8019100:	4620      	mov	r0, r4
 8019102:	f007 faf7 	bl	80206f4 <__cxa_guard_release>
 8019106:	4a06      	ldr	r2, [pc, #24]	; (8019120 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8019108:	4909      	ldr	r1, [pc, #36]	; (8019130 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 801910a:	480a      	ldr	r0, [pc, #40]	; (8019134 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801910c:	f007 fadf 	bl	80206ce <__aeabi_atexit>
 8019110:	4b05      	ldr	r3, [pc, #20]	; (8019128 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8019112:	662b      	str	r3, [r5, #96]	; 0x60
 8019114:	4b07      	ldr	r3, [pc, #28]	; (8019134 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8019116:	666b      	str	r3, [r5, #100]	; 0x64
 8019118:	bd38      	pop	{r3, r4, r5, pc}
 801911a:	bf00      	nop
 801911c:	20015680 	.word	0x20015680
 8019120:	20000000 	.word	0x20000000
 8019124:	08016dc9 	.word	0x08016dc9
 8019128:	200000c8 	.word	0x200000c8
 801912c:	20015684 	.word	0x20015684
 8019130:	08016dc7 	.word	0x08016dc7
 8019134:	200000cc 	.word	0x200000cc

08019138 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 8019138:	b538      	push	{r3, r4, r5, lr}
 801913a:	4c15      	ldr	r4, [pc, #84]	; (8019190 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 801913c:	7823      	ldrb	r3, [r4, #0]
 801913e:	f3bf 8f5b 	dmb	ish
 8019142:	07da      	lsls	r2, r3, #31
 8019144:	4605      	mov	r5, r0
 8019146:	d40b      	bmi.n	8019160 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8019148:	4620      	mov	r0, r4
 801914a:	f007 fac7 	bl	80206dc <__cxa_guard_acquire>
 801914e:	b138      	cbz	r0, 8019160 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8019150:	4620      	mov	r0, r4
 8019152:	f007 facf 	bl	80206f4 <__cxa_guard_release>
 8019156:	4a0f      	ldr	r2, [pc, #60]	; (8019194 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8019158:	490f      	ldr	r1, [pc, #60]	; (8019198 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801915a:	4810      	ldr	r0, [pc, #64]	; (801919c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801915c:	f007 fab7 	bl	80206ce <__aeabi_atexit>
 8019160:	4c0f      	ldr	r4, [pc, #60]	; (80191a0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 8019162:	7823      	ldrb	r3, [r4, #0]
 8019164:	f3bf 8f5b 	dmb	ish
 8019168:	07db      	lsls	r3, r3, #31
 801916a:	d40b      	bmi.n	8019184 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801916c:	4620      	mov	r0, r4
 801916e:	f007 fab5 	bl	80206dc <__cxa_guard_acquire>
 8019172:	b138      	cbz	r0, 8019184 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8019174:	4620      	mov	r0, r4
 8019176:	f007 fabd 	bl	80206f4 <__cxa_guard_release>
 801917a:	4a06      	ldr	r2, [pc, #24]	; (8019194 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801917c:	4909      	ldr	r1, [pc, #36]	; (80191a4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801917e:	480a      	ldr	r0, [pc, #40]	; (80191a8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8019180:	f007 faa5 	bl	80206ce <__aeabi_atexit>
 8019184:	4b05      	ldr	r3, [pc, #20]	; (801919c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8019186:	65ab      	str	r3, [r5, #88]	; 0x58
 8019188:	4b07      	ldr	r3, [pc, #28]	; (80191a8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801918a:	65eb      	str	r3, [r5, #92]	; 0x5c
 801918c:	bd38      	pop	{r3, r4, r5, pc}
 801918e:	bf00      	nop
 8019190:	20015658 	.word	0x20015658
 8019194:	20000000 	.word	0x20000000
 8019198:	08016dcd 	.word	0x08016dcd
 801919c:	200000a0 	.word	0x200000a0
 80191a0:	2001565c 	.word	0x2001565c
 80191a4:	08016dcb 	.word	0x08016dcb
 80191a8:	200000a4 	.word	0x200000a4

080191ac <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 80191ac:	b510      	push	{r4, lr}
 80191ae:	4604      	mov	r4, r0
 80191b0:	f7ff ff88 	bl	80190c4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 80191b4:	4620      	mov	r0, r4
 80191b6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80191ba:	f7ff bfbd 	b.w	8019138 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

080191c0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 80191c0:	b538      	push	{r3, r4, r5, lr}
 80191c2:	4c15      	ldr	r4, [pc, #84]	; (8019218 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 80191c4:	7823      	ldrb	r3, [r4, #0]
 80191c6:	f3bf 8f5b 	dmb	ish
 80191ca:	07da      	lsls	r2, r3, #31
 80191cc:	4605      	mov	r5, r0
 80191ce:	d40b      	bmi.n	80191e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 80191d0:	4620      	mov	r0, r4
 80191d2:	f007 fa83 	bl	80206dc <__cxa_guard_acquire>
 80191d6:	b138      	cbz	r0, 80191e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 80191d8:	4620      	mov	r0, r4
 80191da:	f007 fa8b 	bl	80206f4 <__cxa_guard_release>
 80191de:	4a0f      	ldr	r2, [pc, #60]	; (801921c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 80191e0:	490f      	ldr	r1, [pc, #60]	; (8019220 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 80191e2:	4810      	ldr	r0, [pc, #64]	; (8019224 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 80191e4:	f007 fa73 	bl	80206ce <__aeabi_atexit>
 80191e8:	4c0f      	ldr	r4, [pc, #60]	; (8019228 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 80191ea:	7823      	ldrb	r3, [r4, #0]
 80191ec:	f3bf 8f5b 	dmb	ish
 80191f0:	07db      	lsls	r3, r3, #31
 80191f2:	d40b      	bmi.n	801920c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 80191f4:	4620      	mov	r0, r4
 80191f6:	f007 fa71 	bl	80206dc <__cxa_guard_acquire>
 80191fa:	b138      	cbz	r0, 801920c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 80191fc:	4620      	mov	r0, r4
 80191fe:	f007 fa79 	bl	80206f4 <__cxa_guard_release>
 8019202:	4a06      	ldr	r2, [pc, #24]	; (801921c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8019204:	4909      	ldr	r1, [pc, #36]	; (801922c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 8019206:	480a      	ldr	r0, [pc, #40]	; (8019230 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8019208:	f007 fa61 	bl	80206ce <__aeabi_atexit>
 801920c:	4b05      	ldr	r3, [pc, #20]	; (8019224 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801920e:	672b      	str	r3, [r5, #112]	; 0x70
 8019210:	4b07      	ldr	r3, [pc, #28]	; (8019230 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8019212:	676b      	str	r3, [r5, #116]	; 0x74
 8019214:	bd38      	pop	{r3, r4, r5, pc}
 8019216:	bf00      	nop
 8019218:	20015650 	.word	0x20015650
 801921c:	20000000 	.word	0x20000000
 8019220:	08016dc1 	.word	0x08016dc1
 8019224:	20000098 	.word	0x20000098
 8019228:	20015654 	.word	0x20015654
 801922c:	08016dbf 	.word	0x08016dbf
 8019230:	2000009c 	.word	0x2000009c

08019234 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 8019234:	b538      	push	{r3, r4, r5, lr}
 8019236:	4c15      	ldr	r4, [pc, #84]	; (801928c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 8019238:	7823      	ldrb	r3, [r4, #0]
 801923a:	f3bf 8f5b 	dmb	ish
 801923e:	07da      	lsls	r2, r3, #31
 8019240:	4605      	mov	r5, r0
 8019242:	d40b      	bmi.n	801925c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8019244:	4620      	mov	r0, r4
 8019246:	f007 fa49 	bl	80206dc <__cxa_guard_acquire>
 801924a:	b138      	cbz	r0, 801925c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801924c:	4620      	mov	r0, r4
 801924e:	f007 fa51 	bl	80206f4 <__cxa_guard_release>
 8019252:	4a0f      	ldr	r2, [pc, #60]	; (8019290 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8019254:	490f      	ldr	r1, [pc, #60]	; (8019294 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 8019256:	4810      	ldr	r0, [pc, #64]	; (8019298 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8019258:	f007 fa39 	bl	80206ce <__aeabi_atexit>
 801925c:	4c0f      	ldr	r4, [pc, #60]	; (801929c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801925e:	7823      	ldrb	r3, [r4, #0]
 8019260:	f3bf 8f5b 	dmb	ish
 8019264:	07db      	lsls	r3, r3, #31
 8019266:	d40b      	bmi.n	8019280 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8019268:	4620      	mov	r0, r4
 801926a:	f007 fa37 	bl	80206dc <__cxa_guard_acquire>
 801926e:	b138      	cbz	r0, 8019280 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8019270:	4620      	mov	r0, r4
 8019272:	f007 fa3f 	bl	80206f4 <__cxa_guard_release>
 8019276:	4a06      	ldr	r2, [pc, #24]	; (8019290 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8019278:	4909      	ldr	r1, [pc, #36]	; (80192a0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 801927a:	480a      	ldr	r0, [pc, #40]	; (80192a4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801927c:	f007 fa27 	bl	80206ce <__aeabi_atexit>
 8019280:	4b05      	ldr	r3, [pc, #20]	; (8019298 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8019282:	66ab      	str	r3, [r5, #104]	; 0x68
 8019284:	4b07      	ldr	r3, [pc, #28]	; (80192a4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8019286:	66eb      	str	r3, [r5, #108]	; 0x6c
 8019288:	bd38      	pop	{r3, r4, r5, pc}
 801928a:	bf00      	nop
 801928c:	20015648 	.word	0x20015648
 8019290:	20000000 	.word	0x20000000
 8019294:	08016dc5 	.word	0x08016dc5
 8019298:	20000090 	.word	0x20000090
 801929c:	2001564c 	.word	0x2001564c
 80192a0:	08016dc3 	.word	0x08016dc3
 80192a4:	20000094 	.word	0x20000094

080192a8 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 80192a8:	b510      	push	{r4, lr}
 80192aa:	4604      	mov	r4, r0
 80192ac:	f7ff ff88 	bl	80191c0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 80192b0:	4620      	mov	r0, r4
 80192b2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80192b6:	f7ff bfbd 	b.w	8019234 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

080192ba <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 80192ba:	b510      	push	{r4, lr}
 80192bc:	4604      	mov	r4, r0
 80192be:	f7ff fff3 	bl	80192a8 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 80192c2:	4620      	mov	r0, r4
 80192c4:	f7ff ff72 	bl	80191ac <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 80192c8:	4620      	mov	r0, r4
 80192ca:	f7ff fdf9 	bl	8018ec0 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 80192ce:	4620      	mov	r0, r4
 80192d0:	f7ff fcfa 	bl	8018cc8 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 80192d4:	4620      	mov	r0, r4
 80192d6:	f7ff fd75 	bl	8018dc4 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 80192da:	4620      	mov	r0, r4
 80192dc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80192e0:	f7ff bee0 	b.w	80190a4 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

080192e4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 80192e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80192e8:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
 80192ec:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
 80192f0:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
 80192f4:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 80192f8:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 80192fc:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 8019300:	8808      	ldrh	r0, [r1, #0]
 8019302:	fb05 4c0e 	mla	ip, r5, lr, r4
 8019306:	2d00      	cmp	r5, #0
 8019308:	eb02 0a0c 	add.w	sl, r2, ip
 801930c:	f2c0 80b0 	blt.w	8019470 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 8019310:	45ab      	cmp	fp, r5
 8019312:	f340 80ad 	ble.w	8019470 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 8019316:	2c00      	cmp	r4, #0
 8019318:	f2c0 80a8 	blt.w	801946c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801931c:	45a6      	cmp	lr, r4
 801931e:	f340 80a5 	ble.w	801946c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 8019322:	f812 200c 	ldrb.w	r2, [r2, ip]
 8019326:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 801932a:	1c62      	adds	r2, r4, #1
 801932c:	f100 80a3 	bmi.w	8019476 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8019330:	4596      	cmp	lr, r2
 8019332:	f340 80a0 	ble.w	8019476 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8019336:	f1b9 0f00 	cmp.w	r9, #0
 801933a:	f000 809c 	beq.w	8019476 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801933e:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8019342:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 8019346:	3501      	adds	r5, #1
 8019348:	f100 8099 	bmi.w	801947e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801934c:	45ab      	cmp	fp, r5
 801934e:	f340 8096 	ble.w	801947e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8019352:	2f00      	cmp	r7, #0
 8019354:	f000 8093 	beq.w	801947e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8019358:	2c00      	cmp	r4, #0
 801935a:	f2c0 808e 	blt.w	801947a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801935e:	45a6      	cmp	lr, r4
 8019360:	f340 808b 	ble.w	801947a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 8019364:	f81a 200e 	ldrb.w	r2, [sl, lr]
 8019368:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 801936c:	3401      	adds	r4, #1
 801936e:	f100 8089 	bmi.w	8019484 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8019372:	45a6      	cmp	lr, r4
 8019374:	f340 8086 	ble.w	8019484 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8019378:	f1b9 0f00 	cmp.w	r9, #0
 801937c:	f000 8082 	beq.w	8019484 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8019380:	44d6      	add	lr, sl
 8019382:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8019386:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 801938a:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801938e:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8019392:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8019396:	fb19 fe07 	smulbb	lr, r9, r7
 801939a:	ea44 0808 	orr.w	r8, r4, r8
 801939e:	ea4f 440c 	mov.w	r4, ip, lsl #16
 80193a2:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 80193a6:	f1c7 0210 	rsb	r2, r7, #16
 80193aa:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80193ae:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80193b2:	ea44 0c0c 	orr.w	ip, r4, ip
 80193b6:	eba2 0209 	sub.w	r2, r2, r9
 80193ba:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 80193be:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 80193c2:	fb04 f40c 	mul.w	r4, r4, ip
 80193c6:	fb02 4808 	mla	r8, r2, r8, r4
 80193ca:	041a      	lsls	r2, r3, #16
 80193cc:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80193d0:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80193d4:	4313      	orrs	r3, r2
 80193d6:	042a      	lsls	r2, r5, #16
 80193d8:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80193dc:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80193e0:	fb0e 8303 	mla	r3, lr, r3, r8
 80193e4:	432a      	orrs	r2, r5
 80193e6:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 80193ea:	fb07 3202 	mla	r2, r7, r2, r3
 80193ee:	0d53      	lsrs	r3, r2, #21
 80193f0:	0952      	lsrs	r2, r2, #5
 80193f2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80193f6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80193fa:	431a      	orrs	r2, r3
 80193fc:	b293      	uxth	r3, r2
 80193fe:	b2b4      	uxth	r4, r6
 8019400:	1202      	asrs	r2, r0, #8
 8019402:	43f6      	mvns	r6, r6
 8019404:	b2f6      	uxtb	r6, r6
 8019406:	121d      	asrs	r5, r3, #8
 8019408:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801940c:	fb12 f206 	smulbb	r2, r2, r6
 8019410:	10c7      	asrs	r7, r0, #3
 8019412:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8019416:	00c0      	lsls	r0, r0, #3
 8019418:	fb05 2504 	mla	r5, r5, r4, r2
 801941c:	b2c0      	uxtb	r0, r0
 801941e:	10da      	asrs	r2, r3, #3
 8019420:	00db      	lsls	r3, r3, #3
 8019422:	b2db      	uxtb	r3, r3
 8019424:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019428:	fb10 f006 	smulbb	r0, r0, r6
 801942c:	b2ad      	uxth	r5, r5
 801942e:	fb03 0004 	mla	r0, r3, r4, r0
 8019432:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8019436:	fb17 f706 	smulbb	r7, r7, r6
 801943a:	b280      	uxth	r0, r0
 801943c:	1c6b      	adds	r3, r5, #1
 801943e:	fb02 7204 	mla	r2, r2, r4, r7
 8019442:	b292      	uxth	r2, r2
 8019444:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8019448:	1c43      	adds	r3, r0, #1
 801944a:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801944e:	1c50      	adds	r0, r2, #1
 8019450:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8019454:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8019458:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801945c:	0952      	lsrs	r2, r2, #5
 801945e:	432b      	orrs	r3, r5
 8019460:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019464:	4313      	orrs	r3, r2
 8019466:	800b      	strh	r3, [r1, #0]
 8019468:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801946c:	4680      	mov	r8, r0
 801946e:	e75c      	b.n	801932a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 8019470:	4684      	mov	ip, r0
 8019472:	4680      	mov	r8, r0
 8019474:	e767      	b.n	8019346 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 8019476:	4684      	mov	ip, r0
 8019478:	e765      	b.n	8019346 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801947a:	4605      	mov	r5, r0
 801947c:	e776      	b.n	801936c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 801947e:	4603      	mov	r3, r0
 8019480:	4605      	mov	r5, r0
 8019482:	e782      	b.n	801938a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 8019484:	4603      	mov	r3, r0
 8019486:	e780      	b.n	801938a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

08019488 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019488:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801948c:	b099      	sub	sp, #100	; 0x64
 801948e:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
 8019492:	9215      	str	r2, [sp, #84]	; 0x54
 8019494:	9309      	str	r3, [sp, #36]	; 0x24
 8019496:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8019498:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
 801949c:	930d      	str	r3, [sp, #52]	; 0x34
 801949e:	910c      	str	r1, [sp, #48]	; 0x30
 80194a0:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 80194a4:	9016      	str	r0, [sp, #88]	; 0x58
 80194a6:	6850      	ldr	r0, [r2, #4]
 80194a8:	6812      	ldr	r2, [r2, #0]
 80194aa:	fb00 1303 	mla	r3, r0, r3, r1
 80194ae:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 80194b2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80194b4:	681b      	ldr	r3, [r3, #0]
 80194b6:	930b      	str	r3, [sp, #44]	; 0x2c
 80194b8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80194ba:	685e      	ldr	r6, [r3, #4]
 80194bc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80194be:	43db      	mvns	r3, r3
 80194c0:	b2db      	uxtb	r3, r3
 80194c2:	3604      	adds	r6, #4
 80194c4:	930a      	str	r3, [sp, #40]	; 0x28
 80194c6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80194c8:	2b00      	cmp	r3, #0
 80194ca:	dc03      	bgt.n	80194d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 80194cc:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80194ce:	2b00      	cmp	r3, #0
 80194d0:	f340 8225 	ble.w	801991e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 80194d4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80194d6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80194da:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80194de:	1e48      	subs	r0, r1, #1
 80194e0:	1e57      	subs	r7, r2, #1
 80194e2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80194e4:	2b00      	cmp	r3, #0
 80194e6:	f340 80e3 	ble.w	80196b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 80194ea:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 80194ee:	ea4f 4325 	mov.w	r3, r5, asr #16
 80194f2:	d406      	bmi.n	8019502 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80194f4:	4584      	cmp	ip, r0
 80194f6:	da04      	bge.n	8019502 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80194f8:	2b00      	cmp	r3, #0
 80194fa:	db02      	blt.n	8019502 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80194fc:	42bb      	cmp	r3, r7
 80194fe:	f2c0 80d8 	blt.w	80196b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8019502:	f11c 0c01 	adds.w	ip, ip, #1
 8019506:	f100 80c9 	bmi.w	801969c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801950a:	4561      	cmp	r1, ip
 801950c:	f2c0 80c6 	blt.w	801969c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8019510:	3301      	adds	r3, #1
 8019512:	f100 80c3 	bmi.w	801969c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8019516:	429a      	cmp	r2, r3
 8019518:	f2c0 80c0 	blt.w	801969c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801951c:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8019520:	4647      	mov	r7, r8
 8019522:	f1bb 0f00 	cmp.w	fp, #0
 8019526:	f340 80e3 	ble.w	80196f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 801952a:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801952c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801952e:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8019532:	689b      	ldr	r3, [r3, #8]
 8019534:	ea5f 422a 	movs.w	r2, sl, asr #16
 8019538:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801953c:	f3ca 3003 	ubfx	r0, sl, #12, #4
 8019540:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8019544:	f100 8121 	bmi.w	801978a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8019548:	f103 39ff 	add.w	r9, r3, #4294967295
 801954c:	454a      	cmp	r2, r9
 801954e:	f280 811c 	bge.w	801978a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8019552:	f1bc 0f00 	cmp.w	ip, #0
 8019556:	f2c0 8118 	blt.w	801978a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801955a:	f10e 39ff 	add.w	r9, lr, #4294967295
 801955e:	45cc      	cmp	ip, r9
 8019560:	f280 8113 	bge.w	801978a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8019564:	b21b      	sxth	r3, r3
 8019566:	fb0c 2203 	mla	r2, ip, r3, r2
 801956a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801956c:	eb04 0902 	add.w	r9, r4, r2
 8019570:	5ca2      	ldrb	r2, [r4, r2]
 8019572:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 8019576:	2800      	cmp	r0, #0
 8019578:	f000 80fe 	beq.w	8019778 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801957c:	f899 2001 	ldrb.w	r2, [r9, #1]
 8019580:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8019584:	9211      	str	r2, [sp, #68]	; 0x44
 8019586:	b151      	cbz	r1, 801959e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8019588:	eb09 0203 	add.w	r2, r9, r3
 801958c:	f819 3003 	ldrb.w	r3, [r9, r3]
 8019590:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019594:	930f      	str	r3, [sp, #60]	; 0x3c
 8019596:	7853      	ldrb	r3, [r2, #1]
 8019598:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801959c:	9312      	str	r3, [sp, #72]	; 0x48
 801959e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80195a0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80195a2:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80195a6:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80195aa:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80195ae:	ea4c 0c03 	orr.w	ip, ip, r3
 80195b2:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80195b4:	041b      	lsls	r3, r3, #16
 80195b6:	fb10 f201 	smulbb	r2, r0, r1
 80195ba:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 80195be:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80195c2:	10d2      	asrs	r2, r2, #3
 80195c4:	4323      	orrs	r3, r4
 80195c6:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 80195ca:	4353      	muls	r3, r2
 80195cc:	fb09 330c 	mla	r3, r9, ip, r3
 80195d0:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 80195d4:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80195d8:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80195dc:	ea4c 0e0e 	orr.w	lr, ip, lr
 80195e0:	f1c1 0c10 	rsb	ip, r1, #16
 80195e4:	ebac 0c00 	sub.w	ip, ip, r0
 80195e8:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 80195ec:	fb0c 3c0e 	mla	ip, ip, lr, r3
 80195f0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80195f2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80195f4:	0418      	lsls	r0, r3, #16
 80195f6:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80195fa:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80195fe:	4318      	orrs	r0, r3
 8019600:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8019604:	fb02 c200 	mla	r2, r2, r0, ip
 8019608:	0d53      	lsrs	r3, r2, #21
 801960a:	0952      	lsrs	r2, r2, #5
 801960c:	8838      	ldrh	r0, [r7, #0]
 801960e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019612:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8019616:	431a      	orrs	r2, r3
 8019618:	b292      	uxth	r2, r2
 801961a:	1201      	asrs	r1, r0, #8
 801961c:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 8019620:	ea4f 2c22 	mov.w	ip, r2, asr #8
 8019624:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8019628:	fb11 f104 	smulbb	r1, r1, r4
 801962c:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8019630:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019634:	00c0      	lsls	r0, r0, #3
 8019636:	fb0c 1c03 	mla	ip, ip, r3, r1
 801963a:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801963e:	10d1      	asrs	r1, r2, #3
 8019640:	b2c0      	uxtb	r0, r0
 8019642:	00d2      	lsls	r2, r2, #3
 8019644:	b2d2      	uxtb	r2, r2
 8019646:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801964a:	fb1e fe04 	smulbb	lr, lr, r4
 801964e:	fb10 f004 	smulbb	r0, r0, r4
 8019652:	fa1f fc8c 	uxth.w	ip, ip
 8019656:	fb01 e103 	mla	r1, r1, r3, lr
 801965a:	fb02 0303 	mla	r3, r2, r3, r0
 801965e:	b29a      	uxth	r2, r3
 8019660:	f10c 0301 	add.w	r3, ip, #1
 8019664:	b289      	uxth	r1, r1
 8019666:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801966a:	1c53      	adds	r3, r2, #1
 801966c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8019670:	1c4a      	adds	r2, r1, #1
 8019672:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8019676:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801967a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801967e:	0949      	lsrs	r1, r1, #5
 8019680:	ea43 030c 	orr.w	r3, r3, ip
 8019684:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8019688:	430b      	orrs	r3, r1
 801968a:	803b      	strh	r3, [r7, #0]
 801968c:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801968e:	449a      	add	sl, r3
 8019690:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019692:	3702      	adds	r7, #2
 8019694:	441d      	add	r5, r3
 8019696:	f10b 3bff 	add.w	fp, fp, #4294967295
 801969a:	e742      	b.n	8019522 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801969c:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801969e:	449a      	add	sl, r3
 80196a0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80196a2:	441d      	add	r5, r3
 80196a4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80196a6:	3b01      	subs	r3, #1
 80196a8:	9309      	str	r3, [sp, #36]	; 0x24
 80196aa:	f108 0802 	add.w	r8, r8, #2
 80196ae:	e718      	b.n	80194e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 80196b0:	d023      	beq.n	80196fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 80196b2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80196b4:	9825      	ldr	r0, [sp, #148]	; 0x94
 80196b6:	3b01      	subs	r3, #1
 80196b8:	fb00 a003 	mla	r0, r0, r3, sl
 80196bc:	1400      	asrs	r0, r0, #16
 80196be:	f53f af2d 	bmi.w	801951c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80196c2:	3901      	subs	r1, #1
 80196c4:	4288      	cmp	r0, r1
 80196c6:	f6bf af29 	bge.w	801951c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80196ca:	9926      	ldr	r1, [sp, #152]	; 0x98
 80196cc:	fb01 5303 	mla	r3, r1, r3, r5
 80196d0:	141b      	asrs	r3, r3, #16
 80196d2:	f53f af23 	bmi.w	801951c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80196d6:	3a01      	subs	r2, #1
 80196d8:	4293      	cmp	r3, r2
 80196da:	f6bf af1f 	bge.w	801951c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80196de:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 80196e2:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 80196e6:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 80196ea:	f1be 0f00 	cmp.w	lr, #0
 80196ee:	dc6c      	bgt.n	80197ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 80196f0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80196f2:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80196f6:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 80196fa:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80196fc:	2b00      	cmp	r3, #0
 80196fe:	f340 810e 	ble.w	801991e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 8019702:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019706:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801970a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801970e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8019710:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019714:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019718:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801971c:	eef0 6a62 	vmov.f32	s13, s5
 8019720:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019724:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019728:	ee77 2a62 	vsub.f32	s5, s14, s5
 801972c:	ee16 aa90 	vmov	sl, s13
 8019730:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019734:	eef0 6a43 	vmov.f32	s13, s6
 8019738:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801973c:	ee12 2a90 	vmov	r2, s5
 8019740:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019744:	fb92 f3f3 	sdiv	r3, r2, r3
 8019748:	ee13 2a10 	vmov	r2, s6
 801974c:	9325      	str	r3, [sp, #148]	; 0x94
 801974e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8019750:	fb92 f3f3 	sdiv	r3, r2, r3
 8019754:	9326      	str	r3, [sp, #152]	; 0x98
 8019756:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8019758:	9a15      	ldr	r2, [sp, #84]	; 0x54
 801975a:	3b01      	subs	r3, #1
 801975c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019760:	930c      	str	r3, [sp, #48]	; 0x30
 8019762:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8019764:	bf08      	it	eq
 8019766:	4613      	moveq	r3, r2
 8019768:	ee16 5a90 	vmov	r5, s13
 801976c:	9309      	str	r3, [sp, #36]	; 0x24
 801976e:	eeb0 3a67 	vmov.f32	s6, s15
 8019772:	eef0 2a47 	vmov.f32	s5, s14
 8019776:	e6a6      	b.n	80194c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8019778:	2900      	cmp	r1, #0
 801977a:	f43f af10 	beq.w	801959e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801977e:	f819 3003 	ldrb.w	r3, [r9, r3]
 8019782:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019786:	930f      	str	r3, [sp, #60]	; 0x3c
 8019788:	e709      	b.n	801959e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801978a:	f112 0901 	adds.w	r9, r2, #1
 801978e:	f53f af7d 	bmi.w	801968c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8019792:	454b      	cmp	r3, r9
 8019794:	f6ff af7a 	blt.w	801968c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8019798:	f11c 0901 	adds.w	r9, ip, #1
 801979c:	f53f af76 	bmi.w	801968c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80197a0:	45ce      	cmp	lr, r9
 80197a2:	f6ff af73 	blt.w	801968c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80197a6:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80197a8:	9202      	str	r2, [sp, #8]
 80197aa:	b21b      	sxth	r3, r3
 80197ac:	fa0f f28e 	sxth.w	r2, lr
 80197b0:	e9cd 1405 	strd	r1, r4, [sp, #20]
 80197b4:	e9cd c003 	strd	ip, r0, [sp, #12]
 80197b8:	9201      	str	r2, [sp, #4]
 80197ba:	9300      	str	r3, [sp, #0]
 80197bc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80197be:	9816      	ldr	r0, [sp, #88]	; 0x58
 80197c0:	4633      	mov	r3, r6
 80197c2:	4639      	mov	r1, r7
 80197c4:	f7ff fd8e 	bl	80192e4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 80197c8:	e760      	b.n	801968c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80197ca:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80197cc:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80197ce:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80197d2:	ea4f 422a 	mov.w	r2, sl, asr #16
 80197d6:	1429      	asrs	r1, r5, #16
 80197d8:	fb03 2101 	mla	r1, r3, r1, r2
 80197dc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80197de:	440a      	add	r2, r1
 80197e0:	5c61      	ldrb	r1, [r4, r1]
 80197e2:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 80197e6:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80197ea:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 80197ee:	f1bc 0f00 	cmp.w	ip, #0
 80197f2:	f000 808c 	beq.w	801990e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 80197f6:	7857      	ldrb	r7, [r2, #1]
 80197f8:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 80197fc:	9413      	str	r4, [sp, #76]	; 0x4c
 80197fe:	b140      	cbz	r0, 8019812 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8019800:	18d7      	adds	r7, r2, r3
 8019802:	5cd3      	ldrb	r3, [r2, r3]
 8019804:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019808:	9310      	str	r3, [sp, #64]	; 0x40
 801980a:	787b      	ldrb	r3, [r7, #1]
 801980c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019810:	9314      	str	r3, [sp, #80]	; 0x50
 8019812:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8019814:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8019816:	fb1c f200 	smulbb	r2, ip, r0
 801981a:	041f      	lsls	r7, r3, #16
 801981c:	10d2      	asrs	r2, r2, #3
 801981e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8019822:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 8019826:	431f      	orrs	r7, r3
 8019828:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 801982c:	9317      	str	r3, [sp, #92]	; 0x5c
 801982e:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8019830:	041b      	lsls	r3, r3, #16
 8019832:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 8019836:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801983a:	ea43 030b 	orr.w	r3, r3, fp
 801983e:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8019840:	4353      	muls	r3, r2
 8019842:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8019846:	fb04 3707 	mla	r7, r4, r7, r3
 801984a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801984e:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8019852:	ea43 0b01 	orr.w	fp, r3, r1
 8019856:	f1c0 0110 	rsb	r1, r0, #16
 801985a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801985c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801985e:	eba1 0c0c 	sub.w	ip, r1, ip
 8019862:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8019866:	fb0c 770b 	mla	r7, ip, fp, r7
 801986a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801986e:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 8019872:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8019876:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801987a:	ea4c 0c0b 	orr.w	ip, ip, fp
 801987e:	fb02 770c 	mla	r7, r2, ip, r7
 8019882:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8019884:	0d79      	lsrs	r1, r7, #21
 8019886:	097f      	lsrs	r7, r7, #5
 8019888:	8812      	ldrh	r2, [r2, #0]
 801988a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801988e:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8019892:	430f      	orrs	r7, r1
 8019894:	b2bb      	uxth	r3, r7
 8019896:	1211      	asrs	r1, r2, #8
 8019898:	1218      	asrs	r0, r3, #8
 801989a:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801989e:	fb11 f104 	smulbb	r1, r1, r4
 80198a2:	10d7      	asrs	r7, r2, #3
 80198a4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80198a8:	00d2      	lsls	r2, r2, #3
 80198aa:	fb00 1009 	mla	r0, r0, r9, r1
 80198ae:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80198b2:	10d9      	asrs	r1, r3, #3
 80198b4:	b2d2      	uxtb	r2, r2
 80198b6:	00db      	lsls	r3, r3, #3
 80198b8:	fb17 f704 	smulbb	r7, r7, r4
 80198bc:	fb12 f204 	smulbb	r2, r2, r4
 80198c0:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80198c4:	b2db      	uxtb	r3, r3
 80198c6:	b280      	uxth	r0, r0
 80198c8:	fb01 7109 	mla	r1, r1, r9, r7
 80198cc:	fb03 2309 	mla	r3, r3, r9, r2
 80198d0:	b29b      	uxth	r3, r3
 80198d2:	b289      	uxth	r1, r1
 80198d4:	1c42      	adds	r2, r0, #1
 80198d6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80198da:	1c4f      	adds	r7, r1, #1
 80198dc:	1c5a      	adds	r2, r3, #1
 80198de:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 80198e2:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 80198e6:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 80198ea:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80198ee:	0949      	lsrs	r1, r1, #5
 80198f0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80198f2:	4310      	orrs	r0, r2
 80198f4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80198f8:	4308      	orrs	r0, r1
 80198fa:	f823 0b02 	strh.w	r0, [r3], #2
 80198fe:	930e      	str	r3, [sp, #56]	; 0x38
 8019900:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8019902:	449a      	add	sl, r3
 8019904:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019906:	f10e 3eff 	add.w	lr, lr, #4294967295
 801990a:	441d      	add	r5, r3
 801990c:	e6ed      	b.n	80196ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 801990e:	2800      	cmp	r0, #0
 8019910:	f43f af7f 	beq.w	8019812 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8019914:	5cd3      	ldrb	r3, [r2, r3]
 8019916:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801991a:	9310      	str	r3, [sp, #64]	; 0x40
 801991c:	e779      	b.n	8019812 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801991e:	b019      	add	sp, #100	; 0x64
 8019920:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019924 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8019924:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8019928:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
 801992c:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 8019930:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 8019934:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 8019938:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 801993c:	8808      	ldrh	r0, [r1, #0]
 801993e:	fb08 470e 	mla	r7, r8, lr, r4
 8019942:	f1b8 0f00 	cmp.w	r8, #0
 8019946:	eb02 0907 	add.w	r9, r2, r7
 801994a:	db67      	blt.n	8019a1c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801994c:	45c2      	cmp	sl, r8
 801994e:	dd65      	ble.n	8019a1c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8019950:	2c00      	cmp	r4, #0
 8019952:	db61      	blt.n	8019a18 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8019954:	45a6      	cmp	lr, r4
 8019956:	dd5f      	ble.n	8019a18 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8019958:	5dd2      	ldrb	r2, [r2, r7]
 801995a:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801995e:	1c62      	adds	r2, r4, #1
 8019960:	d45f      	bmi.n	8019a22 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8019962:	4596      	cmp	lr, r2
 8019964:	dd5d      	ble.n	8019a22 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8019966:	2d00      	cmp	r5, #0
 8019968:	d05b      	beq.n	8019a22 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801996a:	f899 2001 	ldrb.w	r2, [r9, #1]
 801996e:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8019972:	f118 0801 	adds.w	r8, r8, #1
 8019976:	d458      	bmi.n	8019a2a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8019978:	45c2      	cmp	sl, r8
 801997a:	dd56      	ble.n	8019a2a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801997c:	2e00      	cmp	r6, #0
 801997e:	d054      	beq.n	8019a2a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8019980:	2c00      	cmp	r4, #0
 8019982:	db50      	blt.n	8019a26 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8019984:	45a6      	cmp	lr, r4
 8019986:	dd4e      	ble.n	8019a26 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8019988:	f819 200e 	ldrb.w	r2, [r9, lr]
 801998c:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8019990:	3401      	adds	r4, #1
 8019992:	d407      	bmi.n	80199a4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8019994:	45a6      	cmp	lr, r4
 8019996:	dd05      	ble.n	80199a4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8019998:	b125      	cbz	r5, 80199a4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801999a:	44ce      	add	lr, r9
 801999c:	f89e 0001 	ldrb.w	r0, [lr, #1]
 80199a0:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 80199a4:	ea4f 430c 	mov.w	r3, ip, lsl #16
 80199a8:	fb15 f406 	smulbb	r4, r5, r6
 80199ac:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80199b0:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 80199b4:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80199b8:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 80199bc:	ea43 0c0c 	orr.w	ip, r3, ip
 80199c0:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80199c4:	f1c6 0310 	rsb	r3, r6, #16
 80199c8:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80199cc:	1b5b      	subs	r3, r3, r5
 80199ce:	ea4e 0707 	orr.w	r7, lr, r7
 80199d2:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 80199d6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80199da:	437d      	muls	r5, r7
 80199dc:	fb03 5c0c 	mla	ip, r3, ip, r5
 80199e0:	0403      	lsls	r3, r0, #16
 80199e2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80199e6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80199ea:	4318      	orrs	r0, r3
 80199ec:	0413      	lsls	r3, r2, #16
 80199ee:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80199f2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80199f6:	4313      	orrs	r3, r2
 80199f8:	fb04 c000 	mla	r0, r4, r0, ip
 80199fc:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8019a00:	fb06 0003 	mla	r0, r6, r3, r0
 8019a04:	0d43      	lsrs	r3, r0, #21
 8019a06:	0940      	lsrs	r0, r0, #5
 8019a08:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019a0c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8019a10:	4318      	orrs	r0, r3
 8019a12:	8008      	strh	r0, [r1, #0]
 8019a14:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8019a18:	4684      	mov	ip, r0
 8019a1a:	e7a0      	b.n	801995e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 8019a1c:	4607      	mov	r7, r0
 8019a1e:	4684      	mov	ip, r0
 8019a20:	e7a7      	b.n	8019972 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 8019a22:	4607      	mov	r7, r0
 8019a24:	e7a5      	b.n	8019972 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 8019a26:	4602      	mov	r2, r0
 8019a28:	e7b2      	b.n	8019990 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 8019a2a:	4602      	mov	r2, r0
 8019a2c:	e7ba      	b.n	80199a4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

08019a2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019a2e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019a32:	b093      	sub	sp, #76	; 0x4c
 8019a34:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8019a38:	920f      	str	r2, [sp, #60]	; 0x3c
 8019a3a:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8019a3c:	9108      	str	r1, [sp, #32]
 8019a3e:	9306      	str	r3, [sp, #24]
 8019a40:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8019a44:	9010      	str	r0, [sp, #64]	; 0x40
 8019a46:	6850      	ldr	r0, [r2, #4]
 8019a48:	6812      	ldr	r2, [r2, #0]
 8019a4a:	fb00 1303 	mla	r3, r0, r3, r1
 8019a4e:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8019a52:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019a54:	681b      	ldr	r3, [r3, #0]
 8019a56:	9307      	str	r3, [sp, #28]
 8019a58:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019a5a:	685f      	ldr	r7, [r3, #4]
 8019a5c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019a60:	3704      	adds	r7, #4
 8019a62:	9b08      	ldr	r3, [sp, #32]
 8019a64:	2b00      	cmp	r3, #0
 8019a66:	dc03      	bgt.n	8019a70 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8019a68:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019a6a:	2b00      	cmp	r3, #0
 8019a6c:	f340 81b2 	ble.w	8019dd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8019a70:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019a72:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019a76:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8019a7a:	1e48      	subs	r0, r1, #1
 8019a7c:	f102 3cff 	add.w	ip, r2, #4294967295
 8019a80:	9b06      	ldr	r3, [sp, #24]
 8019a82:	2b00      	cmp	r3, #0
 8019a84:	f340 80a9 	ble.w	8019bda <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 8019a88:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8019a8c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8019a90:	d406      	bmi.n	8019aa0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019a92:	4586      	cmp	lr, r0
 8019a94:	da04      	bge.n	8019aa0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019a96:	2b00      	cmp	r3, #0
 8019a98:	db02      	blt.n	8019aa0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019a9a:	4563      	cmp	r3, ip
 8019a9c:	f2c0 809e 	blt.w	8019bdc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8019aa0:	f11e 0e01 	adds.w	lr, lr, #1
 8019aa4:	f100 808f 	bmi.w	8019bc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019aa8:	4571      	cmp	r1, lr
 8019aaa:	f2c0 808c 	blt.w	8019bc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019aae:	3301      	adds	r3, #1
 8019ab0:	f100 8089 	bmi.w	8019bc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019ab4:	429a      	cmp	r2, r3
 8019ab6:	f2c0 8086 	blt.w	8019bc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019aba:	f8dd b018 	ldr.w	fp, [sp, #24]
 8019abe:	46c8      	mov	r8, r9
 8019ac0:	f1bb 0f00 	cmp.w	fp, #0
 8019ac4:	f340 80a6 	ble.w	8019c14 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8019ac8:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8019aca:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019acc:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8019ad0:	689b      	ldr	r3, [r3, #8]
 8019ad2:	1422      	asrs	r2, r4, #16
 8019ad4:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8019ad8:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8019adc:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8019ae0:	f100 80e3 	bmi.w	8019caa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8019ae4:	f103 3aff 	add.w	sl, r3, #4294967295
 8019ae8:	4552      	cmp	r2, sl
 8019aea:	f280 80de 	bge.w	8019caa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8019aee:	f1bc 0f00 	cmp.w	ip, #0
 8019af2:	f2c0 80da 	blt.w	8019caa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8019af6:	f10e 3aff 	add.w	sl, lr, #4294967295
 8019afa:	45d4      	cmp	ip, sl
 8019afc:	f280 80d5 	bge.w	8019caa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8019b00:	b21b      	sxth	r3, r3
 8019b02:	fb0c 2203 	mla	r2, ip, r3, r2
 8019b06:	9d07      	ldr	r5, [sp, #28]
 8019b08:	eb05 0a02 	add.w	sl, r5, r2
 8019b0c:	5caa      	ldrb	r2, [r5, r2]
 8019b0e:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 8019b12:	2800      	cmp	r0, #0
 8019b14:	f000 80c0 	beq.w	8019c98 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 8019b18:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8019b1c:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 8019b20:	920b      	str	r2, [sp, #44]	; 0x2c
 8019b22:	b151      	cbz	r1, 8019b3a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8019b24:	eb0a 0203 	add.w	r2, sl, r3
 8019b28:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8019b2c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8019b30:	9309      	str	r3, [sp, #36]	; 0x24
 8019b32:	7853      	ldrb	r3, [r2, #1]
 8019b34:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8019b38:	930c      	str	r3, [sp, #48]	; 0x30
 8019b3a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019b3c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8019b3e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8019b42:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8019b46:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8019b4a:	ea4c 0c03 	orr.w	ip, ip, r3
 8019b4e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8019b50:	041b      	lsls	r3, r3, #16
 8019b52:	fb10 f201 	smulbb	r2, r0, r1
 8019b56:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8019b5a:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8019b5e:	10d2      	asrs	r2, r2, #3
 8019b60:	432b      	orrs	r3, r5
 8019b62:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 8019b66:	4353      	muls	r3, r2
 8019b68:	fb0a 330c 	mla	r3, sl, ip, r3
 8019b6c:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8019b70:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8019b74:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8019b78:	ea4c 0e0e 	orr.w	lr, ip, lr
 8019b7c:	f1c1 0c10 	rsb	ip, r1, #16
 8019b80:	ebac 0c00 	sub.w	ip, ip, r0
 8019b84:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8019b88:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8019b8c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019b8e:	0418      	lsls	r0, r3, #16
 8019b90:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8019b94:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8019b98:	4318      	orrs	r0, r3
 8019b9a:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8019b9e:	fb02 c200 	mla	r2, r2, r0, ip
 8019ba2:	0d53      	lsrs	r3, r2, #21
 8019ba4:	0952      	lsrs	r2, r2, #5
 8019ba6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019baa:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8019bae:	431a      	orrs	r2, r3
 8019bb0:	f8a8 2000 	strh.w	r2, [r8]
 8019bb4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8019bb6:	441c      	add	r4, r3
 8019bb8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019bba:	f108 0802 	add.w	r8, r8, #2
 8019bbe:	441e      	add	r6, r3
 8019bc0:	f10b 3bff 	add.w	fp, fp, #4294967295
 8019bc4:	e77c      	b.n	8019ac0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8019bc6:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8019bc8:	441c      	add	r4, r3
 8019bca:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019bcc:	441e      	add	r6, r3
 8019bce:	9b06      	ldr	r3, [sp, #24]
 8019bd0:	3b01      	subs	r3, #1
 8019bd2:	9306      	str	r3, [sp, #24]
 8019bd4:	f109 0902 	add.w	r9, r9, #2
 8019bd8:	e752      	b.n	8019a80 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8019bda:	d020      	beq.n	8019c1e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8019bdc:	9b06      	ldr	r3, [sp, #24]
 8019bde:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8019be0:	3b01      	subs	r3, #1
 8019be2:	fb00 4003 	mla	r0, r0, r3, r4
 8019be6:	1400      	asrs	r0, r0, #16
 8019be8:	f53f af67 	bmi.w	8019aba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8019bec:	3901      	subs	r1, #1
 8019bee:	4288      	cmp	r0, r1
 8019bf0:	f6bf af63 	bge.w	8019aba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8019bf4:	9920      	ldr	r1, [sp, #128]	; 0x80
 8019bf6:	fb01 6303 	mla	r3, r1, r3, r6
 8019bfa:	141b      	asrs	r3, r3, #16
 8019bfc:	f53f af5d 	bmi.w	8019aba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8019c00:	3a01      	subs	r2, #1
 8019c02:	4293      	cmp	r3, r2
 8019c04:	f6bf af59 	bge.w	8019aba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8019c08:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8019c0c:	46ca      	mov	sl, r9
 8019c0e:	f1b8 0f00 	cmp.w	r8, #0
 8019c12:	dc67      	bgt.n	8019ce4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8019c14:	9b06      	ldr	r3, [sp, #24]
 8019c16:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8019c1a:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8019c1e:	9b08      	ldr	r3, [sp, #32]
 8019c20:	2b00      	cmp	r3, #0
 8019c22:	f340 80d7 	ble.w	8019dd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8019c26:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019c2a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019c2e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019c32:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8019c34:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019c38:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019c3c:	eeb0 6a62 	vmov.f32	s12, s5
 8019c40:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019c44:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019c48:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019c4c:	ee16 4a10 	vmov	r4, s12
 8019c50:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019c54:	eeb0 6a43 	vmov.f32	s12, s6
 8019c58:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019c5c:	ee12 2a90 	vmov	r2, s5
 8019c60:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019c64:	fb92 f3f3 	sdiv	r3, r2, r3
 8019c68:	ee13 2a10 	vmov	r2, s6
 8019c6c:	931f      	str	r3, [sp, #124]	; 0x7c
 8019c6e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8019c70:	fb92 f3f3 	sdiv	r3, r2, r3
 8019c74:	9320      	str	r3, [sp, #128]	; 0x80
 8019c76:	9b08      	ldr	r3, [sp, #32]
 8019c78:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019c7a:	3b01      	subs	r3, #1
 8019c7c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019c80:	9308      	str	r3, [sp, #32]
 8019c82:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8019c84:	bf08      	it	eq
 8019c86:	4613      	moveq	r3, r2
 8019c88:	ee16 6a10 	vmov	r6, s12
 8019c8c:	9306      	str	r3, [sp, #24]
 8019c8e:	eeb0 3a67 	vmov.f32	s6, s15
 8019c92:	eef0 2a47 	vmov.f32	s5, s14
 8019c96:	e6e4      	b.n	8019a62 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8019c98:	2900      	cmp	r1, #0
 8019c9a:	f43f af4e 	beq.w	8019b3a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8019c9e:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8019ca2:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8019ca6:	9309      	str	r3, [sp, #36]	; 0x24
 8019ca8:	e747      	b.n	8019b3a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8019caa:	f112 0a01 	adds.w	sl, r2, #1
 8019cae:	d481      	bmi.n	8019bb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019cb0:	4553      	cmp	r3, sl
 8019cb2:	f6ff af7f 	blt.w	8019bb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019cb6:	f11c 0a01 	adds.w	sl, ip, #1
 8019cba:	f53f af7b 	bmi.w	8019bb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019cbe:	45d6      	cmp	lr, sl
 8019cc0:	f6ff af78 	blt.w	8019bb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019cc4:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 8019cc8:	b21b      	sxth	r3, r3
 8019cca:	fa0f f28e 	sxth.w	r2, lr
 8019cce:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8019cd2:	9201      	str	r2, [sp, #4]
 8019cd4:	9300      	str	r3, [sp, #0]
 8019cd6:	9a07      	ldr	r2, [sp, #28]
 8019cd8:	9810      	ldr	r0, [sp, #64]	; 0x40
 8019cda:	463b      	mov	r3, r7
 8019cdc:	4641      	mov	r1, r8
 8019cde:	f7ff fe21 	bl	8019924 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8019ce2:	e767      	b.n	8019bb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019ce4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019ce6:	9d07      	ldr	r5, [sp, #28]
 8019ce8:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8019cec:	1422      	asrs	r2, r4, #16
 8019cee:	1431      	asrs	r1, r6, #16
 8019cf0:	fb03 2101 	mla	r1, r3, r1, r2
 8019cf4:	9a07      	ldr	r2, [sp, #28]
 8019cf6:	440a      	add	r2, r1
 8019cf8:	5c69      	ldrb	r1, [r5, r1]
 8019cfa:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 8019cfe:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8019d02:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 8019d06:	f1be 0f00 	cmp.w	lr, #0
 8019d0a:	d05c      	beq.n	8019dc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8019d0c:	f892 c001 	ldrb.w	ip, [r2, #1]
 8019d10:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 8019d14:	950d      	str	r5, [sp, #52]	; 0x34
 8019d16:	b150      	cbz	r0, 8019d2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8019d18:	eb02 0c03 	add.w	ip, r2, r3
 8019d1c:	5cd3      	ldrb	r3, [r2, r3]
 8019d1e:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8019d22:	930a      	str	r3, [sp, #40]	; 0x28
 8019d24:	f89c 3001 	ldrb.w	r3, [ip, #1]
 8019d28:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8019d2c:	930e      	str	r3, [sp, #56]	; 0x38
 8019d2e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019d30:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8019d32:	fb1e f200 	smulbb	r2, lr, r0
 8019d36:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8019d3a:	10d2      	asrs	r2, r2, #3
 8019d3c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8019d40:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8019d44:	ea4c 0c03 	orr.w	ip, ip, r3
 8019d48:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 8019d4c:	9311      	str	r3, [sp, #68]	; 0x44
 8019d4e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019d50:	041b      	lsls	r3, r3, #16
 8019d52:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 8019d56:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8019d5a:	ea43 030b 	orr.w	r3, r3, fp
 8019d5e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8019d60:	4353      	muls	r3, r2
 8019d62:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8019d66:	fb05 3c0c 	mla	ip, r5, ip, r3
 8019d6a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8019d6e:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8019d72:	ea43 0b01 	orr.w	fp, r3, r1
 8019d76:	f1c0 0110 	rsb	r1, r0, #16
 8019d7a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019d7c:	eba1 0e0e 	sub.w	lr, r1, lr
 8019d80:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8019d84:	fb0e cc0b 	mla	ip, lr, fp, ip
 8019d88:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8019d8c:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 8019d90:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8019d94:	ea4b 0e0e 	orr.w	lr, fp, lr
 8019d98:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8019d9c:	fb02 cc0e 	mla	ip, r2, lr, ip
 8019da0:	ea4f 535c 	mov.w	r3, ip, lsr #21
 8019da4:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8019da8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019dac:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8019db0:	ea43 0c0c 	orr.w	ip, r3, ip
 8019db4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8019db6:	f82a cb02 	strh.w	ip, [sl], #2
 8019dba:	441c      	add	r4, r3
 8019dbc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019dbe:	f108 38ff 	add.w	r8, r8, #4294967295
 8019dc2:	441e      	add	r6, r3
 8019dc4:	e723      	b.n	8019c0e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8019dc6:	2800      	cmp	r0, #0
 8019dc8:	d0b1      	beq.n	8019d2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8019dca:	5cd3      	ldrb	r3, [r2, r3]
 8019dcc:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8019dd0:	930a      	str	r3, [sp, #40]	; 0x28
 8019dd2:	e7ac      	b.n	8019d2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8019dd4:	b013      	add	sp, #76	; 0x4c
 8019dd6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019dda <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 8019dda:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019dde:	880d      	ldrh	r5, [r1, #0]
 8019de0:	b087      	sub	sp, #28
 8019de2:	10ef      	asrs	r7, r5, #3
 8019de4:	ea4f 2a25 	mov.w	sl, r5, asr #8
 8019de8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019dec:	00ed      	lsls	r5, r5, #3
 8019dee:	9701      	str	r7, [sp, #4]
 8019df0:	b2ed      	uxtb	r5, r5
 8019df2:	9502      	str	r5, [sp, #8]
 8019df4:	9d01      	ldr	r5, [sp, #4]
 8019df6:	9103      	str	r1, [sp, #12]
 8019df8:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 8019dfc:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
 8019e00:	9902      	ldr	r1, [sp, #8]
 8019e02:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 8019e06:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 8019e0a:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
 8019e0e:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
 8019e12:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
 8019e16:	022d      	lsls	r5, r5, #8
 8019e18:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 8019e1c:	fb06 0709 	mla	r7, r6, r9, r0
 8019e20:	430d      	orrs	r5, r1
 8019e22:	2e00      	cmp	r6, #0
 8019e24:	eb02 0c07 	add.w	ip, r2, r7
 8019e28:	9505      	str	r5, [sp, #20]
 8019e2a:	f2c0 80b6 	blt.w	8019f9a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 8019e2e:	45b3      	cmp	fp, r6
 8019e30:	f340 80b3 	ble.w	8019f9a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 8019e34:	2800      	cmp	r0, #0
 8019e36:	f2c0 80ae 	blt.w	8019f96 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8019e3a:	4581      	cmp	r9, r0
 8019e3c:	f340 80ab 	ble.w	8019f96 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8019e40:	5dd7      	ldrb	r7, [r2, r7]
 8019e42:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8019e46:	441f      	add	r7, r3
 8019e48:	1c42      	adds	r2, r0, #1
 8019e4a:	f100 80a9 	bmi.w	8019fa0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8019e4e:	4591      	cmp	r9, r2
 8019e50:	f340 80a6 	ble.w	8019fa0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8019e54:	2c00      	cmp	r4, #0
 8019e56:	f000 80a3 	beq.w	8019fa0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8019e5a:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8019e5e:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8019e62:	441d      	add	r5, r3
 8019e64:	3601      	adds	r6, #1
 8019e66:	f100 809f 	bmi.w	8019fa8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8019e6a:	45b3      	cmp	fp, r6
 8019e6c:	f340 809c 	ble.w	8019fa8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8019e70:	f1be 0f00 	cmp.w	lr, #0
 8019e74:	f000 8098 	beq.w	8019fa8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8019e78:	2800      	cmp	r0, #0
 8019e7a:	f2c0 8093 	blt.w	8019fa4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8019e7e:	4581      	cmp	r9, r0
 8019e80:	f340 8090 	ble.w	8019fa4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8019e84:	f81c 6009 	ldrb.w	r6, [ip, r9]
 8019e88:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8019e8c:	441e      	add	r6, r3
 8019e8e:	3001      	adds	r0, #1
 8019e90:	f100 808d 	bmi.w	8019fae <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8019e94:	4581      	cmp	r9, r0
 8019e96:	f340 808a 	ble.w	8019fae <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8019e9a:	2c00      	cmp	r4, #0
 8019e9c:	f000 8087 	beq.w	8019fae <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8019ea0:	44e1      	add	r9, ip
 8019ea2:	f899 2001 	ldrb.w	r2, [r9, #1]
 8019ea6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8019eaa:	4413      	add	r3, r2
 8019eac:	b2a4      	uxth	r4, r4
 8019eae:	fa1f fe8e 	uxth.w	lr, lr
 8019eb2:	fb04 fb0e 	mul.w	fp, r4, lr
 8019eb6:	0124      	lsls	r4, r4, #4
 8019eb8:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 8019ebc:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
 8019ec0:	eba4 040b 	sub.w	r4, r4, fp
 8019ec4:	fa1f f08e 	uxth.w	r0, lr
 8019ec8:	b2a2      	uxth	r2, r4
 8019eca:	78ac      	ldrb	r4, [r5, #2]
 8019ecc:	f897 c002 	ldrb.w	ip, [r7, #2]
 8019ed0:	9901      	ldr	r1, [sp, #4]
 8019ed2:	eba9 0900 	sub.w	r9, r9, r0
 8019ed6:	fa1f f989 	uxth.w	r9, r9
 8019eda:	4354      	muls	r4, r2
 8019edc:	fb09 440c 	mla	r4, r9, ip, r4
 8019ee0:	f896 c002 	ldrb.w	ip, [r6, #2]
 8019ee4:	fb00 440c 	mla	r4, r0, ip, r4
 8019ee8:	f893 c002 	ldrb.w	ip, [r3, #2]
 8019eec:	fa1f fe88 	uxth.w	lr, r8
 8019ef0:	ea6f 0808 	mvn.w	r8, r8
 8019ef4:	fa5f f888 	uxtb.w	r8, r8
 8019ef8:	fb0b 4c0c 	mla	ip, fp, ip, r4
 8019efc:	fb1a fa08 	smulbb	sl, sl, r8
 8019f00:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8019f04:	fb0c ac0e 	mla	ip, ip, lr, sl
 8019f08:	f895 a001 	ldrb.w	sl, [r5, #1]
 8019f0c:	787c      	ldrb	r4, [r7, #1]
 8019f0e:	782d      	ldrb	r5, [r5, #0]
 8019f10:	783f      	ldrb	r7, [r7, #0]
 8019f12:	fb02 fa0a 	mul.w	sl, r2, sl
 8019f16:	fb09 aa04 	mla	sl, r9, r4, sl
 8019f1a:	7874      	ldrb	r4, [r6, #1]
 8019f1c:	436a      	muls	r2, r5
 8019f1e:	7835      	ldrb	r5, [r6, #0]
 8019f20:	fb00 aa04 	mla	sl, r0, r4, sl
 8019f24:	fb09 2207 	mla	r2, r9, r7, r2
 8019f28:	785c      	ldrb	r4, [r3, #1]
 8019f2a:	781b      	ldrb	r3, [r3, #0]
 8019f2c:	fb00 2005 	mla	r0, r0, r5, r2
 8019f30:	fb0b a404 	mla	r4, fp, r4, sl
 8019f34:	fb0b 0b03 	mla	fp, fp, r3, r0
 8019f38:	9b02      	ldr	r3, [sp, #8]
 8019f3a:	fb11 fa08 	smulbb	sl, r1, r8
 8019f3e:	fa1f fc8c 	uxth.w	ip, ip
 8019f42:	fb13 f808 	smulbb	r8, r3, r8
 8019f46:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 8019f4a:	f3c4 2407 	ubfx	r4, r4, #8, #8
 8019f4e:	fb04 a40e 	mla	r4, r4, lr, sl
 8019f52:	f10c 0301 	add.w	r3, ip, #1
 8019f56:	fb0b 8e0e 	mla	lr, fp, lr, r8
 8019f5a:	fa1f fe8e 	uxth.w	lr, lr
 8019f5e:	b2a4      	uxth	r4, r4
 8019f60:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8019f64:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
 8019f68:	f104 0a01 	add.w	sl, r4, #1
 8019f6c:	f10e 0c01 	add.w	ip, lr, #1
 8019f70:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8019f74:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8019f78:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8019f7c:	0964      	lsrs	r4, r4, #5
 8019f7e:	ea4c 0c03 	orr.w	ip, ip, r3
 8019f82:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8019f86:	9b03      	ldr	r3, [sp, #12]
 8019f88:	ea4c 0c04 	orr.w	ip, ip, r4
 8019f8c:	f8a3 c000 	strh.w	ip, [r3]
 8019f90:	b007      	add	sp, #28
 8019f92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019f96:	af05      	add	r7, sp, #20
 8019f98:	e756      	b.n	8019e48 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 8019f9a:	ad05      	add	r5, sp, #20
 8019f9c:	462f      	mov	r7, r5
 8019f9e:	e761      	b.n	8019e64 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 8019fa0:	ad05      	add	r5, sp, #20
 8019fa2:	e75f      	b.n	8019e64 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 8019fa4:	ae05      	add	r6, sp, #20
 8019fa6:	e772      	b.n	8019e8e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 8019fa8:	ab05      	add	r3, sp, #20
 8019faa:	461e      	mov	r6, r3
 8019fac:	e77e      	b.n	8019eac <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 8019fae:	ab05      	add	r3, sp, #20
 8019fb0:	e77c      	b.n	8019eac <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

08019fb2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019fb2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019fb6:	b095      	sub	sp, #84	; 0x54
 8019fb8:	9212      	str	r2, [sp, #72]	; 0x48
 8019fba:	9309      	str	r3, [sp, #36]	; 0x24
 8019fbc:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8019fbe:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 8019fc2:	930f      	str	r3, [sp, #60]	; 0x3c
 8019fc4:	910e      	str	r1, [sp, #56]	; 0x38
 8019fc6:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
 8019fca:	9013      	str	r0, [sp, #76]	; 0x4c
 8019fcc:	6850      	ldr	r0, [r2, #4]
 8019fce:	6812      	ldr	r2, [r2, #0]
 8019fd0:	fb00 1303 	mla	r3, r0, r3, r1
 8019fd4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8019fd8:	930a      	str	r3, [sp, #40]	; 0x28
 8019fda:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019fdc:	681b      	ldr	r3, [r3, #0]
 8019fde:	930d      	str	r3, [sp, #52]	; 0x34
 8019fe0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019fe2:	685c      	ldr	r4, [r3, #4]
 8019fe4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019fe6:	43db      	mvns	r3, r3
 8019fe8:	b2db      	uxtb	r3, r3
 8019fea:	3404      	adds	r4, #4
 8019fec:	930b      	str	r3, [sp, #44]	; 0x2c
 8019fee:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019ff0:	2b00      	cmp	r3, #0
 8019ff2:	dc03      	bgt.n	8019ffc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8019ff4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8019ff6:	2b00      	cmp	r3, #0
 8019ff8:	f340 8255 	ble.w	801a4a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 8019ffc:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019ffe:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a002:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a006:	1e48      	subs	r0, r1, #1
 801a008:	1e55      	subs	r5, r2, #1
 801a00a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a00c:	2b00      	cmp	r3, #0
 801a00e:	f340 80f9 	ble.w	801a204 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801a012:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 801a014:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a016:	1436      	asrs	r6, r6, #16
 801a018:	ea4f 4323 	mov.w	r3, r3, asr #16
 801a01c:	d406      	bmi.n	801a02c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801a01e:	4286      	cmp	r6, r0
 801a020:	da04      	bge.n	801a02c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801a022:	2b00      	cmp	r3, #0
 801a024:	db02      	blt.n	801a02c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801a026:	42ab      	cmp	r3, r5
 801a028:	f2c0 80ed 	blt.w	801a206 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 801a02c:	3601      	adds	r6, #1
 801a02e:	f100 80da 	bmi.w	801a1e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801a032:	42b1      	cmp	r1, r6
 801a034:	f2c0 80d7 	blt.w	801a1e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801a038:	3301      	adds	r3, #1
 801a03a:	f100 80d4 	bmi.w	801a1e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801a03e:	429a      	cmp	r2, r3
 801a040:	f2c0 80d1 	blt.w	801a1e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801a044:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a046:	9311      	str	r3, [sp, #68]	; 0x44
 801a048:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a04a:	930c      	str	r3, [sp, #48]	; 0x30
 801a04c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801a04e:	2b00      	cmp	r3, #0
 801a050:	f340 80fa 	ble.w	801a248 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801a054:	9826      	ldr	r0, [sp, #152]	; 0x98
 801a056:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a058:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801a05a:	68c6      	ldr	r6, [r0, #12]
 801a05c:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801a05e:	141d      	asrs	r5, r3, #16
 801a060:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801a064:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801a066:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801a068:	1400      	asrs	r0, r0, #16
 801a06a:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801a06e:	6892      	ldr	r2, [r2, #8]
 801a070:	f100 813e 	bmi.w	801a2f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801a074:	1e57      	subs	r7, r2, #1
 801a076:	42b8      	cmp	r0, r7
 801a078:	f280 813a 	bge.w	801a2f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801a07c:	2d00      	cmp	r5, #0
 801a07e:	f2c0 8137 	blt.w	801a2f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801a082:	1e77      	subs	r7, r6, #1
 801a084:	42bd      	cmp	r5, r7
 801a086:	f280 8133 	bge.w	801a2f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801a08a:	b212      	sxth	r2, r2
 801a08c:	fb05 0002 	mla	r0, r5, r2, r0
 801a090:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801a092:	f815 a000 	ldrb.w	sl, [r5, r0]
 801a096:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 801a09a:	182e      	adds	r6, r5, r0
 801a09c:	eb04 050a 	add.w	r5, r4, sl
 801a0a0:	2b00      	cmp	r3, #0
 801a0a2:	f000 8117 	beq.w	801a2d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 801a0a6:	f896 c001 	ldrb.w	ip, [r6, #1]
 801a0aa:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801a0ae:	44a4      	add	ip, r4
 801a0b0:	2900      	cmp	r1, #0
 801a0b2:	f000 8117 	beq.w	801a2e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 801a0b6:	18b0      	adds	r0, r6, r2
 801a0b8:	5cb2      	ldrb	r2, [r6, r2]
 801a0ba:	7840      	ldrb	r0, [r0, #1]
 801a0bc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a0c0:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801a0c4:	4422      	add	r2, r4
 801a0c6:	4420      	add	r0, r4
 801a0c8:	b29b      	uxth	r3, r3
 801a0ca:	b289      	uxth	r1, r1
 801a0cc:	fb03 f901 	mul.w	r9, r3, r1
 801a0d0:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801a0d4:	011b      	lsls	r3, r3, #4
 801a0d6:	b289      	uxth	r1, r1
 801a0d8:	f89c 7002 	ldrb.w	r7, [ip, #2]
 801a0dc:	f895 b002 	ldrb.w	fp, [r5, #2]
 801a0e0:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801a0e2:	f814 a00a 	ldrb.w	sl, [r4, sl]
 801a0e6:	f8b6 e000 	ldrh.w	lr, [r6]
 801a0ea:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 801a0ee:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 801a0f2:	eba3 0309 	sub.w	r3, r3, r9
 801a0f6:	b29b      	uxth	r3, r3
 801a0f8:	eba8 0801 	sub.w	r8, r8, r1
 801a0fc:	fa1f f888 	uxth.w	r8, r8
 801a100:	435f      	muls	r7, r3
 801a102:	fb08 770b 	mla	r7, r8, fp, r7
 801a106:	f892 b002 	ldrb.w	fp, [r2, #2]
 801a10a:	9310      	str	r3, [sp, #64]	; 0x40
 801a10c:	fb01 770b 	mla	r7, r1, fp, r7
 801a110:	f890 b002 	ldrb.w	fp, [r0, #2]
 801a114:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a116:	fb09 770b 	mla	r7, r9, fp, r7
 801a11a:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 801a11e:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801a122:	fb1b fb03 	smulbb	fp, fp, r3
 801a126:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801a12a:	fb07 b706 	mla	r7, r7, r6, fp
 801a12e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a130:	f895 b001 	ldrb.w	fp, [r5, #1]
 801a134:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801a138:	f89c c000 	ldrb.w	ip, [ip]
 801a13c:	435d      	muls	r5, r3
 801a13e:	fb08 550b 	mla	r5, r8, fp, r5
 801a142:	f892 b001 	ldrb.w	fp, [r2, #1]
 801a146:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a148:	fb01 550b 	mla	r5, r1, fp, r5
 801a14c:	f890 b001 	ldrb.w	fp, [r0, #1]
 801a150:	fb09 550b 	mla	r5, r9, fp, r5
 801a154:	ea4f 0bee 	mov.w	fp, lr, asr #3
 801a158:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801a15c:	fb1b fb03 	smulbb	fp, fp, r3
 801a160:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a162:	fb03 f30c 	mul.w	r3, r3, ip
 801a166:	f892 c000 	ldrb.w	ip, [r2]
 801a16a:	fb08 330a 	mla	r3, r8, sl, r3
 801a16e:	fb01 330c 	mla	r3, r1, ip, r3
 801a172:	f890 c000 	ldrb.w	ip, [r0]
 801a176:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a17a:	fb09 3c0c 	mla	ip, r9, ip, r3
 801a17e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a180:	fa5f fe8e 	uxtb.w	lr, lr
 801a184:	b2bf      	uxth	r7, r7
 801a186:	fb1e fe03 	smulbb	lr, lr, r3
 801a18a:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801a18e:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801a192:	fb05 b506 	mla	r5, r5, r6, fp
 801a196:	1c7b      	adds	r3, r7, #1
 801a198:	fb0c e606 	mla	r6, ip, r6, lr
 801a19c:	b2ad      	uxth	r5, r5
 801a19e:	b2b6      	uxth	r6, r6
 801a1a0:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801a1a4:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 801a1a8:	f105 0b01 	add.w	fp, r5, #1
 801a1ac:	1c77      	adds	r7, r6, #1
 801a1ae:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 801a1b2:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801a1b6:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801a1ba:	096d      	lsrs	r5, r5, #5
 801a1bc:	431f      	orrs	r7, r3
 801a1be:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801a1c2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801a1c4:	433d      	orrs	r5, r7
 801a1c6:	801d      	strh	r5, [r3, #0]
 801a1c8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801a1ca:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801a1cc:	3302      	adds	r3, #2
 801a1ce:	930c      	str	r3, [sp, #48]	; 0x30
 801a1d0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801a1d2:	4413      	add	r3, r2
 801a1d4:	931f      	str	r3, [sp, #124]	; 0x7c
 801a1d6:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801a1d8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a1da:	4413      	add	r3, r2
 801a1dc:	9320      	str	r3, [sp, #128]	; 0x80
 801a1de:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801a1e0:	3b01      	subs	r3, #1
 801a1e2:	9311      	str	r3, [sp, #68]	; 0x44
 801a1e4:	e732      	b.n	801a04c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801a1e6:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801a1e8:	9e21      	ldr	r6, [sp, #132]	; 0x84
 801a1ea:	4433      	add	r3, r6
 801a1ec:	931f      	str	r3, [sp, #124]	; 0x7c
 801a1ee:	9e22      	ldr	r6, [sp, #136]	; 0x88
 801a1f0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a1f2:	4433      	add	r3, r6
 801a1f4:	9320      	str	r3, [sp, #128]	; 0x80
 801a1f6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a1f8:	3b01      	subs	r3, #1
 801a1fa:	9309      	str	r3, [sp, #36]	; 0x24
 801a1fc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a1fe:	3302      	adds	r3, #2
 801a200:	930a      	str	r3, [sp, #40]	; 0x28
 801a202:	e702      	b.n	801a00a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801a204:	d027      	beq.n	801a256 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 801a206:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a208:	9821      	ldr	r0, [sp, #132]	; 0x84
 801a20a:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801a20c:	3b01      	subs	r3, #1
 801a20e:	fb00 5003 	mla	r0, r0, r3, r5
 801a212:	1400      	asrs	r0, r0, #16
 801a214:	f53f af16 	bmi.w	801a044 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a218:	3901      	subs	r1, #1
 801a21a:	4288      	cmp	r0, r1
 801a21c:	f6bf af12 	bge.w	801a044 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a220:	9922      	ldr	r1, [sp, #136]	; 0x88
 801a222:	9820      	ldr	r0, [sp, #128]	; 0x80
 801a224:	fb01 0303 	mla	r3, r1, r3, r0
 801a228:	141b      	asrs	r3, r3, #16
 801a22a:	f53f af0b 	bmi.w	801a044 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a22e:	3a01      	subs	r2, #1
 801a230:	4293      	cmp	r3, r2
 801a232:	f6bf af07 	bge.w	801a044 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a236:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a238:	9311      	str	r3, [sp, #68]	; 0x44
 801a23a:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 801a23e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a240:	930c      	str	r3, [sp, #48]	; 0x30
 801a242:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801a244:	2b00      	cmp	r3, #0
 801a246:	dc70      	bgt.n	801a32a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801a248:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a24a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801a24c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a250:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a254:	930a      	str	r3, [sp, #40]	; 0x28
 801a256:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a258:	2b00      	cmp	r3, #0
 801a25a:	f340 8124 	ble.w	801a4a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801a25e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a262:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a266:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a26a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801a26c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a270:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a274:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a278:	eef0 6a62 	vmov.f32	s13, s5
 801a27c:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a280:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a284:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a288:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 801a28c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a290:	eef0 6a43 	vmov.f32	s13, s6
 801a294:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a298:	ee12 2a90 	vmov	r2, s5
 801a29c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a2a0:	fb92 f3f3 	sdiv	r3, r2, r3
 801a2a4:	ee13 2a10 	vmov	r2, s6
 801a2a8:	9321      	str	r3, [sp, #132]	; 0x84
 801a2aa:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801a2ac:	fb92 f3f3 	sdiv	r3, r2, r3
 801a2b0:	9322      	str	r3, [sp, #136]	; 0x88
 801a2b2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a2b4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a2b6:	3b01      	subs	r3, #1
 801a2b8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a2bc:	930e      	str	r3, [sp, #56]	; 0x38
 801a2be:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801a2c0:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
 801a2c4:	bf08      	it	eq
 801a2c6:	4613      	moveq	r3, r2
 801a2c8:	9309      	str	r3, [sp, #36]	; 0x24
 801a2ca:	eeb0 3a67 	vmov.f32	s6, s15
 801a2ce:	eef0 2a47 	vmov.f32	s5, s14
 801a2d2:	e68c      	b.n	8019fee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801a2d4:	b149      	cbz	r1, 801a2ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 801a2d6:	5cb2      	ldrb	r2, [r6, r2]
 801a2d8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a2dc:	4422      	add	r2, r4
 801a2de:	4628      	mov	r0, r5
 801a2e0:	46ac      	mov	ip, r5
 801a2e2:	e6f1      	b.n	801a0c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801a2e4:	4628      	mov	r0, r5
 801a2e6:	462a      	mov	r2, r5
 801a2e8:	e6ee      	b.n	801a0c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801a2ea:	4628      	mov	r0, r5
 801a2ec:	462a      	mov	r2, r5
 801a2ee:	e7f7      	b.n	801a2e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 801a2f0:	1c47      	adds	r7, r0, #1
 801a2f2:	f53f af69 	bmi.w	801a1c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a2f6:	42ba      	cmp	r2, r7
 801a2f8:	f6ff af66 	blt.w	801a1c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a2fc:	1c6f      	adds	r7, r5, #1
 801a2fe:	f53f af63 	bmi.w	801a1c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a302:	42be      	cmp	r6, r7
 801a304:	f6ff af60 	blt.w	801a1c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a308:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801a30a:	9002      	str	r0, [sp, #8]
 801a30c:	b236      	sxth	r6, r6
 801a30e:	b212      	sxth	r2, r2
 801a310:	e9cd 1705 	strd	r1, r7, [sp, #20]
 801a314:	e9cd 5303 	strd	r5, r3, [sp, #12]
 801a318:	9200      	str	r2, [sp, #0]
 801a31a:	9601      	str	r6, [sp, #4]
 801a31c:	4623      	mov	r3, r4
 801a31e:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 801a322:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a324:	f7ff fd59 	bl	8019dda <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 801a328:	e74e      	b.n	801a1c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a32a:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801a32c:	9820      	ldr	r0, [sp, #128]	; 0x80
 801a32e:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801a330:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801a332:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801a336:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801a338:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801a33c:	142d      	asrs	r5, r5, #16
 801a33e:	1400      	asrs	r0, r0, #16
 801a340:	fb02 5000 	mla	r0, r2, r0, r5
 801a344:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801a346:	f815 9000 	ldrb.w	r9, [r5, r0]
 801a34a:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801a34e:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 801a352:	182e      	adds	r6, r5, r0
 801a354:	eb04 0509 	add.w	r5, r4, r9
 801a358:	2b00      	cmp	r3, #0
 801a35a:	f000 8096 	beq.w	801a48a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801a35e:	7877      	ldrb	r7, [r6, #1]
 801a360:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801a364:	4427      	add	r7, r4
 801a366:	2900      	cmp	r1, #0
 801a368:	f000 8097 	beq.w	801a49a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 801a36c:	18b0      	adds	r0, r6, r2
 801a36e:	5cb2      	ldrb	r2, [r6, r2]
 801a370:	7840      	ldrb	r0, [r0, #1]
 801a372:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a376:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801a37a:	4422      	add	r2, r4
 801a37c:	4420      	add	r0, r4
 801a37e:	b29b      	uxth	r3, r3
 801a380:	b289      	uxth	r1, r1
 801a382:	fb03 f801 	mul.w	r8, r3, r1
 801a386:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801a388:	f895 b002 	ldrb.w	fp, [r5, #2]
 801a38c:	f8b6 c000 	ldrh.w	ip, [r6]
 801a390:	78be      	ldrb	r6, [r7, #2]
 801a392:	f814 9009 	ldrb.w	r9, [r4, r9]
 801a396:	011b      	lsls	r3, r3, #4
 801a398:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 801a39c:	b289      	uxth	r1, r1
 801a39e:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801a3a2:	eba3 0308 	sub.w	r3, r3, r8
 801a3a6:	b29b      	uxth	r3, r3
 801a3a8:	ebae 0e01 	sub.w	lr, lr, r1
 801a3ac:	fa1f fe8e 	uxth.w	lr, lr
 801a3b0:	435e      	muls	r6, r3
 801a3b2:	fb0e 660b 	mla	r6, lr, fp, r6
 801a3b6:	f892 b002 	ldrb.w	fp, [r2, #2]
 801a3ba:	9310      	str	r3, [sp, #64]	; 0x40
 801a3bc:	fb01 660b 	mla	r6, r1, fp, r6
 801a3c0:	f890 b002 	ldrb.w	fp, [r0, #2]
 801a3c4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a3c6:	fb08 660b 	mla	r6, r8, fp, r6
 801a3ca:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 801a3ce:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801a3d2:	fb1b fb03 	smulbb	fp, fp, r3
 801a3d6:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801a3da:	fb06 b60a 	mla	r6, r6, sl, fp
 801a3de:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a3e0:	f895 b001 	ldrb.w	fp, [r5, #1]
 801a3e4:	787d      	ldrb	r5, [r7, #1]
 801a3e6:	783f      	ldrb	r7, [r7, #0]
 801a3e8:	435d      	muls	r5, r3
 801a3ea:	fb0e 550b 	mla	r5, lr, fp, r5
 801a3ee:	f892 b001 	ldrb.w	fp, [r2, #1]
 801a3f2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a3f4:	fb01 550b 	mla	r5, r1, fp, r5
 801a3f8:	f890 b001 	ldrb.w	fp, [r0, #1]
 801a3fc:	fb08 550b 	mla	r5, r8, fp, r5
 801a400:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801a404:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801a408:	fb1b fb03 	smulbb	fp, fp, r3
 801a40c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a40e:	437b      	muls	r3, r7
 801a410:	7817      	ldrb	r7, [r2, #0]
 801a412:	fb0e 3309 	mla	r3, lr, r9, r3
 801a416:	fb01 3307 	mla	r3, r1, r7, r3
 801a41a:	7807      	ldrb	r7, [r0, #0]
 801a41c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801a420:	fb08 3707 	mla	r7, r8, r7, r3
 801a424:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a426:	fa5f fc8c 	uxtb.w	ip, ip
 801a42a:	fb1c fc03 	smulbb	ip, ip, r3
 801a42e:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801a432:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801a436:	fb05 b50a 	mla	r5, r5, sl, fp
 801a43a:	fb07 c70a 	mla	r7, r7, sl, ip
 801a43e:	b2b6      	uxth	r6, r6
 801a440:	b2ad      	uxth	r5, r5
 801a442:	b2bf      	uxth	r7, r7
 801a444:	1c73      	adds	r3, r6, #1
 801a446:	1c7a      	adds	r2, r7, #1
 801a448:	f105 0b01 	add.w	fp, r5, #1
 801a44c:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801a450:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801a454:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801a458:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801a45c:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801a460:	096d      	lsrs	r5, r5, #5
 801a462:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801a464:	4316      	orrs	r6, r2
 801a466:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801a46a:	432e      	orrs	r6, r5
 801a46c:	f823 6b02 	strh.w	r6, [r3], #2
 801a470:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801a472:	930c      	str	r3, [sp, #48]	; 0x30
 801a474:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801a476:	4413      	add	r3, r2
 801a478:	931f      	str	r3, [sp, #124]	; 0x7c
 801a47a:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801a47c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a47e:	4413      	add	r3, r2
 801a480:	9320      	str	r3, [sp, #128]	; 0x80
 801a482:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801a484:	3b01      	subs	r3, #1
 801a486:	9311      	str	r3, [sp, #68]	; 0x44
 801a488:	e6db      	b.n	801a242 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801a48a:	b149      	cbz	r1, 801a4a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801a48c:	5cb2      	ldrb	r2, [r6, r2]
 801a48e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a492:	4422      	add	r2, r4
 801a494:	4628      	mov	r0, r5
 801a496:	462f      	mov	r7, r5
 801a498:	e771      	b.n	801a37e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801a49a:	4628      	mov	r0, r5
 801a49c:	462a      	mov	r2, r5
 801a49e:	e76e      	b.n	801a37e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801a4a0:	4628      	mov	r0, r5
 801a4a2:	462a      	mov	r2, r5
 801a4a4:	e7f7      	b.n	801a496 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801a4a6:	b015      	add	sp, #84	; 0x54
 801a4a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a4ac <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 801a4ac:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a4b0:	880f      	ldrh	r7, [r1, #0]
 801a4b2:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 801a4b6:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801a4ba:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 801a4be:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801a4c2:	023c      	lsls	r4, r7, #8
 801a4c4:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
 801a4c8:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
 801a4cc:	017c      	lsls	r4, r7, #5
 801a4ce:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 801a4d2:	00ff      	lsls	r7, r7, #3
 801a4d4:	ea4b 0404 	orr.w	r4, fp, r4
 801a4d8:	b2ff      	uxtb	r7, r7
 801a4da:	fb05 ca0e 	mla	sl, r5, lr, ip
 801a4de:	4327      	orrs	r7, r4
 801a4e0:	2d00      	cmp	r5, #0
 801a4e2:	eb02 080a 	add.w	r8, r2, sl
 801a4e6:	9701      	str	r7, [sp, #4]
 801a4e8:	db7e      	blt.n	801a5e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801a4ea:	45a9      	cmp	r9, r5
 801a4ec:	dd7c      	ble.n	801a5e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801a4ee:	f1bc 0f00 	cmp.w	ip, #0
 801a4f2:	db77      	blt.n	801a5e4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801a4f4:	45e6      	cmp	lr, ip
 801a4f6:	dd75      	ble.n	801a5e4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801a4f8:	f812 700a 	ldrb.w	r7, [r2, sl]
 801a4fc:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801a500:	441f      	add	r7, r3
 801a502:	f11c 0201 	adds.w	r2, ip, #1
 801a506:	d472      	bmi.n	801a5ee <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801a508:	4596      	cmp	lr, r2
 801a50a:	dd70      	ble.n	801a5ee <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801a50c:	2800      	cmp	r0, #0
 801a50e:	d06e      	beq.n	801a5ee <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801a510:	f898 4001 	ldrb.w	r4, [r8, #1]
 801a514:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801a518:	441c      	add	r4, r3
 801a51a:	3501      	adds	r5, #1
 801a51c:	d46b      	bmi.n	801a5f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801a51e:	45a9      	cmp	r9, r5
 801a520:	dd69      	ble.n	801a5f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801a522:	2e00      	cmp	r6, #0
 801a524:	d067      	beq.n	801a5f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801a526:	f1bc 0f00 	cmp.w	ip, #0
 801a52a:	db62      	blt.n	801a5f2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801a52c:	45e6      	cmp	lr, ip
 801a52e:	dd60      	ble.n	801a5f2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801a530:	f818 500e 	ldrb.w	r5, [r8, lr]
 801a534:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801a538:	441d      	add	r5, r3
 801a53a:	f11c 0201 	adds.w	r2, ip, #1
 801a53e:	d45d      	bmi.n	801a5fc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801a540:	4596      	cmp	lr, r2
 801a542:	dd5b      	ble.n	801a5fc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801a544:	2800      	cmp	r0, #0
 801a546:	d059      	beq.n	801a5fc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801a548:	44c6      	add	lr, r8
 801a54a:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801a54e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a552:	4413      	add	r3, r2
 801a554:	b280      	uxth	r0, r0
 801a556:	b2b2      	uxth	r2, r6
 801a558:	fb00 f602 	mul.w	r6, r0, r2
 801a55c:	0100      	lsls	r0, r0, #4
 801a55e:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 801a562:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
 801a566:	1b80      	subs	r0, r0, r6
 801a568:	fa1f fc82 	uxth.w	ip, r2
 801a56c:	b282      	uxth	r2, r0
 801a56e:	78a0      	ldrb	r0, [r4, #2]
 801a570:	f897 e002 	ldrb.w	lr, [r7, #2]
 801a574:	f897 9000 	ldrb.w	r9, [r7]
 801a578:	787f      	ldrb	r7, [r7, #1]
 801a57a:	eba8 080c 	sub.w	r8, r8, ip
 801a57e:	fa1f f888 	uxth.w	r8, r8
 801a582:	4350      	muls	r0, r2
 801a584:	fb08 0e0e 	mla	lr, r8, lr, r0
 801a588:	78a8      	ldrb	r0, [r5, #2]
 801a58a:	fb0c e000 	mla	r0, ip, r0, lr
 801a58e:	f893 e002 	ldrb.w	lr, [r3, #2]
 801a592:	fb06 0e0e 	mla	lr, r6, lr, r0
 801a596:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
 801a59a:	f894 e000 	ldrb.w	lr, [r4]
 801a59e:	fb02 fe0e 	mul.w	lr, r2, lr
 801a5a2:	fb08 e909 	mla	r9, r8, r9, lr
 801a5a6:	f895 e000 	ldrb.w	lr, [r5]
 801a5aa:	fb0c 990e 	mla	r9, ip, lr, r9
 801a5ae:	f893 e000 	ldrb.w	lr, [r3]
 801a5b2:	785b      	ldrb	r3, [r3, #1]
 801a5b4:	fb06 9e0e 	mla	lr, r6, lr, r9
 801a5b8:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801a5bc:	ea4e 0e00 	orr.w	lr, lr, r0
 801a5c0:	7860      	ldrb	r0, [r4, #1]
 801a5c2:	4350      	muls	r0, r2
 801a5c4:	786a      	ldrb	r2, [r5, #1]
 801a5c6:	fb08 0007 	mla	r0, r8, r7, r0
 801a5ca:	fb0c 0202 	mla	r2, ip, r2, r0
 801a5ce:	fb06 2303 	mla	r3, r6, r3, r2
 801a5d2:	095b      	lsrs	r3, r3, #5
 801a5d4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a5d8:	ea4e 0303 	orr.w	r3, lr, r3
 801a5dc:	800b      	strh	r3, [r1, #0]
 801a5de:	b003      	add	sp, #12
 801a5e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a5e4:	af01      	add	r7, sp, #4
 801a5e6:	e78c      	b.n	801a502 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 801a5e8:	ac01      	add	r4, sp, #4
 801a5ea:	4627      	mov	r7, r4
 801a5ec:	e795      	b.n	801a51a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801a5ee:	ac01      	add	r4, sp, #4
 801a5f0:	e793      	b.n	801a51a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801a5f2:	ad01      	add	r5, sp, #4
 801a5f4:	e7a1      	b.n	801a53a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 801a5f6:	ab01      	add	r3, sp, #4
 801a5f8:	461d      	mov	r5, r3
 801a5fa:	e7ab      	b.n	801a554 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 801a5fc:	ab01      	add	r3, sp, #4
 801a5fe:	e7a9      	b.n	801a554 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

0801a600 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a600:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a604:	b08f      	sub	sp, #60	; 0x3c
 801a606:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
 801a60a:	920c      	str	r2, [sp, #48]	; 0x30
 801a60c:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 801a60e:	910a      	str	r1, [sp, #40]	; 0x28
 801a610:	9306      	str	r3, [sp, #24]
 801a612:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
 801a616:	900d      	str	r0, [sp, #52]	; 0x34
 801a618:	6850      	ldr	r0, [r2, #4]
 801a61a:	6812      	ldr	r2, [r2, #0]
 801a61c:	fb00 1303 	mla	r3, r0, r3, r1
 801a620:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a624:	9307      	str	r3, [sp, #28]
 801a626:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a628:	681b      	ldr	r3, [r3, #0]
 801a62a:	9308      	str	r3, [sp, #32]
 801a62c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a62e:	685c      	ldr	r4, [r3, #4]
 801a630:	3404      	adds	r4, #4
 801a632:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a634:	2b00      	cmp	r3, #0
 801a636:	dc03      	bgt.n	801a640 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801a638:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801a63a:	2b00      	cmp	r3, #0
 801a63c:	f340 81d6 	ble.w	801a9ec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801a640:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a642:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a646:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a64a:	1e48      	subs	r0, r1, #1
 801a64c:	1e56      	subs	r6, r2, #1
 801a64e:	9b06      	ldr	r3, [sp, #24]
 801a650:	2b00      	cmp	r3, #0
 801a652:	f340 80b7 	ble.w	801a7c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 801a656:	ea5f 472b 	movs.w	r7, fp, asr #16
 801a65a:	ea4f 4325 	mov.w	r3, r5, asr #16
 801a65e:	d406      	bmi.n	801a66e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a660:	4287      	cmp	r7, r0
 801a662:	da04      	bge.n	801a66e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a664:	2b00      	cmp	r3, #0
 801a666:	db02      	blt.n	801a66e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a668:	42b3      	cmp	r3, r6
 801a66a:	f2c0 80ac 	blt.w	801a7c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801a66e:	3701      	adds	r7, #1
 801a670:	f100 809d 	bmi.w	801a7ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801a674:	42b9      	cmp	r1, r7
 801a676:	f2c0 809a 	blt.w	801a7ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801a67a:	3301      	adds	r3, #1
 801a67c:	f100 8097 	bmi.w	801a7ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801a680:	429a      	cmp	r2, r3
 801a682:	f2c0 8094 	blt.w	801a7ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801a686:	9b06      	ldr	r3, [sp, #24]
 801a688:	930b      	str	r3, [sp, #44]	; 0x2c
 801a68a:	9b07      	ldr	r3, [sp, #28]
 801a68c:	9309      	str	r3, [sp, #36]	; 0x24
 801a68e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a690:	2b00      	cmp	r3, #0
 801a692:	f340 80b5 	ble.w	801a800 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801a696:	9820      	ldr	r0, [sp, #128]	; 0x80
 801a698:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801a69a:	68c7      	ldr	r7, [r0, #12]
 801a69c:	6892      	ldr	r2, [r2, #8]
 801a69e:	ea5f 402b 	movs.w	r0, fp, asr #16
 801a6a2:	ea4f 4625 	mov.w	r6, r5, asr #16
 801a6a6:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801a6aa:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801a6ae:	f100 80fb 	bmi.w	801a8a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801a6b2:	f102 3cff 	add.w	ip, r2, #4294967295
 801a6b6:	4560      	cmp	r0, ip
 801a6b8:	f280 80f6 	bge.w	801a8a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801a6bc:	2e00      	cmp	r6, #0
 801a6be:	f2c0 80f3 	blt.w	801a8a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801a6c2:	f107 3cff 	add.w	ip, r7, #4294967295
 801a6c6:	4566      	cmp	r6, ip
 801a6c8:	f280 80ee 	bge.w	801a8a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801a6cc:	b212      	sxth	r2, r2
 801a6ce:	fb06 0002 	mla	r0, r6, r2, r0
 801a6d2:	9e08      	ldr	r6, [sp, #32]
 801a6d4:	1837      	adds	r7, r6, r0
 801a6d6:	5c30      	ldrb	r0, [r6, r0]
 801a6d8:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 801a6dc:	eb04 0c08 	add.w	ip, r4, r8
 801a6e0:	2b00      	cmp	r3, #0
 801a6e2:	f000 80d3 	beq.w	801a88c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801a6e6:	787e      	ldrb	r6, [r7, #1]
 801a6e8:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801a6ec:	4426      	add	r6, r4
 801a6ee:	2900      	cmp	r1, #0
 801a6f0:	f000 80d4 	beq.w	801a89c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 801a6f4:	18b8      	adds	r0, r7, r2
 801a6f6:	5cba      	ldrb	r2, [r7, r2]
 801a6f8:	7840      	ldrb	r0, [r0, #1]
 801a6fa:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a6fe:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801a702:	4422      	add	r2, r4
 801a704:	4420      	add	r0, r4
 801a706:	b29b      	uxth	r3, r3
 801a708:	b289      	uxth	r1, r1
 801a70a:	fb03 f901 	mul.w	r9, r3, r1
 801a70e:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801a712:	011b      	lsls	r3, r3, #4
 801a714:	b289      	uxth	r1, r1
 801a716:	78b7      	ldrb	r7, [r6, #2]
 801a718:	f89c a002 	ldrb.w	sl, [ip, #2]
 801a71c:	f89c c001 	ldrb.w	ip, [ip, #1]
 801a720:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801a724:	eba3 0309 	sub.w	r3, r3, r9
 801a728:	b29b      	uxth	r3, r3
 801a72a:	ebae 0e01 	sub.w	lr, lr, r1
 801a72e:	fa1f fe8e 	uxth.w	lr, lr
 801a732:	435f      	muls	r7, r3
 801a734:	fb0e 770a 	mla	r7, lr, sl, r7
 801a738:	f892 a002 	ldrb.w	sl, [r2, #2]
 801a73c:	fb01 770a 	mla	r7, r1, sl, r7
 801a740:	f890 a002 	ldrb.w	sl, [r0, #2]
 801a744:	fb09 7a0a 	mla	sl, r9, sl, r7
 801a748:	f814 7008 	ldrb.w	r7, [r4, r8]
 801a74c:	f896 8000 	ldrb.w	r8, [r6]
 801a750:	7876      	ldrb	r6, [r6, #1]
 801a752:	fb03 f808 	mul.w	r8, r3, r8
 801a756:	fb0e 8807 	mla	r8, lr, r7, r8
 801a75a:	7817      	ldrb	r7, [r2, #0]
 801a75c:	fb01 8807 	mla	r8, r1, r7, r8
 801a760:	7807      	ldrb	r7, [r0, #0]
 801a762:	fb09 8707 	mla	r7, r9, r7, r8
 801a766:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801a76a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801a76e:	ea47 070a 	orr.w	r7, r7, sl
 801a772:	4373      	muls	r3, r6
 801a774:	f892 a001 	ldrb.w	sl, [r2, #1]
 801a778:	fb0e 330c 	mla	r3, lr, ip, r3
 801a77c:	fb01 310a 	mla	r1, r1, sl, r3
 801a780:	f890 a001 	ldrb.w	sl, [r0, #1]
 801a784:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a786:	fb09 1a0a 	mla	sl, r9, sl, r1
 801a78a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a78e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a792:	ea47 070a 	orr.w	r7, r7, sl
 801a796:	801f      	strh	r7, [r3, #0]
 801a798:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a79a:	3302      	adds	r3, #2
 801a79c:	9309      	str	r3, [sp, #36]	; 0x24
 801a79e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801a7a0:	449b      	add	fp, r3
 801a7a2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801a7a4:	441d      	add	r5, r3
 801a7a6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a7a8:	3b01      	subs	r3, #1
 801a7aa:	930b      	str	r3, [sp, #44]	; 0x2c
 801a7ac:	e76f      	b.n	801a68e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801a7ae:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801a7b0:	449b      	add	fp, r3
 801a7b2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801a7b4:	441d      	add	r5, r3
 801a7b6:	9b06      	ldr	r3, [sp, #24]
 801a7b8:	3b01      	subs	r3, #1
 801a7ba:	9306      	str	r3, [sp, #24]
 801a7bc:	9b07      	ldr	r3, [sp, #28]
 801a7be:	3302      	adds	r3, #2
 801a7c0:	9307      	str	r3, [sp, #28]
 801a7c2:	e744      	b.n	801a64e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 801a7c4:	d023      	beq.n	801a80e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801a7c6:	9b06      	ldr	r3, [sp, #24]
 801a7c8:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801a7ca:	3b01      	subs	r3, #1
 801a7cc:	fb00 b003 	mla	r0, r0, r3, fp
 801a7d0:	1400      	asrs	r0, r0, #16
 801a7d2:	f53f af58 	bmi.w	801a686 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801a7d6:	3901      	subs	r1, #1
 801a7d8:	4288      	cmp	r0, r1
 801a7da:	f6bf af54 	bge.w	801a686 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801a7de:	991c      	ldr	r1, [sp, #112]	; 0x70
 801a7e0:	fb01 5303 	mla	r3, r1, r3, r5
 801a7e4:	141b      	asrs	r3, r3, #16
 801a7e6:	f53f af4e 	bmi.w	801a686 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801a7ea:	3a01      	subs	r2, #1
 801a7ec:	4293      	cmp	r3, r2
 801a7ee:	f6bf af4a 	bge.w	801a686 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801a7f2:	9b06      	ldr	r3, [sp, #24]
 801a7f4:	9309      	str	r3, [sp, #36]	; 0x24
 801a7f6:	9b07      	ldr	r3, [sp, #28]
 801a7f8:	930b      	str	r3, [sp, #44]	; 0x2c
 801a7fa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a7fc:	2b00      	cmp	r3, #0
 801a7fe:	dc70      	bgt.n	801a8e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 801a800:	9b06      	ldr	r3, [sp, #24]
 801a802:	9a07      	ldr	r2, [sp, #28]
 801a804:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a808:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a80c:	9307      	str	r3, [sp, #28]
 801a80e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a810:	2b00      	cmp	r3, #0
 801a812:	f340 80eb 	ble.w	801a9ec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801a816:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a81a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a81e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a822:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801a824:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a828:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a82c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a830:	eef0 6a62 	vmov.f32	s13, s5
 801a834:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a838:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a83c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a840:	ee16 ba90 	vmov	fp, s13
 801a844:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a848:	eef0 6a43 	vmov.f32	s13, s6
 801a84c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a850:	ee12 2a90 	vmov	r2, s5
 801a854:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a858:	fb92 f3f3 	sdiv	r3, r2, r3
 801a85c:	ee13 2a10 	vmov	r2, s6
 801a860:	931b      	str	r3, [sp, #108]	; 0x6c
 801a862:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801a864:	fb92 f3f3 	sdiv	r3, r2, r3
 801a868:	931c      	str	r3, [sp, #112]	; 0x70
 801a86a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a86c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801a86e:	3b01      	subs	r3, #1
 801a870:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a874:	930a      	str	r3, [sp, #40]	; 0x28
 801a876:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801a878:	bf08      	it	eq
 801a87a:	4613      	moveq	r3, r2
 801a87c:	ee16 5a90 	vmov	r5, s13
 801a880:	9306      	str	r3, [sp, #24]
 801a882:	eeb0 3a67 	vmov.f32	s6, s15
 801a886:	eef0 2a47 	vmov.f32	s5, s14
 801a88a:	e6d2      	b.n	801a632 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801a88c:	b149      	cbz	r1, 801a8a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801a88e:	5cba      	ldrb	r2, [r7, r2]
 801a890:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a894:	4422      	add	r2, r4
 801a896:	4660      	mov	r0, ip
 801a898:	4666      	mov	r6, ip
 801a89a:	e734      	b.n	801a706 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801a89c:	4660      	mov	r0, ip
 801a89e:	4662      	mov	r2, ip
 801a8a0:	e731      	b.n	801a706 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801a8a2:	4660      	mov	r0, ip
 801a8a4:	4662      	mov	r2, ip
 801a8a6:	e7f7      	b.n	801a898 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 801a8a8:	f110 0c01 	adds.w	ip, r0, #1
 801a8ac:	f53f af74 	bmi.w	801a798 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a8b0:	4562      	cmp	r2, ip
 801a8b2:	f6ff af71 	blt.w	801a798 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a8b6:	f116 0c01 	adds.w	ip, r6, #1
 801a8ba:	f53f af6d 	bmi.w	801a798 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a8be:	4567      	cmp	r7, ip
 801a8c0:	f6ff af6a 	blt.w	801a798 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a8c4:	b23f      	sxth	r7, r7
 801a8c6:	b212      	sxth	r2, r2
 801a8c8:	e9cd 3104 	strd	r3, r1, [sp, #16]
 801a8cc:	e9cd 0602 	strd	r0, r6, [sp, #8]
 801a8d0:	9200      	str	r2, [sp, #0]
 801a8d2:	9701      	str	r7, [sp, #4]
 801a8d4:	4623      	mov	r3, r4
 801a8d6:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801a8da:	980d      	ldr	r0, [sp, #52]	; 0x34
 801a8dc:	f7ff fde6 	bl	801a4ac <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 801a8e0:	e75a      	b.n	801a798 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a8e2:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801a8e4:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801a8e8:	ea4f 462b 	mov.w	r6, fp, asr #16
 801a8ec:	1428      	asrs	r0, r5, #16
 801a8ee:	fb02 6000 	mla	r0, r2, r0, r6
 801a8f2:	9e08      	ldr	r6, [sp, #32]
 801a8f4:	f816 8000 	ldrb.w	r8, [r6, r0]
 801a8f8:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801a8fc:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801a900:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801a904:	1837      	adds	r7, r6, r0
 801a906:	eb04 0c08 	add.w	ip, r4, r8
 801a90a:	2b00      	cmp	r3, #0
 801a90c:	d060      	beq.n	801a9d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 801a90e:	787e      	ldrb	r6, [r7, #1]
 801a910:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801a914:	4426      	add	r6, r4
 801a916:	2900      	cmp	r1, #0
 801a918:	d062      	beq.n	801a9e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 801a91a:	18b8      	adds	r0, r7, r2
 801a91c:	5cba      	ldrb	r2, [r7, r2]
 801a91e:	7840      	ldrb	r0, [r0, #1]
 801a920:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a924:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801a928:	4422      	add	r2, r4
 801a92a:	4420      	add	r0, r4
 801a92c:	b29b      	uxth	r3, r3
 801a92e:	b289      	uxth	r1, r1
 801a930:	fb03 f901 	mul.w	r9, r3, r1
 801a934:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801a938:	011b      	lsls	r3, r3, #4
 801a93a:	b289      	uxth	r1, r1
 801a93c:	78b7      	ldrb	r7, [r6, #2]
 801a93e:	f89c a002 	ldrb.w	sl, [ip, #2]
 801a942:	f89c c001 	ldrb.w	ip, [ip, #1]
 801a946:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801a94a:	eba3 0309 	sub.w	r3, r3, r9
 801a94e:	b29b      	uxth	r3, r3
 801a950:	ebae 0e01 	sub.w	lr, lr, r1
 801a954:	fa1f fe8e 	uxth.w	lr, lr
 801a958:	435f      	muls	r7, r3
 801a95a:	fb0e 770a 	mla	r7, lr, sl, r7
 801a95e:	f892 a002 	ldrb.w	sl, [r2, #2]
 801a962:	fb01 770a 	mla	r7, r1, sl, r7
 801a966:	f890 a002 	ldrb.w	sl, [r0, #2]
 801a96a:	fb09 7a0a 	mla	sl, r9, sl, r7
 801a96e:	f814 7008 	ldrb.w	r7, [r4, r8]
 801a972:	f896 8000 	ldrb.w	r8, [r6]
 801a976:	7876      	ldrb	r6, [r6, #1]
 801a978:	fb03 f808 	mul.w	r8, r3, r8
 801a97c:	fb0e 8807 	mla	r8, lr, r7, r8
 801a980:	7817      	ldrb	r7, [r2, #0]
 801a982:	fb01 8807 	mla	r8, r1, r7, r8
 801a986:	7807      	ldrb	r7, [r0, #0]
 801a988:	fb09 8707 	mla	r7, r9, r7, r8
 801a98c:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801a990:	4373      	muls	r3, r6
 801a992:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801a996:	7856      	ldrb	r6, [r2, #1]
 801a998:	ea47 070a 	orr.w	r7, r7, sl
 801a99c:	fb0e 330c 	mla	r3, lr, ip, r3
 801a9a0:	f890 a001 	ldrb.w	sl, [r0, #1]
 801a9a4:	fb01 3306 	mla	r3, r1, r6, r3
 801a9a8:	fb09 3a0a 	mla	sl, r9, sl, r3
 801a9ac:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a9b0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a9b2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a9b6:	ea47 070a 	orr.w	r7, r7, sl
 801a9ba:	f823 7b02 	strh.w	r7, [r3], #2
 801a9be:	930b      	str	r3, [sp, #44]	; 0x2c
 801a9c0:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801a9c2:	449b      	add	fp, r3
 801a9c4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801a9c6:	441d      	add	r5, r3
 801a9c8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a9ca:	3b01      	subs	r3, #1
 801a9cc:	9309      	str	r3, [sp, #36]	; 0x24
 801a9ce:	e714      	b.n	801a7fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801a9d0:	b149      	cbz	r1, 801a9e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801a9d2:	5cba      	ldrb	r2, [r7, r2]
 801a9d4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a9d8:	4422      	add	r2, r4
 801a9da:	4660      	mov	r0, ip
 801a9dc:	4666      	mov	r6, ip
 801a9de:	e7a5      	b.n	801a92c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801a9e0:	4660      	mov	r0, ip
 801a9e2:	4662      	mov	r2, ip
 801a9e4:	e7a2      	b.n	801a92c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801a9e6:	4660      	mov	r0, ip
 801a9e8:	4662      	mov	r2, ip
 801a9ea:	e7f7      	b.n	801a9dc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 801a9ec:	b00f      	add	sp, #60	; 0x3c
 801a9ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a9f2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 801a9f2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a9f6:	b085      	sub	sp, #20
 801a9f8:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
 801a9fc:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 801aa00:	9102      	str	r1, [sp, #8]
 801aa02:	2c00      	cmp	r4, #0
 801aa04:	fb04 710c 	mla	r1, r4, ip, r7
 801aa08:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 801aa0c:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 801aa10:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 801aa14:	eb02 0e01 	add.w	lr, r2, r1
 801aa18:	f2c0 8122 	blt.w	801ac60 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801aa1c:	45a0      	cmp	r8, r4
 801aa1e:	f340 811f 	ble.w	801ac60 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801aa22:	2f00      	cmp	r7, #0
 801aa24:	f2c0 811a 	blt.w	801ac5c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801aa28:	45bc      	cmp	ip, r7
 801aa2a:	f340 8117 	ble.w	801ac5c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801aa2e:	5c52      	ldrb	r2, [r2, r1]
 801aa30:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801aa34:	1c7a      	adds	r2, r7, #1
 801aa36:	f100 8116 	bmi.w	801ac66 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801aa3a:	4594      	cmp	ip, r2
 801aa3c:	f340 8113 	ble.w	801ac66 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801aa40:	2e00      	cmp	r6, #0
 801aa42:	f000 8112 	beq.w	801ac6a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 801aa46:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801aa4a:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801aa4e:	3401      	adds	r4, #1
 801aa50:	f100 810f 	bmi.w	801ac72 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801aa54:	45a0      	cmp	r8, r4
 801aa56:	f340 810c 	ble.w	801ac72 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801aa5a:	2800      	cmp	r0, #0
 801aa5c:	f000 810c 	beq.w	801ac78 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 801aa60:	2f00      	cmp	r7, #0
 801aa62:	f2c0 8104 	blt.w	801ac6e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801aa66:	45bc      	cmp	ip, r7
 801aa68:	f340 8101 	ble.w	801ac6e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801aa6c:	f81e 200c 	ldrb.w	r2, [lr, ip]
 801aa70:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 801aa74:	3701      	adds	r7, #1
 801aa76:	f100 8102 	bmi.w	801ac7e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801aa7a:	45bc      	cmp	ip, r7
 801aa7c:	f340 80ff 	ble.w	801ac7e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801aa80:	2e00      	cmp	r6, #0
 801aa82:	f000 80fe 	beq.w	801ac82 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 801aa86:	44f4      	add	ip, lr
 801aa88:	f89c 2001 	ldrb.w	r2, [ip, #1]
 801aa8c:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 801aa90:	b2b6      	uxth	r6, r6
 801aa92:	b280      	uxth	r0, r0
 801aa94:	fb00 fe06 	mul.w	lr, r0, r6
 801aa98:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801aa9c:	0136      	lsls	r6, r6, #4
 801aa9e:	eba6 070e 	sub.w	r7, r6, lr
 801aaa2:	b280      	uxth	r0, r0
 801aaa4:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801aaa8:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801aaac:	b2bf      	uxth	r7, r7
 801aaae:	1a1b      	subs	r3, r3, r0
 801aab0:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801aab4:	b29b      	uxth	r3, r3
 801aab6:	fb0a f607 	mul.w	r6, sl, r7
 801aaba:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801aabe:	fb0b 6603 	mla	r6, fp, r3, r6
 801aac2:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801aac6:	fb00 6609 	mla	r6, r0, r9, r6
 801aaca:	fb0e 6608 	mla	r6, lr, r8, r6
 801aace:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801aad2:	9600      	str	r6, [sp, #0]
 801aad4:	2e00      	cmp	r6, #0
 801aad6:	f000 80be 	beq.w	801ac56 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 801aada:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801aade:	fb0b fc0c 	mul.w	ip, fp, ip
 801aae2:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801aae6:	fb0b f505 	mul.w	r5, fp, r5
 801aaea:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801aaee:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801aaf2:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801aaf6:	44dc      	add	ip, fp
 801aaf8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801aafc:	9501      	str	r5, [sp, #4]
 801aafe:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801ab02:	9503      	str	r5, [sp, #12]
 801ab04:	9d01      	ldr	r5, [sp, #4]
 801ab06:	9e02      	ldr	r6, [sp, #8]
 801ab08:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801ab0c:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801ab10:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801ab14:	fb0a fc0c 	mul.w	ip, sl, ip
 801ab18:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801ab1c:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801ab20:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801ab24:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801ab28:	4465      	add	r5, ip
 801ab2a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801ab2e:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801ab32:	fb09 fc0c 	mul.w	ip, r9, ip
 801ab36:	fb09 f904 	mul.w	r9, r9, r4
 801ab3a:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801ab3e:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801ab42:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801ab46:	fb08 f404 	mul.w	r4, r8, r4
 801ab4a:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801ab4e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801ab52:	fb08 f802 	mul.w	r8, r8, r2
 801ab56:	fb0a fa01 	mul.w	sl, sl, r1
 801ab5a:	0a22      	lsrs	r2, r4, #8
 801ab5c:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801ab60:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801ab64:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801ab68:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801ab6c:	4414      	add	r4, r2
 801ab6e:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801ab72:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801ab76:	0a2d      	lsrs	r5, r5, #8
 801ab78:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801ab7c:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801ab80:	9a03      	ldr	r2, [sp, #12]
 801ab82:	8836      	ldrh	r6, [r6, #0]
 801ab84:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801ab88:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801ab8c:	437d      	muls	r5, r7
 801ab8e:	4461      	add	r1, ip
 801ab90:	0a24      	lsrs	r4, r4, #8
 801ab92:	fb02 5503 	mla	r5, r2, r3, r5
 801ab96:	0a09      	lsrs	r1, r1, #8
 801ab98:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801ab9c:	fb04 540e 	mla	r4, r4, lr, r5
 801aba0:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801aba4:	fb01 4100 	mla	r1, r1, r0, r4
 801aba8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801abac:	0a09      	lsrs	r1, r1, #8
 801abae:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801abb2:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801abb6:	fb07 f70a 	mul.w	r7, r7, sl
 801abba:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801abbe:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801abc2:	fb03 7101 	mla	r1, r3, r1, r7
 801abc6:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801abca:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801abce:	fb0e 1e08 	mla	lr, lr, r8, r1
 801abd2:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801abd6:	fb00 e101 	mla	r1, r0, r1, lr
 801abda:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 801abde:	9a00      	ldr	r2, [sp, #0]
 801abe0:	b287      	uxth	r7, r0
 801abe2:	437a      	muls	r2, r7
 801abe4:	0a09      	lsrs	r1, r1, #8
 801abe6:	1c53      	adds	r3, r2, #1
 801abe8:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801abec:	4321      	orrs	r1, r4
 801abee:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801abf2:	1235      	asrs	r5, r6, #8
 801abf4:	0c0a      	lsrs	r2, r1, #16
 801abf6:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801abfa:	b2db      	uxtb	r3, r3
 801abfc:	fb12 f207 	smulbb	r2, r2, r7
 801ac00:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801ac04:	fb05 2503 	mla	r5, r5, r3, r2
 801ac08:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801ac0c:	10f2      	asrs	r2, r6, #3
 801ac0e:	b2c8      	uxtb	r0, r1
 801ac10:	00f6      	lsls	r6, r6, #3
 801ac12:	fb14 f407 	smulbb	r4, r4, r7
 801ac16:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801ac1a:	b2f6      	uxtb	r6, r6
 801ac1c:	fb10 f007 	smulbb	r0, r0, r7
 801ac20:	fb02 4203 	mla	r2, r2, r3, r4
 801ac24:	b2ad      	uxth	r5, r5
 801ac26:	fb06 0303 	mla	r3, r6, r3, r0
 801ac2a:	b299      	uxth	r1, r3
 801ac2c:	b294      	uxth	r4, r2
 801ac2e:	1c6b      	adds	r3, r5, #1
 801ac30:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801ac34:	1c62      	adds	r2, r4, #1
 801ac36:	1c4b      	adds	r3, r1, #1
 801ac38:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801ac3c:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801ac40:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801ac44:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801ac48:	0952      	lsrs	r2, r2, #5
 801ac4a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ac4e:	432b      	orrs	r3, r5
 801ac50:	4313      	orrs	r3, r2
 801ac52:	9a02      	ldr	r2, [sp, #8]
 801ac54:	8013      	strh	r3, [r2, #0]
 801ac56:	b005      	add	sp, #20
 801ac58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ac5c:	2500      	movs	r5, #0
 801ac5e:	e6e9      	b.n	801aa34 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 801ac60:	2100      	movs	r1, #0
 801ac62:	460d      	mov	r5, r1
 801ac64:	e6f3      	b.n	801aa4e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801ac66:	2100      	movs	r1, #0
 801ac68:	e6f1      	b.n	801aa4e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801ac6a:	4631      	mov	r1, r6
 801ac6c:	e6ef      	b.n	801aa4e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801ac6e:	2400      	movs	r4, #0
 801ac70:	e700      	b.n	801aa74 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 801ac72:	2200      	movs	r2, #0
 801ac74:	4614      	mov	r4, r2
 801ac76:	e70b      	b.n	801aa90 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801ac78:	4602      	mov	r2, r0
 801ac7a:	4604      	mov	r4, r0
 801ac7c:	e708      	b.n	801aa90 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801ac7e:	2200      	movs	r2, #0
 801ac80:	e706      	b.n	801aa90 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801ac82:	4632      	mov	r2, r6
 801ac84:	e704      	b.n	801aa90 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

0801ac86 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ac86:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ac8a:	b09f      	sub	sp, #124	; 0x7c
 801ac8c:	921b      	str	r2, [sp, #108]	; 0x6c
 801ac8e:	9309      	str	r3, [sp, #36]	; 0x24
 801ac90:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801ac92:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 801ac96:	931c      	str	r3, [sp, #112]	; 0x70
 801ac98:	9119      	str	r1, [sp, #100]	; 0x64
 801ac9a:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 801ac9e:	901d      	str	r0, [sp, #116]	; 0x74
 801aca0:	6850      	ldr	r0, [r2, #4]
 801aca2:	6812      	ldr	r2, [r2, #0]
 801aca4:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 801aca6:	fb00 1303 	mla	r3, r0, r3, r1
 801acaa:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801acae:	930c      	str	r3, [sp, #48]	; 0x30
 801acb0:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801acb2:	681b      	ldr	r3, [r3, #0]
 801acb4:	9312      	str	r3, [sp, #72]	; 0x48
 801acb6:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801acb8:	685e      	ldr	r6, [r3, #4]
 801acba:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 801acbe:	930d      	str	r3, [sp, #52]	; 0x34
 801acc0:	3604      	adds	r6, #4
 801acc2:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801acc4:	2b00      	cmp	r3, #0
 801acc6:	dc03      	bgt.n	801acd0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801acc8:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801acca:	2b00      	cmp	r3, #0
 801accc:	f340 8388 	ble.w	801b3e0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801acd0:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801acd2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801acd6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801acda:	1e48      	subs	r0, r1, #1
 801acdc:	1e57      	subs	r7, r2, #1
 801acde:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ace0:	2b00      	cmp	r3, #0
 801ace2:	f340 8195 	ble.w	801b010 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801ace6:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801ace8:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801acec:	ea4f 4325 	mov.w	r3, r5, asr #16
 801acf0:	d406      	bmi.n	801ad00 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801acf2:	4584      	cmp	ip, r0
 801acf4:	da04      	bge.n	801ad00 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801acf6:	2b00      	cmp	r3, #0
 801acf8:	db02      	blt.n	801ad00 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801acfa:	42bb      	cmp	r3, r7
 801acfc:	f2c0 8189 	blt.w	801b012 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 801ad00:	f11c 0c01 	adds.w	ip, ip, #1
 801ad04:	f100 8177 	bmi.w	801aff6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801ad08:	4561      	cmp	r1, ip
 801ad0a:	f2c0 8174 	blt.w	801aff6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801ad0e:	3301      	adds	r3, #1
 801ad10:	f100 8171 	bmi.w	801aff6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801ad14:	429a      	cmp	r2, r3
 801ad16:	f2c0 816e 	blt.w	801aff6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801ad1a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ad1c:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801ad1e:	931a      	str	r3, [sp, #104]	; 0x68
 801ad20:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801ad22:	2b00      	cmp	r3, #0
 801ad24:	f340 8193 	ble.w	801b04e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 801ad28:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801ad2a:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801ad2e:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801ad30:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 801ad34:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801ad36:	141b      	asrs	r3, r3, #16
 801ad38:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801ad3c:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801ad40:	f100 81d6 	bmi.w	801b0f0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801ad44:	f100 38ff 	add.w	r8, r0, #4294967295
 801ad48:	4543      	cmp	r3, r8
 801ad4a:	f280 81d1 	bge.w	801b0f0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801ad4e:	f1bc 0f00 	cmp.w	ip, #0
 801ad52:	f2c0 81cd 	blt.w	801b0f0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801ad56:	f10e 38ff 	add.w	r8, lr, #4294967295
 801ad5a:	45c4      	cmp	ip, r8
 801ad5c:	f280 81c8 	bge.w	801b0f0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801ad60:	b200      	sxth	r0, r0
 801ad62:	fb0c 3300 	mla	r3, ip, r0, r3
 801ad66:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801ad68:	eb04 0803 	add.w	r8, r4, r3
 801ad6c:	5ce3      	ldrb	r3, [r4, r3]
 801ad6e:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801ad72:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801ad76:	2a00      	cmp	r2, #0
 801ad78:	f000 81af 	beq.w	801b0da <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801ad7c:	f898 c001 	ldrb.w	ip, [r8, #1]
 801ad80:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801ad84:	940e      	str	r4, [sp, #56]	; 0x38
 801ad86:	0e24      	lsrs	r4, r4, #24
 801ad88:	9415      	str	r4, [sp, #84]	; 0x54
 801ad8a:	b179      	cbz	r1, 801adac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801ad8c:	eb08 0c00 	add.w	ip, r8, r0
 801ad90:	f818 0000 	ldrb.w	r0, [r8, r0]
 801ad94:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801ad98:	900a      	str	r0, [sp, #40]	; 0x28
 801ad9a:	0e00      	lsrs	r0, r0, #24
 801ad9c:	9013      	str	r0, [sp, #76]	; 0x4c
 801ad9e:	f89c 0001 	ldrb.w	r0, [ip, #1]
 801ada2:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801ada6:	900f      	str	r0, [sp, #60]	; 0x3c
 801ada8:	0e00      	lsrs	r0, r0, #24
 801adaa:	9016      	str	r0, [sp, #88]	; 0x58
 801adac:	b292      	uxth	r2, r2
 801adae:	b289      	uxth	r1, r1
 801adb0:	fb02 f901 	mul.w	r9, r2, r1
 801adb4:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801adb8:	0112      	lsls	r2, r2, #4
 801adba:	eba2 0809 	sub.w	r8, r2, r9
 801adbe:	b289      	uxth	r1, r1
 801adc0:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801adc4:	9815      	ldr	r0, [sp, #84]	; 0x54
 801adc6:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801adc8:	fa1f f888 	uxth.w	r8, r8
 801adcc:	1a52      	subs	r2, r2, r1
 801adce:	b292      	uxth	r2, r2
 801add0:	fb08 f000 	mul.w	r0, r8, r0
 801add4:	fb02 000e 	mla	r0, r2, lr, r0
 801add8:	fb01 0004 	mla	r0, r1, r4, r0
 801addc:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801adde:	fb09 0004 	mla	r0, r9, r4, r0
 801ade2:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801ade6:	2800      	cmp	r0, #0
 801ade8:	f000 80fa 	beq.w	801afe0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801adec:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801adf0:	d01b      	beq.n	801ae2a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801adf2:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801adf6:	fb0e fa0a 	mul.w	sl, lr, sl
 801adfa:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801adfe:	fb0e fe03 	mul.w	lr, lr, r3
 801ae02:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801ae06:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801ae0a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801ae0e:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801ae12:	4453      	add	r3, sl
 801ae14:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801ae18:	0a1b      	lsrs	r3, r3, #8
 801ae1a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ae1e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801ae22:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801ae26:	ea43 030c 	orr.w	r3, r3, ip
 801ae2a:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801ae2c:	2cff      	cmp	r4, #255	; 0xff
 801ae2e:	d021      	beq.n	801ae74 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801ae30:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801ae32:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801ae36:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801ae38:	fb04 fb0b 	mul.w	fp, r4, fp
 801ae3c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801ae3e:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801ae42:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801ae44:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ae48:	fb04 fa0a 	mul.w	sl, r4, sl
 801ae4c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ae50:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801ae54:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801ae58:	44de      	add	lr, fp
 801ae5a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801ae5e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ae62:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ae66:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ae6a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ae6e:	ea4e 040a 	orr.w	r4, lr, sl
 801ae72:	940e      	str	r4, [sp, #56]	; 0x38
 801ae74:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801ae76:	2cff      	cmp	r4, #255	; 0xff
 801ae78:	d021      	beq.n	801aebe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 801ae7a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801ae7c:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801ae80:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801ae82:	fb04 fb0b 	mul.w	fp, r4, fp
 801ae86:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801ae88:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801ae8c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801ae8e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ae92:	fb04 fa0a 	mul.w	sl, r4, sl
 801ae96:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ae9a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801ae9e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801aea2:	44de      	add	lr, fp
 801aea4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801aea8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801aeac:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801aeb0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801aeb4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801aeb8:	ea4e 040a 	orr.w	r4, lr, sl
 801aebc:	940a      	str	r4, [sp, #40]	; 0x28
 801aebe:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801aec0:	2cff      	cmp	r4, #255	; 0xff
 801aec2:	d021      	beq.n	801af08 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 801aec4:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801aec6:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801aeca:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801aecc:	fb04 fb0b 	mul.w	fp, r4, fp
 801aed0:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801aed2:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801aed6:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801aed8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801aedc:	fb04 fa0a 	mul.w	sl, r4, sl
 801aee0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801aee4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801aee8:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801aeec:	44de      	add	lr, fp
 801aeee:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801aef2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801aef6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801aefa:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801aefe:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801af02:	ea4e 040a 	orr.w	r4, lr, sl
 801af06:	940f      	str	r4, [sp, #60]	; 0x3c
 801af08:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801af0a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801af0e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801af10:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801af14:	fb08 fc0c 	mul.w	ip, r8, ip
 801af18:	fb02 cc0e 	mla	ip, r2, lr, ip
 801af1c:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801af20:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801af22:	fb01 cc0e 	mla	ip, r1, lr, ip
 801af26:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801af2a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801af2c:	fb09 cc0e 	mla	ip, r9, lr, ip
 801af30:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801af34:	fb08 f80e 	mul.w	r8, r8, lr
 801af38:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801af3c:	fb02 8303 	mla	r3, r2, r3, r8
 801af40:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801af42:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801af44:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801af48:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801af4a:	fb01 330a 	mla	r3, r1, sl, r3
 801af4e:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 801af52:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801af54:	fb09 3901 	mla	r9, r9, r1, r3
 801af58:	4342      	muls	r2, r0
 801af5a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801af5e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801af62:	883b      	ldrh	r3, [r7, #0]
 801af64:	1c50      	adds	r0, r2, #1
 801af66:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801af6a:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801af6e:	ea4c 0c09 	orr.w	ip, ip, r9
 801af72:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801af76:	1219      	asrs	r1, r3, #8
 801af78:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801af7c:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801af80:	b2c0      	uxtb	r0, r0
 801af82:	fb12 f204 	smulbb	r2, r2, r4
 801af86:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801af8a:	fb01 2100 	mla	r1, r1, r0, r2
 801af8e:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801af92:	10da      	asrs	r2, r3, #3
 801af94:	fa5f fc8c 	uxtb.w	ip, ip
 801af98:	00db      	lsls	r3, r3, #3
 801af9a:	fb1c fc04 	smulbb	ip, ip, r4
 801af9e:	b2db      	uxtb	r3, r3
 801afa0:	b289      	uxth	r1, r1
 801afa2:	fb03 c300 	mla	r3, r3, r0, ip
 801afa6:	fa1f fc83 	uxth.w	ip, r3
 801afaa:	1c4b      	adds	r3, r1, #1
 801afac:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801afb0:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801afb4:	fb1e fe04 	smulbb	lr, lr, r4
 801afb8:	f10c 0301 	add.w	r3, ip, #1
 801afbc:	fb02 e200 	mla	r2, r2, r0, lr
 801afc0:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801afc4:	b292      	uxth	r2, r2
 801afc6:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801afca:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801afce:	430b      	orrs	r3, r1
 801afd0:	1c51      	adds	r1, r2, #1
 801afd2:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801afd6:	0952      	lsrs	r2, r2, #5
 801afd8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801afdc:	4313      	orrs	r3, r2
 801afde:	803b      	strh	r3, [r7, #0]
 801afe0:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801afe2:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801afe4:	441a      	add	r2, r3
 801afe6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801afe8:	9229      	str	r2, [sp, #164]	; 0xa4
 801afea:	441d      	add	r5, r3
 801afec:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801afee:	3b01      	subs	r3, #1
 801aff0:	3702      	adds	r7, #2
 801aff2:	931a      	str	r3, [sp, #104]	; 0x68
 801aff4:	e694      	b.n	801ad20 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801aff6:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801aff8:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801affa:	441c      	add	r4, r3
 801affc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801affe:	9429      	str	r4, [sp, #164]	; 0xa4
 801b000:	441d      	add	r5, r3
 801b002:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b004:	3b01      	subs	r3, #1
 801b006:	9309      	str	r3, [sp, #36]	; 0x24
 801b008:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801b00a:	3302      	adds	r3, #2
 801b00c:	930c      	str	r3, [sp, #48]	; 0x30
 801b00e:	e666      	b.n	801acde <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801b010:	d024      	beq.n	801b05c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 801b012:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b014:	982b      	ldr	r0, [sp, #172]	; 0xac
 801b016:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801b018:	3b01      	subs	r3, #1
 801b01a:	fb00 4003 	mla	r0, r0, r3, r4
 801b01e:	1400      	asrs	r0, r0, #16
 801b020:	f53f ae7b 	bmi.w	801ad1a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801b024:	3901      	subs	r1, #1
 801b026:	4288      	cmp	r0, r1
 801b028:	f6bf ae77 	bge.w	801ad1a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801b02c:	992c      	ldr	r1, [sp, #176]	; 0xb0
 801b02e:	fb01 5303 	mla	r3, r1, r3, r5
 801b032:	141b      	asrs	r3, r3, #16
 801b034:	f53f ae71 	bmi.w	801ad1a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801b038:	3a01      	subs	r2, #1
 801b03a:	4293      	cmp	r3, r2
 801b03c:	f6bf ae6d 	bge.w	801ad1a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801b040:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801b044:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 801b048:	f1bb 0f00 	cmp.w	fp, #0
 801b04c:	dc70      	bgt.n	801b130 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 801b04e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b050:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801b054:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801b056:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801b05a:	930c      	str	r3, [sp, #48]	; 0x30
 801b05c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801b05e:	2b00      	cmp	r3, #0
 801b060:	f340 81be 	ble.w	801b3e0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801b064:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b068:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801b06c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801b070:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b072:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b076:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b07a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b07e:	eef0 6a62 	vmov.f32	s13, s5
 801b082:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b086:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b08a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b08e:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 801b092:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b096:	eef0 6a43 	vmov.f32	s13, s6
 801b09a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b09e:	ee12 2a90 	vmov	r2, s5
 801b0a2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b0a6:	fb92 f3f3 	sdiv	r3, r2, r3
 801b0aa:	ee13 2a10 	vmov	r2, s6
 801b0ae:	932b      	str	r3, [sp, #172]	; 0xac
 801b0b0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b0b2:	fb92 f3f3 	sdiv	r3, r2, r3
 801b0b6:	932c      	str	r3, [sp, #176]	; 0xb0
 801b0b8:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801b0ba:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 801b0bc:	3b01      	subs	r3, #1
 801b0be:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b0c2:	9319      	str	r3, [sp, #100]	; 0x64
 801b0c4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b0c6:	bf08      	it	eq
 801b0c8:	4613      	moveq	r3, r2
 801b0ca:	ee16 5a90 	vmov	r5, s13
 801b0ce:	9309      	str	r3, [sp, #36]	; 0x24
 801b0d0:	eeb0 3a67 	vmov.f32	s6, s15
 801b0d4:	eef0 2a47 	vmov.f32	s5, s14
 801b0d8:	e5f3      	b.n	801acc2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801b0da:	2900      	cmp	r1, #0
 801b0dc:	f43f ae66 	beq.w	801adac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801b0e0:	f818 0000 	ldrb.w	r0, [r8, r0]
 801b0e4:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801b0e8:	900a      	str	r0, [sp, #40]	; 0x28
 801b0ea:	0e00      	lsrs	r0, r0, #24
 801b0ec:	9013      	str	r0, [sp, #76]	; 0x4c
 801b0ee:	e65d      	b.n	801adac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801b0f0:	f113 0801 	adds.w	r8, r3, #1
 801b0f4:	f53f af74 	bmi.w	801afe0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b0f8:	4540      	cmp	r0, r8
 801b0fa:	f6ff af71 	blt.w	801afe0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b0fe:	f11c 0801 	adds.w	r8, ip, #1
 801b102:	f53f af6d 	bmi.w	801afe0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b106:	45c6      	cmp	lr, r8
 801b108:	f6ff af6a 	blt.w	801afe0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b10c:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 801b10e:	9302      	str	r3, [sp, #8]
 801b110:	b200      	sxth	r0, r0
 801b112:	fa0f f38e 	sxth.w	r3, lr
 801b116:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801b11a:	e9cd c203 	strd	ip, r2, [sp, #12]
 801b11e:	9301      	str	r3, [sp, #4]
 801b120:	9000      	str	r0, [sp, #0]
 801b122:	4633      	mov	r3, r6
 801b124:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801b126:	981d      	ldr	r0, [sp, #116]	; 0x74
 801b128:	4639      	mov	r1, r7
 801b12a:	f7ff fc62 	bl	801a9f2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 801b12e:	e757      	b.n	801afe0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b130:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801b132:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801b134:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801b138:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801b13a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b13e:	1427      	asrs	r7, r4, #16
 801b140:	142b      	asrs	r3, r5, #16
 801b142:	fb01 7303 	mla	r3, r1, r3, r7
 801b146:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801b148:	18e7      	adds	r7, r4, r3
 801b14a:	5ce3      	ldrb	r3, [r4, r3]
 801b14c:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801b150:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801b154:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801b158:	2a00      	cmp	r2, #0
 801b15a:	f000 8137 	beq.w	801b3cc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801b15e:	f897 e001 	ldrb.w	lr, [r7, #1]
 801b162:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801b166:	9410      	str	r4, [sp, #64]	; 0x40
 801b168:	0e24      	lsrs	r4, r4, #24
 801b16a:	9417      	str	r4, [sp, #92]	; 0x5c
 801b16c:	b170      	cbz	r0, 801b18c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801b16e:	eb07 0e01 	add.w	lr, r7, r1
 801b172:	5c79      	ldrb	r1, [r7, r1]
 801b174:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b178:	910b      	str	r1, [sp, #44]	; 0x2c
 801b17a:	0e09      	lsrs	r1, r1, #24
 801b17c:	9114      	str	r1, [sp, #80]	; 0x50
 801b17e:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801b182:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b186:	9111      	str	r1, [sp, #68]	; 0x44
 801b188:	0e09      	lsrs	r1, r1, #24
 801b18a:	9118      	str	r1, [sp, #96]	; 0x60
 801b18c:	b292      	uxth	r2, r2
 801b18e:	b280      	uxth	r0, r0
 801b190:	fb02 f800 	mul.w	r8, r2, r0
 801b194:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801b198:	0112      	lsls	r2, r2, #4
 801b19a:	eba2 0e08 	sub.w	lr, r2, r8
 801b19e:	b280      	uxth	r0, r0
 801b1a0:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801b1a4:	9917      	ldr	r1, [sp, #92]	; 0x5c
 801b1a6:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b1a8:	fa1f fe8e 	uxth.w	lr, lr
 801b1ac:	1a12      	subs	r2, r2, r0
 801b1ae:	b292      	uxth	r2, r2
 801b1b0:	fb0e f101 	mul.w	r1, lr, r1
 801b1b4:	fb02 110c 	mla	r1, r2, ip, r1
 801b1b8:	fb00 1104 	mla	r1, r0, r4, r1
 801b1bc:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801b1be:	fb08 1104 	mla	r1, r8, r4, r1
 801b1c2:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801b1c6:	2900      	cmp	r1, #0
 801b1c8:	f000 80f5 	beq.w	801b3b6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801b1cc:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801b1d0:	d019      	beq.n	801b206 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 801b1d2:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801b1d6:	fb0c fa0a 	mul.w	sl, ip, sl
 801b1da:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b1de:	fb0c fc03 	mul.w	ip, ip, r3
 801b1e2:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801b1e6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b1ea:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801b1ee:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801b1f2:	4453      	add	r3, sl
 801b1f4:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801b1f8:	0a1b      	lsrs	r3, r3, #8
 801b1fa:	0a3f      	lsrs	r7, r7, #8
 801b1fc:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b200:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801b204:	433b      	orrs	r3, r7
 801b206:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801b208:	2cff      	cmp	r4, #255	; 0xff
 801b20a:	d020      	beq.n	801b24e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 801b20c:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b20e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801b212:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801b214:	4367      	muls	r7, r4
 801b216:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b218:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b21c:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801b21e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b222:	fb04 fa0a 	mul.w	sl, r4, sl
 801b226:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b22a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b22e:	44bc      	add	ip, r7
 801b230:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801b234:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b238:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b23c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b240:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b244:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b248:	ea4c 040a 	orr.w	r4, ip, sl
 801b24c:	9410      	str	r4, [sp, #64]	; 0x40
 801b24e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b250:	2cff      	cmp	r4, #255	; 0xff
 801b252:	d020      	beq.n	801b296 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 801b254:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b256:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801b25a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b25c:	4367      	muls	r7, r4
 801b25e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b260:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b264:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b266:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b26a:	fb04 fa0a 	mul.w	sl, r4, sl
 801b26e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b272:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b276:	44bc      	add	ip, r7
 801b278:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801b27c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b280:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b284:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b288:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b28c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b290:	ea4c 040a 	orr.w	r4, ip, sl
 801b294:	940b      	str	r4, [sp, #44]	; 0x2c
 801b296:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801b298:	2cff      	cmp	r4, #255	; 0xff
 801b29a:	d020      	beq.n	801b2de <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 801b29c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801b29e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801b2a2:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801b2a4:	4367      	muls	r7, r4
 801b2a6:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801b2a8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b2ac:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801b2ae:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b2b2:	fb04 fa0a 	mul.w	sl, r4, sl
 801b2b6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b2ba:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b2be:	44bc      	add	ip, r7
 801b2c0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801b2c4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b2c8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b2cc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b2d0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b2d4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b2d8:	ea4c 040a 	orr.w	r4, ip, sl
 801b2dc:	9411      	str	r4, [sp, #68]	; 0x44
 801b2de:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b2e0:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801b2e4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b2e6:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801b2ea:	fb0e f707 	mul.w	r7, lr, r7
 801b2ee:	fb02 770c 	mla	r7, r2, ip, r7
 801b2f2:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801b2f6:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801b2f8:	fb00 770c 	mla	r7, r0, ip, r7
 801b2fc:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801b300:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b302:	fb08 770c 	mla	r7, r8, ip, r7
 801b306:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801b30a:	fb0e fe0c 	mul.w	lr, lr, ip
 801b30e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b312:	fb02 e303 	mla	r3, r2, r3, lr
 801b316:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801b318:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801b31a:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801b31e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801b320:	fb00 330a 	mla	r3, r0, sl, r3
 801b324:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801b328:	fb08 3c0c 	mla	ip, r8, ip, r3
 801b32c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801b32e:	f8b9 0000 	ldrh.w	r0, [r9]
 801b332:	434b      	muls	r3, r1
 801b334:	0a3f      	lsrs	r7, r7, #8
 801b336:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b33a:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801b33e:	1c59      	adds	r1, r3, #1
 801b340:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801b344:	ea47 070c 	orr.w	r7, r7, ip
 801b348:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801b34c:	1202      	asrs	r2, r0, #8
 801b34e:	0c3b      	lsrs	r3, r7, #16
 801b350:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801b354:	b2c9      	uxtb	r1, r1
 801b356:	fb13 f304 	smulbb	r3, r3, r4
 801b35a:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801b35e:	fb02 3201 	mla	r2, r2, r1, r3
 801b362:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801b366:	10c3      	asrs	r3, r0, #3
 801b368:	b2ff      	uxtb	r7, r7
 801b36a:	00c0      	lsls	r0, r0, #3
 801b36c:	b292      	uxth	r2, r2
 801b36e:	fb1c fc04 	smulbb	ip, ip, r4
 801b372:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801b376:	b2c0      	uxtb	r0, r0
 801b378:	fb17 f704 	smulbb	r7, r7, r4
 801b37c:	fb03 c301 	mla	r3, r3, r1, ip
 801b380:	fb00 7001 	mla	r0, r0, r1, r7
 801b384:	f102 0c01 	add.w	ip, r2, #1
 801b388:	b280      	uxth	r0, r0
 801b38a:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801b38e:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 801b392:	1c42      	adds	r2, r0, #1
 801b394:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801b398:	b29b      	uxth	r3, r3
 801b39a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801b39e:	ea42 020c 	orr.w	r2, r2, ip
 801b3a2:	f103 0c01 	add.w	ip, r3, #1
 801b3a6:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801b3aa:	095b      	lsrs	r3, r3, #5
 801b3ac:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b3b0:	431a      	orrs	r2, r3
 801b3b2:	f8a9 2000 	strh.w	r2, [r9]
 801b3b6:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801b3b8:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801b3ba:	441a      	add	r2, r3
 801b3bc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b3be:	9229      	str	r2, [sp, #164]	; 0xa4
 801b3c0:	f109 0902 	add.w	r9, r9, #2
 801b3c4:	441d      	add	r5, r3
 801b3c6:	f10b 3bff 	add.w	fp, fp, #4294967295
 801b3ca:	e63d      	b.n	801b048 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801b3cc:	2800      	cmp	r0, #0
 801b3ce:	f43f aedd 	beq.w	801b18c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801b3d2:	5c79      	ldrb	r1, [r7, r1]
 801b3d4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b3d8:	910b      	str	r1, [sp, #44]	; 0x2c
 801b3da:	0e09      	lsrs	r1, r1, #24
 801b3dc:	9114      	str	r1, [sp, #80]	; 0x50
 801b3de:	e6d5      	b.n	801b18c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801b3e0:	b01f      	add	sp, #124	; 0x7c
 801b3e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b3e6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 801b3e6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b3ea:	b089      	sub	sp, #36	; 0x24
 801b3ec:	9101      	str	r1, [sp, #4]
 801b3ee:	9801      	ldr	r0, [sp, #4]
 801b3f0:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
 801b3f4:	8800      	ldrh	r0, [r0, #0]
 801b3f6:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
 801b3fa:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 801b3fe:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 801b402:	1206      	asrs	r6, r0, #8
 801b404:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
 801b408:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801b40c:	9602      	str	r6, [sp, #8]
 801b40e:	10c6      	asrs	r6, r0, #3
 801b410:	00c0      	lsls	r0, r0, #3
 801b412:	b2c0      	uxtb	r0, r0
 801b414:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801b418:	9004      	str	r0, [sp, #16]
 801b41a:	2f00      	cmp	r7, #0
 801b41c:	fb07 100c 	mla	r0, r7, ip, r1
 801b420:	9603      	str	r6, [sp, #12]
 801b422:	eb02 0e00 	add.w	lr, r2, r0
 801b426:	f2c0 810a 	blt.w	801b63e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801b42a:	45b8      	cmp	r8, r7
 801b42c:	f340 8107 	ble.w	801b63e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801b430:	2900      	cmp	r1, #0
 801b432:	f2c0 8102 	blt.w	801b63a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801b436:	458c      	cmp	ip, r1
 801b438:	f340 80ff 	ble.w	801b63a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801b43c:	5c12      	ldrb	r2, [r2, r0]
 801b43e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 801b442:	1c4a      	adds	r2, r1, #1
 801b444:	f100 80fe 	bmi.w	801b644 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801b448:	4594      	cmp	ip, r2
 801b44a:	f340 80fb 	ble.w	801b644 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801b44e:	2d00      	cmp	r5, #0
 801b450:	f000 80fa 	beq.w	801b648 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 801b454:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801b458:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 801b45c:	3701      	adds	r7, #1
 801b45e:	f100 80f7 	bmi.w	801b650 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801b462:	45b8      	cmp	r8, r7
 801b464:	f340 80f4 	ble.w	801b650 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801b468:	2c00      	cmp	r4, #0
 801b46a:	f000 80f4 	beq.w	801b656 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 801b46e:	2900      	cmp	r1, #0
 801b470:	eb0e 020c 	add.w	r2, lr, ip
 801b474:	f2c0 80ea 	blt.w	801b64c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801b478:	458c      	cmp	ip, r1
 801b47a:	f340 80e7 	ble.w	801b64c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801b47e:	f81e 700c 	ldrb.w	r7, [lr, ip]
 801b482:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 801b486:	3101      	adds	r1, #1
 801b488:	f100 80e8 	bmi.w	801b65c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801b48c:	458c      	cmp	ip, r1
 801b48e:	f340 80e5 	ble.w	801b65c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801b492:	2d00      	cmp	r5, #0
 801b494:	f000 80e4 	beq.w	801b660 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 801b498:	7852      	ldrb	r2, [r2, #1]
 801b49a:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801b49e:	0e0b      	lsrs	r3, r1, #24
 801b4a0:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 801b4a4:	9300      	str	r3, [sp, #0]
 801b4a6:	b2a4      	uxth	r4, r4
 801b4a8:	b2ab      	uxth	r3, r5
 801b4aa:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 801b4ae:	fb03 f904 	mul.w	r9, r3, r4
 801b4b2:	fb0a f505 	mul.w	r5, sl, r5
 801b4b6:	011b      	lsls	r3, r3, #4
 801b4b8:	eba3 0e09 	sub.w	lr, r3, r9
 801b4bc:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
 801b4c0:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 801b4c4:	0a28      	lsrs	r0, r5, #8
 801b4c6:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801b4ca:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 801b4ce:	4405      	add	r5, r0
 801b4d0:	0a2d      	lsrs	r5, r5, #8
 801b4d2:	fb0a f303 	mul.w	r3, sl, r3
 801b4d6:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
 801b4da:	9005      	str	r0, [sp, #20]
 801b4dc:	f503 7080 	add.w	r0, r3, #256	; 0x100
 801b4e0:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801b4e4:	0a1b      	lsrs	r3, r3, #8
 801b4e6:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 801b4ea:	9306      	str	r3, [sp, #24]
 801b4ec:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
 801b4f0:	fb0b f303 	mul.w	r3, fp, r3
 801b4f4:	0a1d      	lsrs	r5, r3, #8
 801b4f6:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801b4fa:	ea4f 6817 	mov.w	r8, r7, lsr #24
 801b4fe:	fb0b f606 	mul.w	r6, fp, r6
 801b502:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 801b506:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 801b50a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801b50e:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801b512:	fb08 f707 	mul.w	r7, r8, r7
 801b516:	441d      	add	r5, r3
 801b518:	f506 7380 	add.w	r3, r6, #256	; 0x100
 801b51c:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801b520:	f507 7380 	add.w	r3, r7, #256	; 0x100
 801b524:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 801b528:	fb08 fc0c 	mul.w	ip, r8, ip
 801b52c:	0a1b      	lsrs	r3, r3, #8
 801b52e:	9307      	str	r3, [sp, #28]
 801b530:	ea4f 201c 	mov.w	r0, ip, lsr #8
 801b534:	0e0b      	lsrs	r3, r1, #24
 801b536:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
 801b53a:	435f      	muls	r7, r3
 801b53c:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801b540:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801b544:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 801b548:	4460      	add	r0, ip
 801b54a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b54e:	b2a4      	uxth	r4, r4
 801b550:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b554:	0a2d      	lsrs	r5, r5, #8
 801b556:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801b55a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b55e:	fa1f fe8e 	uxth.w	lr, lr
 801b562:	4359      	muls	r1, r3
 801b564:	1b12      	subs	r2, r2, r4
 801b566:	9b05      	ldr	r3, [sp, #20]
 801b568:	44bc      	add	ip, r7
 801b56a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801b56e:	b292      	uxth	r2, r2
 801b570:	fb05 f50e 	mul.w	r5, r5, lr
 801b574:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b578:	fb03 5502 	mla	r5, r3, r2, r5
 801b57c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b580:	9b06      	ldr	r3, [sp, #24]
 801b582:	f501 7780 	add.w	r7, r1, #256	; 0x100
 801b586:	0a36      	lsrs	r6, r6, #8
 801b588:	0a00      	lsrs	r0, r0, #8
 801b58a:	fb0c 5509 	mla	r5, ip, r9, r5
 801b58e:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801b592:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801b596:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801b59a:	fb00 5504 	mla	r5, r0, r4, r5
 801b59e:	fb0e f606 	mul.w	r6, lr, r6
 801b5a2:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 801b5a6:	0a09      	lsrs	r1, r1, #8
 801b5a8:	9b07      	ldr	r3, [sp, #28]
 801b5aa:	fb02 6000 	mla	r0, r2, r0, r6
 801b5ae:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801b5b2:	fb09 0001 	mla	r0, r9, r1, r0
 801b5b6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b5ba:	fb0e fe0b 	mul.w	lr, lr, fp
 801b5be:	fb04 0003 	mla	r0, r4, r3, r0
 801b5c2:	fb02 e20a 	mla	r2, r2, sl, lr
 801b5c6:	9b00      	ldr	r3, [sp, #0]
 801b5c8:	fb04 2408 	mla	r4, r4, r8, r2
 801b5cc:	fb09 4903 	mla	r9, r9, r3, r4
 801b5d0:	ea6f 2929 	mvn.w	r9, r9, asr #8
 801b5d4:	9b02      	ldr	r3, [sp, #8]
 801b5d6:	9a04      	ldr	r2, [sp, #16]
 801b5d8:	fa5f f989 	uxtb.w	r9, r9
 801b5dc:	fb03 f109 	mul.w	r1, r3, r9
 801b5e0:	9b03      	ldr	r3, [sp, #12]
 801b5e2:	0a2d      	lsrs	r5, r5, #8
 801b5e4:	0a00      	lsrs	r0, r0, #8
 801b5e6:	fb03 f309 	mul.w	r3, r3, r9
 801b5ea:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801b5ee:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801b5f2:	4305      	orrs	r5, r0
 801b5f4:	fb02 f909 	mul.w	r9, r2, r9
 801b5f8:	1c58      	adds	r0, r3, #1
 801b5fa:	1c4a      	adds	r2, r1, #1
 801b5fc:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801b600:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801b604:	0a2b      	lsrs	r3, r5, #8
 801b606:	0c2a      	lsrs	r2, r5, #16
 801b608:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801b60c:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 801b610:	00db      	lsls	r3, r3, #3
 801b612:	0212      	lsls	r2, r2, #8
 801b614:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801b618:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b61c:	4313      	orrs	r3, r2
 801b61e:	f109 0201 	add.w	r2, r9, #1
 801b622:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 801b626:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 801b62a:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801b62e:	431d      	orrs	r5, r3
 801b630:	9b01      	ldr	r3, [sp, #4]
 801b632:	801d      	strh	r5, [r3, #0]
 801b634:	b009      	add	sp, #36	; 0x24
 801b636:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b63a:	2000      	movs	r0, #0
 801b63c:	e701      	b.n	801b442 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 801b63e:	2600      	movs	r6, #0
 801b640:	4630      	mov	r0, r6
 801b642:	e70b      	b.n	801b45c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801b644:	2600      	movs	r6, #0
 801b646:	e709      	b.n	801b45c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801b648:	462e      	mov	r6, r5
 801b64a:	e707      	b.n	801b45c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801b64c:	2700      	movs	r7, #0
 801b64e:	e71a      	b.n	801b486 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 801b650:	2100      	movs	r1, #0
 801b652:	460f      	mov	r7, r1
 801b654:	e723      	b.n	801b49e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801b656:	4621      	mov	r1, r4
 801b658:	4627      	mov	r7, r4
 801b65a:	e720      	b.n	801b49e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801b65c:	2100      	movs	r1, #0
 801b65e:	e71e      	b.n	801b49e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801b660:	4629      	mov	r1, r5
 801b662:	e71c      	b.n	801b49e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

0801b664 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b664:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b668:	b09b      	sub	sp, #108	; 0x6c
 801b66a:	9218      	str	r2, [sp, #96]	; 0x60
 801b66c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801b66e:	9116      	str	r1, [sp, #88]	; 0x58
 801b670:	9307      	str	r3, [sp, #28]
 801b672:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801b676:	9019      	str	r0, [sp, #100]	; 0x64
 801b678:	6850      	ldr	r0, [r2, #4]
 801b67a:	6812      	ldr	r2, [r2, #0]
 801b67c:	9d26      	ldr	r5, [sp, #152]	; 0x98
 801b67e:	fb00 1303 	mla	r3, r0, r3, r1
 801b682:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b686:	930a      	str	r3, [sp, #40]	; 0x28
 801b688:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b68a:	681b      	ldr	r3, [r3, #0]
 801b68c:	930f      	str	r3, [sp, #60]	; 0x3c
 801b68e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b690:	685e      	ldr	r6, [r3, #4]
 801b692:	3604      	adds	r6, #4
 801b694:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801b696:	2b00      	cmp	r3, #0
 801b698:	dc03      	bgt.n	801b6a2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801b69a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801b69c:	2b00      	cmp	r3, #0
 801b69e:	f340 8373 	ble.w	801bd88 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801b6a2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b6a4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b6a8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801b6ac:	1e48      	subs	r0, r1, #1
 801b6ae:	1e57      	subs	r7, r2, #1
 801b6b0:	9b07      	ldr	r3, [sp, #28]
 801b6b2:	2b00      	cmp	r3, #0
 801b6b4:	f340 8190 	ble.w	801b9d8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801b6b8:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801b6ba:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801b6be:	ea4f 4325 	mov.w	r3, r5, asr #16
 801b6c2:	d406      	bmi.n	801b6d2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b6c4:	4584      	cmp	ip, r0
 801b6c6:	da04      	bge.n	801b6d2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b6c8:	2b00      	cmp	r3, #0
 801b6ca:	db02      	blt.n	801b6d2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b6cc:	42bb      	cmp	r3, r7
 801b6ce:	f2c0 8184 	blt.w	801b9da <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 801b6d2:	f11c 0c01 	adds.w	ip, ip, #1
 801b6d6:	f100 8172 	bmi.w	801b9be <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b6da:	4561      	cmp	r1, ip
 801b6dc:	f2c0 816f 	blt.w	801b9be <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b6e0:	3301      	adds	r3, #1
 801b6e2:	f100 816c 	bmi.w	801b9be <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b6e6:	429a      	cmp	r2, r3
 801b6e8:	f2c0 8169 	blt.w	801b9be <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b6ec:	9b07      	ldr	r3, [sp, #28]
 801b6ee:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801b6f0:	9317      	str	r3, [sp, #92]	; 0x5c
 801b6f2:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801b6f4:	2b00      	cmp	r3, #0
 801b6f6:	f340 818e 	ble.w	801ba16 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 801b6fa:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801b6fc:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801b700:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b702:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 801b706:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801b708:	141b      	asrs	r3, r3, #16
 801b70a:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801b70e:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801b712:	f100 81d1 	bmi.w	801bab8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801b716:	f101 38ff 	add.w	r8, r1, #4294967295
 801b71a:	4543      	cmp	r3, r8
 801b71c:	f280 81cc 	bge.w	801bab8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801b720:	f1bc 0f00 	cmp.w	ip, #0
 801b724:	f2c0 81c8 	blt.w	801bab8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801b728:	f10e 38ff 	add.w	r8, lr, #4294967295
 801b72c:	45c4      	cmp	ip, r8
 801b72e:	f280 81c3 	bge.w	801bab8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801b732:	b209      	sxth	r1, r1
 801b734:	fb0c 3301 	mla	r3, ip, r1, r3
 801b738:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801b73a:	eb04 0803 	add.w	r8, r4, r3
 801b73e:	5ce3      	ldrb	r3, [r4, r3]
 801b740:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801b744:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801b748:	2a00      	cmp	r2, #0
 801b74a:	f000 81aa 	beq.w	801baa2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 801b74e:	f898 c001 	ldrb.w	ip, [r8, #1]
 801b752:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801b756:	940b      	str	r4, [sp, #44]	; 0x2c
 801b758:	0e24      	lsrs	r4, r4, #24
 801b75a:	9412      	str	r4, [sp, #72]	; 0x48
 801b75c:	b178      	cbz	r0, 801b77e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801b75e:	eb08 0c01 	add.w	ip, r8, r1
 801b762:	f818 1001 	ldrb.w	r1, [r8, r1]
 801b766:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b76a:	9108      	str	r1, [sp, #32]
 801b76c:	0e09      	lsrs	r1, r1, #24
 801b76e:	9110      	str	r1, [sp, #64]	; 0x40
 801b770:	f89c 1001 	ldrb.w	r1, [ip, #1]
 801b774:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b778:	910c      	str	r1, [sp, #48]	; 0x30
 801b77a:	0e09      	lsrs	r1, r1, #24
 801b77c:	9113      	str	r1, [sp, #76]	; 0x4c
 801b77e:	b292      	uxth	r2, r2
 801b780:	b280      	uxth	r0, r0
 801b782:	fb02 f900 	mul.w	r9, r2, r0
 801b786:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801b78a:	0112      	lsls	r2, r2, #4
 801b78c:	eba2 0809 	sub.w	r8, r2, r9
 801b790:	b280      	uxth	r0, r0
 801b792:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801b796:	9912      	ldr	r1, [sp, #72]	; 0x48
 801b798:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b79a:	fa1f f888 	uxth.w	r8, r8
 801b79e:	1a12      	subs	r2, r2, r0
 801b7a0:	b292      	uxth	r2, r2
 801b7a2:	fb08 f101 	mul.w	r1, r8, r1
 801b7a6:	fb02 110e 	mla	r1, r2, lr, r1
 801b7aa:	fb00 1104 	mla	r1, r0, r4, r1
 801b7ae:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b7b0:	fb09 1104 	mla	r1, r9, r4, r1
 801b7b4:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801b7b8:	2900      	cmp	r1, #0
 801b7ba:	f000 80f5 	beq.w	801b9a8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801b7be:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801b7c2:	d01b      	beq.n	801b7fc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b7c4:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801b7c8:	fb0e fa0a 	mul.w	sl, lr, sl
 801b7cc:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b7d0:	fb0e fe03 	mul.w	lr, lr, r3
 801b7d4:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801b7d8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b7dc:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801b7e0:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801b7e4:	4453      	add	r3, sl
 801b7e6:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801b7ea:	0a1b      	lsrs	r3, r3, #8
 801b7ec:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b7f0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b7f4:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801b7f8:	ea43 030c 	orr.w	r3, r3, ip
 801b7fc:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801b7fe:	2cff      	cmp	r4, #255	; 0xff
 801b800:	d021      	beq.n	801b846 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 801b802:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b804:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801b808:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801b80a:	fb04 fb0b 	mul.w	fp, r4, fp
 801b80e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b810:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b814:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801b816:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b81a:	fb04 fa0a 	mul.w	sl, r4, sl
 801b81e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b822:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801b826:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801b82a:	44de      	add	lr, fp
 801b82c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b830:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b834:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b838:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b83c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b840:	ea4e 040a 	orr.w	r4, lr, sl
 801b844:	940b      	str	r4, [sp, #44]	; 0x2c
 801b846:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b848:	2cff      	cmp	r4, #255	; 0xff
 801b84a:	d021      	beq.n	801b890 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 801b84c:	9c08      	ldr	r4, [sp, #32]
 801b84e:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801b852:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b854:	fb04 fb0b 	mul.w	fp, r4, fp
 801b858:	9c08      	ldr	r4, [sp, #32]
 801b85a:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b85e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b860:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b864:	fb04 fa0a 	mul.w	sl, r4, sl
 801b868:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b86c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801b870:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801b874:	44de      	add	lr, fp
 801b876:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b87a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b87e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b882:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b886:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b88a:	ea4e 040a 	orr.w	r4, lr, sl
 801b88e:	9408      	str	r4, [sp, #32]
 801b890:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b892:	2cff      	cmp	r4, #255	; 0xff
 801b894:	d021      	beq.n	801b8da <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801b896:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801b898:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801b89c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b89e:	fb04 fb0b 	mul.w	fp, r4, fp
 801b8a2:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801b8a4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b8a8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b8aa:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b8ae:	fb04 fa0a 	mul.w	sl, r4, sl
 801b8b2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b8b6:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801b8ba:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801b8be:	44de      	add	lr, fp
 801b8c0:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b8c4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b8c8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b8cc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b8d0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b8d4:	ea4e 040a 	orr.w	r4, lr, sl
 801b8d8:	940c      	str	r4, [sp, #48]	; 0x30
 801b8da:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b8dc:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801b8e0:	9c08      	ldr	r4, [sp, #32]
 801b8e2:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801b8e6:	fb08 fc0c 	mul.w	ip, r8, ip
 801b8ea:	fb02 cc0e 	mla	ip, r2, lr, ip
 801b8ee:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801b8f2:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801b8f4:	fb00 cc0e 	mla	ip, r0, lr, ip
 801b8f8:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801b8fc:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b8fe:	fb09 cc0e 	mla	ip, r9, lr, ip
 801b902:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801b906:	fb08 f80e 	mul.w	r8, r8, lr
 801b90a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b90e:	fb02 8303 	mla	r3, r2, r3, r8
 801b912:	9a08      	ldr	r2, [sp, #32]
 801b914:	f8b7 8000 	ldrh.w	r8, [r7]
 801b918:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801b91c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801b91e:	fb00 330a 	mla	r3, r0, sl, r3
 801b922:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 801b926:	fb09 3900 	mla	r9, r9, r0, r3
 801b92a:	43c9      	mvns	r1, r1
 801b92c:	ea4f 2228 	mov.w	r2, r8, asr #8
 801b930:	fa5f fe81 	uxtb.w	lr, r1
 801b934:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b938:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801b93c:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801b940:	fb02 f20e 	mul.w	r2, r2, lr
 801b944:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b948:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801b94c:	ea4c 0c09 	orr.w	ip, ip, r9
 801b950:	1c53      	adds	r3, r2, #1
 801b952:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 801b956:	ea4f 00e8 	mov.w	r0, r8, asr #3
 801b95a:	ea4f 431c 	mov.w	r3, ip, lsr #16
 801b95e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801b962:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801b966:	4a63      	ldr	r2, [pc, #396]	; (801baf4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 801b968:	fb00 f00e 	mul.w	r0, r0, lr
 801b96c:	b2db      	uxtb	r3, r3
 801b96e:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 801b972:	1c43      	adds	r3, r0, #1
 801b974:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801b978:	ea4f 231c 	mov.w	r3, ip, lsr #8
 801b97c:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 801b980:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801b984:	b2c9      	uxtb	r1, r1
 801b986:	00db      	lsls	r3, r3, #3
 801b988:	fb01 f10e 	mul.w	r1, r1, lr
 801b98c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b990:	4313      	orrs	r3, r2
 801b992:	1c4a      	adds	r2, r1, #1
 801b994:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801b998:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801b99c:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801b9a0:	ea4c 0c03 	orr.w	ip, ip, r3
 801b9a4:	f8a7 c000 	strh.w	ip, [r7]
 801b9a8:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801b9aa:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801b9ac:	441a      	add	r2, r3
 801b9ae:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b9b0:	9225      	str	r2, [sp, #148]	; 0x94
 801b9b2:	441d      	add	r5, r3
 801b9b4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801b9b6:	3b01      	subs	r3, #1
 801b9b8:	3702      	adds	r7, #2
 801b9ba:	9317      	str	r3, [sp, #92]	; 0x5c
 801b9bc:	e699      	b.n	801b6f2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801b9be:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801b9c0:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801b9c2:	441c      	add	r4, r3
 801b9c4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b9c6:	9425      	str	r4, [sp, #148]	; 0x94
 801b9c8:	441d      	add	r5, r3
 801b9ca:	9b07      	ldr	r3, [sp, #28]
 801b9cc:	3b01      	subs	r3, #1
 801b9ce:	9307      	str	r3, [sp, #28]
 801b9d0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b9d2:	3302      	adds	r3, #2
 801b9d4:	930a      	str	r3, [sp, #40]	; 0x28
 801b9d6:	e66b      	b.n	801b6b0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801b9d8:	d024      	beq.n	801ba24 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 801b9da:	9b07      	ldr	r3, [sp, #28]
 801b9dc:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801b9de:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801b9e0:	3b01      	subs	r3, #1
 801b9e2:	fb00 4003 	mla	r0, r0, r3, r4
 801b9e6:	1400      	asrs	r0, r0, #16
 801b9e8:	f53f ae80 	bmi.w	801b6ec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801b9ec:	3901      	subs	r1, #1
 801b9ee:	4288      	cmp	r0, r1
 801b9f0:	f6bf ae7c 	bge.w	801b6ec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801b9f4:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801b9f6:	fb01 5303 	mla	r3, r1, r3, r5
 801b9fa:	141b      	asrs	r3, r3, #16
 801b9fc:	f53f ae76 	bmi.w	801b6ec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801ba00:	3a01      	subs	r2, #1
 801ba02:	4293      	cmp	r3, r2
 801ba04:	f6bf ae72 	bge.w	801b6ec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801ba08:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801ba0c:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 801ba10:	f1bb 0f00 	cmp.w	fp, #0
 801ba14:	dc70      	bgt.n	801baf8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801ba16:	9b07      	ldr	r3, [sp, #28]
 801ba18:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801ba1c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ba1e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801ba22:	930a      	str	r3, [sp, #40]	; 0x28
 801ba24:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801ba26:	2b00      	cmp	r3, #0
 801ba28:	f340 81ae 	ble.w	801bd88 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801ba2c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ba30:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801ba34:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ba38:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ba3a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ba3e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ba42:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ba46:	eef0 6a62 	vmov.f32	s13, s5
 801ba4a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ba4e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ba52:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ba56:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 801ba5a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ba5e:	eef0 6a43 	vmov.f32	s13, s6
 801ba62:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ba66:	ee12 2a90 	vmov	r2, s5
 801ba6a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ba6e:	fb92 f3f3 	sdiv	r3, r2, r3
 801ba72:	ee13 2a10 	vmov	r2, s6
 801ba76:	9327      	str	r3, [sp, #156]	; 0x9c
 801ba78:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ba7a:	fb92 f3f3 	sdiv	r3, r2, r3
 801ba7e:	9328      	str	r3, [sp, #160]	; 0xa0
 801ba80:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801ba82:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801ba84:	3b01      	subs	r3, #1
 801ba86:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ba8a:	9316      	str	r3, [sp, #88]	; 0x58
 801ba8c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ba8e:	bf08      	it	eq
 801ba90:	4613      	moveq	r3, r2
 801ba92:	ee16 5a90 	vmov	r5, s13
 801ba96:	9307      	str	r3, [sp, #28]
 801ba98:	eeb0 3a67 	vmov.f32	s6, s15
 801ba9c:	eef0 2a47 	vmov.f32	s5, s14
 801baa0:	e5f8      	b.n	801b694 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801baa2:	2800      	cmp	r0, #0
 801baa4:	f43f ae6b 	beq.w	801b77e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801baa8:	f818 1001 	ldrb.w	r1, [r8, r1]
 801baac:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801bab0:	9108      	str	r1, [sp, #32]
 801bab2:	0e09      	lsrs	r1, r1, #24
 801bab4:	9110      	str	r1, [sp, #64]	; 0x40
 801bab6:	e662      	b.n	801b77e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801bab8:	f113 0801 	adds.w	r8, r3, #1
 801babc:	f53f af74 	bmi.w	801b9a8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801bac0:	4541      	cmp	r1, r8
 801bac2:	f6ff af71 	blt.w	801b9a8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801bac6:	f11c 0801 	adds.w	r8, ip, #1
 801baca:	f53f af6d 	bmi.w	801b9a8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801bace:	45c6      	cmp	lr, r8
 801bad0:	f6ff af6a 	blt.w	801b9a8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801bad4:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 801bad8:	b209      	sxth	r1, r1
 801bada:	fa0f f38e 	sxth.w	r3, lr
 801bade:	e9cd 2004 	strd	r2, r0, [sp, #16]
 801bae2:	9301      	str	r3, [sp, #4]
 801bae4:	9100      	str	r1, [sp, #0]
 801bae6:	4633      	mov	r3, r6
 801bae8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801baea:	9819      	ldr	r0, [sp, #100]	; 0x64
 801baec:	4639      	mov	r1, r7
 801baee:	f7ff fc7a 	bl	801b3e6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 801baf2:	e759      	b.n	801b9a8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801baf4:	fffff800 	.word	0xfffff800
 801baf8:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801bafa:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801bafc:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801bb00:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801bb02:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801bb06:	1427      	asrs	r7, r4, #16
 801bb08:	142b      	asrs	r3, r5, #16
 801bb0a:	fb01 7303 	mla	r3, r1, r3, r7
 801bb0e:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801bb10:	18e7      	adds	r7, r4, r3
 801bb12:	5ce3      	ldrb	r3, [r4, r3]
 801bb14:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801bb18:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801bb1c:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801bb20:	2a00      	cmp	r2, #0
 801bb22:	f000 8127 	beq.w	801bd74 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801bb26:	f897 e001 	ldrb.w	lr, [r7, #1]
 801bb2a:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801bb2e:	940d      	str	r4, [sp, #52]	; 0x34
 801bb30:	0e24      	lsrs	r4, r4, #24
 801bb32:	9414      	str	r4, [sp, #80]	; 0x50
 801bb34:	b170      	cbz	r0, 801bb54 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801bb36:	eb07 0e01 	add.w	lr, r7, r1
 801bb3a:	5c79      	ldrb	r1, [r7, r1]
 801bb3c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801bb40:	9109      	str	r1, [sp, #36]	; 0x24
 801bb42:	0e09      	lsrs	r1, r1, #24
 801bb44:	9111      	str	r1, [sp, #68]	; 0x44
 801bb46:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801bb4a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801bb4e:	910e      	str	r1, [sp, #56]	; 0x38
 801bb50:	0e09      	lsrs	r1, r1, #24
 801bb52:	9115      	str	r1, [sp, #84]	; 0x54
 801bb54:	b292      	uxth	r2, r2
 801bb56:	b280      	uxth	r0, r0
 801bb58:	fb02 f800 	mul.w	r8, r2, r0
 801bb5c:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801bb60:	0112      	lsls	r2, r2, #4
 801bb62:	eba2 0e08 	sub.w	lr, r2, r8
 801bb66:	b280      	uxth	r0, r0
 801bb68:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801bb6c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801bb6e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801bb70:	fa1f fe8e 	uxth.w	lr, lr
 801bb74:	1a09      	subs	r1, r1, r0
 801bb76:	b289      	uxth	r1, r1
 801bb78:	fb0e f202 	mul.w	r2, lr, r2
 801bb7c:	fb01 220c 	mla	r2, r1, ip, r2
 801bb80:	fb00 2204 	mla	r2, r0, r4, r2
 801bb84:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801bb86:	fb08 2204 	mla	r2, r8, r4, r2
 801bb8a:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801bb8e:	2a00      	cmp	r2, #0
 801bb90:	f000 80e5 	beq.w	801bd5e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 801bb94:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801bb98:	d019      	beq.n	801bbce <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 801bb9a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801bb9e:	fb0c fa0a 	mul.w	sl, ip, sl
 801bba2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801bba6:	fb0c fc03 	mul.w	ip, ip, r3
 801bbaa:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801bbae:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801bbb2:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801bbb6:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801bbba:	4453      	add	r3, sl
 801bbbc:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801bbc0:	0a1b      	lsrs	r3, r3, #8
 801bbc2:	0a3f      	lsrs	r7, r7, #8
 801bbc4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801bbc8:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801bbcc:	433b      	orrs	r3, r7
 801bbce:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801bbd0:	2cff      	cmp	r4, #255	; 0xff
 801bbd2:	d020      	beq.n	801bc16 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 801bbd4:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801bbd6:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801bbda:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801bbdc:	4367      	muls	r7, r4
 801bbde:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801bbe0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801bbe4:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801bbe6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801bbea:	fb04 fa0a 	mul.w	sl, r4, sl
 801bbee:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801bbf2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bbf6:	44bc      	add	ip, r7
 801bbf8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801bbfc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801bc00:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bc04:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bc08:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bc0c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801bc10:	ea4c 040a 	orr.w	r4, ip, sl
 801bc14:	940d      	str	r4, [sp, #52]	; 0x34
 801bc16:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801bc18:	2cff      	cmp	r4, #255	; 0xff
 801bc1a:	d020      	beq.n	801bc5e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 801bc1c:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801bc1e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801bc22:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801bc24:	4367      	muls	r7, r4
 801bc26:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801bc28:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801bc2c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801bc2e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801bc32:	fb04 fa0a 	mul.w	sl, r4, sl
 801bc36:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801bc3a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bc3e:	44bc      	add	ip, r7
 801bc40:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801bc44:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801bc48:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bc4c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bc50:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bc54:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801bc58:	ea4c 040a 	orr.w	r4, ip, sl
 801bc5c:	9409      	str	r4, [sp, #36]	; 0x24
 801bc5e:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801bc60:	2cff      	cmp	r4, #255	; 0xff
 801bc62:	d020      	beq.n	801bca6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 801bc64:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801bc66:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801bc6a:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801bc6c:	4367      	muls	r7, r4
 801bc6e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801bc70:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801bc74:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801bc76:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801bc7a:	fb04 fa0a 	mul.w	sl, r4, sl
 801bc7e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801bc82:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bc86:	44bc      	add	ip, r7
 801bc88:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801bc8c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801bc90:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bc94:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bc98:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bc9c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801bca0:	ea4c 040a 	orr.w	r4, ip, sl
 801bca4:	940e      	str	r4, [sp, #56]	; 0x38
 801bca6:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801bca8:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801bcac:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801bcae:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801bcb2:	fb0e f707 	mul.w	r7, lr, r7
 801bcb6:	fb01 770c 	mla	r7, r1, ip, r7
 801bcba:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801bcbe:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801bcc0:	fb00 770c 	mla	r7, r0, ip, r7
 801bcc4:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801bcc8:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801bcca:	fb08 770c 	mla	r7, r8, ip, r7
 801bcce:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801bcd2:	fb0e fe0c 	mul.w	lr, lr, ip
 801bcd6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801bcda:	fb01 e303 	mla	r3, r1, r3, lr
 801bcde:	9909      	ldr	r1, [sp, #36]	; 0x24
 801bce0:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801bce4:	990e      	ldr	r1, [sp, #56]	; 0x38
 801bce6:	fb00 330a 	mla	r3, r0, sl, r3
 801bcea:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801bcee:	fb08 3c0c 	mla	ip, r8, ip, r3
 801bcf2:	f8b9 3000 	ldrh.w	r3, [r9]
 801bcf6:	43d2      	mvns	r2, r2
 801bcf8:	1218      	asrs	r0, r3, #8
 801bcfa:	b2d2      	uxtb	r2, r2
 801bcfc:	10d9      	asrs	r1, r3, #3
 801bcfe:	0a3f      	lsrs	r7, r7, #8
 801bd00:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bd04:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801bd08:	00db      	lsls	r3, r3, #3
 801bd0a:	4350      	muls	r0, r2
 801bd0c:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801bd10:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801bd14:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801bd18:	b2db      	uxtb	r3, r3
 801bd1a:	ea47 070c 	orr.w	r7, r7, ip
 801bd1e:	4351      	muls	r1, r2
 801bd20:	4353      	muls	r3, r2
 801bd22:	1c42      	adds	r2, r0, #1
 801bd24:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801bd28:	0c3a      	lsrs	r2, r7, #16
 801bd2a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801bd2e:	4a18      	ldr	r2, [pc, #96]	; (801bd90 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 801bd30:	b2c0      	uxtb	r0, r0
 801bd32:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 801bd36:	1c4a      	adds	r2, r1, #1
 801bd38:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801bd3c:	0a3a      	lsrs	r2, r7, #8
 801bd3e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801bd42:	00c9      	lsls	r1, r1, #3
 801bd44:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801bd48:	4301      	orrs	r1, r0
 801bd4a:	1c58      	adds	r0, r3, #1
 801bd4c:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801bd50:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801bd54:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 801bd58:	4308      	orrs	r0, r1
 801bd5a:	f8a9 0000 	strh.w	r0, [r9]
 801bd5e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801bd60:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801bd62:	441a      	add	r2, r3
 801bd64:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801bd66:	9225      	str	r2, [sp, #148]	; 0x94
 801bd68:	f109 0902 	add.w	r9, r9, #2
 801bd6c:	441d      	add	r5, r3
 801bd6e:	f10b 3bff 	add.w	fp, fp, #4294967295
 801bd72:	e64d      	b.n	801ba10 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 801bd74:	2800      	cmp	r0, #0
 801bd76:	f43f aeed 	beq.w	801bb54 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801bd7a:	5c79      	ldrb	r1, [r7, r1]
 801bd7c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801bd80:	9109      	str	r1, [sp, #36]	; 0x24
 801bd82:	0e09      	lsrs	r1, r1, #24
 801bd84:	9111      	str	r1, [sp, #68]	; 0x44
 801bd86:	e6e5      	b.n	801bb54 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801bd88:	b01b      	add	sp, #108	; 0x6c
 801bd8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bd8e:	bf00      	nop
 801bd90:	fffff800 	.word	0xfffff800

0801bd94 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 801bd94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bd98:	b085      	sub	sp, #20
 801bd9a:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 801bd9e:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 801bda2:	9103      	str	r1, [sp, #12]
 801bda4:	fb00 7406 	mla	r4, r0, r6, r7
 801bda8:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 801bdac:	2800      	cmp	r0, #0
 801bdae:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 801bdb2:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 801bdb6:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 801bdba:	9501      	str	r5, [sp, #4]
 801bdbc:	eb03 0904 	add.w	r9, r3, r4
 801bdc0:	f2c0 8150 	blt.w	801c064 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801bdc4:	4583      	cmp	fp, r0
 801bdc6:	f340 814d 	ble.w	801c064 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801bdca:	2f00      	cmp	r7, #0
 801bdcc:	f2c0 8146 	blt.w	801c05c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801bdd0:	42be      	cmp	r6, r7
 801bdd2:	f340 8143 	ble.w	801c05c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801bdd6:	f813 c004 	ldrb.w	ip, [r3, r4]
 801bdda:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 801bdde:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801bde2:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 801bde6:	4355      	muls	r5, r2
 801bde8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801bdec:	f64f 041f 	movw	r4, #63519	; 0xf81f
 801bdf0:	fb0c f203 	mul.w	r2, ip, r3
 801bdf4:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801bdf8:	f605 0501 	addw	r5, r5, #2049	; 0x801
 801bdfc:	441d      	add	r5, r3
 801bdfe:	f102 0320 	add.w	r3, r2, #32
 801be02:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801be06:	0a1b      	lsrs	r3, r3, #8
 801be08:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801be0c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801be10:	431c      	orrs	r4, r3
 801be12:	1c7b      	adds	r3, r7, #1
 801be14:	f100 812b 	bmi.w	801c06e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801be18:	429e      	cmp	r6, r3
 801be1a:	f340 8128 	ble.w	801c06e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801be1e:	2900      	cmp	r1, #0
 801be20:	f000 8128 	beq.w	801c074 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 801be24:	9a01      	ldr	r2, [sp, #4]
 801be26:	f899 3001 	ldrb.w	r3, [r9, #1]
 801be2a:	8855      	ldrh	r5, [r2, #2]
 801be2c:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801be30:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 801be34:	fb08 f802 	mul.w	r8, r8, r2
 801be38:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801be3c:	f64f 021f 	movw	r2, #63519	; 0xf81f
 801be40:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801be44:	435d      	muls	r5, r3
 801be46:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801be4a:	44d0      	add	r8, sl
 801be4c:	f105 0a20 	add.w	sl, r5, #32
 801be50:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801be54:	0a2d      	lsrs	r5, r5, #8
 801be56:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801be5a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801be5e:	432a      	orrs	r2, r5
 801be60:	3001      	adds	r0, #1
 801be62:	f100 810d 	bmi.w	801c080 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801be66:	4583      	cmp	fp, r0
 801be68:	f340 810a 	ble.w	801c080 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801be6c:	f1be 0f00 	cmp.w	lr, #0
 801be70:	f000 810b 	beq.w	801c08a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 801be74:	2f00      	cmp	r7, #0
 801be76:	f2c0 8100 	blt.w	801c07a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801be7a:	42be      	cmp	r6, r7
 801be7c:	f340 80fd 	ble.w	801c07a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801be80:	9801      	ldr	r0, [sp, #4]
 801be82:	f819 5006 	ldrb.w	r5, [r9, r6]
 801be86:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801be8a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801be8e:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 801be92:	fb0a fa00 	mul.w	sl, sl, r0
 801be96:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801be9a:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801be9e:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801bea2:	fb05 f808 	mul.w	r8, r5, r8
 801bea6:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 801beaa:	4482      	add	sl, r0
 801beac:	f108 0020 	add.w	r0, r8, #32
 801beb0:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801beb4:	0a00      	lsrs	r0, r0, #8
 801beb6:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801beba:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801bebe:	ea4b 0b00 	orr.w	fp, fp, r0
 801bec2:	3701      	adds	r7, #1
 801bec4:	f100 80e6 	bmi.w	801c094 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801bec8:	42be      	cmp	r6, r7
 801beca:	f340 80e3 	ble.w	801c094 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801bece:	2900      	cmp	r1, #0
 801bed0:	f000 80e3 	beq.w	801c09a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 801bed4:	3601      	adds	r6, #1
 801bed6:	9801      	ldr	r0, [sp, #4]
 801bed8:	f819 7006 	ldrb.w	r7, [r9, r6]
 801bedc:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801bee0:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801bee4:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 801bee8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801beec:	fb09 f906 	mul.w	r9, r9, r6
 801bef0:	fb07 f800 	mul.w	r8, r7, r0
 801bef4:	f64f 001f 	movw	r0, #63519	; 0xf81f
 801bef8:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801befc:	f609 0901 	addw	r9, r9, #2049	; 0x801
 801bf00:	44d1      	add	r9, sl
 801bf02:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801bf06:	f108 0020 	add.w	r0, r8, #32
 801bf0a:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801bf0e:	0a00      	lsrs	r0, r0, #8
 801bf10:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801bf14:	4330      	orrs	r0, r6
 801bf16:	b28e      	uxth	r6, r1
 801bf18:	fa1f f98e 	uxth.w	r9, lr
 801bf1c:	fb06 f809 	mul.w	r8, r6, r9
 801bf20:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801bf24:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801bf28:	0136      	lsls	r6, r6, #4
 801bf2a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801bf2e:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801bf32:	9601      	str	r6, [sp, #4]
 801bf34:	ea4a 0404 	orr.w	r4, sl, r4
 801bf38:	fa1f f689 	uxth.w	r6, r9
 801bf3c:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801bf40:	fb11 f90e 	smulbb	r9, r1, lr
 801bf44:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801bf48:	9602      	str	r6, [sp, #8]
 801bf4a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801bf4e:	4626      	mov	r6, r4
 801bf50:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801bf54:	f1ce 0410 	rsb	r4, lr, #16
 801bf58:	1a64      	subs	r4, r4, r1
 801bf5a:	ea4a 0202 	orr.w	r2, sl, r2
 801bf5e:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801bf62:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801bf66:	434a      	muls	r2, r1
 801bf68:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801bf6c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801bf70:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801bf74:	fb04 2406 	mla	r4, r4, r6, r2
 801bf78:	ea4a 0000 	orr.w	r0, sl, r0
 801bf7c:	fb09 4200 	mla	r2, r9, r0, r4
 801bf80:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801bf84:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801bf88:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801bf8c:	ea44 0b0b 	orr.w	fp, r4, fp
 801bf90:	9c01      	ldr	r4, [sp, #4]
 801bf92:	9e02      	ldr	r6, [sp, #8]
 801bf94:	9903      	ldr	r1, [sp, #12]
 801bf96:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
 801bf9a:	1ba4      	subs	r4, r4, r6
 801bf9c:	9e01      	ldr	r6, [sp, #4]
 801bf9e:	8808      	ldrh	r0, [r1, #0]
 801bfa0:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
 801bfa4:	eba6 0608 	sub.w	r6, r6, r8
 801bfa8:	b2b6      	uxth	r6, r6
 801bfaa:	b2a4      	uxth	r4, r4
 801bfac:	4373      	muls	r3, r6
 801bfae:	fb0c 3304 	mla	r3, ip, r4, r3
 801bfb2:	9c02      	ldr	r4, [sp, #8]
 801bfb4:	fb04 3505 	mla	r5, r4, r5, r3
 801bfb8:	fb08 5707 	mla	r7, r8, r7, r5
 801bfbc:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801bfc0:	b289      	uxth	r1, r1
 801bfc2:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801bfc6:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801bfca:	434f      	muls	r7, r1
 801bfcc:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801bfd0:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801bfd4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801bfd8:	1c7b      	adds	r3, r7, #1
 801bfda:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801bfde:	ea42 0e0e 	orr.w	lr, r2, lr
 801bfe2:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801bfe6:	fa1f f28e 	uxth.w	r2, lr
 801bfea:	1203      	asrs	r3, r0, #8
 801bfec:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 801bff0:	b2ff      	uxtb	r7, r7
 801bff2:	1215      	asrs	r5, r2, #8
 801bff4:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801bff8:	fb13 f307 	smulbb	r3, r3, r7
 801bffc:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801c000:	fb05 3501 	mla	r5, r5, r1, r3
 801c004:	10c3      	asrs	r3, r0, #3
 801c006:	10d4      	asrs	r4, r2, #3
 801c008:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801c00c:	fb13 f307 	smulbb	r3, r3, r7
 801c010:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801c014:	fb04 3401 	mla	r4, r4, r1, r3
 801c018:	00c3      	lsls	r3, r0, #3
 801c01a:	00d2      	lsls	r2, r2, #3
 801c01c:	b2db      	uxtb	r3, r3
 801c01e:	fb13 f307 	smulbb	r3, r3, r7
 801c022:	b2d2      	uxtb	r2, r2
 801c024:	fb02 3101 	mla	r1, r2, r1, r3
 801c028:	b2ad      	uxth	r5, r5
 801c02a:	b289      	uxth	r1, r1
 801c02c:	b2a4      	uxth	r4, r4
 801c02e:	1c6b      	adds	r3, r5, #1
 801c030:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801c034:	1c62      	adds	r2, r4, #1
 801c036:	1c4b      	adds	r3, r1, #1
 801c038:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801c03c:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801c040:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801c044:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801c048:	0964      	lsrs	r4, r4, #5
 801c04a:	432b      	orrs	r3, r5
 801c04c:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801c050:	9a03      	ldr	r2, [sp, #12]
 801c052:	4323      	orrs	r3, r4
 801c054:	8013      	strh	r3, [r2, #0]
 801c056:	b005      	add	sp, #20
 801c058:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c05c:	f04f 0c00 	mov.w	ip, #0
 801c060:	4664      	mov	r4, ip
 801c062:	e6d6      	b.n	801be12 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 801c064:	2300      	movs	r3, #0
 801c066:	469c      	mov	ip, r3
 801c068:	461a      	mov	r2, r3
 801c06a:	461c      	mov	r4, r3
 801c06c:	e6f8      	b.n	801be60 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801c06e:	2300      	movs	r3, #0
 801c070:	461a      	mov	r2, r3
 801c072:	e6f5      	b.n	801be60 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801c074:	460b      	mov	r3, r1
 801c076:	460a      	mov	r2, r1
 801c078:	e6f2      	b.n	801be60 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801c07a:	2500      	movs	r5, #0
 801c07c:	46ab      	mov	fp, r5
 801c07e:	e720      	b.n	801bec2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 801c080:	2700      	movs	r7, #0
 801c082:	463d      	mov	r5, r7
 801c084:	4638      	mov	r0, r7
 801c086:	46bb      	mov	fp, r7
 801c088:	e745      	b.n	801bf16 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801c08a:	4677      	mov	r7, lr
 801c08c:	4675      	mov	r5, lr
 801c08e:	4670      	mov	r0, lr
 801c090:	46f3      	mov	fp, lr
 801c092:	e740      	b.n	801bf16 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801c094:	2700      	movs	r7, #0
 801c096:	4638      	mov	r0, r7
 801c098:	e73d      	b.n	801bf16 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801c09a:	460f      	mov	r7, r1
 801c09c:	4608      	mov	r0, r1
 801c09e:	e73a      	b.n	801bf16 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

0801c0a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c0a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c0a4:	b097      	sub	sp, #92	; 0x5c
 801c0a6:	9214      	str	r2, [sp, #80]	; 0x50
 801c0a8:	9308      	str	r3, [sp, #32]
 801c0aa:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801c0ac:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801c0b0:	9312      	str	r3, [sp, #72]	; 0x48
 801c0b2:	9111      	str	r1, [sp, #68]	; 0x44
 801c0b4:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 801c0b8:	9015      	str	r0, [sp, #84]	; 0x54
 801c0ba:	6850      	ldr	r0, [r2, #4]
 801c0bc:	6812      	ldr	r2, [r2, #0]
 801c0be:	fb00 1303 	mla	r3, r0, r3, r1
 801c0c2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801c0c6:	9309      	str	r3, [sp, #36]	; 0x24
 801c0c8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c0ca:	681b      	ldr	r3, [r3, #0]
 801c0cc:	930b      	str	r3, [sp, #44]	; 0x2c
 801c0ce:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c0d0:	685b      	ldr	r3, [r3, #4]
 801c0d2:	930c      	str	r3, [sp, #48]	; 0x30
 801c0d4:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 801c0d8:	930a      	str	r3, [sp, #40]	; 0x28
 801c0da:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801c0dc:	2b00      	cmp	r3, #0
 801c0de:	dc03      	bgt.n	801c0e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801c0e0:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801c0e2:	2b00      	cmp	r3, #0
 801c0e4:	f340 83cb 	ble.w	801c87e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 801c0e8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c0ea:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c0ee:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801c0f2:	1e48      	subs	r0, r1, #1
 801c0f4:	1e55      	subs	r5, r2, #1
 801c0f6:	9b08      	ldr	r3, [sp, #32]
 801c0f8:	2b00      	cmp	r3, #0
 801c0fa:	f340 81a3 	ble.w	801c444 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 801c0fe:	9e21      	ldr	r6, [sp, #132]	; 0x84
 801c100:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801c102:	1436      	asrs	r6, r6, #16
 801c104:	ea4f 4323 	mov.w	r3, r3, asr #16
 801c108:	d406      	bmi.n	801c118 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801c10a:	4286      	cmp	r6, r0
 801c10c:	da04      	bge.n	801c118 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801c10e:	2b00      	cmp	r3, #0
 801c110:	db02      	blt.n	801c118 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801c112:	42ab      	cmp	r3, r5
 801c114:	f2c0 8197 	blt.w	801c446 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801c118:	3601      	adds	r6, #1
 801c11a:	f100 8184 	bmi.w	801c426 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801c11e:	42b1      	cmp	r1, r6
 801c120:	f2c0 8181 	blt.w	801c426 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801c124:	3301      	adds	r3, #1
 801c126:	f100 817e 	bmi.w	801c426 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801c12a:	429a      	cmp	r2, r3
 801c12c:	f2c0 817b 	blt.w	801c426 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801c130:	9b08      	ldr	r3, [sp, #32]
 801c132:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801c134:	9313      	str	r3, [sp, #76]	; 0x4c
 801c136:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801c13a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801c13c:	2b00      	cmp	r3, #0
 801c13e:	f340 81a4 	ble.w	801c48a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801c142:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801c144:	9d21      	ldr	r5, [sp, #132]	; 0x84
 801c146:	1418      	asrs	r0, r3, #16
 801c148:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801c14a:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801c14e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801c150:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801c154:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c156:	142d      	asrs	r5, r5, #16
 801c158:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801c15c:	f100 81f8 	bmi.w	801c550 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801c160:	f102 3eff 	add.w	lr, r2, #4294967295
 801c164:	4575      	cmp	r5, lr
 801c166:	f280 81f3 	bge.w	801c550 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801c16a:	2800      	cmp	r0, #0
 801c16c:	f2c0 81f0 	blt.w	801c550 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801c170:	f103 3eff 	add.w	lr, r3, #4294967295
 801c174:	4570      	cmp	r0, lr
 801c176:	f280 81eb 	bge.w	801c550 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801c17a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801c17c:	b212      	sxth	r2, r2
 801c17e:	fb00 5002 	mla	r0, r0, r2, r5
 801c182:	fa1f fe81 	uxth.w	lr, r1
 801c186:	eb03 0a00 	add.w	sl, r3, r0
 801c18a:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801c18e:	f813 9000 	ldrb.w	r9, [r3, r0]
 801c192:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801c196:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 801c19a:	b29b      	uxth	r3, r3
 801c19c:	f1bc 0f00 	cmp.w	ip, #0
 801c1a0:	f000 81b9 	beq.w	801c516 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 801c1a4:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801c1a8:	940d      	str	r4, [sp, #52]	; 0x34
 801c1aa:	eb0a 0b02 	add.w	fp, sl, r2
 801c1ae:	fa1f fa8c 	uxth.w	sl, ip
 801c1b2:	fb0a fe0e 	mul.w	lr, sl, lr
 801c1b6:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801c1ba:	fa1f fa8a 	uxth.w	sl, sl
 801c1be:	eba5 050e 	sub.w	r5, r5, lr
 801c1c2:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801c1c6:	940e      	str	r4, [sp, #56]	; 0x38
 801c1c8:	eba3 030a 	sub.w	r3, r3, sl
 801c1cc:	b2ad      	uxth	r5, r5
 801c1ce:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801c1d0:	b29b      	uxth	r3, r3
 801c1d2:	fb08 f505 	mul.w	r5, r8, r5
 801c1d6:	fb09 5303 	mla	r3, r9, r3, r5
 801c1da:	fb0a 3304 	mla	r3, sl, r4, r3
 801c1de:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801c1e0:	fb0e 3304 	mla	r3, lr, r4, r3
 801c1e4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801c1e8:	2b00      	cmp	r3, #0
 801c1ea:	f000 810f 	beq.w	801c40c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c1ee:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801c1f0:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801c1f4:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801c1f8:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801c1fc:	f000 8190 	beq.w	801c520 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 801c200:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801c204:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801c208:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c20c:	fb09 f000 	mul.w	r0, r9, r0
 801c210:	fb0a fe0e 	mul.w	lr, sl, lr
 801c214:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801c218:	f100 0b20 	add.w	fp, r0, #32
 801c21c:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801c220:	44ce      	add	lr, r9
 801c222:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801c226:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801c22a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801c22e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801c232:	ea4e 0909 	orr.w	r9, lr, r9
 801c236:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801c23a:	8868      	ldrh	r0, [r5, #2]
 801c23c:	d019      	beq.n	801c272 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801c23e:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801c242:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801c246:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c24a:	fb08 f800 	mul.w	r8, r8, r0
 801c24e:	fb0a fe0e 	mul.w	lr, sl, lr
 801c252:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801c256:	f108 0b20 	add.w	fp, r8, #32
 801c25a:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801c25e:	4486      	add	lr, r0
 801c260:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801c264:	0a00      	lsrs	r0, r0, #8
 801c266:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801c26a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c26e:	ea4e 0000 	orr.w	r0, lr, r0
 801c272:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801c276:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801c27a:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801c27e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801c282:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c286:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801c28a:	ea4e 0909 	orr.w	r9, lr, r9
 801c28e:	ea4a 0000 	orr.w	r0, sl, r0
 801c292:	f1bc 0f00 	cmp.w	ip, #0
 801c296:	f000 8145 	beq.w	801c524 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 801c29a:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 801c29e:	3a01      	subs	r2, #1
 801c2a0:	0052      	lsls	r2, r2, #1
 801c2a2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801c2a4:	3202      	adds	r2, #2
 801c2a6:	2cff      	cmp	r4, #255	; 0xff
 801c2a8:	eb05 0e02 	add.w	lr, r5, r2
 801c2ac:	5aaa      	ldrh	r2, [r5, r2]
 801c2ae:	d018      	beq.n	801c2e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801c2b0:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 801c2b4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c2b8:	fb04 fa02 	mul.w	sl, r4, r2
 801c2bc:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801c2c0:	fb08 f805 	mul.w	r8, r8, r5
 801c2c4:	f10a 0520 	add.w	r5, sl, #32
 801c2c8:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801c2cc:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801c2d0:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801c2d4:	4442      	add	r2, r8
 801c2d6:	0a2d      	lsrs	r5, r5, #8
 801c2d8:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801c2dc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c2e0:	432a      	orrs	r2, r5
 801c2e2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801c2e4:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801c2e8:	2cff      	cmp	r4, #255	; 0xff
 801c2ea:	d01a      	beq.n	801c322 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 801c2ec:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 801c2f0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c2f4:	fb04 fa05 	mul.w	sl, r4, r5
 801c2f8:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801c2fc:	fb08 f80e 	mul.w	r8, r8, lr
 801c300:	f10a 0e20 	add.w	lr, sl, #32
 801c304:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801c308:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801c30c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801c310:	4445      	add	r5, r8
 801c312:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c316:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801c31a:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 801c31e:	ea45 050e 	orr.w	r5, r5, lr
 801c322:	fb1c fe01 	smulbb	lr, ip, r1
 801c326:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801c32a:	f1cc 0810 	rsb	r8, ip, #16
 801c32e:	eba8 0801 	sub.w	r8, r8, r1
 801c332:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801c336:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801c33a:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801c33e:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801c342:	4341      	muls	r1, r0
 801c344:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c348:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801c34c:	ea4a 0202 	orr.w	r2, sl, r2
 801c350:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801c354:	fb09 1108 	mla	r1, r9, r8, r1
 801c358:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801c35c:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801c360:	fb0c 1102 	mla	r1, ip, r2, r1
 801c364:	ea4b 0505 	orr.w	r5, fp, r5
 801c368:	fb0e 1e05 	mla	lr, lr, r5, r1
 801c36c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801c370:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801c374:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c378:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801c37c:	ea42 0e0e 	orr.w	lr, r2, lr
 801c380:	fa1f f28e 	uxth.w	r2, lr
 801c384:	2bff      	cmp	r3, #255	; 0xff
 801c386:	d103      	bne.n	801c390 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801c388:	9912      	ldr	r1, [sp, #72]	; 0x48
 801c38a:	29ff      	cmp	r1, #255	; 0xff
 801c38c:	f000 80de 	beq.w	801c54c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 801c390:	990a      	ldr	r1, [sp, #40]	; 0x28
 801c392:	8838      	ldrh	r0, [r7, #0]
 801c394:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801c396:	434b      	muls	r3, r1
 801c398:	f103 0c01 	add.w	ip, r3, #1
 801c39c:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 801c3a0:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801c3a4:	fa5f fc83 	uxtb.w	ip, r3
 801c3a8:	1203      	asrs	r3, r0, #8
 801c3aa:	1215      	asrs	r5, r2, #8
 801c3ac:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801c3b0:	fb13 f30c 	smulbb	r3, r3, ip
 801c3b4:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801c3b8:	fb05 3501 	mla	r5, r5, r1, r3
 801c3bc:	10c3      	asrs	r3, r0, #3
 801c3be:	10d1      	asrs	r1, r2, #3
 801c3c0:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801c3c4:	fb13 f30c 	smulbb	r3, r3, ip
 801c3c8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801c3cc:	fb01 3104 	mla	r1, r1, r4, r3
 801c3d0:	00c3      	lsls	r3, r0, #3
 801c3d2:	00d2      	lsls	r2, r2, #3
 801c3d4:	b2db      	uxtb	r3, r3
 801c3d6:	b2d2      	uxtb	r2, r2
 801c3d8:	fb13 f30c 	smulbb	r3, r3, ip
 801c3dc:	b2ad      	uxth	r5, r5
 801c3de:	fb02 3304 	mla	r3, r2, r4, r3
 801c3e2:	b29a      	uxth	r2, r3
 801c3e4:	1c6b      	adds	r3, r5, #1
 801c3e6:	b289      	uxth	r1, r1
 801c3e8:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801c3ec:	1c53      	adds	r3, r2, #1
 801c3ee:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801c3f2:	1c4a      	adds	r2, r1, #1
 801c3f4:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801c3f8:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801c3fc:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801c400:	0949      	lsrs	r1, r1, #5
 801c402:	432b      	orrs	r3, r5
 801c404:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801c408:	430b      	orrs	r3, r1
 801c40a:	803b      	strh	r3, [r7, #0]
 801c40c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801c40e:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801c410:	4413      	add	r3, r2
 801c412:	9321      	str	r3, [sp, #132]	; 0x84
 801c414:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801c416:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c418:	441a      	add	r2, r3
 801c41a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801c41c:	9222      	str	r2, [sp, #136]	; 0x88
 801c41e:	3b01      	subs	r3, #1
 801c420:	3702      	adds	r7, #2
 801c422:	9313      	str	r3, [sp, #76]	; 0x4c
 801c424:	e689      	b.n	801c13a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801c426:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801c428:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 801c42a:	9c22      	ldr	r4, [sp, #136]	; 0x88
 801c42c:	4433      	add	r3, r6
 801c42e:	9321      	str	r3, [sp, #132]	; 0x84
 801c430:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c432:	441c      	add	r4, r3
 801c434:	9b08      	ldr	r3, [sp, #32]
 801c436:	9422      	str	r4, [sp, #136]	; 0x88
 801c438:	3b01      	subs	r3, #1
 801c43a:	9308      	str	r3, [sp, #32]
 801c43c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c43e:	3302      	adds	r3, #2
 801c440:	9309      	str	r3, [sp, #36]	; 0x24
 801c442:	e658      	b.n	801c0f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 801c444:	d028      	beq.n	801c498 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801c446:	9b08      	ldr	r3, [sp, #32]
 801c448:	9823      	ldr	r0, [sp, #140]	; 0x8c
 801c44a:	9d21      	ldr	r5, [sp, #132]	; 0x84
 801c44c:	3b01      	subs	r3, #1
 801c44e:	fb00 5003 	mla	r0, r0, r3, r5
 801c452:	1400      	asrs	r0, r0, #16
 801c454:	f53f ae6c 	bmi.w	801c130 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c458:	3901      	subs	r1, #1
 801c45a:	4288      	cmp	r0, r1
 801c45c:	f6bf ae68 	bge.w	801c130 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c460:	9924      	ldr	r1, [sp, #144]	; 0x90
 801c462:	9822      	ldr	r0, [sp, #136]	; 0x88
 801c464:	fb01 0303 	mla	r3, r1, r3, r0
 801c468:	141b      	asrs	r3, r3, #16
 801c46a:	f53f ae61 	bmi.w	801c130 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c46e:	3a01      	subs	r2, #1
 801c470:	4293      	cmp	r3, r2
 801c472:	f6bf ae5d 	bge.w	801c130 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c476:	9b08      	ldr	r3, [sp, #32]
 801c478:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801c47c:	9313      	str	r3, [sp, #76]	; 0x4c
 801c47e:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801c482:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801c484:	2b00      	cmp	r3, #0
 801c486:	f300 8082 	bgt.w	801c58e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801c48a:	9b08      	ldr	r3, [sp, #32]
 801c48c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801c490:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c492:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801c496:	9309      	str	r3, [sp, #36]	; 0x24
 801c498:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801c49a:	2b00      	cmp	r3, #0
 801c49c:	f340 81ef 	ble.w	801c87e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 801c4a0:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c4a4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801c4a8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801c4ac:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c4ae:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c4b2:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c4b6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c4ba:	eef0 6a62 	vmov.f32	s13, s5
 801c4be:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c4c2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c4c6:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c4ca:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
 801c4ce:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c4d2:	eef0 6a43 	vmov.f32	s13, s6
 801c4d6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c4da:	ee12 2a90 	vmov	r2, s5
 801c4de:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c4e2:	fb92 f3f3 	sdiv	r3, r2, r3
 801c4e6:	ee13 2a10 	vmov	r2, s6
 801c4ea:	9323      	str	r3, [sp, #140]	; 0x8c
 801c4ec:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c4ee:	fb92 f3f3 	sdiv	r3, r2, r3
 801c4f2:	9324      	str	r3, [sp, #144]	; 0x90
 801c4f4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801c4f6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c4f8:	3b01      	subs	r3, #1
 801c4fa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c4fe:	9311      	str	r3, [sp, #68]	; 0x44
 801c500:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c502:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 801c506:	bf08      	it	eq
 801c508:	4613      	moveq	r3, r2
 801c50a:	9308      	str	r3, [sp, #32]
 801c50c:	eeb0 3a67 	vmov.f32	s6, s15
 801c510:	eef0 2a47 	vmov.f32	s5, s14
 801c514:	e5e1      	b.n	801c0da <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801c516:	fb08 f505 	mul.w	r5, r8, r5
 801c51a:	fb09 5303 	mla	r3, r9, r3, r5
 801c51e:	e661      	b.n	801c1e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 801c520:	4681      	mov	r9, r0
 801c522:	e688      	b.n	801c236 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801c524:	f1c1 0210 	rsb	r2, r1, #16
 801c528:	4341      	muls	r1, r0
 801c52a:	fb09 1902 	mla	r9, r9, r2, r1
 801c52e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801c532:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801c536:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801c53a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c53e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801c542:	ea42 0909 	orr.w	r9, r2, r9
 801c546:	fa1f f289 	uxth.w	r2, r9
 801c54a:	e71b      	b.n	801c384 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801c54c:	803a      	strh	r2, [r7, #0]
 801c54e:	e75d      	b.n	801c40c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c550:	f115 0e01 	adds.w	lr, r5, #1
 801c554:	f53f af5a 	bmi.w	801c40c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c558:	4572      	cmp	r2, lr
 801c55a:	f6ff af57 	blt.w	801c40c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c55e:	f110 0e01 	adds.w	lr, r0, #1
 801c562:	f53f af53 	bmi.w	801c40c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c566:	4573      	cmp	r3, lr
 801c568:	f6ff af50 	blt.w	801c40c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c56c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801c56e:	9502      	str	r5, [sp, #8]
 801c570:	b21b      	sxth	r3, r3
 801c572:	b212      	sxth	r2, r2
 801c574:	e9cd 0103 	strd	r0, r1, [sp, #12]
 801c578:	9301      	str	r3, [sp, #4]
 801c57a:	9200      	str	r2, [sp, #0]
 801c57c:	e9cd c405 	strd	ip, r4, [sp, #20]
 801c580:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 801c584:	4639      	mov	r1, r7
 801c586:	9815      	ldr	r0, [sp, #84]	; 0x54
 801c588:	f7ff fc04 	bl	801bd94 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 801c58c:	e73e      	b.n	801c40c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c58e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801c590:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801c594:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801c596:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801c59a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c59c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c5a0:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801c5a2:	141f      	asrs	r7, r3, #16
 801c5a4:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801c5a6:	141b      	asrs	r3, r3, #16
 801c5a8:	fb01 3707 	mla	r7, r1, r7, r3
 801c5ac:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801c5ae:	fa1f fc82 	uxth.w	ip, r2
 801c5b2:	eb03 0a07 	add.w	sl, r3, r7
 801c5b6:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801c5ba:	f813 9007 	ldrb.w	r9, [r3, r7]
 801c5be:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801c5c2:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801c5c6:	b29b      	uxth	r3, r3
 801c5c8:	2d00      	cmp	r5, #0
 801c5ca:	f000 813d 	beq.w	801c848 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 801c5ce:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801c5d2:	940f      	str	r4, [sp, #60]	; 0x3c
 801c5d4:	eb0a 0b01 	add.w	fp, sl, r1
 801c5d8:	fa1f fa85 	uxth.w	sl, r5
 801c5dc:	fb0a fc0c 	mul.w	ip, sl, ip
 801c5e0:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801c5e4:	fa1f fa8a 	uxth.w	sl, sl
 801c5e8:	eba0 000c 	sub.w	r0, r0, ip
 801c5ec:	eba3 030a 	sub.w	r3, r3, sl
 801c5f0:	b280      	uxth	r0, r0
 801c5f2:	fb08 f000 	mul.w	r0, r8, r0
 801c5f6:	b29b      	uxth	r3, r3
 801c5f8:	fb09 0303 	mla	r3, r9, r3, r0
 801c5fc:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801c5fe:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801c602:	9410      	str	r4, [sp, #64]	; 0x40
 801c604:	fb0a 3300 	mla	r3, sl, r0, r3
 801c608:	fb0c 3304 	mla	r3, ip, r4, r3
 801c60c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801c610:	2b00      	cmp	r3, #0
 801c612:	f000 810b 	beq.w	801c82c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 801c616:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801c618:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801c61a:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801c61e:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801c622:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801c626:	f000 8114 	beq.w	801c852 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 801c62a:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801c62e:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801c632:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801c636:	fb09 f707 	mul.w	r7, r9, r7
 801c63a:	fb0a fc0c 	mul.w	ip, sl, ip
 801c63e:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801c642:	f107 0b20 	add.w	fp, r7, #32
 801c646:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801c64a:	44cc      	add	ip, r9
 801c64c:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801c650:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801c654:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801c658:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801c65c:	ea4c 0909 	orr.w	r9, ip, r9
 801c660:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801c664:	8847      	ldrh	r7, [r0, #2]
 801c666:	d019      	beq.n	801c69c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 801c668:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801c66c:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801c670:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801c674:	fb08 f807 	mul.w	r8, r8, r7
 801c678:	fb0a fc0c 	mul.w	ip, sl, ip
 801c67c:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801c680:	f108 0b20 	add.w	fp, r8, #32
 801c684:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801c688:	44bc      	add	ip, r7
 801c68a:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801c68e:	0a3f      	lsrs	r7, r7, #8
 801c690:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801c694:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801c698:	ea4c 0707 	orr.w	r7, ip, r7
 801c69c:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801c6a0:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801c6a4:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801c6a8:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801c6ac:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c6b0:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801c6b4:	ea4c 0909 	orr.w	r9, ip, r9
 801c6b8:	ea4a 0707 	orr.w	r7, sl, r7
 801c6bc:	2d00      	cmp	r5, #0
 801c6be:	f000 80ca 	beq.w	801c856 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 801c6c2:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801c6c6:	3901      	subs	r1, #1
 801c6c8:	0049      	lsls	r1, r1, #1
 801c6ca:	3102      	adds	r1, #2
 801c6cc:	eb00 0c01 	add.w	ip, r0, r1
 801c6d0:	5a41      	ldrh	r1, [r0, r1]
 801c6d2:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801c6d4:	28ff      	cmp	r0, #255	; 0xff
 801c6d6:	d019      	beq.n	801c70c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 801c6d8:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801c6da:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 801c6de:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801c6e2:	fb04 fa01 	mul.w	sl, r4, r1
 801c6e6:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801c6ea:	fb08 f800 	mul.w	r8, r8, r0
 801c6ee:	f10a 0020 	add.w	r0, sl, #32
 801c6f2:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801c6f6:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801c6fa:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801c6fe:	4441      	add	r1, r8
 801c700:	0a00      	lsrs	r0, r0, #8
 801c702:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801c706:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c70a:	4301      	orrs	r1, r0
 801c70c:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801c70e:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801c712:	2cff      	cmp	r4, #255	; 0xff
 801c714:	d01a      	beq.n	801c74c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 801c716:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 801c71a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c71e:	fb04 fa00 	mul.w	sl, r4, r0
 801c722:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801c726:	fb08 f80c 	mul.w	r8, r8, ip
 801c72a:	f10a 0c20 	add.w	ip, sl, #32
 801c72e:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801c732:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801c736:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801c73a:	4440      	add	r0, r8
 801c73c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c740:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801c744:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801c748:	ea40 000c 	orr.w	r0, r0, ip
 801c74c:	fb15 fc02 	smulbb	ip, r5, r2
 801c750:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801c754:	f1c5 0810 	rsb	r8, r5, #16
 801c758:	eba8 0802 	sub.w	r8, r8, r2
 801c75c:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801c760:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801c764:	437a      	muls	r2, r7
 801c766:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801c76a:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801c76e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c772:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801c776:	fb09 2208 	mla	r2, r9, r8, r2
 801c77a:	ea4a 0101 	orr.w	r1, sl, r1
 801c77e:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801c782:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801c786:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801c78a:	fb05 2201 	mla	r2, r5, r1, r2
 801c78e:	ea4b 0000 	orr.w	r0, fp, r0
 801c792:	fb0c 2200 	mla	r2, ip, r0, r2
 801c796:	0d57      	lsrs	r7, r2, #21
 801c798:	0952      	lsrs	r2, r2, #5
 801c79a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801c79e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801c7a2:	433a      	orrs	r2, r7
 801c7a4:	2bff      	cmp	r3, #255	; 0xff
 801c7a6:	b292      	uxth	r2, r2
 801c7a8:	d102      	bne.n	801c7b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801c7aa:	9912      	ldr	r1, [sp, #72]	; 0x48
 801c7ac:	29ff      	cmp	r1, #255	; 0xff
 801c7ae:	d063      	beq.n	801c878 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 801c7b0:	980a      	ldr	r0, [sp, #40]	; 0x28
 801c7b2:	f8be 1000 	ldrh.w	r1, [lr]
 801c7b6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801c7b8:	4343      	muls	r3, r0
 801c7ba:	1c58      	adds	r0, r3, #1
 801c7bc:	eb00 2323 	add.w	r3, r0, r3, asr #8
 801c7c0:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801c7c4:	1208      	asrs	r0, r1, #8
 801c7c6:	b2db      	uxtb	r3, r3
 801c7c8:	1215      	asrs	r5, r2, #8
 801c7ca:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801c7ce:	fb10 f003 	smulbb	r0, r0, r3
 801c7d2:	10cf      	asrs	r7, r1, #3
 801c7d4:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801c7d8:	00c9      	lsls	r1, r1, #3
 801c7da:	fb05 0504 	mla	r5, r5, r4, r0
 801c7de:	b2c9      	uxtb	r1, r1
 801c7e0:	10d0      	asrs	r0, r2, #3
 801c7e2:	00d2      	lsls	r2, r2, #3
 801c7e4:	fb11 f103 	smulbb	r1, r1, r3
 801c7e8:	b2d2      	uxtb	r2, r2
 801c7ea:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801c7ee:	fb02 1204 	mla	r2, r2, r4, r1
 801c7f2:	fb17 f703 	smulbb	r7, r7, r3
 801c7f6:	b2ad      	uxth	r5, r5
 801c7f8:	b292      	uxth	r2, r2
 801c7fa:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801c7fe:	fb00 7004 	mla	r0, r0, r4, r7
 801c802:	1c6b      	adds	r3, r5, #1
 801c804:	1c57      	adds	r7, r2, #1
 801c806:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801c80a:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801c80e:	b280      	uxth	r0, r0
 801c810:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801c814:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801c818:	433d      	orrs	r5, r7
 801c81a:	1c47      	adds	r7, r0, #1
 801c81c:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801c820:	097f      	lsrs	r7, r7, #5
 801c822:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801c826:	433d      	orrs	r5, r7
 801c828:	f8ae 5000 	strh.w	r5, [lr]
 801c82c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801c82e:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801c830:	4413      	add	r3, r2
 801c832:	9321      	str	r3, [sp, #132]	; 0x84
 801c834:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801c836:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c838:	441a      	add	r2, r3
 801c83a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801c83c:	9222      	str	r2, [sp, #136]	; 0x88
 801c83e:	3b01      	subs	r3, #1
 801c840:	f10e 0e02 	add.w	lr, lr, #2
 801c844:	9313      	str	r3, [sp, #76]	; 0x4c
 801c846:	e61c      	b.n	801c482 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 801c848:	fb08 f000 	mul.w	r0, r8, r0
 801c84c:	fb09 0303 	mla	r3, r9, r3, r0
 801c850:	e6dc      	b.n	801c60c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 801c852:	46b9      	mov	r9, r7
 801c854:	e704      	b.n	801c660 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 801c856:	f1c2 0110 	rsb	r1, r2, #16
 801c85a:	437a      	muls	r2, r7
 801c85c:	fb09 2901 	mla	r9, r9, r1, r2
 801c860:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801c864:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801c868:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801c86c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c870:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801c874:	4302      	orrs	r2, r0
 801c876:	e795      	b.n	801c7a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 801c878:	f8ae 2000 	strh.w	r2, [lr]
 801c87c:	e7d6      	b.n	801c82c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 801c87e:	b017      	add	sp, #92	; 0x5c
 801c880:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801c884 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801c884:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c888:	b085      	sub	sp, #20
 801c88a:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 801c88e:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 801c892:	9103      	str	r1, [sp, #12]
 801c894:	fb00 7406 	mla	r4, r0, r6, r7
 801c898:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 801c89c:	2800      	cmp	r0, #0
 801c89e:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 801c8a2:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 801c8a6:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 801c8aa:	9501      	str	r5, [sp, #4]
 801c8ac:	eb02 0904 	add.w	r9, r2, r4
 801c8b0:	f2c0 8141 	blt.w	801cb36 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801c8b4:	4583      	cmp	fp, r0
 801c8b6:	f340 813e 	ble.w	801cb36 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801c8ba:	2f00      	cmp	r7, #0
 801c8bc:	f2c0 8137 	blt.w	801cb2e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801c8c0:	42be      	cmp	r6, r7
 801c8c2:	f340 8134 	ble.w	801cb2e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801c8c6:	f812 c004 	ldrb.w	ip, [r2, r4]
 801c8ca:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 801c8ce:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801c8d2:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 801c8d6:	4355      	muls	r5, r2
 801c8d8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c8dc:	f64f 041f 	movw	r4, #63519	; 0xf81f
 801c8e0:	fb0c f203 	mul.w	r2, ip, r3
 801c8e4:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801c8e8:	f605 0501 	addw	r5, r5, #2049	; 0x801
 801c8ec:	441d      	add	r5, r3
 801c8ee:	f102 0320 	add.w	r3, r2, #32
 801c8f2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801c8f6:	0a1b      	lsrs	r3, r3, #8
 801c8f8:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801c8fc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c900:	431c      	orrs	r4, r3
 801c902:	1c7b      	adds	r3, r7, #1
 801c904:	f100 811c 	bmi.w	801cb40 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801c908:	429e      	cmp	r6, r3
 801c90a:	f340 8119 	ble.w	801cb40 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801c90e:	2900      	cmp	r1, #0
 801c910:	f000 8119 	beq.w	801cb46 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 801c914:	9a01      	ldr	r2, [sp, #4]
 801c916:	f899 3001 	ldrb.w	r3, [r9, #1]
 801c91a:	8855      	ldrh	r5, [r2, #2]
 801c91c:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801c920:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 801c924:	fb08 f802 	mul.w	r8, r8, r2
 801c928:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c92c:	f64f 021f 	movw	r2, #63519	; 0xf81f
 801c930:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801c934:	435d      	muls	r5, r3
 801c936:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801c93a:	44d0      	add	r8, sl
 801c93c:	f105 0a20 	add.w	sl, r5, #32
 801c940:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801c944:	0a2d      	lsrs	r5, r5, #8
 801c946:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801c94a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c94e:	432a      	orrs	r2, r5
 801c950:	3001      	adds	r0, #1
 801c952:	f100 80fe 	bmi.w	801cb52 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801c956:	4583      	cmp	fp, r0
 801c958:	f340 80fb 	ble.w	801cb52 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801c95c:	f1be 0f00 	cmp.w	lr, #0
 801c960:	f000 80fc 	beq.w	801cb5c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 801c964:	2f00      	cmp	r7, #0
 801c966:	f2c0 80f1 	blt.w	801cb4c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801c96a:	42be      	cmp	r6, r7
 801c96c:	f340 80ee 	ble.w	801cb4c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801c970:	9801      	ldr	r0, [sp, #4]
 801c972:	f819 5006 	ldrb.w	r5, [r9, r6]
 801c976:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801c97a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801c97e:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 801c982:	fb0a fa00 	mul.w	sl, sl, r0
 801c986:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801c98a:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801c98e:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801c992:	fb05 f808 	mul.w	r8, r5, r8
 801c996:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 801c99a:	4482      	add	sl, r0
 801c99c:	f108 0020 	add.w	r0, r8, #32
 801c9a0:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801c9a4:	0a00      	lsrs	r0, r0, #8
 801c9a6:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801c9aa:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c9ae:	ea4b 0b00 	orr.w	fp, fp, r0
 801c9b2:	3701      	adds	r7, #1
 801c9b4:	f100 80d7 	bmi.w	801cb66 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801c9b8:	42be      	cmp	r6, r7
 801c9ba:	f340 80d4 	ble.w	801cb66 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801c9be:	2900      	cmp	r1, #0
 801c9c0:	f000 80d4 	beq.w	801cb6c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 801c9c4:	3601      	adds	r6, #1
 801c9c6:	9801      	ldr	r0, [sp, #4]
 801c9c8:	f819 7006 	ldrb.w	r7, [r9, r6]
 801c9cc:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801c9d0:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801c9d4:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 801c9d8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c9dc:	fb09 f906 	mul.w	r9, r9, r6
 801c9e0:	fb07 f800 	mul.w	r8, r7, r0
 801c9e4:	f64f 001f 	movw	r0, #63519	; 0xf81f
 801c9e8:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801c9ec:	f609 0901 	addw	r9, r9, #2049	; 0x801
 801c9f0:	44d1      	add	r9, sl
 801c9f2:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801c9f6:	f108 0020 	add.w	r0, r8, #32
 801c9fa:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801c9fe:	0a00      	lsrs	r0, r0, #8
 801ca00:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ca04:	4330      	orrs	r0, r6
 801ca06:	b28e      	uxth	r6, r1
 801ca08:	fa1f f98e 	uxth.w	r9, lr
 801ca0c:	fb06 f809 	mul.w	r8, r6, r9
 801ca10:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801ca14:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801ca18:	0136      	lsls	r6, r6, #4
 801ca1a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801ca1e:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801ca22:	9601      	str	r6, [sp, #4]
 801ca24:	ea4a 0404 	orr.w	r4, sl, r4
 801ca28:	fa1f f689 	uxth.w	r6, r9
 801ca2c:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801ca30:	fb11 f90e 	smulbb	r9, r1, lr
 801ca34:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801ca38:	9602      	str	r6, [sp, #8]
 801ca3a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801ca3e:	4626      	mov	r6, r4
 801ca40:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801ca44:	f1ce 0410 	rsb	r4, lr, #16
 801ca48:	1a64      	subs	r4, r4, r1
 801ca4a:	ea4a 0202 	orr.w	r2, sl, r2
 801ca4e:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801ca52:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801ca56:	434a      	muls	r2, r1
 801ca58:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801ca5c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801ca60:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801ca64:	fb04 2406 	mla	r4, r4, r6, r2
 801ca68:	ea4a 0000 	orr.w	r0, sl, r0
 801ca6c:	fb09 4200 	mla	r2, r9, r0, r4
 801ca70:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801ca74:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801ca78:	9801      	ldr	r0, [sp, #4]
 801ca7a:	9903      	ldr	r1, [sp, #12]
 801ca7c:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801ca80:	ea44 0b0b 	orr.w	fp, r4, fp
 801ca84:	9c02      	ldr	r4, [sp, #8]
 801ca86:	8809      	ldrh	r1, [r1, #0]
 801ca88:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 801ca8c:	1b00      	subs	r0, r0, r4
 801ca8e:	9c01      	ldr	r4, [sp, #4]
 801ca90:	eba4 0608 	sub.w	r6, r4, r8
 801ca94:	b2b6      	uxth	r6, r6
 801ca96:	b280      	uxth	r0, r0
 801ca98:	4373      	muls	r3, r6
 801ca9a:	fb0c 3300 	mla	r3, ip, r0, r3
 801ca9e:	9802      	ldr	r0, [sp, #8]
 801caa0:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801caa4:	fb00 3505 	mla	r5, r0, r5, r3
 801caa8:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801caac:	fb08 5707 	mla	r7, r8, r7, r5
 801cab0:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801cab4:	120b      	asrs	r3, r1, #8
 801cab6:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801caba:	ea6f 2727 	mvn.w	r7, r7, asr #8
 801cabe:	b2ff      	uxtb	r7, r7
 801cac0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801cac4:	10c8      	asrs	r0, r1, #3
 801cac6:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801caca:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801cace:	00c9      	lsls	r1, r1, #3
 801cad0:	437b      	muls	r3, r7
 801cad2:	ea42 0e0e 	orr.w	lr, r2, lr
 801cad6:	b2c9      	uxtb	r1, r1
 801cad8:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801cadc:	fa1f f28e 	uxth.w	r2, lr
 801cae0:	4378      	muls	r0, r7
 801cae2:	434f      	muls	r7, r1
 801cae4:	1c59      	adds	r1, r3, #1
 801cae6:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801caea:	1213      	asrs	r3, r2, #8
 801caec:	f023 0307 	bic.w	r3, r3, #7
 801caf0:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801caf4:	1c41      	adds	r1, r0, #1
 801caf6:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801cafa:	10d1      	asrs	r1, r2, #3
 801cafc:	f021 0103 	bic.w	r1, r1, #3
 801cb00:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801cb04:	021b      	lsls	r3, r3, #8
 801cb06:	00c9      	lsls	r1, r1, #3
 801cb08:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801cb0c:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801cb10:	430b      	orrs	r3, r1
 801cb12:	1c79      	adds	r1, r7, #1
 801cb14:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 801cb18:	00d2      	lsls	r2, r2, #3
 801cb1a:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801cb1e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801cb22:	431a      	orrs	r2, r3
 801cb24:	9b03      	ldr	r3, [sp, #12]
 801cb26:	801a      	strh	r2, [r3, #0]
 801cb28:	b005      	add	sp, #20
 801cb2a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cb2e:	f04f 0c00 	mov.w	ip, #0
 801cb32:	4664      	mov	r4, ip
 801cb34:	e6e5      	b.n	801c902 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 801cb36:	2300      	movs	r3, #0
 801cb38:	469c      	mov	ip, r3
 801cb3a:	461a      	mov	r2, r3
 801cb3c:	461c      	mov	r4, r3
 801cb3e:	e707      	b.n	801c950 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801cb40:	2300      	movs	r3, #0
 801cb42:	461a      	mov	r2, r3
 801cb44:	e704      	b.n	801c950 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801cb46:	460b      	mov	r3, r1
 801cb48:	460a      	mov	r2, r1
 801cb4a:	e701      	b.n	801c950 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801cb4c:	2500      	movs	r5, #0
 801cb4e:	46ab      	mov	fp, r5
 801cb50:	e72f      	b.n	801c9b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 801cb52:	2700      	movs	r7, #0
 801cb54:	463d      	mov	r5, r7
 801cb56:	4638      	mov	r0, r7
 801cb58:	46bb      	mov	fp, r7
 801cb5a:	e754      	b.n	801ca06 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801cb5c:	4677      	mov	r7, lr
 801cb5e:	4675      	mov	r5, lr
 801cb60:	4670      	mov	r0, lr
 801cb62:	46f3      	mov	fp, lr
 801cb64:	e74f      	b.n	801ca06 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801cb66:	2700      	movs	r7, #0
 801cb68:	4638      	mov	r0, r7
 801cb6a:	e74c      	b.n	801ca06 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801cb6c:	460f      	mov	r7, r1
 801cb6e:	4608      	mov	r0, r1
 801cb70:	e749      	b.n	801ca06 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

0801cb74 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801cb74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cb78:	b093      	sub	sp, #76	; 0x4c
 801cb7a:	9210      	str	r2, [sp, #64]	; 0x40
 801cb7c:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801cb7e:	910e      	str	r1, [sp, #56]	; 0x38
 801cb80:	9306      	str	r3, [sp, #24]
 801cb82:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801cb86:	9011      	str	r0, [sp, #68]	; 0x44
 801cb88:	6850      	ldr	r0, [r2, #4]
 801cb8a:	6812      	ldr	r2, [r2, #0]
 801cb8c:	fb00 1303 	mla	r3, r0, r3, r1
 801cb90:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801cb94:	9307      	str	r3, [sp, #28]
 801cb96:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801cb98:	681b      	ldr	r3, [r3, #0]
 801cb9a:	9308      	str	r3, [sp, #32]
 801cb9c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801cb9e:	685b      	ldr	r3, [r3, #4]
 801cba0:	9309      	str	r3, [sp, #36]	; 0x24
 801cba2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801cba4:	2b00      	cmp	r3, #0
 801cba6:	dc03      	bgt.n	801cbb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801cba8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801cbaa:	2b00      	cmp	r3, #0
 801cbac:	f340 83b4 	ble.w	801d318 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 801cbb0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801cbb2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801cbb6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801cbba:	1e48      	subs	r0, r1, #1
 801cbbc:	1e55      	subs	r5, r2, #1
 801cbbe:	9b06      	ldr	r3, [sp, #24]
 801cbc0:	2b00      	cmp	r3, #0
 801cbc2:	f340 8163 	ble.w	801ce8c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801cbc6:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 801cbc8:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801cbca:	1436      	asrs	r6, r6, #16
 801cbcc:	ea4f 4323 	mov.w	r3, r3, asr #16
 801cbd0:	d406      	bmi.n	801cbe0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801cbd2:	4286      	cmp	r6, r0
 801cbd4:	da04      	bge.n	801cbe0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801cbd6:	2b00      	cmp	r3, #0
 801cbd8:	db02      	blt.n	801cbe0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801cbda:	42ab      	cmp	r3, r5
 801cbdc:	f2c0 8157 	blt.w	801ce8e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 801cbe0:	3601      	adds	r6, #1
 801cbe2:	f100 8144 	bmi.w	801ce6e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801cbe6:	42b1      	cmp	r1, r6
 801cbe8:	f2c0 8141 	blt.w	801ce6e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801cbec:	3301      	adds	r3, #1
 801cbee:	f100 813e 	bmi.w	801ce6e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801cbf2:	429a      	cmp	r2, r3
 801cbf4:	f2c0 813b 	blt.w	801ce6e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801cbf8:	9b06      	ldr	r3, [sp, #24]
 801cbfa:	9f07      	ldr	r7, [sp, #28]
 801cbfc:	930f      	str	r3, [sp, #60]	; 0x3c
 801cbfe:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801cc02:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801cc04:	2b00      	cmp	r3, #0
 801cc06:	f340 8164 	ble.w	801ced2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 801cc0a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801cc0c:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 801cc0e:	1418      	asrs	r0, r3, #16
 801cc10:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801cc12:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801cc16:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801cc18:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801cc1c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801cc1e:	142d      	asrs	r5, r5, #16
 801cc20:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801cc24:	f100 81ee 	bmi.w	801d004 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801cc28:	f102 3eff 	add.w	lr, r2, #4294967295
 801cc2c:	4575      	cmp	r5, lr
 801cc2e:	f280 81e9 	bge.w	801d004 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801cc32:	2800      	cmp	r0, #0
 801cc34:	f2c0 81e6 	blt.w	801d004 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801cc38:	f103 3eff 	add.w	lr, r3, #4294967295
 801cc3c:	4570      	cmp	r0, lr
 801cc3e:	f280 81e1 	bge.w	801d004 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801cc42:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801cc44:	b212      	sxth	r2, r2
 801cc46:	fb00 5002 	mla	r0, r0, r2, r5
 801cc4a:	fa1f fe81 	uxth.w	lr, r1
 801cc4e:	eb03 0a00 	add.w	sl, r3, r0
 801cc52:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801cc56:	f813 9000 	ldrb.w	r9, [r3, r0]
 801cc5a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801cc5e:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 801cc62:	b29b      	uxth	r3, r3
 801cc64:	f1bc 0f00 	cmp.w	ip, #0
 801cc68:	f000 8179 	beq.w	801cf5e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801cc6c:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801cc70:	940a      	str	r4, [sp, #40]	; 0x28
 801cc72:	eb0a 0b02 	add.w	fp, sl, r2
 801cc76:	fa1f fa8c 	uxth.w	sl, ip
 801cc7a:	fb0a fe0e 	mul.w	lr, sl, lr
 801cc7e:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801cc82:	fa1f fa8a 	uxth.w	sl, sl
 801cc86:	eba5 050e 	sub.w	r5, r5, lr
 801cc8a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801cc8e:	940b      	str	r4, [sp, #44]	; 0x2c
 801cc90:	eba3 030a 	sub.w	r3, r3, sl
 801cc94:	b2ad      	uxth	r5, r5
 801cc96:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801cc98:	b29b      	uxth	r3, r3
 801cc9a:	fb08 f505 	mul.w	r5, r8, r5
 801cc9e:	fb09 5303 	mla	r3, r9, r3, r5
 801cca2:	fb0a 3304 	mla	r3, sl, r4, r3
 801cca6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801cca8:	fb0e 3304 	mla	r3, lr, r4, r3
 801ccac:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801ccb0:	2b00      	cmp	r3, #0
 801ccb2:	f000 80cf 	beq.w	801ce54 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801ccb6:	9c08      	ldr	r4, [sp, #32]
 801ccb8:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801ccbc:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801ccc0:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801ccc4:	f000 8150 	beq.w	801cf68 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 801ccc8:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801cccc:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801ccd0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ccd4:	fb09 f000 	mul.w	r0, r9, r0
 801ccd8:	fb0a fe0e 	mul.w	lr, sl, lr
 801ccdc:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801cce0:	f100 0b20 	add.w	fp, r0, #32
 801cce4:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801cce8:	44ce      	add	lr, r9
 801ccea:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801ccee:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801ccf2:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801ccf6:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801ccfa:	ea4e 0909 	orr.w	r9, lr, r9
 801ccfe:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801cd02:	8868      	ldrh	r0, [r5, #2]
 801cd04:	d019      	beq.n	801cd3a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801cd06:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801cd0a:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801cd0e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801cd12:	fb08 f800 	mul.w	r8, r8, r0
 801cd16:	fb0a fe0e 	mul.w	lr, sl, lr
 801cd1a:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801cd1e:	f108 0b20 	add.w	fp, r8, #32
 801cd22:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801cd26:	4486      	add	lr, r0
 801cd28:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801cd2c:	0a00      	lsrs	r0, r0, #8
 801cd2e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801cd32:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801cd36:	ea4e 0000 	orr.w	r0, lr, r0
 801cd3a:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801cd3e:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801cd42:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801cd46:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801cd4a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801cd4e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801cd52:	ea4e 0909 	orr.w	r9, lr, r9
 801cd56:	ea4a 0000 	orr.w	r0, sl, r0
 801cd5a:	f1bc 0f00 	cmp.w	ip, #0
 801cd5e:	f000 8105 	beq.w	801cf6c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801cd62:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 801cd66:	3a01      	subs	r2, #1
 801cd68:	0052      	lsls	r2, r2, #1
 801cd6a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801cd6c:	3202      	adds	r2, #2
 801cd6e:	2cff      	cmp	r4, #255	; 0xff
 801cd70:	eb05 0e02 	add.w	lr, r5, r2
 801cd74:	5aaa      	ldrh	r2, [r5, r2]
 801cd76:	d018      	beq.n	801cdaa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801cd78:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 801cd7c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801cd80:	fb04 fa02 	mul.w	sl, r4, r2
 801cd84:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801cd88:	fb08 f805 	mul.w	r8, r8, r5
 801cd8c:	f10a 0520 	add.w	r5, sl, #32
 801cd90:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801cd94:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801cd98:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801cd9c:	4442      	add	r2, r8
 801cd9e:	0a2d      	lsrs	r5, r5, #8
 801cda0:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801cda4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801cda8:	432a      	orrs	r2, r5
 801cdaa:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801cdac:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801cdb0:	2cff      	cmp	r4, #255	; 0xff
 801cdb2:	d01a      	beq.n	801cdea <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801cdb4:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 801cdb8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801cdbc:	fb04 fa05 	mul.w	sl, r4, r5
 801cdc0:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801cdc4:	fb08 f80e 	mul.w	r8, r8, lr
 801cdc8:	f10a 0e20 	add.w	lr, sl, #32
 801cdcc:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801cdd0:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801cdd4:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801cdd8:	4445      	add	r5, r8
 801cdda:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801cdde:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801cde2:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 801cde6:	ea45 050e 	orr.w	r5, r5, lr
 801cdea:	fb1c fe01 	smulbb	lr, ip, r1
 801cdee:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801cdf2:	f1cc 0810 	rsb	r8, ip, #16
 801cdf6:	eba8 0801 	sub.w	r8, r8, r1
 801cdfa:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801cdfe:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801ce02:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801ce06:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801ce0a:	4341      	muls	r1, r0
 801ce0c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801ce10:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801ce14:	ea4a 0202 	orr.w	r2, sl, r2
 801ce18:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801ce1c:	fb09 1108 	mla	r1, r9, r8, r1
 801ce20:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801ce24:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801ce28:	fb0c 1102 	mla	r1, ip, r2, r1
 801ce2c:	ea4b 0505 	orr.w	r5, fp, r5
 801ce30:	fb0e 1e05 	mla	lr, lr, r5, r1
 801ce34:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801ce38:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801ce3c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ce40:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801ce44:	ea42 0e0e 	orr.w	lr, r2, lr
 801ce48:	fa1f f28e 	uxth.w	r2, lr
 801ce4c:	2bff      	cmp	r3, #255	; 0xff
 801ce4e:	f040 80a1 	bne.w	801cf94 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 801ce52:	803a      	strh	r2, [r7, #0]
 801ce54:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801ce56:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 801ce58:	4413      	add	r3, r2
 801ce5a:	931d      	str	r3, [sp, #116]	; 0x74
 801ce5c:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 801ce5e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801ce60:	441a      	add	r2, r3
 801ce62:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801ce64:	921e      	str	r2, [sp, #120]	; 0x78
 801ce66:	3b01      	subs	r3, #1
 801ce68:	3702      	adds	r7, #2
 801ce6a:	930f      	str	r3, [sp, #60]	; 0x3c
 801ce6c:	e6c9      	b.n	801cc02 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801ce6e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801ce70:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 801ce72:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 801ce74:	4433      	add	r3, r6
 801ce76:	931d      	str	r3, [sp, #116]	; 0x74
 801ce78:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801ce7a:	441c      	add	r4, r3
 801ce7c:	9b06      	ldr	r3, [sp, #24]
 801ce7e:	941e      	str	r4, [sp, #120]	; 0x78
 801ce80:	3b01      	subs	r3, #1
 801ce82:	9306      	str	r3, [sp, #24]
 801ce84:	9b07      	ldr	r3, [sp, #28]
 801ce86:	3302      	adds	r3, #2
 801ce88:	9307      	str	r3, [sp, #28]
 801ce8a:	e698      	b.n	801cbbe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801ce8c:	d028      	beq.n	801cee0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801ce8e:	9b06      	ldr	r3, [sp, #24]
 801ce90:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801ce92:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 801ce94:	3b01      	subs	r3, #1
 801ce96:	fb00 5003 	mla	r0, r0, r3, r5
 801ce9a:	1400      	asrs	r0, r0, #16
 801ce9c:	f53f aeac 	bmi.w	801cbf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801cea0:	3901      	subs	r1, #1
 801cea2:	4288      	cmp	r0, r1
 801cea4:	f6bf aea8 	bge.w	801cbf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801cea8:	9920      	ldr	r1, [sp, #128]	; 0x80
 801ceaa:	981e      	ldr	r0, [sp, #120]	; 0x78
 801ceac:	fb01 0303 	mla	r3, r1, r3, r0
 801ceb0:	141b      	asrs	r3, r3, #16
 801ceb2:	f53f aea1 	bmi.w	801cbf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801ceb6:	3a01      	subs	r2, #1
 801ceb8:	4293      	cmp	r3, r2
 801ceba:	f6bf ae9d 	bge.w	801cbf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801cebe:	9b06      	ldr	r3, [sp, #24]
 801cec0:	f8dd e01c 	ldr.w	lr, [sp, #28]
 801cec4:	930f      	str	r3, [sp, #60]	; 0x3c
 801cec6:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801ceca:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801cecc:	2b00      	cmp	r3, #0
 801cece:	f300 80b6 	bgt.w	801d03e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 801ced2:	9b06      	ldr	r3, [sp, #24]
 801ced4:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801ced8:	9b07      	ldr	r3, [sp, #28]
 801ceda:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801cede:	9307      	str	r3, [sp, #28]
 801cee0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801cee2:	2b00      	cmp	r3, #0
 801cee4:	f340 8218 	ble.w	801d318 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 801cee8:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ceec:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801cef0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801cef4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801cef6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801cefa:	ee31 1a05 	vadd.f32	s2, s2, s10
 801cefe:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801cf02:	eef0 6a62 	vmov.f32	s13, s5
 801cf06:	ee61 7a27 	vmul.f32	s15, s2, s15
 801cf0a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cf0e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801cf12:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 801cf16:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801cf1a:	eef0 6a43 	vmov.f32	s13, s6
 801cf1e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801cf22:	ee12 2a90 	vmov	r2, s5
 801cf26:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801cf2a:	fb92 f3f3 	sdiv	r3, r2, r3
 801cf2e:	ee13 2a10 	vmov	r2, s6
 801cf32:	931f      	str	r3, [sp, #124]	; 0x7c
 801cf34:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801cf36:	fb92 f3f3 	sdiv	r3, r2, r3
 801cf3a:	9320      	str	r3, [sp, #128]	; 0x80
 801cf3c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801cf3e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801cf40:	3b01      	subs	r3, #1
 801cf42:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cf46:	930e      	str	r3, [sp, #56]	; 0x38
 801cf48:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801cf4a:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 801cf4e:	bf08      	it	eq
 801cf50:	4613      	moveq	r3, r2
 801cf52:	9306      	str	r3, [sp, #24]
 801cf54:	eeb0 3a67 	vmov.f32	s6, s15
 801cf58:	eef0 2a47 	vmov.f32	s5, s14
 801cf5c:	e621      	b.n	801cba2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801cf5e:	fb08 f505 	mul.w	r5, r8, r5
 801cf62:	fb09 5303 	mla	r3, r9, r3, r5
 801cf66:	e6a1      	b.n	801ccac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 801cf68:	4681      	mov	r9, r0
 801cf6a:	e6c8      	b.n	801ccfe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 801cf6c:	f1c1 0210 	rsb	r2, r1, #16
 801cf70:	4341      	muls	r1, r0
 801cf72:	fb09 1902 	mla	r9, r9, r2, r1
 801cf76:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801cf7a:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801cf7e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801cf82:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801cf86:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801cf8a:	ea42 0909 	orr.w	r9, r2, r9
 801cf8e:	fa1f f289 	uxth.w	r2, r9
 801cf92:	e75b      	b.n	801ce4c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801cf94:	f8b7 c000 	ldrh.w	ip, [r7]
 801cf98:	43db      	mvns	r3, r3
 801cf9a:	ea4f 202c 	mov.w	r0, ip, asr #8
 801cf9e:	fa5f fe83 	uxtb.w	lr, r3
 801cfa2:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801cfa6:	fb00 f00e 	mul.w	r0, r0, lr
 801cfaa:	1c41      	adds	r1, r0, #1
 801cfac:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801cfb0:	1211      	asrs	r1, r2, #8
 801cfb2:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801cfb6:	f021 0107 	bic.w	r1, r1, #7
 801cfba:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801cfbe:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801cfc2:	48d7      	ldr	r0, [pc, #860]	; (801d320 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 801cfc4:	fb05 f50e 	mul.w	r5, r5, lr
 801cfc8:	b2c9      	uxtb	r1, r1
 801cfca:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 801cfce:	1c69      	adds	r1, r5, #1
 801cfd0:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801cfd4:	10d1      	asrs	r1, r2, #3
 801cfd6:	f021 0103 	bic.w	r1, r1, #3
 801cfda:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 801cfde:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801cfe2:	b2db      	uxtb	r3, r3
 801cfe4:	00c9      	lsls	r1, r1, #3
 801cfe6:	fb03 f30e 	mul.w	r3, r3, lr
 801cfea:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801cfee:	4301      	orrs	r1, r0
 801cff0:	1c58      	adds	r0, r3, #1
 801cff2:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801cff6:	00d2      	lsls	r2, r2, #3
 801cff8:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801cffc:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801d000:	430a      	orrs	r2, r1
 801d002:	e726      	b.n	801ce52 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 801d004:	f115 0e01 	adds.w	lr, r5, #1
 801d008:	f53f af24 	bmi.w	801ce54 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801d00c:	4572      	cmp	r2, lr
 801d00e:	f6ff af21 	blt.w	801ce54 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801d012:	f110 0e01 	adds.w	lr, r0, #1
 801d016:	f53f af1d 	bmi.w	801ce54 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801d01a:	4573      	cmp	r3, lr
 801d01c:	f6ff af1a 	blt.w	801ce54 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801d020:	b21b      	sxth	r3, r3
 801d022:	b212      	sxth	r2, r2
 801d024:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 801d028:	e9cd 5002 	strd	r5, r0, [sp, #8]
 801d02c:	9301      	str	r3, [sp, #4]
 801d02e:	9200      	str	r2, [sp, #0]
 801d030:	4639      	mov	r1, r7
 801d032:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 801d036:	9811      	ldr	r0, [sp, #68]	; 0x44
 801d038:	f7ff fc24 	bl	801c884 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801d03c:	e70a      	b.n	801ce54 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801d03e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801d040:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801d044:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801d046:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801d04a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d04c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d050:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801d052:	141f      	asrs	r7, r3, #16
 801d054:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801d056:	141b      	asrs	r3, r3, #16
 801d058:	fb01 3707 	mla	r7, r1, r7, r3
 801d05c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d05e:	fa1f fc82 	uxth.w	ip, r2
 801d062:	eb03 0a07 	add.w	sl, r3, r7
 801d066:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801d06a:	f813 9007 	ldrb.w	r9, [r3, r7]
 801d06e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801d072:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801d076:	b29b      	uxth	r3, r3
 801d078:	2d00      	cmp	r5, #0
 801d07a:	f000 80fe 	beq.w	801d27a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 801d07e:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801d082:	940c      	str	r4, [sp, #48]	; 0x30
 801d084:	eb0a 0b01 	add.w	fp, sl, r1
 801d088:	fa1f fa85 	uxth.w	sl, r5
 801d08c:	fb0a fc0c 	mul.w	ip, sl, ip
 801d090:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801d094:	fa1f fa8a 	uxth.w	sl, sl
 801d098:	eba0 000c 	sub.w	r0, r0, ip
 801d09c:	eba3 030a 	sub.w	r3, r3, sl
 801d0a0:	b280      	uxth	r0, r0
 801d0a2:	fb08 f000 	mul.w	r0, r8, r0
 801d0a6:	b29b      	uxth	r3, r3
 801d0a8:	fb09 0303 	mla	r3, r9, r3, r0
 801d0ac:	980c      	ldr	r0, [sp, #48]	; 0x30
 801d0ae:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801d0b2:	940d      	str	r4, [sp, #52]	; 0x34
 801d0b4:	fb0a 3300 	mla	r3, sl, r0, r3
 801d0b8:	fb0c 3304 	mla	r3, ip, r4, r3
 801d0bc:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801d0c0:	2b00      	cmp	r3, #0
 801d0c2:	f000 80cc 	beq.w	801d25e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 801d0c6:	9808      	ldr	r0, [sp, #32]
 801d0c8:	9c08      	ldr	r4, [sp, #32]
 801d0ca:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801d0ce:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801d0d2:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801d0d6:	f000 80d5 	beq.w	801d284 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801d0da:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801d0de:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801d0e2:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801d0e6:	fb09 f707 	mul.w	r7, r9, r7
 801d0ea:	fb0a fc0c 	mul.w	ip, sl, ip
 801d0ee:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801d0f2:	f107 0b20 	add.w	fp, r7, #32
 801d0f6:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801d0fa:	44cc      	add	ip, r9
 801d0fc:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801d100:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801d104:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801d108:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801d10c:	ea4c 0909 	orr.w	r9, ip, r9
 801d110:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801d114:	8847      	ldrh	r7, [r0, #2]
 801d116:	d019      	beq.n	801d14c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 801d118:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801d11c:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801d120:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801d124:	fb08 f807 	mul.w	r8, r8, r7
 801d128:	fb0a fc0c 	mul.w	ip, sl, ip
 801d12c:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801d130:	f108 0b20 	add.w	fp, r8, #32
 801d134:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801d138:	44bc      	add	ip, r7
 801d13a:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801d13e:	0a3f      	lsrs	r7, r7, #8
 801d140:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801d144:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801d148:	ea4c 0707 	orr.w	r7, ip, r7
 801d14c:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801d150:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801d154:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801d158:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801d15c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801d160:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801d164:	ea4c 0909 	orr.w	r9, ip, r9
 801d168:	ea4a 0707 	orr.w	r7, sl, r7
 801d16c:	2d00      	cmp	r5, #0
 801d16e:	f000 808b 	beq.w	801d288 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 801d172:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801d176:	3901      	subs	r1, #1
 801d178:	0049      	lsls	r1, r1, #1
 801d17a:	3102      	adds	r1, #2
 801d17c:	eb00 0c01 	add.w	ip, r0, r1
 801d180:	5a41      	ldrh	r1, [r0, r1]
 801d182:	980c      	ldr	r0, [sp, #48]	; 0x30
 801d184:	28ff      	cmp	r0, #255	; 0xff
 801d186:	d019      	beq.n	801d1bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 801d188:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801d18a:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 801d18e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801d192:	fb04 fa01 	mul.w	sl, r4, r1
 801d196:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d19a:	fb08 f800 	mul.w	r8, r8, r0
 801d19e:	f10a 0020 	add.w	r0, sl, #32
 801d1a2:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801d1a6:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801d1aa:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801d1ae:	4441      	add	r1, r8
 801d1b0:	0a00      	lsrs	r0, r0, #8
 801d1b2:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801d1b6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d1ba:	4301      	orrs	r1, r0
 801d1bc:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801d1be:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801d1c2:	2cff      	cmp	r4, #255	; 0xff
 801d1c4:	d01a      	beq.n	801d1fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 801d1c6:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 801d1ca:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d1ce:	fb04 fa00 	mul.w	sl, r4, r0
 801d1d2:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d1d6:	fb08 f80c 	mul.w	r8, r8, ip
 801d1da:	f10a 0c20 	add.w	ip, sl, #32
 801d1de:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801d1e2:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801d1e6:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801d1ea:	4440      	add	r0, r8
 801d1ec:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d1f0:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801d1f4:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801d1f8:	ea40 000c 	orr.w	r0, r0, ip
 801d1fc:	fb15 fc02 	smulbb	ip, r5, r2
 801d200:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801d204:	f1c5 0810 	rsb	r8, r5, #16
 801d208:	eba8 0802 	sub.w	r8, r8, r2
 801d20c:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801d210:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801d214:	437a      	muls	r2, r7
 801d216:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801d21a:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801d21e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801d222:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801d226:	fb09 2208 	mla	r2, r9, r8, r2
 801d22a:	ea4a 0101 	orr.w	r1, sl, r1
 801d22e:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801d232:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801d236:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801d23a:	fb05 2201 	mla	r2, r5, r1, r2
 801d23e:	ea4b 0000 	orr.w	r0, fp, r0
 801d242:	fb0c 2200 	mla	r2, ip, r0, r2
 801d246:	0d57      	lsrs	r7, r2, #21
 801d248:	0952      	lsrs	r2, r2, #5
 801d24a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801d24e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d252:	433a      	orrs	r2, r7
 801d254:	2bff      	cmp	r3, #255	; 0xff
 801d256:	b292      	uxth	r2, r2
 801d258:	d127      	bne.n	801d2aa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 801d25a:	f8ae 2000 	strh.w	r2, [lr]
 801d25e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801d260:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 801d262:	4413      	add	r3, r2
 801d264:	931d      	str	r3, [sp, #116]	; 0x74
 801d266:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 801d268:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d26a:	441a      	add	r2, r3
 801d26c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801d26e:	921e      	str	r2, [sp, #120]	; 0x78
 801d270:	3b01      	subs	r3, #1
 801d272:	f10e 0e02 	add.w	lr, lr, #2
 801d276:	930f      	str	r3, [sp, #60]	; 0x3c
 801d278:	e627      	b.n	801ceca <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801d27a:	fb08 f000 	mul.w	r0, r8, r0
 801d27e:	fb09 0303 	mla	r3, r9, r3, r0
 801d282:	e71b      	b.n	801d0bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 801d284:	46b9      	mov	r9, r7
 801d286:	e743      	b.n	801d110 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 801d288:	f1c2 0110 	rsb	r1, r2, #16
 801d28c:	437a      	muls	r2, r7
 801d28e:	fb09 2901 	mla	r9, r9, r1, r2
 801d292:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801d296:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801d29a:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801d29e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d2a2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d2a6:	4302      	orrs	r2, r0
 801d2a8:	e7d4      	b.n	801d254 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 801d2aa:	f8be 7000 	ldrh.w	r7, [lr]
 801d2ae:	4c1c      	ldr	r4, [pc, #112]	; (801d320 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 801d2b0:	43db      	mvns	r3, r3
 801d2b2:	1238      	asrs	r0, r7, #8
 801d2b4:	fa5f fc83 	uxtb.w	ip, r3
 801d2b8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801d2bc:	10fd      	asrs	r5, r7, #3
 801d2be:	fb00 f00c 	mul.w	r0, r0, ip
 801d2c2:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801d2c6:	fb05 f10c 	mul.w	r1, r5, ip
 801d2ca:	1c45      	adds	r5, r0, #1
 801d2cc:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801d2d0:	1215      	asrs	r5, r2, #8
 801d2d2:	f025 0507 	bic.w	r5, r5, #7
 801d2d6:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801d2da:	1c4d      	adds	r5, r1, #1
 801d2dc:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 801d2e0:	10d1      	asrs	r1, r2, #3
 801d2e2:	f021 0103 	bic.w	r1, r1, #3
 801d2e6:	00fb      	lsls	r3, r7, #3
 801d2e8:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801d2ec:	b2db      	uxtb	r3, r3
 801d2ee:	b2c0      	uxtb	r0, r0
 801d2f0:	00c9      	lsls	r1, r1, #3
 801d2f2:	fb03 f30c 	mul.w	r3, r3, ip
 801d2f6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801d2fa:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 801d2fe:	4308      	orrs	r0, r1
 801d300:	1c59      	adds	r1, r3, #1
 801d302:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801d306:	00d2      	lsls	r2, r2, #3
 801d308:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801d30c:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 801d310:	4318      	orrs	r0, r3
 801d312:	f8ae 0000 	strh.w	r0, [lr]
 801d316:	e7a2      	b.n	801d25e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 801d318:	b013      	add	sp, #76	; 0x4c
 801d31a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d31e:	bf00      	nop
 801d320:	fffff800 	.word	0xfffff800

0801d324 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 801d324:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801d328:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
 801d32c:	fb05 4c03 	mla	ip, r5, r3, r4
 801d330:	2d00      	cmp	r5, #0
 801d332:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 801d336:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 801d33a:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 801d33e:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 801d342:	8808      	ldrh	r0, [r1, #0]
 801d344:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 801d348:	f2c0 80a7 	blt.w	801d49a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801d34c:	45aa      	cmp	sl, r5
 801d34e:	f340 80a4 	ble.w	801d49a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801d352:	2c00      	cmp	r4, #0
 801d354:	f2c0 809f 	blt.w	801d496 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801d358:	42a3      	cmp	r3, r4
 801d35a:	f340 809c 	ble.w	801d496 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801d35e:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 801d362:	1c62      	adds	r2, r4, #1
 801d364:	f100 809c 	bmi.w	801d4a0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801d368:	4293      	cmp	r3, r2
 801d36a:	f340 8099 	ble.w	801d4a0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801d36e:	f1b9 0f00 	cmp.w	r9, #0
 801d372:	f000 8095 	beq.w	801d4a0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801d376:	f8be c002 	ldrh.w	ip, [lr, #2]
 801d37a:	3501      	adds	r5, #1
 801d37c:	f100 8094 	bmi.w	801d4a8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801d380:	45aa      	cmp	sl, r5
 801d382:	f340 8091 	ble.w	801d4a8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801d386:	2f00      	cmp	r7, #0
 801d388:	f000 808e 	beq.w	801d4a8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801d38c:	2c00      	cmp	r4, #0
 801d38e:	f2c0 8089 	blt.w	801d4a4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801d392:	42a3      	cmp	r3, r4
 801d394:	f340 8086 	ble.w	801d4a4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801d398:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 801d39c:	3401      	adds	r4, #1
 801d39e:	f100 8086 	bmi.w	801d4ae <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801d3a2:	42a3      	cmp	r3, r4
 801d3a4:	f340 8083 	ble.w	801d4ae <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801d3a8:	f1b9 0f00 	cmp.w	r9, #0
 801d3ac:	d07f      	beq.n	801d4ae <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801d3ae:	3301      	adds	r3, #1
 801d3b0:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 801d3b4:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801d3b8:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801d3bc:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 801d3c0:	fb19 fe07 	smulbb	lr, r9, r7
 801d3c4:	ea44 0808 	orr.w	r8, r4, r8
 801d3c8:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801d3cc:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801d3d0:	f1c7 0210 	rsb	r2, r7, #16
 801d3d4:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801d3d8:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801d3dc:	ea44 0c0c 	orr.w	ip, r4, ip
 801d3e0:	eba2 0209 	sub.w	r2, r2, r9
 801d3e4:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801d3e8:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801d3ec:	fb04 f40c 	mul.w	r4, r4, ip
 801d3f0:	fb02 4808 	mla	r8, r2, r8, r4
 801d3f4:	041a      	lsls	r2, r3, #16
 801d3f6:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801d3fa:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801d3fe:	4313      	orrs	r3, r2
 801d400:	042a      	lsls	r2, r5, #16
 801d402:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801d406:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801d40a:	fb0e 8303 	mla	r3, lr, r3, r8
 801d40e:	432a      	orrs	r2, r5
 801d410:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801d414:	fb07 3202 	mla	r2, r7, r2, r3
 801d418:	0d53      	lsrs	r3, r2, #21
 801d41a:	0952      	lsrs	r2, r2, #5
 801d41c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d420:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d424:	431a      	orrs	r2, r3
 801d426:	b293      	uxth	r3, r2
 801d428:	b2b4      	uxth	r4, r6
 801d42a:	1202      	asrs	r2, r0, #8
 801d42c:	43f6      	mvns	r6, r6
 801d42e:	b2f6      	uxtb	r6, r6
 801d430:	121d      	asrs	r5, r3, #8
 801d432:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801d436:	fb12 f206 	smulbb	r2, r2, r6
 801d43a:	10c7      	asrs	r7, r0, #3
 801d43c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801d440:	00c0      	lsls	r0, r0, #3
 801d442:	fb05 2504 	mla	r5, r5, r4, r2
 801d446:	b2c0      	uxtb	r0, r0
 801d448:	10da      	asrs	r2, r3, #3
 801d44a:	00db      	lsls	r3, r3, #3
 801d44c:	b2db      	uxtb	r3, r3
 801d44e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801d452:	fb10 f006 	smulbb	r0, r0, r6
 801d456:	b2ad      	uxth	r5, r5
 801d458:	fb03 0004 	mla	r0, r3, r4, r0
 801d45c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801d460:	fb17 f706 	smulbb	r7, r7, r6
 801d464:	b280      	uxth	r0, r0
 801d466:	1c6b      	adds	r3, r5, #1
 801d468:	fb02 7204 	mla	r2, r2, r4, r7
 801d46c:	b292      	uxth	r2, r2
 801d46e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801d472:	1c43      	adds	r3, r0, #1
 801d474:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801d478:	1c50      	adds	r0, r2, #1
 801d47a:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801d47e:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801d482:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801d486:	0952      	lsrs	r2, r2, #5
 801d488:	432b      	orrs	r3, r5
 801d48a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d48e:	4313      	orrs	r3, r2
 801d490:	800b      	strh	r3, [r1, #0]
 801d492:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801d496:	4680      	mov	r8, r0
 801d498:	e763      	b.n	801d362 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 801d49a:	4684      	mov	ip, r0
 801d49c:	4680      	mov	r8, r0
 801d49e:	e76c      	b.n	801d37a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801d4a0:	4684      	mov	ip, r0
 801d4a2:	e76a      	b.n	801d37a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801d4a4:	4605      	mov	r5, r0
 801d4a6:	e779      	b.n	801d39c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 801d4a8:	4603      	mov	r3, r0
 801d4aa:	4605      	mov	r5, r0
 801d4ac:	e782      	b.n	801d3b4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 801d4ae:	4603      	mov	r3, r0
 801d4b0:	e780      	b.n	801d3b4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

0801d4b2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d4b2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d4b6:	b093      	sub	sp, #76	; 0x4c
 801d4b8:	461d      	mov	r5, r3
 801d4ba:	9210      	str	r2, [sp, #64]	; 0x40
 801d4bc:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801d4be:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 801d4c2:	920b      	str	r2, [sp, #44]	; 0x2c
 801d4c4:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
 801d4c8:	910a      	str	r1, [sp, #40]	; 0x28
 801d4ca:	6859      	ldr	r1, [r3, #4]
 801d4cc:	681b      	ldr	r3, [r3, #0]
 801d4ce:	9011      	str	r0, [sp, #68]	; 0x44
 801d4d0:	fb01 2707 	mla	r7, r1, r7, r2
 801d4d4:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 801d4d8:	9307      	str	r3, [sp, #28]
 801d4da:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d4dc:	681b      	ldr	r3, [r3, #0]
 801d4de:	9309      	str	r3, [sp, #36]	; 0x24
 801d4e0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d4e2:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801d4e6:	43db      	mvns	r3, r3
 801d4e8:	b2db      	uxtb	r3, r3
 801d4ea:	9308      	str	r3, [sp, #32]
 801d4ec:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d4ee:	2b00      	cmp	r3, #0
 801d4f0:	dc03      	bgt.n	801d4fa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801d4f2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d4f4:	2b00      	cmp	r3, #0
 801d4f6:	f340 8203 	ble.w	801d900 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801d4fa:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d4fc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d500:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801d504:	1e48      	subs	r0, r1, #1
 801d506:	f102 3cff 	add.w	ip, r2, #4294967295
 801d50a:	2d00      	cmp	r5, #0
 801d50c:	f340 80da 	ble.w	801d6c4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801d510:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801d514:	ea4f 4326 	mov.w	r3, r6, asr #16
 801d518:	d406      	bmi.n	801d528 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801d51a:	4586      	cmp	lr, r0
 801d51c:	da04      	bge.n	801d528 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801d51e:	2b00      	cmp	r3, #0
 801d520:	db02      	blt.n	801d528 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801d522:	4563      	cmp	r3, ip
 801d524:	f2c0 80cf 	blt.w	801d6c6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801d528:	f11e 0e01 	adds.w	lr, lr, #1
 801d52c:	f100 80c1 	bmi.w	801d6b2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801d530:	4571      	cmp	r1, lr
 801d532:	f2c0 80be 	blt.w	801d6b2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801d536:	3301      	adds	r3, #1
 801d538:	f100 80bb 	bmi.w	801d6b2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801d53c:	429a      	cmp	r2, r3
 801d53e:	f2c0 80b8 	blt.w	801d6b2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801d542:	f8dd 801c 	ldr.w	r8, [sp, #28]
 801d546:	46a9      	mov	r9, r5
 801d548:	f1b9 0f00 	cmp.w	r9, #0
 801d54c:	f340 80d8 	ble.w	801d700 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 801d550:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d552:	1421      	asrs	r1, r4, #16
 801d554:	ea4f 4026 	mov.w	r0, r6, asr #16
 801d558:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801d55c:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801d560:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801d564:	f100 8111 	bmi.w	801d78a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801d568:	f10e 3aff 	add.w	sl, lr, #4294967295
 801d56c:	4551      	cmp	r1, sl
 801d56e:	f280 810c 	bge.w	801d78a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801d572:	2800      	cmp	r0, #0
 801d574:	f2c0 8109 	blt.w	801d78a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801d578:	f103 3aff 	add.w	sl, r3, #4294967295
 801d57c:	4550      	cmp	r0, sl
 801d57e:	f280 8104 	bge.w	801d78a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801d582:	fa0f f38e 	sxth.w	r3, lr
 801d586:	fb00 1103 	mla	r1, r0, r3, r1
 801d58a:	9809      	ldr	r0, [sp, #36]	; 0x24
 801d58c:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 801d590:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 801d594:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 801d598:	f1bc 0f00 	cmp.w	ip, #0
 801d59c:	d007      	beq.n	801d5ae <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 801d59e:	005b      	lsls	r3, r3, #1
 801d5a0:	eb0a 0003 	add.w	r0, sl, r3
 801d5a4:	f83a 3003 	ldrh.w	r3, [sl, r3]
 801d5a8:	930c      	str	r3, [sp, #48]	; 0x30
 801d5aa:	8843      	ldrh	r3, [r0, #2]
 801d5ac:	930d      	str	r3, [sp, #52]	; 0x34
 801d5ae:	ea4f 400e 	mov.w	r0, lr, lsl #16
 801d5b2:	fb12 f30c 	smulbb	r3, r2, ip
 801d5b6:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801d5ba:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801d5be:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801d5c2:	10db      	asrs	r3, r3, #3
 801d5c4:	ea40 000e 	orr.w	r0, r0, lr
 801d5c8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801d5cc:	f1cc 0e10 	rsb	lr, ip, #16
 801d5d0:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801d5d4:	ebae 0e02 	sub.w	lr, lr, r2
 801d5d8:	ea4a 0101 	orr.w	r1, sl, r1
 801d5dc:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801d5e0:	4351      	muls	r1, r2
 801d5e2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801d5e4:	9f08      	ldr	r7, [sp, #32]
 801d5e6:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801d5ea:	fb0e 1e00 	mla	lr, lr, r0, r1
 801d5ee:	0410      	lsls	r0, r2, #16
 801d5f0:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801d5f4:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d5f8:	4310      	orrs	r0, r2
 801d5fa:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801d5fc:	990c      	ldr	r1, [sp, #48]	; 0x30
 801d5fe:	0412      	lsls	r2, r2, #16
 801d600:	fb03 e000 	mla	r0, r3, r0, lr
 801d604:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801d608:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 801d60c:	ea42 020e 	orr.w	r2, r2, lr
 801d610:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801d614:	fb03 0302 	mla	r3, r3, r2, r0
 801d618:	0d5a      	lsrs	r2, r3, #21
 801d61a:	095b      	lsrs	r3, r3, #5
 801d61c:	f8b8 0000 	ldrh.w	r0, [r8]
 801d620:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d624:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801d628:	4313      	orrs	r3, r2
 801d62a:	b29b      	uxth	r3, r3
 801d62c:	1201      	asrs	r1, r0, #8
 801d62e:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 801d632:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801d636:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801d63a:	fb11 f107 	smulbb	r1, r1, r7
 801d63e:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801d642:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d646:	00c0      	lsls	r0, r0, #3
 801d648:	fb0c 1c02 	mla	ip, ip, r2, r1
 801d64c:	b2c0      	uxtb	r0, r0
 801d64e:	10d9      	asrs	r1, r3, #3
 801d650:	00db      	lsls	r3, r3, #3
 801d652:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801d656:	b2db      	uxtb	r3, r3
 801d658:	fb10 f007 	smulbb	r0, r0, r7
 801d65c:	fa1f fc8c 	uxth.w	ip, ip
 801d660:	fb03 0302 	mla	r3, r3, r2, r0
 801d664:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801d668:	fb1e fe07 	smulbb	lr, lr, r7
 801d66c:	fb01 e102 	mla	r1, r1, r2, lr
 801d670:	b29a      	uxth	r2, r3
 801d672:	f10c 0301 	add.w	r3, ip, #1
 801d676:	b289      	uxth	r1, r1
 801d678:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801d67c:	1c53      	adds	r3, r2, #1
 801d67e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801d682:	1c4a      	adds	r2, r1, #1
 801d684:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801d688:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801d68c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801d690:	0949      	lsrs	r1, r1, #5
 801d692:	ea43 030c 	orr.w	r3, r3, ip
 801d696:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801d69a:	430b      	orrs	r3, r1
 801d69c:	f8a8 3000 	strh.w	r3, [r8]
 801d6a0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801d6a2:	441c      	add	r4, r3
 801d6a4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d6a6:	f108 0802 	add.w	r8, r8, #2
 801d6aa:	441e      	add	r6, r3
 801d6ac:	f109 39ff 	add.w	r9, r9, #4294967295
 801d6b0:	e74a      	b.n	801d548 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801d6b2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801d6b4:	441c      	add	r4, r3
 801d6b6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d6b8:	441e      	add	r6, r3
 801d6ba:	9b07      	ldr	r3, [sp, #28]
 801d6bc:	3302      	adds	r3, #2
 801d6be:	3d01      	subs	r5, #1
 801d6c0:	9307      	str	r3, [sp, #28]
 801d6c2:	e722      	b.n	801d50a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801d6c4:	d022      	beq.n	801d70c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 801d6c6:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801d6c8:	1e6b      	subs	r3, r5, #1
 801d6ca:	fb00 4003 	mla	r0, r0, r3, r4
 801d6ce:	1400      	asrs	r0, r0, #16
 801d6d0:	f53f af37 	bmi.w	801d542 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d6d4:	3901      	subs	r1, #1
 801d6d6:	4288      	cmp	r0, r1
 801d6d8:	f6bf af33 	bge.w	801d542 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d6dc:	9920      	ldr	r1, [sp, #128]	; 0x80
 801d6de:	fb01 6303 	mla	r3, r1, r3, r6
 801d6e2:	141b      	asrs	r3, r3, #16
 801d6e4:	f53f af2d 	bmi.w	801d542 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d6e8:	3a01      	subs	r2, #1
 801d6ea:	4293      	cmp	r3, r2
 801d6ec:	f6bf af29 	bge.w	801d542 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d6f0:	f8dd 901c 	ldr.w	r9, [sp, #28]
 801d6f4:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 801d6f8:	46a8      	mov	r8, r5
 801d6fa:	f1b8 0f00 	cmp.w	r8, #0
 801d6fe:	dc5e      	bgt.n	801d7be <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801d700:	9b07      	ldr	r3, [sp, #28]
 801d702:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801d706:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801d70a:	9307      	str	r3, [sp, #28]
 801d70c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d70e:	2b00      	cmp	r3, #0
 801d710:	f340 80f6 	ble.w	801d900 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801d714:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d718:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801d71c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801d720:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801d722:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d726:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d72a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d72e:	eef0 6a62 	vmov.f32	s13, s5
 801d732:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d736:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d73a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d73e:	ee16 4a90 	vmov	r4, s13
 801d742:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d746:	eef0 6a43 	vmov.f32	s13, s6
 801d74a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d74e:	ee12 2a90 	vmov	r2, s5
 801d752:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d756:	fb92 f3f3 	sdiv	r3, r2, r3
 801d75a:	ee13 2a10 	vmov	r2, s6
 801d75e:	931f      	str	r3, [sp, #124]	; 0x7c
 801d760:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801d762:	fb92 f3f3 	sdiv	r3, r2, r3
 801d766:	9320      	str	r3, [sp, #128]	; 0x80
 801d768:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d76a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801d76c:	3b01      	subs	r3, #1
 801d76e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d772:	930a      	str	r3, [sp, #40]	; 0x28
 801d774:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801d776:	ee16 6a90 	vmov	r6, s13
 801d77a:	bf14      	ite	ne
 801d77c:	461d      	movne	r5, r3
 801d77e:	4615      	moveq	r5, r2
 801d780:	eeb0 3a67 	vmov.f32	s6, s15
 801d784:	eef0 2a47 	vmov.f32	s5, s14
 801d788:	e6b0      	b.n	801d4ec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801d78a:	f111 0a01 	adds.w	sl, r1, #1
 801d78e:	d487      	bmi.n	801d6a0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801d790:	45d6      	cmp	lr, sl
 801d792:	db85      	blt.n	801d6a0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801d794:	f110 0a01 	adds.w	sl, r0, #1
 801d798:	d482      	bmi.n	801d6a0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801d79a:	4553      	cmp	r3, sl
 801d79c:	db80      	blt.n	801d6a0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801d79e:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801d7a0:	9101      	str	r1, [sp, #4]
 801d7a2:	b21b      	sxth	r3, r3
 801d7a4:	e9cd 0202 	strd	r0, r2, [sp, #8]
 801d7a8:	9300      	str	r3, [sp, #0]
 801d7aa:	e9cd c704 	strd	ip, r7, [sp, #16]
 801d7ae:	fa0f f38e 	sxth.w	r3, lr
 801d7b2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801d7b4:	9811      	ldr	r0, [sp, #68]	; 0x44
 801d7b6:	4641      	mov	r1, r8
 801d7b8:	f7ff fdb4 	bl	801d324 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 801d7bc:	e770      	b.n	801d6a0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801d7be:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d7c0:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801d7c2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d7c6:	1430      	asrs	r0, r6, #16
 801d7c8:	1423      	asrs	r3, r4, #16
 801d7ca:	fb01 3000 	mla	r0, r1, r0, r3
 801d7ce:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d7d0:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 801d7d4:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 801d7d8:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801d7dc:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801d7e0:	8858      	ldrh	r0, [r3, #2]
 801d7e2:	f1be 0f00 	cmp.w	lr, #0
 801d7e6:	d00b      	beq.n	801d800 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 801d7e8:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801d7ec:	3901      	subs	r1, #1
 801d7ee:	0049      	lsls	r1, r1, #1
 801d7f0:	3102      	adds	r1, #2
 801d7f2:	eb03 0b01 	add.w	fp, r3, r1
 801d7f6:	5a5b      	ldrh	r3, [r3, r1]
 801d7f8:	930e      	str	r3, [sp, #56]	; 0x38
 801d7fa:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801d7fe:	930f      	str	r3, [sp, #60]	; 0x3c
 801d800:	ea4f 410c 	mov.w	r1, ip, lsl #16
 801d804:	fb12 f30e 	smulbb	r3, r2, lr
 801d808:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801d80c:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801d810:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 801d814:	10db      	asrs	r3, r3, #3
 801d816:	ea41 010c 	orr.w	r1, r1, ip
 801d81a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801d81e:	f1ce 0c10 	rsb	ip, lr, #16
 801d822:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801d826:	ebac 0c02 	sub.w	ip, ip, r2
 801d82a:	ea4b 0000 	orr.w	r0, fp, r0
 801d82e:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801d832:	4350      	muls	r0, r2
 801d834:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801d836:	9f08      	ldr	r7, [sp, #32]
 801d838:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801d83c:	fb0c 0c01 	mla	ip, ip, r1, r0
 801d840:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801d844:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 801d848:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801d84a:	980e      	ldr	r0, [sp, #56]	; 0x38
 801d84c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801d850:	0412      	lsls	r2, r2, #16
 801d852:	ea4b 0101 	orr.w	r1, fp, r1
 801d856:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801d85a:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801d85e:	fb03 c101 	mla	r1, r3, r1, ip
 801d862:	4302      	orrs	r2, r0
 801d864:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801d868:	fb03 1202 	mla	r2, r3, r2, r1
 801d86c:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 801d870:	0952      	lsrs	r2, r2, #5
 801d872:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 801d876:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801d87a:	f8b9 2000 	ldrh.w	r2, [r9]
 801d87e:	ea4b 0303 	orr.w	r3, fp, r3
 801d882:	b29b      	uxth	r3, r3
 801d884:	1211      	asrs	r1, r2, #8
 801d886:	1218      	asrs	r0, r3, #8
 801d888:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801d88c:	fb11 f107 	smulbb	r1, r1, r7
 801d890:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 801d894:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801d898:	00d2      	lsls	r2, r2, #3
 801d89a:	fb00 100a 	mla	r0, r0, sl, r1
 801d89e:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801d8a2:	10d9      	asrs	r1, r3, #3
 801d8a4:	b2d2      	uxtb	r2, r2
 801d8a6:	00db      	lsls	r3, r3, #3
 801d8a8:	fb1c fc07 	smulbb	ip, ip, r7
 801d8ac:	fb12 f207 	smulbb	r2, r2, r7
 801d8b0:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801d8b4:	b2db      	uxtb	r3, r3
 801d8b6:	b280      	uxth	r0, r0
 801d8b8:	fb01 c10a 	mla	r1, r1, sl, ip
 801d8bc:	fb03 230a 	mla	r3, r3, sl, r2
 801d8c0:	b29b      	uxth	r3, r3
 801d8c2:	b289      	uxth	r1, r1
 801d8c4:	1c42      	adds	r2, r0, #1
 801d8c6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801d8ca:	f101 0c01 	add.w	ip, r1, #1
 801d8ce:	1c5a      	adds	r2, r3, #1
 801d8d0:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801d8d4:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801d8d8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801d8da:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801d8de:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801d8e2:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801d8e6:	4310      	orrs	r0, r2
 801d8e8:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801d8ec:	441c      	add	r4, r3
 801d8ee:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d8f0:	ea40 000c 	orr.w	r0, r0, ip
 801d8f4:	f829 0b02 	strh.w	r0, [r9], #2
 801d8f8:	441e      	add	r6, r3
 801d8fa:	f108 38ff 	add.w	r8, r8, #4294967295
 801d8fe:	e6fc      	b.n	801d6fa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 801d900:	b013      	add	sp, #76	; 0x4c
 801d902:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801d906 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 801d906:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801d90a:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 801d90e:	fb0e 4703 	mla	r7, lr, r3, r4
 801d912:	f1be 0f00 	cmp.w	lr, #0
 801d916:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 801d91a:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
 801d91e:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
 801d922:	8808      	ldrh	r0, [r1, #0]
 801d924:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 801d928:	db60      	blt.n	801d9ec <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801d92a:	45f1      	cmp	r9, lr
 801d92c:	dd5e      	ble.n	801d9ec <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801d92e:	2c00      	cmp	r4, #0
 801d930:	db5a      	blt.n	801d9e8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801d932:	42a3      	cmp	r3, r4
 801d934:	dd58      	ble.n	801d9e8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801d936:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 801d93a:	1c62      	adds	r2, r4, #1
 801d93c:	d459      	bmi.n	801d9f2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801d93e:	4293      	cmp	r3, r2
 801d940:	dd57      	ble.n	801d9f2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801d942:	2d00      	cmp	r5, #0
 801d944:	d055      	beq.n	801d9f2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801d946:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 801d94a:	f11e 0e01 	adds.w	lr, lr, #1
 801d94e:	d454      	bmi.n	801d9fa <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801d950:	45f1      	cmp	r9, lr
 801d952:	dd52      	ble.n	801d9fa <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801d954:	2e00      	cmp	r6, #0
 801d956:	d050      	beq.n	801d9fa <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801d958:	2c00      	cmp	r4, #0
 801d95a:	db4c      	blt.n	801d9f6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801d95c:	42a3      	cmp	r3, r4
 801d95e:	dd4a      	ble.n	801d9f6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801d960:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 801d964:	3401      	adds	r4, #1
 801d966:	d405      	bmi.n	801d974 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801d968:	42a3      	cmp	r3, r4
 801d96a:	dd03      	ble.n	801d974 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801d96c:	b115      	cbz	r5, 801d974 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801d96e:	3301      	adds	r3, #1
 801d970:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 801d974:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801d978:	fb15 f406 	smulbb	r4, r5, r6
 801d97c:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801d980:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801d984:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801d988:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801d98c:	ea43 0c0c 	orr.w	ip, r3, ip
 801d990:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801d994:	f1c6 0310 	rsb	r3, r6, #16
 801d998:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801d99c:	1b5b      	subs	r3, r3, r5
 801d99e:	ea4e 0707 	orr.w	r7, lr, r7
 801d9a2:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801d9a6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801d9aa:	437d      	muls	r5, r7
 801d9ac:	fb03 5c0c 	mla	ip, r3, ip, r5
 801d9b0:	0403      	lsls	r3, r0, #16
 801d9b2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801d9b6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801d9ba:	4318      	orrs	r0, r3
 801d9bc:	0413      	lsls	r3, r2, #16
 801d9be:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801d9c2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d9c6:	4313      	orrs	r3, r2
 801d9c8:	fb04 c000 	mla	r0, r4, r0, ip
 801d9cc:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801d9d0:	fb06 0003 	mla	r0, r6, r3, r0
 801d9d4:	0d43      	lsrs	r3, r0, #21
 801d9d6:	0940      	lsrs	r0, r0, #5
 801d9d8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d9dc:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801d9e0:	4318      	orrs	r0, r3
 801d9e2:	8008      	strh	r0, [r1, #0]
 801d9e4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801d9e8:	4684      	mov	ip, r0
 801d9ea:	e7a6      	b.n	801d93a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 801d9ec:	4607      	mov	r7, r0
 801d9ee:	4684      	mov	ip, r0
 801d9f0:	e7ab      	b.n	801d94a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801d9f2:	4607      	mov	r7, r0
 801d9f4:	e7a9      	b.n	801d94a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801d9f6:	4602      	mov	r2, r0
 801d9f8:	e7b4      	b.n	801d964 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 801d9fa:	4602      	mov	r2, r0
 801d9fc:	e7ba      	b.n	801d974 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

0801d9fe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d9fe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801da02:	b08f      	sub	sp, #60	; 0x3c
 801da04:	461d      	mov	r5, r3
 801da06:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801da08:	920c      	str	r2, [sp, #48]	; 0x30
 801da0a:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
 801da0e:	9107      	str	r1, [sp, #28]
 801da10:	6859      	ldr	r1, [r3, #4]
 801da12:	681b      	ldr	r3, [r3, #0]
 801da14:	900d      	str	r0, [sp, #52]	; 0x34
 801da16:	fb01 2707 	mla	r7, r1, r7, r2
 801da1a:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 801da1e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801da20:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
 801da24:	f8d3 8000 	ldr.w	r8, [r3]
 801da28:	9b07      	ldr	r3, [sp, #28]
 801da2a:	2b00      	cmp	r3, #0
 801da2c:	dc03      	bgt.n	801da36 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801da2e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801da30:	2b00      	cmp	r3, #0
 801da32:	f340 8181 	ble.w	801dd38 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 801da36:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801da38:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801da3c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801da40:	1e48      	subs	r0, r1, #1
 801da42:	f102 3cff 	add.w	ip, r2, #4294967295
 801da46:	2d00      	cmp	r5, #0
 801da48:	f340 809b 	ble.w	801db82 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 801da4c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801da50:	ea4f 4326 	mov.w	r3, r6, asr #16
 801da54:	d406      	bmi.n	801da64 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801da56:	4586      	cmp	lr, r0
 801da58:	da04      	bge.n	801da64 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801da5a:	2b00      	cmp	r3, #0
 801da5c:	db02      	blt.n	801da64 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801da5e:	4563      	cmp	r3, ip
 801da60:	f2c0 8090 	blt.w	801db84 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801da64:	f11e 0e01 	adds.w	lr, lr, #1
 801da68:	f100 8084 	bmi.w	801db74 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801da6c:	4571      	cmp	r1, lr
 801da6e:	f2c0 8081 	blt.w	801db74 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801da72:	3301      	adds	r3, #1
 801da74:	d47e      	bmi.n	801db74 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801da76:	429a      	cmp	r2, r3
 801da78:	db7c      	blt.n	801db74 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801da7a:	46aa      	mov	sl, r5
 801da7c:	46b9      	mov	r9, r7
 801da7e:	f1ba 0f00 	cmp.w	sl, #0
 801da82:	f340 8099 	ble.w	801dbb8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 801da86:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801da88:	1421      	asrs	r1, r4, #16
 801da8a:	ea4f 4026 	mov.w	r0, r6, asr #16
 801da8e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801da92:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801da96:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801da9a:	f100 80d0 	bmi.w	801dc3e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801da9e:	f10e 3bff 	add.w	fp, lr, #4294967295
 801daa2:	4559      	cmp	r1, fp
 801daa4:	f280 80cb 	bge.w	801dc3e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801daa8:	2800      	cmp	r0, #0
 801daaa:	f2c0 80c8 	blt.w	801dc3e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801daae:	f103 3bff 	add.w	fp, r3, #4294967295
 801dab2:	4558      	cmp	r0, fp
 801dab4:	f280 80c3 	bge.w	801dc3e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801dab8:	fa0f fe8e 	sxth.w	lr, lr
 801dabc:	fb00 110e 	mla	r1, r0, lr, r1
 801dac0:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801dac4:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 801dac8:	8841      	ldrh	r1, [r0, #2]
 801daca:	f1bc 0f00 	cmp.w	ip, #0
 801dace:	d00b      	beq.n	801dae8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 801dad0:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 801dad4:	3b01      	subs	r3, #1
 801dad6:	005b      	lsls	r3, r3, #1
 801dad8:	3302      	adds	r3, #2
 801dada:	eb00 0e03 	add.w	lr, r0, r3
 801dade:	5ac3      	ldrh	r3, [r0, r3]
 801dae0:	9308      	str	r3, [sp, #32]
 801dae2:	f8be 3002 	ldrh.w	r3, [lr, #2]
 801dae6:	9309      	str	r3, [sp, #36]	; 0x24
 801dae8:	ea4f 400b 	mov.w	r0, fp, lsl #16
 801daec:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801daf0:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801daf4:	ea40 000b 	orr.w	r0, r0, fp
 801daf8:	fb12 f30c 	smulbb	r3, r2, ip
 801dafc:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801db00:	10db      	asrs	r3, r3, #3
 801db02:	f1cc 0e10 	rsb	lr, ip, #16
 801db06:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801db0a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801db0e:	ebae 0e02 	sub.w	lr, lr, r2
 801db12:	ea4b 0101 	orr.w	r1, fp, r1
 801db16:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801db1a:	4351      	muls	r1, r2
 801db1c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801db1e:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801db22:	fb0e 1e00 	mla	lr, lr, r0, r1
 801db26:	0410      	lsls	r0, r2, #16
 801db28:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801db2c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801db30:	4310      	orrs	r0, r2
 801db32:	9a08      	ldr	r2, [sp, #32]
 801db34:	9908      	ldr	r1, [sp, #32]
 801db36:	0412      	lsls	r2, r2, #16
 801db38:	fb03 e000 	mla	r0, r3, r0, lr
 801db3c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801db40:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 801db44:	ea42 020e 	orr.w	r2, r2, lr
 801db48:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801db4c:	fb03 0302 	mla	r3, r3, r2, r0
 801db50:	0d5a      	lsrs	r2, r3, #21
 801db52:	095b      	lsrs	r3, r3, #5
 801db54:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801db58:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801db5c:	4313      	orrs	r3, r2
 801db5e:	f8a9 3000 	strh.w	r3, [r9]
 801db62:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801db64:	441c      	add	r4, r3
 801db66:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801db68:	f109 0902 	add.w	r9, r9, #2
 801db6c:	441e      	add	r6, r3
 801db6e:	f10a 3aff 	add.w	sl, sl, #4294967295
 801db72:	e784      	b.n	801da7e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801db74:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801db76:	441c      	add	r4, r3
 801db78:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801db7a:	3d01      	subs	r5, #1
 801db7c:	441e      	add	r6, r3
 801db7e:	3702      	adds	r7, #2
 801db80:	e761      	b.n	801da46 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801db82:	d01d      	beq.n	801dbc0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801db84:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801db86:	1e6b      	subs	r3, r5, #1
 801db88:	fb00 4003 	mla	r0, r0, r3, r4
 801db8c:	1400      	asrs	r0, r0, #16
 801db8e:	f53f af74 	bmi.w	801da7a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801db92:	3901      	subs	r1, #1
 801db94:	4288      	cmp	r0, r1
 801db96:	f6bf af70 	bge.w	801da7a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801db9a:	991c      	ldr	r1, [sp, #112]	; 0x70
 801db9c:	fb01 6303 	mla	r3, r1, r3, r6
 801dba0:	141b      	asrs	r3, r3, #16
 801dba2:	f53f af6a 	bmi.w	801da7a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801dba6:	3a01      	subs	r2, #1
 801dba8:	4293      	cmp	r3, r2
 801dbaa:	f6bf af66 	bge.w	801da7a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801dbae:	46a9      	mov	r9, r5
 801dbb0:	46ba      	mov	sl, r7
 801dbb2:	f1b9 0f00 	cmp.w	r9, #0
 801dbb6:	dc5a      	bgt.n	801dc6e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 801dbb8:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801dbbc:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 801dbc0:	9b07      	ldr	r3, [sp, #28]
 801dbc2:	2b00      	cmp	r3, #0
 801dbc4:	f340 80b8 	ble.w	801dd38 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 801dbc8:	ee30 0a04 	vadd.f32	s0, s0, s8
 801dbcc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801dbd0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801dbd4:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801dbd6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801dbda:	ee31 1a05 	vadd.f32	s2, s2, s10
 801dbde:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801dbe2:	eef0 6a62 	vmov.f32	s13, s5
 801dbe6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801dbea:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801dbee:	ee77 2a62 	vsub.f32	s5, s14, s5
 801dbf2:	ee16 4a90 	vmov	r4, s13
 801dbf6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801dbfa:	eef0 6a43 	vmov.f32	s13, s6
 801dbfe:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801dc02:	ee12 2a90 	vmov	r2, s5
 801dc06:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801dc0a:	fb92 f3f3 	sdiv	r3, r2, r3
 801dc0e:	ee13 2a10 	vmov	r2, s6
 801dc12:	931b      	str	r3, [sp, #108]	; 0x6c
 801dc14:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801dc16:	fb92 f3f3 	sdiv	r3, r2, r3
 801dc1a:	931c      	str	r3, [sp, #112]	; 0x70
 801dc1c:	9b07      	ldr	r3, [sp, #28]
 801dc1e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801dc20:	3b01      	subs	r3, #1
 801dc22:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801dc26:	9307      	str	r3, [sp, #28]
 801dc28:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801dc2a:	ee16 6a90 	vmov	r6, s13
 801dc2e:	bf14      	ite	ne
 801dc30:	461d      	movne	r5, r3
 801dc32:	4615      	moveq	r5, r2
 801dc34:	eeb0 3a67 	vmov.f32	s6, s15
 801dc38:	eef0 2a47 	vmov.f32	s5, s14
 801dc3c:	e6f4      	b.n	801da28 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801dc3e:	f111 0b01 	adds.w	fp, r1, #1
 801dc42:	d48e      	bmi.n	801db62 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801dc44:	45de      	cmp	lr, fp
 801dc46:	db8c      	blt.n	801db62 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801dc48:	f110 0b01 	adds.w	fp, r0, #1
 801dc4c:	d489      	bmi.n	801db62 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801dc4e:	455b      	cmp	r3, fp
 801dc50:	db87      	blt.n	801db62 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801dc52:	b21b      	sxth	r3, r3
 801dc54:	e9cd 1001 	strd	r1, r0, [sp, #4]
 801dc58:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 801dc5c:	9300      	str	r3, [sp, #0]
 801dc5e:	4642      	mov	r2, r8
 801dc60:	fa0f f38e 	sxth.w	r3, lr
 801dc64:	4649      	mov	r1, r9
 801dc66:	980d      	ldr	r0, [sp, #52]	; 0x34
 801dc68:	f7ff fe4d 	bl	801d906 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 801dc6c:	e779      	b.n	801db62 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801dc6e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801dc70:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801dc74:	1420      	asrs	r0, r4, #16
 801dc76:	1431      	asrs	r1, r6, #16
 801dc78:	fb03 0101 	mla	r1, r3, r1, r0
 801dc7c:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801dc80:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801dc84:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 801dc88:	8841      	ldrh	r1, [r0, #2]
 801dc8a:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801dc8e:	f1be 0f00 	cmp.w	lr, #0
 801dc92:	d00b      	beq.n	801dcac <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 801dc94:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 801dc98:	3b01      	subs	r3, #1
 801dc9a:	005b      	lsls	r3, r3, #1
 801dc9c:	3302      	adds	r3, #2
 801dc9e:	eb00 0b03 	add.w	fp, r0, r3
 801dca2:	5ac3      	ldrh	r3, [r0, r3]
 801dca4:	930a      	str	r3, [sp, #40]	; 0x28
 801dca6:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801dcaa:	930b      	str	r3, [sp, #44]	; 0x2c
 801dcac:	ea4f 400c 	mov.w	r0, ip, lsl #16
 801dcb0:	fb12 f30e 	smulbb	r3, r2, lr
 801dcb4:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801dcb8:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801dcbc:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801dcc0:	10db      	asrs	r3, r3, #3
 801dcc2:	ea40 000c 	orr.w	r0, r0, ip
 801dcc6:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801dcca:	f1ce 0c10 	rsb	ip, lr, #16
 801dcce:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801dcd2:	ebac 0c02 	sub.w	ip, ip, r2
 801dcd6:	ea4b 0101 	orr.w	r1, fp, r1
 801dcda:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801dcde:	4351      	muls	r1, r2
 801dce0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801dce2:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801dce6:	fb0c 1c00 	mla	ip, ip, r0, r1
 801dcea:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801dcee:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 801dcf2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801dcf4:	990a      	ldr	r1, [sp, #40]	; 0x28
 801dcf6:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801dcfa:	0412      	lsls	r2, r2, #16
 801dcfc:	ea4b 0000 	orr.w	r0, fp, r0
 801dd00:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801dd04:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 801dd08:	fb03 c000 	mla	r0, r3, r0, ip
 801dd0c:	ea42 0b0b 	orr.w	fp, r2, fp
 801dd10:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801dd14:	fb03 000b 	mla	r0, r3, fp, r0
 801dd18:	0d43      	lsrs	r3, r0, #21
 801dd1a:	0940      	lsrs	r0, r0, #5
 801dd1c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801dd20:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801dd24:	4318      	orrs	r0, r3
 801dd26:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801dd28:	f82a 0b02 	strh.w	r0, [sl], #2
 801dd2c:	441c      	add	r4, r3
 801dd2e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801dd30:	f109 39ff 	add.w	r9, r9, #4294967295
 801dd34:	441e      	add	r6, r3
 801dd36:	e73c      	b.n	801dbb2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 801dd38:	b00f      	add	sp, #60	; 0x3c
 801dd3a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801dd3e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 801dd3e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dd42:	b085      	sub	sp, #20
 801dd44:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 801dd48:	9102      	str	r1, [sp, #8]
 801dd4a:	2c00      	cmp	r4, #0
 801dd4c:	fb04 7103 	mla	r1, r4, r3, r7
 801dd50:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 801dd54:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801dd58:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 801dd5c:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801dd60:	f2c0 811b 	blt.w	801df9a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801dd64:	45a6      	cmp	lr, r4
 801dd66:	f340 8118 	ble.w	801df9a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801dd6a:	2f00      	cmp	r7, #0
 801dd6c:	f2c0 8113 	blt.w	801df96 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801dd70:	42bb      	cmp	r3, r7
 801dd72:	f340 8110 	ble.w	801df96 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801dd76:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801dd7a:	1c7a      	adds	r2, r7, #1
 801dd7c:	f100 8110 	bmi.w	801dfa0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801dd80:	4293      	cmp	r3, r2
 801dd82:	f340 810d 	ble.w	801dfa0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801dd86:	2e00      	cmp	r6, #0
 801dd88:	f000 810c 	beq.w	801dfa4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 801dd8c:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801dd90:	3401      	adds	r4, #1
 801dd92:	f100 810b 	bmi.w	801dfac <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801dd96:	45a6      	cmp	lr, r4
 801dd98:	f340 8108 	ble.w	801dfac <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801dd9c:	2800      	cmp	r0, #0
 801dd9e:	f000 8108 	beq.w	801dfb2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 801dda2:	2f00      	cmp	r7, #0
 801dda4:	f2c0 8100 	blt.w	801dfa8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801dda8:	42bb      	cmp	r3, r7
 801ddaa:	f340 80fd 	ble.w	801dfa8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801ddae:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801ddb2:	3701      	adds	r7, #1
 801ddb4:	f100 8100 	bmi.w	801dfb8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801ddb8:	42bb      	cmp	r3, r7
 801ddba:	f340 80fd 	ble.w	801dfb8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801ddbe:	2e00      	cmp	r6, #0
 801ddc0:	f000 80fc 	beq.w	801dfbc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 801ddc4:	3301      	adds	r3, #1
 801ddc6:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 801ddca:	b2b6      	uxth	r6, r6
 801ddcc:	b280      	uxth	r0, r0
 801ddce:	fb00 fe06 	mul.w	lr, r0, r6
 801ddd2:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801ddd6:	0136      	lsls	r6, r6, #4
 801ddd8:	eba6 070e 	sub.w	r7, r6, lr
 801dddc:	b280      	uxth	r0, r0
 801ddde:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801dde2:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801dde6:	b2bf      	uxth	r7, r7
 801dde8:	1a1b      	subs	r3, r3, r0
 801ddea:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801ddee:	b29b      	uxth	r3, r3
 801ddf0:	fb0a f607 	mul.w	r6, sl, r7
 801ddf4:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801ddf8:	fb0b 6603 	mla	r6, fp, r3, r6
 801ddfc:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801de00:	fb00 6609 	mla	r6, r0, r9, r6
 801de04:	fb0e 6608 	mla	r6, lr, r8, r6
 801de08:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801de0c:	9600      	str	r6, [sp, #0]
 801de0e:	2e00      	cmp	r6, #0
 801de10:	f000 80be 	beq.w	801df90 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 801de14:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801de18:	fb0b fc0c 	mul.w	ip, fp, ip
 801de1c:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801de20:	fb0b f505 	mul.w	r5, fp, r5
 801de24:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801de28:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801de2c:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801de30:	44dc      	add	ip, fp
 801de32:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801de36:	9501      	str	r5, [sp, #4]
 801de38:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801de3c:	9503      	str	r5, [sp, #12]
 801de3e:	9d01      	ldr	r5, [sp, #4]
 801de40:	9e02      	ldr	r6, [sp, #8]
 801de42:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801de46:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801de4a:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801de4e:	fb0a fc0c 	mul.w	ip, sl, ip
 801de52:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801de56:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801de5a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801de5e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801de62:	4465      	add	r5, ip
 801de64:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801de68:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801de6c:	fb09 fc0c 	mul.w	ip, r9, ip
 801de70:	fb09 f904 	mul.w	r9, r9, r4
 801de74:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801de78:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801de7c:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801de80:	fb08 f404 	mul.w	r4, r8, r4
 801de84:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801de88:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801de8c:	fb08 f802 	mul.w	r8, r8, r2
 801de90:	fb0a fa01 	mul.w	sl, sl, r1
 801de94:	0a22      	lsrs	r2, r4, #8
 801de96:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801de9a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801de9e:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801dea2:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801dea6:	4414      	add	r4, r2
 801dea8:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801deac:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801deb0:	0a2d      	lsrs	r5, r5, #8
 801deb2:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801deb6:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801deba:	9a03      	ldr	r2, [sp, #12]
 801debc:	8836      	ldrh	r6, [r6, #0]
 801debe:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801dec2:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801dec6:	437d      	muls	r5, r7
 801dec8:	4461      	add	r1, ip
 801deca:	0a24      	lsrs	r4, r4, #8
 801decc:	fb02 5503 	mla	r5, r2, r3, r5
 801ded0:	0a09      	lsrs	r1, r1, #8
 801ded2:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801ded6:	fb04 540e 	mla	r4, r4, lr, r5
 801deda:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801dede:	fb01 4100 	mla	r1, r1, r0, r4
 801dee2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801dee6:	0a09      	lsrs	r1, r1, #8
 801dee8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801deec:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801def0:	fb07 f70a 	mul.w	r7, r7, sl
 801def4:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801def8:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801defc:	fb03 7101 	mla	r1, r3, r1, r7
 801df00:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801df04:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801df08:	fb0e 1e08 	mla	lr, lr, r8, r1
 801df0c:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801df10:	fb00 e101 	mla	r1, r0, r1, lr
 801df14:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 801df18:	9a00      	ldr	r2, [sp, #0]
 801df1a:	b287      	uxth	r7, r0
 801df1c:	437a      	muls	r2, r7
 801df1e:	0a09      	lsrs	r1, r1, #8
 801df20:	1c53      	adds	r3, r2, #1
 801df22:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801df26:	4321      	orrs	r1, r4
 801df28:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801df2c:	1235      	asrs	r5, r6, #8
 801df2e:	0c0a      	lsrs	r2, r1, #16
 801df30:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801df34:	b2db      	uxtb	r3, r3
 801df36:	fb12 f207 	smulbb	r2, r2, r7
 801df3a:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801df3e:	fb05 2503 	mla	r5, r5, r3, r2
 801df42:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801df46:	10f2      	asrs	r2, r6, #3
 801df48:	b2c8      	uxtb	r0, r1
 801df4a:	00f6      	lsls	r6, r6, #3
 801df4c:	fb14 f407 	smulbb	r4, r4, r7
 801df50:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801df54:	b2f6      	uxtb	r6, r6
 801df56:	fb10 f007 	smulbb	r0, r0, r7
 801df5a:	fb02 4203 	mla	r2, r2, r3, r4
 801df5e:	b2ad      	uxth	r5, r5
 801df60:	fb06 0303 	mla	r3, r6, r3, r0
 801df64:	b299      	uxth	r1, r3
 801df66:	b294      	uxth	r4, r2
 801df68:	1c6b      	adds	r3, r5, #1
 801df6a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801df6e:	1c62      	adds	r2, r4, #1
 801df70:	1c4b      	adds	r3, r1, #1
 801df72:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801df76:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801df7a:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801df7e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801df82:	0952      	lsrs	r2, r2, #5
 801df84:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801df88:	432b      	orrs	r3, r5
 801df8a:	4313      	orrs	r3, r2
 801df8c:	9a02      	ldr	r2, [sp, #8]
 801df8e:	8013      	strh	r3, [r2, #0]
 801df90:	b005      	add	sp, #20
 801df92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801df96:	2500      	movs	r5, #0
 801df98:	e6ef      	b.n	801dd7a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 801df9a:	2100      	movs	r1, #0
 801df9c:	460d      	mov	r5, r1
 801df9e:	e6f7      	b.n	801dd90 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801dfa0:	2100      	movs	r1, #0
 801dfa2:	e6f5      	b.n	801dd90 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801dfa4:	4631      	mov	r1, r6
 801dfa6:	e6f3      	b.n	801dd90 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801dfa8:	2400      	movs	r4, #0
 801dfaa:	e702      	b.n	801ddb2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 801dfac:	2200      	movs	r2, #0
 801dfae:	4614      	mov	r4, r2
 801dfb0:	e70b      	b.n	801ddca <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801dfb2:	4602      	mov	r2, r0
 801dfb4:	4604      	mov	r4, r0
 801dfb6:	e708      	b.n	801ddca <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801dfb8:	2200      	movs	r2, #0
 801dfba:	e706      	b.n	801ddca <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801dfbc:	4632      	mov	r2, r6
 801dfbe:	e704      	b.n	801ddca <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

0801dfc0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801dfc0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dfc4:	b09d      	sub	sp, #116	; 0x74
 801dfc6:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 801dfca:	9219      	str	r2, [sp, #100]	; 0x64
 801dfcc:	9307      	str	r3, [sp, #28]
 801dfce:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801dfd0:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 801dfd4:	931a      	str	r3, [sp, #104]	; 0x68
 801dfd6:	9117      	str	r1, [sp, #92]	; 0x5c
 801dfd8:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 801dfdc:	901b      	str	r0, [sp, #108]	; 0x6c
 801dfde:	6850      	ldr	r0, [r2, #4]
 801dfe0:	6812      	ldr	r2, [r2, #0]
 801dfe2:	fb00 1303 	mla	r3, r0, r3, r1
 801dfe6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801dfea:	930a      	str	r3, [sp, #40]	; 0x28
 801dfec:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801dfee:	681b      	ldr	r3, [r3, #0]
 801dff0:	9310      	str	r3, [sp, #64]	; 0x40
 801dff2:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801dff6:	930b      	str	r3, [sp, #44]	; 0x2c
 801dff8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801dffa:	2b00      	cmp	r3, #0
 801dffc:	dc03      	bgt.n	801e006 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801dffe:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801e000:	2b00      	cmp	r3, #0
 801e002:	f340 8375 	ble.w	801e6f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801e006:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801e008:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e00c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e010:	1e48      	subs	r0, r1, #1
 801e012:	1e57      	subs	r7, r2, #1
 801e014:	9b07      	ldr	r3, [sp, #28]
 801e016:	2b00      	cmp	r3, #0
 801e018:	f340 818e 	ble.w	801e338 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801e01c:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801e020:	ea4f 4326 	mov.w	r3, r6, asr #16
 801e024:	d406      	bmi.n	801e034 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801e026:	4584      	cmp	ip, r0
 801e028:	da04      	bge.n	801e034 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801e02a:	2b00      	cmp	r3, #0
 801e02c:	db02      	blt.n	801e034 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801e02e:	42bb      	cmp	r3, r7
 801e030:	f2c0 8183 	blt.w	801e33a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801e034:	f11c 0c01 	adds.w	ip, ip, #1
 801e038:	f100 8173 	bmi.w	801e322 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801e03c:	4561      	cmp	r1, ip
 801e03e:	f2c0 8170 	blt.w	801e322 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801e042:	3301      	adds	r3, #1
 801e044:	f100 816d 	bmi.w	801e322 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801e048:	429a      	cmp	r2, r3
 801e04a:	f2c0 816a 	blt.w	801e322 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801e04e:	9b07      	ldr	r3, [sp, #28]
 801e050:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801e052:	9318      	str	r3, [sp, #96]	; 0x60
 801e054:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801e056:	2b00      	cmp	r3, #0
 801e058:	f340 818c 	ble.w	801e374 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 801e05c:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 801e05e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801e060:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801e064:	689b      	ldr	r3, [r3, #8]
 801e066:	1422      	asrs	r2, r4, #16
 801e068:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801e06c:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801e070:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801e074:	f100 81cd 	bmi.w	801e412 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801e078:	f103 38ff 	add.w	r8, r3, #4294967295
 801e07c:	4542      	cmp	r2, r8
 801e07e:	f280 81c8 	bge.w	801e412 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801e082:	f1bc 0f00 	cmp.w	ip, #0
 801e086:	f2c0 81c4 	blt.w	801e412 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801e08a:	f10e 38ff 	add.w	r8, lr, #4294967295
 801e08e:	45c4      	cmp	ip, r8
 801e090:	f280 81bf 	bge.w	801e412 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801e094:	b21b      	sxth	r3, r3
 801e096:	fb0c 2203 	mla	r2, ip, r3, r2
 801e09a:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801e09c:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801e0a0:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801e0a4:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801e0a8:	2800      	cmp	r0, #0
 801e0aa:	f000 81a9 	beq.w	801e400 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 801e0ae:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801e0b2:	950c      	str	r5, [sp, #48]	; 0x30
 801e0b4:	0e2d      	lsrs	r5, r5, #24
 801e0b6:	9513      	str	r5, [sp, #76]	; 0x4c
 801e0b8:	b181      	cbz	r1, 801e0dc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801e0ba:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801e0be:	3b01      	subs	r3, #1
 801e0c0:	009b      	lsls	r3, r3, #2
 801e0c2:	3304      	adds	r3, #4
 801e0c4:	eb08 0c03 	add.w	ip, r8, r3
 801e0c8:	f858 3003 	ldr.w	r3, [r8, r3]
 801e0cc:	9308      	str	r3, [sp, #32]
 801e0ce:	0e1b      	lsrs	r3, r3, #24
 801e0d0:	9311      	str	r3, [sp, #68]	; 0x44
 801e0d2:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801e0d6:	930d      	str	r3, [sp, #52]	; 0x34
 801e0d8:	0e1b      	lsrs	r3, r3, #24
 801e0da:	9314      	str	r3, [sp, #80]	; 0x50
 801e0dc:	b280      	uxth	r0, r0
 801e0de:	b289      	uxth	r1, r1
 801e0e0:	fb00 f901 	mul.w	r9, r0, r1
 801e0e4:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801e0e8:	0100      	lsls	r0, r0, #4
 801e0ea:	eba0 0809 	sub.w	r8, r0, r9
 801e0ee:	b289      	uxth	r1, r1
 801e0f0:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801e0f4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801e0f6:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801e0f8:	fa1f f888 	uxth.w	r8, r8
 801e0fc:	1a5b      	subs	r3, r3, r1
 801e0fe:	b29b      	uxth	r3, r3
 801e100:	fb08 f000 	mul.w	r0, r8, r0
 801e104:	fb03 000e 	mla	r0, r3, lr, r0
 801e108:	fb01 0005 	mla	r0, r1, r5, r0
 801e10c:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801e10e:	fb09 0005 	mla	r0, r9, r5, r0
 801e112:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801e116:	2800      	cmp	r0, #0
 801e118:	f000 80fa 	beq.w	801e310 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e11c:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801e120:	d01b      	beq.n	801e15a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801e122:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 801e126:	fb0e fa0a 	mul.w	sl, lr, sl
 801e12a:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801e12e:	fb0e fe02 	mul.w	lr, lr, r2
 801e132:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801e136:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801e13a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801e13e:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801e142:	4452      	add	r2, sl
 801e144:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801e148:	0a12      	lsrs	r2, r2, #8
 801e14a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e14e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801e152:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801e156:	ea42 020c 	orr.w	r2, r2, ip
 801e15a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801e15c:	2dff      	cmp	r5, #255	; 0xff
 801e15e:	d021      	beq.n	801e1a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801e160:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801e162:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801e166:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801e168:	fb05 fb0b 	mul.w	fp, r5, fp
 801e16c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801e16e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e172:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801e174:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e178:	fb05 fa0a 	mul.w	sl, r5, sl
 801e17c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e180:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801e184:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801e188:	44de      	add	lr, fp
 801e18a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e18e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e192:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e196:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e19a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e19e:	ea4e 050a 	orr.w	r5, lr, sl
 801e1a2:	950c      	str	r5, [sp, #48]	; 0x30
 801e1a4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801e1a6:	2dff      	cmp	r5, #255	; 0xff
 801e1a8:	d021      	beq.n	801e1ee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 801e1aa:	9d08      	ldr	r5, [sp, #32]
 801e1ac:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801e1b0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801e1b2:	fb05 fb0b 	mul.w	fp, r5, fp
 801e1b6:	9d08      	ldr	r5, [sp, #32]
 801e1b8:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e1bc:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801e1be:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e1c2:	fb05 fa0a 	mul.w	sl, r5, sl
 801e1c6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e1ca:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801e1ce:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801e1d2:	44de      	add	lr, fp
 801e1d4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e1d8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e1dc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e1e0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e1e4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e1e8:	ea4e 050a 	orr.w	r5, lr, sl
 801e1ec:	9508      	str	r5, [sp, #32]
 801e1ee:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801e1f0:	2dff      	cmp	r5, #255	; 0xff
 801e1f2:	d021      	beq.n	801e238 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 801e1f4:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801e1f6:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801e1fa:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801e1fc:	fb05 fb0b 	mul.w	fp, r5, fp
 801e200:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801e202:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e206:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801e208:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e20c:	fb05 fa0a 	mul.w	sl, r5, sl
 801e210:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e214:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801e218:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801e21c:	44de      	add	lr, fp
 801e21e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e222:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e226:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e22a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e22e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e232:	ea4e 050a 	orr.w	r5, lr, sl
 801e236:	950d      	str	r5, [sp, #52]	; 0x34
 801e238:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801e23a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801e23e:	9d08      	ldr	r5, [sp, #32]
 801e240:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 801e244:	fb08 fc0c 	mul.w	ip, r8, ip
 801e248:	fb03 cc0e 	mla	ip, r3, lr, ip
 801e24c:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801e250:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801e252:	fb01 cc0e 	mla	ip, r1, lr, ip
 801e256:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801e25a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801e25c:	fb09 cc0e 	mla	ip, r9, lr, ip
 801e260:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801e264:	fb08 f80e 	mul.w	r8, r8, lr
 801e268:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801e26c:	fb03 8202 	mla	r2, r3, r2, r8
 801e270:	9b08      	ldr	r3, [sp, #32]
 801e272:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801e274:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 801e278:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e27a:	fb01 220a 	mla	r2, r1, sl, r2
 801e27e:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 801e282:	fb09 2901 	mla	r9, r9, r1, r2
 801e286:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801e288:	883b      	ldrh	r3, [r7, #0]
 801e28a:	4342      	muls	r2, r0
 801e28c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e290:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801e294:	1c50      	adds	r0, r2, #1
 801e296:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e29a:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801e29e:	ea4c 0c09 	orr.w	ip, ip, r9
 801e2a2:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801e2a6:	1219      	asrs	r1, r3, #8
 801e2a8:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801e2ac:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801e2b0:	b2c0      	uxtb	r0, r0
 801e2b2:	fb12 f205 	smulbb	r2, r2, r5
 801e2b6:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801e2ba:	fb01 2100 	mla	r1, r1, r0, r2
 801e2be:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801e2c2:	10da      	asrs	r2, r3, #3
 801e2c4:	fa5f fc8c 	uxtb.w	ip, ip
 801e2c8:	00db      	lsls	r3, r3, #3
 801e2ca:	fb1c fc05 	smulbb	ip, ip, r5
 801e2ce:	b2db      	uxtb	r3, r3
 801e2d0:	b289      	uxth	r1, r1
 801e2d2:	fb03 c300 	mla	r3, r3, r0, ip
 801e2d6:	fa1f fc83 	uxth.w	ip, r3
 801e2da:	1c4b      	adds	r3, r1, #1
 801e2dc:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801e2e0:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801e2e4:	fb1e fe05 	smulbb	lr, lr, r5
 801e2e8:	f10c 0301 	add.w	r3, ip, #1
 801e2ec:	fb02 e200 	mla	r2, r2, r0, lr
 801e2f0:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801e2f4:	b292      	uxth	r2, r2
 801e2f6:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801e2fa:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e2fe:	430b      	orrs	r3, r1
 801e300:	1c51      	adds	r1, r2, #1
 801e302:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801e306:	0952      	lsrs	r2, r2, #5
 801e308:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e30c:	4313      	orrs	r3, r2
 801e30e:	803b      	strh	r3, [r7, #0]
 801e310:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801e312:	441c      	add	r4, r3
 801e314:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e316:	441e      	add	r6, r3
 801e318:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801e31a:	3b01      	subs	r3, #1
 801e31c:	3702      	adds	r7, #2
 801e31e:	9318      	str	r3, [sp, #96]	; 0x60
 801e320:	e698      	b.n	801e054 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801e322:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801e324:	441c      	add	r4, r3
 801e326:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e328:	441e      	add	r6, r3
 801e32a:	9b07      	ldr	r3, [sp, #28]
 801e32c:	3b01      	subs	r3, #1
 801e32e:	9307      	str	r3, [sp, #28]
 801e330:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e332:	3302      	adds	r3, #2
 801e334:	930a      	str	r3, [sp, #40]	; 0x28
 801e336:	e66d      	b.n	801e014 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801e338:	d023      	beq.n	801e382 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801e33a:	9b07      	ldr	r3, [sp, #28]
 801e33c:	9829      	ldr	r0, [sp, #164]	; 0xa4
 801e33e:	3b01      	subs	r3, #1
 801e340:	fb00 4003 	mla	r0, r0, r3, r4
 801e344:	1400      	asrs	r0, r0, #16
 801e346:	f53f ae82 	bmi.w	801e04e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801e34a:	3901      	subs	r1, #1
 801e34c:	4288      	cmp	r0, r1
 801e34e:	f6bf ae7e 	bge.w	801e04e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801e352:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801e354:	fb01 6303 	mla	r3, r1, r3, r6
 801e358:	141b      	asrs	r3, r3, #16
 801e35a:	f53f ae78 	bmi.w	801e04e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801e35e:	3a01      	subs	r2, #1
 801e360:	4293      	cmp	r3, r2
 801e362:	f6bf ae74 	bge.w	801e04e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801e366:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801e36a:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 801e36e:	f1bb 0f00 	cmp.w	fp, #0
 801e372:	dc6c      	bgt.n	801e44e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801e374:	9b07      	ldr	r3, [sp, #28]
 801e376:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801e37a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e37c:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801e380:	930a      	str	r3, [sp, #40]	; 0x28
 801e382:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801e384:	2b00      	cmp	r3, #0
 801e386:	f340 81b3 	ble.w	801e6f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801e38a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e38e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801e392:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801e396:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801e398:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e39c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e3a0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e3a4:	eef0 6a62 	vmov.f32	s13, s5
 801e3a8:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e3ac:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e3b0:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e3b4:	ee16 4a90 	vmov	r4, s13
 801e3b8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e3bc:	eef0 6a43 	vmov.f32	s13, s6
 801e3c0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e3c4:	ee12 2a90 	vmov	r2, s5
 801e3c8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e3cc:	fb92 f3f3 	sdiv	r3, r2, r3
 801e3d0:	ee13 2a10 	vmov	r2, s6
 801e3d4:	9329      	str	r3, [sp, #164]	; 0xa4
 801e3d6:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801e3d8:	fb92 f3f3 	sdiv	r3, r2, r3
 801e3dc:	932a      	str	r3, [sp, #168]	; 0xa8
 801e3de:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801e3e0:	9a19      	ldr	r2, [sp, #100]	; 0x64
 801e3e2:	3b01      	subs	r3, #1
 801e3e4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e3e8:	9317      	str	r3, [sp, #92]	; 0x5c
 801e3ea:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801e3ec:	bf08      	it	eq
 801e3ee:	4613      	moveq	r3, r2
 801e3f0:	ee16 6a90 	vmov	r6, s13
 801e3f4:	9307      	str	r3, [sp, #28]
 801e3f6:	eeb0 3a67 	vmov.f32	s6, s15
 801e3fa:	eef0 2a47 	vmov.f32	s5, s14
 801e3fe:	e5fb      	b.n	801dff8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801e400:	2900      	cmp	r1, #0
 801e402:	f43f ae6b 	beq.w	801e0dc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801e406:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801e40a:	9308      	str	r3, [sp, #32]
 801e40c:	0e1b      	lsrs	r3, r3, #24
 801e40e:	9311      	str	r3, [sp, #68]	; 0x44
 801e410:	e664      	b.n	801e0dc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801e412:	f112 0801 	adds.w	r8, r2, #1
 801e416:	f53f af7b 	bmi.w	801e310 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e41a:	4543      	cmp	r3, r8
 801e41c:	f6ff af78 	blt.w	801e310 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e420:	f11c 0801 	adds.w	r8, ip, #1
 801e424:	f53f af74 	bmi.w	801e310 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e428:	45c6      	cmp	lr, r8
 801e42a:	f6ff af71 	blt.w	801e310 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e42e:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 801e430:	9201      	str	r2, [sp, #4]
 801e432:	fa0f f28e 	sxth.w	r2, lr
 801e436:	e9cd 1504 	strd	r1, r5, [sp, #16]
 801e43a:	e9cd c002 	strd	ip, r0, [sp, #8]
 801e43e:	9200      	str	r2, [sp, #0]
 801e440:	b21b      	sxth	r3, r3
 801e442:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801e444:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801e446:	4639      	mov	r1, r7
 801e448:	f7ff fc79 	bl	801dd3e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 801e44c:	e760      	b.n	801e310 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e44e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801e450:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801e452:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e456:	1427      	asrs	r7, r4, #16
 801e458:	1433      	asrs	r3, r6, #16
 801e45a:	fb01 7303 	mla	r3, r1, r3, r7
 801e45e:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 801e462:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801e466:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801e46a:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801e46e:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801e472:	2a00      	cmp	r2, #0
 801e474:	f000 8133 	beq.w	801e6de <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 801e478:	687d      	ldr	r5, [r7, #4]
 801e47a:	950e      	str	r5, [sp, #56]	; 0x38
 801e47c:	0e2d      	lsrs	r5, r5, #24
 801e47e:	9515      	str	r5, [sp, #84]	; 0x54
 801e480:	b178      	cbz	r0, 801e4a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801e482:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 801e486:	3901      	subs	r1, #1
 801e488:	0089      	lsls	r1, r1, #2
 801e48a:	3104      	adds	r1, #4
 801e48c:	eb07 0e01 	add.w	lr, r7, r1
 801e490:	5879      	ldr	r1, [r7, r1]
 801e492:	9109      	str	r1, [sp, #36]	; 0x24
 801e494:	0e09      	lsrs	r1, r1, #24
 801e496:	9112      	str	r1, [sp, #72]	; 0x48
 801e498:	f8de 1004 	ldr.w	r1, [lr, #4]
 801e49c:	910f      	str	r1, [sp, #60]	; 0x3c
 801e49e:	0e09      	lsrs	r1, r1, #24
 801e4a0:	9116      	str	r1, [sp, #88]	; 0x58
 801e4a2:	b292      	uxth	r2, r2
 801e4a4:	b280      	uxth	r0, r0
 801e4a6:	fb02 f800 	mul.w	r8, r2, r0
 801e4aa:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801e4ae:	0112      	lsls	r2, r2, #4
 801e4b0:	eba2 0e08 	sub.w	lr, r2, r8
 801e4b4:	b280      	uxth	r0, r0
 801e4b6:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801e4ba:	9915      	ldr	r1, [sp, #84]	; 0x54
 801e4bc:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e4be:	fa1f fe8e 	uxth.w	lr, lr
 801e4c2:	1a12      	subs	r2, r2, r0
 801e4c4:	b292      	uxth	r2, r2
 801e4c6:	fb0e f101 	mul.w	r1, lr, r1
 801e4ca:	fb02 110c 	mla	r1, r2, ip, r1
 801e4ce:	fb00 1105 	mla	r1, r0, r5, r1
 801e4d2:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801e4d4:	fb08 1105 	mla	r1, r8, r5, r1
 801e4d8:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801e4dc:	2900      	cmp	r1, #0
 801e4de:	f000 80f5 	beq.w	801e6cc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 801e4e2:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801e4e6:	d019      	beq.n	801e51c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 801e4e8:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801e4ec:	fb0c fa0a 	mul.w	sl, ip, sl
 801e4f0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801e4f4:	fb0c fc03 	mul.w	ip, ip, r3
 801e4f8:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801e4fc:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801e500:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801e504:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801e508:	4453      	add	r3, sl
 801e50a:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801e50e:	0a1b      	lsrs	r3, r3, #8
 801e510:	0a3f      	lsrs	r7, r7, #8
 801e512:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801e516:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801e51a:	433b      	orrs	r3, r7
 801e51c:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801e51e:	2dff      	cmp	r5, #255	; 0xff
 801e520:	d020      	beq.n	801e564 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 801e522:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801e524:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801e528:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801e52a:	436f      	muls	r7, r5
 801e52c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801e52e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e532:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801e534:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e538:	fb05 fa0a 	mul.w	sl, r5, sl
 801e53c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801e540:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e544:	44bc      	add	ip, r7
 801e546:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801e54a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801e54e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e552:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e556:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e55a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e55e:	ea4c 050a 	orr.w	r5, ip, sl
 801e562:	950e      	str	r5, [sp, #56]	; 0x38
 801e564:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e566:	2dff      	cmp	r5, #255	; 0xff
 801e568:	d020      	beq.n	801e5ac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 801e56a:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801e56c:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801e570:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e572:	436f      	muls	r7, r5
 801e574:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801e576:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e57a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e57c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e580:	fb05 fa0a 	mul.w	sl, r5, sl
 801e584:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801e588:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e58c:	44bc      	add	ip, r7
 801e58e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801e592:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801e596:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e59a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e59e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e5a2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e5a6:	ea4c 050a 	orr.w	r5, ip, sl
 801e5aa:	9509      	str	r5, [sp, #36]	; 0x24
 801e5ac:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801e5ae:	2dff      	cmp	r5, #255	; 0xff
 801e5b0:	d020      	beq.n	801e5f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 801e5b2:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801e5b4:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801e5b8:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801e5ba:	436f      	muls	r7, r5
 801e5bc:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801e5be:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e5c2:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801e5c4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e5c8:	fb05 fa0a 	mul.w	sl, r5, sl
 801e5cc:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801e5d0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e5d4:	44bc      	add	ip, r7
 801e5d6:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801e5da:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801e5de:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e5e2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e5e6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e5ea:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e5ee:	ea4c 050a 	orr.w	r5, ip, sl
 801e5f2:	950f      	str	r5, [sp, #60]	; 0x3c
 801e5f4:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801e5f6:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801e5fa:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801e5fc:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801e600:	fb0e f707 	mul.w	r7, lr, r7
 801e604:	fb02 770c 	mla	r7, r2, ip, r7
 801e608:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801e60c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801e60e:	fb00 770c 	mla	r7, r0, ip, r7
 801e612:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801e616:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801e618:	fb08 770c 	mla	r7, r8, ip, r7
 801e61c:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801e620:	fb0e fe0c 	mul.w	lr, lr, ip
 801e624:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801e628:	fb02 e303 	mla	r3, r2, r3, lr
 801e62c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801e62e:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801e630:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801e634:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801e636:	fb00 330a 	mla	r3, r0, sl, r3
 801e63a:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801e63e:	fb08 3c0c 	mla	ip, r8, ip, r3
 801e642:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e644:	f8b9 0000 	ldrh.w	r0, [r9]
 801e648:	4359      	muls	r1, r3
 801e64a:	0a3f      	lsrs	r7, r7, #8
 801e64c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e650:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801e654:	1c4b      	adds	r3, r1, #1
 801e656:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801e65a:	ea47 070c 	orr.w	r7, r7, ip
 801e65e:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801e662:	1202      	asrs	r2, r0, #8
 801e664:	0c3b      	lsrs	r3, r7, #16
 801e666:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801e66a:	b2c9      	uxtb	r1, r1
 801e66c:	fb13 f305 	smulbb	r3, r3, r5
 801e670:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801e674:	fb02 3201 	mla	r2, r2, r1, r3
 801e678:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801e67c:	10c3      	asrs	r3, r0, #3
 801e67e:	b2ff      	uxtb	r7, r7
 801e680:	00c0      	lsls	r0, r0, #3
 801e682:	b2c0      	uxtb	r0, r0
 801e684:	fb17 f705 	smulbb	r7, r7, r5
 801e688:	fb00 7001 	mla	r0, r0, r1, r7
 801e68c:	b292      	uxth	r2, r2
 801e68e:	fb1c fc05 	smulbb	ip, ip, r5
 801e692:	b280      	uxth	r0, r0
 801e694:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801e698:	fb03 c301 	mla	r3, r3, r1, ip
 801e69c:	1c51      	adds	r1, r2, #1
 801e69e:	f100 0c01 	add.w	ip, r0, #1
 801e6a2:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801e6a6:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 801e6aa:	b29b      	uxth	r3, r3
 801e6ac:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801e6b0:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801e6b4:	ea4c 0202 	orr.w	r2, ip, r2
 801e6b8:	f103 0c01 	add.w	ip, r3, #1
 801e6bc:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801e6c0:	095b      	lsrs	r3, r3, #5
 801e6c2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e6c6:	431a      	orrs	r2, r3
 801e6c8:	f8a9 2000 	strh.w	r2, [r9]
 801e6cc:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801e6ce:	441c      	add	r4, r3
 801e6d0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e6d2:	f109 0902 	add.w	r9, r9, #2
 801e6d6:	441e      	add	r6, r3
 801e6d8:	f10b 3bff 	add.w	fp, fp, #4294967295
 801e6dc:	e647      	b.n	801e36e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 801e6de:	2800      	cmp	r0, #0
 801e6e0:	f43f aedf 	beq.w	801e4a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801e6e4:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 801e6e8:	9109      	str	r1, [sp, #36]	; 0x24
 801e6ea:	0e09      	lsrs	r1, r1, #24
 801e6ec:	9112      	str	r1, [sp, #72]	; 0x48
 801e6ee:	e6d8      	b.n	801e4a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801e6f0:	b01d      	add	sp, #116	; 0x74
 801e6f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801e6f6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 801e6f6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e6fa:	b085      	sub	sp, #20
 801e6fc:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 801e700:	9102      	str	r1, [sp, #8]
 801e702:	2c00      	cmp	r4, #0
 801e704:	fb04 7103 	mla	r1, r4, r3, r7
 801e708:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 801e70c:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801e710:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 801e714:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801e718:	f2c0 810c 	blt.w	801e934 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801e71c:	45a6      	cmp	lr, r4
 801e71e:	f340 8109 	ble.w	801e934 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801e722:	2f00      	cmp	r7, #0
 801e724:	f2c0 8104 	blt.w	801e930 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801e728:	42bb      	cmp	r3, r7
 801e72a:	f340 8101 	ble.w	801e930 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801e72e:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801e732:	1c7a      	adds	r2, r7, #1
 801e734:	f100 8101 	bmi.w	801e93a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801e738:	4293      	cmp	r3, r2
 801e73a:	f340 80fe 	ble.w	801e93a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801e73e:	2e00      	cmp	r6, #0
 801e740:	f000 80fd 	beq.w	801e93e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 801e744:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801e748:	3401      	adds	r4, #1
 801e74a:	f100 80fc 	bmi.w	801e946 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801e74e:	45a6      	cmp	lr, r4
 801e750:	f340 80f9 	ble.w	801e946 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801e754:	2800      	cmp	r0, #0
 801e756:	f000 80f9 	beq.w	801e94c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 801e75a:	2f00      	cmp	r7, #0
 801e75c:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 801e760:	f2c0 80ef 	blt.w	801e942 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801e764:	42bb      	cmp	r3, r7
 801e766:	f340 80ec 	ble.w	801e942 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801e76a:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801e76e:	3701      	adds	r7, #1
 801e770:	f100 80ef 	bmi.w	801e952 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801e774:	42bb      	cmp	r3, r7
 801e776:	f340 80ec 	ble.w	801e952 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801e77a:	2e00      	cmp	r6, #0
 801e77c:	f000 80eb 	beq.w	801e956 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 801e780:	6852      	ldr	r2, [r2, #4]
 801e782:	b2b6      	uxth	r6, r6
 801e784:	b280      	uxth	r0, r0
 801e786:	fb00 fe06 	mul.w	lr, r0, r6
 801e78a:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801e78e:	0136      	lsls	r6, r6, #4
 801e790:	eba6 070e 	sub.w	r7, r6, lr
 801e794:	b280      	uxth	r0, r0
 801e796:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801e79a:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801e79e:	b2bf      	uxth	r7, r7
 801e7a0:	1a1b      	subs	r3, r3, r0
 801e7a2:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801e7a6:	b29b      	uxth	r3, r3
 801e7a8:	fb07 f60a 	mul.w	r6, r7, sl
 801e7ac:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801e7b0:	fb0b 6603 	mla	r6, fp, r3, r6
 801e7b4:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801e7b8:	fb00 6609 	mla	r6, r0, r9, r6
 801e7bc:	fb0e 6608 	mla	r6, lr, r8, r6
 801e7c0:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801e7c4:	9600      	str	r6, [sp, #0]
 801e7c6:	2e00      	cmp	r6, #0
 801e7c8:	f000 80af 	beq.w	801e92a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 801e7cc:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801e7d0:	fb0b fc0c 	mul.w	ip, fp, ip
 801e7d4:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801e7d8:	fb0b f505 	mul.w	r5, fp, r5
 801e7dc:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801e7e0:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801e7e4:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801e7e8:	44dc      	add	ip, fp
 801e7ea:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e7ee:	9501      	str	r5, [sp, #4]
 801e7f0:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801e7f4:	9503      	str	r5, [sp, #12]
 801e7f6:	9d01      	ldr	r5, [sp, #4]
 801e7f8:	9e02      	ldr	r6, [sp, #8]
 801e7fa:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801e7fe:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801e802:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801e806:	fb0a fc0c 	mul.w	ip, sl, ip
 801e80a:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801e80e:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801e812:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801e816:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801e81a:	4465      	add	r5, ip
 801e81c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801e820:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801e824:	fb09 fc0c 	mul.w	ip, r9, ip
 801e828:	fb09 f904 	mul.w	r9, r9, r4
 801e82c:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801e830:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801e834:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801e838:	fb08 f404 	mul.w	r4, r8, r4
 801e83c:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801e840:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801e844:	fb08 f802 	mul.w	r8, r8, r2
 801e848:	fb0a fa01 	mul.w	sl, sl, r1
 801e84c:	0a22      	lsrs	r2, r4, #8
 801e84e:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801e852:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801e856:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801e85a:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801e85e:	4414      	add	r4, r2
 801e860:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801e864:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801e868:	0a2d      	lsrs	r5, r5, #8
 801e86a:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801e86e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801e872:	9a03      	ldr	r2, [sp, #12]
 801e874:	8836      	ldrh	r6, [r6, #0]
 801e876:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801e87a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801e87e:	437d      	muls	r5, r7
 801e880:	4461      	add	r1, ip
 801e882:	0a24      	lsrs	r4, r4, #8
 801e884:	fb02 5503 	mla	r5, r2, r3, r5
 801e888:	0a09      	lsrs	r1, r1, #8
 801e88a:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801e88e:	fb04 540e 	mla	r4, r4, lr, r5
 801e892:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801e896:	fb01 4100 	mla	r1, r1, r0, r4
 801e89a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e89e:	0a09      	lsrs	r1, r1, #8
 801e8a0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e8a4:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801e8a8:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801e8ac:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801e8b0:	fb07 f70a 	mul.w	r7, r7, sl
 801e8b4:	fb03 7101 	mla	r1, r3, r1, r7
 801e8b8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801e8bc:	9b00      	ldr	r3, [sp, #0]
 801e8be:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801e8c2:	fb0e 1e08 	mla	lr, lr, r8, r1
 801e8c6:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801e8ca:	fb00 e101 	mla	r1, r0, r1, lr
 801e8ce:	43da      	mvns	r2, r3
 801e8d0:	1233      	asrs	r3, r6, #8
 801e8d2:	b2d2      	uxtb	r2, r2
 801e8d4:	10f0      	asrs	r0, r6, #3
 801e8d6:	0a09      	lsrs	r1, r1, #8
 801e8d8:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801e8dc:	00f6      	lsls	r6, r6, #3
 801e8de:	4353      	muls	r3, r2
 801e8e0:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801e8e4:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801e8e8:	b2f6      	uxtb	r6, r6
 801e8ea:	4321      	orrs	r1, r4
 801e8ec:	4350      	muls	r0, r2
 801e8ee:	4356      	muls	r6, r2
 801e8f0:	1c5a      	adds	r2, r3, #1
 801e8f2:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801e8f6:	0c0b      	lsrs	r3, r1, #16
 801e8f8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801e8fc:	1c42      	adds	r2, r0, #1
 801e8fe:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801e902:	0a0a      	lsrs	r2, r1, #8
 801e904:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801e908:	021b      	lsls	r3, r3, #8
 801e90a:	00d2      	lsls	r2, r2, #3
 801e90c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e910:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801e914:	4313      	orrs	r3, r2
 801e916:	1c72      	adds	r2, r6, #1
 801e918:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801e91c:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 801e920:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801e924:	4319      	orrs	r1, r3
 801e926:	9b02      	ldr	r3, [sp, #8]
 801e928:	8019      	strh	r1, [r3, #0]
 801e92a:	b005      	add	sp, #20
 801e92c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e930:	2500      	movs	r5, #0
 801e932:	e6fe      	b.n	801e732 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 801e934:	2100      	movs	r1, #0
 801e936:	460d      	mov	r5, r1
 801e938:	e706      	b.n	801e748 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801e93a:	2100      	movs	r1, #0
 801e93c:	e704      	b.n	801e748 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801e93e:	4631      	mov	r1, r6
 801e940:	e702      	b.n	801e748 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801e942:	2400      	movs	r4, #0
 801e944:	e713      	b.n	801e76e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 801e946:	2200      	movs	r2, #0
 801e948:	4614      	mov	r4, r2
 801e94a:	e71a      	b.n	801e782 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801e94c:	4602      	mov	r2, r0
 801e94e:	4604      	mov	r4, r0
 801e950:	e717      	b.n	801e782 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801e952:	2200      	movs	r2, #0
 801e954:	e715      	b.n	801e782 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801e956:	4632      	mov	r2, r6
 801e958:	e713      	b.n	801e782 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

0801e95c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e95c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e960:	b09b      	sub	sp, #108	; 0x6c
 801e962:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 801e966:	9218      	str	r2, [sp, #96]	; 0x60
 801e968:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801e96a:	9116      	str	r1, [sp, #88]	; 0x58
 801e96c:	9307      	str	r3, [sp, #28]
 801e96e:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801e972:	9019      	str	r0, [sp, #100]	; 0x64
 801e974:	6850      	ldr	r0, [r2, #4]
 801e976:	6812      	ldr	r2, [r2, #0]
 801e978:	fb00 1303 	mla	r3, r0, r3, r1
 801e97c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801e980:	930a      	str	r3, [sp, #40]	; 0x28
 801e982:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801e984:	681b      	ldr	r3, [r3, #0]
 801e986:	930f      	str	r3, [sp, #60]	; 0x3c
 801e988:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801e98a:	2b00      	cmp	r3, #0
 801e98c:	dc03      	bgt.n	801e996 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801e98e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801e990:	2b00      	cmp	r3, #0
 801e992:	f340 8386 	ble.w	801f0a2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801e996:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801e998:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e99c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e9a0:	1e48      	subs	r0, r1, #1
 801e9a2:	1e57      	subs	r7, r2, #1
 801e9a4:	9b07      	ldr	r3, [sp, #28]
 801e9a6:	2b00      	cmp	r3, #0
 801e9a8:	f340 8166 	ble.w	801ec78 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801e9ac:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801e9b0:	ea4f 4326 	mov.w	r3, r6, asr #16
 801e9b4:	d406      	bmi.n	801e9c4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801e9b6:	4584      	cmp	ip, r0
 801e9b8:	da04      	bge.n	801e9c4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801e9ba:	2b00      	cmp	r3, #0
 801e9bc:	db02      	blt.n	801e9c4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801e9be:	42bb      	cmp	r3, r7
 801e9c0:	f2c0 815b 	blt.w	801ec7a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801e9c4:	f11c 0c01 	adds.w	ip, ip, #1
 801e9c8:	f100 814b 	bmi.w	801ec62 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801e9cc:	4561      	cmp	r1, ip
 801e9ce:	f2c0 8148 	blt.w	801ec62 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801e9d2:	3301      	adds	r3, #1
 801e9d4:	f100 8145 	bmi.w	801ec62 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801e9d8:	429a      	cmp	r2, r3
 801e9da:	f2c0 8142 	blt.w	801ec62 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801e9de:	9b07      	ldr	r3, [sp, #28]
 801e9e0:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801e9e2:	9317      	str	r3, [sp, #92]	; 0x5c
 801e9e4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801e9e6:	2b00      	cmp	r3, #0
 801e9e8:	f340 8165 	ble.w	801ecb6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801e9ec:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 801e9ee:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801e9f0:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801e9f4:	689b      	ldr	r3, [r3, #8]
 801e9f6:	1422      	asrs	r2, r4, #16
 801e9f8:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801e9fc:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801ea00:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801ea04:	f100 81d5 	bmi.w	801edb2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801ea08:	f103 38ff 	add.w	r8, r3, #4294967295
 801ea0c:	4542      	cmp	r2, r8
 801ea0e:	f280 81d0 	bge.w	801edb2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801ea12:	f1bc 0f00 	cmp.w	ip, #0
 801ea16:	f2c0 81cc 	blt.w	801edb2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801ea1a:	f10e 38ff 	add.w	r8, lr, #4294967295
 801ea1e:	45c4      	cmp	ip, r8
 801ea20:	f280 81c7 	bge.w	801edb2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801ea24:	b21b      	sxth	r3, r3
 801ea26:	fb0c 2203 	mla	r2, ip, r3, r2
 801ea2a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801ea2c:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801ea30:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801ea34:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801ea38:	2900      	cmp	r1, #0
 801ea3a:	f000 8182 	beq.w	801ed42 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801ea3e:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801ea42:	950b      	str	r5, [sp, #44]	; 0x2c
 801ea44:	0e2d      	lsrs	r5, r5, #24
 801ea46:	9512      	str	r5, [sp, #72]	; 0x48
 801ea48:	b180      	cbz	r0, 801ea6c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801ea4a:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801ea4e:	3b01      	subs	r3, #1
 801ea50:	009b      	lsls	r3, r3, #2
 801ea52:	3304      	adds	r3, #4
 801ea54:	eb08 0c03 	add.w	ip, r8, r3
 801ea58:	f858 3003 	ldr.w	r3, [r8, r3]
 801ea5c:	9308      	str	r3, [sp, #32]
 801ea5e:	0e1b      	lsrs	r3, r3, #24
 801ea60:	9310      	str	r3, [sp, #64]	; 0x40
 801ea62:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801ea66:	930c      	str	r3, [sp, #48]	; 0x30
 801ea68:	0e1b      	lsrs	r3, r3, #24
 801ea6a:	9313      	str	r3, [sp, #76]	; 0x4c
 801ea6c:	b289      	uxth	r1, r1
 801ea6e:	b280      	uxth	r0, r0
 801ea70:	fb01 f900 	mul.w	r9, r1, r0
 801ea74:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801ea78:	0109      	lsls	r1, r1, #4
 801ea7a:	eba1 0809 	sub.w	r8, r1, r9
 801ea7e:	b280      	uxth	r0, r0
 801ea80:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 801ea84:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801ea86:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801ea88:	fa1f f888 	uxth.w	r8, r8
 801ea8c:	1a09      	subs	r1, r1, r0
 801ea8e:	b289      	uxth	r1, r1
 801ea90:	fb08 f303 	mul.w	r3, r8, r3
 801ea94:	fb01 330e 	mla	r3, r1, lr, r3
 801ea98:	fb00 3305 	mla	r3, r0, r5, r3
 801ea9c:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801ea9e:	fb09 3305 	mla	r3, r9, r5, r3
 801eaa2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801eaa6:	2b00      	cmp	r3, #0
 801eaa8:	f000 80d2 	beq.w	801ec50 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801eaac:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801eab0:	d01b      	beq.n	801eaea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 801eab2:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 801eab6:	fb0e fa0a 	mul.w	sl, lr, sl
 801eaba:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801eabe:	fb0e fe02 	mul.w	lr, lr, r2
 801eac2:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801eac6:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801eaca:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801eace:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801ead2:	4452      	add	r2, sl
 801ead4:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801ead8:	0a12      	lsrs	r2, r2, #8
 801eada:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801eade:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801eae2:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801eae6:	ea42 020c 	orr.w	r2, r2, ip
 801eaea:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801eaec:	2dff      	cmp	r5, #255	; 0xff
 801eaee:	d021      	beq.n	801eb34 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 801eaf0:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801eaf2:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801eaf6:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801eaf8:	fb05 fb0b 	mul.w	fp, r5, fp
 801eafc:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801eafe:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801eb02:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801eb04:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801eb08:	fb05 fa0a 	mul.w	sl, r5, sl
 801eb0c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801eb10:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801eb14:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801eb18:	44de      	add	lr, fp
 801eb1a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801eb1e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801eb22:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801eb26:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801eb2a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801eb2e:	ea4e 050a 	orr.w	r5, lr, sl
 801eb32:	950b      	str	r5, [sp, #44]	; 0x2c
 801eb34:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801eb36:	2dff      	cmp	r5, #255	; 0xff
 801eb38:	d021      	beq.n	801eb7e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 801eb3a:	9d08      	ldr	r5, [sp, #32]
 801eb3c:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801eb40:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801eb42:	fb05 fb0b 	mul.w	fp, r5, fp
 801eb46:	9d08      	ldr	r5, [sp, #32]
 801eb48:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801eb4c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801eb4e:	fb05 fa0e 	mul.w	sl, r5, lr
 801eb52:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801eb56:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801eb5a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801eb5e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801eb62:	44de      	add	lr, fp
 801eb64:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801eb68:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801eb6c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801eb70:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801eb74:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801eb78:	ea4e 050a 	orr.w	r5, lr, sl
 801eb7c:	9508      	str	r5, [sp, #32]
 801eb7e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801eb80:	2dff      	cmp	r5, #255	; 0xff
 801eb82:	d021      	beq.n	801ebc8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 801eb84:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801eb86:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801eb8a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801eb8c:	fb05 fb0b 	mul.w	fp, r5, fp
 801eb90:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801eb92:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801eb96:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801eb98:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801eb9c:	fb05 fa0a 	mul.w	sl, r5, sl
 801eba0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801eba4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801eba8:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801ebac:	44de      	add	lr, fp
 801ebae:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801ebb2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ebb6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ebba:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ebbe:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ebc2:	ea4e 050a 	orr.w	r5, lr, sl
 801ebc6:	950c      	str	r5, [sp, #48]	; 0x30
 801ebc8:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801ebca:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801ebce:	9d08      	ldr	r5, [sp, #32]
 801ebd0:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 801ebd4:	fb08 fc0c 	mul.w	ip, r8, ip
 801ebd8:	fb01 cc0e 	mla	ip, r1, lr, ip
 801ebdc:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801ebe0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801ebe2:	fb00 cc0e 	mla	ip, r0, lr, ip
 801ebe6:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801ebea:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801ebec:	fb09 cc0e 	mla	ip, r9, lr, ip
 801ebf0:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801ebf4:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801ebf8:	fb08 f80e 	mul.w	r8, r8, lr
 801ebfc:	fb01 8202 	mla	r2, r1, r2, r8
 801ec00:	9908      	ldr	r1, [sp, #32]
 801ec02:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801ec06:	990c      	ldr	r1, [sp, #48]	; 0x30
 801ec08:	fb00 220a 	mla	r2, r0, sl, r2
 801ec0c:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 801ec10:	fb09 2900 	mla	r9, r9, r0, r2
 801ec14:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ec18:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801ec1c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ec20:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801ec24:	ea4c 0c09 	orr.w	ip, ip, r9
 801ec28:	2bff      	cmp	r3, #255	; 0xff
 801ec2a:	ea4f 221c 	mov.w	r2, ip, lsr #8
 801ec2e:	f040 8091 	bne.w	801ed54 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801ec32:	ea4f 135c 	mov.w	r3, ip, lsr #5
 801ec36:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 801ec3a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ec3e:	f022 0207 	bic.w	r2, r2, #7
 801ec42:	431a      	orrs	r2, r3
 801ec44:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801ec48:	ea4c 0c02 	orr.w	ip, ip, r2
 801ec4c:	f8a7 c000 	strh.w	ip, [r7]
 801ec50:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801ec52:	441c      	add	r4, r3
 801ec54:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ec56:	441e      	add	r6, r3
 801ec58:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801ec5a:	3b01      	subs	r3, #1
 801ec5c:	3702      	adds	r7, #2
 801ec5e:	9317      	str	r3, [sp, #92]	; 0x5c
 801ec60:	e6c0      	b.n	801e9e4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801ec62:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801ec64:	441c      	add	r4, r3
 801ec66:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ec68:	441e      	add	r6, r3
 801ec6a:	9b07      	ldr	r3, [sp, #28]
 801ec6c:	3b01      	subs	r3, #1
 801ec6e:	9307      	str	r3, [sp, #28]
 801ec70:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ec72:	3302      	adds	r3, #2
 801ec74:	930a      	str	r3, [sp, #40]	; 0x28
 801ec76:	e695      	b.n	801e9a4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801ec78:	d024      	beq.n	801ecc4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801ec7a:	9b07      	ldr	r3, [sp, #28]
 801ec7c:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801ec7e:	3b01      	subs	r3, #1
 801ec80:	fb00 4003 	mla	r0, r0, r3, r4
 801ec84:	1400      	asrs	r0, r0, #16
 801ec86:	f53f aeaa 	bmi.w	801e9de <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801ec8a:	3901      	subs	r1, #1
 801ec8c:	4288      	cmp	r0, r1
 801ec8e:	f6bf aea6 	bge.w	801e9de <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801ec92:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801ec94:	fb01 6303 	mla	r3, r1, r3, r6
 801ec98:	141b      	asrs	r3, r3, #16
 801ec9a:	f53f aea0 	bmi.w	801e9de <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801ec9e:	3a01      	subs	r2, #1
 801eca0:	4293      	cmp	r3, r2
 801eca2:	f6bf ae9c 	bge.w	801e9de <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801eca6:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801ecaa:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 801ecae:	f1bb 0f00 	cmp.w	fp, #0
 801ecb2:	f300 809a 	bgt.w	801edea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801ecb6:	9b07      	ldr	r3, [sp, #28]
 801ecb8:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801ecbc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ecbe:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801ecc2:	930a      	str	r3, [sp, #40]	; 0x28
 801ecc4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801ecc6:	2b00      	cmp	r3, #0
 801ecc8:	f340 81eb 	ble.w	801f0a2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801eccc:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ecd0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801ecd4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ecd8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ecda:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ecde:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ece2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ece6:	eef0 6a62 	vmov.f32	s13, s5
 801ecea:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ecee:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ecf2:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ecf6:	ee16 4a90 	vmov	r4, s13
 801ecfa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ecfe:	eef0 6a43 	vmov.f32	s13, s6
 801ed02:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ed06:	ee12 2a90 	vmov	r2, s5
 801ed0a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ed0e:	fb92 f3f3 	sdiv	r3, r2, r3
 801ed12:	ee13 2a10 	vmov	r2, s6
 801ed16:	9327      	str	r3, [sp, #156]	; 0x9c
 801ed18:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ed1a:	fb92 f3f3 	sdiv	r3, r2, r3
 801ed1e:	9328      	str	r3, [sp, #160]	; 0xa0
 801ed20:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801ed22:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801ed24:	3b01      	subs	r3, #1
 801ed26:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ed2a:	9316      	str	r3, [sp, #88]	; 0x58
 801ed2c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ed2e:	bf08      	it	eq
 801ed30:	4613      	moveq	r3, r2
 801ed32:	ee16 6a90 	vmov	r6, s13
 801ed36:	9307      	str	r3, [sp, #28]
 801ed38:	eeb0 3a67 	vmov.f32	s6, s15
 801ed3c:	eef0 2a47 	vmov.f32	s5, s14
 801ed40:	e622      	b.n	801e988 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 801ed42:	2800      	cmp	r0, #0
 801ed44:	f43f ae92 	beq.w	801ea6c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801ed48:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801ed4c:	9308      	str	r3, [sp, #32]
 801ed4e:	0e1b      	lsrs	r3, r3, #24
 801ed50:	9310      	str	r3, [sp, #64]	; 0x40
 801ed52:	e68b      	b.n	801ea6c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801ed54:	8839      	ldrh	r1, [r7, #0]
 801ed56:	4dd4      	ldr	r5, [pc, #848]	; (801f0a8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 801ed58:	43db      	mvns	r3, r3
 801ed5a:	ea4f 2e21 	mov.w	lr, r1, asr #8
 801ed5e:	fa5f f883 	uxtb.w	r8, r3
 801ed62:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801ed66:	fb0e fe08 	mul.w	lr, lr, r8
 801ed6a:	10c8      	asrs	r0, r1, #3
 801ed6c:	00cb      	lsls	r3, r1, #3
 801ed6e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801ed72:	f10e 0101 	add.w	r1, lr, #1
 801ed76:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 801ed7a:	fb00 f008 	mul.w	r0, r0, r8
 801ed7e:	ea4f 411c 	mov.w	r1, ip, lsr #16
 801ed82:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 801ed86:	f100 0e01 	add.w	lr, r0, #1
 801ed8a:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 801ed8e:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801ed92:	b2db      	uxtb	r3, r3
 801ed94:	b2c9      	uxtb	r1, r1
 801ed96:	00d2      	lsls	r2, r2, #3
 801ed98:	fb03 f308 	mul.w	r3, r3, r8
 801ed9c:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 801eda0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801eda4:	430a      	orrs	r2, r1
 801eda6:	1c59      	adds	r1, r3, #1
 801eda8:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801edac:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801edb0:	e748      	b.n	801ec44 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 801edb2:	f112 0801 	adds.w	r8, r2, #1
 801edb6:	f53f af4b 	bmi.w	801ec50 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801edba:	4543      	cmp	r3, r8
 801edbc:	f6ff af48 	blt.w	801ec50 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801edc0:	f11c 0801 	adds.w	r8, ip, #1
 801edc4:	f53f af44 	bmi.w	801ec50 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801edc8:	45c6      	cmp	lr, r8
 801edca:	f6ff af41 	blt.w	801ec50 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801edce:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 801edd2:	fa0f f28e 	sxth.w	r2, lr
 801edd6:	e9cd 1003 	strd	r1, r0, [sp, #12]
 801edda:	9200      	str	r2, [sp, #0]
 801eddc:	b21b      	sxth	r3, r3
 801edde:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801ede0:	9819      	ldr	r0, [sp, #100]	; 0x64
 801ede2:	4639      	mov	r1, r7
 801ede4:	f7ff fc87 	bl	801e6f6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 801ede8:	e732      	b.n	801ec50 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801edea:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801edec:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801edee:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 801edf2:	1421      	asrs	r1, r4, #16
 801edf4:	1433      	asrs	r3, r6, #16
 801edf6:	fb07 1303 	mla	r3, r7, r3, r1
 801edfa:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801edfc:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 801ee00:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801ee04:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801ee08:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801ee0c:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801ee10:	2a00      	cmp	r2, #0
 801ee12:	f000 8107 	beq.w	801f024 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 801ee16:	684d      	ldr	r5, [r1, #4]
 801ee18:	950d      	str	r5, [sp, #52]	; 0x34
 801ee1a:	0e2d      	lsrs	r5, r5, #24
 801ee1c:	9514      	str	r5, [sp, #80]	; 0x50
 801ee1e:	b178      	cbz	r0, 801ee40 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801ee20:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 801ee24:	3f01      	subs	r7, #1
 801ee26:	00bf      	lsls	r7, r7, #2
 801ee28:	3704      	adds	r7, #4
 801ee2a:	eb01 0e07 	add.w	lr, r1, r7
 801ee2e:	59c9      	ldr	r1, [r1, r7]
 801ee30:	9109      	str	r1, [sp, #36]	; 0x24
 801ee32:	0e09      	lsrs	r1, r1, #24
 801ee34:	9111      	str	r1, [sp, #68]	; 0x44
 801ee36:	f8de 1004 	ldr.w	r1, [lr, #4]
 801ee3a:	910e      	str	r1, [sp, #56]	; 0x38
 801ee3c:	0e09      	lsrs	r1, r1, #24
 801ee3e:	9115      	str	r1, [sp, #84]	; 0x54
 801ee40:	b292      	uxth	r2, r2
 801ee42:	b280      	uxth	r0, r0
 801ee44:	fb02 f900 	mul.w	r9, r2, r0
 801ee48:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801ee4c:	0112      	lsls	r2, r2, #4
 801ee4e:	eba2 0e09 	sub.w	lr, r2, r9
 801ee52:	b280      	uxth	r0, r0
 801ee54:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801ee58:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801ee5a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801ee5c:	fa1f fe8e 	uxth.w	lr, lr
 801ee60:	1a09      	subs	r1, r1, r0
 801ee62:	b289      	uxth	r1, r1
 801ee64:	fb0e f202 	mul.w	r2, lr, r2
 801ee68:	fb01 220c 	mla	r2, r1, ip, r2
 801ee6c:	fb00 2205 	mla	r2, r0, r5, r2
 801ee70:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801ee72:	fb09 2205 	mla	r2, r9, r5, r2
 801ee76:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801ee7a:	2a00      	cmp	r2, #0
 801ee7c:	f000 80c9 	beq.w	801f012 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 801ee80:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801ee84:	d019      	beq.n	801eeba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 801ee86:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801ee8a:	fb0c fa0a 	mul.w	sl, ip, sl
 801ee8e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801ee92:	fb0c fc03 	mul.w	ip, ip, r3
 801ee96:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801ee9a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801ee9e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801eea2:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801eea6:	4453      	add	r3, sl
 801eea8:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801eeac:	0a1b      	lsrs	r3, r3, #8
 801eeae:	0a3f      	lsrs	r7, r7, #8
 801eeb0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801eeb4:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801eeb8:	433b      	orrs	r3, r7
 801eeba:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801eebc:	2dff      	cmp	r5, #255	; 0xff
 801eebe:	d020      	beq.n	801ef02 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 801eec0:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801eec2:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801eec6:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801eec8:	436f      	muls	r7, r5
 801eeca:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801eecc:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801eed0:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801eed2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801eed6:	fb05 fa0a 	mul.w	sl, r5, sl
 801eeda:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801eede:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801eee2:	44bc      	add	ip, r7
 801eee4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801eee8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801eeec:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801eef0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801eef4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801eef8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801eefc:	ea4c 050a 	orr.w	r5, ip, sl
 801ef00:	950d      	str	r5, [sp, #52]	; 0x34
 801ef02:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801ef04:	2dff      	cmp	r5, #255	; 0xff
 801ef06:	d020      	beq.n	801ef4a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 801ef08:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801ef0a:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801ef0e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801ef10:	436f      	muls	r7, r5
 801ef12:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801ef14:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801ef18:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801ef1a:	fb05 fa0c 	mul.w	sl, r5, ip
 801ef1e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801ef22:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ef26:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801ef2a:	44bc      	add	ip, r7
 801ef2c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801ef30:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801ef34:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ef38:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ef3c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ef40:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ef44:	ea4c 050a 	orr.w	r5, ip, sl
 801ef48:	9509      	str	r5, [sp, #36]	; 0x24
 801ef4a:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801ef4c:	2dff      	cmp	r5, #255	; 0xff
 801ef4e:	d020      	beq.n	801ef92 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 801ef50:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801ef52:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801ef56:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801ef58:	436f      	muls	r7, r5
 801ef5a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801ef5c:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801ef60:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801ef62:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801ef66:	fb05 fa0a 	mul.w	sl, r5, sl
 801ef6a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801ef6e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ef72:	44bc      	add	ip, r7
 801ef74:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801ef78:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801ef7c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ef80:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ef84:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ef88:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ef8c:	ea4c 050a 	orr.w	r5, ip, sl
 801ef90:	950e      	str	r5, [sp, #56]	; 0x38
 801ef92:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801ef94:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801ef98:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801ef9a:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801ef9e:	fb0e f707 	mul.w	r7, lr, r7
 801efa2:	fb01 770c 	mla	r7, r1, ip, r7
 801efa6:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801efaa:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801efac:	fb00 770c 	mla	r7, r0, ip, r7
 801efb0:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801efb4:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801efb6:	fb09 770c 	mla	r7, r9, ip, r7
 801efba:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801efbe:	fb0e fe0c 	mul.w	lr, lr, ip
 801efc2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801efc6:	fb01 e303 	mla	r3, r1, r3, lr
 801efca:	9909      	ldr	r1, [sp, #36]	; 0x24
 801efcc:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801efd0:	990e      	ldr	r1, [sp, #56]	; 0x38
 801efd2:	fb00 330a 	mla	r3, r0, sl, r3
 801efd6:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801efda:	fb09 3c0c 	mla	ip, r9, ip, r3
 801efde:	0a3f      	lsrs	r7, r7, #8
 801efe0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801efe4:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801efe8:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801efec:	ea47 070c 	orr.w	r7, r7, ip
 801eff0:	2aff      	cmp	r2, #255	; 0xff
 801eff2:	ea4f 2317 	mov.w	r3, r7, lsr #8
 801eff6:	d11e      	bne.n	801f036 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 801eff8:	097a      	lsrs	r2, r7, #5
 801effa:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 801effe:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801f002:	f023 0307 	bic.w	r3, r3, #7
 801f006:	4313      	orrs	r3, r2
 801f008:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801f00c:	431f      	orrs	r7, r3
 801f00e:	f8a8 7000 	strh.w	r7, [r8]
 801f012:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801f014:	441c      	add	r4, r3
 801f016:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f018:	f108 0802 	add.w	r8, r8, #2
 801f01c:	441e      	add	r6, r3
 801f01e:	f10b 3bff 	add.w	fp, fp, #4294967295
 801f022:	e644      	b.n	801ecae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 801f024:	2800      	cmp	r0, #0
 801f026:	f43f af0b 	beq.w	801ee40 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801f02a:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 801f02e:	9109      	str	r1, [sp, #36]	; 0x24
 801f030:	0e09      	lsrs	r1, r1, #24
 801f032:	9111      	str	r1, [sp, #68]	; 0x44
 801f034:	e704      	b.n	801ee40 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801f036:	f8b8 1000 	ldrh.w	r1, [r8]
 801f03a:	43d2      	mvns	r2, r2
 801f03c:	ea4f 2c21 	mov.w	ip, r1, asr #8
 801f040:	fa5f fe82 	uxtb.w	lr, r2
 801f044:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801f048:	fb0c fc0e 	mul.w	ip, ip, lr
 801f04c:	10c8      	asrs	r0, r1, #3
 801f04e:	00ca      	lsls	r2, r1, #3
 801f050:	f10c 0101 	add.w	r1, ip, #1
 801f054:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801f058:	0c39      	lsrs	r1, r7, #16
 801f05a:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801f05e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801f062:	4911      	ldr	r1, [pc, #68]	; (801f0a8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 801f064:	fb00 f00e 	mul.w	r0, r0, lr
 801f068:	fa5f fc8c 	uxtb.w	ip, ip
 801f06c:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 801f070:	b2d2      	uxtb	r2, r2
 801f072:	1c41      	adds	r1, r0, #1
 801f074:	fb02 f20e 	mul.w	r2, r2, lr
 801f078:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801f07c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801f080:	1c51      	adds	r1, r2, #1
 801f082:	00c0      	lsls	r0, r0, #3
 801f084:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801f088:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801f08c:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801f090:	ea4c 0c00 	orr.w	ip, ip, r0
 801f094:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801f098:	ea47 0c0c 	orr.w	ip, r7, ip
 801f09c:	f8a8 c000 	strh.w	ip, [r8]
 801f0a0:	e7b7      	b.n	801f012 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 801f0a2:	b01b      	add	sp, #108	; 0x6c
 801f0a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f0a8:	fffff800 	.word	0xfffff800

0801f0ac <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 801f0ac:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801f0b0:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 801f0b4:	2d00      	cmp	r5, #0
 801f0b6:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801f0ba:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801f0be:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 801f0c2:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 801f0c6:	fb05 0e03 	mla	lr, r5, r3, r0
 801f0ca:	f2c0 808c 	blt.w	801f1e6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 801f0ce:	45a9      	cmp	r9, r5
 801f0d0:	f340 8089 	ble.w	801f1e6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 801f0d4:	2800      	cmp	r0, #0
 801f0d6:	f2c0 8084 	blt.w	801f1e2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 801f0da:	4580      	cmp	r8, r0
 801f0dc:	f340 8081 	ble.w	801f1e2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 801f0e0:	ea4f 045e 	mov.w	r4, lr, lsr #1
 801f0e4:	f01e 0f01 	tst.w	lr, #1
 801f0e8:	5d16      	ldrb	r6, [r2, r4]
 801f0ea:	bf0c      	ite	eq
 801f0ec:	f006 060f 	andeq.w	r6, r6, #15
 801f0f0:	1136      	asrne	r6, r6, #4
 801f0f2:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801f0f6:	b2f6      	uxtb	r6, r6
 801f0f8:	1c44      	adds	r4, r0, #1
 801f0fa:	d477      	bmi.n	801f1ec <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801f0fc:	45a0      	cmp	r8, r4
 801f0fe:	dd75      	ble.n	801f1ec <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801f100:	2f00      	cmp	r7, #0
 801f102:	d075      	beq.n	801f1f0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 801f104:	f10e 0a01 	add.w	sl, lr, #1
 801f108:	ea4f 045a 	mov.w	r4, sl, lsr #1
 801f10c:	f01a 0f01 	tst.w	sl, #1
 801f110:	5d14      	ldrb	r4, [r2, r4]
 801f112:	bf0c      	ite	eq
 801f114:	f004 040f 	andeq.w	r4, r4, #15
 801f118:	1124      	asrne	r4, r4, #4
 801f11a:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801f11e:	b2e4      	uxtb	r4, r4
 801f120:	3501      	adds	r5, #1
 801f122:	d469      	bmi.n	801f1f8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801f124:	45a9      	cmp	r9, r5
 801f126:	dd67      	ble.n	801f1f8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801f128:	f1bc 0f00 	cmp.w	ip, #0
 801f12c:	d067      	beq.n	801f1fe <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 801f12e:	2800      	cmp	r0, #0
 801f130:	db60      	blt.n	801f1f4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801f132:	4580      	cmp	r8, r0
 801f134:	dd5e      	ble.n	801f1f4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801f136:	eb03 090e 	add.w	r9, r3, lr
 801f13a:	ea4f 0559 	mov.w	r5, r9, lsr #1
 801f13e:	f019 0f01 	tst.w	r9, #1
 801f142:	5d55      	ldrb	r5, [r2, r5]
 801f144:	bf0c      	ite	eq
 801f146:	f005 050f 	andeq.w	r5, r5, #15
 801f14a:	112d      	asrne	r5, r5, #4
 801f14c:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 801f150:	b2ed      	uxtb	r5, r5
 801f152:	3001      	adds	r0, #1
 801f154:	d456      	bmi.n	801f204 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801f156:	4580      	cmp	r8, r0
 801f158:	dd54      	ble.n	801f204 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801f15a:	2f00      	cmp	r7, #0
 801f15c:	d054      	beq.n	801f208 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 801f15e:	3301      	adds	r3, #1
 801f160:	449e      	add	lr, r3
 801f162:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801f166:	f01e 0f01 	tst.w	lr, #1
 801f16a:	5cd0      	ldrb	r0, [r2, r3]
 801f16c:	bf0c      	ite	eq
 801f16e:	f000 000f 	andeq.w	r0, r0, #15
 801f172:	1100      	asrne	r0, r0, #4
 801f174:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801f178:	b2c3      	uxtb	r3, r0
 801f17a:	b2ba      	uxth	r2, r7
 801f17c:	fa1f fc8c 	uxth.w	ip, ip
 801f180:	fb02 f00c 	mul.w	r0, r2, ip
 801f184:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 801f188:	0112      	lsls	r2, r2, #4
 801f18a:	fa1f fc8c 	uxth.w	ip, ip
 801f18e:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 801f192:	1a12      	subs	r2, r2, r0
 801f194:	eba7 070c 	sub.w	r7, r7, ip
 801f198:	b292      	uxth	r2, r2
 801f19a:	b2bf      	uxth	r7, r7
 801f19c:	4362      	muls	r2, r4
 801f19e:	fb06 2207 	mla	r2, r6, r7, r2
 801f1a2:	fb0c 2505 	mla	r5, ip, r5, r2
 801f1a6:	fb00 5303 	mla	r3, r0, r3, r5
 801f1aa:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f1ae:	b1b3      	cbz	r3, 801f1de <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 801f1b0:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 801f1b4:	435a      	muls	r2, r3
 801f1b6:	1c53      	adds	r3, r2, #1
 801f1b8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f1bc:	4a2d      	ldr	r2, [pc, #180]	; (801f274 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 801f1be:	121b      	asrs	r3, r3, #8
 801f1c0:	6812      	ldr	r2, [r2, #0]
 801f1c2:	2bff      	cmp	r3, #255	; 0xff
 801f1c4:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801f1c8:	d120      	bne.n	801f20c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 801f1ca:	4b2b      	ldr	r3, [pc, #172]	; (801f278 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 801f1cc:	0950      	lsrs	r0, r2, #5
 801f1ce:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801f1d2:	4033      	ands	r3, r6
 801f1d4:	4318      	orrs	r0, r3
 801f1d6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801f1da:	4302      	orrs	r2, r0
 801f1dc:	800a      	strh	r2, [r1, #0]
 801f1de:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801f1e2:	2600      	movs	r6, #0
 801f1e4:	e788      	b.n	801f0f8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 801f1e6:	2400      	movs	r4, #0
 801f1e8:	4626      	mov	r6, r4
 801f1ea:	e799      	b.n	801f120 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801f1ec:	2400      	movs	r4, #0
 801f1ee:	e797      	b.n	801f120 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801f1f0:	463c      	mov	r4, r7
 801f1f2:	e795      	b.n	801f120 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801f1f4:	2500      	movs	r5, #0
 801f1f6:	e7ac      	b.n	801f152 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 801f1f8:	2300      	movs	r3, #0
 801f1fa:	461d      	mov	r5, r3
 801f1fc:	e7bd      	b.n	801f17a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801f1fe:	4663      	mov	r3, ip
 801f200:	4665      	mov	r5, ip
 801f202:	e7ba      	b.n	801f17a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801f204:	2300      	movs	r3, #0
 801f206:	e7b8      	b.n	801f17a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801f208:	463b      	mov	r3, r7
 801f20a:	e7b6      	b.n	801f17a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801f20c:	880d      	ldrh	r5, [r1, #0]
 801f20e:	b29f      	uxth	r7, r3
 801f210:	122c      	asrs	r4, r5, #8
 801f212:	f3c2 4007 	ubfx	r0, r2, #16, #8
 801f216:	43db      	mvns	r3, r3
 801f218:	b2db      	uxtb	r3, r3
 801f21a:	fb10 f007 	smulbb	r0, r0, r7
 801f21e:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801f222:	fb04 0403 	mla	r4, r4, r3, r0
 801f226:	b2f6      	uxtb	r6, r6
 801f228:	10e8      	asrs	r0, r5, #3
 801f22a:	b2d2      	uxtb	r2, r2
 801f22c:	00ed      	lsls	r5, r5, #3
 801f22e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801f232:	fb12 f207 	smulbb	r2, r2, r7
 801f236:	fb16 f607 	smulbb	r6, r6, r7
 801f23a:	b2ed      	uxtb	r5, r5
 801f23c:	b2a4      	uxth	r4, r4
 801f23e:	fb00 6603 	mla	r6, r0, r3, r6
 801f242:	fb05 2303 	mla	r3, r5, r3, r2
 801f246:	b29a      	uxth	r2, r3
 801f248:	1c63      	adds	r3, r4, #1
 801f24a:	b2b0      	uxth	r0, r6
 801f24c:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801f250:	1c53      	adds	r3, r2, #1
 801f252:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f256:	1c42      	adds	r2, r0, #1
 801f258:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801f25c:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801f260:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801f264:	0940      	lsrs	r0, r0, #5
 801f266:	4323      	orrs	r3, r4
 801f268:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801f26c:	4303      	orrs	r3, r0
 801f26e:	800b      	strh	r3, [r1, #0]
 801f270:	e7b5      	b.n	801f1de <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 801f272:	bf00      	nop
 801f274:	200155c4 	.word	0x200155c4
 801f278:	00fff800 	.word	0x00fff800

0801f27c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f27c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f280:	b097      	sub	sp, #92	; 0x5c
 801f282:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 801f286:	9214      	str	r2, [sp, #80]	; 0x50
 801f288:	9309      	str	r3, [sp, #36]	; 0x24
 801f28a:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801f28c:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801f290:	910d      	str	r1, [sp, #52]	; 0x34
 801f292:	930f      	str	r3, [sp, #60]	; 0x3c
 801f294:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 801f298:	9015      	str	r0, [sp, #84]	; 0x54
 801f29a:	6850      	ldr	r0, [r2, #4]
 801f29c:	6812      	ldr	r2, [r2, #0]
 801f29e:	fb00 1303 	mla	r3, r0, r3, r1
 801f2a2:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801f2a6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f2a8:	689b      	ldr	r3, [r3, #8]
 801f2aa:	3301      	adds	r3, #1
 801f2ac:	f023 0301 	bic.w	r3, r3, #1
 801f2b0:	930a      	str	r3, [sp, #40]	; 0x28
 801f2b2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f2b4:	681f      	ldr	r7, [r3, #0]
 801f2b6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f2b8:	2b00      	cmp	r3, #0
 801f2ba:	dc03      	bgt.n	801f2c4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801f2bc:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801f2be:	2b00      	cmp	r3, #0
 801f2c0:	f340 8287 	ble.w	801f7d2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 801f2c4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f2c6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f2ca:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f2ce:	1e48      	subs	r0, r1, #1
 801f2d0:	f102 3cff 	add.w	ip, r2, #4294967295
 801f2d4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f2d6:	2b00      	cmp	r3, #0
 801f2d8:	f340 80c4 	ble.w	801f464 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801f2dc:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801f2e0:	ea4f 4326 	mov.w	r3, r6, asr #16
 801f2e4:	d406      	bmi.n	801f2f4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801f2e6:	4586      	cmp	lr, r0
 801f2e8:	da04      	bge.n	801f2f4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801f2ea:	2b00      	cmp	r3, #0
 801f2ec:	db02      	blt.n	801f2f4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801f2ee:	4563      	cmp	r3, ip
 801f2f0:	f2c0 80b9 	blt.w	801f466 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 801f2f4:	f11e 0e01 	adds.w	lr, lr, #1
 801f2f8:	f100 80aa 	bmi.w	801f450 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801f2fc:	4571      	cmp	r1, lr
 801f2fe:	f2c0 80a7 	blt.w	801f450 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801f302:	3301      	adds	r3, #1
 801f304:	f100 80a4 	bmi.w	801f450 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801f308:	429a      	cmp	r2, r3
 801f30a:	f2c0 80a1 	blt.w	801f450 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801f30e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f310:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 801f314:	930e      	str	r3, [sp, #56]	; 0x38
 801f316:	46c8      	mov	r8, r9
 801f318:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f31a:	2b00      	cmp	r3, #0
 801f31c:	f340 80c3 	ble.w	801f4a6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801f320:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f322:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801f326:	1423      	asrs	r3, r4, #16
 801f328:	ea4f 4026 	mov.w	r0, r6, asr #16
 801f32c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801f330:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801f334:	f100 814d 	bmi.w	801f5d2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801f338:	f10c 3bff 	add.w	fp, ip, #4294967295
 801f33c:	455b      	cmp	r3, fp
 801f33e:	f280 8148 	bge.w	801f5d2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801f342:	2800      	cmp	r0, #0
 801f344:	f2c0 8145 	blt.w	801f5d2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801f348:	f10e 3bff 	add.w	fp, lr, #4294967295
 801f34c:	4558      	cmp	r0, fp
 801f34e:	f280 8140 	bge.w	801f5d2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801f352:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801f354:	fb00 3305 	mla	r3, r0, r5, r3
 801f358:	0858      	lsrs	r0, r3, #1
 801f35a:	07dd      	lsls	r5, r3, #31
 801f35c:	f817 c000 	ldrb.w	ip, [r7, r0]
 801f360:	bf54      	ite	pl
 801f362:	f00c 0c0f 	andpl.w	ip, ip, #15
 801f366:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801f36a:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801f36e:	fa5f fc8c 	uxtb.w	ip, ip
 801f372:	2a00      	cmp	r2, #0
 801f374:	f000 80db 	beq.w	801f52e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 801f378:	1c58      	adds	r0, r3, #1
 801f37a:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801f37e:	07c0      	lsls	r0, r0, #31
 801f380:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801f384:	bf54      	ite	pl
 801f386:	f00e 0e0f 	andpl.w	lr, lr, #15
 801f38a:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801f38e:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801f392:	fa5f f08e 	uxtb.w	r0, lr
 801f396:	9010      	str	r0, [sp, #64]	; 0x40
 801f398:	b1c9      	cbz	r1, 801f3ce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801f39a:	4453      	add	r3, sl
 801f39c:	0858      	lsrs	r0, r3, #1
 801f39e:	07dd      	lsls	r5, r3, #31
 801f3a0:	5c38      	ldrb	r0, [r7, r0]
 801f3a2:	bf54      	ite	pl
 801f3a4:	f000 000f 	andpl.w	r0, r0, #15
 801f3a8:	1100      	asrmi	r0, r0, #4
 801f3aa:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801f3ae:	3301      	adds	r3, #1
 801f3b0:	b2c0      	uxtb	r0, r0
 801f3b2:	900b      	str	r0, [sp, #44]	; 0x2c
 801f3b4:	0858      	lsrs	r0, r3, #1
 801f3b6:	07dd      	lsls	r5, r3, #31
 801f3b8:	f817 e000 	ldrb.w	lr, [r7, r0]
 801f3bc:	bf54      	ite	pl
 801f3be:	f00e 030f 	andpl.w	r3, lr, #15
 801f3c2:	ea4f 132e 	movmi.w	r3, lr, asr #4
 801f3c6:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801f3ca:	b2db      	uxtb	r3, r3
 801f3cc:	9311      	str	r3, [sp, #68]	; 0x44
 801f3ce:	b292      	uxth	r2, r2
 801f3d0:	b289      	uxth	r1, r1
 801f3d2:	fb02 f301 	mul.w	r3, r2, r1
 801f3d6:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801f3da:	0112      	lsls	r2, r2, #4
 801f3dc:	b289      	uxth	r1, r1
 801f3de:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801f3e2:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801f3e4:	1ad2      	subs	r2, r2, r3
 801f3e6:	1a40      	subs	r0, r0, r1
 801f3e8:	b292      	uxth	r2, r2
 801f3ea:	436a      	muls	r2, r5
 801f3ec:	b280      	uxth	r0, r0
 801f3ee:	fb0c 2c00 	mla	ip, ip, r0, r2
 801f3f2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801f3f4:	fb01 c102 	mla	r1, r1, r2, ip
 801f3f8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801f3fa:	fb03 1302 	mla	r3, r3, r2, r1
 801f3fe:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f402:	b1db      	cbz	r3, 801f43c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801f404:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801f406:	4353      	muls	r3, r2
 801f408:	1c5a      	adds	r2, r3, #1
 801f40a:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801f40e:	4ac6      	ldr	r2, [pc, #792]	; (801f728 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 801f410:	121b      	asrs	r3, r3, #8
 801f412:	6812      	ldr	r2, [r2, #0]
 801f414:	2bff      	cmp	r3, #255	; 0xff
 801f416:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801f41a:	f040 8099 	bne.w	801f550 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 801f41e:	0953      	lsrs	r3, r2, #5
 801f420:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801f424:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f428:	f02c 0c07 	bic.w	ip, ip, #7
 801f42c:	ea43 0c0c 	orr.w	ip, r3, ip
 801f430:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801f434:	ea4c 0202 	orr.w	r2, ip, r2
 801f438:	f8a8 2000 	strh.w	r2, [r8]
 801f43c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801f43e:	441c      	add	r4, r3
 801f440:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f442:	441e      	add	r6, r3
 801f444:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f446:	3b01      	subs	r3, #1
 801f448:	f108 0802 	add.w	r8, r8, #2
 801f44c:	930e      	str	r3, [sp, #56]	; 0x38
 801f44e:	e763      	b.n	801f318 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801f450:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801f452:	441c      	add	r4, r3
 801f454:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f456:	441e      	add	r6, r3
 801f458:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f45a:	3b01      	subs	r3, #1
 801f45c:	9309      	str	r3, [sp, #36]	; 0x24
 801f45e:	f109 0902 	add.w	r9, r9, #2
 801f462:	e737      	b.n	801f2d4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801f464:	d024      	beq.n	801f4b0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801f466:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f468:	9823      	ldr	r0, [sp, #140]	; 0x8c
 801f46a:	3b01      	subs	r3, #1
 801f46c:	fb00 4003 	mla	r0, r0, r3, r4
 801f470:	1400      	asrs	r0, r0, #16
 801f472:	f53f af4c 	bmi.w	801f30e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f476:	3901      	subs	r1, #1
 801f478:	4288      	cmp	r0, r1
 801f47a:	f6bf af48 	bge.w	801f30e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f47e:	9924      	ldr	r1, [sp, #144]	; 0x90
 801f480:	fb01 6303 	mla	r3, r1, r3, r6
 801f484:	141b      	asrs	r3, r3, #16
 801f486:	f53f af42 	bmi.w	801f30e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f48a:	3a01      	subs	r2, #1
 801f48c:	4293      	cmp	r3, r2
 801f48e:	f6bf af3e 	bge.w	801f30e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f492:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801f496:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801f49a:	930e      	str	r3, [sp, #56]	; 0x38
 801f49c:	46c8      	mov	r8, r9
 801f49e:	f1bb 0f00 	cmp.w	fp, #0
 801f4a2:	f300 80b7 	bgt.w	801f614 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801f4a6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f4a8:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801f4ac:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801f4b0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f4b2:	2b00      	cmp	r3, #0
 801f4b4:	f340 818d 	ble.w	801f7d2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 801f4b8:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f4bc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801f4c0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f4c4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f4c6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f4ca:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f4ce:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f4d2:	eef0 6a62 	vmov.f32	s13, s5
 801f4d6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f4da:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f4de:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f4e2:	ee16 4a90 	vmov	r4, s13
 801f4e6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f4ea:	eef0 6a43 	vmov.f32	s13, s6
 801f4ee:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f4f2:	ee12 2a90 	vmov	r2, s5
 801f4f6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f4fa:	fb92 f3f3 	sdiv	r3, r2, r3
 801f4fe:	ee13 2a10 	vmov	r2, s6
 801f502:	9323      	str	r3, [sp, #140]	; 0x8c
 801f504:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f506:	fb92 f3f3 	sdiv	r3, r2, r3
 801f50a:	9324      	str	r3, [sp, #144]	; 0x90
 801f50c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f50e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801f510:	3b01      	subs	r3, #1
 801f512:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f516:	930d      	str	r3, [sp, #52]	; 0x34
 801f518:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f51a:	bf08      	it	eq
 801f51c:	4613      	moveq	r3, r2
 801f51e:	ee16 6a90 	vmov	r6, s13
 801f522:	9309      	str	r3, [sp, #36]	; 0x24
 801f524:	eeb0 3a67 	vmov.f32	s6, s15
 801f528:	eef0 2a47 	vmov.f32	s5, s14
 801f52c:	e6c3      	b.n	801f2b6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801f52e:	2900      	cmp	r1, #0
 801f530:	f43f af4d 	beq.w	801f3ce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801f534:	eb0a 0003 	add.w	r0, sl, r3
 801f538:	0843      	lsrs	r3, r0, #1
 801f53a:	07c0      	lsls	r0, r0, #31
 801f53c:	5cfb      	ldrb	r3, [r7, r3]
 801f53e:	bf54      	ite	pl
 801f540:	f003 030f 	andpl.w	r3, r3, #15
 801f544:	111b      	asrmi	r3, r3, #4
 801f546:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801f54a:	b2db      	uxtb	r3, r3
 801f54c:	930b      	str	r3, [sp, #44]	; 0x2c
 801f54e:	e73e      	b.n	801f3ce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801f550:	f8b8 e000 	ldrh.w	lr, [r8]
 801f554:	fa1f fb83 	uxth.w	fp, r3
 801f558:	ea4f 202e 	mov.w	r0, lr, asr #8
 801f55c:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801f560:	43db      	mvns	r3, r3
 801f562:	b2db      	uxtb	r3, r3
 801f564:	fb11 f10b 	smulbb	r1, r1, fp
 801f568:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801f56c:	fb00 1003 	mla	r0, r0, r3, r1
 801f570:	fa5f fc8c 	uxtb.w	ip, ip
 801f574:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801f578:	b2d2      	uxtb	r2, r2
 801f57a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801f57e:	b280      	uxth	r0, r0
 801f580:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801f584:	fb1c fc0b 	smulbb	ip, ip, fp
 801f588:	fa5f fe8e 	uxtb.w	lr, lr
 801f58c:	fb12 fb0b 	smulbb	fp, r2, fp
 801f590:	fb01 cc03 	mla	ip, r1, r3, ip
 801f594:	fb0e bb03 	mla	fp, lr, r3, fp
 801f598:	1c43      	adds	r3, r0, #1
 801f59a:	fa1f fc8c 	uxth.w	ip, ip
 801f59e:	fa1f fb8b 	uxth.w	fp, fp
 801f5a2:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801f5a6:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 801f5aa:	f10c 0101 	add.w	r1, ip, #1
 801f5ae:	f10b 0001 	add.w	r0, fp, #1
 801f5b2:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801f5b6:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801f5ba:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801f5be:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801f5c2:	4318      	orrs	r0, r3
 801f5c4:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801f5c8:	ea40 000c 	orr.w	r0, r0, ip
 801f5cc:	f8a8 0000 	strh.w	r0, [r8]
 801f5d0:	e734      	b.n	801f43c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801f5d2:	f113 0b01 	adds.w	fp, r3, #1
 801f5d6:	f53f af31 	bmi.w	801f43c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801f5da:	45dc      	cmp	ip, fp
 801f5dc:	f6ff af2e 	blt.w	801f43c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801f5e0:	f110 0b01 	adds.w	fp, r0, #1
 801f5e4:	f53f af2a 	bmi.w	801f43c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801f5e8:	45de      	cmp	lr, fp
 801f5ea:	f6ff af27 	blt.w	801f43c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801f5ee:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801f5f0:	9302      	str	r3, [sp, #8]
 801f5f2:	fa0f f38e 	sxth.w	r3, lr
 801f5f6:	9301      	str	r3, [sp, #4]
 801f5f8:	fa0f f38c 	sxth.w	r3, ip
 801f5fc:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801f600:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801f604:	9300      	str	r3, [sp, #0]
 801f606:	463a      	mov	r2, r7
 801f608:	4653      	mov	r3, sl
 801f60a:	4641      	mov	r1, r8
 801f60c:	9815      	ldr	r0, [sp, #84]	; 0x54
 801f60e:	f7ff fd4d 	bl	801f0ac <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 801f612:	e713      	b.n	801f43c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801f614:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801f616:	1422      	asrs	r2, r4, #16
 801f618:	1433      	asrs	r3, r6, #16
 801f61a:	fb05 2303 	mla	r3, r5, r3, r2
 801f61e:	085a      	lsrs	r2, r3, #1
 801f620:	07dd      	lsls	r5, r3, #31
 801f622:	5cba      	ldrb	r2, [r7, r2]
 801f624:	bf54      	ite	pl
 801f626:	f002 020f 	andpl.w	r2, r2, #15
 801f62a:	1112      	asrmi	r2, r2, #4
 801f62c:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801f630:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801f634:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801f638:	b2d2      	uxtb	r2, r2
 801f63a:	2900      	cmp	r1, #0
 801f63c:	d076      	beq.n	801f72c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801f63e:	f103 0e01 	add.w	lr, r3, #1
 801f642:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 801f646:	f01e 0f01 	tst.w	lr, #1
 801f64a:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801f64e:	bf0c      	ite	eq
 801f650:	f00c 0c0f 	andeq.w	ip, ip, #15
 801f654:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 801f658:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801f65c:	fa5f f58c 	uxtb.w	r5, ip
 801f660:	9512      	str	r5, [sp, #72]	; 0x48
 801f662:	b300      	cbz	r0, 801f6a6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801f664:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801f666:	442b      	add	r3, r5
 801f668:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801f66c:	07dd      	lsls	r5, r3, #31
 801f66e:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801f672:	bf54      	ite	pl
 801f674:	f00c 0c0f 	andpl.w	ip, ip, #15
 801f678:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801f67c:	3301      	adds	r3, #1
 801f67e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801f682:	fa5f f58c 	uxtb.w	r5, ip
 801f686:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801f68a:	950c      	str	r5, [sp, #48]	; 0x30
 801f68c:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801f690:	07dd      	lsls	r5, r3, #31
 801f692:	bf54      	ite	pl
 801f694:	f00c 0c0f 	andpl.w	ip, ip, #15
 801f698:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801f69c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801f6a0:	fa5f f38c 	uxtb.w	r3, ip
 801f6a4:	9313      	str	r3, [sp, #76]	; 0x4c
 801f6a6:	b289      	uxth	r1, r1
 801f6a8:	b280      	uxth	r0, r0
 801f6aa:	fb01 f300 	mul.w	r3, r1, r0
 801f6ae:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 801f6b2:	0109      	lsls	r1, r1, #4
 801f6b4:	b280      	uxth	r0, r0
 801f6b6:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 801f6ba:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801f6bc:	1ac9      	subs	r1, r1, r3
 801f6be:	ebac 0c00 	sub.w	ip, ip, r0
 801f6c2:	b289      	uxth	r1, r1
 801f6c4:	4369      	muls	r1, r5
 801f6c6:	fa1f fc8c 	uxth.w	ip, ip
 801f6ca:	fb02 120c 	mla	r2, r2, ip, r1
 801f6ce:	990c      	ldr	r1, [sp, #48]	; 0x30
 801f6d0:	fb00 2001 	mla	r0, r0, r1, r2
 801f6d4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801f6d6:	fb03 0302 	mla	r3, r3, r2, r0
 801f6da:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f6de:	b1d3      	cbz	r3, 801f716 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 801f6e0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801f6e2:	4353      	muls	r3, r2
 801f6e4:	1c5a      	adds	r2, r3, #1
 801f6e6:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801f6ea:	4a0f      	ldr	r2, [pc, #60]	; (801f728 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 801f6ec:	121b      	asrs	r3, r3, #8
 801f6ee:	6812      	ldr	r2, [r2, #0]
 801f6f0:	2bff      	cmp	r3, #255	; 0xff
 801f6f2:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801f6f6:	d12d      	bne.n	801f754 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801f6f8:	0953      	lsrs	r3, r2, #5
 801f6fa:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801f6fe:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f702:	f02c 0c07 	bic.w	ip, ip, #7
 801f706:	ea43 0c0c 	orr.w	ip, r3, ip
 801f70a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801f70e:	ea4c 0202 	orr.w	r2, ip, r2
 801f712:	f8a8 2000 	strh.w	r2, [r8]
 801f716:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801f718:	441c      	add	r4, r3
 801f71a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f71c:	f108 0802 	add.w	r8, r8, #2
 801f720:	441e      	add	r6, r3
 801f722:	f10b 3bff 	add.w	fp, fp, #4294967295
 801f726:	e6ba      	b.n	801f49e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 801f728:	200155c4 	.word	0x200155c4
 801f72c:	2800      	cmp	r0, #0
 801f72e:	d0ba      	beq.n	801f6a6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801f730:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801f732:	442b      	add	r3, r5
 801f734:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801f738:	07db      	lsls	r3, r3, #31
 801f73a:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801f73e:	bf54      	ite	pl
 801f740:	f00c 0c0f 	andpl.w	ip, ip, #15
 801f744:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801f748:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801f74c:	fa5f f38c 	uxtb.w	r3, ip
 801f750:	930c      	str	r3, [sp, #48]	; 0x30
 801f752:	e7a8      	b.n	801f6a6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801f754:	f8b8 e000 	ldrh.w	lr, [r8]
 801f758:	fa1f fa83 	uxth.w	sl, r3
 801f75c:	ea4f 202e 	mov.w	r0, lr, asr #8
 801f760:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801f764:	43db      	mvns	r3, r3
 801f766:	b2db      	uxtb	r3, r3
 801f768:	fb11 f10a 	smulbb	r1, r1, sl
 801f76c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801f770:	fb00 1003 	mla	r0, r0, r3, r1
 801f774:	b2d2      	uxtb	r2, r2
 801f776:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801f77a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801f77e:	fa5f fe8e 	uxtb.w	lr, lr
 801f782:	fb12 f20a 	smulbb	r2, r2, sl
 801f786:	fb0e 2203 	mla	r2, lr, r3, r2
 801f78a:	fa5f fc8c 	uxtb.w	ip, ip
 801f78e:	b280      	uxth	r0, r0
 801f790:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801f794:	b292      	uxth	r2, r2
 801f796:	fb1c fc0a 	smulbb	ip, ip, sl
 801f79a:	fb01 cc03 	mla	ip, r1, r3, ip
 801f79e:	1c43      	adds	r3, r0, #1
 801f7a0:	1c51      	adds	r1, r2, #1
 801f7a2:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801f7a6:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 801f7aa:	fa1f fc8c 	uxth.w	ip, ip
 801f7ae:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801f7b2:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801f7b6:	4308      	orrs	r0, r1
 801f7b8:	f10c 0101 	add.w	r1, ip, #1
 801f7bc:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801f7c0:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801f7c4:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801f7c8:	ea40 000c 	orr.w	r0, r0, ip
 801f7cc:	f8a8 0000 	strh.w	r0, [r8]
 801f7d0:	e7a1      	b.n	801f716 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 801f7d2:	b017      	add	sp, #92	; 0x5c
 801f7d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f7d8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 801f7d8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801f7dc:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 801f7e0:	2d00      	cmp	r5, #0
 801f7e2:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801f7e6:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801f7ea:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 801f7ee:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 801f7f2:	fb05 0e03 	mla	lr, r5, r3, r0
 801f7f6:	f2c0 80b0 	blt.w	801f95a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 801f7fa:	45a9      	cmp	r9, r5
 801f7fc:	f340 80ad 	ble.w	801f95a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 801f800:	2800      	cmp	r0, #0
 801f802:	f2c0 80a8 	blt.w	801f956 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 801f806:	4580      	cmp	r8, r0
 801f808:	f340 80a5 	ble.w	801f956 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 801f80c:	ea4f 045e 	mov.w	r4, lr, lsr #1
 801f810:	f01e 0f01 	tst.w	lr, #1
 801f814:	5d16      	ldrb	r6, [r2, r4]
 801f816:	bf0c      	ite	eq
 801f818:	f006 060f 	andeq.w	r6, r6, #15
 801f81c:	1136      	asrne	r6, r6, #4
 801f81e:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801f822:	b2f6      	uxtb	r6, r6
 801f824:	1c44      	adds	r4, r0, #1
 801f826:	f100 809b 	bmi.w	801f960 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 801f82a:	45a0      	cmp	r8, r4
 801f82c:	f340 8098 	ble.w	801f960 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 801f830:	2f00      	cmp	r7, #0
 801f832:	f000 8097 	beq.w	801f964 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 801f836:	f10e 0a01 	add.w	sl, lr, #1
 801f83a:	ea4f 045a 	mov.w	r4, sl, lsr #1
 801f83e:	f01a 0f01 	tst.w	sl, #1
 801f842:	5d14      	ldrb	r4, [r2, r4]
 801f844:	bf0c      	ite	eq
 801f846:	f004 040f 	andeq.w	r4, r4, #15
 801f84a:	1124      	asrne	r4, r4, #4
 801f84c:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801f850:	b2e4      	uxtb	r4, r4
 801f852:	3501      	adds	r5, #1
 801f854:	f100 808a 	bmi.w	801f96c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 801f858:	45a9      	cmp	r9, r5
 801f85a:	f340 8087 	ble.w	801f96c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 801f85e:	f1bc 0f00 	cmp.w	ip, #0
 801f862:	f000 8086 	beq.w	801f972 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 801f866:	2800      	cmp	r0, #0
 801f868:	db7e      	blt.n	801f968 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 801f86a:	4580      	cmp	r8, r0
 801f86c:	dd7c      	ble.n	801f968 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 801f86e:	eb03 090e 	add.w	r9, r3, lr
 801f872:	ea4f 0559 	mov.w	r5, r9, lsr #1
 801f876:	f019 0f01 	tst.w	r9, #1
 801f87a:	5d55      	ldrb	r5, [r2, r5]
 801f87c:	bf0c      	ite	eq
 801f87e:	f005 050f 	andeq.w	r5, r5, #15
 801f882:	112d      	asrne	r5, r5, #4
 801f884:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 801f888:	b2ed      	uxtb	r5, r5
 801f88a:	3001      	adds	r0, #1
 801f88c:	d474      	bmi.n	801f978 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801f88e:	4580      	cmp	r8, r0
 801f890:	dd72      	ble.n	801f978 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801f892:	2f00      	cmp	r7, #0
 801f894:	d072      	beq.n	801f97c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 801f896:	3301      	adds	r3, #1
 801f898:	449e      	add	lr, r3
 801f89a:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801f89e:	f01e 0f01 	tst.w	lr, #1
 801f8a2:	5cd0      	ldrb	r0, [r2, r3]
 801f8a4:	bf0c      	ite	eq
 801f8a6:	f000 000f 	andeq.w	r0, r0, #15
 801f8aa:	1100      	asrne	r0, r0, #4
 801f8ac:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801f8b0:	b2c3      	uxtb	r3, r0
 801f8b2:	b2ba      	uxth	r2, r7
 801f8b4:	fa1f fc8c 	uxth.w	ip, ip
 801f8b8:	fb02 f00c 	mul.w	r0, r2, ip
 801f8bc:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 801f8c0:	0112      	lsls	r2, r2, #4
 801f8c2:	fa1f fc8c 	uxth.w	ip, ip
 801f8c6:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 801f8ca:	1a12      	subs	r2, r2, r0
 801f8cc:	eba7 070c 	sub.w	r7, r7, ip
 801f8d0:	b292      	uxth	r2, r2
 801f8d2:	b2bf      	uxth	r7, r7
 801f8d4:	4362      	muls	r2, r4
 801f8d6:	fb06 2207 	mla	r2, r6, r7, r2
 801f8da:	fb0c 2505 	mla	r5, ip, r5, r2
 801f8de:	fb00 5303 	mla	r3, r0, r3, r5
 801f8e2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f8e6:	b3a3      	cbz	r3, 801f952 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 801f8e8:	4a25      	ldr	r2, [pc, #148]	; (801f980 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 801f8ea:	880e      	ldrh	r6, [r1, #0]
 801f8ec:	6815      	ldr	r5, [r2, #0]
 801f8ee:	1234      	asrs	r4, r6, #8
 801f8f0:	b29a      	uxth	r2, r3
 801f8f2:	f3c5 4007 	ubfx	r0, r5, #16, #8
 801f8f6:	43db      	mvns	r3, r3
 801f8f8:	b2db      	uxtb	r3, r3
 801f8fa:	fb10 f002 	smulbb	r0, r0, r2
 801f8fe:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801f902:	fb04 0403 	mla	r4, r4, r3, r0
 801f906:	f3c5 2707 	ubfx	r7, r5, #8, #8
 801f90a:	10f0      	asrs	r0, r6, #3
 801f90c:	b2ed      	uxtb	r5, r5
 801f90e:	00f6      	lsls	r6, r6, #3
 801f910:	fb17 f702 	smulbb	r7, r7, r2
 801f914:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801f918:	fb15 f202 	smulbb	r2, r5, r2
 801f91c:	b2f6      	uxtb	r6, r6
 801f91e:	b2a4      	uxth	r4, r4
 801f920:	fb00 7003 	mla	r0, r0, r3, r7
 801f924:	fb06 2303 	mla	r3, r6, r3, r2
 801f928:	b29a      	uxth	r2, r3
 801f92a:	1c63      	adds	r3, r4, #1
 801f92c:	b280      	uxth	r0, r0
 801f92e:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801f932:	1c53      	adds	r3, r2, #1
 801f934:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f938:	1c42      	adds	r2, r0, #1
 801f93a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801f93e:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801f942:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801f946:	0940      	lsrs	r0, r0, #5
 801f948:	4323      	orrs	r3, r4
 801f94a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801f94e:	4303      	orrs	r3, r0
 801f950:	800b      	strh	r3, [r1, #0]
 801f952:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801f956:	2600      	movs	r6, #0
 801f958:	e764      	b.n	801f824 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 801f95a:	2400      	movs	r4, #0
 801f95c:	4626      	mov	r6, r4
 801f95e:	e778      	b.n	801f852 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801f960:	2400      	movs	r4, #0
 801f962:	e776      	b.n	801f852 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801f964:	463c      	mov	r4, r7
 801f966:	e774      	b.n	801f852 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801f968:	2500      	movs	r5, #0
 801f96a:	e78e      	b.n	801f88a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 801f96c:	2300      	movs	r3, #0
 801f96e:	461d      	mov	r5, r3
 801f970:	e79f      	b.n	801f8b2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801f972:	4663      	mov	r3, ip
 801f974:	4665      	mov	r5, ip
 801f976:	e79c      	b.n	801f8b2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801f978:	2300      	movs	r3, #0
 801f97a:	e79a      	b.n	801f8b2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801f97c:	463b      	mov	r3, r7
 801f97e:	e798      	b.n	801f8b2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801f980:	200155c4 	.word	0x200155c4

0801f984 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f984:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f988:	b093      	sub	sp, #76	; 0x4c
 801f98a:	461d      	mov	r5, r3
 801f98c:	920c      	str	r2, [sp, #48]	; 0x30
 801f98e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801f990:	9107      	str	r1, [sp, #28]
 801f992:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801f996:	9011      	str	r0, [sp, #68]	; 0x44
 801f998:	6850      	ldr	r0, [r2, #4]
 801f99a:	6812      	ldr	r2, [r2, #0]
 801f99c:	fb00 1303 	mla	r3, r0, r3, r1
 801f9a0:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801f9a4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f9a6:	689b      	ldr	r3, [r3, #8]
 801f9a8:	3301      	adds	r3, #1
 801f9aa:	f023 0301 	bic.w	r3, r3, #1
 801f9ae:	9306      	str	r3, [sp, #24]
 801f9b0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f9b2:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801f9b6:	681f      	ldr	r7, [r3, #0]
 801f9b8:	9b07      	ldr	r3, [sp, #28]
 801f9ba:	2b00      	cmp	r3, #0
 801f9bc:	dc03      	bgt.n	801f9c6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801f9be:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f9c0:	2b00      	cmp	r3, #0
 801f9c2:	f340 8267 	ble.w	801fe94 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 801f9c6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f9c8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f9cc:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f9d0:	1e48      	subs	r0, r1, #1
 801f9d2:	f102 3cff 	add.w	ip, r2, #4294967295
 801f9d6:	2d00      	cmp	r5, #0
 801f9d8:	f340 80b8 	ble.w	801fb4c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801f9dc:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801f9e0:	ea4f 4326 	mov.w	r3, r6, asr #16
 801f9e4:	d406      	bmi.n	801f9f4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801f9e6:	4586      	cmp	lr, r0
 801f9e8:	da04      	bge.n	801f9f4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801f9ea:	2b00      	cmp	r3, #0
 801f9ec:	db02      	blt.n	801f9f4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801f9ee:	4563      	cmp	r3, ip
 801f9f0:	f2c0 80ad 	blt.w	801fb4e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 801f9f4:	f11e 0e01 	adds.w	lr, lr, #1
 801f9f8:	f100 80a0 	bmi.w	801fb3c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801f9fc:	4571      	cmp	r1, lr
 801f9fe:	f2c0 809d 	blt.w	801fb3c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801fa02:	3301      	adds	r3, #1
 801fa04:	f100 809a 	bmi.w	801fb3c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801fa08:	429a      	cmp	r2, r3
 801fa0a:	f2c0 8097 	blt.w	801fb3c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801fa0e:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 801fa12:	9509      	str	r5, [sp, #36]	; 0x24
 801fa14:	46c8      	mov	r8, r9
 801fa16:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fa18:	2b00      	cmp	r3, #0
 801fa1a:	f340 80b6 	ble.w	801fb8a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 801fa1e:	f3c4 3303 	ubfx	r3, r4, #12, #4
 801fa22:	9308      	str	r3, [sp, #32]
 801fa24:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801fa26:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801fa2a:	1423      	asrs	r3, r4, #16
 801fa2c:	ea4f 4026 	mov.w	r0, r6, asr #16
 801fa30:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801fa34:	f100 813e 	bmi.w	801fcb4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801fa38:	f10c 3bff 	add.w	fp, ip, #4294967295
 801fa3c:	455b      	cmp	r3, fp
 801fa3e:	f280 8139 	bge.w	801fcb4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801fa42:	2800      	cmp	r0, #0
 801fa44:	f2c0 8136 	blt.w	801fcb4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801fa48:	f10e 3bff 	add.w	fp, lr, #4294967295
 801fa4c:	4558      	cmp	r0, fp
 801fa4e:	f280 8131 	bge.w	801fcb4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801fa52:	9a06      	ldr	r2, [sp, #24]
 801fa54:	fb00 3302 	mla	r3, r0, r2, r3
 801fa58:	0858      	lsrs	r0, r3, #1
 801fa5a:	07da      	lsls	r2, r3, #31
 801fa5c:	f817 c000 	ldrb.w	ip, [r7, r0]
 801fa60:	9a08      	ldr	r2, [sp, #32]
 801fa62:	bf54      	ite	pl
 801fa64:	f00c 0c0f 	andpl.w	ip, ip, #15
 801fa68:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801fa6c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801fa70:	fa5f fc8c 	uxtb.w	ip, ip
 801fa74:	2a00      	cmp	r2, #0
 801fa76:	f000 80cb 	beq.w	801fc10 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801fa7a:	1c58      	adds	r0, r3, #1
 801fa7c:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801fa80:	07c0      	lsls	r0, r0, #31
 801fa82:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801fa86:	bf54      	ite	pl
 801fa88:	f00e 0e0f 	andpl.w	lr, lr, #15
 801fa8c:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801fa90:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801fa94:	fa5f fe8e 	uxtb.w	lr, lr
 801fa98:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 801fa9c:	b1b9      	cbz	r1, 801face <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801fa9e:	4453      	add	r3, sl
 801faa0:	0858      	lsrs	r0, r3, #1
 801faa2:	07da      	lsls	r2, r3, #31
 801faa4:	5c38      	ldrb	r0, [r7, r0]
 801faa6:	bf54      	ite	pl
 801faa8:	f000 000f 	andpl.w	r0, r0, #15
 801faac:	1100      	asrmi	r0, r0, #4
 801faae:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801fab2:	b2c0      	uxtb	r0, r0
 801fab4:	900a      	str	r0, [sp, #40]	; 0x28
 801fab6:	1c58      	adds	r0, r3, #1
 801fab8:	0843      	lsrs	r3, r0, #1
 801faba:	07c2      	lsls	r2, r0, #31
 801fabc:	5cfb      	ldrb	r3, [r7, r3]
 801fabe:	bf54      	ite	pl
 801fac0:	f003 030f 	andpl.w	r3, r3, #15
 801fac4:	111b      	asrmi	r3, r3, #4
 801fac6:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801faca:	b2db      	uxtb	r3, r3
 801facc:	930e      	str	r3, [sp, #56]	; 0x38
 801face:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801fad2:	b289      	uxth	r1, r1
 801fad4:	fb02 f301 	mul.w	r3, r2, r1
 801fad8:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801fadc:	0112      	lsls	r2, r2, #4
 801fade:	b289      	uxth	r1, r1
 801fae0:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801fae4:	1a40      	subs	r0, r0, r1
 801fae6:	fa1f fe80 	uxth.w	lr, r0
 801faea:	1ad2      	subs	r2, r2, r3
 801faec:	980d      	ldr	r0, [sp, #52]	; 0x34
 801faee:	b292      	uxth	r2, r2
 801faf0:	4342      	muls	r2, r0
 801faf2:	fb0c 2c0e 	mla	ip, ip, lr, r2
 801faf6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801faf8:	fb01 c102 	mla	r1, r1, r2, ip
 801fafc:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801fafe:	fb03 1302 	mla	r3, r3, r2, r1
 801fb02:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801fb06:	2bff      	cmp	r3, #255	; 0xff
 801fb08:	f040 8093 	bne.w	801fc32 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 801fb0c:	4bbe      	ldr	r3, [pc, #760]	; (801fe08 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801fb0e:	681a      	ldr	r2, [r3, #0]
 801fb10:	4bbe      	ldr	r3, [pc, #760]	; (801fe0c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 801fb12:	0951      	lsrs	r1, r2, #5
 801fb14:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 801fb18:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801fb1c:	430b      	orrs	r3, r1
 801fb1e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801fb22:	4313      	orrs	r3, r2
 801fb24:	f8a8 3000 	strh.w	r3, [r8]
 801fb28:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801fb2a:	441c      	add	r4, r3
 801fb2c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801fb2e:	441e      	add	r6, r3
 801fb30:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fb32:	3b01      	subs	r3, #1
 801fb34:	f108 0802 	add.w	r8, r8, #2
 801fb38:	9309      	str	r3, [sp, #36]	; 0x24
 801fb3a:	e76c      	b.n	801fa16 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801fb3c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801fb3e:	441c      	add	r4, r3
 801fb40:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801fb42:	3d01      	subs	r5, #1
 801fb44:	441e      	add	r6, r3
 801fb46:	f109 0902 	add.w	r9, r9, #2
 801fb4a:	e744      	b.n	801f9d6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801fb4c:	d021      	beq.n	801fb92 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801fb4e:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801fb50:	1e6b      	subs	r3, r5, #1
 801fb52:	fb00 4003 	mla	r0, r0, r3, r4
 801fb56:	1400      	asrs	r0, r0, #16
 801fb58:	f53f af59 	bmi.w	801fa0e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801fb5c:	3901      	subs	r1, #1
 801fb5e:	4288      	cmp	r0, r1
 801fb60:	f6bf af55 	bge.w	801fa0e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801fb64:	9920      	ldr	r1, [sp, #128]	; 0x80
 801fb66:	fb01 6303 	mla	r3, r1, r3, r6
 801fb6a:	141b      	asrs	r3, r3, #16
 801fb6c:	f53f af4f 	bmi.w	801fa0e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801fb70:	3a01      	subs	r2, #1
 801fb72:	4293      	cmp	r3, r2
 801fb74:	f6bf af4b 	bge.w	801fa0e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801fb78:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801fb7c:	9308      	str	r3, [sp, #32]
 801fb7e:	46a8      	mov	r8, r5
 801fb80:	46ce      	mov	lr, r9
 801fb82:	f1b8 0f00 	cmp.w	r8, #0
 801fb86:	f300 80b5 	bgt.w	801fcf4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801fb8a:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801fb8e:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801fb92:	9b07      	ldr	r3, [sp, #28]
 801fb94:	2b00      	cmp	r3, #0
 801fb96:	f340 817d 	ble.w	801fe94 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 801fb9a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801fb9e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801fba2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801fba6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801fba8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801fbac:	ee31 1a05 	vadd.f32	s2, s2, s10
 801fbb0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801fbb4:	eef0 6a62 	vmov.f32	s13, s5
 801fbb8:	ee61 7a27 	vmul.f32	s15, s2, s15
 801fbbc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fbc0:	ee77 2a62 	vsub.f32	s5, s14, s5
 801fbc4:	ee16 4a90 	vmov	r4, s13
 801fbc8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801fbcc:	eef0 6a43 	vmov.f32	s13, s6
 801fbd0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801fbd4:	ee12 2a90 	vmov	r2, s5
 801fbd8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801fbdc:	fb92 f3f3 	sdiv	r3, r2, r3
 801fbe0:	ee13 2a10 	vmov	r2, s6
 801fbe4:	931f      	str	r3, [sp, #124]	; 0x7c
 801fbe6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801fbe8:	fb92 f3f3 	sdiv	r3, r2, r3
 801fbec:	9320      	str	r3, [sp, #128]	; 0x80
 801fbee:	9b07      	ldr	r3, [sp, #28]
 801fbf0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801fbf2:	3b01      	subs	r3, #1
 801fbf4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fbf8:	9307      	str	r3, [sp, #28]
 801fbfa:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801fbfc:	ee16 6a90 	vmov	r6, s13
 801fc00:	bf14      	ite	ne
 801fc02:	461d      	movne	r5, r3
 801fc04:	4615      	moveq	r5, r2
 801fc06:	eeb0 3a67 	vmov.f32	s6, s15
 801fc0a:	eef0 2a47 	vmov.f32	s5, s14
 801fc0e:	e6d3      	b.n	801f9b8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801fc10:	2900      	cmp	r1, #0
 801fc12:	f43f af5c 	beq.w	801face <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801fc16:	eb0a 0003 	add.w	r0, sl, r3
 801fc1a:	0843      	lsrs	r3, r0, #1
 801fc1c:	07c0      	lsls	r0, r0, #31
 801fc1e:	5cfb      	ldrb	r3, [r7, r3]
 801fc20:	bf54      	ite	pl
 801fc22:	f003 030f 	andpl.w	r3, r3, #15
 801fc26:	111b      	asrmi	r3, r3, #4
 801fc28:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801fc2c:	b2db      	uxtb	r3, r3
 801fc2e:	930a      	str	r3, [sp, #40]	; 0x28
 801fc30:	e74d      	b.n	801face <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801fc32:	2b00      	cmp	r3, #0
 801fc34:	f43f af78 	beq.w	801fb28 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801fc38:	4a73      	ldr	r2, [pc, #460]	; (801fe08 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801fc3a:	f8b8 c000 	ldrh.w	ip, [r8]
 801fc3e:	6810      	ldr	r0, [r2, #0]
 801fc40:	fa1f fe83 	uxth.w	lr, r3
 801fc44:	ea4f 212c 	mov.w	r1, ip, asr #8
 801fc48:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801fc4c:	43db      	mvns	r3, r3
 801fc4e:	b2db      	uxtb	r3, r3
 801fc50:	fb12 f20e 	smulbb	r2, r2, lr
 801fc54:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801fc58:	fb01 2103 	mla	r1, r1, r3, r2
 801fc5c:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 801fc60:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801fc64:	b2c0      	uxtb	r0, r0
 801fc66:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801fc6a:	fb1b fb0e 	smulbb	fp, fp, lr
 801fc6e:	b289      	uxth	r1, r1
 801fc70:	fb10 fe0e 	smulbb	lr, r0, lr
 801fc74:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801fc78:	fa5f fc8c 	uxtb.w	ip, ip
 801fc7c:	fb02 b203 	mla	r2, r2, r3, fp
 801fc80:	1c48      	adds	r0, r1, #1
 801fc82:	fb0c e303 	mla	r3, ip, r3, lr
 801fc86:	b292      	uxth	r2, r2
 801fc88:	b29b      	uxth	r3, r3
 801fc8a:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 801fc8e:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 801fc92:	f102 0b01 	add.w	fp, r2, #1
 801fc96:	1c59      	adds	r1, r3, #1
 801fc98:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801fc9c:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801fca0:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801fca4:	0952      	lsrs	r2, r2, #5
 801fca6:	4301      	orrs	r1, r0
 801fca8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801fcac:	4311      	orrs	r1, r2
 801fcae:	f8a8 1000 	strh.w	r1, [r8]
 801fcb2:	e739      	b.n	801fb28 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801fcb4:	f113 0b01 	adds.w	fp, r3, #1
 801fcb8:	f53f af36 	bmi.w	801fb28 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801fcbc:	45dc      	cmp	ip, fp
 801fcbe:	f6ff af33 	blt.w	801fb28 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801fcc2:	f110 0b01 	adds.w	fp, r0, #1
 801fcc6:	f53f af2f 	bmi.w	801fb28 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801fcca:	45de      	cmp	lr, fp
 801fccc:	f6ff af2c 	blt.w	801fb28 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801fcd0:	9a08      	ldr	r2, [sp, #32]
 801fcd2:	9302      	str	r3, [sp, #8]
 801fcd4:	fa0f f38e 	sxth.w	r3, lr
 801fcd8:	9301      	str	r3, [sp, #4]
 801fcda:	fa0f f38c 	sxth.w	r3, ip
 801fcde:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801fce2:	9105      	str	r1, [sp, #20]
 801fce4:	9300      	str	r3, [sp, #0]
 801fce6:	463a      	mov	r2, r7
 801fce8:	4653      	mov	r3, sl
 801fcea:	4641      	mov	r1, r8
 801fcec:	9811      	ldr	r0, [sp, #68]	; 0x44
 801fcee:	f7ff fd73 	bl	801f7d8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 801fcf2:	e719      	b.n	801fb28 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801fcf4:	9906      	ldr	r1, [sp, #24]
 801fcf6:	1422      	asrs	r2, r4, #16
 801fcf8:	1433      	asrs	r3, r6, #16
 801fcfa:	fb01 2303 	mla	r3, r1, r3, r2
 801fcfe:	085a      	lsrs	r2, r3, #1
 801fd00:	07d9      	lsls	r1, r3, #31
 801fd02:	5cba      	ldrb	r2, [r7, r2]
 801fd04:	bf54      	ite	pl
 801fd06:	f002 020f 	andpl.w	r2, r2, #15
 801fd0a:	1112      	asrmi	r2, r2, #4
 801fd0c:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801fd10:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801fd14:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801fd18:	b2d2      	uxtb	r2, r2
 801fd1a:	2800      	cmp	r0, #0
 801fd1c:	d062      	beq.n	801fde4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 801fd1e:	f103 0a01 	add.w	sl, r3, #1
 801fd22:	ea4f 015a 	mov.w	r1, sl, lsr #1
 801fd26:	f01a 0f01 	tst.w	sl, #1
 801fd2a:	5c79      	ldrb	r1, [r7, r1]
 801fd2c:	bf0c      	ite	eq
 801fd2e:	f001 010f 	andeq.w	r1, r1, #15
 801fd32:	1109      	asrne	r1, r1, #4
 801fd34:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801fd38:	b2c9      	uxtb	r1, r1
 801fd3a:	910f      	str	r1, [sp, #60]	; 0x3c
 801fd3c:	f1bc 0f00 	cmp.w	ip, #0
 801fd40:	d019      	beq.n	801fd76 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 801fd42:	9908      	ldr	r1, [sp, #32]
 801fd44:	440b      	add	r3, r1
 801fd46:	0859      	lsrs	r1, r3, #1
 801fd48:	f013 0f01 	tst.w	r3, #1
 801fd4c:	5c79      	ldrb	r1, [r7, r1]
 801fd4e:	bf0c      	ite	eq
 801fd50:	f001 010f 	andeq.w	r1, r1, #15
 801fd54:	1109      	asrne	r1, r1, #4
 801fd56:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801fd5a:	b2c9      	uxtb	r1, r1
 801fd5c:	3301      	adds	r3, #1
 801fd5e:	910b      	str	r1, [sp, #44]	; 0x2c
 801fd60:	0859      	lsrs	r1, r3, #1
 801fd62:	07db      	lsls	r3, r3, #31
 801fd64:	5c79      	ldrb	r1, [r7, r1]
 801fd66:	bf54      	ite	pl
 801fd68:	f001 010f 	andpl.w	r1, r1, #15
 801fd6c:	1109      	asrmi	r1, r1, #4
 801fd6e:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801fd72:	b2c9      	uxtb	r1, r1
 801fd74:	9110      	str	r1, [sp, #64]	; 0x40
 801fd76:	b280      	uxth	r0, r0
 801fd78:	fa1f fc8c 	uxth.w	ip, ip
 801fd7c:	fb00 f30c 	mul.w	r3, r0, ip
 801fd80:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 801fd84:	0100      	lsls	r0, r0, #4
 801fd86:	fa1f fc8c 	uxth.w	ip, ip
 801fd8a:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 801fd8e:	eba1 010c 	sub.w	r1, r1, ip
 801fd92:	fa1f fa81 	uxth.w	sl, r1
 801fd96:	1ac0      	subs	r0, r0, r3
 801fd98:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801fd9a:	b280      	uxth	r0, r0
 801fd9c:	4348      	muls	r0, r1
 801fd9e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801fda0:	fb02 020a 	mla	r2, r2, sl, r0
 801fda4:	fb0c 2c01 	mla	ip, ip, r1, r2
 801fda8:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801fdaa:	fb03 c302 	mla	r3, r3, r2, ip
 801fdae:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801fdb2:	2bff      	cmp	r3, #255	; 0xff
 801fdb4:	d12c      	bne.n	801fe10 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 801fdb6:	4b14      	ldr	r3, [pc, #80]	; (801fe08 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801fdb8:	681a      	ldr	r2, [r3, #0]
 801fdba:	4b14      	ldr	r3, [pc, #80]	; (801fe0c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 801fdbc:	0951      	lsrs	r1, r2, #5
 801fdbe:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 801fdc2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801fdc6:	430b      	orrs	r3, r1
 801fdc8:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801fdcc:	4313      	orrs	r3, r2
 801fdce:	f8ae 3000 	strh.w	r3, [lr]
 801fdd2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801fdd4:	441c      	add	r4, r3
 801fdd6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801fdd8:	f10e 0e02 	add.w	lr, lr, #2
 801fddc:	441e      	add	r6, r3
 801fdde:	f108 38ff 	add.w	r8, r8, #4294967295
 801fde2:	e6ce      	b.n	801fb82 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801fde4:	f1bc 0f00 	cmp.w	ip, #0
 801fde8:	d0c5      	beq.n	801fd76 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 801fdea:	9908      	ldr	r1, [sp, #32]
 801fdec:	440b      	add	r3, r1
 801fdee:	0859      	lsrs	r1, r3, #1
 801fdf0:	07db      	lsls	r3, r3, #31
 801fdf2:	5c79      	ldrb	r1, [r7, r1]
 801fdf4:	bf54      	ite	pl
 801fdf6:	f001 010f 	andpl.w	r1, r1, #15
 801fdfa:	1109      	asrmi	r1, r1, #4
 801fdfc:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801fe00:	b2c9      	uxtb	r1, r1
 801fe02:	910b      	str	r1, [sp, #44]	; 0x2c
 801fe04:	e7b7      	b.n	801fd76 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 801fe06:	bf00      	nop
 801fe08:	200155c4 	.word	0x200155c4
 801fe0c:	fffff800 	.word	0xfffff800
 801fe10:	2b00      	cmp	r3, #0
 801fe12:	d0de      	beq.n	801fdd2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801fe14:	4a21      	ldr	r2, [pc, #132]	; (801fe9c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 801fe16:	f8be c000 	ldrh.w	ip, [lr]
 801fe1a:	6810      	ldr	r0, [r2, #0]
 801fe1c:	fa1f fa83 	uxth.w	sl, r3
 801fe20:	ea4f 212c 	mov.w	r1, ip, asr #8
 801fe24:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801fe28:	43db      	mvns	r3, r3
 801fe2a:	b2db      	uxtb	r3, r3
 801fe2c:	fb12 f20a 	smulbb	r2, r2, sl
 801fe30:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801fe34:	fb01 2103 	mla	r1, r1, r3, r2
 801fe38:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 801fe3c:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801fe40:	b2c0      	uxtb	r0, r0
 801fe42:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801fe46:	fa5f fc8c 	uxtb.w	ip, ip
 801fe4a:	fb10 f00a 	smulbb	r0, r0, sl
 801fe4e:	fb0c 0003 	mla	r0, ip, r3, r0
 801fe52:	b289      	uxth	r1, r1
 801fe54:	fb1b fb0a 	smulbb	fp, fp, sl
 801fe58:	b280      	uxth	r0, r0
 801fe5a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801fe5e:	fb02 b203 	mla	r2, r2, r3, fp
 801fe62:	1c4b      	adds	r3, r1, #1
 801fe64:	f100 0b01 	add.w	fp, r0, #1
 801fe68:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801fe6c:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 801fe70:	b292      	uxth	r2, r2
 801fe72:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 801fe76:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801fe7a:	ea4b 0101 	orr.w	r1, fp, r1
 801fe7e:	f102 0b01 	add.w	fp, r2, #1
 801fe82:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801fe86:	0952      	lsrs	r2, r2, #5
 801fe88:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801fe8c:	4311      	orrs	r1, r2
 801fe8e:	f8ae 1000 	strh.w	r1, [lr]
 801fe92:	e79e      	b.n	801fdd2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801fe94:	b013      	add	sp, #76	; 0x4c
 801fe96:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fe9a:	bf00      	nop
 801fe9c:	200155c4 	.word	0x200155c4

0801fea0 <CRC_Lock>:
 801fea0:	b530      	push	{r4, r5, lr}
 801fea2:	4a20      	ldr	r2, [pc, #128]	; (801ff24 <CRC_Lock+0x84>)
 801fea4:	6813      	ldr	r3, [r2, #0]
 801fea6:	f023 0301 	bic.w	r3, r3, #1
 801feaa:	6013      	str	r3, [r2, #0]
 801feac:	4b1e      	ldr	r3, [pc, #120]	; (801ff28 <CRC_Lock+0x88>)
 801feae:	681a      	ldr	r2, [r3, #0]
 801feb0:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 801feb4:	4022      	ands	r2, r4
 801feb6:	f24c 2540 	movw	r5, #49728	; 0xc240
 801feba:	42aa      	cmp	r2, r5
 801febc:	d005      	beq.n	801feca <CRC_Lock+0x2a>
 801febe:	681b      	ldr	r3, [r3, #0]
 801fec0:	f24c 2270 	movw	r2, #49776	; 0xc270
 801fec4:	4023      	ands	r3, r4
 801fec6:	4293      	cmp	r3, r2
 801fec8:	d124      	bne.n	801ff14 <CRC_Lock+0x74>
 801feca:	4b18      	ldr	r3, [pc, #96]	; (801ff2c <CRC_Lock+0x8c>)
 801fecc:	681b      	ldr	r3, [r3, #0]
 801fece:	bb0b      	cbnz	r3, 801ff14 <CRC_Lock+0x74>
 801fed0:	4b17      	ldr	r3, [pc, #92]	; (801ff30 <CRC_Lock+0x90>)
 801fed2:	681a      	ldr	r2, [r3, #0]
 801fed4:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801fed8:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 801fedc:	d00d      	beq.n	801fefa <CRC_Lock+0x5a>
 801fede:	681a      	ldr	r2, [r3, #0]
 801fee0:	f240 4483 	movw	r4, #1155	; 0x483
 801fee4:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801fee8:	42a2      	cmp	r2, r4
 801feea:	d006      	beq.n	801fefa <CRC_Lock+0x5a>
 801feec:	681b      	ldr	r3, [r3, #0]
 801feee:	f240 4285 	movw	r2, #1157	; 0x485
 801fef2:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801fef6:	4293      	cmp	r3, r2
 801fef8:	d10c      	bne.n	801ff14 <CRC_Lock+0x74>
 801fefa:	4b0e      	ldr	r3, [pc, #56]	; (801ff34 <CRC_Lock+0x94>)
 801fefc:	2201      	movs	r2, #1
 801fefe:	601a      	str	r2, [r3, #0]
 801ff00:	681a      	ldr	r2, [r3, #0]
 801ff02:	2a00      	cmp	r2, #0
 801ff04:	d1fc      	bne.n	801ff00 <CRC_Lock+0x60>
 801ff06:	4b0c      	ldr	r3, [pc, #48]	; (801ff38 <CRC_Lock+0x98>)
 801ff08:	6018      	str	r0, [r3, #0]
 801ff0a:	6818      	ldr	r0, [r3, #0]
 801ff0c:	1a43      	subs	r3, r0, r1
 801ff0e:	4258      	negs	r0, r3
 801ff10:	4158      	adcs	r0, r3
 801ff12:	bd30      	pop	{r4, r5, pc}
 801ff14:	4b09      	ldr	r3, [pc, #36]	; (801ff3c <CRC_Lock+0x9c>)
 801ff16:	2201      	movs	r2, #1
 801ff18:	601a      	str	r2, [r3, #0]
 801ff1a:	681a      	ldr	r2, [r3, #0]
 801ff1c:	2a00      	cmp	r2, #0
 801ff1e:	d1fc      	bne.n	801ff1a <CRC_Lock+0x7a>
 801ff20:	4b07      	ldr	r3, [pc, #28]	; (801ff40 <CRC_Lock+0xa0>)
 801ff22:	e7f1      	b.n	801ff08 <CRC_Lock+0x68>
 801ff24:	e0002000 	.word	0xe0002000
 801ff28:	e000ed00 	.word	0xe000ed00
 801ff2c:	e0042000 	.word	0xe0042000
 801ff30:	5c001000 	.word	0x5c001000
 801ff34:	58024c08 	.word	0x58024c08
 801ff38:	58024c00 	.word	0x58024c00
 801ff3c:	40023008 	.word	0x40023008
 801ff40:	40023000 	.word	0x40023000

0801ff44 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 801ff44:	6101      	str	r1, [r0, #16]
 801ff46:	4770      	bx	lr

0801ff48 <_ZN8touchgfx8Gestures4tickEv>:
 801ff48:	7b83      	ldrb	r3, [r0, #14]
 801ff4a:	b14b      	cbz	r3, 801ff60 <_ZN8touchgfx8Gestures4tickEv+0x18>
 801ff4c:	8903      	ldrh	r3, [r0, #8]
 801ff4e:	3301      	adds	r3, #1
 801ff50:	b29b      	uxth	r3, r3
 801ff52:	2b07      	cmp	r3, #7
 801ff54:	8103      	strh	r3, [r0, #8]
 801ff56:	bf81      	itttt	hi
 801ff58:	2300      	movhi	r3, #0
 801ff5a:	8143      	strhhi	r3, [r0, #10]
 801ff5c:	8183      	strhhi	r3, [r0, #12]
 801ff5e:	7383      	strbhi	r3, [r0, #14]
 801ff60:	4770      	bx	lr
	...

0801ff64 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 801ff64:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801ff68:	4698      	mov	r8, r3
 801ff6a:	8883      	ldrh	r3, [r0, #4]
 801ff6c:	f8ad 3006 	strh.w	r3, [sp, #6]
 801ff70:	eba8 0303 	sub.w	r3, r8, r3
 801ff74:	b21b      	sxth	r3, r3
 801ff76:	4604      	mov	r4, r0
 801ff78:	2b00      	cmp	r3, #0
 801ff7a:	4617      	mov	r7, r2
 801ff7c:	4a18      	ldr	r2, [pc, #96]	; (801ffe0 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 801ff7e:	9200      	str	r2, [sp, #0]
 801ff80:	bfb8      	it	lt
 801ff82:	425b      	neglt	r3, r3
 801ff84:	8aa2      	ldrh	r2, [r4, #20]
 801ff86:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 801ff8a:	f8ad 800a 	strh.w	r8, [sp, #10]
 801ff8e:	b21b      	sxth	r3, r3
 801ff90:	460e      	mov	r6, r1
 801ff92:	4293      	cmp	r3, r2
 801ff94:	88c1      	ldrh	r1, [r0, #6]
 801ff96:	f8ad 1008 	strh.w	r1, [sp, #8]
 801ff9a:	f04f 0000 	mov.w	r0, #0
 801ff9e:	f88d 0004 	strb.w	r0, [sp, #4]
 801ffa2:	f8ad 500c 	strh.w	r5, [sp, #12]
 801ffa6:	dc07      	bgt.n	801ffb8 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 801ffa8:	1a69      	subs	r1, r5, r1
 801ffaa:	b209      	sxth	r1, r1
 801ffac:	2900      	cmp	r1, #0
 801ffae:	bfb8      	it	lt
 801ffb0:	4249      	neglt	r1, r1
 801ffb2:	b209      	sxth	r1, r1
 801ffb4:	428a      	cmp	r2, r1
 801ffb6:	da10      	bge.n	801ffda <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 801ffb8:	6920      	ldr	r0, [r4, #16]
 801ffba:	6803      	ldr	r3, [r0, #0]
 801ffbc:	4669      	mov	r1, sp
 801ffbe:	685b      	ldr	r3, [r3, #4]
 801ffc0:	4798      	blx	r3
 801ffc2:	eba8 0606 	sub.w	r6, r8, r6
 801ffc6:	2300      	movs	r3, #0
 801ffc8:	1bef      	subs	r7, r5, r7
 801ffca:	2001      	movs	r0, #1
 801ffcc:	8123      	strh	r3, [r4, #8]
 801ffce:	8166      	strh	r6, [r4, #10]
 801ffd0:	81a7      	strh	r7, [r4, #12]
 801ffd2:	f8a4 8004 	strh.w	r8, [r4, #4]
 801ffd6:	80e5      	strh	r5, [r4, #6]
 801ffd8:	73a0      	strb	r0, [r4, #14]
 801ffda:	b004      	add	sp, #16
 801ffdc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801ffe0:	080243b0 	.word	0x080243b0

0801ffe4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 801ffe4:	b5f0      	push	{r4, r5, r6, r7, lr}
 801ffe6:	461e      	mov	r6, r3
 801ffe8:	1e4b      	subs	r3, r1, #1
 801ffea:	2b01      	cmp	r3, #1
 801ffec:	b085      	sub	sp, #20
 801ffee:	4604      	mov	r4, r0
 801fff0:	460d      	mov	r5, r1
 801fff2:	4617      	mov	r7, r2
 801fff4:	d84b      	bhi.n	802008e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 801fff6:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801fffa:	1cd3      	adds	r3, r2, #3
 801fffc:	b29b      	uxth	r3, r3
 801fffe:	2b06      	cmp	r3, #6
 8020000:	d916      	bls.n	8020030 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 8020002:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 80200a4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8020006:	f8cd c004 	str.w	ip, [sp, #4]
 802000a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 802000e:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8020012:	6900      	ldr	r0, [r0, #16]
 8020014:	f8ad 100c 	strh.w	r1, [sp, #12]
 8020018:	f04f 0c00 	mov.w	ip, #0
 802001c:	f88d c008 	strb.w	ip, [sp, #8]
 8020020:	f8ad 200a 	strh.w	r2, [sp, #10]
 8020024:	f8ad 300e 	strh.w	r3, [sp, #14]
 8020028:	6803      	ldr	r3, [r0, #0]
 802002a:	a901      	add	r1, sp, #4
 802002c:	689b      	ldr	r3, [r3, #8]
 802002e:	4798      	blx	r3
 8020030:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8020034:	1cd3      	adds	r3, r2, #3
 8020036:	b29b      	uxth	r3, r3
 8020038:	2b06      	cmp	r3, #6
 802003a:	d916      	bls.n	802006a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 802003c:	f8df c064 	ldr.w	ip, [pc, #100]	; 80200a4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8020040:	f8cd c004 	str.w	ip, [sp, #4]
 8020044:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8020048:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 802004c:	6920      	ldr	r0, [r4, #16]
 802004e:	f8ad 100c 	strh.w	r1, [sp, #12]
 8020052:	f04f 0c01 	mov.w	ip, #1
 8020056:	f88d c008 	strb.w	ip, [sp, #8]
 802005a:	f8ad 200a 	strh.w	r2, [sp, #10]
 802005e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8020062:	6803      	ldr	r3, [r0, #0]
 8020064:	a901      	add	r1, sp, #4
 8020066:	689b      	ldr	r3, [r3, #8]
 8020068:	4798      	blx	r3
 802006a:	4b0d      	ldr	r3, [pc, #52]	; (80200a0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 802006c:	9301      	str	r3, [sp, #4]
 802006e:	6920      	ldr	r0, [r4, #16]
 8020070:	f88d 5008 	strb.w	r5, [sp, #8]
 8020074:	2300      	movs	r3, #0
 8020076:	f8ad 700a 	strh.w	r7, [sp, #10]
 802007a:	f8ad 600c 	strh.w	r6, [sp, #12]
 802007e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8020082:	6803      	ldr	r3, [r0, #0]
 8020084:	a901      	add	r1, sp, #4
 8020086:	681b      	ldr	r3, [r3, #0]
 8020088:	4798      	blx	r3
 802008a:	b005      	add	sp, #20
 802008c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802008e:	2900      	cmp	r1, #0
 8020090:	d1eb      	bne.n	802006a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8020092:	80a2      	strh	r2, [r4, #4]
 8020094:	80c6      	strh	r6, [r0, #6]
 8020096:	60a1      	str	r1, [r4, #8]
 8020098:	81a1      	strh	r1, [r4, #12]
 802009a:	73a1      	strb	r1, [r4, #14]
 802009c:	e7e5      	b.n	802006a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 802009e:	bf00      	nop
 80200a0:	0802439c 	.word	0x0802439c
 80200a4:	080243c4 	.word	0x080243c4

080200a8 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>:
 80200a8:	10c9      	asrs	r1, r1, #3
 80200aa:	2900      	cmp	r1, #0
 80200ac:	bfb8      	it	lt
 80200ae:	4249      	neglt	r1, r1
 80200b0:	2801      	cmp	r0, #1
 80200b2:	d108      	bne.n	80200c6 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 80200b4:	f3c1 0008 	ubfx	r0, r1, #0, #9
 80200b8:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 80200bc:	4601      	mov	r1, r0
 80200be:	dd02      	ble.n	80200c6 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 80200c0:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
 80200c4:	4770      	bx	lr
 80200c6:	29ff      	cmp	r1, #255	; 0xff
 80200c8:	bfa8      	it	ge
 80200ca:	21ff      	movge	r1, #255	; 0xff
 80200cc:	4608      	mov	r0, r1
 80200ce:	4770      	bx	lr

080200d0 <_ZN8touchgfx10Rasterizer6lineToEii>:
 80200d0:	b410      	push	{r4}
 80200d2:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 80200d6:	429c      	cmp	r4, r3
 80200d8:	d803      	bhi.n	80200e2 <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 80200da:	f85d 4b04 	ldr.w	r4, [sp], #4
 80200de:	f7ef b97d 	b.w	800f3dc <_ZN8touchgfx7Outline6lineToEii>
 80200e2:	f85d 4b04 	ldr.w	r4, [sp], #4
 80200e6:	4770      	bx	lr

080200e8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 80200e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80200ec:	b08b      	sub	sp, #44	; 0x2c
 80200ee:	e9cd 2306 	strd	r2, r3, [sp, #24]
 80200f2:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 80200f6:	9308      	str	r3, [sp, #32]
 80200f8:	4606      	mov	r6, r0
 80200fa:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 80200fe:	9309      	str	r3, [sp, #36]	; 0x24
 8020100:	468a      	mov	sl, r1
 8020102:	f7ef fad8 	bl	800f6b6 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 8020106:	68b5      	ldr	r5, [r6, #8]
 8020108:	4604      	mov	r4, r0
 802010a:	2d00      	cmp	r5, #0
 802010c:	d044      	beq.n	8020198 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 802010e:	6873      	ldr	r3, [r6, #4]
 8020110:	42ab      	cmp	r3, r5
 8020112:	d33d      	bcc.n	8020190 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 8020114:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8020118:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	; 0x34
 802011c:	eb02 0b03 	add.w	fp, r2, r3
 8020120:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 8020124:	fb02 1203 	mla	r2, r2, r3, r1
 8020128:	9205      	str	r2, [sp, #20]
 802012a:	1e6a      	subs	r2, r5, #1
 802012c:	9204      	str	r2, [sp, #16]
 802012e:	f04f 0800 	mov.w	r8, #0
 8020132:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 8020136:	f9b4 7000 	ldrsh.w	r7, [r4]
 802013a:	454b      	cmp	r3, r9
 802013c:	463a      	mov	r2, r7
 802013e:	d008      	beq.n	8020152 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 8020140:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	; 0x34
 8020144:	eb03 0b09 	add.w	fp, r3, r9
 8020148:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 802014c:	fb03 1309 	mla	r3, r3, r9, r1
 8020150:	9305      	str	r3, [sp, #20]
 8020152:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8020156:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 802015a:	4498      	add	r8, r3
 802015c:	9b04      	ldr	r3, [sp, #16]
 802015e:	3b01      	subs	r3, #1
 8020160:	9304      	str	r3, [sp, #16]
 8020162:	9b04      	ldr	r3, [sp, #16]
 8020164:	3301      	adds	r3, #1
 8020166:	d015      	beq.n	8020194 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 8020168:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 802016c:	42bb      	cmp	r3, r7
 802016e:	d117      	bne.n	80201a0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 8020170:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 8020174:	9b04      	ldr	r3, [sp, #16]
 8020176:	4548      	cmp	r0, r9
 8020178:	f103 33ff 	add.w	r3, r3, #4294967295
 802017c:	d17f      	bne.n	802027e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 802017e:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 8020182:	4401      	add	r1, r0
 8020184:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8020188:	4480      	add	r8, r0
 802018a:	e7e9      	b.n	8020160 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 802018c:	461f      	mov	r7, r3
 802018e:	e044      	b.n	802021a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 8020190:	2000      	movs	r0, #0
 8020192:	e002      	b.n	802019a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 8020194:	2900      	cmp	r1, #0
 8020196:	d16f      	bne.n	8020278 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 8020198:	2001      	movs	r0, #1
 802019a:	b00b      	add	sp, #44	; 0x2c
 802019c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80201a0:	2900      	cmp	r1, #0
 80201a2:	d030      	beq.n	8020206 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 80201a4:	2f00      	cmp	r7, #0
 80201a6:	db29      	blt.n	80201fc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 80201a8:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 80201ac:	42bb      	cmp	r3, r7
 80201ae:	dd25      	ble.n	80201fc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 80201b0:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 80201b4:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 80201b8:	f7ff ff76 	bl	80200a8 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 80201bc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80201be:	fb10 f003 	smulbb	r0, r0, r3
 80201c2:	b280      	uxth	r0, r0
 80201c4:	1c41      	adds	r1, r0, #1
 80201c6:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 80201ca:	1209      	asrs	r1, r1, #8
 80201cc:	f011 0fff 	tst.w	r1, #255	; 0xff
 80201d0:	d014      	beq.n	80201fc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 80201d2:	9808      	ldr	r0, [sp, #32]
 80201d4:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 80201d6:	b2c9      	uxtb	r1, r1
 80201d8:	b2ba      	uxth	r2, r7
 80201da:	9102      	str	r1, [sp, #8]
 80201dc:	2101      	movs	r1, #1
 80201de:	4413      	add	r3, r2
 80201e0:	9101      	str	r1, [sp, #4]
 80201e2:	4402      	add	r2, r0
 80201e4:	fa0f f18b 	sxth.w	r1, fp
 80201e8:	f8da 0000 	ldr.w	r0, [sl]
 80201ec:	9100      	str	r1, [sp, #0]
 80201ee:	6941      	ldr	r1, [r0, #20]
 80201f0:	b21b      	sxth	r3, r3
 80201f2:	460d      	mov	r5, r1
 80201f4:	b212      	sxth	r2, r2
 80201f6:	9905      	ldr	r1, [sp, #20]
 80201f8:	4650      	mov	r0, sl
 80201fa:	47a8      	blx	r5
 80201fc:	9b04      	ldr	r3, [sp, #16]
 80201fe:	3301      	adds	r3, #1
 8020200:	f107 0201 	add.w	r2, r7, #1
 8020204:	d0c8      	beq.n	8020198 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8020206:	f9b4 7000 	ldrsh.w	r7, [r4]
 802020a:	1abb      	subs	r3, r7, r2
 802020c:	2b00      	cmp	r3, #0
 802020e:	dd31      	ble.n	8020274 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8020210:	2a00      	cmp	r2, #0
 8020212:	dabb      	bge.n	802018c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 8020214:	2f00      	cmp	r7, #0
 8020216:	dd2d      	ble.n	8020274 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8020218:	2200      	movs	r2, #0
 802021a:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 802021e:	19d1      	adds	r1, r2, r7
 8020220:	4299      	cmp	r1, r3
 8020222:	db02      	blt.n	802022a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 8020224:	1a9f      	subs	r7, r3, r2
 8020226:	2f00      	cmp	r7, #0
 8020228:	dd24      	ble.n	8020274 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 802022a:	ea4f 1188 	mov.w	r1, r8, lsl #6
 802022e:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8020232:	f7ff ff39 	bl	80200a8 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 8020236:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020238:	fb10 f003 	smulbb	r0, r0, r3
 802023c:	b280      	uxth	r0, r0
 802023e:	1c41      	adds	r1, r0, #1
 8020240:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8020244:	1209      	asrs	r1, r1, #8
 8020246:	f011 0fff 	tst.w	r1, #255	; 0xff
 802024a:	d013      	beq.n	8020274 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 802024c:	9808      	ldr	r0, [sp, #32]
 802024e:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8020250:	b292      	uxth	r2, r2
 8020252:	b2c9      	uxtb	r1, r1
 8020254:	4413      	add	r3, r2
 8020256:	9102      	str	r1, [sp, #8]
 8020258:	4402      	add	r2, r0
 802025a:	b23f      	sxth	r7, r7
 802025c:	f8da 0000 	ldr.w	r0, [sl]
 8020260:	9701      	str	r7, [sp, #4]
 8020262:	fa0f f18b 	sxth.w	r1, fp
 8020266:	9100      	str	r1, [sp, #0]
 8020268:	6947      	ldr	r7, [r0, #20]
 802026a:	9905      	ldr	r1, [sp, #20]
 802026c:	b21b      	sxth	r3, r3
 802026e:	b212      	sxth	r2, r2
 8020270:	4650      	mov	r0, sl
 8020272:	47b8      	blx	r7
 8020274:	464b      	mov	r3, r9
 8020276:	e75c      	b.n	8020132 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 8020278:	2f00      	cmp	r7, #0
 802027a:	da95      	bge.n	80201a8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 802027c:	e78c      	b.n	8020198 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 802027e:	2900      	cmp	r1, #0
 8020280:	d0f8      	beq.n	8020274 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8020282:	e78f      	b.n	80201a4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

08020284 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
 8020284:	4b4c      	ldr	r3, [pc, #304]	; (80203b8 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x134>)
 8020286:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 802028a:	2500      	movs	r5, #0
 802028c:	f100 0620 	add.w	r6, r0, #32
 8020290:	4604      	mov	r4, r0
 8020292:	e9c0 3100 	strd	r3, r1, [r0]
 8020296:	e9c0 5502 	strd	r5, r5, [r0, #8]
 802029a:	e9c0 5504 	strd	r5, r5, [r0, #16]
 802029e:	e9c0 5506 	strd	r5, r5, [r0, #24]
 80202a2:	f100 0718 	add.w	r7, r0, #24
 80202a6:	4630      	mov	r0, r6
 80202a8:	4690      	mov	r8, r2
 80202aa:	f7ee fbcf 	bl	800ea4c <_ZN8touchgfx7OutlineC1Ev>
 80202ae:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
 80202b2:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 80202b6:	2301      	movs	r3, #1
 80202b8:	f884 5050 	strb.w	r5, [r4, #80]	; 0x50
 80202bc:	f8a4 5052 	strh.w	r5, [r4, #82]	; 0x52
 80202c0:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 80202c4:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 80202c8:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 80202cc:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
 80202d0:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 80202d4:	f9b8 2000 	ldrsh.w	r2, [r8]
 80202d8:	f8b8 0004 	ldrh.w	r0, [r8, #4]
 80202dc:	f8d4 c004 	ldr.w	ip, [r4, #4]
 80202e0:	9500      	str	r5, [sp, #0]
 80202e2:	4410      	add	r0, r2
 80202e4:	b280      	uxth	r0, r0
 80202e6:	fa0f fa80 	sxth.w	sl, r0
 80202ea:	45aa      	cmp	sl, r5
 80202ec:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
 80202f0:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
 80202f4:	dd5c      	ble.n	80203b0 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12c>
 80202f6:	4591      	cmp	r9, r2
 80202f8:	dd5a      	ble.n	80203b0 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12c>
 80202fa:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
 80202fe:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8020302:	440b      	add	r3, r1
 8020304:	b29b      	uxth	r3, r3
 8020306:	b21d      	sxth	r5, r3
 8020308:	2d00      	cmp	r5, #0
 802030a:	dd51      	ble.n	80203b0 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12c>
 802030c:	458e      	cmp	lr, r1
 802030e:	dd4f      	ble.n	80203b0 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12c>
 8020310:	45d1      	cmp	r9, sl
 8020312:	bfb8      	it	lt
 8020314:	fa1f f089 	uxthlt.w	r0, r9
 8020318:	45ae      	cmp	lr, r5
 802031a:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 802031e:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 8020322:	bfb8      	it	lt
 8020324:	fa1f f38e 	uxthlt.w	r3, lr
 8020328:	1a80      	subs	r0, r0, r2
 802032a:	1a5b      	subs	r3, r3, r1
 802032c:	f8ad 0004 	strh.w	r0, [sp, #4]
 8020330:	f8ad 3006 	strh.w	r3, [sp, #6]
 8020334:	f8ad 2000 	strh.w	r2, [sp]
 8020338:	f8ad 1002 	strh.w	r1, [sp, #2]
 802033c:	466d      	mov	r5, sp
 802033e:	e895 0003 	ldmia.w	r5, {r0, r1}
 8020342:	e887 0003 	stmia.w	r7, {r0, r1}
 8020346:	f8dc 3000 	ldr.w	r3, [ip]
 802034a:	4660      	mov	r0, ip
 802034c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802034e:	4639      	mov	r1, r7
 8020350:	4798      	blx	r3
 8020352:	6861      	ldr	r1, [r4, #4]
 8020354:	4628      	mov	r0, r5
 8020356:	3104      	adds	r1, #4
 8020358:	f7f0 fd0c 	bl	8010d74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802035c:	4638      	mov	r0, r7
 802035e:	f7f0 fce1 	bl	8010d24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020362:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8020366:	f8bd 2000 	ldrh.w	r2, [sp]
 802036a:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 802036e:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
 8020372:	4630      	mov	r0, r6
 8020374:	f7ee fb4e 	bl	800ea14 <_ZN8touchgfx7Outline5resetEv>
 8020378:	f9bd 3000 	ldrsh.w	r3, [sp]
 802037c:	f9b4 201e 	ldrsh.w	r2, [r4, #30]
 8020380:	015b      	lsls	r3, r3, #5
 8020382:	60a3      	str	r3, [r4, #8]
 8020384:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8020388:	015b      	lsls	r3, r3, #5
 802038a:	60e3      	str	r3, [r4, #12]
 802038c:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8020390:	015b      	lsls	r3, r3, #5
 8020392:	6123      	str	r3, [r4, #16]
 8020394:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8020398:	015b      	lsls	r3, r3, #5
 802039a:	6163      	str	r3, [r4, #20]
 802039c:	f9b4 301c 	ldrsh.w	r3, [r4, #28]
 80203a0:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 80203a4:	4620      	mov	r0, r4
 80203a6:	e9c4 3212 	strd	r3, r2, [r4, #72]	; 0x48
 80203aa:	b002      	add	sp, #8
 80203ac:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80203b0:	2300      	movs	r3, #0
 80203b2:	9301      	str	r3, [sp, #4]
 80203b4:	e7c2      	b.n	802033c <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xb8>
 80203b6:	bf00      	nop
 80203b8:	08023bc4 	.word	0x08023bc4

080203bc <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 80203bc:	b510      	push	{r4, lr}
 80203be:	4b07      	ldr	r3, [pc, #28]	; (80203dc <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
 80203c0:	781b      	ldrb	r3, [r3, #0]
 80203c2:	2b01      	cmp	r3, #1
 80203c4:	d108      	bne.n	80203d8 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
 80203c6:	6843      	ldr	r3, [r0, #4]
 80203c8:	6814      	ldr	r4, [r2, #0]
 80203ca:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 80203ce:	680b      	ldr	r3, [r1, #0]
 80203d0:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 80203d4:	6013      	str	r3, [r2, #0]
 80203d6:	600c      	str	r4, [r1, #0]
 80203d8:	bd10      	pop	{r4, pc}
 80203da:	bf00      	nop
 80203dc:	200155ac 	.word	0x200155ac

080203e0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 80203e0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80203e2:	ab02      	add	r3, sp, #8
 80203e4:	4604      	mov	r4, r0
 80203e6:	f843 2d08 	str.w	r2, [r3, #-8]!
 80203ea:	9101      	str	r1, [sp, #4]
 80203ec:	461a      	mov	r2, r3
 80203ee:	a901      	add	r1, sp, #4
 80203f0:	f7ff ffe4 	bl	80203bc <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 80203f4:	68a3      	ldr	r3, [r4, #8]
 80203f6:	9901      	ldr	r1, [sp, #4]
 80203f8:	9a00      	ldr	r2, [sp, #0]
 80203fa:	1ac9      	subs	r1, r1, r3
 80203fc:	68e3      	ldr	r3, [r4, #12]
 80203fe:	9101      	str	r1, [sp, #4]
 8020400:	1ad2      	subs	r2, r2, r3
 8020402:	2a00      	cmp	r2, #0
 8020404:	9200      	str	r2, [sp, #0]
 8020406:	db1c      	blt.n	8020442 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 8020408:	6963      	ldr	r3, [r4, #20]
 802040a:	429a      	cmp	r2, r3
 802040c:	bfac      	ite	ge
 802040e:	2002      	movge	r0, #2
 8020410:	2000      	movlt	r0, #0
 8020412:	2900      	cmp	r1, #0
 8020414:	db17      	blt.n	8020446 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 8020416:	6923      	ldr	r3, [r4, #16]
 8020418:	4299      	cmp	r1, r3
 802041a:	bfac      	ite	ge
 802041c:	2308      	movge	r3, #8
 802041e:	2300      	movlt	r3, #0
 8020420:	4303      	orrs	r3, r0
 8020422:	f894 0064 	ldrb.w	r0, [r4, #100]	; 0x64
 8020426:	b2dd      	uxtb	r5, r3
 8020428:	b978      	cbnz	r0, 802044a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 802042a:	f104 0020 	add.w	r0, r4, #32
 802042e:	f7ff fe4f 	bl	80200d0 <_ZN8touchgfx10Rasterizer6lineToEii>
 8020432:	9b01      	ldr	r3, [sp, #4]
 8020434:	65e3      	str	r3, [r4, #92]	; 0x5c
 8020436:	9b00      	ldr	r3, [sp, #0]
 8020438:	6623      	str	r3, [r4, #96]	; 0x60
 802043a:	f884 5064 	strb.w	r5, [r4, #100]	; 0x64
 802043e:	b002      	add	sp, #8
 8020440:	bd70      	pop	{r4, r5, r6, pc}
 8020442:	2001      	movs	r0, #1
 8020444:	e7e5      	b.n	8020412 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 8020446:	2304      	movs	r3, #4
 8020448:	e7ea      	b.n	8020420 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 802044a:	b113      	cbz	r3, 8020452 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 802044c:	ea10 0305 	ands.w	r3, r0, r5
 8020450:	d11d      	bne.n	802048e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xae>
 8020452:	f894 3058 	ldrb.w	r3, [r4, #88]	; 0x58
 8020456:	f104 0620 	add.w	r6, r4, #32
 802045a:	e9d4 1217 	ldrd	r1, r2, [r4, #92]	; 0x5c
 802045e:	b193      	cbz	r3, 8020486 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa6>
 8020460:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 8020464:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 8020468:	4298      	cmp	r0, r3
 802046a:	d802      	bhi.n	8020472 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 802046c:	4630      	mov	r0, r6
 802046e:	f7ee ffcf 	bl	800f410 <_ZN8touchgfx7Outline6moveToEii>
 8020472:	2300      	movs	r3, #0
 8020474:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8020478:	2301      	movs	r3, #1
 802047a:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 802047e:	e9dd 2100 	ldrd	r2, r1, [sp]
 8020482:	4630      	mov	r0, r6
 8020484:	e7d3      	b.n	802042e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 8020486:	4630      	mov	r0, r6
 8020488:	f7ff fe22 	bl	80200d0 <_ZN8touchgfx10Rasterizer6lineToEii>
 802048c:	e7f7      	b.n	802047e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9e>
 802048e:	461d      	mov	r5, r3
 8020490:	e7cf      	b.n	8020432 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>

08020492 <_ZN8touchgfx6Canvas5closeEv>:
 8020492:	b538      	push	{r3, r4, r5, lr}
 8020494:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 8020498:	4604      	mov	r4, r0
 802049a:	b993      	cbnz	r3, 80204c2 <_ZN8touchgfx6Canvas5closeEv+0x30>
 802049c:	f890 3064 	ldrb.w	r3, [r0, #100]	; 0x64
 80204a0:	f890 2065 	ldrb.w	r2, [r0, #101]	; 0x65
 80204a4:	4213      	tst	r3, r2
 80204a6:	d10c      	bne.n	80204c2 <_ZN8touchgfx6Canvas5closeEv+0x30>
 80204a8:	f100 0520 	add.w	r5, r0, #32
 80204ac:	b123      	cbz	r3, 80204b8 <_ZN8touchgfx6Canvas5closeEv+0x26>
 80204ae:	e9d0 1217 	ldrd	r1, r2, [r0, #92]	; 0x5c
 80204b2:	4628      	mov	r0, r5
 80204b4:	f7ff fe0c 	bl	80200d0 <_ZN8touchgfx10Rasterizer6lineToEii>
 80204b8:	e9d4 121a 	ldrd	r1, r2, [r4, #104]	; 0x68
 80204bc:	4628      	mov	r0, r5
 80204be:	f7ff fe07 	bl	80200d0 <_ZN8touchgfx10Rasterizer6lineToEii>
 80204c2:	2300      	movs	r3, #0
 80204c4:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 80204c8:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
 80204cc:	4298      	cmp	r0, r3
 80204ce:	bf34      	ite	cc
 80204d0:	2000      	movcc	r0, #0
 80204d2:	2001      	movcs	r0, #1
 80204d4:	bd38      	pop	{r3, r4, r5, pc}
	...

080204d8 <_ZN8touchgfx6Canvas6renderEh>:
 80204d8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80204dc:	4604      	mov	r4, r0
 80204de:	6840      	ldr	r0, [r0, #4]
 80204e0:	6803      	ldr	r3, [r0, #0]
 80204e2:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80204e4:	460d      	mov	r5, r1
 80204e6:	4798      	blx	r3
 80204e8:	fb10 f105 	smulbb	r1, r0, r5
 80204ec:	b289      	uxth	r1, r1
 80204ee:	1c4d      	adds	r5, r1, #1
 80204f0:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 80204f4:	122d      	asrs	r5, r5, #8
 80204f6:	f000 8098 	beq.w	802062a <_ZN8touchgfx6Canvas6renderEh+0x152>
 80204fa:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
 80204fe:	2b00      	cmp	r3, #0
 8020500:	f000 8093 	beq.w	802062a <_ZN8touchgfx6Canvas6renderEh+0x152>
 8020504:	4620      	mov	r0, r4
 8020506:	f7ff ffc4 	bl	8020492 <_ZN8touchgfx6Canvas5closeEv>
 802050a:	4607      	mov	r7, r0
 802050c:	2800      	cmp	r0, #0
 802050e:	d043      	beq.n	8020598 <_ZN8touchgfx6Canvas6renderEh+0xc0>
 8020510:	6863      	ldr	r3, [r4, #4]
 8020512:	4e47      	ldr	r6, [pc, #284]	; (8020630 <_ZN8touchgfx6Canvas6renderEh+0x158>)
 8020514:	6a98      	ldr	r0, [r3, #40]	; 0x28
 8020516:	6837      	ldr	r7, [r6, #0]
 8020518:	6803      	ldr	r3, [r0, #0]
 802051a:	689b      	ldr	r3, [r3, #8]
 802051c:	4798      	blx	r3
 802051e:	4601      	mov	r1, r0
 8020520:	4638      	mov	r0, r7
 8020522:	f7eb fb11 	bl	800bb48 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 8020526:	4607      	mov	r7, r0
 8020528:	f7e2 f8e8 	bl	80026fc <_ZN8touchgfx3HAL3lcdEv>
 802052c:	6803      	ldr	r3, [r0, #0]
 802052e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8020530:	4798      	blx	r3
 8020532:	4680      	mov	r8, r0
 8020534:	f7e2 f8e2 	bl	80026fc <_ZN8touchgfx3HAL3lcdEv>
 8020538:	6803      	ldr	r3, [r0, #0]
 802053a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802053c:	4798      	blx	r3
 802053e:	280b      	cmp	r0, #11
 8020540:	d858      	bhi.n	80205f4 <_ZN8touchgfx6Canvas6renderEh+0x11c>
 8020542:	e8df f000 	tbb	[pc, r0]
 8020546:	594e      	.short	0x594e
 8020548:	2d570669 	.word	0x2d570669
 802054c:	6262623d 	.word	0x6262623d
 8020550:	6262      	.short	0x6262
 8020552:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8020556:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 802055a:	2208      	movs	r2, #8
 802055c:	fb91 f2f2 	sdiv	r2, r1, r2
 8020560:	fb08 2303 	mla	r3, r8, r3, r2
 8020564:	441f      	add	r7, r3
 8020566:	424b      	negs	r3, r1
 8020568:	f003 0307 	and.w	r3, r3, #7
 802056c:	f001 0107 	and.w	r1, r1, #7
 8020570:	bf58      	it	pl
 8020572:	4259      	negpl	r1, r3
 8020574:	b2c9      	uxtb	r1, r1
 8020576:	b2ed      	uxtb	r5, r5
 8020578:	e9cd 1500 	strd	r1, r5, [sp]
 802057c:	6860      	ldr	r0, [r4, #4]
 802057e:	fa0f f388 	sxth.w	r3, r8
 8020582:	463a      	mov	r2, r7
 8020584:	6a81      	ldr	r1, [r0, #40]	; 0x28
 8020586:	f104 0020 	add.w	r0, r4, #32
 802058a:	f7ff fdad 	bl	80200e8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 802058e:	4607      	mov	r7, r0
 8020590:	6830      	ldr	r0, [r6, #0]
 8020592:	6803      	ldr	r3, [r0, #0]
 8020594:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8020596:	4798      	blx	r3
 8020598:	4638      	mov	r0, r7
 802059a:	b002      	add	sp, #8
 802059c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80205a0:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80205a4:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 80205a8:	2204      	movs	r2, #4
 80205aa:	fb91 f2f2 	sdiv	r2, r1, r2
 80205ae:	fb08 2303 	mla	r3, r8, r3, r2
 80205b2:	441f      	add	r7, r3
 80205b4:	424b      	negs	r3, r1
 80205b6:	f003 0303 	and.w	r3, r3, #3
 80205ba:	f001 0103 	and.w	r1, r1, #3
 80205be:	e7d7      	b.n	8020570 <_ZN8touchgfx6Canvas6renderEh+0x98>
 80205c0:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 80205c4:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80205c8:	2900      	cmp	r1, #0
 80205ca:	f04f 0202 	mov.w	r2, #2
 80205ce:	fb91 f2f2 	sdiv	r2, r1, r2
 80205d2:	f001 0101 	and.w	r1, r1, #1
 80205d6:	fb08 2303 	mla	r3, r8, r3, r2
 80205da:	441f      	add	r7, r3
 80205dc:	bfb8      	it	lt
 80205de:	4249      	neglt	r1, r1
 80205e0:	e7c8      	b.n	8020574 <_ZN8touchgfx6Canvas6renderEh+0x9c>
 80205e2:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80205e6:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 80205ea:	fb08 f303 	mul.w	r3, r8, r3
 80205ee:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 80205f2:	441f      	add	r7, r3
 80205f4:	2100      	movs	r1, #0
 80205f6:	e7be      	b.n	8020576 <_ZN8touchgfx6Canvas6renderEh+0x9e>
 80205f8:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80205fc:	fb08 f203 	mul.w	r2, r8, r3
 8020600:	8b23      	ldrh	r3, [r4, #24]
 8020602:	2103      	movs	r1, #3
 8020604:	fb13 2301 	smlabb	r3, r3, r1, r2
 8020608:	e7f3      	b.n	80205f2 <_ZN8touchgfx6Canvas6renderEh+0x11a>
 802060a:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802060e:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8020612:	fb08 2303 	mla	r3, r8, r3, r2
 8020616:	e7ec      	b.n	80205f2 <_ZN8touchgfx6Canvas6renderEh+0x11a>
 8020618:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802061c:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8020620:	fb08 f303 	mul.w	r3, r8, r3
 8020624:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8020628:	e7e3      	b.n	80205f2 <_ZN8touchgfx6Canvas6renderEh+0x11a>
 802062a:	2701      	movs	r7, #1
 802062c:	e7b4      	b.n	8020598 <_ZN8touchgfx6Canvas6renderEh+0xc0>
 802062e:	bf00      	nop
 8020630:	200155b4 	.word	0x200155b4

08020634 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 8020634:	b513      	push	{r0, r1, r4, lr}
 8020636:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 802063a:	4604      	mov	r4, r0
 802063c:	e9cd 2100 	strd	r2, r1, [sp]
 8020640:	b1a3      	cbz	r3, 802066c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 8020642:	466a      	mov	r2, sp
 8020644:	a901      	add	r1, sp, #4
 8020646:	4620      	mov	r0, r4
 8020648:	f7ff feb8 	bl	80203bc <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 802064c:	68a3      	ldr	r3, [r4, #8]
 802064e:	9901      	ldr	r1, [sp, #4]
 8020650:	9a00      	ldr	r2, [sp, #0]
 8020652:	1ac9      	subs	r1, r1, r3
 8020654:	68e3      	ldr	r3, [r4, #12]
 8020656:	9101      	str	r1, [sp, #4]
 8020658:	1ad2      	subs	r2, r2, r3
 802065a:	2a00      	cmp	r2, #0
 802065c:	9200      	str	r2, [sp, #0]
 802065e:	da0b      	bge.n	8020678 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 8020660:	2301      	movs	r3, #1
 8020662:	2900      	cmp	r1, #0
 8020664:	da0e      	bge.n	8020684 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 8020666:	f043 0304 	orr.w	r3, r3, #4
 802066a:	e013      	b.n	8020694 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 802066c:	f7ff ff11 	bl	8020492 <_ZN8touchgfx6Canvas5closeEv>
 8020670:	2800      	cmp	r0, #0
 8020672:	d1e6      	bne.n	8020642 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 8020674:	b002      	add	sp, #8
 8020676:	bd10      	pop	{r4, pc}
 8020678:	6963      	ldr	r3, [r4, #20]
 802067a:	429a      	cmp	r2, r3
 802067c:	bfac      	ite	ge
 802067e:	2302      	movge	r3, #2
 8020680:	2300      	movlt	r3, #0
 8020682:	e7ee      	b.n	8020662 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 8020684:	6920      	ldr	r0, [r4, #16]
 8020686:	4281      	cmp	r1, r0
 8020688:	bfac      	ite	ge
 802068a:	2008      	movge	r0, #8
 802068c:	2000      	movlt	r0, #0
 802068e:	4318      	orrs	r0, r3
 8020690:	b2c3      	uxtb	r3, r0
 8020692:	b158      	cbz	r0, 80206ac <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 8020694:	2201      	movs	r2, #1
 8020696:	f884 2058 	strb.w	r2, [r4, #88]	; 0x58
 802069a:	9901      	ldr	r1, [sp, #4]
 802069c:	9a00      	ldr	r2, [sp, #0]
 802069e:	66a1      	str	r1, [r4, #104]	; 0x68
 80206a0:	66e2      	str	r2, [r4, #108]	; 0x6c
 80206a2:	e9c4 1217 	strd	r1, r2, [r4, #92]	; 0x5c
 80206a6:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 80206aa:	e7e3      	b.n	8020674 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 80206ac:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 80206b0:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 80206b4:	4298      	cmp	r0, r3
 80206b6:	d803      	bhi.n	80206c0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 80206b8:	f104 0020 	add.w	r0, r4, #32
 80206bc:	f7ee fea8 	bl	800f410 <_ZN8touchgfx7Outline6moveToEii>
 80206c0:	2300      	movs	r3, #0
 80206c2:	2201      	movs	r2, #1
 80206c4:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 80206c8:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 80206cc:	e7e5      	b.n	802069a <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

080206ce <__aeabi_atexit>:
 80206ce:	460b      	mov	r3, r1
 80206d0:	4601      	mov	r1, r0
 80206d2:	4618      	mov	r0, r3
 80206d4:	f000 b8d8 	b.w	8020888 <__cxa_atexit>

080206d8 <_ZdlPvj>:
 80206d8:	f000 b812 	b.w	8020700 <_ZdlPv>

080206dc <__cxa_guard_acquire>:
 80206dc:	6803      	ldr	r3, [r0, #0]
 80206de:	07db      	lsls	r3, r3, #31
 80206e0:	d406      	bmi.n	80206f0 <__cxa_guard_acquire+0x14>
 80206e2:	7843      	ldrb	r3, [r0, #1]
 80206e4:	b103      	cbz	r3, 80206e8 <__cxa_guard_acquire+0xc>
 80206e6:	deff      	udf	#255	; 0xff
 80206e8:	2301      	movs	r3, #1
 80206ea:	7043      	strb	r3, [r0, #1]
 80206ec:	4618      	mov	r0, r3
 80206ee:	4770      	bx	lr
 80206f0:	2000      	movs	r0, #0
 80206f2:	4770      	bx	lr

080206f4 <__cxa_guard_release>:
 80206f4:	2301      	movs	r3, #1
 80206f6:	6003      	str	r3, [r0, #0]
 80206f8:	4770      	bx	lr

080206fa <__cxa_pure_virtual>:
 80206fa:	b508      	push	{r3, lr}
 80206fc:	f000 f80e 	bl	802071c <_ZSt9terminatev>

08020700 <_ZdlPv>:
 8020700:	f000 ba0e 	b.w	8020b20 <free>

08020704 <_ZN10__cxxabiv111__terminateEPFvvE>:
 8020704:	b508      	push	{r3, lr}
 8020706:	4780      	blx	r0
 8020708:	f000 f892 	bl	8020830 <abort>

0802070c <_ZSt13get_terminatev>:
 802070c:	4b02      	ldr	r3, [pc, #8]	; (8020718 <_ZSt13get_terminatev+0xc>)
 802070e:	6818      	ldr	r0, [r3, #0]
 8020710:	f3bf 8f5b 	dmb	ish
 8020714:	4770      	bx	lr
 8020716:	bf00      	nop
 8020718:	20000100 	.word	0x20000100

0802071c <_ZSt9terminatev>:
 802071c:	b508      	push	{r3, lr}
 802071e:	f7ff fff5 	bl	802070c <_ZSt13get_terminatev>
 8020722:	f7ff ffef 	bl	8020704 <_ZN10__cxxabiv111__terminateEPFvvE>
	...

08020728 <ceilf>:
 8020728:	ee10 3a10 	vmov	r3, s0
 802072c:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8020730:	3a7f      	subs	r2, #127	; 0x7f
 8020732:	2a16      	cmp	r2, #22
 8020734:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 8020738:	dc2a      	bgt.n	8020790 <ceilf+0x68>
 802073a:	2a00      	cmp	r2, #0
 802073c:	da11      	bge.n	8020762 <ceilf+0x3a>
 802073e:	eddf 7a19 	vldr	s15, [pc, #100]	; 80207a4 <ceilf+0x7c>
 8020742:	ee30 0a27 	vadd.f32	s0, s0, s15
 8020746:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802074a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802074e:	dd05      	ble.n	802075c <ceilf+0x34>
 8020750:	2b00      	cmp	r3, #0
 8020752:	db23      	blt.n	802079c <ceilf+0x74>
 8020754:	2900      	cmp	r1, #0
 8020756:	bf18      	it	ne
 8020758:	f04f 537e 	movne.w	r3, #1065353216	; 0x3f800000
 802075c:	ee00 3a10 	vmov	s0, r3
 8020760:	4770      	bx	lr
 8020762:	4911      	ldr	r1, [pc, #68]	; (80207a8 <ceilf+0x80>)
 8020764:	4111      	asrs	r1, r2
 8020766:	420b      	tst	r3, r1
 8020768:	d0fa      	beq.n	8020760 <ceilf+0x38>
 802076a:	eddf 7a0e 	vldr	s15, [pc, #56]	; 80207a4 <ceilf+0x7c>
 802076e:	ee30 0a27 	vadd.f32	s0, s0, s15
 8020772:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8020776:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802077a:	ddef      	ble.n	802075c <ceilf+0x34>
 802077c:	2b00      	cmp	r3, #0
 802077e:	bfc2      	ittt	gt
 8020780:	f44f 0000 	movgt.w	r0, #8388608	; 0x800000
 8020784:	fa40 f202 	asrgt.w	r2, r0, r2
 8020788:	189b      	addgt	r3, r3, r2
 802078a:	ea23 0301 	bic.w	r3, r3, r1
 802078e:	e7e5      	b.n	802075c <ceilf+0x34>
 8020790:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 8020794:	d3e4      	bcc.n	8020760 <ceilf+0x38>
 8020796:	ee30 0a00 	vadd.f32	s0, s0, s0
 802079a:	4770      	bx	lr
 802079c:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 80207a0:	e7dc      	b.n	802075c <ceilf+0x34>
 80207a2:	bf00      	nop
 80207a4:	7149f2ca 	.word	0x7149f2ca
 80207a8:	007fffff 	.word	0x007fffff

080207ac <floorf>:
 80207ac:	ee10 3a10 	vmov	r3, s0
 80207b0:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 80207b4:	3a7f      	subs	r2, #127	; 0x7f
 80207b6:	2a16      	cmp	r2, #22
 80207b8:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 80207bc:	dc2a      	bgt.n	8020814 <floorf+0x68>
 80207be:	2a00      	cmp	r2, #0
 80207c0:	da11      	bge.n	80207e6 <floorf+0x3a>
 80207c2:	eddf 7a18 	vldr	s15, [pc, #96]	; 8020824 <floorf+0x78>
 80207c6:	ee30 0a27 	vadd.f32	s0, s0, s15
 80207ca:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80207ce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80207d2:	dd05      	ble.n	80207e0 <floorf+0x34>
 80207d4:	2b00      	cmp	r3, #0
 80207d6:	da23      	bge.n	8020820 <floorf+0x74>
 80207d8:	4a13      	ldr	r2, [pc, #76]	; (8020828 <floorf+0x7c>)
 80207da:	2900      	cmp	r1, #0
 80207dc:	bf18      	it	ne
 80207de:	4613      	movne	r3, r2
 80207e0:	ee00 3a10 	vmov	s0, r3
 80207e4:	4770      	bx	lr
 80207e6:	4911      	ldr	r1, [pc, #68]	; (802082c <floorf+0x80>)
 80207e8:	4111      	asrs	r1, r2
 80207ea:	420b      	tst	r3, r1
 80207ec:	d0fa      	beq.n	80207e4 <floorf+0x38>
 80207ee:	eddf 7a0d 	vldr	s15, [pc, #52]	; 8020824 <floorf+0x78>
 80207f2:	ee30 0a27 	vadd.f32	s0, s0, s15
 80207f6:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80207fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80207fe:	ddef      	ble.n	80207e0 <floorf+0x34>
 8020800:	2b00      	cmp	r3, #0
 8020802:	bfbe      	ittt	lt
 8020804:	f44f 0000 	movlt.w	r0, #8388608	; 0x800000
 8020808:	fa40 f202 	asrlt.w	r2, r0, r2
 802080c:	189b      	addlt	r3, r3, r2
 802080e:	ea23 0301 	bic.w	r3, r3, r1
 8020812:	e7e5      	b.n	80207e0 <floorf+0x34>
 8020814:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 8020818:	d3e4      	bcc.n	80207e4 <floorf+0x38>
 802081a:	ee30 0a00 	vadd.f32	s0, s0, s0
 802081e:	4770      	bx	lr
 8020820:	2300      	movs	r3, #0
 8020822:	e7dd      	b.n	80207e0 <floorf+0x34>
 8020824:	7149f2ca 	.word	0x7149f2ca
 8020828:	bf800000 	.word	0xbf800000
 802082c:	007fffff 	.word	0x007fffff

08020830 <abort>:
 8020830:	b508      	push	{r3, lr}
 8020832:	2006      	movs	r0, #6
 8020834:	f000 fe02 	bl	802143c <raise>
 8020838:	2001      	movs	r0, #1
 802083a:	f7e1 fc87 	bl	800214c <_exit>
	...

08020840 <__assert_func>:
 8020840:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8020842:	4614      	mov	r4, r2
 8020844:	461a      	mov	r2, r3
 8020846:	4b09      	ldr	r3, [pc, #36]	; (802086c <__assert_func+0x2c>)
 8020848:	681b      	ldr	r3, [r3, #0]
 802084a:	4605      	mov	r5, r0
 802084c:	68d8      	ldr	r0, [r3, #12]
 802084e:	b14c      	cbz	r4, 8020864 <__assert_func+0x24>
 8020850:	4b07      	ldr	r3, [pc, #28]	; (8020870 <__assert_func+0x30>)
 8020852:	9100      	str	r1, [sp, #0]
 8020854:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8020858:	4906      	ldr	r1, [pc, #24]	; (8020874 <__assert_func+0x34>)
 802085a:	462b      	mov	r3, r5
 802085c:	f000 f8fe 	bl	8020a5c <fiprintf>
 8020860:	f7ff ffe6 	bl	8020830 <abort>
 8020864:	4b04      	ldr	r3, [pc, #16]	; (8020878 <__assert_func+0x38>)
 8020866:	461c      	mov	r4, r3
 8020868:	e7f3      	b.n	8020852 <__assert_func+0x12>
 802086a:	bf00      	nop
 802086c:	20000104 	.word	0x20000104
 8020870:	0802468c 	.word	0x0802468c
 8020874:	08024699 	.word	0x08024699
 8020878:	0802360f 	.word	0x0802360f

0802087c <atexit>:
 802087c:	2300      	movs	r3, #0
 802087e:	4601      	mov	r1, r0
 8020880:	461a      	mov	r2, r3
 8020882:	4618      	mov	r0, r3
 8020884:	f000 bf0c 	b.w	80216a0 <__register_exitproc>

08020888 <__cxa_atexit>:
 8020888:	b510      	push	{r4, lr}
 802088a:	4c05      	ldr	r4, [pc, #20]	; (80208a0 <__cxa_atexit+0x18>)
 802088c:	4613      	mov	r3, r2
 802088e:	b12c      	cbz	r4, 802089c <__cxa_atexit+0x14>
 8020890:	460a      	mov	r2, r1
 8020892:	4601      	mov	r1, r0
 8020894:	2002      	movs	r0, #2
 8020896:	f000 ff03 	bl	80216a0 <__register_exitproc>
 802089a:	bd10      	pop	{r4, pc}
 802089c:	4620      	mov	r0, r4
 802089e:	e7fc      	b.n	802089a <__cxa_atexit+0x12>
 80208a0:	080216a1 	.word	0x080216a1

080208a4 <__errno>:
 80208a4:	4b01      	ldr	r3, [pc, #4]	; (80208ac <__errno+0x8>)
 80208a6:	6818      	ldr	r0, [r3, #0]
 80208a8:	4770      	bx	lr
 80208aa:	bf00      	nop
 80208ac:	20000104 	.word	0x20000104

080208b0 <std>:
 80208b0:	2300      	movs	r3, #0
 80208b2:	b510      	push	{r4, lr}
 80208b4:	4604      	mov	r4, r0
 80208b6:	e9c0 3300 	strd	r3, r3, [r0]
 80208ba:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80208be:	6083      	str	r3, [r0, #8]
 80208c0:	8181      	strh	r1, [r0, #12]
 80208c2:	6643      	str	r3, [r0, #100]	; 0x64
 80208c4:	81c2      	strh	r2, [r0, #14]
 80208c6:	6183      	str	r3, [r0, #24]
 80208c8:	4619      	mov	r1, r3
 80208ca:	2208      	movs	r2, #8
 80208cc:	305c      	adds	r0, #92	; 0x5c
 80208ce:	f000 f93d 	bl	8020b4c <memset>
 80208d2:	4b05      	ldr	r3, [pc, #20]	; (80208e8 <std+0x38>)
 80208d4:	6263      	str	r3, [r4, #36]	; 0x24
 80208d6:	4b05      	ldr	r3, [pc, #20]	; (80208ec <std+0x3c>)
 80208d8:	62a3      	str	r3, [r4, #40]	; 0x28
 80208da:	4b05      	ldr	r3, [pc, #20]	; (80208f0 <std+0x40>)
 80208dc:	62e3      	str	r3, [r4, #44]	; 0x2c
 80208de:	4b05      	ldr	r3, [pc, #20]	; (80208f4 <std+0x44>)
 80208e0:	6224      	str	r4, [r4, #32]
 80208e2:	6323      	str	r3, [r4, #48]	; 0x30
 80208e4:	bd10      	pop	{r4, pc}
 80208e6:	bf00      	nop
 80208e8:	08021475 	.word	0x08021475
 80208ec:	08021497 	.word	0x08021497
 80208f0:	080214cf 	.word	0x080214cf
 80208f4:	080214f3 	.word	0x080214f3

080208f8 <_cleanup_r>:
 80208f8:	4901      	ldr	r1, [pc, #4]	; (8020900 <_cleanup_r+0x8>)
 80208fa:	f000 b8c1 	b.w	8020a80 <_fwalk_reent>
 80208fe:	bf00      	nop
 8020900:	08021891 	.word	0x08021891

08020904 <__sfmoreglue>:
 8020904:	b570      	push	{r4, r5, r6, lr}
 8020906:	2268      	movs	r2, #104	; 0x68
 8020908:	1e4d      	subs	r5, r1, #1
 802090a:	4355      	muls	r5, r2
 802090c:	460e      	mov	r6, r1
 802090e:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8020912:	f000 f98f 	bl	8020c34 <_malloc_r>
 8020916:	4604      	mov	r4, r0
 8020918:	b140      	cbz	r0, 802092c <__sfmoreglue+0x28>
 802091a:	2100      	movs	r1, #0
 802091c:	e9c0 1600 	strd	r1, r6, [r0]
 8020920:	300c      	adds	r0, #12
 8020922:	60a0      	str	r0, [r4, #8]
 8020924:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8020928:	f000 f910 	bl	8020b4c <memset>
 802092c:	4620      	mov	r0, r4
 802092e:	bd70      	pop	{r4, r5, r6, pc}

08020930 <__sfp_lock_acquire>:
 8020930:	4801      	ldr	r0, [pc, #4]	; (8020938 <__sfp_lock_acquire+0x8>)
 8020932:	f000 b8ea 	b.w	8020b0a <__retarget_lock_acquire_recursive>
 8020936:	bf00      	nop
 8020938:	200156ba 	.word	0x200156ba

0802093c <__sfp_lock_release>:
 802093c:	4801      	ldr	r0, [pc, #4]	; (8020944 <__sfp_lock_release+0x8>)
 802093e:	f000 b8e6 	b.w	8020b0e <__retarget_lock_release_recursive>
 8020942:	bf00      	nop
 8020944:	200156ba 	.word	0x200156ba

08020948 <__sinit_lock_acquire>:
 8020948:	4801      	ldr	r0, [pc, #4]	; (8020950 <__sinit_lock_acquire+0x8>)
 802094a:	f000 b8de 	b.w	8020b0a <__retarget_lock_acquire_recursive>
 802094e:	bf00      	nop
 8020950:	200156bb 	.word	0x200156bb

08020954 <__sinit_lock_release>:
 8020954:	4801      	ldr	r0, [pc, #4]	; (802095c <__sinit_lock_release+0x8>)
 8020956:	f000 b8da 	b.w	8020b0e <__retarget_lock_release_recursive>
 802095a:	bf00      	nop
 802095c:	200156bb 	.word	0x200156bb

08020960 <__sinit>:
 8020960:	b510      	push	{r4, lr}
 8020962:	4604      	mov	r4, r0
 8020964:	f7ff fff0 	bl	8020948 <__sinit_lock_acquire>
 8020968:	69a3      	ldr	r3, [r4, #24]
 802096a:	b11b      	cbz	r3, 8020974 <__sinit+0x14>
 802096c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8020970:	f7ff bff0 	b.w	8020954 <__sinit_lock_release>
 8020974:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8020978:	6523      	str	r3, [r4, #80]	; 0x50
 802097a:	4b13      	ldr	r3, [pc, #76]	; (80209c8 <__sinit+0x68>)
 802097c:	4a13      	ldr	r2, [pc, #76]	; (80209cc <__sinit+0x6c>)
 802097e:	681b      	ldr	r3, [r3, #0]
 8020980:	62a2      	str	r2, [r4, #40]	; 0x28
 8020982:	42a3      	cmp	r3, r4
 8020984:	bf04      	itt	eq
 8020986:	2301      	moveq	r3, #1
 8020988:	61a3      	streq	r3, [r4, #24]
 802098a:	4620      	mov	r0, r4
 802098c:	f000 f820 	bl	80209d0 <__sfp>
 8020990:	6060      	str	r0, [r4, #4]
 8020992:	4620      	mov	r0, r4
 8020994:	f000 f81c 	bl	80209d0 <__sfp>
 8020998:	60a0      	str	r0, [r4, #8]
 802099a:	4620      	mov	r0, r4
 802099c:	f000 f818 	bl	80209d0 <__sfp>
 80209a0:	2200      	movs	r2, #0
 80209a2:	60e0      	str	r0, [r4, #12]
 80209a4:	2104      	movs	r1, #4
 80209a6:	6860      	ldr	r0, [r4, #4]
 80209a8:	f7ff ff82 	bl	80208b0 <std>
 80209ac:	68a0      	ldr	r0, [r4, #8]
 80209ae:	2201      	movs	r2, #1
 80209b0:	2109      	movs	r1, #9
 80209b2:	f7ff ff7d 	bl	80208b0 <std>
 80209b6:	68e0      	ldr	r0, [r4, #12]
 80209b8:	2202      	movs	r2, #2
 80209ba:	2112      	movs	r1, #18
 80209bc:	f7ff ff78 	bl	80208b0 <std>
 80209c0:	2301      	movs	r3, #1
 80209c2:	61a3      	str	r3, [r4, #24]
 80209c4:	e7d2      	b.n	802096c <__sinit+0xc>
 80209c6:	bf00      	nop
 80209c8:	08024728 	.word	0x08024728
 80209cc:	080208f9 	.word	0x080208f9

080209d0 <__sfp>:
 80209d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80209d2:	4607      	mov	r7, r0
 80209d4:	f7ff ffac 	bl	8020930 <__sfp_lock_acquire>
 80209d8:	4b1e      	ldr	r3, [pc, #120]	; (8020a54 <__sfp+0x84>)
 80209da:	681e      	ldr	r6, [r3, #0]
 80209dc:	69b3      	ldr	r3, [r6, #24]
 80209de:	b913      	cbnz	r3, 80209e6 <__sfp+0x16>
 80209e0:	4630      	mov	r0, r6
 80209e2:	f7ff ffbd 	bl	8020960 <__sinit>
 80209e6:	3648      	adds	r6, #72	; 0x48
 80209e8:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 80209ec:	3b01      	subs	r3, #1
 80209ee:	d503      	bpl.n	80209f8 <__sfp+0x28>
 80209f0:	6833      	ldr	r3, [r6, #0]
 80209f2:	b30b      	cbz	r3, 8020a38 <__sfp+0x68>
 80209f4:	6836      	ldr	r6, [r6, #0]
 80209f6:	e7f7      	b.n	80209e8 <__sfp+0x18>
 80209f8:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 80209fc:	b9d5      	cbnz	r5, 8020a34 <__sfp+0x64>
 80209fe:	4b16      	ldr	r3, [pc, #88]	; (8020a58 <__sfp+0x88>)
 8020a00:	60e3      	str	r3, [r4, #12]
 8020a02:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8020a06:	6665      	str	r5, [r4, #100]	; 0x64
 8020a08:	f000 f87e 	bl	8020b08 <__retarget_lock_init_recursive>
 8020a0c:	f7ff ff96 	bl	802093c <__sfp_lock_release>
 8020a10:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8020a14:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8020a18:	6025      	str	r5, [r4, #0]
 8020a1a:	61a5      	str	r5, [r4, #24]
 8020a1c:	2208      	movs	r2, #8
 8020a1e:	4629      	mov	r1, r5
 8020a20:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8020a24:	f000 f892 	bl	8020b4c <memset>
 8020a28:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8020a2c:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8020a30:	4620      	mov	r0, r4
 8020a32:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8020a34:	3468      	adds	r4, #104	; 0x68
 8020a36:	e7d9      	b.n	80209ec <__sfp+0x1c>
 8020a38:	2104      	movs	r1, #4
 8020a3a:	4638      	mov	r0, r7
 8020a3c:	f7ff ff62 	bl	8020904 <__sfmoreglue>
 8020a40:	4604      	mov	r4, r0
 8020a42:	6030      	str	r0, [r6, #0]
 8020a44:	2800      	cmp	r0, #0
 8020a46:	d1d5      	bne.n	80209f4 <__sfp+0x24>
 8020a48:	f7ff ff78 	bl	802093c <__sfp_lock_release>
 8020a4c:	230c      	movs	r3, #12
 8020a4e:	603b      	str	r3, [r7, #0]
 8020a50:	e7ee      	b.n	8020a30 <__sfp+0x60>
 8020a52:	bf00      	nop
 8020a54:	08024728 	.word	0x08024728
 8020a58:	ffff0001 	.word	0xffff0001

08020a5c <fiprintf>:
 8020a5c:	b40e      	push	{r1, r2, r3}
 8020a5e:	b503      	push	{r0, r1, lr}
 8020a60:	4601      	mov	r1, r0
 8020a62:	ab03      	add	r3, sp, #12
 8020a64:	4805      	ldr	r0, [pc, #20]	; (8020a7c <fiprintf+0x20>)
 8020a66:	f853 2b04 	ldr.w	r2, [r3], #4
 8020a6a:	6800      	ldr	r0, [r0, #0]
 8020a6c:	9301      	str	r3, [sp, #4]
 8020a6e:	f000 f97f 	bl	8020d70 <_vfiprintf_r>
 8020a72:	b002      	add	sp, #8
 8020a74:	f85d eb04 	ldr.w	lr, [sp], #4
 8020a78:	b003      	add	sp, #12
 8020a7a:	4770      	bx	lr
 8020a7c:	20000104 	.word	0x20000104

08020a80 <_fwalk_reent>:
 8020a80:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8020a84:	4606      	mov	r6, r0
 8020a86:	4688      	mov	r8, r1
 8020a88:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8020a8c:	2700      	movs	r7, #0
 8020a8e:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8020a92:	f1b9 0901 	subs.w	r9, r9, #1
 8020a96:	d505      	bpl.n	8020aa4 <_fwalk_reent+0x24>
 8020a98:	6824      	ldr	r4, [r4, #0]
 8020a9a:	2c00      	cmp	r4, #0
 8020a9c:	d1f7      	bne.n	8020a8e <_fwalk_reent+0xe>
 8020a9e:	4638      	mov	r0, r7
 8020aa0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8020aa4:	89ab      	ldrh	r3, [r5, #12]
 8020aa6:	2b01      	cmp	r3, #1
 8020aa8:	d907      	bls.n	8020aba <_fwalk_reent+0x3a>
 8020aaa:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8020aae:	3301      	adds	r3, #1
 8020ab0:	d003      	beq.n	8020aba <_fwalk_reent+0x3a>
 8020ab2:	4629      	mov	r1, r5
 8020ab4:	4630      	mov	r0, r6
 8020ab6:	47c0      	blx	r8
 8020ab8:	4307      	orrs	r7, r0
 8020aba:	3568      	adds	r5, #104	; 0x68
 8020abc:	e7e9      	b.n	8020a92 <_fwalk_reent+0x12>
	...

08020ac0 <__libc_init_array>:
 8020ac0:	b570      	push	{r4, r5, r6, lr}
 8020ac2:	4d0d      	ldr	r5, [pc, #52]	; (8020af8 <__libc_init_array+0x38>)
 8020ac4:	4c0d      	ldr	r4, [pc, #52]	; (8020afc <__libc_init_array+0x3c>)
 8020ac6:	1b64      	subs	r4, r4, r5
 8020ac8:	10a4      	asrs	r4, r4, #2
 8020aca:	2600      	movs	r6, #0
 8020acc:	42a6      	cmp	r6, r4
 8020ace:	d109      	bne.n	8020ae4 <__libc_init_array+0x24>
 8020ad0:	4d0b      	ldr	r5, [pc, #44]	; (8020b00 <__libc_init_array+0x40>)
 8020ad2:	4c0c      	ldr	r4, [pc, #48]	; (8020b04 <__libc_init_array+0x44>)
 8020ad4:	f000 ffd0 	bl	8021a78 <_init>
 8020ad8:	1b64      	subs	r4, r4, r5
 8020ada:	10a4      	asrs	r4, r4, #2
 8020adc:	2600      	movs	r6, #0
 8020ade:	42a6      	cmp	r6, r4
 8020ae0:	d105      	bne.n	8020aee <__libc_init_array+0x2e>
 8020ae2:	bd70      	pop	{r4, r5, r6, pc}
 8020ae4:	f855 3b04 	ldr.w	r3, [r5], #4
 8020ae8:	4798      	blx	r3
 8020aea:	3601      	adds	r6, #1
 8020aec:	e7ee      	b.n	8020acc <__libc_init_array+0xc>
 8020aee:	f855 3b04 	ldr.w	r3, [r5], #4
 8020af2:	4798      	blx	r3
 8020af4:	3601      	adds	r6, #1
 8020af6:	e7f2      	b.n	8020ade <__libc_init_array+0x1e>
 8020af8:	080c32fc 	.word	0x080c32fc
 8020afc:	080c32fc 	.word	0x080c32fc
 8020b00:	080c32fc 	.word	0x080c32fc
 8020b04:	080c3310 	.word	0x080c3310

08020b08 <__retarget_lock_init_recursive>:
 8020b08:	4770      	bx	lr

08020b0a <__retarget_lock_acquire_recursive>:
 8020b0a:	4770      	bx	lr

08020b0c <__retarget_lock_release>:
 8020b0c:	4770      	bx	lr

08020b0e <__retarget_lock_release_recursive>:
 8020b0e:	4770      	bx	lr

08020b10 <malloc>:
 8020b10:	4b02      	ldr	r3, [pc, #8]	; (8020b1c <malloc+0xc>)
 8020b12:	4601      	mov	r1, r0
 8020b14:	6818      	ldr	r0, [r3, #0]
 8020b16:	f000 b88d 	b.w	8020c34 <_malloc_r>
 8020b1a:	bf00      	nop
 8020b1c:	20000104 	.word	0x20000104

08020b20 <free>:
 8020b20:	4b02      	ldr	r3, [pc, #8]	; (8020b2c <free+0xc>)
 8020b22:	4601      	mov	r1, r0
 8020b24:	6818      	ldr	r0, [r3, #0]
 8020b26:	f000 b819 	b.w	8020b5c <_free_r>
 8020b2a:	bf00      	nop
 8020b2c:	20000104 	.word	0x20000104

08020b30 <memcpy>:
 8020b30:	440a      	add	r2, r1
 8020b32:	4291      	cmp	r1, r2
 8020b34:	f100 33ff 	add.w	r3, r0, #4294967295
 8020b38:	d100      	bne.n	8020b3c <memcpy+0xc>
 8020b3a:	4770      	bx	lr
 8020b3c:	b510      	push	{r4, lr}
 8020b3e:	f811 4b01 	ldrb.w	r4, [r1], #1
 8020b42:	f803 4f01 	strb.w	r4, [r3, #1]!
 8020b46:	4291      	cmp	r1, r2
 8020b48:	d1f9      	bne.n	8020b3e <memcpy+0xe>
 8020b4a:	bd10      	pop	{r4, pc}

08020b4c <memset>:
 8020b4c:	4402      	add	r2, r0
 8020b4e:	4603      	mov	r3, r0
 8020b50:	4293      	cmp	r3, r2
 8020b52:	d100      	bne.n	8020b56 <memset+0xa>
 8020b54:	4770      	bx	lr
 8020b56:	f803 1b01 	strb.w	r1, [r3], #1
 8020b5a:	e7f9      	b.n	8020b50 <memset+0x4>

08020b5c <_free_r>:
 8020b5c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8020b5e:	2900      	cmp	r1, #0
 8020b60:	d044      	beq.n	8020bec <_free_r+0x90>
 8020b62:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8020b66:	9001      	str	r0, [sp, #4]
 8020b68:	2b00      	cmp	r3, #0
 8020b6a:	f1a1 0404 	sub.w	r4, r1, #4
 8020b6e:	bfb8      	it	lt
 8020b70:	18e4      	addlt	r4, r4, r3
 8020b72:	f000 ff41 	bl	80219f8 <__malloc_lock>
 8020b76:	4a1e      	ldr	r2, [pc, #120]	; (8020bf0 <_free_r+0x94>)
 8020b78:	9801      	ldr	r0, [sp, #4]
 8020b7a:	6813      	ldr	r3, [r2, #0]
 8020b7c:	b933      	cbnz	r3, 8020b8c <_free_r+0x30>
 8020b7e:	6063      	str	r3, [r4, #4]
 8020b80:	6014      	str	r4, [r2, #0]
 8020b82:	b003      	add	sp, #12
 8020b84:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8020b88:	f000 bf3c 	b.w	8021a04 <__malloc_unlock>
 8020b8c:	42a3      	cmp	r3, r4
 8020b8e:	d908      	bls.n	8020ba2 <_free_r+0x46>
 8020b90:	6825      	ldr	r5, [r4, #0]
 8020b92:	1961      	adds	r1, r4, r5
 8020b94:	428b      	cmp	r3, r1
 8020b96:	bf01      	itttt	eq
 8020b98:	6819      	ldreq	r1, [r3, #0]
 8020b9a:	685b      	ldreq	r3, [r3, #4]
 8020b9c:	1949      	addeq	r1, r1, r5
 8020b9e:	6021      	streq	r1, [r4, #0]
 8020ba0:	e7ed      	b.n	8020b7e <_free_r+0x22>
 8020ba2:	461a      	mov	r2, r3
 8020ba4:	685b      	ldr	r3, [r3, #4]
 8020ba6:	b10b      	cbz	r3, 8020bac <_free_r+0x50>
 8020ba8:	42a3      	cmp	r3, r4
 8020baa:	d9fa      	bls.n	8020ba2 <_free_r+0x46>
 8020bac:	6811      	ldr	r1, [r2, #0]
 8020bae:	1855      	adds	r5, r2, r1
 8020bb0:	42a5      	cmp	r5, r4
 8020bb2:	d10b      	bne.n	8020bcc <_free_r+0x70>
 8020bb4:	6824      	ldr	r4, [r4, #0]
 8020bb6:	4421      	add	r1, r4
 8020bb8:	1854      	adds	r4, r2, r1
 8020bba:	42a3      	cmp	r3, r4
 8020bbc:	6011      	str	r1, [r2, #0]
 8020bbe:	d1e0      	bne.n	8020b82 <_free_r+0x26>
 8020bc0:	681c      	ldr	r4, [r3, #0]
 8020bc2:	685b      	ldr	r3, [r3, #4]
 8020bc4:	6053      	str	r3, [r2, #4]
 8020bc6:	4421      	add	r1, r4
 8020bc8:	6011      	str	r1, [r2, #0]
 8020bca:	e7da      	b.n	8020b82 <_free_r+0x26>
 8020bcc:	d902      	bls.n	8020bd4 <_free_r+0x78>
 8020bce:	230c      	movs	r3, #12
 8020bd0:	6003      	str	r3, [r0, #0]
 8020bd2:	e7d6      	b.n	8020b82 <_free_r+0x26>
 8020bd4:	6825      	ldr	r5, [r4, #0]
 8020bd6:	1961      	adds	r1, r4, r5
 8020bd8:	428b      	cmp	r3, r1
 8020bda:	bf04      	itt	eq
 8020bdc:	6819      	ldreq	r1, [r3, #0]
 8020bde:	685b      	ldreq	r3, [r3, #4]
 8020be0:	6063      	str	r3, [r4, #4]
 8020be2:	bf04      	itt	eq
 8020be4:	1949      	addeq	r1, r1, r5
 8020be6:	6021      	streq	r1, [r4, #0]
 8020be8:	6054      	str	r4, [r2, #4]
 8020bea:	e7ca      	b.n	8020b82 <_free_r+0x26>
 8020bec:	b003      	add	sp, #12
 8020bee:	bd30      	pop	{r4, r5, pc}
 8020bf0:	200156bc 	.word	0x200156bc

08020bf4 <sbrk_aligned>:
 8020bf4:	b570      	push	{r4, r5, r6, lr}
 8020bf6:	4e0e      	ldr	r6, [pc, #56]	; (8020c30 <sbrk_aligned+0x3c>)
 8020bf8:	460c      	mov	r4, r1
 8020bfa:	6831      	ldr	r1, [r6, #0]
 8020bfc:	4605      	mov	r5, r0
 8020bfe:	b911      	cbnz	r1, 8020c06 <sbrk_aligned+0x12>
 8020c00:	f000 fbe4 	bl	80213cc <_sbrk_r>
 8020c04:	6030      	str	r0, [r6, #0]
 8020c06:	4621      	mov	r1, r4
 8020c08:	4628      	mov	r0, r5
 8020c0a:	f000 fbdf 	bl	80213cc <_sbrk_r>
 8020c0e:	1c43      	adds	r3, r0, #1
 8020c10:	d00a      	beq.n	8020c28 <sbrk_aligned+0x34>
 8020c12:	1cc4      	adds	r4, r0, #3
 8020c14:	f024 0403 	bic.w	r4, r4, #3
 8020c18:	42a0      	cmp	r0, r4
 8020c1a:	d007      	beq.n	8020c2c <sbrk_aligned+0x38>
 8020c1c:	1a21      	subs	r1, r4, r0
 8020c1e:	4628      	mov	r0, r5
 8020c20:	f000 fbd4 	bl	80213cc <_sbrk_r>
 8020c24:	3001      	adds	r0, #1
 8020c26:	d101      	bne.n	8020c2c <sbrk_aligned+0x38>
 8020c28:	f04f 34ff 	mov.w	r4, #4294967295
 8020c2c:	4620      	mov	r0, r4
 8020c2e:	bd70      	pop	{r4, r5, r6, pc}
 8020c30:	200156c0 	.word	0x200156c0

08020c34 <_malloc_r>:
 8020c34:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8020c38:	1ccd      	adds	r5, r1, #3
 8020c3a:	f025 0503 	bic.w	r5, r5, #3
 8020c3e:	3508      	adds	r5, #8
 8020c40:	2d0c      	cmp	r5, #12
 8020c42:	bf38      	it	cc
 8020c44:	250c      	movcc	r5, #12
 8020c46:	2d00      	cmp	r5, #0
 8020c48:	4607      	mov	r7, r0
 8020c4a:	db01      	blt.n	8020c50 <_malloc_r+0x1c>
 8020c4c:	42a9      	cmp	r1, r5
 8020c4e:	d905      	bls.n	8020c5c <_malloc_r+0x28>
 8020c50:	230c      	movs	r3, #12
 8020c52:	603b      	str	r3, [r7, #0]
 8020c54:	2600      	movs	r6, #0
 8020c56:	4630      	mov	r0, r6
 8020c58:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8020c5c:	4e2e      	ldr	r6, [pc, #184]	; (8020d18 <_malloc_r+0xe4>)
 8020c5e:	f000 fecb 	bl	80219f8 <__malloc_lock>
 8020c62:	6833      	ldr	r3, [r6, #0]
 8020c64:	461c      	mov	r4, r3
 8020c66:	bb34      	cbnz	r4, 8020cb6 <_malloc_r+0x82>
 8020c68:	4629      	mov	r1, r5
 8020c6a:	4638      	mov	r0, r7
 8020c6c:	f7ff ffc2 	bl	8020bf4 <sbrk_aligned>
 8020c70:	1c43      	adds	r3, r0, #1
 8020c72:	4604      	mov	r4, r0
 8020c74:	d14d      	bne.n	8020d12 <_malloc_r+0xde>
 8020c76:	6834      	ldr	r4, [r6, #0]
 8020c78:	4626      	mov	r6, r4
 8020c7a:	2e00      	cmp	r6, #0
 8020c7c:	d140      	bne.n	8020d00 <_malloc_r+0xcc>
 8020c7e:	6823      	ldr	r3, [r4, #0]
 8020c80:	4631      	mov	r1, r6
 8020c82:	4638      	mov	r0, r7
 8020c84:	eb04 0803 	add.w	r8, r4, r3
 8020c88:	f000 fba0 	bl	80213cc <_sbrk_r>
 8020c8c:	4580      	cmp	r8, r0
 8020c8e:	d13a      	bne.n	8020d06 <_malloc_r+0xd2>
 8020c90:	6821      	ldr	r1, [r4, #0]
 8020c92:	3503      	adds	r5, #3
 8020c94:	1a6d      	subs	r5, r5, r1
 8020c96:	f025 0503 	bic.w	r5, r5, #3
 8020c9a:	3508      	adds	r5, #8
 8020c9c:	2d0c      	cmp	r5, #12
 8020c9e:	bf38      	it	cc
 8020ca0:	250c      	movcc	r5, #12
 8020ca2:	4629      	mov	r1, r5
 8020ca4:	4638      	mov	r0, r7
 8020ca6:	f7ff ffa5 	bl	8020bf4 <sbrk_aligned>
 8020caa:	3001      	adds	r0, #1
 8020cac:	d02b      	beq.n	8020d06 <_malloc_r+0xd2>
 8020cae:	6823      	ldr	r3, [r4, #0]
 8020cb0:	442b      	add	r3, r5
 8020cb2:	6023      	str	r3, [r4, #0]
 8020cb4:	e00e      	b.n	8020cd4 <_malloc_r+0xa0>
 8020cb6:	6822      	ldr	r2, [r4, #0]
 8020cb8:	1b52      	subs	r2, r2, r5
 8020cba:	d41e      	bmi.n	8020cfa <_malloc_r+0xc6>
 8020cbc:	2a0b      	cmp	r2, #11
 8020cbe:	d916      	bls.n	8020cee <_malloc_r+0xba>
 8020cc0:	1961      	adds	r1, r4, r5
 8020cc2:	42a3      	cmp	r3, r4
 8020cc4:	6025      	str	r5, [r4, #0]
 8020cc6:	bf18      	it	ne
 8020cc8:	6059      	strne	r1, [r3, #4]
 8020cca:	6863      	ldr	r3, [r4, #4]
 8020ccc:	bf08      	it	eq
 8020cce:	6031      	streq	r1, [r6, #0]
 8020cd0:	5162      	str	r2, [r4, r5]
 8020cd2:	604b      	str	r3, [r1, #4]
 8020cd4:	4638      	mov	r0, r7
 8020cd6:	f104 060b 	add.w	r6, r4, #11
 8020cda:	f000 fe93 	bl	8021a04 <__malloc_unlock>
 8020cde:	f026 0607 	bic.w	r6, r6, #7
 8020ce2:	1d23      	adds	r3, r4, #4
 8020ce4:	1af2      	subs	r2, r6, r3
 8020ce6:	d0b6      	beq.n	8020c56 <_malloc_r+0x22>
 8020ce8:	1b9b      	subs	r3, r3, r6
 8020cea:	50a3      	str	r3, [r4, r2]
 8020cec:	e7b3      	b.n	8020c56 <_malloc_r+0x22>
 8020cee:	6862      	ldr	r2, [r4, #4]
 8020cf0:	42a3      	cmp	r3, r4
 8020cf2:	bf0c      	ite	eq
 8020cf4:	6032      	streq	r2, [r6, #0]
 8020cf6:	605a      	strne	r2, [r3, #4]
 8020cf8:	e7ec      	b.n	8020cd4 <_malloc_r+0xa0>
 8020cfa:	4623      	mov	r3, r4
 8020cfc:	6864      	ldr	r4, [r4, #4]
 8020cfe:	e7b2      	b.n	8020c66 <_malloc_r+0x32>
 8020d00:	4634      	mov	r4, r6
 8020d02:	6876      	ldr	r6, [r6, #4]
 8020d04:	e7b9      	b.n	8020c7a <_malloc_r+0x46>
 8020d06:	230c      	movs	r3, #12
 8020d08:	603b      	str	r3, [r7, #0]
 8020d0a:	4638      	mov	r0, r7
 8020d0c:	f000 fe7a 	bl	8021a04 <__malloc_unlock>
 8020d10:	e7a1      	b.n	8020c56 <_malloc_r+0x22>
 8020d12:	6025      	str	r5, [r4, #0]
 8020d14:	e7de      	b.n	8020cd4 <_malloc_r+0xa0>
 8020d16:	bf00      	nop
 8020d18:	200156bc 	.word	0x200156bc

08020d1c <__sfputc_r>:
 8020d1c:	6893      	ldr	r3, [r2, #8]
 8020d1e:	3b01      	subs	r3, #1
 8020d20:	2b00      	cmp	r3, #0
 8020d22:	b410      	push	{r4}
 8020d24:	6093      	str	r3, [r2, #8]
 8020d26:	da08      	bge.n	8020d3a <__sfputc_r+0x1e>
 8020d28:	6994      	ldr	r4, [r2, #24]
 8020d2a:	42a3      	cmp	r3, r4
 8020d2c:	db01      	blt.n	8020d32 <__sfputc_r+0x16>
 8020d2e:	290a      	cmp	r1, #10
 8020d30:	d103      	bne.n	8020d3a <__sfputc_r+0x1e>
 8020d32:	f85d 4b04 	ldr.w	r4, [sp], #4
 8020d36:	f000 bbe1 	b.w	80214fc <__swbuf_r>
 8020d3a:	6813      	ldr	r3, [r2, #0]
 8020d3c:	1c58      	adds	r0, r3, #1
 8020d3e:	6010      	str	r0, [r2, #0]
 8020d40:	7019      	strb	r1, [r3, #0]
 8020d42:	4608      	mov	r0, r1
 8020d44:	f85d 4b04 	ldr.w	r4, [sp], #4
 8020d48:	4770      	bx	lr

08020d4a <__sfputs_r>:
 8020d4a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8020d4c:	4606      	mov	r6, r0
 8020d4e:	460f      	mov	r7, r1
 8020d50:	4614      	mov	r4, r2
 8020d52:	18d5      	adds	r5, r2, r3
 8020d54:	42ac      	cmp	r4, r5
 8020d56:	d101      	bne.n	8020d5c <__sfputs_r+0x12>
 8020d58:	2000      	movs	r0, #0
 8020d5a:	e007      	b.n	8020d6c <__sfputs_r+0x22>
 8020d5c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8020d60:	463a      	mov	r2, r7
 8020d62:	4630      	mov	r0, r6
 8020d64:	f7ff ffda 	bl	8020d1c <__sfputc_r>
 8020d68:	1c43      	adds	r3, r0, #1
 8020d6a:	d1f3      	bne.n	8020d54 <__sfputs_r+0xa>
 8020d6c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08020d70 <_vfiprintf_r>:
 8020d70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020d74:	460d      	mov	r5, r1
 8020d76:	b09d      	sub	sp, #116	; 0x74
 8020d78:	4614      	mov	r4, r2
 8020d7a:	4698      	mov	r8, r3
 8020d7c:	4606      	mov	r6, r0
 8020d7e:	b118      	cbz	r0, 8020d88 <_vfiprintf_r+0x18>
 8020d80:	6983      	ldr	r3, [r0, #24]
 8020d82:	b90b      	cbnz	r3, 8020d88 <_vfiprintf_r+0x18>
 8020d84:	f7ff fdec 	bl	8020960 <__sinit>
 8020d88:	4b89      	ldr	r3, [pc, #548]	; (8020fb0 <_vfiprintf_r+0x240>)
 8020d8a:	429d      	cmp	r5, r3
 8020d8c:	d11b      	bne.n	8020dc6 <_vfiprintf_r+0x56>
 8020d8e:	6875      	ldr	r5, [r6, #4]
 8020d90:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8020d92:	07d9      	lsls	r1, r3, #31
 8020d94:	d405      	bmi.n	8020da2 <_vfiprintf_r+0x32>
 8020d96:	89ab      	ldrh	r3, [r5, #12]
 8020d98:	059a      	lsls	r2, r3, #22
 8020d9a:	d402      	bmi.n	8020da2 <_vfiprintf_r+0x32>
 8020d9c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8020d9e:	f7ff feb4 	bl	8020b0a <__retarget_lock_acquire_recursive>
 8020da2:	89ab      	ldrh	r3, [r5, #12]
 8020da4:	071b      	lsls	r3, r3, #28
 8020da6:	d501      	bpl.n	8020dac <_vfiprintf_r+0x3c>
 8020da8:	692b      	ldr	r3, [r5, #16]
 8020daa:	b9eb      	cbnz	r3, 8020de8 <_vfiprintf_r+0x78>
 8020dac:	4629      	mov	r1, r5
 8020dae:	4630      	mov	r0, r6
 8020db0:	f000 fc08 	bl	80215c4 <__swsetup_r>
 8020db4:	b1c0      	cbz	r0, 8020de8 <_vfiprintf_r+0x78>
 8020db6:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8020db8:	07dc      	lsls	r4, r3, #31
 8020dba:	d50e      	bpl.n	8020dda <_vfiprintf_r+0x6a>
 8020dbc:	f04f 30ff 	mov.w	r0, #4294967295
 8020dc0:	b01d      	add	sp, #116	; 0x74
 8020dc2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020dc6:	4b7b      	ldr	r3, [pc, #492]	; (8020fb4 <_vfiprintf_r+0x244>)
 8020dc8:	429d      	cmp	r5, r3
 8020dca:	d101      	bne.n	8020dd0 <_vfiprintf_r+0x60>
 8020dcc:	68b5      	ldr	r5, [r6, #8]
 8020dce:	e7df      	b.n	8020d90 <_vfiprintf_r+0x20>
 8020dd0:	4b79      	ldr	r3, [pc, #484]	; (8020fb8 <_vfiprintf_r+0x248>)
 8020dd2:	429d      	cmp	r5, r3
 8020dd4:	bf08      	it	eq
 8020dd6:	68f5      	ldreq	r5, [r6, #12]
 8020dd8:	e7da      	b.n	8020d90 <_vfiprintf_r+0x20>
 8020dda:	89ab      	ldrh	r3, [r5, #12]
 8020ddc:	0598      	lsls	r0, r3, #22
 8020dde:	d4ed      	bmi.n	8020dbc <_vfiprintf_r+0x4c>
 8020de0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8020de2:	f7ff fe94 	bl	8020b0e <__retarget_lock_release_recursive>
 8020de6:	e7e9      	b.n	8020dbc <_vfiprintf_r+0x4c>
 8020de8:	2300      	movs	r3, #0
 8020dea:	9309      	str	r3, [sp, #36]	; 0x24
 8020dec:	2320      	movs	r3, #32
 8020dee:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8020df2:	f8cd 800c 	str.w	r8, [sp, #12]
 8020df6:	2330      	movs	r3, #48	; 0x30
 8020df8:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8020fbc <_vfiprintf_r+0x24c>
 8020dfc:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8020e00:	f04f 0901 	mov.w	r9, #1
 8020e04:	4623      	mov	r3, r4
 8020e06:	469a      	mov	sl, r3
 8020e08:	f813 2b01 	ldrb.w	r2, [r3], #1
 8020e0c:	b10a      	cbz	r2, 8020e12 <_vfiprintf_r+0xa2>
 8020e0e:	2a25      	cmp	r2, #37	; 0x25
 8020e10:	d1f9      	bne.n	8020e06 <_vfiprintf_r+0x96>
 8020e12:	ebba 0b04 	subs.w	fp, sl, r4
 8020e16:	d00b      	beq.n	8020e30 <_vfiprintf_r+0xc0>
 8020e18:	465b      	mov	r3, fp
 8020e1a:	4622      	mov	r2, r4
 8020e1c:	4629      	mov	r1, r5
 8020e1e:	4630      	mov	r0, r6
 8020e20:	f7ff ff93 	bl	8020d4a <__sfputs_r>
 8020e24:	3001      	adds	r0, #1
 8020e26:	f000 80aa 	beq.w	8020f7e <_vfiprintf_r+0x20e>
 8020e2a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8020e2c:	445a      	add	r2, fp
 8020e2e:	9209      	str	r2, [sp, #36]	; 0x24
 8020e30:	f89a 3000 	ldrb.w	r3, [sl]
 8020e34:	2b00      	cmp	r3, #0
 8020e36:	f000 80a2 	beq.w	8020f7e <_vfiprintf_r+0x20e>
 8020e3a:	2300      	movs	r3, #0
 8020e3c:	f04f 32ff 	mov.w	r2, #4294967295
 8020e40:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8020e44:	f10a 0a01 	add.w	sl, sl, #1
 8020e48:	9304      	str	r3, [sp, #16]
 8020e4a:	9307      	str	r3, [sp, #28]
 8020e4c:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8020e50:	931a      	str	r3, [sp, #104]	; 0x68
 8020e52:	4654      	mov	r4, sl
 8020e54:	2205      	movs	r2, #5
 8020e56:	f814 1b01 	ldrb.w	r1, [r4], #1
 8020e5a:	4858      	ldr	r0, [pc, #352]	; (8020fbc <_vfiprintf_r+0x24c>)
 8020e5c:	f7df f9c8 	bl	80001f0 <memchr>
 8020e60:	9a04      	ldr	r2, [sp, #16]
 8020e62:	b9d8      	cbnz	r0, 8020e9c <_vfiprintf_r+0x12c>
 8020e64:	06d1      	lsls	r1, r2, #27
 8020e66:	bf44      	itt	mi
 8020e68:	2320      	movmi	r3, #32
 8020e6a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8020e6e:	0713      	lsls	r3, r2, #28
 8020e70:	bf44      	itt	mi
 8020e72:	232b      	movmi	r3, #43	; 0x2b
 8020e74:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8020e78:	f89a 3000 	ldrb.w	r3, [sl]
 8020e7c:	2b2a      	cmp	r3, #42	; 0x2a
 8020e7e:	d015      	beq.n	8020eac <_vfiprintf_r+0x13c>
 8020e80:	9a07      	ldr	r2, [sp, #28]
 8020e82:	4654      	mov	r4, sl
 8020e84:	2000      	movs	r0, #0
 8020e86:	f04f 0c0a 	mov.w	ip, #10
 8020e8a:	4621      	mov	r1, r4
 8020e8c:	f811 3b01 	ldrb.w	r3, [r1], #1
 8020e90:	3b30      	subs	r3, #48	; 0x30
 8020e92:	2b09      	cmp	r3, #9
 8020e94:	d94e      	bls.n	8020f34 <_vfiprintf_r+0x1c4>
 8020e96:	b1b0      	cbz	r0, 8020ec6 <_vfiprintf_r+0x156>
 8020e98:	9207      	str	r2, [sp, #28]
 8020e9a:	e014      	b.n	8020ec6 <_vfiprintf_r+0x156>
 8020e9c:	eba0 0308 	sub.w	r3, r0, r8
 8020ea0:	fa09 f303 	lsl.w	r3, r9, r3
 8020ea4:	4313      	orrs	r3, r2
 8020ea6:	9304      	str	r3, [sp, #16]
 8020ea8:	46a2      	mov	sl, r4
 8020eaa:	e7d2      	b.n	8020e52 <_vfiprintf_r+0xe2>
 8020eac:	9b03      	ldr	r3, [sp, #12]
 8020eae:	1d19      	adds	r1, r3, #4
 8020eb0:	681b      	ldr	r3, [r3, #0]
 8020eb2:	9103      	str	r1, [sp, #12]
 8020eb4:	2b00      	cmp	r3, #0
 8020eb6:	bfbb      	ittet	lt
 8020eb8:	425b      	neglt	r3, r3
 8020eba:	f042 0202 	orrlt.w	r2, r2, #2
 8020ebe:	9307      	strge	r3, [sp, #28]
 8020ec0:	9307      	strlt	r3, [sp, #28]
 8020ec2:	bfb8      	it	lt
 8020ec4:	9204      	strlt	r2, [sp, #16]
 8020ec6:	7823      	ldrb	r3, [r4, #0]
 8020ec8:	2b2e      	cmp	r3, #46	; 0x2e
 8020eca:	d10c      	bne.n	8020ee6 <_vfiprintf_r+0x176>
 8020ecc:	7863      	ldrb	r3, [r4, #1]
 8020ece:	2b2a      	cmp	r3, #42	; 0x2a
 8020ed0:	d135      	bne.n	8020f3e <_vfiprintf_r+0x1ce>
 8020ed2:	9b03      	ldr	r3, [sp, #12]
 8020ed4:	1d1a      	adds	r2, r3, #4
 8020ed6:	681b      	ldr	r3, [r3, #0]
 8020ed8:	9203      	str	r2, [sp, #12]
 8020eda:	2b00      	cmp	r3, #0
 8020edc:	bfb8      	it	lt
 8020ede:	f04f 33ff 	movlt.w	r3, #4294967295
 8020ee2:	3402      	adds	r4, #2
 8020ee4:	9305      	str	r3, [sp, #20]
 8020ee6:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8020fcc <_vfiprintf_r+0x25c>
 8020eea:	7821      	ldrb	r1, [r4, #0]
 8020eec:	2203      	movs	r2, #3
 8020eee:	4650      	mov	r0, sl
 8020ef0:	f7df f97e 	bl	80001f0 <memchr>
 8020ef4:	b140      	cbz	r0, 8020f08 <_vfiprintf_r+0x198>
 8020ef6:	2340      	movs	r3, #64	; 0x40
 8020ef8:	eba0 000a 	sub.w	r0, r0, sl
 8020efc:	fa03 f000 	lsl.w	r0, r3, r0
 8020f00:	9b04      	ldr	r3, [sp, #16]
 8020f02:	4303      	orrs	r3, r0
 8020f04:	3401      	adds	r4, #1
 8020f06:	9304      	str	r3, [sp, #16]
 8020f08:	f814 1b01 	ldrb.w	r1, [r4], #1
 8020f0c:	482c      	ldr	r0, [pc, #176]	; (8020fc0 <_vfiprintf_r+0x250>)
 8020f0e:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8020f12:	2206      	movs	r2, #6
 8020f14:	f7df f96c 	bl	80001f0 <memchr>
 8020f18:	2800      	cmp	r0, #0
 8020f1a:	d03f      	beq.n	8020f9c <_vfiprintf_r+0x22c>
 8020f1c:	4b29      	ldr	r3, [pc, #164]	; (8020fc4 <_vfiprintf_r+0x254>)
 8020f1e:	bb1b      	cbnz	r3, 8020f68 <_vfiprintf_r+0x1f8>
 8020f20:	9b03      	ldr	r3, [sp, #12]
 8020f22:	3307      	adds	r3, #7
 8020f24:	f023 0307 	bic.w	r3, r3, #7
 8020f28:	3308      	adds	r3, #8
 8020f2a:	9303      	str	r3, [sp, #12]
 8020f2c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020f2e:	443b      	add	r3, r7
 8020f30:	9309      	str	r3, [sp, #36]	; 0x24
 8020f32:	e767      	b.n	8020e04 <_vfiprintf_r+0x94>
 8020f34:	fb0c 3202 	mla	r2, ip, r2, r3
 8020f38:	460c      	mov	r4, r1
 8020f3a:	2001      	movs	r0, #1
 8020f3c:	e7a5      	b.n	8020e8a <_vfiprintf_r+0x11a>
 8020f3e:	2300      	movs	r3, #0
 8020f40:	3401      	adds	r4, #1
 8020f42:	9305      	str	r3, [sp, #20]
 8020f44:	4619      	mov	r1, r3
 8020f46:	f04f 0c0a 	mov.w	ip, #10
 8020f4a:	4620      	mov	r0, r4
 8020f4c:	f810 2b01 	ldrb.w	r2, [r0], #1
 8020f50:	3a30      	subs	r2, #48	; 0x30
 8020f52:	2a09      	cmp	r2, #9
 8020f54:	d903      	bls.n	8020f5e <_vfiprintf_r+0x1ee>
 8020f56:	2b00      	cmp	r3, #0
 8020f58:	d0c5      	beq.n	8020ee6 <_vfiprintf_r+0x176>
 8020f5a:	9105      	str	r1, [sp, #20]
 8020f5c:	e7c3      	b.n	8020ee6 <_vfiprintf_r+0x176>
 8020f5e:	fb0c 2101 	mla	r1, ip, r1, r2
 8020f62:	4604      	mov	r4, r0
 8020f64:	2301      	movs	r3, #1
 8020f66:	e7f0      	b.n	8020f4a <_vfiprintf_r+0x1da>
 8020f68:	ab03      	add	r3, sp, #12
 8020f6a:	9300      	str	r3, [sp, #0]
 8020f6c:	462a      	mov	r2, r5
 8020f6e:	4b16      	ldr	r3, [pc, #88]	; (8020fc8 <_vfiprintf_r+0x258>)
 8020f70:	a904      	add	r1, sp, #16
 8020f72:	4630      	mov	r0, r6
 8020f74:	f3af 8000 	nop.w
 8020f78:	4607      	mov	r7, r0
 8020f7a:	1c78      	adds	r0, r7, #1
 8020f7c:	d1d6      	bne.n	8020f2c <_vfiprintf_r+0x1bc>
 8020f7e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8020f80:	07d9      	lsls	r1, r3, #31
 8020f82:	d405      	bmi.n	8020f90 <_vfiprintf_r+0x220>
 8020f84:	89ab      	ldrh	r3, [r5, #12]
 8020f86:	059a      	lsls	r2, r3, #22
 8020f88:	d402      	bmi.n	8020f90 <_vfiprintf_r+0x220>
 8020f8a:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8020f8c:	f7ff fdbf 	bl	8020b0e <__retarget_lock_release_recursive>
 8020f90:	89ab      	ldrh	r3, [r5, #12]
 8020f92:	065b      	lsls	r3, r3, #25
 8020f94:	f53f af12 	bmi.w	8020dbc <_vfiprintf_r+0x4c>
 8020f98:	9809      	ldr	r0, [sp, #36]	; 0x24
 8020f9a:	e711      	b.n	8020dc0 <_vfiprintf_r+0x50>
 8020f9c:	ab03      	add	r3, sp, #12
 8020f9e:	9300      	str	r3, [sp, #0]
 8020fa0:	462a      	mov	r2, r5
 8020fa2:	4b09      	ldr	r3, [pc, #36]	; (8020fc8 <_vfiprintf_r+0x258>)
 8020fa4:	a904      	add	r1, sp, #16
 8020fa6:	4630      	mov	r0, r6
 8020fa8:	f000 f880 	bl	80210ac <_printf_i>
 8020fac:	e7e4      	b.n	8020f78 <_vfiprintf_r+0x208>
 8020fae:	bf00      	nop
 8020fb0:	080246e8 	.word	0x080246e8
 8020fb4:	08024708 	.word	0x08024708
 8020fb8:	080246c8 	.word	0x080246c8
 8020fbc:	0802472c 	.word	0x0802472c
 8020fc0:	08024736 	.word	0x08024736
 8020fc4:	00000000 	.word	0x00000000
 8020fc8:	08020d4b 	.word	0x08020d4b
 8020fcc:	08024732 	.word	0x08024732

08020fd0 <_printf_common>:
 8020fd0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8020fd4:	4616      	mov	r6, r2
 8020fd6:	4699      	mov	r9, r3
 8020fd8:	688a      	ldr	r2, [r1, #8]
 8020fda:	690b      	ldr	r3, [r1, #16]
 8020fdc:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8020fe0:	4293      	cmp	r3, r2
 8020fe2:	bfb8      	it	lt
 8020fe4:	4613      	movlt	r3, r2
 8020fe6:	6033      	str	r3, [r6, #0]
 8020fe8:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8020fec:	4607      	mov	r7, r0
 8020fee:	460c      	mov	r4, r1
 8020ff0:	b10a      	cbz	r2, 8020ff6 <_printf_common+0x26>
 8020ff2:	3301      	adds	r3, #1
 8020ff4:	6033      	str	r3, [r6, #0]
 8020ff6:	6823      	ldr	r3, [r4, #0]
 8020ff8:	0699      	lsls	r1, r3, #26
 8020ffa:	bf42      	ittt	mi
 8020ffc:	6833      	ldrmi	r3, [r6, #0]
 8020ffe:	3302      	addmi	r3, #2
 8021000:	6033      	strmi	r3, [r6, #0]
 8021002:	6825      	ldr	r5, [r4, #0]
 8021004:	f015 0506 	ands.w	r5, r5, #6
 8021008:	d106      	bne.n	8021018 <_printf_common+0x48>
 802100a:	f104 0a19 	add.w	sl, r4, #25
 802100e:	68e3      	ldr	r3, [r4, #12]
 8021010:	6832      	ldr	r2, [r6, #0]
 8021012:	1a9b      	subs	r3, r3, r2
 8021014:	42ab      	cmp	r3, r5
 8021016:	dc26      	bgt.n	8021066 <_printf_common+0x96>
 8021018:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 802101c:	1e13      	subs	r3, r2, #0
 802101e:	6822      	ldr	r2, [r4, #0]
 8021020:	bf18      	it	ne
 8021022:	2301      	movne	r3, #1
 8021024:	0692      	lsls	r2, r2, #26
 8021026:	d42b      	bmi.n	8021080 <_printf_common+0xb0>
 8021028:	f104 0243 	add.w	r2, r4, #67	; 0x43
 802102c:	4649      	mov	r1, r9
 802102e:	4638      	mov	r0, r7
 8021030:	47c0      	blx	r8
 8021032:	3001      	adds	r0, #1
 8021034:	d01e      	beq.n	8021074 <_printf_common+0xa4>
 8021036:	6823      	ldr	r3, [r4, #0]
 8021038:	68e5      	ldr	r5, [r4, #12]
 802103a:	6832      	ldr	r2, [r6, #0]
 802103c:	f003 0306 	and.w	r3, r3, #6
 8021040:	2b04      	cmp	r3, #4
 8021042:	bf08      	it	eq
 8021044:	1aad      	subeq	r5, r5, r2
 8021046:	68a3      	ldr	r3, [r4, #8]
 8021048:	6922      	ldr	r2, [r4, #16]
 802104a:	bf0c      	ite	eq
 802104c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8021050:	2500      	movne	r5, #0
 8021052:	4293      	cmp	r3, r2
 8021054:	bfc4      	itt	gt
 8021056:	1a9b      	subgt	r3, r3, r2
 8021058:	18ed      	addgt	r5, r5, r3
 802105a:	2600      	movs	r6, #0
 802105c:	341a      	adds	r4, #26
 802105e:	42b5      	cmp	r5, r6
 8021060:	d11a      	bne.n	8021098 <_printf_common+0xc8>
 8021062:	2000      	movs	r0, #0
 8021064:	e008      	b.n	8021078 <_printf_common+0xa8>
 8021066:	2301      	movs	r3, #1
 8021068:	4652      	mov	r2, sl
 802106a:	4649      	mov	r1, r9
 802106c:	4638      	mov	r0, r7
 802106e:	47c0      	blx	r8
 8021070:	3001      	adds	r0, #1
 8021072:	d103      	bne.n	802107c <_printf_common+0xac>
 8021074:	f04f 30ff 	mov.w	r0, #4294967295
 8021078:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802107c:	3501      	adds	r5, #1
 802107e:	e7c6      	b.n	802100e <_printf_common+0x3e>
 8021080:	18e1      	adds	r1, r4, r3
 8021082:	1c5a      	adds	r2, r3, #1
 8021084:	2030      	movs	r0, #48	; 0x30
 8021086:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 802108a:	4422      	add	r2, r4
 802108c:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8021090:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8021094:	3302      	adds	r3, #2
 8021096:	e7c7      	b.n	8021028 <_printf_common+0x58>
 8021098:	2301      	movs	r3, #1
 802109a:	4622      	mov	r2, r4
 802109c:	4649      	mov	r1, r9
 802109e:	4638      	mov	r0, r7
 80210a0:	47c0      	blx	r8
 80210a2:	3001      	adds	r0, #1
 80210a4:	d0e6      	beq.n	8021074 <_printf_common+0xa4>
 80210a6:	3601      	adds	r6, #1
 80210a8:	e7d9      	b.n	802105e <_printf_common+0x8e>
	...

080210ac <_printf_i>:
 80210ac:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80210b0:	7e0f      	ldrb	r7, [r1, #24]
 80210b2:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80210b4:	2f78      	cmp	r7, #120	; 0x78
 80210b6:	4691      	mov	r9, r2
 80210b8:	4680      	mov	r8, r0
 80210ba:	460c      	mov	r4, r1
 80210bc:	469a      	mov	sl, r3
 80210be:	f101 0243 	add.w	r2, r1, #67	; 0x43
 80210c2:	d807      	bhi.n	80210d4 <_printf_i+0x28>
 80210c4:	2f62      	cmp	r7, #98	; 0x62
 80210c6:	d80a      	bhi.n	80210de <_printf_i+0x32>
 80210c8:	2f00      	cmp	r7, #0
 80210ca:	f000 80d8 	beq.w	802127e <_printf_i+0x1d2>
 80210ce:	2f58      	cmp	r7, #88	; 0x58
 80210d0:	f000 80a3 	beq.w	802121a <_printf_i+0x16e>
 80210d4:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80210d8:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 80210dc:	e03a      	b.n	8021154 <_printf_i+0xa8>
 80210de:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 80210e2:	2b15      	cmp	r3, #21
 80210e4:	d8f6      	bhi.n	80210d4 <_printf_i+0x28>
 80210e6:	a101      	add	r1, pc, #4	; (adr r1, 80210ec <_printf_i+0x40>)
 80210e8:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 80210ec:	08021145 	.word	0x08021145
 80210f0:	08021159 	.word	0x08021159
 80210f4:	080210d5 	.word	0x080210d5
 80210f8:	080210d5 	.word	0x080210d5
 80210fc:	080210d5 	.word	0x080210d5
 8021100:	080210d5 	.word	0x080210d5
 8021104:	08021159 	.word	0x08021159
 8021108:	080210d5 	.word	0x080210d5
 802110c:	080210d5 	.word	0x080210d5
 8021110:	080210d5 	.word	0x080210d5
 8021114:	080210d5 	.word	0x080210d5
 8021118:	08021265 	.word	0x08021265
 802111c:	08021189 	.word	0x08021189
 8021120:	08021247 	.word	0x08021247
 8021124:	080210d5 	.word	0x080210d5
 8021128:	080210d5 	.word	0x080210d5
 802112c:	08021287 	.word	0x08021287
 8021130:	080210d5 	.word	0x080210d5
 8021134:	08021189 	.word	0x08021189
 8021138:	080210d5 	.word	0x080210d5
 802113c:	080210d5 	.word	0x080210d5
 8021140:	0802124f 	.word	0x0802124f
 8021144:	682b      	ldr	r3, [r5, #0]
 8021146:	1d1a      	adds	r2, r3, #4
 8021148:	681b      	ldr	r3, [r3, #0]
 802114a:	602a      	str	r2, [r5, #0]
 802114c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8021150:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8021154:	2301      	movs	r3, #1
 8021156:	e0a3      	b.n	80212a0 <_printf_i+0x1f4>
 8021158:	6820      	ldr	r0, [r4, #0]
 802115a:	6829      	ldr	r1, [r5, #0]
 802115c:	0606      	lsls	r6, r0, #24
 802115e:	f101 0304 	add.w	r3, r1, #4
 8021162:	d50a      	bpl.n	802117a <_printf_i+0xce>
 8021164:	680e      	ldr	r6, [r1, #0]
 8021166:	602b      	str	r3, [r5, #0]
 8021168:	2e00      	cmp	r6, #0
 802116a:	da03      	bge.n	8021174 <_printf_i+0xc8>
 802116c:	232d      	movs	r3, #45	; 0x2d
 802116e:	4276      	negs	r6, r6
 8021170:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8021174:	485e      	ldr	r0, [pc, #376]	; (80212f0 <_printf_i+0x244>)
 8021176:	230a      	movs	r3, #10
 8021178:	e019      	b.n	80211ae <_printf_i+0x102>
 802117a:	680e      	ldr	r6, [r1, #0]
 802117c:	602b      	str	r3, [r5, #0]
 802117e:	f010 0f40 	tst.w	r0, #64	; 0x40
 8021182:	bf18      	it	ne
 8021184:	b236      	sxthne	r6, r6
 8021186:	e7ef      	b.n	8021168 <_printf_i+0xbc>
 8021188:	682b      	ldr	r3, [r5, #0]
 802118a:	6820      	ldr	r0, [r4, #0]
 802118c:	1d19      	adds	r1, r3, #4
 802118e:	6029      	str	r1, [r5, #0]
 8021190:	0601      	lsls	r1, r0, #24
 8021192:	d501      	bpl.n	8021198 <_printf_i+0xec>
 8021194:	681e      	ldr	r6, [r3, #0]
 8021196:	e002      	b.n	802119e <_printf_i+0xf2>
 8021198:	0646      	lsls	r6, r0, #25
 802119a:	d5fb      	bpl.n	8021194 <_printf_i+0xe8>
 802119c:	881e      	ldrh	r6, [r3, #0]
 802119e:	4854      	ldr	r0, [pc, #336]	; (80212f0 <_printf_i+0x244>)
 80211a0:	2f6f      	cmp	r7, #111	; 0x6f
 80211a2:	bf0c      	ite	eq
 80211a4:	2308      	moveq	r3, #8
 80211a6:	230a      	movne	r3, #10
 80211a8:	2100      	movs	r1, #0
 80211aa:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 80211ae:	6865      	ldr	r5, [r4, #4]
 80211b0:	60a5      	str	r5, [r4, #8]
 80211b2:	2d00      	cmp	r5, #0
 80211b4:	bfa2      	ittt	ge
 80211b6:	6821      	ldrge	r1, [r4, #0]
 80211b8:	f021 0104 	bicge.w	r1, r1, #4
 80211bc:	6021      	strge	r1, [r4, #0]
 80211be:	b90e      	cbnz	r6, 80211c4 <_printf_i+0x118>
 80211c0:	2d00      	cmp	r5, #0
 80211c2:	d04d      	beq.n	8021260 <_printf_i+0x1b4>
 80211c4:	4615      	mov	r5, r2
 80211c6:	fbb6 f1f3 	udiv	r1, r6, r3
 80211ca:	fb03 6711 	mls	r7, r3, r1, r6
 80211ce:	5dc7      	ldrb	r7, [r0, r7]
 80211d0:	f805 7d01 	strb.w	r7, [r5, #-1]!
 80211d4:	4637      	mov	r7, r6
 80211d6:	42bb      	cmp	r3, r7
 80211d8:	460e      	mov	r6, r1
 80211da:	d9f4      	bls.n	80211c6 <_printf_i+0x11a>
 80211dc:	2b08      	cmp	r3, #8
 80211de:	d10b      	bne.n	80211f8 <_printf_i+0x14c>
 80211e0:	6823      	ldr	r3, [r4, #0]
 80211e2:	07de      	lsls	r6, r3, #31
 80211e4:	d508      	bpl.n	80211f8 <_printf_i+0x14c>
 80211e6:	6923      	ldr	r3, [r4, #16]
 80211e8:	6861      	ldr	r1, [r4, #4]
 80211ea:	4299      	cmp	r1, r3
 80211ec:	bfde      	ittt	le
 80211ee:	2330      	movle	r3, #48	; 0x30
 80211f0:	f805 3c01 	strble.w	r3, [r5, #-1]
 80211f4:	f105 35ff 	addle.w	r5, r5, #4294967295
 80211f8:	1b52      	subs	r2, r2, r5
 80211fa:	6122      	str	r2, [r4, #16]
 80211fc:	f8cd a000 	str.w	sl, [sp]
 8021200:	464b      	mov	r3, r9
 8021202:	aa03      	add	r2, sp, #12
 8021204:	4621      	mov	r1, r4
 8021206:	4640      	mov	r0, r8
 8021208:	f7ff fee2 	bl	8020fd0 <_printf_common>
 802120c:	3001      	adds	r0, #1
 802120e:	d14c      	bne.n	80212aa <_printf_i+0x1fe>
 8021210:	f04f 30ff 	mov.w	r0, #4294967295
 8021214:	b004      	add	sp, #16
 8021216:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802121a:	4835      	ldr	r0, [pc, #212]	; (80212f0 <_printf_i+0x244>)
 802121c:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 8021220:	6829      	ldr	r1, [r5, #0]
 8021222:	6823      	ldr	r3, [r4, #0]
 8021224:	f851 6b04 	ldr.w	r6, [r1], #4
 8021228:	6029      	str	r1, [r5, #0]
 802122a:	061d      	lsls	r5, r3, #24
 802122c:	d514      	bpl.n	8021258 <_printf_i+0x1ac>
 802122e:	07df      	lsls	r7, r3, #31
 8021230:	bf44      	itt	mi
 8021232:	f043 0320 	orrmi.w	r3, r3, #32
 8021236:	6023      	strmi	r3, [r4, #0]
 8021238:	b91e      	cbnz	r6, 8021242 <_printf_i+0x196>
 802123a:	6823      	ldr	r3, [r4, #0]
 802123c:	f023 0320 	bic.w	r3, r3, #32
 8021240:	6023      	str	r3, [r4, #0]
 8021242:	2310      	movs	r3, #16
 8021244:	e7b0      	b.n	80211a8 <_printf_i+0xfc>
 8021246:	6823      	ldr	r3, [r4, #0]
 8021248:	f043 0320 	orr.w	r3, r3, #32
 802124c:	6023      	str	r3, [r4, #0]
 802124e:	2378      	movs	r3, #120	; 0x78
 8021250:	4828      	ldr	r0, [pc, #160]	; (80212f4 <_printf_i+0x248>)
 8021252:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8021256:	e7e3      	b.n	8021220 <_printf_i+0x174>
 8021258:	0659      	lsls	r1, r3, #25
 802125a:	bf48      	it	mi
 802125c:	b2b6      	uxthmi	r6, r6
 802125e:	e7e6      	b.n	802122e <_printf_i+0x182>
 8021260:	4615      	mov	r5, r2
 8021262:	e7bb      	b.n	80211dc <_printf_i+0x130>
 8021264:	682b      	ldr	r3, [r5, #0]
 8021266:	6826      	ldr	r6, [r4, #0]
 8021268:	6961      	ldr	r1, [r4, #20]
 802126a:	1d18      	adds	r0, r3, #4
 802126c:	6028      	str	r0, [r5, #0]
 802126e:	0635      	lsls	r5, r6, #24
 8021270:	681b      	ldr	r3, [r3, #0]
 8021272:	d501      	bpl.n	8021278 <_printf_i+0x1cc>
 8021274:	6019      	str	r1, [r3, #0]
 8021276:	e002      	b.n	802127e <_printf_i+0x1d2>
 8021278:	0670      	lsls	r0, r6, #25
 802127a:	d5fb      	bpl.n	8021274 <_printf_i+0x1c8>
 802127c:	8019      	strh	r1, [r3, #0]
 802127e:	2300      	movs	r3, #0
 8021280:	6123      	str	r3, [r4, #16]
 8021282:	4615      	mov	r5, r2
 8021284:	e7ba      	b.n	80211fc <_printf_i+0x150>
 8021286:	682b      	ldr	r3, [r5, #0]
 8021288:	1d1a      	adds	r2, r3, #4
 802128a:	602a      	str	r2, [r5, #0]
 802128c:	681d      	ldr	r5, [r3, #0]
 802128e:	6862      	ldr	r2, [r4, #4]
 8021290:	2100      	movs	r1, #0
 8021292:	4628      	mov	r0, r5
 8021294:	f7de ffac 	bl	80001f0 <memchr>
 8021298:	b108      	cbz	r0, 802129e <_printf_i+0x1f2>
 802129a:	1b40      	subs	r0, r0, r5
 802129c:	6060      	str	r0, [r4, #4]
 802129e:	6863      	ldr	r3, [r4, #4]
 80212a0:	6123      	str	r3, [r4, #16]
 80212a2:	2300      	movs	r3, #0
 80212a4:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80212a8:	e7a8      	b.n	80211fc <_printf_i+0x150>
 80212aa:	6923      	ldr	r3, [r4, #16]
 80212ac:	462a      	mov	r2, r5
 80212ae:	4649      	mov	r1, r9
 80212b0:	4640      	mov	r0, r8
 80212b2:	47d0      	blx	sl
 80212b4:	3001      	adds	r0, #1
 80212b6:	d0ab      	beq.n	8021210 <_printf_i+0x164>
 80212b8:	6823      	ldr	r3, [r4, #0]
 80212ba:	079b      	lsls	r3, r3, #30
 80212bc:	d413      	bmi.n	80212e6 <_printf_i+0x23a>
 80212be:	68e0      	ldr	r0, [r4, #12]
 80212c0:	9b03      	ldr	r3, [sp, #12]
 80212c2:	4298      	cmp	r0, r3
 80212c4:	bfb8      	it	lt
 80212c6:	4618      	movlt	r0, r3
 80212c8:	e7a4      	b.n	8021214 <_printf_i+0x168>
 80212ca:	2301      	movs	r3, #1
 80212cc:	4632      	mov	r2, r6
 80212ce:	4649      	mov	r1, r9
 80212d0:	4640      	mov	r0, r8
 80212d2:	47d0      	blx	sl
 80212d4:	3001      	adds	r0, #1
 80212d6:	d09b      	beq.n	8021210 <_printf_i+0x164>
 80212d8:	3501      	adds	r5, #1
 80212da:	68e3      	ldr	r3, [r4, #12]
 80212dc:	9903      	ldr	r1, [sp, #12]
 80212de:	1a5b      	subs	r3, r3, r1
 80212e0:	42ab      	cmp	r3, r5
 80212e2:	dcf2      	bgt.n	80212ca <_printf_i+0x21e>
 80212e4:	e7eb      	b.n	80212be <_printf_i+0x212>
 80212e6:	2500      	movs	r5, #0
 80212e8:	f104 0619 	add.w	r6, r4, #25
 80212ec:	e7f5      	b.n	80212da <_printf_i+0x22e>
 80212ee:	bf00      	nop
 80212f0:	0802473d 	.word	0x0802473d
 80212f4:	0802474e 	.word	0x0802474e

080212f8 <cleanup_glue>:
 80212f8:	b538      	push	{r3, r4, r5, lr}
 80212fa:	460c      	mov	r4, r1
 80212fc:	6809      	ldr	r1, [r1, #0]
 80212fe:	4605      	mov	r5, r0
 8021300:	b109      	cbz	r1, 8021306 <cleanup_glue+0xe>
 8021302:	f7ff fff9 	bl	80212f8 <cleanup_glue>
 8021306:	4621      	mov	r1, r4
 8021308:	4628      	mov	r0, r5
 802130a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802130e:	f7ff bc25 	b.w	8020b5c <_free_r>
	...

08021314 <_reclaim_reent>:
 8021314:	4b2c      	ldr	r3, [pc, #176]	; (80213c8 <_reclaim_reent+0xb4>)
 8021316:	681b      	ldr	r3, [r3, #0]
 8021318:	4283      	cmp	r3, r0
 802131a:	b570      	push	{r4, r5, r6, lr}
 802131c:	4604      	mov	r4, r0
 802131e:	d051      	beq.n	80213c4 <_reclaim_reent+0xb0>
 8021320:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8021322:	b143      	cbz	r3, 8021336 <_reclaim_reent+0x22>
 8021324:	68db      	ldr	r3, [r3, #12]
 8021326:	2b00      	cmp	r3, #0
 8021328:	d14a      	bne.n	80213c0 <_reclaim_reent+0xac>
 802132a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 802132c:	6819      	ldr	r1, [r3, #0]
 802132e:	b111      	cbz	r1, 8021336 <_reclaim_reent+0x22>
 8021330:	4620      	mov	r0, r4
 8021332:	f7ff fc13 	bl	8020b5c <_free_r>
 8021336:	6961      	ldr	r1, [r4, #20]
 8021338:	b111      	cbz	r1, 8021340 <_reclaim_reent+0x2c>
 802133a:	4620      	mov	r0, r4
 802133c:	f7ff fc0e 	bl	8020b5c <_free_r>
 8021340:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8021342:	b111      	cbz	r1, 802134a <_reclaim_reent+0x36>
 8021344:	4620      	mov	r0, r4
 8021346:	f7ff fc09 	bl	8020b5c <_free_r>
 802134a:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 802134c:	b111      	cbz	r1, 8021354 <_reclaim_reent+0x40>
 802134e:	4620      	mov	r0, r4
 8021350:	f7ff fc04 	bl	8020b5c <_free_r>
 8021354:	6be1      	ldr	r1, [r4, #60]	; 0x3c
 8021356:	b111      	cbz	r1, 802135e <_reclaim_reent+0x4a>
 8021358:	4620      	mov	r0, r4
 802135a:	f7ff fbff 	bl	8020b5c <_free_r>
 802135e:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8021360:	b111      	cbz	r1, 8021368 <_reclaim_reent+0x54>
 8021362:	4620      	mov	r0, r4
 8021364:	f7ff fbfa 	bl	8020b5c <_free_r>
 8021368:	6de1      	ldr	r1, [r4, #92]	; 0x5c
 802136a:	b111      	cbz	r1, 8021372 <_reclaim_reent+0x5e>
 802136c:	4620      	mov	r0, r4
 802136e:	f7ff fbf5 	bl	8020b5c <_free_r>
 8021372:	6da1      	ldr	r1, [r4, #88]	; 0x58
 8021374:	b111      	cbz	r1, 802137c <_reclaim_reent+0x68>
 8021376:	4620      	mov	r0, r4
 8021378:	f7ff fbf0 	bl	8020b5c <_free_r>
 802137c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802137e:	b111      	cbz	r1, 8021386 <_reclaim_reent+0x72>
 8021380:	4620      	mov	r0, r4
 8021382:	f7ff fbeb 	bl	8020b5c <_free_r>
 8021386:	69a3      	ldr	r3, [r4, #24]
 8021388:	b1e3      	cbz	r3, 80213c4 <_reclaim_reent+0xb0>
 802138a:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 802138c:	4620      	mov	r0, r4
 802138e:	4798      	blx	r3
 8021390:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8021392:	b1b9      	cbz	r1, 80213c4 <_reclaim_reent+0xb0>
 8021394:	4620      	mov	r0, r4
 8021396:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 802139a:	f7ff bfad 	b.w	80212f8 <cleanup_glue>
 802139e:	5949      	ldr	r1, [r1, r5]
 80213a0:	b941      	cbnz	r1, 80213b4 <_reclaim_reent+0xa0>
 80213a2:	3504      	adds	r5, #4
 80213a4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80213a6:	2d80      	cmp	r5, #128	; 0x80
 80213a8:	68d9      	ldr	r1, [r3, #12]
 80213aa:	d1f8      	bne.n	802139e <_reclaim_reent+0x8a>
 80213ac:	4620      	mov	r0, r4
 80213ae:	f7ff fbd5 	bl	8020b5c <_free_r>
 80213b2:	e7ba      	b.n	802132a <_reclaim_reent+0x16>
 80213b4:	680e      	ldr	r6, [r1, #0]
 80213b6:	4620      	mov	r0, r4
 80213b8:	f7ff fbd0 	bl	8020b5c <_free_r>
 80213bc:	4631      	mov	r1, r6
 80213be:	e7ef      	b.n	80213a0 <_reclaim_reent+0x8c>
 80213c0:	2500      	movs	r5, #0
 80213c2:	e7ef      	b.n	80213a4 <_reclaim_reent+0x90>
 80213c4:	bd70      	pop	{r4, r5, r6, pc}
 80213c6:	bf00      	nop
 80213c8:	20000104 	.word	0x20000104

080213cc <_sbrk_r>:
 80213cc:	b538      	push	{r3, r4, r5, lr}
 80213ce:	4d06      	ldr	r5, [pc, #24]	; (80213e8 <_sbrk_r+0x1c>)
 80213d0:	2300      	movs	r3, #0
 80213d2:	4604      	mov	r4, r0
 80213d4:	4608      	mov	r0, r1
 80213d6:	602b      	str	r3, [r5, #0]
 80213d8:	f7e0 fee6 	bl	80021a8 <_sbrk>
 80213dc:	1c43      	adds	r3, r0, #1
 80213de:	d102      	bne.n	80213e6 <_sbrk_r+0x1a>
 80213e0:	682b      	ldr	r3, [r5, #0]
 80213e2:	b103      	cbz	r3, 80213e6 <_sbrk_r+0x1a>
 80213e4:	6023      	str	r3, [r4, #0]
 80213e6:	bd38      	pop	{r3, r4, r5, pc}
 80213e8:	200157cc 	.word	0x200157cc

080213ec <_raise_r>:
 80213ec:	291f      	cmp	r1, #31
 80213ee:	b538      	push	{r3, r4, r5, lr}
 80213f0:	4604      	mov	r4, r0
 80213f2:	460d      	mov	r5, r1
 80213f4:	d904      	bls.n	8021400 <_raise_r+0x14>
 80213f6:	2316      	movs	r3, #22
 80213f8:	6003      	str	r3, [r0, #0]
 80213fa:	f04f 30ff 	mov.w	r0, #4294967295
 80213fe:	bd38      	pop	{r3, r4, r5, pc}
 8021400:	6c42      	ldr	r2, [r0, #68]	; 0x44
 8021402:	b112      	cbz	r2, 802140a <_raise_r+0x1e>
 8021404:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8021408:	b94b      	cbnz	r3, 802141e <_raise_r+0x32>
 802140a:	4620      	mov	r0, r4
 802140c:	f000 f830 	bl	8021470 <_getpid_r>
 8021410:	462a      	mov	r2, r5
 8021412:	4601      	mov	r1, r0
 8021414:	4620      	mov	r0, r4
 8021416:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802141a:	f000 b817 	b.w	802144c <_kill_r>
 802141e:	2b01      	cmp	r3, #1
 8021420:	d00a      	beq.n	8021438 <_raise_r+0x4c>
 8021422:	1c59      	adds	r1, r3, #1
 8021424:	d103      	bne.n	802142e <_raise_r+0x42>
 8021426:	2316      	movs	r3, #22
 8021428:	6003      	str	r3, [r0, #0]
 802142a:	2001      	movs	r0, #1
 802142c:	e7e7      	b.n	80213fe <_raise_r+0x12>
 802142e:	2400      	movs	r4, #0
 8021430:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8021434:	4628      	mov	r0, r5
 8021436:	4798      	blx	r3
 8021438:	2000      	movs	r0, #0
 802143a:	e7e0      	b.n	80213fe <_raise_r+0x12>

0802143c <raise>:
 802143c:	4b02      	ldr	r3, [pc, #8]	; (8021448 <raise+0xc>)
 802143e:	4601      	mov	r1, r0
 8021440:	6818      	ldr	r0, [r3, #0]
 8021442:	f7ff bfd3 	b.w	80213ec <_raise_r>
 8021446:	bf00      	nop
 8021448:	20000104 	.word	0x20000104

0802144c <_kill_r>:
 802144c:	b538      	push	{r3, r4, r5, lr}
 802144e:	4d07      	ldr	r5, [pc, #28]	; (802146c <_kill_r+0x20>)
 8021450:	2300      	movs	r3, #0
 8021452:	4604      	mov	r4, r0
 8021454:	4608      	mov	r0, r1
 8021456:	4611      	mov	r1, r2
 8021458:	602b      	str	r3, [r5, #0]
 802145a:	f7e0 fe6f 	bl	800213c <_kill>
 802145e:	1c43      	adds	r3, r0, #1
 8021460:	d102      	bne.n	8021468 <_kill_r+0x1c>
 8021462:	682b      	ldr	r3, [r5, #0]
 8021464:	b103      	cbz	r3, 8021468 <_kill_r+0x1c>
 8021466:	6023      	str	r3, [r4, #0]
 8021468:	bd38      	pop	{r3, r4, r5, pc}
 802146a:	bf00      	nop
 802146c:	200157cc 	.word	0x200157cc

08021470 <_getpid_r>:
 8021470:	f7e0 be62 	b.w	8002138 <_getpid>

08021474 <__sread>:
 8021474:	b510      	push	{r4, lr}
 8021476:	460c      	mov	r4, r1
 8021478:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802147c:	f000 fac8 	bl	8021a10 <_read_r>
 8021480:	2800      	cmp	r0, #0
 8021482:	bfab      	itete	ge
 8021484:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8021486:	89a3      	ldrhlt	r3, [r4, #12]
 8021488:	181b      	addge	r3, r3, r0
 802148a:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 802148e:	bfac      	ite	ge
 8021490:	6563      	strge	r3, [r4, #84]	; 0x54
 8021492:	81a3      	strhlt	r3, [r4, #12]
 8021494:	bd10      	pop	{r4, pc}

08021496 <__swrite>:
 8021496:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802149a:	461f      	mov	r7, r3
 802149c:	898b      	ldrh	r3, [r1, #12]
 802149e:	05db      	lsls	r3, r3, #23
 80214a0:	4605      	mov	r5, r0
 80214a2:	460c      	mov	r4, r1
 80214a4:	4616      	mov	r6, r2
 80214a6:	d505      	bpl.n	80214b4 <__swrite+0x1e>
 80214a8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80214ac:	2302      	movs	r3, #2
 80214ae:	2200      	movs	r2, #0
 80214b0:	f000 fa2a 	bl	8021908 <_lseek_r>
 80214b4:	89a3      	ldrh	r3, [r4, #12]
 80214b6:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80214ba:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80214be:	81a3      	strh	r3, [r4, #12]
 80214c0:	4632      	mov	r2, r6
 80214c2:	463b      	mov	r3, r7
 80214c4:	4628      	mov	r0, r5
 80214c6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80214ca:	f000 b869 	b.w	80215a0 <_write_r>

080214ce <__sseek>:
 80214ce:	b510      	push	{r4, lr}
 80214d0:	460c      	mov	r4, r1
 80214d2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80214d6:	f000 fa17 	bl	8021908 <_lseek_r>
 80214da:	1c43      	adds	r3, r0, #1
 80214dc:	89a3      	ldrh	r3, [r4, #12]
 80214de:	bf15      	itete	ne
 80214e0:	6560      	strne	r0, [r4, #84]	; 0x54
 80214e2:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80214e6:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80214ea:	81a3      	strheq	r3, [r4, #12]
 80214ec:	bf18      	it	ne
 80214ee:	81a3      	strhne	r3, [r4, #12]
 80214f0:	bd10      	pop	{r4, pc}

080214f2 <__sclose>:
 80214f2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80214f6:	f000 b935 	b.w	8021764 <_close_r>
	...

080214fc <__swbuf_r>:
 80214fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80214fe:	460e      	mov	r6, r1
 8021500:	4614      	mov	r4, r2
 8021502:	4605      	mov	r5, r0
 8021504:	b118      	cbz	r0, 802150e <__swbuf_r+0x12>
 8021506:	6983      	ldr	r3, [r0, #24]
 8021508:	b90b      	cbnz	r3, 802150e <__swbuf_r+0x12>
 802150a:	f7ff fa29 	bl	8020960 <__sinit>
 802150e:	4b21      	ldr	r3, [pc, #132]	; (8021594 <__swbuf_r+0x98>)
 8021510:	429c      	cmp	r4, r3
 8021512:	d12b      	bne.n	802156c <__swbuf_r+0x70>
 8021514:	686c      	ldr	r4, [r5, #4]
 8021516:	69a3      	ldr	r3, [r4, #24]
 8021518:	60a3      	str	r3, [r4, #8]
 802151a:	89a3      	ldrh	r3, [r4, #12]
 802151c:	071a      	lsls	r2, r3, #28
 802151e:	d52f      	bpl.n	8021580 <__swbuf_r+0x84>
 8021520:	6923      	ldr	r3, [r4, #16]
 8021522:	b36b      	cbz	r3, 8021580 <__swbuf_r+0x84>
 8021524:	6923      	ldr	r3, [r4, #16]
 8021526:	6820      	ldr	r0, [r4, #0]
 8021528:	1ac0      	subs	r0, r0, r3
 802152a:	6963      	ldr	r3, [r4, #20]
 802152c:	b2f6      	uxtb	r6, r6
 802152e:	4283      	cmp	r3, r0
 8021530:	4637      	mov	r7, r6
 8021532:	dc04      	bgt.n	802153e <__swbuf_r+0x42>
 8021534:	4621      	mov	r1, r4
 8021536:	4628      	mov	r0, r5
 8021538:	f000 f9aa 	bl	8021890 <_fflush_r>
 802153c:	bb30      	cbnz	r0, 802158c <__swbuf_r+0x90>
 802153e:	68a3      	ldr	r3, [r4, #8]
 8021540:	3b01      	subs	r3, #1
 8021542:	60a3      	str	r3, [r4, #8]
 8021544:	6823      	ldr	r3, [r4, #0]
 8021546:	1c5a      	adds	r2, r3, #1
 8021548:	6022      	str	r2, [r4, #0]
 802154a:	701e      	strb	r6, [r3, #0]
 802154c:	6963      	ldr	r3, [r4, #20]
 802154e:	3001      	adds	r0, #1
 8021550:	4283      	cmp	r3, r0
 8021552:	d004      	beq.n	802155e <__swbuf_r+0x62>
 8021554:	89a3      	ldrh	r3, [r4, #12]
 8021556:	07db      	lsls	r3, r3, #31
 8021558:	d506      	bpl.n	8021568 <__swbuf_r+0x6c>
 802155a:	2e0a      	cmp	r6, #10
 802155c:	d104      	bne.n	8021568 <__swbuf_r+0x6c>
 802155e:	4621      	mov	r1, r4
 8021560:	4628      	mov	r0, r5
 8021562:	f000 f995 	bl	8021890 <_fflush_r>
 8021566:	b988      	cbnz	r0, 802158c <__swbuf_r+0x90>
 8021568:	4638      	mov	r0, r7
 802156a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802156c:	4b0a      	ldr	r3, [pc, #40]	; (8021598 <__swbuf_r+0x9c>)
 802156e:	429c      	cmp	r4, r3
 8021570:	d101      	bne.n	8021576 <__swbuf_r+0x7a>
 8021572:	68ac      	ldr	r4, [r5, #8]
 8021574:	e7cf      	b.n	8021516 <__swbuf_r+0x1a>
 8021576:	4b09      	ldr	r3, [pc, #36]	; (802159c <__swbuf_r+0xa0>)
 8021578:	429c      	cmp	r4, r3
 802157a:	bf08      	it	eq
 802157c:	68ec      	ldreq	r4, [r5, #12]
 802157e:	e7ca      	b.n	8021516 <__swbuf_r+0x1a>
 8021580:	4621      	mov	r1, r4
 8021582:	4628      	mov	r0, r5
 8021584:	f000 f81e 	bl	80215c4 <__swsetup_r>
 8021588:	2800      	cmp	r0, #0
 802158a:	d0cb      	beq.n	8021524 <__swbuf_r+0x28>
 802158c:	f04f 37ff 	mov.w	r7, #4294967295
 8021590:	e7ea      	b.n	8021568 <__swbuf_r+0x6c>
 8021592:	bf00      	nop
 8021594:	080246e8 	.word	0x080246e8
 8021598:	08024708 	.word	0x08024708
 802159c:	080246c8 	.word	0x080246c8

080215a0 <_write_r>:
 80215a0:	b538      	push	{r3, r4, r5, lr}
 80215a2:	4d07      	ldr	r5, [pc, #28]	; (80215c0 <_write_r+0x20>)
 80215a4:	4604      	mov	r4, r0
 80215a6:	4608      	mov	r0, r1
 80215a8:	4611      	mov	r1, r2
 80215aa:	2200      	movs	r2, #0
 80215ac:	602a      	str	r2, [r5, #0]
 80215ae:	461a      	mov	r2, r3
 80215b0:	f7e0 fde0 	bl	8002174 <_write>
 80215b4:	1c43      	adds	r3, r0, #1
 80215b6:	d102      	bne.n	80215be <_write_r+0x1e>
 80215b8:	682b      	ldr	r3, [r5, #0]
 80215ba:	b103      	cbz	r3, 80215be <_write_r+0x1e>
 80215bc:	6023      	str	r3, [r4, #0]
 80215be:	bd38      	pop	{r3, r4, r5, pc}
 80215c0:	200157cc 	.word	0x200157cc

080215c4 <__swsetup_r>:
 80215c4:	4b32      	ldr	r3, [pc, #200]	; (8021690 <__swsetup_r+0xcc>)
 80215c6:	b570      	push	{r4, r5, r6, lr}
 80215c8:	681d      	ldr	r5, [r3, #0]
 80215ca:	4606      	mov	r6, r0
 80215cc:	460c      	mov	r4, r1
 80215ce:	b125      	cbz	r5, 80215da <__swsetup_r+0x16>
 80215d0:	69ab      	ldr	r3, [r5, #24]
 80215d2:	b913      	cbnz	r3, 80215da <__swsetup_r+0x16>
 80215d4:	4628      	mov	r0, r5
 80215d6:	f7ff f9c3 	bl	8020960 <__sinit>
 80215da:	4b2e      	ldr	r3, [pc, #184]	; (8021694 <__swsetup_r+0xd0>)
 80215dc:	429c      	cmp	r4, r3
 80215de:	d10f      	bne.n	8021600 <__swsetup_r+0x3c>
 80215e0:	686c      	ldr	r4, [r5, #4]
 80215e2:	89a3      	ldrh	r3, [r4, #12]
 80215e4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80215e8:	0719      	lsls	r1, r3, #28
 80215ea:	d42c      	bmi.n	8021646 <__swsetup_r+0x82>
 80215ec:	06dd      	lsls	r5, r3, #27
 80215ee:	d411      	bmi.n	8021614 <__swsetup_r+0x50>
 80215f0:	2309      	movs	r3, #9
 80215f2:	6033      	str	r3, [r6, #0]
 80215f4:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 80215f8:	81a3      	strh	r3, [r4, #12]
 80215fa:	f04f 30ff 	mov.w	r0, #4294967295
 80215fe:	e03e      	b.n	802167e <__swsetup_r+0xba>
 8021600:	4b25      	ldr	r3, [pc, #148]	; (8021698 <__swsetup_r+0xd4>)
 8021602:	429c      	cmp	r4, r3
 8021604:	d101      	bne.n	802160a <__swsetup_r+0x46>
 8021606:	68ac      	ldr	r4, [r5, #8]
 8021608:	e7eb      	b.n	80215e2 <__swsetup_r+0x1e>
 802160a:	4b24      	ldr	r3, [pc, #144]	; (802169c <__swsetup_r+0xd8>)
 802160c:	429c      	cmp	r4, r3
 802160e:	bf08      	it	eq
 8021610:	68ec      	ldreq	r4, [r5, #12]
 8021612:	e7e6      	b.n	80215e2 <__swsetup_r+0x1e>
 8021614:	0758      	lsls	r0, r3, #29
 8021616:	d512      	bpl.n	802163e <__swsetup_r+0x7a>
 8021618:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802161a:	b141      	cbz	r1, 802162e <__swsetup_r+0x6a>
 802161c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8021620:	4299      	cmp	r1, r3
 8021622:	d002      	beq.n	802162a <__swsetup_r+0x66>
 8021624:	4630      	mov	r0, r6
 8021626:	f7ff fa99 	bl	8020b5c <_free_r>
 802162a:	2300      	movs	r3, #0
 802162c:	6363      	str	r3, [r4, #52]	; 0x34
 802162e:	89a3      	ldrh	r3, [r4, #12]
 8021630:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8021634:	81a3      	strh	r3, [r4, #12]
 8021636:	2300      	movs	r3, #0
 8021638:	6063      	str	r3, [r4, #4]
 802163a:	6923      	ldr	r3, [r4, #16]
 802163c:	6023      	str	r3, [r4, #0]
 802163e:	89a3      	ldrh	r3, [r4, #12]
 8021640:	f043 0308 	orr.w	r3, r3, #8
 8021644:	81a3      	strh	r3, [r4, #12]
 8021646:	6923      	ldr	r3, [r4, #16]
 8021648:	b94b      	cbnz	r3, 802165e <__swsetup_r+0x9a>
 802164a:	89a3      	ldrh	r3, [r4, #12]
 802164c:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8021650:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8021654:	d003      	beq.n	802165e <__swsetup_r+0x9a>
 8021656:	4621      	mov	r1, r4
 8021658:	4630      	mov	r0, r6
 802165a:	f000 f98d 	bl	8021978 <__smakebuf_r>
 802165e:	89a0      	ldrh	r0, [r4, #12]
 8021660:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8021664:	f010 0301 	ands.w	r3, r0, #1
 8021668:	d00a      	beq.n	8021680 <__swsetup_r+0xbc>
 802166a:	2300      	movs	r3, #0
 802166c:	60a3      	str	r3, [r4, #8]
 802166e:	6963      	ldr	r3, [r4, #20]
 8021670:	425b      	negs	r3, r3
 8021672:	61a3      	str	r3, [r4, #24]
 8021674:	6923      	ldr	r3, [r4, #16]
 8021676:	b943      	cbnz	r3, 802168a <__swsetup_r+0xc6>
 8021678:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 802167c:	d1ba      	bne.n	80215f4 <__swsetup_r+0x30>
 802167e:	bd70      	pop	{r4, r5, r6, pc}
 8021680:	0781      	lsls	r1, r0, #30
 8021682:	bf58      	it	pl
 8021684:	6963      	ldrpl	r3, [r4, #20]
 8021686:	60a3      	str	r3, [r4, #8]
 8021688:	e7f4      	b.n	8021674 <__swsetup_r+0xb0>
 802168a:	2000      	movs	r0, #0
 802168c:	e7f7      	b.n	802167e <__swsetup_r+0xba>
 802168e:	bf00      	nop
 8021690:	20000104 	.word	0x20000104
 8021694:	080246e8 	.word	0x080246e8
 8021698:	08024708 	.word	0x08024708
 802169c:	080246c8 	.word	0x080246c8

080216a0 <__register_exitproc>:
 80216a0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80216a4:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 8021760 <__register_exitproc+0xc0>
 80216a8:	4606      	mov	r6, r0
 80216aa:	f8d8 0000 	ldr.w	r0, [r8]
 80216ae:	461f      	mov	r7, r3
 80216b0:	460d      	mov	r5, r1
 80216b2:	4691      	mov	r9, r2
 80216b4:	f7ff fa29 	bl	8020b0a <__retarget_lock_acquire_recursive>
 80216b8:	4b25      	ldr	r3, [pc, #148]	; (8021750 <__register_exitproc+0xb0>)
 80216ba:	681c      	ldr	r4, [r3, #0]
 80216bc:	b934      	cbnz	r4, 80216cc <__register_exitproc+0x2c>
 80216be:	4c25      	ldr	r4, [pc, #148]	; (8021754 <__register_exitproc+0xb4>)
 80216c0:	601c      	str	r4, [r3, #0]
 80216c2:	4b25      	ldr	r3, [pc, #148]	; (8021758 <__register_exitproc+0xb8>)
 80216c4:	b113      	cbz	r3, 80216cc <__register_exitproc+0x2c>
 80216c6:	681b      	ldr	r3, [r3, #0]
 80216c8:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 80216cc:	6863      	ldr	r3, [r4, #4]
 80216ce:	2b1f      	cmp	r3, #31
 80216d0:	dd07      	ble.n	80216e2 <__register_exitproc+0x42>
 80216d2:	f8d8 0000 	ldr.w	r0, [r8]
 80216d6:	f7ff fa1a 	bl	8020b0e <__retarget_lock_release_recursive>
 80216da:	f04f 30ff 	mov.w	r0, #4294967295
 80216de:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80216e2:	b34e      	cbz	r6, 8021738 <__register_exitproc+0x98>
 80216e4:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 80216e8:	b988      	cbnz	r0, 802170e <__register_exitproc+0x6e>
 80216ea:	4b1c      	ldr	r3, [pc, #112]	; (802175c <__register_exitproc+0xbc>)
 80216ec:	b923      	cbnz	r3, 80216f8 <__register_exitproc+0x58>
 80216ee:	f8d8 0000 	ldr.w	r0, [r8]
 80216f2:	f7ff fa0b 	bl	8020b0c <__retarget_lock_release>
 80216f6:	e7f0      	b.n	80216da <__register_exitproc+0x3a>
 80216f8:	f44f 7084 	mov.w	r0, #264	; 0x108
 80216fc:	f7ff fa08 	bl	8020b10 <malloc>
 8021700:	2800      	cmp	r0, #0
 8021702:	d0f4      	beq.n	80216ee <__register_exitproc+0x4e>
 8021704:	2300      	movs	r3, #0
 8021706:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 802170a:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 802170e:	6863      	ldr	r3, [r4, #4]
 8021710:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 8021714:	2201      	movs	r2, #1
 8021716:	409a      	lsls	r2, r3
 8021718:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 802171c:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 8021720:	4313      	orrs	r3, r2
 8021722:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 8021726:	2e02      	cmp	r6, #2
 8021728:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 802172c:	bf02      	ittt	eq
 802172e:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 8021732:	4313      	orreq	r3, r2
 8021734:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 8021738:	6863      	ldr	r3, [r4, #4]
 802173a:	f8d8 0000 	ldr.w	r0, [r8]
 802173e:	1c5a      	adds	r2, r3, #1
 8021740:	3302      	adds	r3, #2
 8021742:	6062      	str	r2, [r4, #4]
 8021744:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 8021748:	f7ff f9e1 	bl	8020b0e <__retarget_lock_release_recursive>
 802174c:	2000      	movs	r0, #0
 802174e:	e7c6      	b.n	80216de <__register_exitproc+0x3e>
 8021750:	2001585c 	.word	0x2001585c
 8021754:	200157d0 	.word	0x200157d0
 8021758:	08024760 	.word	0x08024760
 802175c:	08020b11 	.word	0x08020b11
 8021760:	20000168 	.word	0x20000168

08021764 <_close_r>:
 8021764:	b538      	push	{r3, r4, r5, lr}
 8021766:	4d06      	ldr	r5, [pc, #24]	; (8021780 <_close_r+0x1c>)
 8021768:	2300      	movs	r3, #0
 802176a:	4604      	mov	r4, r0
 802176c:	4608      	mov	r0, r1
 802176e:	602b      	str	r3, [r5, #0]
 8021770:	f7e0 fd0e 	bl	8002190 <_close>
 8021774:	1c43      	adds	r3, r0, #1
 8021776:	d102      	bne.n	802177e <_close_r+0x1a>
 8021778:	682b      	ldr	r3, [r5, #0]
 802177a:	b103      	cbz	r3, 802177e <_close_r+0x1a>
 802177c:	6023      	str	r3, [r4, #0]
 802177e:	bd38      	pop	{r3, r4, r5, pc}
 8021780:	200157cc 	.word	0x200157cc

08021784 <__sflush_r>:
 8021784:	898a      	ldrh	r2, [r1, #12]
 8021786:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802178a:	4605      	mov	r5, r0
 802178c:	0710      	lsls	r0, r2, #28
 802178e:	460c      	mov	r4, r1
 8021790:	d458      	bmi.n	8021844 <__sflush_r+0xc0>
 8021792:	684b      	ldr	r3, [r1, #4]
 8021794:	2b00      	cmp	r3, #0
 8021796:	dc05      	bgt.n	80217a4 <__sflush_r+0x20>
 8021798:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 802179a:	2b00      	cmp	r3, #0
 802179c:	dc02      	bgt.n	80217a4 <__sflush_r+0x20>
 802179e:	2000      	movs	r0, #0
 80217a0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80217a4:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80217a6:	2e00      	cmp	r6, #0
 80217a8:	d0f9      	beq.n	802179e <__sflush_r+0x1a>
 80217aa:	2300      	movs	r3, #0
 80217ac:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80217b0:	682f      	ldr	r7, [r5, #0]
 80217b2:	602b      	str	r3, [r5, #0]
 80217b4:	d032      	beq.n	802181c <__sflush_r+0x98>
 80217b6:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80217b8:	89a3      	ldrh	r3, [r4, #12]
 80217ba:	075a      	lsls	r2, r3, #29
 80217bc:	d505      	bpl.n	80217ca <__sflush_r+0x46>
 80217be:	6863      	ldr	r3, [r4, #4]
 80217c0:	1ac0      	subs	r0, r0, r3
 80217c2:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80217c4:	b10b      	cbz	r3, 80217ca <__sflush_r+0x46>
 80217c6:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80217c8:	1ac0      	subs	r0, r0, r3
 80217ca:	2300      	movs	r3, #0
 80217cc:	4602      	mov	r2, r0
 80217ce:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80217d0:	6a21      	ldr	r1, [r4, #32]
 80217d2:	4628      	mov	r0, r5
 80217d4:	47b0      	blx	r6
 80217d6:	1c43      	adds	r3, r0, #1
 80217d8:	89a3      	ldrh	r3, [r4, #12]
 80217da:	d106      	bne.n	80217ea <__sflush_r+0x66>
 80217dc:	6829      	ldr	r1, [r5, #0]
 80217de:	291d      	cmp	r1, #29
 80217e0:	d82c      	bhi.n	802183c <__sflush_r+0xb8>
 80217e2:	4a2a      	ldr	r2, [pc, #168]	; (802188c <__sflush_r+0x108>)
 80217e4:	40ca      	lsrs	r2, r1
 80217e6:	07d6      	lsls	r6, r2, #31
 80217e8:	d528      	bpl.n	802183c <__sflush_r+0xb8>
 80217ea:	2200      	movs	r2, #0
 80217ec:	6062      	str	r2, [r4, #4]
 80217ee:	04d9      	lsls	r1, r3, #19
 80217f0:	6922      	ldr	r2, [r4, #16]
 80217f2:	6022      	str	r2, [r4, #0]
 80217f4:	d504      	bpl.n	8021800 <__sflush_r+0x7c>
 80217f6:	1c42      	adds	r2, r0, #1
 80217f8:	d101      	bne.n	80217fe <__sflush_r+0x7a>
 80217fa:	682b      	ldr	r3, [r5, #0]
 80217fc:	b903      	cbnz	r3, 8021800 <__sflush_r+0x7c>
 80217fe:	6560      	str	r0, [r4, #84]	; 0x54
 8021800:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8021802:	602f      	str	r7, [r5, #0]
 8021804:	2900      	cmp	r1, #0
 8021806:	d0ca      	beq.n	802179e <__sflush_r+0x1a>
 8021808:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802180c:	4299      	cmp	r1, r3
 802180e:	d002      	beq.n	8021816 <__sflush_r+0x92>
 8021810:	4628      	mov	r0, r5
 8021812:	f7ff f9a3 	bl	8020b5c <_free_r>
 8021816:	2000      	movs	r0, #0
 8021818:	6360      	str	r0, [r4, #52]	; 0x34
 802181a:	e7c1      	b.n	80217a0 <__sflush_r+0x1c>
 802181c:	6a21      	ldr	r1, [r4, #32]
 802181e:	2301      	movs	r3, #1
 8021820:	4628      	mov	r0, r5
 8021822:	47b0      	blx	r6
 8021824:	1c41      	adds	r1, r0, #1
 8021826:	d1c7      	bne.n	80217b8 <__sflush_r+0x34>
 8021828:	682b      	ldr	r3, [r5, #0]
 802182a:	2b00      	cmp	r3, #0
 802182c:	d0c4      	beq.n	80217b8 <__sflush_r+0x34>
 802182e:	2b1d      	cmp	r3, #29
 8021830:	d001      	beq.n	8021836 <__sflush_r+0xb2>
 8021832:	2b16      	cmp	r3, #22
 8021834:	d101      	bne.n	802183a <__sflush_r+0xb6>
 8021836:	602f      	str	r7, [r5, #0]
 8021838:	e7b1      	b.n	802179e <__sflush_r+0x1a>
 802183a:	89a3      	ldrh	r3, [r4, #12]
 802183c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8021840:	81a3      	strh	r3, [r4, #12]
 8021842:	e7ad      	b.n	80217a0 <__sflush_r+0x1c>
 8021844:	690f      	ldr	r7, [r1, #16]
 8021846:	2f00      	cmp	r7, #0
 8021848:	d0a9      	beq.n	802179e <__sflush_r+0x1a>
 802184a:	0793      	lsls	r3, r2, #30
 802184c:	680e      	ldr	r6, [r1, #0]
 802184e:	bf08      	it	eq
 8021850:	694b      	ldreq	r3, [r1, #20]
 8021852:	600f      	str	r7, [r1, #0]
 8021854:	bf18      	it	ne
 8021856:	2300      	movne	r3, #0
 8021858:	eba6 0807 	sub.w	r8, r6, r7
 802185c:	608b      	str	r3, [r1, #8]
 802185e:	f1b8 0f00 	cmp.w	r8, #0
 8021862:	dd9c      	ble.n	802179e <__sflush_r+0x1a>
 8021864:	6a21      	ldr	r1, [r4, #32]
 8021866:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8021868:	4643      	mov	r3, r8
 802186a:	463a      	mov	r2, r7
 802186c:	4628      	mov	r0, r5
 802186e:	47b0      	blx	r6
 8021870:	2800      	cmp	r0, #0
 8021872:	dc06      	bgt.n	8021882 <__sflush_r+0xfe>
 8021874:	89a3      	ldrh	r3, [r4, #12]
 8021876:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802187a:	81a3      	strh	r3, [r4, #12]
 802187c:	f04f 30ff 	mov.w	r0, #4294967295
 8021880:	e78e      	b.n	80217a0 <__sflush_r+0x1c>
 8021882:	4407      	add	r7, r0
 8021884:	eba8 0800 	sub.w	r8, r8, r0
 8021888:	e7e9      	b.n	802185e <__sflush_r+0xda>
 802188a:	bf00      	nop
 802188c:	20400001 	.word	0x20400001

08021890 <_fflush_r>:
 8021890:	b538      	push	{r3, r4, r5, lr}
 8021892:	690b      	ldr	r3, [r1, #16]
 8021894:	4605      	mov	r5, r0
 8021896:	460c      	mov	r4, r1
 8021898:	b913      	cbnz	r3, 80218a0 <_fflush_r+0x10>
 802189a:	2500      	movs	r5, #0
 802189c:	4628      	mov	r0, r5
 802189e:	bd38      	pop	{r3, r4, r5, pc}
 80218a0:	b118      	cbz	r0, 80218aa <_fflush_r+0x1a>
 80218a2:	6983      	ldr	r3, [r0, #24]
 80218a4:	b90b      	cbnz	r3, 80218aa <_fflush_r+0x1a>
 80218a6:	f7ff f85b 	bl	8020960 <__sinit>
 80218aa:	4b14      	ldr	r3, [pc, #80]	; (80218fc <_fflush_r+0x6c>)
 80218ac:	429c      	cmp	r4, r3
 80218ae:	d11b      	bne.n	80218e8 <_fflush_r+0x58>
 80218b0:	686c      	ldr	r4, [r5, #4]
 80218b2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80218b6:	2b00      	cmp	r3, #0
 80218b8:	d0ef      	beq.n	802189a <_fflush_r+0xa>
 80218ba:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80218bc:	07d0      	lsls	r0, r2, #31
 80218be:	d404      	bmi.n	80218ca <_fflush_r+0x3a>
 80218c0:	0599      	lsls	r1, r3, #22
 80218c2:	d402      	bmi.n	80218ca <_fflush_r+0x3a>
 80218c4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80218c6:	f7ff f920 	bl	8020b0a <__retarget_lock_acquire_recursive>
 80218ca:	4628      	mov	r0, r5
 80218cc:	4621      	mov	r1, r4
 80218ce:	f7ff ff59 	bl	8021784 <__sflush_r>
 80218d2:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80218d4:	07da      	lsls	r2, r3, #31
 80218d6:	4605      	mov	r5, r0
 80218d8:	d4e0      	bmi.n	802189c <_fflush_r+0xc>
 80218da:	89a3      	ldrh	r3, [r4, #12]
 80218dc:	059b      	lsls	r3, r3, #22
 80218de:	d4dd      	bmi.n	802189c <_fflush_r+0xc>
 80218e0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80218e2:	f7ff f914 	bl	8020b0e <__retarget_lock_release_recursive>
 80218e6:	e7d9      	b.n	802189c <_fflush_r+0xc>
 80218e8:	4b05      	ldr	r3, [pc, #20]	; (8021900 <_fflush_r+0x70>)
 80218ea:	429c      	cmp	r4, r3
 80218ec:	d101      	bne.n	80218f2 <_fflush_r+0x62>
 80218ee:	68ac      	ldr	r4, [r5, #8]
 80218f0:	e7df      	b.n	80218b2 <_fflush_r+0x22>
 80218f2:	4b04      	ldr	r3, [pc, #16]	; (8021904 <_fflush_r+0x74>)
 80218f4:	429c      	cmp	r4, r3
 80218f6:	bf08      	it	eq
 80218f8:	68ec      	ldreq	r4, [r5, #12]
 80218fa:	e7da      	b.n	80218b2 <_fflush_r+0x22>
 80218fc:	080246e8 	.word	0x080246e8
 8021900:	08024708 	.word	0x08024708
 8021904:	080246c8 	.word	0x080246c8

08021908 <_lseek_r>:
 8021908:	b538      	push	{r3, r4, r5, lr}
 802190a:	4d07      	ldr	r5, [pc, #28]	; (8021928 <_lseek_r+0x20>)
 802190c:	4604      	mov	r4, r0
 802190e:	4608      	mov	r0, r1
 8021910:	4611      	mov	r1, r2
 8021912:	2200      	movs	r2, #0
 8021914:	602a      	str	r2, [r5, #0]
 8021916:	461a      	mov	r2, r3
 8021918:	f7e0 fc44 	bl	80021a4 <_lseek>
 802191c:	1c43      	adds	r3, r0, #1
 802191e:	d102      	bne.n	8021926 <_lseek_r+0x1e>
 8021920:	682b      	ldr	r3, [r5, #0]
 8021922:	b103      	cbz	r3, 8021926 <_lseek_r+0x1e>
 8021924:	6023      	str	r3, [r4, #0]
 8021926:	bd38      	pop	{r3, r4, r5, pc}
 8021928:	200157cc 	.word	0x200157cc

0802192c <__swhatbuf_r>:
 802192c:	b570      	push	{r4, r5, r6, lr}
 802192e:	460e      	mov	r6, r1
 8021930:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8021934:	2900      	cmp	r1, #0
 8021936:	b096      	sub	sp, #88	; 0x58
 8021938:	4614      	mov	r4, r2
 802193a:	461d      	mov	r5, r3
 802193c:	da08      	bge.n	8021950 <__swhatbuf_r+0x24>
 802193e:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 8021942:	2200      	movs	r2, #0
 8021944:	602a      	str	r2, [r5, #0]
 8021946:	061a      	lsls	r2, r3, #24
 8021948:	d410      	bmi.n	802196c <__swhatbuf_r+0x40>
 802194a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 802194e:	e00e      	b.n	802196e <__swhatbuf_r+0x42>
 8021950:	466a      	mov	r2, sp
 8021952:	f000 f86f 	bl	8021a34 <_fstat_r>
 8021956:	2800      	cmp	r0, #0
 8021958:	dbf1      	blt.n	802193e <__swhatbuf_r+0x12>
 802195a:	9a01      	ldr	r2, [sp, #4]
 802195c:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8021960:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8021964:	425a      	negs	r2, r3
 8021966:	415a      	adcs	r2, r3
 8021968:	602a      	str	r2, [r5, #0]
 802196a:	e7ee      	b.n	802194a <__swhatbuf_r+0x1e>
 802196c:	2340      	movs	r3, #64	; 0x40
 802196e:	2000      	movs	r0, #0
 8021970:	6023      	str	r3, [r4, #0]
 8021972:	b016      	add	sp, #88	; 0x58
 8021974:	bd70      	pop	{r4, r5, r6, pc}
	...

08021978 <__smakebuf_r>:
 8021978:	898b      	ldrh	r3, [r1, #12]
 802197a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 802197c:	079d      	lsls	r5, r3, #30
 802197e:	4606      	mov	r6, r0
 8021980:	460c      	mov	r4, r1
 8021982:	d507      	bpl.n	8021994 <__smakebuf_r+0x1c>
 8021984:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8021988:	6023      	str	r3, [r4, #0]
 802198a:	6123      	str	r3, [r4, #16]
 802198c:	2301      	movs	r3, #1
 802198e:	6163      	str	r3, [r4, #20]
 8021990:	b002      	add	sp, #8
 8021992:	bd70      	pop	{r4, r5, r6, pc}
 8021994:	ab01      	add	r3, sp, #4
 8021996:	466a      	mov	r2, sp
 8021998:	f7ff ffc8 	bl	802192c <__swhatbuf_r>
 802199c:	9900      	ldr	r1, [sp, #0]
 802199e:	4605      	mov	r5, r0
 80219a0:	4630      	mov	r0, r6
 80219a2:	f7ff f947 	bl	8020c34 <_malloc_r>
 80219a6:	b948      	cbnz	r0, 80219bc <__smakebuf_r+0x44>
 80219a8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80219ac:	059a      	lsls	r2, r3, #22
 80219ae:	d4ef      	bmi.n	8021990 <__smakebuf_r+0x18>
 80219b0:	f023 0303 	bic.w	r3, r3, #3
 80219b4:	f043 0302 	orr.w	r3, r3, #2
 80219b8:	81a3      	strh	r3, [r4, #12]
 80219ba:	e7e3      	b.n	8021984 <__smakebuf_r+0xc>
 80219bc:	4b0d      	ldr	r3, [pc, #52]	; (80219f4 <__smakebuf_r+0x7c>)
 80219be:	62b3      	str	r3, [r6, #40]	; 0x28
 80219c0:	89a3      	ldrh	r3, [r4, #12]
 80219c2:	6020      	str	r0, [r4, #0]
 80219c4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80219c8:	81a3      	strh	r3, [r4, #12]
 80219ca:	9b00      	ldr	r3, [sp, #0]
 80219cc:	6163      	str	r3, [r4, #20]
 80219ce:	9b01      	ldr	r3, [sp, #4]
 80219d0:	6120      	str	r0, [r4, #16]
 80219d2:	b15b      	cbz	r3, 80219ec <__smakebuf_r+0x74>
 80219d4:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80219d8:	4630      	mov	r0, r6
 80219da:	f000 f83d 	bl	8021a58 <_isatty_r>
 80219de:	b128      	cbz	r0, 80219ec <__smakebuf_r+0x74>
 80219e0:	89a3      	ldrh	r3, [r4, #12]
 80219e2:	f023 0303 	bic.w	r3, r3, #3
 80219e6:	f043 0301 	orr.w	r3, r3, #1
 80219ea:	81a3      	strh	r3, [r4, #12]
 80219ec:	89a0      	ldrh	r0, [r4, #12]
 80219ee:	4305      	orrs	r5, r0
 80219f0:	81a5      	strh	r5, [r4, #12]
 80219f2:	e7cd      	b.n	8021990 <__smakebuf_r+0x18>
 80219f4:	080208f9 	.word	0x080208f9

080219f8 <__malloc_lock>:
 80219f8:	4801      	ldr	r0, [pc, #4]	; (8021a00 <__malloc_lock+0x8>)
 80219fa:	f7ff b886 	b.w	8020b0a <__retarget_lock_acquire_recursive>
 80219fe:	bf00      	nop
 8021a00:	200156b9 	.word	0x200156b9

08021a04 <__malloc_unlock>:
 8021a04:	4801      	ldr	r0, [pc, #4]	; (8021a0c <__malloc_unlock+0x8>)
 8021a06:	f7ff b882 	b.w	8020b0e <__retarget_lock_release_recursive>
 8021a0a:	bf00      	nop
 8021a0c:	200156b9 	.word	0x200156b9

08021a10 <_read_r>:
 8021a10:	b538      	push	{r3, r4, r5, lr}
 8021a12:	4d07      	ldr	r5, [pc, #28]	; (8021a30 <_read_r+0x20>)
 8021a14:	4604      	mov	r4, r0
 8021a16:	4608      	mov	r0, r1
 8021a18:	4611      	mov	r1, r2
 8021a1a:	2200      	movs	r2, #0
 8021a1c:	602a      	str	r2, [r5, #0]
 8021a1e:	461a      	mov	r2, r3
 8021a20:	f7e0 fb9a 	bl	8002158 <_read>
 8021a24:	1c43      	adds	r3, r0, #1
 8021a26:	d102      	bne.n	8021a2e <_read_r+0x1e>
 8021a28:	682b      	ldr	r3, [r5, #0]
 8021a2a:	b103      	cbz	r3, 8021a2e <_read_r+0x1e>
 8021a2c:	6023      	str	r3, [r4, #0]
 8021a2e:	bd38      	pop	{r3, r4, r5, pc}
 8021a30:	200157cc 	.word	0x200157cc

08021a34 <_fstat_r>:
 8021a34:	b538      	push	{r3, r4, r5, lr}
 8021a36:	4d07      	ldr	r5, [pc, #28]	; (8021a54 <_fstat_r+0x20>)
 8021a38:	2300      	movs	r3, #0
 8021a3a:	4604      	mov	r4, r0
 8021a3c:	4608      	mov	r0, r1
 8021a3e:	4611      	mov	r1, r2
 8021a40:	602b      	str	r3, [r5, #0]
 8021a42:	f7e0 fba8 	bl	8002196 <_fstat>
 8021a46:	1c43      	adds	r3, r0, #1
 8021a48:	d102      	bne.n	8021a50 <_fstat_r+0x1c>
 8021a4a:	682b      	ldr	r3, [r5, #0]
 8021a4c:	b103      	cbz	r3, 8021a50 <_fstat_r+0x1c>
 8021a4e:	6023      	str	r3, [r4, #0]
 8021a50:	bd38      	pop	{r3, r4, r5, pc}
 8021a52:	bf00      	nop
 8021a54:	200157cc 	.word	0x200157cc

08021a58 <_isatty_r>:
 8021a58:	b538      	push	{r3, r4, r5, lr}
 8021a5a:	4d06      	ldr	r5, [pc, #24]	; (8021a74 <_isatty_r+0x1c>)
 8021a5c:	2300      	movs	r3, #0
 8021a5e:	4604      	mov	r4, r0
 8021a60:	4608      	mov	r0, r1
 8021a62:	602b      	str	r3, [r5, #0]
 8021a64:	f7e0 fb9c 	bl	80021a0 <_isatty>
 8021a68:	1c43      	adds	r3, r0, #1
 8021a6a:	d102      	bne.n	8021a72 <_isatty_r+0x1a>
 8021a6c:	682b      	ldr	r3, [r5, #0]
 8021a6e:	b103      	cbz	r3, 8021a72 <_isatty_r+0x1a>
 8021a70:	6023      	str	r3, [r4, #0]
 8021a72:	bd38      	pop	{r3, r4, r5, pc}
 8021a74:	200157cc 	.word	0x200157cc

08021a78 <_init>:
 8021a78:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8021a7a:	bf00      	nop
 8021a7c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8021a7e:	bc08      	pop	{r3}
 8021a80:	469e      	mov	lr, r3
 8021a82:	4770      	bx	lr

08021a84 <_fini>:
 8021a84:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8021a86:	bf00      	nop
 8021a88:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8021a8a:	bc08      	pop	{r3}
 8021a8c:	469e      	mov	lr, r3
 8021a8e:	4770      	bx	lr
