
STM32F429I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000218f0  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00002cd4  08021aa0  08021aa0  00031aa0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 0000162e  08024774  08024774  00034774  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000094  08025da4  08025da4  00035da4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 00000224  08025e38  08025e38  00035e38  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 0009d2a8  0802605c  0802605c  0003605c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  080c3304  080c3304  000e016c  2**0
                  CONTENTS
  8 .ARM          00000008  080c3304  080c3304  000d3304  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  080c330c  080c330c  000e016c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  080c330c  080c330c  000d330c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000008  080c3320  080c3320  000d3320  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         0000016c  20000000  080c3328  000e0000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          000156f8  2000016c  080c3494  000e016c  2**2
                  ALLOC
 14 ._user_heap_stack 00001404  20015864  080c3494  000e5864  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  000e016c  2**0
                  CONTENTS, READONLY
 16 TouchGFX_Framebuffer 0004b000  d0000000  d0000000  000f0000  2**2
                  ALLOC
 17 .debug_line   00050ff0  00000000  00000000  000e019c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_info   000ef4ce  00000000  00000000  0013118c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_abbrev 000150a5  00000000  00000000  0022065a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_aranges 000030c0  00000000  00000000  00235700  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_str    0011a102  00000000  00000000  002387c0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_ranges 00007048  00000000  00000000  003528c8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_loc    00035d79  00000000  00000000  00359910  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_macro  00030c03  00000000  00000000  0038f689  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .comment      000000cf  00000000  00000000  003c028c  2**0
                  CONTENTS, READONLY
 26 .debug_frame  00008e64  00000000  00000000  003c035c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	2000016c 	.word	0x2000016c
 80001cc:	00000000 	.word	0x00000000
 80001d0:	08021a88 	.word	0x08021a88

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000170 	.word	0x20000170
 80001ec:	08021a88 	.word	0x08021a88

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <__aeabi_uldivmod>:
 8000290:	b953      	cbnz	r3, 80002a8 <__aeabi_uldivmod+0x18>
 8000292:	b94a      	cbnz	r2, 80002a8 <__aeabi_uldivmod+0x18>
 8000294:	2900      	cmp	r1, #0
 8000296:	bf08      	it	eq
 8000298:	2800      	cmpeq	r0, #0
 800029a:	bf1c      	itt	ne
 800029c:	f04f 31ff 	movne.w	r1, #4294967295
 80002a0:	f04f 30ff 	movne.w	r0, #4294967295
 80002a4:	f000 b974 	b.w	8000590 <__aeabi_idiv0>
 80002a8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002ac:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002b0:	f000 f806 	bl	80002c0 <__udivmoddi4>
 80002b4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002b8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002bc:	b004      	add	sp, #16
 80002be:	4770      	bx	lr

080002c0 <__udivmoddi4>:
 80002c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002c4:	9d08      	ldr	r5, [sp, #32]
 80002c6:	4604      	mov	r4, r0
 80002c8:	468e      	mov	lr, r1
 80002ca:	2b00      	cmp	r3, #0
 80002cc:	d14d      	bne.n	800036a <__udivmoddi4+0xaa>
 80002ce:	428a      	cmp	r2, r1
 80002d0:	4694      	mov	ip, r2
 80002d2:	d969      	bls.n	80003a8 <__udivmoddi4+0xe8>
 80002d4:	fab2 f282 	clz	r2, r2
 80002d8:	b152      	cbz	r2, 80002f0 <__udivmoddi4+0x30>
 80002da:	fa01 f302 	lsl.w	r3, r1, r2
 80002de:	f1c2 0120 	rsb	r1, r2, #32
 80002e2:	fa20 f101 	lsr.w	r1, r0, r1
 80002e6:	fa0c fc02 	lsl.w	ip, ip, r2
 80002ea:	ea41 0e03 	orr.w	lr, r1, r3
 80002ee:	4094      	lsls	r4, r2
 80002f0:	ea4f 481c 	mov.w	r8, ip, lsr #16
 80002f4:	0c21      	lsrs	r1, r4, #16
 80002f6:	fbbe f6f8 	udiv	r6, lr, r8
 80002fa:	fa1f f78c 	uxth.w	r7, ip
 80002fe:	fb08 e316 	mls	r3, r8, r6, lr
 8000302:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8000306:	fb06 f107 	mul.w	r1, r6, r7
 800030a:	4299      	cmp	r1, r3
 800030c:	d90a      	bls.n	8000324 <__udivmoddi4+0x64>
 800030e:	eb1c 0303 	adds.w	r3, ip, r3
 8000312:	f106 30ff 	add.w	r0, r6, #4294967295
 8000316:	f080 811f 	bcs.w	8000558 <__udivmoddi4+0x298>
 800031a:	4299      	cmp	r1, r3
 800031c:	f240 811c 	bls.w	8000558 <__udivmoddi4+0x298>
 8000320:	3e02      	subs	r6, #2
 8000322:	4463      	add	r3, ip
 8000324:	1a5b      	subs	r3, r3, r1
 8000326:	b2a4      	uxth	r4, r4
 8000328:	fbb3 f0f8 	udiv	r0, r3, r8
 800032c:	fb08 3310 	mls	r3, r8, r0, r3
 8000330:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000334:	fb00 f707 	mul.w	r7, r0, r7
 8000338:	42a7      	cmp	r7, r4
 800033a:	d90a      	bls.n	8000352 <__udivmoddi4+0x92>
 800033c:	eb1c 0404 	adds.w	r4, ip, r4
 8000340:	f100 33ff 	add.w	r3, r0, #4294967295
 8000344:	f080 810a 	bcs.w	800055c <__udivmoddi4+0x29c>
 8000348:	42a7      	cmp	r7, r4
 800034a:	f240 8107 	bls.w	800055c <__udivmoddi4+0x29c>
 800034e:	4464      	add	r4, ip
 8000350:	3802      	subs	r0, #2
 8000352:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000356:	1be4      	subs	r4, r4, r7
 8000358:	2600      	movs	r6, #0
 800035a:	b11d      	cbz	r5, 8000364 <__udivmoddi4+0xa4>
 800035c:	40d4      	lsrs	r4, r2
 800035e:	2300      	movs	r3, #0
 8000360:	e9c5 4300 	strd	r4, r3, [r5]
 8000364:	4631      	mov	r1, r6
 8000366:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800036a:	428b      	cmp	r3, r1
 800036c:	d909      	bls.n	8000382 <__udivmoddi4+0xc2>
 800036e:	2d00      	cmp	r5, #0
 8000370:	f000 80ef 	beq.w	8000552 <__udivmoddi4+0x292>
 8000374:	2600      	movs	r6, #0
 8000376:	e9c5 0100 	strd	r0, r1, [r5]
 800037a:	4630      	mov	r0, r6
 800037c:	4631      	mov	r1, r6
 800037e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000382:	fab3 f683 	clz	r6, r3
 8000386:	2e00      	cmp	r6, #0
 8000388:	d14a      	bne.n	8000420 <__udivmoddi4+0x160>
 800038a:	428b      	cmp	r3, r1
 800038c:	d302      	bcc.n	8000394 <__udivmoddi4+0xd4>
 800038e:	4282      	cmp	r2, r0
 8000390:	f200 80f9 	bhi.w	8000586 <__udivmoddi4+0x2c6>
 8000394:	1a84      	subs	r4, r0, r2
 8000396:	eb61 0303 	sbc.w	r3, r1, r3
 800039a:	2001      	movs	r0, #1
 800039c:	469e      	mov	lr, r3
 800039e:	2d00      	cmp	r5, #0
 80003a0:	d0e0      	beq.n	8000364 <__udivmoddi4+0xa4>
 80003a2:	e9c5 4e00 	strd	r4, lr, [r5]
 80003a6:	e7dd      	b.n	8000364 <__udivmoddi4+0xa4>
 80003a8:	b902      	cbnz	r2, 80003ac <__udivmoddi4+0xec>
 80003aa:	deff      	udf	#255	; 0xff
 80003ac:	fab2 f282 	clz	r2, r2
 80003b0:	2a00      	cmp	r2, #0
 80003b2:	f040 8092 	bne.w	80004da <__udivmoddi4+0x21a>
 80003b6:	eba1 010c 	sub.w	r1, r1, ip
 80003ba:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80003be:	fa1f fe8c 	uxth.w	lr, ip
 80003c2:	2601      	movs	r6, #1
 80003c4:	0c20      	lsrs	r0, r4, #16
 80003c6:	fbb1 f3f7 	udiv	r3, r1, r7
 80003ca:	fb07 1113 	mls	r1, r7, r3, r1
 80003ce:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 80003d2:	fb0e f003 	mul.w	r0, lr, r3
 80003d6:	4288      	cmp	r0, r1
 80003d8:	d908      	bls.n	80003ec <__udivmoddi4+0x12c>
 80003da:	eb1c 0101 	adds.w	r1, ip, r1
 80003de:	f103 38ff 	add.w	r8, r3, #4294967295
 80003e2:	d202      	bcs.n	80003ea <__udivmoddi4+0x12a>
 80003e4:	4288      	cmp	r0, r1
 80003e6:	f200 80cb 	bhi.w	8000580 <__udivmoddi4+0x2c0>
 80003ea:	4643      	mov	r3, r8
 80003ec:	1a09      	subs	r1, r1, r0
 80003ee:	b2a4      	uxth	r4, r4
 80003f0:	fbb1 f0f7 	udiv	r0, r1, r7
 80003f4:	fb07 1110 	mls	r1, r7, r0, r1
 80003f8:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 80003fc:	fb0e fe00 	mul.w	lr, lr, r0
 8000400:	45a6      	cmp	lr, r4
 8000402:	d908      	bls.n	8000416 <__udivmoddi4+0x156>
 8000404:	eb1c 0404 	adds.w	r4, ip, r4
 8000408:	f100 31ff 	add.w	r1, r0, #4294967295
 800040c:	d202      	bcs.n	8000414 <__udivmoddi4+0x154>
 800040e:	45a6      	cmp	lr, r4
 8000410:	f200 80bb 	bhi.w	800058a <__udivmoddi4+0x2ca>
 8000414:	4608      	mov	r0, r1
 8000416:	eba4 040e 	sub.w	r4, r4, lr
 800041a:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 800041e:	e79c      	b.n	800035a <__udivmoddi4+0x9a>
 8000420:	f1c6 0720 	rsb	r7, r6, #32
 8000424:	40b3      	lsls	r3, r6
 8000426:	fa22 fc07 	lsr.w	ip, r2, r7
 800042a:	ea4c 0c03 	orr.w	ip, ip, r3
 800042e:	fa20 f407 	lsr.w	r4, r0, r7
 8000432:	fa01 f306 	lsl.w	r3, r1, r6
 8000436:	431c      	orrs	r4, r3
 8000438:	40f9      	lsrs	r1, r7
 800043a:	ea4f 491c 	mov.w	r9, ip, lsr #16
 800043e:	fa00 f306 	lsl.w	r3, r0, r6
 8000442:	fbb1 f8f9 	udiv	r8, r1, r9
 8000446:	0c20      	lsrs	r0, r4, #16
 8000448:	fa1f fe8c 	uxth.w	lr, ip
 800044c:	fb09 1118 	mls	r1, r9, r8, r1
 8000450:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000454:	fb08 f00e 	mul.w	r0, r8, lr
 8000458:	4288      	cmp	r0, r1
 800045a:	fa02 f206 	lsl.w	r2, r2, r6
 800045e:	d90b      	bls.n	8000478 <__udivmoddi4+0x1b8>
 8000460:	eb1c 0101 	adds.w	r1, ip, r1
 8000464:	f108 3aff 	add.w	sl, r8, #4294967295
 8000468:	f080 8088 	bcs.w	800057c <__udivmoddi4+0x2bc>
 800046c:	4288      	cmp	r0, r1
 800046e:	f240 8085 	bls.w	800057c <__udivmoddi4+0x2bc>
 8000472:	f1a8 0802 	sub.w	r8, r8, #2
 8000476:	4461      	add	r1, ip
 8000478:	1a09      	subs	r1, r1, r0
 800047a:	b2a4      	uxth	r4, r4
 800047c:	fbb1 f0f9 	udiv	r0, r1, r9
 8000480:	fb09 1110 	mls	r1, r9, r0, r1
 8000484:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 8000488:	fb00 fe0e 	mul.w	lr, r0, lr
 800048c:	458e      	cmp	lr, r1
 800048e:	d908      	bls.n	80004a2 <__udivmoddi4+0x1e2>
 8000490:	eb1c 0101 	adds.w	r1, ip, r1
 8000494:	f100 34ff 	add.w	r4, r0, #4294967295
 8000498:	d26c      	bcs.n	8000574 <__udivmoddi4+0x2b4>
 800049a:	458e      	cmp	lr, r1
 800049c:	d96a      	bls.n	8000574 <__udivmoddi4+0x2b4>
 800049e:	3802      	subs	r0, #2
 80004a0:	4461      	add	r1, ip
 80004a2:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 80004a6:	fba0 9402 	umull	r9, r4, r0, r2
 80004aa:	eba1 010e 	sub.w	r1, r1, lr
 80004ae:	42a1      	cmp	r1, r4
 80004b0:	46c8      	mov	r8, r9
 80004b2:	46a6      	mov	lr, r4
 80004b4:	d356      	bcc.n	8000564 <__udivmoddi4+0x2a4>
 80004b6:	d053      	beq.n	8000560 <__udivmoddi4+0x2a0>
 80004b8:	b15d      	cbz	r5, 80004d2 <__udivmoddi4+0x212>
 80004ba:	ebb3 0208 	subs.w	r2, r3, r8
 80004be:	eb61 010e 	sbc.w	r1, r1, lr
 80004c2:	fa01 f707 	lsl.w	r7, r1, r7
 80004c6:	fa22 f306 	lsr.w	r3, r2, r6
 80004ca:	40f1      	lsrs	r1, r6
 80004cc:	431f      	orrs	r7, r3
 80004ce:	e9c5 7100 	strd	r7, r1, [r5]
 80004d2:	2600      	movs	r6, #0
 80004d4:	4631      	mov	r1, r6
 80004d6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80004da:	f1c2 0320 	rsb	r3, r2, #32
 80004de:	40d8      	lsrs	r0, r3
 80004e0:	fa0c fc02 	lsl.w	ip, ip, r2
 80004e4:	fa21 f303 	lsr.w	r3, r1, r3
 80004e8:	4091      	lsls	r1, r2
 80004ea:	4301      	orrs	r1, r0
 80004ec:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80004f0:	fa1f fe8c 	uxth.w	lr, ip
 80004f4:	fbb3 f0f7 	udiv	r0, r3, r7
 80004f8:	fb07 3610 	mls	r6, r7, r0, r3
 80004fc:	0c0b      	lsrs	r3, r1, #16
 80004fe:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 8000502:	fb00 f60e 	mul.w	r6, r0, lr
 8000506:	429e      	cmp	r6, r3
 8000508:	fa04 f402 	lsl.w	r4, r4, r2
 800050c:	d908      	bls.n	8000520 <__udivmoddi4+0x260>
 800050e:	eb1c 0303 	adds.w	r3, ip, r3
 8000512:	f100 38ff 	add.w	r8, r0, #4294967295
 8000516:	d22f      	bcs.n	8000578 <__udivmoddi4+0x2b8>
 8000518:	429e      	cmp	r6, r3
 800051a:	d92d      	bls.n	8000578 <__udivmoddi4+0x2b8>
 800051c:	3802      	subs	r0, #2
 800051e:	4463      	add	r3, ip
 8000520:	1b9b      	subs	r3, r3, r6
 8000522:	b289      	uxth	r1, r1
 8000524:	fbb3 f6f7 	udiv	r6, r3, r7
 8000528:	fb07 3316 	mls	r3, r7, r6, r3
 800052c:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000530:	fb06 f30e 	mul.w	r3, r6, lr
 8000534:	428b      	cmp	r3, r1
 8000536:	d908      	bls.n	800054a <__udivmoddi4+0x28a>
 8000538:	eb1c 0101 	adds.w	r1, ip, r1
 800053c:	f106 38ff 	add.w	r8, r6, #4294967295
 8000540:	d216      	bcs.n	8000570 <__udivmoddi4+0x2b0>
 8000542:	428b      	cmp	r3, r1
 8000544:	d914      	bls.n	8000570 <__udivmoddi4+0x2b0>
 8000546:	3e02      	subs	r6, #2
 8000548:	4461      	add	r1, ip
 800054a:	1ac9      	subs	r1, r1, r3
 800054c:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 8000550:	e738      	b.n	80003c4 <__udivmoddi4+0x104>
 8000552:	462e      	mov	r6, r5
 8000554:	4628      	mov	r0, r5
 8000556:	e705      	b.n	8000364 <__udivmoddi4+0xa4>
 8000558:	4606      	mov	r6, r0
 800055a:	e6e3      	b.n	8000324 <__udivmoddi4+0x64>
 800055c:	4618      	mov	r0, r3
 800055e:	e6f8      	b.n	8000352 <__udivmoddi4+0x92>
 8000560:	454b      	cmp	r3, r9
 8000562:	d2a9      	bcs.n	80004b8 <__udivmoddi4+0x1f8>
 8000564:	ebb9 0802 	subs.w	r8, r9, r2
 8000568:	eb64 0e0c 	sbc.w	lr, r4, ip
 800056c:	3801      	subs	r0, #1
 800056e:	e7a3      	b.n	80004b8 <__udivmoddi4+0x1f8>
 8000570:	4646      	mov	r6, r8
 8000572:	e7ea      	b.n	800054a <__udivmoddi4+0x28a>
 8000574:	4620      	mov	r0, r4
 8000576:	e794      	b.n	80004a2 <__udivmoddi4+0x1e2>
 8000578:	4640      	mov	r0, r8
 800057a:	e7d1      	b.n	8000520 <__udivmoddi4+0x260>
 800057c:	46d0      	mov	r8, sl
 800057e:	e77b      	b.n	8000478 <__udivmoddi4+0x1b8>
 8000580:	3b02      	subs	r3, #2
 8000582:	4461      	add	r1, ip
 8000584:	e732      	b.n	80003ec <__udivmoddi4+0x12c>
 8000586:	4630      	mov	r0, r6
 8000588:	e709      	b.n	800039e <__udivmoddi4+0xde>
 800058a:	4464      	add	r4, ip
 800058c:	3802      	subs	r0, #2
 800058e:	e742      	b.n	8000416 <__udivmoddi4+0x156>

08000590 <__aeabi_idiv0>:
 8000590:	4770      	bx	lr
 8000592:	bf00      	nop

08000594 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 8000594:	f8df d034 	ldr.w	sp, [pc, #52]	; 80005cc <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000598:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 800059a:	e003      	b.n	80005a4 <LoopCopyDataInit>

0800059c <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 800059c:	4b0c      	ldr	r3, [pc, #48]	; (80005d0 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 800059e:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 80005a0:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 80005a2:	3104      	adds	r1, #4

080005a4 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 80005a4:	480b      	ldr	r0, [pc, #44]	; (80005d4 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 80005a6:	4b0c      	ldr	r3, [pc, #48]	; (80005d8 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 80005a8:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 80005aa:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 80005ac:	d3f6      	bcc.n	800059c <CopyDataInit>
  ldr  r2, =_sbss
 80005ae:	4a0b      	ldr	r2, [pc, #44]	; (80005dc <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 80005b0:	e002      	b.n	80005b8 <LoopFillZerobss>

080005b2 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 80005b2:	2300      	movs	r3, #0
  str  r3, [r2], #4
 80005b4:	f842 3b04 	str.w	r3, [r2], #4

080005b8 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 80005b8:	4b09      	ldr	r3, [pc, #36]	; (80005e0 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 80005ba:	429a      	cmp	r2, r3
  bcc  FillZerobss
 80005bc:	d3f9      	bcc.n	80005b2 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 80005be:	f005 fb81 	bl	8005cc4 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80005c2:	f020 fa85 	bl	8020ad0 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80005c6:	f000 ff69 	bl	800149c <main>
  bx  lr    
 80005ca:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 80005cc:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 80005d0:	080c3328 	.word	0x080c3328
  ldr  r0, =_sdata
 80005d4:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 80005d8:	2000016c 	.word	0x2000016c
  ldr  r2, =_sbss
 80005dc:	2000016c 	.word	0x2000016c
  ldr  r3, = _ebss
 80005e0:	20015864 	.word	0x20015864

080005e4 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80005e4:	e7fe      	b.n	80005e4 <ADC_IRQHandler>

080005e6 <MX_TouchGFX_Init>:
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_init();
 80005e6:	f000 bc39 	b.w	8000e5c <touchgfx_init>

080005ea <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 80005ea:	f000 bcab 	b.w	8000f44 <touchgfx_taskEntry>

080005ee <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 80005ee:	4770      	bx	lr

080005f0 <_ZN20STM32TouchControllerD0Ev>:
 80005f0:	b510      	push	{r4, lr}
 80005f2:	2104      	movs	r1, #4
 80005f4:	4604      	mov	r4, r0
 80005f6:	f020 f877 	bl	80206e8 <_ZdlPvj>
 80005fa:	4620      	mov	r0, r4
 80005fc:	bd10      	pop	{r4, pc}
	...

08000600 <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 8000600:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 8000602:	4b0c      	ldr	r3, [pc, #48]	; (8000634 <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000604:	4c0c      	ldr	r4, [pc, #48]	; (8000638 <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 8000606:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 8000608:	4b0c      	ldr	r3, [pc, #48]	; (800063c <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 800060a:	2082      	movs	r0, #130	; 0x82
    TsYBoundary = YSize;
 800060c:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 800060e:	6863      	ldr	r3, [r4, #4]
 8000610:	4798      	blx	r3
 8000612:	f640 0311 	movw	r3, #2065	; 0x811
 8000616:	4298      	cmp	r0, r3
 8000618:	d10a      	bne.n	8000630 <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 800061a:	4d09      	ldr	r5, [pc, #36]	; (8000640 <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 800061c:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 800061e:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 8000620:	2082      	movs	r0, #130	; 0x82
 8000622:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 8000624:	682b      	ldr	r3, [r5, #0]
 8000626:	2082      	movs	r0, #130	; 0x82
 8000628:	68db      	ldr	r3, [r3, #12]
 800062a:	4798      	blx	r3
 800062c:	2000      	movs	r0, #0
    }

    return ret;
}
 800062e:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 8000630:	2001      	movs	r0, #1
 8000632:	e7fc      	b.n	800062e <_Z11BSP_TS_Inittt+0x2e>
 8000634:	20000188 	.word	0x20000188
 8000638:	20000054 	.word	0x20000054
 800063c:	2000018a 	.word	0x2000018a
 8000640:	2000018c 	.word	0x2000018c

08000644 <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 8000644:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8000648:	20f0      	movs	r0, #240	; 0xf0
 800064a:	f7ff bfd9 	b.w	8000600 <_Z11BSP_TS_Inittt>
	...

08000650 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 8000650:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000652:	4d2d      	ldr	r5, [pc, #180]	; (8000708 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb8>)
 8000654:	682b      	ldr	r3, [r5, #0]
{
 8000656:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000658:	691b      	ldr	r3, [r3, #16]
 800065a:	2082      	movs	r0, #130	; 0x82
 800065c:	4798      	blx	r3
 800065e:	b280      	uxth	r0, r0
 8000660:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 8000662:	2800      	cmp	r0, #0
 8000664:	d043      	beq.n	80006ee <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x9e>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 8000666:	682b      	ldr	r3, [r5, #0]
 8000668:	f10d 0206 	add.w	r2, sp, #6
 800066c:	695b      	ldr	r3, [r3, #20]
 800066e:	a901      	add	r1, sp, #4
 8000670:	2082      	movs	r0, #130	; 0x82
 8000672:	4798      	blx	r3

        /* Y value first correction */
        y -= 360;
 8000674:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8000678:	f5a2 72b4 	sub.w	r2, r2, #360	; 0x168
 800067c:	b292      	uxth	r2, r2

        /* Y value second correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 800067e:	2a0a      	cmp	r2, #10
 8000680:	d937      	bls.n	80006f2 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xa2>
        yr = y / 11;
 8000682:	230b      	movs	r3, #11
 8000684:	fbb2 f2f3 	udiv	r2, r2, r3
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 8000688:	4b20      	ldr	r3, [pc, #128]	; (800070c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xbc>)
 800068a:	881b      	ldrh	r3, [r3, #0]
 800068c:	429a      	cmp	r2, r3
 800068e:	d901      	bls.n	8000694 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x44>
        {
            yr = TsYBoundary - 1;
 8000690:	3b01      	subs	r3, #1
 8000692:	b29a      	uxth	r2, r3
        else
        {}
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 8000694:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8000698:	f640 31b8 	movw	r1, #3000	; 0xbb8
 800069c:	428b      	cmp	r3, r1
 800069e:	d82a      	bhi.n	80006f6 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xa6>
        {
            x = 3870 - x;
 80006a0:	f5c3 6371 	rsb	r3, r3, #3856	; 0xf10
 80006a4:	330e      	adds	r3, #14
 80006a6:	b29b      	uxth	r3, r3
        {
            x = 3800 - x;
        }

        /* X value second correction */
        xr = x / 15;
 80006a8:	210f      	movs	r1, #15
 80006aa:	fbb3 f3f1 	udiv	r3, r3, r1
        /* Return X position value */
        if (xr <= 0)
        {
            xr = 0;
        }
        else if (xr > TsXBoundary)
 80006ae:	4918      	ldr	r1, [pc, #96]	; (8000710 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc0>)
 80006b0:	8809      	ldrh	r1, [r1, #0]
 80006b2:	428b      	cmp	r3, r1
 80006b4:	d901      	bls.n	80006ba <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x6a>
        {
            xr = TsXBoundary - 1;
 80006b6:	1e4b      	subs	r3, r1, #1
 80006b8:	b29b      	uxth	r3, r3
        }
        else
        {}

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006ba:	4e16      	ldr	r6, [pc, #88]	; (8000714 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc4>)
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006bc:	4d16      	ldr	r5, [pc, #88]	; (8000718 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc8>)
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006be:	6830      	ldr	r0, [r6, #0]
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006c0:	682f      	ldr	r7, [r5, #0]
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006c2:	4283      	cmp	r3, r0
 80006c4:	b281      	uxth	r1, r0
 80006c6:	bf8c      	ite	hi
 80006c8:	1a59      	subhi	r1, r3, r1
 80006ca:	1ac9      	subls	r1, r1, r3
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006cc:	b2b8      	uxth	r0, r7
 80006ce:	42ba      	cmp	r2, r7
 80006d0:	bf8c      	ite	hi
 80006d2:	1a10      	subhi	r0, r2, r0
 80006d4:	1a80      	subls	r0, r0, r2
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006d6:	b289      	uxth	r1, r1
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006d8:	b280      	uxth	r0, r0

        if (xDiff + yDiff > 5)
 80006da:	4401      	add	r1, r0
 80006dc:	2905      	cmp	r1, #5
        {
            _x = x;
 80006de:	bfc8      	it	gt
 80006e0:	6033      	strgt	r3, [r6, #0]
            _y = y;
        }

        /* Update the X position */
        TsState->X = _x;
 80006e2:	6833      	ldr	r3, [r6, #0]
            _y = y;
 80006e4:	bfc8      	it	gt
 80006e6:	602a      	strgt	r2, [r5, #0]
        TsState->X = _x;
 80006e8:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 80006ea:	682b      	ldr	r3, [r5, #0]
 80006ec:	80a3      	strh	r3, [r4, #4]
    }
}
 80006ee:	b003      	add	sp, #12
 80006f0:	bdf0      	pop	{r4, r5, r6, r7, pc}
            yr = 0;
 80006f2:	2200      	movs	r2, #0
 80006f4:	e7ce      	b.n	8000694 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x44>
            x = 3800 - x;
 80006f6:	f5c3 636d 	rsb	r3, r3, #3792	; 0xed0
 80006fa:	3308      	adds	r3, #8
 80006fc:	b29b      	uxth	r3, r3
        if (xr <= 0)
 80006fe:	2b0e      	cmp	r3, #14
 8000700:	d8d2      	bhi.n	80006a8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x58>
            xr = 0;
 8000702:	2300      	movs	r3, #0
 8000704:	e7d9      	b.n	80006ba <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x6a>
 8000706:	bf00      	nop
 8000708:	2000018c 	.word	0x2000018c
 800070c:	2000018a 	.word	0x2000018a
 8000710:	20000188 	.word	0x20000188
 8000714:	20000190 	.word	0x20000190
 8000718:	20000194 	.word	0x20000194

0800071c <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 800071c:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 800071e:	4668      	mov	r0, sp
{
 8000720:	460d      	mov	r5, r1
 8000722:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 8000724:	f7ff ff94 	bl	8000650 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8000728:	f8bd 0000 	ldrh.w	r0, [sp]
 800072c:	b130      	cbz	r0, 800073c <_ZN20STM32TouchController11sampleTouchERlS0_+0x20>
        x = state.X;
 800072e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8000732:	602b      	str	r3, [r5, #0]
        y = state.Y;
 8000734:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8000738:	6023      	str	r3, [r4, #0]
        return true;
 800073a:	2001      	movs	r0, #1
}
 800073c:	b003      	add	sp, #12
 800073e:	bd30      	pop	{r4, r5, pc}

08000740 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{

}
 8000740:	4770      	bx	lr

08000742 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
 8000742:	4770      	bx	lr

08000744 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
 8000744:	4770      	bx	lr

08000746 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8000746:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8000748:	f880 1074 	strb.w	r1, [r0, #116]	; 0x74
        displayOrientationChangeRequested = true;
 800074c:	f880 3075 	strb.w	r3, [r0, #117]	; 0x75
    }
 8000750:	4770      	bx	lr

08000752 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 8000752:	2000      	movs	r0, #0
 8000754:	4770      	bx	lr
	...

08000758 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000758:	4b03      	ldr	r3, [pc, #12]	; (8000768 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 800075a:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 800075c:	3900      	subs	r1, #0
 800075e:	bf18      	it	ne
 8000760:	2101      	movne	r1, #1
 8000762:	7019      	strb	r1, [r3, #0]
    }
 8000764:	4770      	bx	lr
 8000766:	bf00      	nop
 8000768:	200155b7 	.word	0x200155b7

0800076c <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 800076c:	2000      	movs	r0, #0
 800076e:	4770      	bx	lr

08000770 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8000770:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8000772:	b10b      	cbz	r3, 8000778 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8000774:	4608      	mov	r0, r1
 8000776:	4718      	bx	r3
        }
    }
 8000778:	4770      	bx	lr

0800077a <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 800077a:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800077e:	4770      	bx	lr

08000780 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8000780:	6840      	ldr	r0, [r0, #4]
 8000782:	6803      	ldr	r3, [r0, #0]
 8000784:	699b      	ldr	r3, [r3, #24]
 8000786:	4718      	bx	r3

08000788 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8000788:	4770      	bx	lr

0800078a <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 800078a:	4770      	bx	lr

0800078c <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 800078c:	4770      	bx	lr

0800078e <_ZN11TouchGFXHAL10initializeEv>:
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 800078e:	f000 bc79 	b.w	8001084 <_ZN20TouchGFXGeneratedHAL10initializeEv>

08000792 <_ZN11TouchGFXHAL9taskEntryEv>:
}

void TouchGFXHAL::taskEntry()
{
 8000792:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 8000794:	6803      	ldr	r3, [r0, #0]
{
 8000796:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 8000798:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800079c:	4798      	blx	r3
    enableInterrupts();
 800079e:	6823      	ldr	r3, [r4, #0]
 80007a0:	4620      	mov	r0, r4
 80007a2:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80007a4:	4798      	blx	r3

    OSWrappers::waitForVSync();
 80007a6:	f000 f8eb 	bl	8000980 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 80007aa:	6823      	ldr	r3, [r4, #0]
 80007ac:	4620      	mov	r0, r4
 80007ae:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80007b0:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 80007b2:	2029      	movs	r0, #41	; 0x29
 80007b4:	f001 f944 	bl	8001a40 <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 80007b8:	f000 f8e2 	bl	8000980 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 80007bc:	6823      	ldr	r3, [r4, #0]
 80007be:	4620      	mov	r0, r4
 80007c0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80007c2:	4798      	blx	r3
    for (;;)
 80007c4:	e7f8      	b.n	80007b8 <_ZN11TouchGFXHAL9taskEntryEv+0x26>

080007c6 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 80007c6:	b510      	push	{r4, lr}
 80007c8:	4604      	mov	r4, r0
        swapFrameBuffers();
 80007ca:	f00b f97b 	bl	800bac4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 80007ce:	6823      	ldr	r3, [r4, #0]
 80007d0:	4620      	mov	r0, r4
 80007d2:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
 80007d6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 80007da:	4718      	bx	r3

080007dc <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 80007dc:	f000 bc44 	b.w	8001068 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

080007e0 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 80007e0:	f000 bc48 	b.w	8001074 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

080007e4 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 80007e4:	f000 bc74 	b.w	80010d0 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

080007e8 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 80007e8:	f000 bc1a 	b.w	8001020 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

080007ec <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 80007ec:	f000 bc74 	b.w	80010d8 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

080007f0 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 80007f0:	f000 bc7c 	b.w	80010ec <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

080007f4 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 80007f4:	f000 bc1e 	b.w	8001034 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

080007f8 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 80007f8:	f00a bbd8 	b.w	800afac <_ZN8touchgfx3HAL16flushFrameBufferEv>

080007fc <_ZN11TouchGFXHALD0Ev>:
 80007fc:	b510      	push	{r4, lr}
 80007fe:	217c      	movs	r1, #124	; 0x7c
 8000800:	4604      	mov	r4, r0
 8000802:	f01f ff71 	bl	80206e8 <_ZdlPvj>
 8000806:	4620      	mov	r0, r4
 8000808:	bd10      	pop	{r4, pc}

0800080a <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 800080a:	f890 3077 	ldrb.w	r3, [r0, #119]	; 0x77
 800080e:	b11b      	cbz	r3, 8000818 <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 8000810:	6840      	ldr	r0, [r0, #4]
 8000812:	6803      	ldr	r3, [r0, #0]
 8000814:	681b      	ldr	r3, [r3, #0]
 8000816:	4718      	bx	r3
    }
 8000818:	4618      	mov	r0, r3
 800081a:	4770      	bx	lr

0800081c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 800081c:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 800081e:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 8000822:	f890 4074 	ldrb.w	r4, [r0, #116]	; 0x74
            if (DISPLAY_ROTATION == rotate0)
 8000826:	4b0c      	ldr	r3, [pc, #48]	; (8000858 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 8000828:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 800082a:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 800082c:	d009      	beq.n	8000842 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 800082e:	b93a      	cbnz	r2, 8000840 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000830:	4a0a      	ldr	r2, [pc, #40]	; (800085c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 8000832:	490b      	ldr	r1, [pc, #44]	; (8000860 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000834:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 8000836:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 8000838:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800083a:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 800083c:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 800083e:	701a      	strb	r2, [r3, #0]
    }
 8000840:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 8000842:	2a00      	cmp	r2, #0
 8000844:	d0fc      	beq.n	8000840 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000846:	4a05      	ldr	r2, [pc, #20]	; (800085c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 8000848:	4905      	ldr	r1, [pc, #20]	; (8000860 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800084a:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 800084c:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 800084e:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000850:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 8000852:	2200      	movs	r2, #0
 8000854:	e7f3      	b.n	800083e <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 8000856:	bf00      	nop
 8000858:	200155b0 	.word	0x200155b0
 800085c:	200155ac 	.word	0x200155ac
 8000860:	200155ae 	.word	0x200155ae

08000864 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8000864:	b570      	push	{r4, r5, r6, lr}
 8000866:	460d      	mov	r5, r1
 8000868:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 800086a:	b935      	cbnz	r5, 800087a <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 800086c:	4b09      	ldr	r3, [pc, #36]	; (8000894 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 800086e:	4a0a      	ldr	r2, [pc, #40]	; (8000898 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 8000870:	480a      	ldr	r0, [pc, #40]	; (800089c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 8000872:	f240 21d2 	movw	r1, #722	; 0x2d2
 8000876:	f01f ffeb 	bl	8020850 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 800087a:	e9c0 520f 	strd	r5, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 800087e:	4b08      	ldr	r3, [pc, #32]	; (80008a0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 8000880:	3a00      	subs	r2, #0
 8000882:	bf18      	it	ne
 8000884:	2201      	movne	r2, #1
 8000886:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8000888:	6803      	ldr	r3, [r0, #0]
    }
 800088a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 800088e:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8000892:	4718      	bx	r3
 8000894:	08021af8 	.word	0x08021af8
 8000898:	08021b30 	.word	0x08021b30
 800089c:	08021b7e 	.word	0x08021b7e
 80008a0:	200155b6 	.word	0x200155b6

080008a4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 80008a4:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 80008a6:	4b09      	ldr	r3, [pc, #36]	; (80008cc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 80008a8:	881b      	ldrh	r3, [r3, #0]
 80008aa:	428b      	cmp	r3, r1
 80008ac:	d803      	bhi.n	80008b6 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 80008ae:	4b08      	ldr	r3, [pc, #32]	; (80008d0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 80008b0:	881b      	ldrh	r3, [r3, #0]
 80008b2:	4293      	cmp	r3, r2
 80008b4:	d905      	bls.n	80008c2 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 80008b6:	4b07      	ldr	r3, [pc, #28]	; (80008d4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 80008b8:	4a07      	ldr	r2, [pc, #28]	; (80008d8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 80008ba:	4808      	ldr	r0, [pc, #32]	; (80008dc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 80008bc:	219e      	movs	r1, #158	; 0x9e
 80008be:	f01f ffc7 	bl	8020850 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 80008c2:	4b07      	ldr	r3, [pc, #28]	; (80008e0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 80008c4:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 80008c6:	4b07      	ldr	r3, [pc, #28]	; (80008e4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 80008c8:	801a      	strh	r2, [r3, #0]
    }
 80008ca:	bd08      	pop	{r3, pc}
 80008cc:	200155ac 	.word	0x200155ac
 80008d0:	200155ae 	.word	0x200155ae
 80008d4:	08021bc3 	.word	0x08021bc3
 80008d8:	08021c26 	.word	0x08021c26
 80008dc:	08021b7e 	.word	0x08021b7e
 80008e0:	200155b2 	.word	0x200155b2
 80008e4:	200155b4 	.word	0x200155b4

080008e8 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 80008e8:	2101      	movs	r1, #1
{
 80008ea:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 80008ec:	2200      	movs	r2, #0
 80008ee:	4608      	mov	r0, r1
 80008f0:	f007 fe9a 	bl	8008628 <osSemaphoreNew>
 80008f4:	4b0a      	ldr	r3, [pc, #40]	; (8000920 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 80008f6:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 80008f8:	b928      	cbnz	r0, 8000906 <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 80008fa:	4b0a      	ldr	r3, [pc, #40]	; (8000924 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 80008fc:	4a0a      	ldr	r2, [pc, #40]	; (8000928 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 80008fe:	2129      	movs	r1, #41	; 0x29

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000900:	480a      	ldr	r0, [pc, #40]	; (800092c <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8000902:	f01f ffa5 	bl	8020850 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8000906:	2200      	movs	r2, #0
 8000908:	2104      	movs	r1, #4
 800090a:	2001      	movs	r0, #1
 800090c:	f007 ff52 	bl	80087b4 <osMessageQueueNew>
 8000910:	4b07      	ldr	r3, [pc, #28]	; (8000930 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8000912:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000914:	b918      	cbnz	r0, 800091e <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8000916:	4b07      	ldr	r3, [pc, #28]	; (8000934 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8000918:	4a03      	ldr	r2, [pc, #12]	; (8000928 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 800091a:	212d      	movs	r1, #45	; 0x2d
 800091c:	e7f0      	b.n	8000900 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 800091e:	bd08      	pop	{r3, pc}
 8000920:	2000019c 	.word	0x2000019c
 8000924:	08021d44 	.word	0x08021d44
 8000928:	08021d8d 	.word	0x08021d8d
 800092c:	08021dbc 	.word	0x08021dbc
 8000930:	20000198 	.word	0x20000198
 8000934:	08021e0a 	.word	0x08021e0a

08000938 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8000938:	4b02      	ldr	r3, [pc, #8]	; (8000944 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 800093a:	f04f 31ff 	mov.w	r1, #4294967295
 800093e:	6818      	ldr	r0, [r3, #0]
 8000940:	f007 bec8 	b.w	80086d4 <osSemaphoreAcquire>
 8000944:	2000019c 	.word	0x2000019c

08000948 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8000948:	4b01      	ldr	r3, [pc, #4]	; (8000950 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 800094a:	6818      	ldr	r0, [r3, #0]
 800094c:	f007 befc 	b.w	8008748 <osSemaphoreRelease>
 8000950:	2000019c 	.word	0x2000019c

08000954 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8000954:	4b02      	ldr	r3, [pc, #8]	; (8000960 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8000956:	2100      	movs	r1, #0
 8000958:	6818      	ldr	r0, [r3, #0]
 800095a:	f007 bebb 	b.w	80086d4 <osSemaphoreAcquire>
 800095e:	bf00      	nop
 8000960:	2000019c 	.word	0x2000019c

08000964 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 8000964:	f7ff bff0 	b.w	8000948 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08000968 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8000968:	4803      	ldr	r0, [pc, #12]	; (8000978 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 800096a:	4904      	ldr	r1, [pc, #16]	; (800097c <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 800096c:	6800      	ldr	r0, [r0, #0]
 800096e:	2300      	movs	r3, #0
 8000970:	461a      	mov	r2, r3
 8000972:	f007 bf65 	b.w	8008840 <osMessageQueuePut>
 8000976:	bf00      	nop
 8000978:	20000198 	.word	0x20000198
 800097c:	20000004 	.word	0x20000004

08000980 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8000980:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8000982:	4c08      	ldr	r4, [pc, #32]	; (80009a4 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8000984:	2300      	movs	r3, #0
 8000986:	461a      	mov	r2, r3
 8000988:	a901      	add	r1, sp, #4
 800098a:	6820      	ldr	r0, [r4, #0]
 800098c:	f007 ff9a 	bl	80088c4 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8000990:	6820      	ldr	r0, [r4, #0]
 8000992:	f04f 33ff 	mov.w	r3, #4294967295
 8000996:	2200      	movs	r2, #0
 8000998:	a901      	add	r1, sp, #4
 800099a:	f007 ff93 	bl	80088c4 <osMessageQueueGet>
}
 800099e:	b002      	add	sp, #8
 80009a0:	bd10      	pop	{r4, pc}
 80009a2:	bf00      	nop
 80009a4:	20000198 	.word	0x20000198

080009a8 <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 80009a8:	6803      	ldr	r3, [r0, #0]
 80009aa:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80009ac:	4718      	bx	r3

080009ae <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 80009ae:	2001      	movs	r0, #1
 80009b0:	4770      	bx	lr

080009b2 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 80009b2:	6803      	ldr	r3, [r0, #0]
 80009b4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80009b6:	4718      	bx	r3

080009b8 <_ZN8STM32DMA10initializeEv>:
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}

void STM32DMA::initialize()
{
 80009b8:	b082      	sub	sp, #8
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 80009ba:	2300      	movs	r3, #0
 80009bc:	9301      	str	r3, [sp, #4]
 80009be:	4b0d      	ldr	r3, [pc, #52]	; (80009f4 <_ZN8STM32DMA10initializeEv+0x3c>)
 80009c0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80009c2:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 80009c6:	631a      	str	r2, [r3, #48]	; 0x30
 80009c8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80009ca:	f402 0200 	and.w	r2, r2, #8388608	; 0x800000
 80009ce:	9201      	str	r2, [sp, #4]
 80009d0:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 80009d2:	691a      	ldr	r2, [r3, #16]
 80009d4:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 80009d8:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 80009da:	691a      	ldr	r2, [r3, #16]
 80009dc:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 80009e0:	611a      	str	r2, [r3, #16]

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 80009e2:	4b05      	ldr	r3, [pc, #20]	; (80009f8 <_ZN8STM32DMA10initializeEv+0x40>)
 80009e4:	4a05      	ldr	r2, [pc, #20]	; (80009fc <_ZN8STM32DMA10initializeEv+0x44>)
 80009e6:	611a      	str	r2, [r3, #16]
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80009e8:	4b05      	ldr	r3, [pc, #20]	; (8000a00 <_ZN8STM32DMA10initializeEv+0x48>)
 80009ea:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80009ee:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 80009f0:	b002      	add	sp, #8
 80009f2:	4770      	bx	lr
 80009f4:	40023800 	.word	0x40023800
 80009f8:	20003a0c 	.word	0x20003a0c
 80009fc:	08000a45 	.word	0x08000a45
 8000a00:	e000e100 	.word	0xe000e100

08000a04 <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8000a04:	f240 30ef 	movw	r0, #1007	; 0x3ef
 8000a08:	4770      	bx	lr
	...

08000a0c <_ZN8STM32DMAD1Ev>:
STM32DMA::~STM32DMA()
 8000a0c:	4b05      	ldr	r3, [pc, #20]	; (8000a24 <_ZN8STM32DMAD1Ev+0x18>)
 8000a0e:	6003      	str	r3, [r0, #0]
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000a10:	4b05      	ldr	r3, [pc, #20]	; (8000a28 <_ZN8STM32DMAD1Ev+0x1c>)
 8000a12:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8000a16:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8000a1a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8000a1e:	f3bf 8f6f 	isb	sy
}
 8000a22:	4770      	bx	lr
 8000a24:	08021fa8 	.word	0x08021fa8
 8000a28:	e000e100 	.word	0xe000e100

08000a2c <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 8000a2c:	b510      	push	{r4, lr}
 8000a2e:	4604      	mov	r4, r0
}
 8000a30:	f44f 615a 	mov.w	r1, #3488	; 0xda0
 8000a34:	f7ff ffea 	bl	8000a0c <_ZN8STM32DMAD1Ev>
 8000a38:	4620      	mov	r0, r4
 8000a3a:	f01f fe55 	bl	80206e8 <_ZdlPvj>
 8000a3e:	4620      	mov	r0, r4
 8000a40:	bd10      	pop	{r4, pc}
	...

08000a44 <DMA2D_XferCpltCallback>:
        return instance;
 8000a44:	4b02      	ldr	r3, [pc, #8]	; (8000a50 <DMA2D_XferCpltCallback+0xc>)
 8000a46:	681b      	ldr	r3, [r3, #0]
 8000a48:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8000a4a:	6803      	ldr	r3, [r0, #0]
 8000a4c:	695b      	ldr	r3, [r3, #20]
 8000a4e:	4718      	bx	r3
 8000a50:	200155b8 	.word	0x200155b8

08000a54 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8000a54:	b570      	push	{r4, r5, r6, lr}
 8000a56:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8000a58:	4625      	mov	r5, r4
 8000a5a:	4b0a      	ldr	r3, [pc, #40]	; (8000a84 <_ZN8STM32DMAC1Ev+0x30>)
 8000a5c:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8000a5e:	2600      	movs	r6, #0
 8000a60:	6060      	str	r0, [r4, #4]
 8000a62:	7226      	strb	r6, [r4, #8]
 8000a64:	7266      	strb	r6, [r4, #9]
 8000a66:	f845 3b20 	str.w	r3, [r5], #32
 8000a6a:	2260      	movs	r2, #96	; 0x60
 8000a6c:	4629      	mov	r1, r5
 8000a6e:	f00b f97f 	bl	800bd70 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 8000a72:	f504 635a 	add.w	r3, r4, #3488	; 0xda0
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 8000a76:	60ee      	str	r6, [r5, #12]
 8000a78:	3524      	adds	r5, #36	; 0x24
 8000a7a:	42ab      	cmp	r3, r5
 8000a7c:	d1fb      	bne.n	8000a76 <_ZN8STM32DMAC1Ev+0x22>
}
 8000a7e:	4620      	mov	r0, r4
 8000a80:	bd70      	pop	{r4, r5, r6, pc}
 8000a82:	bf00      	nop
 8000a84:	08021fa8 	.word	0x08021fa8

08000a88 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 8000a88:	b508      	push	{r3, lr}
    switch (format)
 8000a8a:	290b      	cmp	r1, #11
 8000a8c:	d80b      	bhi.n	8000aa6 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1e>
 8000a8e:	e8df f001 	tbb	[pc, r1]
 8000a92:	0612      	.short	0x0612
 8000a94:	0a0a0a10 	.word	0x0a0a0a10
 8000a98:	0808080a 	.word	0x0808080a
 8000a9c:	0808      	.short	0x0808
 8000a9e:	2001      	movs	r0, #1
}
 8000aa0:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 8000aa2:	2005      	movs	r0, #5
        break;
 8000aa4:	e7fc      	b.n	8000aa0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        assert(0 && "Unsupported Format!");
 8000aa6:	4b05      	ldr	r3, [pc, #20]	; (8000abc <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8000aa8:	4a05      	ldr	r2, [pc, #20]	; (8000ac0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8000aaa:	4806      	ldr	r0, [pc, #24]	; (8000ac4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x3c>)
 8000aac:	2167      	movs	r1, #103	; 0x67
 8000aae:	f01f fecf 	bl	8020850 <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 8000ab2:	2000      	movs	r0, #0
 8000ab4:	e7f4      	b.n	8000aa0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8000ab6:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000ab8:	e7f2      	b.n	8000aa0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 8000aba:	bf00      	nop
 8000abc:	08021e4c 	.word	0x08021e4c
 8000ac0:	08021e67 	.word	0x08021e67
 8000ac4:	08021eb1 	.word	0x08021eb1

08000ac8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 8000ac8:	b508      	push	{r3, lr}
    switch (format)
 8000aca:	290a      	cmp	r1, #10
 8000acc:	d809      	bhi.n	8000ae2 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1a>
 8000ace:	e8df f001 	tbb	[pc, r1]
 8000ad2:	0610      	.short	0x0610
 8000ad4:	0808080e 	.word	0x0808080e
 8000ad8:	06060608 	.word	0x06060608
 8000adc:	06          	.byte	0x06
 8000add:	00          	.byte	0x00
 8000ade:	2001      	movs	r0, #1
}
 8000ae0:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 8000ae2:	4b05      	ldr	r3, [pc, #20]	; (8000af8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x30>)
 8000ae4:	4a05      	ldr	r2, [pc, #20]	; (8000afc <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8000ae6:	4806      	ldr	r0, [pc, #24]	; (8000b00 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8000ae8:	2188      	movs	r1, #136	; 0x88
 8000aea:	f01f feb1 	bl	8020850 <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8000aee:	2000      	movs	r0, #0
 8000af0:	e7f6      	b.n	8000ae0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 8000af2:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000af4:	e7f4      	b.n	8000ae0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 8000af6:	bf00      	nop
 8000af8:	08021e4c 	.word	0x08021e4c
 8000afc:	08021efd 	.word	0x08021efd
 8000b00:	08021eb1 	.word	0x08021eb1

08000b04 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
 * BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 * BLIT_OP_COPY_A4
 * BLIT_OP_COPY_A8
 */
void STM32DMA::setupDataCopy(const BlitOp& blitOp)
{
 8000b04:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000b08:	7f4f      	ldrb	r7, [r1, #29]
{
 8000b0a:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000b0c:	4639      	mov	r1, r7
{
 8000b0e:	4681      	mov	r9, r0
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000b10:	f7ff ffba 	bl	8000a88 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b14:	f894 801e 	ldrb.w	r8, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000b18:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b1a:	4641      	mov	r1, r8
 8000b1c:	4648      	mov	r0, r9
 8000b1e:	f7ff ffb3 	bl	8000a88 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b22:	4641      	mov	r1, r8
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b24:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b26:	4648      	mov	r0, r9
 8000b28:	f7ff ffce 	bl	8000ac8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000b2c:	8aa1      	ldrh	r1, [r4, #20]
 8000b2e:	8b62      	ldrh	r2, [r4, #26]
 8000b30:	4b42      	ldr	r3, [pc, #264]	; (8000c3c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000b32:	1a52      	subs	r2, r2, r1
 8000b34:	641a      	str	r2, [r3, #64]	; 0x40

    /* DMA2D BGOR register configuration */
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000b36:	619a      	str	r2, [r3, #24]

    /* DMA2D FGOR register configuration */
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8000b38:	8b22      	ldrh	r2, [r4, #24]
 8000b3a:	1a52      	subs	r2, r2, r1
 8000b3c:	611a      	str	r2, [r3, #16]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000b3e:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000b40:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000b42:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000b46:	645a      	str	r2, [r3, #68]	; 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000b48:	6920      	ldr	r0, [r4, #16]

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000b4a:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000b4c:	63d8      	str	r0, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000b4e:	60da      	str	r2, [r3, #12]

    switch (blitOp.operation)
 8000b50:	6821      	ldr	r1, [r4, #0]
    {
    case BLIT_OP_COPY_A4:
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b52:	f894 c01c 	ldrb.w	ip, [r4, #28]
    switch (blitOp.operation)
 8000b56:	2980      	cmp	r1, #128	; 0x80
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b58:	ea4f 620c 	mov.w	r2, ip, lsl #24
    switch (blitOp.operation)
 8000b5c:	d026      	beq.n	8000bac <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa8>
 8000b5e:	d810      	bhi.n	8000b82 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x7e>
 8000b60:	2920      	cmp	r1, #32
 8000b62:	ea45 0402 	orr.w	r4, r5, r2
 8000b66:	d061      	beq.n	8000c2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 8000b68:	2940      	cmp	r1, #64	; 0x40
 8000b6a:	d05f      	beq.n	8000c2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 8000b6c:	2904      	cmp	r1, #4
 8000b6e:	d05d      	beq.n	8000c2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
        break;
    default: /* BLIT_OP_COPY */
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b70:	4b32      	ldr	r3, [pc, #200]	; (8000c3c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000b72:	432a      	orrs	r2, r5
 8000b74:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000

        /* Perform pixel-format-conversion (PFC) If Bitmap format is not same format as framebuffer format */
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000b78:	4547      	cmp	r7, r8
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b7a:	61da      	str	r2, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000b7c:	d05a      	beq.n	8000c34 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x130>
        {
            /* Start DMA2D : PFC Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8000b7e:	4a30      	ldr	r2, [pc, #192]	; (8000c40 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8000b80:	e040      	b.n	8000c04 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
    switch (blitOp.operation)
 8000b82:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
 8000b86:	d007      	beq.n	8000b98 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x94>
 8000b88:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 8000b8c:	d1f0      	bne.n	8000b70 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x6c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b8e:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000b92:	f042 0209 	orr.w	r2, r2, #9
 8000b96:	e003      	b.n	8000ba0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b98:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000b9c:	f042 020a 	orr.w	r2, r2, #10
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000ba0:	61da      	str	r2, [r3, #28]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
 8000ba2:	68e2      	ldr	r2, [r4, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000ba4:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000ba6:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000ba8:	6158      	str	r0, [r3, #20]
 8000baa:	e02a      	b.n	8000c02 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfe>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8000bac:	68a4      	ldr	r4, [r4, #8]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000bae:	432a      	orrs	r2, r5
 8000bb0:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8000bb4:	1d21      	adds	r1, r4, #4
 8000bb6:	62d9      	str	r1, [r3, #44]	; 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000bb8:	61da      	str	r2, [r3, #28]
            switch ((Bitmap::ClutFormat)palette->format)
 8000bba:	7822      	ldrb	r2, [r4, #0]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000bbc:	625e      	str	r6, [r3, #36]	; 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000bbe:	6158      	str	r0, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 8000bc0:	b142      	cbz	r2, 8000bd4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd0>
 8000bc2:	2a01      	cmp	r2, #1
 8000bc4:	d021      	beq.n	8000c0a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x106>
                assert(0 && "Unsupported format");
 8000bc6:	4b1f      	ldr	r3, [pc, #124]	; (8000c44 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>)
 8000bc8:	4a1f      	ldr	r2, [pc, #124]	; (8000c48 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
 8000bca:	4820      	ldr	r0, [pc, #128]	; (8000c4c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>)
 8000bcc:	f44f 7189 	mov.w	r1, #274	; 0x112
 8000bd0:	f01f fe3e 	bl	8020850 <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000bd4:	69da      	ldr	r2, [r3, #28]
 8000bd6:	8861      	ldrh	r1, [r4, #2]
 8000bd8:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 8000bdc:	3901      	subs	r1, #1
 8000bde:	f022 0210 	bic.w	r2, r2, #16
 8000be2:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8000be6:	61da      	str	r2, [r3, #28]
            bool blend = true;
 8000be8:	2001      	movs	r0, #1
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 8000bea:	4b14      	ldr	r3, [pc, #80]	; (8000c3c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000bec:	69da      	ldr	r2, [r3, #28]
 8000bee:	f042 0220 	orr.w	r2, r2, #32
 8000bf2:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8000bf4:	69da      	ldr	r2, [r3, #28]
 8000bf6:	0692      	lsls	r2, r2, #26
 8000bf8:	d4fc      	bmi.n	8000bf4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf0>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 8000bfa:	2210      	movs	r2, #16
 8000bfc:	609a      	str	r2, [r3, #8]
            if(blend)
 8000bfe:	2800      	cmp	r0, #0
 8000c00:	d0bd      	beq.n	8000b7e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x7a>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8000c02:	4a13      	ldr	r2, [pc, #76]	; (8000c50 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>)
        }
        else
        {
            /* Start DMA2D : M2M Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000c04:	601a      	str	r2, [r3, #0]
        }
        break;
    }
}
 8000c06:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000c0a:	8862      	ldrh	r2, [r4, #2]
 8000c0c:	69d9      	ldr	r1, [r3, #28]
 8000c0e:	1e54      	subs	r4, r2, #1
 8000c10:	f421 427f 	bic.w	r2, r1, #65280	; 0xff00
 8000c14:	f022 0210 	bic.w	r2, r2, #16
 8000c18:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
                if(blitOp.alpha == 255)
 8000c1c:	f1bc 00ff 	subs.w	r0, ip, #255	; 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000c20:	f042 0210 	orr.w	r2, r2, #16
                if(blitOp.alpha == 255)
 8000c24:	bf18      	it	ne
 8000c26:	2001      	movne	r0, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000c28:	61da      	str	r2, [r3, #28]
                break;
 8000c2a:	e7de      	b.n	8000bea <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe6>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000c2c:	f444 3400 	orr.w	r4, r4, #131072	; 0x20000
 8000c30:	61dc      	str	r4, [r3, #28]
 8000c32:	e7b8      	b.n	8000ba6 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa2>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000c34:	f240 2201 	movw	r2, #513	; 0x201
 8000c38:	e7e4      	b.n	8000c04 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
 8000c3a:	bf00      	nop
 8000c3c:	4002b000 	.word	0x4002b000
 8000c40:	00010201 	.word	0x00010201
 8000c44:	08021f48 	.word	0x08021f48
 8000c48:	08021f62 	.word	0x08021f62
 8000c4c:	08021eb1 	.word	0x08021eb1
 8000c50:	00020201 	.word	0x00020201

08000c54 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 8000c54:	b570      	push	{r4, r5, r6, lr}
 8000c56:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000c58:	7f89      	ldrb	r1, [r1, #30]
 8000c5a:	f7ff ff35 	bl	8000ac8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000c5e:	8aa6      	ldrh	r6, [r4, #20]
 8000c60:	8ae1      	ldrh	r1, [r4, #22]

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c62:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000c64:	4b15      	ldr	r3, [pc, #84]	; (8000cbc <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>)
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c66:	6925      	ldr	r5, [r4, #16]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000c68:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000c6a:	ea41 4106 	orr.w	r1, r1, r6, lsl #16
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c6e:	1b92      	subs	r2, r2, r6
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000c70:	6459      	str	r1, [r3, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c72:	63dd      	str	r5, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c74:	641a      	str	r2, [r3, #64]	; 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 8000c76:	6826      	ldr	r6, [r4, #0]
 8000c78:	68e1      	ldr	r1, [r4, #12]
 8000c7a:	2e08      	cmp	r6, #8
 8000c7c:	d10d      	bne.n	8000c9a <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration */
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c7e:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c80:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000c82:	6258      	str	r0, [r3, #36]	; 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000c84:	7f20      	ldrb	r0, [r4, #28]
 8000c86:	4a0e      	ldr	r2, [pc, #56]	; (8000cc0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6c>)
 8000c88:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8000c8c:	61da      	str	r2, [r3, #28]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
 8000c8e:	4a0d      	ldr	r2, [pc, #52]	; (8000cc4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>)
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000c90:	6219      	str	r1, [r3, #32]
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c92:	615d      	str	r5, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c94:	60dd      	str	r5, [r3, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8000c96:	601a      	str	r2, [r3, #0]
    }
}
 8000c98:	bd70      	pop	{r4, r5, r6, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 8000c9a:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8000c9c:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 8000c9e:	611a      	str	r2, [r3, #16]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 8000ca0:	0948      	lsrs	r0, r1, #5
 8000ca2:	0a0a      	lsrs	r2, r1, #8
 8000ca4:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8000ca8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8000cac:	4302      	orrs	r2, r0
 8000cae:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8000cb2:	430a      	orrs	r2, r1
 8000cb4:	639a      	str	r2, [r3, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8000cb6:	4a04      	ldr	r2, [pc, #16]	; (8000cc8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x74>)
 8000cb8:	e7ed      	b.n	8000c96 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 8000cba:	bf00      	nop
 8000cbc:	4002b000 	.word	0x4002b000
 8000cc0:	00010009 	.word	0x00010009
 8000cc4:	00020201 	.word	0x00020201
 8000cc8:	00030201 	.word	0x00030201

08000ccc <_ZN8touchgfx5paint6rgb5658tearDownEv>:
    * @brief Waits until previous DMA drawing operation has finished
    */
    void tearDown()
    {
        /* Wait for DMA2D to finish last run */
        while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000ccc:	4b03      	ldr	r3, [pc, #12]	; (8000cdc <_ZN8touchgfx5paint6rgb5658tearDownEv+0x10>)
 8000cce:	681a      	ldr	r2, [r3, #0]
 8000cd0:	07d2      	lsls	r2, r2, #31
 8000cd2:	d4fc      	bmi.n	8000cce <_ZN8touchgfx5paint6rgb5658tearDownEv+0x2>

        /* Clear transfer flags */
        WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC|DMA2D_FLAG_CE|DMA2D_FLAG_TE);
 8000cd4:	2223      	movs	r2, #35	; 0x23
 8000cd6:	609a      	str	r2, [r3, #8]
    }
 8000cd8:	4770      	bx	lr
 8000cda:	bf00      	nop
 8000cdc:	4002b000 	.word	0x4002b000

08000ce0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
    *
    * @brief Renders Canvas Widget chunks using DMA.
    * This functions will not generate an interrupt, and will not affect the DMA queue.
    */
    void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
    {
 8000ce0:	b530      	push	{r4, r5, lr}
        /* Wait for DMA2D to finish last run */
        while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000ce2:	4c0f      	ldr	r4, [pc, #60]	; (8000d20 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x40>)
 8000ce4:	6825      	ldr	r5, [r4, #0]
 8000ce6:	07ed      	lsls	r5, r5, #31
 8000ce8:	d4fc      	bmi.n	8000ce4 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4>

        /* Clear transfer flags */
        WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC|DMA2D_FLAG_CE|DMA2D_FLAG_TE);
 8000cea:	2523      	movs	r5, #35	; 0x23

        /* DMA2D OPFCCR register configuration */
        WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

        /* Configure DMA2D data size */
        WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000cec:	0409      	lsls	r1, r1, #16
        WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC|DMA2D_FLAG_CE|DMA2D_FLAG_TE);
 8000cee:	60a5      	str	r5, [r4, #8]
        WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000cf0:	f041 0101 	orr.w	r1, r1, #1
        WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000cf4:	2502      	movs	r5, #2

        /* Configure DMA2D destination address */
        WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

        if (alpha < 0xFF)
 8000cf6:	2bff      	cmp	r3, #255	; 0xff
        WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000cf8:	6365      	str	r5, [r4, #52]	; 0x34
        WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000cfa:	6461      	str	r1, [r4, #68]	; 0x44
        WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 8000cfc:	63e0      	str	r0, [r4, #60]	; 0x3c
        if (alpha < 0xFF)
 8000cfe:	d00a      	beq.n	8000d16 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x36>
        {
            /* Write DMA2D BGPFCCR register */
            WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));

            /* Write DMA2D FGPFCCR register */
            WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000d00:	4908      	ldr	r1, [pc, #32]	; (8000d24 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x44>)
            WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000d02:	6265      	str	r5, [r4, #36]	; 0x24
            WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000d04:	ea41 6303 	orr.w	r3, r1, r3, lsl #24
 8000d08:	61e3      	str	r3, [r4, #28]

            /* Configure DMA2D source address */
            WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);

            /* Enable the Peripheral and Enable the transfer complete interrupt */
            WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
 8000d0a:	4b07      	ldr	r3, [pc, #28]	; (8000d28 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x48>)
            WRITE_REG(DMA2D->FGCOLR, color);
 8000d0c:	6222      	str	r2, [r4, #32]
            WRITE_REG(DMA2D->BGMAR, (uint32_t)ptr);
 8000d0e:	6160      	str	r0, [r4, #20]
            WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);
 8000d10:	60e0      	str	r0, [r4, #12]

            /* Set color */
            WRITE_REG(DMA2D->OCOLR, color565);

            /* Enable the Peripheral and Enable the transfer complete interrupt */
            WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8000d12:	6023      	str	r3, [r4, #0]
        }
    }
 8000d14:	bd30      	pop	{r4, r5, pc}
            WRITE_REG(DMA2D->FGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8000d16:	61e5      	str	r5, [r4, #28]
            WRITE_REG(DMA2D->OCOLR, color565);
 8000d18:	9b03      	ldr	r3, [sp, #12]
 8000d1a:	63a3      	str	r3, [r4, #56]	; 0x38
            WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8000d1c:	4b03      	ldr	r3, [pc, #12]	; (8000d2c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4c>)
 8000d1e:	e7f8      	b.n	8000d12 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x32>
 8000d20:	4002b000 	.word	0x4002b000
 8000d24:	00010009 	.word	0x00010009
 8000d28:	00020001 	.word	0x00020001
 8000d2c:	00030001 	.word	0x00030001

08000d30 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8000d30:	2001      	movs	r0, #1
 8000d32:	4770      	bx	lr

08000d34 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8000d34:	2038      	movs	r0, #56	; 0x38
 8000d36:	4770      	bx	lr

08000d38 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8000d38:	2338      	movs	r3, #56	; 0x38
 8000d3a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000d3e:	3008      	adds	r0, #8
 8000d40:	4770      	bx	lr

08000d42 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8000d42:	2338      	movs	r3, #56	; 0x38
 8000d44:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000d48:	3008      	adds	r0, #8
 8000d4a:	4770      	bx	lr

08000d4c <_ZNK8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000d4c:	2001      	movs	r0, #1
 8000d4e:	4770      	bx	lr

08000d50 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000d50:	f242 703c 	movw	r0, #10044	; 0x273c
 8000d54:	4770      	bx	lr

08000d56 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d56:	f242 733c 	movw	r3, #10044	; 0x273c
 8000d5a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000d5e:	3008      	adds	r0, #8
 8000d60:	4770      	bx	lr

08000d62 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d62:	f242 733c 	movw	r3, #10044	; 0x273c
 8000d66:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000d6a:	3008      	adds	r0, #8
 8000d6c:	4770      	bx	lr

08000d6e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000d6e:	2001      	movs	r0, #1
 8000d70:	4770      	bx	lr

08000d72 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000d72:	2010      	movs	r0, #16
 8000d74:	4770      	bx	lr

08000d76 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d76:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000d7a:	3008      	adds	r0, #8
 8000d7c:	4770      	bx	lr

08000d7e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d7e:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000d82:	3008      	adds	r0, #8
 8000d84:	4770      	bx	lr

08000d86 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoScreen1ScreenNoTransition();
 8000d86:	4608      	mov	r0, r1
 8000d88:	f001 bd66 	b.w	8002858 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>

08000d8c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8000d8c:	b510      	push	{r4, lr}
 8000d8e:	4b03      	ldr	r3, [pc, #12]	; (8000d9c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 8000d90:	6003      	str	r3, [r0, #0]
 8000d92:	4604      	mov	r4, r0
 8000d94:	f009 fd3f 	bl	800a816 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000d98:	4620      	mov	r0, r4
 8000d9a:	bd10      	pop	{r4, pc}
 8000d9c:	08022060 	.word	0x08022060

08000da0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 8000da0:	b510      	push	{r4, lr}
 8000da2:	4604      	mov	r4, r0
 8000da4:	f7ff fff2 	bl	8000d8c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8000da8:	4620      	mov	r0, r4
 8000daa:	2140      	movs	r1, #64	; 0x40
 8000dac:	f01f fc9c 	bl	80206e8 <_ZdlPvj>
 8000db0:	4620      	mov	r0, r4
 8000db2:	bd10      	pop	{r4, pc}

08000db4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000db4:	b510      	push	{r4, lr}
 8000db6:	4b03      	ldr	r3, [pc, #12]	; (8000dc4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000db8:	6003      	str	r3, [r0, #0]
 8000dba:	4604      	mov	r4, r0
 8000dbc:	f009 fd2b 	bl	800a816 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000dc0:	4620      	mov	r0, r4
 8000dc2:	bd10      	pop	{r4, pc}
 8000dc4:	0802202c 	.word	0x0802202c

08000dc8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000dc8:	b510      	push	{r4, lr}
 8000dca:	4604      	mov	r4, r0
 8000dcc:	f7ff fff2 	bl	8000db4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000dd0:	4620      	mov	r0, r4
 8000dd2:	f242 7144 	movw	r1, #10052	; 0x2744
 8000dd6:	f01f fc87 	bl	80206e8 <_ZdlPvj>
 8000dda:	4620      	mov	r0, r4
 8000ddc:	bd10      	pop	{r4, pc}
	...

08000de0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000de0:	b510      	push	{r4, lr}
 8000de2:	4b03      	ldr	r3, [pc, #12]	; (8000df0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000de4:	6003      	str	r3, [r0, #0]
 8000de6:	4604      	mov	r4, r0
 8000de8:	f009 fd15 	bl	800a816 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000dec:	4620      	mov	r0, r4
 8000dee:	bd10      	pop	{r4, pc}
 8000df0:	08021ff8 	.word	0x08021ff8

08000df4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000df4:	b510      	push	{r4, lr}
 8000df6:	4604      	mov	r4, r0
 8000df8:	f7ff fff2 	bl	8000de0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000dfc:	4620      	mov	r0, r4
 8000dfe:	2118      	movs	r1, #24
 8000e00:	f01f fc72 	bl	80206e8 <_ZdlPvj>
 8000e04:	4620      	mov	r0, r4
 8000e06:	bd10      	pop	{r4, pc}

08000e08 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8000e08:	b510      	push	{r4, lr}
 8000e0a:	4b09      	ldr	r3, [pc, #36]	; (8000e30 <_ZN12FrontendHeapD1Ev+0x28>)
 8000e0c:	6003      	str	r3, [r0, #0]
 8000e0e:	4604      	mov	r4, r0
 8000e10:	f500 501d 	add.w	r0, r0, #10048	; 0x2740
 8000e14:	3030      	adds	r0, #48	; 0x30
 8000e16:	f7ff ffb9 	bl	8000d8c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8000e1a:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8000e1e:	f7ff ffc9 	bl	8000db4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000e22:	f104 0014 	add.w	r0, r4, #20
 8000e26:	f7ff ffdb 	bl	8000de0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000e2a:	4620      	mov	r0, r4
 8000e2c:	bd10      	pop	{r4, pc}
 8000e2e:	bf00      	nop
 8000e30:	08022094 	.word	0x08022094

08000e34 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8000e34:	b508      	push	{r3, lr}
 8000e36:	4802      	ldr	r0, [pc, #8]	; (8000e40 <__tcf_0+0xc>)
 8000e38:	f7ff ffe6 	bl	8000e08 <_ZN12FrontendHeapD1Ev>
 8000e3c:	bd08      	pop	{r3, pc}
 8000e3e:	bf00      	nop
 8000e40:	200001a4 	.word	0x200001a4

08000e44 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8000e44:	b510      	push	{r4, lr}
 8000e46:	4604      	mov	r4, r0
 8000e48:	f7ff ffde 	bl	8000e08 <_ZN12FrontendHeapD1Ev>
 8000e4c:	4620      	mov	r0, r4
 8000e4e:	f642 110c 	movw	r1, #10508	; 0x290c
 8000e52:	f01f fc49 	bl	80206e8 <_ZdlPvj>
 8000e56:	4620      	mov	r0, r4
 8000e58:	bd10      	pop	{r4, pc}
	...

08000e5c <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 8000e5c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8000e60:	f001 f9e2 	bl	8002228 <_ZN14BitmapDatabase11getInstanceEv>
 8000e64:	4605      	mov	r5, r0
 8000e66:	f001 f9e3 	bl	8002230 <_ZN14BitmapDatabase15getInstanceSizeEv>
 8000e6a:	2400      	movs	r4, #0
 8000e6c:	4601      	mov	r1, r0
 8000e6e:	4623      	mov	r3, r4
 8000e70:	4628      	mov	r0, r5
 8000e72:	4622      	mov	r2, r4
 8000e74:	9400      	str	r4, [sp, #0]
 8000e76:	f013 fb37 	bl	80144e8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8000e7a:	4b26      	ldr	r3, [pc, #152]	; (8000f14 <touchgfx_init+0xb8>)
 8000e7c:	4a26      	ldr	r2, [pc, #152]	; (8000f18 <touchgfx_init+0xbc>)
        static FrontendHeap instance;
 8000e7e:	4d27      	ldr	r5, [pc, #156]	; (8000f1c <touchgfx_init+0xc0>)
 8000e80:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8000e82:	4620      	mov	r0, r4
 8000e84:	f003 ff70 	bl	8004d68 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8000e88:	4825      	ldr	r0, [pc, #148]	; (8000f20 <touchgfx_init+0xc4>)
 8000e8a:	f013 fa95 	bl	80143b8 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8000e8e:	782b      	ldrb	r3, [r5, #0]
 8000e90:	f3bf 8f5b 	dmb	ish
 8000e94:	07db      	lsls	r3, r3, #31
 8000e96:	d436      	bmi.n	8000f06 <touchgfx_init+0xaa>
 8000e98:	4628      	mov	r0, r5
 8000e9a:	f01f fc27 	bl	80206ec <__cxa_guard_acquire>
 8000e9e:	b390      	cbz	r0, 8000f06 <touchgfx_init+0xaa>
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 8000ea0:	4c20      	ldr	r4, [pc, #128]	; (8000f24 <touchgfx_init+0xc8>)
 8000ea2:	4f21      	ldr	r7, [pc, #132]	; (8000f28 <touchgfx_init+0xcc>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8000ea4:	4b21      	ldr	r3, [pc, #132]	; (8000f2c <touchgfx_init+0xd0>)
 8000ea6:	6023      	str	r3, [r4, #0]
 8000ea8:	f107 0644 	add.w	r6, r7, #68	; 0x44
 8000eac:	f104 0014 	add.w	r0, r4, #20
 8000eb0:	f104 082c 	add.w	r8, r4, #44	; 0x2c
 8000eb4:	6060      	str	r0, [r4, #4]
 8000eb6:	f8c4 8008 	str.w	r8, [r4, #8]
 8000eba:	60e7      	str	r7, [r4, #12]
 8000ebc:	6126      	str	r6, [r4, #16]
 8000ebe:	f009 fcab 	bl	800a818 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000ec2:	4b1b      	ldr	r3, [pc, #108]	; (8000f30 <touchgfx_init+0xd4>)
 8000ec4:	6163      	str	r3, [r4, #20]
 8000ec6:	4640      	mov	r0, r8
 8000ec8:	f009 fca6 	bl	800a818 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000ecc:	4b19      	ldr	r3, [pc, #100]	; (8000f34 <touchgfx_init+0xd8>)
 8000ece:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000ed0:	4638      	mov	r0, r7
 8000ed2:	f009 fca1 	bl	800a818 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000ed6:	f504 5300 	add.w	r3, r4, #8192	; 0x2000
 8000eda:	4a17      	ldr	r2, [pc, #92]	; (8000f38 <touchgfx_init+0xdc>)
 8000edc:	f8c3 2770 	str.w	r2, [r3, #1904]	; 0x770
 8000ee0:	f503 60f6 	add.w	r0, r3, #1968	; 0x7b0
 8000ee4:	f003 ffbc 	bl	8004e60 <_ZN5ModelC1Ev>
 8000ee8:	4622      	mov	r2, r4
 8000eea:	f107 0140 	add.w	r1, r7, #64	; 0x40
 8000eee:	4630      	mov	r0, r6
 8000ef0:	f003 ffac 	bl	8004e4c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8000ef4:	4630      	mov	r0, r6
 8000ef6:	f001 fcaf 	bl	8002858 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
        static FrontendHeap instance;
 8000efa:	4810      	ldr	r0, [pc, #64]	; (8000f3c <touchgfx_init+0xe0>)
 8000efc:	f01f fcc6 	bl	802088c <atexit>
 8000f00:	4628      	mov	r0, r5
 8000f02:	f01f fbff 	bl	8020704 <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8000f06:	480e      	ldr	r0, [pc, #56]	; (8000f40 <touchgfx_init+0xe4>)
}
 8000f08:	b002      	add	sp, #8
 8000f0a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8000f0e:	f7ff bc3e 	b.w	800078e <_ZN11TouchGFXHAL10initializeEv>
 8000f12:	bf00      	nop
 8000f14:	2001561c 	.word	0x2001561c
 8000f18:	200038d0 	.word	0x200038d0
 8000f1c:	200001a0 	.word	0x200001a0
 8000f20:	20000008 	.word	0x20000008
 8000f24:	200001a4 	.word	0x200001a4
 8000f28:	20002914 	.word	0x20002914
 8000f2c:	08022094 	.word	0x08022094
 8000f30:	08021ff8 	.word	0x08021ff8
 8000f34:	0802202c 	.word	0x0802202c
 8000f38:	08022060 	.word	0x08022060
 8000f3c:	08000e35 	.word	0x08000e35
 8000f40:	20003854 	.word	0x20003854

08000f44 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8000f44:	4801      	ldr	r0, [pc, #4]	; (8000f4c <touchgfx_taskEntry+0x8>)
 8000f46:	f7ff bc24 	b.w	8000792 <_ZN11TouchGFXHAL9taskEntryEv>
 8000f4a:	bf00      	nop
 8000f4c:	20003854 	.word	0x20003854

08000f50 <_GLOBAL__sub_I_touchgfx_init>:
}
 8000f50:	b570      	push	{r4, r5, r6, lr}
{
public:

    STM32TouchController() {}
 8000f52:	4c23      	ldr	r4, [pc, #140]	; (8000fe0 <_GLOBAL__sub_I_touchgfx_init+0x90>)
static STM32DMA dma;
 8000f54:	4e23      	ldr	r6, [pc, #140]	; (8000fe4 <_GLOBAL__sub_I_touchgfx_init+0x94>)
 8000f56:	4b24      	ldr	r3, [pc, #144]	; (8000fe8 <_GLOBAL__sub_I_touchgfx_init+0x98>)
static LCD16bpp display;
 8000f58:	4d24      	ldr	r5, [pc, #144]	; (8000fec <_GLOBAL__sub_I_touchgfx_init+0x9c>)
 8000f5a:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8000f5c:	4630      	mov	r0, r6
 8000f5e:	f7ff fd79 	bl	8000a54 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 8000f62:	4628      	mov	r0, r5
 8000f64:	f016 fbca 	bl	80176fc <_ZN8touchgfx8LCD16bppC1Ev>
          lastRenderMethod(HARDWARE)
 8000f68:	4b21      	ldr	r3, [pc, #132]	; (8000ff0 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
        instance = this;
 8000f6a:	4822      	ldr	r0, [pc, #136]	; (8000ff4 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
          lastRenderMethod(HARDWARE)
 8000f6c:	60dc      	str	r4, [r3, #12]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f6e:	4c22      	ldr	r4, [pc, #136]	; (8000ff8 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
        instance = this;
 8000f70:	6003      	str	r3, [r0, #0]
          lastRenderMethod(HARDWARE)
 8000f72:	2200      	movs	r2, #0
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f74:	20f0      	movs	r0, #240	; 0xf0
          lastRenderMethod(HARDWARE)
 8000f76:	f44f 7180 	mov.w	r1, #256	; 0x100
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f7a:	8020      	strh	r0, [r4, #0]
          lastRenderMethod(HARDWARE)
 8000f7c:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f80:	4c1e      	ldr	r4, [pc, #120]	; (8000ffc <_GLOBAL__sub_I_touchgfx_init+0xac>)
          lastRenderMethod(HARDWARE)
 8000f82:	491f      	ldr	r1, [pc, #124]	; (8001000 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f84:	8020      	strh	r0, [r4, #0]
          lastRenderMethod(HARDWARE)
 8000f86:	e9c3 1219 	strd	r1, r2, [r3, #100]	; 0x64
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000f8a:	4c1e      	ldr	r4, [pc, #120]	; (8001004 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8000f8c:	861a      	strh	r2, [r3, #48]	; 0x30
          lastRenderMethod(HARDWARE)
 8000f8e:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000f92:	f44f 70a0 	mov.w	r0, #320	; 0x140
          lastRenderMethod(HARDWARE)
 8000f96:	6759      	str	r1, [r3, #116]	; 0x74
 8000f98:	2101      	movs	r1, #1
 8000f9a:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8000f9e:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8000fa2:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8000fa6:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
 8000faa:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
 8000fae:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 8000fb2:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
 8000fb6:	e9c3 2216 	strd	r2, r2, [r3, #88]	; 0x58
 8000fba:	661a      	str	r2, [r3, #96]	; 0x60
 8000fbc:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
 8000fc0:	671a      	str	r2, [r3, #112]	; 0x70
 8000fc2:	e9c3 6501 	strd	r6, r5, [r3, #4]
 8000fc6:	f883 1078 	strb.w	r1, [r3, #120]	; 0x78
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000fca:	8020      	strh	r0, [r4, #0]
 8000fcc:	4c0e      	ldr	r4, [pc, #56]	; (8001008 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8000fce:	f883 1034 	strb.w	r1, [r3, #52]	; 0x34
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000fd2:	8020      	strh	r0, [r4, #0]
        DISPLAY_ROTATION = rotate0;
 8000fd4:	480d      	ldr	r0, [pc, #52]	; (800100c <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 8000fd6:	7002      	strb	r2, [r0, #0]
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 8000fd8:	4a0d      	ldr	r2, [pc, #52]	; (8001010 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 8000fda:	601a      	str	r2, [r3, #0]
}
 8000fdc:	bd70      	pop	{r4, r5, r6, pc}
 8000fde:	bf00      	nop
 8000fe0:	20002ab0 	.word	0x20002ab0
 8000fe4:	20002ab4 	.word	0x20002ab4
 8000fe8:	08021ae8 	.word	0x08021ae8
 8000fec:	200038d4 	.word	0x200038d4
 8000ff0:	20003854 	.word	0x20003854
 8000ff4:	200155b8 	.word	0x200155b8
 8000ff8:	200155ac 	.word	0x200155ac
 8000ffc:	200155b2 	.word	0x200155b2
 8001000:	01000001 	.word	0x01000001
 8001004:	200155ae 	.word	0x200155ae
 8001008:	200155b4 	.word	0x200155b4
 800100c:	200155b0 	.word	0x200155b0
 8001010:	08021c74 	.word	0x08021c74

08001014 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 8001014:	4801      	ldr	r0, [pc, #4]	; (800101c <_GLOBAL__sub_D_touchgfx_init+0x8>)
 8001016:	f7ff bcf9 	b.w	8000a0c <_ZN8STM32DMAD1Ev>
 800101a:	bf00      	nop
 800101c:	20002ab4 	.word	0x20002ab4

08001020 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001020:	4b03      	ldr	r3, [pc, #12]	; (8001030 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
 8001022:	2290      	movs	r2, #144	; 0x90
 8001024:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
 8001028:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 800102c:	4770      	bx	lr
 800102e:	bf00      	nop
 8001030:	e000e100 	.word	0xe000e100

08001034 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8001034:	4a09      	ldr	r2, [pc, #36]	; (800105c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 8001036:	490a      	ldr	r1, [pc, #40]	; (8001060 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 8001038:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 800103a:	480a      	ldr	r0, [pc, #40]	; (8001064 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 800103c:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8001040:	3b01      	subs	r3, #1
 8001042:	b29b      	uxth	r3, r3
 8001044:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8001046:	6911      	ldr	r1, [r2, #16]
 8001048:	f3c1 010a 	ubfx	r1, r1, #0, #11
 800104c:	3901      	subs	r1, #1
 800104e:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 8001050:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 8001052:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8001054:	f043 0301 	orr.w	r3, r3, #1
 8001058:	6353      	str	r3, [r2, #52]	; 0x34
}
 800105a:	4770      	bx	lr
 800105c:	40016800 	.word	0x40016800
 8001060:	20003950 	.word	0x20003950
 8001064:	2000394e 	.word	0x2000394e

08001068 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 8001068:	4b01      	ldr	r3, [pc, #4]	; (8001070 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 800106a:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
}
 800106e:	4770      	bx	lr
 8001070:	40016800 	.word	0x40016800

08001074 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001074:	4b02      	ldr	r3, [pc, #8]	; (8001080 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001076:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001078:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 800107c:	625a      	str	r2, [r3, #36]	; 0x24
}
 800107e:	4770      	bx	lr
 8001080:	40016800 	.word	0x40016800

08001084 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8001084:	b570      	push	{r4, r5, r6, lr}
 8001086:	4604      	mov	r4, r0
    HAL::initialize();
 8001088:	f009 ffe5 	bl	800b056 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 800108c:	6823      	ldr	r3, [r4, #0]
 800108e:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 8001090:	f010 f80e 	bl	80110b0 <_ZN8touchgfx11Application11getInstanceEv>
 8001094:	4601      	mov	r1, r0
 8001096:	4620      	mov	r0, r4
 8001098:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 800109a:	6823      	ldr	r3, [r4, #0]
 800109c:	4a05      	ldr	r2, [pc, #20]	; (80010b4 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 800109e:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 80010a2:	4620      	mov	r0, r4
 80010a4:	46ac      	mov	ip, r5
 80010a6:	2300      	movs	r3, #0
}
 80010a8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 80010ac:	f5a2 3116 	sub.w	r1, r2, #153600	; 0x25800
 80010b0:	4760      	bx	ip
 80010b2:	bf00      	nop
 80010b4:	d0025800 	.word	0xd0025800

080010b8 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 80010b8:	f009 bfb4 	b.w	800b024 <_ZN8touchgfx3HAL10beginFrameEv>

080010bc <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    if (frameBufferUpdatedThisFrame)
 80010bc:	f890 304b 	ldrb.w	r3, [r0, #75]	; 0x4b
 80010c0:	b113      	cbz	r3, 80010c8 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0xc>
        refreshRequested = true;
 80010c2:	4b02      	ldr	r3, [pc, #8]	; (80010cc <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x10>)
 80010c4:	2201      	movs	r2, #1
 80010c6:	701a      	strb	r2, [r3, #0]
    HAL::endFrame();
 80010c8:	f009 bfb8 	b.w	800b03c <_ZN8touchgfx3HAL8endFrameEv>
 80010cc:	2000394c 	.word	0x2000394c

080010d0 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 80010d0:	f009 bf72 	b.w	800afb8 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

080010d4 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 80010d4:	f00a b8cb 	b.w	800b26e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

080010d8 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80010d8:	4b03      	ldr	r3, [pc, #12]	; (80010e8 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
 80010da:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80010de:	609a      	str	r2, [r3, #8]
 80010e0:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 80010e4:	609a      	str	r2, [r3, #8]
}
 80010e6:	4770      	bx	lr
 80010e8:	e000e100 	.word	0xe000e100

080010ec <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80010ec:	4b08      	ldr	r3, [pc, #32]	; (8001110 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
 80010ee:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80010f2:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80010f6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80010fa:	f3bf 8f6f 	isb	sy
 80010fe:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8001102:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8001106:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800110a:	f3bf 8f6f 	isb	sy
}
 800110e:	4770      	bx	lr
 8001110:	e000e100 	.word	0xe000e100

08001114 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 8001114:	b510      	push	{r4, lr}
        return instance;
 8001116:	4c14      	ldr	r4, [pc, #80]	; (8001168 <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 8001118:	6823      	ldr	r3, [r4, #0]
 800111a:	b323      	cbz	r3, 8001166 <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 800111c:	4b13      	ldr	r3, [pc, #76]	; (800116c <HAL_LTDC_LineEventCallback+0x58>)
 800111e:	4a14      	ldr	r2, [pc, #80]	; (8001170 <HAL_LTDC_LineEventCallback+0x5c>)
 8001120:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001122:	8811      	ldrh	r1, [r2, #0]
 8001124:	428b      	cmp	r3, r1
 8001126:	d113      	bne.n	8001150 <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 8001128:	4b12      	ldr	r3, [pc, #72]	; (8001174 <HAL_LTDC_LineEventCallback+0x60>)
 800112a:	8819      	ldrh	r1, [r3, #0]
 800112c:	f006 f86a 	bl	8007204 <HAL_LTDC_ProgramLineEvent>
 8001130:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 8001132:	f892 3066 	ldrb.w	r3, [r2, #102]	; 0x66
 8001136:	3301      	adds	r3, #1
 8001138:	f882 3066 	strb.w	r3, [r2, #102]	; 0x66
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 800113c:	f7ff fc14 	bl	8000968 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 8001140:	6820      	ldr	r0, [r4, #0]
 8001142:	f00a fcbf 	bl	800bac4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8001146:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 800114a:	2000      	movs	r0, #0
 800114c:	f7ff baf8 	b.w	8000740 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 8001150:	f006 f858 	bl	8007204 <HAL_LTDC_ProgramLineEvent>
        return instance;
 8001154:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 8001156:	6803      	ldr	r3, [r0, #0]
 8001158:	6a1b      	ldr	r3, [r3, #32]
 800115a:	4798      	blx	r3
    }
 800115c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8001160:	2000      	movs	r0, #0
 8001162:	f7ff baee 	b.w	8000742 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 8001166:	bd10      	pop	{r4, pc}
 8001168:	200155b8 	.word	0x200155b8
 800116c:	40016800 	.word	0x40016800
 8001170:	20003950 	.word	0x20003950
 8001174:	2000394e 	.word	0x2000394e

08001178 <SPI5_Write>:
/**
  * @brief  Writes a byte to device.
  * @param  Value: value to be written
  */
static void SPI5_Write(uint16_t Value)
{
 8001178:	b507      	push	{r0, r1, r2, lr}
  HAL_StatusTypeDef status = HAL_OK;
  
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 800117a:	4b06      	ldr	r3, [pc, #24]	; (8001194 <SPI5_Write+0x1c>)
{
 800117c:	f8ad 0006 	strh.w	r0, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001180:	681b      	ldr	r3, [r3, #0]
 8001182:	4805      	ldr	r0, [pc, #20]	; (8001198 <SPI5_Write+0x20>)
 8001184:	2201      	movs	r2, #1
 8001186:	f10d 0106 	add.w	r1, sp, #6
 800118a:	f006 fd4c 	bl	8007c26 <HAL_SPI_Transmit>
  if(status != HAL_OK)
  {
    /* Re-Initialize the BUS */
    SPI5_Error();
  }
}
 800118e:	b003      	add	sp, #12
 8001190:	f85d fb04 	ldr.w	pc, [sp], #4
 8001194:	20000010 	.word	0x20000010
 8001198:	20003b7c 	.word	0x20003b7c

0800119c <CountAvgFrom60sec>:
			result+=ladowarka.PomiaryCoSec[i];
 800119c:	4910      	ldr	r1, [pc, #64]	; (80011e0 <CountAvgFrom60sec+0x44>)
float CountAvgFrom60sec(){
 800119e:	b082      	sub	sp, #8
 80011a0:	2300      	movs	r3, #0
			result+=ladowarka.PomiaryCoSec[i];
 80011a2:	f203 225e 	addw	r2, r3, #606	; 0x25e
 80011a6:	eb01 0282 	add.w	r2, r1, r2, lsl #2
 80011aa:	ed92 7a00 	vldr	s14, [r2]
 80011ae:	eddd 7a01 	vldr	s15, [sp, #4]
		for (uint8_t i=0;i<60;i++)
 80011b2:	3301      	adds	r3, #1
			result+=ladowarka.PomiaryCoSec[i];
 80011b4:	ee77 7a87 	vadd.f32	s15, s15, s14
		for (uint8_t i=0;i<60;i++)
 80011b8:	2b3c      	cmp	r3, #60	; 0x3c
			result+=ladowarka.PomiaryCoSec[i];
 80011ba:	edcd 7a01 	vstr	s15, [sp, #4]
		for (uint8_t i=0;i<60;i++)
 80011be:	d1f0      	bne.n	80011a2 <CountAvgFrom60sec+0x6>
		ladowarka.SredniaZOstatniejMin=result/60;
 80011c0:	eddd 6a01 	vldr	s13, [sp, #4]
 80011c4:	eddf 7a07 	vldr	s15, [pc, #28]	; 80011e4 <CountAvgFrom60sec+0x48>
 80011c8:	4b07      	ldr	r3, [pc, #28]	; (80011e8 <CountAvgFrom60sec+0x4c>)
 80011ca:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 80011ce:	ed83 7a00 	vstr	s14, [r3]
	return result/60;
 80011d2:	ed9d 0a01 	vldr	s0, [sp, #4]
}
 80011d6:	ee80 0a27 	vdiv.f32	s0, s0, s15
 80011da:	b002      	add	sp, #8
 80011dc:	4770      	bx	lr
 80011de:	bf00      	nop
 80011e0:	20003c14 	.word	0x20003c14
 80011e4:	42700000 	.word	0x42700000
 80011e8:	20004698 	.word	0x20004698

080011ec <ZadanieDwa>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_ZadanieDwa */
__weak void ZadanieDwa(void *argument)
{
 80011ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	  static volatile uint32_t value=0; //actual value of adc measurement on battery
	  static volatile uint32_t value2=0; //actual value of adc measurement on battery  + resistor.

	  static int sec0to59=0;

		if(ladowarka.Minelo100ms){ //jesli zostalo wykryte przerwanie z liniczka7
 80011f0:	4c70      	ldr	r4, [pc, #448]	; (80013b4 <ZadanieDwa+0x1c8>)
			ladowarka.Minelo100ms=0; //kasuj flage

					//pomiar napiecia baterii
					HAL_ADC_Start(&hadc3);
 80011f2:	4d71      	ldr	r5, [pc, #452]	; (80013b8 <ZadanieDwa+0x1cc>)
		if(ladowarka.Minelo100ms){ //jesli zostalo wykryte przerwanie z liniczka7
 80011f4:	f8d4 3a6c 	ldr.w	r3, [r4, #2668]	; 0xa6c
 80011f8:	2b00      	cmp	r3, #0
 80011fa:	f000 80a6 	beq.w	800134a <ZadanieDwa+0x15e>
			ladowarka.Minelo100ms=0; //kasuj flage
 80011fe:	2300      	movs	r3, #0
					HAL_ADC_Start(&hadc3);
 8001200:	4628      	mov	r0, r5
			ladowarka.Minelo100ms=0; //kasuj flage
 8001202:	f8c4 3a6c 	str.w	r3, [r4, #2668]	; 0xa6c
					value += HAL_ADC_GetValue(&hadc3);
 8001206:	4f6d      	ldr	r7, [pc, #436]	; (80013bc <ZadanieDwa+0x1d0>)

					//pomiar napiecia na baterii i rezystorze
					HAL_ADC_Start(&hadc2);
					value2 += HAL_ADC_GetValue(&hadc2);
 8001208:	4e6d      	ldr	r6, [pc, #436]	; (80013c0 <ZadanieDwa+0x1d4>)
					HAL_ADC_Start(&hadc3);
 800120a:	f004 fe4f 	bl	8005eac <HAL_ADC_Start>
					value += HAL_ADC_GetValue(&hadc3);
 800120e:	4628      	mov	r0, r5
 8001210:	f004 fec0 	bl	8005f94 <HAL_ADC_GetValue>
 8001214:	683b      	ldr	r3, [r7, #0]
 8001216:	4418      	add	r0, r3
 8001218:	6038      	str	r0, [r7, #0]
					HAL_ADC_Start(&hadc2);
 800121a:	486a      	ldr	r0, [pc, #424]	; (80013c4 <ZadanieDwa+0x1d8>)
 800121c:	f004 fe46 	bl	8005eac <HAL_ADC_Start>
					value2 += HAL_ADC_GetValue(&hadc2);
 8001220:	4868      	ldr	r0, [pc, #416]	; (80013c4 <ZadanieDwa+0x1d8>)
 8001222:	f004 feb7 	bl	8005f94 <HAL_ADC_GetValue>
 8001226:	6833      	ldr	r3, [r6, #0]
 8001228:	4418      	add	r0, r3
 800122a:	6030      	str	r0, [r6, #0]
					liczbaPomiarow++;
 800122c:	4866      	ldr	r0, [pc, #408]	; (80013c8 <ZadanieDwa+0x1dc>)
 800122e:	6802      	ldr	r2, [r0, #0]
 8001230:	f04f 0c0a 	mov.w	ip, #10
 8001234:	3201      	adds	r2, #1
 8001236:	6002      	str	r2, [r0, #0]
 8001238:	fb92 f3fc 	sdiv	r3, r2, ip
 800123c:	fb0c 2213 	mls	r2, ip, r3, r2

					/****** jesli minela sekunda ->10tickow co 100ms********/

					if(liczbaPomiarow%10==0){ //jesli minela sekunda
 8001240:	2a00      	cmp	r2, #0
 8001242:	f040 8082 	bne.w	800134a <ZadanieDwa+0x15e>
						ladowarka.BatteryVoltage=(value/10) * ladowarka.VccVoltage / 4096.0f; // napiecie na baterii
 8001246:	683a      	ldr	r2, [r7, #0]
 8001248:	4960      	ldr	r1, [pc, #384]	; (80013cc <ZadanieDwa+0x1e0>)
 800124a:	fbb2 f3fc 	udiv	r3, r2, ip
 800124e:	ee07 3a10 	vmov	s14, r3
 8001252:	edd1 7a00 	vldr	s15, [r1]
 8001256:	eddf 6a5e 	vldr	s13, [pc, #376]	; 80013d0 <ZadanieDwa+0x1e4>
 800125a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800125e:	ee27 7a27 	vmul.f32	s14, s14, s15
 8001262:	ee27 7a26 	vmul.f32	s14, s14, s13
 8001266:	ed84 7a00 	vstr	s14, [r4]
						ladowarka.ChargingCurrent=(value2/10) * ladowarka.VccVoltage / 4096.0f; // napiecie na baterii i rezystorze,
 800126a:	6833      	ldr	r3, [r6, #0]
 800126c:	fbb3 f3fc 	udiv	r3, r3, ip
 8001270:	ee07 3a90 	vmov	s15, r3
 8001274:	ed91 7a00 	vldr	s14, [r1]
 8001278:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800127c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001280:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8001284:	ed41 7a03 	vstr	s15, [r1, #-12]
						ladowarka.ChargingCurrent=(ladowarka.ChargingCurrent-ladowarka.BatteryVoltage)*1000; //	Jako ze rezystor jest 1Ohm, to prad jest rowny napiecu. wynik w [mA]
 8001288:	ed51 7a03 	vldr	s15, [r1, #-12]
 800128c:	ed94 7a00 	vldr	s14, [r4]
 8001290:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8001294:	ed9f 7a4f 	vldr	s14, [pc, #316]	; 80013d4 <ZadanieDwa+0x1e8>
 8001298:	ee67 7a87 	vmul.f32	s15, s15, s14
 800129c:	ed41 7a03 	vstr	s15, [r1, #-12]
						if (ladowarka.ChargingCurrent <=0 ) ladowarka.ChargingCurrent=0;
 80012a0:	ed51 7a03 	vldr	s15, [r1, #-12]
 80012a4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80012a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80012ac:	bf9c      	itt	ls
 80012ae:	2300      	movls	r3, #0
 80012b0:	f841 3c0c 	strls.w	r3, [r1, #-12]

						// jesli zaczeto ladwoac
						if (ladowarka.ChargeStarted ){ //jesli zaczeto ladwowac
 80012b4:	6923      	ldr	r3, [r4, #16]
 80012b6:	2b00      	cmp	r3, #0
 80012b8:	d043      	beq.n	8001342 <ZadanieDwa+0x156>
							if (ladowarka.CzsasLadowaniaWSec<1) {ladowarka.NapiecieBaterii[0]=ladowarka.BatteryVoltage; ladowarka.SredniaZOstatniejMin = ladowarka.BatteryVoltage; ladowarka.narysujPunktNaWykresieMin=1; }//dla 0 pomiaru dodaj od razy do tablicy oraz wyplotuj na obu wykreasch.
 80012ba:	f8d4 3a78 	ldr.w	r3, [r4, #2680]	; 0xa78
 80012be:	2b00      	cmp	r3, #0
 80012c0:	dc07      	bgt.n	80012d2 <ZadanieDwa+0xe6>
 80012c2:	6823      	ldr	r3, [r4, #0]
 80012c4:	61a3      	str	r3, [r4, #24]
 80012c6:	4b44      	ldr	r3, [pc, #272]	; (80013d8 <ZadanieDwa+0x1ec>)
 80012c8:	6822      	ldr	r2, [r4, #0]
 80012ca:	601a      	str	r2, [r3, #0]
 80012cc:	2301      	movs	r3, #1
 80012ce:	f8c4 3a74 	str.w	r3, [r4, #2676]	; 0xa74


							if (ladowarka.BatteryVoltage>ladowarka.MaxBatteryVoltage) ladowarka.MaxBatteryVoltage=ladowarka.BatteryVoltage; //uaktualnij max wartosc.
 80012d2:	ed94 7a00 	vldr	s14, [r4]
 80012d6:	edd4 7a01 	vldr	s15, [r4, #4]
							ladowarka.CzsasLadowaniaWSec++; //jesli zaczal sie proces ladowana ziwekszja wartosc czas ladowania w sec
							ladowarka.narysujPunktNaWykresie=1; //zezwol na narysowanie danej na wykresie


							/********* dodawanie co 1 sek wartosc pomiaru do tabeli********/
							ladowarka.PomiaryCoSec[sec0to59++]=ladowarka.BatteryVoltage;
 80012da:	f8df 8104 	ldr.w	r8, [pc, #260]	; 80013e0 <ZadanieDwa+0x1f4>
							if (ladowarka.BatteryVoltage>ladowarka.MaxBatteryVoltage) ladowarka.MaxBatteryVoltage=ladowarka.BatteryVoltage; //uaktualnij max wartosc.
 80012de:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80012e2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80012e6:	bfc4      	itt	gt
 80012e8:	6823      	ldrgt	r3, [r4, #0]
 80012ea:	6063      	strgt	r3, [r4, #4]
							ladowarka.CzsasLadowaniaWSec++; //jesli zaczal sie proces ladowana ziwekszja wartosc czas ladowania w sec
 80012ec:	f8d4 3a78 	ldr.w	r3, [r4, #2680]	; 0xa78
 80012f0:	3301      	adds	r3, #1
 80012f2:	f8c4 3a78 	str.w	r3, [r4, #2680]	; 0xa78
							ladowarka.narysujPunktNaWykresie=1; //zezwol na narysowanie danej na wykresie
 80012f6:	2301      	movs	r3, #1
 80012f8:	f8c4 3a70 	str.w	r3, [r4, #2672]	; 0xa70
							ladowarka.PomiaryCoSec[sec0to59++]=ladowarka.BatteryVoltage;
 80012fc:	f8d8 3000 	ldr.w	r3, [r8]
 8001300:	6821      	ldr	r1, [r4, #0]
 8001302:	1c5a      	adds	r2, r3, #1
 8001304:	f203 235e 	addw	r3, r3, #606	; 0x25e
 8001308:	eb04 0383 	add.w	r3, r4, r3, lsl #2
							if (sec0to59>59) {	//jesli mamy 10 elementow w tabeli (minelo 10sec) usrednij i dodaj wartosc do NapiecieBaterii
 800130c:	2a3b      	cmp	r2, #59	; 0x3b
							ladowarka.PomiaryCoSec[sec0to59++]=ladowarka.BatteryVoltage;
 800130e:	f8c8 2000 	str.w	r2, [r8]
 8001312:	6019      	str	r1, [r3, #0]
							if (sec0to59>59) {	//jesli mamy 10 elementow w tabeli (minelo 10sec) usrednij i dodaj wartosc do NapiecieBaterii
 8001314:	dd15      	ble.n	8001342 <ZadanieDwa+0x156>
								//jesli ladujemy to dodaj wartosc do tablicy
								CountAvgFrom60sec();
 8001316:	f7ff ff41 	bl	800119c <CountAvgFrom60sec>
								if (ladowarka.ChargingCompleted==0){
 800131a:	f8d4 3a80 	ldr.w	r3, [r4, #2688]	; 0xa80
 800131e:	b953      	cbnz	r3, 8001336 <ZadanieDwa+0x14a>
									ladowarka.NapiecieBaterii[ladowarka.CzsasLadowaniaWSec/60]=ladowarka.SredniaZOstatniejMin; // TO DO srednia z 10 pomiarow
 8001320:	f8d4 3a78 	ldr.w	r3, [r4, #2680]	; 0xa78
 8001324:	223c      	movs	r2, #60	; 0x3c
 8001326:	fb93 f3f2 	sdiv	r3, r3, r2
 800132a:	4a2b      	ldr	r2, [pc, #172]	; (80013d8 <ZadanieDwa+0x1ec>)
 800132c:	3306      	adds	r3, #6
 800132e:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8001332:	6812      	ldr	r2, [r2, #0]
 8001334:	601a      	str	r2, [r3, #0]
								}

								sec0to59=0;
 8001336:	2300      	movs	r3, #0
 8001338:	f8c8 3000 	str.w	r3, [r8]

								ladowarka.narysujPunktNaWykresieMin=1;//zezwol na narysowanie na wykresie minut.
 800133c:	2301      	movs	r3, #1
 800133e:	f8c4 3a74 	str.w	r3, [r4, #2676]	; 0xa74
							}

						}


						liczbaPomiarow=0; //po 1 sek ustaw to na 0
 8001342:	2300      	movs	r3, #0
						value=0; //resetuj pomiar napiecia na baterii
 8001344:	603b      	str	r3, [r7, #0]
						liczbaPomiarow=0; //po 1 sek ustaw to na 0
 8001346:	6003      	str	r3, [r0, #0]
						value2=0; //resetuj  napiecie na baterii i rezystorze,
 8001348:	6033      	str	r3, [r6, #0]


					}

					/*************** generowanie napiecia ***************************/
					if(ladowarka.ChargeStarted==1 && ladowarka.UstawioneNapiecieNaopAmpie==0 ) { //jesli kliknieto przycik na GUI START   i nie ustawiono jeszce napiecia na op ampie
 800134a:	6923      	ldr	r3, [r4, #16]
 800134c:	2b01      	cmp	r3, #1
 800134e:	d119      	bne.n	8001384 <ZadanieDwa+0x198>
 8001350:	6963      	ldr	r3, [r4, #20]
 8001352:	b9bb      	cbnz	r3, 8001384 <ZadanieDwa+0x198>
						/********* ustawienie poprawnego napiecia************/
						int napiecie=4095;//domyslnie 0
						if (ladowarka.LoadingCurrent==400) napiecie=3100;
 8001354:	68a3      	ldr	r3, [r4, #8]
 8001356:	f5b3 7fc8 	cmp.w	r3, #400	; 0x190
 800135a:	d021      	beq.n	80013a0 <ZadanieDwa+0x1b4>
						else if (ladowarka.LoadingCurrent==300) napiecie=3250;
 800135c:	68a3      	ldr	r3, [r4, #8]
 800135e:	f5b3 7f96 	cmp.w	r3, #300	; 0x12c
 8001362:	d020      	beq.n	80013a6 <ZadanieDwa+0x1ba>
						else if (ladowarka.LoadingCurrent==200) napiecie=3530;
 8001364:	68a3      	ldr	r3, [r4, #8]
 8001366:	2bc8      	cmp	r3, #200	; 0xc8
 8001368:	d020      	beq.n	80013ac <ZadanieDwa+0x1c0>
						else if (ladowarka.LoadingCurrent==100) napiecie=3700;
 800136a:	68a1      	ldr	r1, [r4, #8]
 800136c:	f640 73ff 	movw	r3, #4095	; 0xfff
 8001370:	f640 6274 	movw	r2, #3700	; 0xe74
 8001374:	2964      	cmp	r1, #100	; 0x64
 8001376:	bf08      	it	eq
 8001378:	4613      	moveq	r3, r2
							HAL_DAC_SetValue(&hdac, DAC_CHANNEL_2, DAC_ALIGN_12B_R, napiecie);  //ustaw poprawne napiece tutaj (3V)
 800137a:	4818      	ldr	r0, [pc, #96]	; (80013dc <ZadanieDwa+0x1f0>)
 800137c:	2200      	movs	r2, #0
 800137e:	2110      	movs	r1, #16
 8001380:	f004 ff6b 	bl	800625a <HAL_DAC_SetValue>
							//ladowarka.UstawioneNapiecieNaopAmpie=1;
					}

					/************** sprawdzenie czy pomiar nie ma sie juz zakonczyc*****************/
					if (ladowarka.ChargingCompleted){
 8001384:	f8d4 3a80 	ldr.w	r3, [r4, #2688]	; 0xa80
 8001388:	b133      	cbz	r3, 8001398 <ZadanieDwa+0x1ac>
						HAL_DAC_SetValue(&hdac, DAC_CHANNEL_2, DAC_ALIGN_12B_R, CurrentAfterCharging);  //ustaw max napiecie zeby nie ladowac.
 800138a:	4814      	ldr	r0, [pc, #80]	; (80013dc <ZadanieDwa+0x1f0>)
 800138c:	f640 733c 	movw	r3, #3900	; 0xf3c
 8001390:	2200      	movs	r2, #0
 8001392:	2110      	movs	r1, #16
 8001394:	f004 ff61 	bl	800625a <HAL_DAC_SetValue>
					}



    osDelay(1); //to chyba ma zostac?
 8001398:	2001      	movs	r0, #1
 800139a:	f007 f92b 	bl	80085f4 <osDelay>
  {
 800139e:	e729      	b.n	80011f4 <ZadanieDwa+0x8>
						if (ladowarka.LoadingCurrent==400) napiecie=3100;
 80013a0:	f640 431c 	movw	r3, #3100	; 0xc1c
 80013a4:	e7e9      	b.n	800137a <ZadanieDwa+0x18e>
						else if (ladowarka.LoadingCurrent==300) napiecie=3250;
 80013a6:	f640 43b2 	movw	r3, #3250	; 0xcb2
 80013aa:	e7e6      	b.n	800137a <ZadanieDwa+0x18e>
						else if (ladowarka.LoadingCurrent==200) napiecie=3530;
 80013ac:	f640 53ca 	movw	r3, #3530	; 0xdca
 80013b0:	e7e3      	b.n	800137a <ZadanieDwa+0x18e>
 80013b2:	bf00      	nop
 80013b4:	20003c14 	.word	0x20003c14
 80013b8:	200039a8 	.word	0x200039a8
 80013bc:	200046a8 	.word	0x200046a8
 80013c0:	200046ac 	.word	0x200046ac
 80013c4:	20003960 	.word	0x20003960
 80013c8:	200046a0 	.word	0x200046a0
 80013cc:	2000469c 	.word	0x2000469c
 80013d0:	39800000 	.word	0x39800000
 80013d4:	447a0000 	.word	0x447a0000
 80013d8:	20004698 	.word	0x20004698
 80013dc:	200039f8 	.word	0x200039f8
 80013e0:	200046a4 	.word	0x200046a4

080013e4 <SystemClock_Config>:
{
 80013e4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80013e6:	b0a1      	sub	sp, #132	; 0x84
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80013e8:	2210      	movs	r2, #16
 80013ea:	2100      	movs	r1, #0
 80013ec:	a80a      	add	r0, sp, #40	; 0x28
 80013ee:	f01f fbb5 	bl	8020b5c <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80013f2:	2214      	movs	r2, #20
 80013f4:	2100      	movs	r1, #0
 80013f6:	a803      	add	r0, sp, #12
 80013f8:	f01f fbb0 	bl	8020b5c <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 80013fc:	2100      	movs	r1, #0
 80013fe:	2230      	movs	r2, #48	; 0x30
 8001400:	a814      	add	r0, sp, #80	; 0x50
 8001402:	f01f fbab 	bl	8020b5c <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 8001406:	2400      	movs	r4, #0
 8001408:	4b22      	ldr	r3, [pc, #136]	; (8001494 <SystemClock_Config+0xb0>)
 800140a:	9401      	str	r4, [sp, #4]
 800140c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800140e:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8001412:	641a      	str	r2, [r3, #64]	; 0x40
 8001414:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001416:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800141a:	9301      	str	r3, [sp, #4]
 800141c:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 800141e:	4b1e      	ldr	r3, [pc, #120]	; (8001498 <SystemClock_Config+0xb4>)
 8001420:	9402      	str	r4, [sp, #8]
 8001422:	681a      	ldr	r2, [r3, #0]
 8001424:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 8001428:	601a      	str	r2, [r3, #0]
 800142a:	681b      	ldr	r3, [r3, #0]
 800142c:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8001430:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001432:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001434:	9b02      	ldr	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001436:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 800143a:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 800143e:	2502      	movs	r5, #2
 8001440:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 8001444:	e9cd 530e 	strd	r5, r3, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLN = 336;
 8001448:	2708      	movs	r7, #8
 800144a:	f44f 73a8 	mov.w	r3, #336	; 0x150
  RCC_OscInitStruct.PLL.PLLQ = 4;
 800144e:	2604      	movs	r6, #4
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001450:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLN = 336;
 8001452:	e9cd 7310 	strd	r7, r3, [sp, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001456:	9512      	str	r5, [sp, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLQ = 4;
 8001458:	9613      	str	r6, [sp, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800145a:	f005 fef1 	bl	8007240 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 800145e:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001460:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001464:	f44f 51a0 	mov.w	r1, #5120	; 0x1400
 8001468:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800146c:	e9cd 1306 	strd	r1, r3, [sp, #24]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001470:	a803      	add	r0, sp, #12
 8001472:	2105      	movs	r1, #5
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001474:	9405      	str	r4, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001476:	f006 f8bb 	bl	80075f0 <HAL_RCC_ClockConfig>
  PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 800147a:	23c0      	movs	r3, #192	; 0xc0
 800147c:	9318      	str	r3, [sp, #96]	; 0x60
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 800147e:	a814      	add	r0, sp, #80	; 0x50
  PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8001480:	f44f 3300 	mov.w	r3, #131072	; 0x20000
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001484:	9714      	str	r7, [sp, #80]	; 0x50
  PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 8001486:	961a      	str	r6, [sp, #104]	; 0x68
  PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8001488:	931d      	str	r3, [sp, #116]	; 0x74
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 800148a:	f006 f98b 	bl	80077a4 <HAL_RCCEx_PeriphCLKConfig>
}
 800148e:	b021      	add	sp, #132	; 0x84
 8001490:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001492:	bf00      	nop
 8001494:	40023800 	.word	0x40023800
 8001498:	40007000 	.word	0x40007000

0800149c <main>:
{
 800149c:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 80014a0:	b09b      	sub	sp, #108	; 0x6c
  HAL_Init();
 80014a2:	f004 fc1d 	bl	8005ce0 <HAL_Init>
  SystemClock_Config();
 80014a6:	f7ff ff9d 	bl	80013e4 <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80014aa:	2214      	movs	r2, #20
 80014ac:	2100      	movs	r1, #0
 80014ae:	a80d      	add	r0, sp, #52	; 0x34
  __HAL_RCC_GPIOF_CLK_ENABLE();
 80014b0:	2400      	movs	r4, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80014b2:	f01f fb53 	bl	8020b5c <memset>
  __HAL_RCC_GPIOF_CLK_ENABLE();
 80014b6:	4bc6      	ldr	r3, [pc, #792]	; (80017d0 <main+0x334>)
 80014b8:	9400      	str	r4, [sp, #0]
 80014ba:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80014bc:	48c5      	ldr	r0, [pc, #788]	; (80017d4 <main+0x338>)
  hi2c3.Instance = I2C3;
 80014be:	4ec6      	ldr	r6, [pc, #792]	; (80017d8 <main+0x33c>)
  __HAL_RCC_GPIOF_CLK_ENABLE();
 80014c0:	f042 0220 	orr.w	r2, r2, #32
 80014c4:	631a      	str	r2, [r3, #48]	; 0x30
 80014c6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014c8:	f002 0220 	and.w	r2, r2, #32
 80014cc:	9200      	str	r2, [sp, #0]
 80014ce:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 80014d0:	9401      	str	r4, [sp, #4]
 80014d2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014d4:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 80014d8:	631a      	str	r2, [r3, #48]	; 0x30
 80014da:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014dc:	f002 0280 	and.w	r2, r2, #128	; 0x80
 80014e0:	9201      	str	r2, [sp, #4]
 80014e2:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80014e4:	9402      	str	r4, [sp, #8]
 80014e6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014e8:	f042 0204 	orr.w	r2, r2, #4
 80014ec:	631a      	str	r2, [r3, #48]	; 0x30
 80014ee:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014f0:	f002 0204 	and.w	r2, r2, #4
 80014f4:	9202      	str	r2, [sp, #8]
 80014f6:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80014f8:	9403      	str	r4, [sp, #12]
 80014fa:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014fc:	f042 0201 	orr.w	r2, r2, #1
 8001500:	631a      	str	r2, [r3, #48]	; 0x30
 8001502:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001504:	f002 0201 	and.w	r2, r2, #1
 8001508:	9203      	str	r2, [sp, #12]
 800150a:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 800150c:	9404      	str	r4, [sp, #16]
 800150e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001510:	f042 0202 	orr.w	r2, r2, #2
 8001514:	631a      	str	r2, [r3, #48]	; 0x30
 8001516:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001518:	f002 0202 	and.w	r2, r2, #2
 800151c:	9204      	str	r2, [sp, #16]
 800151e:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8001520:	9405      	str	r4, [sp, #20]
 8001522:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001524:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8001528:	631a      	str	r2, [r3, #48]	; 0x30
 800152a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800152c:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8001530:	9205      	str	r2, [sp, #20]
 8001532:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001534:	9406      	str	r4, [sp, #24]
 8001536:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001538:	f042 0210 	orr.w	r2, r2, #16
 800153c:	631a      	str	r2, [r3, #48]	; 0x30
 800153e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001540:	f002 0210 	and.w	r2, r2, #16
 8001544:	9206      	str	r2, [sp, #24]
 8001546:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001548:	9407      	str	r4, [sp, #28]
 800154a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800154c:	f042 0208 	orr.w	r2, r2, #8
 8001550:	631a      	str	r2, [r3, #48]	; 0x30
 8001552:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001554:	f003 0308 	and.w	r3, r3, #8
 8001558:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800155a:	4622      	mov	r2, r4
 800155c:	2104      	movs	r1, #4
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800155e:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001560:	f005 f872 	bl	8006648 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_12, GPIO_PIN_RESET);
 8001564:	489d      	ldr	r0, [pc, #628]	; (80017dc <main+0x340>)
 8001566:	4622      	mov	r2, r4
 8001568:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 800156c:	f005 f86c 	bl	8006648 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 8001570:	4622      	mov	r2, r4
 8001572:	489b      	ldr	r0, [pc, #620]	; (80017e0 <main+0x344>)
 8001574:	f44f 5140 	mov.w	r1, #12288	; 0x3000
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001578:	2501      	movs	r5, #1
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 800157a:	f005 f865 	bl	8006648 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800157e:	2702      	movs	r7, #2
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001580:	f04f 0b04 	mov.w	fp, #4
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001584:	4893      	ldr	r0, [pc, #588]	; (80017d4 <main+0x338>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001586:	9710      	str	r7, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001588:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800158a:	e9cd b50d 	strd	fp, r5, [sp, #52]	; 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800158e:	940f      	str	r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001590:	f004 ff72 	bl	8006478 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12;
 8001594:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001598:	4890      	ldr	r0, [pc, #576]	; (80017dc <main+0x340>)
 800159a:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800159c:	e9cd 250d 	strd	r2, r5, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80015a0:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80015a4:	f004 ff68 	bl	8006478 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80015a8:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 80015aa:	f44f 5240 	mov.w	r2, #12288	; 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80015ae:	488c      	ldr	r0, [pc, #560]	; (80017e0 <main+0x344>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80015b0:	e9cd 250d 	strd	r2, r5, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80015b4:	e9cd 470f 	strd	r4, r7, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80015b8:	f004 ff5e 	bl	8006478 <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 80015bc:	4889      	ldr	r0, [pc, #548]	; (80017e4 <main+0x348>)
 80015be:	4a8a      	ldr	r2, [pc, #552]	; (80017e8 <main+0x34c>)
 80015c0:	6002      	str	r2, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 80015c2:	f004 fdd9 	bl	8006178 <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 80015c6:	4b89      	ldr	r3, [pc, #548]	; (80017ec <main+0x350>)
 80015c8:	4a89      	ldr	r2, [pc, #548]	; (80017f0 <main+0x354>)
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 80015ca:	6234      	str	r4, [r6, #32]
  hi2c3.Init.ClockSpeed = 100000;
 80015cc:	e9c6 3200 	strd	r3, r2, [r6]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 80015d0:	4630      	mov	r0, r6
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 80015d2:	f44f 4280 	mov.w	r2, #16384	; 0x4000
  hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 80015d6:	e9c6 2404 	strd	r2, r4, [r6, #16]
  hi2c3.Init.OwnAddress1 = 0;
 80015da:	e9c6 4402 	strd	r4, r4, [r6, #8]
  hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 80015de:	e9c6 4406 	strd	r4, r4, [r6, #24]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 80015e2:	f005 fa13 	bl	8006a0c <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 80015e6:	2110      	movs	r1, #16
 80015e8:	4630      	mov	r0, r6
 80015ea:	f005 fc4f 	bl	8006e8c <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 80015ee:	4621      	mov	r1, r4
 80015f0:	4630      	mov	r0, r6
 80015f2:	f005 fc6a 	bl	8006eca <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Instance = SPI5;
 80015f6:	487f      	ldr	r0, [pc, #508]	; (80017f4 <main+0x358>)
  hspi5.Init.Mode = SPI_MODE_MASTER;
 80015f8:	497f      	ldr	r1, [pc, #508]	; (80017f8 <main+0x35c>)
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 80015fa:	6284      	str	r4, [r0, #40]	; 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 80015fc:	f44f 7282 	mov.w	r2, #260	; 0x104
 8001600:	e9c0 1200 	strd	r1, r2, [r0]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8001604:	f44f 7600 	mov.w	r6, #512	; 0x200
 8001608:	2218      	movs	r2, #24
 800160a:	e9c0 6206 	strd	r6, r2, [r0, #24]
  hspi5.Init.CRCPolynomial = 10;
 800160e:	220a      	movs	r2, #10
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001610:	4e7a      	ldr	r6, [pc, #488]	; (80017fc <main+0x360>)
  hspi5.Init.CRCPolynomial = 10;
 8001612:	62c2      	str	r2, [r0, #44]	; 0x2c
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 8001614:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 8001618:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 800161c:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8001620:	f006 fac4 	bl	8007bac <HAL_SPI_Init>
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001624:	4a76      	ldr	r2, [pc, #472]	; (8001800 <main+0x364>)
  SdramTiming.LoadToActiveDelay = 2;
 8001626:	970d      	str	r7, [sp, #52]	; 0x34
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8001628:	f04f 0810 	mov.w	r8, #16
  hsdram1.Init.SDBank = FMC_SDRAM_BANK2;
 800162c:	e9c6 2500 	strd	r2, r5, [r6]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8001630:	2240      	movs	r2, #64	; 0x40
 8001632:	e9c6 8204 	strd	r8, r2, [r6, #16]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 8001636:	f44f 72c0 	mov.w	r2, #384	; 0x180
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 800163a:	e9c6 2406 	strd	r2, r4, [r6, #24]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 800163e:	f44f 6200 	mov.w	r2, #2048	; 0x800
  SdramTiming.WriteRecoveryTime = 3;
 8001642:	2303      	movs	r3, #3
  SdramTiming.ExitSelfRefreshDelay = 7;
 8001644:	f04f 0a07 	mov.w	sl, #7
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 8001648:	e9c6 2408 	strd	r2, r4, [r6, #32]
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 800164c:	a90d      	add	r1, sp, #52	; 0x34
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 800164e:	f44f 5200 	mov.w	r2, #8192	; 0x2000
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001652:	4630      	mov	r0, r6
  SdramTiming.RPDelay = 2;
 8001654:	e9cd 3711 	strd	r3, r7, [sp, #68]	; 0x44
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001658:	f04f 0908 	mov.w	r9, #8
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 800165c:	e9c6 4b02 	strd	r4, fp, [r6, #8]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8001660:	62b2      	str	r2, [r6, #40]	; 0x28
  SdramTiming.SelfRefreshTime = 4;
 8001662:	e9cd ab0e 	strd	sl, fp, [sp, #56]	; 0x38
  SdramTiming.RCDDelay = 2;
 8001666:	9713      	str	r7, [sp, #76]	; 0x4c
  SdramTiming.RowCycleDelay = 7;
 8001668:	f8cd a040 	str.w	sl, [sp, #64]	; 0x40
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 800166c:	f006 f9c4 	bl	80079f8 <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001670:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001674:	a909      	add	r1, sp, #36	; 0x24
 8001676:	4630      	mov	r0, r6
  Command->AutoRefreshNumber       = 1;
 8001678:	e9cd 950a 	strd	r9, r5, [sp, #40]	; 0x28
 __IO uint32_t tmpmrd =0;
 800167c:	9408      	str	r4, [sp, #32]
  Command->CommandMode             = FMC_SDRAM_CMD_CLK_ENABLE;
 800167e:	9509      	str	r5, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 8001680:	940c      	str	r4, [sp, #48]	; 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001682:	f006 f9d9 	bl	8007a38 <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 8001686:	4628      	mov	r0, r5
 8001688:	f004 fb56 	bl	8005d38 <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);  
 800168c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001690:	a909      	add	r1, sp, #36	; 0x24
 8001692:	4630      	mov	r0, r6
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001694:	e9cd 7909 	strd	r7, r9, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 8001698:	e9cd 540b 	strd	r5, r4, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);  
 800169c:	f006 f9cc 	bl	8007a38 <HAL_SDRAM_SendCommand>
  Command->CommandMode             = FMC_SDRAM_CMD_AUTOREFRESH_MODE;
 80016a0:	2303      	movs	r3, #3
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80016a2:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80016a6:	a909      	add	r1, sp, #36	; 0x24
 80016a8:	4630      	mov	r0, r6
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80016aa:	e9cd 3909 	strd	r3, r9, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 80016ae:	e9cd b40b 	strd	fp, r4, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80016b2:	f006 f9c1 	bl	8007a38 <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 80016b6:	f44f 720c 	mov.w	r2, #560	; 0x230
 80016ba:	9208      	str	r2, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 80016bc:	9b08      	ldr	r3, [sp, #32]
 80016be:	930c      	str	r3, [sp, #48]	; 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80016c0:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80016c4:	a909      	add	r1, sp, #36	; 0x24
 80016c6:	4630      	mov	r0, r6
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80016c8:	e9cd b909 	strd	fp, r9, [sp, #36]	; 0x24
  Command->AutoRefreshNumber       = 1;
 80016cc:	950b      	str	r5, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80016ce:	f006 f9b3 	bl	8007a38 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT); 
 80016d2:	f240 516a 	movw	r1, #1386	; 0x56a
 80016d6:	4630      	mov	r0, r6
 80016d8:	f006 f9c5 	bl	8007a66 <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 80016dc:	2234      	movs	r2, #52	; 0x34
 80016de:	4621      	mov	r1, r4
 80016e0:	eb0d 0002 	add.w	r0, sp, r2
 80016e4:	f01f fa3a 	bl	8020b5c <memset>
  hltdc.Instance = LTDC;
 80016e8:	4e46      	ldr	r6, [pc, #280]	; (8001804 <main+0x368>)
 80016ea:	4b47      	ldr	r3, [pc, #284]	; (8001808 <main+0x36c>)
  hltdc.Init.Backcolor.Blue = 0;
 80016ec:	86b4      	strh	r4, [r6, #52]	; 0x34
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 80016ee:	e9c6 3400 	strd	r3, r4, [r6]
  hltdc.Init.HorizontalSync = 9;
 80016f2:	2309      	movs	r3, #9
  hltdc.Init.AccumulatedVBP = 3;
 80016f4:	f04f 0c1d 	mov.w	ip, #29
  hltdc.Init.VerticalSync = 1;
 80016f8:	e9c6 3505 	strd	r3, r5, [r6, #20]
  hltdc.Init.AccumulatedVBP = 3;
 80016fc:	2303      	movs	r3, #3
 80016fe:	e9c6 c307 	strd	ip, r3, [r6, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 8001702:	f240 1e0d 	movw	lr, #269	; 0x10d
 8001706:	f240 1343 	movw	r3, #323	; 0x143
 800170a:	e9c6 e309 	strd	lr, r3, [r6, #36]	; 0x24
  hltdc.Init.TotalHeigh = 327;
 800170e:	f240 1917 	movw	r9, #279	; 0x117
 8001712:	f240 1347 	movw	r3, #327	; 0x147
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001716:	4630      	mov	r0, r6
  hltdc.Init.TotalHeigh = 327;
 8001718:	e9c6 930b 	strd	r9, r3, [r6, #44]	; 0x2c
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 800171c:	e9c6 4402 	strd	r4, r4, [r6, #8]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 8001720:	6134      	str	r4, [r6, #16]
  hltdc.Init.Backcolor.Red = 0;
 8001722:	f886 4036 	strb.w	r4, [r6, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001726:	f005 fc75 	bl	8007014 <HAL_LTDC_Init>
  pLayerCfg.Alpha = 255;
 800172a:	21ff      	movs	r1, #255	; 0xff
  pLayerCfg.WindowX1 = 240;
 800172c:	22f0      	movs	r2, #240	; 0xf0
  pLayerCfg.Alpha0 = 0;
 800172e:	e9cd 1412 	strd	r1, r4, [sp, #72]	; 0x48
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8001732:	f44f 6b80 	mov.w	fp, #1024	; 0x400
 8001736:	2105      	movs	r1, #5
  pLayerCfg.WindowY1 = 320;
 8001738:	f44f 73a0 	mov.w	r3, #320	; 0x140
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 800173c:	e9cd b114 	strd	fp, r1, [sp, #80]	; 0x50
  pLayerCfg.WindowY0 = 0;
 8001740:	e9cd 240e 	strd	r2, r4, [sp, #56]	; 0x38
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001744:	a90d      	add	r1, sp, #52	; 0x34
  pLayerCfg.ImageWidth = 240;
 8001746:	e9cd 4216 	strd	r4, r2, [sp, #88]	; 0x58
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 800174a:	4630      	mov	r0, r6
 800174c:	4622      	mov	r2, r4
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 800174e:	e9cd 3710 	strd	r3, r7, [sp, #64]	; 0x40
  LcdDrv = &ili9341_drv;
 8001752:	4e2e      	ldr	r6, [pc, #184]	; (800180c <main+0x370>)
  pLayerCfg.ImageHeight = 320;
 8001754:	9318      	str	r3, [sp, #96]	; 0x60
  pLayerCfg.WindowX0 = 0;
 8001756:	940d      	str	r4, [sp, #52]	; 0x34
  pLayerCfg.Backcolor.Blue = 0;
 8001758:	f8ad 4064 	strh.w	r4, [sp, #100]	; 0x64
  pLayerCfg.Backcolor.Red = 0;
 800175c:	f88d 4066 	strb.w	r4, [sp, #102]	; 0x66
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001760:	f005 fd23 	bl	80071aa <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 8001764:	4b2a      	ldr	r3, [pc, #168]	; (8001810 <main+0x374>)
 8001766:	6033      	str	r3, [r6, #0]
  LcdDrv->Init();
 8001768:	681b      	ldr	r3, [r3, #0]
  hdac.Instance = DAC;
 800176a:	f8df 90bc 	ldr.w	r9, [pc, #188]	; 8001828 <main+0x38c>
  hadc2.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 800176e:	f8df b0bc 	ldr.w	fp, [pc, #188]	; 800182c <main+0x390>
  LcdDrv->Init();
 8001772:	4798      	blx	r3
  LcdDrv->DisplayOff();
 8001774:	6833      	ldr	r3, [r6, #0]
  hdma2d.Instance = DMA2D;
 8001776:	4e27      	ldr	r6, [pc, #156]	; (8001814 <main+0x378>)
  LcdDrv->DisplayOff();
 8001778:	68db      	ldr	r3, [r3, #12]
 800177a:	4798      	blx	r3
  hdma2d.Instance = DMA2D;
 800177c:	4b26      	ldr	r3, [pc, #152]	; (8001818 <main+0x37c>)
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
 800177e:	e9c6 470a 	strd	r4, r7, [r6, #40]	; 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 8001782:	e9c6 440c 	strd	r4, r4, [r6, #48]	; 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001786:	4630      	mov	r0, r6
  hdma2d.Init.Mode = DMA2D_M2M;
 8001788:	e9c6 3400 	strd	r3, r4, [r6]
  hdma2d.Init.OutputOffset = 0;
 800178c:	e9c6 7402 	strd	r7, r4, [r6, #8]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001790:	f004 fd75 	bl	800627e <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 8001794:	4629      	mov	r1, r5
 8001796:	4630      	mov	r0, r6
 8001798:	f004 fe2a 	bl	80063f0 <HAL_DMA2D_ConfigLayer>
  htim7.Instance = TIM7;
 800179c:	4e1f      	ldr	r6, [pc, #124]	; (800181c <main+0x380>)
  htim7.Init.Prescaler = 8400-1;
 800179e:	4a20      	ldr	r2, [pc, #128]	; (8001820 <main+0x384>)
  htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 80017a0:	60b4      	str	r4, [r6, #8]
  htim7.Init.Prescaler = 8400-1;
 80017a2:	f242 03cf 	movw	r3, #8399	; 0x20cf
 80017a6:	e9c6 2300 	strd	r2, r3, [r6]
  if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 80017aa:	4630      	mov	r0, r6
  htim7.Init.Period = 1000-1;
 80017ac:	f240 33e7 	movw	r3, #999	; 0x3e7
 80017b0:	60f3      	str	r3, [r6, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80017b2:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80017b6:	61b4      	str	r4, [r6, #24]
  if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 80017b8:	f006 fd92 	bl	80082e0 <HAL_TIM_Base_Init>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 80017bc:	a90d      	add	r1, sp, #52	; 0x34
 80017be:	4630      	mov	r0, r6
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80017c0:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 80017c4:	f006 fda6 	bl	8008314 <HAL_TIMEx_MasterConfigSynchronization>
  hdac.Instance = DAC;
 80017c8:	4b16      	ldr	r3, [pc, #88]	; (8001824 <main+0x388>)
 80017ca:	f8c9 3000 	str.w	r3, [r9]
 80017ce:	e02f      	b.n	8001830 <main+0x394>
 80017d0:	40023800 	.word	0x40023800
 80017d4:	40020800 	.word	0x40020800
 80017d8:	20003a4c 	.word	0x20003a4c
 80017dc:	40020400 	.word	0x40020400
 80017e0:	40020c00 	.word	0x40020c00
 80017e4:	200039f0 	.word	0x200039f0
 80017e8:	40023000 	.word	0x40023000
 80017ec:	40005c00 	.word	0x40005c00
 80017f0:	000186a0 	.word	0x000186a0
 80017f4:	20003b7c 	.word	0x20003b7c
 80017f8:	40015000 	.word	0x40015000
 80017fc:	20003b48 	.word	0x20003b48
 8001800:	a0000140 	.word	0xa0000140
 8001804:	20003aa0 	.word	0x20003aa0
 8001808:	40016800 	.word	0x40016800
 800180c:	20003958 	.word	0x20003958
 8001810:	2000001c 	.word	0x2000001c
 8001814:	20003a0c 	.word	0x20003a0c
 8001818:	4002b000 	.word	0x4002b000
 800181c:	20003bd4 	.word	0x20003bd4
 8001820:	40001400 	.word	0x40001400
 8001824:	40007400 	.word	0x40007400
 8001828:	200039f8 	.word	0x200039f8
 800182c:	0f000001 	.word	0x0f000001
  if (HAL_DAC_Init(&hdac) != HAL_OK)
 8001830:	4648      	mov	r0, r9
  DAC_ChannelConfTypeDef sConfig = {0};
 8001832:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  if (HAL_DAC_Init(&hdac) != HAL_OK)
 8001836:	f004 fcaf 	bl	8006198 <HAL_DAC_Init>
  if (HAL_DAC_ConfigChannel(&hdac, &sConfig, DAC_CHANNEL_2) != HAL_OK)
 800183a:	4642      	mov	r2, r8
 800183c:	a90d      	add	r1, sp, #52	; 0x34
 800183e:	4648      	mov	r0, r9
  sConfig.DAC_OutputBuffer = DAC_OUTPUTBUFFER_ENABLE;
 8001840:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  if (HAL_DAC_ConfigChannel(&hdac, &sConfig, DAC_CHANNEL_2) != HAL_OK)
 8001844:	f004 fce8 	bl	8006218 <HAL_DAC_ConfigChannel>
  ADC_ChannelConfTypeDef sConfig = {0};
 8001848:	4642      	mov	r2, r8
 800184a:	4621      	mov	r1, r4
 800184c:	a80d      	add	r0, sp, #52	; 0x34
 800184e:	f01f f985 	bl	8020b5c <memset>
  hadc2.Instance = ADC2;
 8001852:	4a33      	ldr	r2, [pc, #204]	; (8001920 <main+0x484>)
  hadc2.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 8001854:	4933      	ldr	r1, [pc, #204]	; (8001924 <main+0x488>)
  hadc2.Init.Resolution = ADC_RESOLUTION_12B;
 8001856:	6094      	str	r4, [r2, #8]
  hadc2.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 8001858:	f44f 3380 	mov.w	r3, #65536	; 0x10000
  if (HAL_ADC_Init(&hadc2) != HAL_OK)
 800185c:	4610      	mov	r0, r2
  hadc2.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 800185e:	e9c2 1300 	strd	r1, r3, [r2]
  hadc2.Init.ScanConvMode = DISABLE;
 8001862:	6114      	str	r4, [r2, #16]
  hadc2.Init.ContinuousConvMode = ENABLE;
 8001864:	7615      	strb	r5, [r2, #24]
  hadc2.Init.DiscontinuousConvMode = DISABLE;
 8001866:	f882 4020 	strb.w	r4, [r2, #32]
  hadc2.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 800186a:	62d4      	str	r4, [r2, #44]	; 0x2c
  hadc2.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 800186c:	f8c2 b028 	str.w	fp, [r2, #40]	; 0x28
  hadc2.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8001870:	60d4      	str	r4, [r2, #12]
  hadc2.Init.NbrOfConversion = 1;
 8001872:	61d5      	str	r5, [r2, #28]
  hadc2.Init.DMAContinuousRequests = DISABLE;
 8001874:	f882 4030 	strb.w	r4, [r2, #48]	; 0x30
  hadc2.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8001878:	6155      	str	r5, [r2, #20]
  if (HAL_ADC_Init(&hadc2) != HAL_OK)
 800187a:	f004 fa71 	bl	8005d60 <HAL_ADC_Init>
  if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 800187e:	4a28      	ldr	r2, [pc, #160]	; (8001920 <main+0x484>)
  sConfig.SamplingTime = ADC_SAMPLETIME_480CYCLES;
 8001880:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
  if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 8001884:	a90d      	add	r1, sp, #52	; 0x34
 8001886:	4610      	mov	r0, r2
  sConfig.Rank = 1;
 8001888:	e9cd 750d 	strd	r7, r5, [sp, #52]	; 0x34
  hadc3.Instance = ADC3;
 800188c:	4f26      	ldr	r7, [pc, #152]	; (8001928 <main+0x48c>)
  if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 800188e:	f004 fb85 	bl	8005f9c <HAL_ADC_ConfigChannel>
  ADC_ChannelConfTypeDef sConfig = {0};
 8001892:	4621      	mov	r1, r4
 8001894:	4642      	mov	r2, r8
 8001896:	a80d      	add	r0, sp, #52	; 0x34
 8001898:	f01f f960 	bl	8020b5c <memset>
  hadc3.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 800189c:	4a23      	ldr	r2, [pc, #140]	; (800192c <main+0x490>)
  hadc3.Init.Resolution = ADC_RESOLUTION_12B;
 800189e:	60bc      	str	r4, [r7, #8]
  hadc3.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 80018a0:	f44f 3380 	mov.w	r3, #65536	; 0x10000
  if (HAL_ADC_Init(&hadc3) != HAL_OK)
 80018a4:	4638      	mov	r0, r7
  hadc3.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 80018a6:	e9c7 2300 	strd	r2, r3, [r7]
  hadc3.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 80018aa:	e9c7 b40a 	strd	fp, r4, [r7, #40]	; 0x28
  hadc3.Init.ScanConvMode = DISABLE;
 80018ae:	613c      	str	r4, [r7, #16]
  hadc3.Init.ContinuousConvMode = ENABLE;
 80018b0:	763d      	strb	r5, [r7, #24]
  hadc3.Init.DiscontinuousConvMode = DISABLE;
 80018b2:	f887 4020 	strb.w	r4, [r7, #32]
  hadc3.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 80018b6:	60fc      	str	r4, [r7, #12]
  hadc3.Init.NbrOfConversion = 1;
 80018b8:	61fd      	str	r5, [r7, #28]
  hadc3.Init.DMAContinuousRequests = DISABLE;
 80018ba:	f887 4030 	strb.w	r4, [r7, #48]	; 0x30
  hadc3.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 80018be:	617d      	str	r5, [r7, #20]
  if (HAL_ADC_Init(&hadc3) != HAL_OK)
 80018c0:	f004 fa4e 	bl	8005d60 <HAL_ADC_Init>
  if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 80018c4:	a90d      	add	r1, sp, #52	; 0x34
 80018c6:	4638      	mov	r0, r7
  sConfig.Rank = 1;
 80018c8:	e9cd 550d 	strd	r5, r5, [sp, #52]	; 0x34
  sConfig.SamplingTime = ADC_SAMPLETIME_480CYCLES;
 80018cc:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
  if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 80018d0:	f004 fb64 	bl	8005f9c <HAL_ADC_ConfigChannel>
  MX_TouchGFX_Init();
 80018d4:	f7fe fe87 	bl	80005e6 <MX_TouchGFX_Init>
  ladowarka.VccVoltage=3.3f;
 80018d8:	4b15      	ldr	r3, [pc, #84]	; (8001930 <main+0x494>)
 80018da:	4a16      	ldr	r2, [pc, #88]	; (8001934 <main+0x498>)
 80018dc:	601a      	str	r2, [r3, #0]
HAL_TIM_Base_Start_IT(&htim7); //uruchomienie timera 7 (przerwanie co 1 sek)
 80018de:	4630      	mov	r0, r6
 80018e0:	f006 fbe1 	bl	80080a6 <HAL_TIM_Base_Start_IT>
HAL_DAC_Start(&hdac, DAC_CHANNEL_2);
 80018e4:	4641      	mov	r1, r8
 80018e6:	4648      	mov	r0, r9
 80018e8:	f004 fc69 	bl	80061be <HAL_DAC_Start>
HAL_DAC_SetValue(&hdac, DAC_CHANNEL_2, DAC_ALIGN_12B_R, 4095); //ustaw max napiecie na ADC, zeby nie plynal zaden prad !ZMIENIC
 80018ec:	f640 73ff 	movw	r3, #4095	; 0xfff
 80018f0:	4622      	mov	r2, r4
 80018f2:	4641      	mov	r1, r8
 80018f4:	4648      	mov	r0, r9
 80018f6:	f004 fcb0 	bl	800625a <HAL_DAC_SetValue>
  osKernelInitialize();
 80018fa:	f006 fdeb 	bl	80084d4 <osKernelInitialize>
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 80018fe:	4a0e      	ldr	r2, [pc, #56]	; (8001938 <main+0x49c>)
 8001900:	480e      	ldr	r0, [pc, #56]	; (800193c <main+0x4a0>)
 8001902:	4621      	mov	r1, r4
 8001904:	f006 fe20 	bl	8008548 <osThreadNew>
 8001908:	4b0d      	ldr	r3, [pc, #52]	; (8001940 <main+0x4a4>)
  TaskDwaHandle = osThreadNew(ZadanieDwa, NULL, &TaskDwa_attributes);
 800190a:	4a0e      	ldr	r2, [pc, #56]	; (8001944 <main+0x4a8>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 800190c:	6018      	str	r0, [r3, #0]
  TaskDwaHandle = osThreadNew(ZadanieDwa, NULL, &TaskDwa_attributes);
 800190e:	4621      	mov	r1, r4
 8001910:	480d      	ldr	r0, [pc, #52]	; (8001948 <main+0x4ac>)
 8001912:	f006 fe19 	bl	8008548 <osThreadNew>
 8001916:	4b0d      	ldr	r3, [pc, #52]	; (800194c <main+0x4b0>)
 8001918:	6018      	str	r0, [r3, #0]
  osKernelStart();
 800191a:	f006 fdf5 	bl	8008508 <osKernelStart>
  while (1)
 800191e:	e7fe      	b.n	800191e <main+0x482>
 8001920:	20003960 	.word	0x20003960
 8001924:	40012100 	.word	0x40012100
 8001928:	200039a8 	.word	0x200039a8
 800192c:	40012200 	.word	0x40012200
 8001930:	2000469c 	.word	0x2000469c
 8001934:	40533333 	.word	0x40533333
 8001938:	080220b4 	.word	0x080220b4
 800193c:	080005eb 	.word	0x080005eb
 8001940:	20003954 	.word	0x20003954
 8001944:	080220d8 	.word	0x080220d8
 8001948:	080011ed 	.word	0x080011ed
 800194c:	2000395c 	.word	0x2000395c

08001950 <IOE_Init>:
 8001950:	4770      	bx	lr

08001952 <IOE_ITConfig>:
 8001952:	4770      	bx	lr

08001954 <IOE_Write>:
{
 8001954:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout); 
 8001956:	4b09      	ldr	r3, [pc, #36]	; (800197c <IOE_Write+0x28>)
 8001958:	f88d 2017 	strb.w	r2, [sp, #23]
 800195c:	681b      	ldr	r3, [r3, #0]
 800195e:	9302      	str	r3, [sp, #8]
 8001960:	f10d 0217 	add.w	r2, sp, #23
 8001964:	2301      	movs	r3, #1
 8001966:	9200      	str	r2, [sp, #0]
 8001968:	9301      	str	r3, [sp, #4]
 800196a:	460a      	mov	r2, r1
 800196c:	4601      	mov	r1, r0
 800196e:	4804      	ldr	r0, [pc, #16]	; (8001980 <IOE_Write+0x2c>)
 8001970:	f005 f8f4 	bl	8006b5c <HAL_I2C_Mem_Write>
}
 8001974:	b007      	add	sp, #28
 8001976:	f85d fb04 	ldr.w	pc, [sp], #4
 800197a:	bf00      	nop
 800197c:	2000000c 	.word	0x2000000c
 8001980:	20003a4c 	.word	0x20003a4c

08001984 <IOE_Read>:
{
 8001984:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  uint8_t value = 0;
 8001986:	2300      	movs	r3, #0
 8001988:	f88d 3017 	strb.w	r3, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 800198c:	4b08      	ldr	r3, [pc, #32]	; (80019b0 <IOE_Read+0x2c>)
 800198e:	681b      	ldr	r3, [r3, #0]
 8001990:	9302      	str	r3, [sp, #8]
{
 8001992:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001994:	2301      	movs	r3, #1
 8001996:	f10d 0117 	add.w	r1, sp, #23
 800199a:	9100      	str	r1, [sp, #0]
 800199c:	9301      	str	r3, [sp, #4]
 800199e:	4601      	mov	r1, r0
 80019a0:	4804      	ldr	r0, [pc, #16]	; (80019b4 <IOE_Read+0x30>)
 80019a2:	f005 f96b 	bl	8006c7c <HAL_I2C_Mem_Read>
}
 80019a6:	f89d 0017 	ldrb.w	r0, [sp, #23]
 80019aa:	b007      	add	sp, #28
 80019ac:	f85d fb04 	ldr.w	pc, [sp], #4
 80019b0:	2000000c 	.word	0x2000000c
 80019b4:	20003a4c 	.word	0x20003a4c

080019b8 <IOE_ReadMultiple>:
{
 80019b8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 80019ba:	4c08      	ldr	r4, [pc, #32]	; (80019dc <IOE_ReadMultiple+0x24>)
 80019bc:	6824      	ldr	r4, [r4, #0]
 80019be:	9200      	str	r2, [sp, #0]
 80019c0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80019c4:	460a      	mov	r2, r1
 80019c6:	2301      	movs	r3, #1
 80019c8:	4601      	mov	r1, r0
 80019ca:	4805      	ldr	r0, [pc, #20]	; (80019e0 <IOE_ReadMultiple+0x28>)
 80019cc:	f005 f956 	bl	8006c7c <HAL_I2C_Mem_Read>
}
 80019d0:	3800      	subs	r0, #0
 80019d2:	bf18      	it	ne
 80019d4:	2001      	movne	r0, #1
 80019d6:	b004      	add	sp, #16
 80019d8:	bd10      	pop	{r4, pc}
 80019da:	bf00      	nop
 80019dc:	2000000c 	.word	0x2000000c
 80019e0:	20003a4c 	.word	0x20003a4c

080019e4 <IOE_Delay>:
 80019e4:	f004 b9a8 	b.w	8005d38 <HAL_Delay>

080019e8 <LCD_IO_Init>:
{
 80019e8:	b508      	push	{r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80019ea:	4806      	ldr	r0, [pc, #24]	; (8001a04 <LCD_IO_Init+0x1c>)
 80019ec:	2200      	movs	r2, #0
 80019ee:	2104      	movs	r1, #4
 80019f0:	f004 fe2a 	bl	8006648 <HAL_GPIO_WritePin>
}
 80019f4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80019f8:	4802      	ldr	r0, [pc, #8]	; (8001a04 <LCD_IO_Init+0x1c>)
 80019fa:	2201      	movs	r2, #1
 80019fc:	2104      	movs	r1, #4
 80019fe:	f004 be23 	b.w	8006648 <HAL_GPIO_WritePin>
 8001a02:	bf00      	nop
 8001a04:	40020800 	.word	0x40020800

08001a08 <LCD_IO_WriteData>:
{
 8001a08:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a0a:	4d0b      	ldr	r5, [pc, #44]	; (8001a38 <LCD_IO_WriteData+0x30>)
{
 8001a0c:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001a0e:	2201      	movs	r2, #1
 8001a10:	480a      	ldr	r0, [pc, #40]	; (8001a3c <LCD_IO_WriteData+0x34>)
 8001a12:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001a16:	f004 fe17 	bl	8006648 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a1a:	2200      	movs	r2, #0
 8001a1c:	2104      	movs	r1, #4
 8001a1e:	4628      	mov	r0, r5
 8001a20:	f004 fe12 	bl	8006648 <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 8001a24:	4620      	mov	r0, r4
 8001a26:	f7ff fba7 	bl	8001178 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001a2a:	4628      	mov	r0, r5
 8001a2c:	2201      	movs	r2, #1
}
 8001a2e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001a32:	2104      	movs	r1, #4
 8001a34:	f004 be08 	b.w	8006648 <HAL_GPIO_WritePin>
 8001a38:	40020800 	.word	0x40020800
 8001a3c:	40020c00 	.word	0x40020c00

08001a40 <LCD_IO_WriteReg>:
{
 8001a40:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a42:	4d0b      	ldr	r5, [pc, #44]	; (8001a70 <LCD_IO_WriteReg+0x30>)
{
 8001a44:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001a46:	2200      	movs	r2, #0
 8001a48:	480a      	ldr	r0, [pc, #40]	; (8001a74 <LCD_IO_WriteReg+0x34>)
 8001a4a:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001a4e:	f004 fdfb 	bl	8006648 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a52:	2200      	movs	r2, #0
 8001a54:	2104      	movs	r1, #4
 8001a56:	4628      	mov	r0, r5
 8001a58:	f004 fdf6 	bl	8006648 <HAL_GPIO_WritePin>
  SPI5_Write(Reg);
 8001a5c:	4620      	mov	r0, r4
 8001a5e:	f7ff fb8b 	bl	8001178 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001a62:	4628      	mov	r0, r5
 8001a64:	2201      	movs	r2, #1
}
 8001a66:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001a6a:	2104      	movs	r1, #4
 8001a6c:	f004 bdec 	b.w	8006648 <HAL_GPIO_WritePin>
 8001a70:	40020800 	.word	0x40020800
 8001a74:	40020c00 	.word	0x40020c00

08001a78 <LCD_IO_ReadData>:
{
 8001a78:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a7a:	4e14      	ldr	r6, [pc, #80]	; (8001acc <LCD_IO_ReadData+0x54>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001a7c:	4f14      	ldr	r7, [pc, #80]	; (8001ad0 <LCD_IO_ReadData+0x58>)
{
 8001a7e:	4605      	mov	r5, r0
 8001a80:	460c      	mov	r4, r1
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a82:	4630      	mov	r0, r6
 8001a84:	2200      	movs	r2, #0
 8001a86:	2104      	movs	r1, #4
 8001a88:	f004 fdde 	bl	8006648 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001a8c:	2200      	movs	r2, #0
 8001a8e:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001a92:	4638      	mov	r0, r7
 8001a94:	f004 fdd8 	bl	8006648 <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 8001a98:	4628      	mov	r0, r5
 8001a9a:	f7ff fb6d 	bl	8001178 <SPI5_Write>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 8001a9e:	4b0d      	ldr	r3, [pc, #52]	; (8001ad4 <LCD_IO_ReadData+0x5c>)
 8001aa0:	480d      	ldr	r0, [pc, #52]	; (8001ad8 <LCD_IO_ReadData+0x60>)
 8001aa2:	681b      	ldr	r3, [r3, #0]
 8001aa4:	4622      	mov	r2, r4
 8001aa6:	a901      	add	r1, sp, #4
 8001aa8:	f006 fa5b 	bl	8007f62 <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001aac:	4638      	mov	r0, r7
 8001aae:	2201      	movs	r2, #1
 8001ab0:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  return readvalue;
 8001ab4:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001ab6:	f004 fdc7 	bl	8006648 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001aba:	4630      	mov	r0, r6
 8001abc:	2201      	movs	r2, #1
 8001abe:	2104      	movs	r1, #4
 8001ac0:	f004 fdc2 	bl	8006648 <HAL_GPIO_WritePin>
}
 8001ac4:	4620      	mov	r0, r4
 8001ac6:	b003      	add	sp, #12
 8001ac8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001aca:	bf00      	nop
 8001acc:	40020800 	.word	0x40020800
 8001ad0:	40020c00 	.word	0x40020c00
 8001ad4:	20000010 	.word	0x20000010
 8001ad8:	20003b7c 	.word	0x20003b7c

08001adc <LCD_Delay>:
  HAL_Delay(Delay);
 8001adc:	f004 b92c 	b.w	8005d38 <HAL_Delay>

08001ae0 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM8) {
 8001ae0:	6802      	ldr	r2, [r0, #0]
 8001ae2:	4b08      	ldr	r3, [pc, #32]	; (8001b04 <HAL_TIM_PeriodElapsedCallback+0x24>)
 8001ae4:	429a      	cmp	r2, r3
{
 8001ae6:	b510      	push	{r4, lr}
 8001ae8:	4604      	mov	r4, r0
  if (htim->Instance == TIM8) {
 8001aea:	d101      	bne.n	8001af0 <HAL_TIM_PeriodElapsedCallback+0x10>
    HAL_IncTick();
 8001aec:	f004 f912 	bl	8005d14 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */
  if (htim->Instance == TIM7){ //timer co 100ms
 8001af0:	6822      	ldr	r2, [r4, #0]
 8001af2:	4b05      	ldr	r3, [pc, #20]	; (8001b08 <HAL_TIM_PeriodElapsedCallback+0x28>)
 8001af4:	429a      	cmp	r2, r3
	  ladowarka.Minelo100ms=1;
 8001af6:	bf02      	ittt	eq
 8001af8:	4b04      	ldreq	r3, [pc, #16]	; (8001b0c <HAL_TIM_PeriodElapsedCallback+0x2c>)
 8001afa:	2201      	moveq	r2, #1
 8001afc:	f8c3 2a6c 	streq.w	r2, [r3, #2668]	; 0xa6c
  }

  /* USER CODE END Callback 1 */
}
 8001b00:	bd10      	pop	{r4, pc}
 8001b02:	bf00      	nop
 8001b04:	40010400 	.word	0x40010400
 8001b08:	40001400 	.word	0x40001400
 8001b0c:	20003c14 	.word	0x20003c14

08001b10 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001b10:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001b12:	4b0e      	ldr	r3, [pc, #56]	; (8001b4c <HAL_MspInit+0x3c>)
 8001b14:	2200      	movs	r2, #0
 8001b16:	9200      	str	r2, [sp, #0]
 8001b18:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001b1a:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 8001b1e:	6459      	str	r1, [r3, #68]	; 0x44
 8001b20:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001b22:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 8001b26:	9100      	str	r1, [sp, #0]
 8001b28:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001b2a:	9201      	str	r2, [sp, #4]
 8001b2c:	6c19      	ldr	r1, [r3, #64]	; 0x40
 8001b2e:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 8001b32:	6419      	str	r1, [r3, #64]	; 0x40
 8001b34:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001b36:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001b3a:	9301      	str	r3, [sp, #4]
 8001b3c:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001b3e:	210f      	movs	r1, #15
 8001b40:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001b44:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001b46:	f004 bad7 	b.w	80060f8 <HAL_NVIC_SetPriority>
 8001b4a:	bf00      	nop
 8001b4c:	40023800 	.word	0x40023800

08001b50 <HAL_ADC_MspInit>:
* This function configures the hardware resources used in this example
* @param hadc: ADC handle pointer
* @retval None
*/
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 8001b50:	b510      	push	{r4, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001b52:	2214      	movs	r2, #20
{
 8001b54:	b08a      	sub	sp, #40	; 0x28
 8001b56:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001b58:	2100      	movs	r1, #0
 8001b5a:	eb0d 0002 	add.w	r0, sp, r2
 8001b5e:	f01e fffd 	bl	8020b5c <memset>
  if(hadc->Instance==ADC2)
 8001b62:	6823      	ldr	r3, [r4, #0]
 8001b64:	4a1e      	ldr	r2, [pc, #120]	; (8001be0 <HAL_ADC_MspInit+0x90>)
 8001b66:	4293      	cmp	r3, r2
 8001b68:	d11f      	bne.n	8001baa <HAL_ADC_MspInit+0x5a>
  {
  /* USER CODE BEGIN ADC2_MspInit 0 */

  /* USER CODE END ADC2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_ADC2_CLK_ENABLE();
 8001b6a:	4b1e      	ldr	r3, [pc, #120]	; (8001be4 <HAL_ADC_MspInit+0x94>)
 8001b6c:	2100      	movs	r1, #0
 8001b6e:	9101      	str	r1, [sp, #4]
 8001b70:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001b72:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8001b76:	645a      	str	r2, [r3, #68]	; 0x44
 8001b78:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001b7a:	f402 7200 	and.w	r2, r2, #512	; 0x200
 8001b7e:	9201      	str	r2, [sp, #4]
 8001b80:	9a01      	ldr	r2, [sp, #4]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001b82:	9102      	str	r1, [sp, #8]
 8001b84:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001b86:	f042 0201 	orr.w	r2, r2, #1
 8001b8a:	631a      	str	r2, [r3, #48]	; 0x30
 8001b8c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001b8e:	f003 0301 	and.w	r3, r3, #1
 8001b92:	9302      	str	r3, [sp, #8]
 8001b94:	9b02      	ldr	r3, [sp, #8]
    /**ADC2 GPIO Configuration
    PA2     ------> ADC2_IN2
    */
    GPIO_InitStruct.Pin = GPIO_PIN_2;
 8001b96:	2304      	movs	r3, #4

    __HAL_RCC_GPIOA_CLK_ENABLE();
    /**ADC3 GPIO Configuration
    PA1     ------> ADC3_IN1
    */
    GPIO_InitStruct.Pin = GPIO_PIN_1;
 8001b98:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001b9a:	4813      	ldr	r0, [pc, #76]	; (8001be8 <HAL_ADC_MspInit+0x98>)
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001b9c:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001b9e:	a905      	add	r1, sp, #20
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001ba0:	9306      	str	r3, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001ba2:	f004 fc69 	bl	8006478 <HAL_GPIO_Init>
  /* USER CODE BEGIN ADC3_MspInit 1 */

  /* USER CODE END ADC3_MspInit 1 */
  }

}
 8001ba6:	b00a      	add	sp, #40	; 0x28
 8001ba8:	bd10      	pop	{r4, pc}
  else if(hadc->Instance==ADC3)
 8001baa:	4a10      	ldr	r2, [pc, #64]	; (8001bec <HAL_ADC_MspInit+0x9c>)
 8001bac:	4293      	cmp	r3, r2
 8001bae:	d1fa      	bne.n	8001ba6 <HAL_ADC_MspInit+0x56>
    __HAL_RCC_ADC3_CLK_ENABLE();
 8001bb0:	4b0c      	ldr	r3, [pc, #48]	; (8001be4 <HAL_ADC_MspInit+0x94>)
 8001bb2:	2100      	movs	r1, #0
 8001bb4:	9103      	str	r1, [sp, #12]
 8001bb6:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001bb8:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8001bbc:	645a      	str	r2, [r3, #68]	; 0x44
 8001bbe:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001bc0:	f402 6280 	and.w	r2, r2, #1024	; 0x400
 8001bc4:	9203      	str	r2, [sp, #12]
 8001bc6:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001bc8:	9104      	str	r1, [sp, #16]
 8001bca:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001bcc:	f042 0201 	orr.w	r2, r2, #1
 8001bd0:	631a      	str	r2, [r3, #48]	; 0x30
 8001bd2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001bd4:	f003 0301 	and.w	r3, r3, #1
 8001bd8:	9304      	str	r3, [sp, #16]
 8001bda:	9b04      	ldr	r3, [sp, #16]
    GPIO_InitStruct.Pin = GPIO_PIN_1;
 8001bdc:	2302      	movs	r3, #2
 8001bde:	e7db      	b.n	8001b98 <HAL_ADC_MspInit+0x48>
 8001be0:	40012100 	.word	0x40012100
 8001be4:	40023800 	.word	0x40023800
 8001be8:	40020000 	.word	0x40020000
 8001bec:	40012200 	.word	0x40012200

08001bf0 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8001bf0:	6802      	ldr	r2, [r0, #0]
 8001bf2:	4b09      	ldr	r3, [pc, #36]	; (8001c18 <HAL_CRC_MspInit+0x28>)
 8001bf4:	429a      	cmp	r2, r3
{
 8001bf6:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 8001bf8:	d10b      	bne.n	8001c12 <HAL_CRC_MspInit+0x22>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8001bfa:	2300      	movs	r3, #0
 8001bfc:	9301      	str	r3, [sp, #4]
 8001bfe:	4b07      	ldr	r3, [pc, #28]	; (8001c1c <HAL_CRC_MspInit+0x2c>)
 8001c00:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c02:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8001c06:	631a      	str	r2, [r3, #48]	; 0x30
 8001c08:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001c0a:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001c0e:	9301      	str	r3, [sp, #4]
 8001c10:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8001c12:	b002      	add	sp, #8
 8001c14:	4770      	bx	lr
 8001c16:	bf00      	nop
 8001c18:	40023000 	.word	0x40023000
 8001c1c:	40023800 	.word	0x40023800

08001c20 <HAL_DAC_MspInit>:
* This function configures the hardware resources used in this example
* @param hdac: DAC handle pointer
* @retval None
*/
void HAL_DAC_MspInit(DAC_HandleTypeDef* hdac)
{
 8001c20:	b510      	push	{r4, lr}
 8001c22:	4604      	mov	r4, r0
 8001c24:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001c26:	2214      	movs	r2, #20
 8001c28:	2100      	movs	r1, #0
 8001c2a:	a803      	add	r0, sp, #12
 8001c2c:	f01e ff96 	bl	8020b5c <memset>
  if(hdac->Instance==DAC)
 8001c30:	6822      	ldr	r2, [r4, #0]
 8001c32:	4b12      	ldr	r3, [pc, #72]	; (8001c7c <HAL_DAC_MspInit+0x5c>)
 8001c34:	429a      	cmp	r2, r3
 8001c36:	d11e      	bne.n	8001c76 <HAL_DAC_MspInit+0x56>
  {
  /* USER CODE BEGIN DAC_MspInit 0 */

  /* USER CODE END DAC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DAC_CLK_ENABLE();
 8001c38:	f503 33e2 	add.w	r3, r3, #115712	; 0x1c400
 8001c3c:	2100      	movs	r1, #0
 8001c3e:	9101      	str	r1, [sp, #4]
 8001c40:	6c1a      	ldr	r2, [r3, #64]	; 0x40
    PA5     ------> DAC_OUT2
    */
    GPIO_InitStruct.Pin = GPIO_PIN_5;
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001c42:	480f      	ldr	r0, [pc, #60]	; (8001c80 <HAL_DAC_MspInit+0x60>)
    __HAL_RCC_DAC_CLK_ENABLE();
 8001c44:	f042 5200 	orr.w	r2, r2, #536870912	; 0x20000000
 8001c48:	641a      	str	r2, [r3, #64]	; 0x40
 8001c4a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001c4c:	f002 5200 	and.w	r2, r2, #536870912	; 0x20000000
 8001c50:	9201      	str	r2, [sp, #4]
 8001c52:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001c54:	9102      	str	r1, [sp, #8]
 8001c56:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c58:	f042 0201 	orr.w	r2, r2, #1
 8001c5c:	631a      	str	r2, [r3, #48]	; 0x30
 8001c5e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001c60:	f003 0301 	and.w	r3, r3, #1
 8001c64:	9302      	str	r3, [sp, #8]
 8001c66:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001c68:	2220      	movs	r2, #32
 8001c6a:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001c6c:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001c6e:	e9cd 2303 	strd	r2, r3, [sp, #12]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001c72:	f004 fc01 	bl	8006478 <HAL_GPIO_Init>
  /* USER CODE BEGIN DAC_MspInit 1 */

  /* USER CODE END DAC_MspInit 1 */
  }

}
 8001c76:	b008      	add	sp, #32
 8001c78:	bd10      	pop	{r4, pc}
 8001c7a:	bf00      	nop
 8001c7c:	40007400 	.word	0x40007400
 8001c80:	40020000 	.word	0x40020000

08001c84 <HAL_DMA2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 8001c84:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 8001c86:	4b0f      	ldr	r3, [pc, #60]	; (8001cc4 <HAL_DMA2D_MspInit+0x40>)
 8001c88:	6802      	ldr	r2, [r0, #0]
 8001c8a:	429a      	cmp	r2, r3
 8001c8c:	d116      	bne.n	8001cbc <HAL_DMA2D_MspInit+0x38>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001c8e:	2200      	movs	r2, #0
 8001c90:	f5a3 43f0 	sub.w	r3, r3, #30720	; 0x7800
 8001c94:	9201      	str	r2, [sp, #4]
 8001c96:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001c98:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8001c9c:	6319      	str	r1, [r3, #48]	; 0x30
 8001c9e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001ca0:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001ca4:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001ca6:	2105      	movs	r1, #5
 8001ca8:	205a      	movs	r0, #90	; 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001caa:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001cac:	f004 fa24 	bl	80060f8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001cb0:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 8001cb2:	b003      	add	sp, #12
 8001cb4:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001cb8:	f004 ba50 	b.w	800615c <HAL_NVIC_EnableIRQ>
}
 8001cbc:	b003      	add	sp, #12
 8001cbe:	f85d fb04 	ldr.w	pc, [sp], #4
 8001cc2:	bf00      	nop
 8001cc4:	4002b000 	.word	0x4002b000

08001cc8 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001cc8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001ccc:	4604      	mov	r4, r0
 8001cce:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001cd0:	2214      	movs	r2, #20
 8001cd2:	2100      	movs	r1, #0
 8001cd4:	a803      	add	r0, sp, #12
 8001cd6:	f01e ff41 	bl	8020b5c <memset>
  if(hi2c->Instance==I2C3)
 8001cda:	6822      	ldr	r2, [r4, #0]
 8001cdc:	4b24      	ldr	r3, [pc, #144]	; (8001d70 <HAL_I2C_MspInit+0xa8>)
 8001cde:	429a      	cmp	r2, r3
 8001ce0:	d143      	bne.n	8001d6a <HAL_I2C_MspInit+0xa2>
  {
  /* USER CODE BEGIN I2C3_MspInit 0 */

  /* USER CODE END I2C3_MspInit 0 */

    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001ce2:	4c24      	ldr	r4, [pc, #144]	; (8001d74 <HAL_I2C_MspInit+0xac>)
    GPIO_InitStruct.Pin = GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001ce4:	4824      	ldr	r0, [pc, #144]	; (8001d78 <HAL_I2C_MspInit+0xb0>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001ce6:	2500      	movs	r5, #0
 8001ce8:	9500      	str	r5, [sp, #0]
 8001cea:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001cec:	f043 0304 	orr.w	r3, r3, #4
 8001cf0:	6323      	str	r3, [r4, #48]	; 0x30
 8001cf2:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001cf4:	f003 0304 	and.w	r3, r3, #4
 8001cf8:	9300      	str	r3, [sp, #0]
 8001cfa:	9b00      	ldr	r3, [sp, #0]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001cfc:	9501      	str	r5, [sp, #4]
 8001cfe:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001d00:	f043 0301 	orr.w	r3, r3, #1
 8001d04:	6323      	str	r3, [r4, #48]	; 0x30
 8001d06:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001d08:	f003 0301 	and.w	r3, r3, #1
 8001d0c:	9301      	str	r3, [sp, #4]
 8001d0e:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001d10:	f04f 0912 	mov.w	r9, #18
 8001d14:	f44f 7300 	mov.w	r3, #512	; 0x200
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d18:	f04f 0801 	mov.w	r8, #1
 8001d1c:	2703      	movs	r7, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001d1e:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001d20:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001d22:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d26:	e9cd 8705 	strd	r8, r7, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001d2a:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001d2c:	f004 fba4 	bl	8006478 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001d30:	f44f 7380 	mov.w	r3, #256	; 0x100
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001d34:	4811      	ldr	r0, [pc, #68]	; (8001d7c <HAL_I2C_MspInit+0xb4>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001d36:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001d38:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001d3a:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d3e:	e9cd 8705 	strd	r8, r7, [sp, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001d42:	f004 fb99 	bl	8006478 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001d46:	9502      	str	r5, [sp, #8]
 8001d48:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001d4a:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001d4e:	6423      	str	r3, [r4, #64]	; 0x40
 8001d50:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001d52:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001d56:	9302      	str	r3, [sp, #8]
 8001d58:	9b02      	ldr	r3, [sp, #8]
  /* USER CODE BEGIN I2C3_MspInit 1 */
  /* Force the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_FORCE_RESET();
 8001d5a:	6a23      	ldr	r3, [r4, #32]
 8001d5c:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001d60:	6223      	str	r3, [r4, #32]
      
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 8001d62:	6a23      	ldr	r3, [r4, #32]
 8001d64:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8001d68:	6223      	str	r3, [r4, #32]
  /* USER CODE END I2C3_MspInit 1 */
  }

}
 8001d6a:	b009      	add	sp, #36	; 0x24
 8001d6c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001d70:	40005c00 	.word	0x40005c00
 8001d74:	40023800 	.word	0x40023800
 8001d78:	40020800 	.word	0x40020800
 8001d7c:	40020000 	.word	0x40020000

08001d80 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8001d80:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001d82:	4604      	mov	r4, r0
 8001d84:	b08d      	sub	sp, #52	; 0x34
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001d86:	2214      	movs	r2, #20
 8001d88:	2100      	movs	r1, #0
 8001d8a:	a807      	add	r0, sp, #28
 8001d8c:	f01e fee6 	bl	8020b5c <memset>
  if(hltdc->Instance==LTDC)
 8001d90:	6822      	ldr	r2, [r4, #0]
 8001d92:	4b57      	ldr	r3, [pc, #348]	; (8001ef0 <HAL_LTDC_MspInit+0x170>)
 8001d94:	429a      	cmp	r2, r3
 8001d96:	f040 80a8 	bne.w	8001eea <HAL_LTDC_MspInit+0x16a>
  {
  /* USER CODE BEGIN LTDC_MspInit 0 */

  /* USER CODE END LTDC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001d9a:	f503 4350 	add.w	r3, r3, #53248	; 0xd000
 8001d9e:	2500      	movs	r5, #0
 8001da0:	9500      	str	r5, [sp, #0]
 8001da2:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_10;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001da4:	4853      	ldr	r0, [pc, #332]	; (8001ef4 <HAL_LTDC_MspInit+0x174>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001da6:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8001daa:	645a      	str	r2, [r3, #68]	; 0x44
 8001dac:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001dae:	f002 6280 	and.w	r2, r2, #67108864	; 0x4000000
 8001db2:	9200      	str	r2, [sp, #0]
 8001db4:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001db6:	9501      	str	r5, [sp, #4]
 8001db8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001dba:	f042 0220 	orr.w	r2, r2, #32
 8001dbe:	631a      	str	r2, [r3, #48]	; 0x30
 8001dc0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001dc2:	f002 0220 	and.w	r2, r2, #32
 8001dc6:	9201      	str	r2, [sp, #4]
 8001dc8:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001dca:	9502      	str	r5, [sp, #8]
 8001dcc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001dce:	f042 0201 	orr.w	r2, r2, #1
 8001dd2:	631a      	str	r2, [r3, #48]	; 0x30
 8001dd4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001dd6:	f002 0201 	and.w	r2, r2, #1
 8001dda:	9202      	str	r2, [sp, #8]
 8001ddc:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001dde:	9503      	str	r5, [sp, #12]
 8001de0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001de2:	f042 0202 	orr.w	r2, r2, #2
 8001de6:	631a      	str	r2, [r3, #48]	; 0x30
 8001de8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001dea:	f002 0202 	and.w	r2, r2, #2
 8001dee:	9203      	str	r2, [sp, #12]
 8001df0:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8001df2:	9504      	str	r5, [sp, #16]
 8001df4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001df6:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8001dfa:	631a      	str	r2, [r3, #48]	; 0x30
 8001dfc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001dfe:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8001e02:	9204      	str	r2, [sp, #16]
 8001e04:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001e06:	9505      	str	r5, [sp, #20]
 8001e08:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001e0a:	f042 0204 	orr.w	r2, r2, #4
 8001e0e:	631a      	str	r2, [r3, #48]	; 0x30
 8001e10:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001e12:	f002 0204 	and.w	r2, r2, #4
 8001e16:	9205      	str	r2, [sp, #20]
 8001e18:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001e1a:	9506      	str	r5, [sp, #24]
 8001e1c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001e1e:	f042 0208 	orr.w	r2, r2, #8
 8001e22:	631a      	str	r2, [r3, #48]	; 0x30
 8001e24:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001e26:	f003 0308 	and.w	r3, r3, #8
 8001e2a:	9306      	str	r3, [sp, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e2c:	2402      	movs	r4, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001e2e:	260e      	movs	r6, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001e30:	9b06      	ldr	r3, [sp, #24]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001e32:	940a      	str	r4, [sp, #40]	; 0x28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e34:	f44f 6380 	mov.w	r3, #1024	; 0x400
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001e38:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e3a:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001e3e:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001e40:	f004 fb1a 	bl	8006478 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8001e44:	f641 0358 	movw	r3, #6232	; 0x1858
                          |GPIO_PIN_12;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001e48:	482b      	ldr	r0, [pc, #172]	; (8001ef8 <HAL_LTDC_MspInit+0x178>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001e4a:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001e4c:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e4e:	e9cd 3407 	strd	r3, r4, [sp, #28]

    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001e52:	2709      	movs	r7, #9
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001e54:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001e58:	f004 fb0e 	bl	8006478 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8001e5c:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e5e:	4827      	ldr	r0, [pc, #156]	; (8001efc <HAL_LTDC_MspInit+0x17c>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001e60:	970b      	str	r7, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e62:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e64:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001e68:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e6c:	f004 fb04 	bl	8006478 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8001e70:	f44f 6370 	mov.w	r3, #3840	; 0xf00
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e74:	4821      	ldr	r0, [pc, #132]	; (8001efc <HAL_LTDC_MspInit+0x17c>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001e76:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e78:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e7a:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001e7e:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e82:	f004 faf9 	bl	8006478 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8001e86:	f44f 630c 	mov.w	r3, #2240	; 0x8c0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e8a:	481d      	ldr	r0, [pc, #116]	; (8001f00 <HAL_LTDC_MspInit+0x180>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001e8c:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e8e:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e90:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001e94:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e98:	f004 faee 	bl	8006478 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8001e9c:	23c0      	movs	r3, #192	; 0xc0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e9e:	4819      	ldr	r0, [pc, #100]	; (8001f04 <HAL_LTDC_MspInit+0x184>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001ea0:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001ea2:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001ea4:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001ea8:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001eac:	f004 fae4 	bl	8006478 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8001eb0:	2308      	movs	r3, #8
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001eb2:	4815      	ldr	r0, [pc, #84]	; (8001f08 <HAL_LTDC_MspInit+0x188>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001eb4:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001eb6:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001eb8:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001ebc:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001ec0:	f004 fada 	bl	8006478 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8001ec4:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001ec8:	480d      	ldr	r0, [pc, #52]	; (8001f00 <HAL_LTDC_MspInit+0x180>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001eca:	970b      	str	r7, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001ecc:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001ece:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001ed2:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001ed6:	f004 facf 	bl	8006478 <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001eda:	2058      	movs	r0, #88	; 0x58
 8001edc:	462a      	mov	r2, r5
 8001ede:	2105      	movs	r1, #5
 8001ee0:	f004 f90a 	bl	80060f8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8001ee4:	2058      	movs	r0, #88	; 0x58
 8001ee6:	f004 f939 	bl	800615c <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8001eea:	b00d      	add	sp, #52	; 0x34
 8001eec:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001eee:	bf00      	nop
 8001ef0:	40016800 	.word	0x40016800
 8001ef4:	40021400 	.word	0x40021400
 8001ef8:	40020000 	.word	0x40020000
 8001efc:	40020400 	.word	0x40020400
 8001f00:	40021800 	.word	0x40021800
 8001f04:	40020800 	.word	0x40020800
 8001f08:	40020c00 	.word	0x40020c00

08001f0c <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8001f0c:	b510      	push	{r4, lr}
 8001f0e:	4604      	mov	r4, r0
 8001f10:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001f12:	2214      	movs	r2, #20
 8001f14:	2100      	movs	r1, #0
 8001f16:	a803      	add	r0, sp, #12
 8001f18:	f01e fe20 	bl	8020b5c <memset>
  if(hspi->Instance==SPI5)
 8001f1c:	6822      	ldr	r2, [r4, #0]
 8001f1e:	4b14      	ldr	r3, [pc, #80]	; (8001f70 <HAL_SPI_MspInit+0x64>)
 8001f20:	429a      	cmp	r2, r3
 8001f22:	d123      	bne.n	8001f6c <HAL_SPI_MspInit+0x60>
  {
  /* USER CODE BEGIN SPI5_MspInit 0 */

  /* USER CODE END SPI5_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI5_CLK_ENABLE();
 8001f24:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 8001f28:	2100      	movs	r1, #0
 8001f2a:	9101      	str	r1, [sp, #4]
 8001f2c:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001f2e:	4811      	ldr	r0, [pc, #68]	; (8001f74 <HAL_SPI_MspInit+0x68>)
    __HAL_RCC_SPI5_CLK_ENABLE();
 8001f30:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8001f34:	645a      	str	r2, [r3, #68]	; 0x44
 8001f36:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001f38:	f402 1280 	and.w	r2, r2, #1048576	; 0x100000
 8001f3c:	9201      	str	r2, [sp, #4]
 8001f3e:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001f40:	9102      	str	r1, [sp, #8]
 8001f42:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001f44:	f042 0220 	orr.w	r2, r2, #32
 8001f48:	631a      	str	r2, [r3, #48]	; 0x30
 8001f4a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001f4c:	f003 0320 	and.w	r3, r3, #32
 8001f50:	9302      	str	r3, [sp, #8]
 8001f52:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001f54:	f44f 7260 	mov.w	r2, #896	; 0x380
 8001f58:	2302      	movs	r3, #2
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8001f5a:	2103      	movs	r1, #3
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001f5c:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8001f60:	2305      	movs	r3, #5
 8001f62:	e9cd 1306 	strd	r1, r3, [sp, #24]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001f66:	a903      	add	r1, sp, #12
 8001f68:	f004 fa86 	bl	8006478 <HAL_GPIO_Init>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 8001f6c:	b008      	add	sp, #32
 8001f6e:	bd10      	pop	{r4, pc}
 8001f70:	40015000 	.word	0x40015000
 8001f74:	40021400 	.word	0x40021400

08001f78 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8001f78:	b507      	push	{r0, r1, r2, lr}
  if(htim_base->Instance==TIM7)
 8001f7a:	4b0f      	ldr	r3, [pc, #60]	; (8001fb8 <HAL_TIM_Base_MspInit+0x40>)
 8001f7c:	6802      	ldr	r2, [r0, #0]
 8001f7e:	429a      	cmp	r2, r3
 8001f80:	d116      	bne.n	8001fb0 <HAL_TIM_Base_MspInit+0x38>
  {
  /* USER CODE BEGIN TIM7_MspInit 0 */

  /* USER CODE END TIM7_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM7_CLK_ENABLE();
 8001f82:	2200      	movs	r2, #0
 8001f84:	f503 3309 	add.w	r3, r3, #140288	; 0x22400
 8001f88:	9201      	str	r2, [sp, #4]
 8001f8a:	6c19      	ldr	r1, [r3, #64]	; 0x40
 8001f8c:	f041 0120 	orr.w	r1, r1, #32
 8001f90:	6419      	str	r1, [r3, #64]	; 0x40
 8001f92:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001f94:	f003 0320 	and.w	r3, r3, #32
 8001f98:	9301      	str	r3, [sp, #4]
    /* TIM7 interrupt Init */
    HAL_NVIC_SetPriority(TIM7_IRQn, 5, 0);
 8001f9a:	2105      	movs	r1, #5
 8001f9c:	2037      	movs	r0, #55	; 0x37
    __HAL_RCC_TIM7_CLK_ENABLE();
 8001f9e:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(TIM7_IRQn, 5, 0);
 8001fa0:	f004 f8aa 	bl	80060f8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM7_IRQn);
 8001fa4:	2037      	movs	r0, #55	; 0x37
  /* USER CODE BEGIN TIM7_MspInit 1 */

  /* USER CODE END TIM7_MspInit 1 */
  }

}
 8001fa6:	b003      	add	sp, #12
 8001fa8:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(TIM7_IRQn);
 8001fac:	f004 b8d6 	b.w	800615c <HAL_NVIC_EnableIRQ>
}
 8001fb0:	b003      	add	sp, #12
 8001fb2:	f85d fb04 	ldr.w	pc, [sp], #4
 8001fb6:	bf00      	nop
 8001fb8:	40001400 	.word	0x40001400

08001fbc <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001fbc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001fc0:	b086      	sub	sp, #24
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8001fc2:	2300      	movs	r3, #0
 8001fc4:	9303      	str	r3, [sp, #12]
  if (FMC_Initialized) {
 8001fc6:	4b2b      	ldr	r3, [pc, #172]	; (8002074 <HAL_SDRAM_MspInit+0xb8>)
 8001fc8:	681c      	ldr	r4, [r3, #0]
 8001fca:	2c00      	cmp	r4, #0
 8001fcc:	d14f      	bne.n	800206e <HAL_SDRAM_MspInit+0xb2>
  FMC_Initialized = 1;
 8001fce:	f04f 0801 	mov.w	r8, #1
 8001fd2:	f8c3 8000 	str.w	r8, [r3]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001fd6:	4b28      	ldr	r3, [pc, #160]	; (8002078 <HAL_SDRAM_MspInit+0xbc>)
 8001fd8:	9400      	str	r4, [sp, #0]
 8001fda:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001fdc:	4827      	ldr	r0, [pc, #156]	; (800207c <HAL_SDRAM_MspInit+0xc0>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8001fde:	ea42 0208 	orr.w	r2, r2, r8
 8001fe2:	639a      	str	r2, [r3, #56]	; 0x38
 8001fe4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8001fe6:	ea03 0308 	and.w	r3, r3, r8
 8001fea:	9300      	str	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001fec:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001fee:	2603      	movs	r6, #3
 8001ff0:	250c      	movs	r5, #12
  __HAL_RCC_FMC_CLK_ENABLE();
 8001ff2:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001ff4:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001ff6:	f64f 033f 	movw	r3, #63551	; 0xf83f
 8001ffa:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001ffe:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002002:	f004 fa39 	bl	8006478 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002006:	481e      	ldr	r0, [pc, #120]	; (8002080 <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002008:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800200a:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800200c:	e9cd 8701 	strd	r8, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002010:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002014:	f004 fa30 	bl	8006478 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 8002018:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800201c:	4819      	ldr	r0, [pc, #100]	; (8002084 <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800201e:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002020:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002022:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002026:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800202a:	f004 fa25 	bl	8006478 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 800202e:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002032:	4815      	ldr	r0, [pc, #84]	; (8002088 <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002034:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002036:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002038:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800203c:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002040:	f004 fa1a 	bl	8006478 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8002044:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002048:	4810      	ldr	r0, [pc, #64]	; (800208c <HAL_SDRAM_MspInit+0xd0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800204a:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800204c:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800204e:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002052:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002056:	f004 fa0f 	bl	8006478 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 800205a:	2360      	movs	r3, #96	; 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800205c:	480c      	ldr	r0, [pc, #48]	; (8002090 <HAL_SDRAM_MspInit+0xd4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800205e:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002060:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002062:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002066:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800206a:	f004 fa05 	bl	8006478 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 800206e:	b006      	add	sp, #24
 8002070:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002074:	200046b0 	.word	0x200046b0
 8002078:	40023800 	.word	0x40023800
 800207c:	40021400 	.word	0x40021400
 8002080:	40020800 	.word	0x40020800
 8002084:	40021800 	.word	0x40021800
 8002088:	40021000 	.word	0x40021000
 800208c:	40020c00 	.word	0x40020c00
 8002090:	40020400 	.word	0x40020400

08002094 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8002094:	b530      	push	{r4, r5, lr}
 8002096:	4601      	mov	r1, r0
 8002098:	b089      	sub	sp, #36	; 0x24
  uint32_t              uwTimclock = 0;
  uint32_t              uwPrescalerValue = 0;
  uint32_t              pFLatency;

  /*Configure the TIM8 IRQ priority */
  HAL_NVIC_SetPriority(TIM8_UP_TIM13_IRQn, TickPriority ,0);
 800209a:	2200      	movs	r2, #0
 800209c:	202c      	movs	r0, #44	; 0x2c
 800209e:	f004 f82b 	bl	80060f8 <HAL_NVIC_SetPriority>

  /* Enable the TIM8 global Interrupt */
  HAL_NVIC_EnableIRQ(TIM8_UP_TIM13_IRQn);
 80020a2:	202c      	movs	r0, #44	; 0x2c
 80020a4:	f004 f85a 	bl	800615c <HAL_NVIC_EnableIRQ>

  /* Enable TIM8 clock */
  __HAL_RCC_TIM8_CLK_ENABLE();
 80020a8:	2500      	movs	r5, #0
 80020aa:	4b15      	ldr	r3, [pc, #84]	; (8002100 <HAL_InitTick+0x6c>)
 80020ac:	9502      	str	r5, [sp, #8]
 80020ae:	6c5a      	ldr	r2, [r3, #68]	; 0x44

  /* Compute the prescaler value to have TIM8 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000) - 1);

  /* Initialize TIM8 */
  htim8.Instance = TIM8;
 80020b0:	4c14      	ldr	r4, [pc, #80]	; (8002104 <HAL_InitTick+0x70>)
  __HAL_RCC_TIM8_CLK_ENABLE();
 80020b2:	f042 0202 	orr.w	r2, r2, #2
 80020b6:	645a      	str	r2, [r3, #68]	; 0x44
 80020b8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80020ba:	f003 0302 	and.w	r3, r3, #2
 80020be:	9302      	str	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 80020c0:	a901      	add	r1, sp, #4
 80020c2:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM8_CLK_ENABLE();
 80020c4:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 80020c6:	f005 fb4f 	bl	8007768 <HAL_RCC_GetClockConfig>
  uwTimclock = 2*HAL_RCC_GetPCLK2Freq();
 80020ca:	f005 fb3d 	bl	8007748 <HAL_RCC_GetPCLK2Freq>
  htim8.Instance = TIM8;
 80020ce:	4b0e      	ldr	r3, [pc, #56]	; (8002108 <HAL_InitTick+0x74>)
 80020d0:	6023      	str	r3, [r4, #0]
  + Period = [(TIM8CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim8.Init.Period = (1000000 / 1000) - 1;
 80020d2:	f240 33e7 	movw	r3, #999	; 0x3e7
 80020d6:	60e3      	str	r3, [r4, #12]
  uwTimclock = 2*HAL_RCC_GetPCLK2Freq();
 80020d8:	0040      	lsls	r0, r0, #1
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000) - 1);
 80020da:	4b0c      	ldr	r3, [pc, #48]	; (800210c <HAL_InitTick+0x78>)
 80020dc:	fbb0 f0f3 	udiv	r0, r0, r3
 80020e0:	3801      	subs	r0, #1
  htim8.Init.Prescaler = uwPrescalerValue;
 80020e2:	6060      	str	r0, [r4, #4]
  htim8.Init.ClockDivision = 0;
  htim8.Init.CounterMode = TIM_COUNTERMODE_UP;
  if(HAL_TIM_Base_Init(&htim8) == HAL_OK)
 80020e4:	4620      	mov	r0, r4
  htim8.Init.ClockDivision = 0;
 80020e6:	6125      	str	r5, [r4, #16]
  htim8.Init.CounterMode = TIM_COUNTERMODE_UP;
 80020e8:	60a5      	str	r5, [r4, #8]
  if(HAL_TIM_Base_Init(&htim8) == HAL_OK)
 80020ea:	f006 f8f9 	bl	80082e0 <HAL_TIM_Base_Init>
 80020ee:	b920      	cbnz	r0, 80020fa <HAL_InitTick+0x66>
  {
    /* Start the TIM time Base generation in interrupt mode */
    return HAL_TIM_Base_Start_IT(&htim8);
 80020f0:	4620      	mov	r0, r4
 80020f2:	f005 ffd8 	bl	80080a6 <HAL_TIM_Base_Start_IT>
  }

  /* Return function status */
  return HAL_ERROR;
}
 80020f6:	b009      	add	sp, #36	; 0x24
 80020f8:	bd30      	pop	{r4, r5, pc}
  return HAL_ERROR;
 80020fa:	2001      	movs	r0, #1
 80020fc:	e7fb      	b.n	80020f6 <HAL_InitTick+0x62>
 80020fe:	bf00      	nop
 8002100:	40023800 	.word	0x40023800
 8002104:	200046b4 	.word	0x200046b4
 8002108:	40010400 	.word	0x40010400
 800210c:	000f4240 	.word	0x000f4240

08002110 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8002110:	4770      	bx	lr

08002112 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8002112:	e7fe      	b.n	8002112 <HardFault_Handler>

08002114 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8002114:	e7fe      	b.n	8002114 <MemManage_Handler>

08002116 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8002116:	e7fe      	b.n	8002116 <BusFault_Handler>

08002118 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8002118:	e7fe      	b.n	8002118 <UsageFault_Handler>

0800211a <DebugMon_Handler>:
 800211a:	4770      	bx	lr

0800211c <TIM8_UP_TIM13_IRQHandler>:
void TIM8_UP_TIM13_IRQHandler(void)
{
  /* USER CODE BEGIN TIM8_UP_TIM13_IRQn 0 */

  /* USER CODE END TIM8_UP_TIM13_IRQn 0 */
  HAL_TIM_IRQHandler(&htim8);
 800211c:	4801      	ldr	r0, [pc, #4]	; (8002124 <TIM8_UP_TIM13_IRQHandler+0x8>)
 800211e:	f005 bfd6 	b.w	80080ce <HAL_TIM_IRQHandler>
 8002122:	bf00      	nop
 8002124:	200046b4 	.word	0x200046b4

08002128 <TIM7_IRQHandler>:
void TIM7_IRQHandler(void)
{
  /* USER CODE BEGIN TIM7_IRQn 0 */

  /* USER CODE END TIM7_IRQn 0 */
  HAL_TIM_IRQHandler(&htim7);
 8002128:	4801      	ldr	r0, [pc, #4]	; (8002130 <TIM7_IRQHandler+0x8>)
 800212a:	f005 bfd0 	b.w	80080ce <HAL_TIM_IRQHandler>
 800212e:	bf00      	nop
 8002130:	20003bd4 	.word	0x20003bd4

08002134 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8002134:	4801      	ldr	r0, [pc, #4]	; (800213c <LTDC_IRQHandler+0x8>)
 8002136:	f004 bfdb 	b.w	80070f0 <HAL_LTDC_IRQHandler>
 800213a:	bf00      	nop
 800213c:	20003aa0 	.word	0x20003aa0

08002140 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 8002140:	4801      	ldr	r0, [pc, #4]	; (8002148 <DMA2D_IRQHandler+0x8>)
 8002142:	f004 b8ca 	b.w	80062da <HAL_DMA2D_IRQHandler>
 8002146:	bf00      	nop
 8002148:	20003a0c 	.word	0x20003a0c

0800214c <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 800214c:	2001      	movs	r0, #1
 800214e:	4770      	bx	lr

08002150 <_kill>:

int _kill(int pid, int sig)
{
 8002150:	b508      	push	{r3, lr}
	errno = EINVAL;
 8002152:	f01e fbaf 	bl	80208b4 <__errno>
 8002156:	2316      	movs	r3, #22
 8002158:	6003      	str	r3, [r0, #0]
	return -1;
}
 800215a:	f04f 30ff 	mov.w	r0, #4294967295
 800215e:	bd08      	pop	{r3, pc}

08002160 <_exit>:

void _exit (int status)
{
 8002160:	b508      	push	{r3, lr}
	errno = EINVAL;
 8002162:	f01e fba7 	bl	80208b4 <__errno>
 8002166:	2316      	movs	r3, #22
 8002168:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 800216a:	e7fe      	b.n	800216a <_exit+0xa>

0800216c <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 800216c:	b570      	push	{r4, r5, r6, lr}
 800216e:	460d      	mov	r5, r1
 8002170:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002172:	460e      	mov	r6, r1
 8002174:	1b73      	subs	r3, r6, r5
 8002176:	429c      	cmp	r4, r3
 8002178:	dc01      	bgt.n	800217e <_read+0x12>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 800217a:	4620      	mov	r0, r4
 800217c:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 800217e:	f3af 8000 	nop.w
 8002182:	f806 0b01 	strb.w	r0, [r6], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002186:	e7f5      	b.n	8002174 <_read+0x8>

08002188 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8002188:	b570      	push	{r4, r5, r6, lr}
 800218a:	460d      	mov	r5, r1
 800218c:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800218e:	460e      	mov	r6, r1
 8002190:	1b73      	subs	r3, r6, r5
 8002192:	429c      	cmp	r4, r3
 8002194:	dc01      	bgt.n	800219a <_write+0x12>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 8002196:	4620      	mov	r0, r4
 8002198:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 800219a:	f816 0b01 	ldrb.w	r0, [r6], #1
 800219e:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80021a2:	e7f5      	b.n	8002190 <_write+0x8>

080021a4 <_close>:

int _close(int file)
{
	return -1;
}
 80021a4:	f04f 30ff 	mov.w	r0, #4294967295
 80021a8:	4770      	bx	lr

080021aa <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 80021aa:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80021ae:	604b      	str	r3, [r1, #4]
	return 0;
}
 80021b0:	2000      	movs	r0, #0
 80021b2:	4770      	bx	lr

080021b4 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 80021b4:	2001      	movs	r0, #1
 80021b6:	4770      	bx	lr

080021b8 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 80021b8:	2000      	movs	r0, #0
 80021ba:	4770      	bx	lr

080021bc <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 80021bc:	4a0a      	ldr	r2, [pc, #40]	; (80021e8 <_sbrk+0x2c>)
 80021be:	6811      	ldr	r1, [r2, #0]
{
 80021c0:	b508      	push	{r3, lr}
 80021c2:	4603      	mov	r3, r0
	if (heap_end == 0)
 80021c4:	b909      	cbnz	r1, 80021ca <_sbrk+0xe>
		heap_end = &end;
 80021c6:	4909      	ldr	r1, [pc, #36]	; (80021ec <_sbrk+0x30>)
 80021c8:	6011      	str	r1, [r2, #0]

	prev_heap_end = heap_end;
 80021ca:	6810      	ldr	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 80021cc:	4669      	mov	r1, sp
 80021ce:	4403      	add	r3, r0
 80021d0:	428b      	cmp	r3, r1
 80021d2:	d906      	bls.n	80021e2 <_sbrk+0x26>
	{
		errno = ENOMEM;
 80021d4:	f01e fb6e 	bl	80208b4 <__errno>
 80021d8:	230c      	movs	r3, #12
 80021da:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 80021dc:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 80021e0:	bd08      	pop	{r3, pc}
	heap_end += incr;
 80021e2:	6013      	str	r3, [r2, #0]
	return (caddr_t) prev_heap_end;
 80021e4:	e7fc      	b.n	80021e0 <_sbrk+0x24>
 80021e6:	bf00      	nop
 80021e8:	200046f4 	.word	0x200046f4
 80021ec:	20015868 	.word	0x20015868

080021f0 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 80021f0:	4770      	bx	lr

080021f2 <_ZN23ApplicationFontProviderD0Ev>:
 80021f2:	b510      	push	{r4, lr}
 80021f4:	2104      	movs	r1, #4
 80021f6:	4604      	mov	r4, r0
 80021f8:	f01e fa76 	bl	80206e8 <_ZdlPvj>
 80021fc:	4620      	mov	r0, r4
 80021fe:	bd10      	pop	{r4, pc}

08002200 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
    switch (typography)
 8002200:	2901      	cmp	r1, #1
{
 8002202:	b508      	push	{r3, lr}
    switch (typography)
 8002204:	d006      	beq.n	8002214 <_ZN23ApplicationFontProvider7getFontEt+0x14>
 8002206:	2902      	cmp	r1, #2
 8002208:	d008      	beq.n	800221c <_ZN23ApplicationFontProvider7getFontEt+0x1c>
 800220a:	b959      	cbnz	r1, 8002224 <_ZN23ApplicationFontProvider7getFontEt+0x24>
    {
    case Typography::DEFAULT:
        // verdana_15_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 800220c:	f002 fdf8 	bl	8004e00 <_ZN17TypedTextDatabase8getFontsEv>
 8002210:	6800      	ldr	r0, [r0, #0]
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
    }
}
 8002212:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8002214:	f002 fdf4 	bl	8004e00 <_ZN17TypedTextDatabase8getFontsEv>
 8002218:	6840      	ldr	r0, [r0, #4]
 800221a:	e7fa      	b.n	8002212 <_ZN23ApplicationFontProvider7getFontEt+0x12>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 800221c:	f002 fdf0 	bl	8004e00 <_ZN17TypedTextDatabase8getFontsEv>
 8002220:	6880      	ldr	r0, [r0, #8]
 8002222:	e7f6      	b.n	8002212 <_ZN23ApplicationFontProvider7getFontEt+0x12>
    switch (typography)
 8002224:	2000      	movs	r0, #0
 8002226:	e7f4      	b.n	8002212 <_ZN23ApplicationFontProvider7getFontEt+0x12>

08002228 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8002228:	4800      	ldr	r0, [pc, #0]	; (800222c <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 800222a:	4770      	bx	lr
 800222c:	08022110 	.word	0x08022110

08002230 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8002230:	200d      	movs	r0, #13
 8002232:	4770      	bx	lr

08002234 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8002234:	b513      	push	{r0, r1, r4, lr}
 8002236:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8002238:	b151      	cbz	r1, 8002250 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 800223a:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 800223c:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 800223e:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002242:	aa01      	add	r2, sp, #4
 8002244:	689c      	ldr	r4, [r3, #8]
 8002246:	f10d 0303 	add.w	r3, sp, #3
 800224a:	47a0      	blx	r4
        return glyph;
    }
 800224c:	b002      	add	sp, #8
 800224e:	bd10      	pop	{r4, pc}
            return 0;
 8002250:	4608      	mov	r0, r1
 8002252:	e7fb      	b.n	800224c <_ZNK8touchgfx4Font8getGlyphEt+0x18>

08002254 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 8002254:	8940      	ldrh	r0, [r0, #10]
 8002256:	4770      	bx	lr

08002258 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8002258:	8980      	ldrh	r0, [r0, #12]
 800225a:	4770      	bx	lr

0800225c <_ZNK8touchgfx4Font13getFontHeightEv>:
     *       getMinimumTextHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getFontHeight() const
    {
        return fontHeight;
    }
 800225c:	8880      	ldrh	r0, [r0, #4]
 800225e:	4770      	bx	lr

08002260 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
     *
     * @return The minimum height needed for a text field that uses this font.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getMinimumTextHeight() const
    {
        return fontHeight + pixelsBelowBaseline;
 8002260:	7983      	ldrb	r3, [r0, #6]
 8002262:	8880      	ldrh	r0, [r0, #4]
 8002264:	4418      	add	r0, r3
    }
 8002266:	b280      	uxth	r0, r0
 8002268:	4770      	bx	lr

0800226a <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 800226a:	79c0      	ldrb	r0, [r0, #7]
    }
 800226c:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8002270:	4770      	bx	lr

08002272 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 8002272:	79c0      	ldrb	r0, [r0, #7]
    }
 8002274:	09c0      	lsrs	r0, r0, #7
 8002276:	4770      	bx	lr

08002278 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 8002278:	4770      	bx	lr

0800227a <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 800227a:	b510      	push	{r4, lr}
    }
 800227c:	2108      	movs	r1, #8
    virtual ~TypedText()
 800227e:	4604      	mov	r4, r0
    }
 8002280:	f01e fa32 	bl	80206e8 <_ZdlPvj>
 8002284:	4620      	mov	r0, r4
 8002286:	bd10      	pop	{r4, pc}

08002288 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 8002288:	4770      	bx	lr

0800228a <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 800228a:	4770      	bx	lr

0800228c <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 800228c:	f500 7396 	add.w	r3, r0, #300	; 0x12c
 8002290:	6808      	ldr	r0, [r1, #0]
 8002292:	6849      	ldr	r1, [r1, #4]
 8002294:	c303      	stmia	r3!, {r0, r1}
    }
 8002296:	4770      	bx	lr

08002298 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8002298:	2000      	movs	r0, #0
 800229a:	4770      	bx	lr

0800229c <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 800229c:	8081      	strh	r1, [r0, #4]
    }
 800229e:	4770      	bx	lr

080022a0 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 80022a0:	80c1      	strh	r1, [r0, #6]
    }
 80022a2:	4770      	bx	lr

080022a4 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 80022a4:	8101      	strh	r1, [r0, #8]
    }
 80022a6:	4770      	bx	lr

080022a8 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 80022a8:	8141      	strh	r1, [r0, #10]
    }
 80022aa:	4770      	bx	lr

080022ac <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 80022ac:	4770      	bx	lr

080022ae <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 80022ae:	4770      	bx	lr

080022b0 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 80022b0:	4770      	bx	lr

080022b2 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 80022b2:	4770      	bx	lr

080022b4 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 80022b4:	4770      	bx	lr

080022b6 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 80022b6:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 80022b8:	88c4      	ldrh	r4, [r0, #6]
 80022ba:	6803      	ldr	r3, [r0, #0]
 80022bc:	1b12      	subs	r2, r2, r4
 80022be:	8884      	ldrh	r4, [r0, #4]
 80022c0:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80022c2:	1b09      	subs	r1, r1, r4
 80022c4:	b212      	sxth	r2, r2
    }
 80022c6:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 80022ca:	b209      	sxth	r1, r1
 80022cc:	4718      	bx	r3

080022ce <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 80022ce:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80022d2:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 80022d4:	f04f 33ff 	mov.w	r3, #4294967295
 80022d8:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 80022da:	6813      	ldr	r3, [r2, #0]
 80022dc:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 80022de:	6010      	str	r0, [r2, #0]
    }
 80022e0:	4770      	bx	lr

080022e2 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 80022e2:	4770      	bx	lr

080022e4 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 80022e4:	4770      	bx	lr

080022e6 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 80022e6:	6041      	str	r1, [r0, #4]
    }
 80022e8:	4770      	bx	lr

080022ea <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 80022ea:	4770      	bx	lr

080022ec <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80022ec:	4b06      	ldr	r3, [pc, #24]	; (8002308 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 80022ee:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 80022f2:	2300      	movs	r3, #0
 80022f4:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
// Screen1

void FrontendApplicationBase::gotoScreen1ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreen1ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80022f8:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 80022fc:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8002300:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c

    virtual void changeToStartScreen()
    {
        gotoScreen1ScreenNoTransition();
    }
 8002304:	4770      	bx	lr
 8002306:	bf00      	nop
 8002308:	0800241d 	.word	0x0800241d

0800230c <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 800230c:	2301      	movs	r3, #1
 800230e:	7203      	strb	r3, [r0, #8]
    }
 8002310:	4770      	bx	lr

08002312 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 8002312:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8002316:	b11a      	cbz	r2, 8002320 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 8002318:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 800231c:	b102      	cbz	r2, 8002320 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 800231e:	6018      	str	r0, [r3, #0]
        }
    }
 8002320:	4770      	bx	lr

08002322 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectD1Ev>:
{
public:
    /**
     * A Widget that reports solid and but does not draw anything.
     */
    class FullSolidRect : public Widget
 8002322:	4770      	bx	lr

08002324 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED1Ev>:
class WipeTransition : public Transition
 8002324:	4770      	bx	lr

08002326 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 8002326:	4770      	bx	lr

08002328 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 8002328:	4770      	bx	lr

0800232a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE8tearDownEv>:
            // Copy rect from tft to client framebuffer
            HAL::getInstance()->lcd().blitCopy((const uint16_t*)tftFb, source, rect, 255, false);
        }
    }

    virtual void tearDown()
 800232a:	4601      	mov	r1, r0
    {
        screenContainer->remove(solid);
 800232c:	6840      	ldr	r0, [r0, #4]
 800232e:	6803      	ldr	r3, [r0, #0]
 8002330:	3110      	adds	r1, #16
 8002332:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8002334:	4718      	bx	r3

08002336 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE4initEv>:
    }

    virtual void init()
 8002336:	4601      	mov	r1, r0
    {
        Transition::init();
        // Add the solid (and not-drawing-anything) widget on top to cover the other widgets
        screenContainer->add(solid);
 8002338:	6840      	ldr	r0, [r0, #4]
 800233a:	6803      	ldr	r3, [r0, #0]
 800233c:	3110      	adds	r1, #16
 800233e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8002340:	4718      	bx	r3

08002342 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE10invalidateEv>:
     * Wipe transition does not require an invalidation. Invalidation
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
    {
    }
 8002342:	4770      	bx	lr

08002344 <_ZNK8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRect4drawERKNS_4RectE>:
        }
 8002344:	4770      	bx	lr

08002346 <_ZNK8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRect12getSolidRectEv>:
        virtual Rect getSolidRect() const
 8002346:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8002348:	2200      	movs	r2, #0
            return Rect(0U, 0U, rect.width, rect.height);
 800234a:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 800234e:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 8002352:	8002      	strh	r2, [r0, #0]
 8002354:	8042      	strh	r2, [r0, #2]
 8002356:	8084      	strh	r4, [r0, #4]
 8002358:	80c1      	strh	r1, [r0, #6]
        }
 800235a:	bd10      	pop	{r4, pc}

0800235c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 800235c:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 800235e:	68c2      	ldr	r2, [r0, #12]
 8002360:	6841      	ldr	r1, [r0, #4]
 8002362:	1054      	asrs	r4, r2, #1
    virtual void execute()
 8002364:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 8002366:	eb01 0062 	add.w	r0, r1, r2, asr #1
 800236a:	07d2      	lsls	r2, r2, #31
 800236c:	bf48      	it	mi
 800236e:	590a      	ldrmi	r2, [r1, r4]
 8002370:	689b      	ldr	r3, [r3, #8]
    }
 8002372:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 8002376:	bf48      	it	mi
 8002378:	58d3      	ldrmi	r3, [r2, r3]
 800237a:	4718      	bx	r3

0800237c <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 800237c:	6843      	ldr	r3, [r0, #4]
 800237e:	b12b      	cbz	r3, 800238c <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 8002380:	6883      	ldr	r3, [r0, #8]
 8002382:	b92b      	cbnz	r3, 8002390 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8002384:	68c0      	ldr	r0, [r0, #12]
 8002386:	f000 0001 	and.w	r0, r0, #1
 800238a:	4770      	bx	lr
 800238c:	4618      	mov	r0, r3
 800238e:	4770      	bx	lr
 8002390:	2001      	movs	r0, #1
    }
 8002392:	4770      	bx	lr

08002394 <_ZN8touchgfx12NoTransitionD0Ev>:
 8002394:	b510      	push	{r4, lr}
 8002396:	210c      	movs	r1, #12
 8002398:	4604      	mov	r4, r0
 800239a:	f01e f9a5 	bl	80206e8 <_ZdlPvj>
 800239e:	4620      	mov	r0, r4
 80023a0:	bd10      	pop	{r4, pc}

080023a2 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80023a2:	b510      	push	{r4, lr}
 80023a4:	2110      	movs	r1, #16
 80023a6:	4604      	mov	r4, r0
 80023a8:	f01e f99e 	bl	80206e8 <_ZdlPvj>
 80023ac:	4620      	mov	r0, r4
 80023ae:	bd10      	pop	{r4, pc}

080023b0 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 80023b0:	b510      	push	{r4, lr}
 80023b2:	f44f 71ac 	mov.w	r1, #344	; 0x158
 80023b6:	4604      	mov	r4, r0
 80023b8:	f01e f996 	bl	80206e8 <_ZdlPvj>
 80023bc:	4620      	mov	r0, r4
 80023be:	bd10      	pop	{r4, pc}

080023c0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED0Ev>:
class WipeTransition : public Transition
 80023c0:	b510      	push	{r4, lr}
 80023c2:	2138      	movs	r1, #56	; 0x38
 80023c4:	4604      	mov	r4, r0
 80023c6:	f01e f98f 	bl	80206e8 <_ZdlPvj>
 80023ca:	4620      	mov	r0, r4
 80023cc:	bd10      	pop	{r4, pc}

080023ce <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectD0Ev>:
    class FullSolidRect : public Widget
 80023ce:	b510      	push	{r4, lr}
 80023d0:	2128      	movs	r1, #40	; 0x28
 80023d2:	4604      	mov	r4, r0
 80023d4:	f01e f988 	bl	80206e8 <_ZdlPvj>
 80023d8:	4620      	mov	r0, r4
 80023da:	bd10      	pop	{r4, pc}

080023dc <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 80023dc:	b508      	push	{r3, lr}
        Application::getInstance()->invalidate();
 80023de:	f00e fe67 	bl	80110b0 <_ZN8touchgfx11Application11getInstanceEv>
    }
 80023e2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        Application::getInstance()->invalidate();
 80023e6:	f00f ba07 	b.w	80117f8 <_ZN8touchgfx11Application10invalidateEv>

080023ea <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 80023ea:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80023ee:	b112      	cbz	r2, 80023f6 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 80023f0:	6803      	ldr	r3, [r0, #0]
 80023f2:	695b      	ldr	r3, [r3, #20]
 80023f4:	4718      	bx	r3
    }
 80023f6:	4770      	bx	lr

080023f8 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 80023f8:	b510      	push	{r4, lr}
 80023fa:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 80023fc:	f8d0 013c 	ldr.w	r0, [r0, #316]	; 0x13c
 8002400:	b158      	cbz	r0, 800241a <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 8002402:	6803      	ldr	r3, [r0, #0]
 8002404:	68db      	ldr	r3, [r3, #12]
 8002406:	4798      	blx	r3
 8002408:	b138      	cbz	r0, 800241a <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 800240a:	f8d4 013c 	ldr.w	r0, [r4, #316]	; 0x13c
 800240e:	6803      	ldr	r3, [r0, #0]
 8002410:	689b      	ldr	r3, [r3, #8]
 8002412:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8002414:	2300      	movs	r3, #0
 8002416:	f8c4 313c 	str.w	r3, [r4, #316]	; 0x13c
    }
 800241a:	bd10      	pop	{r4, pc}

0800241c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv>:
}

void FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl()
{
 800241c:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002420:	e9d0 5a54 	ldrd	r5, sl, [r0, #336]	; 0x150
{
 8002424:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002426:	68a8      	ldr	r0, [r5, #8]
 8002428:	6803      	ldr	r3, [r0, #0]
 800242a:	6a1b      	ldr	r3, [r3, #32]
 800242c:	4798      	blx	r3
 800242e:	f5b0 6fc2 	cmp.w	r0, #1552	; 0x610
 8002432:	d205      	bcs.n	8002440 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x24>
 8002434:	4b45      	ldr	r3, [pc, #276]	; (800254c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x130>)
 8002436:	4a46      	ldr	r2, [pc, #280]	; (8002550 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 8002438:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800243a:	4846      	ldr	r0, [pc, #280]	; (8002554 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x138>)
 800243c:	f01e fa08 	bl	8020850 <__assert_func>
 8002440:	6868      	ldr	r0, [r5, #4]
 8002442:	6803      	ldr	r3, [r0, #0]
 8002444:	6a1b      	ldr	r3, [r3, #32]
 8002446:	4798      	blx	r3
 8002448:	280f      	cmp	r0, #15
 800244a:	d803      	bhi.n	8002454 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x38>
 800244c:	4b42      	ldr	r3, [pc, #264]	; (8002558 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x13c>)
 800244e:	4a40      	ldr	r2, [pc, #256]	; (8002550 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 8002450:	21a4      	movs	r1, #164	; 0xa4
 8002452:	e7f2      	b.n	800243a <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002454:	68e8      	ldr	r0, [r5, #12]
 8002456:	6803      	ldr	r3, [r0, #0]
 8002458:	6a1b      	ldr	r3, [r3, #32]
 800245a:	4798      	blx	r3
 800245c:	280b      	cmp	r0, #11
 800245e:	d803      	bhi.n	8002468 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x4c>
 8002460:	4b3e      	ldr	r3, [pc, #248]	; (800255c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x140>)
 8002462:	4a3b      	ldr	r2, [pc, #236]	; (8002550 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 8002464:	21a5      	movs	r1, #165	; 0xa5
 8002466:	e7e8      	b.n	800243a <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x1e>
    if (*currentTrans)
 8002468:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8002564 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x148>
    Application::getInstance()->clearAllTimerWidgets();
 800246c:	f00e fe20 	bl	80110b0 <_ZN8touchgfx11Application11getInstanceEv>
 8002470:	f00e fe24 	bl	80110bc <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8002474:	f8d9 0000 	ldr.w	r0, [r9]
 8002478:	b110      	cbz	r0, 8002480 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 800247a:	6803      	ldr	r3, [r0, #0]
 800247c:	68db      	ldr	r3, [r3, #12]
 800247e:	4798      	blx	r3
    if (*currentTrans)
 8002480:	f8d9 0000 	ldr.w	r0, [r9]
 8002484:	b110      	cbz	r0, 800248c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 8002486:	6803      	ldr	r3, [r0, #0]
 8002488:	681b      	ldr	r3, [r3, #0]
 800248a:	4798      	blx	r3
    if (*currentScreen)
 800248c:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 8002568 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x14c>
 8002490:	f8d8 0000 	ldr.w	r0, [r8]
 8002494:	b110      	cbz	r0, 800249c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 8002496:	6803      	ldr	r3, [r0, #0]
 8002498:	695b      	ldr	r3, [r3, #20]
 800249a:	4798      	blx	r3
    if (*currentPresenter)
 800249c:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 80024a0:	b110      	cbz	r0, 80024a8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 80024a2:	6803      	ldr	r3, [r0, #0]
 80024a4:	685b      	ldr	r3, [r3, #4]
 80024a6:	4798      	blx	r3
    if (*currentScreen)
 80024a8:	f8d8 0000 	ldr.w	r0, [r8]
 80024ac:	b110      	cbz	r0, 80024b4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 80024ae:	6803      	ldr	r3, [r0, #0]
 80024b0:	681b      	ldr	r3, [r3, #0]
 80024b2:	4798      	blx	r3
    if (*currentPresenter)
 80024b4:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 80024b8:	b110      	cbz	r0, 80024c0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 80024ba:	6803      	ldr	r3, [r0, #0]
 80024bc:	689b      	ldr	r3, [r3, #8]
 80024be:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80024c0:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 80024c2:	6803      	ldr	r3, [r0, #0]
 80024c4:	2100      	movs	r1, #0
 80024c6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80024c8:	4798      	blx	r3
        : screenContainer(0), done(false)
 80024ca:	f04f 0b00 	mov.w	fp, #0
 80024ce:	4b24      	ldr	r3, [pc, #144]	; (8002560 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x144>)
 80024d0:	6003      	str	r3, [r0, #0]
 80024d2:	4604      	mov	r4, r0
 80024d4:	f8c0 b004 	str.w	fp, [r0, #4]
 80024d8:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80024dc:	68a8      	ldr	r0, [r5, #8]
 80024de:	6803      	ldr	r3, [r0, #0]
 80024e0:	4659      	mov	r1, fp
 80024e2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80024e4:	4798      	blx	r3
 80024e6:	4606      	mov	r6, r0
 80024e8:	f002 fdce 	bl	8005088 <_ZN11Screen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80024ec:	6868      	ldr	r0, [r5, #4]
 80024ee:	6803      	ldr	r3, [r0, #0]
 80024f0:	4659      	mov	r1, fp
 80024f2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80024f4:	4798      	blx	r3
 80024f6:	4631      	mov	r1, r6
 80024f8:	4605      	mov	r5, r0
 80024fa:	f002 fd19 	bl	8004f30 <_ZN16Screen1PresenterC1ER11Screen1View>
    *currentTrans = newTransition;
 80024fe:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8002502:	f8c7 5138 	str.w	r5, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 8002506:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800250a:	b1e5      	cbz	r5, 8002546 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x12a>
 800250c:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 800250e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8002512:	6833      	ldr	r3, [r6, #0]
    virtual void DisplayCurrentValue() {};
    virtual void DisplayChargingFinished() {};

    void bind(Model* m)
    {
        model = m;
 8002514:	f8c5 a008 	str.w	sl, [r5, #8]
 8002518:	4630      	mov	r0, r6
 800251a:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 800251c:	63f5      	str	r5, [r6, #60]	; 0x3c
 800251e:	4798      	blx	r3
    newPresenter->activate();
 8002520:	682b      	ldr	r3, [r5, #0]
 8002522:	4628      	mov	r0, r5
 8002524:	681b      	ldr	r3, [r3, #0]
 8002526:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002528:	4621      	mov	r1, r4
 800252a:	4630      	mov	r0, r6
 800252c:	f010 fa6e 	bl	8012a0c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002530:	6823      	ldr	r3, [r4, #0]
 8002532:	4620      	mov	r0, r4
 8002534:	691b      	ldr	r3, [r3, #16]
 8002536:	4798      	blx	r3
    newTransition->invalidate();
 8002538:	6823      	ldr	r3, [r4, #0]
 800253a:	695b      	ldr	r3, [r3, #20]
 800253c:	4620      	mov	r0, r4
}
 800253e:	b001      	add	sp, #4
 8002540:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002544:	4718      	bx	r3
    model->bind(newPresenter);
 8002546:	462b      	mov	r3, r5
 8002548:	e7e1      	b.n	800250e <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0xf2>
 800254a:	bf00      	nop
 800254c:	08022224 	.word	0x08022224
 8002550:	080222b2 	.word	0x080222b2
 8002554:	080223b6 	.word	0x080223b6
 8002558:	080223fd 	.word	0x080223fd
 800255c:	080224a0 	.word	0x080224a0
 8002560:	080226d0 	.word	0x080226d0
 8002564:	20015600 	.word	0x20015600
 8002568:	200155fc 	.word	0x200155fc

0800256c <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreenGraphScreenWipeTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoScreenGraphScreenWipeTransitionEastImpl()
{
 800256c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<ScreenGraphView, ScreenGraphPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002570:	e9d0 ba54 	ldrd	fp, sl, [r0, #336]	; 0x150
{
 8002574:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002576:	f8db 0008 	ldr.w	r0, [fp, #8]
 800257a:	6803      	ldr	r3, [r0, #0]
 800257c:	6a1b      	ldr	r3, [r3, #32]
 800257e:	4798      	blx	r3
 8002580:	f242 733b 	movw	r3, #10043	; 0x273b
 8002584:	4298      	cmp	r0, r3
 8002586:	d805      	bhi.n	8002594 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x28>
 8002588:	4b56      	ldr	r3, [pc, #344]	; (80026e4 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x178>)
 800258a:	4a57      	ldr	r2, [pc, #348]	; (80026e8 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x17c>)
 800258c:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800258e:	4857      	ldr	r0, [pc, #348]	; (80026ec <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x180>)
 8002590:	f01e f95e 	bl	8020850 <__assert_func>
 8002594:	f8db 0004 	ldr.w	r0, [fp, #4]
 8002598:	6803      	ldr	r3, [r0, #0]
 800259a:	6a1b      	ldr	r3, [r3, #32]
 800259c:	4798      	blx	r3
 800259e:	280f      	cmp	r0, #15
 80025a0:	d803      	bhi.n	80025aa <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x3e>
 80025a2:	4b53      	ldr	r3, [pc, #332]	; (80026f0 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x184>)
 80025a4:	4a50      	ldr	r2, [pc, #320]	; (80026e8 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x17c>)
 80025a6:	21a4      	movs	r1, #164	; 0xa4
 80025a8:	e7f1      	b.n	800258e <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x22>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80025aa:	f8db 000c 	ldr.w	r0, [fp, #12]
 80025ae:	6803      	ldr	r3, [r0, #0]
 80025b0:	6a1b      	ldr	r3, [r3, #32]
 80025b2:	4798      	blx	r3
 80025b4:	2837      	cmp	r0, #55	; 0x37
 80025b6:	d803      	bhi.n	80025c0 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x54>
 80025b8:	4b4e      	ldr	r3, [pc, #312]	; (80026f4 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x188>)
 80025ba:	4a4b      	ldr	r2, [pc, #300]	; (80026e8 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x17c>)
 80025bc:	21a5      	movs	r1, #165	; 0xa5
 80025be:	e7e6      	b.n	800258e <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x22>
    if (*currentTrans)
 80025c0:	f8df 9144 	ldr.w	r9, [pc, #324]	; 8002708 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x19c>
    Application::getInstance()->clearAllTimerWidgets();
 80025c4:	f00e fd74 	bl	80110b0 <_ZN8touchgfx11Application11getInstanceEv>
 80025c8:	f00e fd78 	bl	80110bc <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 80025cc:	f8d9 0000 	ldr.w	r0, [r9]
 80025d0:	b110      	cbz	r0, 80025d8 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x6c>
        (*currentTrans)->tearDown();
 80025d2:	6803      	ldr	r3, [r0, #0]
 80025d4:	68db      	ldr	r3, [r3, #12]
 80025d6:	4798      	blx	r3
    if (*currentTrans)
 80025d8:	f8d9 0000 	ldr.w	r0, [r9]
 80025dc:	b110      	cbz	r0, 80025e4 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x78>
        (*currentTrans)->~Transition();
 80025de:	6803      	ldr	r3, [r0, #0]
 80025e0:	681b      	ldr	r3, [r3, #0]
 80025e2:	4798      	blx	r3
    if (*currentScreen)
 80025e4:	f8df 8124 	ldr.w	r8, [pc, #292]	; 800270c <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x1a0>
 80025e8:	f8d8 0000 	ldr.w	r0, [r8]
 80025ec:	b110      	cbz	r0, 80025f4 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x88>
        (*currentScreen)->tearDownScreen();
 80025ee:	6803      	ldr	r3, [r0, #0]
 80025f0:	695b      	ldr	r3, [r3, #20]
 80025f2:	4798      	blx	r3
    if (*currentPresenter)
 80025f4:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 80025f8:	b110      	cbz	r0, 8002600 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x94>
        (*currentPresenter)->deactivate();
 80025fa:	6803      	ldr	r3, [r0, #0]
 80025fc:	685b      	ldr	r3, [r3, #4]
 80025fe:	4798      	blx	r3
    if (*currentScreen)
 8002600:	f8d8 0000 	ldr.w	r0, [r8]
 8002604:	b110      	cbz	r0, 800260c <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0xa0>
        (*currentScreen)->~Screen();
 8002606:	6803      	ldr	r3, [r0, #0]
 8002608:	681b      	ldr	r3, [r3, #0]
 800260a:	4798      	blx	r3
    if (*currentPresenter)
 800260c:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8002610:	b110      	cbz	r0, 8002618 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0xac>
        (*currentPresenter)->~Presenter();
 8002612:	6803      	ldr	r3, [r0, #0]
 8002614:	689b      	ldr	r3, [r3, #8]
 8002616:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002618:	f8db 000c 	ldr.w	r0, [fp, #12]
 800261c:	6803      	ldr	r3, [r0, #0]
 800261e:	2100      	movs	r1, #0
 8002620:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002622:	4798      	blx	r3
          solid()
 8002624:	4b34      	ldr	r3, [pc, #208]	; (80026f8 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x18c>)
 8002626:	6003      	str	r3, [r0, #0]
 8002628:	4604      	mov	r4, r0
 800262a:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 800262e:	8103      	strh	r3, [r0, #8]
 8002630:	2500      	movs	r5, #0
 8002632:	f44f 7380 	mov.w	r3, #256	; 0x100
 8002636:	6045      	str	r5, [r0, #4]
 8002638:	7285      	strb	r5, [r0, #10]
 800263a:	6363      	str	r3, [r4, #52]	; 0x34
    class FullSolidRect : public Widget
 800263c:	4b2f      	ldr	r3, [pc, #188]	; (80026fc <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x190>)
 800263e:	6123      	str	r3, [r4, #16]
            targetValue = HAL::DISPLAY_WIDTH;
 8002640:	4b2f      	ldr	r3, [pc, #188]	; (8002700 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x194>)
          solid()
 8002642:	81e5      	strh	r5, [r4, #14]
            targetValue = HAL::DISPLAY_WIDTH;
 8002644:	f9b3 1000 	ldrsh.w	r1, [r3]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8002648:	4b2e      	ldr	r3, [pc, #184]	; (8002704 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x198>)
            targetValue = HAL::DISPLAY_WIDTH;
 800264a:	81a1      	strh	r1, [r4, #12]
          solid()
 800264c:	3010      	adds	r0, #16
 800264e:	e9c4 5505 	strd	r5, r5, [r4, #20]
 8002652:	e9c4 5507 	strd	r5, r5, [r4, #28]
 8002656:	e9c4 5509 	strd	r5, r5, [r4, #36]	; 0x24
 800265a:	e9c4 550b 	strd	r5, r5, [r4, #44]	; 0x2c
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 800265e:	f9b3 6000 	ldrsh.w	r6, [r3]
        setWidth(width);
 8002662:	9001      	str	r0, [sp, #4]
 8002664:	f7ff fe1e 	bl	80022a4 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8002668:	6923      	ldr	r3, [r4, #16]
 800266a:	9801      	ldr	r0, [sp, #4]
 800266c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800266e:	4631      	mov	r1, r6
 8002670:	4798      	blx	r3
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002672:	f8db 0008 	ldr.w	r0, [fp, #8]
 8002676:	6803      	ldr	r3, [r0, #0]
 8002678:	4629      	mov	r1, r5
 800267a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800267c:	4798      	blx	r3
 800267e:	4606      	mov	r6, r0
 8002680:	f003 f876 	bl	8005770 <_ZN15ScreenGraphViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002684:	f8db 0004 	ldr.w	r0, [fp, #4]
 8002688:	6803      	ldr	r3, [r0, #0]
 800268a:	4629      	mov	r1, r5
 800268c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800268e:	4798      	blx	r3
 8002690:	4631      	mov	r1, r6
 8002692:	4605      	mov	r5, r0
 8002694:	f002 fd52 	bl	800513c <_ZN20ScreenGraphPresenterC1ER15ScreenGraphView>
    *currentTrans = newTransition;
 8002698:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 800269c:	f8c7 5138 	str.w	r5, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 80026a0:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80026a4:	b1e5      	cbz	r5, 80026e0 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x174>
 80026a6:	1d2b      	adds	r3, r5, #4
 80026a8:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80026ac:	6833      	ldr	r3, [r6, #0]
 80026ae:	f8c5 a008 	str.w	sl, [r5, #8]
 80026b2:	4630      	mov	r0, r6
 80026b4:	68db      	ldr	r3, [r3, #12]
 80026b6:	63f5      	str	r5, [r6, #60]	; 0x3c
 80026b8:	4798      	blx	r3
    newPresenter->activate();
 80026ba:	682b      	ldr	r3, [r5, #0]
 80026bc:	4628      	mov	r0, r5
 80026be:	681b      	ldr	r3, [r3, #0]
 80026c0:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80026c2:	4621      	mov	r1, r4
 80026c4:	4630      	mov	r0, r6
 80026c6:	f010 f9a1 	bl	8012a0c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80026ca:	6823      	ldr	r3, [r4, #0]
 80026cc:	4620      	mov	r0, r4
 80026ce:	691b      	ldr	r3, [r3, #16]
 80026d0:	4798      	blx	r3
    newTransition->invalidate();
 80026d2:	6823      	ldr	r3, [r4, #0]
 80026d4:	695b      	ldr	r3, [r3, #20]
 80026d6:	4620      	mov	r0, r4
}
 80026d8:	b003      	add	sp, #12
 80026da:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80026de:	4718      	bx	r3
    model->bind(newPresenter);
 80026e0:	462b      	mov	r3, r5
 80026e2:	e7e1      	b.n	80026a8 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x13c>
 80026e4:	08022224 	.word	0x08022224
 80026e8:	08022543 	.word	0x08022543
 80026ec:	080223b6 	.word	0x080223b6
 80026f0:	080223fd 	.word	0x080223fd
 80026f4:	080224a0 	.word	0x080224a0
 80026f8:	0802275c 	.word	0x0802275c
 80026fc:	080226f4 	.word	0x080226f4
 8002700:	200155ac 	.word	0x200155ac
 8002704:	200155ae 	.word	0x200155ae
 8002708:	20015600 	.word	0x20015600
 800270c:	200155fc 	.word	0x200155fc

08002710 <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8002710:	4b04      	ldr	r3, [pc, #16]	; (8002724 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 8002712:	681b      	ldr	r3, [r3, #0]
 8002714:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8002718:	b10a      	cbz	r2, 800271e <_ZN8touchgfx3HAL3lcdEv+0xe>
 800271a:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800271c:	b900      	cbnz	r0, 8002720 <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 800271e:	6898      	ldr	r0, [r3, #8]
    }
 8002720:	4770      	bx	lr
 8002722:	bf00      	nop
 8002724:	200155b8 	.word	0x200155b8

08002728 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
 8002728:	b5f0      	push	{r4, r5, r6, r7, lr}
 800272a:	4604      	mov	r4, r0
        animationCounter++;
 800272c:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter <= (animationSteps))
 800272e:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 8002730:	3001      	adds	r0, #1
 8002732:	b2c0      	uxtb	r0, r0
        if (animationCounter <= (animationSteps))
 8002734:	4298      	cmp	r0, r3
    virtual void handleTickEvent()
 8002736:	b089      	sub	sp, #36	; 0x24
        animationCounter++;
 8002738:	72a0      	strb	r0, [r4, #10]
        if (animationCounter <= (animationSteps))
 800273a:	d850      	bhi.n	80027de <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xb6>
            calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 800273c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8002740:	2100      	movs	r1, #0
 8002742:	f010 f969 	bl	8012a18 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
            if (calculatedValue % 2)
 8002746:	f010 0201 	ands.w	r2, r0, #1
 800274a:	b283      	uxth	r3, r0
 800274c:	d04d      	beq.n	80027ea <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xc2>
                calculatedValue += (calculatedValue > 0 ? 1 : -1);
 800274e:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8002752:	2800      	cmp	r0, #0
 8002754:	bfd8      	it	le
 8002756:	460a      	movle	r2, r1
 8002758:	4413      	add	r3, r2
 800275a:	81e3      	strh	r3, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800275c:	4e24      	ldr	r6, [pc, #144]	; (80027f0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xc8>)
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 800275e:	4f25      	ldr	r7, [pc, #148]	; (80027f4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xcc>)
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8002760:	8831      	ldrh	r1, [r6, #0]
                const uint16_t prevSolidWidth = solid.getWidth();
 8002762:	f8b4 c018 	ldrh.w	ip, [r4, #24]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8002766:	89e3      	ldrh	r3, [r4, #14]
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 8002768:	f9b7 0000 	ldrsh.w	r0, [r7]
 800276c:	f8ad 001e 	strh.w	r0, [sp, #30]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8002770:	1aca      	subs	r2, r1, r3
                screenContainer->invalidateRect(r);
 8002772:	6860      	ldr	r0, [r4, #4]
                const uint16_t delta = prevSolidWidth - solid.getWidth();
 8002774:	4463      	add	r3, ip
 8002776:	1a5b      	subs	r3, r3, r1
 8002778:	f8ad 301c 	strh.w	r3, [sp, #28]
                screenContainer->invalidateRect(r);
 800277c:	6803      	ldr	r3, [r0, #0]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800277e:	b212      	sxth	r2, r2
 8002780:	2500      	movs	r5, #0
                screenContainer->invalidateRect(r);
 8002782:	691b      	ldr	r3, [r3, #16]
        rect.width = width;
 8002784:	8322      	strh	r2, [r4, #24]
 8002786:	f8ad 2018 	strh.w	r2, [sp, #24]
 800278a:	f8ad 501a 	strh.w	r5, [sp, #26]
 800278e:	a906      	add	r1, sp, #24
 8002790:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 8002792:	7aa3      	ldrb	r3, [r4, #10]
 8002794:	2b01      	cmp	r3, #1
 8002796:	d126      	bne.n	80027e6 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xbe>
 8002798:	4b17      	ldr	r3, [pc, #92]	; (80027f8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xd0>)
 800279a:	781b      	ldrb	r3, [r3, #0]
 800279c:	b31b      	cbz	r3, 80027e6 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xbe>
            Rect rect = solid.getRect(); // Part to copy between buffers
 800279e:	69a1      	ldr	r1, [r4, #24]
 80027a0:	6960      	ldr	r0, [r4, #20]
 80027a2:	ab04      	add	r3, sp, #16
 80027a4:	c303      	stmia	r3!, {r0, r1}
        return instance;
 80027a6:	4b15      	ldr	r3, [pc, #84]	; (80027fc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xd4>)
 80027a8:	6818      	ldr	r0, [r3, #0]
            uint16_t* tftFb = HAL::getInstance()->getTFTFrameBuffer();
 80027aa:	6803      	ldr	r3, [r0, #0]
 80027ac:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80027ae:	4798      	blx	r3
            source.width = HAL::DISPLAY_WIDTH;
 80027b0:	8833      	ldrh	r3, [r6, #0]
 80027b2:	f8ad 301c 	strh.w	r3, [sp, #28]
            source.height = HAL::DISPLAY_HEIGHT;
 80027b6:	883b      	ldrh	r3, [r7, #0]
 80027b8:	f8ad 301e 	strh.w	r3, [sp, #30]
            uint16_t* tftFb = HAL::getInstance()->getTFTFrameBuffer();
 80027bc:	9003      	str	r0, [sp, #12]
        : x(0), y(0), width(0), height(0)
 80027be:	f8ad 5018 	strh.w	r5, [sp, #24]
 80027c2:	f8ad 501a 	strh.w	r5, [sp, #26]
            HAL::getInstance()->lcd().blitCopy((const uint16_t*)tftFb, source, rect, 255, false);
 80027c6:	f7ff ffa3 	bl	8002710 <_ZN8touchgfx3HAL3lcdEv>
 80027ca:	22ff      	movs	r2, #255	; 0xff
 80027cc:	6803      	ldr	r3, [r0, #0]
 80027ce:	9200      	str	r2, [sp, #0]
 80027d0:	9501      	str	r5, [sp, #4]
 80027d2:	68dc      	ldr	r4, [r3, #12]
 80027d4:	9903      	ldr	r1, [sp, #12]
 80027d6:	ab04      	add	r3, sp, #16
 80027d8:	aa06      	add	r2, sp, #24
 80027da:	47a0      	blx	r4
 80027dc:	e003      	b.n	80027e6 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xbe>
            done = true;
 80027de:	2301      	movs	r3, #1
 80027e0:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 80027e2:	2300      	movs	r3, #0
 80027e4:	72a3      	strb	r3, [r4, #10]
    }
 80027e6:	b009      	add	sp, #36	; 0x24
 80027e8:	bdf0      	pop	{r4, r5, r6, r7, pc}
            calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 80027ea:	81e0      	strh	r0, [r4, #14]
 80027ec:	e7b6      	b.n	800275c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x34>
 80027ee:	bf00      	nop
 80027f0:	200155ac 	.word	0x200155ac
 80027f4:	200155ae 	.word	0x200155ae
 80027f8:	200155b6 	.word	0x200155b6
 80027fc:	200155b8 	.word	0x200155b8

08002800 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8002800:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002802:	4604      	mov	r4, r0
 8002804:	4617      	mov	r7, r2
 8002806:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 8002808:	f00e fc72 	bl	80110f0 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 800280c:	4b0e      	ldr	r3, [pc, #56]	; (8002848 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x48>)
 800280e:	601c      	str	r4, [r3, #0]
      model(m)
 8002810:	4b0e      	ldr	r3, [pc, #56]	; (800284c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x4c>)
 8002812:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 8002814:	4b0e      	ldr	r3, [pc, #56]	; (8002850 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
          pendingScreenTransitionCallback(0)
 8002816:	2500      	movs	r5, #0
 8002818:	e9c4 3550 	strd	r3, r5, [r4, #320]	; 0x140
 800281c:	4b0d      	ldr	r3, [pc, #52]	; (8002854 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 800281e:	e9c4 5552 	strd	r5, r5, [r4, #328]	; 0x148
 8002822:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 8002824:	6803      	ldr	r3, [r0, #0]
 8002826:	4629      	mov	r1, r5
 8002828:	689b      	ldr	r3, [r3, #8]
 800282a:	e9c4 554e 	strd	r5, r5, [r4, #312]	; 0x138
      model(m)
 800282e:	e9c4 7654 	strd	r7, r6, [r4, #336]	; 0x150
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 8002832:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 8002834:	4628      	mov	r0, r5
 8002836:	f002 fa97 	bl	8004d68 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 800283a:	f7ff ff69 	bl	8002710 <_ZN8touchgfx3HAL3lcdEv>
 800283e:	f016 fd44 	bl	80192ca <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
}
 8002842:	4620      	mov	r0, r4
 8002844:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002846:	bf00      	nop
 8002848:	2001560c 	.word	0x2001560c
 800284c:	08022684 	.word	0x08022684
 8002850:	0802266c 	.word	0x0802266c
 8002854:	200155b8 	.word	0x200155b8

08002858 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002858:	4b06      	ldr	r3, [pc, #24]	; (8002874 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv+0x1c>)
 800285a:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 800285e:	2300      	movs	r3, #0
 8002860:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
    pendingScreenTransitionCallback = &transitionCallback;
 8002864:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8002868:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 800286c:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8002870:	4770      	bx	lr
 8002872:	bf00      	nop
 8002874:	0800241d 	.word	0x0800241d

08002878 <_ZN23FrontendApplicationBase39gotoScreenGraphScreenWipeTransitionEastEv>:
 8002878:	4b06      	ldr	r3, [pc, #24]	; (8002894 <_ZN23FrontendApplicationBase39gotoScreenGraphScreenWipeTransitionEastEv+0x1c>)
 800287a:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 800287e:	2300      	movs	r3, #0
 8002880:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
    pendingScreenTransitionCallback = &transitionCallback;
 8002884:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8002888:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 800288c:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8002890:	4770      	bx	lr
 8002892:	bf00      	nop
 8002894:	0800256d 	.word	0x0800256d

08002898 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8002898:	6a00      	ldr	r0, [r0, #32]
 800289a:	4770      	bx	lr

0800289c <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 800289c:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800289e:	4770      	bx	lr

080028a0 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 80028a0:	4770      	bx	lr

080028a2 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 80028a2:	888b      	ldrh	r3, [r1, #4]
 80028a4:	6980      	ldr	r0, [r0, #24]
 80028a6:	680a      	ldr	r2, [r1, #0]
 80028a8:	0adb      	lsrs	r3, r3, #11
 80028aa:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 80028ae:	4410      	add	r0, r2
 80028b0:	4770      	bx	lr

080028b2 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 80028b2:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 80028b4:	b1c2      	cbz	r2, 80028e8 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 80028b6:	7b13      	ldrb	r3, [r2, #12]
 80028b8:	b1b3      	cbz	r3, 80028e8 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 80028ba:	7b54      	ldrb	r4, [r2, #13]
 80028bc:	7ad2      	ldrb	r2, [r2, #11]
 80028be:	0224      	lsls	r4, r4, #8
 80028c0:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 80028c4:	4314      	orrs	r4, r2
 80028c6:	69c2      	ldr	r2, [r0, #28]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 80028c8:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 80028ca:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 80028ce:	8813      	ldrh	r3, [r2, #0]
 80028d0:	428b      	cmp	r3, r1
 80028d2:	d102      	bne.n	80028da <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 80028d4:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 80028d8:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 80028da:	d805      	bhi.n	80028e8 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 80028dc:	3801      	subs	r0, #1
 80028de:	b280      	uxth	r0, r0
 80028e0:	3204      	adds	r2, #4
 80028e2:	2800      	cmp	r0, #0
 80028e4:	d1f3      	bne.n	80028ce <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 80028e6:	e7f7      	b.n	80028d8 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 80028e8:	2000      	movs	r0, #0
 80028ea:	e7f5      	b.n	80028d8 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

080028ec <_ZN8touchgfx13GeneratedFontD0Ev>:
 80028ec:	b510      	push	{r4, lr}
 80028ee:	2128      	movs	r1, #40	; 0x28
 80028f0:	4604      	mov	r4, r0
 80028f2:	f01d fef9 	bl	80206e8 <_ZdlPvj>
 80028f6:	4620      	mov	r0, r4
 80028f8:	bd10      	pop	{r4, pc}
	...

080028fc <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* list, uint16_t size, uint16_t height, uint8_t pixBelowBase, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 80028fc:	b530      	push	{r4, r5, lr}
 80028fe:	b089      	sub	sp, #36	; 0x24
 8002900:	4604      	mov	r4, r0
      arabicTable(formsTable)
 8002902:	f8bd 5050 	ldrh.w	r5, [sp, #80]	; 0x50
 8002906:	9506      	str	r5, [sp, #24]
 8002908:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 800290c:	9505      	str	r5, [sp, #20]
 800290e:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 8002912:	9504      	str	r5, [sp, #16]
 8002914:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 8002918:	9503      	str	r5, [sp, #12]
 800291a:	f89d 5038 	ldrb.w	r5, [sp, #56]	; 0x38
 800291e:	9502      	str	r5, [sp, #8]
 8002920:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 8002924:	9501      	str	r5, [sp, #4]
 8002926:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 800292a:	9500      	str	r5, [sp, #0]
 800292c:	f00f fc04 	bl	8012138 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>
 8002930:	4b06      	ldr	r3, [pc, #24]	; (800294c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x50>)
 8002932:	6023      	str	r3, [r4, #0]
 8002934:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8002936:	61a3      	str	r3, [r4, #24]
 8002938:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800293a:	61e3      	str	r3, [r4, #28]
 800293c:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800293e:	6223      	str	r3, [r4, #32]
 8002940:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8002942:	6263      	str	r3, [r4, #36]	; 0x24
}
 8002944:	4620      	mov	r0, r4
 8002946:	b009      	add	sp, #36	; 0x24
 8002948:	bd30      	pop	{r4, r5, pc}
 800294a:	bf00      	nop
 800294c:	08022780 	.word	0x08022780

08002950 <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 8002950:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8002952:	4770      	bx	lr

08002954 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 8002954:	4770      	bx	lr

08002956 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 8002956:	4770      	bx	lr

08002958 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 8002958:	4770      	bx	lr

0800295a <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 800295a:	4770      	bx	lr

0800295c <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 800295c:	4770      	bx	lr

0800295e <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
 800295e:	b530      	push	{r4, r5, lr}
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
 8002960:	6803      	ldr	r3, [r0, #0]
 8002962:	8101      	strh	r1, [r0, #8]
    virtual void setWidth(int16_t width)
 8002964:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 8002966:	466d      	mov	r5, sp
 8002968:	4601      	mov	r1, r0
 800296a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setWidth(int16_t width)
 800296e:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8002970:	4628      	mov	r0, r5
 8002972:	4798      	blx	r3
 8002974:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002978:	343c      	adds	r4, #60	; 0x3c
 800297a:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 800297e:	b005      	add	sp, #20
 8002980:	bd30      	pop	{r4, r5, pc}

08002982 <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 8002982:	b530      	push	{r4, r5, lr}
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
 8002984:	6803      	ldr	r3, [r0, #0]
        rect.height = height;
 8002986:	8141      	strh	r1, [r0, #10]
    virtual void setHeight(int16_t height)
 8002988:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 800298a:	466d      	mov	r5, sp
 800298c:	4601      	mov	r1, r0
 800298e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setHeight(int16_t height)
 8002992:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8002994:	4628      	mov	r0, r5
 8002996:	4798      	blx	r3
 8002998:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800299c:	343c      	adds	r4, #60	; 0x3c
 800299e:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 80029a2:	b005      	add	sp, #20
 80029a4:	bd30      	pop	{r4, r5, pc}

080029a6 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 80029a6:	2200      	movs	r2, #0
 80029a8:	8002      	strh	r2, [r0, #0]
 80029aa:	8042      	strh	r2, [r0, #2]
 80029ac:	8082      	strh	r2, [r0, #4]
 80029ae:	80c2      	strh	r2, [r0, #6]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 80029b0:	4770      	bx	lr

080029b2 <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 80029b2:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
    }
 80029b6:	4770      	bx	lr

080029b8 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80029b8:	b570      	push	{r4, r5, r6, lr}
    {
        setX(x);
 80029ba:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80029bc:	4604      	mov	r4, r0
        setX(x);
 80029be:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80029c0:	4615      	mov	r5, r2
        setX(x);
 80029c2:	4798      	blx	r3
        setBaselineY(baselineY);
 80029c4:	6823      	ldr	r3, [r4, #0]
 80029c6:	4629      	mov	r1, r5
 80029c8:	4620      	mov	r0, r4
 80029ca:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    }
 80029cc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 80029d0:	4718      	bx	r3

080029d2 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
 80029d2:	2000      	movs	r0, #0
 80029d4:	4770      	bx	lr

080029d6 <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 80029d6:	6c80      	ldr	r0, [r0, #72]	; 0x48
 80029d8:	4770      	bx	lr

080029da <_ZN15Screen1ViewBaseD1Ev>:

class Screen1ViewBase : public touchgfx::View<Screen1Presenter>
{
public:
    Screen1ViewBase();
    virtual ~Screen1ViewBase() {}
 80029da:	4770      	bx	lr

080029dc <_ZN15Screen1ViewBase17ButtonDownClickedEv>:
     * Virtual Action Handlers
     */
    virtual void ButtonDownClicked()
    {
        // Override and implement this function in Screen1
    }
 80029dc:	4770      	bx	lr

080029de <_ZN15Screen1ViewBase15ButtonUpClickedEv>:

    virtual void ButtonUpClicked()
    {
        // Override and implement this function in Screen1
    }
 80029de:	4770      	bx	lr

080029e0 <_ZN15Screen1ViewBase18ButtonStartClickedEv>:

    virtual void ButtonStartClicked()
    {
        // Override and implement this function in Screen1
    }
 80029e0:	4770      	bx	lr

080029e2 <_ZN15Screen1ViewBase19ButtonUpTimeClickedEv>:

    virtual void ButtonUpTimeClicked()
    {
        // Override and implement this function in Screen1
    }
 80029e2:	4770      	bx	lr

080029e4 <_ZN15Screen1ViewBase21ButtonDownTimeClickedEv>:

    virtual void ButtonDownTimeClicked()
    {
        // Override and implement this function in Screen1
    }
 80029e4:	4770      	bx	lr

080029e6 <_ZN15Screen1ViewBase11setupScreenEv>:
}

void Screen1ViewBase::setupScreen()
{

}
 80029e6:	4770      	bx	lr

080029e8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>:
 * @tparam T Generic type parameter. Typically a AbstractButtonContainer subclass.
 *
 * @see AbstractButtonContainer, BoxWithBorder
 */
template <class T>
class BoxWithBorderButtonStyle : public T
 80029e8:	4770      	bx	lr

080029ea <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>:
     *
     * @see setPressed
     */
    bool getPressed()
    {
        return pressed;
 80029ea:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
    colortype borderDown;    ///< The border down

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
    {
        borderBox.setColor(T::getPressed() ? down : up);
 80029ee:	b14b      	cbz	r3, 8002a04 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x1a>
 80029f0:	f100 026c 	add.w	r2, r0, #108	; 0x6c
 80029f4:	6812      	ldr	r2, [r2, #0]
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 80029f6:	65c2      	str	r2, [r0, #92]	; 0x5c
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 80029f8:	b13b      	cbz	r3, 8002a0a <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x20>
 80029fa:	f100 0374 	add.w	r3, r0, #116	; 0x74
 80029fe:	681b      	ldr	r3, [r3, #0]
     *
     * @see setColor, getBorderColor, Color::getColorFromRGB
     */
    void setBorderColor(colortype colorBorder)
    {
        borderColor = colorBorder;
 8002a00:	6603      	str	r3, [r0, #96]	; 0x60
        T::handlePressedUpdated();
    }
 8002a02:	4770      	bx	lr
        borderBox.setColor(T::getPressed() ? down : up);
 8002a04:	f100 0268 	add.w	r2, r0, #104	; 0x68
 8002a08:	e7f4      	b.n	80029f4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0xa>
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 8002a0a:	f100 0370 	add.w	r3, r0, #112	; 0x70
 8002a0e:	e7f6      	b.n	80029fe <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x14>

08002a10 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002a10:	4770      	bx	lr

08002a12 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
 8002a12:	4770      	bx	lr

08002a14 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED1Ev>:
 * The position of the icon can be adjusted with setIconXY.
 *
 * @see AbstractButtonContainer
 */
template <class T>
class IconButtonStyle : public T
 8002a14:	4770      	bx	lr

08002a16 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 8002a16:	4770      	bx	lr

08002a18 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8002a18:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002a1a:	68c2      	ldr	r2, [r0, #12]
 8002a1c:	6844      	ldr	r4, [r0, #4]
 8002a1e:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002a20:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002a22:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002a26:	07d2      	lsls	r2, r2, #31
 8002a28:	bf48      	it	mi
 8002a2a:	5962      	ldrmi	r2, [r4, r5]
 8002a2c:	689b      	ldr	r3, [r3, #8]
    }
 8002a2e:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002a30:	bf48      	it	mi
 8002a32:	58d3      	ldrmi	r3, [r2, r3]
 8002a34:	4718      	bx	r3

08002a36 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8002a36:	6843      	ldr	r3, [r0, #4]
 8002a38:	b12b      	cbz	r3, 8002a46 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x10>
 8002a3a:	6883      	ldr	r3, [r0, #8]
 8002a3c:	b92b      	cbnz	r3, 8002a4a <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 8002a3e:	68c0      	ldr	r0, [r0, #12]
 8002a40:	f000 0001 	and.w	r0, r0, #1
 8002a44:	4770      	bx	lr
 8002a46:	4618      	mov	r0, r3
 8002a48:	4770      	bx	lr
 8002a4a:	2001      	movs	r0, #1
    }
 8002a4c:	4770      	bx	lr

08002a4e <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8002a4e:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002a50:	68c2      	ldr	r2, [r0, #12]
 8002a52:	6844      	ldr	r4, [r0, #4]
 8002a54:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002a56:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002a58:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002a5c:	07d2      	lsls	r2, r2, #31
 8002a5e:	bf48      	it	mi
 8002a60:	5962      	ldrmi	r2, [r4, r5]
 8002a62:	689b      	ldr	r3, [r3, #8]
    }
 8002a64:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002a66:	bf48      	it	mi
 8002a68:	58d3      	ldrmi	r3, [r2, r3]
 8002a6a:	4718      	bx	r3

08002a6c <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8002a6c:	6843      	ldr	r3, [r0, #4]
 8002a6e:	b12b      	cbz	r3, 8002a7c <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8002a70:	6883      	ldr	r3, [r0, #8]
 8002a72:	b92b      	cbnz	r3, 8002a80 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8002a74:	68c0      	ldr	r0, [r0, #12]
 8002a76:	f000 0001 	and.w	r0, r0, #1
 8002a7a:	4770      	bx	lr
 8002a7c:	4618      	mov	r0, r3
 8002a7e:	4770      	bx	lr
 8002a80:	2001      	movs	r0, #1
    }
 8002a82:	4770      	bx	lr

08002a84 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE18handleAlphaUpdatedEv>:
    }

    /** @copydoc Image::getAlpha() */
    uint8_t getAlpha() const
    {
        return alpha;
 8002a84:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
     *
     * @note The user code must call invalidate() in order to update the display.
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002a88:	f880 30a4 	strb.w	r3, [r0, #164]	; 0xa4
    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002a8c:	f880 305a 	strb.w	r3, [r0, #90]	; 0x5a
    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        iconImage.setAlpha(T::getAlpha());
        T::handleAlphaUpdated();
    }
 8002a90:	4770      	bx	lr

08002a92 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE18handleAlphaUpdatedEv>:
 8002a92:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
 8002a96:	f880 305a 	strb.w	r3, [r0, #90]	; 0x5a
    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        borderBox.setAlpha(T::getAlpha());
        T::handleAlphaUpdated();
    }
 8002a9a:	4770      	bx	lr

08002a9c <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>:
    virtual void handlePressedUpdated()
 8002a9c:	b510      	push	{r4, lr}
 8002a9e:	4604      	mov	r4, r0
        iconImage.setBitmap(T::getPressed() ? iconPressed : iconReleased);
 8002aa0:	307c      	adds	r0, #124	; 0x7c
 8002aa2:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 8002aa6:	b13b      	cbz	r3, 8002ab8 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0x1c>
 8002aa8:	f104 017a 	add.w	r1, r4, #122	; 0x7a
 8002aac:	f00b fe52 	bl	800e754 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        T::handlePressedUpdated();
 8002ab0:	4620      	mov	r0, r4
 8002ab2:	f7ff ff9a 	bl	80029ea <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
    }
 8002ab6:	bd10      	pop	{r4, pc}
        iconImage.setBitmap(T::getPressed() ? iconPressed : iconReleased);
 8002ab8:	f104 0178 	add.w	r1, r4, #120	; 0x78
 8002abc:	e7f6      	b.n	8002aac <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0x10>

08002abe <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 8002abe:	b510      	push	{r4, lr}
 8002ac0:	214c      	movs	r1, #76	; 0x4c
 8002ac2:	4604      	mov	r4, r0
 8002ac4:	f01d fe10 	bl	80206e8 <_ZdlPvj>
 8002ac8:	4620      	mov	r0, r4
 8002aca:	bd10      	pop	{r4, pc}

08002acc <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED0Ev>:
class BoxWithBorderButtonStyle : public T
 8002acc:	b510      	push	{r4, lr}
 8002ace:	2178      	movs	r1, #120	; 0x78
 8002ad0:	4604      	mov	r4, r0
 8002ad2:	f01d fe09 	bl	80206e8 <_ZdlPvj>
 8002ad6:	4620      	mov	r0, r4
 8002ad8:	bd10      	pop	{r4, pc}

08002ada <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED0Ev>:
class IconButtonStyle : public T
 8002ada:	b510      	push	{r4, lr}
 8002adc:	21a8      	movs	r1, #168	; 0xa8
 8002ade:	4604      	mov	r4, r0
 8002ae0:	f01d fe02 	bl	80206e8 <_ZdlPvj>
 8002ae4:	4620      	mov	r0, r4
 8002ae6:	bd10      	pop	{r4, pc}

08002ae8 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002ae8:	b510      	push	{r4, lr}
 8002aea:	2110      	movs	r1, #16
 8002aec:	4604      	mov	r4, r0
 8002aee:	f01d fdfb 	bl	80206e8 <_ZdlPvj>
 8002af2:	4620      	mov	r0, r4
 8002af4:	bd10      	pop	{r4, pc}

08002af6 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
 8002af6:	b510      	push	{r4, lr}
 8002af8:	2110      	movs	r1, #16
 8002afa:	4604      	mov	r4, r0
 8002afc:	f01d fdf4 	bl	80206e8 <_ZdlPvj>
 8002b00:	4620      	mov	r0, r4
 8002b02:	bd10      	pop	{r4, pc}

08002b04 <_ZN15Screen1ViewBaseD0Ev>:
    virtual ~Screen1ViewBase() {}
 8002b04:	b510      	push	{r4, lr}
 8002b06:	f44f 61c2 	mov.w	r1, #1552	; 0x610
 8002b0a:	4604      	mov	r4, r0
 8002b0c:	f01d fdec 	bl	80206e8 <_ZdlPvj>
 8002b10:	4620      	mov	r0, r4
 8002b12:	bd10      	pop	{r4, pc}

08002b14 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv>:
    /**
     * Executes the previously set action.
     *
     * @see setAction
     */
    virtual void executeAction()
 8002b14:	b510      	push	{r4, lr}
 8002b16:	4604      	mov	r4, r0
    {
        if (action && action->isValid())
 8002b18:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8002b1a:	b150      	cbz	r0, 8002b32 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1e>
 8002b1c:	6803      	ldr	r3, [r0, #0]
 8002b1e:	68db      	ldr	r3, [r3, #12]
 8002b20:	4798      	blx	r3
 8002b22:	b130      	cbz	r0, 8002b32 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1e>
        {
            action->execute(*this);
 8002b24:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8002b26:	6803      	ldr	r3, [r0, #0]
 8002b28:	4621      	mov	r1, r4
 8002b2a:	689b      	ldr	r3, [r3, #8]
        }
    }
 8002b2c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            action->execute(*this);
 8002b30:	4718      	bx	r3
    }
 8002b32:	bd10      	pop	{r4, pc}

08002b34 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:
    }
}

void Screen1ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &ButtonDown)
 8002b34:	f100 02c4 	add.w	r2, r0, #196	; 0xc4
 8002b38:	4291      	cmp	r1, r2
 8002b3a:	d102      	bne.n	8002b42 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xe>
    {
        //ButtonUpInteraction
        //When ButtonDown clicked call virtual function
        //Call ButtonDownClicked
        ButtonDownClicked();
 8002b3c:	6803      	ldr	r3, [r0, #0]
 8002b3e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    else if (&src == &ButtonUpTime)
    {
        //InteractionButtonUpTimeClicked
        //When ButtonUpTime clicked call virtual function
        //Call ButtonUpTimeClicked
        ButtonUpTimeClicked();
 8002b40:	4718      	bx	r3
    else if (&src == &ButtonUp)
 8002b42:	f500 72b6 	add.w	r2, r0, #364	; 0x16c
 8002b46:	4291      	cmp	r1, r2
 8002b48:	d102      	bne.n	8002b50 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1c>
        ButtonUpClicked();
 8002b4a:	6803      	ldr	r3, [r0, #0]
 8002b4c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002b4e:	e7f7      	b.n	8002b40 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xc>
    else if (&src == &ButtonDownTime)
 8002b50:	f200 4224 	addw	r2, r0, #1060	; 0x424
 8002b54:	4291      	cmp	r1, r2
 8002b56:	d102      	bne.n	8002b5e <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x2a>
        ButtonDownTimeClicked();
 8002b58:	6803      	ldr	r3, [r0, #0]
 8002b5a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8002b5c:	e7f0      	b.n	8002b40 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xc>
    else if (&src == &ButtonUpTime)
 8002b5e:	f200 42cc 	addw	r2, r0, #1228	; 0x4cc
 8002b62:	4291      	cmp	r1, r2
 8002b64:	d102      	bne.n	8002b6c <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x38>
        ButtonUpTimeClicked();
 8002b66:	6803      	ldr	r3, [r0, #0]
 8002b68:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002b6a:	e7e9      	b.n	8002b40 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xc>
    }
}
 8002b6c:	4770      	bx	lr

08002b6e <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE>:
     *
     * @return The click type of this event.
     */
    ClickEventType getType() const
    {
        return clickEventType;
 8002b6e:	790b      	ldrb	r3, [r1, #4]
     *
     * @param  event The click event.
     *
     * @see setAction, setPressed, getPressed
     */
    virtual void handleClickEvent(const ClickEvent& event)
 8002b70:	b570      	push	{r4, r5, r6, lr}
        return pressed;
 8002b72:	f890 602c 	ldrb.w	r6, [r0, #44]	; 0x2c
 8002b76:	4604      	mov	r4, r0
 8002b78:	460d      	mov	r5, r1
    {
        bool wasPressed = getPressed();
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 8002b7a:	b99b      	cbnz	r3, 8002ba4 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x36>
 8002b7c:	b98e      	cbnz	r6, 8002ba2 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
 8002b7e:	fab3 f383 	clz	r3, r3
 8002b82:	095b      	lsrs	r3, r3, #5
 8002b84:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
        handlePressedUpdated();
 8002b88:	6823      	ldr	r3, [r4, #0]
 8002b8a:	4620      	mov	r0, r4
 8002b8c:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8002b90:	4798      	blx	r3
        {
            setPressed(newPressedValue);
            invalidate();
 8002b92:	6823      	ldr	r3, [r4, #0]
 8002b94:	4620      	mov	r0, r4
 8002b96:	695b      	ldr	r3, [r3, #20]
 8002b98:	4798      	blx	r3
        }
        if (wasPressed && (event.getType() == ClickEvent::RELEASED))
 8002b9a:	b116      	cbz	r6, 8002ba2 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
 8002b9c:	792b      	ldrb	r3, [r5, #4]
 8002b9e:	2b01      	cmp	r3, #1
 8002ba0:	d003      	beq.n	8002baa <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x3c>
        {
            executeAction();
        }
    }
 8002ba2:	bd70      	pop	{r4, r5, r6, pc}
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 8002ba4:	2e00      	cmp	r6, #0
 8002ba6:	d0fc      	beq.n	8002ba2 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
 8002ba8:	e7e9      	b.n	8002b7e <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x10>
            executeAction();
 8002baa:	6823      	ldr	r3, [r4, #0]
 8002bac:	4620      	mov	r0, r4
 8002bae:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
    }
 8002bb2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            executeAction();
 8002bb6:	4718      	bx	r3

08002bb8 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8002bb8:	6803      	ldr	r3, [r0, #0]
    virtual void setBaselineY(int16_t baselineY)
 8002bba:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8002bbc:	6b5e      	ldr	r6, [r3, #52]	; 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002bbe:	4b12      	ldr	r3, [pc, #72]	; (8002c08 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 8002bc0:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
 8002bc2:	4604      	mov	r4, r0
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8002bc4:	b28d      	uxth	r5, r1
 8002bc6:	b92b      	cbnz	r3, 8002bd4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x1c>
 8002bc8:	4b10      	ldr	r3, [pc, #64]	; (8002c0c <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 8002bca:	4a11      	ldr	r2, [pc, #68]	; (8002c10 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8002bcc:	216c      	movs	r1, #108	; 0x6c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002bce:	4811      	ldr	r0, [pc, #68]	; (8002c14 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 8002bd0:	f01d fe3e 	bl	8020850 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8002bd4:	4910      	ldr	r1, [pc, #64]	; (8002c18 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 8002bd6:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002bd8:	8809      	ldrh	r1, [r1, #0]
 8002bda:	4291      	cmp	r1, r2
 8002bdc:	d803      	bhi.n	8002be6 <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 8002bde:	4b0f      	ldr	r3, [pc, #60]	; (8002c1c <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 8002be0:	4a0b      	ldr	r2, [pc, #44]	; (8002c10 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8002be2:	216d      	movs	r1, #109	; 0x6d
 8002be4:	e7f3      	b.n	8002bce <_ZN8touchgfx8TextArea12setBaselineYEs+0x16>
        return fonts[typedTexts[typedTextId].fontIdx];
 8002be6:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8002bea:	4b0d      	ldr	r3, [pc, #52]	; (8002c20 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 8002bec:	681b      	ldr	r3, [r3, #0]
 8002bee:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8002bf2:	6803      	ldr	r3, [r0, #0]
 8002bf4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002bf6:	4798      	blx	r3
 8002bf8:	1a28      	subs	r0, r5, r0
 8002bfa:	b201      	sxth	r1, r0
 8002bfc:	4633      	mov	r3, r6
 8002bfe:	4620      	mov	r0, r4
    }
 8002c00:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8002c04:	4718      	bx	r3
 8002c06:	bf00      	nop
 8002c08:	20015610 	.word	0x20015610
 8002c0c:	080227d0 	.word	0x080227d0
 8002c10:	08022812 	.word	0x08022812
 8002c14:	0802284d 	.word	0x0802284d
 8002c18:	20015614 	.word	0x20015614
 8002c1c:	08022894 	.word	0x08022894
 8002c20:	20015618 	.word	0x20015618

08002c24 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    if (&src == &buttonStart)
 8002c24:	f500 732a 	add.w	r3, r0, #680	; 0x2a8
 8002c28:	428b      	cmp	r3, r1
{
 8002c2a:	b510      	push	{r4, lr}
 8002c2c:	4604      	mov	r4, r0
    if (&src == &buttonStart)
 8002c2e:	d109      	bne.n	8002c44 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x20>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8002c30:	f00e fa3e 	bl	80110b0 <_ZN8touchgfx11Application11getInstanceEv>
        application().gotoScreenGraphScreenWipeTransitionEast();
 8002c34:	f7ff fe20 	bl	8002878 <_ZN23FrontendApplicationBase39gotoScreenGraphScreenWipeTransitionEastEv>
        ButtonStartClicked();
 8002c38:	6823      	ldr	r3, [r4, #0]
 8002c3a:	4620      	mov	r0, r4
 8002c3c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
}
 8002c3e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        ButtonStartClicked();
 8002c42:	4718      	bx	r3
}
 8002c44:	bd10      	pop	{r4, pc}

08002c46 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 8002c46:	2200      	movs	r2, #0
 8002c48:	f04f 31ff 	mov.w	r1, #4294967295
 8002c4c:	e9c0 2100 	strd	r2, r1, [r0]
              text(0)
 8002c50:	6082      	str	r2, [r0, #8]
    }
 8002c52:	4770      	bx	lr

08002c54 <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 8002c54:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 8002c56:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 8002c58:	4604      	mov	r4, r0
        setX(x);
 8002c5a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setXY(int16_t x, int16_t y)
 8002c5c:	4615      	mov	r5, r2
        setX(x);
 8002c5e:	4798      	blx	r3
        setY(y);
 8002c60:	6823      	ldr	r3, [r4, #0]
 8002c62:	4629      	mov	r1, r5
 8002c64:	4620      	mov	r0, r4
 8002c66:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    }
 8002c68:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 8002c6c:	4718      	bx	r3

08002c6e <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>:
        iconReleased = newIconReleased;
 8002c6e:	880b      	ldrh	r3, [r1, #0]
    virtual void setIconBitmaps(const Bitmap& newIconReleased, const Bitmap& newIconPressed)
 8002c70:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
        iconReleased = newIconReleased;
 8002c74:	f8a0 3078 	strh.w	r3, [r0, #120]	; 0x78
        iconPressed = newIconPressed;
 8002c78:	8813      	ldrh	r3, [r2, #0]
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
 8002c7a:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
        iconPressed = newIconPressed;
 8002c7e:	f8a0 307a 	strh.w	r3, [r0, #122]	; 0x7a
    virtual void setIconBitmaps(const Bitmap& newIconReleased, const Bitmap& newIconPressed)
 8002c82:	4604      	mov	r4, r0
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
 8002c84:	4610      	mov	r0, r2
    virtual void setIconBitmaps(const Bitmap& newIconReleased, const Bitmap& newIconPressed)
 8002c86:	4690      	mov	r8, r2
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
 8002c88:	f011 fc42 	bl	8014510 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8002c8c:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8002c90:	4607      	mov	r7, r0
 8002c92:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8002c96:	4640      	mov	r0, r8
 8002c98:	f3c3 064f 	ubfx	r6, r3, #1, #16
 8002c9c:	f011 fc6c 	bl	8014578 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8002ca0:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8002ca4:	f3c5 054f 	ubfx	r5, r5, #1, #16
 8002ca8:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8002cac:	eb07 77d7 	add.w	r7, r7, r7, lsr #31
 8002cb0:	eba6 0260 	sub.w	r2, r6, r0, asr #1
 8002cb4:	eba5 0767 	sub.w	r7, r5, r7, asr #1
 8002cb8:	f104 007c 	add.w	r0, r4, #124	; 0x7c
 8002cbc:	b239      	sxth	r1, r7
 8002cbe:	b212      	sxth	r2, r2
 8002cc0:	f7ff ffc8 	bl	8002c54 <_ZN8touchgfx8Drawable5setXYEss>
        handlePressedUpdated();
 8002cc4:	6823      	ldr	r3, [r4, #0]
 8002cc6:	4620      	mov	r0, r4
 8002cc8:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
    }
 8002ccc:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
        handlePressedUpdated();
 8002cd0:	4718      	bx	r3

08002cd2 <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8002cd2:	b570      	push	{r4, r5, r6, lr}
 8002cd4:	4604      	mov	r4, r0
 8002cd6:	461d      	mov	r5, r3
 8002cd8:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 8002cdc:	f7ff ffba 	bl	8002c54 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8002ce0:	6823      	ldr	r3, [r4, #0]
 8002ce2:	4629      	mov	r1, r5
 8002ce4:	4620      	mov	r0, r4
 8002ce6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002ce8:	4798      	blx	r3
        setHeight(height);
 8002cea:	6823      	ldr	r3, [r4, #0]
 8002cec:	4631      	mov	r1, r6
 8002cee:	4620      	mov	r0, r4
 8002cf0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 8002cf2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 8002cf6:	4718      	bx	r3

08002cf8 <_ZN8touchgfx6WidgetC1Ev>:
 8002cf8:	2200      	movs	r2, #0
 8002cfa:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8002cfe:	e9c0 2203 	strd	r2, r2, [r0, #12]
          visible(true)
 8002d02:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8002d06:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8002d0a:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002d0e:	8482      	strh	r2, [r0, #36]	; 0x24
class Widget : public Drawable
 8002d10:	4a01      	ldr	r2, [pc, #4]	; (8002d18 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 8002d12:	6002      	str	r2, [r0, #0]
 8002d14:	4770      	bx	lr
 8002d16:	bf00      	nop
 8002d18:	08022918 	.word	0x08022918

08002d1c <_ZN8touchgfx3BoxC1Ev>:
    Box()
 8002d1c:	b510      	push	{r4, lr}
        : Widget(), alpha(255), color(0)
 8002d1e:	2226      	movs	r2, #38	; 0x26
    Box()
 8002d20:	4604      	mov	r4, r0
        : Widget(), alpha(255), color(0)
 8002d22:	2100      	movs	r1, #0
 8002d24:	f01d ff1a 	bl	8020b5c <memset>
 8002d28:	4620      	mov	r0, r4
 8002d2a:	f7ff ffe5 	bl	8002cf8 <_ZN8touchgfx6WidgetC1Ev>
 8002d2e:	4b04      	ldr	r3, [pc, #16]	; (8002d40 <_ZN8touchgfx3BoxC1Ev+0x24>)
 8002d30:	6023      	str	r3, [r4, #0]
 8002d32:	23ff      	movs	r3, #255	; 0xff
 8002d34:	f884 3026 	strb.w	r3, [r4, #38]	; 0x26
        : color(col)
 8002d38:	2300      	movs	r3, #0
 8002d3a:	62a3      	str	r3, [r4, #40]	; 0x28
    }
 8002d3c:	4620      	mov	r0, r4
 8002d3e:	bd10      	pop	{r4, pc}
 8002d40:	0802406c 	.word	0x0802406c

08002d44 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
    Image(const Bitmap& bmp = Bitmap())
 8002d44:	b538      	push	{r3, r4, r5, lr}
        : Widget(), bitmap(bmp), alpha(255)
 8002d46:	2226      	movs	r2, #38	; 0x26
    Image(const Bitmap& bmp = Bitmap())
 8002d48:	4604      	mov	r4, r0
 8002d4a:	460d      	mov	r5, r1
        : Widget(), bitmap(bmp), alpha(255)
 8002d4c:	2100      	movs	r1, #0
 8002d4e:	f01d ff05 	bl	8020b5c <memset>
 8002d52:	4620      	mov	r0, r4
 8002d54:	f7ff ffd0 	bl	8002cf8 <_ZN8touchgfx6WidgetC1Ev>
 8002d58:	4b06      	ldr	r3, [pc, #24]	; (8002d74 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x30>)
 8002d5a:	6023      	str	r3, [r4, #0]
 8002d5c:	882b      	ldrh	r3, [r5, #0]
 8002d5e:	84e3      	strh	r3, [r4, #38]	; 0x26
 8002d60:	23ff      	movs	r3, #255	; 0xff
        Image::setBitmap(bmp);
 8002d62:	4620      	mov	r0, r4
        : Widget(), bitmap(bmp), alpha(255)
 8002d64:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
        Image::setBitmap(bmp);
 8002d68:	4629      	mov	r1, r5
 8002d6a:	f00b fcf3 	bl	800e754 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    }
 8002d6e:	4620      	mov	r0, r4
 8002d70:	bd38      	pop	{r3, r4, r5, pc}
 8002d72:	bf00      	nop
 8002d74:	080241b0 	.word	0x080241b0

08002d78 <_ZN8touchgfx8TextAreaC1Ev>:
    TextArea()
 8002d78:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002d7a:	2226      	movs	r2, #38	; 0x26
    TextArea()
 8002d7c:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002d7e:	2100      	movs	r1, #0
 8002d80:	f01d feec 	bl	8020b5c <memset>
 8002d84:	4620      	mov	r0, r4
 8002d86:	f7ff ffb7 	bl	8002cf8 <_ZN8touchgfx6WidgetC1Ev>
 8002d8a:	4b0a      	ldr	r3, [pc, #40]	; (8002db4 <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 8002d8c:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 8002d8e:	4b0a      	ldr	r3, [pc, #40]	; (8002db8 <_ZN8touchgfx8TextAreaC1Ev+0x40>)
 8002d90:	62a3      	str	r3, [r4, #40]	; 0x28
 8002d92:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002d96:	85a3      	strh	r3, [r4, #44]	; 0x2c
 8002d98:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 8002d9c:	2300      	movs	r3, #0
 8002d9e:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8002da2:	f04f 32ff 	mov.w	r2, #4294967295
              text(0)
 8002da6:	e9c4 2310 	strd	r2, r3, [r4, #64]	; 0x40
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002daa:	8723      	strh	r3, [r4, #56]	; 0x38
 8002dac:	63e3      	str	r3, [r4, #60]	; 0x3c
    }
 8002dae:	4620      	mov	r0, r4
 8002db0:	bd10      	pop	{r4, pc}
 8002db2:	bf00      	nop
 8002db4:	08023fdc 	.word	0x08023fdc
 8002db8:	0802221c 	.word	0x0802221c

08002dbc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
        return typedTextId < numberOfTypedTexts;
 8002dbc:	4b1b      	ldr	r3, [pc, #108]	; (8002e2c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x70>)
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 8002dbe:	b573      	push	{r0, r1, r4, r5, r6, lr}
    {
        if (typedText.hasValidId())
 8002dc0:	881b      	ldrh	r3, [r3, #0]
 8002dc2:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 8002dc4:	428b      	cmp	r3, r1
    void updateTextPosition()
 8002dc6:	4606      	mov	r6, r0
        if (typedText.hasValidId())
 8002dc8:	d92b      	bls.n	8002e22 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x66>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002dca:	4b19      	ldr	r3, [pc, #100]	; (8002e30 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x74>)
 8002dcc:	681b      	ldr	r3, [r3, #0]
 8002dce:	b92b      	cbnz	r3, 8002ddc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 8002dd0:	4b18      	ldr	r3, [pc, #96]	; (8002e34 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x78>)
 8002dd2:	4a19      	ldr	r2, [pc, #100]	; (8002e38 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x7c>)
 8002dd4:	4819      	ldr	r0, [pc, #100]	; (8002e3c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 8002dd6:	216c      	movs	r1, #108	; 0x6c
 8002dd8:	f01d fd3a 	bl	8020850 <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 8002ddc:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8002de0:	4b17      	ldr	r3, [pc, #92]	; (8002e40 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x84>)
 8002de2:	681b      	ldr	r3, [r3, #0]
 8002de4:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 8002de8:	4b16      	ldr	r3, [pc, #88]	; (8002e44 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x88>)
 8002dea:	6818      	ldr	r0, [r3, #0]
 8002dec:	f001 fff8 	bl	8004de0 <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8002df0:	682b      	ldr	r3, [r5, #0]
 8002df2:	9001      	str	r0, [sp, #4]
 8002df4:	4601      	mov	r1, r0
 8002df6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002df8:	4628      	mov	r0, r5
 8002dfa:	4798      	blx	r3
 8002dfc:	682b      	ldr	r3, [r5, #0]
 8002dfe:	9901      	ldr	r1, [sp, #4]
 8002e00:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002e02:	4604      	mov	r4, r0
 8002e04:	4628      	mov	r0, r5
 8002e06:	4798      	blx	r3
 8002e08:	682b      	ldr	r3, [r5, #0]
 8002e0a:	9901      	ldr	r1, [sp, #4]
 8002e0c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002e0e:	fb14 f400 	smulbb	r4, r4, r0
 8002e12:	4628      	mov	r0, r5
 8002e14:	4798      	blx	r3
 8002e16:	b2e4      	uxtb	r4, r4
 8002e18:	4404      	add	r4, r0
 8002e1a:	f886 4045 	strb.w	r4, [r6, #69]	; 0x45
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 8002e1e:	b002      	add	sp, #8
 8002e20:	bd70      	pop	{r4, r5, r6, pc}
            textHeightIncludingSpacing = 0;
 8002e22:	2300      	movs	r3, #0
 8002e24:	f880 3045 	strb.w	r3, [r0, #69]	; 0x45
    }
 8002e28:	e7f9      	b.n	8002e1e <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x62>
 8002e2a:	bf00      	nop
 8002e2c:	20015614 	.word	0x20015614
 8002e30:	20015610 	.word	0x20015610
 8002e34:	080227d0 	.word	0x080227d0
 8002e38:	08022812 	.word	0x08022812
 8002e3c:	0802284d 	.word	0x0802284d
 8002e40:	20015618 	.word	0x20015618
 8002e44:	2001561c 	.word	0x2001561c

08002e48 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>:
        : pressed(false), alpha(255), action(0)
 8002e48:	f44f 437f 	mov.w	r3, #65280	; 0xff00
    IconButtonStyle()
 8002e4c:	b573      	push	{r0, r1, r4, r5, r6, lr}
        : T(), up(), down()
 8002e4e:	4606      	mov	r6, r0
 8002e50:	8583      	strh	r3, [r0, #44]	; 0x2c
        touchable = touch;
 8002e52:	f240 1301 	movw	r3, #257	; 0x101
          firstChild(0)
 8002e56:	2500      	movs	r5, #0
 8002e58:	8483      	strh	r3, [r0, #36]	; 0x24
 8002e5a:	4b1d      	ldr	r3, [pc, #116]	; (8002ed0 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0x88>)
 8002e5c:	6285      	str	r5, [r0, #40]	; 0x28
        : x(0), y(0), width(0), height(0)
 8002e5e:	e9c0 5501 	strd	r5, r5, [r0, #4]
 8002e62:	e9c0 5503 	strd	r5, r5, [r0, #12]
          visible(true)
 8002e66:	e9c0 5505 	strd	r5, r5, [r0, #20]
 8002e6a:	e9c0 5507 	strd	r5, r5, [r0, #28]
 8002e6e:	6305      	str	r5, [r0, #48]	; 0x30
 8002e70:	f846 3b34 	str.w	r3, [r6], #52
 8002e74:	4604      	mov	r4, r0
        : Box(), borderColor(0), borderSize(0)
 8002e76:	4630      	mov	r0, r6
 8002e78:	f7ff ff50 	bl	8002d1c <_ZN8touchgfx3BoxC1Ev>
 8002e7c:	4b15      	ldr	r3, [pc, #84]	; (8002ed4 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0x8c>)
 8002e7e:	6363      	str	r3, [r4, #52]	; 0x34
        borderBox.setXY(0, 0);
 8002e80:	462a      	mov	r2, r5
        : color(0)
 8002e82:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 8002e86:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
        : color(col)
 8002e8a:	6625      	str	r5, [r4, #96]	; 0x60
 8002e8c:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 8002e90:	4629      	mov	r1, r5
 8002e92:	4630      	mov	r0, r6
 8002e94:	f7ff fede 	bl	8002c54 <_ZN8touchgfx8Drawable5setXYEss>
        T::add(borderBox);
 8002e98:	4631      	mov	r1, r6
 8002e9a:	4620      	mov	r0, r4
 8002e9c:	f007 fde6 	bl	800aa6c <_ZN8touchgfx9Container3addERNS_8DrawableE>
        : T()
 8002ea0:	4b0d      	ldr	r3, [pc, #52]	; (8002ed8 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0x90>)
 8002ea2:	6023      	str	r3, [r4, #0]
 8002ea4:	f104 057c 	add.w	r5, r4, #124	; 0x7c
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 8002ea8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002eac:	f8a4 3078 	strh.w	r3, [r4, #120]	; 0x78
 8002eb0:	f8a4 307a 	strh.w	r3, [r4, #122]	; 0x7a
 8002eb4:	a901      	add	r1, sp, #4
 8002eb6:	4628      	mov	r0, r5
 8002eb8:	f8ad 3004 	strh.w	r3, [sp, #4]
 8002ebc:	f7ff ff42 	bl	8002d44 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
        T::add(iconImage);
 8002ec0:	4620      	mov	r0, r4
 8002ec2:	4629      	mov	r1, r5
 8002ec4:	f007 fdd2 	bl	800aa6c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 8002ec8:	4620      	mov	r0, r4
 8002eca:	b002      	add	sp, #8
 8002ecc:	bd70      	pop	{r4, r5, r6, pc}
 8002ece:	bf00      	nop
 8002ed0:	08022a10 	.word	0x08022a10
 8002ed4:	08024148 	.word	0x08024148
 8002ed8:	08022aac 	.word	0x08022aac

08002edc <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>:
    void setBoxWithBorderColors(const colortype colorReleased, const colortype colorPressed, const colortype borderColorReleased, const colortype borderColorPressed)
 8002edc:	b410      	push	{r4}
        borderUp = borderColorReleased;
 8002ede:	6703      	str	r3, [r0, #112]	; 0x70
        borderDown = borderColorPressed;
 8002ee0:	9b01      	ldr	r3, [sp, #4]
 8002ee2:	6743      	str	r3, [r0, #116]	; 0x74
        handlePressedUpdated();
 8002ee4:	6803      	ldr	r3, [r0, #0]
    }
 8002ee6:	f85d 4b04 	ldr.w	r4, [sp], #4
        handlePressedUpdated();
 8002eea:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
        down = colorPressed;
 8002eee:	e9c0 121a 	strd	r1, r2, [r0, #104]	; 0x68
        handlePressedUpdated();
 8002ef2:	4718      	bx	r3

08002ef4 <_ZN15Screen1ViewBaseC1Ev>:
Screen1ViewBase::Screen1ViewBase() :
 8002ef4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002ef8:	ed2d 8b0c 	vpush	{d8-d13}
 8002efc:	4604      	mov	r4, r0
 8002efe:	b08d      	sub	sp, #52	; 0x34
        : presenter(0)
 8002f00:	f00f fbd8 	bl	80126b4 <_ZN8touchgfx6ScreenC1Ev>
    flexButtonCallback(this, &Screen1ViewBase::flexButtonCallbackHandler)
 8002f04:	4622      	mov	r2, r4
 8002f06:	2500      	movs	r5, #0
 8002f08:	4be5      	ldr	r3, [pc, #916]	; (80032a0 <_ZN15Screen1ViewBaseC1Ev+0x3ac>)
 8002f0a:	63e5      	str	r5, [r4, #60]	; 0x3c
 8002f0c:	f842 3b40 	str.w	r3, [r2], #64
 8002f10:	4610      	mov	r0, r2
 8002f12:	ee08 2a10 	vmov	s16, r2
 8002f16:	f7ff ff01 	bl	8002d1c <_ZN8touchgfx3BoxC1Ev>
 8002f1a:	f104 036c 	add.w	r3, r4, #108	; 0x6c
 8002f1e:	f64f 76ff 	movw	r6, #65535	; 0xffff
 8002f22:	a90a      	add	r1, sp, #40	; 0x28
 8002f24:	4618      	mov	r0, r3
 8002f26:	ee0c 3a10 	vmov	s24, r3
 8002f2a:	f8ad 6028 	strh.w	r6, [sp, #40]	; 0x28
 8002f2e:	f7ff ff09 	bl	8002d44 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002f32:	f104 0398 	add.w	r3, r4, #152	; 0x98
 8002f36:	a90a      	add	r1, sp, #40	; 0x28
 8002f38:	4618      	mov	r0, r3
 8002f3a:	ee0c 3a90 	vmov	s25, r3
 8002f3e:	f8ad 6028 	strh.w	r6, [sp, #40]	; 0x28
 8002f42:	f7ff feff 	bl	8002d44 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002f46:	f104 03c4 	add.w	r3, r4, #196	; 0xc4
 8002f4a:	4618      	mov	r0, r3
 8002f4c:	ee08 3a90 	vmov	s17, r3
 8002f50:	f7ff ff7a 	bl	8002e48 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8002f54:	f504 73b6 	add.w	r3, r4, #364	; 0x16c
 8002f58:	4618      	mov	r0, r3
 8002f5a:	ee09 3a10 	vmov	s18, r3
 8002f5e:	f7ff ff73 	bl	8002e48 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8002f62:	f504 7305 	add.w	r3, r4, #532	; 0x214
 8002f66:	4618      	mov	r0, r3
 8002f68:	ee09 3a90 	vmov	s19, r3
 8002f6c:	f7ff ff04 	bl	8002d78 <_ZN8touchgfx8TextAreaC1Ev>
 8002f70:	f504 7317 	add.w	r3, r4, #604	; 0x25c
        : TextArea()
 8002f74:	4618      	mov	r0, r3
 8002f76:	ee0a 3a10 	vmov	s20, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8002f7a:	4fca      	ldr	r7, [pc, #808]	; (80032a4 <_ZN15Screen1ViewBaseC1Ev+0x3b0>)
        : TextArea()
 8002f7c:	f7ff fefc 	bl	8002d78 <_ZN8touchgfx8TextAreaC1Ev>
 8002f80:	f504 732a 	add.w	r3, r4, #680	; 0x2a8
        : TextAreaWithWildcardBase(), wc1(0)
 8002f84:	f8c4 725c 	str.w	r7, [r4, #604]	; 0x25c
 8002f88:	f8c4 52a4 	str.w	r5, [r4, #676]	; 0x2a4
 8002f8c:	4618      	mov	r0, r3
 8002f8e:	ee0a 3a90 	vmov	s21, r3
 8002f92:	f00b fd11 	bl	800e9b8 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8002f96:	f504 733c 	add.w	r3, r4, #752	; 0x2f0
 8002f9a:	a90a      	add	r1, sp, #40	; 0x28
 8002f9c:	4618      	mov	r0, r3
 8002f9e:	ee0d 3a10 	vmov	s26, r3
 8002fa2:	f8ad 6028 	strh.w	r6, [sp, #40]	; 0x28
 8002fa6:	f7ff fecd 	bl	8002d44 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002faa:	f504 7347 	add.w	r3, r4, #796	; 0x31c
 8002fae:	4618      	mov	r0, r3
 8002fb0:	ee0b 3a10 	vmov	s22, r3
 8002fb4:	f7ff fee0 	bl	8002d78 <_ZN8touchgfx8TextAreaC1Ev>
 8002fb8:	f504 7359 	add.w	r3, r4, #868	; 0x364
 8002fbc:	f504 7b6c 	add.w	fp, r4, #944	; 0x3b0
        : TextArea()
 8002fc0:	4618      	mov	r0, r3
 8002fc2:	ee0b 3a90 	vmov	s23, r3
 8002fc6:	f7ff fed7 	bl	8002d78 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8002fca:	f8c4 7364 	str.w	r7, [r4, #868]	; 0x364
 8002fce:	f8c4 53ac 	str.w	r5, [r4, #940]	; 0x3ac
 8002fd2:	4658      	mov	r0, fp
 8002fd4:	f7ff fed0 	bl	8002d78 <_ZN8touchgfx8TextAreaC1Ev>
 8002fd8:	f504 737e 	add.w	r3, r4, #1016	; 0x3f8
 8002fdc:	a90a      	add	r1, sp, #40	; 0x28
 8002fde:	4618      	mov	r0, r3
 8002fe0:	f204 4924 	addw	r9, r4, #1060	; 0x424
 8002fe4:	ee0d 3a90 	vmov	s27, r3
 8002fe8:	f204 48cc 	addw	r8, r4, #1228	; 0x4cc
 8002fec:	f8ad 6028 	strh.w	r6, [sp, #40]	; 0x28
 8002ff0:	f7ff fea8 	bl	8002d44 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002ff4:	4648      	mov	r0, r9
 8002ff6:	f7ff ff27 	bl	8002e48 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8002ffa:	f204 5a74 	addw	sl, r4, #1396	; 0x574
 8002ffe:	4640      	mov	r0, r8
 8003000:	f7ff ff22 	bl	8002e48 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
        : TextArea()
 8003004:	4650      	mov	r0, sl
 8003006:	f7ff feb7 	bl	8002d78 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800300a:	4ba7      	ldr	r3, [pc, #668]	; (80032a8 <_ZN15Screen1ViewBaseC1Ev+0x3b4>)
 800300c:	f8c4 35f0 	str.w	r3, [r4, #1520]	; 0x5f0
 8003010:	4ba6      	ldr	r3, [pc, #664]	; (80032ac <_ZN15Screen1ViewBaseC1Ev+0x3b8>)
 8003012:	f8c4 35f8 	str.w	r3, [r4, #1528]	; 0x5f8
 8003016:	4ba6      	ldr	r3, [pc, #664]	; (80032b0 <_ZN15Screen1ViewBaseC1Ev+0x3bc>)
 8003018:	f8c4 3600 	str.w	r3, [r4, #1536]	; 0x600
 800301c:	4ba5      	ldr	r3, [pc, #660]	; (80032b4 <_ZN15Screen1ViewBaseC1Ev+0x3c0>)
 800301e:	f8c4 3608 	str.w	r3, [r4, #1544]	; 0x608
    __background.setPosition(0, 0, 320, 240);
 8003022:	23f0      	movs	r3, #240	; 0xf0
 8003024:	462a      	mov	r2, r5
 8003026:	4629      	mov	r1, r5
 8003028:	ee18 0a10 	vmov	r0, s16
        : TextAreaWithWildcardBase(), wc1(0)
 800302c:	f8c4 7574 	str.w	r7, [r4, #1396]	; 0x574
 8003030:	f8c4 55bc 	str.w	r5, [r4, #1468]	; 0x5bc
 8003034:	f8c4 55fc 	str.w	r5, [r4, #1532]	; 0x5fc
 8003038:	f8c4 560c 	str.w	r5, [r4, #1548]	; 0x60c
 800303c:	9300      	str	r3, [sp, #0]
 800303e:	f8c4 45f4 	str.w	r4, [r4, #1524]	; 0x5f4
 8003042:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8003046:	f8c4 4604 	str.w	r4, [r4, #1540]	; 0x604
 800304a:	f7ff fe42 	bl	8002cd2 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 800304e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8003052:	66a3      	str	r3, [r4, #104]	; 0x68
    image2.setXY(0, 0);
 8003054:	462a      	mov	r2, r5
 8003056:	4629      	mov	r1, r5
 8003058:	ee1c 0a10 	vmov	r0, s24
 800305c:	f7ff fdfa 	bl	8002c54 <_ZN8touchgfx8Drawable5setXYEss>
    image2.setBitmap(touchgfx::Bitmap(BITMAP_BG_ID));
 8003060:	ee1c 0a10 	vmov	r0, s24
 8003064:	a90a      	add	r1, sp, #40	; 0x28
 8003066:	f8ad 5028 	strh.w	r5, [sp, #40]	; 0x28
 800306a:	f00b fb73 	bl	800e754 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    image3.setXY(118, 25);
 800306e:	ee1c 0a90 	vmov	r0, s25
 8003072:	2219      	movs	r2, #25
 8003074:	2176      	movs	r1, #118	; 0x76
 8003076:	f7ff fded 	bl	8002c54 <_ZN8touchgfx8Drawable5setXYEss>
    image3.setBitmap(touchgfx::Bitmap(BITMAP_COUNTER_BOX_ID));
 800307a:	aa0a      	add	r2, sp, #40	; 0x28
 800307c:	f04f 0303 	mov.w	r3, #3
 8003080:	4611      	mov	r1, r2
 8003082:	ee1c 0a90 	vmov	r0, s25
 8003086:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800308a:	f00b fb63 	bl	800e754 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        borderBox.setPosition(x, y, width, height);
 800308e:	2317      	movs	r3, #23
     *
     * @see getBorderSize
     */
    void setBorderSize(uint16_t size)
    {
        borderSize = size;
 8003090:	2705      	movs	r7, #5
    ButtonDown.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8003092:	4e89      	ldr	r6, [pc, #548]	; (80032b8 <_ZN15Screen1ViewBaseC1Ev+0x3c4>)
 8003094:	9300      	str	r3, [sp, #0]
 8003096:	462a      	mov	r2, r5
 8003098:	4629      	mov	r1, r5
 800309a:	232b      	movs	r3, #43	; 0x2b
 800309c:	f104 00f8 	add.w	r0, r4, #248	; 0xf8
 80030a0:	f7ff fe17 	bl	8002cd2 <_ZN8touchgfx8Drawable11setPositionEssss>
 80030a4:	4b85      	ldr	r3, [pc, #532]	; (80032bc <_ZN15Screen1ViewBaseC1Ev+0x3c8>)
 80030a6:	4a86      	ldr	r2, [pc, #536]	; (80032c0 <_ZN15Screen1ViewBaseC1Ev+0x3cc>)
 80030a8:	4986      	ldr	r1, [pc, #536]	; (80032c4 <_ZN15Screen1ViewBaseC1Ev+0x3d0>)
 80030aa:	9600      	str	r6, [sp, #0]
 80030ac:	ee18 0a90 	vmov	r0, s17
 80030b0:	f8a4 7128 	strh.w	r7, [r4, #296]	; 0x128
 80030b4:	f7ff ff12 	bl	8002edc <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    ButtonDown.setIconBitmaps(Bitmap(BITMAP_DARK_ICONS_DOWN_ARROW_32_ID), Bitmap(BITMAP_DARK_ICONS_DOWN_ARROW_32_ID));
 80030b8:	ee18 0a90 	vmov	r0, s17
 80030bc:	aa0a      	add	r2, sp, #40	; 0x28
 80030be:	a909      	add	r1, sp, #36	; 0x24
 80030c0:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 80030c4:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 80030c8:	f7ff fdd1 	bl	8002c6e <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
    ButtonDown.setPosition(273, 49, 43, 23);
 80030cc:	2317      	movs	r3, #23
 80030ce:	ee18 0a90 	vmov	r0, s17
 80030d2:	9300      	str	r3, [sp, #0]
 80030d4:	2231      	movs	r2, #49	; 0x31
 80030d6:	232b      	movs	r3, #43	; 0x2b
 80030d8:	f240 1111 	movw	r1, #273	; 0x111
        rect.x = x;
 80030dc:	f8c4 7144 	str.w	r7, [r4, #324]	; 0x144
 80030e0:	f7ff fdf7 	bl	8002cd2 <_ZN8touchgfx8Drawable11setPositionEssss>
    ButtonDown.setAction(flexButtonCallback);
 80030e4:	f504 63c0 	add.w	r3, r4, #1536	; 0x600
 80030e8:	9303      	str	r3, [sp, #12]
        action = &callback;
 80030ea:	f8c4 30f4 	str.w	r3, [r4, #244]	; 0xf4
 80030ee:	2317      	movs	r3, #23
 80030f0:	462a      	mov	r2, r5
 80030f2:	4629      	mov	r1, r5
 80030f4:	9300      	str	r3, [sp, #0]
 80030f6:	f504 70d0 	add.w	r0, r4, #416	; 0x1a0
 80030fa:	232b      	movs	r3, #43	; 0x2b
 80030fc:	f7ff fde9 	bl	8002cd2 <_ZN8touchgfx8Drawable11setPositionEssss>
    ButtonUp.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8003100:	4b6e      	ldr	r3, [pc, #440]	; (80032bc <_ZN15Screen1ViewBaseC1Ev+0x3c8>)
 8003102:	4a6f      	ldr	r2, [pc, #444]	; (80032c0 <_ZN15Screen1ViewBaseC1Ev+0x3cc>)
 8003104:	496f      	ldr	r1, [pc, #444]	; (80032c4 <_ZN15Screen1ViewBaseC1Ev+0x3d0>)
 8003106:	9600      	str	r6, [sp, #0]
 8003108:	ee19 0a10 	vmov	r0, s18
 800310c:	f8a4 71d0 	strh.w	r7, [r4, #464]	; 0x1d0
 8003110:	f7ff fee4 	bl	8002edc <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
 8003114:	f04f 0206 	mov.w	r2, #6
    ButtonUp.setIconBitmaps(Bitmap(BITMAP_DARK_ICONS_UP_ARROW_32_ID), Bitmap(BITMAP_DARK_ICONS_UP_ARROW_32_ID));
 8003118:	a80a      	add	r0, sp, #40	; 0x28
 800311a:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 800311e:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8003122:	a909      	add	r1, sp, #36	; 0x24
 8003124:	4602      	mov	r2, r0
 8003126:	ee19 0a10 	vmov	r0, s18
 800312a:	f7ff fda0 	bl	8002c6e <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
 800312e:	2006      	movs	r0, #6
 8003130:	f8c4 01ec 	str.w	r0, [r4, #492]	; 0x1ec
    ButtonUp.setPosition(273, 25, 43, 23);
 8003134:	2017      	movs	r0, #23
 8003136:	232b      	movs	r3, #43	; 0x2b
 8003138:	9000      	str	r0, [sp, #0]
 800313a:	2219      	movs	r2, #25
 800313c:	ee19 0a10 	vmov	r0, s18
 8003140:	f240 1111 	movw	r1, #273	; 0x111
 8003144:	f7ff fdc5 	bl	8002cd2 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003148:	9a03      	ldr	r2, [sp, #12]
 800314a:	f8c4 219c 	str.w	r2, [r4, #412]	; 0x19c
    LabelPradLadowania.setXY(41, 28);
 800314e:	ee19 0a90 	vmov	r0, s19
 8003152:	221c      	movs	r2, #28
 8003154:	2129      	movs	r1, #41	; 0x29
        boundingArea = calculateBoundingArea();
 8003156:	ae04      	add	r6, sp, #16
 8003158:	f7ff fd7c 	bl	8002c54 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800315c:	f04f 30ff 	mov.w	r0, #4294967295
        boundingArea = calculateBoundingArea();
 8003160:	ee19 1a90 	vmov	r1, s19
        color = newColor;
 8003164:	f8c4 0244 	str.w	r0, [r4, #580]	; 0x244
        linespace = space;
 8003168:	f8a4 5248 	strh.w	r5, [r4, #584]	; 0x248
        boundingArea = calculateBoundingArea();
 800316c:	4630      	mov	r0, r6
 800316e:	f00a fdf1 	bl	800dd54 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003172:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8003176:	f504 7314 	add.w	r3, r4, #592	; 0x250
 800317a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 800317e:	4b52      	ldr	r3, [pc, #328]	; (80032c8 <_ZN15Screen1ViewBaseC1Ev+0x3d4>)
 8003180:	930a      	str	r3, [sp, #40]	; 0x28
    LabelPradLadowania.setTypedText(touchgfx::TypedText(T___SINGLEUSE_OQ6C));
 8003182:	ee19 0a90 	vmov	r0, s19
 8003186:	2314      	movs	r3, #20
 8003188:	a90a      	add	r1, sp, #40	; 0x28
 800318a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800318e:	f00b f863 	bl	800e258 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    txtPradLadowania.setPosition(143, 36, 124, 24);
 8003192:	2018      	movs	r0, #24
 8003194:	2224      	movs	r2, #36	; 0x24
 8003196:	9000      	str	r0, [sp, #0]
 8003198:	237c      	movs	r3, #124	; 0x7c
 800319a:	ee1a 0a10 	vmov	r0, s20
 800319e:	218f      	movs	r1, #143	; 0x8f
 80031a0:	f7ff fd97 	bl	8002cd2 <_ZN8touchgfx8Drawable11setPositionEssss>
 80031a4:	f8d4 325c 	ldr.w	r3, [r4, #604]	; 0x25c
        linespace = space;
 80031a8:	f8a4 5290 	strh.w	r5, [r4, #656]	; 0x290
        color = newColor;
 80031ac:	f04f 30ff 	mov.w	r0, #4294967295
        boundingArea = calculateBoundingArea();
 80031b0:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 80031b4:	f8c4 028c 	str.w	r0, [r4, #652]	; 0x28c
        boundingArea = calculateBoundingArea();
 80031b8:	ee1a 1a10 	vmov	r1, s20
 80031bc:	4630      	mov	r0, r6
 80031be:	4798      	blx	r3
 80031c0:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80031c4:	f504 7326 	add.w	r3, r4, #664	; 0x298
 80031c8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    txtPradLadowania.setWildcard(txtPradLadowaniaBuffer);
 80031cc:	f504 63b8 	add.w	r3, r4, #1472	; 0x5c0
        wc1 = value;
 80031d0:	f8c4 32a4 	str.w	r3, [r4, #676]	; 0x2a4
 80031d4:	4b3c      	ldr	r3, [pc, #240]	; (80032c8 <_ZN15Screen1ViewBaseC1Ev+0x3d4>)
    txtPradLadowaniaBuffer[0] = 0;
 80031d6:	f8a4 55c0 	strh.w	r5, [r4, #1472]	; 0x5c0
    txtPradLadowania.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9VFQ));
 80031da:	ee1a 0a10 	vmov	r0, s20
 80031de:	930a      	str	r3, [sp, #40]	; 0x28
 80031e0:	a90a      	add	r1, sp, #40	; 0x28
 80031e2:	2313      	movs	r3, #19
 80031e4:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80031e8:	f00b f836 	bl	800e258 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    buttonStart.setXY(78, 180);
 80031ec:	ee1a 0a90 	vmov	r0, s21
 80031f0:	22b4      	movs	r2, #180	; 0xb4
 80031f2:	214e      	movs	r1, #78	; 0x4e
 80031f4:	f7ff fd2e 	bl	8002c54 <_ZN8touchgfx8Drawable5setXYEss>
 80031f8:	2301      	movs	r3, #1
    buttonStart.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
 80031fa:	a80a      	add	r0, sp, #40	; 0x28
 80031fc:	4602      	mov	r2, r0
 80031fe:	a909      	add	r1, sp, #36	; 0x24
 8003200:	ee1a 0a90 	vmov	r0, s21
 8003204:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8003208:	2302      	movs	r3, #2
 800320a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800320e:	f00b f87e 	bl	800e30e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8003212:	2312      	movs	r3, #18
        updateTextPosition();
 8003214:	ee1a 0a90 	vmov	r0, s21
 8003218:	f8a4 32e0 	strh.w	r3, [r4, #736]	; 0x2e0
 800321c:	f7ff fdce 	bl	8002dbc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonStart.setAction(buttonCallback);
 8003220:	f504 63be 	add.w	r3, r4, #1520	; 0x5f0
        color = col;
 8003224:	f04f 30ff 	mov.w	r0, #4294967295
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 8003228:	f8c4 32d0 	str.w	r3, [r4, #720]	; 0x2d0
    image3_1.setXY(118, 138);
 800322c:	228a      	movs	r2, #138	; 0x8a
        colorPressed = col;
 800322e:	e9c4 00b9 	strd	r0, r0, [r4, #740]	; 0x2e4
 8003232:	2176      	movs	r1, #118	; 0x76
 8003234:	ee1d 0a10 	vmov	r0, s26
 8003238:	f7ff fd0c 	bl	8002c54 <_ZN8touchgfx8Drawable5setXYEss>
 800323c:	f04f 0103 	mov.w	r1, #3
    image3_1.setBitmap(touchgfx::Bitmap(BITMAP_COUNTER_BOX_ID));
 8003240:	a80a      	add	r0, sp, #40	; 0x28
 8003242:	f8ad 1028 	strh.w	r1, [sp, #40]	; 0x28
 8003246:	4601      	mov	r1, r0
 8003248:	ee1d 0a10 	vmov	r0, s26
 800324c:	f00b fa82 	bl	800e754 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    LabelNapiecieBaterii.setXY(41, 141);
 8003250:	228d      	movs	r2, #141	; 0x8d
 8003252:	ee1b 0a10 	vmov	r0, s22
 8003256:	2129      	movs	r1, #41	; 0x29
 8003258:	f7ff fcfc 	bl	8002c54 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800325c:	f04f 30ff 	mov.w	r0, #4294967295
        boundingArea = calculateBoundingArea();
 8003260:	ee1b 1a10 	vmov	r1, s22
        color = newColor;
 8003264:	f8c4 034c 	str.w	r0, [r4, #844]	; 0x34c
        linespace = space;
 8003268:	f8a4 5350 	strh.w	r5, [r4, #848]	; 0x350
        boundingArea = calculateBoundingArea();
 800326c:	4630      	mov	r0, r6
 800326e:	f00a fd71 	bl	800dd54 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003272:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8003276:	f504 7356 	add.w	r3, r4, #856	; 0x358
 800327a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 800327e:	4b12      	ldr	r3, [pc, #72]	; (80032c8 <_ZN15Screen1ViewBaseC1Ev+0x3d4>)
 8003280:	930a      	str	r3, [sp, #40]	; 0x28
    LabelNapiecieBaterii.setTypedText(touchgfx::TypedText(T___SINGLEUSE_O6MQ));
 8003282:	a80a      	add	r0, sp, #40	; 0x28
 8003284:	2311      	movs	r3, #17
 8003286:	4601      	mov	r1, r0
 8003288:	ee1b 0a10 	vmov	r0, s22
 800328c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003290:	f00a ffe2 	bl	800e258 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    txtNapiecieBaterii.setPosition(143, 147, 124, 24);
 8003294:	2018      	movs	r0, #24
 8003296:	2293      	movs	r2, #147	; 0x93
 8003298:	9000      	str	r0, [sp, #0]
 800329a:	237c      	movs	r3, #124	; 0x7c
 800329c:	e016      	b.n	80032cc <_ZN15Screen1ViewBaseC1Ev+0x3d8>
 800329e:	bf00      	nop
 80032a0:	08022b7c 	.word	0x08022b7c
 80032a4:	08022980 	.word	0x08022980
 80032a8:	08022b4c 	.word	0x08022b4c
 80032ac:	08002c25 	.word	0x08002c25
 80032b0:	08022b64 	.word	0x08022b64
 80032b4:	08002b35 	.word	0x08002b35
 80032b8:	ff336699 	.word	0xff336699
 80032bc:	ff003366 	.word	0xff003366
 80032c0:	ff0099cc 	.word	0xff0099cc
 80032c4:	ff006699 	.word	0xff006699
 80032c8:	0802221c 	.word	0x0802221c
 80032cc:	ee1b 0a90 	vmov	r0, s23
 80032d0:	218f      	movs	r1, #143	; 0x8f
 80032d2:	f7ff fcfe 	bl	8002cd2 <_ZN8touchgfx8Drawable11setPositionEssss>
 80032d6:	f8d4 3364 	ldr.w	r3, [r4, #868]	; 0x364
        linespace = space;
 80032da:	f8a4 5398 	strh.w	r5, [r4, #920]	; 0x398
        color = newColor;
 80032de:	f04f 30ff 	mov.w	r0, #4294967295
        boundingArea = calculateBoundingArea();
 80032e2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 80032e6:	f8c4 0394 	str.w	r0, [r4, #916]	; 0x394
        boundingArea = calculateBoundingArea();
 80032ea:	ee1b 1a90 	vmov	r1, s23
 80032ee:	4630      	mov	r0, r6
 80032f0:	4798      	blx	r3
 80032f2:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80032f6:	f504 7368 	add.w	r3, r4, #928	; 0x3a0
 80032fa:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    txtNapiecieBaterii.setWildcard(txtNapiecieBateriiBuffer);
 80032fe:	f204 53d4 	addw	r3, r4, #1492	; 0x5d4
 8003302:	f8c4 33ac 	str.w	r3, [r4, #940]	; 0x3ac
    txtNapiecieBaterii.setTypedText(touchgfx::TypedText(T___SINGLEUSE_JY89));
 8003306:	a80a      	add	r0, sp, #40	; 0x28
 8003308:	4b96      	ldr	r3, [pc, #600]	; (8003564 <_ZN15Screen1ViewBaseC1Ev+0x670>)
    txtNapiecieBateriiBuffer[0] = 0;
 800330a:	f8a4 55d4 	strh.w	r5, [r4, #1492]	; 0x5d4
    txtNapiecieBaterii.setTypedText(touchgfx::TypedText(T___SINGLEUSE_JY89));
 800330e:	4601      	mov	r1, r0
 8003310:	930a      	str	r3, [sp, #40]	; 0x28
 8003312:	ee1b 0a90 	vmov	r0, s23
 8003316:	2310      	movs	r3, #16
 8003318:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800331c:	f00a ff9c 	bl	800e258 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    LabelChargingTime.setXY(6, 86);
 8003320:	2256      	movs	r2, #86	; 0x56
 8003322:	2106      	movs	r1, #6
 8003324:	4658      	mov	r0, fp
 8003326:	f7ff fc95 	bl	8002c54 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800332a:	f04f 30ff 	mov.w	r0, #4294967295
 800332e:	f8c4 03e0 	str.w	r0, [r4, #992]	; 0x3e0
        linespace = space;
 8003332:	f8a4 53e4 	strh.w	r5, [r4, #996]	; 0x3e4
        boundingArea = calculateBoundingArea();
 8003336:	4659      	mov	r1, fp
 8003338:	4630      	mov	r0, r6
 800333a:	f00a fd0b 	bl	800dd54 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800333e:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8003342:	f504 737b 	add.w	r3, r4, #1004	; 0x3ec
 8003346:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    LabelChargingTime.setTypedText(touchgfx::TypedText(T___SINGLEUSE_LNZH));
 800334a:	a80a      	add	r0, sp, #40	; 0x28
 800334c:	4b85      	ldr	r3, [pc, #532]	; (8003564 <_ZN15Screen1ViewBaseC1Ev+0x670>)
 800334e:	930a      	str	r3, [sp, #40]	; 0x28
 8003350:	4601      	mov	r1, r0
 8003352:	4658      	mov	r0, fp
 8003354:	f8ad 702c 	strh.w	r7, [sp, #44]	; 0x2c
 8003358:	f00a ff7e 	bl	800e258 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    image3_2.setXY(118, 83);
 800335c:	2253      	movs	r2, #83	; 0x53
 800335e:	ee1d 0a90 	vmov	r0, s27
 8003362:	2176      	movs	r1, #118	; 0x76
 8003364:	f7ff fc76 	bl	8002c54 <_ZN8touchgfx8Drawable5setXYEss>
 8003368:	f04f 0103 	mov.w	r1, #3
    image3_2.setBitmap(touchgfx::Bitmap(BITMAP_COUNTER_BOX_ID));
 800336c:	ee1d 0a90 	vmov	r0, s27
 8003370:	f8ad 1028 	strh.w	r1, [sp, #40]	; 0x28
 8003374:	a90a      	add	r1, sp, #40	; 0x28
 8003376:	f00b f9ed 	bl	800e754 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800337a:	2117      	movs	r1, #23
 800337c:	462a      	mov	r2, r5
 800337e:	9100      	str	r1, [sp, #0]
 8003380:	232b      	movs	r3, #43	; 0x2b
 8003382:	4629      	mov	r1, r5
 8003384:	f504 608b 	add.w	r0, r4, #1112	; 0x458
 8003388:	f7ff fca3 	bl	8002cd2 <_ZN8touchgfx8Drawable11setPositionEssss>
    ButtonDownTime.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 800338c:	4b76      	ldr	r3, [pc, #472]	; (8003568 <_ZN15Screen1ViewBaseC1Ev+0x674>)
 800338e:	9300      	str	r3, [sp, #0]
 8003390:	f1a3 1333 	sub.w	r3, r3, #3342387	; 0x330033
 8003394:	f5a3 534c 	sub.w	r3, r3, #13056	; 0x3300
 8003398:	4a74      	ldr	r2, [pc, #464]	; (800356c <_ZN15Screen1ViewBaseC1Ev+0x678>)
 800339a:	4975      	ldr	r1, [pc, #468]	; (8003570 <_ZN15Screen1ViewBaseC1Ev+0x67c>)
 800339c:	f8a4 7488 	strh.w	r7, [r4, #1160]	; 0x488
 80033a0:	4648      	mov	r0, r9
 80033a2:	f7ff fd9b 	bl	8002edc <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    ButtonDownTime.setIconBitmaps(Bitmap(BITMAP_DARK_ICONS_DOWN_ARROW_32_ID), Bitmap(BITMAP_DARK_ICONS_DOWN_ARROW_32_ID));
 80033a6:	a90a      	add	r1, sp, #40	; 0x28
 80033a8:	460a      	mov	r2, r1
 80033aa:	4648      	mov	r0, r9
 80033ac:	a909      	add	r1, sp, #36	; 0x24
 80033ae:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 80033b2:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 80033b6:	f7ff fc5a 	bl	8002c6e <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
    ButtonDownTime.setPosition(273, 105, 43, 23);
 80033ba:	2117      	movs	r1, #23
 80033bc:	9100      	str	r1, [sp, #0]
 80033be:	232b      	movs	r3, #43	; 0x2b
 80033c0:	2269      	movs	r2, #105	; 0x69
 80033c2:	f240 1111 	movw	r1, #273	; 0x111
 80033c6:	4648      	mov	r0, r9
 80033c8:	f8c4 74a4 	str.w	r7, [r4, #1188]	; 0x4a4
 80033cc:	f7ff fc81 	bl	8002cd2 <_ZN8touchgfx8Drawable11setPositionEssss>
 80033d0:	9a03      	ldr	r2, [sp, #12]
 80033d2:	f8c4 2454 	str.w	r2, [r4, #1108]	; 0x454
 80033d6:	2117      	movs	r1, #23
 80033d8:	462a      	mov	r2, r5
 80033da:	9100      	str	r1, [sp, #0]
 80033dc:	232b      	movs	r3, #43	; 0x2b
 80033de:	4629      	mov	r1, r5
 80033e0:	f504 60a0 	add.w	r0, r4, #1280	; 0x500
 80033e4:	f7ff fc75 	bl	8002cd2 <_ZN8touchgfx8Drawable11setPositionEssss>
    ButtonUpTime.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 80033e8:	4b5f      	ldr	r3, [pc, #380]	; (8003568 <_ZN15Screen1ViewBaseC1Ev+0x674>)
 80033ea:	9300      	str	r3, [sp, #0]
 80033ec:	f1a3 1333 	sub.w	r3, r3, #3342387	; 0x330033
 80033f0:	f5a3 534c 	sub.w	r3, r3, #13056	; 0x3300
 80033f4:	4a5d      	ldr	r2, [pc, #372]	; (800356c <_ZN15Screen1ViewBaseC1Ev+0x678>)
 80033f6:	495e      	ldr	r1, [pc, #376]	; (8003570 <_ZN15Screen1ViewBaseC1Ev+0x67c>)
 80033f8:	f8a4 7530 	strh.w	r7, [r4, #1328]	; 0x530
 80033fc:	4640      	mov	r0, r8
 80033fe:	f7ff fd6d 	bl	8002edc <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
 8003402:	f04f 0206 	mov.w	r2, #6
 8003406:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 800340a:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
    ButtonUpTime.setIconBitmaps(Bitmap(BITMAP_DARK_ICONS_UP_ARROW_32_ID), Bitmap(BITMAP_DARK_ICONS_UP_ARROW_32_ID));
 800340e:	a909      	add	r1, sp, #36	; 0x24
 8003410:	aa0a      	add	r2, sp, #40	; 0x28
 8003412:	4640      	mov	r0, r8
 8003414:	f7ff fc2b 	bl	8002c6e <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
 8003418:	2306      	movs	r3, #6
 800341a:	f8c4 354c 	str.w	r3, [r4, #1356]	; 0x54c
    ButtonUpTime.setPosition(273, 81, 43, 23);
 800341e:	2317      	movs	r3, #23
 8003420:	9300      	str	r3, [sp, #0]
 8003422:	2251      	movs	r2, #81	; 0x51
 8003424:	232b      	movs	r3, #43	; 0x2b
 8003426:	f240 1111 	movw	r1, #273	; 0x111
 800342a:	4640      	mov	r0, r8
 800342c:	f7ff fc51 	bl	8002cd2 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003430:	9b03      	ldr	r3, [sp, #12]
 8003432:	f8c4 34fc 	str.w	r3, [r4, #1276]	; 0x4fc
    txtChargingTime.setPosition(143, 93, 124, 24);
 8003436:	2318      	movs	r3, #24
 8003438:	225d      	movs	r2, #93	; 0x5d
 800343a:	9300      	str	r3, [sp, #0]
 800343c:	218f      	movs	r1, #143	; 0x8f
 800343e:	237c      	movs	r3, #124	; 0x7c
 8003440:	4650      	mov	r0, sl
 8003442:	f7ff fc46 	bl	8002cd2 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8003446:	f04f 33ff 	mov.w	r3, #4294967295
 800344a:	f8c4 35a4 	str.w	r3, [r4, #1444]	; 0x5a4
        boundingArea = calculateBoundingArea();
 800344e:	f8d4 3574 	ldr.w	r3, [r4, #1396]	; 0x574
        linespace = space;
 8003452:	f8a4 55a8 	strh.w	r5, [r4, #1448]	; 0x5a8
        boundingArea = calculateBoundingArea();
 8003456:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800345a:	4651      	mov	r1, sl
 800345c:	4630      	mov	r0, r6
 800345e:	4798      	blx	r3
 8003460:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8003464:	f504 63b6 	add.w	r3, r4, #1456	; 0x5b0
 8003468:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800346c:	4b41      	ldr	r3, [pc, #260]	; (8003574 <_ZN15Screen1ViewBaseC1Ev+0x680>)
 800346e:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(txtChargingTimeBuffer, TXTCHARGINGTIME_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_JGTL).getText());
 8003470:	f504 65bd 	add.w	r5, r4, #1512	; 0x5e8
 8003474:	b92b      	cbnz	r3, 8003482 <_ZN15Screen1ViewBaseC1Ev+0x58e>
 8003476:	4b40      	ldr	r3, [pc, #256]	; (8003578 <_ZN15Screen1ViewBaseC1Ev+0x684>)
 8003478:	4a40      	ldr	r2, [pc, #256]	; (800357c <_ZN15Screen1ViewBaseC1Ev+0x688>)
 800347a:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800347c:	4840      	ldr	r0, [pc, #256]	; (8003580 <_ZN15Screen1ViewBaseC1Ev+0x68c>)
 800347e:	f01d f9e7 	bl	8020850 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8003482:	4b40      	ldr	r3, [pc, #256]	; (8003584 <_ZN15Screen1ViewBaseC1Ev+0x690>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003484:	881b      	ldrh	r3, [r3, #0]
 8003486:	2b03      	cmp	r3, #3
 8003488:	d803      	bhi.n	8003492 <_ZN15Screen1ViewBaseC1Ev+0x59e>
 800348a:	4b3f      	ldr	r3, [pc, #252]	; (8003588 <_ZN15Screen1ViewBaseC1Ev+0x694>)
 800348c:	4a3b      	ldr	r2, [pc, #236]	; (800357c <_ZN15Screen1ViewBaseC1Ev+0x688>)
 800348e:	2161      	movs	r1, #97	; 0x61
 8003490:	e7f4      	b.n	800347c <_ZN15Screen1ViewBaseC1Ev+0x588>
        return texts->getText(typedTextId);
 8003492:	4b3e      	ldr	r3, [pc, #248]	; (800358c <_ZN15Screen1ViewBaseC1Ev+0x698>)
 8003494:	2103      	movs	r1, #3
 8003496:	6818      	ldr	r0, [r3, #0]
 8003498:	f001 fca2 	bl	8004de0 <_ZNK8touchgfx5Texts7getTextEt>
 800349c:	4a3c      	ldr	r2, [pc, #240]	; (8003590 <_ZN15Screen1ViewBaseC1Ev+0x69c>)
 800349e:	4603      	mov	r3, r0
 80034a0:	2103      	movs	r1, #3
 80034a2:	4628      	mov	r0, r5
 80034a4:	f010 fdc2 	bl	801402c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 80034a8:	4b2e      	ldr	r3, [pc, #184]	; (8003564 <_ZN15Screen1ViewBaseC1Ev+0x670>)
 80034aa:	f8c4 55bc 	str.w	r5, [r4, #1468]	; 0x5bc
 80034ae:	930a      	str	r3, [sp, #40]	; 0x28
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 80034b0:	1d25      	adds	r5, r4, #4
 80034b2:	2304      	movs	r3, #4
    txtChargingTime.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8IRX));
 80034b4:	a90a      	add	r1, sp, #40	; 0x28
 80034b6:	4650      	mov	r0, sl
 80034b8:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80034bc:	f00a fecc 	bl	800e258 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80034c0:	ee18 1a10 	vmov	r1, s16
 80034c4:	4628      	mov	r0, r5
 80034c6:	f007 fad1 	bl	800aa6c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80034ca:	ee1c 1a10 	vmov	r1, s24
 80034ce:	4628      	mov	r0, r5
 80034d0:	f007 facc 	bl	800aa6c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80034d4:	ee1c 1a90 	vmov	r1, s25
 80034d8:	4628      	mov	r0, r5
 80034da:	f007 fac7 	bl	800aa6c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80034de:	ee18 1a90 	vmov	r1, s17
 80034e2:	4628      	mov	r0, r5
 80034e4:	f007 fac2 	bl	800aa6c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80034e8:	ee19 1a10 	vmov	r1, s18
 80034ec:	4628      	mov	r0, r5
 80034ee:	f007 fabd 	bl	800aa6c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80034f2:	ee19 1a90 	vmov	r1, s19
 80034f6:	4628      	mov	r0, r5
 80034f8:	f007 fab8 	bl	800aa6c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80034fc:	ee1a 1a10 	vmov	r1, s20
 8003500:	4628      	mov	r0, r5
 8003502:	f007 fab3 	bl	800aa6c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003506:	ee1a 1a90 	vmov	r1, s21
 800350a:	4628      	mov	r0, r5
 800350c:	f007 faae 	bl	800aa6c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003510:	ee1d 1a10 	vmov	r1, s26
 8003514:	4628      	mov	r0, r5
 8003516:	f007 faa9 	bl	800aa6c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800351a:	ee1b 1a10 	vmov	r1, s22
 800351e:	4628      	mov	r0, r5
 8003520:	f007 faa4 	bl	800aa6c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003524:	ee1b 1a90 	vmov	r1, s23
 8003528:	4628      	mov	r0, r5
 800352a:	f007 fa9f 	bl	800aa6c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800352e:	4659      	mov	r1, fp
 8003530:	4628      	mov	r0, r5
 8003532:	f007 fa9b 	bl	800aa6c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003536:	ee1d 1a90 	vmov	r1, s27
 800353a:	4628      	mov	r0, r5
 800353c:	f007 fa96 	bl	800aa6c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003540:	4649      	mov	r1, r9
 8003542:	4628      	mov	r0, r5
 8003544:	f007 fa92 	bl	800aa6c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003548:	4641      	mov	r1, r8
 800354a:	4628      	mov	r0, r5
 800354c:	f007 fa8e 	bl	800aa6c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003550:	4628      	mov	r0, r5
 8003552:	4651      	mov	r1, sl
 8003554:	f007 fa8a 	bl	800aa6c <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003558:	4620      	mov	r0, r4
 800355a:	b00d      	add	sp, #52	; 0x34
 800355c:	ecbd 8b0c 	vpop	{d8-d13}
 8003560:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003564:	0802221c 	.word	0x0802221c
 8003568:	ff336699 	.word	0xff336699
 800356c:	ff0099cc 	.word	0xff0099cc
 8003570:	ff006699 	.word	0xff006699
 8003574:	20015610 	.word	0x20015610
 8003578:	080227d0 	.word	0x080227d0
 800357c:	080228d2 	.word	0x080228d2
 8003580:	0802284d 	.word	0x0802284d
 8003584:	20015614 	.word	0x20015614
 8003588:	08022894 	.word	0x08022894
 800358c:	2001561c 	.word	0x2001561c
 8003590:	0802290a 	.word	0x0802290a

08003594 <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 8003594:	2000      	movs	r0, #0
 8003596:	4770      	bx	lr

08003598 <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 8003598:	888b      	ldrh	r3, [r1, #4]
 800359a:	8083      	strh	r3, [r0, #4]
        return true;
    }
 800359c:	2001      	movs	r0, #1
 800359e:	4770      	bx	lr

080035a0 <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 80035a0:	4770      	bx	lr

080035a2 <_ZN8touchgfx17AbstractDataGraph8setAlphaEh>:
     *
     * @note All graph elements have to take this alpha into consideration.
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 80035a2:	f880 102c 	strb.w	r1, [r0, #44]	; 0x2c
    }
 80035a6:	4770      	bx	lr

080035a8 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>:
     * @param  min The minimum x value.
     * @param  max The maximum x value.
     *
     * @note The graph as well as the area above and below are automatically redrawn (invalidated).
     */
    virtual void setGraphRangeX(int min, int max)
 80035a8:	b410      	push	{r4}
    {
        setGraphRangeXScaled(int2scaledX(min), int2scaledX(max));
 80035aa:	6803      	ldr	r3, [r0, #0]
     *
     * @note For internal use.
     */
    FORCE_INLINE_FUNCTION int int2scaledX(int i) const
    {
        return int2scaled(i, xScale);
 80035ac:	6b04      	ldr	r4, [r0, #48]	; 0x30
        setGraphRangeXScaled(int2scaledX(min), int2scaledX(max));
 80035ae:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 80035b2:	4362      	muls	r2, r4
 80035b4:	4361      	muls	r1, r4
    }
 80035b6:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeXScaled(int2scaledX(min), int2scaledX(max));
 80035ba:	4718      	bx	r3

080035bc <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff>:
     *
     * @return The product of the two numbers, rounded to nearest integer value.
     */
    FORCE_INLINE_FUNCTION static int float2scaled(float f, int scale)
    {
        const float fs = f * (float)scale;
 80035bc:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
        setGraphRangeXScaled(float2scaledX(min), float2scaledX(max));
 80035c0:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 80035c2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setGraphRangeXScaled(float2scaledX(min), float2scaledX(max));
 80035c6:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
        const float fs = f * (float)scale;
 80035ca:	ee20 0a27 	vmul.f32	s0, s0, s15
        if (fs >= 0)
 80035ce:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80035d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80035d6:	db17      	blt.n	8003608 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x4c>
        {
            return (int)(fs + 0.5f);
 80035d8:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80035dc:	ee30 0a07 	vadd.f32	s0, s0, s14
 80035e0:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 80035e4:	ee17 1a10 	vmov	r1, s14
        const float fs = f * (float)scale;
 80035e8:	ee60 0aa7 	vmul.f32	s1, s1, s15
        if (fs >= 0)
 80035ec:	eef5 0ac0 	vcmpe.f32	s1, #0.0
 80035f0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80035f4:	db1c      	blt.n	8003630 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x74>
            return (int)(fs + 0.5f);
 80035f6:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 80035fa:	ee70 0aa7 	vadd.f32	s1, s1, s15
 80035fe:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 8003602:	ee17 2a90 	vmov	r2, s15
        setGraphRangeXScaled(float2scaledX(min), float2scaledX(max));
 8003606:	4718      	bx	r3
        }
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8003608:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 800360c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8003610:	ee17 2a10 	vmov	r2, s14
 8003614:	ee30 0a66 	vsub.f32	s0, s0, s13
 8003618:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800361c:	ee30 0a26 	vadd.f32	s0, s0, s13
 8003620:	1e51      	subs	r1, r2, #1
 8003622:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8003626:	ee10 2a10 	vmov	r2, s0
 800362a:	440a      	add	r2, r1
 800362c:	4611      	mov	r1, r2
 800362e:	e7db      	b.n	80035e8 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x2c>
 8003630:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 8003634:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8003638:	ee17 2a90 	vmov	r2, s15
 800363c:	ee70 0ac7 	vsub.f32	s1, s1, s14
 8003640:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 8003644:	ee70 0a87 	vadd.f32	s1, s1, s14
 8003648:	3a01      	subs	r2, #1
 800364a:	eefd 0ae0 	vcvt.s32.f32	s1, s1
 800364e:	ee10 ca90 	vmov	ip, s1
 8003652:	4494      	add	ip, r2
 8003654:	4662      	mov	r2, ip
 8003656:	e7d6      	b.n	8003606 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x4a>

08003658 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbi>:
    virtual void setGraphRangeXAuto(bool showYaxis = true, int margin = 0)
 8003658:	b410      	push	{r4}
        setGraphRangeXAutoScaled(showYaxis, int2scaledX(margin));
 800365a:	6803      	ldr	r3, [r0, #0]
        return i * scale;
 800365c:	6b04      	ldr	r4, [r0, #48]	; 0x30
        setGraphRangeXAutoScaled(showYaxis, int2scaledX(margin));
 800365e:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8003662:	4362      	muls	r2, r4
    }
 8003664:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeXAutoScaled(showYaxis, int2scaledX(margin));
 8003668:	4718      	bx	r3

0800366a <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbf>:
        const float fs = f * (float)scale;
 800366a:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
        setGraphRangeXAutoScaled(showYaxis, float2scaledX(margin));
 800366e:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 8003670:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setGraphRangeXAutoScaled(showYaxis, float2scaledX(margin));
 8003674:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
        const float fs = f * (float)scale;
 8003678:	ee27 0a80 	vmul.f32	s0, s15, s0
        if (fs >= 0)
 800367c:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8003680:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003684:	db08      	blt.n	8003698 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbf+0x2e>
            return (int)(fs + 0.5f);
 8003686:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 800368a:	ee30 0a27 	vadd.f32	s0, s0, s15
 800368e:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8003692:	ee17 2a90 	vmov	r2, s15
        setGraphRangeXAutoScaled(showYaxis, float2scaledX(margin));
 8003696:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8003698:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 800369c:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80036a0:	ee17 2a90 	vmov	r2, s15
 80036a4:	ee30 0a47 	vsub.f32	s0, s0, s14
 80036a8:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 80036ac:	ee30 0a07 	vadd.f32	s0, s0, s14
 80036b0:	3a01      	subs	r2, #1
 80036b2:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 80036b6:	ee10 ca10 	vmov	ip, s0
 80036ba:	4494      	add	ip, r2
 80036bc:	4662      	mov	r2, ip
 80036be:	e7ea      	b.n	8003696 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbf+0x2c>

080036c0 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEii>:
    virtual void setGraphRangeY(int min, int max)
 80036c0:	b410      	push	{r4}
        setGraphRangeYScaled(int2scaledY(min), int2scaledY(max));
 80036c2:	6803      	ldr	r3, [r0, #0]
        return int2scaled(i, yScale);
 80036c4:	6b44      	ldr	r4, [r0, #52]	; 0x34
        setGraphRangeYScaled(int2scaledY(min), int2scaledY(max));
 80036c6:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 80036ca:	4362      	muls	r2, r4
 80036cc:	4361      	muls	r1, r4
    }
 80036ce:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeYScaled(int2scaledY(min), int2scaledY(max));
 80036d2:	4718      	bx	r3

080036d4 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff>:
        const float fs = f * (float)scale;
 80036d4:	edd0 7a0d 	vldr	s15, [r0, #52]	; 0x34
        setGraphRangeYScaled(float2scaledY(min), float2scaledY(max));
 80036d8:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 80036da:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setGraphRangeYScaled(float2scaledY(min), float2scaledY(max));
 80036de:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
        const float fs = f * (float)scale;
 80036e2:	ee20 0a27 	vmul.f32	s0, s0, s15
        if (fs >= 0)
 80036e6:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80036ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80036ee:	db17      	blt.n	8003720 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x4c>
            return (int)(fs + 0.5f);
 80036f0:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80036f4:	ee30 0a07 	vadd.f32	s0, s0, s14
 80036f8:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 80036fc:	ee17 1a10 	vmov	r1, s14
        const float fs = f * (float)scale;
 8003700:	ee60 0aa7 	vmul.f32	s1, s1, s15
        if (fs >= 0)
 8003704:	eef5 0ac0 	vcmpe.f32	s1, #0.0
 8003708:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800370c:	db1c      	blt.n	8003748 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x74>
            return (int)(fs + 0.5f);
 800370e:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8003712:	ee70 0aa7 	vadd.f32	s1, s1, s15
 8003716:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 800371a:	ee17 2a90 	vmov	r2, s15
        setGraphRangeYScaled(float2scaledY(min), float2scaledY(max));
 800371e:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8003720:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 8003724:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8003728:	ee17 2a10 	vmov	r2, s14
 800372c:	ee30 0a66 	vsub.f32	s0, s0, s13
 8003730:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8003734:	ee30 0a26 	vadd.f32	s0, s0, s13
 8003738:	1e51      	subs	r1, r2, #1
 800373a:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 800373e:	ee10 2a10 	vmov	r2, s0
 8003742:	440a      	add	r2, r1
 8003744:	4611      	mov	r1, r2
 8003746:	e7db      	b.n	8003700 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x2c>
 8003748:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 800374c:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8003750:	ee17 2a90 	vmov	r2, s15
 8003754:	ee70 0ac7 	vsub.f32	s1, s1, s14
 8003758:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 800375c:	ee70 0a87 	vadd.f32	s1, s1, s14
 8003760:	3a01      	subs	r2, #1
 8003762:	eefd 0ae0 	vcvt.s32.f32	s1, s1
 8003766:	ee10 ca90 	vmov	ip, s1
 800376a:	4494      	add	ip, r2
 800376c:	4662      	mov	r2, ip
 800376e:	e7d6      	b.n	800371e <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x4a>

08003770 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbi>:
    virtual void setGraphRangeYAuto(bool showXaxis = true, int margin = 0)
 8003770:	b410      	push	{r4}
        setGraphRangeYAutoScaled(showXaxis, int2scaledY(margin));
 8003772:	6803      	ldr	r3, [r0, #0]
        return i * scale;
 8003774:	6b44      	ldr	r4, [r0, #52]	; 0x34
        setGraphRangeYAutoScaled(showXaxis, int2scaledY(margin));
 8003776:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 800377a:	4362      	muls	r2, r4
    }
 800377c:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeYAutoScaled(showXaxis, int2scaledY(margin));
 8003780:	4718      	bx	r3

08003782 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbf>:
        const float fs = f * (float)scale;
 8003782:	edd0 7a0d 	vldr	s15, [r0, #52]	; 0x34
        setGraphRangeYAutoScaled(showXaxis, float2scaledY(margin));
 8003786:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 8003788:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setGraphRangeYAutoScaled(showXaxis, float2scaledY(margin));
 800378c:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
        const float fs = f * (float)scale;
 8003790:	ee27 0a80 	vmul.f32	s0, s15, s0
        if (fs >= 0)
 8003794:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8003798:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800379c:	db08      	blt.n	80037b0 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbf+0x2e>
            return (int)(fs + 0.5f);
 800379e:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 80037a2:	ee30 0a27 	vadd.f32	s0, s0, s15
 80037a6:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 80037aa:	ee17 2a90 	vmov	r2, s15
        setGraphRangeYAutoScaled(showXaxis, float2scaledY(margin));
 80037ae:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80037b0:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 80037b4:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80037b8:	ee17 2a90 	vmov	r2, s15
 80037bc:	ee30 0a47 	vsub.f32	s0, s0, s14
 80037c0:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 80037c4:	ee30 0a07 	vadd.f32	s0, s0, s14
 80037c8:	3a01      	subs	r2, #1
 80037ca:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 80037ce:	ee10 ca10 	vmov	ip, s0
 80037d2:	4494      	add	ip, r2
 80037d4:	4662      	mov	r2, ip
 80037d6:	e7ea      	b.n	80037ae <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbf+0x2c>

080037d8 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMinAsIntEv>:
        return scaled2intX(graphRangeMinX);
 80037d8:	f8d0 312c 	ldr.w	r3, [r0, #300]	; 0x12c
     *
     * @note For internal use.
     */
    FORCE_INLINE_FUNCTION int scaled2intX(int i) const
    {
        return scaled2int(i, xScale);
 80037dc:	6b02      	ldr	r2, [r0, #48]	; 0x30
        if (i >= 0)
 80037de:	2b00      	cmp	r3, #0
 80037e0:	db07      	blt.n	80037f2 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMinAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 80037e2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80037e6:	fb93 f0f2 	sdiv	r0, r3, r2
 80037ea:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80037ee:	1040      	asrs	r0, r0, #1
 80037f0:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 80037f2:	f06f 0001 	mvn.w	r0, #1
 80037f6:	fb00 2003 	mla	r0, r0, r3, r2
 80037fa:	3801      	subs	r0, #1
 80037fc:	fb90 f0f2 	sdiv	r0, r0, r2
 8003800:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003804:	1040      	asrs	r0, r0, #1
 8003806:	4240      	negs	r0, r0
    }
 8003808:	4770      	bx	lr

0800380a <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeXMinAsFloatEv>:
     *
     * @return The number divided by the scale.
     */
    FORCE_INLINE_FUNCTION static float scaled2float(int i, int scale)
    {
        return (float)i / (float)scale;
 800380a:	edd0 7a4b 	vldr	s15, [r0, #300]	; 0x12c
 800380e:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8003812:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
 8003816:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 800381a:	ee80 0a27 	vdiv.f32	s0, s0, s15
 800381e:	4770      	bx	lr

08003820 <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeXMinScaledEv>:
    }
 8003820:	f8d0 012c 	ldr.w	r0, [r0, #300]	; 0x12c
 8003824:	4770      	bx	lr

08003826 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMaxAsIntEv>:
        return scaled2intX(graphRangeMaxX);
 8003826:	f8d0 3130 	ldr.w	r3, [r0, #304]	; 0x130
        return scaled2int(i, xScale);
 800382a:	6b02      	ldr	r2, [r0, #48]	; 0x30
        if (i >= 0)
 800382c:	2b00      	cmp	r3, #0
 800382e:	db07      	blt.n	8003840 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMaxAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 8003830:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8003834:	fb93 f0f2 	sdiv	r0, r3, r2
 8003838:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 800383c:	1040      	asrs	r0, r0, #1
 800383e:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8003840:	f06f 0001 	mvn.w	r0, #1
 8003844:	fb00 2003 	mla	r0, r0, r3, r2
 8003848:	3801      	subs	r0, #1
 800384a:	fb90 f0f2 	sdiv	r0, r0, r2
 800384e:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003852:	1040      	asrs	r0, r0, #1
 8003854:	4240      	negs	r0, r0
    }
 8003856:	4770      	bx	lr

08003858 <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeXMaxAsFloatEv>:
        return (float)i / (float)scale;
 8003858:	edd0 7a4c 	vldr	s15, [r0, #304]	; 0x130
 800385c:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8003860:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
 8003864:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 8003868:	ee80 0a27 	vdiv.f32	s0, s0, s15
 800386c:	4770      	bx	lr

0800386e <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeXMaxScaledEv>:
    }
 800386e:	f8d0 0130 	ldr.w	r0, [r0, #304]	; 0x130
 8003872:	4770      	bx	lr

08003874 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMinAsIntEv>:
        return scaled2intY(graphRangeMinY);
 8003874:	f8d0 3134 	ldr.w	r3, [r0, #308]	; 0x134
        return scaled2int(i, yScale);
 8003878:	6b42      	ldr	r2, [r0, #52]	; 0x34
        if (i >= 0)
 800387a:	2b00      	cmp	r3, #0
 800387c:	db07      	blt.n	800388e <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMinAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 800387e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8003882:	fb93 f0f2 	sdiv	r0, r3, r2
 8003886:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 800388a:	1040      	asrs	r0, r0, #1
 800388c:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 800388e:	f06f 0001 	mvn.w	r0, #1
 8003892:	fb00 2003 	mla	r0, r0, r3, r2
 8003896:	3801      	subs	r0, #1
 8003898:	fb90 f0f2 	sdiv	r0, r0, r2
 800389c:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80038a0:	1040      	asrs	r0, r0, #1
 80038a2:	4240      	negs	r0, r0
    }
 80038a4:	4770      	bx	lr

080038a6 <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeYMinAsFloatEv>:
        return (float)i / (float)scale;
 80038a6:	edd0 7a4d 	vldr	s15, [r0, #308]	; 0x134
 80038aa:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 80038ae:	edd0 7a0d 	vldr	s15, [r0, #52]	; 0x34
 80038b2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 80038b6:	ee80 0a27 	vdiv.f32	s0, s0, s15
 80038ba:	4770      	bx	lr

080038bc <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeYMinScaledEv>:
    }
 80038bc:	f8d0 0134 	ldr.w	r0, [r0, #308]	; 0x134
 80038c0:	4770      	bx	lr

080038c2 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMaxAsIntEv>:
        return scaled2intY(graphRangeMaxY);
 80038c2:	f8d0 3138 	ldr.w	r3, [r0, #312]	; 0x138
        return scaled2int(i, yScale);
 80038c6:	6b42      	ldr	r2, [r0, #52]	; 0x34
        if (i >= 0)
 80038c8:	2b00      	cmp	r3, #0
 80038ca:	db07      	blt.n	80038dc <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMaxAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 80038cc:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80038d0:	fb93 f0f2 	sdiv	r0, r3, r2
 80038d4:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80038d8:	1040      	asrs	r0, r0, #1
 80038da:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 80038dc:	f06f 0001 	mvn.w	r0, #1
 80038e0:	fb00 2003 	mla	r0, r0, r3, r2
 80038e4:	3801      	subs	r0, #1
 80038e6:	fb90 f0f2 	sdiv	r0, r0, r2
 80038ea:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80038ee:	1040      	asrs	r0, r0, #1
 80038f0:	4240      	negs	r0, r0
    }
 80038f2:	4770      	bx	lr

080038f4 <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeYMaxAsFloatEv>:
        return (float)i / (float)scale;
 80038f4:	edd0 7a4e 	vldr	s15, [r0, #312]	; 0x138
 80038f8:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 80038fc:	edd0 7a0d 	vldr	s15, [r0, #52]	; 0x34
 8003900:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 8003904:	ee80 0a27 	vdiv.f32	s0, s0, s15
 8003908:	4770      	bx	lr

0800390a <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeYMaxScaledEv>:
    }
 800390a:	f8d0 0138 	ldr.w	r0, [r0, #312]	; 0x138
 800390e:	4770      	bx	lr

08003910 <_ZN8touchgfx16DynamicDataGraph8setScaleEib>:
     * @see getScale
     *
     * @note The current xAxisFactor, xAxisOffet and xGraphRange values are updated to reflect the
     *       new scale being set.
     */
    virtual void setScale(int scale, bool updateData = false)
 8003910:	b570      	push	{r4, r5, r6, lr}
    {
        setScaleX(scale, updateData);
 8003912:	6803      	ldr	r3, [r0, #0]
    virtual void setScale(int scale, bool updateData = false)
 8003914:	4604      	mov	r4, r0
        setScaleX(scale, updateData);
 8003916:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
    virtual void setScale(int scale, bool updateData = false)
 800391a:	460d      	mov	r5, r1
 800391c:	4616      	mov	r6, r2
        setScaleX(scale, updateData);
 800391e:	4798      	blx	r3
        setScaleY(scale, updateData);
 8003920:	6823      	ldr	r3, [r4, #0]
 8003922:	4632      	mov	r2, r6
 8003924:	4629      	mov	r1, r5
 8003926:	4620      	mov	r0, r4
 8003928:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
    }
 800392c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setScaleY(scale, updateData);
 8003930:	4718      	bx	r3

08003932 <_ZNK8touchgfx16DynamicDataGraph8getScaleEv>:
     *
     * @see setScale
     */
    virtual int getScale() const
    {
        return getScaleY();
 8003932:	6803      	ldr	r3, [r0, #0]
 8003934:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8003938:	4718      	bx	r3

0800393a <_ZNK8touchgfx16DynamicDataGraph17getGraphRangeXMinEv>:
     *
     * @return The minimum x coordinate .
     */
    virtual int getGraphRangeXMin() const
    {
        return getGraphRangeXMinScaled();
 800393a:	6803      	ldr	r3, [r0, #0]
 800393c:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 8003940:	4718      	bx	r3

08003942 <_ZNK8touchgfx16DynamicDataGraph17getGraphRangeXMaxEv>:
     *
     * @return The maximum x coordinate .
     */
    virtual int getGraphRangeXMax() const
    {
        return getGraphRangeXMaxScaled();
 8003942:	6803      	ldr	r3, [r0, #0]
 8003944:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8003948:	4718      	bx	r3

0800394a <_ZN8touchgfx16DynamicDataGraph24setGraphRangeXAutoScaledEbi>:

    virtual void setGraphRangeYAutoScaled(bool showXaxis, int margin);

    virtual void setGraphRangeXAutoScaled(bool /*showYaxis*/, int margin)
    {
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 800394a:	6803      	ldr	r3, [r0, #0]
        if (i >= 0)
 800394c:	2a00      	cmp	r2, #0
    virtual void setGraphRangeXAutoScaled(bool /*showYaxis*/, int margin)
 800394e:	b410      	push	{r4}
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 8003950:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
        return scaled2int(i, xScale);
 8003954:	6b04      	ldr	r4, [r0, #48]	; 0x30
        if (i >= 0)
 8003956:	db0e      	blt.n	8003976 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeXAutoScaledEbi+0x2c>
            return ((i * 2 + scale) / scale) / 2;
 8003958:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 800395c:	fb92 f1f4 	sdiv	r1, r2, r4
 8003960:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8003964:	1049      	asrs	r1, r1, #1
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 8003966:	f9b0 211e 	ldrsh.w	r2, [r0, #286]	; 0x11e
    }
 800396a:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 800396e:	3a01      	subs	r2, #1
 8003970:	440a      	add	r2, r1
 8003972:	4249      	negs	r1, r1
 8003974:	4718      	bx	r3
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8003976:	f06f 0101 	mvn.w	r1, #1
 800397a:	fb01 4102 	mla	r1, r1, r2, r4
 800397e:	3901      	subs	r1, #1
 8003980:	fb91 f1f4 	sdiv	r1, r1, r4
 8003984:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8003988:	1049      	asrs	r1, r1, #1
 800398a:	4249      	negs	r1, r1
 800398c:	e7eb      	b.n	8003966 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeXAutoScaledEbi+0x1c>

0800398e <_ZN8touchgfx16DynamicDataGraph13setXAxisScaleEi>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use setXAxisFactor()", virtual void setXAxisScale(int scale))
    {
        setXAxisFactor(scale);
 800398e:	6803      	ldr	r3, [r0, #0]
 8003990:	f8d3 313c 	ldr.w	r3, [r3, #316]	; 0x13c
 8003994:	4718      	bx	r3

08003996 <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEi>:
        return i * scale;
 8003996:	6b02      	ldr	r2, [r0, #48]	; 0x30
     *
     * @param  factor The x axis factor.
     */
    virtual void setXAxisFactor(int factor)
    {
        setXAxisFactorScaled(int2scaledX(factor));
 8003998:	6803      	ldr	r3, [r0, #0]
 800399a:	4351      	muls	r1, r2
 800399c:	f8d3 3148 	ldr.w	r3, [r3, #328]	; 0x148
 80039a0:	4718      	bx	r3

080039a2 <_ZN8touchgfx16DynamicDataGraph13setXAxisScaleEf>:
    }

    /// @cond
    TOUCHGFX_DEPRECATED("Please use setXAxisFactor()", virtual void setXAxisScale(float scale))
    {
        setXAxisFactor(scale);
 80039a2:	6803      	ldr	r3, [r0, #0]
 80039a4:	f8d3 3144 	ldr.w	r3, [r3, #324]	; 0x144
 80039a8:	4718      	bx	r3

080039aa <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEf>:
        const float fs = f * (float)scale;
 80039aa:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
    /// @endcond

    /** @copydoc setXAxisFactor(int) */
    virtual void setXAxisFactor(float factor)
    {
        setXAxisFactorScaled(float2scaledX(factor));
 80039ae:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 80039b0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setXAxisFactorScaled(float2scaledX(factor));
 80039b4:	f8d3 3148 	ldr.w	r3, [r3, #328]	; 0x148
        const float fs = f * (float)scale;
 80039b8:	ee27 0a80 	vmul.f32	s0, s15, s0
        if (fs >= 0)
 80039bc:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80039c0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80039c4:	db08      	blt.n	80039d8 <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEf+0x2e>
            return (int)(fs + 0.5f);
 80039c6:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 80039ca:	ee30 0a27 	vadd.f32	s0, s0, s15
 80039ce:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 80039d2:	ee17 1a90 	vmov	r1, s15
        setXAxisFactorScaled(float2scaledX(factor));
 80039d6:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80039d8:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 80039dc:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80039e0:	ee17 2a90 	vmov	r2, s15
 80039e4:	ee30 0a47 	vsub.f32	s0, s0, s14
 80039e8:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 80039ec:	ee30 0a07 	vadd.f32	s0, s0, s14
 80039f0:	1e51      	subs	r1, r2, #1
 80039f2:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 80039f6:	ee10 2a10 	vmov	r2, s0
 80039fa:	440a      	add	r2, r1
 80039fc:	4611      	mov	r1, r2
 80039fe:	e7ea      	b.n	80039d6 <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEf+0x2c>

08003a00 <_ZN8touchgfx16DynamicDataGraph20setXAxisFactorScaledEi>:
     *
     * @see setXAxisFactorScaled,setXAxisFactor
     */
    virtual void setXAxisFactorScaled(int factor)
    {
        xAxisFactor = factor;
 8003a00:	f8c0 113c 	str.w	r1, [r0, #316]	; 0x13c
    }
 8003a04:	4770      	bx	lr

08003a06 <_ZNK8touchgfx16DynamicDataGraph18getXAxisScaleAsIntEv>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use getXAxisFactorAsInt()", virtual int getXAxisScaleAsInt() const)
    {
        return getXAxisFactorAsInt();
 8003a06:	6803      	ldr	r3, [r0, #0]
 8003a08:	f8d3 3150 	ldr.w	r3, [r3, #336]	; 0x150
 8003a0c:	4718      	bx	r3

08003a0e <_ZNK8touchgfx16DynamicDataGraph19getXAxisFactorAsIntEv>:
     *
     * @return The x axis factor.
     */
    virtual int getXAxisFactorAsInt() const
    {
        return scaled2intX(getXAxisFactorScaled());
 8003a0e:	6803      	ldr	r3, [r0, #0]
    virtual int getXAxisFactorAsInt() const
 8003a10:	b510      	push	{r4, lr}
        return scaled2intX(getXAxisFactorScaled());
 8003a12:	f8d3 315c 	ldr.w	r3, [r3, #348]	; 0x15c
    virtual int getXAxisFactorAsInt() const
 8003a16:	4604      	mov	r4, r0
        return scaled2intX(getXAxisFactorScaled());
 8003a18:	4798      	blx	r3
        if (i >= 0)
 8003a1a:	2800      	cmp	r0, #0
        return scaled2int(i, xScale);
 8003a1c:	6b23      	ldr	r3, [r4, #48]	; 0x30
        if (i >= 0)
 8003a1e:	db07      	blt.n	8003a30 <_ZNK8touchgfx16DynamicDataGraph19getXAxisFactorAsIntEv+0x22>
            return ((i * 2 + scale) / scale) / 2;
 8003a20:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8003a24:	fb90 f0f3 	sdiv	r0, r0, r3
 8003a28:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003a2c:	1040      	asrs	r0, r0, #1
    }
 8003a2e:	bd10      	pop	{r4, pc}
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8003a30:	f06f 0201 	mvn.w	r2, #1
 8003a34:	fb02 3000 	mla	r0, r2, r0, r3
 8003a38:	3801      	subs	r0, #1
 8003a3a:	fb90 f0f3 	sdiv	r0, r0, r3
 8003a3e:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003a42:	1040      	asrs	r0, r0, #1
 8003a44:	4240      	negs	r0, r0
        return scaled2intX(getXAxisFactorScaled());
 8003a46:	e7f2      	b.n	8003a2e <_ZNK8touchgfx16DynamicDataGraph19getXAxisFactorAsIntEv+0x20>

08003a48 <_ZNK8touchgfx16DynamicDataGraph20getXAxisScaleAsFloatEv>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use getXAxisFactorAsFloat()", virtual float getXAxisScaleAsFloat() const)
    {
        return getXAxisFactorAsFloat();
 8003a48:	6803      	ldr	r3, [r0, #0]
 8003a4a:	f8d3 3158 	ldr.w	r3, [r3, #344]	; 0x158
 8003a4e:	4718      	bx	r3

08003a50 <_ZNK8touchgfx16DynamicDataGraph21getXAxisFactorAsFloatEv>:
    /// @endcond

    /** @copydoc getXAxisFactorAsInt() */
    virtual float getXAxisFactorAsFloat() const
    {
        return scaled2floatX(getXAxisFactorScaled());
 8003a50:	6803      	ldr	r3, [r0, #0]
    virtual float getXAxisFactorAsFloat() const
 8003a52:	b510      	push	{r4, lr}
        return scaled2floatX(getXAxisFactorScaled());
 8003a54:	f8d3 315c 	ldr.w	r3, [r3, #348]	; 0x15c
    virtual float getXAxisFactorAsFloat() const
 8003a58:	4604      	mov	r4, r0
        return scaled2floatX(getXAxisFactorScaled());
 8003a5a:	4798      	blx	r3
        return (float)i / (float)scale;
 8003a5c:	ee07 0a90 	vmov	s15, r0
 8003a60:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8003a64:	edd4 7a0c 	vldr	s15, [r4, #48]	; 0x30
 8003a68:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 8003a6c:	ee80 0a27 	vdiv.f32	s0, s0, s15
 8003a70:	bd10      	pop	{r4, pc}

08003a72 <_ZNK8touchgfx16DynamicDataGraph20getXAxisFactorScaledEv>:
     * @see getXAxisFactorAsInt, getXAxisFactorAsFloat, setXAxisFactor
     */
    virtual int getXAxisFactorScaled() const
    {
        return xAxisFactor;
    }
 8003a72:	f8d0 013c 	ldr.w	r0, [r0, #316]	; 0x13c
 8003a76:	4770      	bx	lr

08003a78 <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEi>:
        return i * scale;
 8003a78:	6b02      	ldr	r2, [r0, #48]	; 0x30
     *
     * @param  offset The x axis offset.
     */
    virtual void setXAxisOffset(int offset)
    {
        setXAxisOffsetScaled(int2scaledX(offset));
 8003a7a:	6803      	ldr	r3, [r0, #0]
 8003a7c:	4351      	muls	r1, r2
 8003a7e:	f8d3 3168 	ldr.w	r3, [r3, #360]	; 0x168
 8003a82:	4718      	bx	r3

08003a84 <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEf>:
        const float fs = f * (float)scale;
 8003a84:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
    }

    /** @copydoc setXAxisOffset(int) */
    virtual void setXAxisOffset(float offset)
    {
        setXAxisOffsetScaled(float2scaledX(offset));
 8003a88:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 8003a8a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setXAxisOffsetScaled(float2scaledX(offset));
 8003a8e:	f8d3 3168 	ldr.w	r3, [r3, #360]	; 0x168
        const float fs = f * (float)scale;
 8003a92:	ee27 0a80 	vmul.f32	s0, s15, s0
        if (fs >= 0)
 8003a96:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8003a9a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003a9e:	db08      	blt.n	8003ab2 <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEf+0x2e>
            return (int)(fs + 0.5f);
 8003aa0:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8003aa4:	ee30 0a27 	vadd.f32	s0, s0, s15
 8003aa8:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8003aac:	ee17 1a90 	vmov	r1, s15
        setXAxisOffsetScaled(float2scaledX(offset));
 8003ab0:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8003ab2:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8003ab6:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8003aba:	ee17 2a90 	vmov	r2, s15
 8003abe:	ee30 0a47 	vsub.f32	s0, s0, s14
 8003ac2:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 8003ac6:	ee30 0a07 	vadd.f32	s0, s0, s14
 8003aca:	1e51      	subs	r1, r2, #1
 8003acc:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8003ad0:	ee10 2a10 	vmov	r2, s0
 8003ad4:	440a      	add	r2, r1
 8003ad6:	4611      	mov	r1, r2
 8003ad8:	e7ea      	b.n	8003ab0 <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEf+0x2c>

08003ada <_ZN8touchgfx16DynamicDataGraph20setXAxisOffsetScaledEi>:
     *
     * @see setXAxisOffset, getXAxisOffsetScaled
     */
    virtual void setXAxisOffsetScaled(int offset)
    {
        xAxisOffset = offset;
 8003ada:	f8c0 1140 	str.w	r1, [r0, #320]	; 0x140
    }
 8003ade:	4770      	bx	lr

08003ae0 <_ZNK8touchgfx16DynamicDataGraph19getXAxisOffsetAsIntEv>:
     *
     * @return The x axis offset.
     */
    virtual int getXAxisOffsetAsInt() const
    {
        return scaled2intX(getXAxisOffsetScaled());
 8003ae0:	6803      	ldr	r3, [r0, #0]
    virtual int getXAxisOffsetAsInt() const
 8003ae2:	b510      	push	{r4, lr}
        return scaled2intX(getXAxisOffsetScaled());
 8003ae4:	f8d3 3174 	ldr.w	r3, [r3, #372]	; 0x174
    virtual int getXAxisOffsetAsInt() const
 8003ae8:	4604      	mov	r4, r0
        return scaled2intX(getXAxisOffsetScaled());
 8003aea:	4798      	blx	r3
        if (i >= 0)
 8003aec:	2800      	cmp	r0, #0
        return scaled2int(i, xScale);
 8003aee:	6b23      	ldr	r3, [r4, #48]	; 0x30
        if (i >= 0)
 8003af0:	db07      	blt.n	8003b02 <_ZNK8touchgfx16DynamicDataGraph19getXAxisOffsetAsIntEv+0x22>
            return ((i * 2 + scale) / scale) / 2;
 8003af2:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8003af6:	fb90 f0f3 	sdiv	r0, r0, r3
 8003afa:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003afe:	1040      	asrs	r0, r0, #1
    }
 8003b00:	bd10      	pop	{r4, pc}
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8003b02:	f06f 0201 	mvn.w	r2, #1
 8003b06:	fb02 3000 	mla	r0, r2, r0, r3
 8003b0a:	3801      	subs	r0, #1
 8003b0c:	fb90 f0f3 	sdiv	r0, r0, r3
 8003b10:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003b14:	1040      	asrs	r0, r0, #1
 8003b16:	4240      	negs	r0, r0
        return scaled2intX(getXAxisOffsetScaled());
 8003b18:	e7f2      	b.n	8003b00 <_ZNK8touchgfx16DynamicDataGraph19getXAxisOffsetAsIntEv+0x20>

08003b1a <_ZNK8touchgfx16DynamicDataGraph21getXAxisOffsetAsFloatEv>:

    /** @copydoc getXAxisOffsetAsInt() */
    virtual float getXAxisOffsetAsFloat() const
    {
        return scaled2floatX(getXAxisOffsetScaled());
 8003b1a:	6803      	ldr	r3, [r0, #0]
    virtual float getXAxisOffsetAsFloat() const
 8003b1c:	b510      	push	{r4, lr}
        return scaled2floatX(getXAxisOffsetScaled());
 8003b1e:	f8d3 3174 	ldr.w	r3, [r3, #372]	; 0x174
    virtual float getXAxisOffsetAsFloat() const
 8003b22:	4604      	mov	r4, r0
        return scaled2floatX(getXAxisOffsetScaled());
 8003b24:	4798      	blx	r3
        return (float)i / (float)scale;
 8003b26:	ee07 0a90 	vmov	s15, r0
 8003b2a:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8003b2e:	edd4 7a0c 	vldr	s15, [r4, #48]	; 0x30
 8003b32:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 8003b36:	ee80 0a27 	vdiv.f32	s0, s0, s15
 8003b3a:	bd10      	pop	{r4, pc}

08003b3c <_ZNK8touchgfx16DynamicDataGraph20getXAxisOffsetScaledEv>:
     * @see getXAxisOffsetAsInt, getXAxisOffsetAsFloat, setXAxisOffsetScaled, setXAxisOffset
     */
    virtual int getXAxisOffsetScaled() const
    {
        return xAxisOffset;
    }
 8003b3c:	f8d0 0140 	ldr.w	r0, [r0, #320]	; 0x140
 8003b40:	4770      	bx	lr

08003b42 <_ZNK8touchgfx16DynamicDataGraph12indexToXAxisEii>:
    }

    virtual int indexToXAxis(const int valueScaled, const int /*labelScaled*/) const
    {
        // Value is also index for these types of graphs.
        return (indexToGlobalIndex(scaled2intX(valueScaled)) * xAxisFactor) + xAxisOffset;
 8003b42:	6803      	ldr	r3, [r0, #0]
        return scaled2int(i, xScale);
 8003b44:	6b02      	ldr	r2, [r0, #48]	; 0x30
        return (indexToGlobalIndex(scaled2intX(valueScaled)) * xAxisFactor) + xAxisOffset;
 8003b46:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
        if (i >= 0)
 8003b4a:	2900      	cmp	r1, #0
    virtual int indexToXAxis(const int valueScaled, const int /*labelScaled*/) const
 8003b4c:	b510      	push	{r4, lr}
 8003b4e:	4604      	mov	r4, r0
        if (i >= 0)
 8003b50:	db0e      	blt.n	8003b70 <_ZNK8touchgfx16DynamicDataGraph12indexToXAxisEii+0x2e>
            return ((i * 2 + scale) / scale) / 2;
 8003b52:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 8003b56:	fb91 f1f2 	sdiv	r1, r1, r2
 8003b5a:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8003b5e:	1049      	asrs	r1, r1, #1
        return (indexToGlobalIndex(scaled2intX(valueScaled)) * xAxisFactor) + xAxisOffset;
 8003b60:	b209      	sxth	r1, r1
 8003b62:	4620      	mov	r0, r4
 8003b64:	4798      	blx	r3
 8003b66:	e9d4 234f 	ldrd	r2, r3, [r4, #316]	; 0x13c
    }
 8003b6a:	fb02 3000 	mla	r0, r2, r0, r3
 8003b6e:	bd10      	pop	{r4, pc}
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8003b70:	f06f 0001 	mvn.w	r0, #1
 8003b74:	fb00 2101 	mla	r1, r0, r1, r2
 8003b78:	3901      	subs	r1, #1
 8003b7a:	fb91 f1f2 	sdiv	r1, r1, r2
 8003b7e:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8003b82:	1049      	asrs	r1, r1, #1
 8003b84:	4249      	negs	r1, r1
 8003b86:	e7eb      	b.n	8003b60 <_ZNK8touchgfx16DynamicDataGraph12indexToXAxisEii+0x1e>

08003b88 <_ZNK8touchgfx16DynamicDataGraph9getScaleXEv>:
    virtual void setScaleX(int scale, bool updateData = false);

    virtual int getScaleX() const
    {
        return AbstractDataGraph::getScaleX();
    }
 8003b88:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8003b8a:	4770      	bx	lr

08003b8c <_ZNK8touchgfx16DynamicDataGraph9getScaleYEv>:
    virtual void setScaleY(int scale, bool updateData = false);

    virtual int getScaleY() const
    {
        return AbstractDataGraph::getScaleY();
    }
 8003b8c:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8003b8e:	4770      	bx	lr

08003b90 <_ZN8touchgfx16DynamicDataGraph19setXAxisScaleScaledEi>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use setXAxisFactorScaled()", virtual void setXAxisScaleScaled(int scale))
    {
        setXAxisFactorScaled(scale);
 8003b90:	6803      	ldr	r3, [r0, #0]
 8003b92:	f8d3 3148 	ldr.w	r3, [r3, #328]	; 0x148
 8003b96:	4718      	bx	r3

08003b98 <_ZNK8touchgfx16DynamicDataGraph19getXAxisScaleScaledEv>:
    /// @endcond

    /// @cond
    TOUCHGFX_DEPRECATED("Please use getXAxisFactorScaled()", virtual int getXAxisScaleScaled() const)
    {
        return getXAxisFactorScaled();
 8003b98:	6803      	ldr	r3, [r0, #0]
 8003b9a:	f8d3 315c 	ldr.w	r3, [r3, #348]	; 0x15c
 8003b9e:	4718      	bx	r3

08003ba0 <_ZNK8touchgfx16DynamicDataGraph16indexToScreenXQ5Es>:
        return i * scale;
 8003ba0:	6b02      	ldr	r2, [r0, #48]	; 0x30
    }
    /// @endcond

    virtual CWRUtil::Q5 indexToScreenXQ5(int16_t index) const
    {
        return valueToScreenXQ5(int2scaledX(index));
 8003ba2:	6803      	ldr	r3, [r0, #0]
 8003ba4:	4351      	muls	r1, r2
 8003ba6:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 8003baa:	4718      	bx	r3

08003bac <_ZNK8touchgfx16DynamicDataGraph16indexToScreenYQ5Es>:
    }

    virtual CWRUtil::Q5 indexToScreenYQ5(int16_t index) const
    {
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 8003bac:	6803      	ldr	r3, [r0, #0]
    virtual CWRUtil::Q5 indexToScreenYQ5(int16_t index) const
 8003bae:	b570      	push	{r4, r5, r6, lr}
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 8003bb0:	f8d3 5118 	ldr.w	r5, [r3, #280]	; 0x118
 8003bb4:	f8d3 3180 	ldr.w	r3, [r3, #384]	; 0x180
 8003bb8:	f8d0 6144 	ldr.w	r6, [r0, #324]	; 0x144
    virtual CWRUtil::Q5 indexToScreenYQ5(int16_t index) const
 8003bbc:	4604      	mov	r4, r0
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 8003bbe:	4798      	blx	r3
 8003bc0:	462b      	mov	r3, r5
 8003bc2:	f856 1020 	ldr.w	r1, [r6, r0, lsl #2]
 8003bc6:	4620      	mov	r0, r4
    }
 8003bc8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 8003bcc:	4718      	bx	r3

08003bce <_ZNK8touchgfx15GraphScrollData9dataIndexEs>:

    virtual int16_t addValue(int value);

    virtual int16_t dataIndex(int16_t screenIndex) const
    {
        return usedCapacity < maxCapacity ? screenIndex : (screenIndex + current) % maxCapacity;
 8003bce:	f9b0 211c 	ldrsh.w	r2, [r0, #284]	; 0x11c
 8003bd2:	f9b0 311e 	ldrsh.w	r3, [r0, #286]	; 0x11e
 8003bd6:	4293      	cmp	r3, r2
 8003bd8:	db07      	blt.n	8003bea <_ZNK8touchgfx15GraphScrollData9dataIndexEs+0x1c>
 8003bda:	f9b0 314c 	ldrsh.w	r3, [r0, #332]	; 0x14c
 8003bde:	4419      	add	r1, r3
 8003be0:	fb91 f0f2 	sdiv	r0, r1, r2
 8003be4:	fb02 1110 	mls	r1, r2, r0, r1
 8003be8:	b209      	sxth	r1, r1
    }
 8003bea:	4608      	mov	r0, r1
 8003bec:	4770      	bx	lr

08003bee <_ZNK8touchgfx15GraphScrollData10indexToXQ5Es>:

private:
    virtual CWRUtil::Q5 indexToXQ5(int16_t index) const
    {
        return CWRUtil::toQ5(index);
    }
 8003bee:	0148      	lsls	r0, r1, #5
 8003bf0:	4770      	bx	lr

08003bf2 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8003bf2:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
    }
 8003bf6:	4770      	bx	lr

08003bf8 <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 8003bf8:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
 8003bfc:	4770      	bx	lr

08003bfe <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 8003bfe:	b510      	push	{r4, lr}
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8003c00:	2200      	movs	r2, #0
        return rect.width;
 8003c02:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 8003c06:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 8003c0a:	8002      	strh	r2, [r0, #0]
 8003c0c:	8042      	strh	r2, [r0, #2]
 8003c0e:	8084      	strh	r4, [r0, #4]
 8003c10:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 8003c12:	bd10      	pop	{r4, pc}

08003c14 <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 8003c14:	2200      	movs	r2, #0
 8003c16:	8002      	strh	r2, [r0, #0]
 8003c18:	8042      	strh	r2, [r0, #2]
 8003c1a:	8082      	strh	r2, [r0, #4]
 8003c1c:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8003c1e:	4770      	bx	lr

08003c20 <_ZN8touchgfx25AbstractGraphElementNoCWR8setColorENS_9colortypeE>:
     *
     * @see getColor
     */
    virtual void setColor(colortype newColor)
    {
        color = newColor;
 8003c20:	62c1      	str	r1, [r0, #44]	; 0x2c
    }
 8003c22:	4770      	bx	lr

08003c24 <_ZNK8touchgfx25AbstractGraphElementNoCWR8getColorEv>:
     * @see setColor
     */
    virtual colortype getColor() const
    {
        return color;
    }
 8003c24:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 8003c26:	4770      	bx	lr

08003c28 <_ZNK8touchgfx25AbstractGraphElementNoCWR16drawCanvasWidgetERKNS_4RectE>:

    virtual bool drawCanvasWidget(const Rect&) const
    {
        return true;
    }
 8003c28:	2001      	movs	r0, #1
 8003c2a:	4770      	bx	lr

08003c2c <_ZN8touchgfx25AbstractGraphElementNoCWR10setPainterERNS_15AbstractPainterE>:
    void normalizeRect(Rect& r) const;

private:
    virtual void setPainter(AbstractPainter& /*painter*/)
    {
    }
 8003c2c:	4770      	bx	lr

08003c2e <_ZN8touchgfx20GraphElementGridBase22invalidateGraphPointAtEs>:
        return lineWidth;
    }

    virtual void invalidateGraphPointAt(int16_t)
    {
    }
 8003c2e:	4770      	bx	lr

08003c30 <_ZNK8touchgfx20GraphElementGridBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE>:
     *
     * @return The correctly scaled major interval.
     */
    virtual int getCorrectlyScaledMajorInterval(const AbstractDataGraph* graph) const
    {
        return majorGrid == 0 ? 0 : majorGrid->getCorrectlyScaledGridInterval(graph);
 8003c30:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8003c32:	b118      	cbz	r0, 8003c3c <_ZNK8touchgfx20GraphElementGridBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE+0xc>
 8003c34:	6803      	ldr	r3, [r0, #0]
 8003c36:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8003c3a:	4718      	bx	r3
    }
 8003c3c:	4770      	bx	lr

08003c3e <_ZNK8touchgfx17GraphElementGridX13enclosingAreaEPKNS_17AbstractDataGraphE>:
    {
        return convertToGraphScaleX(graph, gridInterval, dataScale);
    }

protected:
    virtual Rect enclosingArea(const AbstractDataGraph* graph) const
 8003c3e:	b530      	push	{r4, r5, lr}
        return graphArea.getHeight() - (topPadding + bottomPadding);
 8003c40:	f8b2 111a 	ldrh.w	r1, [r2, #282]	; 0x11a
        return topPadding;
 8003c44:	f9b2 4114 	ldrsh.w	r4, [r2, #276]	; 0x114
        return rect.width;
 8003c48:	f9b2 5040 	ldrsh.w	r5, [r2, #64]	; 0x40
        return graphArea.getHeight() - (topPadding + bottomPadding);
 8003c4c:	f8b2 2042 	ldrh.w	r2, [r2, #66]	; 0x42
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8003c50:	8044      	strh	r4, [r0, #2]
 8003c52:	4421      	add	r1, r4
 8003c54:	1a52      	subs	r2, r2, r1
 8003c56:	2100      	movs	r1, #0
 8003c58:	8001      	strh	r1, [r0, #0]
 8003c5a:	8085      	strh	r5, [r0, #4]
 8003c5c:	80c2      	strh	r2, [r0, #6]
    {
        return Rect(0, graph->getGraphAreaPaddingTop(), graph->getGraphAreaWidthIncludingPadding(), graph->getGraphAreaHeight());
    }
 8003c5e:	bd30      	pop	{r4, r5, pc}

08003c60 <_ZNK8touchgfx17GraphElementGridX8lineRectEssss>:

    virtual Rect lineRect(int16_t start, int16_t length, int16_t pos, int16_t width) const
 8003c60:	b510      	push	{r4, lr}
 8003c62:	8042      	strh	r2, [r0, #2]
 8003c64:	f9bd 4008 	ldrsh.w	r4, [sp, #8]
 8003c68:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8003c6c:	8004      	strh	r4, [r0, #0]
 8003c6e:	8082      	strh	r2, [r0, #4]
 8003c70:	80c3      	strh	r3, [r0, #6]
    {
        return Rect(pos, start, width, length);
    }
 8003c72:	bd10      	pop	{r4, pc}

08003c74 <_ZNK8touchgfx17GraphElementGridX22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:

    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeXMinScaled();
 8003c74:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
 8003c76:	4608      	mov	r0, r1
        return graph->getGraphRangeXMinScaled();
 8003c78:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 8003c7c:	4718      	bx	r3

08003c7e <_ZNK8touchgfx17GraphElementGridX22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeXMaxScaled();
 8003c7e:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
 8003c80:	4608      	mov	r0, r1
        return graph->getGraphRangeXMaxScaled();
 8003c82:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8003c86:	4718      	bx	r3

08003c88 <_ZNK8touchgfx17GraphElementGridX17getGraphAreaStartEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphAreaStart(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingTop();
    }
 8003c88:	f9b1 0114 	ldrsh.w	r0, [r1, #276]	; 0x114
 8003c8c:	4770      	bx	lr

08003c8e <_ZNK8touchgfx17GraphElementGridX18getGraphAreaLengthEPKNS_17AbstractDataGraphE>:
 8003c8e:	f8b1 0114 	ldrh.w	r0, [r1, #276]	; 0x114
 8003c92:	f8b1 311a 	ldrh.w	r3, [r1, #282]	; 0x11a
 8003c96:	4403      	add	r3, r0
 8003c98:	f8b1 0042 	ldrh.w	r0, [r1, #66]	; 0x42
 8003c9c:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaLength(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaHeight();
    }
 8003c9e:	b200      	sxth	r0, r0
 8003ca0:	4770      	bx	lr

08003ca2 <_ZNK8touchgfx17GraphElementGridX20getGraphAreaStartPosEPKNS_17AbstractDataGraphE>:

    virtual int getGraphAreaStartPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingLeft();
    }
 8003ca2:	f9b1 0116 	ldrsh.w	r0, [r1, #278]	; 0x116
 8003ca6:	4770      	bx	lr

08003ca8 <_ZNK8touchgfx17GraphElementGridX18getGraphAreaEndPosEPKNS_17AbstractDataGraphE>:
        return graphArea.getWidth() - (leftPadding + rightPadding);
 8003ca8:	f8b1 0116 	ldrh.w	r0, [r1, #278]	; 0x116
 8003cac:	f8b1 3118 	ldrh.w	r3, [r1, #280]	; 0x118
 8003cb0:	4403      	add	r3, r0
 8003cb2:	f8b1 0040 	ldrh.w	r0, [r1, #64]	; 0x40
 8003cb6:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaEndPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaWidth();
    }
 8003cb8:	b200      	sxth	r0, r0
 8003cba:	4770      	bx	lr

08003cbc <_ZNK8touchgfx17GraphElementGridX15valueToScreenQ5EPKNS_17AbstractDataGraphEi>:
        return graph->valueToScreenXQ5(x);
 8003cbc:	680b      	ldr	r3, [r1, #0]

    virtual CWRUtil::Q5 valueToScreenQ5(const AbstractDataGraph* graph, int value) const
 8003cbe:	4608      	mov	r0, r1
        return graph->valueToScreenXQ5(x);
 8003cc0:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 8003cc4:	4611      	mov	r1, r2
 8003cc6:	4718      	bx	r3

08003cc8 <_ZNK8touchgfx17GraphElementGridY13enclosingAreaEPKNS_17AbstractDataGraphE>:
 8003cc8:	f8b2 1118 	ldrh.w	r1, [r2, #280]	; 0x118
    {
        return convertToGraphScaleY(graph, gridInterval, dataScale);
    }

protected:
    virtual Rect enclosingArea(const AbstractDataGraph* graph) const
 8003ccc:	b530      	push	{r4, r5, lr}
        return leftPadding;
 8003cce:	f9b2 5116 	ldrsh.w	r5, [r2, #278]	; 0x116
 8003cd2:	8005      	strh	r5, [r0, #0]
        return graphArea.getWidth() - (leftPadding + rightPadding);
 8003cd4:	186c      	adds	r4, r5, r1
 8003cd6:	f8b2 1040 	ldrh.w	r1, [r2, #64]	; 0x40
        return rect.height;
 8003cda:	f9b2 2042 	ldrsh.w	r2, [r2, #66]	; 0x42
 8003cde:	80c2      	strh	r2, [r0, #6]
 8003ce0:	1b09      	subs	r1, r1, r4
 8003ce2:	2400      	movs	r4, #0
 8003ce4:	8044      	strh	r4, [r0, #2]
 8003ce6:	8081      	strh	r1, [r0, #4]
    {
        return Rect(graph->getGraphAreaPaddingLeft(), 0, graph->getGraphAreaWidth(), graph->getGraphAreaHeightIncludingPadding());
    }
 8003ce8:	bd30      	pop	{r4, r5, pc}

08003cea <_ZNK8touchgfx17GraphElementGridY8lineRectEssss>:
 8003cea:	8002      	strh	r2, [r0, #0]
 8003cec:	8083      	strh	r3, [r0, #4]
 8003cee:	f9bd 2000 	ldrsh.w	r2, [sp]
 8003cf2:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8003cf6:	8042      	strh	r2, [r0, #2]
 8003cf8:	80c3      	strh	r3, [r0, #6]

    virtual Rect lineRect(int16_t start, int16_t length, int16_t pos, int16_t width) const
    {
        return Rect(start, pos, length, width);
    }
 8003cfa:	4770      	bx	lr

08003cfc <_ZNK8touchgfx17GraphElementGridY22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:

    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeYMinScaled();
 8003cfc:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
 8003cfe:	4608      	mov	r0, r1
        return graph->getGraphRangeYMinScaled();
 8003d00:	f8d3 30ec 	ldr.w	r3, [r3, #236]	; 0xec
 8003d04:	4718      	bx	r3

08003d06 <_ZNK8touchgfx17GraphElementGridY22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeYMaxScaled();
 8003d06:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
 8003d08:	4608      	mov	r0, r1
        return graph->getGraphRangeYMaxScaled();
 8003d0a:	f8d3 30f8 	ldr.w	r3, [r3, #248]	; 0xf8
 8003d0e:	4718      	bx	r3

08003d10 <_ZNK8touchgfx17GraphElementGridY17getGraphAreaStartEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphAreaStart(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingLeft();
    }
 8003d10:	f9b1 0116 	ldrsh.w	r0, [r1, #278]	; 0x116
 8003d14:	4770      	bx	lr

08003d16 <_ZNK8touchgfx17GraphElementGridY18getGraphAreaLengthEPKNS_17AbstractDataGraphE>:
 8003d16:	f8b1 0116 	ldrh.w	r0, [r1, #278]	; 0x116
 8003d1a:	f8b1 3118 	ldrh.w	r3, [r1, #280]	; 0x118
 8003d1e:	4403      	add	r3, r0
 8003d20:	f8b1 0040 	ldrh.w	r0, [r1, #64]	; 0x40
 8003d24:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaLength(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaWidth();
    }
 8003d26:	b200      	sxth	r0, r0
 8003d28:	4770      	bx	lr

08003d2a <_ZNK8touchgfx17GraphElementGridY20getGraphAreaStartPosEPKNS_17AbstractDataGraphE>:

    virtual int getGraphAreaStartPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingTop();
    }
 8003d2a:	f9b1 0114 	ldrsh.w	r0, [r1, #276]	; 0x114
 8003d2e:	4770      	bx	lr

08003d30 <_ZNK8touchgfx17GraphElementGridY18getGraphAreaEndPosEPKNS_17AbstractDataGraphE>:
        return graphArea.getHeight() - (topPadding + bottomPadding);
 8003d30:	f8b1 0114 	ldrh.w	r0, [r1, #276]	; 0x114
 8003d34:	f8b1 311a 	ldrh.w	r3, [r1, #282]	; 0x11a
 8003d38:	4403      	add	r3, r0
 8003d3a:	f8b1 0042 	ldrh.w	r0, [r1, #66]	; 0x42
 8003d3e:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaEndPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaHeight();
    }
 8003d40:	b200      	sxth	r0, r0
 8003d42:	4770      	bx	lr

08003d44 <_ZNK8touchgfx17GraphElementGridY15valueToScreenQ5EPKNS_17AbstractDataGraphEi>:
        return graph->valueToScreenYQ5(y);
 8003d44:	680b      	ldr	r3, [r1, #0]

    virtual CWRUtil::Q5 valueToScreenQ5(const AbstractDataGraph* graph, int value) const
 8003d46:	4608      	mov	r0, r1
        return graph->valueToScreenYQ5(y);
 8003d48:	f8d3 3118 	ldr.w	r3, [r3, #280]	; 0x118
 8003d4c:	4611      	mov	r1, r2
 8003d4e:	4718      	bx	r3

08003d50 <_ZN19ScreenGraphViewBaseD1Ev>:

class ScreenGraphViewBase : public touchgfx::View<ScreenGraphPresenter>
{
public:
    ScreenGraphViewBase();
    virtual ~ScreenGraphViewBase() {}
 8003d50:	4770      	bx	lr

08003d52 <_ZN19ScreenGraphViewBase11setupScreenEv>:
}

void ScreenGraphViewBase::setupScreen()
{

}
 8003d52:	4770      	bx	lr

08003d54 <_ZN8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003d54:	4770      	bx	lr

08003d56 <_ZN8touchgfx11GraphScrollILs60EED1Ev>:
 * the new values added to the graph.
 *
 * @tparam CAPACITY The maximum number of data points on the graph.
 */
template <int16_t CAPACITY>
class GraphScroll : public GraphScrollData
 8003d56:	4770      	bx	lr

08003d58 <_ZN8touchgfx11GraphScrollILs600EED1Ev>:
 8003d58:	4770      	bx	lr

08003d5a <_ZN8touchgfx17GraphElementGridYD1Ev>:
class GraphElementGridY : public GraphElementGridBase
 8003d5a:	4770      	bx	lr

08003d5c <_ZN8touchgfx17GraphElementGridXD1Ev>:
class GraphElementGridX : public GraphElementGridBase
 8003d5c:	4770      	bx	lr

08003d5e <_ZN8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8003d5e:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003d60:	68c2      	ldr	r2, [r0, #12]
 8003d62:	6844      	ldr	r4, [r0, #4]
 8003d64:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8003d66:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8003d68:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8003d6c:	07d2      	lsls	r2, r2, #31
 8003d6e:	bf48      	it	mi
 8003d70:	5962      	ldrmi	r2, [r4, r5]
 8003d72:	689b      	ldr	r3, [r3, #8]
    }
 8003d74:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003d76:	bf48      	it	mi
 8003d78:	58d3      	ldrmi	r3, [r2, r3]
 8003d7a:	4718      	bx	r3

08003d7c <_ZNK8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8003d7c:	6843      	ldr	r3, [r0, #4]
 8003d7e:	b12b      	cbz	r3, 8003d8c <_ZNK8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8003d80:	6883      	ldr	r3, [r0, #8]
 8003d82:	b92b      	cbnz	r3, 8003d90 <_ZNK8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8003d84:	68c0      	ldr	r0, [r0, #12]
 8003d86:	f000 0001 	and.w	r0, r0, #1
 8003d8a:	4770      	bx	lr
 8003d8c:	4618      	mov	r0, r3
 8003d8e:	4770      	bx	lr
 8003d90:	2001      	movs	r0, #1
    }
 8003d92:	4770      	bx	lr

08003d94 <_ZN8touchgfx17GraphElementGridXD0Ev>:
 8003d94:	b510      	push	{r4, lr}
 8003d96:	2140      	movs	r1, #64	; 0x40
 8003d98:	4604      	mov	r4, r0
 8003d9a:	f01c fca5 	bl	80206e8 <_ZdlPvj>
 8003d9e:	4620      	mov	r0, r4
 8003da0:	bd10      	pop	{r4, pc}

08003da2 <_ZN8touchgfx17GraphElementGridYD0Ev>:
class GraphElementGridY : public GraphElementGridBase
 8003da2:	b510      	push	{r4, lr}
 8003da4:	2140      	movs	r1, #64	; 0x40
 8003da6:	4604      	mov	r4, r0
 8003da8:	f01c fc9e 	bl	80206e8 <_ZdlPvj>
 8003dac:	4620      	mov	r0, r4
 8003dae:	bd10      	pop	{r4, pc}

08003db0 <_ZN8touchgfx11GraphScrollILs600EED0Ev>:
 8003db0:	b510      	push	{r4, lr}
 8003db2:	f44f 612b 	mov.w	r1, #2736	; 0xab0
 8003db6:	4604      	mov	r4, r0
 8003db8:	f01c fc96 	bl	80206e8 <_ZdlPvj>
 8003dbc:	4620      	mov	r0, r4
 8003dbe:	bd10      	pop	{r4, pc}

08003dc0 <_ZN8touchgfx11GraphScrollILs60EED0Ev>:
 8003dc0:	b510      	push	{r4, lr}
 8003dc2:	f44f 7110 	mov.w	r1, #576	; 0x240
 8003dc6:	4604      	mov	r4, r0
 8003dc8:	f01c fc8e 	bl	80206e8 <_ZdlPvj>
 8003dcc:	4620      	mov	r0, r4
 8003dce:	bd10      	pop	{r4, pc}

08003dd0 <_ZN8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003dd0:	b510      	push	{r4, lr}
 8003dd2:	2110      	movs	r1, #16
 8003dd4:	4604      	mov	r4, r0
 8003dd6:	f01c fc87 	bl	80206e8 <_ZdlPvj>
 8003dda:	4620      	mov	r0, r4
 8003ddc:	bd10      	pop	{r4, pc}

08003dde <_ZN19ScreenGraphViewBaseD0Ev>:
 8003dde:	b510      	push	{r4, lr}
 8003de0:	f242 713c 	movw	r1, #10044	; 0x273c
 8003de4:	4604      	mov	r4, r0
 8003de6:	f01c fc7f 	bl	80206e8 <_ZdlPvj>
 8003dea:	4620      	mov	r0, r4
 8003dec:	bd10      	pop	{r4, pc}

08003dee <_ZNK8touchgfx17AbstractDataGraph17invalidateContentEv>:
        if (alpha > 0)
 8003dee:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8003df2:	b10b      	cbz	r3, 8003df8 <_ZNK8touchgfx17AbstractDataGraph17invalidateContentEv+0xa>
            Container::invalidateContent();
 8003df4:	f006 be73 	b.w	800aade <_ZNK8touchgfx9Container17invalidateContentEv>
    }
 8003df8:	4770      	bx	lr

08003dfa <_ZNK8touchgfx17GraphElementGridX30getCorrectlyScaledGridIntervalEPKNS_17AbstractDataGraphE>:
    virtual int getCorrectlyScaledGridInterval(const AbstractDataGraph* graph) const
 8003dfa:	b513      	push	{r0, r1, r4, lr}
 8003dfc:	4603      	mov	r3, r0
 8003dfe:	4608      	mov	r0, r1
        return convertToGraphScaleX(graph, gridInterval, dataScale);
 8003e00:	e9d3 140c 	ldrd	r1, r4, [r3, #48]	; 0x30
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleX());
 8003e04:	6803      	ldr	r3, [r0, #0]
        return convertToGraphScaleX(graph, gridInterval, dataScale);
 8003e06:	9101      	str	r1, [sp, #4]
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleX());
 8003e08:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8003e0c:	4798      	blx	r3
 8003e0e:	9901      	ldr	r1, [sp, #4]
 8003e10:	4602      	mov	r2, r0
 8003e12:	4620      	mov	r0, r4
    }
 8003e14:	b002      	add	sp, #8
 8003e16:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleX());
 8003e1a:	f008 bca9 	b.w	800c770 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>

08003e1e <_ZNK8touchgfx17GraphElementGridY30getCorrectlyScaledGridIntervalEPKNS_17AbstractDataGraphE>:
    virtual int getCorrectlyScaledGridInterval(const AbstractDataGraph* graph) const
 8003e1e:	b513      	push	{r0, r1, r4, lr}
 8003e20:	4603      	mov	r3, r0
 8003e22:	4608      	mov	r0, r1
        return convertToGraphScaleY(graph, gridInterval, dataScale);
 8003e24:	e9d3 140c 	ldrd	r1, r4, [r3, #48]	; 0x30
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleY());
 8003e28:	6803      	ldr	r3, [r0, #0]
        return convertToGraphScaleY(graph, gridInterval, dataScale);
 8003e2a:	9101      	str	r1, [sp, #4]
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleY());
 8003e2c:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8003e30:	4798      	blx	r3
 8003e32:	9901      	ldr	r1, [sp, #4]
 8003e34:	4602      	mov	r2, r0
 8003e36:	4620      	mov	r0, r4
    }
 8003e38:	b002      	add	sp, #8
 8003e3a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleY());
 8003e3e:	f008 bc97 	b.w	800c770 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
	...

08003e44 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs>:
        assert(index >= 0 && index < usedCapacity);
 8003e44:	1e0a      	subs	r2, r1, #0
    virtual int indexToDataPointYScaled(int16_t index) const
 8003e46:	b510      	push	{r4, lr}
        assert(index >= 0 && index < usedCapacity);
 8003e48:	db03      	blt.n	8003e52 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0xe>
 8003e4a:	f9b0 411e 	ldrsh.w	r4, [r0, #286]	; 0x11e
 8003e4e:	4294      	cmp	r4, r2
 8003e50:	dc06      	bgt.n	8003e60 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x1c>
 8003e52:	4b08      	ldr	r3, [pc, #32]	; (8003e74 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x30>)
 8003e54:	4a08      	ldr	r2, [pc, #32]	; (8003e78 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x34>)
 8003e56:	4809      	ldr	r0, [pc, #36]	; (8003e7c <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x38>)
 8003e58:	f240 6133 	movw	r1, #1587	; 0x633
 8003e5c:	f01c fcf8 	bl	8020850 <__assert_func>
        return yValues[dataIndex(index)];
 8003e60:	6803      	ldr	r3, [r0, #0]
 8003e62:	f8d0 4144 	ldr.w	r4, [r0, #324]	; 0x144
 8003e66:	f8d3 3180 	ldr.w	r3, [r3, #384]	; 0x180
 8003e6a:	4798      	blx	r3
    }
 8003e6c:	f854 0020 	ldr.w	r0, [r4, r0, lsl #2]
 8003e70:	bd10      	pop	{r4, pc}
 8003e72:	bf00      	nop
 8003e74:	08022bbc 	.word	0x08022bbc
 8003e78:	08022bdf 	.word	0x08022bdf
 8003e7c:	08022c2e 	.word	0x08022c2e

08003e80 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs>:
        assert(index >= 0 && index < usedCapacity);
 8003e80:	1e0b      	subs	r3, r1, #0
    virtual int indexToDataPointXScaled(int16_t index) const
 8003e82:	b510      	push	{r4, lr}
 8003e84:	4604      	mov	r4, r0
        assert(index >= 0 && index < usedCapacity);
 8003e86:	db03      	blt.n	8003e90 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x10>
 8003e88:	f9b0 211e 	ldrsh.w	r2, [r0, #286]	; 0x11e
 8003e8c:	429a      	cmp	r2, r3
 8003e8e:	dc06      	bgt.n	8003e9e <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x1e>
 8003e90:	4b07      	ldr	r3, [pc, #28]	; (8003eb0 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x30>)
 8003e92:	4a08      	ldr	r2, [pc, #32]	; (8003eb4 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x34>)
 8003e94:	4808      	ldr	r0, [pc, #32]	; (8003eb8 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x38>)
 8003e96:	f240 612d 	movw	r1, #1581	; 0x62d
 8003e9a:	f01c fcd9 	bl	8020850 <__assert_func>
        return (indexToGlobalIndex(index) * xAxisFactor) + xAxisOffset;
 8003e9e:	6803      	ldr	r3, [r0, #0]
 8003ea0:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
 8003ea4:	4798      	blx	r3
 8003ea6:	e9d4 234f 	ldrd	r2, r3, [r4, #316]	; 0x13c
    }
 8003eaa:	fb02 3000 	mla	r0, r2, r0, r3
 8003eae:	bd10      	pop	{r4, pc}
 8003eb0:	08022bbc 	.word	0x08022bbc
 8003eb4:	08022c8b 	.word	0x08022c8b
 8003eb8:	08022c2e 	.word	0x08022c2e

08003ebc <_ZN19ScreenGraphViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

}

void ScreenGraphViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &toggleButton1)
 8003ebc:	f500 5389 	add.w	r3, r0, #4384	; 0x1120
 8003ec0:	3308      	adds	r3, #8
 8003ec2:	4299      	cmp	r1, r3
{
 8003ec4:	b510      	push	{r4, lr}
 8003ec6:	4604      	mov	r4, r0
    if (&src == &toggleButton1)
 8003ec8:	d115      	bne.n	8003ef6 <_ZN19ScreenGraphViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
    {
        //Interaction2
        //When toggleButton1 clicked execute C++ code
        //Execute C++ code
        dynamicGraph1.setVisible(!dynamicGraph1.isVisible());
 8003eca:	f890 3d7d 	ldrb.w	r3, [r0, #3453]	; 0xd7d
 8003ece:	f083 0301 	eor.w	r3, r3, #1
        visible = vis;
 8003ed2:	f880 3d7d 	strb.w	r3, [r0, #3453]	; 0xd7d
        dynamicGraph2.setVisible(!dynamicGraph2.isVisible());
 8003ed6:	f890 30f1 	ldrb.w	r3, [r0, #241]	; 0xf1
 8003eda:	f083 0301 	eor.w	r3, r3, #1
 8003ede:	f880 30f1 	strb.w	r3, [r0, #241]	; 0xf1
        dynamicGraph1.invalidate();
 8003ee2:	f600 5058 	addw	r0, r0, #3416	; 0xd58
 8003ee6:	f00e f87a 	bl	8011fde <_ZNK8touchgfx8Drawable10invalidateEv>
        dynamicGraph2.invalidate();
 8003eea:	f104 00cc 	add.w	r0, r4, #204	; 0xcc
        //When buttonCloseModal clicked hide modalWindow1
        //Hide modalWindow1
        modalWindow1.setVisible(false);
        modalWindow1.invalidate();
    }
}
 8003eee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        modalWindow1.invalidate();
 8003ef2:	f00e b874 	b.w	8011fde <_ZNK8touchgfx8Drawable10invalidateEv>
    else if (&src == &buttonCloseModal)
 8003ef6:	f500 539c 	add.w	r3, r0, #4992	; 0x1380
 8003efa:	3308      	adds	r3, #8
 8003efc:	4299      	cmp	r1, r3
 8003efe:	d108      	bne.n	8003f12 <_ZN19ScreenGraphViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x56>
 8003f00:	f500 5380 	add.w	r3, r0, #4096	; 0x1000
 8003f04:	2200      	movs	r2, #0
        modalWindow1.invalidate();
 8003f06:	f500 5096 	add.w	r0, r0, #4800	; 0x12c0
 8003f0a:	f883 22fd 	strb.w	r2, [r3, #765]	; 0x2fd
 8003f0e:	3018      	adds	r0, #24
 8003f10:	e7ed      	b.n	8003eee <_ZN19ScreenGraphViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x32>
}
 8003f12:	bd10      	pop	{r4, pc}

08003f14 <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll>:
     * @param  factor2 The second factor.
     * @param  divisor The divisor.
     *
     * @return factor1 * factor2 / divisor as a Q5
     */
    static Q5 muldiv_toQ5(int32_t factor1, int32_t factor2, int32_t divisor)
 8003f14:	b537      	push	{r0, r1, r2, r4, r5, lr}
    {
        int32_t remainder;
        int32_t result = muldiv(factor1, factor2, divisor, remainder);
 8003f16:	ab01      	add	r3, sp, #4
    static Q5 muldiv_toQ5(int32_t factor1, int32_t factor2, int32_t divisor)
 8003f18:	4615      	mov	r5, r2
        int32_t result = muldiv(factor1, factor2, divisor, remainder);
 8003f1a:	f00e fa02 	bl	8012322 <_ZN8touchgfx6muldivElllRl>
        if (result >= 0)
 8003f1e:	2800      	cmp	r0, #0
 8003f20:	ea4f 1440 	mov.w	r4, r0, lsl #5
        return Q5(muldiv((int)factor1, (int)factor2, (int)divisor));
 8003f24:	9901      	ldr	r1, [sp, #4]
 8003f26:	462a      	mov	r2, r5
 8003f28:	f04f 0020 	mov.w	r0, #32
        if (result >= 0)
 8003f2c:	db04      	blt.n	8003f38 <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll+0x24>
        return Q5(muldiv((int)factor1, (int)factor2, (int)divisor));
 8003f2e:	f00e fa17 	bl	8012360 <_ZN8touchgfx6muldivElll>
            return Q5(v + q5.v);
 8003f32:	4420      	add	r0, r4
        {
            return toQ5(result) + muldivQ5(Q5(Rasterizer::POLY_BASE_SIZE), Q5(remainder), Q5(divisor));
        }
        return toQ5(result) - muldivQ5(Q5(Rasterizer::POLY_BASE_SIZE), Q5(remainder), Q5(divisor));
    }
 8003f34:	b003      	add	sp, #12
 8003f36:	bd30      	pop	{r4, r5, pc}
        return Q5(muldiv((int)factor1, (int)factor2, (int)divisor));
 8003f38:	f00e fa12 	bl	8012360 <_ZN8touchgfx6muldivElll>
            return Q5(v - q5.v);
 8003f3c:	1a20      	subs	r0, r4, r0
 8003f3e:	e7f9      	b.n	8003f34 <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll+0x20>

08003f40 <_ZNK8touchgfx17AbstractDataGraph16valueToScreenYQ5Ei>:
    virtual CWRUtil::Q5 valueToScreenYQ5(int y) const
 8003f40:	b570      	push	{r4, r5, r6, lr}
        return graphArea.getHeight() - (topPadding + bottomPadding);
 8003f42:	f9b0 4114 	ldrsh.w	r4, [r0, #276]	; 0x114
 8003f46:	f8b0 511a 	ldrh.w	r5, [r0, #282]	; 0x11a
 8003f4a:	1963      	adds	r3, r4, r5
 8003f4c:	f8b0 5042 	ldrh.w	r5, [r0, #66]	; 0x42
 8003f50:	1aed      	subs	r5, r5, r3
        return CWRUtil::toQ5(graphAreaHeight + topPadding - 1) - CWRUtil::muldiv_toQ5(y - graphRangeMinY, graphAreaHeight - 1, graphRangeMaxY - graphRangeMinY);
 8003f52:	e9d0 324d 	ldrd	r3, r2, [r0, #308]	; 0x134
    virtual CWRUtil::Q5 valueToScreenYQ5(int y) const
 8003f56:	460e      	mov	r6, r1
        return CWRUtil::toQ5(graphAreaHeight + topPadding - 1) - CWRUtil::muldiv_toQ5(y - graphRangeMinY, graphAreaHeight - 1, graphRangeMaxY - graphRangeMinY);
 8003f58:	b22d      	sxth	r5, r5
 8003f5a:	1ad2      	subs	r2, r2, r3
 8003f5c:	1e69      	subs	r1, r5, #1
 8003f5e:	1af0      	subs	r0, r6, r3
 8003f60:	f7ff ffd8 	bl	8003f14 <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll>
 8003f64:	442c      	add	r4, r5
 8003f66:	3c01      	subs	r4, #1
    }
 8003f68:	ebc0 1044 	rsb	r0, r0, r4, lsl #5
 8003f6c:	bd70      	pop	{r4, r5, r6, pc}

08003f6e <_ZNK8touchgfx17AbstractDataGraph16valueToScreenXQ5Ei>:
    virtual CWRUtil::Q5 valueToScreenXQ5(int x) const
 8003f6e:	b538      	push	{r3, r4, r5, lr}
 8003f70:	4604      	mov	r4, r0
 8003f72:	4608      	mov	r0, r1
        return graphArea.getWidth() - (leftPadding + rightPadding);
 8003f74:	f8b4 3118 	ldrh.w	r3, [r4, #280]	; 0x118
 8003f78:	f8b4 1116 	ldrh.w	r1, [r4, #278]	; 0x116
 8003f7c:	440b      	add	r3, r1
 8003f7e:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
        return CWRUtil::muldiv_toQ5(x - graphRangeMinX, getGraphAreaWidth() - 1, graphRangeMaxX - graphRangeMinX) + CWRUtil::toQ5(leftPadding);
 8003f82:	e9d4 524b 	ldrd	r5, r2, [r4, #300]	; 0x12c
        return graphArea.getWidth() - (leftPadding + rightPadding);
 8003f86:	1ac9      	subs	r1, r1, r3
        return CWRUtil::muldiv_toQ5(x - graphRangeMinX, getGraphAreaWidth() - 1, graphRangeMaxX - graphRangeMinX) + CWRUtil::toQ5(leftPadding);
 8003f88:	b209      	sxth	r1, r1
 8003f8a:	1b52      	subs	r2, r2, r5
 8003f8c:	3901      	subs	r1, #1
 8003f8e:	1b40      	subs	r0, r0, r5
 8003f90:	f7ff ffc0 	bl	8003f14 <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll>
            return Q5(v + q5.v);
 8003f94:	f9b4 3116 	ldrsh.w	r3, [r4, #278]	; 0x116
    }
 8003f98:	eb00 1043 	add.w	r0, r0, r3, lsl #5
 8003f9c:	bd38      	pop	{r3, r4, r5, pc}
	...

08003fa0 <_ZN8touchgfx20GraphElementGridBaseC1Ev>:
    GraphElementGridBase()
 8003fa0:	b510      	push	{r4, lr}
 8003fa2:	4604      	mov	r4, r0
        : CanvasWidget()
 8003fa4:	f007 ffcc 	bl	800bf40 <_ZN8touchgfx12CanvasWidgetC1Ev>
        : dataScale(1), gridInterval(10), lineWidth(1), majorGrid(0)
 8003fa8:	4a06      	ldr	r2, [pc, #24]	; (8003fc4 <_ZN8touchgfx20GraphElementGridBaseC1Ev+0x24>)
 8003faa:	6022      	str	r2, [r4, #0]
        : color(col)
 8003fac:	2300      	movs	r3, #0
 8003fae:	2201      	movs	r2, #1
 8003fb0:	210a      	movs	r1, #10
 8003fb2:	e9c4 210c 	strd	r2, r1, [r4, #48]	; 0x30
 8003fb6:	62e3      	str	r3, [r4, #44]	; 0x2c
 8003fb8:	f884 2038 	strb.w	r2, [r4, #56]	; 0x38
 8003fbc:	63e3      	str	r3, [r4, #60]	; 0x3c
    }
 8003fbe:	4620      	mov	r0, r4
 8003fc0:	bd10      	pop	{r4, pc}
 8003fc2:	bf00      	nop
 8003fc4:	08023c60 	.word	0x08023c60

08003fc8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 8003fc8:	b570      	push	{r4, r5, r6, lr}
        : widgetWidth(0)
 8003fca:	2300      	movs	r3, #0
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8003fcc:	4e12      	ldr	r6, [pc, #72]	; (8004018 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 8003fce:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 8003fd0:	4b12      	ldr	r3, [pc, #72]	; (800401c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 8003fd2:	6003      	str	r3, [r0, #0]
 8003fd4:	6833      	ldr	r3, [r6, #0]
 8003fd6:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
    AbstractPainterRGB565()
 8003fda:	4605      	mov	r5, r0
 8003fdc:	b10a      	cbz	r2, 8003fe2 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
 8003fde:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8003fe0:	b900      	cbnz	r0, 8003fe4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
 8003fe2:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 8003fe4:	6803      	ldr	r3, [r0, #0]
 8003fe6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003fe8:	4798      	blx	r3
        return auxiliaryLCD;
 8003fea:	6833      	ldr	r3, [r6, #0]
 8003fec:	fab0 f480 	clz	r4, r0
 8003ff0:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8003ff2:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 8003ff4:	b130      	cbz	r0, 8004004 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 8003ff6:	6803      	ldr	r3, [r0, #0]
 8003ff8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003ffa:	4798      	blx	r3
 8003ffc:	2800      	cmp	r0, #0
 8003ffe:	bf08      	it	eq
 8004000:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 8004004:	b92c      	cbnz	r4, 8004012 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 8004006:	4b06      	ldr	r3, [pc, #24]	; (8004020 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 8004008:	4a06      	ldr	r2, [pc, #24]	; (8004024 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 800400a:	4807      	ldr	r0, [pc, #28]	; (8004028 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 800400c:	212c      	movs	r1, #44	; 0x2c
 800400e:	f01c fc1f 	bl	8020850 <__assert_func>
    }
 8004012:	4628      	mov	r0, r5
 8004014:	bd70      	pop	{r4, r5, r6, pc}
 8004016:	bf00      	nop
 8004018:	200155b8 	.word	0x200155b8
 800401c:	08022f4c 	.word	0x08022f4c
 8004020:	08022cda 	.word	0x08022cda
 8004024:	08022d38 	.word	0x08022d38
 8004028:	08022d71 	.word	0x08022d71

0800402c <_ZN8touchgfx15GraphLabelsBaseC1Ev>:
 * @see GraphLabelsX, GraphLabelsY
 */
class GraphLabelsBase : public AbstractGraphDecoration
{
public:
    GraphLabelsBase()
 800402c:	b510      	push	{r4, lr}
 800402e:	4604      	mov	r4, r0
        : CanvasWidget()
 8004030:	f007 ff86 	bl	800bf40 <_ZN8touchgfx12CanvasWidgetC1Ev>
        : AbstractGraphDecoration(),
          dataScale(1), labelInterval(0), labelTypedText(TYPED_TEXT_INVALID), labelRotation(TEXT_ROTATE_0), labelDecimals(0), labelDecimalPoint('.'), majorLabel(0)
 8004034:	4a0a      	ldr	r2, [pc, #40]	; (8004060 <_ZN8touchgfx15GraphLabelsBaseC1Ev+0x34>)
 8004036:	6022      	str	r2, [r4, #0]
 8004038:	2300      	movs	r3, #0
 800403a:	2201      	movs	r2, #1
 800403c:	e9c4 230c 	strd	r2, r3, [r4, #48]	; 0x30
 8004040:	4a08      	ldr	r2, [pc, #32]	; (8004064 <_ZN8touchgfx15GraphLabelsBaseC1Ev+0x38>)
 8004042:	63a2      	str	r2, [r4, #56]	; 0x38
 8004044:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8004048:	87a2      	strh	r2, [r4, #60]	; 0x3c
 800404a:	222e      	movs	r2, #46	; 0x2e
 800404c:	62e3      	str	r3, [r4, #44]	; 0x2c
 800404e:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 8004052:	f8a4 3042 	strh.w	r3, [r4, #66]	; 0x42
 8004056:	f8a4 2044 	strh.w	r2, [r4, #68]	; 0x44
 800405a:	64a3      	str	r3, [r4, #72]	; 0x48
    {
    }
 800405c:	4620      	mov	r0, r4
 800405e:	bd10      	pop	{r4, pc}
 8004060:	08023e58 	.word	0x08023e58
 8004064:	0802221c 	.word	0x0802221c

08004068 <_ZN8touchgfx14AbstractButtonC1Ev>:
    AbstractButton()
 8004068:	b510      	push	{r4, lr}
        : Widget(), action(), pressed(false)
 800406a:	2226      	movs	r2, #38	; 0x26
    AbstractButton()
 800406c:	4604      	mov	r4, r0
        : Widget(), action(), pressed(false)
 800406e:	2100      	movs	r1, #0
 8004070:	f01c fd74 	bl	8020b5c <memset>
 8004074:	4620      	mov	r0, r4
 8004076:	f7fe fe3f 	bl	8002cf8 <_ZN8touchgfx6WidgetC1Ev>
 800407a:	4b05      	ldr	r3, [pc, #20]	; (8004090 <_ZN8touchgfx14AbstractButtonC1Ev+0x28>)
 800407c:	6023      	str	r3, [r4, #0]
 800407e:	2300      	movs	r3, #0
 8004080:	62a3      	str	r3, [r4, #40]	; 0x28
 8004082:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
        touchable = touch;
 8004086:	2301      	movs	r3, #1
 8004088:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
    }
 800408c:	4620      	mov	r0, r4
 800408e:	bd10      	pop	{r4, pc}
 8004090:	08023ef8 	.word	0x08023ef8

08004094 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>:
    TextAreaWithOneWildcard()
 8004094:	b510      	push	{r4, lr}
 8004096:	4604      	mov	r4, r0
        : TextArea()
 8004098:	f7fe fe6e 	bl	8002d78 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 800409c:	4b02      	ldr	r3, [pc, #8]	; (80040a8 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev+0x14>)
 800409e:	6023      	str	r3, [r4, #0]
 80040a0:	2300      	movs	r3, #0
 80040a2:	64a3      	str	r3, [r4, #72]	; 0x48
    }
 80040a4:	4620      	mov	r0, r4
 80040a6:	bd10      	pop	{r4, pc}
 80040a8:	08022980 	.word	0x08022980

080040ac <_ZN19ScreenGraphViewBaseC1Ev>:
ScreenGraphViewBase::ScreenGraphViewBase() :
 80040ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80040b0:	ed2d 8b10 	vpush	{d8-d15}
 80040b4:	4604      	mov	r4, r0
 80040b6:	b097      	sub	sp, #92	; 0x5c
 80040b8:	f00e fafc 	bl	80126b4 <_ZN8touchgfx6ScreenC1Ev>
    buttonCallback(this, &ScreenGraphViewBase::buttonCallbackHandler)
 80040bc:	4622      	mov	r2, r4
 80040be:	2500      	movs	r5, #0
 80040c0:	4beb      	ldr	r3, [pc, #940]	; (8004470 <_ZN19ScreenGraphViewBaseC1Ev+0x3c4>)
 80040c2:	63e5      	str	r5, [r4, #60]	; 0x3c
 80040c4:	f842 3b40 	str.w	r3, [r2], #64
 80040c8:	4610      	mov	r0, r2
 80040ca:	ee0b 2a90 	vmov	s23, r2
 80040ce:	f7fe fe25 	bl	8002d1c <_ZN8touchgfx3BoxC1Ev>
 80040d2:	f104 036c 	add.w	r3, r4, #108	; 0x6c
 80040d6:	f64f 76ff 	movw	r6, #65535	; 0xffff
 80040da:	a914      	add	r1, sp, #80	; 0x50
 80040dc:	4618      	mov	r0, r3
 80040de:	ee0c 3a10 	vmov	s24, r3
 80040e2:	f8ad 6050 	strh.w	r6, [sp, #80]	; 0x50
 80040e6:	f7fe fe2d 	bl	8002d44 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80040ea:	f104 0398 	add.w	r3, r4, #152	; 0x98
        : Box(), borderColor(0), borderSize(0)
 80040ee:	4618      	mov	r0, r3
 80040f0:	f104 0bcc 	add.w	fp, r4, #204	; 0xcc
 80040f4:	ee0d 3a90 	vmov	s27, r3
 80040f8:	f7fe fe10 	bl	8002d1c <_ZN8touchgfx3BoxC1Ev>
 80040fc:	4bdd      	ldr	r3, [pc, #884]	; (8004474 <_ZN19ScreenGraphViewBaseC1Ev+0x3c8>)
 80040fe:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 8004102:	f44f 7116 	mov.w	r1, #600	; 0x258
 8004106:	f8c4 50c4 	str.w	r5, [r4, #196]	; 0xc4
 800410a:	f8a4 50c8 	strh.w	r5, [r4, #200]	; 0xc8
 800410e:	4658      	mov	r0, fp
 8004110:	f008 faca 	bl	800c6a8 <_ZN8touchgfx17AbstractDataGraphC1Es>
 8004114:	4bd8      	ldr	r3, [pc, #864]	; (8004478 <_ZN19ScreenGraphViewBaseC1Ev+0x3cc>)
 8004116:	f8c4 30cc 	str.w	r3, [r4, #204]	; 0xcc
{
public:
    GraphScroll()
        : GraphScrollData(CAPACITY, y)
 800411a:	f504 7207 	add.w	r2, r4, #540	; 0x21c
 800411e:	2301      	movs	r3, #1
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 8004120:	4629      	mov	r1, r5
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 8004122:	e9c4 3582 	strd	r3, r5, [r4, #520]	; 0x208
 8004126:	e9c4 2584 	strd	r2, r5, [r4, #528]	; 0x210
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 800412a:	4658      	mov	r0, fp
 800412c:	f240 2257 	movw	r2, #599	; 0x257
 8004130:	f7ff fa3a 	bl	80035a8 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>
 8004134:	f604 337c 	addw	r3, r4, #2940	; 0xb7c
 8004138:	4ad0      	ldr	r2, [pc, #832]	; (800447c <_ZN19ScreenGraphViewBaseC1Ev+0x3d0>)
 800413a:	f8c4 20cc 	str.w	r2, [r4, #204]	; 0xcc
 800413e:	4618      	mov	r0, r3
        : DynamicDataGraph(capacity, values), current(0)
 8004140:	f8a4 5218 	strh.w	r5, [r4, #536]	; 0x218
 8004144:	ee0f 3a10 	vmov	s30, r3
 8004148:	f007 fefa 	bl	800bf40 <_ZN8touchgfx12CanvasWidgetC1Ev>
 */
class GraphElementLine : public AbstractGraphElement
{
public:
    GraphElementLine()
        : lineWidth(2)
 800414c:	f04f 0202 	mov.w	r2, #2
 8004150:	4bcb      	ldr	r3, [pc, #812]	; (8004480 <_ZN19ScreenGraphViewBaseC1Ev+0x3d4>)
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8004152:	f8df 9350 	ldr.w	r9, [pc, #848]	; 80044a4 <_ZN19ScreenGraphViewBaseC1Ev+0x3f8>
 8004156:	f884 2ba8 	strb.w	r2, [r4, #2984]	; 0xba8
 800415a:	f604 32ac 	addw	r2, r4, #2988	; 0xbac
 800415e:	f8c4 3b7c 	str.w	r3, [r4, #2940]	; 0xb7c
 8004162:	4610      	mov	r0, r2
 8004164:	9207      	str	r2, [sp, #28]
 8004166:	f7ff ff2f 	bl	8003fc8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800416a:	f109 0224 	add.w	r2, r9, #36	; 0x24
 800416e:	f504 613c 	add.w	r1, r4, #3008	; 0xbc0
 8004172:	f8c4 2bb4 	str.w	r2, [r4, #2996]	; 0xbb4
 8004176:	f8c4 9bac 	str.w	r9, [r4, #2988]	; 0xbac
class GraphElementGridX : public GraphElementGridBase
 800417a:	4608      	mov	r0, r1
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
 800417c:	f8c4 5bb8 	str.w	r5, [r4, #3000]	; 0xbb8
 8004180:	f8df a324 	ldr.w	sl, [pc, #804]	; 80044a8 <_ZN19ScreenGraphViewBaseC1Ev+0x3fc>
class GraphElementGridY : public GraphElementGridBase
 8004184:	4fbf      	ldr	r7, [pc, #764]	; (8004484 <_ZN19ScreenGraphViewBaseC1Ev+0x3d8>)
 8004186:	ee0f 1a90 	vmov	s31, r1
class GraphElementGridX : public GraphElementGridBase
 800418a:	f7ff ff09 	bl	8003fa0 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 800418e:	f504 6140 	add.w	r1, r4, #3072	; 0xc00
 8004192:	f8c4 abc0 	str.w	sl, [r4, #3008]	; 0xbc0
class GraphElementGridY : public GraphElementGridBase
 8004196:	4608      	mov	r0, r1
 8004198:	9108      	str	r1, [sp, #32]
 800419a:	f7ff ff01 	bl	8003fa0 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 800419e:	f504 6144 	add.w	r1, r4, #3136	; 0xc40
 80041a2:	f8c4 7c00 	str.w	r7, [r4, #3072]	; 0xc00
class GraphElementGridX : public GraphElementGridBase
 80041a6:	4608      	mov	r0, r1
 80041a8:	ee0e 1a10 	vmov	s28, r1
 80041ac:	f7ff fef8 	bl	8003fa0 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 80041b0:	f504 6148 	add.w	r1, r4, #3200	; 0xc80
 80041b4:	f8c4 ac40 	str.w	sl, [r4, #3136]	; 0xc40
class GraphElementGridY : public GraphElementGridBase
 80041b8:	4608      	mov	r0, r1
 80041ba:	ee0e 1a90 	vmov	s29, r1
 80041be:	f7ff feef 	bl	8003fa0 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 80041c2:	f504 614c 	add.w	r1, r4, #3264	; 0xcc0
 80041c6:	f8c4 7c80 	str.w	r7, [r4, #3200]	; 0xc80

/**
 * GraphLabelsX will draw labels along the X axis at given intervals. By combining two
 * GraphLabelsX it is possible to have different appearance for major and minor y offsets.
 */
class GraphLabelsX : public GraphLabelsBase
 80041ca:	4608      	mov	r0, r1
 80041cc:	9109      	str	r1, [sp, #36]	; 0x24
 80041ce:	f7ff ff2d 	bl	800402c <_ZN8touchgfx15GraphLabelsBaseC1Ev>
 80041d2:	4aad      	ldr	r2, [pc, #692]	; (8004488 <_ZN19ScreenGraphViewBaseC1Ev+0x3dc>)
 80041d4:	f8c4 2cc0 	str.w	r2, [r4, #3264]	; 0xcc0
 80041d8:	f604 510c 	addw	r1, r4, #3340	; 0xd0c

/**
 * GraphLabelsY will draw labels along the Y axis at given intervals. By combining two
 * GraphLabelsY it is possible to have different appearance for major and minor y offsets.
 */
class GraphLabelsY : public GraphLabelsBase
 80041dc:	4608      	mov	r0, r1
 80041de:	f604 5858 	addw	r8, r4, #3416	; 0xd58
 80041e2:	910a      	str	r1, [sp, #40]	; 0x28
 80041e4:	f7ff ff22 	bl	800402c <_ZN8touchgfx15GraphLabelsBaseC1Ev>
 80041e8:	49a8      	ldr	r1, [pc, #672]	; (800448c <_ZN19ScreenGraphViewBaseC1Ev+0x3e0>)
 80041ea:	f8c4 1d0c 	str.w	r1, [r4, #3340]	; 0xd0c
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 80041ee:	4640      	mov	r0, r8
 80041f0:	213c      	movs	r1, #60	; 0x3c
 80041f2:	f008 fa59 	bl	800c6a8 <_ZN8touchgfx17AbstractDataGraphC1Es>
 80041f6:	4ba0      	ldr	r3, [pc, #640]	; (8004478 <_ZN19ScreenGraphViewBaseC1Ev+0x3cc>)
 80041f8:	f8c4 3d58 	str.w	r3, [r4, #3416]	; 0xd58
 80041fc:	2001      	movs	r0, #1
        : GraphScrollData(CAPACITY, y)
 80041fe:	f604 63a8 	addw	r3, r4, #3752	; 0xea8
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 8004202:	4629      	mov	r1, r5
 8004204:	223b      	movs	r2, #59	; 0x3b
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 8004206:	f8c4 0e94 	str.w	r0, [r4, #3732]	; 0xe94
 800420a:	f8c4 3e9c 	str.w	r3, [r4, #3740]	; 0xe9c
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 800420e:	4640      	mov	r0, r8
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 8004210:	f8c4 5e98 	str.w	r5, [r4, #3736]	; 0xe98
 8004214:	f8c4 5ea0 	str.w	r5, [r4, #3744]	; 0xea0
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 8004218:	f7ff f9c6 	bl	80035a8 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>
 800421c:	4b9c      	ldr	r3, [pc, #624]	; (8004490 <_ZN19ScreenGraphViewBaseC1Ev+0x3e4>)
 800421e:	f8c4 3d58 	str.w	r3, [r4, #3416]	; 0xd58
 8004222:	f604 7098 	addw	r0, r4, #3992	; 0xf98
        : DynamicDataGraph(capacity, values), current(0)
 8004226:	f8a4 5ea4 	strh.w	r5, [r4, #3748]	; 0xea4
 800422a:	900b      	str	r0, [sp, #44]	; 0x2c
        : CanvasWidget()
 800422c:	f007 fe88 	bl	800bf40 <_ZN8touchgfx12CanvasWidgetC1Ev>
        : lineWidth(2)
 8004230:	4b93      	ldr	r3, [pc, #588]	; (8004480 <_ZN19ScreenGraphViewBaseC1Ev+0x3d4>)
 8004232:	f8c4 3f98 	str.w	r3, [r4, #3992]	; 0xf98
 8004236:	f04f 0302 	mov.w	r3, #2
 800423a:	f884 3fc4 	strb.w	r3, [r4, #4036]	; 0xfc4
 800423e:	f604 70c8 	addw	r0, r4, #4040	; 0xfc8
 8004242:	900c      	str	r0, [sp, #48]	; 0x30
 8004244:	f7ff fec0 	bl	8003fc8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8004248:	f109 0224 	add.w	r2, r9, #36	; 0x24
 800424c:	f8c4 2fd0 	str.w	r2, [r4, #4048]	; 0xfd0
 8004250:	f8c4 9fc8 	str.w	r9, [r4, #4040]	; 0xfc8
 8004254:	f604 70dc 	addw	r0, r4, #4060	; 0xfdc
 8004258:	f8c4 5fd4 	str.w	r5, [r4, #4052]	; 0xfd4
 800425c:	900d      	str	r0, [sp, #52]	; 0x34
class GraphElementGridX : public GraphElementGridBase
 800425e:	f7ff fe9f 	bl	8003fa0 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 8004262:	f504 5080 	add.w	r0, r4, #4096	; 0x1000
class GraphElementGridY : public GraphElementGridBase
 8004266:	f504 5980 	add.w	r9, r4, #4096	; 0x1000
class GraphElementGridX : public GraphElementGridBase
 800426a:	f8c4 afdc 	str.w	sl, [r4, #4060]	; 0xfdc
 800426e:	301c      	adds	r0, #28
 8004270:	9005      	str	r0, [sp, #20]
class GraphElementGridY : public GraphElementGridBase
 8004272:	f7ff fe95 	bl	8003fa0 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 8004276:	f504 5082 	add.w	r0, r4, #4160	; 0x1040
 800427a:	f8c9 701c 	str.w	r7, [r9, #28]
 800427e:	301c      	adds	r0, #28
 8004280:	9003      	str	r0, [sp, #12]
class GraphElementGridX : public GraphElementGridBase
 8004282:	f7ff fe8d 	bl	8003fa0 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 8004286:	f504 5084 	add.w	r0, r4, #4224	; 0x1080
 800428a:	f8c9 a05c 	str.w	sl, [r9, #92]	; 0x5c
 800428e:	301c      	adds	r0, #28
 8004290:	9004      	str	r0, [sp, #16]
class GraphElementGridY : public GraphElementGridBase
 8004292:	f7ff fe85 	bl	8003fa0 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 8004296:	f504 5086 	add.w	r0, r4, #4288	; 0x10c0
 800429a:	f8c9 709c 	str.w	r7, [r9, #156]	; 0x9c
 800429e:	301c      	adds	r0, #28
 80042a0:	9006      	str	r0, [sp, #24]
 80042a2:	f7ff fec3 	bl	800402c <_ZN8touchgfx15GraphLabelsBaseC1Ev>
 80042a6:	4979      	ldr	r1, [pc, #484]	; (800448c <_ZN19ScreenGraphViewBaseC1Ev+0x3e0>)
 80042a8:	f8c9 10dc 	str.w	r1, [r9, #220]	; 0xdc
 80042ac:	f504 5189 	add.w	r1, r4, #4384	; 0x1120
 80042b0:	3108      	adds	r1, #8
 */
class Button : public AbstractButton
{
public:
    Button()
        : AbstractButton(), up(), down(), alpha(255)
 80042b2:	4608      	mov	r0, r1
 80042b4:	ee09 1a10 	vmov	s18, r1
 80042b8:	f7ff fed6 	bl	8004068 <_ZN8touchgfx14AbstractButtonC1Ev>
 * A ToggleButton is a Button specialization that swaps the two bitmaps when clicked, such that
 * the previous "pressed" bitmap, now becomes the one displayed when button is not
 * pressed. This can by used to give the effect of a button that can be pressed in and
 * when it is subsequently pressed, it will pop back out.
 */
class ToggleButton : public Button
 80042bc:	4b75      	ldr	r3, [pc, #468]	; (8004494 <_ZN19ScreenGraphViewBaseC1Ev+0x3e8>)
 80042be:	f8c9 3128 	str.w	r3, [r9, #296]	; 0x128
 80042c2:	f504 518b 	add.w	r1, r4, #4448	; 0x1160
 80042c6:	f8a9 6156 	strh.w	r6, [r9, #342]	; 0x156
 80042ca:	f8a9 6158 	strh.w	r6, [r9, #344]	; 0x158
 80042ce:	f889 615a 	strb.w	r6, [r9, #346]	; 0x15a
 80042d2:	f8a9 615c 	strh.w	r6, [r9, #348]	; 0x15c
 80042d6:	4608      	mov	r0, r1
 80042d8:	ee09 1a90 	vmov	s19, r1
 80042dc:	f7fe fd4c 	bl	8002d78 <_ZN8touchgfx8TextAreaC1Ev>
 80042e0:	f504 518d 	add.w	r1, r4, #4512	; 0x11a0
 80042e4:	3108      	adds	r1, #8
 80042e6:	4608      	mov	r0, r1
 80042e8:	ee08 1a10 	vmov	s16, r1
 80042ec:	f7ff fed2 	bl	8004094 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80042f0:	f504 518f 	add.w	r1, r4, #4576	; 0x11e0
 80042f4:	3114      	adds	r1, #20
 80042f6:	4608      	mov	r0, r1
 80042f8:	ee0a 1a10 	vmov	s20, r1
 80042fc:	f7ff feca 	bl	8004094 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8004300:	f504 5192 	add.w	r1, r4, #4672	; 0x1240
 8004304:	4608      	mov	r0, r1
 8004306:	ee0c 1a90 	vmov	s25, r1
 800430a:	f7ff fec3 	bl	8004094 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800430e:	f504 5194 	add.w	r1, r4, #4736	; 0x1280
 8004312:	310c      	adds	r1, #12
 8004314:	f504 5a96 	add.w	sl, r4, #4800	; 0x12c0
 8004318:	4608      	mov	r0, r1
 800431a:	f10a 0a18 	add.w	sl, sl, #24
 800431e:	ee0a 1a90 	vmov	s21, r1
 8004322:	f7ff feb7 	bl	8004094 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8004326:	4650      	mov	r0, sl
 8004328:	f006 fb16 	bl	800a958 <_ZN8touchgfx11ModalWindowC1Ev>
 800432c:	f504 519c 	add.w	r1, r4, #4992	; 0x1380
 8004330:	3108      	adds	r1, #8
 8004332:	4608      	mov	r0, r1
 8004334:	ee0d 1a10 	vmov	s26, r1
 8004338:	f7ff fe96 	bl	8004068 <_ZN8touchgfx14AbstractButtonC1Ev>
 800433c:	f504 519d 	add.w	r1, r4, #5024	; 0x13a0
 8004340:	311c      	adds	r1, #28
 8004342:	4b55      	ldr	r3, [pc, #340]	; (8004498 <_ZN19ScreenGraphViewBaseC1Ev+0x3ec>)
 8004344:	f8c9 3388 	str.w	r3, [r9, #904]	; 0x388
 8004348:	460b      	mov	r3, r1
 800434a:	4618      	mov	r0, r3
 800434c:	f8a9 63b6 	strh.w	r6, [r9, #950]	; 0x3b6
 8004350:	f8a9 63b8 	strh.w	r6, [r9, #952]	; 0x3b8
 8004354:	f889 63ba 	strb.w	r6, [r9, #954]	; 0x3ba
 8004358:	ee0b 1a10 	vmov	s22, r1
 800435c:	a914      	add	r1, sp, #80	; 0x50
 800435e:	f8ad 6050 	strh.w	r6, [sp, #80]	; 0x50
 8004362:	f7fe fcef 	bl	8002d44 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8004366:	f504 519f 	add.w	r1, r4, #5088	; 0x13e0
 800436a:	3108      	adds	r1, #8
 800436c:	4608      	mov	r0, r1
 800436e:	ee08 1a90 	vmov	s17, r1
 8004372:	f7fe fd01 	bl	8002d78 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8004376:	4b49      	ldr	r3, [pc, #292]	; (800449c <_ZN19ScreenGraphViewBaseC1Ev+0x3f0>)
 8004378:	f8c9 346c 	str.w	r3, [r9, #1132]	; 0x46c
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800437c:	f504 50a3 	add.w	r0, r4, #5216	; 0x1460
 8004380:	4b47      	ldr	r3, [pc, #284]	; (80044a0 <_ZN19ScreenGraphViewBaseC1Ev+0x3f4>)
 8004382:	f8c9 3474 	str.w	r3, [r9, #1140]	; 0x474
 8004386:	f44f 5196 	mov.w	r1, #4800	; 0x12c0
 800438a:	301c      	adds	r0, #28
 800438c:	f8c9 4470 	str.w	r4, [r9, #1136]	; 0x470
 8004390:	f8c9 5478 	str.w	r5, [r9, #1144]	; 0x478
 8004394:	f00b f9cc 	bl	800f730 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 320, 240);
 8004398:	23f0      	movs	r3, #240	; 0xf0
 800439a:	ee1b 0a90 	vmov	r0, s23
 800439e:	9300      	str	r3, [sp, #0]
 80043a0:	462a      	mov	r2, r5
 80043a2:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80043a6:	4629      	mov	r1, r5
 80043a8:	f7fe fc93 	bl	8002cd2 <_ZN8touchgfx8Drawable11setPositionEssss>
 80043ac:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
    Background.setXY(-109, -23);
 80043b0:	f06f 0216 	mvn.w	r2, #22
 80043b4:	ee1c 0a10 	vmov	r0, s24
 80043b8:	66a1      	str	r1, [r4, #104]	; 0x68
 80043ba:	f06f 016c 	mvn.w	r1, #108	; 0x6c
 80043be:	f7fe fc49 	bl	8002c54 <_ZN8touchgfx8Drawable5setXYEss>
 80043c2:	f04f 0104 	mov.w	r1, #4
    Background.setBitmap(touchgfx::Bitmap(BITMAP_DARK_BACKGROUNDS_MAIN_BG_TEXTURE_480X272PX_ID));
 80043c6:	ee1c 0a10 	vmov	r0, s24
 80043ca:	f8ad 1050 	strh.w	r1, [sp, #80]	; 0x50
 80043ce:	a914      	add	r1, sp, #80	; 0x50
 80043d0:	f00a f9c0 	bl	800e754 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    boxWithBorder1.setPosition(0, 0, 320, 166);
 80043d4:	21a6      	movs	r1, #166	; 0xa6
 80043d6:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80043da:	ee1d 0a90 	vmov	r0, s27
 80043de:	9100      	str	r1, [sp, #0]
 80043e0:	462a      	mov	r2, r5
 80043e2:	4629      	mov	r1, r5
 80043e4:	f7fe fc75 	bl	8002cd2 <_ZN8touchgfx8Drawable11setPositionEssss>
 80043e8:	f04f 31ff 	mov.w	r1, #4294967295
 80043ec:	f8c4 10c0 	str.w	r1, [r4, #192]	; 0xc0
        borderColor = colorBorder;
 80043f0:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
 80043f4:	f8c4 10c4 	str.w	r1, [r4, #196]	; 0xc4
        borderSize = size;
 80043f8:	f04f 0101 	mov.w	r1, #1
 80043fc:	f8a4 10c8 	strh.w	r1, [r4, #200]	; 0xc8
    dynamicGraph2.setScale(1000);
 8004400:	462a      	mov	r2, r5
 8004402:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8004406:	4658      	mov	r0, fp
 8004408:	f7ff fa82 	bl	8003910 <_ZN8touchgfx16DynamicDataGraph8setScaleEib>
    dynamicGraph2.setGraphRangeX(0, 10);
 800440c:	220a      	movs	r2, #10
 800440e:	4629      	mov	r1, r5
 8004410:	4658      	mov	r0, fp
 8004412:	f7ff f8c9 	bl	80035a8 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>
    dynamicGraph2.setPosition(0, 0, 320, 166);
 8004416:	21a6      	movs	r1, #166	; 0xa6
 8004418:	9100      	str	r1, [sp, #0]
 800441a:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800441e:	462a      	mov	r2, r5
 8004420:	4629      	mov	r1, r5
 8004422:	4658      	mov	r0, fp
 8004424:	f7fe fc55 	bl	8002cd2 <_ZN8touchgfx8Drawable11setPositionEssss>
    dynamicGraph2.setGraphAreaMargin(6, 20, 5, 15);
 8004428:	210f      	movs	r1, #15
 800442a:	9100      	str	r1, [sp, #0]
 800442c:	2305      	movs	r3, #5
 800442e:	2214      	movs	r2, #20
 8004430:	2106      	movs	r1, #6
 8004432:	4658      	mov	r0, fp
 8004434:	f008 f8ea 	bl	800c60c <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>
    dynamicGraph2.setGraphAreaPadding(0, 0, 0, 0);
 8004438:	462b      	mov	r3, r5
 800443a:	462a      	mov	r2, r5
 800443c:	4629      	mov	r1, r5
 800443e:	4658      	mov	r0, fp
 8004440:	9500      	str	r5, [sp, #0]
 8004442:	f007 ffe6 	bl	800c412 <_ZN8touchgfx17AbstractDataGraph19setGraphAreaPaddingEssss>
    dynamicGraph2.setGraphRangeY(1.0f, 1.5f);
 8004446:	eef7 0a08 	vmov.f32	s1, #120	; 0x3fc00000  1.5
 800444a:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 800444e:	4658      	mov	r0, fp
 8004450:	f7ff f940 	bl	80036d4 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 8004454:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8004458:	f8d4 1bf0 	ldr.w	r1, [r4, #3056]	; 0xbf0
 800445c:	f8d4 0bf4 	ldr.w	r0, [r4, #3060]	; 0xbf4
        visible = vis;
 8004460:	f884 50f1 	strb.w	r5, [r4, #241]	; 0xf1
 8004464:	f008 f984 	bl	800c770 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        majorGrid = &major;
 8004468:	ee1e 3a10 	vmov	r3, s28
 800446c:	e01e      	b.n	80044ac <_ZN19ScreenGraphViewBaseC1Ev+0x400>
 800446e:	bf00      	nop
 8004470:	080232bc 	.word	0x080232bc
 8004474:	08024148 	.word	0x08024148
 8004478:	0802390c 	.word	0x0802390c
 800447c:	08022f6c 	.word	0x08022f6c
 8004480:	08023be4 	.word	0x08023be4
 8004484:	08022e94 	.word	0x08022e94
 8004488:	08023d18 	.word	0x08023d18
 800448c:	08023db8 	.word	0x08023db8
 8004490:	08023108 	.word	0x08023108
 8004494:	08023f68 	.word	0x08023f68
 8004498:	080240d4 	.word	0x080240d4
 800449c:	080232a4 	.word	0x080232a4
 80044a0:	08003ebd 	.word	0x08003ebd
 80044a4:	0802385c 	.word	0x0802385c
 80044a8:	08022ddc 	.word	0x08022ddc
        dataScale = scale;
 80044ac:	f44f 767a 	mov.w	r6, #1000	; 0x3e8
        color = newColor;
 80044b0:	4fd3      	ldr	r7, [pc, #844]	; (8004800 <_ZN19ScreenGraphViewBaseC1Ev+0x754>)
        majorGrid = &major;
 80044b2:	f8c4 3bfc 	str.w	r3, [r4, #3068]	; 0xbfc
        lineWidth = width;
 80044b6:	f04f 0101 	mov.w	r1, #1
        dataScale = scale;
 80044ba:	f8c4 6bf0 	str.w	r6, [r4, #3056]	; 0xbf0
        color = newColor;
 80044be:	f8c4 7bec 	str.w	r7, [r4, #3052]	; 0xbec
        gridInterval = abs(interval);
 80044c2:	f8c4 6bf4 	str.w	r6, [r4, #3060]	; 0xbf4
        lineWidth = width;
 80044c6:	f884 1bf8 	strb.w	r1, [r4, #3064]	; 0xbf8
    dynamicGraph2.addGraphElement(dynamicGraph2MinorXAxisGrid);
 80044ca:	4658      	mov	r0, fp
 80044cc:	ee1f 1a90 	vmov	r1, s31
 80044d0:	f007 ffaa 	bl	800c428 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 80044d4:	4632      	mov	r2, r6
 80044d6:	f8d4 1c30 	ldr.w	r1, [r4, #3120]	; 0xc30
 80044da:	f8d4 0c34 	ldr.w	r0, [r4, #3124]	; 0xc34
 80044de:	f008 f947 	bl	800c770 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        majorGrid = &major;
 80044e2:	ee1e 3a90 	vmov	r3, s29
        gridInterval = abs(interval);
 80044e6:	204b      	movs	r0, #75	; 0x4b
        lineWidth = width;
 80044e8:	f04f 0101 	mov.w	r1, #1
        majorGrid = &major;
 80044ec:	f8c4 3c3c 	str.w	r3, [r4, #3132]	; 0xc3c
        dataScale = scale;
 80044f0:	f8c4 6c30 	str.w	r6, [r4, #3120]	; 0xc30
        color = newColor;
 80044f4:	f8c4 7c2c 	str.w	r7, [r4, #3116]	; 0xc2c
        gridInterval = abs(interval);
 80044f8:	f8c4 0c34 	str.w	r0, [r4, #3124]	; 0xc34
        lineWidth = width;
 80044fc:	f884 1c38 	strb.w	r1, [r4, #3128]	; 0xc38
    dynamicGraph2.addGraphElement(dynamicGraph2MinorYAxisGrid);
 8004500:	4658      	mov	r0, fp
 8004502:	9908      	ldr	r1, [sp, #32]
 8004504:	f007 ff90 	bl	800c428 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 8004508:	4632      	mov	r2, r6
 800450a:	f8d4 1c70 	ldr.w	r1, [r4, #3184]	; 0xc70
 800450e:	f8d4 0c74 	ldr.w	r0, [r4, #3188]	; 0xc74
 8004512:	f008 f92d 	bl	800c770 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        lineWidth = width;
 8004516:	f04f 0302 	mov.w	r3, #2
 800451a:	f884 3c78 	strb.w	r3, [r4, #3192]	; 0xc78
    dynamicGraph2.addGraphElement(dynamicGraph2MajorXAxisGrid);
 800451e:	ee1e 1a10 	vmov	r1, s28
        dataScale = scale;
 8004522:	f8c4 6c70 	str.w	r6, [r4, #3184]	; 0xc70
        color = newColor;
 8004526:	f8c4 7c6c 	str.w	r7, [r4, #3180]	; 0xc6c
        gridInterval = abs(interval);
 800452a:	f8c4 6c74 	str.w	r6, [r4, #3188]	; 0xc74
 800452e:	4658      	mov	r0, fp
 8004530:	f007 ff7a 	bl	800c428 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 8004534:	4632      	mov	r2, r6
 8004536:	f8d4 1cb0 	ldr.w	r1, [r4, #3248]	; 0xcb0
 800453a:	f8d4 0cb4 	ldr.w	r0, [r4, #3252]	; 0xcb4
 800453e:	f008 f917 	bl	800c770 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        lineWidth = width;
 8004542:	f04f 0302 	mov.w	r3, #2
        gridInterval = abs(interval);
 8004546:	2196      	movs	r1, #150	; 0x96
        lineWidth = width;
 8004548:	f884 3cb8 	strb.w	r3, [r4, #3256]	; 0xcb8
        dataScale = scale;
 800454c:	f8c4 6cb0 	str.w	r6, [r4, #3248]	; 0xcb0
        color = newColor;
 8004550:	f8c4 7cac 	str.w	r7, [r4, #3244]	; 0xcac
        gridInterval = abs(interval);
 8004554:	f8c4 1cb4 	str.w	r1, [r4, #3252]	; 0xcb4
    dynamicGraph2.addGraphElement(dynamicGraph2MajorYAxisGrid);
 8004558:	4658      	mov	r0, fp
 800455a:	ee1e 1a90 	vmov	r1, s29
 800455e:	f007 ff63 	bl	800c428 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        labelInterval = AbstractDataGraph::convertToNewScale(labelInterval, dataScale, scale);
 8004562:	4632      	mov	r2, r6
 8004564:	f8d4 1cf0 	ldr.w	r1, [r4, #3312]	; 0xcf0
 8004568:	f8d4 0cf4 	ldr.w	r0, [r4, #3316]	; 0xcf4
 800456c:	f008 f900 	bl	800c770 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
class TypedText
 8004570:	f04f 0207 	mov.w	r2, #7
    dynamicGraph2.addBottomElement(dynamicGraph2MajorXAxisLabel);
 8004574:	9909      	ldr	r1, [sp, #36]	; 0x24
        dataScale = scale;
 8004576:	f8c4 6cf0 	str.w	r6, [r4, #3312]	; 0xcf0
        labelInterval = abs(interval);
 800457a:	f8c4 6cf4 	str.w	r6, [r4, #3316]	; 0xcf4
 800457e:	f8a4 2cfc 	strh.w	r2, [r4, #3324]	; 0xcfc
        color = newColor;
 8004582:	f8c4 7cec 	str.w	r7, [r4, #3308]	; 0xcec
 8004586:	4658      	mov	r0, fp
 8004588:	f007 ff72 	bl	800c470 <_ZN8touchgfx17AbstractDataGraph16addBottomElementERNS_23AbstractGraphDecorationE>
        labelInterval = AbstractDataGraph::convertToNewScale(labelInterval, dataScale, scale);
 800458c:	4632      	mov	r2, r6
 800458e:	f8d4 1d3c 	ldr.w	r1, [r4, #3388]	; 0xd3c
 8004592:	f8d4 0d40 	ldr.w	r0, [r4, #3392]	; 0xd40
 8004596:	f008 f8eb 	bl	800c770 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        labelInterval = abs(interval);
 800459a:	2296      	movs	r2, #150	; 0x96
 800459c:	f8c4 2d40 	str.w	r2, [r4, #3392]	; 0xd40
 80045a0:	f04f 0206 	mov.w	r2, #6
 80045a4:	f8a4 2d48 	strh.w	r2, [r4, #3400]	; 0xd48
        labelDecimals = decimals;
 80045a8:	f04f 0201 	mov.w	r2, #1
    dynamicGraph2.addLeftElement(dynamicGraph2MajorYAxisLabel);
 80045ac:	990a      	ldr	r1, [sp, #40]	; 0x28
        dataScale = scale;
 80045ae:	f8c4 6d3c 	str.w	r6, [r4, #3388]	; 0xd3c
        labelDecimals = decimals;
 80045b2:	f8a4 2d4e 	strh.w	r2, [r4, #3406]	; 0xd4e
 80045b6:	f8c4 7d38 	str.w	r7, [r4, #3384]	; 0xd38
 80045ba:	4658      	mov	r0, fp
 80045bc:	f007 ff46 	bl	800c44c <_ZN8touchgfx17AbstractDataGraph14addLeftElementERNS_23AbstractGraphDecorationE>
        canvasPainter = &painter;
 80045c0:	9b07      	ldr	r3, [sp, #28]
 80045c2:	f8c4 3ba4 	str.w	r3, [r4, #2980]	; 0xba4
 80045c6:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
     *
     * @see getLineWidth
     */
    FORCE_INLINE_FUNCTION void setLineWidth(uint8_t width)
    {
        lineWidth = width;
 80045ca:	f04f 0302 	mov.w	r3, #2
 80045ce:	f884 3ba8 	strb.w	r3, [r4, #2984]	; 0xba8
    dynamicGraph2.addGraphElement(dynamicGraph2Line1);
 80045d2:	ee1f 1a10 	vmov	r1, s30
 80045d6:	f8c4 2bb8 	str.w	r2, [r4, #3000]	; 0xbb8
 80045da:	4658      	mov	r0, fp
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
 80045dc:	f8a4 5bbc 	strh.w	r5, [r4, #3004]	; 0xbbc
 80045e0:	f007 ff22 	bl	800c428 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
    dynamicGraph1.setScale(1000);
 80045e4:	4631      	mov	r1, r6
 80045e6:	462a      	mov	r2, r5
 80045e8:	4640      	mov	r0, r8
 80045ea:	f7ff f991 	bl	8003910 <_ZN8touchgfx16DynamicDataGraph8setScaleEib>
    dynamicGraph1.setPosition(0, 0, 320, 166);
 80045ee:	22a6      	movs	r2, #166	; 0xa6
 80045f0:	9200      	str	r2, [sp, #0]
 80045f2:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80045f6:	462a      	mov	r2, r5
 80045f8:	4629      	mov	r1, r5
 80045fa:	4640      	mov	r0, r8
 80045fc:	f7fe fb69 	bl	8002cd2 <_ZN8touchgfx8Drawable11setPositionEssss>
    dynamicGraph1.setGraphAreaMargin(6, 24, 0, 15);
 8004600:	220f      	movs	r2, #15
 8004602:	9200      	str	r2, [sp, #0]
 8004604:	462b      	mov	r3, r5
 8004606:	2218      	movs	r2, #24
 8004608:	2106      	movs	r1, #6
 800460a:	4640      	mov	r0, r8
 800460c:	f007 fffe 	bl	800c60c <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>
    dynamicGraph1.setGraphAreaPadding(0, 0, 0, 0);
 8004610:	462b      	mov	r3, r5
 8004612:	462a      	mov	r2, r5
 8004614:	4629      	mov	r1, r5
 8004616:	4640      	mov	r0, r8
 8004618:	9500      	str	r5, [sp, #0]
 800461a:	f007 fefa 	bl	800c412 <_ZN8touchgfx17AbstractDataGraph19setGraphAreaPaddingEssss>
    dynamicGraph1.setGraphRangeY(1.0f, 1.5f);
 800461e:	eef7 0a08 	vmov.f32	s1, #120	; 0x3fc00000  1.5
 8004622:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 8004626:	4640      	mov	r0, r8
 8004628:	f7ff f854 	bl	80036d4 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 800462c:	4632      	mov	r2, r6
 800462e:	e9d9 1003 	ldrd	r1, r0, [r9, #12]
 8004632:	f008 f89d 	bl	800c770 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        gridInterval = abs(interval);
 8004636:	f241 3288 	movw	r2, #5000	; 0x1388
        majorGrid = &major;
 800463a:	9b03      	ldr	r3, [sp, #12]
        gridInterval = abs(interval);
 800463c:	f8c9 2010 	str.w	r2, [r9, #16]
        lineWidth = width;
 8004640:	f04f 0201 	mov.w	r2, #1
        color = newColor;
 8004644:	e9c9 7602 	strd	r7, r6, [r9, #8]
        majorGrid = &major;
 8004648:	f8c9 3018 	str.w	r3, [r9, #24]
    dynamicGraph1.addGraphElement(dynamicGraph1MinorXAxisGrid);
 800464c:	990d      	ldr	r1, [sp, #52]	; 0x34
        lineWidth = width;
 800464e:	f889 2014 	strb.w	r2, [r9, #20]
 8004652:	4640      	mov	r0, r8
 8004654:	f007 fee8 	bl	800c428 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 8004658:	4632      	mov	r2, r6
 800465a:	e9d9 1013 	ldrd	r1, r0, [r9, #76]	; 0x4c
 800465e:	f008 f887 	bl	800c770 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        gridInterval = abs(interval);
 8004662:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
        lineWidth = width;
 8004666:	f04f 0201 	mov.w	r2, #1
        gridInterval = abs(interval);
 800466a:	f8c9 3050 	str.w	r3, [r9, #80]	; 0x50
        majorGrid = &major;
 800466e:	9b04      	ldr	r3, [sp, #16]
 8004670:	f8c9 3058 	str.w	r3, [r9, #88]	; 0x58
        color = newColor;
 8004674:	e9c9 7612 	strd	r7, r6, [r9, #72]	; 0x48
    dynamicGraph1.addGraphElement(dynamicGraph1MinorYAxisGrid);
 8004678:	9905      	ldr	r1, [sp, #20]
        lineWidth = width;
 800467a:	f889 2054 	strb.w	r2, [r9, #84]	; 0x54
 800467e:	4640      	mov	r0, r8
 8004680:	f007 fed2 	bl	800c428 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 8004684:	4632      	mov	r2, r6
 8004686:	e9d9 1023 	ldrd	r1, r0, [r9, #140]	; 0x8c
 800468a:	f008 f871 	bl	800c770 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        gridInterval = abs(interval);
 800468e:	f242 7310 	movw	r3, #10000	; 0x2710
 8004692:	f8c9 3090 	str.w	r3, [r9, #144]	; 0x90
        lineWidth = width;
 8004696:	f04f 0302 	mov.w	r3, #2
        color = newColor;
 800469a:	e9c9 7622 	strd	r7, r6, [r9, #136]	; 0x88
        lineWidth = width;
 800469e:	f889 3094 	strb.w	r3, [r9, #148]	; 0x94
    dynamicGraph1.addGraphElement(dynamicGraph1MajorXAxisGrid);
 80046a2:	9903      	ldr	r1, [sp, #12]
 80046a4:	4640      	mov	r0, r8
 80046a6:	f007 febf 	bl	800c428 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 80046aa:	4632      	mov	r2, r6
 80046ac:	e9d9 1033 	ldrd	r1, r0, [r9, #204]	; 0xcc
 80046b0:	f008 f85e 	bl	800c770 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        lineWidth = width;
 80046b4:	f04f 0302 	mov.w	r3, #2
        color = newColor;
 80046b8:	e9c9 7632 	strd	r7, r6, [r9, #200]	; 0xc8
        lineWidth = width;
 80046bc:	f889 30d4 	strb.w	r3, [r9, #212]	; 0xd4
    dynamicGraph1.addGraphElement(dynamicGraph1MajorYAxisGrid);
 80046c0:	9904      	ldr	r1, [sp, #16]
        gridInterval = abs(interval);
 80046c2:	f8c9 60d0 	str.w	r6, [r9, #208]	; 0xd0
 80046c6:	4640      	mov	r0, r8
 80046c8:	f007 feae 	bl	800c428 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        labelInterval = AbstractDataGraph::convertToNewScale(labelInterval, dataScale, scale);
 80046cc:	4632      	mov	r2, r6
 80046ce:	e9d9 1043 	ldrd	r1, r0, [r9, #268]	; 0x10c
 80046d2:	f008 f84d 	bl	800c770 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        labelInterval = abs(interval);
 80046d6:	2396      	movs	r3, #150	; 0x96
 80046d8:	f8c9 3110 	str.w	r3, [r9, #272]	; 0x110
 80046dc:	f04f 030f 	mov.w	r3, #15
 80046e0:	f8a9 3118 	strh.w	r3, [r9, #280]	; 0x118
        labelDecimals = decimals;
 80046e4:	f04f 0302 	mov.w	r3, #2
    dynamicGraph1.addLeftElement(dynamicGraph1MajorYAxisLabel);
 80046e8:	9906      	ldr	r1, [sp, #24]
        dataScale = scale;
 80046ea:	f8c9 610c 	str.w	r6, [r9, #268]	; 0x10c
        labelDecimals = decimals;
 80046ee:	f8a9 311e 	strh.w	r3, [r9, #286]	; 0x11e
        color = newColor;
 80046f2:	f8c9 7108 	str.w	r7, [r9, #264]	; 0x108
 80046f6:	4640      	mov	r0, r8
 80046f8:	f007 fea8 	bl	800c44c <_ZN8touchgfx17AbstractDataGraph14addLeftElementERNS_23AbstractGraphDecorationE>
 80046fc:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8004700:	f8c4 3fd4 	str.w	r3, [r4, #4052]	; 0xfd4
 8004704:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8004706:	f8c4 3fc0 	str.w	r3, [r4, #4032]	; 0xfc0
        lineWidth = width;
 800470a:	f04f 0302 	mov.w	r3, #2
 800470e:	f884 3fc4 	strb.w	r3, [r4, #4036]	; 0xfc4
    dynamicGraph1.addGraphElement(dynamicGraph1Line1);
 8004712:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8004714:	f8a4 5fd8 	strh.w	r5, [r4, #4056]	; 0xfd8
 8004718:	4640      	mov	r0, r8
 800471a:	f007 fe85 	bl	800c428 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
    toggleButton1.setXY(65, 211);
 800471e:	ee19 0a10 	vmov	r0, s18
 8004722:	22d3      	movs	r2, #211	; 0xd3
 8004724:	2141      	movs	r1, #65	; 0x41
 8004726:	f7fe fa95 	bl	8002c54 <_ZN8touchgfx8Drawable5setXYEss>
 800472a:	f04f 030b 	mov.w	r3, #11
 800472e:	f8ad 304c 	strh.w	r3, [sp, #76]	; 0x4c
 8004732:	f04f 030c 	mov.w	r3, #12
{
public:
    virtual void setBitmaps(const Bitmap& bitmapReleased, const Bitmap& bitmapPressed)
    {
        originalPressed = bitmapPressed;
        Button::setBitmaps(bitmapReleased, bitmapPressed);
 8004736:	ee19 0a10 	vmov	r0, s18
        originalPressed = bitmapPressed;
 800473a:	f8a9 315c 	strh.w	r3, [r9, #348]	; 0x15c
        Button::setBitmaps(bitmapReleased, bitmapPressed);
 800473e:	aa14      	add	r2, sp, #80	; 0x50
 8004740:	a913      	add	r1, sp, #76	; 0x4c
 8004742:	f8ad 3050 	strh.w	r3, [sp, #80]	; 0x50
 8004746:	f009 fde2 	bl	800e30e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
    toggleButton1.setAction(buttonCallback);
 800474a:	f504 53a3 	add.w	r3, r4, #5216	; 0x1460
 800474e:	330c      	adds	r3, #12
    txtShowWholeGraph.setXY(1, 219);
 8004750:	22db      	movs	r2, #219	; 0xdb
 8004752:	ee19 0a90 	vmov	r0, s19
        action = &callback;
 8004756:	f8c9 3150 	str.w	r3, [r9, #336]	; 0x150
 800475a:	2101      	movs	r1, #1
 800475c:	ae0e      	add	r6, sp, #56	; 0x38
    toggleButton1.setAction(buttonCallback);
 800475e:	9303      	str	r3, [sp, #12]
    txtShowWholeGraph.setXY(1, 219);
 8004760:	f7fe fa78 	bl	8002c54 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004764:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        boundingArea = calculateBoundingArea();
 8004768:	ee19 1a90 	vmov	r1, s19
        color = newColor;
 800476c:	f8c9 3190 	str.w	r3, [r9, #400]	; 0x190
        boundingArea = calculateBoundingArea();
 8004770:	4630      	mov	r0, r6
        linespace = space;
 8004772:	f8a9 5194 	strh.w	r5, [r9, #404]	; 0x194
        boundingArea = calculateBoundingArea();
 8004776:	f009 faed 	bl	800dd54 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800477a:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 800477e:	ee19 3a90 	vmov	r3, s19
 8004782:	333c      	adds	r3, #60	; 0x3c
 8004784:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8004788:	4b1e      	ldr	r3, [pc, #120]	; (8004804 <_ZN19ScreenGraphViewBaseC1Ev+0x758>)
 800478a:	9314      	str	r3, [sp, #80]	; 0x50
    txtShowWholeGraph.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DO01));
 800478c:	ee19 0a90 	vmov	r0, s19
 8004790:	230e      	movs	r3, #14
 8004792:	a914      	add	r1, sp, #80	; 0x50
 8004794:	f8ad 3054 	strh.w	r3, [sp, #84]	; 0x54
 8004798:	f009 fd5e 	bl	800e258 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    txtLastValue.setPosition(2, 168, 132, 15);
 800479c:	230f      	movs	r3, #15
 800479e:	22a8      	movs	r2, #168	; 0xa8
 80047a0:	ee18 0a10 	vmov	r0, s16
 80047a4:	9300      	str	r3, [sp, #0]
 80047a6:	2102      	movs	r1, #2
 80047a8:	2384      	movs	r3, #132	; 0x84
 80047aa:	f7fe fa92 	bl	8002cd2 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 80047ae:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80047b2:	f8c9 31d8 	str.w	r3, [r9, #472]	; 0x1d8
        boundingArea = calculateBoundingArea();
 80047b6:	f8d9 31a8 	ldr.w	r3, [r9, #424]	; 0x1a8
        linespace = space;
 80047ba:	f8a9 51dc 	strh.w	r5, [r9, #476]	; 0x1dc
        boundingArea = calculateBoundingArea();
 80047be:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80047c2:	ee18 1a10 	vmov	r1, s16
 80047c6:	4630      	mov	r0, r6
 80047c8:	4798      	blx	r3
 80047ca:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80047ce:	ee18 3a10 	vmov	r3, s16
 80047d2:	333c      	adds	r3, #60	; 0x3c
 80047d4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80047d8:	4b0b      	ldr	r3, [pc, #44]	; (8004808 <_ZN19ScreenGraphViewBaseC1Ev+0x75c>)
 80047da:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(txtLastValueBuffer, TXTLASTVALUE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_SQ4H).getText());
 80047dc:	f504 57a1 	add.w	r7, r4, #5152	; 0x1420
 80047e0:	3710      	adds	r7, #16
 80047e2:	b92b      	cbnz	r3, 80047f0 <_ZN19ScreenGraphViewBaseC1Ev+0x744>
 80047e4:	4b09      	ldr	r3, [pc, #36]	; (800480c <_ZN19ScreenGraphViewBaseC1Ev+0x760>)
 80047e6:	4a0a      	ldr	r2, [pc, #40]	; (8004810 <_ZN19ScreenGraphViewBaseC1Ev+0x764>)
 80047e8:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80047ea:	480a      	ldr	r0, [pc, #40]	; (8004814 <_ZN19ScreenGraphViewBaseC1Ev+0x768>)
 80047ec:	f01c f830 	bl	8020850 <__assert_func>
 80047f0:	4b09      	ldr	r3, [pc, #36]	; (8004818 <_ZN19ScreenGraphViewBaseC1Ev+0x76c>)
 80047f2:	881b      	ldrh	r3, [r3, #0]
 80047f4:	2b0b      	cmp	r3, #11
 80047f6:	d813      	bhi.n	8004820 <_ZN19ScreenGraphViewBaseC1Ev+0x774>
 80047f8:	4b08      	ldr	r3, [pc, #32]	; (800481c <_ZN19ScreenGraphViewBaseC1Ev+0x770>)
 80047fa:	4a05      	ldr	r2, [pc, #20]	; (8004810 <_ZN19ScreenGraphViewBaseC1Ev+0x764>)
 80047fc:	2161      	movs	r1, #97	; 0x61
 80047fe:	e7f4      	b.n	80047ea <_ZN19ScreenGraphViewBaseC1Ev+0x73e>
 8004800:	ff1497c5 	.word	0xff1497c5
 8004804:	0802221c 	.word	0x0802221c
 8004808:	20015610 	.word	0x20015610
 800480c:	080227d0 	.word	0x080227d0
 8004810:	080228d2 	.word	0x080228d2
 8004814:	0802284d 	.word	0x0802284d
 8004818:	20015614 	.word	0x20015614
 800481c:	08022894 	.word	0x08022894
        return texts->getText(typedTextId);
 8004820:	4bb8      	ldr	r3, [pc, #736]	; (8004b04 <_ZN19ScreenGraphViewBaseC1Ev+0xa58>)
 8004822:	210b      	movs	r1, #11
 8004824:	6818      	ldr	r0, [r3, #0]
 8004826:	f000 fadb 	bl	8004de0 <_ZNK8touchgfx5Texts7getTextEt>
 800482a:	4ab7      	ldr	r2, [pc, #732]	; (8004b08 <_ZN19ScreenGraphViewBaseC1Ev+0xa5c>)
 800482c:	4603      	mov	r3, r0
 800482e:	2108      	movs	r1, #8
 8004830:	4638      	mov	r0, r7
 8004832:	f00f fbfb 	bl	801402c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8004836:	4bb5      	ldr	r3, [pc, #724]	; (8004b0c <_ZN19ScreenGraphViewBaseC1Ev+0xa60>)
        wc1 = value;
 8004838:	f8c9 71f0 	str.w	r7, [r9, #496]	; 0x1f0
    txtLastValue.setTypedText(touchgfx::TypedText(T___SINGLEUSE_POMN));
 800483c:	ee18 0a10 	vmov	r0, s16
 8004840:	9314      	str	r3, [sp, #80]	; 0x50
 8004842:	a914      	add	r1, sp, #80	; 0x50
 8004844:	230d      	movs	r3, #13
 8004846:	f8ad 3054 	strh.w	r3, [sp, #84]	; 0x54
 800484a:	f009 fd05 	bl	800e258 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    txtMaxValue.setPosition(2, 183, 132, 15);
 800484e:	210f      	movs	r1, #15
 8004850:	9100      	str	r1, [sp, #0]
 8004852:	2384      	movs	r3, #132	; 0x84
 8004854:	2102      	movs	r1, #2
 8004856:	ee1a 0a10 	vmov	r0, s20
 800485a:	22b7      	movs	r2, #183	; 0xb7
 800485c:	f7fe fa39 	bl	8002cd2 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8004860:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
 8004864:	f8c9 1224 	str.w	r1, [r9, #548]	; 0x224
        boundingArea = calculateBoundingArea();
 8004868:	f04f 31ff 	mov.w	r1, #4294967295
 800486c:	e9c9 158d 	strd	r1, r5, [r9, #564]	; 0x234
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004870:	49a7      	ldr	r1, [pc, #668]	; (8004b10 <_ZN19ScreenGraphViewBaseC1Ev+0xa64>)
        linespace = space;
 8004872:	f8a9 5228 	strh.w	r5, [r9, #552]	; 0x228
 8004876:	680b      	ldr	r3, [r1, #0]
        boundingArea = calculateBoundingArea();
 8004878:	f8c9 5230 	str.w	r5, [r9, #560]	; 0x230
    Unicode::snprintf(txtMaxValueBuffer, TXTMAXVALUE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_JAK9).getText());
 800487c:	f504 57a2 	add.w	r7, r4, #5184	; 0x1440
 8004880:	2b00      	cmp	r3, #0
 8004882:	d0af      	beq.n	80047e4 <_ZN19ScreenGraphViewBaseC1Ev+0x738>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004884:	48a3      	ldr	r0, [pc, #652]	; (8004b14 <_ZN19ScreenGraphViewBaseC1Ev+0xa68>)
 8004886:	8803      	ldrh	r3, [r0, #0]
 8004888:	2b0a      	cmp	r3, #10
 800488a:	d9b5      	bls.n	80047f8 <_ZN19ScreenGraphViewBaseC1Ev+0x74c>
        return texts->getText(typedTextId);
 800488c:	4a9d      	ldr	r2, [pc, #628]	; (8004b04 <_ZN19ScreenGraphViewBaseC1Ev+0xa58>)
 800488e:	210a      	movs	r1, #10
 8004890:	6810      	ldr	r0, [r2, #0]
 8004892:	f000 faa5 	bl	8004de0 <_ZNK8touchgfx5Texts7getTextEt>
 8004896:	4a9c      	ldr	r2, [pc, #624]	; (8004b08 <_ZN19ScreenGraphViewBaseC1Ev+0xa5c>)
 8004898:	4603      	mov	r3, r0
 800489a:	2108      	movs	r1, #8
 800489c:	4638      	mov	r0, r7
 800489e:	f00f fbc5 	bl	801402c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 80048a2:	f04f 0c0c 	mov.w	ip, #12
 80048a6:	f8ad c054 	strh.w	ip, [sp, #84]	; 0x54
    txtMaxValue.setTypedText(touchgfx::TypedText(T___SINGLEUSE_5RGF));
 80048aa:	f10d 0c50 	add.w	ip, sp, #80	; 0x50
 80048ae:	4b97      	ldr	r3, [pc, #604]	; (8004b0c <_ZN19ScreenGraphViewBaseC1Ev+0xa60>)
 80048b0:	f8c9 723c 	str.w	r7, [r9, #572]	; 0x23c
 80048b4:	4661      	mov	r1, ip
 80048b6:	ee1a 0a10 	vmov	r0, s20
    textChargingTme.setPosition(2, 198, 132, 15);
 80048ba:	270f      	movs	r7, #15
 80048bc:	9314      	str	r3, [sp, #80]	; 0x50
    txtMaxValue.setTypedText(touchgfx::TypedText(T___SINGLEUSE_5RGF));
 80048be:	f009 fccb 	bl	800e258 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textChargingTme.setPosition(2, 198, 132, 15);
 80048c2:	9700      	str	r7, [sp, #0]
 80048c4:	2384      	movs	r3, #132	; 0x84
 80048c6:	2102      	movs	r1, #2
 80048c8:	ee1c 0a90 	vmov	r0, s25
 80048cc:	22c6      	movs	r2, #198	; 0xc6
 80048ce:	f7fe fa00 	bl	8002cd2 <_ZN8touchgfx8Drawable11setPositionEssss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80048d2:	498f      	ldr	r1, [pc, #572]	; (8004b10 <_ZN19ScreenGraphViewBaseC1Ev+0xa64>)
        linespace = space;
 80048d4:	f8a9 5274 	strh.w	r5, [r9, #628]	; 0x274
        color = newColor;
 80048d8:	f04f 477f 	mov.w	r7, #4278190080	; 0xff000000
 80048dc:	f8c9 7270 	str.w	r7, [r9, #624]	; 0x270
 80048e0:	680b      	ldr	r3, [r1, #0]
        boundingArea = calculateBoundingArea();
 80048e2:	f8c9 527c 	str.w	r5, [r9, #636]	; 0x27c
 80048e6:	f04f 37ff 	mov.w	r7, #4294967295
 80048ea:	e9c9 75a0 	strd	r7, r5, [r9, #640]	; 0x280
    Unicode::snprintf(textChargingTmeBuffer, TEXTCHARGINGTME_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_E1C6).getText());
 80048ee:	f504 57a2 	add.w	r7, r4, #5184	; 0x1440
 80048f2:	3710      	adds	r7, #16
 80048f4:	2b00      	cmp	r3, #0
 80048f6:	f43f af75 	beq.w	80047e4 <_ZN19ScreenGraphViewBaseC1Ev+0x738>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80048fa:	4886      	ldr	r0, [pc, #536]	; (8004b14 <_ZN19ScreenGraphViewBaseC1Ev+0xa68>)
 80048fc:	8803      	ldrh	r3, [r0, #0]
 80048fe:	2b08      	cmp	r3, #8
 8004900:	f67f af7a 	bls.w	80047f8 <_ZN19ScreenGraphViewBaseC1Ev+0x74c>
        return texts->getText(typedTextId);
 8004904:	4a7f      	ldr	r2, [pc, #508]	; (8004b04 <_ZN19ScreenGraphViewBaseC1Ev+0xa58>)
 8004906:	2108      	movs	r1, #8
 8004908:	6810      	ldr	r0, [r2, #0]
 800490a:	f000 fa69 	bl	8004de0 <_ZNK8touchgfx5Texts7getTextEt>
 800490e:	4a7e      	ldr	r2, [pc, #504]	; (8004b08 <_ZN19ScreenGraphViewBaseC1Ev+0xa5c>)
 8004910:	4603      	mov	r3, r0
 8004912:	210a      	movs	r1, #10
 8004914:	4638      	mov	r0, r7
 8004916:	f00f fb89 	bl	801402c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textChargingTme.setTypedText(touchgfx::TypedText(T___SINGLEUSE_U9Q3));
 800491a:	f10d 0e50 	add.w	lr, sp, #80	; 0x50
        : typedTextId(id)
 800491e:	4b7b      	ldr	r3, [pc, #492]	; (8004b0c <_ZN19ScreenGraphViewBaseC1Ev+0xa60>)
 8004920:	f8c9 7288 	str.w	r7, [r9, #648]	; 0x288
 8004924:	f04f 0c09 	mov.w	ip, #9
 8004928:	4671      	mov	r1, lr
 800492a:	ee1c 0a90 	vmov	r0, s25
 800492e:	9314      	str	r3, [sp, #80]	; 0x50
 8004930:	f8ad c054 	strh.w	ip, [sp, #84]	; 0x54
 8004934:	f009 fc90 	bl	800e258 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textChargingCurrent.setPosition(160, 168, 153, 15);
 8004938:	f04f 0e0f 	mov.w	lr, #15
 800493c:	f8cd e000 	str.w	lr, [sp]
 8004940:	2399      	movs	r3, #153	; 0x99
 8004942:	21a0      	movs	r1, #160	; 0xa0
 8004944:	ee1a 0a90 	vmov	r0, s21
 8004948:	22a8      	movs	r2, #168	; 0xa8
 800494a:	f7fe f9c2 	bl	8002cd2 <_ZN8touchgfx8Drawable11setPositionEssss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800494e:	4970      	ldr	r1, [pc, #448]	; (8004b10 <_ZN19ScreenGraphViewBaseC1Ev+0xa64>)
        linespace = space;
 8004950:	f8a9 52c0 	strh.w	r5, [r9, #704]	; 0x2c0
        color = newColor;
 8004954:	f04f 4e7f 	mov.w	lr, #4278190080	; 0xff000000
 8004958:	680b      	ldr	r3, [r1, #0]
 800495a:	f8c9 e2bc 	str.w	lr, [r9, #700]	; 0x2bc
    Unicode::snprintf(textChargingCurrentBuffer, TEXTCHARGINGCURRENT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_G6V4).getText());
 800495e:	f504 57a3 	add.w	r7, r4, #5216	; 0x1460
        boundingArea = calculateBoundingArea();
 8004962:	f04f 3eff 	mov.w	lr, #4294967295
 8004966:	e9c9 e5b3 	strd	lr, r5, [r9, #716]	; 0x2cc
 800496a:	f8c9 52c8 	str.w	r5, [r9, #712]	; 0x2c8
 800496e:	3704      	adds	r7, #4
 8004970:	2b00      	cmp	r3, #0
 8004972:	f43f af37 	beq.w	80047e4 <_ZN19ScreenGraphViewBaseC1Ev+0x738>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004976:	4867      	ldr	r0, [pc, #412]	; (8004b14 <_ZN19ScreenGraphViewBaseC1Ev+0xa68>)
 8004978:	8803      	ldrh	r3, [r0, #0]
 800497a:	2b01      	cmp	r3, #1
 800497c:	f67f af3c 	bls.w	80047f8 <_ZN19ScreenGraphViewBaseC1Ev+0x74c>
        return texts->getText(typedTextId);
 8004980:	4a60      	ldr	r2, [pc, #384]	; (8004b04 <_ZN19ScreenGraphViewBaseC1Ev+0xa58>)
 8004982:	2101      	movs	r1, #1
 8004984:	6810      	ldr	r0, [r2, #0]
 8004986:	f000 fa2b 	bl	8004de0 <_ZNK8touchgfx5Texts7getTextEt>
 800498a:	4a5f      	ldr	r2, [pc, #380]	; (8004b08 <_ZN19ScreenGraphViewBaseC1Ev+0xa5c>)
 800498c:	4603      	mov	r3, r0
 800498e:	2104      	movs	r1, #4
 8004990:	4638      	mov	r0, r7
 8004992:	f00f fb4b 	bl	801402c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textChargingCurrent.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZLXT));
 8004996:	ee1a 0a90 	vmov	r0, s21
 800499a:	f8c9 72d4 	str.w	r7, [r9, #724]	; 0x2d4
        : typedTextId(id)
 800499e:	f04f 0302 	mov.w	r3, #2
 80049a2:	4f5a      	ldr	r7, [pc, #360]	; (8004b0c <_ZN19ScreenGraphViewBaseC1Ev+0xa60>)
 80049a4:	f8ad 3054 	strh.w	r3, [sp, #84]	; 0x54
 80049a8:	a914      	add	r1, sp, #80	; 0x50
 80049aa:	9714      	str	r7, [sp, #80]	; 0x50
 80049ac:	f009 fc54 	bl	800e258 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    modalWindow1.setBackground(touchgfx::BitmapId(BITMAP_RSZ_MY_MODAL_BACKGROUND_ID), 75, 60);
 80049b0:	230a      	movs	r3, #10
 80049b2:	224b      	movs	r2, #75	; 0x4b
 80049b4:	f8ad 3050 	strh.w	r3, [sp, #80]	; 0x50
 80049b8:	a914      	add	r1, sp, #80	; 0x50
 80049ba:	233c      	movs	r3, #60	; 0x3c
 80049bc:	4650      	mov	r0, sl
 80049be:	f005 ff7d 	bl	800a8bc <_ZN8touchgfx11ModalWindow13setBackgroundERKtss>
    modalWindow1.setShadeColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 80049c2:	4650      	mov	r0, sl
 80049c4:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
 80049c8:	f005 ff4c 	bl	800a864 <_ZN8touchgfx11ModalWindow13setShadeColorENS_9colortypeE>
    modalWindow1.setShadeAlpha(150);
 80049cc:	2196      	movs	r1, #150	; 0x96
 80049ce:	4650      	mov	r0, sl
 80049d0:	f005 ff4c 	bl	800a86c <_ZN8touchgfx11ModalWindow13setShadeAlphaEh>
    modalWindow1.hide();
 80049d4:	4650      	mov	r0, sl
 80049d6:	f005 ff38 	bl	800a84a <_ZN8touchgfx11ModalWindow4hideEv>
    buttonCloseModal.setXY(53, 87);
 80049da:	ee1d 0a10 	vmov	r0, s26
 80049de:	2257      	movs	r2, #87	; 0x57
 80049e0:	2135      	movs	r1, #53	; 0x35
 80049e2:	f7fe f937 	bl	8002c54 <_ZN8touchgfx8Drawable5setXYEss>
 80049e6:	f04f 0307 	mov.w	r3, #7
    buttonCloseModal.setBitmaps(touchgfx::Bitmap(BITMAP_RSZ_CLOSE_BUTTON_ID), touchgfx::Bitmap(BITMAP_RSZ_CLOSE_BUTTON_PRESSED_ID));
 80049ea:	aa14      	add	r2, sp, #80	; 0x50
 80049ec:	ee1d 0a10 	vmov	r0, s26
 80049f0:	f8ad 304c 	strh.w	r3, [sp, #76]	; 0x4c
 80049f4:	a913      	add	r1, sp, #76	; 0x4c
 80049f6:	2308      	movs	r3, #8
 80049f8:	f8ad 3050 	strh.w	r3, [sp, #80]	; 0x50
 80049fc:	f009 fc87 	bl	800e30e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8004a00:	9b03      	ldr	r3, [sp, #12]
 8004a02:	f8c9 33b0 	str.w	r3, [r9, #944]	; 0x3b0
    modalWindow1.add(buttonCloseModal);
 8004a06:	ee1d 1a10 	vmov	r1, s26
 8004a0a:	4650      	mov	r0, sl
 8004a0c:	f005 ff27 	bl	800a85e <_ZN8touchgfx11ModalWindow3addERNS_8DrawableE>
    image1.setXY(59, 3);
 8004a10:	2203      	movs	r2, #3
 8004a12:	ee1b 0a10 	vmov	r0, s22
 8004a16:	213b      	movs	r1, #59	; 0x3b
 8004a18:	f7fe f91c 	bl	8002c54 <_ZN8touchgfx8Drawable5setXYEss>
 8004a1c:	f04f 0c09 	mov.w	ip, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_RSZ_INFO_ICON_ID));
 8004a20:	ee1b 0a10 	vmov	r0, s22
 8004a24:	a914      	add	r1, sp, #80	; 0x50
 8004a26:	f8ad c050 	strh.w	ip, [sp, #80]	; 0x50
 8004a2a:	f009 fe93 	bl	800e754 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    modalWindow1.add(image1);
 8004a2e:	ee1b 1a10 	vmov	r1, s22
 8004a32:	4650      	mov	r0, sl
 8004a34:	f005 ff13 	bl	800a85e <_ZN8touchgfx11ModalWindow3addERNS_8DrawableE>
    textChargingCompleted.setXY(7, 60);
 8004a38:	ee18 0a90 	vmov	r0, s17
 8004a3c:	223c      	movs	r2, #60	; 0x3c
 8004a3e:	2107      	movs	r1, #7
 8004a40:	f7fe f908 	bl	8002c54 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004a44:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        boundingArea = calculateBoundingArea();
 8004a48:	ee18 1a90 	vmov	r1, s17
        color = newColor;
 8004a4c:	f8c9 3418 	str.w	r3, [r9, #1048]	; 0x418
        linespace = space;
 8004a50:	f8a9 541c 	strh.w	r5, [r9, #1052]	; 0x41c
        boundingArea = calculateBoundingArea();
 8004a54:	4630      	mov	r0, r6
 8004a56:	f009 f97d 	bl	800dd54 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004a5a:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8004a5e:	ee18 3a90 	vmov	r3, s17
 8004a62:	333c      	adds	r3, #60	; 0x3c
 8004a64:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    textChargingCompleted.setTypedText(touchgfx::TypedText(T___SINGLEUSE_86E1));
 8004a68:	ee18 0a90 	vmov	r0, s17
 8004a6c:	a914      	add	r1, sp, #80	; 0x50
 8004a6e:	f8ad 5054 	strh.w	r5, [sp, #84]	; 0x54
 8004a72:	9714      	str	r7, [sp, #80]	; 0x50
 8004a74:	1d25      	adds	r5, r4, #4
 8004a76:	f009 fbef 	bl	800e258 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    modalWindow1.add(textChargingCompleted);
 8004a7a:	ee18 1a90 	vmov	r1, s17
 8004a7e:	4650      	mov	r0, sl
 8004a80:	f005 feed 	bl	800a85e <_ZN8touchgfx11ModalWindow3addERNS_8DrawableE>
 8004a84:	ee1b 1a90 	vmov	r1, s23
 8004a88:	4628      	mov	r0, r5
 8004a8a:	f005 ffef 	bl	800aa6c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004a8e:	ee1c 1a10 	vmov	r1, s24
 8004a92:	4628      	mov	r0, r5
 8004a94:	f005 ffea 	bl	800aa6c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004a98:	ee1d 1a90 	vmov	r1, s27
 8004a9c:	4628      	mov	r0, r5
 8004a9e:	f005 ffe5 	bl	800aa6c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004aa2:	4659      	mov	r1, fp
 8004aa4:	4628      	mov	r0, r5
 8004aa6:	f005 ffe1 	bl	800aa6c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004aaa:	4641      	mov	r1, r8
 8004aac:	4628      	mov	r0, r5
 8004aae:	f005 ffdd 	bl	800aa6c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004ab2:	ee19 1a10 	vmov	r1, s18
 8004ab6:	4628      	mov	r0, r5
 8004ab8:	f005 ffd8 	bl	800aa6c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004abc:	ee19 1a90 	vmov	r1, s19
 8004ac0:	4628      	mov	r0, r5
 8004ac2:	f005 ffd3 	bl	800aa6c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004ac6:	ee18 1a10 	vmov	r1, s16
 8004aca:	4628      	mov	r0, r5
 8004acc:	f005 ffce 	bl	800aa6c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004ad0:	ee1a 1a10 	vmov	r1, s20
 8004ad4:	4628      	mov	r0, r5
 8004ad6:	f005 ffc9 	bl	800aa6c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004ada:	ee1c 1a90 	vmov	r1, s25
 8004ade:	4628      	mov	r0, r5
 8004ae0:	f005 ffc4 	bl	800aa6c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004ae4:	ee1a 1a90 	vmov	r1, s21
 8004ae8:	4628      	mov	r0, r5
 8004aea:	f005 ffbf 	bl	800aa6c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004aee:	4628      	mov	r0, r5
 8004af0:	4651      	mov	r1, sl
 8004af2:	f005 ffbb 	bl	800aa6c <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8004af6:	4620      	mov	r0, r4
 8004af8:	b017      	add	sp, #92	; 0x5c
 8004afa:	ecbd 8b10 	vpop	{d8-d15}
 8004afe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004b02:	bf00      	nop
 8004b04:	2001561c 	.word	0x2001561c
 8004b08:	0802290a 	.word	0x0802290a
 8004b0c:	0802221c 	.word	0x0802221c
 8004b10:	20015610 	.word	0x20015610
 8004b14:	20015614 	.word	0x20015614

08004b18 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 40, 10, 2, 4, 1, 0, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8004b18:	4770      	bx	lr
	...

08004b1c <_Z23getFont_verdana_10_4bppv>:
{
 8004b1c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 40, 10, 2, 4, 1, 0, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8004b1e:	4d16      	ldr	r5, [pc, #88]	; (8004b78 <_Z23getFont_verdana_10_4bppv+0x5c>)
 8004b20:	782c      	ldrb	r4, [r5, #0]
 8004b22:	f3bf 8f5b 	dmb	ish
 8004b26:	f014 0401 	ands.w	r4, r4, #1
{
 8004b2a:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 40, 10, 2, 4, 1, 0, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8004b2c:	d120      	bne.n	8004b70 <_Z23getFont_verdana_10_4bppv+0x54>
 8004b2e:	4628      	mov	r0, r5
 8004b30:	f01b fddc 	bl	80206ec <__cxa_guard_acquire>
 8004b34:	b1e0      	cbz	r0, 8004b70 <_Z23getFont_verdana_10_4bppv+0x54>
 8004b36:	233f      	movs	r3, #63	; 0x3f
 8004b38:	9307      	str	r3, [sp, #28]
 8004b3a:	4b10      	ldr	r3, [pc, #64]	; (8004b7c <_Z23getFont_verdana_10_4bppv+0x60>)
 8004b3c:	9306      	str	r3, [sp, #24]
 8004b3e:	4b10      	ldr	r3, [pc, #64]	; (8004b80 <_Z23getFont_verdana_10_4bppv+0x64>)
 8004b40:	9305      	str	r3, [sp, #20]
 8004b42:	2301      	movs	r3, #1
 8004b44:	e9cd 4303 	strd	r4, r3, [sp, #12]
 8004b48:	9302      	str	r3, [sp, #8]
 8004b4a:	2204      	movs	r2, #4
 8004b4c:	2302      	movs	r3, #2
 8004b4e:	e9cd 3200 	strd	r3, r2, [sp]
 8004b52:	490c      	ldr	r1, [pc, #48]	; (8004b84 <_Z23getFont_verdana_10_4bppv+0x68>)
 8004b54:	480c      	ldr	r0, [pc, #48]	; (8004b88 <_Z23getFont_verdana_10_4bppv+0x6c>)
 8004b56:	9408      	str	r4, [sp, #32]
 8004b58:	230a      	movs	r3, #10
 8004b5a:	2228      	movs	r2, #40	; 0x28
 8004b5c:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 8004b60:	f7fd fecc 	bl	80028fc <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8004b64:	4809      	ldr	r0, [pc, #36]	; (8004b8c <_Z23getFont_verdana_10_4bppv+0x70>)
 8004b66:	f01b fe91 	bl	802088c <atexit>
 8004b6a:	4628      	mov	r0, r5
 8004b6c:	f01b fdca 	bl	8020704 <__cxa_guard_release>
    return verdana_10_4bpp;
}
 8004b70:	4805      	ldr	r0, [pc, #20]	; (8004b88 <_Z23getFont_verdana_10_4bppv+0x6c>)
 8004b72:	b00d      	add	sp, #52	; 0x34
 8004b74:	bd30      	pop	{r4, r5, pc}
 8004b76:	bf00      	nop
 8004b78:	200046f8 	.word	0x200046f8
 8004b7c:	08025da4 	.word	0x08025da4
 8004b80:	08025e2c 	.word	0x08025e2c
 8004b84:	080258e0 	.word	0x080258e0
 8004b88:	200046fc 	.word	0x200046fc
 8004b8c:	08004b19 	.word	0x08004b19

08004b90 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_15_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_15_4bpp();

touchgfx::GeneratedFont& getFont_verdana_15_4bpp()
{
    static touchgfx::GeneratedFont verdana_15_4bpp(glyphs_verdana_15_4bpp, 42, 15, 3, 4, 1, 0, 1, unicodes_verdana_15_4bpp, kerning_verdana_15_4bpp, 63, 0, 0, 0);
 8004b90:	4770      	bx	lr
	...

08004b94 <_Z23getFont_verdana_15_4bppv>:
{
 8004b94:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_15_4bpp(glyphs_verdana_15_4bpp, 42, 15, 3, 4, 1, 0, 1, unicodes_verdana_15_4bpp, kerning_verdana_15_4bpp, 63, 0, 0, 0);
 8004b96:	4d16      	ldr	r5, [pc, #88]	; (8004bf0 <_Z23getFont_verdana_15_4bppv+0x5c>)
 8004b98:	782c      	ldrb	r4, [r5, #0]
 8004b9a:	f3bf 8f5b 	dmb	ish
 8004b9e:	f014 0401 	ands.w	r4, r4, #1
{
 8004ba2:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_15_4bpp(glyphs_verdana_15_4bpp, 42, 15, 3, 4, 1, 0, 1, unicodes_verdana_15_4bpp, kerning_verdana_15_4bpp, 63, 0, 0, 0);
 8004ba4:	d120      	bne.n	8004be8 <_Z23getFont_verdana_15_4bppv+0x54>
 8004ba6:	4628      	mov	r0, r5
 8004ba8:	f01b fda0 	bl	80206ec <__cxa_guard_acquire>
 8004bac:	b1e0      	cbz	r0, 8004be8 <_Z23getFont_verdana_15_4bppv+0x54>
 8004bae:	233f      	movs	r3, #63	; 0x3f
 8004bb0:	9307      	str	r3, [sp, #28]
 8004bb2:	4b10      	ldr	r3, [pc, #64]	; (8004bf4 <_Z23getFont_verdana_15_4bppv+0x60>)
 8004bb4:	9306      	str	r3, [sp, #24]
 8004bb6:	4b10      	ldr	r3, [pc, #64]	; (8004bf8 <_Z23getFont_verdana_15_4bppv+0x64>)
 8004bb8:	9305      	str	r3, [sp, #20]
 8004bba:	2301      	movs	r3, #1
 8004bbc:	e9cd 4303 	strd	r4, r3, [sp, #12]
 8004bc0:	9302      	str	r3, [sp, #8]
 8004bc2:	2204      	movs	r2, #4
 8004bc4:	2303      	movs	r3, #3
 8004bc6:	e9cd 3200 	strd	r3, r2, [sp]
 8004bca:	490c      	ldr	r1, [pc, #48]	; (8004bfc <_Z23getFont_verdana_15_4bppv+0x68>)
 8004bcc:	480c      	ldr	r0, [pc, #48]	; (8004c00 <_Z23getFont_verdana_15_4bppv+0x6c>)
 8004bce:	9408      	str	r4, [sp, #32]
 8004bd0:	230f      	movs	r3, #15
 8004bd2:	222a      	movs	r2, #42	; 0x2a
 8004bd4:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 8004bd8:	f7fd fe90 	bl	80028fc <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8004bdc:	4809      	ldr	r0, [pc, #36]	; (8004c04 <_Z23getFont_verdana_15_4bppv+0x70>)
 8004bde:	f01b fe55 	bl	802088c <atexit>
 8004be2:	4628      	mov	r0, r5
 8004be4:	f01b fd8e 	bl	8020704 <__cxa_guard_release>
    return verdana_15_4bpp;
}
 8004be8:	4805      	ldr	r0, [pc, #20]	; (8004c00 <_Z23getFont_verdana_15_4bppv+0x6c>)
 8004bea:	b00d      	add	sp, #52	; 0x34
 8004bec:	bd30      	pop	{r4, r5, pc}
 8004bee:	bf00      	nop
 8004bf0:	20004724 	.word	0x20004724
 8004bf4:	08025dc0 	.word	0x08025dc0
 8004bf8:	08025e30 	.word	0x08025e30
 8004bfc:	08025b10 	.word	0x08025b10
 8004c00:	20004728 	.word	0x20004728
 8004c04:	08004b91 	.word	0x08004b91

08004c08 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 5, 40, 1, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8004c08:	4770      	bx	lr
	...

08004c0c <_Z23getFont_verdana_40_4bppv>:
{
 8004c0c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 5, 40, 1, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8004c0e:	4d15      	ldr	r5, [pc, #84]	; (8004c64 <_Z23getFont_verdana_40_4bppv+0x58>)
 8004c10:	782c      	ldrb	r4, [r5, #0]
 8004c12:	f3bf 8f5b 	dmb	ish
 8004c16:	f014 0401 	ands.w	r4, r4, #1
{
 8004c1a:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 5, 40, 1, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8004c1c:	d11f      	bne.n	8004c5e <_Z23getFont_verdana_40_4bppv+0x52>
 8004c1e:	4628      	mov	r0, r5
 8004c20:	f01b fd64 	bl	80206ec <__cxa_guard_acquire>
 8004c24:	b1d8      	cbz	r0, 8004c5e <_Z23getFont_verdana_40_4bppv+0x52>
 8004c26:	233f      	movs	r3, #63	; 0x3f
 8004c28:	9307      	str	r3, [sp, #28]
 8004c2a:	4b0f      	ldr	r3, [pc, #60]	; (8004c68 <_Z23getFont_verdana_40_4bppv+0x5c>)
 8004c2c:	9306      	str	r3, [sp, #24]
 8004c2e:	4b0f      	ldr	r3, [pc, #60]	; (8004c6c <_Z23getFont_verdana_40_4bppv+0x60>)
 8004c30:	490f      	ldr	r1, [pc, #60]	; (8004c70 <_Z23getFont_verdana_40_4bppv+0x64>)
 8004c32:	4810      	ldr	r0, [pc, #64]	; (8004c74 <_Z23getFont_verdana_40_4bppv+0x68>)
 8004c34:	9408      	str	r4, [sp, #32]
 8004c36:	e9cd 4304 	strd	r4, r3, [sp, #16]
 8004c3a:	2204      	movs	r2, #4
 8004c3c:	2301      	movs	r3, #1
 8004c3e:	e9cd 2301 	strd	r2, r3, [sp, #4]
 8004c42:	9300      	str	r3, [sp, #0]
 8004c44:	2205      	movs	r2, #5
 8004c46:	2328      	movs	r3, #40	; 0x28
 8004c48:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 8004c4c:	9403      	str	r4, [sp, #12]
 8004c4e:	f7fd fe55 	bl	80028fc <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8004c52:	4809      	ldr	r0, [pc, #36]	; (8004c78 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8004c54:	f01b fe1a 	bl	802088c <atexit>
 8004c58:	4628      	mov	r0, r5
 8004c5a:	f01b fd53 	bl	8020704 <__cxa_guard_release>
    return verdana_40_4bpp;
}
 8004c5e:	4805      	ldr	r0, [pc, #20]	; (8004c74 <_Z23getFont_verdana_40_4bppv+0x68>)
 8004c60:	b00d      	add	sp, #52	; 0x34
 8004c62:	bd30      	pop	{r4, r5, pc}
 8004c64:	20004750 	.word	0x20004750
 8004c68:	08025e18 	.word	0x08025e18
 8004c6c:	08025e34 	.word	0x08025e34
 8004c70:	08025d5c 	.word	0x08025d5c
 8004c74:	20004754 	.word	0x20004754
 8004c78:	08004c09 	.word	0x08004c09

08004c7c <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 8004c7c:	2000      	movs	r0, #0
 8004c7e:	4770      	bx	lr

08004c80 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 8004c80:	2000      	movs	r0, #0
 8004c82:	4770      	bx	lr

08004c84 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8004c84:	b40e      	push	{r1, r2, r3}
 8004c86:	b503      	push	{r0, r1, lr}
 8004c88:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8004c8a:	2100      	movs	r1, #0
{
 8004c8c:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 8004c90:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8004c92:	f00d f883 	bl	8011d9c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8004c96:	b002      	add	sp, #8
 8004c98:	f85d eb04 	ldr.w	lr, [sp], #4
 8004c9c:	b003      	add	sp, #12
 8004c9e:	4770      	bx	lr

08004ca0 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8004ca0:	b40c      	push	{r2, r3}
 8004ca2:	b507      	push	{r0, r1, r2, lr}
 8004ca4:	ab04      	add	r3, sp, #16
 8004ca6:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 8004caa:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8004cac:	f00d f876 	bl	8011d9c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8004cb0:	b003      	add	sp, #12
 8004cb2:	f85d eb04 	ldr.w	lr, [sp], #4
 8004cb6:	b002      	add	sp, #8
 8004cb8:	4770      	bx	lr
	...

08004cbc <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8004cbc:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 8004cbe:	b510      	push	{r4, lr}
 8004cc0:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 8004cc2:	b373      	cbz	r3, 8004d22 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        {
            return used == size;
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8004cc4:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 8004cc6:	b92b      	cbnz	r3, 8004cd4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8004cc8:	4b18      	ldr	r3, [pc, #96]	; (8004d2c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 8004cca:	4a19      	ldr	r2, [pc, #100]	; (8004d30 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 8004ccc:	21c0      	movs	r1, #192	; 0xc0
            return buffer[pos];
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 8004cce:	4819      	ldr	r0, [pc, #100]	; (8004d34 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8004cd0:	f01b fdbe 	bl	8020850 <__assert_func>
            return buffer[pos];
 8004cd4:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8004cd6:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8004cda:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 8004cdc:	b30b      	cbz	r3, 8004d22 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 8004cde:	f00e fbf6 	bl	80134ce <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 8004ce2:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8004ce4:	2b01      	cmp	r3, #1
 8004ce6:	d803      	bhi.n	8004cf0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8004ce8:	4b13      	ldr	r3, [pc, #76]	; (8004d38 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 8004cea:	4a14      	ldr	r2, [pc, #80]	; (8004d3c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8004cec:	21c5      	movs	r1, #197	; 0xc5
 8004cee:	e7ee      	b.n	8004cce <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 8004cf0:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8004cf2:	1c53      	adds	r3, r2, #1
 8004cf4:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 8004cf6:	2b09      	cmp	r3, #9
 8004cf8:	4619      	mov	r1, r3
 8004cfa:	bf88      	it	hi
 8004cfc:	f1a3 010a 	subhi.w	r1, r3, #10
 8004d00:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 8004d04:	f640 103f 	movw	r0, #2367	; 0x93f
 8004d08:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 8004d0a:	4281      	cmp	r1, r0
 8004d0c:	d109      	bne.n	8004d22 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 8004d0e:	2b0a      	cmp	r3, #10
 8004d10:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8004d14:	bf28      	it	cs
 8004d16:	2300      	movcs	r3, #0
        }
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8004d18:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 8004d1c:	8c50      	ldrh	r0, [r2, #34]	; 0x22
            buffer[index < size ? index : 0] = newChar;
 8004d1e:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 8004d20:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 8004d22:	4620      	mov	r0, r4
}
 8004d24:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8004d28:	f00e bad4 	b.w	80132d4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8004d2c:	080232ec 	.word	0x080232ec
 8004d30:	080232f5 	.word	0x080232f5
 8004d34:	080233a0 	.word	0x080233a0
 8004d38:	080233ea 	.word	0x080233ea
 8004d3c:	080233f8 	.word	0x080233f8

08004d40 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 8004d40:	f00e ba8f 	b.w	8013262 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08004d44 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8004d44:	b510      	push	{r4, lr}
 8004d46:	b086      	sub	sp, #24
 8004d48:	ac02      	add	r4, sp, #8
 8004d4a:	e884 0006 	stmia.w	r4, {r1, r2}
 8004d4e:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 8004d50:	ab0a      	add	r3, sp, #40	; 0x28
 8004d52:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8004d54:	9301      	str	r3, [sp, #4]
 8004d56:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004d58:	9300      	str	r3, [sp, #0]
 8004d5a:	4621      	mov	r1, r4
 8004d5c:	9b08      	ldr	r3, [sp, #32]
 8004d5e:	f00b fd22 	bl	80107a6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 8004d62:	b006      	add	sp, #24
 8004d64:	bd10      	pop	{r4, pc}
	...

08004d68 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8004d68:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8004d6a:	bb18      	cbnz	r0, 8004db4 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8004d6c:	4b12      	ldr	r3, [pc, #72]	; (8004db8 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 8004d6e:	4813      	ldr	r0, [pc, #76]	; (8004dbc <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8004d70:	681b      	ldr	r3, [r3, #0]
 8004d72:	4913      	ldr	r1, [pc, #76]	; (8004dc0 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8004d74:	b1b3      	cbz	r3, 8004da4 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8004d76:	681a      	ldr	r2, [r3, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8004d78:	689c      	ldr	r4, [r3, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8004d7a:	441a      	add	r2, r3
 8004d7c:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8004d7e:	685a      	ldr	r2, [r3, #4]
 8004d80:	441a      	add	r2, r3
 8004d82:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8004d84:	441c      	add	r4, r3
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 8004d86:	4b0f      	ldr	r3, [pc, #60]	; (8004dc4 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8004d88:	2200      	movs	r2, #0
 8004d8a:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8004d8c:	f000 f838 	bl	8004e00 <_ZN17TypedTextDatabase8getFontsEv>
 8004d90:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8004d92:	f000 f833 	bl	8004dfc <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 8004d96:	4b0c      	ldr	r3, [pc, #48]	; (8004dc8 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8004d98:	601c      	str	r4, [r3, #0]
        fonts = f;
 8004d9a:	4b0c      	ldr	r3, [pc, #48]	; (8004dcc <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8004d9c:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 8004d9e:	4b0c      	ldr	r3, [pc, #48]	; (8004dd0 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8004da0:	8018      	strh	r0, [r3, #0]
    }
}
 8004da2:	e007      	b.n	8004db4 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 8004da4:	4b0b      	ldr	r3, [pc, #44]	; (8004dd4 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 8004da6:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8004da8:	4b0b      	ldr	r3, [pc, #44]	; (8004dd8 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 8004daa:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8004dac:	4b0b      	ldr	r3, [pc, #44]	; (8004ddc <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 8004dae:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8004db0:	2c00      	cmp	r4, #0
 8004db2:	d1e8      	bne.n	8004d86 <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8004db4:	bd38      	pop	{r3, r4, r5, pc}
 8004db6:	bf00      	nop
 8004db8:	2000477c 	.word	0x2000477c
 8004dbc:	20004780 	.word	0x20004780
 8004dc0:	20004784 	.word	0x20004784
 8004dc4:	20004788 	.word	0x20004788
 8004dc8:	20015610 	.word	0x20015610
 8004dcc:	20015618 	.word	0x20015618
 8004dd0:	20015614 	.word	0x20015614
 8004dd4:	08025e8c 	.word	0x08025e8c
 8004dd8:	08025e38 	.word	0x08025e38
 8004ddc:	08026058 	.word	0x08026058

08004de0 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8004de0:	4b04      	ldr	r3, [pc, #16]	; (8004df4 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 8004de2:	681b      	ldr	r3, [r3, #0]
 8004de4:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8004de8:	4b03      	ldr	r3, [pc, #12]	; (8004df8 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 8004dea:	681b      	ldr	r3, [r3, #0]
}
 8004dec:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8004df0:	4770      	bx	lr
 8004df2:	bf00      	nop
 8004df4:	20004784 	.word	0x20004784
 8004df8:	20004780 	.word	0x20004780

08004dfc <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 8004dfc:	2015      	movs	r0, #21
 8004dfe:	4770      	bx	lr

08004e00 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8004e00:	4800      	ldr	r0, [pc, #0]	; (8004e04 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 8004e02:	4770      	bx	lr
 8004e04:	2000478c 	.word	0x2000478c

08004e08 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8004e08:	b510      	push	{r4, lr}
    &(getFont_verdana_15_4bpp()),
 8004e0a:	f7ff fec3 	bl	8004b94 <_Z23getFont_verdana_15_4bppv>
};
 8004e0e:	4c04      	ldr	r4, [pc, #16]	; (8004e20 <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
 8004e10:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 8004e12:	f7ff fefb 	bl	8004c0c <_Z23getFont_verdana_40_4bppv>
};
 8004e16:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp())
 8004e18:	f7ff fe80 	bl	8004b1c <_Z23getFont_verdana_10_4bppv>
};
 8004e1c:	60a0      	str	r0, [r4, #8]
} // namespace TypedTextDatabase
 8004e1e:	bd10      	pop	{r4, pc}
 8004e20:	2000478c 	.word	0x2000478c

08004e24 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8004e24:	4770      	bx	lr

08004e26 <_ZN19FrontendApplicationD0Ev>:
 8004e26:	b510      	push	{r4, lr}
 8004e28:	f44f 71ac 	mov.w	r1, #344	; 0x158
 8004e2c:	4604      	mov	r4, r0
 8004e2e:	f01b fc5b 	bl	80206e8 <_ZdlPvj>
 8004e32:	4620      	mov	r0, r4
 8004e34:	bd10      	pop	{r4, pc}

08004e36 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8004e36:	b510      	push	{r4, lr}
 8004e38:	4604      	mov	r4, r0
    {
        model.tick();
 8004e3a:	f8d0 0154 	ldr.w	r0, [r0, #340]	; 0x154
 8004e3e:	f000 f813 	bl	8004e68 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 8004e42:	4620      	mov	r0, r4
    }
 8004e44:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 8004e48:	f00c b826 	b.w	8010e98 <_ZN8touchgfx11Application15handleTickEventEv>

08004e4c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8004e4c:	b510      	push	{r4, lr}
 8004e4e:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 8004e50:	f7fd fcd6 	bl	8002800 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8004e54:	4b01      	ldr	r3, [pc, #4]	; (8004e5c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 8004e56:	6023      	str	r3, [r4, #0]
{

}
 8004e58:	4620      	mov	r0, r4
 8004e5a:	bd10      	pop	{r4, pc}
 8004e5c:	080234d4 	.word	0x080234d4

08004e60 <_ZN5ModelC1Ev>:
extern LadowarkaStruct ladowarka;
#endif
int PradLadowania=400; //Set default charging curretn to 400mA
int licznik;
int ChargingTime=10; //Set default charging time to 10hrs
Model::Model() : modelListener(0)
 8004e60:	2200      	movs	r2, #0
 8004e62:	6002      	str	r2, [r0, #0]
{

}
 8004e64:	4770      	bx	lr
	...

08004e68 <_ZN5Model4tickEv>:

void Model::tick()
{
 8004e68:	b570      	push	{r4, r5, r6, lr}
 8004e6a:	4604      	mov	r4, r0
//	if (licznik>1000 )licznik =0;
//
//	if (licznik%100) modelListener->UpdateBatteryVoltage();

/************* UPDATE BATT VOLTAGE ON GRAPH *********************/
modelListener->UpdateBatteryVoltage();
 8004e6c:	6800      	ldr	r0, [r0, #0]

#ifndef SIMULATOR

if(ladowarka.narysujPunktNaWykresie){
 8004e6e:	4d21      	ldr	r5, [pc, #132]	; (8004ef4 <_ZN5Model4tickEv+0x8c>)
modelListener->UpdateBatteryVoltage();
 8004e70:	6803      	ldr	r3, [r0, #0]
 8004e72:	689b      	ldr	r3, [r3, #8]
 8004e74:	4798      	blx	r3
if(ladowarka.narysujPunktNaWykresie){
 8004e76:	f8d5 3a70 	ldr.w	r3, [r5, #2672]	; 0xa70
 8004e7a:	b173      	cbz	r3, 8004e9a <_ZN5Model4tickEv+0x32>
	if (ladowarka.CzsasLadowaniaWSec==1)	modelListener->DrawPoint(); //dodanie jednego extra punktu bo zaczynamy od 0
 8004e7c:	f8d5 3a78 	ldr.w	r3, [r5, #2680]	; 0xa78
 8004e80:	2b01      	cmp	r3, #1
 8004e82:	d103      	bne.n	8004e8c <_ZN5Model4tickEv+0x24>
 8004e84:	6820      	ldr	r0, [r4, #0]
 8004e86:	6803      	ldr	r3, [r0, #0]
 8004e88:	68db      	ldr	r3, [r3, #12]
 8004e8a:	4798      	blx	r3
	modelListener->DrawPoint();
 8004e8c:	6820      	ldr	r0, [r4, #0]
 8004e8e:	6803      	ldr	r3, [r0, #0]
 8004e90:	68db      	ldr	r3, [r3, #12]
 8004e92:	4798      	blx	r3
	ladowarka.narysujPunktNaWykresie=0;
 8004e94:	2300      	movs	r3, #0
 8004e96:	f8c5 3a70 	str.w	r3, [r5, #2672]	; 0xa70
}

if (ladowarka.narysujPunktNaWykresieMin){
 8004e9a:	f8d5 3a74 	ldr.w	r3, [r5, #2676]	; 0xa74
 8004e9e:	b133      	cbz	r3, 8004eae <_ZN5Model4tickEv+0x46>
	modelListener->DrawPointMin();
 8004ea0:	6820      	ldr	r0, [r4, #0]
 8004ea2:	6803      	ldr	r3, [r0, #0]
 8004ea4:	691b      	ldr	r3, [r3, #16]
 8004ea6:	4798      	blx	r3
	ladowarka.narysujPunktNaWykresieMin=0;
 8004ea8:	2300      	movs	r3, #0
 8004eaa:	f8c5 3a74 	str.w	r3, [r5, #2676]	; 0xa74

}


if((ladowarka.CzsasLadowaniaWSec>=ladowarka.ChargingTime*60*60) && (ladowarka.ChargingCompleted==0) && ladowarka.ChargeStarted==1){  //*60*60//jesli czas ladowania jest wiekszy niz ustawiony pokaz modala
 8004eae:	f8d5 2a78 	ldr.w	r2, [r5, #2680]	; 0xa78
 8004eb2:	68eb      	ldr	r3, [r5, #12]
 8004eb4:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8004eb8:	434b      	muls	r3, r1
 8004eba:	429a      	cmp	r2, r3
 8004ebc:	db0b      	blt.n	8004ed6 <_ZN5Model4tickEv+0x6e>
 8004ebe:	f8d5 3a80 	ldr.w	r3, [r5, #2688]	; 0xa80
 8004ec2:	b943      	cbnz	r3, 8004ed6 <_ZN5Model4tickEv+0x6e>
 8004ec4:	692e      	ldr	r6, [r5, #16]
 8004ec6:	2e01      	cmp	r6, #1
 8004ec8:	d105      	bne.n	8004ed6 <_ZN5Model4tickEv+0x6e>
	modelListener->DisplayChargingFinished();
 8004eca:	6820      	ldr	r0, [r4, #0]
 8004ecc:	6803      	ldr	r3, [r0, #0]
 8004ece:	6a1b      	ldr	r3, [r3, #32]
 8004ed0:	4798      	blx	r3
	ladowarka.ChargingCompleted=1;
 8004ed2:	f8c5 6a80 	str.w	r6, [r5, #2688]	; 0xa80
}
#endif

/*************** Update min/max value **************************/
modelListener->DisplayLastAndMaxVlt();
 8004ed6:	6820      	ldr	r0, [r4, #0]
 8004ed8:	6803      	ldr	r3, [r0, #0]
 8004eda:	695b      	ldr	r3, [r3, #20]
 8004edc:	4798      	blx	r3
/*************** Update Runningn Time value **************************/
modelListener->DisplayRunningTime();
 8004ede:	6820      	ldr	r0, [r4, #0]
 8004ee0:	6803      	ldr	r3, [r0, #0]
 8004ee2:	699b      	ldr	r3, [r3, #24]
 8004ee4:	4798      	blx	r3
/*************** Update Charging current value **************************/
modelListener->DisplayCurrentValue();
 8004ee6:	6820      	ldr	r0, [r4, #0]
 8004ee8:	6803      	ldr	r3, [r0, #0]
}
 8004eea:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
modelListener->DisplayCurrentValue();
 8004eee:	69db      	ldr	r3, [r3, #28]
 8004ef0:	4718      	bx	r3
 8004ef2:	bf00      	nop
 8004ef4:	20003c14 	.word	0x20003c14

08004ef8 <_ZN13ModelListener9DrawPointEv>:
    virtual void DrawPoint () {};
 8004ef8:	4770      	bx	lr

08004efa <_ZN13ModelListener12DrawPointMinEv>:
    virtual void DrawPointMin () {};
 8004efa:	4770      	bx	lr

08004efc <_ZN13ModelListener20DisplayLastAndMaxVltEv>:
    virtual void DisplayLastAndMaxVlt() {} ;
 8004efc:	4770      	bx	lr

08004efe <_ZN13ModelListener18DisplayRunningTimeEv>:
    virtual void DisplayRunningTime() {} ;
 8004efe:	4770      	bx	lr

08004f00 <_ZN13ModelListener19DisplayCurrentValueEv>:
    virtual void DisplayCurrentValue() {};
 8004f00:	4770      	bx	lr

08004f02 <_ZN13ModelListener23DisplayChargingFinishedEv>:
    virtual void DisplayChargingFinished() {};
 8004f02:	4770      	bx	lr

08004f04 <_ZN16Screen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen1Presenter() {};
 8004f04:	4770      	bx	lr

08004f06 <_ZThn4_N16Screen1PresenterD1Ev>:
 8004f06:	3804      	subs	r0, #4
 8004f08:	4770      	bx	lr

08004f0a <_ZN16Screen1Presenter10deactivateEv>:
}

void Screen1Presenter::activate()
{

}
 8004f0a:	4770      	bx	lr

08004f0c <_ZN16Screen1Presenter20UpdateBatteryVoltageEv>:
{

}

void Screen1Presenter:: UpdateBatteryVoltage(){
view.DisplayBatteryVoltage();
 8004f0c:	68c0      	ldr	r0, [r0, #12]
 8004f0e:	6803      	ldr	r3, [r0, #0]
 8004f10:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004f12:	4718      	bx	r3

08004f14 <_ZThn4_N16Screen1Presenter20UpdateBatteryVoltageEv>:
    virtual void UpdateBatteryVoltage();
 8004f14:	f1a0 0004 	sub.w	r0, r0, #4
 8004f18:	f7ff bff8 	b.w	8004f0c <_ZN16Screen1Presenter20UpdateBatteryVoltageEv>

08004f1c <_ZN16Screen1PresenterD0Ev>:
    virtual ~Screen1Presenter() {};
 8004f1c:	b510      	push	{r4, lr}
 8004f1e:	2110      	movs	r1, #16
 8004f20:	4604      	mov	r4, r0
 8004f22:	f01b fbe1 	bl	80206e8 <_ZdlPvj>
 8004f26:	4620      	mov	r0, r4
 8004f28:	bd10      	pop	{r4, pc}

08004f2a <_ZThn4_N16Screen1PresenterD0Ev>:
 8004f2a:	f1a0 0004 	sub.w	r0, r0, #4
 8004f2e:	e7f5      	b.n	8004f1c <_ZN16Screen1PresenterD0Ev>

08004f30 <_ZN16Screen1PresenterC1ER11Screen1View>:
Screen1Presenter::Screen1Presenter(Screen1View& v)
 8004f30:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 8004f32:	2200      	movs	r2, #0
 8004f34:	6082      	str	r2, [r0, #8]
    : view(v)
 8004f36:	4a04      	ldr	r2, [pc, #16]	; (8004f48 <_ZN16Screen1PresenterC1ER11Screen1View+0x18>)
 8004f38:	60c1      	str	r1, [r0, #12]
 8004f3a:	f102 0408 	add.w	r4, r2, #8
 8004f3e:	3224      	adds	r2, #36	; 0x24
 8004f40:	6004      	str	r4, [r0, #0]
 8004f42:	6042      	str	r2, [r0, #4]
}
 8004f44:	bd10      	pop	{r4, pc}
 8004f46:	bf00      	nop
 8004f48:	08023518 	.word	0x08023518

08004f4c <_ZN11Screen1ViewD1Ev>:
#include <gui/screen1_screen/Screen1Presenter.hpp>
class Screen1View : public Screen1ViewBase
{
public:
    Screen1View();
    virtual ~Screen1View() {}
 8004f4c:	4770      	bx	lr

08004f4e <_ZN11Screen1View14tearDownScreenEv>:
}

void Screen1View::tearDownScreen()
{
    Screen1ViewBase::tearDownScreen();
}
 8004f4e:	4770      	bx	lr

08004f50 <_ZN11Screen1View18ButtonStartClickedEv>:
}

void Screen1View::ButtonStartClicked()
{
#ifndef SIMULATOR
 ladowarka.LoadingCurrent=PradLadowania;
 8004f50:	4b04      	ldr	r3, [pc, #16]	; (8004f64 <_ZN11Screen1View18ButtonStartClickedEv+0x14>)
 8004f52:	681a      	ldr	r2, [r3, #0]
 8004f54:	4b04      	ldr	r3, [pc, #16]	; (8004f68 <_ZN11Screen1View18ButtonStartClickedEv+0x18>)
 8004f56:	609a      	str	r2, [r3, #8]
 ladowarka.ChargeStarted=1;
 8004f58:	2201      	movs	r2, #1
 8004f5a:	611a      	str	r2, [r3, #16]
 ladowarka.ChargingTime=ChargingTime;
 8004f5c:	4a03      	ldr	r2, [pc, #12]	; (8004f6c <_ZN11Screen1View18ButtonStartClickedEv+0x1c>)
 8004f5e:	6812      	ldr	r2, [r2, #0]
 8004f60:	60da      	str	r2, [r3, #12]
#endif
}
 8004f62:	4770      	bx	lr
 8004f64:	20000018 	.word	0x20000018
 8004f68:	20003c14 	.word	0x20003c14
 8004f6c:	20000014 	.word	0x20000014

08004f70 <_ZN11Screen1View15ButtonUpClickedEv>:
	PradLadowania=PradLadowania+100;
 8004f70:	4b0b      	ldr	r3, [pc, #44]	; (8004fa0 <_ZN11Screen1View15ButtonUpClickedEv+0x30>)
 8004f72:	681a      	ldr	r2, [r3, #0]
{
 8004f74:	b510      	push	{r4, lr}
	PradLadowania=PradLadowania+100;
 8004f76:	3264      	adds	r2, #100	; 0x64
	if (PradLadowania >400){
 8004f78:	f5b2 7fc8 	cmp.w	r2, #400	; 0x190
	PradLadowania=400;}
 8004f7c:	bfc8      	it	gt
 8004f7e:	f44f 72c8 	movgt.w	r2, #400	; 0x190
 8004f82:	601a      	str	r2, [r3, #0]
{
 8004f84:	4604      	mov	r4, r0
	Unicode::snprintf(txtPradLadowaniaBuffer,TXTPRADLADOWANIA_SIZE,"%d",PradLadowania);
 8004f86:	681b      	ldr	r3, [r3, #0]
 8004f88:	4a06      	ldr	r2, [pc, #24]	; (8004fa4 <_ZN11Screen1View15ButtonUpClickedEv+0x34>)
 8004f8a:	210a      	movs	r1, #10
 8004f8c:	f500 60b8 	add.w	r0, r0, #1472	; 0x5c0
 8004f90:	f00f f84c 	bl	801402c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	txtPradLadowania.invalidate();
 8004f94:	f504 7017 	add.w	r0, r4, #604	; 0x25c
}
 8004f98:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	txtPradLadowania.invalidate();
 8004f9c:	f00d b81f 	b.w	8011fde <_ZNK8touchgfx8Drawable10invalidateEv>
 8004fa0:	20000018 	.word	0x20000018
 8004fa4:	08023560 	.word	0x08023560

08004fa8 <_ZN11Screen1View17ButtonDownClickedEv>:
	PradLadowania=PradLadowania-100;
 8004fa8:	4b0a      	ldr	r3, [pc, #40]	; (8004fd4 <_ZN11Screen1View17ButtonDownClickedEv+0x2c>)
 8004faa:	681a      	ldr	r2, [r3, #0]
{
 8004fac:	b510      	push	{r4, lr}
	PradLadowania=PradLadowania-100;
 8004fae:	3a64      	subs	r2, #100	; 0x64
    if (PradLadowania <100){
 8004fb0:	2a63      	cmp	r2, #99	; 0x63
	PradLadowania=100;}
 8004fb2:	bfd8      	it	le
 8004fb4:	2264      	movle	r2, #100	; 0x64
 8004fb6:	601a      	str	r2, [r3, #0]
{
 8004fb8:	4604      	mov	r4, r0
	Unicode::snprintf(txtPradLadowaniaBuffer,TXTPRADLADOWANIA_SIZE,"%d",PradLadowania);
 8004fba:	681b      	ldr	r3, [r3, #0]
 8004fbc:	4a06      	ldr	r2, [pc, #24]	; (8004fd8 <_ZN11Screen1View17ButtonDownClickedEv+0x30>)
 8004fbe:	210a      	movs	r1, #10
 8004fc0:	f500 60b8 	add.w	r0, r0, #1472	; 0x5c0
 8004fc4:	f00f f832 	bl	801402c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	txtPradLadowania.invalidate();
 8004fc8:	f504 7017 	add.w	r0, r4, #604	; 0x25c
}
 8004fcc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	txtPradLadowania.invalidate();
 8004fd0:	f00d b805 	b.w	8011fde <_ZNK8touchgfx8Drawable10invalidateEv>
 8004fd4:	20000018 	.word	0x20000018
 8004fd8:	08023560 	.word	0x08023560

08004fdc <_ZN11Screen1View19ButtonUpTimeClickedEv>:
	ChargingTime=ChargingTime+1;
 8004fdc:	4b0a      	ldr	r3, [pc, #40]	; (8005008 <_ZN11Screen1View19ButtonUpTimeClickedEv+0x2c>)
 8004fde:	681a      	ldr	r2, [r3, #0]
{
 8004fe0:	b510      	push	{r4, lr}
	ChargingTime=ChargingTime+1;
 8004fe2:	3201      	adds	r2, #1
	if (ChargingTime >10){
 8004fe4:	2a0a      	cmp	r2, #10
		ChargingTime=10;}
 8004fe6:	bfc8      	it	gt
 8004fe8:	220a      	movgt	r2, #10
 8004fea:	601a      	str	r2, [r3, #0]
{
 8004fec:	4604      	mov	r4, r0
	Unicode::snprintf(txtChargingTimeBuffer,TXTCHARGINGTIME_SIZE,"%d",ChargingTime);
 8004fee:	681b      	ldr	r3, [r3, #0]
 8004ff0:	4a06      	ldr	r2, [pc, #24]	; (800500c <_ZN11Screen1View19ButtonUpTimeClickedEv+0x30>)
 8004ff2:	2103      	movs	r1, #3
 8004ff4:	f500 60bd 	add.w	r0, r0, #1512	; 0x5e8
 8004ff8:	f00f f818 	bl	801402c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	txtChargingTime.invalidate();
 8004ffc:	f204 5074 	addw	r0, r4, #1396	; 0x574
}
 8005000:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	txtChargingTime.invalidate();
 8005004:	f00c bfeb 	b.w	8011fde <_ZNK8touchgfx8Drawable10invalidateEv>
 8005008:	20000014 	.word	0x20000014
 800500c:	08023560 	.word	0x08023560

08005010 <_ZN11Screen1View21ButtonDownTimeClickedEv>:
	ChargingTime=ChargingTime-1;
 8005010:	4b0a      	ldr	r3, [pc, #40]	; (800503c <_ZN11Screen1View21ButtonDownTimeClickedEv+0x2c>)
 8005012:	681a      	ldr	r2, [r3, #0]
{
 8005014:	b510      	push	{r4, lr}
	ChargingTime=ChargingTime-1;
 8005016:	3a01      	subs	r2, #1
    if (ChargingTime <1){
 8005018:	2a00      	cmp	r2, #0
    	ChargingTime=1;}
 800501a:	bfd8      	it	le
 800501c:	2201      	movle	r2, #1
 800501e:	601a      	str	r2, [r3, #0]
{
 8005020:	4604      	mov	r4, r0
	Unicode::snprintf(txtChargingTimeBuffer,TXTCHARGINGTIME_SIZE,"%d",ChargingTime);
 8005022:	681b      	ldr	r3, [r3, #0]
 8005024:	4a06      	ldr	r2, [pc, #24]	; (8005040 <_ZN11Screen1View21ButtonDownTimeClickedEv+0x30>)
 8005026:	2103      	movs	r1, #3
 8005028:	f500 60bd 	add.w	r0, r0, #1512	; 0x5e8
 800502c:	f00e fffe 	bl	801402c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	txtChargingTime.invalidate();
 8005030:	f204 5074 	addw	r0, r4, #1396	; 0x574
}
 8005034:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	txtChargingTime.invalidate();
 8005038:	f00c bfd1 	b.w	8011fde <_ZNK8touchgfx8Drawable10invalidateEv>
 800503c:	20000014 	.word	0x20000014
 8005040:	08023560 	.word	0x08023560

08005044 <_ZN11Screen1View11setupScreenEv>:
    Screen1ViewBase::setupScreen();
 8005044:	f7fd bccf 	b.w	80029e6 <_ZN15Screen1ViewBase11setupScreenEv>

08005048 <_ZN11Screen1View21DisplayBatteryVoltageEv>:
void Screen1View::DisplayBatteryVoltage(){
 8005048:	b513      	push	{r0, r1, r4, lr}
	Unicode::snprintfFloat(txtNapiecieBateriiBuffer,TXTNAPIECIEBATERII_SIZE,"%.3f",ladowarka.BatteryVoltage);
 800504a:	4b09      	ldr	r3, [pc, #36]	; (8005070 <_ZN11Screen1View21DisplayBatteryVoltageEv+0x28>)
     *
     * @see snprintf, snprintfFloats
     */
    static UnicodeChar* snprintfFloat(UnicodeChar* dst, uint16_t dstSize, const char* format, const float value)
    {
        return snprintfFloats(dst, dstSize, format, &value);
 800504c:	4a09      	ldr	r2, [pc, #36]	; (8005074 <_ZN11Screen1View21DisplayBatteryVoltageEv+0x2c>)
 800504e:	681b      	ldr	r3, [r3, #0]
 8005050:	9301      	str	r3, [sp, #4]
void Screen1View::DisplayBatteryVoltage(){
 8005052:	4604      	mov	r4, r0
 8005054:	ab01      	add	r3, sp, #4
 8005056:	210a      	movs	r1, #10
 8005058:	f200 50d4 	addw	r0, r0, #1492	; 0x5d4
 800505c:	f00f f9a2 	bl	80143a4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	txtNapiecieBaterii.invalidate();
 8005060:	f504 7059 	add.w	r0, r4, #868	; 0x364
}
 8005064:	b002      	add	sp, #8
 8005066:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	txtNapiecieBaterii.invalidate();
 800506a:	f00c bfb8 	b.w	8011fde <_ZNK8touchgfx8Drawable10invalidateEv>
 800506e:	bf00      	nop
 8005070:	20003c14 	.word	0x20003c14
 8005074:	08023563 	.word	0x08023563

08005078 <_ZN11Screen1ViewD0Ev>:
 8005078:	b510      	push	{r4, lr}
 800507a:	f44f 61c2 	mov.w	r1, #1552	; 0x610
 800507e:	4604      	mov	r4, r0
 8005080:	f01b fb32 	bl	80206e8 <_ZdlPvj>
 8005084:	4620      	mov	r0, r4
 8005086:	bd10      	pop	{r4, pc}

08005088 <_ZN11Screen1ViewC1Ev>:
Screen1View::Screen1View()
 8005088:	b510      	push	{r4, lr}
 800508a:	4604      	mov	r4, r0
 800508c:	f7fd ff32 	bl	8002ef4 <_ZN15Screen1ViewBaseC1Ev>
 8005090:	4b07      	ldr	r3, [pc, #28]	; (80050b0 <_ZN11Screen1ViewC1Ev+0x28>)
 8005092:	6023      	str	r3, [r4, #0]
Unicode::snprintf(txtPradLadowaniaBuffer,TXTPRADLADOWANIA_SIZE,"%d",PradLadowania);
 8005094:	4b07      	ldr	r3, [pc, #28]	; (80050b4 <_ZN11Screen1ViewC1Ev+0x2c>)
 8005096:	4a08      	ldr	r2, [pc, #32]	; (80050b8 <_ZN11Screen1ViewC1Ev+0x30>)
 8005098:	681b      	ldr	r3, [r3, #0]
 800509a:	210a      	movs	r1, #10
 800509c:	f504 60b8 	add.w	r0, r4, #1472	; 0x5c0
 80050a0:	f00e ffc4 	bl	801402c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	txtPradLadowania.invalidate();
 80050a4:	f504 7017 	add.w	r0, r4, #604	; 0x25c
 80050a8:	f00c ff99 	bl	8011fde <_ZNK8touchgfx8Drawable10invalidateEv>
}
 80050ac:	4620      	mov	r0, r4
 80050ae:	bd10      	pop	{r4, pc}
 80050b0:	08023570 	.word	0x08023570
 80050b4:	20000018 	.word	0x20000018
 80050b8:	08023560 	.word	0x08023560

080050bc <_ZN13ModelListener20UpdateBatteryVoltageEv>:
    virtual void UpdateBatteryVoltage () {};
 80050bc:	4770      	bx	lr

080050be <_ZN20ScreenGraphPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~ScreenGraphPresenter() {};
 80050be:	4770      	bx	lr

080050c0 <_ZThn4_N20ScreenGraphPresenterD1Ev>:
 80050c0:	3804      	subs	r0, #4
 80050c2:	4770      	bx	lr

080050c4 <_ZN20ScreenGraphPresenter10deactivateEv>:
}

void ScreenGraphPresenter::activate()
{

}
 80050c4:	4770      	bx	lr

080050c6 <_ZN20ScreenGraphPresenter9DrawPointEv>:
{

}
void ScreenGraphPresenter::DrawPoint()
{
	view.DrawPoint2();
 80050c6:	68c0      	ldr	r0, [r0, #12]
 80050c8:	6803      	ldr	r3, [r0, #0]
 80050ca:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80050cc:	4718      	bx	r3

080050ce <_ZThn4_N20ScreenGraphPresenter9DrawPointEv>:
    virtual void DrawPoint();
 80050ce:	f1a0 0004 	sub.w	r0, r0, #4
 80050d2:	f7ff bff8 	b.w	80050c6 <_ZN20ScreenGraphPresenter9DrawPointEv>

080050d6 <_ZN20ScreenGraphPresenter12DrawPointMinEv>:
}
void ScreenGraphPresenter::DrawPointMin()
{
	view.DrawPoint2Min();
 80050d6:	68c0      	ldr	r0, [r0, #12]
 80050d8:	6803      	ldr	r3, [r0, #0]
 80050da:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80050dc:	4718      	bx	r3

080050de <_ZThn4_N20ScreenGraphPresenter12DrawPointMinEv>:
    virtual void DrawPointMin();
 80050de:	f1a0 0004 	sub.w	r0, r0, #4
 80050e2:	f7ff bff8 	b.w	80050d6 <_ZN20ScreenGraphPresenter12DrawPointMinEv>

080050e6 <_ZN20ScreenGraphPresenter20DisplayLastAndMaxVltEv>:
}
void ScreenGraphPresenter::DisplayLastAndMaxVlt()
{
	view.DisplayLastAndMaxVlt2();
 80050e6:	68c0      	ldr	r0, [r0, #12]
 80050e8:	6803      	ldr	r3, [r0, #0]
 80050ea:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80050ec:	4718      	bx	r3

080050ee <_ZThn4_N20ScreenGraphPresenter20DisplayLastAndMaxVltEv>:
    virtual void DisplayLastAndMaxVlt();
 80050ee:	f1a0 0004 	sub.w	r0, r0, #4
 80050f2:	f7ff bff8 	b.w	80050e6 <_ZN20ScreenGraphPresenter20DisplayLastAndMaxVltEv>

080050f6 <_ZN20ScreenGraphPresenter18DisplayRunningTimeEv>:
}
void ScreenGraphPresenter::DisplayRunningTime()
{
	view.DisplayRunningTime2();
 80050f6:	68c0      	ldr	r0, [r0, #12]
 80050f8:	6803      	ldr	r3, [r0, #0]
 80050fa:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80050fc:	4718      	bx	r3

080050fe <_ZThn4_N20ScreenGraphPresenter18DisplayRunningTimeEv>:
    virtual void DisplayRunningTime();
 80050fe:	f1a0 0004 	sub.w	r0, r0, #4
 8005102:	f7ff bff8 	b.w	80050f6 <_ZN20ScreenGraphPresenter18DisplayRunningTimeEv>

08005106 <_ZN20ScreenGraphPresenter19DisplayCurrentValueEv>:
}
void ScreenGraphPresenter::DisplayCurrentValue()
{
	view.DisplayCurrentValue2();
 8005106:	68c0      	ldr	r0, [r0, #12]
 8005108:	6803      	ldr	r3, [r0, #0]
 800510a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800510c:	4718      	bx	r3

0800510e <_ZThn4_N20ScreenGraphPresenter19DisplayCurrentValueEv>:
    virtual void DisplayCurrentValue();
 800510e:	f1a0 0004 	sub.w	r0, r0, #4
 8005112:	f7ff bff8 	b.w	8005106 <_ZN20ScreenGraphPresenter19DisplayCurrentValueEv>

08005116 <_ZN20ScreenGraphPresenter23DisplayChargingFinishedEv>:
}
void ScreenGraphPresenter::DisplayChargingFinished()
{
	view.DisplayChargingFinished2();
 8005116:	68c0      	ldr	r0, [r0, #12]
 8005118:	6803      	ldr	r3, [r0, #0]
 800511a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800511c:	4718      	bx	r3

0800511e <_ZThn4_N20ScreenGraphPresenter23DisplayChargingFinishedEv>:
    virtual void DisplayChargingFinished();
 800511e:	f1a0 0004 	sub.w	r0, r0, #4
 8005122:	f7ff bff8 	b.w	8005116 <_ZN20ScreenGraphPresenter23DisplayChargingFinishedEv>

08005126 <_ZN20ScreenGraphPresenterD0Ev>:
    virtual ~ScreenGraphPresenter() {};
 8005126:	b510      	push	{r4, lr}
 8005128:	2110      	movs	r1, #16
 800512a:	4604      	mov	r4, r0
 800512c:	f01b fadc 	bl	80206e8 <_ZdlPvj>
 8005130:	4620      	mov	r0, r4
 8005132:	bd10      	pop	{r4, pc}

08005134 <_ZThn4_N20ScreenGraphPresenterD0Ev>:
 8005134:	f1a0 0004 	sub.w	r0, r0, #4
 8005138:	e7f5      	b.n	8005126 <_ZN20ScreenGraphPresenterD0Ev>
	...

0800513c <_ZN20ScreenGraphPresenterC1ER15ScreenGraphView>:
ScreenGraphPresenter::ScreenGraphPresenter(ScreenGraphView& v)
 800513c:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 800513e:	2200      	movs	r2, #0
 8005140:	6082      	str	r2, [r0, #8]
    : view(v)
 8005142:	4a04      	ldr	r2, [pc, #16]	; (8005154 <_ZN20ScreenGraphPresenterC1ER15ScreenGraphView+0x18>)
 8005144:	60c1      	str	r1, [r0, #12]
 8005146:	f102 0408 	add.w	r4, r2, #8
 800514a:	3238      	adds	r2, #56	; 0x38
 800514c:	6004      	str	r4, [r0, #0]
 800514e:	6042      	str	r2, [r0, #4]
}
 8005150:	bd10      	pop	{r4, pc}
 8005152:	bf00      	nop
 8005154:	080235b4 	.word	0x080235b4

08005158 <_ZN15ScreenGraphViewD1Ev>:

class ScreenGraphView : public ScreenGraphViewBase
{
public:
    ScreenGraphView();
    virtual ~ScreenGraphView() {}
 8005158:	4770      	bx	lr

0800515a <_ZN15ScreenGraphView14tearDownScreenEv>:
}

void ScreenGraphView::tearDownScreen()
{
    ScreenGraphViewBase::tearDownScreen();
}
 800515a:	4770      	bx	lr

0800515c <_ZN15ScreenGraphView24DisplayChargingFinished2Ev>:
 800515c:	f500 5380 	add.w	r3, r0, #4096	; 0x1000
 8005160:	2201      	movs	r2, #1
#endif
}

void ScreenGraphView::DisplayChargingFinished2(){
	modalWindow1.setVisible(true);
	modalWindow1.invalidate();
 8005162:	f500 5096 	add.w	r0, r0, #4800	; 0x12c0
 8005166:	f883 22fd 	strb.w	r2, [r3, #765]	; 0x2fd
 800516a:	3018      	adds	r0, #24
 800516c:	f00c bf37 	b.w	8011fde <_ZNK8touchgfx8Drawable10invalidateEv>

08005170 <_ZN15ScreenGraphView8countMinEv>:
	Unicode::snprintf(textChargingTmeBuffer,TEXTCHARGINGTME_SIZE,"%02d:%02d:%02d\n",h,m,s);
	textChargingTme.invalidate();
#endif
}

float ScreenGraphView::countMin(){
 8005170:	b508      	push	{r3, lr}
#ifndef SIMULATOR
	float results= ladowarka.PomiaryCoSec[0]; //domyslna wartocs
 8005172:	4915      	ldr	r1, [pc, #84]	; (80051c8 <_ZN15ScreenGraphView8countMinEv+0x58>)
float ScreenGraphView::countMin(){
 8005174:	ed2d 8b02 	vpush	{d8}
	float results= ladowarka.PomiaryCoSec[0]; //domyslna wartocs
 8005178:	ed91 0a00 	vldr	s0, [r1]
	for (int i=0;i<59;i++){
 800517c:	2200      	movs	r2, #0
		if ((ladowarka.PomiaryCoSec[i] < results) && ladowarka.PomiaryCoSec[i]!=0)  results=ladowarka.PomiaryCoSec[i];
 800517e:	f6a1 1178 	subw	r1, r1, #2424	; 0x978
 8005182:	f202 235e 	addw	r3, r2, #606	; 0x25e
 8005186:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 800518a:	edd3 7a00 	vldr	s15, [r3]
 800518e:	eef4 7ac0 	vcmpe.f32	s15, s0
 8005192:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005196:	d508      	bpl.n	80051aa <_ZN15ScreenGraphView8countMinEv+0x3a>
 8005198:	edd3 7a00 	vldr	s15, [r3]
 800519c:	eef5 7a40 	vcmp.f32	s15, #0.0
 80051a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80051a4:	bf18      	it	ne
 80051a6:	ed93 0a00 	vldrne	s0, [r3]
	for (int i=0;i<59;i++){
 80051aa:	3201      	adds	r2, #1
 80051ac:	2a3b      	cmp	r2, #59	; 0x3b
 80051ae:	d1e8      	bne.n	8005182 <_ZN15ScreenGraphView8countMinEv+0x12>
	}

	return (floor(results*100)/100);
 80051b0:	ed9f 8a06 	vldr	s16, [pc, #24]	; 80051cc <_ZN15ScreenGraphView8countMinEv+0x5c>
  using ::floor;

#ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  inline _GLIBCXX_CONSTEXPR float
  floor(float __x)
  { return __builtin_floorf(__x); }
 80051b4:	ee20 0a08 	vmul.f32	s0, s0, s16
 80051b8:	f01b fb00 	bl	80207bc <floorf>
#else
	return 1.5;
#endif
}
 80051bc:	ee80 0a08 	vdiv.f32	s0, s0, s16
 80051c0:	ecbd 8b02 	vpop	{d8}
 80051c4:	bd08      	pop	{r3, pc}
 80051c6:	bf00      	nop
 80051c8:	2000458c 	.word	0x2000458c
 80051cc:	42c80000 	.word	0x42c80000

080051d0 <_ZN15ScreenGraphView8countMaxEv>:
float ScreenGraphView::countMax(){
 80051d0:	b508      	push	{r3, lr}
 80051d2:	ed2d 8b02 	vpush	{d8}
#ifndef SIMULATOR
	float results= 0; //domyslna wartocs
 80051d6:	ed9f 0a10 	vldr	s0, [pc, #64]	; 8005218 <_ZN15ScreenGraphView8countMaxEv+0x48>
	for (int i=0;i<59;i++){
		if (ladowarka.PomiaryCoSec[i] > results)  results=ladowarka.PomiaryCoSec[i];
 80051da:	4910      	ldr	r1, [pc, #64]	; (800521c <_ZN15ScreenGraphView8countMaxEv+0x4c>)
	for (int i=0;i<59;i++){
 80051dc:	2300      	movs	r3, #0
		if (ladowarka.PomiaryCoSec[i] > results)  results=ladowarka.PomiaryCoSec[i];
 80051de:	f203 225e 	addw	r2, r3, #606	; 0x25e
 80051e2:	eb01 0282 	add.w	r2, r1, r2, lsl #2
 80051e6:	edd2 7a00 	vldr	s15, [r2]
 80051ea:	eef4 7ac0 	vcmpe.f32	s15, s0
 80051ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
	for (int i=0;i<59;i++){
 80051f2:	f103 0301 	add.w	r3, r3, #1
		if (ladowarka.PomiaryCoSec[i] > results)  results=ladowarka.PomiaryCoSec[i];
 80051f6:	bfc8      	it	gt
 80051f8:	ed92 0a00 	vldrgt	s0, [r2]
	for (int i=0;i<59;i++){
 80051fc:	2b3b      	cmp	r3, #59	; 0x3b
 80051fe:	d1ee      	bne.n	80051de <_ZN15ScreenGraphView8countMaxEv+0xe>
	}

	return (ceil(results*100)/100);
 8005200:	ed9f 8a07 	vldr	s16, [pc, #28]	; 8005220 <_ZN15ScreenGraphView8countMaxEv+0x50>
  { return __builtin_ceilf(__x); }
 8005204:	ee20 0a08 	vmul.f32	s0, s0, s16
 8005208:	f01b fa96 	bl	8020738 <ceilf>


#else
	return 1.5;
#endif
}
 800520c:	ee80 0a08 	vdiv.f32	s0, s0, s16
 8005210:	ecbd 8b02 	vpop	{d8}
 8005214:	bd08      	pop	{r3, pc}
 8005216:	bf00      	nop
 8005218:	00000000 	.word	0x00000000
 800521c:	20003c14 	.word	0x20003c14
 8005220:	42c80000 	.word	0x42c80000

08005224 <_ZN15ScreenGraphView19DisplayRunningTime2Ev>:
	sec=ladowarka.CzsasLadowaniaWSec;
 8005224:	4b11      	ldr	r3, [pc, #68]	; (800526c <_ZN15ScreenGraphView19DisplayRunningTime2Ev+0x48>)
void ScreenGraphView::DisplayRunningTime2(){
 8005226:	b513      	push	{r0, r1, r4, lr}
	sec=ladowarka.CzsasLadowaniaWSec;
 8005228:	f8d3 2a78 	ldr.w	r2, [r3, #2680]	; 0xa78
	m = (sec -(3600*h))/60;
 800522c:	4910      	ldr	r1, [pc, #64]	; (8005270 <_ZN15ScreenGraphView19DisplayRunningTime2Ev+0x4c>)
void ScreenGraphView::DisplayRunningTime2(){
 800522e:	4604      	mov	r4, r0
	h = (sec/3600);
 8005230:	f44f 6361 	mov.w	r3, #3600	; 0xe10
	s = (sec -(3600*h)-(m*60));
 8005234:	f06f 003b 	mvn.w	r0, #59	; 0x3b
	h = (sec/3600);
 8005238:	fb92 f3f3 	sdiv	r3, r2, r3
	m = (sec -(3600*h))/60;
 800523c:	fb01 2203 	mla	r2, r1, r3, r2
 8005240:	213c      	movs	r1, #60	; 0x3c
 8005242:	fb92 f1f1 	sdiv	r1, r2, r1
	s = (sec -(3600*h)-(m*60));
 8005246:	fb00 2201 	mla	r2, r0, r1, r2
	Unicode::snprintf(textChargingTmeBuffer,TEXTCHARGINGTME_SIZE,"%02d:%02d:%02d\n",h,m,s);
 800524a:	f504 50a2 	add.w	r0, r4, #5184	; 0x1440
 800524e:	e9cd 1200 	strd	r1, r2, [sp]
 8005252:	3010      	adds	r0, #16
 8005254:	4a07      	ldr	r2, [pc, #28]	; (8005274 <_ZN15ScreenGraphView19DisplayRunningTime2Ev+0x50>)
 8005256:	210a      	movs	r1, #10
 8005258:	f00e fee8 	bl	801402c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textChargingTme.invalidate();
 800525c:	f504 5092 	add.w	r0, r4, #4672	; 0x1240
}
 8005260:	b002      	add	sp, #8
 8005262:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	textChargingTme.invalidate();
 8005266:	f00c beba 	b.w	8011fde <_ZNK8touchgfx8Drawable10invalidateEv>
 800526a:	bf00      	nop
 800526c:	20003c14 	.word	0x20003c14
 8005270:	fffff1f0 	.word	0xfffff1f0
 8005274:	08023610 	.word	0x08023610

08005278 <_ZN15ScreenGraphViewD0Ev>:
 8005278:	b510      	push	{r4, lr}
 800527a:	f242 713c 	movw	r1, #10044	; 0x273c
 800527e:	4604      	mov	r4, r0
 8005280:	f01b fa32 	bl	80206e8 <_ZdlPvj>
 8005284:	4620      	mov	r0, r4
 8005286:	bd10      	pop	{r4, pc}

08005288 <_ZN15ScreenGraphView11setupScreenEv>:
{
 8005288:	b510      	push	{r4, lr}
 800528a:	4604      	mov	r4, r0
    ScreenGraphViewBase::setupScreen();
 800528c:	f7fe fd61 	bl	8003d52 <_ZN19ScreenGraphViewBase11setupScreenEv>
        setIntervalScaled(AbstractDataGraph::float2scaled(interval, dataScale));
 8005290:	f504 5280 	add.w	r2, r4, #4096	; 0x1000
        const float fs = f * (float)scale;
 8005294:	edd2 7a43 	vldr	s15, [r2, #268]	; 0x10c
 8005298:	ed9f 6a90 	vldr	s12, [pc, #576]	; 80054dc <_ZN15ScreenGraphView11setupScreenEv+0x254>
 800529c:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80052a0:	ee27 7a06 	vmul.f32	s14, s14, s12
        if (fs >= 0)
 80052a4:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 80052a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80052ac:	f2c0 809e 	blt.w	80053ec <_ZN15ScreenGraphView11setupScreenEv+0x164>
            return (int)(fs + 0.5f);
 80052b0:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 80052b4:	ee37 7a27 	vadd.f32	s14, s14, s15
 80052b8:	eefd 7ac7 	vcvt.s32.f32	s15, s14
 80052bc:	ee17 3a90 	vmov	r3, s15
        const float fs = f * (float)scale;
 80052c0:	edd2 7a33 	vldr	s15, [r2, #204]	; 0xcc
 80052c4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 * @return The absolute (non-negative) value of d.
 */
template <typename T>
T abs(T d)
{
    return (d < 0) ? -d : d;
 80052c8:	2b00      	cmp	r3, #0
 80052ca:	ee67 7a86 	vmul.f32	s15, s15, s12
 80052ce:	bfb8      	it	lt
 80052d0:	425b      	neglt	r3, r3
        if (fs >= 0)
 80052d2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80052d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
        labelInterval = abs(interval);
 80052da:	f8c2 3110 	str.w	r3, [r2, #272]	; 0x110
 80052de:	f2c0 8099 	blt.w	8005414 <_ZN15ScreenGraphView11setupScreenEv+0x18c>
            return (int)(fs + 0.5f);
 80052e2:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80052e6:	ee77 7a87 	vadd.f32	s15, s15, s14
 80052ea:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80052ee:	ee17 3a90 	vmov	r3, s15
        const float fs = f * (float)scale;
 80052f2:	edd2 7a13 	vldr	s15, [r2, #76]	; 0x4c
 80052f6:	ed9f 7a7a 	vldr	s14, [pc, #488]	; 80054e0 <_ZN15ScreenGraphView11setupScreenEv+0x258>
 80052fa:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80052fe:	2b00      	cmp	r3, #0
 8005300:	ee67 7a87 	vmul.f32	s15, s15, s14
 8005304:	bfb8      	it	lt
 8005306:	425b      	neglt	r3, r3
        if (fs >= 0)
 8005308:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800530c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
        gridInterval = abs(interval);
 8005310:	f8c2 30d0 	str.w	r3, [r2, #208]	; 0xd0
 8005314:	f2c0 8092 	blt.w	800543c <_ZN15ScreenGraphView11setupScreenEv+0x1b4>
            return (int)(fs + 0.5f);
 8005318:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800531c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005320:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005324:	ee17 3a90 	vmov	r3, s15
 8005328:	2b00      	cmp	r3, #0
 800532a:	bfb8      	it	lt
 800532c:	425b      	neglt	r3, r3
 800532e:	6513      	str	r3, [r2, #80]	; 0x50
        const float fs = f * (float)scale;
 8005330:	f8d4 3d3c 	ldr.w	r3, [r4, #3388]	; 0xd3c
 8005334:	ed9f 6a6b 	vldr	s12, [pc, #428]	; 80054e4 <_ZN15ScreenGraphView11setupScreenEv+0x25c>
 8005338:	ee07 3a90 	vmov	s15, r3
 800533c:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8005340:	ee27 7a06 	vmul.f32	s14, s14, s12
        if (fs >= 0)
 8005344:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8005348:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800534c:	f2c0 808a 	blt.w	8005464 <_ZN15ScreenGraphView11setupScreenEv+0x1dc>
            return (int)(fs + 0.5f);
 8005350:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8005354:	ee37 7a27 	vadd.f32	s14, s14, s15
 8005358:	eefd 7ac7 	vcvt.s32.f32	s15, s14
 800535c:	ee17 3a90 	vmov	r3, s15
 8005360:	2b00      	cmp	r3, #0
 8005362:	bfb8      	it	lt
 8005364:	425b      	neglt	r3, r3
 8005366:	f8c4 3d40 	str.w	r3, [r4, #3392]	; 0xd40
        const float fs = f * (float)scale;
 800536a:	f8d4 3cb0 	ldr.w	r3, [r4, #3248]	; 0xcb0
 800536e:	ee07 3a90 	vmov	s15, r3
 8005372:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005376:	ee67 7a86 	vmul.f32	s15, s15, s12
        if (fs >= 0)
 800537a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800537e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005382:	f2c0 8083 	blt.w	800548c <_ZN15ScreenGraphView11setupScreenEv+0x204>
            return (int)(fs + 0.5f);
 8005386:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800538a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800538e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005392:	ee17 3a90 	vmov	r3, s15
 8005396:	2b00      	cmp	r3, #0
 8005398:	bfb8      	it	lt
 800539a:	425b      	neglt	r3, r3
 800539c:	f8c4 3cb4 	str.w	r3, [r4, #3252]	; 0xcb4
        const float fs = f * (float)scale;
 80053a0:	f8d4 3c30 	ldr.w	r3, [r4, #3120]	; 0xc30
 80053a4:	ed9f 7a50 	vldr	s14, [pc, #320]	; 80054e8 <_ZN15ScreenGraphView11setupScreenEv+0x260>
 80053a8:	ee07 3a90 	vmov	s15, r3
 80053ac:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80053b0:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80053b4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80053b8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80053bc:	db7a      	blt.n	80054b4 <_ZN15ScreenGraphView11setupScreenEv+0x22c>
            return (int)(fs + 0.5f);
 80053be:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80053c2:	ee77 7a87 	vadd.f32	s15, s15, s14
 80053c6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80053ca:	ee17 3a90 	vmov	r3, s15
 80053ce:	2b00      	cmp	r3, #0
 80053d0:	bfb8      	it	lt
 80053d2:	425b      	neglt	r3, r3
     dynamicGraph1.invalidate();
 80053d4:	f604 5058 	addw	r0, r4, #3416	; 0xd58
 80053d8:	f8c4 3c34 	str.w	r3, [r4, #3124]	; 0xc34
 80053dc:	f00c fdff 	bl	8011fde <_ZNK8touchgfx8Drawable10invalidateEv>
     dynamicGraph2.invalidate();
 80053e0:	f104 00cc 	add.w	r0, r4, #204	; 0xcc
}
 80053e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
     dynamicGraph2.invalidate();
 80053e8:	f00c bdf9 	b.w	8011fde <_ZNK8touchgfx8Drawable10invalidateEv>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80053ec:	eefd 6ac7 	vcvt.s32.f32	s13, s14
 80053f0:	eef8 7ae6 	vcvt.f32.s32	s15, s13
 80053f4:	ee16 3a90 	vmov	r3, s13
 80053f8:	ee37 7a67 	vsub.f32	s14, s14, s15
 80053fc:	eef7 7a08 	vmov.f32	s15, #120	; 0x3fc00000  1.5
 8005400:	ee37 7a27 	vadd.f32	s14, s14, s15
 8005404:	3b01      	subs	r3, #1
 8005406:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 800540a:	ee17 1a10 	vmov	r1, s14
 800540e:	4419      	add	r1, r3
 8005410:	460b      	mov	r3, r1
 8005412:	e755      	b.n	80052c0 <_ZN15ScreenGraphView11setupScreenEv+0x38>
 8005414:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8005418:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800541c:	ee17 3a10 	vmov	r3, s14
 8005420:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8005424:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8005428:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800542c:	3b01      	subs	r3, #1
 800542e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005432:	ee17 1a90 	vmov	r1, s15
 8005436:	4419      	add	r1, r3
 8005438:	460b      	mov	r3, r1
 800543a:	e75a      	b.n	80052f2 <_ZN15ScreenGraphView11setupScreenEv+0x6a>
 800543c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8005440:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8005444:	ee17 3a10 	vmov	r3, s14
 8005448:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800544c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8005450:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8005454:	3b01      	subs	r3, #1
 8005456:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800545a:	ee17 1a90 	vmov	r1, s15
 800545e:	4419      	add	r1, r3
 8005460:	460b      	mov	r3, r1
 8005462:	e761      	b.n	8005328 <_ZN15ScreenGraphView11setupScreenEv+0xa0>
 8005464:	eefd 6ac7 	vcvt.s32.f32	s13, s14
 8005468:	eef8 7ae6 	vcvt.f32.s32	s15, s13
 800546c:	ee16 3a90 	vmov	r3, s13
 8005470:	ee37 7a67 	vsub.f32	s14, s14, s15
 8005474:	eef7 7a08 	vmov.f32	s15, #120	; 0x3fc00000  1.5
 8005478:	ee37 7a27 	vadd.f32	s14, s14, s15
 800547c:	3b01      	subs	r3, #1
 800547e:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 8005482:	ee17 2a10 	vmov	r2, s14
 8005486:	441a      	add	r2, r3
 8005488:	4613      	mov	r3, r2
 800548a:	e769      	b.n	8005360 <_ZN15ScreenGraphView11setupScreenEv+0xd8>
 800548c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8005490:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8005494:	ee17 3a10 	vmov	r3, s14
 8005498:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800549c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80054a0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80054a4:	3b01      	subs	r3, #1
 80054a6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80054aa:	ee17 2a90 	vmov	r2, s15
 80054ae:	441a      	add	r2, r3
 80054b0:	4613      	mov	r3, r2
 80054b2:	e770      	b.n	8005396 <_ZN15ScreenGraphView11setupScreenEv+0x10e>
 80054b4:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80054b8:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80054bc:	ee17 3a10 	vmov	r3, s14
 80054c0:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80054c4:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80054c8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80054cc:	3b01      	subs	r3, #1
 80054ce:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80054d2:	ee17 2a90 	vmov	r2, s15
 80054d6:	441a      	add	r2, r3
 80054d8:	4613      	mov	r3, r2
 80054da:	e778      	b.n	80053ce <_ZN15ScreenGraphView11setupScreenEv+0x146>
 80054dc:	3c23d70a 	.word	0x3c23d70a
 80054e0:	3ba3d70a 	.word	0x3ba3d70a
 80054e4:	3dcccccd 	.word	0x3dcccccd
 80054e8:	3d4ccccd 	.word	0x3d4ccccd

080054ec <_ZN15ScreenGraphView20DisplayCurrentValue2Ev>:
void ScreenGraphView::DisplayCurrentValue2(){
 80054ec:	b513      	push	{r0, r1, r4, lr}
	Unicode::snprintfFloat(textChargingCurrentBuffer,TEXTCHARGINGCURRENT_SIZE,"%3f",ladowarka.ChargingCurrent);
 80054ee:	4b0a      	ldr	r3, [pc, #40]	; (8005518 <_ZN15ScreenGraphView20DisplayCurrentValue2Ev+0x2c>)
 80054f0:	4a0a      	ldr	r2, [pc, #40]	; (800551c <_ZN15ScreenGraphView20DisplayCurrentValue2Ev+0x30>)
 80054f2:	681b      	ldr	r3, [r3, #0]
 80054f4:	9301      	str	r3, [sp, #4]
void ScreenGraphView::DisplayCurrentValue2(){
 80054f6:	4604      	mov	r4, r0
 80054f8:	2104      	movs	r1, #4
 80054fa:	f500 50a3 	add.w	r0, r0, #5216	; 0x1460
 80054fe:	ab01      	add	r3, sp, #4
 8005500:	4408      	add	r0, r1
 8005502:	f00e ff4f 	bl	80143a4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	textChargingCurrent.invalidate();
 8005506:	f504 5094 	add.w	r0, r4, #4736	; 0x1280
 800550a:	300c      	adds	r0, #12
}
 800550c:	b002      	add	sp, #8
 800550e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	textChargingCurrent.invalidate();
 8005512:	f00c bd64 	b.w	8011fde <_ZNK8touchgfx8Drawable10invalidateEv>
 8005516:	bf00      	nop
 8005518:	20004690 	.word	0x20004690
 800551c:	08023620 	.word	0x08023620

08005520 <_ZN15ScreenGraphView21DisplayLastAndMaxVlt2Ev>:
void ScreenGraphView::DisplayLastAndMaxVlt2(){
 8005520:	b537      	push	{r0, r1, r2, r4, r5, lr}
	Unicode::snprintfFloat(txtLastValueBuffer,TXTLASTVALUE_SIZE,"%.3f",ladowarka.BatteryVoltage);
 8005522:	4d11      	ldr	r5, [pc, #68]	; (8005568 <_ZN15ScreenGraphView21DisplayLastAndMaxVlt2Ev+0x48>)
 8005524:	4a11      	ldr	r2, [pc, #68]	; (800556c <_ZN15ScreenGraphView21DisplayLastAndMaxVlt2Ev+0x4c>)
 8005526:	682b      	ldr	r3, [r5, #0]
 8005528:	9301      	str	r3, [sp, #4]
void ScreenGraphView::DisplayLastAndMaxVlt2(){
 800552a:	4604      	mov	r4, r0
 800552c:	f500 50a1 	add.w	r0, r0, #5152	; 0x1420
 8005530:	ab01      	add	r3, sp, #4
 8005532:	2108      	movs	r1, #8
 8005534:	3010      	adds	r0, #16
 8005536:	f00e ff35 	bl	80143a4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	Unicode::snprintfFloat(txtMaxValueBuffer,TXTMAXVALUE_SIZE,"%.3f",ladowarka.MaxBatteryVoltage);
 800553a:	686b      	ldr	r3, [r5, #4]
 800553c:	4a0b      	ldr	r2, [pc, #44]	; (800556c <_ZN15ScreenGraphView21DisplayLastAndMaxVlt2Ev+0x4c>)
 800553e:	9301      	str	r3, [sp, #4]
 8005540:	2108      	movs	r1, #8
 8005542:	ab01      	add	r3, sp, #4
 8005544:	f504 50a2 	add.w	r0, r4, #5184	; 0x1440
 8005548:	f00e ff2c 	bl	80143a4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	txtMaxValue.invalidate();
 800554c:	f504 508f 	add.w	r0, r4, #4576	; 0x11e0
 8005550:	3014      	adds	r0, #20
 8005552:	f00c fd44 	bl	8011fde <_ZNK8touchgfx8Drawable10invalidateEv>
	txtLastValue.invalidate();
 8005556:	f504 508d 	add.w	r0, r4, #4512	; 0x11a0
 800555a:	3008      	adds	r0, #8
}
 800555c:	b003      	add	sp, #12
 800555e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
	txtLastValue.invalidate();
 8005562:	f00c bd3c 	b.w	8011fde <_ZNK8touchgfx8Drawable10invalidateEv>
 8005566:	bf00      	nop
 8005568:	20003c14 	.word	0x20003c14
 800556c:	08023563 	.word	0x08023563

08005570 <_ZN15ScreenGraphView10DrawPoint2Ev>:
void ScreenGraphView::DrawPoint2(){
 8005570:	b538      	push	{r3, r4, r5, lr}
	dynamicGraph1.addDataPoint(ladowarka.BatteryVoltage);
 8005572:	4b24      	ldr	r3, [pc, #144]	; (8005604 <_ZN15ScreenGraphView10DrawPoint2Ev+0x94>)
 8005574:	ed93 7a00 	vldr	s14, [r3]
        const float fs = f * (float)scale;
 8005578:	f8d0 3d8c 	ldr.w	r3, [r0, #3468]	; 0xd8c
 800557c:	ee07 3a90 	vmov	s15, r3
 8005580:	eef8 7ae7 	vcvt.f32.s32	s15, s15
void ScreenGraphView::DrawPoint2(){
 8005584:	ed2d 8b02 	vpush	{d8}
 8005588:	ee67 7a87 	vmul.f32	s15, s15, s14
 800558c:	4604      	mov	r4, r0
        if (fs >= 0)
 800558e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005592:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
	dynamicGraph1.addDataPoint(ladowarka.BatteryVoltage);
 8005596:	f600 5558 	addw	r5, r0, #3416	; 0xd58
 800559a:	db1e      	blt.n	80055da <_ZN15ScreenGraphView10DrawPoint2Ev+0x6a>
            return (int)(fs + 0.5f);
 800559c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80055a0:	ee77 7a87 	vadd.f32	s15, s15, s14
 80055a4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80055a8:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80055ac:	4628      	mov	r0, r5
 80055ae:	f007 f939 	bl	800c824 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
    dynamicGraph1.setGraphRangeY(countMin(), countMax());
 80055b2:	6823      	ldr	r3, [r4, #0]
 80055b4:	4620      	mov	r0, r4
 80055b6:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80055b8:	4798      	blx	r3
 80055ba:	6823      	ldr	r3, [r4, #0]
 80055bc:	4620      	mov	r0, r4
 80055be:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80055c0:	eeb0 8a40 	vmov.f32	s16, s0
 80055c4:	4798      	blx	r3
 80055c6:	4628      	mov	r0, r5
 80055c8:	eef0 0a40 	vmov.f32	s1, s0
 80055cc:	eeb0 0a48 	vmov.f32	s0, s16
 80055d0:	f7fe f880 	bl	80036d4 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff>
}
 80055d4:	ecbd 8b02 	vpop	{d8}
 80055d8:	bd38      	pop	{r3, r4, r5, pc}
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80055da:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80055de:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80055e2:	ee17 3a10 	vmov	r3, s14
 80055e6:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80055ea:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80055ee:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80055f2:	1e59      	subs	r1, r3, #1
 80055f4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80055f8:	ee17 3a90 	vmov	r3, s15
 80055fc:	440b      	add	r3, r1
 80055fe:	4619      	mov	r1, r3
 8005600:	e7d4      	b.n	80055ac <_ZN15ScreenGraphView10DrawPoint2Ev+0x3c>
 8005602:	bf00      	nop
 8005604:	20003c14 	.word	0x20003c14

08005608 <_ZN15ScreenGraphView13DrawPoint2MinEv>:
void ScreenGraphView::DrawPoint2Min(){
 8005608:	b570      	push	{r4, r5, r6, lr}
        const float fs = f * (float)scale;
 800560a:	edd0 7a40 	vldr	s15, [r0, #256]	; 0x100
	dynamicGraph2.addDataPoint(ladowarka.SredniaZOstatniejMin);
 800560e:	4d56      	ldr	r5, [pc, #344]	; (8005768 <_ZN15ScreenGraphView13DrawPoint2MinEv+0x160>)
 8005610:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005614:	ed95 7a00 	vldr	s14, [r5]
 8005618:	ee67 7a87 	vmul.f32	s15, s15, s14
void ScreenGraphView::DrawPoint2Min(){
 800561c:	ed2d 8b02 	vpush	{d8}
        if (fs >= 0)
 8005620:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005624:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005628:	4604      	mov	r4, r0
	dynamicGraph2.addDataPoint(ladowarka.SredniaZOstatniejMin);
 800562a:	f100 06cc 	add.w	r6, r0, #204	; 0xcc
 800562e:	db57      	blt.n	80056e0 <_ZN15ScreenGraphView13DrawPoint2MinEv+0xd8>
            return (int)(fs + 0.5f);
 8005630:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005634:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005638:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800563c:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005640:	4630      	mov	r0, r6
 8005642:	f007 f8ef 	bl	800c824 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
	if (ladowarka.SredniaZOstatniejMin<minValue) minValue=ladowarka.SredniaZOstatniejMin;
 8005646:	edd5 7a00 	vldr	s15, [r5]
 800564a:	eeb0 0a00 	vmov.f32	s0, #0	; 0x40000000  2.0
 800564e:	eef4 7ac0 	vcmpe.f32	s15, s0
 8005652:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005656:	bf48      	it	mi
 8005658:	ed95 0a00 	vldrmi	s0, [r5]
	 dynamicGraph2.setGraphRangeY((floor(minValue*10)/10),(ceil(ladowarka.MaxBatteryVoltage*10)/10));
 800565c:	4d43      	ldr	r5, [pc, #268]	; (800576c <_ZN15ScreenGraphView13DrawPoint2MinEv+0x164>)
 800565e:	eeb2 8a04 	vmov.f32	s16, #36	; 0x41200000  10.0
  { return __builtin_floorf(__x); }
 8005662:	ee20 0a08 	vmul.f32	s0, s0, s16
 8005666:	f01b f8a9 	bl	80207bc <floorf>
 800566a:	eef0 8a40 	vmov.f32	s17, s0
 800566e:	ed95 0a01 	vldr	s0, [r5, #4]
  { return __builtin_ceilf(__x); }
 8005672:	ee20 0a08 	vmul.f32	s0, s0, s16
 8005676:	f01b f85f 	bl	8020738 <ceilf>
 800567a:	4630      	mov	r0, r6
 800567c:	eec0 0a08 	vdiv.f32	s1, s0, s16
 8005680:	ee88 0a88 	vdiv.f32	s0, s17, s16
 8005684:	f7fe f826 	bl	80036d4 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff>
	if (ladowarka.CzsasLadowaniaWSec>9*60 && ladowarka.CzsasLadowaniaWSec <59*60){ //jesli czas jest >9min i <59 min
 8005688:	f8d5 3a78 	ldr.w	r3, [r5, #2680]	; 0xa78
 800568c:	f5b3 7f07 	cmp.w	r3, #540	; 0x21c
 8005690:	dd3a      	ble.n	8005708 <_ZN15ScreenGraphView13DrawPoint2MinEv+0x100>
 8005692:	f8d5 2a78 	ldr.w	r2, [r5, #2680]	; 0xa78
 8005696:	f640 53d3 	movw	r3, #3539	; 0xdd3
 800569a:	429a      	cmp	r2, r3
 800569c:	dc34      	bgt.n	8005708 <_ZN15ScreenGraphView13DrawPoint2MinEv+0x100>
		dynamicGraph2.setGraphRangeX(0,60);
 800569e:	223c      	movs	r2, #60	; 0x3c
 80056a0:	2100      	movs	r1, #0
 80056a2:	4630      	mov	r0, r6
 80056a4:	f7fd ff80 	bl	80035a8 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>
        setIntervalScaled(abs(interval) * dataScale);
 80056a8:	f8d4 2c70 	ldr.w	r2, [r4, #3184]	; 0xc70
        return i * scale;
 80056ac:	f8d4 3cf0 	ldr.w	r3, [r4, #3312]	; 0xcf0
 80056b0:	210a      	movs	r1, #10
 80056b2:	434a      	muls	r2, r1
 80056b4:	2a00      	cmp	r2, #0
 80056b6:	bfb8      	it	lt
 80056b8:	4252      	neglt	r2, r2
        gridInterval = abs(interval);
 80056ba:	f8c4 2c74 	str.w	r2, [r4, #3188]	; 0xc74
        setIntervalScaled(abs(interval) * dataScale);
 80056be:	f8d4 2bf0 	ldr.w	r2, [r4, #3056]	; 0xbf0
 80056c2:	0052      	lsls	r2, r2, #1
 80056c4:	2a00      	cmp	r2, #0
 80056c6:	bfb8      	it	lt
 80056c8:	4252      	neglt	r2, r2
        gridInterval = abs(interval);
 80056ca:	f8c4 2bf4 	str.w	r2, [r4, #3060]	; 0xbf4
 80056ce:	434b      	muls	r3, r1
 80056d0:	2b00      	cmp	r3, #0
 80056d2:	bfb8      	it	lt
 80056d4:	425b      	neglt	r3, r3
 80056d6:	f8c4 3cf4 	str.w	r3, [r4, #3316]	; 0xcf4
}
 80056da:	ecbd 8b02 	vpop	{d8}
 80056de:	bd70      	pop	{r4, r5, r6, pc}
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80056e0:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80056e4:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80056e8:	ee17 3a10 	vmov	r3, s14
 80056ec:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80056f0:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80056f4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80056f8:	1e59      	subs	r1, r3, #1
 80056fa:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80056fe:	ee17 3a90 	vmov	r3, s15
 8005702:	440b      	add	r3, r1
 8005704:	4619      	mov	r1, r3
 8005706:	e79b      	b.n	8005640 <_ZN15ScreenGraphView13DrawPoint2MinEv+0x38>
	else if ((ladowarka.CzsasLadowaniaWSec >59*60) && (ladowarka.ChargingCompleted==0) ){ //jesli czas jest >59 min
 8005708:	f8d5 2a78 	ldr.w	r2, [r5, #2680]	; 0xa78
 800570c:	f640 53d4 	movw	r3, #3540	; 0xdd4
 8005710:	429a      	cmp	r2, r3
 8005712:	dd02      	ble.n	800571a <_ZN15ScreenGraphView13DrawPoint2MinEv+0x112>
 8005714:	f8d5 1a80 	ldr.w	r1, [r5, #2688]	; 0xa80
 8005718:	b151      	cbz	r1, 8005730 <_ZN15ScreenGraphView13DrawPoint2MinEv+0x128>
	else if(ladowarka.ChargingCompleted) 	{//maksymalna wartosc graphu keidy skonczy sie ladowanie oraz ustaw plot X,Y
 800571a:	f8d5 3a80 	ldr.w	r3, [r5, #2688]	; 0xa80
 800571e:	2b00      	cmp	r3, #0
 8005720:	d0db      	beq.n	80056da <_ZN15ScreenGraphView13DrawPoint2MinEv+0xd2>
				dynamicGraph2.setGraphRangeX(0,600);
 8005722:	f44f 7216 	mov.w	r2, #600	; 0x258
 8005726:	2100      	movs	r1, #0
 8005728:	4630      	mov	r0, r6
 800572a:	f7fd ff3d 	bl	80035a8 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>
}
 800572e:	e7d4      	b.n	80056da <_ZN15ScreenGraphView13DrawPoint2MinEv+0xd2>
			dynamicGraph2.setGraphRangeX(0,ladowarka.ChargingTime*60);
 8005730:	68ea      	ldr	r2, [r5, #12]
 8005732:	253c      	movs	r5, #60	; 0x3c
 8005734:	436a      	muls	r2, r5
 8005736:	4630      	mov	r0, r6
 8005738:	f7fd ff36 	bl	80035a8 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>
        setIntervalScaled(abs(interval) * dataScale);
 800573c:	f8d4 2c70 	ldr.w	r2, [r4, #3184]	; 0xc70
 8005740:	436a      	muls	r2, r5
 8005742:	2a00      	cmp	r2, #0
 8005744:	bfb8      	it	lt
 8005746:	4252      	neglt	r2, r2
        gridInterval = abs(interval);
 8005748:	f8c4 2c74 	str.w	r2, [r4, #3188]	; 0xc74
        setIntervalScaled(abs(interval) * dataScale);
 800574c:	f8d4 2bf0 	ldr.w	r2, [r4, #3056]	; 0xbf0
 8005750:	230a      	movs	r3, #10
 8005752:	435a      	muls	r2, r3
 8005754:	2a00      	cmp	r2, #0
        return i * scale;
 8005756:	f8d4 3cf0 	ldr.w	r3, [r4, #3312]	; 0xcf0
 800575a:	bfb8      	it	lt
 800575c:	4252      	neglt	r2, r2
        gridInterval = abs(interval);
 800575e:	f8c4 2bf4 	str.w	r2, [r4, #3060]	; 0xbf4
 8005762:	436b      	muls	r3, r5
 8005764:	e7b4      	b.n	80056d0 <_ZN15ScreenGraphView13DrawPoint2MinEv+0xc8>
 8005766:	bf00      	nop
 8005768:	20004698 	.word	0x20004698
 800576c:	20003c14 	.word	0x20003c14

08005770 <_ZN15ScreenGraphViewC1Ev>:
ScreenGraphView::ScreenGraphView()
 8005770:	b510      	push	{r4, lr}
 8005772:	4604      	mov	r4, r0
 8005774:	f7fe fc9a 	bl	80040ac <_ZN19ScreenGraphViewBaseC1Ev>
 8005778:	4b01      	ldr	r3, [pc, #4]	; (8005780 <_ZN15ScreenGraphViewC1Ev+0x10>)
 800577a:	6023      	str	r3, [r4, #0]
}
 800577c:	4620      	mov	r0, r4
 800577e:	bd10      	pop	{r4, pc}
 8005780:	0802362c 	.word	0x0802362c

08005784 <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 8005784:	20f0      	movs	r0, #240	; 0xf0
 8005786:	4770      	bx	lr

08005788 <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 8005788:	f44f 70a0 	mov.w	r0, #320	; 0x140
 800578c:	4770      	bx	lr

0800578e <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 800578e:	2029      	movs	r0, #41	; 0x29
 8005790:	f7fc b956 	b.w	8001a40 <LCD_IO_WriteReg>

08005794 <ili9341_DisplayOff>:
 8005794:	2028      	movs	r0, #40	; 0x28
 8005796:	f7fc b953 	b.w	8001a40 <LCD_IO_WriteReg>

0800579a <ili9341_Init>:
{
 800579a:	b508      	push	{r3, lr}
  LCD_IO_Init();
 800579c:	f7fc f924 	bl	80019e8 <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 80057a0:	20ca      	movs	r0, #202	; 0xca
 80057a2:	f7fc f94d 	bl	8001a40 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80057a6:	20c3      	movs	r0, #195	; 0xc3
 80057a8:	f7fc f92e 	bl	8001a08 <LCD_IO_WriteData>
 80057ac:	2008      	movs	r0, #8
 80057ae:	f7fc f92b 	bl	8001a08 <LCD_IO_WriteData>
 80057b2:	2050      	movs	r0, #80	; 0x50
 80057b4:	f7fc f928 	bl	8001a08 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80057b8:	20cf      	movs	r0, #207	; 0xcf
 80057ba:	f7fc f941 	bl	8001a40 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80057be:	2000      	movs	r0, #0
 80057c0:	f7fc f922 	bl	8001a08 <LCD_IO_WriteData>
 80057c4:	20c1      	movs	r0, #193	; 0xc1
 80057c6:	f7fc f91f 	bl	8001a08 <LCD_IO_WriteData>
 80057ca:	2030      	movs	r0, #48	; 0x30
 80057cc:	f7fc f91c 	bl	8001a08 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80057d0:	20ed      	movs	r0, #237	; 0xed
 80057d2:	f7fc f935 	bl	8001a40 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80057d6:	2064      	movs	r0, #100	; 0x64
 80057d8:	f7fc f916 	bl	8001a08 <LCD_IO_WriteData>
 80057dc:	2003      	movs	r0, #3
 80057de:	f7fc f913 	bl	8001a08 <LCD_IO_WriteData>
 80057e2:	2012      	movs	r0, #18
 80057e4:	f7fc f910 	bl	8001a08 <LCD_IO_WriteData>
 80057e8:	2081      	movs	r0, #129	; 0x81
 80057ea:	f7fc f90d 	bl	8001a08 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80057ee:	20e8      	movs	r0, #232	; 0xe8
 80057f0:	f7fc f926 	bl	8001a40 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80057f4:	2085      	movs	r0, #133	; 0x85
 80057f6:	f7fc f907 	bl	8001a08 <LCD_IO_WriteData>
 80057fa:	2000      	movs	r0, #0
 80057fc:	f7fc f904 	bl	8001a08 <LCD_IO_WriteData>
 8005800:	2078      	movs	r0, #120	; 0x78
 8005802:	f7fc f901 	bl	8001a08 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005806:	20cb      	movs	r0, #203	; 0xcb
 8005808:	f7fc f91a 	bl	8001a40 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800580c:	2039      	movs	r0, #57	; 0x39
 800580e:	f7fc f8fb 	bl	8001a08 <LCD_IO_WriteData>
 8005812:	202c      	movs	r0, #44	; 0x2c
 8005814:	f7fc f8f8 	bl	8001a08 <LCD_IO_WriteData>
 8005818:	2000      	movs	r0, #0
 800581a:	f7fc f8f5 	bl	8001a08 <LCD_IO_WriteData>
 800581e:	2034      	movs	r0, #52	; 0x34
 8005820:	f7fc f8f2 	bl	8001a08 <LCD_IO_WriteData>
 8005824:	2002      	movs	r0, #2
 8005826:	f7fc f8ef 	bl	8001a08 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800582a:	20f7      	movs	r0, #247	; 0xf7
 800582c:	f7fc f908 	bl	8001a40 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005830:	2020      	movs	r0, #32
 8005832:	f7fc f8e9 	bl	8001a08 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005836:	20ea      	movs	r0, #234	; 0xea
 8005838:	f7fc f902 	bl	8001a40 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800583c:	2000      	movs	r0, #0
 800583e:	f7fc f8e3 	bl	8001a08 <LCD_IO_WriteData>
 8005842:	2000      	movs	r0, #0
 8005844:	f7fc f8e0 	bl	8001a08 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005848:	20b1      	movs	r0, #177	; 0xb1
 800584a:	f7fc f8f9 	bl	8001a40 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800584e:	2000      	movs	r0, #0
 8005850:	f7fc f8da 	bl	8001a08 <LCD_IO_WriteData>
 8005854:	201b      	movs	r0, #27
 8005856:	f7fc f8d7 	bl	8001a08 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800585a:	20b6      	movs	r0, #182	; 0xb6
 800585c:	f7fc f8f0 	bl	8001a40 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005860:	200a      	movs	r0, #10
 8005862:	f7fc f8d1 	bl	8001a08 <LCD_IO_WriteData>
 8005866:	20a2      	movs	r0, #162	; 0xa2
 8005868:	f7fc f8ce 	bl	8001a08 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800586c:	20c0      	movs	r0, #192	; 0xc0
 800586e:	f7fc f8e7 	bl	8001a40 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005872:	2010      	movs	r0, #16
 8005874:	f7fc f8c8 	bl	8001a08 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005878:	20c1      	movs	r0, #193	; 0xc1
 800587a:	f7fc f8e1 	bl	8001a40 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800587e:	2010      	movs	r0, #16
 8005880:	f7fc f8c2 	bl	8001a08 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005884:	20c5      	movs	r0, #197	; 0xc5
 8005886:	f7fc f8db 	bl	8001a40 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800588a:	2045      	movs	r0, #69	; 0x45
 800588c:	f7fc f8bc 	bl	8001a08 <LCD_IO_WriteData>
 8005890:	2015      	movs	r0, #21
 8005892:	f7fc f8b9 	bl	8001a08 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005896:	20c7      	movs	r0, #199	; 0xc7
 8005898:	f7fc f8d2 	bl	8001a40 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800589c:	2090      	movs	r0, #144	; 0x90
 800589e:	f7fc f8b3 	bl	8001a08 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80058a2:	2036      	movs	r0, #54	; 0x36
 80058a4:	f7fc f8cc 	bl	8001a40 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80058a8:	20c8      	movs	r0, #200	; 0xc8
 80058aa:	f7fc f8ad 	bl	8001a08 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80058ae:	20f2      	movs	r0, #242	; 0xf2
 80058b0:	f7fc f8c6 	bl	8001a40 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80058b4:	2000      	movs	r0, #0
 80058b6:	f7fc f8a7 	bl	8001a08 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80058ba:	20b0      	movs	r0, #176	; 0xb0
 80058bc:	f7fc f8c0 	bl	8001a40 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80058c0:	20c2      	movs	r0, #194	; 0xc2
 80058c2:	f7fc f8a1 	bl	8001a08 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80058c6:	20b6      	movs	r0, #182	; 0xb6
 80058c8:	f7fc f8ba 	bl	8001a40 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80058cc:	200a      	movs	r0, #10
 80058ce:	f7fc f89b 	bl	8001a08 <LCD_IO_WriteData>
 80058d2:	20a7      	movs	r0, #167	; 0xa7
 80058d4:	f7fc f898 	bl	8001a08 <LCD_IO_WriteData>
 80058d8:	2027      	movs	r0, #39	; 0x27
 80058da:	f7fc f895 	bl	8001a08 <LCD_IO_WriteData>
 80058de:	2004      	movs	r0, #4
 80058e0:	f7fc f892 	bl	8001a08 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80058e4:	202a      	movs	r0, #42	; 0x2a
 80058e6:	f7fc f8ab 	bl	8001a40 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80058ea:	2000      	movs	r0, #0
 80058ec:	f7fc f88c 	bl	8001a08 <LCD_IO_WriteData>
 80058f0:	2000      	movs	r0, #0
 80058f2:	f7fc f889 	bl	8001a08 <LCD_IO_WriteData>
 80058f6:	2000      	movs	r0, #0
 80058f8:	f7fc f886 	bl	8001a08 <LCD_IO_WriteData>
 80058fc:	20ef      	movs	r0, #239	; 0xef
 80058fe:	f7fc f883 	bl	8001a08 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005902:	202b      	movs	r0, #43	; 0x2b
 8005904:	f7fc f89c 	bl	8001a40 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005908:	2000      	movs	r0, #0
 800590a:	f7fc f87d 	bl	8001a08 <LCD_IO_WriteData>
 800590e:	2000      	movs	r0, #0
 8005910:	f7fc f87a 	bl	8001a08 <LCD_IO_WriteData>
 8005914:	2001      	movs	r0, #1
 8005916:	f7fc f877 	bl	8001a08 <LCD_IO_WriteData>
 800591a:	203f      	movs	r0, #63	; 0x3f
 800591c:	f7fc f874 	bl	8001a08 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005920:	20f6      	movs	r0, #246	; 0xf6
 8005922:	f7fc f88d 	bl	8001a40 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005926:	2001      	movs	r0, #1
 8005928:	f7fc f86e 	bl	8001a08 <LCD_IO_WriteData>
 800592c:	2000      	movs	r0, #0
 800592e:	f7fc f86b 	bl	8001a08 <LCD_IO_WriteData>
 8005932:	2006      	movs	r0, #6
 8005934:	f7fc f868 	bl	8001a08 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005938:	202c      	movs	r0, #44	; 0x2c
 800593a:	f7fc f881 	bl	8001a40 <LCD_IO_WriteReg>
  LCD_Delay(200);
 800593e:	20c8      	movs	r0, #200	; 0xc8
 8005940:	f7fc f8cc 	bl	8001adc <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8005944:	2026      	movs	r0, #38	; 0x26
 8005946:	f7fc f87b 	bl	8001a40 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800594a:	2001      	movs	r0, #1
 800594c:	f7fc f85c 	bl	8001a08 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005950:	20e0      	movs	r0, #224	; 0xe0
 8005952:	f7fc f875 	bl	8001a40 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005956:	200f      	movs	r0, #15
 8005958:	f7fc f856 	bl	8001a08 <LCD_IO_WriteData>
 800595c:	2029      	movs	r0, #41	; 0x29
 800595e:	f7fc f853 	bl	8001a08 <LCD_IO_WriteData>
 8005962:	2024      	movs	r0, #36	; 0x24
 8005964:	f7fc f850 	bl	8001a08 <LCD_IO_WriteData>
 8005968:	200c      	movs	r0, #12
 800596a:	f7fc f84d 	bl	8001a08 <LCD_IO_WriteData>
 800596e:	200e      	movs	r0, #14
 8005970:	f7fc f84a 	bl	8001a08 <LCD_IO_WriteData>
 8005974:	2009      	movs	r0, #9
 8005976:	f7fc f847 	bl	8001a08 <LCD_IO_WriteData>
 800597a:	204e      	movs	r0, #78	; 0x4e
 800597c:	f7fc f844 	bl	8001a08 <LCD_IO_WriteData>
 8005980:	2078      	movs	r0, #120	; 0x78
 8005982:	f7fc f841 	bl	8001a08 <LCD_IO_WriteData>
 8005986:	203c      	movs	r0, #60	; 0x3c
 8005988:	f7fc f83e 	bl	8001a08 <LCD_IO_WriteData>
 800598c:	2009      	movs	r0, #9
 800598e:	f7fc f83b 	bl	8001a08 <LCD_IO_WriteData>
 8005992:	2013      	movs	r0, #19
 8005994:	f7fc f838 	bl	8001a08 <LCD_IO_WriteData>
 8005998:	2005      	movs	r0, #5
 800599a:	f7fc f835 	bl	8001a08 <LCD_IO_WriteData>
 800599e:	2017      	movs	r0, #23
 80059a0:	f7fc f832 	bl	8001a08 <LCD_IO_WriteData>
 80059a4:	2011      	movs	r0, #17
 80059a6:	f7fc f82f 	bl	8001a08 <LCD_IO_WriteData>
 80059aa:	2000      	movs	r0, #0
 80059ac:	f7fc f82c 	bl	8001a08 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80059b0:	20e1      	movs	r0, #225	; 0xe1
 80059b2:	f7fc f845 	bl	8001a40 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80059b6:	2000      	movs	r0, #0
 80059b8:	f7fc f826 	bl	8001a08 <LCD_IO_WriteData>
 80059bc:	2016      	movs	r0, #22
 80059be:	f7fc f823 	bl	8001a08 <LCD_IO_WriteData>
 80059c2:	201b      	movs	r0, #27
 80059c4:	f7fc f820 	bl	8001a08 <LCD_IO_WriteData>
 80059c8:	2004      	movs	r0, #4
 80059ca:	f7fc f81d 	bl	8001a08 <LCD_IO_WriteData>
 80059ce:	2011      	movs	r0, #17
 80059d0:	f7fc f81a 	bl	8001a08 <LCD_IO_WriteData>
 80059d4:	2007      	movs	r0, #7
 80059d6:	f7fc f817 	bl	8001a08 <LCD_IO_WriteData>
 80059da:	2031      	movs	r0, #49	; 0x31
 80059dc:	f7fc f814 	bl	8001a08 <LCD_IO_WriteData>
 80059e0:	2033      	movs	r0, #51	; 0x33
 80059e2:	f7fc f811 	bl	8001a08 <LCD_IO_WriteData>
 80059e6:	2042      	movs	r0, #66	; 0x42
 80059e8:	f7fc f80e 	bl	8001a08 <LCD_IO_WriteData>
 80059ec:	2005      	movs	r0, #5
 80059ee:	f7fc f80b 	bl	8001a08 <LCD_IO_WriteData>
 80059f2:	200c      	movs	r0, #12
 80059f4:	f7fc f808 	bl	8001a08 <LCD_IO_WriteData>
 80059f8:	200a      	movs	r0, #10
 80059fa:	f7fc f805 	bl	8001a08 <LCD_IO_WriteData>
 80059fe:	2028      	movs	r0, #40	; 0x28
 8005a00:	f7fc f802 	bl	8001a08 <LCD_IO_WriteData>
 8005a04:	202f      	movs	r0, #47	; 0x2f
 8005a06:	f7fb ffff 	bl	8001a08 <LCD_IO_WriteData>
 8005a0a:	200f      	movs	r0, #15
 8005a0c:	f7fb fffc 	bl	8001a08 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005a10:	2011      	movs	r0, #17
 8005a12:	f7fc f815 	bl	8001a40 <LCD_IO_WriteReg>
  LCD_Delay(200);
 8005a16:	20c8      	movs	r0, #200	; 0xc8
 8005a18:	f7fc f860 	bl	8001adc <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8005a1c:	2029      	movs	r0, #41	; 0x29
 8005a1e:	f7fc f80f 	bl	8001a40 <LCD_IO_WriteReg>
}
 8005a22:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 8005a26:	202c      	movs	r0, #44	; 0x2c
 8005a28:	f7fc b80a 	b.w	8001a40 <LCD_IO_WriteReg>

08005a2c <ili9341_ReadID>:
{
 8005a2c:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8005a2e:	f7fb ffdb 	bl	80019e8 <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 8005a32:	2103      	movs	r1, #3
 8005a34:	20d3      	movs	r0, #211	; 0xd3
 8005a36:	f7fc f81f 	bl	8001a78 <LCD_IO_ReadData>
}
 8005a3a:	b280      	uxth	r0, r0
 8005a3c:	bd08      	pop	{r3, pc}

08005a3e <stmpe811_Reset>:
  * @brief  Reset the stmpe811 by Software.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval None
  */
void stmpe811_Reset(uint16_t DeviceAddr)
{
 8005a3e:	b510      	push	{r4, lr}
  /* Power Down the stmpe811 */  
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 8005a40:	b2c4      	uxtb	r4, r0
 8005a42:	2202      	movs	r2, #2
 8005a44:	2103      	movs	r1, #3
 8005a46:	4620      	mov	r0, r4
 8005a48:	f7fb ff84 	bl	8001954 <IOE_Write>

  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(10); 
 8005a4c:	200a      	movs	r0, #10
 8005a4e:	f7fb ffc9 	bl	80019e4 <IOE_Delay>
  
  /* Power On the Codec after the power off => all registers are reinitialized */
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 8005a52:	4620      	mov	r0, r4
 8005a54:	2200      	movs	r2, #0
 8005a56:	2103      	movs	r1, #3
 8005a58:	f7fb ff7c 	bl	8001954 <IOE_Write>
  
  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(2); 
}
 8005a5c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 8005a60:	2002      	movs	r0, #2
 8005a62:	f7fb bfbf 	b.w	80019e4 <IOE_Delay>

08005a66 <stmpe811_ReadID>:
  * @brief  Read the stmpe811 IO Expander device ID.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval The Device ID (two bytes).
  */
uint16_t stmpe811_ReadID(uint16_t DeviceAddr)
{
 8005a66:	b538      	push	{r3, r4, r5, lr}
 8005a68:	4604      	mov	r4, r0
  /* Initialize IO BUS layer */
  IOE_Init(); 
  
  /* Return the device ID value */
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8005a6a:	b2e4      	uxtb	r4, r4
  IOE_Init(); 
 8005a6c:	f7fb ff70 	bl	8001950 <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8005a70:	2100      	movs	r1, #0
 8005a72:	4620      	mov	r0, r4
 8005a74:	f7fb ff86 	bl	8001984 <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8005a78:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8005a7a:	4605      	mov	r5, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8005a7c:	4620      	mov	r0, r4
 8005a7e:	f7fb ff81 	bl	8001984 <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8005a82:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
}
 8005a86:	b280      	uxth	r0, r0
 8005a88:	bd38      	pop	{r3, r4, r5, pc}

08005a8a <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 8005a8a:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 8005a8c:	b2c4      	uxtb	r4, r0
 8005a8e:	2140      	movs	r1, #64	; 0x40
 8005a90:	4620      	mov	r0, r4
 8005a92:	f7fb ff77 	bl	8001984 <IOE_Read>
  
  if(state > 0)
 8005a96:	0603      	lsls	r3, r0, #24
 8005a98:	d507      	bpl.n	8005aaa <stmpe811_TS_DetectTouch+0x20>
  {
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 8005a9a:	214c      	movs	r1, #76	; 0x4c
 8005a9c:	4620      	mov	r0, r4
 8005a9e:	f7fb ff71 	bl	8001984 <IOE_Read>
    {
      ret = 1;
 8005aa2:	3800      	subs	r0, #0
 8005aa4:	bf18      	it	ne
 8005aa6:	2001      	movne	r0, #1
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
  }
  
  return ret;
}
 8005aa8:	bd10      	pop	{r4, pc}
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8005aaa:	2201      	movs	r2, #1
 8005aac:	214b      	movs	r1, #75	; 0x4b
 8005aae:	4620      	mov	r0, r4
 8005ab0:	f7fb ff50 	bl	8001954 <IOE_Write>
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8005ab4:	4620      	mov	r0, r4
 8005ab6:	2200      	movs	r2, #0
 8005ab8:	214b      	movs	r1, #75	; 0x4b
 8005aba:	f7fb ff4b 	bl	8001954 <IOE_Write>
  uint8_t ret = 0;
 8005abe:	2000      	movs	r0, #0
 8005ac0:	e7f2      	b.n	8005aa8 <stmpe811_TS_DetectTouch+0x1e>

08005ac2 <stmpe811_TS_GetXY>:
  * @param  X: Pointer to X position value
  * @param  Y: Pointer to Y position value   
  * @retval None.
  */
void stmpe811_TS_GetXY(uint16_t DeviceAddr, uint16_t *X, uint16_t *Y)
{
 8005ac2:	b573      	push	{r0, r1, r4, r5, r6, lr}
  uint8_t  dataXYZ[4];
  uint32_t uldataXYZ;
  
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8005ac4:	2304      	movs	r3, #4
 8005ac6:	b2c4      	uxtb	r4, r0
{
 8005ac8:	460e      	mov	r6, r1
 8005aca:	4615      	mov	r5, r2
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8005acc:	21d7      	movs	r1, #215	; 0xd7
 8005ace:	eb0d 0203 	add.w	r2, sp, r3
 8005ad2:	4620      	mov	r0, r4
 8005ad4:	f7fb ff70 	bl	80019b8 <IOE_ReadMultiple>
  
  /* Calculate positions values */
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 8005ad8:	9b01      	ldr	r3, [sp, #4]
 8005ada:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8005adc:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8005ade:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8005ae2:	8032      	strh	r2, [r6, #0]
  
  /* Reset FIFO */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8005ae4:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8005ae6:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8005ae8:	2201      	movs	r2, #1
 8005aea:	214b      	movs	r1, #75	; 0x4b
 8005aec:	f7fb ff32 	bl	8001954 <IOE_Write>
  /* Enable the FIFO again */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8005af0:	2200      	movs	r2, #0
 8005af2:	214b      	movs	r1, #75	; 0x4b
 8005af4:	4620      	mov	r0, r4
 8005af6:	f7fb ff2d 	bl	8001954 <IOE_Write>
}
 8005afa:	b002      	add	sp, #8
 8005afc:	bd70      	pop	{r4, r5, r6, pc}
	...

08005b00 <stmpe811_Init>:
{
 8005b00:	b510      	push	{r4, lr}
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 8005b02:	4b0a      	ldr	r3, [pc, #40]	; (8005b2c <stmpe811_Init+0x2c>)
 8005b04:	781a      	ldrb	r2, [r3, #0]
 8005b06:	4290      	cmp	r0, r2
{
 8005b08:	4604      	mov	r4, r0
    if(stmpe811[idx] == DeviceAddr)
 8005b0a:	d00d      	beq.n	8005b28 <stmpe811_Init+0x28>
 8005b0c:	7859      	ldrb	r1, [r3, #1]
 8005b0e:	4288      	cmp	r0, r1
 8005b10:	d00a      	beq.n	8005b28 <stmpe811_Init+0x28>
 8005b12:	b10a      	cbz	r2, 8005b18 <stmpe811_Init+0x18>
 8005b14:	b941      	cbnz	r1, 8005b28 <stmpe811_Init+0x28>
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
 8005b16:	2201      	movs	r2, #1
      stmpe811[empty] = DeviceAddr;
 8005b18:	549c      	strb	r4, [r3, r2]
      IOE_Init(); 
 8005b1a:	f7fb ff19 	bl	8001950 <IOE_Init>
      stmpe811_Reset(DeviceAddr);
 8005b1e:	4620      	mov	r0, r4
}
 8005b20:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      stmpe811_Reset(DeviceAddr);
 8005b24:	f7ff bf8b 	b.w	8005a3e <stmpe811_Reset>
}
 8005b28:	bd10      	pop	{r4, pc}
 8005b2a:	bf00      	nop
 8005b2c:	20004798 	.word	0x20004798

08005b30 <stmpe811_EnableGlobalIT>:
{
 8005b30:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8005b32:	b2c4      	uxtb	r4, r0
 8005b34:	2109      	movs	r1, #9
 8005b36:	4620      	mov	r0, r4
 8005b38:	f7fb ff24 	bl	8001984 <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 8005b3c:	f040 0001 	orr.w	r0, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8005b40:	b2c2      	uxtb	r2, r0
 8005b42:	2109      	movs	r1, #9
 8005b44:	4620      	mov	r0, r4
}
 8005b46:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8005b4a:	f7fb bf03 	b.w	8001954 <IOE_Write>

08005b4e <stmpe811_DisableGlobalIT>:
{
 8005b4e:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8005b50:	b2c4      	uxtb	r4, r0
 8005b52:	2109      	movs	r1, #9
 8005b54:	4620      	mov	r0, r4
 8005b56:	f7fb ff15 	bl	8001984 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8005b5a:	2109      	movs	r1, #9
 8005b5c:	f000 02fe 	and.w	r2, r0, #254	; 0xfe
 8005b60:	4620      	mov	r0, r4
}
 8005b62:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8005b66:	f7fb bef5 	b.w	8001954 <IOE_Write>

08005b6a <stmpe811_EnableITSource>:
{
 8005b6a:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8005b6c:	b2c4      	uxtb	r4, r0
{
 8005b6e:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8005b70:	4620      	mov	r0, r4
 8005b72:	210a      	movs	r1, #10
 8005b74:	f7fb ff06 	bl	8001984 <IOE_Read>
  tmp |= Source; 
 8005b78:	4328      	orrs	r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8005b7a:	b2c2      	uxtb	r2, r0
 8005b7c:	210a      	movs	r1, #10
 8005b7e:	4620      	mov	r0, r4
}
 8005b80:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8005b84:	f7fb bee6 	b.w	8001954 <IOE_Write>

08005b88 <stmpe811_TS_EnableIT>:
{
 8005b88:	b507      	push	{r0, r1, r2, lr}
 8005b8a:	9001      	str	r0, [sp, #4]
  IOE_ITConfig();
 8005b8c:	f7fb fee1 	bl	8001952 <IOE_ITConfig>
  stmpe811_EnableITSource(DeviceAddr, STMPE811_TS_IT); 
 8005b90:	9801      	ldr	r0, [sp, #4]
 8005b92:	211f      	movs	r1, #31
 8005b94:	f7ff ffe9 	bl	8005b6a <stmpe811_EnableITSource>
  stmpe811_EnableGlobalIT(DeviceAddr);
 8005b98:	9801      	ldr	r0, [sp, #4]
}
 8005b9a:	b003      	add	sp, #12
 8005b9c:	f85d eb04 	ldr.w	lr, [sp], #4
  stmpe811_EnableGlobalIT(DeviceAddr);
 8005ba0:	f7ff bfc6 	b.w	8005b30 <stmpe811_EnableGlobalIT>

08005ba4 <stmpe811_DisableITSource>:
{
 8005ba4:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8005ba6:	b2c4      	uxtb	r4, r0
{
 8005ba8:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8005baa:	4620      	mov	r0, r4
 8005bac:	210a      	movs	r1, #10
 8005bae:	f7fb fee9 	bl	8001984 <IOE_Read>
  tmp &= ~Source; 
 8005bb2:	ea20 0005 	bic.w	r0, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8005bb6:	b2c2      	uxtb	r2, r0
 8005bb8:	210a      	movs	r1, #10
 8005bba:	4620      	mov	r0, r4
}
 8005bbc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8005bc0:	f7fb bec8 	b.w	8001954 <IOE_Write>

08005bc4 <stmpe811_TS_DisableIT>:
{
 8005bc4:	b510      	push	{r4, lr}
 8005bc6:	4604      	mov	r4, r0
  stmpe811_DisableGlobalIT(DeviceAddr);
 8005bc8:	f7ff ffc1 	bl	8005b4e <stmpe811_DisableGlobalIT>
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 8005bcc:	4620      	mov	r0, r4
 8005bce:	211f      	movs	r1, #31
}
 8005bd0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 8005bd4:	f7ff bfe6 	b.w	8005ba4 <stmpe811_DisableITSource>

08005bd8 <stmpe811_ReadGITStatus>:
{
 8005bd8:	b510      	push	{r4, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8005bda:	b2c0      	uxtb	r0, r0
{
 8005bdc:	460c      	mov	r4, r1
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8005bde:	210b      	movs	r1, #11
 8005be0:	f7fb fed0 	bl	8001984 <IOE_Read>
}
 8005be4:	4020      	ands	r0, r4
 8005be6:	bd10      	pop	{r4, pc}

08005be8 <stmpe811_TS_ITStatus>:
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
 8005be8:	211f      	movs	r1, #31
 8005bea:	f7ff bff5 	b.w	8005bd8 <stmpe811_ReadGITStatus>

08005bee <stmpe811_ClearGlobalIT>:
{
 8005bee:	460a      	mov	r2, r1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 8005bf0:	b2c0      	uxtb	r0, r0
 8005bf2:	210b      	movs	r1, #11
 8005bf4:	f7fb beae 	b.w	8001954 <IOE_Write>

08005bf8 <stmpe811_TS_ClearIT>:
  stmpe811_ClearGlobalIT(DeviceAddr, STMPE811_TS_IT);
 8005bf8:	211f      	movs	r1, #31
 8005bfa:	f7ff bff8 	b.w	8005bee <stmpe811_ClearGlobalIT>

08005bfe <stmpe811_IO_EnableAF>:
{
 8005bfe:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8005c00:	b2c4      	uxtb	r4, r0
{
 8005c02:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8005c04:	4620      	mov	r0, r4
 8005c06:	2117      	movs	r1, #23
 8005c08:	f7fb febc 	bl	8001984 <IOE_Read>
  tmp &= ~(uint8_t)IO_Pin;   
 8005c0c:	ea20 0005 	bic.w	r0, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8005c10:	b2c2      	uxtb	r2, r0
 8005c12:	2117      	movs	r1, #23
 8005c14:	4620      	mov	r0, r4
}
 8005c16:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8005c1a:	f7fb be9b 	b.w	8001954 <IOE_Write>

08005c1e <stmpe811_TS_Start>:
{
 8005c1e:	b570      	push	{r4, r5, r6, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8005c20:	b2c4      	uxtb	r4, r0
{
 8005c22:	4606      	mov	r6, r0
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8005c24:	2104      	movs	r1, #4
 8005c26:	4620      	mov	r0, r4
 8005c28:	f7fb feac 	bl	8001984 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8005c2c:	2104      	movs	r1, #4
 8005c2e:	f000 02fb 	and.w	r2, r0, #251	; 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8005c32:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8005c34:	4620      	mov	r0, r4
 8005c36:	f7fb fe8d 	bl	8001954 <IOE_Write>
  stmpe811_IO_EnableAF(DeviceAddr, STMPE811_TOUCH_IO_ALL);
 8005c3a:	4630      	mov	r0, r6
 8005c3c:	21f0      	movs	r1, #240	; 0xf0
 8005c3e:	f7ff ffde 	bl	8005bfe <stmpe811_IO_EnableAF>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8005c42:	f005 02f8 	and.w	r2, r5, #248	; 0xf8
 8005c46:	4620      	mov	r0, r4
 8005c48:	2104      	movs	r1, #4
 8005c4a:	f7fb fe83 	bl	8001954 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 8005c4e:	2249      	movs	r2, #73	; 0x49
 8005c50:	2120      	movs	r1, #32
 8005c52:	4620      	mov	r0, r4
 8005c54:	f7fb fe7e 	bl	8001954 <IOE_Write>
  IOE_Delay(2); 
 8005c58:	2002      	movs	r0, #2
 8005c5a:	f7fb fec3 	bl	80019e4 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 8005c5e:	4620      	mov	r0, r4
 8005c60:	2201      	movs	r2, #1
 8005c62:	2121      	movs	r1, #33	; 0x21
 8005c64:	f7fb fe76 	bl	8001954 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 8005c68:	4620      	mov	r0, r4
 8005c6a:	229a      	movs	r2, #154	; 0x9a
 8005c6c:	2141      	movs	r1, #65	; 0x41
 8005c6e:	f7fb fe71 	bl	8001954 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 8005c72:	4620      	mov	r0, r4
 8005c74:	2201      	movs	r2, #1
 8005c76:	214a      	movs	r1, #74	; 0x4a
 8005c78:	f7fb fe6c 	bl	8001954 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8005c7c:	4620      	mov	r0, r4
 8005c7e:	2201      	movs	r2, #1
 8005c80:	214b      	movs	r1, #75	; 0x4b
 8005c82:	f7fb fe67 	bl	8001954 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8005c86:	4620      	mov	r0, r4
 8005c88:	2200      	movs	r2, #0
 8005c8a:	214b      	movs	r1, #75	; 0x4b
 8005c8c:	f7fb fe62 	bl	8001954 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 8005c90:	4620      	mov	r0, r4
 8005c92:	2201      	movs	r2, #1
 8005c94:	2156      	movs	r1, #86	; 0x56
 8005c96:	f7fb fe5d 	bl	8001954 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 8005c9a:	4620      	mov	r0, r4
 8005c9c:	2201      	movs	r2, #1
 8005c9e:	2158      	movs	r1, #88	; 0x58
 8005ca0:	f7fb fe58 	bl	8001954 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 8005ca4:	4620      	mov	r0, r4
 8005ca6:	2201      	movs	r2, #1
 8005ca8:	2140      	movs	r1, #64	; 0x40
 8005caa:	f7fb fe53 	bl	8001954 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 8005cae:	4620      	mov	r0, r4
 8005cb0:	22ff      	movs	r2, #255	; 0xff
 8005cb2:	210b      	movs	r1, #11
 8005cb4:	f7fb fe4e 	bl	8001954 <IOE_Write>
}
 8005cb8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  IOE_Delay(2); 
 8005cbc:	2002      	movs	r0, #2
 8005cbe:	f7fb be91 	b.w	80019e4 <IOE_Delay>
	...

08005cc4 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8005cc4:	4b05      	ldr	r3, [pc, #20]	; (8005cdc <SystemInit+0x18>)
 8005cc6:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 8005cca:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 8005cce:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8005cd2:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8005cd6:	609a      	str	r2, [r3, #8]
#endif
}
 8005cd8:	4770      	bx	lr
 8005cda:	bf00      	nop
 8005cdc:	e000ed00 	.word	0xe000ed00

08005ce0 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8005ce0:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8005ce2:	4b0b      	ldr	r3, [pc, #44]	; (8005d10 <HAL_Init+0x30>)
 8005ce4:	681a      	ldr	r2, [r3, #0]
 8005ce6:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005cea:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8005cec:	681a      	ldr	r2, [r3, #0]
 8005cee:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8005cf2:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8005cf4:	681a      	ldr	r2, [r3, #0]
 8005cf6:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8005cfa:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8005cfc:	2003      	movs	r0, #3
 8005cfe:	f000 f9e9 	bl	80060d4 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8005d02:	2000      	movs	r0, #0
 8005d04:	f7fc f9c6 	bl	8002094 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8005d08:	f7fb ff02 	bl	8001b10 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8005d0c:	2000      	movs	r0, #0
 8005d0e:	bd08      	pop	{r3, pc}
 8005d10:	40023c00 	.word	0x40023c00

08005d14 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8005d14:	4a03      	ldr	r2, [pc, #12]	; (8005d24 <HAL_IncTick+0x10>)
 8005d16:	4b04      	ldr	r3, [pc, #16]	; (8005d28 <HAL_IncTick+0x14>)
 8005d18:	6811      	ldr	r1, [r2, #0]
 8005d1a:	781b      	ldrb	r3, [r3, #0]
 8005d1c:	440b      	add	r3, r1
 8005d1e:	6013      	str	r3, [r2, #0]
}
 8005d20:	4770      	bx	lr
 8005d22:	bf00      	nop
 8005d24:	2000479c 	.word	0x2000479c
 8005d28:	20000080 	.word	0x20000080

08005d2c <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8005d2c:	4b01      	ldr	r3, [pc, #4]	; (8005d34 <HAL_GetTick+0x8>)
 8005d2e:	6818      	ldr	r0, [r3, #0]
}
 8005d30:	4770      	bx	lr
 8005d32:	bf00      	nop
 8005d34:	2000479c 	.word	0x2000479c

08005d38 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8005d38:	b538      	push	{r3, r4, r5, lr}
 8005d3a:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8005d3c:	f7ff fff6 	bl	8005d2c <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8005d40:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 8005d42:	bf1c      	itt	ne
 8005d44:	4b05      	ldrne	r3, [pc, #20]	; (8005d5c <HAL_Delay+0x24>)
 8005d46:	781b      	ldrbne	r3, [r3, #0]
  uint32_t tickstart = HAL_GetTick();
 8005d48:	4605      	mov	r5, r0
    wait += (uint32_t)(uwTickFreq);
 8005d4a:	bf18      	it	ne
 8005d4c:	18e4      	addne	r4, r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 8005d4e:	f7ff ffed 	bl	8005d2c <HAL_GetTick>
 8005d52:	1b43      	subs	r3, r0, r5
 8005d54:	42a3      	cmp	r3, r4
 8005d56:	d3fa      	bcc.n	8005d4e <HAL_Delay+0x16>
  {
  }
}
 8005d58:	bd38      	pop	{r3, r4, r5, pc}
 8005d5a:	bf00      	nop
 8005d5c:	20000080 	.word	0x20000080

08005d60 <HAL_ADC_Init>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef* hadc)
{
 8005d60:	b538      	push	{r3, r4, r5, lr}
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;
  
  /* Check ADC handle */
  if(hadc == NULL)
 8005d62:	4604      	mov	r4, r0
 8005d64:	2800      	cmp	r0, #0
 8005d66:	f000 809b 	beq.w	8005ea0 <HAL_ADC_Init+0x140>
  if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
  {
    assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
  }
  
  if(hadc->State == HAL_ADC_STATE_RESET)
 8005d6a:	6c05      	ldr	r5, [r0, #64]	; 0x40
 8005d6c:	b925      	cbnz	r5, 8005d78 <HAL_ADC_Init+0x18>

    /* Init the low level hardware */
    hadc->MspInitCallback(hadc);
#else
    /* Init the low level hardware */
    HAL_ADC_MspInit(hadc);
 8005d6e:	f7fb feef 	bl	8001b50 <HAL_ADC_MspInit>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */

    /* Initialize ADC error code */
    ADC_CLEAR_ERRORCODE(hadc);
 8005d72:	6465      	str	r5, [r4, #68]	; 0x44
    
    /* Allocate lock resource and initialize it */
    hadc->Lock = HAL_UNLOCKED;
 8005d74:	f884 503c 	strb.w	r5, [r4, #60]	; 0x3c
  }
  
  /* Configuration of ADC parameters if previous preliminary actions are      */ 
  /* correctly completed.                                                     */
  if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 8005d78:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005d7a:	06db      	lsls	r3, r3, #27
 8005d7c:	f100 808e 	bmi.w	8005e9c <HAL_ADC_Init+0x13c>
  {
    /* Set ADC state */
    ADC_STATE_CLR_SET(hadc->State,
 8005d80:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005d82:	f423 5388 	bic.w	r3, r3, #4352	; 0x1100
 8005d86:	f023 0302 	bic.w	r3, r3, #2
 8005d8a:	f043 0302 	orr.w	r3, r3, #2
 8005d8e:	6423      	str	r3, [r4, #64]	; 0x40
  /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
  /* control register)                                                    */
  tmpADC_Common = ADC_COMMON_REGISTER(hadc);
  
  /* Set the ADC clock prescaler */
  tmpADC_Common->CCR &= ~(ADC_CCR_ADCPRE);
 8005d90:	4b44      	ldr	r3, [pc, #272]	; (8005ea4 <HAL_ADC_Init+0x144>)
 8005d92:	685a      	ldr	r2, [r3, #4]
 8005d94:	f422 3240 	bic.w	r2, r2, #196608	; 0x30000
 8005d98:	605a      	str	r2, [r3, #4]
  tmpADC_Common->CCR |=  hadc->Init.ClockPrescaler;
 8005d9a:	685a      	ldr	r2, [r3, #4]
 8005d9c:	6861      	ldr	r1, [r4, #4]
 8005d9e:	430a      	orrs	r2, r1
 8005da0:	605a      	str	r2, [r3, #4]
  
  /* Set ADC scan mode */
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 8005da2:	6823      	ldr	r3, [r4, #0]
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 8005da4:	6921      	ldr	r1, [r4, #16]
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 8005da6:	685a      	ldr	r2, [r3, #4]
 8005da8:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8005dac:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 8005dae:	685a      	ldr	r2, [r3, #4]
 8005db0:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8005db4:	605a      	str	r2, [r3, #4]
  
  /* Set ADC resolution */
  hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 8005db6:	685a      	ldr	r2, [r3, #4]
  hadc->Instance->CR1 |=  hadc->Init.Resolution;
 8005db8:	68a1      	ldr	r1, [r4, #8]
  hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 8005dba:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 8005dbe:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  hadc->Init.Resolution;
 8005dc0:	685a      	ldr	r2, [r3, #4]
 8005dc2:	430a      	orrs	r2, r1
 8005dc4:	605a      	str	r2, [r3, #4]
  
  /* Set ADC data alignment */
  hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 8005dc6:	689a      	ldr	r2, [r3, #8]
  hadc->Instance->CR2 |= hadc->Init.DataAlign;
 8005dc8:	68e1      	ldr	r1, [r4, #12]
  hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 8005dca:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8005dce:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= hadc->Init.DataAlign;
 8005dd0:	689a      	ldr	r2, [r3, #8]
 8005dd2:	430a      	orrs	r2, r1
 8005dd4:	609a      	str	r2, [r3, #8]
  /* Enable external trigger if trigger selection is different of software  */
  /* start.                                                                 */
  /* Note: This configuration keeps the hardware feature of parameter       */
  /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
  /*       software start.                                                  */
  if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 8005dd6:	4934      	ldr	r1, [pc, #208]	; (8005ea8 <HAL_ADC_Init+0x148>)
 8005dd8:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8005dda:	428a      	cmp	r2, r1
 8005ddc:	d052      	beq.n	8005e84 <HAL_ADC_Init+0x124>
  {
    /* Select external trigger to start conversion */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 8005dde:	6899      	ldr	r1, [r3, #8]
 8005de0:	f021 6170 	bic.w	r1, r1, #251658240	; 0xf000000
 8005de4:	6099      	str	r1, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConv;
 8005de6:	6899      	ldr	r1, [r3, #8]
 8005de8:	430a      	orrs	r2, r1
 8005dea:	609a      	str	r2, [r3, #8]
    
    /* Select external trigger polarity */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8005dec:	689a      	ldr	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 8005dee:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8005df0:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8005df4:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 8005df6:	689a      	ldr	r2, [r3, #8]
 8005df8:	430a      	orrs	r2, r1
  }
  else
  {
    /* Reset the external trigger */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8005dfa:	609a      	str	r2, [r3, #8]
  }
  
  /* Enable or disable ADC continuous conversion mode */
  hadc->Instance->CR2 &= ~(ADC_CR2_CONT);
 8005dfc:	689a      	ldr	r2, [r3, #8]
 8005dfe:	f022 0202 	bic.w	r2, r2, #2
 8005e02:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode);
 8005e04:	689a      	ldr	r2, [r3, #8]
 8005e06:	7e21      	ldrb	r1, [r4, #24]
 8005e08:	ea42 0241 	orr.w	r2, r2, r1, lsl #1
 8005e0c:	609a      	str	r2, [r3, #8]
  
  if(hadc->Init.DiscontinuousConvMode != DISABLE)
 8005e0e:	f894 2020 	ldrb.w	r2, [r4, #32]
 8005e12:	2a00      	cmp	r2, #0
 8005e14:	d03e      	beq.n	8005e94 <HAL_ADC_Init+0x134>
  {
    assert_param(IS_ADC_REGULAR_DISC_NUMBER(hadc->Init.NbrOfDiscConversion));
  
    /* Enable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 8005e16:	685a      	ldr	r2, [r3, #4]
    
    /* Set the number of channels to be converted in discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
    hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 8005e18:	6a61      	ldr	r1, [r4, #36]	; 0x24
    hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 8005e1a:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8005e1e:	605a      	str	r2, [r3, #4]
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
 8005e20:	685a      	ldr	r2, [r3, #4]
 8005e22:	f422 4260 	bic.w	r2, r2, #57344	; 0xe000
 8005e26:	605a      	str	r2, [r3, #4]
    hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 8005e28:	685a      	ldr	r2, [r3, #4]
 8005e2a:	3901      	subs	r1, #1
 8005e2c:	ea42 3241 	orr.w	r2, r2, r1, lsl #13
  }
  else
  {
    /* Disable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 8005e30:	605a      	str	r2, [r3, #4]
  }
  
  /* Set ADC number of conversion */
  hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 8005e32:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 8005e34:	69e1      	ldr	r1, [r4, #28]
  hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 8005e36:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 8005e3a:	62da      	str	r2, [r3, #44]	; 0x2c
  hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 8005e3c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8005e3e:	3901      	subs	r1, #1
 8005e40:	ea42 5201 	orr.w	r2, r2, r1, lsl #20
 8005e44:	62da      	str	r2, [r3, #44]	; 0x2c
  
  /* Enable or disable ADC DMA continuous request */
  hadc->Instance->CR2 &= ~(ADC_CR2_DDS);
 8005e46:	689a      	ldr	r2, [r3, #8]
 8005e48:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8005e4c:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_DMAContReq((uint32_t)hadc->Init.DMAContinuousRequests);
 8005e4e:	689a      	ldr	r2, [r3, #8]
 8005e50:	f894 1030 	ldrb.w	r1, [r4, #48]	; 0x30
 8005e54:	ea42 2241 	orr.w	r2, r2, r1, lsl #9
 8005e58:	609a      	str	r2, [r3, #8]
  
  /* Enable or disable ADC end of conversion selection */
  hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 8005e5a:	689a      	ldr	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 8005e5c:	6961      	ldr	r1, [r4, #20]
  hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 8005e5e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005e62:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 8005e64:	689a      	ldr	r2, [r3, #8]
    ADC_CLEAR_ERRORCODE(hadc);
 8005e66:	2000      	movs	r0, #0
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 8005e68:	ea42 2281 	orr.w	r2, r2, r1, lsl #10
 8005e6c:	609a      	str	r2, [r3, #8]
    ADC_CLEAR_ERRORCODE(hadc);
 8005e6e:	6460      	str	r0, [r4, #68]	; 0x44
    ADC_STATE_CLR_SET(hadc->State,
 8005e70:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005e72:	f023 0303 	bic.w	r3, r3, #3
 8005e76:	f043 0301 	orr.w	r3, r3, #1
 8005e7a:	6423      	str	r3, [r4, #64]	; 0x40
  __HAL_UNLOCK(hadc);
 8005e7c:	2300      	movs	r3, #0
 8005e7e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
}
 8005e82:	bd38      	pop	{r3, r4, r5, pc}
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 8005e84:	689a      	ldr	r2, [r3, #8]
 8005e86:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 8005e8a:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8005e8c:	689a      	ldr	r2, [r3, #8]
 8005e8e:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8005e92:	e7b2      	b.n	8005dfa <HAL_ADC_Init+0x9a>
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 8005e94:	685a      	ldr	r2, [r3, #4]
 8005e96:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8005e9a:	e7c9      	b.n	8005e30 <HAL_ADC_Init+0xd0>
    tmp_hal_status = HAL_ERROR;
 8005e9c:	2001      	movs	r0, #1
 8005e9e:	e7ed      	b.n	8005e7c <HAL_ADC_Init+0x11c>
    return HAL_ERROR;
 8005ea0:	2001      	movs	r0, #1
 8005ea2:	e7ee      	b.n	8005e82 <HAL_ADC_Init+0x122>
 8005ea4:	40012300 	.word	0x40012300
 8005ea8:	0f000001 	.word	0x0f000001

08005eac <HAL_ADC_Start>:
{
 8005eac:	b082      	sub	sp, #8
  __IO uint32_t counter = 0U;
 8005eae:	2300      	movs	r3, #0
 8005eb0:	9301      	str	r3, [sp, #4]
  __HAL_LOCK(hadc);
 8005eb2:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 8005eb6:	2b01      	cmp	r3, #1
 8005eb8:	d060      	beq.n	8005f7c <HAL_ADC_Start+0xd0>
 8005eba:	2301      	movs	r3, #1
 8005ebc:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  if((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 8005ec0:	6803      	ldr	r3, [r0, #0]
 8005ec2:	689a      	ldr	r2, [r3, #8]
 8005ec4:	07d2      	lsls	r2, r2, #31
 8005ec6:	d505      	bpl.n	8005ed4 <HAL_ADC_Start+0x28>
  if(HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_ADON))
 8005ec8:	689a      	ldr	r2, [r3, #8]
 8005eca:	07d1      	lsls	r1, r2, #31
 8005ecc:	d414      	bmi.n	8005ef8 <HAL_ADC_Start+0x4c>
  return HAL_OK;
 8005ece:	2000      	movs	r0, #0
}
 8005ed0:	b002      	add	sp, #8
 8005ed2:	4770      	bx	lr
    __HAL_ADC_ENABLE(hadc);
 8005ed4:	689a      	ldr	r2, [r3, #8]
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 8005ed6:	492a      	ldr	r1, [pc, #168]	; (8005f80 <HAL_ADC_Start+0xd4>)
    __HAL_ADC_ENABLE(hadc);
 8005ed8:	f042 0201 	orr.w	r2, r2, #1
 8005edc:	609a      	str	r2, [r3, #8]
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 8005ede:	4a29      	ldr	r2, [pc, #164]	; (8005f84 <HAL_ADC_Start+0xd8>)
 8005ee0:	6812      	ldr	r2, [r2, #0]
 8005ee2:	fbb2 f2f1 	udiv	r2, r2, r1
 8005ee6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
      counter--;
 8005eea:	9201      	str	r2, [sp, #4]
    while(counter != 0U)
 8005eec:	9a01      	ldr	r2, [sp, #4]
 8005eee:	2a00      	cmp	r2, #0
 8005ef0:	d0ea      	beq.n	8005ec8 <HAL_ADC_Start+0x1c>
      counter--;
 8005ef2:	9a01      	ldr	r2, [sp, #4]
 8005ef4:	3a01      	subs	r2, #1
 8005ef6:	e7f8      	b.n	8005eea <HAL_ADC_Start+0x3e>
    ADC_STATE_CLR_SET(hadc->State,
 8005ef8:	6c02      	ldr	r2, [r0, #64]	; 0x40
 8005efa:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 8005efe:	f022 0201 	bic.w	r2, r2, #1
 8005f02:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8005f06:	6402      	str	r2, [r0, #64]	; 0x40
    if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
 8005f08:	685a      	ldr	r2, [r3, #4]
 8005f0a:	0552      	lsls	r2, r2, #21
      ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
 8005f0c:	bf41      	itttt	mi
 8005f0e:	6c02      	ldrmi	r2, [r0, #64]	; 0x40
 8005f10:	f422 5240 	bicmi.w	r2, r2, #12288	; 0x3000
 8005f14:	f442 5280 	orrmi.w	r2, r2, #4096	; 0x1000
 8005f18:	6402      	strmi	r2, [r0, #64]	; 0x40
    if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 8005f1a:	6c02      	ldr	r2, [r0, #64]	; 0x40
 8005f1c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
      CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
 8005f20:	bf1c      	itt	ne
 8005f22:	6c42      	ldrne	r2, [r0, #68]	; 0x44
 8005f24:	f022 0206 	bicne.w	r2, r2, #6
      ADC_CLEAR_ERRORCODE(hadc);
 8005f28:	6442      	str	r2, [r0, #68]	; 0x44
    __HAL_UNLOCK(hadc);
 8005f2a:	2200      	movs	r2, #0
 8005f2c:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC | ADC_FLAG_OVR);
 8005f30:	f06f 0222 	mvn.w	r2, #34	; 0x22
 8005f34:	601a      	str	r2, [r3, #0]
    if(HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_MULTI))
 8005f36:	4a14      	ldr	r2, [pc, #80]	; (8005f88 <HAL_ADC_Start+0xdc>)
 8005f38:	6851      	ldr	r1, [r2, #4]
 8005f3a:	f011 0f1f 	tst.w	r1, #31
 8005f3e:	4913      	ldr	r1, [pc, #76]	; (8005f8c <HAL_ADC_Start+0xe0>)
 8005f40:	d119      	bne.n	8005f76 <HAL_ADC_Start+0xca>
      if((hadc->Instance == ADC1) || ((hadc->Instance == ADC2) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_0)) \
 8005f42:	428b      	cmp	r3, r1
 8005f44:	d007      	beq.n	8005f56 <HAL_ADC_Start+0xaa>
 8005f46:	f501 7180 	add.w	r1, r1, #256	; 0x100
 8005f4a:	428b      	cmp	r3, r1
 8005f4c:	d10c      	bne.n	8005f68 <HAL_ADC_Start+0xbc>
 8005f4e:	6852      	ldr	r2, [r2, #4]
 8005f50:	f012 0f1f 	tst.w	r2, #31
                                  || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
 8005f54:	d1bb      	bne.n	8005ece <HAL_ADC_Start+0x22>
      if((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 8005f56:	6898      	ldr	r0, [r3, #8]
 8005f58:	f010 5040 	ands.w	r0, r0, #805306368	; 0x30000000
 8005f5c:	d1b7      	bne.n	8005ece <HAL_ADC_Start+0x22>
          hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 8005f5e:	689a      	ldr	r2, [r3, #8]
 8005f60:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8005f64:	609a      	str	r2, [r3, #8]
 8005f66:	e7b3      	b.n	8005ed0 <HAL_ADC_Start+0x24>
                                  || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
 8005f68:	4909      	ldr	r1, [pc, #36]	; (8005f90 <HAL_ADC_Start+0xe4>)
 8005f6a:	428b      	cmp	r3, r1
 8005f6c:	d1af      	bne.n	8005ece <HAL_ADC_Start+0x22>
 8005f6e:	6852      	ldr	r2, [r2, #4]
 8005f70:	f012 0f10 	tst.w	r2, #16
 8005f74:	e7ee      	b.n	8005f54 <HAL_ADC_Start+0xa8>
      if((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 8005f76:	428b      	cmp	r3, r1
 8005f78:	d1a9      	bne.n	8005ece <HAL_ADC_Start+0x22>
 8005f7a:	e7ec      	b.n	8005f56 <HAL_ADC_Start+0xaa>
  __HAL_LOCK(hadc);
 8005f7c:	2002      	movs	r0, #2
 8005f7e:	e7a7      	b.n	8005ed0 <HAL_ADC_Start+0x24>
 8005f80:	000f4240 	.word	0x000f4240
 8005f84:	2000007c 	.word	0x2000007c
 8005f88:	40012300 	.word	0x40012300
 8005f8c:	40012000 	.word	0x40012000
 8005f90:	40012200 	.word	0x40012200

08005f94 <HAL_ADC_GetValue>:
  return hadc->Instance->DR;
 8005f94:	6803      	ldr	r3, [r0, #0]
 8005f96:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
}
 8005f98:	4770      	bx	lr
	...

08005f9c <HAL_ADC_ConfigChannel>:
{
 8005f9c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  __IO uint32_t counter = 0U;
 8005f9e:	2300      	movs	r3, #0
 8005fa0:	9301      	str	r3, [sp, #4]
  __HAL_LOCK(hadc);
 8005fa2:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 8005fa6:	2b01      	cmp	r3, #1
 8005fa8:	d069      	beq.n	800607e <HAL_ADC_ConfigChannel+0xe2>
 8005faa:	2301      	movs	r3, #1
 8005fac:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  if (sConfig->Channel > ADC_CHANNEL_9)
 8005fb0:	680d      	ldr	r5, [r1, #0]
    hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 8005fb2:	6803      	ldr	r3, [r0, #0]
    hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
 8005fb4:	688e      	ldr	r6, [r1, #8]
  if (sConfig->Channel > ADC_CHANNEL_9)
 8005fb6:	2d09      	cmp	r5, #9
 8005fb8:	b2ac      	uxth	r4, r5
 8005fba:	d934      	bls.n	8006026 <HAL_ADC_ConfigChannel+0x8a>
    hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 8005fbc:	eb04 0244 	add.w	r2, r4, r4, lsl #1
 8005fc0:	68df      	ldr	r7, [r3, #12]
 8005fc2:	3a1e      	subs	r2, #30
 8005fc4:	f04f 0c07 	mov.w	ip, #7
 8005fc8:	fa0c fc02 	lsl.w	ip, ip, r2
 8005fcc:	ea27 070c 	bic.w	r7, r7, ip
 8005fd0:	60df      	str	r7, [r3, #12]
    hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
 8005fd2:	68df      	ldr	r7, [r3, #12]
 8005fd4:	fa06 f202 	lsl.w	r2, r6, r2
 8005fd8:	433a      	orrs	r2, r7
 8005fda:	60da      	str	r2, [r3, #12]
  if (sConfig->Rank < 7U)
 8005fdc:	6849      	ldr	r1, [r1, #4]
 8005fde:	2906      	cmp	r1, #6
    hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 8005fe0:	eb01 0281 	add.w	r2, r1, r1, lsl #2
  if (sConfig->Rank < 7U)
 8005fe4:	d82f      	bhi.n	8006046 <HAL_ADC_ConfigChannel+0xaa>
    hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 8005fe6:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8005fe8:	3a05      	subs	r2, #5
 8005fea:	261f      	movs	r6, #31
 8005fec:	4096      	lsls	r6, r2
 8005fee:	ea21 0106 	bic.w	r1, r1, r6
 8005ff2:	6359      	str	r1, [r3, #52]	; 0x34
    hadc->Instance->SQR3 |= ADC_SQR3_RK(sConfig->Channel, sConfig->Rank);
 8005ff4:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8005ff6:	fa04 f202 	lsl.w	r2, r4, r2
 8005ffa:	430a      	orrs	r2, r1
 8005ffc:	635a      	str	r2, [r3, #52]	; 0x34
  if ((hadc->Instance == ADC1) && (sConfig->Channel == ADC_CHANNEL_VBAT))
 8005ffe:	4a30      	ldr	r2, [pc, #192]	; (80060c0 <HAL_ADC_ConfigChannel+0x124>)
 8006000:	4293      	cmp	r3, r2
 8006002:	d10a      	bne.n	800601a <HAL_ADC_ConfigChannel+0x7e>
 8006004:	2d12      	cmp	r5, #18
 8006006:	d13c      	bne.n	8006082 <HAL_ADC_ConfigChannel+0xe6>
      tmpADC_Common->CCR &= ~ADC_CCR_TSVREFE;
 8006008:	4b2e      	ldr	r3, [pc, #184]	; (80060c4 <HAL_ADC_ConfigChannel+0x128>)
 800600a:	685a      	ldr	r2, [r3, #4]
 800600c:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 8006010:	605a      	str	r2, [r3, #4]
    tmpADC_Common->CCR |= ADC_CCR_VBATE;
 8006012:	685a      	ldr	r2, [r3, #4]
 8006014:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 8006018:	605a      	str	r2, [r3, #4]
  __HAL_UNLOCK(hadc);
 800601a:	2300      	movs	r3, #0
 800601c:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  return HAL_OK;
 8006020:	4618      	mov	r0, r3
}
 8006022:	b003      	add	sp, #12
 8006024:	bdf0      	pop	{r4, r5, r6, r7, pc}
    hadc->Instance->SMPR2 &= ~ADC_SMPR2(ADC_SMPR2_SMP0, sConfig->Channel);
 8006026:	691f      	ldr	r7, [r3, #16]
 8006028:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 800602c:	f04f 0c07 	mov.w	ip, #7
 8006030:	fa0c fc02 	lsl.w	ip, ip, r2
 8006034:	ea27 070c 	bic.w	r7, r7, ip
 8006038:	611f      	str	r7, [r3, #16]
    hadc->Instance->SMPR2 |= ADC_SMPR2(sConfig->SamplingTime, sConfig->Channel);
 800603a:	691f      	ldr	r7, [r3, #16]
 800603c:	fa06 f202 	lsl.w	r2, r6, r2
 8006040:	433a      	orrs	r2, r7
 8006042:	611a      	str	r2, [r3, #16]
 8006044:	e7ca      	b.n	8005fdc <HAL_ADC_ConfigChannel+0x40>
  else if (sConfig->Rank < 13U)
 8006046:	290c      	cmp	r1, #12
 8006048:	f04f 011f 	mov.w	r1, #31
 800604c:	d80b      	bhi.n	8006066 <HAL_ADC_ConfigChannel+0xca>
    hadc->Instance->SQR2 &= ~ADC_SQR2_RK(ADC_SQR2_SQ7, sConfig->Rank);
 800604e:	6b1e      	ldr	r6, [r3, #48]	; 0x30
 8006050:	3a23      	subs	r2, #35	; 0x23
 8006052:	4091      	lsls	r1, r2
 8006054:	ea26 0101 	bic.w	r1, r6, r1
 8006058:	6319      	str	r1, [r3, #48]	; 0x30
    hadc->Instance->SQR2 |= ADC_SQR2_RK(sConfig->Channel, sConfig->Rank);
 800605a:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800605c:	fa04 f202 	lsl.w	r2, r4, r2
 8006060:	430a      	orrs	r2, r1
 8006062:	631a      	str	r2, [r3, #48]	; 0x30
 8006064:	e7cb      	b.n	8005ffe <HAL_ADC_ConfigChannel+0x62>
    hadc->Instance->SQR1 &= ~ADC_SQR1_RK(ADC_SQR1_SQ13, sConfig->Rank);
 8006066:	6ade      	ldr	r6, [r3, #44]	; 0x2c
 8006068:	3a41      	subs	r2, #65	; 0x41
 800606a:	4091      	lsls	r1, r2
 800606c:	ea26 0101 	bic.w	r1, r6, r1
 8006070:	62d9      	str	r1, [r3, #44]	; 0x2c
    hadc->Instance->SQR1 |= ADC_SQR1_RK(sConfig->Channel, sConfig->Rank);
 8006072:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8006074:	fa04 f202 	lsl.w	r2, r4, r2
 8006078:	430a      	orrs	r2, r1
 800607a:	62da      	str	r2, [r3, #44]	; 0x2c
 800607c:	e7bf      	b.n	8005ffe <HAL_ADC_ConfigChannel+0x62>
  __HAL_LOCK(hadc);
 800607e:	2002      	movs	r0, #2
 8006080:	e7cf      	b.n	8006022 <HAL_ADC_ConfigChannel+0x86>
  if ((hadc->Instance == ADC1) && ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) || (sConfig->Channel == ADC_CHANNEL_VREFINT)))
 8006082:	4b11      	ldr	r3, [pc, #68]	; (80060c8 <HAL_ADC_ConfigChannel+0x12c>)
 8006084:	429d      	cmp	r5, r3
 8006086:	d001      	beq.n	800608c <HAL_ADC_ConfigChannel+0xf0>
 8006088:	2d11      	cmp	r5, #17
 800608a:	d1c6      	bne.n	800601a <HAL_ADC_ConfigChannel+0x7e>
      tmpADC_Common->CCR &= ~ADC_CCR_VBATE;
 800608c:	4b0d      	ldr	r3, [pc, #52]	; (80060c4 <HAL_ADC_ConfigChannel+0x128>)
 800608e:	685a      	ldr	r2, [r3, #4]
 8006090:	f422 0280 	bic.w	r2, r2, #4194304	; 0x400000
 8006094:	605a      	str	r2, [r3, #4]
    tmpADC_Common->CCR |= ADC_CCR_TSVREFE;
 8006096:	685a      	ldr	r2, [r3, #4]
 8006098:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 800609c:	605a      	str	r2, [r3, #4]
    if((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR))
 800609e:	4b0a      	ldr	r3, [pc, #40]	; (80060c8 <HAL_ADC_ConfigChannel+0x12c>)
 80060a0:	429d      	cmp	r5, r3
 80060a2:	d1ba      	bne.n	800601a <HAL_ADC_ConfigChannel+0x7e>
      counter = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000U));
 80060a4:	4b09      	ldr	r3, [pc, #36]	; (80060cc <HAL_ADC_ConfigChannel+0x130>)
 80060a6:	4a0a      	ldr	r2, [pc, #40]	; (80060d0 <HAL_ADC_ConfigChannel+0x134>)
 80060a8:	681b      	ldr	r3, [r3, #0]
 80060aa:	fbb3 f3f2 	udiv	r3, r3, r2
 80060ae:	220a      	movs	r2, #10
 80060b0:	4353      	muls	r3, r2
        counter--;
 80060b2:	9301      	str	r3, [sp, #4]
      while(counter != 0U)
 80060b4:	9b01      	ldr	r3, [sp, #4]
 80060b6:	2b00      	cmp	r3, #0
 80060b8:	d0af      	beq.n	800601a <HAL_ADC_ConfigChannel+0x7e>
        counter--;
 80060ba:	9b01      	ldr	r3, [sp, #4]
 80060bc:	3b01      	subs	r3, #1
 80060be:	e7f8      	b.n	80060b2 <HAL_ADC_ConfigChannel+0x116>
 80060c0:	40012000 	.word	0x40012000
 80060c4:	40012300 	.word	0x40012300
 80060c8:	10000012 	.word	0x10000012
 80060cc:	2000007c 	.word	0x2000007c
 80060d0:	000f4240 	.word	0x000f4240

080060d4 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 80060d4:	4907      	ldr	r1, [pc, #28]	; (80060f4 <HAL_NVIC_SetPriorityGrouping+0x20>)
 80060d6:	68ca      	ldr	r2, [r1, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80060d8:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80060dc:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80060de:	0412      	lsls	r2, r2, #16
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80060e0:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80060e4:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 80060e6:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 80060e8:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80060ec:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 80060f0:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 80060f2:	4770      	bx	lr
 80060f4:	e000ed00 	.word	0xe000ed00

080060f8 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 80060f8:	4b16      	ldr	r3, [pc, #88]	; (8006154 <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 80060fa:	b530      	push	{r4, r5, lr}
 80060fc:	68dc      	ldr	r4, [r3, #12]
 80060fe:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8006102:	f1c4 0507 	rsb	r5, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8006106:	1d23      	adds	r3, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8006108:	2d04      	cmp	r5, #4
 800610a:	bf28      	it	cs
 800610c:	2504      	movcs	r5, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800610e:	2b06      	cmp	r3, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8006110:	f04f 33ff 	mov.w	r3, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8006114:	bf8c      	ite	hi
 8006116:	3c03      	subhi	r4, #3
 8006118:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800611a:	fa03 f505 	lsl.w	r5, r3, r5
 800611e:	ea21 0105 	bic.w	r1, r1, r5
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8006122:	40a3      	lsls	r3, r4
 8006124:	ea22 0203 	bic.w	r2, r2, r3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8006128:	40a1      	lsls	r1, r4
  if ((int32_t)(IRQn) >= 0)
 800612a:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800612c:	ea41 0302 	orr.w	r3, r1, r2
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8006130:	bfac      	ite	ge
 8006132:	f100 4060 	addge.w	r0, r0, #3758096384	; 0xe0000000
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8006136:	4a08      	ldrlt	r2, [pc, #32]	; (8006158 <HAL_NVIC_SetPriority+0x60>)
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8006138:	ea4f 1303 	mov.w	r3, r3, lsl #4
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800613c:	bfb8      	it	lt
 800613e:	f000 000f 	andlt.w	r0, r0, #15
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8006142:	b2db      	uxtb	r3, r3
 8006144:	bfaa      	itet	ge
 8006146:	f500 4061 	addge.w	r0, r0, #57600	; 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800614a:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800614c:	f880 3300 	strbge.w	r3, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8006150:	bd30      	pop	{r4, r5, pc}
 8006152:	bf00      	nop
 8006154:	e000ed00 	.word	0xe000ed00
 8006158:	e000ed14 	.word	0xe000ed14

0800615c <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 800615c:	2800      	cmp	r0, #0
 800615e:	db08      	blt.n	8006172 <HAL_NVIC_EnableIRQ+0x16>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8006160:	0942      	lsrs	r2, r0, #5
 8006162:	2301      	movs	r3, #1
 8006164:	f000 001f 	and.w	r0, r0, #31
 8006168:	fa03 f000 	lsl.w	r0, r3, r0
 800616c:	4b01      	ldr	r3, [pc, #4]	; (8006174 <HAL_NVIC_EnableIRQ+0x18>)
 800616e:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8006172:	4770      	bx	lr
 8006174:	e000e100 	.word	0xe000e100

08006178 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8006178:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 800617a:	4604      	mov	r4, r0
 800617c:	b150      	cbz	r0, 8006194 <HAL_CRC_Init+0x1c>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 800617e:	7943      	ldrb	r3, [r0, #5]
 8006180:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006184:	b913      	cbnz	r3, 800618c <HAL_CRC_Init+0x14>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 8006186:	7102      	strb	r2, [r0, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8006188:	f7fb fd32 	bl	8001bf0 <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 800618c:	2301      	movs	r3, #1
 800618e:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 8006190:	2000      	movs	r0, #0
}
 8006192:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8006194:	2001      	movs	r0, #1
 8006196:	e7fc      	b.n	8006192 <HAL_CRC_Init+0x1a>

08006198 <HAL_DAC_Init>:
  * @param  hdac pointer to a DAC_HandleTypeDef structure that contains
  *         the configuration information for the specified DAC.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DAC_Init(DAC_HandleTypeDef* hdac)
{ 
 8006198:	b510      	push	{r4, lr}
  /* Check DAC handle */
  if(hdac == NULL)
 800619a:	4604      	mov	r4, r0
 800619c:	b168      	cbz	r0, 80061ba <HAL_DAC_Init+0x22>
     return HAL_ERROR;
  }
  /* Check the parameters */
  assert_param(IS_DAC_ALL_INSTANCE(hdac->Instance));
  
  if(hdac->State == HAL_DAC_STATE_RESET)
 800619e:	7903      	ldrb	r3, [r0, #4]
 80061a0:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80061a4:	b913      	cbnz	r3, 80061ac <HAL_DAC_Init+0x14>
    {
      hdac->MspInitCallback               = HAL_DAC_MspInit;
    }
#endif /* USE_HAL_DAC_REGISTER_CALLBACKS */
    /* Allocate lock resource and initialize it */
    hdac->Lock = HAL_UNLOCKED;
 80061a6:	7142      	strb	r2, [r0, #5]
#if (USE_HAL_DAC_REGISTER_CALLBACKS == 1)
    /* Init the low level hardware */
    hdac->MspInitCallback(hdac);
#else
    /* Init the low level hardware */
    HAL_DAC_MspInit(hdac);
 80061a8:	f7fb fd3a 	bl	8001c20 <HAL_DAC_MspInit>
#endif /* USE_HAL_DAC_REGISTER_CALLBACKS */
  }
  
  /* Initialize the DAC state*/
  hdac->State = HAL_DAC_STATE_BUSY;
 80061ac:	2302      	movs	r3, #2
 80061ae:	7123      	strb	r3, [r4, #4]
  
  /* Set DAC error code to none */
  hdac->ErrorCode = HAL_DAC_ERROR_NONE;
 80061b0:	2000      	movs	r0, #0
  
  /* Initialize the DAC state*/
  hdac->State = HAL_DAC_STATE_READY;
 80061b2:	2301      	movs	r3, #1
  hdac->ErrorCode = HAL_DAC_ERROR_NONE;
 80061b4:	6120      	str	r0, [r4, #16]
  hdac->State = HAL_DAC_STATE_READY;
 80061b6:	7123      	strb	r3, [r4, #4]
  
  /* Return function status */
  return HAL_OK;
}
 80061b8:	bd10      	pop	{r4, pc}
     return HAL_ERROR;
 80061ba:	2001      	movs	r0, #1
 80061bc:	e7fc      	b.n	80061b8 <HAL_DAC_Init+0x20>

080061be <HAL_DAC_Start>:
  *            @arg DAC_CHANNEL_1: DAC Channel1 selected
  *            @arg DAC_CHANNEL_2: DAC Channel2 selected
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DAC_Start(DAC_HandleTypeDef* hdac, uint32_t Channel)
{
 80061be:	b510      	push	{r4, lr}
  
  /* Check the parameters */
  assert_param(IS_DAC_CHANNEL(Channel));
  
  /* Process locked */
  __HAL_LOCK(hdac);
 80061c0:	7943      	ldrb	r3, [r0, #5]
 80061c2:	2b01      	cmp	r3, #1
 80061c4:	f04f 0302 	mov.w	r3, #2
 80061c8:	d017      	beq.n	80061fa <HAL_DAC_Start+0x3c>
  
  /* Change DAC state */
  hdac->State = HAL_DAC_STATE_BUSY;
 80061ca:	7103      	strb	r3, [r0, #4]
  
  /* Enable the Peripheral */
  __HAL_DAC_ENABLE(hdac, Channel);
 80061cc:	6803      	ldr	r3, [r0, #0]
 80061ce:	2201      	movs	r2, #1
 80061d0:	681c      	ldr	r4, [r3, #0]
 80061d2:	408a      	lsls	r2, r1
 80061d4:	4322      	orrs	r2, r4
 80061d6:	601a      	str	r2, [r3, #0]
  
  if(Channel == DAC_CHANNEL_1)
 80061d8:	b989      	cbnz	r1, 80061fe <HAL_DAC_Start+0x40>
  {
    tmp1 = hdac->Instance->CR & DAC_CR_TEN1;
 80061da:	6819      	ldr	r1, [r3, #0]
    tmp2 = hdac->Instance->CR & DAC_CR_TSEL1;
 80061dc:	681a      	ldr	r2, [r3, #0]
    /* Check if software trigger enabled */
    if((tmp1 ==  DAC_CR_TEN1) && (tmp2 ==  DAC_CR_TSEL1))
 80061de:	074c      	lsls	r4, r1, #29
 80061e0:	d507      	bpl.n	80061f2 <HAL_DAC_Start+0x34>
    tmp2 = hdac->Instance->CR & DAC_CR_TSEL1;
 80061e2:	f002 0238 	and.w	r2, r2, #56	; 0x38
    if((tmp1 ==  DAC_CR_TEN1) && (tmp2 ==  DAC_CR_TSEL1))
 80061e6:	2a38      	cmp	r2, #56	; 0x38
 80061e8:	d103      	bne.n	80061f2 <HAL_DAC_Start+0x34>
    {
      /* Enable the selected DAC software conversion */
      hdac->Instance->SWTRIGR |= (uint32_t)DAC_SWTRIGR_SWTRIG1;
 80061ea:	685a      	ldr	r2, [r3, #4]
 80061ec:	f042 0201 	orr.w	r2, r2, #1
    tmp2 = hdac->Instance->CR & DAC_CR_TSEL2;    
    /* Check if software trigger enabled */
    if((tmp1 == DAC_CR_TEN2) && (tmp2 == DAC_CR_TSEL2))
    {
      /* Enable the selected DAC software conversion*/
      hdac->Instance->SWTRIGR |= (uint32_t)DAC_SWTRIGR_SWTRIG2;
 80061f0:	605a      	str	r2, [r3, #4]
    }
  }
  
  /* Change DAC state */
  hdac->State = HAL_DAC_STATE_READY;
 80061f2:	2301      	movs	r3, #1
 80061f4:	7103      	strb	r3, [r0, #4]
  
  /* Process unlocked */
  __HAL_UNLOCK(hdac);
 80061f6:	2300      	movs	r3, #0
 80061f8:	7143      	strb	r3, [r0, #5]
  __HAL_LOCK(hdac);
 80061fa:	4618      	mov	r0, r3
    
  /* Return function status */
  return HAL_OK;
}
 80061fc:	bd10      	pop	{r4, pc}
    tmp1 = hdac->Instance->CR & DAC_CR_TEN2;
 80061fe:	6819      	ldr	r1, [r3, #0]
    tmp2 = hdac->Instance->CR & DAC_CR_TSEL2;    
 8006200:	681a      	ldr	r2, [r3, #0]
    if((tmp1 == DAC_CR_TEN2) && (tmp2 == DAC_CR_TSEL2))
 8006202:	0349      	lsls	r1, r1, #13
 8006204:	d5f5      	bpl.n	80061f2 <HAL_DAC_Start+0x34>
    tmp2 = hdac->Instance->CR & DAC_CR_TSEL2;    
 8006206:	f402 1260 	and.w	r2, r2, #3670016	; 0x380000
    if((tmp1 == DAC_CR_TEN2) && (tmp2 == DAC_CR_TSEL2))
 800620a:	f5b2 1f60 	cmp.w	r2, #3670016	; 0x380000
 800620e:	d1f0      	bne.n	80061f2 <HAL_DAC_Start+0x34>
      hdac->Instance->SWTRIGR |= (uint32_t)DAC_SWTRIGR_SWTRIG2;
 8006210:	685a      	ldr	r2, [r3, #4]
 8006212:	f042 0202 	orr.w	r2, r2, #2
 8006216:	e7eb      	b.n	80061f0 <HAL_DAC_Start+0x32>

08006218 <HAL_DAC_ConfigChannel>:
  *            @arg DAC_CHANNEL_1: DAC Channel1 selected
  *            @arg DAC_CHANNEL_2: DAC Channel2 selected
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DAC_ConfigChannel(DAC_HandleTypeDef* hdac, DAC_ChannelConfTypeDef* sConfig, uint32_t Channel)
{
 8006218:	b530      	push	{r4, r5, lr}
  assert_param(IS_DAC_TRIGGER(sConfig->DAC_Trigger));
  assert_param(IS_DAC_OUTPUT_BUFFER_STATE(sConfig->DAC_OutputBuffer));
  assert_param(IS_DAC_CHANNEL(Channel));
  
  /* Process locked */
  __HAL_LOCK(hdac);
 800621a:	7943      	ldrb	r3, [r0, #5]
 800621c:	2b01      	cmp	r3, #1
 800621e:	f04f 0302 	mov.w	r3, #2
 8006222:	d018      	beq.n	8006256 <HAL_DAC_ConfigChannel+0x3e>
  
  /* Change DAC state */
  hdac->State = HAL_DAC_STATE_BUSY;
  
  /* Get the DAC CR value */
  tmpreg1 = hdac->Instance->CR;
 8006224:	6804      	ldr	r4, [r0, #0]
  hdac->State = HAL_DAC_STATE_BUSY;
 8006226:	7103      	strb	r3, [r0, #4]
  tmpreg1 = hdac->Instance->CR;
 8006228:	6823      	ldr	r3, [r4, #0]
  /* Clear BOFFx, TENx, TSELx, WAVEx and MAMPx bits */
  tmpreg1 &= ~(((uint32_t)(DAC_CR_MAMP1 | DAC_CR_WAVE1 | DAC_CR_TSEL1 | DAC_CR_TEN1 | DAC_CR_BOFF1)) << Channel);
 800622a:	f640 75fe 	movw	r5, #4094	; 0xffe
 800622e:	4095      	lsls	r5, r2
 8006230:	ea23 0505 	bic.w	r5, r3, r5
  /* Configure for the selected DAC channel: buffer output, trigger */
  /* Set TSELx and TENx bits according to DAC_Trigger value */
  /* Set BOFFx bit according to DAC_OutputBuffer value */   
  tmpreg2 = (sConfig->DAC_Trigger | sConfig->DAC_OutputBuffer);
 8006234:	e9d1 3100 	ldrd	r3, r1, [r1]
 8006238:	430b      	orrs	r3, r1
  /* Calculate CR register value depending on DAC_Channel */
  tmpreg1 |= tmpreg2 << Channel;
 800623a:	4093      	lsls	r3, r2
 800623c:	432b      	orrs	r3, r5
  /* Write to DAC CR */
  hdac->Instance->CR = tmpreg1;
 800623e:	6023      	str	r3, [r4, #0]
  /* Disable wave generation */
  hdac->Instance->CR &= ~(DAC_CR_WAVE1 << Channel);
 8006240:	6823      	ldr	r3, [r4, #0]
 8006242:	21c0      	movs	r1, #192	; 0xc0
 8006244:	fa01 f202 	lsl.w	r2, r1, r2
 8006248:	ea23 0202 	bic.w	r2, r3, r2
  
  /* Change DAC state */
  hdac->State = HAL_DAC_STATE_READY;
 800624c:	2301      	movs	r3, #1
  hdac->Instance->CR &= ~(DAC_CR_WAVE1 << Channel);
 800624e:	6022      	str	r2, [r4, #0]
  hdac->State = HAL_DAC_STATE_READY;
 8006250:	7103      	strb	r3, [r0, #4]
  
  /* Process unlocked */
  __HAL_UNLOCK(hdac);
 8006252:	2300      	movs	r3, #0
 8006254:	7143      	strb	r3, [r0, #5]
  __HAL_LOCK(hdac);
 8006256:	4618      	mov	r0, r3
  
  /* Return function status */
  return HAL_OK;
}
 8006258:	bd30      	pop	{r4, r5, pc}

0800625a <HAL_DAC_SetValue>:
  *            @arg DAC_ALIGN_12B_R: 12bit right data alignment selected
  * @param  Data Data to be loaded in the selected data holding register.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DAC_SetValue(DAC_HandleTypeDef* hdac, uint32_t Channel, uint32_t Alignment, uint32_t Data)
{  
 800625a:	b513      	push	{r0, r1, r4, lr}
  /* Check the parameters */
  assert_param(IS_DAC_CHANNEL(Channel));
  assert_param(IS_DAC_ALIGN(Alignment));
  assert_param(IS_DAC_DATA(Data));
  
  tmp = (uint32_t)hdac->Instance; 
 800625c:	6800      	ldr	r0, [r0, #0]
  __IO uint32_t tmp = 0U;
 800625e:	2400      	movs	r4, #0
 8006260:	9401      	str	r4, [sp, #4]
  tmp = (uint32_t)hdac->Instance; 
 8006262:	9001      	str	r0, [sp, #4]
  if(Channel == DAC_CHANNEL_1)
 8006264:	b941      	cbnz	r1, 8006278 <HAL_DAC_SetValue+0x1e>
  {
    tmp += DAC_DHR12R1_ALIGNMENT(Alignment);
 8006266:	9901      	ldr	r1, [sp, #4]
 8006268:	3108      	adds	r1, #8
  }
  else
  {
    tmp += DAC_DHR12R2_ALIGNMENT(Alignment);
 800626a:	440a      	add	r2, r1
 800626c:	9201      	str	r2, [sp, #4]
  }

  /* Set the DAC channel1 selected data holding register */
  *(__IO uint32_t *) tmp = Data;
 800626e:	9a01      	ldr	r2, [sp, #4]
  
  /* Return function status */
  return HAL_OK;
}
 8006270:	2000      	movs	r0, #0
  *(__IO uint32_t *) tmp = Data;
 8006272:	6013      	str	r3, [r2, #0]
}
 8006274:	b002      	add	sp, #8
 8006276:	bd10      	pop	{r4, pc}
    tmp += DAC_DHR12R2_ALIGNMENT(Alignment);
 8006278:	9901      	ldr	r1, [sp, #4]
 800627a:	3114      	adds	r1, #20
 800627c:	e7f5      	b.n	800626a <HAL_DAC_SetValue+0x10>

0800627e <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 800627e:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if(hdma2d == NULL)
 8006280:	4604      	mov	r4, r0
 8006282:	b330      	cbz	r0, 80062d2 <HAL_DMA2D_Init+0x54>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if(hdma2d->State == HAL_DMA2D_STATE_RESET)
 8006284:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8006288:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800628c:	b91b      	cbnz	r3, 8006296 <HAL_DMA2D_Init+0x18>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 800628e:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 8006292:	f7fb fcf7 	bl	8001c84 <HAL_DMA2D_MspInit>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8006296:	6822      	ldr	r2, [r4, #0]
 8006298:	6861      	ldr	r1, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 800629a:	2302      	movs	r3, #2
 800629c:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 80062a0:	6813      	ldr	r3, [r2, #0]
 80062a2:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 80062a6:	430b      	orrs	r3, r1
 80062a8:	6013      	str	r3, [r2, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 80062aa:	6b53      	ldr	r3, [r2, #52]	; 0x34
 80062ac:	68a1      	ldr	r1, [r4, #8]
 80062ae:	f023 0307 	bic.w	r3, r3, #7
 80062b2:	430b      	orrs	r3, r1
 80062b4:	6353      	str	r3, [r2, #52]	; 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 80062b6:	6c13      	ldr	r3, [r2, #64]	; 0x40
 80062b8:	68e1      	ldr	r1, [r4, #12]
 80062ba:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 80062be:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 80062c2:	430b      	orrs	r3, r1
 80062c4:	6413      	str	r3, [r2, #64]	; 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 80062c6:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 80062c8:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 80062ca:	63e0      	str	r0, [r4, #60]	; 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 80062cc:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

  return HAL_OK;
}
 80062d0:	bd10      	pop	{r4, pc}
     return HAL_ERROR;
 80062d2:	2001      	movs	r0, #1
 80062d4:	e7fc      	b.n	80062d0 <HAL_DMA2D_Init+0x52>

080062d6 <HAL_DMA2D_LineEventCallback>:
 80062d6:	4770      	bx	lr

080062d8 <HAL_DMA2D_CLUTLoadingCpltCallback>:
 80062d8:	4770      	bx	lr

080062da <HAL_DMA2D_IRQHandler>:
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 80062da:	6803      	ldr	r3, [r0, #0]
{
 80062dc:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 80062de:	685e      	ldr	r6, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 80062e0:	681d      	ldr	r5, [r3, #0]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 80062e2:	07f2      	lsls	r2, r6, #31
{
 80062e4:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 80062e6:	d514      	bpl.n	8006312 <HAL_DMA2D_IRQHandler+0x38>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
 80062e8:	05e9      	lsls	r1, r5, #23
 80062ea:	d512      	bpl.n	8006312 <HAL_DMA2D_IRQHandler+0x38>
    {
      /* Disable the transfer Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 80062ec:	681a      	ldr	r2, [r3, #0]
 80062ee:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 80062f2:	601a      	str	r2, [r3, #0]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 80062f4:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 80062f6:	f042 0201 	orr.w	r2, r2, #1
 80062fa:	63c2      	str	r2, [r0, #60]	; 0x3c

      /* Clear the transfer error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 80062fc:	2201      	movs	r2, #1
 80062fe:	609a      	str	r2, [r3, #8]

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8006300:	2304      	movs	r3, #4
 8006302:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8006306:	2300      	movs	r3, #0
 8006308:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38

      if(hdma2d->XferErrorCallback != NULL)
 800630c:	6943      	ldr	r3, [r0, #20]
 800630e:	b103      	cbz	r3, 8006312 <HAL_DMA2D_IRQHandler+0x38>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8006310:	4798      	blx	r3
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 8006312:	06b2      	lsls	r2, r6, #26
 8006314:	d516      	bpl.n	8006344 <HAL_DMA2D_IRQHandler+0x6a>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
 8006316:	04ab      	lsls	r3, r5, #18
 8006318:	d514      	bpl.n	8006344 <HAL_DMA2D_IRQHandler+0x6a>
    {
      /* Disable the Configuration Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 800631a:	6823      	ldr	r3, [r4, #0]
 800631c:	681a      	ldr	r2, [r3, #0]
 800631e:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8006322:	601a      	str	r2, [r3, #0]

      /* Clear the Configuration error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 8006324:	2220      	movs	r2, #32
 8006326:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 8006328:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800632a:	f043 0302 	orr.w	r3, r3, #2
 800632e:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8006330:	2304      	movs	r3, #4
 8006332:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8006336:	2300      	movs	r3, #0
 8006338:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if(hdma2d->XferErrorCallback != NULL)
 800633c:	6963      	ldr	r3, [r4, #20]
 800633e:	b10b      	cbz	r3, 8006344 <HAL_DMA2D_IRQHandler+0x6a>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8006340:	4620      	mov	r0, r4
 8006342:	4798      	blx	r3
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 8006344:	0730      	lsls	r0, r6, #28
 8006346:	d516      	bpl.n	8006376 <HAL_DMA2D_IRQHandler+0x9c>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
 8006348:	0529      	lsls	r1, r5, #20
 800634a:	d514      	bpl.n	8006376 <HAL_DMA2D_IRQHandler+0x9c>
    {
      /* Disable the CLUT access error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 800634c:	6823      	ldr	r3, [r4, #0]
 800634e:	681a      	ldr	r2, [r3, #0]
 8006350:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8006354:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT access error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 8006356:	2208      	movs	r2, #8
 8006358:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 800635a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800635c:	f043 0304 	orr.w	r3, r3, #4
 8006360:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8006362:	2304      	movs	r3, #4
 8006364:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8006368:	2300      	movs	r3, #0
 800636a:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if(hdma2d->XferErrorCallback != NULL)
 800636e:	6963      	ldr	r3, [r4, #20]
 8006370:	b10b      	cbz	r3, 8006376 <HAL_DMA2D_IRQHandler+0x9c>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8006372:	4620      	mov	r0, r4
 8006374:	4798      	blx	r3
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 8006376:	0772      	lsls	r2, r6, #29
 8006378:	d50b      	bpl.n	8006392 <HAL_DMA2D_IRQHandler+0xb8>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
 800637a:	056b      	lsls	r3, r5, #21
 800637c:	d509      	bpl.n	8006392 <HAL_DMA2D_IRQHandler+0xb8>
    {
      /* Disable the transfer watermark interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 800637e:	6823      	ldr	r3, [r4, #0]
 8006380:	681a      	ldr	r2, [r3, #0]
 8006382:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006386:	601a      	str	r2, [r3, #0]

      /* Clear the transfer watermark flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 8006388:	2204      	movs	r2, #4
 800638a:	609a      	str	r2, [r3, #8]

      /* Transfer watermark Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->LineEventCallback(hdma2d);
#else
      HAL_DMA2D_LineEventCallback(hdma2d);
 800638c:	4620      	mov	r0, r4
 800638e:	f7ff ffa2 	bl	80062d6 <HAL_DMA2D_LineEventCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 8006392:	07b0      	lsls	r0, r6, #30
 8006394:	d514      	bpl.n	80063c0 <HAL_DMA2D_IRQHandler+0xe6>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
 8006396:	05a9      	lsls	r1, r5, #22
 8006398:	d512      	bpl.n	80063c0 <HAL_DMA2D_IRQHandler+0xe6>
    {
      /* Disable the transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 800639a:	6823      	ldr	r3, [r4, #0]
 800639c:	681a      	ldr	r2, [r3, #0]
 800639e:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 80063a2:	601a      	str	r2, [r3, #0]

      /* Clear the transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 80063a4:	2202      	movs	r2, #2
 80063a6:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 80063a8:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80063aa:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 80063ac:	2301      	movs	r3, #1
 80063ae:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 80063b2:	2300      	movs	r3, #0
 80063b4:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if(hdma2d->XferCpltCallback != NULL)
 80063b8:	6923      	ldr	r3, [r4, #16]
 80063ba:	b10b      	cbz	r3, 80063c0 <HAL_DMA2D_IRQHandler+0xe6>
      {
        /* Transfer complete Callback */
        hdma2d->XferCpltCallback(hdma2d);
 80063bc:	4620      	mov	r0, r4
 80063be:	4798      	blx	r3
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 80063c0:	06f2      	lsls	r2, r6, #27
 80063c2:	d513      	bpl.n	80063ec <HAL_DMA2D_IRQHandler+0x112>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
 80063c4:	04eb      	lsls	r3, r5, #19
 80063c6:	d511      	bpl.n	80063ec <HAL_DMA2D_IRQHandler+0x112>
    {
      /* Disable the CLUT transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 80063c8:	6823      	ldr	r3, [r4, #0]
 80063ca:	681a      	ldr	r2, [r3, #0]
 80063cc:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 80063d0:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 80063d2:	2210      	movs	r2, #16
 80063d4:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 80063d6:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80063d8:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 80063da:	2301      	movs	r3, #1
 80063dc:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 80063e0:	2300      	movs	r3, #0
 80063e2:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      /* CLUT Transfer complete Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->CLUTLoadingCpltCallback(hdma2d);
#else
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 80063e6:	4620      	mov	r0, r4
 80063e8:	f7ff ff76 	bl	80062d8 <HAL_DMA2D_CLUTLoadingCpltCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
 80063ec:	bd70      	pop	{r4, r5, r6, pc}
	...

080063f0 <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 80063f0:	b5f0      	push	{r4, r5, r6, r7, lr}
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 80063f2:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 80063f6:	2b01      	cmp	r3, #1
 80063f8:	f04f 0302 	mov.w	r3, #2
 80063fc:	d02b      	beq.n	8006456 <HAL_DMA2D_ConfigLayer+0x66>
 80063fe:	2201      	movs	r2, #1

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8006400:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  __HAL_LOCK(hdma2d);
 8006404:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8006408:	eb00 1301 	add.w	r3, r0, r1, lsl #4
 800640c:	e9d3 4207 	ldrd	r4, r2, [r3, #28]
 8006410:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 8006412:	4f18      	ldr	r7, [pc, #96]	; (8006474 <HAL_DMA2D_ConfigLayer+0x84>)
 8006414:	ea44 4202 	orr.w	r2, r4, r2, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8006418:	3c09      	subs	r4, #9
 800641a:	2c01      	cmp	r4, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 800641c:	bf9c      	itt	ls
 800641e:	f005 437f 	andls.w	r3, r5, #4278190080	; 0xff000000
 8006422:	431a      	orrls	r2, r3
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8006424:	ea4f 1601 	mov.w	r6, r1, lsl #4

  /* Configure the background DMA2D layer */
  if(LayerIdx == DMA2D_BACKGROUND_LAYER)
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8006428:	6803      	ldr	r3, [r0, #0]
    regValue |=  (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 800642a:	bf88      	it	hi
 800642c:	ea42 6205 	orrhi.w	r2, r2, r5, lsl #24
  if(LayerIdx == DMA2D_BACKGROUND_LAYER)
 8006430:	b999      	cbnz	r1, 800645a <HAL_DMA2D_ConfigLayer+0x6a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8006432:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8006434:	4039      	ands	r1, r7
 8006436:	430a      	orrs	r2, r1
 8006438:	625a      	str	r2, [r3, #36]	; 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800643a:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 800643c:	6982      	ldr	r2, [r0, #24]
 800643e:	619a      	str	r2, [r3, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8006440:	d803      	bhi.n	800644a <HAL_DMA2D_ConfigLayer+0x5a>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE|DMA2D_BGCOLR_GREEN|DMA2D_BGCOLR_RED));
 8006442:	6a42      	ldr	r2, [r0, #36]	; 0x24
 8006444:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 8006448:	629a      	str	r2, [r3, #40]	; 0x28
    {
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE|DMA2D_FGCOLR_GREEN|DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 800644a:	2301      	movs	r3, #1
 800644c:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 8006450:	2300      	movs	r3, #0
 8006452:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
  __HAL_LOCK(hdma2d);
 8006456:	4618      	mov	r0, r3

  return HAL_OK;
}
 8006458:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 800645a:	69d9      	ldr	r1, [r3, #28]
 800645c:	4039      	ands	r1, r7
 800645e:	430a      	orrs	r2, r1
 8006460:	61da      	str	r2, [r3, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8006462:	1982      	adds	r2, r0, r6
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8006464:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8006466:	6992      	ldr	r2, [r2, #24]
 8006468:	611a      	str	r2, [r3, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE|DMA2D_FGCOLR_GREEN|DMA2D_FGCOLR_RED));
 800646a:	bf9c      	itt	ls
 800646c:	f025 457f 	bicls.w	r5, r5, #4278190080	; 0xff000000
 8006470:	621d      	strls	r5, [r3, #32]
 8006472:	e7ea      	b.n	800644a <HAL_DMA2D_ConfigLayer+0x5a>
 8006474:	00fcfff0 	.word	0x00fcfff0

08006478 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8006478:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800647c:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8006640 <HAL_GPIO_Init+0x1c8>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8006480:	4a6d      	ldr	r2, [pc, #436]	; (8006638 <HAL_GPIO_Init+0x1c0>)
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8006482:	f8df 91c0 	ldr.w	r9, [pc, #448]	; 8006644 <HAL_GPIO_Init+0x1cc>
  for(position = 0U; position < GPIO_NUMBER; position++)
 8006486:	2300      	movs	r3, #0
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8006488:	680d      	ldr	r5, [r1, #0]
    ioposition = 0x01U << position;
 800648a:	2401      	movs	r4, #1
 800648c:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800648e:	ea04 0605 	and.w	r6, r4, r5
    if(iocurrent == ioposition)
 8006492:	43ac      	bics	r4, r5
 8006494:	f040 80b7 	bne.w	8006606 <HAL_GPIO_Init+0x18e>
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8006498:	684c      	ldr	r4, [r1, #4]
 800649a:	f024 0c10 	bic.w	ip, r4, #16
 800649e:	ea4f 0e43 	mov.w	lr, r3, lsl #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80064a2:	2503      	movs	r5, #3
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 80064a4:	f10c 37ff 	add.w	r7, ip, #4294967295
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80064a8:	fa05 f50e 	lsl.w	r5, r5, lr
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 80064ac:	2f01      	cmp	r7, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80064ae:	ea6f 0505 	mvn.w	r5, r5
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 80064b2:	d811      	bhi.n	80064d8 <HAL_GPIO_Init+0x60>
        temp = GPIOx->OSPEEDR; 
 80064b4:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80064b6:	ea07 0a05 	and.w	sl, r7, r5
        temp |= (GPIO_Init->Speed << (position * 2U));
 80064ba:	68cf      	ldr	r7, [r1, #12]
 80064bc:	fa07 f70e 	lsl.w	r7, r7, lr
 80064c0:	ea47 070a 	orr.w	r7, r7, sl
        GPIOx->OSPEEDR = temp;
 80064c4:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 80064c6:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 80064c8:	ea27 0a06 	bic.w	sl, r7, r6
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 80064cc:	f3c4 1700 	ubfx	r7, r4, #4, #1
 80064d0:	409f      	lsls	r7, r3
 80064d2:	ea47 070a 	orr.w	r7, r7, sl
        GPIOx->OTYPER = temp;
 80064d6:	6047      	str	r7, [r0, #4]
      temp = GPIOx->PUPDR;
 80064d8:	68c7      	ldr	r7, [r0, #12]
      temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 80064da:	ea07 0a05 	and.w	sl, r7, r5
      temp |= ((GPIO_Init->Pull) << (position * 2U));
 80064de:	688f      	ldr	r7, [r1, #8]
 80064e0:	fa07 f70e 	lsl.w	r7, r7, lr
 80064e4:	ea47 070a 	orr.w	r7, r7, sl
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 80064e8:	f1bc 0f02 	cmp.w	ip, #2
      GPIOx->PUPDR = temp;
 80064ec:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 80064ee:	d116      	bne.n	800651e <HAL_GPIO_Init+0xa6>
        temp = GPIOx->AFR[position >> 3U];
 80064f0:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
 80064f4:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80064f8:	f003 0b07 	and.w	fp, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 80064fc:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8006500:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 8006504:	f04f 0c0f 	mov.w	ip, #15
 8006508:	fa0c fc0b 	lsl.w	ip, ip, fp
 800650c:	ea27 0c0c 	bic.w	ip, r7, ip
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8006510:	690f      	ldr	r7, [r1, #16]
 8006512:	fa07 f70b 	lsl.w	r7, r7, fp
 8006516:	ea47 070c 	orr.w	r7, r7, ip
        GPIOx->AFR[position >> 3U] = temp;
 800651a:	f8ca 7020 	str.w	r7, [sl, #32]
      temp = GPIOx->MODER;
 800651e:	6807      	ldr	r7, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8006520:	403d      	ands	r5, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8006522:	f004 0703 	and.w	r7, r4, #3
 8006526:	fa07 f70e 	lsl.w	r7, r7, lr
 800652a:	433d      	orrs	r5, r7
      GPIOx->MODER = temp;
 800652c:	6005      	str	r5, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 800652e:	00e5      	lsls	r5, r4, #3
 8006530:	d569      	bpl.n	8006606 <HAL_GPIO_Init+0x18e>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8006532:	f04f 0b00 	mov.w	fp, #0
 8006536:	f8cd b004 	str.w	fp, [sp, #4]
 800653a:	f8d8 7044 	ldr.w	r7, [r8, #68]	; 0x44
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800653e:	4d3f      	ldr	r5, [pc, #252]	; (800663c <HAL_GPIO_Init+0x1c4>)
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8006540:	f447 4780 	orr.w	r7, r7, #16384	; 0x4000
 8006544:	f8c8 7044 	str.w	r7, [r8, #68]	; 0x44
 8006548:	f8d8 7044 	ldr.w	r7, [r8, #68]	; 0x44
 800654c:	f407 4780 	and.w	r7, r7, #16384	; 0x4000
 8006550:	9701      	str	r7, [sp, #4]
 8006552:	9f01      	ldr	r7, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
 8006554:	f023 0703 	bic.w	r7, r3, #3
 8006558:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 800655c:	f507 379c 	add.w	r7, r7, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8006560:	f003 0e03 	and.w	lr, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 8006564:	f8d7 a008 	ldr.w	sl, [r7, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8006568:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 800656c:	f04f 0c0f 	mov.w	ip, #15
 8006570:	fa0c fc0e 	lsl.w	ip, ip, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8006574:	42a8      	cmp	r0, r5
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8006576:	ea2a 0c0c 	bic.w	ip, sl, ip
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800657a:	d04b      	beq.n	8006614 <HAL_GPIO_Init+0x19c>
 800657c:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8006580:	42a8      	cmp	r0, r5
 8006582:	d049      	beq.n	8006618 <HAL_GPIO_Init+0x1a0>
 8006584:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8006588:	42a8      	cmp	r0, r5
 800658a:	d047      	beq.n	800661c <HAL_GPIO_Init+0x1a4>
 800658c:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8006590:	42a8      	cmp	r0, r5
 8006592:	d045      	beq.n	8006620 <HAL_GPIO_Init+0x1a8>
 8006594:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8006598:	42a8      	cmp	r0, r5
 800659a:	d043      	beq.n	8006624 <HAL_GPIO_Init+0x1ac>
 800659c:	4548      	cmp	r0, r9
 800659e:	d043      	beq.n	8006628 <HAL_GPIO_Init+0x1b0>
 80065a0:	f505 6500 	add.w	r5, r5, #2048	; 0x800
 80065a4:	42a8      	cmp	r0, r5
 80065a6:	d041      	beq.n	800662c <HAL_GPIO_Init+0x1b4>
 80065a8:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 80065ac:	42a8      	cmp	r0, r5
 80065ae:	d03f      	beq.n	8006630 <HAL_GPIO_Init+0x1b8>
 80065b0:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 80065b4:	42a8      	cmp	r0, r5
 80065b6:	d03d      	beq.n	8006634 <HAL_GPIO_Init+0x1bc>
 80065b8:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 80065bc:	42a8      	cmp	r0, r5
 80065be:	bf0c      	ite	eq
 80065c0:	2509      	moveq	r5, #9
 80065c2:	250a      	movne	r5, #10
 80065c4:	fa05 f50e 	lsl.w	r5, r5, lr
 80065c8:	ea45 050c 	orr.w	r5, r5, ip
        SYSCFG->EXTICR[position >> 2U] = temp;
 80065cc:	60bd      	str	r5, [r7, #8]
        temp = EXTI->IMR;
 80065ce:	6815      	ldr	r5, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
 80065d0:	43f7      	mvns	r7, r6
        if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 80065d2:	f414 3f80 	tst.w	r4, #65536	; 0x10000
        temp &= ~((uint32_t)iocurrent);
 80065d6:	bf0c      	ite	eq
 80065d8:	403d      	andeq	r5, r7
        {
          temp |= iocurrent;
 80065da:	4335      	orrne	r5, r6
        }
        EXTI->IMR = temp;
 80065dc:	6015      	str	r5, [r2, #0]

        temp = EXTI->EMR;
 80065de:	6855      	ldr	r5, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 80065e0:	f414 3f00 	tst.w	r4, #131072	; 0x20000
        temp &= ~((uint32_t)iocurrent);
 80065e4:	bf0c      	ite	eq
 80065e6:	403d      	andeq	r5, r7
        {
          temp |= iocurrent;
 80065e8:	4335      	orrne	r5, r6
        }
        EXTI->EMR = temp;
 80065ea:	6055      	str	r5, [r2, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 80065ec:	6895      	ldr	r5, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 80065ee:	f414 1f80 	tst.w	r4, #1048576	; 0x100000
        temp &= ~((uint32_t)iocurrent);
 80065f2:	bf0c      	ite	eq
 80065f4:	403d      	andeq	r5, r7
        {
          temp |= iocurrent;
 80065f6:	4335      	orrne	r5, r6
        }
        EXTI->RTSR = temp;
 80065f8:	6095      	str	r5, [r2, #8]

        temp = EXTI->FTSR;
 80065fa:	68d5      	ldr	r5, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 80065fc:	02a4      	lsls	r4, r4, #10
        temp &= ~((uint32_t)iocurrent);
 80065fe:	bf54      	ite	pl
 8006600:	403d      	andpl	r5, r7
        {
          temp |= iocurrent;
 8006602:	4335      	orrmi	r5, r6
        }
        EXTI->FTSR = temp;
 8006604:	60d5      	str	r5, [r2, #12]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8006606:	3301      	adds	r3, #1
 8006608:	2b10      	cmp	r3, #16
 800660a:	f47f af3d 	bne.w	8006488 <HAL_GPIO_Init+0x10>
      }
    }
  }
}
 800660e:	b003      	add	sp, #12
 8006610:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8006614:	465d      	mov	r5, fp
 8006616:	e7d5      	b.n	80065c4 <HAL_GPIO_Init+0x14c>
 8006618:	2501      	movs	r5, #1
 800661a:	e7d3      	b.n	80065c4 <HAL_GPIO_Init+0x14c>
 800661c:	2502      	movs	r5, #2
 800661e:	e7d1      	b.n	80065c4 <HAL_GPIO_Init+0x14c>
 8006620:	2503      	movs	r5, #3
 8006622:	e7cf      	b.n	80065c4 <HAL_GPIO_Init+0x14c>
 8006624:	2504      	movs	r5, #4
 8006626:	e7cd      	b.n	80065c4 <HAL_GPIO_Init+0x14c>
 8006628:	2505      	movs	r5, #5
 800662a:	e7cb      	b.n	80065c4 <HAL_GPIO_Init+0x14c>
 800662c:	2506      	movs	r5, #6
 800662e:	e7c9      	b.n	80065c4 <HAL_GPIO_Init+0x14c>
 8006630:	2507      	movs	r5, #7
 8006632:	e7c7      	b.n	80065c4 <HAL_GPIO_Init+0x14c>
 8006634:	2508      	movs	r5, #8
 8006636:	e7c5      	b.n	80065c4 <HAL_GPIO_Init+0x14c>
 8006638:	40013c00 	.word	0x40013c00
 800663c:	40020000 	.word	0x40020000
 8006640:	40023800 	.word	0x40023800
 8006644:	40021400 	.word	0x40021400

08006648 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8006648:	b10a      	cbz	r2, 800664e <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800664a:	6181      	str	r1, [r0, #24]
  }
}
 800664c:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800664e:	0409      	lsls	r1, r1, #16
 8006650:	e7fb      	b.n	800664a <HAL_GPIO_WritePin+0x2>

08006652 <I2C_IsAcknowledgeFailed>:
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8006652:	6801      	ldr	r1, [r0, #0]
 8006654:	694b      	ldr	r3, [r1, #20]
 8006656:	f413 6380 	ands.w	r3, r3, #1024	; 0x400
 800665a:	f04f 0200 	mov.w	r2, #0
 800665e:	d010      	beq.n	8006682 <I2C_IsAcknowledgeFailed+0x30>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8006660:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 8006664:	614b      	str	r3, [r1, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
    hi2c->State               = HAL_I2C_STATE_READY;
 8006666:	2320      	movs	r3, #32
    hi2c->PreviousState       = I2C_STATE_NONE;
 8006668:	6302      	str	r2, [r0, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800666a:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800666e:	f880 203e 	strb.w	r2, [r0, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8006672:	6c03      	ldr	r3, [r0, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8006674:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8006678:	f043 0304 	orr.w	r3, r3, #4
 800667c:	6403      	str	r3, [r0, #64]	; 0x40

    return HAL_ERROR;
 800667e:	2001      	movs	r0, #1
 8006680:	4770      	bx	lr
  }
  return HAL_OK;
 8006682:	4618      	mov	r0, r3
}
 8006684:	4770      	bx	lr

08006686 <I2C_WaitOnFlagUntilTimeout>:
{
 8006686:	e92d 46f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r9, sl, lr}
 800668a:	4606      	mov	r6, r0
 800668c:	460f      	mov	r7, r1
 800668e:	4691      	mov	r9, r2
 8006690:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8006692:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 8006696:	6833      	ldr	r3, [r6, #0]
 8006698:	f1ba 0f01 	cmp.w	sl, #1
 800669c:	bf0c      	ite	eq
 800669e:	695c      	ldreq	r4, [r3, #20]
 80066a0:	699c      	ldrne	r4, [r3, #24]
 80066a2:	ea27 0404 	bic.w	r4, r7, r4
 80066a6:	b2a4      	uxth	r4, r4
 80066a8:	fab4 f484 	clz	r4, r4
 80066ac:	0964      	lsrs	r4, r4, #5
 80066ae:	45a1      	cmp	r9, r4
 80066b0:	d001      	beq.n	80066b6 <I2C_WaitOnFlagUntilTimeout+0x30>
  return HAL_OK;
 80066b2:	2000      	movs	r0, #0
 80066b4:	e017      	b.n	80066e6 <I2C_WaitOnFlagUntilTimeout+0x60>
    if (Timeout != HAL_MAX_DELAY)
 80066b6:	1c6a      	adds	r2, r5, #1
 80066b8:	d0ee      	beq.n	8006698 <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80066ba:	f7ff fb37 	bl	8005d2c <HAL_GetTick>
 80066be:	9b08      	ldr	r3, [sp, #32]
 80066c0:	1ac0      	subs	r0, r0, r3
 80066c2:	42a8      	cmp	r0, r5
 80066c4:	d801      	bhi.n	80066ca <I2C_WaitOnFlagUntilTimeout+0x44>
 80066c6:	2d00      	cmp	r5, #0
 80066c8:	d1e5      	bne.n	8006696 <I2C_WaitOnFlagUntilTimeout+0x10>
        hi2c->PreviousState     = I2C_STATE_NONE;
 80066ca:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 80066cc:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 80066ce:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 80066d0:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 80066d4:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80066d8:	6c32      	ldr	r2, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 80066da:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80066de:	f042 0220 	orr.w	r2, r2, #32
 80066e2:	6432      	str	r2, [r6, #64]	; 0x40
        return HAL_ERROR;
 80066e4:	2001      	movs	r0, #1
}
 80066e6:	e8bd 86f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r9, sl, pc}

080066ea <I2C_WaitOnMasterAddressFlagUntilTimeout>:
{
 80066ea:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80066ee:	4604      	mov	r4, r0
 80066f0:	460f      	mov	r7, r1
 80066f2:	4616      	mov	r6, r2
 80066f4:	4698      	mov	r8, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 80066f6:	6825      	ldr	r5, [r4, #0]
 80066f8:	6968      	ldr	r0, [r5, #20]
 80066fa:	ea27 0000 	bic.w	r0, r7, r0
 80066fe:	b280      	uxth	r0, r0
 8006700:	b1b8      	cbz	r0, 8006732 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x48>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8006702:	696b      	ldr	r3, [r5, #20]
 8006704:	055a      	lsls	r2, r3, #21
 8006706:	d516      	bpl.n	8006736 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4c>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006708:	682b      	ldr	r3, [r5, #0]
 800670a:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800670e:	602b      	str	r3, [r5, #0]
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8006710:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 8006714:	616b      	str	r3, [r5, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8006716:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8006718:	2300      	movs	r3, #0
 800671a:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800671c:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8006720:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8006724:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8006726:	f042 0204 	orr.w	r2, r2, #4
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800672a:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800672c:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        return HAL_ERROR;
 8006730:	2001      	movs	r0, #1
}
 8006732:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (Timeout != HAL_MAX_DELAY)
 8006736:	1c73      	adds	r3, r6, #1
 8006738:	d0de      	beq.n	80066f8 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800673a:	f7ff faf7 	bl	8005d2c <HAL_GetTick>
 800673e:	eba0 0008 	sub.w	r0, r0, r8
 8006742:	42b0      	cmp	r0, r6
 8006744:	d801      	bhi.n	800674a <I2C_WaitOnMasterAddressFlagUntilTimeout+0x60>
 8006746:	2e00      	cmp	r6, #0
 8006748:	d1d5      	bne.n	80066f6 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800674a:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800674c:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800674e:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8006750:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8006754:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8006758:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800675a:	f042 0220 	orr.w	r2, r2, #32
 800675e:	e7e4      	b.n	800672a <I2C_WaitOnMasterAddressFlagUntilTimeout+0x40>

08006760 <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 8006760:	b570      	push	{r4, r5, r6, lr}
 8006762:	4604      	mov	r4, r0
 8006764:	460d      	mov	r5, r1
 8006766:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8006768:	6821      	ldr	r1, [r4, #0]
 800676a:	694b      	ldr	r3, [r1, #20]
 800676c:	f013 0340 	ands.w	r3, r3, #64	; 0x40
 8006770:	d001      	beq.n	8006776 <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
  return HAL_OK;
 8006772:	2000      	movs	r0, #0
 8006774:	e010      	b.n	8006798 <I2C_WaitOnRXNEFlagUntilTimeout+0x38>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8006776:	694a      	ldr	r2, [r1, #20]
 8006778:	06d2      	lsls	r2, r2, #27
 800677a:	d50e      	bpl.n	800679a <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800677c:	f06f 0210 	mvn.w	r2, #16
 8006780:	614a      	str	r2, [r1, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8006782:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8006784:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8006786:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800678a:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 800678e:	6c22      	ldr	r2, [r4, #64]	; 0x40
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8006790:	6422      	str	r2, [r4, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 8006792:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
      return HAL_ERROR;
 8006796:	2001      	movs	r0, #1
}
 8006798:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800679a:	f7ff fac7 	bl	8005d2c <HAL_GetTick>
 800679e:	1b80      	subs	r0, r0, r6
 80067a0:	42a8      	cmp	r0, r5
 80067a2:	d801      	bhi.n	80067a8 <I2C_WaitOnRXNEFlagUntilTimeout+0x48>
 80067a4:	2d00      	cmp	r5, #0
 80067a6:	d1df      	bne.n	8006768 <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
      hi2c->PreviousState       = I2C_STATE_NONE;
 80067a8:	2300      	movs	r3, #0
      hi2c->State               = HAL_I2C_STATE_READY;
 80067aa:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 80067ac:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 80067ae:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 80067b2:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80067b6:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80067b8:	f042 0220 	orr.w	r2, r2, #32
 80067bc:	e7e8      	b.n	8006790 <I2C_WaitOnRXNEFlagUntilTimeout+0x30>

080067be <I2C_WaitOnBTFFlagUntilTimeout>:
{
 80067be:	b570      	push	{r4, r5, r6, lr}
 80067c0:	4604      	mov	r4, r0
 80067c2:	460d      	mov	r5, r1
 80067c4:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 80067c6:	6823      	ldr	r3, [r4, #0]
 80067c8:	695b      	ldr	r3, [r3, #20]
 80067ca:	075b      	lsls	r3, r3, #29
 80067cc:	d501      	bpl.n	80067d2 <I2C_WaitOnBTFFlagUntilTimeout+0x14>
  return HAL_OK;
 80067ce:	2000      	movs	r0, #0
}
 80067d0:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 80067d2:	4620      	mov	r0, r4
 80067d4:	f7ff ff3d 	bl	8006652 <I2C_IsAcknowledgeFailed>
 80067d8:	b9a8      	cbnz	r0, 8006806 <I2C_WaitOnBTFFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 80067da:	1c6a      	adds	r2, r5, #1
 80067dc:	d0f3      	beq.n	80067c6 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80067de:	f7ff faa5 	bl	8005d2c <HAL_GetTick>
 80067e2:	1b80      	subs	r0, r0, r6
 80067e4:	42a8      	cmp	r0, r5
 80067e6:	d801      	bhi.n	80067ec <I2C_WaitOnBTFFlagUntilTimeout+0x2e>
 80067e8:	2d00      	cmp	r5, #0
 80067ea:	d1ec      	bne.n	80067c6 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
        hi2c->PreviousState       = I2C_STATE_NONE;
 80067ec:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 80067ee:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 80067f0:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 80067f2:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 80067f6:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80067fa:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 80067fc:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8006800:	f042 0220 	orr.w	r2, r2, #32
 8006804:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 8006806:	2001      	movs	r0, #1
 8006808:	e7e2      	b.n	80067d0 <I2C_WaitOnBTFFlagUntilTimeout+0x12>

0800680a <I2C_WaitOnTXEFlagUntilTimeout>:
{
 800680a:	b570      	push	{r4, r5, r6, lr}
 800680c:	4604      	mov	r4, r0
 800680e:	460d      	mov	r5, r1
 8006810:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8006812:	6823      	ldr	r3, [r4, #0]
 8006814:	695b      	ldr	r3, [r3, #20]
 8006816:	061b      	lsls	r3, r3, #24
 8006818:	d501      	bpl.n	800681e <I2C_WaitOnTXEFlagUntilTimeout+0x14>
  return HAL_OK;
 800681a:	2000      	movs	r0, #0
}
 800681c:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 800681e:	4620      	mov	r0, r4
 8006820:	f7ff ff17 	bl	8006652 <I2C_IsAcknowledgeFailed>
 8006824:	b9a8      	cbnz	r0, 8006852 <I2C_WaitOnTXEFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 8006826:	1c6a      	adds	r2, r5, #1
 8006828:	d0f3      	beq.n	8006812 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800682a:	f7ff fa7f 	bl	8005d2c <HAL_GetTick>
 800682e:	1b80      	subs	r0, r0, r6
 8006830:	42a8      	cmp	r0, r5
 8006832:	d801      	bhi.n	8006838 <I2C_WaitOnTXEFlagUntilTimeout+0x2e>
 8006834:	2d00      	cmp	r5, #0
 8006836:	d1ec      	bne.n	8006812 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8006838:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800683a:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800683c:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800683e:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8006842:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8006846:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8006848:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800684c:	f042 0220 	orr.w	r2, r2, #32
 8006850:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 8006852:	2001      	movs	r0, #1
 8006854:	e7e2      	b.n	800681c <I2C_WaitOnTXEFlagUntilTimeout+0x12>
	...

08006858 <I2C_RequestMemoryWrite>:
{
 8006858:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800685c:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800685e:	6802      	ldr	r2, [r0, #0]
{
 8006860:	b085      	sub	sp, #20
 8006862:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
 8006866:	4699      	mov	r9, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8006868:	6813      	ldr	r3, [r2, #0]
 800686a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800686e:	6013      	str	r3, [r2, #0]
{
 8006870:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8006872:	463b      	mov	r3, r7
 8006874:	f8cd 8000 	str.w	r8, [sp]
 8006878:	2200      	movs	r2, #0
 800687a:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 800687e:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8006880:	f7ff ff01 	bl	8006686 <I2C_WaitOnFlagUntilTimeout>
 8006884:	6823      	ldr	r3, [r4, #0]
 8006886:	b138      	cbz	r0, 8006898 <I2C_RequestMemoryWrite+0x40>
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 8006888:	681b      	ldr	r3, [r3, #0]
 800688a:	05db      	lsls	r3, r3, #23
 800688c:	d502      	bpl.n	8006894 <I2C_RequestMemoryWrite+0x3c>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800688e:	f44f 7300 	mov.w	r3, #512	; 0x200
 8006892:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 8006894:	2003      	movs	r0, #3
 8006896:	e00a      	b.n	80068ae <I2C_RequestMemoryWrite+0x56>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8006898:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 800689c:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 800689e:	4919      	ldr	r1, [pc, #100]	; (8006904 <I2C_RequestMemoryWrite+0xac>)
 80068a0:	4643      	mov	r3, r8
 80068a2:	463a      	mov	r2, r7
 80068a4:	4620      	mov	r0, r4
 80068a6:	f7ff ff20 	bl	80066ea <I2C_WaitOnMasterAddressFlagUntilTimeout>
 80068aa:	b118      	cbz	r0, 80068b4 <I2C_RequestMemoryWrite+0x5c>
      return HAL_ERROR;
 80068ac:	2001      	movs	r0, #1
}
 80068ae:	b005      	add	sp, #20
 80068b0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80068b4:	6823      	ldr	r3, [r4, #0]
 80068b6:	9003      	str	r0, [sp, #12]
 80068b8:	695a      	ldr	r2, [r3, #20]
 80068ba:	9203      	str	r2, [sp, #12]
 80068bc:	699b      	ldr	r3, [r3, #24]
 80068be:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80068c0:	4642      	mov	r2, r8
 80068c2:	4639      	mov	r1, r7
 80068c4:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80068c6:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80068c8:	f7ff ff9f 	bl	800680a <I2C_WaitOnTXEFlagUntilTimeout>
 80068cc:	b140      	cbz	r0, 80068e0 <I2C_RequestMemoryWrite+0x88>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80068ce:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80068d0:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80068d2:	bf01      	itttt	eq
 80068d4:	6822      	ldreq	r2, [r4, #0]
 80068d6:	6813      	ldreq	r3, [r2, #0]
 80068d8:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 80068dc:	6013      	streq	r3, [r2, #0]
 80068de:	e7e5      	b.n	80068ac <I2C_RequestMemoryWrite+0x54>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80068e0:	f1b9 0f01 	cmp.w	r9, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80068e4:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80068e6:	d102      	bne.n	80068ee <I2C_RequestMemoryWrite+0x96>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80068e8:	b2ed      	uxtb	r5, r5
 80068ea:	611d      	str	r5, [r3, #16]
 80068ec:	e7df      	b.n	80068ae <I2C_RequestMemoryWrite+0x56>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 80068ee:	0a2a      	lsrs	r2, r5, #8
 80068f0:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80068f2:	4639      	mov	r1, r7
 80068f4:	4642      	mov	r2, r8
 80068f6:	4620      	mov	r0, r4
 80068f8:	f7ff ff87 	bl	800680a <I2C_WaitOnTXEFlagUntilTimeout>
 80068fc:	2800      	cmp	r0, #0
 80068fe:	d1e6      	bne.n	80068ce <I2C_RequestMemoryWrite+0x76>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8006900:	6823      	ldr	r3, [r4, #0]
 8006902:	e7f1      	b.n	80068e8 <I2C_RequestMemoryWrite+0x90>
 8006904:	00010002 	.word	0x00010002

08006908 <I2C_RequestMemoryRead>:
{
 8006908:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800690c:	469a      	mov	sl, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800690e:	6803      	ldr	r3, [r0, #0]
{
 8006910:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8006912:	681a      	ldr	r2, [r3, #0]
 8006914:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8006918:	601a      	str	r2, [r3, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800691a:	681a      	ldr	r2, [r3, #0]
{
 800691c:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8006920:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8006924:	601a      	str	r2, [r3, #0]
{
 8006926:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8006928:	463b      	mov	r3, r7
 800692a:	f8cd 8000 	str.w	r8, [sp]
 800692e:	2200      	movs	r2, #0
 8006930:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 8006934:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8006936:	f7ff fea6 	bl	8006686 <I2C_WaitOnFlagUntilTimeout>
 800693a:	6823      	ldr	r3, [r4, #0]
 800693c:	b148      	cbz	r0, 8006952 <I2C_RequestMemoryRead+0x4a>
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 800693e:	681b      	ldr	r3, [r3, #0]
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 8006940:	05db      	lsls	r3, r3, #23
 8006942:	d502      	bpl.n	800694a <I2C_RequestMemoryRead+0x42>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8006944:	f44f 7300 	mov.w	r3, #512	; 0x200
 8006948:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 800694a:	2003      	movs	r0, #3
}
 800694c:	b004      	add	sp, #16
 800694e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8006952:	fa5f f986 	uxtb.w	r9, r6
 8006956:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 800695a:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 800695c:	492a      	ldr	r1, [pc, #168]	; (8006a08 <I2C_RequestMemoryRead+0x100>)
 800695e:	4643      	mov	r3, r8
 8006960:	463a      	mov	r2, r7
 8006962:	4620      	mov	r0, r4
 8006964:	f7ff fec1 	bl	80066ea <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8006968:	b108      	cbz	r0, 800696e <I2C_RequestMemoryRead+0x66>
    return HAL_ERROR;
 800696a:	2001      	movs	r0, #1
 800696c:	e7ee      	b.n	800694c <I2C_RequestMemoryRead+0x44>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800696e:	6823      	ldr	r3, [r4, #0]
 8006970:	9003      	str	r0, [sp, #12]
 8006972:	695a      	ldr	r2, [r3, #20]
 8006974:	9203      	str	r2, [sp, #12]
 8006976:	699b      	ldr	r3, [r3, #24]
 8006978:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800697a:	4642      	mov	r2, r8
 800697c:	4639      	mov	r1, r7
 800697e:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006980:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006982:	f7ff ff42 	bl	800680a <I2C_WaitOnTXEFlagUntilTimeout>
 8006986:	b140      	cbz	r0, 800699a <I2C_RequestMemoryRead+0x92>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8006988:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800698a:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800698c:	bf01      	itttt	eq
 800698e:	6822      	ldreq	r2, [r4, #0]
 8006990:	6813      	ldreq	r3, [r2, #0]
 8006992:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8006996:	6013      	streq	r3, [r2, #0]
 8006998:	e7e7      	b.n	800696a <I2C_RequestMemoryRead+0x62>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800699a:	f1ba 0f01 	cmp.w	sl, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800699e:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80069a0:	d11a      	bne.n	80069d8 <I2C_RequestMemoryRead+0xd0>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80069a2:	b2ed      	uxtb	r5, r5
 80069a4:	611d      	str	r5, [r3, #16]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80069a6:	4642      	mov	r2, r8
 80069a8:	4639      	mov	r1, r7
 80069aa:	4620      	mov	r0, r4
 80069ac:	f7ff ff2d 	bl	800680a <I2C_WaitOnTXEFlagUntilTimeout>
 80069b0:	2800      	cmp	r0, #0
 80069b2:	d1e9      	bne.n	8006988 <I2C_RequestMemoryRead+0x80>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80069b4:	6822      	ldr	r2, [r4, #0]
 80069b6:	6813      	ldr	r3, [r2, #0]
 80069b8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80069bc:	6013      	str	r3, [r2, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80069be:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 80069c2:	4602      	mov	r2, r0
 80069c4:	f8cd 8000 	str.w	r8, [sp]
 80069c8:	463b      	mov	r3, r7
 80069ca:	4620      	mov	r0, r4
 80069cc:	f7ff fe5b 	bl	8006686 <I2C_WaitOnFlagUntilTimeout>
 80069d0:	6822      	ldr	r2, [r4, #0]
 80069d2:	b160      	cbz	r0, 80069ee <I2C_RequestMemoryRead+0xe6>
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 80069d4:	6813      	ldr	r3, [r2, #0]
 80069d6:	e7b3      	b.n	8006940 <I2C_RequestMemoryRead+0x38>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 80069d8:	0a2a      	lsrs	r2, r5, #8
 80069da:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80069dc:	4639      	mov	r1, r7
 80069de:	4642      	mov	r2, r8
 80069e0:	4620      	mov	r0, r4
 80069e2:	f7ff ff12 	bl	800680a <I2C_WaitOnTXEFlagUntilTimeout>
 80069e6:	2800      	cmp	r0, #0
 80069e8:	d1ce      	bne.n	8006988 <I2C_RequestMemoryRead+0x80>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80069ea:	6823      	ldr	r3, [r4, #0]
 80069ec:	e7d9      	b.n	80069a2 <I2C_RequestMemoryRead+0x9a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 80069ee:	f049 0301 	orr.w	r3, r9, #1
 80069f2:	6113      	str	r3, [r2, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 80069f4:	4904      	ldr	r1, [pc, #16]	; (8006a08 <I2C_RequestMemoryRead+0x100>)
 80069f6:	4643      	mov	r3, r8
 80069f8:	463a      	mov	r2, r7
 80069fa:	4620      	mov	r0, r4
 80069fc:	f7ff fe75 	bl	80066ea <I2C_WaitOnMasterAddressFlagUntilTimeout>
    return HAL_TIMEOUT;
 8006a00:	3800      	subs	r0, #0
 8006a02:	bf18      	it	ne
 8006a04:	2001      	movne	r0, #1
 8006a06:	e7a1      	b.n	800694c <I2C_RequestMemoryRead+0x44>
 8006a08:	00010002 	.word	0x00010002

08006a0c <HAL_I2C_Init>:
{
 8006a0c:	b570      	push	{r4, r5, r6, lr}
  if (hi2c == NULL)
 8006a0e:	4604      	mov	r4, r0
 8006a10:	b908      	cbnz	r0, 8006a16 <HAL_I2C_Init+0xa>
    return HAL_ERROR;
 8006a12:	2001      	movs	r0, #1
}
 8006a14:	bd70      	pop	{r4, r5, r6, pc}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 8006a16:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8006a1a:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006a1e:	b91b      	cbnz	r3, 8006a28 <HAL_I2C_Init+0x1c>
    hi2c->Lock = HAL_UNLOCKED;
 8006a20:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 8006a24:	f7fb f950 	bl	8001cc8 <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 8006a28:	2324      	movs	r3, #36	; 0x24
 8006a2a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 8006a2e:	6823      	ldr	r3, [r4, #0]
 8006a30:	681a      	ldr	r2, [r3, #0]
 8006a32:	f022 0201 	bic.w	r2, r2, #1
 8006a36:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 8006a38:	681a      	ldr	r2, [r3, #0]
 8006a3a:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8006a3e:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 8006a40:	681a      	ldr	r2, [r3, #0]
 8006a42:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8006a46:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 8006a48:	f000 fe6e 	bl	8007728 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8006a4c:	4b3f      	ldr	r3, [pc, #252]	; (8006b4c <HAL_I2C_Init+0x140>)
 8006a4e:	6865      	ldr	r5, [r4, #4]
 8006a50:	429d      	cmp	r5, r3
 8006a52:	bf94      	ite	ls
 8006a54:	4b3e      	ldrls	r3, [pc, #248]	; (8006b50 <HAL_I2C_Init+0x144>)
 8006a56:	4b3f      	ldrhi	r3, [pc, #252]	; (8006b54 <HAL_I2C_Init+0x148>)
 8006a58:	4298      	cmp	r0, r3
 8006a5a:	bf8c      	ite	hi
 8006a5c:	2300      	movhi	r3, #0
 8006a5e:	2301      	movls	r3, #1
 8006a60:	2b00      	cmp	r3, #0
 8006a62:	d1d6      	bne.n	8006a12 <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8006a64:	6822      	ldr	r2, [r4, #0]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8006a66:	4e39      	ldr	r6, [pc, #228]	; (8006b4c <HAL_I2C_Init+0x140>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8006a68:	6853      	ldr	r3, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 8006a6a:	493b      	ldr	r1, [pc, #236]	; (8006b58 <HAL_I2C_Init+0x14c>)
 8006a6c:	fbb0 f1f1 	udiv	r1, r0, r1
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8006a70:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8006a74:	430b      	orrs	r3, r1
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8006a76:	42b5      	cmp	r5, r6
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8006a78:	6053      	str	r3, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8006a7a:	bf88      	it	hi
 8006a7c:	f44f 7696 	movhi.w	r6, #300	; 0x12c
 8006a80:	6a13      	ldr	r3, [r2, #32]
 8006a82:	bf88      	it	hi
 8006a84:	4371      	mulhi	r1, r6
 8006a86:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8006a8a:	bf84      	itt	hi
 8006a8c:	f44f 767a 	movhi.w	r6, #1000	; 0x3e8
 8006a90:	fbb1 f1f6 	udivhi	r1, r1, r6
 8006a94:	3101      	adds	r1, #1
 8006a96:	4319      	orrs	r1, r3
 8006a98:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8006a9a:	69d1      	ldr	r1, [r2, #28]
 8006a9c:	1e43      	subs	r3, r0, #1
 8006a9e:	482b      	ldr	r0, [pc, #172]	; (8006b4c <HAL_I2C_Init+0x140>)
 8006aa0:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 8006aa4:	4285      	cmp	r5, r0
 8006aa6:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8006aaa:	d832      	bhi.n	8006b12 <HAL_I2C_Init+0x106>
 8006aac:	006d      	lsls	r5, r5, #1
 8006aae:	f640 70fc 	movw	r0, #4092	; 0xffc
 8006ab2:	fbb3 f3f5 	udiv	r3, r3, r5
 8006ab6:	3301      	adds	r3, #1
 8006ab8:	4203      	tst	r3, r0
 8006aba:	d042      	beq.n	8006b42 <HAL_I2C_Init+0x136>
 8006abc:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8006ac0:	430b      	orrs	r3, r1
 8006ac2:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 8006ac4:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 8006ac8:	6811      	ldr	r1, [r2, #0]
 8006aca:	4303      	orrs	r3, r0
 8006acc:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 8006ad0:	430b      	orrs	r3, r1
 8006ad2:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 8006ad4:	6891      	ldr	r1, [r2, #8]
 8006ad6:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 8006ada:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 8006ade:	4303      	orrs	r3, r0
 8006ae0:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8006ae4:	430b      	orrs	r3, r1
 8006ae6:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 8006ae8:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 8006aec:	68d1      	ldr	r1, [r2, #12]
 8006aee:	4303      	orrs	r3, r0
 8006af0:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8006af4:	430b      	orrs	r3, r1
 8006af6:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 8006af8:	6813      	ldr	r3, [r2, #0]
 8006afa:	f043 0301 	orr.w	r3, r3, #1
 8006afe:	6013      	str	r3, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8006b00:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 8006b02:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8006b04:	6420      	str	r0, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 8006b06:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 8006b0a:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8006b0c:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
  return HAL_OK;
 8006b10:	e780      	b.n	8006a14 <HAL_I2C_Init+0x8>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8006b12:	68a0      	ldr	r0, [r4, #8]
 8006b14:	b950      	cbnz	r0, 8006b2c <HAL_I2C_Init+0x120>
 8006b16:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8006b1a:	fbb3 f3f5 	udiv	r3, r3, r5
 8006b1e:	3301      	adds	r3, #1
 8006b20:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8006b24:	b17b      	cbz	r3, 8006b46 <HAL_I2C_Init+0x13a>
 8006b26:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8006b2a:	e7c9      	b.n	8006ac0 <HAL_I2C_Init+0xb4>
 8006b2c:	2019      	movs	r0, #25
 8006b2e:	4345      	muls	r5, r0
 8006b30:	fbb3 f3f5 	udiv	r3, r3, r5
 8006b34:	3301      	adds	r3, #1
 8006b36:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8006b3a:	b123      	cbz	r3, 8006b46 <HAL_I2C_Init+0x13a>
 8006b3c:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8006b40:	e7be      	b.n	8006ac0 <HAL_I2C_Init+0xb4>
 8006b42:	2304      	movs	r3, #4
 8006b44:	e7bc      	b.n	8006ac0 <HAL_I2C_Init+0xb4>
 8006b46:	2301      	movs	r3, #1
 8006b48:	e7ba      	b.n	8006ac0 <HAL_I2C_Init+0xb4>
 8006b4a:	bf00      	nop
 8006b4c:	000186a0 	.word	0x000186a0
 8006b50:	001e847f 	.word	0x001e847f
 8006b54:	003d08ff 	.word	0x003d08ff
 8006b58:	000f4240 	.word	0x000f4240

08006b5c <HAL_I2C_Mem_Write>:
{
 8006b5c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8006b60:	4604      	mov	r4, r0
 8006b62:	4699      	mov	r9, r3
 8006b64:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8006b66:	460f      	mov	r7, r1
 8006b68:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8006b6a:	f7ff f8df 	bl	8005d2c <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8006b6e:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8006b72:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8006b74:	4605      	mov	r5, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8006b76:	d003      	beq.n	8006b80 <HAL_I2C_Mem_Write+0x24>
    return HAL_BUSY;
 8006b78:	2002      	movs	r0, #2
}
 8006b7a:	b003      	add	sp, #12
 8006b7c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8006b80:	9000      	str	r0, [sp, #0]
 8006b82:	493c      	ldr	r1, [pc, #240]	; (8006c74 <HAL_I2C_Mem_Write+0x118>)
 8006b84:	2319      	movs	r3, #25
 8006b86:	2201      	movs	r2, #1
 8006b88:	4620      	mov	r0, r4
 8006b8a:	f7ff fd7c 	bl	8006686 <I2C_WaitOnFlagUntilTimeout>
 8006b8e:	2800      	cmp	r0, #0
 8006b90:	d1f2      	bne.n	8006b78 <HAL_I2C_Mem_Write+0x1c>
    __HAL_LOCK(hi2c);
 8006b92:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8006b96:	2b01      	cmp	r3, #1
 8006b98:	d0ee      	beq.n	8006b78 <HAL_I2C_Mem_Write+0x1c>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8006b9a:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8006b9c:	2301      	movs	r3, #1
 8006b9e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8006ba2:	6803      	ldr	r3, [r0, #0]
 8006ba4:	07d9      	lsls	r1, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 8006ba6:	bf5e      	ittt	pl
 8006ba8:	6803      	ldrpl	r3, [r0, #0]
 8006baa:	f043 0301 	orrpl.w	r3, r3, #1
 8006bae:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8006bb0:	6803      	ldr	r3, [r0, #0]
 8006bb2:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8006bb6:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8006bb8:	2321      	movs	r3, #33	; 0x21
 8006bba:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8006bbe:	2340      	movs	r3, #64	; 0x40
 8006bc0:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8006bc4:	2300      	movs	r3, #0
 8006bc6:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 8006bc8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006bca:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 8006bcc:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8006bd0:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8006bd2:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006bd4:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8006bd6:	4b28      	ldr	r3, [pc, #160]	; (8006c78 <HAL_I2C_Mem_Write+0x11c>)
 8006bd8:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8006bda:	e9cd 6500 	strd	r6, r5, [sp]
 8006bde:	464b      	mov	r3, r9
 8006be0:	4642      	mov	r2, r8
 8006be2:	4639      	mov	r1, r7
 8006be4:	4620      	mov	r0, r4
 8006be6:	f7ff fe37 	bl	8006858 <I2C_RequestMemoryWrite>
 8006bea:	2800      	cmp	r0, #0
 8006bec:	d02a      	beq.n	8006c44 <HAL_I2C_Mem_Write+0xe8>
      return HAL_ERROR;
 8006bee:	2001      	movs	r0, #1
 8006bf0:	e7c3      	b.n	8006b7a <HAL_I2C_Mem_Write+0x1e>
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8006bf2:	f7ff fe0a 	bl	800680a <I2C_WaitOnTXEFlagUntilTimeout>
 8006bf6:	b140      	cbz	r0, 8006c0a <HAL_I2C_Mem_Write+0xae>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8006bf8:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8006bfa:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006bfc:	bf01      	itttt	eq
 8006bfe:	6822      	ldreq	r2, [r4, #0]
 8006c00:	6813      	ldreq	r3, [r2, #0]
 8006c02:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8006c06:	6013      	streq	r3, [r2, #0]
 8006c08:	e7f1      	b.n	8006bee <HAL_I2C_Mem_Write+0x92>
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8006c0a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006c0c:	6827      	ldr	r7, [r4, #0]
 8006c0e:	461a      	mov	r2, r3
 8006c10:	f812 1b01 	ldrb.w	r1, [r2], #1
 8006c14:	6139      	str	r1, [r7, #16]
      hi2c->pBuffPtr++;
 8006c16:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 8006c18:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 8006c1a:	8d21      	ldrh	r1, [r4, #40]	; 0x28
      hi2c->XferCount--;
 8006c1c:	3a01      	subs	r2, #1
 8006c1e:	b292      	uxth	r2, r2
 8006c20:	8562      	strh	r2, [r4, #42]	; 0x2a
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8006c22:	697a      	ldr	r2, [r7, #20]
      hi2c->XferSize--;
 8006c24:	1e48      	subs	r0, r1, #1
 8006c26:	b280      	uxth	r0, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8006c28:	0752      	lsls	r2, r2, #29
      hi2c->XferSize--;
 8006c2a:	8520      	strh	r0, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8006c2c:	d50a      	bpl.n	8006c44 <HAL_I2C_Mem_Write+0xe8>
 8006c2e:	b148      	cbz	r0, 8006c44 <HAL_I2C_Mem_Write+0xe8>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 8006c30:	785a      	ldrb	r2, [r3, #1]
 8006c32:	613a      	str	r2, [r7, #16]
        hi2c->pBuffPtr++;
 8006c34:	3302      	adds	r3, #2
 8006c36:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferCount--;
 8006c38:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006c3a:	3b01      	subs	r3, #1
        hi2c->XferSize--;
 8006c3c:	3902      	subs	r1, #2
        hi2c->XferCount--;
 8006c3e:	b29b      	uxth	r3, r3
        hi2c->XferSize--;
 8006c40:	8521      	strh	r1, [r4, #40]	; 0x28
        hi2c->XferCount--;
 8006c42:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 8006c44:	8d23      	ldrh	r3, [r4, #40]	; 0x28
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8006c46:	462a      	mov	r2, r5
 8006c48:	4631      	mov	r1, r6
 8006c4a:	4620      	mov	r0, r4
    while (hi2c->XferSize > 0U)
 8006c4c:	2b00      	cmp	r3, #0
 8006c4e:	d1d0      	bne.n	8006bf2 <HAL_I2C_Mem_Write+0x96>
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8006c50:	f7ff fdb5 	bl	80067be <I2C_WaitOnBTFFlagUntilTimeout>
 8006c54:	2800      	cmp	r0, #0
 8006c56:	d1cf      	bne.n	8006bf8 <HAL_I2C_Mem_Write+0x9c>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006c58:	6822      	ldr	r2, [r4, #0]
 8006c5a:	6813      	ldr	r3, [r2, #0]
 8006c5c:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8006c60:	6013      	str	r3, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 8006c62:	2320      	movs	r3, #32
 8006c64:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8006c68:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8006c6c:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    return HAL_OK;
 8006c70:	e783      	b.n	8006b7a <HAL_I2C_Mem_Write+0x1e>
 8006c72:	bf00      	nop
 8006c74:	00100002 	.word	0x00100002
 8006c78:	ffff0000 	.word	0xffff0000

08006c7c <HAL_I2C_Mem_Read>:
{
 8006c7c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8006c80:	4604      	mov	r4, r0
 8006c82:	b087      	sub	sp, #28
 8006c84:	4699      	mov	r9, r3
 8006c86:	9f10      	ldr	r7, [sp, #64]	; 0x40
 8006c88:	460d      	mov	r5, r1
 8006c8a:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8006c8c:	f7ff f84e 	bl	8005d2c <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8006c90:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8006c94:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8006c96:	4606      	mov	r6, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8006c98:	d004      	beq.n	8006ca4 <HAL_I2C_Mem_Read+0x28>
    return HAL_BUSY;
 8006c9a:	2502      	movs	r5, #2
}
 8006c9c:	4628      	mov	r0, r5
 8006c9e:	b007      	add	sp, #28
 8006ca0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8006ca4:	9000      	str	r0, [sp, #0]
 8006ca6:	4976      	ldr	r1, [pc, #472]	; (8006e80 <HAL_I2C_Mem_Read+0x204>)
 8006ca8:	2319      	movs	r3, #25
 8006caa:	2201      	movs	r2, #1
 8006cac:	4620      	mov	r0, r4
 8006cae:	f7ff fcea 	bl	8006686 <I2C_WaitOnFlagUntilTimeout>
 8006cb2:	2800      	cmp	r0, #0
 8006cb4:	d1f1      	bne.n	8006c9a <HAL_I2C_Mem_Read+0x1e>
    __HAL_LOCK(hi2c);
 8006cb6:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8006cba:	2b01      	cmp	r3, #1
 8006cbc:	d0ed      	beq.n	8006c9a <HAL_I2C_Mem_Read+0x1e>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8006cbe:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8006cc0:	2301      	movs	r3, #1
 8006cc2:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8006cc6:	6803      	ldr	r3, [r0, #0]
 8006cc8:	07db      	lsls	r3, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 8006cca:	bf5e      	ittt	pl
 8006ccc:	6803      	ldrpl	r3, [r0, #0]
 8006cce:	f043 0301 	orrpl.w	r3, r3, #1
 8006cd2:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8006cd4:	6803      	ldr	r3, [r0, #0]
 8006cd6:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8006cda:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8006cdc:	2322      	movs	r3, #34	; 0x22
 8006cde:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8006ce2:	2340      	movs	r3, #64	; 0x40
 8006ce4:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8006ce8:	2300      	movs	r3, #0
 8006cea:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 8006cec:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8006cee:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 8006cf0:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8006cf4:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8006cf6:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006cf8:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8006cfa:	4b62      	ldr	r3, [pc, #392]	; (8006e84 <HAL_I2C_Mem_Read+0x208>)
 8006cfc:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8006cfe:	4629      	mov	r1, r5
 8006d00:	e9cd 7600 	strd	r7, r6, [sp]
 8006d04:	464b      	mov	r3, r9
 8006d06:	4642      	mov	r2, r8
 8006d08:	4620      	mov	r0, r4
 8006d0a:	f7ff fdfd 	bl	8006908 <I2C_RequestMemoryRead>
 8006d0e:	4605      	mov	r5, r0
 8006d10:	b108      	cbz	r0, 8006d16 <HAL_I2C_Mem_Read+0x9a>
      return HAL_ERROR;
 8006d12:	2501      	movs	r5, #1
 8006d14:	e7c2      	b.n	8006c9c <HAL_I2C_Mem_Read+0x20>
    if (hi2c->XferSize == 0U)
 8006d16:	8d22      	ldrh	r2, [r4, #40]	; 0x28
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006d18:	6823      	ldr	r3, [r4, #0]
    if (hi2c->XferSize == 0U)
 8006d1a:	b9b2      	cbnz	r2, 8006d4a <HAL_I2C_Mem_Read+0xce>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006d1c:	9002      	str	r0, [sp, #8]
 8006d1e:	695a      	ldr	r2, [r3, #20]
 8006d20:	9202      	str	r2, [sp, #8]
 8006d22:	699a      	ldr	r2, [r3, #24]
 8006d24:	9202      	str	r2, [sp, #8]
 8006d26:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006d28:	681a      	ldr	r2, [r3, #0]
 8006d2a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8006d2e:	601a      	str	r2, [r3, #0]
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8006d30:	f8df 8154 	ldr.w	r8, [pc, #340]	; 8006e88 <HAL_I2C_Mem_Read+0x20c>
    while (hi2c->XferSize > 0U)
 8006d34:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8006d36:	2b00      	cmp	r3, #0
 8006d38:	d12c      	bne.n	8006d94 <HAL_I2C_Mem_Read+0x118>
    hi2c->State = HAL_I2C_STATE_READY;
 8006d3a:	2220      	movs	r2, #32
 8006d3c:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8006d40:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8006d44:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 8006d48:	e7a8      	b.n	8006c9c <HAL_I2C_Mem_Read+0x20>
    else if (hi2c->XferSize == 1U)
 8006d4a:	2a01      	cmp	r2, #1
 8006d4c:	d10a      	bne.n	8006d64 <HAL_I2C_Mem_Read+0xe8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8006d4e:	681a      	ldr	r2, [r3, #0]
 8006d50:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006d54:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006d56:	9003      	str	r0, [sp, #12]
 8006d58:	695a      	ldr	r2, [r3, #20]
 8006d5a:	9203      	str	r2, [sp, #12]
 8006d5c:	699a      	ldr	r2, [r3, #24]
 8006d5e:	9203      	str	r2, [sp, #12]
 8006d60:	9a03      	ldr	r2, [sp, #12]
 8006d62:	e7e1      	b.n	8006d28 <HAL_I2C_Mem_Read+0xac>
    else if (hi2c->XferSize == 2U)
 8006d64:	2a02      	cmp	r2, #2
 8006d66:	d10e      	bne.n	8006d86 <HAL_I2C_Mem_Read+0x10a>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8006d68:	681a      	ldr	r2, [r3, #0]
 8006d6a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006d6e:	601a      	str	r2, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8006d70:	681a      	ldr	r2, [r3, #0]
 8006d72:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8006d76:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006d78:	9004      	str	r0, [sp, #16]
 8006d7a:	695a      	ldr	r2, [r3, #20]
 8006d7c:	9204      	str	r2, [sp, #16]
 8006d7e:	699b      	ldr	r3, [r3, #24]
 8006d80:	9304      	str	r3, [sp, #16]
 8006d82:	9b04      	ldr	r3, [sp, #16]
 8006d84:	e7d4      	b.n	8006d30 <HAL_I2C_Mem_Read+0xb4>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006d86:	9005      	str	r0, [sp, #20]
 8006d88:	695a      	ldr	r2, [r3, #20]
 8006d8a:	9205      	str	r2, [sp, #20]
 8006d8c:	699b      	ldr	r3, [r3, #24]
 8006d8e:	9305      	str	r3, [sp, #20]
 8006d90:	9b05      	ldr	r3, [sp, #20]
 8006d92:	e7cd      	b.n	8006d30 <HAL_I2C_Mem_Read+0xb4>
      if (hi2c->XferSize <= 3U)
 8006d94:	2b03      	cmp	r3, #3
 8006d96:	d856      	bhi.n	8006e46 <HAL_I2C_Mem_Read+0x1ca>
        if (hi2c->XferSize == 1U)
 8006d98:	2b01      	cmp	r3, #1
 8006d9a:	d115      	bne.n	8006dc8 <HAL_I2C_Mem_Read+0x14c>
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8006d9c:	4632      	mov	r2, r6
 8006d9e:	4639      	mov	r1, r7
 8006da0:	4620      	mov	r0, r4
 8006da2:	f7ff fcdd 	bl	8006760 <I2C_WaitOnRXNEFlagUntilTimeout>
 8006da6:	2800      	cmp	r0, #0
 8006da8:	d1b3      	bne.n	8006d12 <HAL_I2C_Mem_Read+0x96>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8006daa:	6823      	ldr	r3, [r4, #0]
 8006dac:	691a      	ldr	r2, [r3, #16]
 8006dae:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006db0:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8006db2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006db4:	3301      	adds	r3, #1
 8006db6:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8006db8:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8006dba:	3b01      	subs	r3, #1
 8006dbc:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8006dbe:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006dc0:	3b01      	subs	r3, #1
 8006dc2:	b29b      	uxth	r3, r3
 8006dc4:	8563      	strh	r3, [r4, #42]	; 0x2a
 8006dc6:	e7b5      	b.n	8006d34 <HAL_I2C_Mem_Read+0xb8>
        else if (hi2c->XferSize == 2U)
 8006dc8:	2b02      	cmp	r3, #2
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8006dca:	9600      	str	r6, [sp, #0]
 8006dcc:	463b      	mov	r3, r7
 8006dce:	f04f 0200 	mov.w	r2, #0
 8006dd2:	4641      	mov	r1, r8
 8006dd4:	4620      	mov	r0, r4
        else if (hi2c->XferSize == 2U)
 8006dd6:	d119      	bne.n	8006e0c <HAL_I2C_Mem_Read+0x190>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8006dd8:	f7ff fc55 	bl	8006686 <I2C_WaitOnFlagUntilTimeout>
 8006ddc:	2800      	cmp	r0, #0
 8006dde:	d198      	bne.n	8006d12 <HAL_I2C_Mem_Read+0x96>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006de0:	6823      	ldr	r3, [r4, #0]
 8006de2:	681a      	ldr	r2, [r3, #0]
 8006de4:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8006de8:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8006dea:	691a      	ldr	r2, [r3, #16]
 8006dec:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006dee:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8006df0:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8006df2:	1c53      	adds	r3, r2, #1
 8006df4:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8006df6:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8006df8:	3b01      	subs	r3, #1
 8006dfa:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8006dfc:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006dfe:	3b01      	subs	r3, #1
 8006e00:	b29b      	uxth	r3, r3
 8006e02:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8006e04:	6823      	ldr	r3, [r4, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8006e06:	691b      	ldr	r3, [r3, #16]
 8006e08:	7053      	strb	r3, [r2, #1]
 8006e0a:	e7d2      	b.n	8006db2 <HAL_I2C_Mem_Read+0x136>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8006e0c:	f7ff fc3b 	bl	8006686 <I2C_WaitOnFlagUntilTimeout>
 8006e10:	2800      	cmp	r0, #0
 8006e12:	f47f af7e 	bne.w	8006d12 <HAL_I2C_Mem_Read+0x96>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8006e16:	6823      	ldr	r3, [r4, #0]
 8006e18:	681a      	ldr	r2, [r3, #0]
 8006e1a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006e1e:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8006e20:	691a      	ldr	r2, [r3, #16]
 8006e22:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006e24:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8006e26:	6a63      	ldr	r3, [r4, #36]	; 0x24
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8006e28:	9600      	str	r6, [sp, #0]
          hi2c->pBuffPtr++;
 8006e2a:	3301      	adds	r3, #1
 8006e2c:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8006e2e:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8006e30:	3b01      	subs	r3, #1
 8006e32:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8006e34:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006e36:	3b01      	subs	r3, #1
 8006e38:	b29b      	uxth	r3, r3
 8006e3a:	8563      	strh	r3, [r4, #42]	; 0x2a
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8006e3c:	4602      	mov	r2, r0
 8006e3e:	463b      	mov	r3, r7
 8006e40:	4641      	mov	r1, r8
 8006e42:	4620      	mov	r0, r4
 8006e44:	e7c8      	b.n	8006dd8 <HAL_I2C_Mem_Read+0x15c>
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8006e46:	4632      	mov	r2, r6
 8006e48:	4639      	mov	r1, r7
 8006e4a:	4620      	mov	r0, r4
 8006e4c:	f7ff fc88 	bl	8006760 <I2C_WaitOnRXNEFlagUntilTimeout>
 8006e50:	2800      	cmp	r0, #0
 8006e52:	f47f af5e 	bne.w	8006d12 <HAL_I2C_Mem_Read+0x96>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8006e56:	6823      	ldr	r3, [r4, #0]
 8006e58:	691a      	ldr	r2, [r3, #16]
 8006e5a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006e5c:	701a      	strb	r2, [r3, #0]
        hi2c->pBuffPtr++;
 8006e5e:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8006e60:	1c53      	adds	r3, r2, #1
 8006e62:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferSize--;
 8006e64:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8006e66:	3b01      	subs	r3, #1
 8006e68:	8523      	strh	r3, [r4, #40]	; 0x28
        hi2c->XferCount--;
 8006e6a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006e6c:	3b01      	subs	r3, #1
 8006e6e:	b29b      	uxth	r3, r3
 8006e70:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8006e72:	6823      	ldr	r3, [r4, #0]
 8006e74:	6959      	ldr	r1, [r3, #20]
 8006e76:	0749      	lsls	r1, r1, #29
 8006e78:	f57f af5c 	bpl.w	8006d34 <HAL_I2C_Mem_Read+0xb8>
 8006e7c:	e7c3      	b.n	8006e06 <HAL_I2C_Mem_Read+0x18a>
 8006e7e:	bf00      	nop
 8006e80:	00100002 	.word	0x00100002
 8006e84:	ffff0000 	.word	0xffff0000
 8006e88:	00010004 	.word	0x00010004

08006e8c <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter new state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 8006e8c:	b510      	push	{r4, lr}
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8006e8e:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8006e92:	2b20      	cmp	r3, #32
 8006e94:	b2dc      	uxtb	r4, r3
 8006e96:	d116      	bne.n	8006ec6 <HAL_I2CEx_ConfigAnalogFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;
 8006e98:	2324      	movs	r3, #36	; 0x24
 8006e9a:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8006e9e:	6803      	ldr	r3, [r0, #0]
 8006ea0:	681a      	ldr	r2, [r3, #0]
 8006ea2:	f022 0201 	bic.w	r2, r2, #1
 8006ea6:	601a      	str	r2, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 8006ea8:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8006eaa:	f022 0210 	bic.w	r2, r2, #16
 8006eae:	625a      	str	r2, [r3, #36]	; 0x24

    /* Disable the analog filter */
    hi2c->Instance->FLTR |= AnalogFilter;
 8006eb0:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8006eb2:	4311      	orrs	r1, r2
 8006eb4:	6259      	str	r1, [r3, #36]	; 0x24

    __HAL_I2C_ENABLE(hi2c);
 8006eb6:	681a      	ldr	r2, [r3, #0]
 8006eb8:	f042 0201 	orr.w	r2, r2, #1
 8006ebc:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8006ebe:	f880 403d 	strb.w	r4, [r0, #61]	; 0x3d

    return HAL_OK;
 8006ec2:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 8006ec4:	bd10      	pop	{r4, pc}
    return HAL_BUSY;
 8006ec6:	2002      	movs	r0, #2
 8006ec8:	e7fc      	b.n	8006ec4 <HAL_I2CEx_ConfigAnalogFilter+0x38>

08006eca <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between 0x00 and 0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 8006eca:	b530      	push	{r4, r5, lr}

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8006ecc:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8006ed0:	2b20      	cmp	r3, #32
 8006ed2:	b2dc      	uxtb	r4, r3
 8006ed4:	d116      	bne.n	8006f04 <HAL_I2CEx_ConfigDigitalFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8006ed6:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 8006ed8:	2324      	movs	r3, #36	; 0x24
 8006eda:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 8006ede:	6813      	ldr	r3, [r2, #0]
 8006ee0:	f023 0301 	bic.w	r3, r3, #1
 8006ee4:	6013      	str	r3, [r2, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->FLTR;
 8006ee6:	6a55      	ldr	r5, [r2, #36]	; 0x24

    /* Reset I2Cx DNF bit [3:0] */
    tmpreg &= ~(I2C_FLTR_DNF);
 8006ee8:	f64f 73f0 	movw	r3, #65520	; 0xfff0
 8006eec:	402b      	ands	r3, r5

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter;
 8006eee:	430b      	orrs	r3, r1

    /* Store the new register value */
    hi2c->Instance->FLTR = tmpreg;
 8006ef0:	b29b      	uxth	r3, r3
 8006ef2:	6253      	str	r3, [r2, #36]	; 0x24

    __HAL_I2C_ENABLE(hi2c);
 8006ef4:	6813      	ldr	r3, [r2, #0]
 8006ef6:	f043 0301 	orr.w	r3, r3, #1
 8006efa:	6013      	str	r3, [r2, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8006efc:	f880 403d 	strb.w	r4, [r0, #61]	; 0x3d

    return HAL_OK;
 8006f00:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 8006f02:	bd30      	pop	{r4, r5, pc}
    return HAL_BUSY;
 8006f04:	2002      	movs	r0, #2
 8006f06:	e7fc      	b.n	8006f02 <HAL_I2CEx_ConfigDigitalFilter+0x38>

08006f08 <LTDC_SetConfig>:
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8006f08:	6800      	ldr	r0, [r0, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8006f0a:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8006f0e:	01d2      	lsls	r2, r2, #7
 8006f10:	3284      	adds	r2, #132	; 0x84
 8006f12:	1883      	adds	r3, r0, r2
{
 8006f14:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8006f18:	68c6      	ldr	r6, [r0, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8006f1a:	685d      	ldr	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8006f1c:	684c      	ldr	r4, [r1, #4]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 8006f1e:	f8d1 9018 	ldr.w	r9, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8006f22:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 8006f26:	605d      	str	r5, [r3, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8006f28:	68c5      	ldr	r5, [r0, #12]
 8006f2a:	f10c 0701 	add.w	r7, ip, #1
 8006f2e:	f3c5 450b 	ubfx	r5, r5, #16, #12
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8006f32:	f3c6 460b 	ubfx	r6, r6, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8006f36:	443d      	add	r5, r7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8006f38:	4426      	add	r6, r4
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8006f3a:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 8006f3e:	605d      	str	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 8006f40:	68c5      	ldr	r5, [r0, #12]
 8006f42:	68ce      	ldr	r6, [r1, #12]
 8006f44:	f3c5 050a 	ubfx	r5, r5, #0, #11
 8006f48:	442e      	add	r6, r5
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 8006f4a:	689d      	ldr	r5, [r3, #8]
 8006f4c:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 8006f50:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 8006f52:	68c7      	ldr	r7, [r0, #12]
 8006f54:	688d      	ldr	r5, [r1, #8]
 8006f56:	f3c7 070a 	ubfx	r7, r7, #0, #11
 8006f5a:	3501      	adds	r5, #1
 8006f5c:	443d      	add	r5, r7
 8006f5e:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 8006f62:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8006f64:	691d      	ldr	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8006f66:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8006f68:	f025 0507 	bic.w	r5, r5, #7
 8006f6c:	611d      	str	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 8006f6e:	f04f 0e00 	mov.w	lr, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8006f72:	611e      	str	r6, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 8006f74:	699d      	ldr	r5, [r3, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 8006f76:	f891 7032 	ldrb.w	r7, [r1, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 8006f7a:	f891 8031 	ldrb.w	r8, [r1, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 8006f7e:	f8c3 e018 	str.w	lr, [r3, #24]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 8006f82:	f891 5030 	ldrb.w	r5, [r1, #48]	; 0x30
 8006f86:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 8006f8a:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 8006f8e:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 8006f92:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 8006f94:	695d      	ldr	r5, [r3, #20]
 8006f96:	f025 05ff 	bic.w	r5, r5, #255	; 0xff
 8006f9a:	615d      	str	r5, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 8006f9c:	694d      	ldr	r5, [r1, #20]
 8006f9e:	615d      	str	r5, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 8006fa0:	69dd      	ldr	r5, [r3, #28]
 8006fa2:	f425 65e0 	bic.w	r5, r5, #1792	; 0x700
 8006fa6:	f025 0507 	bic.w	r5, r5, #7
 8006faa:	61dd      	str	r5, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 8006fac:	e9d1 5707 	ldrd	r5, r7, [r1, #28]
 8006fb0:	433d      	orrs	r5, r7
 8006fb2:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8006fb4:	6a9d      	ldr	r5, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8006fb6:	6a4d      	ldr	r5, [r1, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8006fb8:	f8c3 e028 	str.w	lr, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8006fbc:	629d      	str	r5, [r3, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 8006fbe:	b31e      	cbz	r6, 8007008 <LTDC_SetConfig+0x100>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 8006fc0:	2e01      	cmp	r6, #1
 8006fc2:	d023      	beq.n	800700c <LTDC_SetConfig+0x104>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 8006fc4:	1eb5      	subs	r5, r6, #2
 8006fc6:	2d02      	cmp	r5, #2
 8006fc8:	d922      	bls.n	8007010 <LTDC_SetConfig+0x108>
  {
    tmp = 2U;
  }
  else
  {
    tmp = 1U;
 8006fca:	2e07      	cmp	r6, #7
 8006fcc:	bf0c      	ite	eq
 8006fce:	2502      	moveq	r5, #2
 8006fd0:	2501      	movne	r5, #1
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8006fd2:	6ade      	ldr	r6, [r3, #44]	; 0x2c
 8006fd4:	f006 26e0 	and.w	r6, r6, #3758153728	; 0xe000e000
 8006fd8:	62de      	str	r6, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8006fda:	eba4 040c 	sub.w	r4, r4, ip
 8006fde:	6a8e      	ldr	r6, [r1, #40]	; 0x28
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8006fe0:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8006fe2:	436c      	muls	r4, r5
 8006fe4:	436e      	muls	r6, r5
 8006fe6:	3403      	adds	r4, #3
 8006fe8:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
 8006fec:	62dc      	str	r4, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 8006fee:	6b1c      	ldr	r4, [r3, #48]	; 0x30
 8006ff0:	f424 64ff 	bic.w	r4, r4, #2040	; 0x7f8
 8006ff4:	f024 0407 	bic.w	r4, r4, #7
 8006ff8:	631c      	str	r4, [r3, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8006ffa:	6319      	str	r1, [r3, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 8006ffc:	5883      	ldr	r3, [r0, r2]
 8006ffe:	f043 0301 	orr.w	r3, r3, #1
 8007002:	5083      	str	r3, [r0, r2]
}
 8007004:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    tmp = 4U;
 8007008:	2504      	movs	r5, #4
 800700a:	e7e2      	b.n	8006fd2 <LTDC_SetConfig+0xca>
    tmp = 3U;
 800700c:	2503      	movs	r5, #3
 800700e:	e7e0      	b.n	8006fd2 <LTDC_SetConfig+0xca>
    tmp = 2U;
 8007010:	2502      	movs	r5, #2
 8007012:	e7de      	b.n	8006fd2 <LTDC_SetConfig+0xca>

08007014 <HAL_LTDC_Init>:
{
 8007014:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 8007016:	4604      	mov	r4, r0
 8007018:	2800      	cmp	r0, #0
 800701a:	d063      	beq.n	80070e4 <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 800701c:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 8007020:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8007024:	b91b      	cbnz	r3, 800702e <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 8007026:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 800702a:	f7fa fea9 	bl	8001d80 <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800702e:	2302      	movs	r3, #2
 8007030:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 8007034:	6823      	ldr	r3, [r4, #0]
 8007036:	699a      	ldr	r2, [r3, #24]
 8007038:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 800703c:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800703e:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 8007042:	4302      	orrs	r2, r0
 8007044:	68e0      	ldr	r0, [r4, #12]
 8007046:	6999      	ldr	r1, [r3, #24]
 8007048:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800704a:	6920      	ldr	r0, [r4, #16]
 800704c:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800704e:	430a      	orrs	r2, r1
 8007050:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8007052:	689a      	ldr	r2, [r3, #8]
 8007054:	4924      	ldr	r1, [pc, #144]	; (80070e8 <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 8007056:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8007058:	400a      	ands	r2, r1
 800705a:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 800705c:	689a      	ldr	r2, [r3, #8]
 800705e:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8007062:	69a0      	ldr	r0, [r4, #24]
 8007064:	4302      	orrs	r2, r0
 8007066:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8007068:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800706a:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800706c:	400a      	ands	r2, r1
 800706e:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 8007070:	68da      	ldr	r2, [r3, #12]
 8007072:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8007076:	6a20      	ldr	r0, [r4, #32]
 8007078:	4302      	orrs	r2, r0
 800707a:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800707c:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 800707e:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8007080:	400a      	ands	r2, r1
 8007082:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 8007084:	691a      	ldr	r2, [r3, #16]
 8007086:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800708a:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800708c:	4302      	orrs	r2, r0
 800708e:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 8007090:	695a      	ldr	r2, [r3, #20]
 8007092:	4011      	ands	r1, r2
 8007094:	6159      	str	r1, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8007096:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 8007098:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800709a:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800709e:	6b21      	ldr	r1, [r4, #48]	; 0x30
 80070a0:	430a      	orrs	r2, r1
 80070a2:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 80070a4:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 80070a6:	f894 0036 	ldrb.w	r0, [r4, #54]	; 0x36
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 80070aa:	f894 5035 	ldrb.w	r5, [r4, #53]	; 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 80070ae:	f001 417f 	and.w	r1, r1, #4278190080	; 0xff000000
 80070b2:	62d9      	str	r1, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 80070b4:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 80070b6:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 80070ba:	430a      	orrs	r2, r1
 80070bc:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 80070c0:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80070c4:	62da      	str	r2, [r3, #44]	; 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 80070c6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80070c8:	f042 0206 	orr.w	r2, r2, #6
 80070cc:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE(hltdc);
 80070ce:	699a      	ldr	r2, [r3, #24]
 80070d0:	f042 0201 	orr.w	r2, r2, #1
 80070d4:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 80070d6:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 80070d8:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 80070da:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 80070de:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
}
 80070e2:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 80070e4:	2001      	movs	r0, #1
 80070e6:	e7fc      	b.n	80070e2 <HAL_LTDC_Init+0xce>
 80070e8:	f000f800 	.word	0xf000f800

080070ec <HAL_LTDC_ErrorCallback>:
 80070ec:	4770      	bx	lr

080070ee <HAL_LTDC_ReloadEventCallback>:
 80070ee:	4770      	bx	lr

080070f0 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 80070f0:	6803      	ldr	r3, [r0, #0]
{
 80070f2:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 80070f4:	6b9e      	ldr	r6, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 80070f6:	6b5d      	ldr	r5, [r3, #52]	; 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 80070f8:	0772      	lsls	r2, r6, #29
{
 80070fa:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 80070fc:	d514      	bpl.n	8007128 <HAL_LTDC_IRQHandler+0x38>
 80070fe:	0769      	lsls	r1, r5, #29
 8007100:	d512      	bpl.n	8007128 <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 8007102:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8007104:	f022 0204 	bic.w	r2, r2, #4
 8007108:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 800710a:	2204      	movs	r2, #4
 800710c:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 800710e:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 8007112:	f043 0301 	orr.w	r3, r3, #1
 8007116:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 800711a:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800711c:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8007120:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8007124:	f7ff ffe2 	bl	80070ec <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 8007128:	07b2      	lsls	r2, r6, #30
 800712a:	d516      	bpl.n	800715a <HAL_LTDC_IRQHandler+0x6a>
 800712c:	07ab      	lsls	r3, r5, #30
 800712e:	d514      	bpl.n	800715a <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 8007130:	6823      	ldr	r3, [r4, #0]
 8007132:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8007134:	f022 0202 	bic.w	r2, r2, #2
 8007138:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 800713a:	2202      	movs	r2, #2
 800713c:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 800713e:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 8007142:	4313      	orrs	r3, r2
 8007144:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8007148:	2304      	movs	r3, #4
 800714a:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800714e:	2300      	movs	r3, #0
 8007150:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8007154:	4620      	mov	r0, r4
 8007156:	f7ff ffc9 	bl	80070ec <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 800715a:	07f0      	lsls	r0, r6, #31
 800715c:	d510      	bpl.n	8007180 <HAL_LTDC_IRQHandler+0x90>
 800715e:	07e9      	lsls	r1, r5, #31
 8007160:	d50e      	bpl.n	8007180 <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8007162:	6823      	ldr	r3, [r4, #0]
 8007164:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8007166:	f022 0201 	bic.w	r2, r2, #1
 800716a:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 800716c:	2201      	movs	r2, #1
 800716e:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 8007170:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 8007172:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8007176:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 800717a:	4620      	mov	r0, r4
 800717c:	f7f9 ffca 	bl	8001114 <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 8007180:	0732      	lsls	r2, r6, #28
 8007182:	d511      	bpl.n	80071a8 <HAL_LTDC_IRQHandler+0xb8>
 8007184:	072b      	lsls	r3, r5, #28
 8007186:	d50f      	bpl.n	80071a8 <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 8007188:	6823      	ldr	r3, [r4, #0]
 800718a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800718c:	f022 0208 	bic.w	r2, r2, #8
 8007190:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 8007192:	2208      	movs	r2, #8
 8007194:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 8007196:	2301      	movs	r3, #1
 8007198:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800719c:	2300      	movs	r3, #0
 800719e:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 80071a2:	4620      	mov	r0, r4
 80071a4:	f7ff ffa3 	bl	80070ee <HAL_LTDC_ReloadEventCallback>
}
 80071a8:	bd70      	pop	{r4, r5, r6, pc}

080071aa <HAL_LTDC_ConfigLayer>:
{
 80071aa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 80071ae:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 80071b2:	2b01      	cmp	r3, #1
{
 80071b4:	4606      	mov	r6, r0
 80071b6:	460f      	mov	r7, r1
 80071b8:	4694      	mov	ip, r2
 80071ba:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 80071be:	d01f      	beq.n	8007200 <HAL_LTDC_ConfigLayer+0x56>
 80071c0:	f04f 0801 	mov.w	r8, #1
 80071c4:	f886 80a0 	strb.w	r8, [r6, #160]	; 0xa0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 80071c8:	f886 00a1 	strb.w	r0, [r6, #161]	; 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 80071cc:	2434      	movs	r4, #52	; 0x34
 80071ce:	460d      	mov	r5, r1
 80071d0:	fb04 6402 	mla	r4, r4, r2, r6
 80071d4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80071d6:	3438      	adds	r4, #56	; 0x38
 80071d8:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80071da:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80071dc:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80071de:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80071e0:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80071e2:	682b      	ldr	r3, [r5, #0]
 80071e4:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 80071e6:	4630      	mov	r0, r6
 80071e8:	4662      	mov	r2, ip
 80071ea:	4639      	mov	r1, r7
 80071ec:	f7ff fe8c 	bl	8006f08 <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 80071f0:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 80071f2:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 80071f4:	f8c3 8024 	str.w	r8, [r3, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 80071f8:	f886 80a1 	strb.w	r8, [r6, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 80071fc:	f886 00a0 	strb.w	r0, [r6, #160]	; 0xa0
}
 8007200:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08007204 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 8007204:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 8007208:	2b01      	cmp	r3, #1
 800720a:	f04f 0302 	mov.w	r3, #2
 800720e:	d012      	beq.n	8007236 <HAL_LTDC_ProgramLineEvent+0x32>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8007210:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8007214:	6803      	ldr	r3, [r0, #0]
 8007216:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8007218:	f022 0201 	bic.w	r2, r2, #1
 800721c:	635a      	str	r2, [r3, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800721e:	4a07      	ldr	r2, [pc, #28]	; (800723c <HAL_LTDC_ProgramLineEvent+0x38>)
 8007220:	6411      	str	r1, [r2, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 8007222:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8007224:	f042 0201 	orr.w	r2, r2, #1
 8007228:	635a      	str	r2, [r3, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 800722a:	2301      	movs	r3, #1
 800722c:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 8007230:	2300      	movs	r3, #0
 8007232:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
  __HAL_LOCK(hltdc);
 8007236:	4618      	mov	r0, r3
}
 8007238:	4770      	bx	lr
 800723a:	bf00      	nop
 800723c:	40016800 	.word	0x40016800

08007240 <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8007240:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 8007244:	4604      	mov	r4, r0
 8007246:	b340      	cbz	r0, 800729a <HAL_RCC_OscConfig+0x5a>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8007248:	6803      	ldr	r3, [r0, #0]
 800724a:	07dd      	lsls	r5, r3, #31
 800724c:	d410      	bmi.n	8007270 <HAL_RCC_OscConfig+0x30>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800724e:	6823      	ldr	r3, [r4, #0]
 8007250:	0798      	lsls	r0, r3, #30
 8007252:	d45e      	bmi.n	8007312 <HAL_RCC_OscConfig+0xd2>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8007254:	6823      	ldr	r3, [r4, #0]
 8007256:	071a      	lsls	r2, r3, #28
 8007258:	f100 80a0 	bmi.w	800739c <HAL_RCC_OscConfig+0x15c>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800725c:	6823      	ldr	r3, [r4, #0]
 800725e:	075b      	lsls	r3, r3, #29
 8007260:	f100 80c0 	bmi.w	80073e4 <HAL_RCC_OscConfig+0x1a4>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8007264:	69a0      	ldr	r0, [r4, #24]
 8007266:	2800      	cmp	r0, #0
 8007268:	f040 8128 	bne.w	80074bc <HAL_RCC_OscConfig+0x27c>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 800726c:	2000      	movs	r0, #0
 800726e:	e02b      	b.n	80072c8 <HAL_RCC_OscConfig+0x88>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8007270:	4b8f      	ldr	r3, [pc, #572]	; (80074b0 <HAL_RCC_OscConfig+0x270>)
 8007272:	689a      	ldr	r2, [r3, #8]
 8007274:	f002 020c 	and.w	r2, r2, #12
 8007278:	2a04      	cmp	r2, #4
 800727a:	d007      	beq.n	800728c <HAL_RCC_OscConfig+0x4c>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800727c:	689a      	ldr	r2, [r3, #8]
 800727e:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8007282:	2a08      	cmp	r2, #8
 8007284:	d10b      	bne.n	800729e <HAL_RCC_OscConfig+0x5e>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8007286:	685a      	ldr	r2, [r3, #4]
 8007288:	0251      	lsls	r1, r2, #9
 800728a:	d508      	bpl.n	800729e <HAL_RCC_OscConfig+0x5e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800728c:	4b88      	ldr	r3, [pc, #544]	; (80074b0 <HAL_RCC_OscConfig+0x270>)
 800728e:	681b      	ldr	r3, [r3, #0]
 8007290:	039a      	lsls	r2, r3, #14
 8007292:	d5dc      	bpl.n	800724e <HAL_RCC_OscConfig+0xe>
 8007294:	6863      	ldr	r3, [r4, #4]
 8007296:	2b00      	cmp	r3, #0
 8007298:	d1d9      	bne.n	800724e <HAL_RCC_OscConfig+0xe>
          return HAL_ERROR;
 800729a:	2001      	movs	r0, #1
 800729c:	e014      	b.n	80072c8 <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800729e:	6862      	ldr	r2, [r4, #4]
 80072a0:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 80072a4:	d113      	bne.n	80072ce <HAL_RCC_OscConfig+0x8e>
 80072a6:	681a      	ldr	r2, [r3, #0]
 80072a8:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 80072ac:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 80072ae:	f7fe fd3d 	bl	8005d2c <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80072b2:	4e7f      	ldr	r6, [pc, #508]	; (80074b0 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 80072b4:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80072b6:	6833      	ldr	r3, [r6, #0]
 80072b8:	039b      	lsls	r3, r3, #14
 80072ba:	d4c8      	bmi.n	800724e <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 80072bc:	f7fe fd36 	bl	8005d2c <HAL_GetTick>
 80072c0:	1b40      	subs	r0, r0, r5
 80072c2:	2864      	cmp	r0, #100	; 0x64
 80072c4:	d9f7      	bls.n	80072b6 <HAL_RCC_OscConfig+0x76>
            return HAL_TIMEOUT;
 80072c6:	2003      	movs	r0, #3
}
 80072c8:	b002      	add	sp, #8
 80072ca:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80072ce:	4d78      	ldr	r5, [pc, #480]	; (80074b0 <HAL_RCC_OscConfig+0x270>)
 80072d0:	f5b2 2fa0 	cmp.w	r2, #327680	; 0x50000
 80072d4:	682b      	ldr	r3, [r5, #0]
 80072d6:	d107      	bne.n	80072e8 <HAL_RCC_OscConfig+0xa8>
 80072d8:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80072dc:	602b      	str	r3, [r5, #0]
 80072de:	682b      	ldr	r3, [r5, #0]
 80072e0:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80072e4:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 80072e6:	e7e2      	b.n	80072ae <HAL_RCC_OscConfig+0x6e>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80072e8:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80072ec:	602b      	str	r3, [r5, #0]
 80072ee:	682b      	ldr	r3, [r5, #0]
 80072f0:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80072f4:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 80072f6:	2a00      	cmp	r2, #0
 80072f8:	d1d9      	bne.n	80072ae <HAL_RCC_OscConfig+0x6e>
        tickstart = HAL_GetTick();
 80072fa:	f7fe fd17 	bl	8005d2c <HAL_GetTick>
 80072fe:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8007300:	682b      	ldr	r3, [r5, #0]
 8007302:	039f      	lsls	r7, r3, #14
 8007304:	d5a3      	bpl.n	800724e <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8007306:	f7fe fd11 	bl	8005d2c <HAL_GetTick>
 800730a:	1b80      	subs	r0, r0, r6
 800730c:	2864      	cmp	r0, #100	; 0x64
 800730e:	d9f7      	bls.n	8007300 <HAL_RCC_OscConfig+0xc0>
 8007310:	e7d9      	b.n	80072c6 <HAL_RCC_OscConfig+0x86>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 8007312:	4b67      	ldr	r3, [pc, #412]	; (80074b0 <HAL_RCC_OscConfig+0x270>)
 8007314:	689a      	ldr	r2, [r3, #8]
 8007316:	f012 0f0c 	tst.w	r2, #12
 800731a:	d007      	beq.n	800732c <HAL_RCC_OscConfig+0xec>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800731c:	689a      	ldr	r2, [r3, #8]
 800731e:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 8007322:	2a08      	cmp	r2, #8
 8007324:	d111      	bne.n	800734a <HAL_RCC_OscConfig+0x10a>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8007326:	685b      	ldr	r3, [r3, #4]
 8007328:	025e      	lsls	r6, r3, #9
 800732a:	d40e      	bmi.n	800734a <HAL_RCC_OscConfig+0x10a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800732c:	4a60      	ldr	r2, [pc, #384]	; (80074b0 <HAL_RCC_OscConfig+0x270>)
 800732e:	6813      	ldr	r3, [r2, #0]
 8007330:	079d      	lsls	r5, r3, #30
 8007332:	d502      	bpl.n	800733a <HAL_RCC_OscConfig+0xfa>
 8007334:	68e3      	ldr	r3, [r4, #12]
 8007336:	2b01      	cmp	r3, #1
 8007338:	d1af      	bne.n	800729a <HAL_RCC_OscConfig+0x5a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800733a:	6813      	ldr	r3, [r2, #0]
 800733c:	6921      	ldr	r1, [r4, #16]
 800733e:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8007342:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8007346:	6013      	str	r3, [r2, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8007348:	e784      	b.n	8007254 <HAL_RCC_OscConfig+0x14>
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 800734a:	68e2      	ldr	r2, [r4, #12]
 800734c:	4b59      	ldr	r3, [pc, #356]	; (80074b4 <HAL_RCC_OscConfig+0x274>)
 800734e:	b1b2      	cbz	r2, 800737e <HAL_RCC_OscConfig+0x13e>
        __HAL_RCC_HSI_ENABLE();
 8007350:	2201      	movs	r2, #1
 8007352:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8007354:	f7fe fcea 	bl	8005d2c <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8007358:	4d55      	ldr	r5, [pc, #340]	; (80074b0 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 800735a:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800735c:	682b      	ldr	r3, [r5, #0]
 800735e:	0798      	lsls	r0, r3, #30
 8007360:	d507      	bpl.n	8007372 <HAL_RCC_OscConfig+0x132>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8007362:	682b      	ldr	r3, [r5, #0]
 8007364:	6922      	ldr	r2, [r4, #16]
 8007366:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800736a:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800736e:	602b      	str	r3, [r5, #0]
 8007370:	e770      	b.n	8007254 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8007372:	f7fe fcdb 	bl	8005d2c <HAL_GetTick>
 8007376:	1b80      	subs	r0, r0, r6
 8007378:	2802      	cmp	r0, #2
 800737a:	d9ef      	bls.n	800735c <HAL_RCC_OscConfig+0x11c>
 800737c:	e7a3      	b.n	80072c6 <HAL_RCC_OscConfig+0x86>
        __HAL_RCC_HSI_DISABLE();
 800737e:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8007380:	f7fe fcd4 	bl	8005d2c <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8007384:	4e4a      	ldr	r6, [pc, #296]	; (80074b0 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 8007386:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8007388:	6833      	ldr	r3, [r6, #0]
 800738a:	0799      	lsls	r1, r3, #30
 800738c:	f57f af62 	bpl.w	8007254 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8007390:	f7fe fccc 	bl	8005d2c <HAL_GetTick>
 8007394:	1b40      	subs	r0, r0, r5
 8007396:	2802      	cmp	r0, #2
 8007398:	d9f6      	bls.n	8007388 <HAL_RCC_OscConfig+0x148>
 800739a:	e794      	b.n	80072c6 <HAL_RCC_OscConfig+0x86>
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 800739c:	6962      	ldr	r2, [r4, #20]
 800739e:	4b45      	ldr	r3, [pc, #276]	; (80074b4 <HAL_RCC_OscConfig+0x274>)
 80073a0:	b182      	cbz	r2, 80073c4 <HAL_RCC_OscConfig+0x184>
      __HAL_RCC_LSI_ENABLE();
 80073a2:	2201      	movs	r2, #1
 80073a4:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 80073a8:	f7fe fcc0 	bl	8005d2c <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80073ac:	4e40      	ldr	r6, [pc, #256]	; (80074b0 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 80073ae:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80073b0:	6f73      	ldr	r3, [r6, #116]	; 0x74
 80073b2:	079f      	lsls	r7, r3, #30
 80073b4:	f53f af52 	bmi.w	800725c <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 80073b8:	f7fe fcb8 	bl	8005d2c <HAL_GetTick>
 80073bc:	1b40      	subs	r0, r0, r5
 80073be:	2802      	cmp	r0, #2
 80073c0:	d9f6      	bls.n	80073b0 <HAL_RCC_OscConfig+0x170>
 80073c2:	e780      	b.n	80072c6 <HAL_RCC_OscConfig+0x86>
      __HAL_RCC_LSI_DISABLE();
 80073c4:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 80073c8:	f7fe fcb0 	bl	8005d2c <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 80073cc:	4e38      	ldr	r6, [pc, #224]	; (80074b0 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 80073ce:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 80073d0:	6f73      	ldr	r3, [r6, #116]	; 0x74
 80073d2:	0798      	lsls	r0, r3, #30
 80073d4:	f57f af42 	bpl.w	800725c <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 80073d8:	f7fe fca8 	bl	8005d2c <HAL_GetTick>
 80073dc:	1b40      	subs	r0, r0, r5
 80073de:	2802      	cmp	r0, #2
 80073e0:	d9f6      	bls.n	80073d0 <HAL_RCC_OscConfig+0x190>
 80073e2:	e770      	b.n	80072c6 <HAL_RCC_OscConfig+0x86>
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 80073e4:	4b32      	ldr	r3, [pc, #200]	; (80074b0 <HAL_RCC_OscConfig+0x270>)
 80073e6:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80073e8:	f012 5280 	ands.w	r2, r2, #268435456	; 0x10000000
 80073ec:	d128      	bne.n	8007440 <HAL_RCC_OscConfig+0x200>
      __HAL_RCC_PWR_CLK_ENABLE();
 80073ee:	9201      	str	r2, [sp, #4]
 80073f0:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80073f2:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 80073f6:	641a      	str	r2, [r3, #64]	; 0x40
 80073f8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80073fa:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80073fe:	9301      	str	r3, [sp, #4]
 8007400:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 8007402:	2701      	movs	r7, #1
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8007404:	4d2c      	ldr	r5, [pc, #176]	; (80074b8 <HAL_RCC_OscConfig+0x278>)
 8007406:	682b      	ldr	r3, [r5, #0]
 8007408:	05d9      	lsls	r1, r3, #23
 800740a:	d51b      	bpl.n	8007444 <HAL_RCC_OscConfig+0x204>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800740c:	68a3      	ldr	r3, [r4, #8]
 800740e:	4d28      	ldr	r5, [pc, #160]	; (80074b0 <HAL_RCC_OscConfig+0x270>)
 8007410:	2b01      	cmp	r3, #1
 8007412:	d127      	bne.n	8007464 <HAL_RCC_OscConfig+0x224>
 8007414:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8007416:	f043 0301 	orr.w	r3, r3, #1
 800741a:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();
 800741c:	f7fe fc86 	bl	8005d2c <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8007420:	4e23      	ldr	r6, [pc, #140]	; (80074b0 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 8007422:	4605      	mov	r5, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8007424:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8007428:	6f33      	ldr	r3, [r6, #112]	; 0x70
 800742a:	079b      	lsls	r3, r3, #30
 800742c:	d539      	bpl.n	80074a2 <HAL_RCC_OscConfig+0x262>
    if(pwrclkchanged == SET)
 800742e:	2f00      	cmp	r7, #0
 8007430:	f43f af18 	beq.w	8007264 <HAL_RCC_OscConfig+0x24>
      __HAL_RCC_PWR_CLK_DISABLE();
 8007434:	4a1e      	ldr	r2, [pc, #120]	; (80074b0 <HAL_RCC_OscConfig+0x270>)
 8007436:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8007438:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800743c:	6413      	str	r3, [r2, #64]	; 0x40
 800743e:	e711      	b.n	8007264 <HAL_RCC_OscConfig+0x24>
    FlagStatus       pwrclkchanged = RESET;
 8007440:	2700      	movs	r7, #0
 8007442:	e7df      	b.n	8007404 <HAL_RCC_OscConfig+0x1c4>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8007444:	682b      	ldr	r3, [r5, #0]
 8007446:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800744a:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 800744c:	f7fe fc6e 	bl	8005d2c <HAL_GetTick>
 8007450:	4606      	mov	r6, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8007452:	682b      	ldr	r3, [r5, #0]
 8007454:	05da      	lsls	r2, r3, #23
 8007456:	d4d9      	bmi.n	800740c <HAL_RCC_OscConfig+0x1cc>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8007458:	f7fe fc68 	bl	8005d2c <HAL_GetTick>
 800745c:	1b80      	subs	r0, r0, r6
 800745e:	2802      	cmp	r0, #2
 8007460:	d9f7      	bls.n	8007452 <HAL_RCC_OscConfig+0x212>
 8007462:	e730      	b.n	80072c6 <HAL_RCC_OscConfig+0x86>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8007464:	2b05      	cmp	r3, #5
 8007466:	d104      	bne.n	8007472 <HAL_RCC_OscConfig+0x232>
 8007468:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800746a:	f043 0304 	orr.w	r3, r3, #4
 800746e:	672b      	str	r3, [r5, #112]	; 0x70
 8007470:	e7d0      	b.n	8007414 <HAL_RCC_OscConfig+0x1d4>
 8007472:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 8007474:	f022 0201 	bic.w	r2, r2, #1
 8007478:	672a      	str	r2, [r5, #112]	; 0x70
 800747a:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 800747c:	f022 0204 	bic.w	r2, r2, #4
 8007480:	672a      	str	r2, [r5, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 8007482:	2b00      	cmp	r3, #0
 8007484:	d1ca      	bne.n	800741c <HAL_RCC_OscConfig+0x1dc>
      tickstart = HAL_GetTick();
 8007486:	f7fe fc51 	bl	8005d2c <HAL_GetTick>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800748a:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 800748e:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8007490:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8007492:	0798      	lsls	r0, r3, #30
 8007494:	d5cb      	bpl.n	800742e <HAL_RCC_OscConfig+0x1ee>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8007496:	f7fe fc49 	bl	8005d2c <HAL_GetTick>
 800749a:	1b80      	subs	r0, r0, r6
 800749c:	4540      	cmp	r0, r8
 800749e:	d9f7      	bls.n	8007490 <HAL_RCC_OscConfig+0x250>
 80074a0:	e711      	b.n	80072c6 <HAL_RCC_OscConfig+0x86>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80074a2:	f7fe fc43 	bl	8005d2c <HAL_GetTick>
 80074a6:	1b40      	subs	r0, r0, r5
 80074a8:	4540      	cmp	r0, r8
 80074aa:	d9bd      	bls.n	8007428 <HAL_RCC_OscConfig+0x1e8>
 80074ac:	e70b      	b.n	80072c6 <HAL_RCC_OscConfig+0x86>
 80074ae:	bf00      	nop
 80074b0:	40023800 	.word	0x40023800
 80074b4:	42470000 	.word	0x42470000
 80074b8:	40007000 	.word	0x40007000
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 80074bc:	4d33      	ldr	r5, [pc, #204]	; (800758c <HAL_RCC_OscConfig+0x34c>)
 80074be:	68ab      	ldr	r3, [r5, #8]
 80074c0:	f003 030c 	and.w	r3, r3, #12
 80074c4:	2b08      	cmp	r3, #8
 80074c6:	d03d      	beq.n	8007544 <HAL_RCC_OscConfig+0x304>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 80074c8:	4b31      	ldr	r3, [pc, #196]	; (8007590 <HAL_RCC_OscConfig+0x350>)
 80074ca:	2200      	movs	r2, #0
 80074cc:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 80074ce:	661a      	str	r2, [r3, #96]	; 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 80074d0:	d12b      	bne.n	800752a <HAL_RCC_OscConfig+0x2ea>
        tickstart = HAL_GetTick();
 80074d2:	f7fe fc2b 	bl	8005d2c <HAL_GetTick>
 80074d6:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80074d8:	682b      	ldr	r3, [r5, #0]
 80074da:	0199      	lsls	r1, r3, #6
 80074dc:	d41f      	bmi.n	800751e <HAL_RCC_OscConfig+0x2de>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 80074de:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 80074e2:	4313      	orrs	r3, r2
 80074e4:	6a62      	ldr	r2, [r4, #36]	; 0x24
 80074e6:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 80074ea:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80074ec:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 80074f0:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80074f2:	0852      	lsrs	r2, r2, #1
 80074f4:	3a01      	subs	r2, #1
 80074f6:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80074fa:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 80074fc:	4b24      	ldr	r3, [pc, #144]	; (8007590 <HAL_RCC_OscConfig+0x350>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80074fe:	4d23      	ldr	r5, [pc, #140]	; (800758c <HAL_RCC_OscConfig+0x34c>)
        __HAL_RCC_PLL_ENABLE();
 8007500:	2201      	movs	r2, #1
 8007502:	661a      	str	r2, [r3, #96]	; 0x60
        tickstart = HAL_GetTick();
 8007504:	f7fe fc12 	bl	8005d2c <HAL_GetTick>
 8007508:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800750a:	682b      	ldr	r3, [r5, #0]
 800750c:	019a      	lsls	r2, r3, #6
 800750e:	f53f aead 	bmi.w	800726c <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8007512:	f7fe fc0b 	bl	8005d2c <HAL_GetTick>
 8007516:	1b00      	subs	r0, r0, r4
 8007518:	2802      	cmp	r0, #2
 800751a:	d9f6      	bls.n	800750a <HAL_RCC_OscConfig+0x2ca>
 800751c:	e6d3      	b.n	80072c6 <HAL_RCC_OscConfig+0x86>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800751e:	f7fe fc05 	bl	8005d2c <HAL_GetTick>
 8007522:	1b80      	subs	r0, r0, r6
 8007524:	2802      	cmp	r0, #2
 8007526:	d9d7      	bls.n	80074d8 <HAL_RCC_OscConfig+0x298>
 8007528:	e6cd      	b.n	80072c6 <HAL_RCC_OscConfig+0x86>
        tickstart = HAL_GetTick();
 800752a:	f7fe fbff 	bl	8005d2c <HAL_GetTick>
 800752e:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8007530:	682b      	ldr	r3, [r5, #0]
 8007532:	019b      	lsls	r3, r3, #6
 8007534:	f57f ae9a 	bpl.w	800726c <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8007538:	f7fe fbf8 	bl	8005d2c <HAL_GetTick>
 800753c:	1b00      	subs	r0, r0, r4
 800753e:	2802      	cmp	r0, #2
 8007540:	d9f6      	bls.n	8007530 <HAL_RCC_OscConfig+0x2f0>
 8007542:	e6c0      	b.n	80072c6 <HAL_RCC_OscConfig+0x86>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8007544:	2801      	cmp	r0, #1
 8007546:	f43f aebf 	beq.w	80072c8 <HAL_RCC_OscConfig+0x88>
        pll_config = RCC->PLLCFGR;
 800754a:	686b      	ldr	r3, [r5, #4]
        if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800754c:	69e2      	ldr	r2, [r4, #28]
 800754e:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
 8007552:	4291      	cmp	r1, r2
 8007554:	f47f aea1 	bne.w	800729a <HAL_RCC_OscConfig+0x5a>
 8007558:	6a21      	ldr	r1, [r4, #32]
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 800755a:	f003 023f 	and.w	r2, r3, #63	; 0x3f
        if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800755e:	428a      	cmp	r2, r1
 8007560:	f47f ae9b 	bne.w	800729a <HAL_RCC_OscConfig+0x5a>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8007564:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8007566:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 800756a:	401a      	ands	r2, r3
 800756c:	428a      	cmp	r2, r1
 800756e:	f47f ae94 	bne.w	800729a <HAL_RCC_OscConfig+0x5a>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 8007572:	6aa1      	ldr	r1, [r4, #40]	; 0x28
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 8007574:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 8007578:	428a      	cmp	r2, r1
 800757a:	f47f ae8e 	bne.w	800729a <HAL_RCC_OscConfig+0x5a>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 800757e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != RCC_OscInitStruct->PLL.PLLQ))
 8007580:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 8007584:	4293      	cmp	r3, r2
 8007586:	f43f ae71 	beq.w	800726c <HAL_RCC_OscConfig+0x2c>
 800758a:	e686      	b.n	800729a <HAL_RCC_OscConfig+0x5a>
 800758c:	40023800 	.word	0x40023800
 8007590:	42470000 	.word	0x42470000

08007594 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8007594:	4913      	ldr	r1, [pc, #76]	; (80075e4 <HAL_RCC_GetSysClockFreq+0x50>)
{
 8007596:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8007598:	688b      	ldr	r3, [r1, #8]
 800759a:	f003 030c 	and.w	r3, r3, #12
 800759e:	2b04      	cmp	r3, #4
 80075a0:	d01c      	beq.n	80075dc <HAL_RCC_GetSysClockFreq+0x48>
 80075a2:	2b08      	cmp	r3, #8
 80075a4:	d11c      	bne.n	80075e0 <HAL_RCC_GetSysClockFreq+0x4c>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 80075a6:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 80075a8:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80075aa:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 80075ac:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80075b0:	bf14      	ite	ne
 80075b2:	480d      	ldrne	r0, [pc, #52]	; (80075e8 <HAL_RCC_GetSysClockFreq+0x54>)
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80075b4:	480d      	ldreq	r0, [pc, #52]	; (80075ec <HAL_RCC_GetSysClockFreq+0x58>)
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80075b6:	f3c1 1188 	ubfx	r1, r1, #6, #9
 80075ba:	bf18      	it	ne
 80075bc:	2300      	movne	r3, #0
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 80075be:	f002 023f 	and.w	r2, r2, #63	; 0x3f
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80075c2:	fba1 0100 	umull	r0, r1, r1, r0
 80075c6:	f7f8 fe63 	bl	8000290 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 80075ca:	4b06      	ldr	r3, [pc, #24]	; (80075e4 <HAL_RCC_GetSysClockFreq+0x50>)
 80075cc:	685b      	ldr	r3, [r3, #4]
 80075ce:	f3c3 4301 	ubfx	r3, r3, #16, #2
 80075d2:	3301      	adds	r3, #1
 80075d4:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 80075d6:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 80075da:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 80075dc:	4802      	ldr	r0, [pc, #8]	; (80075e8 <HAL_RCC_GetSysClockFreq+0x54>)
 80075de:	e7fc      	b.n	80075da <HAL_RCC_GetSysClockFreq+0x46>
      sysclockfreq = HSI_VALUE;
 80075e0:	4802      	ldr	r0, [pc, #8]	; (80075ec <HAL_RCC_GetSysClockFreq+0x58>)
  return sysclockfreq;
 80075e2:	e7fa      	b.n	80075da <HAL_RCC_GetSysClockFreq+0x46>
 80075e4:	40023800 	.word	0x40023800
 80075e8:	007a1200 	.word	0x007a1200
 80075ec:	00f42400 	.word	0x00f42400

080075f0 <HAL_RCC_ClockConfig>:
{
 80075f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80075f4:	460d      	mov	r5, r1
  if(RCC_ClkInitStruct == NULL)
 80075f6:	4604      	mov	r4, r0
 80075f8:	b910      	cbnz	r0, 8007600 <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 80075fa:	2001      	movs	r0, #1
}
 80075fc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8007600:	4b44      	ldr	r3, [pc, #272]	; (8007714 <HAL_RCC_ClockConfig+0x124>)
 8007602:	681a      	ldr	r2, [r3, #0]
 8007604:	f002 020f 	and.w	r2, r2, #15
 8007608:	428a      	cmp	r2, r1
 800760a:	d328      	bcc.n	800765e <HAL_RCC_ClockConfig+0x6e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800760c:	6822      	ldr	r2, [r4, #0]
 800760e:	0797      	lsls	r7, r2, #30
 8007610:	d42d      	bmi.n	800766e <HAL_RCC_ClockConfig+0x7e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8007612:	07d0      	lsls	r0, r2, #31
 8007614:	d441      	bmi.n	800769a <HAL_RCC_ClockConfig+0xaa>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 8007616:	4b3f      	ldr	r3, [pc, #252]	; (8007714 <HAL_RCC_ClockConfig+0x124>)
 8007618:	681a      	ldr	r2, [r3, #0]
 800761a:	f002 020f 	and.w	r2, r2, #15
 800761e:	42aa      	cmp	r2, r5
 8007620:	d866      	bhi.n	80076f0 <HAL_RCC_ClockConfig+0x100>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8007622:	6822      	ldr	r2, [r4, #0]
 8007624:	0751      	lsls	r1, r2, #29
 8007626:	d46c      	bmi.n	8007702 <HAL_RCC_ClockConfig+0x112>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8007628:	0713      	lsls	r3, r2, #28
 800762a:	d507      	bpl.n	800763c <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 800762c:	4a3a      	ldr	r2, [pc, #232]	; (8007718 <HAL_RCC_ClockConfig+0x128>)
 800762e:	6921      	ldr	r1, [r4, #16]
 8007630:	6893      	ldr	r3, [r2, #8]
 8007632:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 8007636:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800763a:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800763c:	f7ff ffaa 	bl	8007594 <HAL_RCC_GetSysClockFreq>
 8007640:	4b35      	ldr	r3, [pc, #212]	; (8007718 <HAL_RCC_ClockConfig+0x128>)
 8007642:	4a36      	ldr	r2, [pc, #216]	; (800771c <HAL_RCC_ClockConfig+0x12c>)
 8007644:	689b      	ldr	r3, [r3, #8]
 8007646:	f3c3 1303 	ubfx	r3, r3, #4, #4
 800764a:	5cd3      	ldrb	r3, [r2, r3]
 800764c:	40d8      	lsrs	r0, r3
 800764e:	4b34      	ldr	r3, [pc, #208]	; (8007720 <HAL_RCC_ClockConfig+0x130>)
 8007650:	6018      	str	r0, [r3, #0]
  HAL_InitTick (uwTickPrio);
 8007652:	4b34      	ldr	r3, [pc, #208]	; (8007724 <HAL_RCC_ClockConfig+0x134>)
 8007654:	6818      	ldr	r0, [r3, #0]
 8007656:	f7fa fd1d 	bl	8002094 <HAL_InitTick>
  return HAL_OK;
 800765a:	2000      	movs	r0, #0
 800765c:	e7ce      	b.n	80075fc <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800765e:	b2ca      	uxtb	r2, r1
 8007660:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8007662:	681b      	ldr	r3, [r3, #0]
 8007664:	f003 030f 	and.w	r3, r3, #15
 8007668:	428b      	cmp	r3, r1
 800766a:	d1c6      	bne.n	80075fa <HAL_RCC_ClockConfig+0xa>
 800766c:	e7ce      	b.n	800760c <HAL_RCC_ClockConfig+0x1c>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800766e:	4b2a      	ldr	r3, [pc, #168]	; (8007718 <HAL_RCC_ClockConfig+0x128>)
 8007670:	f012 0f04 	tst.w	r2, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8007674:	bf1e      	ittt	ne
 8007676:	6899      	ldrne	r1, [r3, #8]
 8007678:	f441 51e0 	orrne.w	r1, r1, #7168	; 0x1c00
 800767c:	6099      	strne	r1, [r3, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800767e:	0716      	lsls	r6, r2, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8007680:	bf42      	ittt	mi
 8007682:	6899      	ldrmi	r1, [r3, #8]
 8007684:	f441 4160 	orrmi.w	r1, r1, #57344	; 0xe000
 8007688:	6099      	strmi	r1, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800768a:	4923      	ldr	r1, [pc, #140]	; (8007718 <HAL_RCC_ClockConfig+0x128>)
 800768c:	68a0      	ldr	r0, [r4, #8]
 800768e:	688b      	ldr	r3, [r1, #8]
 8007690:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8007694:	4303      	orrs	r3, r0
 8007696:	608b      	str	r3, [r1, #8]
 8007698:	e7bb      	b.n	8007612 <HAL_RCC_ClockConfig+0x22>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800769a:	6862      	ldr	r2, [r4, #4]
 800769c:	4b1e      	ldr	r3, [pc, #120]	; (8007718 <HAL_RCC_ClockConfig+0x128>)
 800769e:	2a01      	cmp	r2, #1
 80076a0:	d11c      	bne.n	80076dc <HAL_RCC_ClockConfig+0xec>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80076a2:	681b      	ldr	r3, [r3, #0]
 80076a4:	f413 3f00 	tst.w	r3, #131072	; 0x20000
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80076a8:	d0a7      	beq.n	80075fa <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 80076aa:	4e1b      	ldr	r6, [pc, #108]	; (8007718 <HAL_RCC_ClockConfig+0x128>)
 80076ac:	68b3      	ldr	r3, [r6, #8]
 80076ae:	f023 0303 	bic.w	r3, r3, #3
 80076b2:	4313      	orrs	r3, r2
 80076b4:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 80076b6:	f7fe fb39 	bl	8005d2c <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 80076ba:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 80076be:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 80076c0:	68b3      	ldr	r3, [r6, #8]
 80076c2:	6862      	ldr	r2, [r4, #4]
 80076c4:	f003 030c 	and.w	r3, r3, #12
 80076c8:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 80076cc:	d0a3      	beq.n	8007616 <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 80076ce:	f7fe fb2d 	bl	8005d2c <HAL_GetTick>
 80076d2:	1bc0      	subs	r0, r0, r7
 80076d4:	4540      	cmp	r0, r8
 80076d6:	d9f3      	bls.n	80076c0 <HAL_RCC_ClockConfig+0xd0>
        return HAL_TIMEOUT;
 80076d8:	2003      	movs	r0, #3
 80076da:	e78f      	b.n	80075fc <HAL_RCC_ClockConfig+0xc>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 80076dc:	1e91      	subs	r1, r2, #2
 80076de:	2901      	cmp	r1, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80076e0:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 80076e2:	d802      	bhi.n	80076ea <HAL_RCC_ClockConfig+0xfa>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80076e4:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 80076e8:	e7de      	b.n	80076a8 <HAL_RCC_ClockConfig+0xb8>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80076ea:	f013 0f02 	tst.w	r3, #2
 80076ee:	e7db      	b.n	80076a8 <HAL_RCC_ClockConfig+0xb8>
    __HAL_FLASH_SET_LATENCY(FLatency);
 80076f0:	b2ea      	uxtb	r2, r5
 80076f2:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 80076f4:	681b      	ldr	r3, [r3, #0]
 80076f6:	f003 030f 	and.w	r3, r3, #15
 80076fa:	42ab      	cmp	r3, r5
 80076fc:	f47f af7d 	bne.w	80075fa <HAL_RCC_ClockConfig+0xa>
 8007700:	e78f      	b.n	8007622 <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8007702:	4905      	ldr	r1, [pc, #20]	; (8007718 <HAL_RCC_ClockConfig+0x128>)
 8007704:	68e0      	ldr	r0, [r4, #12]
 8007706:	688b      	ldr	r3, [r1, #8]
 8007708:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 800770c:	4303      	orrs	r3, r0
 800770e:	608b      	str	r3, [r1, #8]
 8007710:	e78a      	b.n	8007628 <HAL_RCC_ClockConfig+0x38>
 8007712:	bf00      	nop
 8007714:	40023c00 	.word	0x40023c00
 8007718:	40023800 	.word	0x40023800
 800771c:	0802367c 	.word	0x0802367c
 8007720:	2000007c 	.word	0x2000007c
 8007724:	20000084 	.word	0x20000084

08007728 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 8007728:	4b04      	ldr	r3, [pc, #16]	; (800773c <HAL_RCC_GetPCLK1Freq+0x14>)
 800772a:	4a05      	ldr	r2, [pc, #20]	; (8007740 <HAL_RCC_GetPCLK1Freq+0x18>)
 800772c:	689b      	ldr	r3, [r3, #8]
 800772e:	f3c3 2382 	ubfx	r3, r3, #10, #3
 8007732:	5cd3      	ldrb	r3, [r2, r3]
 8007734:	4a03      	ldr	r2, [pc, #12]	; (8007744 <HAL_RCC_GetPCLK1Freq+0x1c>)
 8007736:	6810      	ldr	r0, [r2, #0]
}
 8007738:	40d8      	lsrs	r0, r3
 800773a:	4770      	bx	lr
 800773c:	40023800 	.word	0x40023800
 8007740:	0802368c 	.word	0x0802368c
 8007744:	2000007c 	.word	0x2000007c

08007748 <HAL_RCC_GetPCLK2Freq>:
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2)>> RCC_CFGR_PPRE2_Pos]);
 8007748:	4b04      	ldr	r3, [pc, #16]	; (800775c <HAL_RCC_GetPCLK2Freq+0x14>)
 800774a:	4a05      	ldr	r2, [pc, #20]	; (8007760 <HAL_RCC_GetPCLK2Freq+0x18>)
 800774c:	689b      	ldr	r3, [r3, #8]
 800774e:	f3c3 3342 	ubfx	r3, r3, #13, #3
 8007752:	5cd3      	ldrb	r3, [r2, r3]
 8007754:	4a03      	ldr	r2, [pc, #12]	; (8007764 <HAL_RCC_GetPCLK2Freq+0x1c>)
 8007756:	6810      	ldr	r0, [r2, #0]
}
 8007758:	40d8      	lsrs	r0, r3
 800775a:	4770      	bx	lr
 800775c:	40023800 	.word	0x40023800
 8007760:	0802368c 	.word	0x0802368c
 8007764:	2000007c 	.word	0x2000007c

08007768 <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 8007768:	230f      	movs	r3, #15
 800776a:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800776c:	4b0b      	ldr	r3, [pc, #44]	; (800779c <HAL_RCC_GetClockConfig+0x34>)
 800776e:	689a      	ldr	r2, [r3, #8]
 8007770:	f002 0203 	and.w	r2, r2, #3
 8007774:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 8007776:	689a      	ldr	r2, [r3, #8]
 8007778:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 800777c:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 800777e:	689a      	ldr	r2, [r3, #8]
 8007780:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 8007784:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 8007786:	689b      	ldr	r3, [r3, #8]
 8007788:	08db      	lsrs	r3, r3, #3
 800778a:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 800778e:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 8007790:	4b03      	ldr	r3, [pc, #12]	; (80077a0 <HAL_RCC_GetClockConfig+0x38>)
 8007792:	681b      	ldr	r3, [r3, #0]
 8007794:	f003 030f 	and.w	r3, r3, #15
 8007798:	600b      	str	r3, [r1, #0]
}
 800779a:	4770      	bx	lr
 800779c:	40023800 	.word	0x40023800
 80077a0:	40023c00 	.word	0x40023c00

080077a4 <HAL_RCCEx_PeriphCLKConfig>:
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 80077a4:	6803      	ldr	r3, [r0, #0]
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 80077a6:	f013 0f43 	tst.w	r3, #67	; 0x43
{
 80077aa:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80077ac:	4604      	mov	r4, r0
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 80077ae:	f040 808c 	bne.w	80078ca <HAL_RCCEx_PeriphCLKConfig+0x126>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 80077b2:	6823      	ldr	r3, [r4, #0]
 80077b4:	f013 0f0c 	tst.w	r3, #12
 80077b8:	d045      	beq.n	8007846 <HAL_RCCEx_PeriphCLKConfig+0xa2>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 80077ba:	4b8b      	ldr	r3, [pc, #556]	; (80079e8 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 80077bc:	4d8b      	ldr	r5, [pc, #556]	; (80079ec <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLSAI_DISABLE();
 80077be:	2200      	movs	r2, #0
 80077c0:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 80077c2:	f7fe fab3 	bl	8005d2c <HAL_GetTick>
 80077c6:	4606      	mov	r6, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 80077c8:	682b      	ldr	r3, [r5, #0]
 80077ca:	009f      	lsls	r7, r3, #2
 80077cc:	f100 80cf 	bmi.w	800796e <HAL_RCCEx_PeriphCLKConfig+0x1ca>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 80077d0:	6821      	ldr	r1, [r4, #0]
 80077d2:	074e      	lsls	r6, r1, #29
 80077d4:	d515      	bpl.n	8007802 <HAL_RCCEx_PeriphCLKConfig+0x5e>
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 80077d6:	e9d4 0304 	ldrd	r0, r3, [r4, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 80077da:	f8d5 2088 	ldr.w	r2, [r5, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 80077de:	061b      	lsls	r3, r3, #24
 80077e0:	f002 42e0 	and.w	r2, r2, #1879048192	; 0x70000000
 80077e4:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 80077e8:	4313      	orrs	r3, r2
 80077ea:	f8c5 3088 	str.w	r3, [r5, #136]	; 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 80077ee:	f8d5 308c 	ldr.w	r3, [r5, #140]	; 0x8c
 80077f2:	6a22      	ldr	r2, [r4, #32]
 80077f4:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 80077f8:	3a01      	subs	r2, #1
 80077fa:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80077fe:	f8c5 308c 	str.w	r3, [r5, #140]	; 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 8007802:	070d      	lsls	r5, r1, #28
 8007804:	d514      	bpl.n	8007830 <HAL_RCCEx_PeriphCLKConfig+0x8c>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8007806:	4a79      	ldr	r2, [pc, #484]	; (80079ec <HAL_RCCEx_PeriphCLKConfig+0x248>)
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 8007808:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800780a:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800780e:	6920      	ldr	r0, [r4, #16]
 8007810:	071b      	lsls	r3, r3, #28
 8007812:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 8007816:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800781a:	430b      	orrs	r3, r1
 800781c:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 8007820:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 8007824:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8007826:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800782a:	430b      	orrs	r3, r1
 800782c:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    }
    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 8007830:	4b6d      	ldr	r3, [pc, #436]	; (80079e8 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8007832:	4e6e      	ldr	r6, [pc, #440]	; (80079ec <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLSAI_ENABLE();
 8007834:	2201      	movs	r2, #1
 8007836:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 8007838:	f7fe fa78 	bl	8005d2c <HAL_GetTick>
 800783c:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800783e:	6833      	ldr	r3, [r6, #0]
 8007840:	0098      	lsls	r0, r3, #2
 8007842:	f140 809b 	bpl.w	800797c <HAL_RCCEx_PeriphCLKConfig+0x1d8>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 8007846:	6823      	ldr	r3, [r4, #0]
 8007848:	069b      	lsls	r3, r3, #26
 800784a:	d533      	bpl.n	80078b4 <HAL_RCCEx_PeriphCLKConfig+0x110>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 800784c:	2300      	movs	r3, #0
 800784e:	9301      	str	r3, [sp, #4]
 8007850:	4b66      	ldr	r3, [pc, #408]	; (80079ec <HAL_RCCEx_PeriphCLKConfig+0x248>)

    /* Enable write access to Backup domain */
    PWR->CR |= PWR_CR_DBP;
 8007852:	4d67      	ldr	r5, [pc, #412]	; (80079f0 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PWR_CLK_ENABLE();
 8007854:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8007856:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800785a:	641a      	str	r2, [r3, #64]	; 0x40
 800785c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800785e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8007862:	9301      	str	r3, [sp, #4]
 8007864:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 8007866:	682b      	ldr	r3, [r5, #0]
 8007868:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800786c:	602b      	str	r3, [r5, #0]

    /* Get tick */
    tickstart = HAL_GetTick();
 800786e:	f7fe fa5d 	bl	8005d2c <HAL_GetTick>
 8007872:	4606      	mov	r6, r0

    while((PWR->CR & PWR_CR_DBP) == RESET)
 8007874:	682b      	ldr	r3, [r5, #0]
 8007876:	05d9      	lsls	r1, r3, #23
 8007878:	f140 8087 	bpl.w	800798a <HAL_RCCEx_PeriphCLKConfig+0x1e6>
      {
        return HAL_TIMEOUT;
      }
    }
    /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value */
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800787c:	4d5b      	ldr	r5, [pc, #364]	; (80079ec <HAL_RCCEx_PeriphCLKConfig+0x248>)
 800787e:	6f2b      	ldr	r3, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8007880:	f413 7340 	ands.w	r3, r3, #768	; 0x300
 8007884:	f040 8088 	bne.w	8007998 <HAL_RCCEx_PeriphCLKConfig+0x1f4>
            return HAL_TIMEOUT;
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8007888:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800788a:	f403 7240 	and.w	r2, r3, #768	; 0x300
 800788e:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 8007892:	4a56      	ldr	r2, [pc, #344]	; (80079ec <HAL_RCCEx_PeriphCLKConfig+0x248>)
 8007894:	f040 80a4 	bne.w	80079e0 <HAL_RCCEx_PeriphCLKConfig+0x23c>
 8007898:	6891      	ldr	r1, [r2, #8]
 800789a:	f023 4070 	bic.w	r0, r3, #4026531840	; 0xf0000000
 800789e:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 80078a2:	f420 7040 	bic.w	r0, r0, #768	; 0x300
 80078a6:	4301      	orrs	r1, r0
 80078a8:	6091      	str	r1, [r2, #8]
 80078aa:	6f11      	ldr	r1, [r2, #112]	; 0x70
 80078ac:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80078b0:	430b      	orrs	r3, r1
 80078b2:	6713      	str	r3, [r2, #112]	; 0x70
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 80078b4:	6820      	ldr	r0, [r4, #0]
 80078b6:	f010 0010 	ands.w	r0, r0, #16
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 80078ba:	bf1f      	itttt	ne
 80078bc:	4b4d      	ldrne	r3, [pc, #308]	; (80079f4 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 80078be:	f894 202c 	ldrbne.w	r2, [r4, #44]	; 0x2c
 80078c2:	f8c3 21e0 	strne.w	r2, [r3, #480]	; 0x1e0
  }
  return HAL_OK;
 80078c6:	2000      	movne	r0, #0
 80078c8:	e04f      	b.n	800796a <HAL_RCCEx_PeriphCLKConfig+0x1c6>
    __HAL_RCC_PLLI2S_DISABLE();
 80078ca:	4b47      	ldr	r3, [pc, #284]	; (80079e8 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 80078cc:	4e47      	ldr	r6, [pc, #284]	; (80079ec <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLI2S_DISABLE();
 80078ce:	2200      	movs	r2, #0
 80078d0:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 80078d2:	f7fe fa2b 	bl	8005d2c <HAL_GetTick>
 80078d6:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 80078d8:	6833      	ldr	r3, [r6, #0]
 80078da:	011f      	lsls	r7, r3, #4
 80078dc:	d43f      	bmi.n	800795e <HAL_RCCEx_PeriphCLKConfig+0x1ba>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 80078de:	6821      	ldr	r1, [r4, #0]
 80078e0:	07cd      	lsls	r5, r1, #31
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 80078e2:	bf41      	itttt	mi
 80078e4:	e9d4 2301 	ldrdmi	r2, r3, [r4, #4]
 80078e8:	071b      	lslmi	r3, r3, #28
 80078ea:	ea43 1382 	orrmi.w	r3, r3, r2, lsl #6
 80078ee:	f8c6 3084 	strmi.w	r3, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 80078f2:	0788      	lsls	r0, r1, #30
 80078f4:	d515      	bpl.n	8007922 <HAL_RCCEx_PeriphCLKConfig+0x17e>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 80078f6:	4a3d      	ldr	r2, [pc, #244]	; (80079ec <HAL_RCCEx_PeriphCLKConfig+0x248>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 80078f8:	68e3      	ldr	r3, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 80078fa:	f8d2 0084 	ldr.w	r0, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 80078fe:	6865      	ldr	r5, [r4, #4]
 8007900:	061b      	lsls	r3, r3, #24
 8007902:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 8007906:	ea43 1385 	orr.w	r3, r3, r5, lsl #6
 800790a:	4303      	orrs	r3, r0
 800790c:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 8007910:	f8d2 008c 	ldr.w	r0, [r2, #140]	; 0x8c
 8007914:	69e3      	ldr	r3, [r4, #28]
 8007916:	f020 001f 	bic.w	r0, r0, #31
 800791a:	3b01      	subs	r3, #1
 800791c:	4303      	orrs	r3, r0
 800791e:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 8007922:	0649      	lsls	r1, r1, #25
 8007924:	d50a      	bpl.n	800793c <HAL_RCCEx_PeriphCLKConfig+0x198>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 8007926:	68e3      	ldr	r3, [r4, #12]
 8007928:	6862      	ldr	r2, [r4, #4]
 800792a:	061b      	lsls	r3, r3, #24
 800792c:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8007930:	68a2      	ldr	r2, [r4, #8]
 8007932:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 8007936:	4a2d      	ldr	r2, [pc, #180]	; (80079ec <HAL_RCCEx_PeriphCLKConfig+0x248>)
 8007938:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 800793c:	4b2a      	ldr	r3, [pc, #168]	; (80079e8 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800793e:	4e2b      	ldr	r6, [pc, #172]	; (80079ec <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLI2S_ENABLE();
 8007940:	2201      	movs	r2, #1
 8007942:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 8007944:	f7fe f9f2 	bl	8005d2c <HAL_GetTick>
 8007948:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800794a:	6833      	ldr	r3, [r6, #0]
 800794c:	011a      	lsls	r2, r3, #4
 800794e:	f53f af30 	bmi.w	80077b2 <HAL_RCCEx_PeriphCLKConfig+0xe>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 8007952:	f7fe f9eb 	bl	8005d2c <HAL_GetTick>
 8007956:	1b40      	subs	r0, r0, r5
 8007958:	2802      	cmp	r0, #2
 800795a:	d9f6      	bls.n	800794a <HAL_RCCEx_PeriphCLKConfig+0x1a6>
 800795c:	e004      	b.n	8007968 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800795e:	f7fe f9e5 	bl	8005d2c <HAL_GetTick>
 8007962:	1b40      	subs	r0, r0, r5
 8007964:	2802      	cmp	r0, #2
 8007966:	d9b7      	bls.n	80078d8 <HAL_RCCEx_PeriphCLKConfig+0x134>
        return HAL_TIMEOUT;
 8007968:	2003      	movs	r0, #3
}
 800796a:	b003      	add	sp, #12
 800796c:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800796e:	f7fe f9dd 	bl	8005d2c <HAL_GetTick>
 8007972:	1b80      	subs	r0, r0, r6
 8007974:	2802      	cmp	r0, #2
 8007976:	f67f af27 	bls.w	80077c8 <HAL_RCCEx_PeriphCLKConfig+0x24>
 800797a:	e7f5      	b.n	8007968 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800797c:	f7fe f9d6 	bl	8005d2c <HAL_GetTick>
 8007980:	1b40      	subs	r0, r0, r5
 8007982:	2802      	cmp	r0, #2
 8007984:	f67f af5b 	bls.w	800783e <HAL_RCCEx_PeriphCLKConfig+0x9a>
 8007988:	e7ee      	b.n	8007968 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 800798a:	f7fe f9cf 	bl	8005d2c <HAL_GetTick>
 800798e:	1b80      	subs	r0, r0, r6
 8007990:	2802      	cmp	r0, #2
 8007992:	f67f af6f 	bls.w	8007874 <HAL_RCCEx_PeriphCLKConfig+0xd0>
 8007996:	e7e7      	b.n	8007968 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8007998:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800799a:	f402 7240 	and.w	r2, r2, #768	; 0x300
 800799e:	4293      	cmp	r3, r2
 80079a0:	f43f af72 	beq.w	8007888 <HAL_RCCEx_PeriphCLKConfig+0xe4>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 80079a4:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 80079a6:	4a10      	ldr	r2, [pc, #64]	; (80079e8 <HAL_RCCEx_PeriphCLKConfig+0x244>)
 80079a8:	2101      	movs	r1, #1
 80079aa:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 80079ae:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 80079b2:	2100      	movs	r1, #0
 80079b4:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      RCC->BDCR = tmpreg1;
 80079b8:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 80079ba:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 80079bc:	07da      	lsls	r2, r3, #31
 80079be:	f57f af63 	bpl.w	8007888 <HAL_RCCEx_PeriphCLKConfig+0xe4>
        tickstart = HAL_GetTick();
 80079c2:	f7fe f9b3 	bl	8005d2c <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80079c6:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 80079ca:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80079cc:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 80079ce:	079b      	lsls	r3, r3, #30
 80079d0:	f53f af5a 	bmi.w	8007888 <HAL_RCCEx_PeriphCLKConfig+0xe4>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80079d4:	f7fe f9aa 	bl	8005d2c <HAL_GetTick>
 80079d8:	1b80      	subs	r0, r0, r6
 80079da:	42b8      	cmp	r0, r7
 80079dc:	d9f6      	bls.n	80079cc <HAL_RCCEx_PeriphCLKConfig+0x228>
 80079de:	e7c3      	b.n	8007968 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 80079e0:	6891      	ldr	r1, [r2, #8]
 80079e2:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 80079e6:	e75f      	b.n	80078a8 <HAL_RCCEx_PeriphCLKConfig+0x104>
 80079e8:	42470000 	.word	0x42470000
 80079ec:	40023800 	.word	0x40023800
 80079f0:	40007000 	.word	0x40007000
 80079f4:	42471000 	.word	0x42471000

080079f8 <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure 
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{   
 80079f8:	b538      	push	{r3, r4, r5, lr}
 80079fa:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if(hsdram == NULL)
 80079fc:	4604      	mov	r4, r0
 80079fe:	b1c8      	cbz	r0, 8007a34 <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }
  
  if(hsdram->State == HAL_SDRAM_STATE_RESET)
 8007a00:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8007a04:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8007a08:	b91b      	cbnz	r3, 8007a12 <HAL_SDRAM_Init+0x1a>
  {  
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 8007a0a:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 8007a0e:	f7fa fad5 	bl	8001fbc <HAL_SDRAM_MspInit>
#endif
  }
  
  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8007a12:	2302      	movs	r3, #2
 8007a14:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Initialize SDRAM control Interface */
  FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 8007a18:	1d21      	adds	r1, r4, #4
 8007a1a:	6820      	ldr	r0, [r4, #0]
 8007a1c:	f000 fcba 	bl	8008394 <FMC_SDRAM_Init>
  
  /* Initialize SDRAM timing Interface */
  FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank); 
 8007a20:	6862      	ldr	r2, [r4, #4]
 8007a22:	6820      	ldr	r0, [r4, #0]
 8007a24:	4629      	mov	r1, r5
 8007a26:	f000 fceb 	bl	8008400 <FMC_SDRAM_Timing_Init>
  
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 8007a2a:	2301      	movs	r3, #1
 8007a2c:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;
 8007a30:	2000      	movs	r0, #0
}
 8007a32:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8007a34:	2001      	movs	r0, #1
 8007a36:	e7fc      	b.n	8007a32 <HAL_SDRAM_Init+0x3a>

08007a38 <HAL_SDRAM_SendCommand>:
  * @param  Command SDRAM command structure
  * @param  Timeout Timeout duration
  * @retval HAL status
  */  
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 8007a38:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8007a3a:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8007a3e:	2b02      	cmp	r3, #2
{
 8007a40:	4604      	mov	r4, r0
 8007a42:	460d      	mov	r5, r1
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8007a44:	b2d8      	uxtb	r0, r3
 8007a46:	d00d      	beq.n	8007a64 <HAL_SDRAM_SendCommand+0x2c>
  {
    return HAL_BUSY;
  }
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8007a48:	2302      	movs	r3, #2
 8007a4a:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Send SDRAM command */
  FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 8007a4e:	6820      	ldr	r0, [r4, #0]
 8007a50:	f000 fd12 	bl	8008478 <FMC_SDRAM_SendCommand>
  
  /* Update the SDRAM controller state */
  if(Command->CommandMode == FMC_SDRAM_CMD_PALL)
 8007a54:	682b      	ldr	r3, [r5, #0]
 8007a56:	2b02      	cmp	r3, #2
  {
    hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 8007a58:	bf0c      	ite	eq
 8007a5a:	2305      	moveq	r3, #5
  }
  else
  {
    hsdram->State = HAL_SDRAM_STATE_READY;
 8007a5c:	2301      	movne	r3, #1
 8007a5e:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  }
  
  return HAL_OK;  
 8007a62:	2000      	movs	r0, #0
}
 8007a64:	bd38      	pop	{r3, r4, r5, pc}

08007a66 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.  
  * @param  RefreshRate The SDRAM refresh rate value       
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 8007a66:	b510      	push	{r4, lr}
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8007a68:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8007a6c:	2b02      	cmp	r3, #2
{
 8007a6e:	4604      	mov	r4, r0
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8007a70:	b2d8      	uxtb	r0, r3
 8007a72:	d009      	beq.n	8007a88 <HAL_SDRAM_ProgramRefreshRate+0x22>
  {
    return HAL_BUSY;
  } 
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8007a74:	2302      	movs	r3, #2
 8007a76:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Program the refresh rate */
  FMC_SDRAM_ProgramRefreshRate(hsdram->Instance ,RefreshRate);
 8007a7a:	6820      	ldr	r0, [r4, #0]
 8007a7c:	f000 fd23 	bl	80084c6 <FMC_SDRAM_ProgramRefreshRate>
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 8007a80:	2301      	movs	r3, #1
 8007a82:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;   
 8007a86:	2000      	movs	r0, #0
}
 8007a88:	bd10      	pop	{r4, pc}

08007a8a <SPI_WaitFlagStateUntilTimeout.constprop.0>:
  * @param  State flag state to check
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
 8007a8a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007a8c:	4604      	mov	r4, r0
 8007a8e:	460e      	mov	r6, r1
 8007a90:	4615      	mov	r5, r2
 8007a92:	461f      	mov	r7, r3
                                                       uint32_t Timeout, uint32_t Tickstart)
{
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8007a94:	6822      	ldr	r2, [r4, #0]
 8007a96:	6893      	ldr	r3, [r2, #8]
 8007a98:	ea36 0303 	bics.w	r3, r6, r3
 8007a9c:	d001      	beq.n	8007aa2 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x18>
        return HAL_TIMEOUT;
      }
    }
  }

  return HAL_OK;
 8007a9e:	2000      	movs	r0, #0
 8007aa0:	e02d      	b.n	8007afe <SPI_WaitFlagStateUntilTimeout.constprop.0+0x74>
    if (Timeout != HAL_MAX_DELAY)
 8007aa2:	1c6b      	adds	r3, r5, #1
 8007aa4:	d0f7      	beq.n	8007a96 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xc>
      if (((HAL_GetTick() - Tickstart) >= Timeout) || (Timeout == 0U))
 8007aa6:	f7fe f941 	bl	8005d2c <HAL_GetTick>
 8007aaa:	1bc0      	subs	r0, r0, r7
 8007aac:	4285      	cmp	r5, r0
 8007aae:	d8f1      	bhi.n	8007a94 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xa>
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 8007ab0:	6823      	ldr	r3, [r4, #0]
 8007ab2:	685a      	ldr	r2, [r3, #4]
 8007ab4:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 8007ab8:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007aba:	6862      	ldr	r2, [r4, #4]
 8007abc:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 8007ac0:	d10a      	bne.n	8007ad8 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x4e>
 8007ac2:	68a2      	ldr	r2, [r4, #8]
 8007ac4:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 8007ac8:	d002      	beq.n	8007ad0 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x46>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8007aca:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 8007ace:	d103      	bne.n	8007ad8 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x4e>
          __HAL_SPI_DISABLE(hspi);
 8007ad0:	681a      	ldr	r2, [r3, #0]
 8007ad2:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8007ad6:	601a      	str	r2, [r3, #0]
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 8007ad8:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8007ada:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 8007ade:	d107      	bne.n	8007af0 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x66>
          SPI_RESET_CRC(hspi);
 8007ae0:	681a      	ldr	r2, [r3, #0]
 8007ae2:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8007ae6:	601a      	str	r2, [r3, #0]
 8007ae8:	681a      	ldr	r2, [r3, #0]
 8007aea:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8007aee:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 8007af0:	2301      	movs	r3, #1
 8007af2:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
        __HAL_UNLOCK(hspi);
 8007af6:	2300      	movs	r3, #0
 8007af8:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
 8007afc:	2003      	movs	r0, #3
}
 8007afe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08007b00 <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 8007b00:	b538      	push	{r3, r4, r5, lr}
 8007b02:	4613      	mov	r3, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007b04:	6842      	ldr	r2, [r0, #4]
 8007b06:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 8007b0a:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007b0c:	d11f      	bne.n	8007b4e <SPI_EndRxTransaction+0x4e>
 8007b0e:	6882      	ldr	r2, [r0, #8]
 8007b10:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 8007b14:	d002      	beq.n	8007b1c <SPI_EndRxTransaction+0x1c>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8007b16:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 8007b1a:	d107      	bne.n	8007b2c <SPI_EndRxTransaction+0x2c>
  {
    /* Disable SPI peripheral */
    __HAL_SPI_DISABLE(hspi);
 8007b1c:	6825      	ldr	r5, [r4, #0]
 8007b1e:	6828      	ldr	r0, [r5, #0]
  }

  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
  {
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 8007b20:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
    __HAL_SPI_DISABLE(hspi);
 8007b24:	f020 0040 	bic.w	r0, r0, #64	; 0x40
 8007b28:	6028      	str	r0, [r5, #0]
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 8007b2a:	d007      	beq.n	8007b3c <SPI_EndRxTransaction+0x3c>
    {
      /* Control the BSY flag */
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8007b2c:	460a      	mov	r2, r1
 8007b2e:	2180      	movs	r1, #128	; 0x80
 8007b30:	4620      	mov	r0, r4
 8007b32:	f7ff ffaa 	bl	8007a8a <SPI_WaitFlagStateUntilTimeout.constprop.0>
 8007b36:	b920      	cbnz	r0, 8007b42 <SPI_EndRxTransaction+0x42>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 8007b38:	2000      	movs	r0, #0
}
 8007b3a:	bd38      	pop	{r3, r4, r5, pc}
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8007b3c:	460a      	mov	r2, r1
 8007b3e:	2101      	movs	r1, #1
 8007b40:	e7f6      	b.n	8007b30 <SPI_EndRxTransaction+0x30>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8007b42:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8007b44:	f043 0320 	orr.w	r3, r3, #32
 8007b48:	6563      	str	r3, [r4, #84]	; 0x54
      return HAL_TIMEOUT;
 8007b4a:	2003      	movs	r0, #3
 8007b4c:	e7f5      	b.n	8007b3a <SPI_EndRxTransaction+0x3a>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8007b4e:	460a      	mov	r2, r1
 8007b50:	2101      	movs	r1, #1
 8007b52:	e7ee      	b.n	8007b32 <SPI_EndRxTransaction+0x32>

08007b54 <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 8007b54:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8007b56:	4613      	mov	r3, r2
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8007b58:	4a12      	ldr	r2, [pc, #72]	; (8007ba4 <SPI_EndRxTxTransaction+0x50>)
 8007b5a:	6815      	ldr	r5, [r2, #0]
 8007b5c:	4a12      	ldr	r2, [pc, #72]	; (8007ba8 <SPI_EndRxTxTransaction+0x54>)
 8007b5e:	fbb5 f5f2 	udiv	r5, r5, r2
 8007b62:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8007b66:	4355      	muls	r5, r2
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8007b68:	6842      	ldr	r2, [r0, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8007b6a:	9501      	str	r5, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8007b6c:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 8007b70:	4604      	mov	r4, r0
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8007b72:	d10b      	bne.n	8007b8c <SPI_EndRxTxTransaction+0x38>
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8007b74:	460a      	mov	r2, r1
 8007b76:	2180      	movs	r1, #128	; 0x80
 8007b78:	f7ff ff87 	bl	8007a8a <SPI_WaitFlagStateUntilTimeout.constprop.0>
 8007b7c:	b178      	cbz	r0, 8007b9e <SPI_EndRxTxTransaction+0x4a>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8007b7e:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8007b80:	f043 0320 	orr.w	r3, r3, #32
 8007b84:	6563      	str	r3, [r4, #84]	; 0x54
      return HAL_TIMEOUT;
 8007b86:	2003      	movs	r0, #3
      count--;
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
  }

  return HAL_OK;
}
 8007b88:	b003      	add	sp, #12
 8007b8a:	bd30      	pop	{r4, r5, pc}
      if (count == 0U)
 8007b8c:	9b01      	ldr	r3, [sp, #4]
 8007b8e:	b133      	cbz	r3, 8007b9e <SPI_EndRxTxTransaction+0x4a>
      count--;
 8007b90:	9b01      	ldr	r3, [sp, #4]
 8007b92:	3b01      	subs	r3, #1
 8007b94:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 8007b96:	6823      	ldr	r3, [r4, #0]
 8007b98:	689b      	ldr	r3, [r3, #8]
 8007b9a:	061b      	lsls	r3, r3, #24
 8007b9c:	d4f6      	bmi.n	8007b8c <SPI_EndRxTxTransaction+0x38>
  return HAL_OK;
 8007b9e:	2000      	movs	r0, #0
 8007ba0:	e7f2      	b.n	8007b88 <SPI_EndRxTxTransaction+0x34>
 8007ba2:	bf00      	nop
 8007ba4:	2000007c 	.word	0x2000007c
 8007ba8:	016e3600 	.word	0x016e3600

08007bac <HAL_SPI_Init>:
{
 8007bac:	b510      	push	{r4, lr}
  if (hspi == NULL)
 8007bae:	4604      	mov	r4, r0
 8007bb0:	2800      	cmp	r0, #0
 8007bb2:	d036      	beq.n	8007c22 <HAL_SPI_Init+0x76>
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8007bb4:	2300      	movs	r3, #0
 8007bb6:	6283      	str	r3, [r0, #40]	; 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 8007bb8:	f890 3051 	ldrb.w	r3, [r0, #81]	; 0x51
 8007bbc:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8007bc0:	b91b      	cbnz	r3, 8007bca <HAL_SPI_Init+0x1e>
    hspi->Lock = HAL_UNLOCKED;
 8007bc2:	f880 2050 	strb.w	r2, [r0, #80]	; 0x50
    HAL_SPI_MspInit(hspi);
 8007bc6:	f7fa f9a1 	bl	8001f0c <HAL_SPI_MspInit>
  __HAL_SPI_DISABLE(hspi);
 8007bca:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, (hspi->Init.Mode | hspi->Init.Direction | hspi->Init.DataSize |
 8007bcc:	69a2      	ldr	r2, [r4, #24]
  hspi->State = HAL_SPI_STATE_BUSY;
 8007bce:	2302      	movs	r3, #2
 8007bd0:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_SPI_DISABLE(hspi);
 8007bd4:	680b      	ldr	r3, [r1, #0]
 8007bd6:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8007bda:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, (hspi->Init.Mode | hspi->Init.Direction | hspi->Init.DataSize |
 8007bdc:	e9d4 3001 	ldrd	r3, r0, [r4, #4]
 8007be0:	4303      	orrs	r3, r0
 8007be2:	68e0      	ldr	r0, [r4, #12]
 8007be4:	4303      	orrs	r3, r0
 8007be6:	6920      	ldr	r0, [r4, #16]
 8007be8:	4303      	orrs	r3, r0
 8007bea:	6960      	ldr	r0, [r4, #20]
 8007bec:	4303      	orrs	r3, r0
 8007bee:	69e0      	ldr	r0, [r4, #28]
 8007bf0:	4303      	orrs	r3, r0
 8007bf2:	6a20      	ldr	r0, [r4, #32]
 8007bf4:	4303      	orrs	r3, r0
 8007bf6:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8007bf8:	4303      	orrs	r3, r0
 8007bfa:	f402 7000 	and.w	r0, r2, #512	; 0x200
 8007bfe:	4303      	orrs	r3, r0
 8007c00:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | hspi->Init.TIMode));
 8007c02:	0c12      	lsrs	r2, r2, #16
 8007c04:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007c06:	f002 0204 	and.w	r2, r2, #4
 8007c0a:	431a      	orrs	r2, r3
 8007c0c:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 8007c0e:	69cb      	ldr	r3, [r1, #28]
 8007c10:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8007c14:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8007c16:	2000      	movs	r0, #0
  hspi->State     = HAL_SPI_STATE_READY;
 8007c18:	2301      	movs	r3, #1
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8007c1a:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 8007c1c:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
}
 8007c20:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8007c22:	2001      	movs	r0, #1
 8007c24:	e7fc      	b.n	8007c20 <HAL_SPI_Init+0x74>

08007c26 <HAL_SPI_Transmit>:
{
 8007c26:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8007c2a:	461e      	mov	r6, r3
  __HAL_LOCK(hspi);
 8007c2c:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
 8007c30:	2b01      	cmp	r3, #1
{
 8007c32:	4604      	mov	r4, r0
 8007c34:	460d      	mov	r5, r1
 8007c36:	4617      	mov	r7, r2
  __HAL_LOCK(hspi);
 8007c38:	f000 809d 	beq.w	8007d76 <HAL_SPI_Transmit+0x150>
 8007c3c:	2301      	movs	r3, #1
 8007c3e:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
  tickstart = HAL_GetTick();
 8007c42:	f7fe f873 	bl	8005d2c <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 8007c46:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 8007c4a:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 8007c4c:	4680      	mov	r8, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 8007c4e:	b2d8      	uxtb	r0, r3
 8007c50:	f040 808f 	bne.w	8007d72 <HAL_SPI_Transmit+0x14c>
  if ((pData == NULL) || (Size == 0U))
 8007c54:	2d00      	cmp	r5, #0
 8007c56:	d05a      	beq.n	8007d0e <HAL_SPI_Transmit+0xe8>
 8007c58:	2f00      	cmp	r7, #0
 8007c5a:	d058      	beq.n	8007d0e <HAL_SPI_Transmit+0xe8>
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 8007c5c:	2303      	movs	r3, #3
 8007c5e:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007c62:	68a2      	ldr	r2, [r4, #8]
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 8007c64:	6325      	str	r5, [r4, #48]	; 0x30
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8007c66:	2300      	movs	r3, #0
 8007c68:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->RxISR       = NULL;
 8007c6a:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->TxXferCount = Size;
 8007c6e:	86e7      	strh	r7, [r4, #54]	; 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 8007c70:	63a3      	str	r3, [r4, #56]	; 0x38
  hspi->RxXferCount = 0U;
 8007c72:	87e3      	strh	r3, [r4, #62]	; 0x3e
  hspi->RxXferSize  = 0U;
 8007c74:	87a3      	strh	r3, [r4, #60]	; 0x3c
    SPI_1LINE_TX(hspi);
 8007c76:	6823      	ldr	r3, [r4, #0]
  hspi->TxXferSize  = Size;
 8007c78:	86a7      	strh	r7, [r4, #52]	; 0x34
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007c7a:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
    SPI_1LINE_TX(hspi);
 8007c7e:	bf08      	it	eq
 8007c80:	681a      	ldreq	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8007c82:	68e1      	ldr	r1, [r4, #12]
    SPI_1LINE_TX(hspi);
 8007c84:	bf04      	itt	eq
 8007c86:	f442 4280 	orreq.w	r2, r2, #16384	; 0x4000
 8007c8a:	601a      	streq	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8007c8c:	681a      	ldr	r2, [r3, #0]
 8007c8e:	0652      	lsls	r2, r2, #25
    __HAL_SPI_ENABLE(hspi);
 8007c90:	bf5e      	ittt	pl
 8007c92:	681a      	ldrpl	r2, [r3, #0]
 8007c94:	f042 0240 	orrpl.w	r2, r2, #64	; 0x40
 8007c98:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8007c9a:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8007c9e:	6862      	ldr	r2, [r4, #4]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8007ca0:	d141      	bne.n	8007d26 <HAL_SPI_Transmit+0x100>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8007ca2:	b10a      	cbz	r2, 8007ca8 <HAL_SPI_Transmit+0x82>
 8007ca4:	2f01      	cmp	r7, #1
 8007ca6:	d107      	bne.n	8007cb8 <HAL_SPI_Transmit+0x92>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8007ca8:	f835 2b02 	ldrh.w	r2, [r5], #2
 8007cac:	60da      	str	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8007cae:	6325      	str	r5, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8007cb0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007cb2:	3b01      	subs	r3, #1
 8007cb4:	b29b      	uxth	r3, r3
 8007cb6:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 8007cb8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007cba:	b29b      	uxth	r3, r3
 8007cbc:	b9a3      	cbnz	r3, 8007ce8 <HAL_SPI_Transmit+0xc2>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8007cbe:	4642      	mov	r2, r8
 8007cc0:	4631      	mov	r1, r6
 8007cc2:	4620      	mov	r0, r4
 8007cc4:	f7ff ff46 	bl	8007b54 <SPI_EndRxTxTransaction>
 8007cc8:	2800      	cmp	r0, #0
 8007cca:	d14f      	bne.n	8007d6c <HAL_SPI_Transmit+0x146>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8007ccc:	68a3      	ldr	r3, [r4, #8]
 8007cce:	b933      	cbnz	r3, 8007cde <HAL_SPI_Transmit+0xb8>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8007cd0:	9301      	str	r3, [sp, #4]
 8007cd2:	6823      	ldr	r3, [r4, #0]
 8007cd4:	68da      	ldr	r2, [r3, #12]
 8007cd6:	9201      	str	r2, [sp, #4]
 8007cd8:	689b      	ldr	r3, [r3, #8]
 8007cda:	9301      	str	r3, [sp, #4]
 8007cdc:	9b01      	ldr	r3, [sp, #4]
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8007cde:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 8007ce0:	3800      	subs	r0, #0
 8007ce2:	bf18      	it	ne
 8007ce4:	2001      	movne	r0, #1
error:
 8007ce6:	e012      	b.n	8007d0e <HAL_SPI_Transmit+0xe8>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8007ce8:	6822      	ldr	r2, [r4, #0]
 8007cea:	6893      	ldr	r3, [r2, #8]
 8007cec:	0798      	lsls	r0, r3, #30
 8007cee:	d505      	bpl.n	8007cfc <HAL_SPI_Transmit+0xd6>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8007cf0:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8007cf2:	f833 1b02 	ldrh.w	r1, [r3], #2
 8007cf6:	60d1      	str	r1, [r2, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8007cf8:	6323      	str	r3, [r4, #48]	; 0x30
 8007cfa:	e7d9      	b.n	8007cb0 <HAL_SPI_Transmit+0x8a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8007cfc:	f7fe f816 	bl	8005d2c <HAL_GetTick>
 8007d00:	eba0 0008 	sub.w	r0, r0, r8
 8007d04:	42b0      	cmp	r0, r6
 8007d06:	d30b      	bcc.n	8007d20 <HAL_SPI_Transmit+0xfa>
 8007d08:	1c71      	adds	r1, r6, #1
 8007d0a:	d0d5      	beq.n	8007cb8 <HAL_SPI_Transmit+0x92>
          errorcode = HAL_TIMEOUT;
 8007d0c:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 8007d0e:	2301      	movs	r3, #1
 8007d10:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 8007d14:	2300      	movs	r3, #0
 8007d16:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 8007d1a:	b002      	add	sp, #8
 8007d1c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8007d20:	2e00      	cmp	r6, #0
 8007d22:	d1c9      	bne.n	8007cb8 <HAL_SPI_Transmit+0x92>
 8007d24:	e7f2      	b.n	8007d0c <HAL_SPI_Transmit+0xe6>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8007d26:	b10a      	cbz	r2, 8007d2c <HAL_SPI_Transmit+0x106>
 8007d28:	2f01      	cmp	r7, #1
 8007d2a:	d108      	bne.n	8007d3e <HAL_SPI_Transmit+0x118>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8007d2c:	782a      	ldrb	r2, [r5, #0]
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8007d2e:	731a      	strb	r2, [r3, #12]
        hspi->pTxBuffPtr += sizeof(uint8_t);
 8007d30:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8007d32:	3301      	adds	r3, #1
 8007d34:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8007d36:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007d38:	3b01      	subs	r3, #1
 8007d3a:	b29b      	uxth	r3, r3
 8007d3c:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 8007d3e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007d40:	b29b      	uxth	r3, r3
 8007d42:	2b00      	cmp	r3, #0
 8007d44:	d0bb      	beq.n	8007cbe <HAL_SPI_Transmit+0x98>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8007d46:	6823      	ldr	r3, [r4, #0]
 8007d48:	689a      	ldr	r2, [r3, #8]
 8007d4a:	0792      	lsls	r2, r2, #30
 8007d4c:	d502      	bpl.n	8007d54 <HAL_SPI_Transmit+0x12e>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8007d4e:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8007d50:	7812      	ldrb	r2, [r2, #0]
 8007d52:	e7ec      	b.n	8007d2e <HAL_SPI_Transmit+0x108>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8007d54:	f7fd ffea 	bl	8005d2c <HAL_GetTick>
 8007d58:	eba0 0008 	sub.w	r0, r0, r8
 8007d5c:	42b0      	cmp	r0, r6
 8007d5e:	d302      	bcc.n	8007d66 <HAL_SPI_Transmit+0x140>
 8007d60:	1c73      	adds	r3, r6, #1
 8007d62:	d0ec      	beq.n	8007d3e <HAL_SPI_Transmit+0x118>
 8007d64:	e7d2      	b.n	8007d0c <HAL_SPI_Transmit+0xe6>
 8007d66:	2e00      	cmp	r6, #0
 8007d68:	d1e9      	bne.n	8007d3e <HAL_SPI_Transmit+0x118>
 8007d6a:	e7cf      	b.n	8007d0c <HAL_SPI_Transmit+0xe6>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8007d6c:	2320      	movs	r3, #32
 8007d6e:	6563      	str	r3, [r4, #84]	; 0x54
 8007d70:	e7ac      	b.n	8007ccc <HAL_SPI_Transmit+0xa6>
    errorcode = HAL_BUSY;
 8007d72:	2002      	movs	r0, #2
 8007d74:	e7cb      	b.n	8007d0e <HAL_SPI_Transmit+0xe8>
  __HAL_LOCK(hspi);
 8007d76:	2002      	movs	r0, #2
 8007d78:	e7cf      	b.n	8007d1a <HAL_SPI_Transmit+0xf4>

08007d7a <HAL_SPI_TransmitReceive>:
{
 8007d7a:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8007d7e:	461e      	mov	r6, r3
  __HAL_LOCK(hspi);
 8007d80:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
{
 8007d84:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  __HAL_LOCK(hspi);
 8007d86:	2b01      	cmp	r3, #1
{
 8007d88:	4604      	mov	r4, r0
 8007d8a:	460d      	mov	r5, r1
 8007d8c:	4691      	mov	r9, r2
  __HAL_LOCK(hspi);
 8007d8e:	f000 80e6 	beq.w	8007f5e <HAL_SPI_TransmitReceive+0x1e4>
 8007d92:	2301      	movs	r3, #1
 8007d94:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
  tickstart = HAL_GetTick();
 8007d98:	f7fd ffc8 	bl	8005d2c <HAL_GetTick>
  tmp_state           = hspi->State;
 8007d9c:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  tmp_mode            = hspi->Init.Mode;
 8007da0:	6862      	ldr	r2, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 8007da2:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 8007da4:	4680      	mov	r8, r0
  tmp_state           = hspi->State;
 8007da6:	b2d9      	uxtb	r1, r3
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 8007da8:	d00a      	beq.n	8007dc0 <HAL_SPI_TransmitReceive+0x46>
 8007daa:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 8007dae:	f040 80d4 	bne.w	8007f5a <HAL_SPI_TransmitReceive+0x1e0>
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 8007db2:	68a3      	ldr	r3, [r4, #8]
 8007db4:	2b00      	cmp	r3, #0
 8007db6:	f040 80d0 	bne.w	8007f5a <HAL_SPI_TransmitReceive+0x1e0>
 8007dba:	2904      	cmp	r1, #4
 8007dbc:	f040 80cd 	bne.w	8007f5a <HAL_SPI_TransmitReceive+0x1e0>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 8007dc0:	2d00      	cmp	r5, #0
 8007dc2:	d040      	beq.n	8007e46 <HAL_SPI_TransmitReceive+0xcc>
 8007dc4:	f1b9 0f00 	cmp.w	r9, #0
 8007dc8:	d03d      	beq.n	8007e46 <HAL_SPI_TransmitReceive+0xcc>
 8007dca:	2e00      	cmp	r6, #0
 8007dcc:	d03b      	beq.n	8007e46 <HAL_SPI_TransmitReceive+0xcc>
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 8007dce:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 8007dd2:	f8c4 9038 	str.w	r9, [r4, #56]	; 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 8007dd6:	2b04      	cmp	r3, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 8007dd8:	bf1c      	itt	ne
 8007dda:	2305      	movne	r3, #5
 8007ddc:	f884 3051 	strbne.w	r3, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8007de0:	2300      	movs	r3, #0
 8007de2:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->TxISR       = NULL;
 8007de4:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8007de8:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 8007dea:	87e6      	strh	r6, [r4, #62]	; 0x3e
  hspi->TxXferCount = Size;
 8007dec:	86e6      	strh	r6, [r4, #54]	; 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8007dee:	6819      	ldr	r1, [r3, #0]
  hspi->RxXferSize  = Size;
 8007df0:	87a6      	strh	r6, [r4, #60]	; 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8007df2:	0649      	lsls	r1, r1, #25
    __HAL_SPI_ENABLE(hspi);
 8007df4:	bf58      	it	pl
 8007df6:	6819      	ldrpl	r1, [r3, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 8007df8:	6325      	str	r5, [r4, #48]	; 0x30
    __HAL_SPI_ENABLE(hspi);
 8007dfa:	bf58      	it	pl
 8007dfc:	f041 0140 	orrpl.w	r1, r1, #64	; 0x40
  hspi->TxXferSize  = Size;
 8007e00:	86a6      	strh	r6, [r4, #52]	; 0x34
    __HAL_SPI_ENABLE(hspi);
 8007e02:	bf58      	it	pl
 8007e04:	6019      	strpl	r1, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8007e06:	68e1      	ldr	r1, [r4, #12]
 8007e08:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
 8007e0c:	d152      	bne.n	8007eb4 <HAL_SPI_TransmitReceive+0x13a>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8007e0e:	b10a      	cbz	r2, 8007e14 <HAL_SPI_TransmitReceive+0x9a>
 8007e10:	2e01      	cmp	r6, #1
 8007e12:	d107      	bne.n	8007e24 <HAL_SPI_TransmitReceive+0xaa>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8007e14:	f835 2b02 	ldrh.w	r2, [r5], #2
 8007e18:	60da      	str	r2, [r3, #12]
      hspi->TxXferCount--;
 8007e1a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8007e1c:	6325      	str	r5, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 8007e1e:	3b01      	subs	r3, #1
 8007e20:	b29b      	uxth	r3, r3
 8007e22:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 1U;
 8007e24:	2501      	movs	r5, #1
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8007e26:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007e28:	b29b      	uxth	r3, r3
 8007e2a:	b973      	cbnz	r3, 8007e4a <HAL_SPI_TransmitReceive+0xd0>
 8007e2c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007e2e:	b29b      	uxth	r3, r3
 8007e30:	b95b      	cbnz	r3, 8007e4a <HAL_SPI_TransmitReceive+0xd0>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8007e32:	4642      	mov	r2, r8
 8007e34:	4639      	mov	r1, r7
 8007e36:	4620      	mov	r0, r4
 8007e38:	f7ff fe8c 	bl	8007b54 <SPI_EndRxTxTransaction>
 8007e3c:	2800      	cmp	r0, #0
 8007e3e:	f000 8081 	beq.w	8007f44 <HAL_SPI_TransmitReceive+0x1ca>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8007e42:	2320      	movs	r3, #32
 8007e44:	6563      	str	r3, [r4, #84]	; 0x54
    errorcode = HAL_ERROR;
 8007e46:	2001      	movs	r0, #1
 8007e48:	e02b      	b.n	8007ea2 <HAL_SPI_TransmitReceive+0x128>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8007e4a:	6821      	ldr	r1, [r4, #0]
 8007e4c:	688b      	ldr	r3, [r1, #8]
 8007e4e:	079e      	lsls	r6, r3, #30
 8007e50:	d50d      	bpl.n	8007e6e <HAL_SPI_TransmitReceive+0xf4>
 8007e52:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007e54:	b29b      	uxth	r3, r3
 8007e56:	b153      	cbz	r3, 8007e6e <HAL_SPI_TransmitReceive+0xf4>
 8007e58:	b14d      	cbz	r5, 8007e6e <HAL_SPI_TransmitReceive+0xf4>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8007e5a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8007e5c:	f833 2b02 	ldrh.w	r2, [r3], #2
 8007e60:	60ca      	str	r2, [r1, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8007e62:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8007e64:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007e66:	3b01      	subs	r3, #1
 8007e68:	b29b      	uxth	r3, r3
 8007e6a:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 8007e6c:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8007e6e:	688a      	ldr	r2, [r1, #8]
 8007e70:	f012 0201 	ands.w	r2, r2, #1
 8007e74:	d00c      	beq.n	8007e90 <HAL_SPI_TransmitReceive+0x116>
 8007e76:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007e78:	b29b      	uxth	r3, r3
 8007e7a:	b14b      	cbz	r3, 8007e90 <HAL_SPI_TransmitReceive+0x116>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8007e7c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8007e7e:	68c9      	ldr	r1, [r1, #12]
 8007e80:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8007e84:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8007e86:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007e88:	3b01      	subs	r3, #1
 8007e8a:	b29b      	uxth	r3, r3
 8007e8c:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 8007e8e:	4615      	mov	r5, r2
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 8007e90:	f7fd ff4c 	bl	8005d2c <HAL_GetTick>
 8007e94:	eba0 0008 	sub.w	r0, r0, r8
 8007e98:	42b8      	cmp	r0, r7
 8007e9a:	d3c4      	bcc.n	8007e26 <HAL_SPI_TransmitReceive+0xac>
 8007e9c:	1c78      	adds	r0, r7, #1
 8007e9e:	d0c2      	beq.n	8007e26 <HAL_SPI_TransmitReceive+0xac>
        errorcode = HAL_TIMEOUT;
 8007ea0:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 8007ea2:	2301      	movs	r3, #1
 8007ea4:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 8007ea8:	2300      	movs	r3, #0
 8007eaa:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 8007eae:	b003      	add	sp, #12
 8007eb0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8007eb4:	b10a      	cbz	r2, 8007eba <HAL_SPI_TransmitReceive+0x140>
 8007eb6:	2e01      	cmp	r6, #1
 8007eb8:	d108      	bne.n	8007ecc <HAL_SPI_TransmitReceive+0x152>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8007eba:	782a      	ldrb	r2, [r5, #0]
 8007ebc:	731a      	strb	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 8007ebe:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8007ec0:	3301      	adds	r3, #1
 8007ec2:	6323      	str	r3, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 8007ec4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007ec6:	3b01      	subs	r3, #1
 8007ec8:	b29b      	uxth	r3, r3
 8007eca:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 1U;
 8007ecc:	2501      	movs	r5, #1
 8007ece:	e02d      	b.n	8007f2c <HAL_SPI_TransmitReceive+0x1b2>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8007ed0:	6822      	ldr	r2, [r4, #0]
 8007ed2:	6893      	ldr	r3, [r2, #8]
 8007ed4:	0799      	lsls	r1, r3, #30
 8007ed6:	d50e      	bpl.n	8007ef6 <HAL_SPI_TransmitReceive+0x17c>
 8007ed8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007eda:	b29b      	uxth	r3, r3
 8007edc:	b15b      	cbz	r3, 8007ef6 <HAL_SPI_TransmitReceive+0x17c>
 8007ede:	b155      	cbz	r5, 8007ef6 <HAL_SPI_TransmitReceive+0x17c>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 8007ee0:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8007ee2:	781b      	ldrb	r3, [r3, #0]
 8007ee4:	7313      	strb	r3, [r2, #12]
        hspi->pTxBuffPtr++;
 8007ee6:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8007ee8:	3301      	adds	r3, #1
 8007eea:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8007eec:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007eee:	3b01      	subs	r3, #1
 8007ef0:	b29b      	uxth	r3, r3
 8007ef2:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 8007ef4:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8007ef6:	6822      	ldr	r2, [r4, #0]
 8007ef8:	6891      	ldr	r1, [r2, #8]
 8007efa:	f011 0101 	ands.w	r1, r1, #1
 8007efe:	d00d      	beq.n	8007f1c <HAL_SPI_TransmitReceive+0x1a2>
 8007f00:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007f02:	b29b      	uxth	r3, r3
 8007f04:	b153      	cbz	r3, 8007f1c <HAL_SPI_TransmitReceive+0x1a2>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 8007f06:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8007f08:	68d2      	ldr	r2, [r2, #12]
 8007f0a:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr++;
 8007f0c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8007f0e:	3301      	adds	r3, #1
 8007f10:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8007f12:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007f14:	3b01      	subs	r3, #1
 8007f16:	b29b      	uxth	r3, r3
 8007f18:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 8007f1a:	460d      	mov	r5, r1
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 8007f1c:	f7fd ff06 	bl	8005d2c <HAL_GetTick>
 8007f20:	eba0 0008 	sub.w	r0, r0, r8
 8007f24:	42b8      	cmp	r0, r7
 8007f26:	d30a      	bcc.n	8007f3e <HAL_SPI_TransmitReceive+0x1c4>
 8007f28:	1c7b      	adds	r3, r7, #1
 8007f2a:	d1b9      	bne.n	8007ea0 <HAL_SPI_TransmitReceive+0x126>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8007f2c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007f2e:	b29b      	uxth	r3, r3
 8007f30:	2b00      	cmp	r3, #0
 8007f32:	d1cd      	bne.n	8007ed0 <HAL_SPI_TransmitReceive+0x156>
 8007f34:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007f36:	b29b      	uxth	r3, r3
 8007f38:	2b00      	cmp	r3, #0
 8007f3a:	d1c9      	bne.n	8007ed0 <HAL_SPI_TransmitReceive+0x156>
 8007f3c:	e779      	b.n	8007e32 <HAL_SPI_TransmitReceive+0xb8>
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 8007f3e:	2f00      	cmp	r7, #0
 8007f40:	d1f4      	bne.n	8007f2c <HAL_SPI_TransmitReceive+0x1b2>
 8007f42:	e7ad      	b.n	8007ea0 <HAL_SPI_TransmitReceive+0x126>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8007f44:	68a3      	ldr	r3, [r4, #8]
 8007f46:	2b00      	cmp	r3, #0
 8007f48:	d1ab      	bne.n	8007ea2 <HAL_SPI_TransmitReceive+0x128>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8007f4a:	6823      	ldr	r3, [r4, #0]
 8007f4c:	9001      	str	r0, [sp, #4]
 8007f4e:	68da      	ldr	r2, [r3, #12]
 8007f50:	9201      	str	r2, [sp, #4]
 8007f52:	689b      	ldr	r3, [r3, #8]
 8007f54:	9301      	str	r3, [sp, #4]
 8007f56:	9b01      	ldr	r3, [sp, #4]
 8007f58:	e7a3      	b.n	8007ea2 <HAL_SPI_TransmitReceive+0x128>
    errorcode = HAL_BUSY;
 8007f5a:	2002      	movs	r0, #2
 8007f5c:	e7a1      	b.n	8007ea2 <HAL_SPI_TransmitReceive+0x128>
  __HAL_LOCK(hspi);
 8007f5e:	2002      	movs	r0, #2
 8007f60:	e7a5      	b.n	8007eae <HAL_SPI_TransmitReceive+0x134>

08007f62 <HAL_SPI_Receive>:
{
 8007f62:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8007f66:	461d      	mov	r5, r3
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 8007f68:	6843      	ldr	r3, [r0, #4]
 8007f6a:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
{
 8007f6e:	4604      	mov	r4, r0
 8007f70:	4689      	mov	r9, r1
 8007f72:	4617      	mov	r7, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 8007f74:	d10c      	bne.n	8007f90 <HAL_SPI_Receive+0x2e>
 8007f76:	6883      	ldr	r3, [r0, #8]
 8007f78:	b953      	cbnz	r3, 8007f90 <HAL_SPI_Receive+0x2e>
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 8007f7a:	2304      	movs	r3, #4
 8007f7c:	f880 3051 	strb.w	r3, [r0, #81]	; 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 8007f80:	4613      	mov	r3, r2
 8007f82:	9500      	str	r5, [sp, #0]
 8007f84:	460a      	mov	r2, r1
 8007f86:	f7ff fef8 	bl	8007d7a <HAL_SPI_TransmitReceive>
}
 8007f8a:	b003      	add	sp, #12
 8007f8c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  __HAL_LOCK(hspi);
 8007f90:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 8007f94:	2b01      	cmp	r3, #1
 8007f96:	f000 8084 	beq.w	80080a2 <HAL_SPI_Receive+0x140>
 8007f9a:	2301      	movs	r3, #1
 8007f9c:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 8007fa0:	f7fd fec4 	bl	8005d2c <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 8007fa4:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 8007fa8:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 8007faa:	4680      	mov	r8, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 8007fac:	b2d8      	uxtb	r0, r3
 8007fae:	d176      	bne.n	800809e <HAL_SPI_Receive+0x13c>
  if ((pData == NULL) || (Size == 0U))
 8007fb0:	f1b9 0f00 	cmp.w	r9, #0
 8007fb4:	d05a      	beq.n	800806c <HAL_SPI_Receive+0x10a>
 8007fb6:	2f00      	cmp	r7, #0
 8007fb8:	d058      	beq.n	800806c <HAL_SPI_Receive+0x10a>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007fba:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 8007fbc:	f8c4 9038 	str.w	r9, [r4, #56]	; 0x38
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 8007fc0:	2304      	movs	r3, #4
 8007fc2:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8007fc6:	2600      	movs	r6, #0
    SPI_1LINE_RX(hspi);
 8007fc8:	6823      	ldr	r3, [r4, #0]
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8007fca:	6566      	str	r6, [r4, #84]	; 0x54
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007fcc:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
  hspi->RxXferCount = Size;
 8007fd0:	87e7      	strh	r7, [r4, #62]	; 0x3e
  hspi->TxXferCount = 0U;
 8007fd2:	86e6      	strh	r6, [r4, #54]	; 0x36
    SPI_1LINE_RX(hspi);
 8007fd4:	bf08      	it	eq
 8007fd6:	681a      	ldreq	r2, [r3, #0]
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 8007fd8:	6326      	str	r6, [r4, #48]	; 0x30
    SPI_1LINE_RX(hspi);
 8007fda:	bf08      	it	eq
 8007fdc:	f422 4280 	biceq.w	r2, r2, #16384	; 0x4000
  hspi->TxISR       = NULL;
 8007fe0:	e9c4 6610 	strd	r6, r6, [r4, #64]	; 0x40
  hspi->TxXferSize  = 0U;
 8007fe4:	86a6      	strh	r6, [r4, #52]	; 0x34
  hspi->RxXferSize  = Size;
 8007fe6:	87a7      	strh	r7, [r4, #60]	; 0x3c
    SPI_1LINE_RX(hspi);
 8007fe8:	bf08      	it	eq
 8007fea:	601a      	streq	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8007fec:	681a      	ldr	r2, [r3, #0]
 8007fee:	0656      	lsls	r6, r2, #25
    __HAL_SPI_ENABLE(hspi);
 8007ff0:	bf5e      	ittt	pl
 8007ff2:	681a      	ldrpl	r2, [r3, #0]
 8007ff4:	f042 0240 	orrpl.w	r2, r2, #64	; 0x40
 8007ff8:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 8007ffa:	68e3      	ldr	r3, [r4, #12]
 8007ffc:	b1f3      	cbz	r3, 800803c <HAL_SPI_Receive+0xda>
    while (hspi->RxXferCount > 0U)
 8007ffe:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8008000:	b29b      	uxth	r3, r3
 8008002:	b1fb      	cbz	r3, 8008044 <HAL_SPI_Receive+0xe2>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 8008004:	6823      	ldr	r3, [r4, #0]
 8008006:	689a      	ldr	r2, [r3, #8]
 8008008:	07d2      	lsls	r2, r2, #31
 800800a:	d539      	bpl.n	8008080 <HAL_SPI_Receive+0x11e>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800800c:	68da      	ldr	r2, [r3, #12]
 800800e:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8008010:	f823 2b02 	strh.w	r2, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8008014:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8008016:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8008018:	3b01      	subs	r3, #1
 800801a:	b29b      	uxth	r3, r3
 800801c:	87e3      	strh	r3, [r4, #62]	; 0x3e
 800801e:	e7ee      	b.n	8007ffe <HAL_SPI_Receive+0x9c>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 8008020:	6823      	ldr	r3, [r4, #0]
 8008022:	689a      	ldr	r2, [r3, #8]
 8008024:	07d0      	lsls	r0, r2, #31
 8008026:	d518      	bpl.n	800805a <HAL_SPI_Receive+0xf8>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 8008028:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800802a:	7b1b      	ldrb	r3, [r3, #12]
 800802c:	7013      	strb	r3, [r2, #0]
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800802e:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8008030:	3301      	adds	r3, #1
 8008032:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8008034:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8008036:	3b01      	subs	r3, #1
 8008038:	b29b      	uxth	r3, r3
 800803a:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800803c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800803e:	b29b      	uxth	r3, r3
 8008040:	2b00      	cmp	r3, #0
 8008042:	d1ed      	bne.n	8008020 <HAL_SPI_Receive+0xbe>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8008044:	4642      	mov	r2, r8
 8008046:	4629      	mov	r1, r5
 8008048:	4620      	mov	r0, r4
 800804a:	f7ff fd59 	bl	8007b00 <SPI_EndRxTransaction>
 800804e:	bb18      	cbnz	r0, 8008098 <HAL_SPI_Receive+0x136>
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8008050:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 8008052:	3800      	subs	r0, #0
 8008054:	bf18      	it	ne
 8008056:	2001      	movne	r0, #1
error :
 8008058:	e008      	b.n	800806c <HAL_SPI_Receive+0x10a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800805a:	f7fd fe67 	bl	8005d2c <HAL_GetTick>
 800805e:	eba0 0008 	sub.w	r0, r0, r8
 8008062:	42a8      	cmp	r0, r5
 8008064:	d309      	bcc.n	800807a <HAL_SPI_Receive+0x118>
 8008066:	1c69      	adds	r1, r5, #1
 8008068:	d0e8      	beq.n	800803c <HAL_SPI_Receive+0xda>
          errorcode = HAL_TIMEOUT;
 800806a:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 800806c:	2301      	movs	r3, #1
 800806e:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 8008072:	2300      	movs	r3, #0
 8008074:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  return errorcode;
 8008078:	e787      	b.n	8007f8a <HAL_SPI_Receive+0x28>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800807a:	2d00      	cmp	r5, #0
 800807c:	d1de      	bne.n	800803c <HAL_SPI_Receive+0xda>
 800807e:	e7f4      	b.n	800806a <HAL_SPI_Receive+0x108>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8008080:	f7fd fe54 	bl	8005d2c <HAL_GetTick>
 8008084:	eba0 0008 	sub.w	r0, r0, r8
 8008088:	42a8      	cmp	r0, r5
 800808a:	d302      	bcc.n	8008092 <HAL_SPI_Receive+0x130>
 800808c:	1c6b      	adds	r3, r5, #1
 800808e:	d0b6      	beq.n	8007ffe <HAL_SPI_Receive+0x9c>
 8008090:	e7eb      	b.n	800806a <HAL_SPI_Receive+0x108>
 8008092:	2d00      	cmp	r5, #0
 8008094:	d1b3      	bne.n	8007ffe <HAL_SPI_Receive+0x9c>
 8008096:	e7e8      	b.n	800806a <HAL_SPI_Receive+0x108>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8008098:	2320      	movs	r3, #32
 800809a:	6563      	str	r3, [r4, #84]	; 0x54
 800809c:	e7d8      	b.n	8008050 <HAL_SPI_Receive+0xee>
    errorcode = HAL_BUSY;
 800809e:	2002      	movs	r0, #2
 80080a0:	e7e4      	b.n	800806c <HAL_SPI_Receive+0x10a>
  __HAL_LOCK(hspi);
 80080a2:	2002      	movs	r0, #2
 80080a4:	e771      	b.n	8007f8a <HAL_SPI_Receive+0x28>

080080a6 <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 80080a6:	6803      	ldr	r3, [r0, #0]
 80080a8:	68da      	ldr	r2, [r3, #12]
 80080aa:	f042 0201 	orr.w	r2, r2, #1
 80080ae:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 80080b0:	689a      	ldr	r2, [r3, #8]
 80080b2:	f002 0207 	and.w	r2, r2, #7
  if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 80080b6:	2a06      	cmp	r2, #6
  {
    __HAL_TIM_ENABLE(htim);
 80080b8:	bf1e      	ittt	ne
 80080ba:	681a      	ldrne	r2, [r3, #0]
 80080bc:	f042 0201 	orrne.w	r2, r2, #1
 80080c0:	601a      	strne	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
}
 80080c2:	2000      	movs	r0, #0
 80080c4:	4770      	bx	lr

080080c6 <HAL_TIM_OC_DelayElapsedCallback>:
 80080c6:	4770      	bx	lr

080080c8 <HAL_TIM_IC_CaptureCallback>:
 80080c8:	4770      	bx	lr

080080ca <HAL_TIM_PWM_PulseFinishedCallback>:
 80080ca:	4770      	bx	lr

080080cc <HAL_TIM_TriggerCallback>:
 80080cc:	4770      	bx	lr

080080ce <HAL_TIM_IRQHandler>:
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
  /* Capture compare 1 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 80080ce:	6803      	ldr	r3, [r0, #0]
 80080d0:	691a      	ldr	r2, [r3, #16]
 80080d2:	0791      	lsls	r1, r2, #30
{
 80080d4:	b510      	push	{r4, lr}
 80080d6:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 80080d8:	d50e      	bpl.n	80080f8 <HAL_TIM_IRQHandler+0x2a>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 80080da:	68da      	ldr	r2, [r3, #12]
 80080dc:	0792      	lsls	r2, r2, #30
 80080de:	d50b      	bpl.n	80080f8 <HAL_TIM_IRQHandler+0x2a>
    {
      {
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 80080e0:	f06f 0202 	mvn.w	r2, #2
 80080e4:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 80080e6:	2201      	movs	r2, #1
 80080e8:	7702      	strb	r2, [r0, #28]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 80080ea:	699b      	ldr	r3, [r3, #24]
 80080ec:	079b      	lsls	r3, r3, #30
 80080ee:	d077      	beq.n	80081e0 <HAL_TIM_IRQHandler+0x112>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 80080f0:	f7ff ffea 	bl	80080c8 <HAL_TIM_IC_CaptureCallback>
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
          HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80080f4:	2300      	movs	r3, #0
 80080f6:	7723      	strb	r3, [r4, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 80080f8:	6823      	ldr	r3, [r4, #0]
 80080fa:	691a      	ldr	r2, [r3, #16]
 80080fc:	0750      	lsls	r0, r2, #29
 80080fe:	d510      	bpl.n	8008122 <HAL_TIM_IRQHandler+0x54>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 8008100:	68da      	ldr	r2, [r3, #12]
 8008102:	0751      	lsls	r1, r2, #29
 8008104:	d50d      	bpl.n	8008122 <HAL_TIM_IRQHandler+0x54>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 8008106:	f06f 0204 	mvn.w	r2, #4
 800810a:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800810c:	2202      	movs	r2, #2
 800810e:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8008110:	699b      	ldr	r3, [r3, #24]
 8008112:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8008116:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8008118:	d068      	beq.n	80081ec <HAL_TIM_IRQHandler+0x11e>
        HAL_TIM_IC_CaptureCallback(htim);
 800811a:	f7ff ffd5 	bl	80080c8 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800811e:	2300      	movs	r3, #0
 8008120:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 3 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 8008122:	6823      	ldr	r3, [r4, #0]
 8008124:	691a      	ldr	r2, [r3, #16]
 8008126:	0712      	lsls	r2, r2, #28
 8008128:	d50f      	bpl.n	800814a <HAL_TIM_IRQHandler+0x7c>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 800812a:	68da      	ldr	r2, [r3, #12]
 800812c:	0710      	lsls	r0, r2, #28
 800812e:	d50c      	bpl.n	800814a <HAL_TIM_IRQHandler+0x7c>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 8008130:	f06f 0208 	mvn.w	r2, #8
 8008134:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 8008136:	2204      	movs	r2, #4
 8008138:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800813a:	69db      	ldr	r3, [r3, #28]
 800813c:	0799      	lsls	r1, r3, #30
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 800813e:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8008140:	d05a      	beq.n	80081f8 <HAL_TIM_IRQHandler+0x12a>
        HAL_TIM_IC_CaptureCallback(htim);
 8008142:	f7ff ffc1 	bl	80080c8 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8008146:	2300      	movs	r3, #0
 8008148:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 4 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800814a:	6823      	ldr	r3, [r4, #0]
 800814c:	691a      	ldr	r2, [r3, #16]
 800814e:	06d2      	lsls	r2, r2, #27
 8008150:	d510      	bpl.n	8008174 <HAL_TIM_IRQHandler+0xa6>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 8008152:	68da      	ldr	r2, [r3, #12]
 8008154:	06d0      	lsls	r0, r2, #27
 8008156:	d50d      	bpl.n	8008174 <HAL_TIM_IRQHandler+0xa6>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 8008158:	f06f 0210 	mvn.w	r2, #16
 800815c:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800815e:	2208      	movs	r2, #8
 8008160:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8008162:	69db      	ldr	r3, [r3, #28]
 8008164:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8008168:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800816a:	d04b      	beq.n	8008204 <HAL_TIM_IRQHandler+0x136>
        HAL_TIM_IC_CaptureCallback(htim);
 800816c:	f7ff ffac 	bl	80080c8 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8008170:	2300      	movs	r3, #0
 8008172:	7723      	strb	r3, [r4, #28]
    }
  }
  /* TIM Update event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 8008174:	6823      	ldr	r3, [r4, #0]
 8008176:	691a      	ldr	r2, [r3, #16]
 8008178:	07d1      	lsls	r1, r2, #31
 800817a:	d508      	bpl.n	800818e <HAL_TIM_IRQHandler+0xc0>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 800817c:	68da      	ldr	r2, [r3, #12]
 800817e:	07d2      	lsls	r2, r2, #31
 8008180:	d505      	bpl.n	800818e <HAL_TIM_IRQHandler+0xc0>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 8008182:	f06f 0201 	mvn.w	r2, #1
 8008186:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 8008188:	4620      	mov	r0, r4
 800818a:	f7f9 fca9 	bl	8001ae0 <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800818e:	6823      	ldr	r3, [r4, #0]
 8008190:	691a      	ldr	r2, [r3, #16]
 8008192:	0610      	lsls	r0, r2, #24
 8008194:	d508      	bpl.n	80081a8 <HAL_TIM_IRQHandler+0xda>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 8008196:	68da      	ldr	r2, [r3, #12]
 8008198:	0611      	lsls	r1, r2, #24
 800819a:	d505      	bpl.n	80081a8 <HAL_TIM_IRQHandler+0xda>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 800819c:	f06f 0280 	mvn.w	r2, #128	; 0x80
 80081a0:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
 80081a2:	4620      	mov	r0, r4
 80081a4:	f000 f8f5 	bl	8008392 <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 80081a8:	6823      	ldr	r3, [r4, #0]
 80081aa:	691a      	ldr	r2, [r3, #16]
 80081ac:	0652      	lsls	r2, r2, #25
 80081ae:	d508      	bpl.n	80081c2 <HAL_TIM_IRQHandler+0xf4>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 80081b0:	68da      	ldr	r2, [r3, #12]
 80081b2:	0650      	lsls	r0, r2, #25
 80081b4:	d505      	bpl.n	80081c2 <HAL_TIM_IRQHandler+0xf4>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 80081b6:	f06f 0240 	mvn.w	r2, #64	; 0x40
 80081ba:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 80081bc:	4620      	mov	r0, r4
 80081be:	f7ff ff85 	bl	80080cc <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 80081c2:	6823      	ldr	r3, [r4, #0]
 80081c4:	691a      	ldr	r2, [r3, #16]
 80081c6:	0691      	lsls	r1, r2, #26
 80081c8:	d522      	bpl.n	8008210 <HAL_TIM_IRQHandler+0x142>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 80081ca:	68da      	ldr	r2, [r3, #12]
 80081cc:	0692      	lsls	r2, r2, #26
 80081ce:	d51f      	bpl.n	8008210 <HAL_TIM_IRQHandler+0x142>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 80081d0:	f06f 0220 	mvn.w	r2, #32
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
 80081d4:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 80081d6:	611a      	str	r2, [r3, #16]
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 80081d8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 80081dc:	f000 b8d8 	b.w	8008390 <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 80081e0:	f7ff ff71 	bl	80080c6 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 80081e4:	4620      	mov	r0, r4
 80081e6:	f7ff ff70 	bl	80080ca <HAL_TIM_PWM_PulseFinishedCallback>
 80081ea:	e783      	b.n	80080f4 <HAL_TIM_IRQHandler+0x26>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80081ec:	f7ff ff6b 	bl	80080c6 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80081f0:	4620      	mov	r0, r4
 80081f2:	f7ff ff6a 	bl	80080ca <HAL_TIM_PWM_PulseFinishedCallback>
 80081f6:	e792      	b.n	800811e <HAL_TIM_IRQHandler+0x50>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80081f8:	f7ff ff65 	bl	80080c6 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80081fc:	4620      	mov	r0, r4
 80081fe:	f7ff ff64 	bl	80080ca <HAL_TIM_PWM_PulseFinishedCallback>
 8008202:	e7a0      	b.n	8008146 <HAL_TIM_IRQHandler+0x78>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8008204:	f7ff ff5f 	bl	80080c6 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8008208:	4620      	mov	r0, r4
 800820a:	f7ff ff5e 	bl	80080ca <HAL_TIM_PWM_PulseFinishedCallback>
 800820e:	e7af      	b.n	8008170 <HAL_TIM_IRQHandler+0xa2>
}
 8008210:	bd10      	pop	{r4, pc}
	...

08008214 <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8008214:	4a30      	ldr	r2, [pc, #192]	; (80082d8 <TIM_Base_SetConfig+0xc4>)
  tmpcr1 = TIMx->CR1;
 8008216:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8008218:	4290      	cmp	r0, r2
 800821a:	d012      	beq.n	8008242 <TIM_Base_SetConfig+0x2e>
 800821c:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8008220:	d00f      	beq.n	8008242 <TIM_Base_SetConfig+0x2e>
 8008222:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 8008226:	4290      	cmp	r0, r2
 8008228:	d00b      	beq.n	8008242 <TIM_Base_SetConfig+0x2e>
 800822a:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800822e:	4290      	cmp	r0, r2
 8008230:	d007      	beq.n	8008242 <TIM_Base_SetConfig+0x2e>
 8008232:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008236:	4290      	cmp	r0, r2
 8008238:	d003      	beq.n	8008242 <TIM_Base_SetConfig+0x2e>
 800823a:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800823e:	4290      	cmp	r0, r2
 8008240:	d119      	bne.n	8008276 <TIM_Base_SetConfig+0x62>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 8008242:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8008244:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 8008248:	4313      	orrs	r3, r2
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800824a:	4a23      	ldr	r2, [pc, #140]	; (80082d8 <TIM_Base_SetConfig+0xc4>)
 800824c:	4290      	cmp	r0, r2
 800824e:	d029      	beq.n	80082a4 <TIM_Base_SetConfig+0x90>
 8008250:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8008254:	d026      	beq.n	80082a4 <TIM_Base_SetConfig+0x90>
 8008256:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800825a:	4290      	cmp	r0, r2
 800825c:	d022      	beq.n	80082a4 <TIM_Base_SetConfig+0x90>
 800825e:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008262:	4290      	cmp	r0, r2
 8008264:	d01e      	beq.n	80082a4 <TIM_Base_SetConfig+0x90>
 8008266:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800826a:	4290      	cmp	r0, r2
 800826c:	d01a      	beq.n	80082a4 <TIM_Base_SetConfig+0x90>
 800826e:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 8008272:	4290      	cmp	r0, r2
 8008274:	d016      	beq.n	80082a4 <TIM_Base_SetConfig+0x90>
 8008276:	4a19      	ldr	r2, [pc, #100]	; (80082dc <TIM_Base_SetConfig+0xc8>)
 8008278:	4290      	cmp	r0, r2
 800827a:	d013      	beq.n	80082a4 <TIM_Base_SetConfig+0x90>
 800827c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008280:	4290      	cmp	r0, r2
 8008282:	d00f      	beq.n	80082a4 <TIM_Base_SetConfig+0x90>
 8008284:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008288:	4290      	cmp	r0, r2
 800828a:	d00b      	beq.n	80082a4 <TIM_Base_SetConfig+0x90>
 800828c:	f5a2 3298 	sub.w	r2, r2, #77824	; 0x13000
 8008290:	4290      	cmp	r0, r2
 8008292:	d007      	beq.n	80082a4 <TIM_Base_SetConfig+0x90>
 8008294:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008298:	4290      	cmp	r0, r2
 800829a:	d003      	beq.n	80082a4 <TIM_Base_SetConfig+0x90>
 800829c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80082a0:	4290      	cmp	r0, r2
 80082a2:	d103      	bne.n	80082ac <TIM_Base_SetConfig+0x98>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 80082a4:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 80082a6:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 80082aa:	4313      	orrs	r3, r2
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 80082ac:	694a      	ldr	r2, [r1, #20]
 80082ae:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80082b2:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 80082b4:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 80082b6:	688b      	ldr	r3, [r1, #8]
 80082b8:	62c3      	str	r3, [r0, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 80082ba:	680b      	ldr	r3, [r1, #0]
 80082bc:	6283      	str	r3, [r0, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 80082be:	4b06      	ldr	r3, [pc, #24]	; (80082d8 <TIM_Base_SetConfig+0xc4>)
 80082c0:	4298      	cmp	r0, r3
 80082c2:	d003      	beq.n	80082cc <TIM_Base_SetConfig+0xb8>
 80082c4:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80082c8:	4298      	cmp	r0, r3
 80082ca:	d101      	bne.n	80082d0 <TIM_Base_SetConfig+0xbc>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 80082cc:	690b      	ldr	r3, [r1, #16]
 80082ce:	6303      	str	r3, [r0, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 80082d0:	2301      	movs	r3, #1
 80082d2:	6143      	str	r3, [r0, #20]
}
 80082d4:	4770      	bx	lr
 80082d6:	bf00      	nop
 80082d8:	40010000 	.word	0x40010000
 80082dc:	40014000 	.word	0x40014000

080082e0 <HAL_TIM_Base_Init>:
{
 80082e0:	b510      	push	{r4, lr}
  if (htim == NULL)
 80082e2:	4604      	mov	r4, r0
 80082e4:	b1a0      	cbz	r0, 8008310 <HAL_TIM_Base_Init+0x30>
  if (htim->State == HAL_TIM_STATE_RESET)
 80082e6:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 80082ea:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80082ee:	b91b      	cbnz	r3, 80082f8 <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 80082f0:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 80082f4:	f7f9 fe40 	bl	8001f78 <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 80082f8:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 80082fa:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 80082fc:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8008300:	1d21      	adds	r1, r4, #4
 8008302:	f7ff ff87 	bl	8008214 <TIM_Base_SetConfig>
  htim->State = HAL_TIM_STATE_READY;
 8008306:	2301      	movs	r3, #1
 8008308:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 800830c:	2000      	movs	r0, #0
}
 800830e:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8008310:	2001      	movs	r0, #1
 8008312:	e7fc      	b.n	800830e <HAL_TIM_Base_Init+0x2e>

08008314 <HAL_TIMEx_MasterConfigSynchronization>:
  *         mode.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIMEx_MasterConfigSynchronization(TIM_HandleTypeDef *htim,
                                                        TIM_MasterConfigTypeDef *sMasterConfig)
{
 8008314:	b530      	push	{r4, r5, lr}
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 8008316:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800831a:	2b01      	cmp	r3, #1
 800831c:	f04f 0302 	mov.w	r3, #2
 8008320:	d032      	beq.n	8008388 <HAL_TIMEx_MasterConfigSynchronization+0x74>

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;
 8008322:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 8008326:	6803      	ldr	r3, [r0, #0]
  tmpsmcr = htim->Instance->SMCR;

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 8008328:	680d      	ldr	r5, [r1, #0]
  tmpcr2 = htim->Instance->CR2;
 800832a:	685c      	ldr	r4, [r3, #4]
  tmpsmcr = htim->Instance->SMCR;
 800832c:	689a      	ldr	r2, [r3, #8]
  tmpcr2 &= ~TIM_CR2_MMS;
 800832e:	f024 0470 	bic.w	r4, r4, #112	; 0x70
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 8008332:	432c      	orrs	r4, r5

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 8008334:	605c      	str	r4, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8008336:	4c15      	ldr	r4, [pc, #84]	; (800838c <HAL_TIMEx_MasterConfigSynchronization+0x78>)
 8008338:	42a3      	cmp	r3, r4
 800833a:	d01a      	beq.n	8008372 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 800833c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8008340:	d017      	beq.n	8008372 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8008342:	f5a4 447c 	sub.w	r4, r4, #64512	; 0xfc00
 8008346:	42a3      	cmp	r3, r4
 8008348:	d013      	beq.n	8008372 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 800834a:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800834e:	42a3      	cmp	r3, r4
 8008350:	d00f      	beq.n	8008372 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8008352:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8008356:	42a3      	cmp	r3, r4
 8008358:	d00b      	beq.n	8008372 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 800835a:	f504 4478 	add.w	r4, r4, #63488	; 0xf800
 800835e:	42a3      	cmp	r3, r4
 8008360:	d007      	beq.n	8008372 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8008362:	f504 5470 	add.w	r4, r4, #15360	; 0x3c00
 8008366:	42a3      	cmp	r3, r4
 8008368:	d003      	beq.n	8008372 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 800836a:	f5a4 3494 	sub.w	r4, r4, #75776	; 0x12800
 800836e:	42a3      	cmp	r3, r4
 8008370:	d104      	bne.n	800837c <HAL_TIMEx_MasterConfigSynchronization+0x68>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 8008372:	6849      	ldr	r1, [r1, #4]
    tmpsmcr &= ~TIM_SMCR_MSM;
 8008374:	f022 0280 	bic.w	r2, r2, #128	; 0x80
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 8008378:	430a      	orrs	r2, r1

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 800837a:	609a      	str	r2, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;
 800837c:	2301      	movs	r3, #1
 800837e:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  __HAL_UNLOCK(htim);
 8008382:	2300      	movs	r3, #0
 8008384:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  __HAL_LOCK(htim);
 8008388:	4618      	mov	r0, r3

  return HAL_OK;
}
 800838a:	bd30      	pop	{r4, r5, pc}
 800838c:	40010000 	.word	0x40010000

08008390 <HAL_TIMEx_CommutCallback>:
 8008390:	4770      	bx	lr

08008392 <HAL_TIMEx_BreakCallback>:
 8008392:	4770      	bx	lr

08008394 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure   
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 8008394:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
                                               Init->InternalBankNumber |\
                                               Init->CASLatency         |\
                                               Init->WriteProtection    |\
                                               Init->SDClockPeriod      |\
                                               Init->ReadBurst          |\
                                               Init->ReadPipeDelay
 8008398:	6a4a      	ldr	r2, [r1, #36]	; 0x24
                                               Init->ReadBurst          |\
 800839a:	e9d1 4307 	ldrd	r4, r3, [r1, #28]
                                               Init->RowBitsNumber      |\
 800839e:	e9d1 5801 	ldrd	r5, r8, [r1, #4]
                                               Init->InternalBankNumber |\
 80083a2:	e9d1 ec03 	ldrd	lr, ip, [r1, #12]
                                               Init->WriteProtection    |\
 80083a6:	e9d1 7605 	ldrd	r7, r6, [r1, #20]
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 80083aa:	6809      	ldr	r1, [r1, #0]
 80083ac:	2901      	cmp	r1, #1
 80083ae:	ea43 0304 	orr.w	r3, r3, r4
 80083b2:	4912      	ldr	r1, [pc, #72]	; (80083fc <FMC_SDRAM_Init+0x68>)
    tmpr1 = Device->SDCR[FMC_SDRAM_BANK1];
 80083b4:	6804      	ldr	r4, [r0, #0]
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 80083b6:	d00f      	beq.n	80083d8 <FMC_SDRAM_Init+0x44>
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 80083b8:	431a      	orrs	r2, r3
 80083ba:	432a      	orrs	r2, r5
 80083bc:	ea42 0308 	orr.w	r3, r2, r8
 80083c0:	ea43 030e 	orr.w	r3, r3, lr
 80083c4:	ea43 030c 	orr.w	r3, r3, ip
 80083c8:	433b      	orrs	r3, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 80083ca:	4021      	ands	r1, r4
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 80083cc:	4333      	orrs	r3, r6
 80083ce:	430b      	orrs	r3, r1
                                               );
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 80083d0:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
  }  
  
  return HAL_OK;
}
 80083d2:	2000      	movs	r0, #0
 80083d4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 80083d8:	4313      	orrs	r3, r2
    tmpr2 = Device->SDCR[FMC_SDRAM_BANK2];
 80083da:	6842      	ldr	r2, [r0, #4]
    tmpr2 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 80083dc:	4011      	ands	r1, r2
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 80083de:	ea45 0208 	orr.w	r2, r5, r8
 80083e2:	ea42 020e 	orr.w	r2, r2, lr
 80083e6:	ea42 020c 	orr.w	r2, r2, ip
 80083ea:	433a      	orrs	r2, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));
 80083ec:	f424 44f8 	bic.w	r4, r4, #31744	; 0x7c00
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 80083f0:	4332      	orrs	r2, r6
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 80083f2:	4323      	orrs	r3, r4
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 80083f4:	430a      	orrs	r2, r1
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 80083f6:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
 80083f8:	6042      	str	r2, [r0, #4]
 80083fa:	e7ea      	b.n	80083d2 <FMC_SDRAM_Init+0x3e>
 80083fc:	ffff8000 	.word	0xffff8000

08008400 <FMC_SDRAM_Timing_Init>:
                          FMC_SDTR1_TRCD));
    
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
                       (((Timing->RowCycleDelay)-1U) << 12U)       |\
 8008400:	68cb      	ldr	r3, [r1, #12]
{
 8008402:	b5f0      	push	{r4, r5, r6, r7, lr}
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 8008404:	680c      	ldr	r4, [r1, #0]
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
 8008406:	688e      	ldr	r6, [r1, #8]
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
 8008408:	690d      	ldr	r5, [r1, #16]
                       (((Timing->RowCycleDelay)-1U) << 12U)       |\
 800840a:	1e5f      	subs	r7, r3, #1
                       (((Timing->RPDelay)-1U) << 20U)             |\
 800840c:	694b      	ldr	r3, [r1, #20]
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 800840e:	f104 3cff 	add.w	ip, r4, #4294967295
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
 8008412:	684c      	ldr	r4, [r1, #4]
                       (((Timing->RCDDelay)-1U) << 24U));
 8008414:	6989      	ldr	r1, [r1, #24]
                       (((Timing->RPDelay)-1U) << 20U)             |\
 8008416:	3b01      	subs	r3, #1
 8008418:	051b      	lsls	r3, r3, #20
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
 800841a:	3c01      	subs	r4, #1
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
 800841c:	3e01      	subs	r6, #1
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
 800841e:	3d01      	subs	r5, #1
                       (((Timing->RCDDelay)-1U) << 24U));
 8008420:	3901      	subs	r1, #1
  if (Bank != FMC_SDRAM_BANK2) 
 8008422:	2a01      	cmp	r2, #1
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
 8008424:	ea4f 1404 	mov.w	r4, r4, lsl #4
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
 8008428:	ea4f 2606 	mov.w	r6, r6, lsl #8
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
 800842c:	ea4f 4505 	mov.w	r5, r5, lsl #16
                       (((Timing->RCDDelay)-1U) << 24U));
 8008430:	ea4f 6101 	mov.w	r1, r1, lsl #24
 8008434:	ea43 3307 	orr.w	r3, r3, r7, lsl #12
  if (Bank != FMC_SDRAM_BANK2) 
 8008438:	d00c      	beq.n	8008454 <FMC_SDRAM_Timing_Init+0x54>
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 800843a:	ea43 030c 	orr.w	r3, r3, ip
 800843e:	4323      	orrs	r3, r4
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 8008440:	6882      	ldr	r2, [r0, #8]
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 8008442:	4333      	orrs	r3, r6
 8008444:	432b      	orrs	r3, r5
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 8008446:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 800844a:	430b      	orrs	r3, r1
 800844c:	4313      	orrs	r3, r2
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 800844e:	6083      	str	r3, [r0, #8]

    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
  }
  return HAL_OK;
}
 8008450:	2000      	movs	r0, #0
 8008452:	bdf0      	pop	{r4, r5, r6, r7, pc}
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 8008454:	6887      	ldr	r7, [r0, #8]
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TRC | FMC_SDTR1_TRP));
 8008456:	f427 0770 	bic.w	r7, r7, #15728640	; 0xf00000
 800845a:	f427 4770 	bic.w	r7, r7, #61440	; 0xf000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 800845e:	4334      	orrs	r4, r6
    tmpr1 |= (uint32_t)((((Timing->RowCycleDelay)-1U) << 12U)       |\
 8008460:	433b      	orrs	r3, r7
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8008462:	ea44 020c 	orr.w	r2, r4, ip
    tmpr2 = Device->SDTR[FMC_SDRAM_BANK2];
 8008466:	68c7      	ldr	r7, [r0, #12]
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 8008468:	6083      	str	r3, [r0, #8]
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 800846a:	432a      	orrs	r2, r5
    tmpr2 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 800846c:	f007 4770 	and.w	r7, r7, #4026531840	; 0xf0000000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8008470:	430a      	orrs	r2, r1
 8008472:	433a      	orrs	r2, r7
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
 8008474:	60c2      	str	r2, [r0, #12]
 8008476:	e7eb      	b.n	8008450 <FMC_SDRAM_Timing_Init+0x50>

08008478 <FMC_SDRAM_SendCommand>:
  * @param  Timing Pointer to SDRAM Timing structure
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */  
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 8008478:	b573      	push	{r0, r1, r4, r5, r6, lr}
  __IO uint32_t tmpr = 0U;
 800847a:	2300      	movs	r3, #0
 800847c:	9301      	str	r3, [sp, #4]
{
 800847e:	4615      	mov	r5, r2
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));  

  /* Set command register */
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8008480:	e9d1 3200 	ldrd	r3, r2, [r1]
 8008484:	4313      	orrs	r3, r2
                    (Command->CommandTarget)                |\
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
                    ((Command->ModeRegisterDefinition) << 9U)
 8008486:	68ca      	ldr	r2, [r1, #12]
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8008488:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
 800848c:	688a      	ldr	r2, [r1, #8]
 800848e:	3a01      	subs	r2, #1
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8008490:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 8008494:	9301      	str	r3, [sp, #4]
                    );
    
  Device->SDCMR = tmpr;
 8008496:	9b01      	ldr	r3, [sp, #4]
 8008498:	6103      	str	r3, [r0, #16]
{
 800849a:	4604      	mov	r4, r0

  /* Get tick */ 
  tickstart = HAL_GetTick();
 800849c:	f7fd fc46 	bl	8005d2c <HAL_GetTick>
 80084a0:	4606      	mov	r6, r0

  /* Wait until command is send */
  while(HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 80084a2:	69a3      	ldr	r3, [r4, #24]
 80084a4:	f013 0320 	ands.w	r3, r3, #32
 80084a8:	d101      	bne.n	80084ae <FMC_SDRAM_SendCommand+0x36>
        return HAL_TIMEOUT;
      }
    }
  }

  return HAL_OK;
 80084aa:	4618      	mov	r0, r3
 80084ac:	e003      	b.n	80084b6 <FMC_SDRAM_SendCommand+0x3e>
    if(Timeout != HAL_MAX_DELAY)
 80084ae:	1c6b      	adds	r3, r5, #1
 80084b0:	d0f7      	beq.n	80084a2 <FMC_SDRAM_SendCommand+0x2a>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 80084b2:	b915      	cbnz	r5, 80084ba <FMC_SDRAM_SendCommand+0x42>
        return HAL_TIMEOUT;
 80084b4:	2003      	movs	r0, #3
}
 80084b6:	b002      	add	sp, #8
 80084b8:	bd70      	pop	{r4, r5, r6, pc}
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 80084ba:	f7fd fc37 	bl	8005d2c <HAL_GetTick>
 80084be:	1b80      	subs	r0, r0, r6
 80084c0:	42a8      	cmp	r0, r5
 80084c2:	d9ee      	bls.n	80084a2 <FMC_SDRAM_SendCommand+0x2a>
 80084c4:	e7f6      	b.n	80084b4 <FMC_SDRAM_SendCommand+0x3c>

080084c6 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));
  
  /* Set the refresh rate in command register */
  Device->SDRTR |= (RefreshRate<<1U);
 80084c6:	6943      	ldr	r3, [r0, #20]
 80084c8:	ea43 0141 	orr.w	r1, r3, r1, lsl #1
 80084cc:	6141      	str	r1, [r0, #20]
  
  return HAL_OK;   
}
 80084ce:	2000      	movs	r0, #0
 80084d0:	4770      	bx	lr
	...

080084d4 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80084d4:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 80084d8:	b113      	cbz	r3, 80084e0 <osKernelInitialize+0xc>
    stat = osErrorISR;
 80084da:	f06f 0005 	mvn.w	r0, #5
 80084de:	4770      	bx	lr
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80084e0:	f3ef 8210 	mrs	r2, PRIMASK
  return(result);
 80084e4:	4b07      	ldr	r3, [pc, #28]	; (8008504 <osKernelInitialize+0x30>)
  if (IS_IRQ()) {
 80084e6:	b912      	cbnz	r2, 80084ee <osKernelInitialize+0x1a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80084e8:	f3ef 8211 	mrs	r2, BASEPRI
 80084ec:	b112      	cbz	r2, 80084f4 <osKernelInitialize+0x20>
 80084ee:	681a      	ldr	r2, [r3, #0]
 80084f0:	2a02      	cmp	r2, #2
 80084f2:	d0f2      	beq.n	80084da <osKernelInitialize+0x6>
  }
  else {
    if (KernelState == osKernelInactive) {
 80084f4:	6818      	ldr	r0, [r3, #0]
 80084f6:	b910      	cbnz	r0, 80084fe <osKernelInitialize+0x2a>
      #if defined(USE_FREERTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 80084f8:	2201      	movs	r2, #1
 80084fa:	601a      	str	r2, [r3, #0]
      stat = osOK;
 80084fc:	4770      	bx	lr
    } else {
      stat = osError;
 80084fe:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 8008502:	4770      	bx	lr
 8008504:	20004a60 	.word	0x20004a60

08008508 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 8008508:	b508      	push	{r3, lr}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800850a:	f3ef 8305 	mrs	r3, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800850e:	b113      	cbz	r3, 8008516 <osKernelStart+0xe>
    stat = osErrorISR;
 8008510:	f06f 0005 	mvn.w	r0, #5
      stat = osError;
    }
  }

  return (stat);
}
 8008514:	bd08      	pop	{r3, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8008516:	f3ef 8210 	mrs	r2, PRIMASK
  return(result);
 800851a:	4b0a      	ldr	r3, [pc, #40]	; (8008544 <osKernelStart+0x3c>)
  if (IS_IRQ()) {
 800851c:	b912      	cbnz	r2, 8008524 <osKernelStart+0x1c>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800851e:	f3ef 8211 	mrs	r2, BASEPRI
 8008522:	b112      	cbz	r2, 800852a <osKernelStart+0x22>
 8008524:	681a      	ldr	r2, [r3, #0]
 8008526:	2a02      	cmp	r2, #2
 8008528:	d0f2      	beq.n	8008510 <osKernelStart+0x8>
    if (KernelState == osKernelReady) {
 800852a:	681a      	ldr	r2, [r3, #0]
 800852c:	2a01      	cmp	r2, #1
 800852e:	d105      	bne.n	800853c <osKernelStart+0x34>
      KernelState = osKernelRunning;
 8008530:	2202      	movs	r2, #2
 8008532:	601a      	str	r2, [r3, #0]
      vTaskStartScheduler();
 8008534:	f001 fbd6 	bl	8009ce4 <vTaskStartScheduler>
      stat = osOK;
 8008538:	2000      	movs	r0, #0
 800853a:	e7eb      	b.n	8008514 <osKernelStart+0xc>
      stat = osError;
 800853c:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 8008540:	e7e8      	b.n	8008514 <osKernelStart+0xc>
 8008542:	bf00      	nop
 8008544:	20004a60 	.word	0x20004a60

08008548 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8008548:	b5f0      	push	{r4, r5, r6, r7, lr}
 800854a:	b087      	sub	sp, #28
 800854c:	4614      	mov	r4, r2
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 800854e:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8008550:	460b      	mov	r3, r1
  hTask = NULL;
 8008552:	9205      	str	r2, [sp, #20]
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008554:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 8008558:	bb22      	cbnz	r2, 80085a4 <osThreadNew+0x5c>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800855a:	f3ef 8210 	mrs	r2, PRIMASK
 800855e:	b912      	cbnz	r2, 8008566 <osThreadNew+0x1e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8008560:	f3ef 8211 	mrs	r2, BASEPRI
 8008564:	b11a      	cbz	r2, 800856e <osThreadNew+0x26>
 8008566:	4a22      	ldr	r2, [pc, #136]	; (80085f0 <osThreadNew+0xa8>)
 8008568:	6812      	ldr	r2, [r2, #0]
 800856a:	2a02      	cmp	r2, #2
 800856c:	d01a      	beq.n	80085a4 <osThreadNew+0x5c>
 800856e:	b1c8      	cbz	r0, 80085a4 <osThreadNew+0x5c>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 8008570:	2c00      	cmp	r4, #0
 8008572:	d02f      	beq.n	80085d4 <osThreadNew+0x8c>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 8008574:	69a5      	ldr	r5, [r4, #24]
 8008576:	2d00      	cmp	r5, #0
 8008578:	bf08      	it	eq
 800857a:	2518      	moveq	r5, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800857c:	1e6a      	subs	r2, r5, #1
 800857e:	2a37      	cmp	r2, #55	; 0x37
 8008580:	46ac      	mov	ip, r5
 8008582:	d82b      	bhi.n	80085dc <osThreadNew+0x94>
 8008584:	6862      	ldr	r2, [r4, #4]
 8008586:	07d2      	lsls	r2, r2, #31
 8008588:	d428      	bmi.n	80085dc <osThreadNew+0x94>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 800858a:	6966      	ldr	r6, [r4, #20]
 800858c:	b16e      	cbz	r6, 80085aa <osThreadNew+0x62>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 800858e:	08b2      	lsrs	r2, r6, #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8008590:	e9d4 7e02 	ldrd	r7, lr, [r4, #8]
      if (attr->name != NULL) {
 8008594:	6821      	ldr	r1, [r4, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8008596:	b157      	cbz	r7, 80085ae <osThreadNew+0x66>
 8008598:	f1be 0fbf 	cmp.w	lr, #191	; 0xbf
 800859c:	d902      	bls.n	80085a4 <osThreadNew+0x5c>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800859e:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 80085a0:	b104      	cbz	r4, 80085a4 <osThreadNew+0x5c>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 80085a2:	b9ee      	cbnz	r6, 80085e0 <osThreadNew+0x98>
        }
      }
    }
  }

  return ((osThreadId_t)hTask);
 80085a4:	9805      	ldr	r0, [sp, #20]
}
 80085a6:	b007      	add	sp, #28
 80085a8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 80085aa:	2280      	movs	r2, #128	; 0x80
 80085ac:	e7f0      	b.n	8008590 <osThreadNew+0x48>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 80085ae:	f1be 0f00 	cmp.w	lr, #0
 80085b2:	d1f7      	bne.n	80085a4 <osThreadNew+0x5c>
      if (mem == 0) {
 80085b4:	6924      	ldr	r4, [r4, #16]
 80085b6:	2c00      	cmp	r4, #0
 80085b8:	d1f4      	bne.n	80085a4 <osThreadNew+0x5c>
 80085ba:	460c      	mov	r4, r1
        if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 80085bc:	a905      	add	r1, sp, #20
 80085be:	e9cd c100 	strd	ip, r1, [sp]
 80085c2:	b292      	uxth	r2, r2
 80085c4:	4621      	mov	r1, r4
 80085c6:	f001 fb5f 	bl	8009c88 <xTaskCreate>
 80085ca:	2801      	cmp	r0, #1
          hTask = NULL;
 80085cc:	bf1c      	itt	ne
 80085ce:	2300      	movne	r3, #0
 80085d0:	9305      	strne	r3, [sp, #20]
 80085d2:	e7e7      	b.n	80085a4 <osThreadNew+0x5c>
    prio  = (UBaseType_t)osPriorityNormal;
 80085d4:	f04f 0c18 	mov.w	ip, #24
    stack = configMINIMAL_STACK_SIZE;
 80085d8:	2280      	movs	r2, #128	; 0x80
 80085da:	e7ef      	b.n	80085bc <osThreadNew+0x74>
        return (NULL);
 80085dc:	2000      	movs	r0, #0
 80085de:	e7e2      	b.n	80085a6 <osThreadNew+0x5e>
      hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 80085e0:	e9cd 4701 	strd	r4, r7, [sp, #4]
 80085e4:	9500      	str	r5, [sp, #0]
 80085e6:	f001 fb17 	bl	8009c18 <xTaskCreateStatic>
 80085ea:	9005      	str	r0, [sp, #20]
 80085ec:	e7da      	b.n	80085a4 <osThreadNew+0x5c>
 80085ee:	bf00      	nop
 80085f0:	20004a60 	.word	0x20004a60

080085f4 <osDelay>:

  /* Return flags before clearing */
  return (rflags);
}

osStatus_t osDelay (uint32_t ticks) {
 80085f4:	b508      	push	{r3, lr}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80085f6:	f3ef 8305 	mrs	r3, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 80085fa:	b113      	cbz	r3, 8008602 <osDelay+0xe>
    stat = osErrorISR;
 80085fc:	f06f 0005 	mvn.w	r0, #5
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
 8008600:	bd08      	pop	{r3, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8008602:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 8008606:	b913      	cbnz	r3, 800860e <osDelay+0x1a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8008608:	f3ef 8311 	mrs	r3, BASEPRI
 800860c:	b11b      	cbz	r3, 8008616 <osDelay+0x22>
 800860e:	4b05      	ldr	r3, [pc, #20]	; (8008624 <osDelay+0x30>)
 8008610:	681b      	ldr	r3, [r3, #0]
 8008612:	2b02      	cmp	r3, #2
 8008614:	d0f2      	beq.n	80085fc <osDelay+0x8>
    if (ticks != 0U) {
 8008616:	2800      	cmp	r0, #0
 8008618:	d0f2      	beq.n	8008600 <osDelay+0xc>
      vTaskDelay(ticks);
 800861a:	f001 fccb 	bl	8009fb4 <vTaskDelay>
    stat = osOK;
 800861e:	2000      	movs	r0, #0
 8008620:	e7ee      	b.n	8008600 <osDelay+0xc>
 8008622:	bf00      	nop
 8008624:	20004a60 	.word	0x20004a60

08008628 <osSemaphoreNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 8008628:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800862a:	460e      	mov	r6, r1
 800862c:	4615      	mov	r5, r2
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800862e:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 8008632:	b11b      	cbz	r3, 800863c <osSemaphoreNew+0x14>
        }

        if ((hSemaphore != NULL) && (initial_count != 0U)) {
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
            vSemaphoreDelete (hSemaphore);
            hSemaphore = NULL;
 8008634:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 8008636:	4620      	mov	r0, r4
 8008638:	b002      	add	sp, #8
 800863a:	bd70      	pop	{r4, r5, r6, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800863c:	f3ef 8310 	mrs	r3, PRIMASK
  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 8008640:	b913      	cbnz	r3, 8008648 <osSemaphoreNew+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8008642:	f3ef 8311 	mrs	r3, BASEPRI
 8008646:	b11b      	cbz	r3, 8008650 <osSemaphoreNew+0x28>
 8008648:	4b21      	ldr	r3, [pc, #132]	; (80086d0 <osSemaphoreNew+0xa8>)
 800864a:	681b      	ldr	r3, [r3, #0]
 800864c:	2b02      	cmp	r3, #2
 800864e:	d0f1      	beq.n	8008634 <osSemaphoreNew+0xc>
 8008650:	2800      	cmp	r0, #0
 8008652:	d0ef      	beq.n	8008634 <osSemaphoreNew+0xc>
 8008654:	42b0      	cmp	r0, r6
 8008656:	d3ed      	bcc.n	8008634 <osSemaphoreNew+0xc>
    if (attr != NULL) {
 8008658:	b1ed      	cbz	r5, 8008696 <osSemaphoreNew+0x6e>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 800865a:	e9d5 3202 	ldrd	r3, r2, [r5, #8]
 800865e:	b1c3      	cbz	r3, 8008692 <osSemaphoreNew+0x6a>
 8008660:	2a4f      	cmp	r2, #79	; 0x4f
 8008662:	d9e7      	bls.n	8008634 <osSemaphoreNew+0xc>
      if (max_count == 1U) {
 8008664:	2801      	cmp	r0, #1
 8008666:	d129      	bne.n	80086bc <osSemaphoreNew+0x94>
          hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 8008668:	2203      	movs	r2, #3
 800866a:	9200      	str	r2, [sp, #0]
 800866c:	2200      	movs	r2, #0
 800866e:	4611      	mov	r1, r2
 8008670:	f000 fd29 	bl	80090c6 <xQueueGenericCreateStatic>
          hSemaphore = xSemaphoreCreateBinary();
 8008674:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 8008676:	2800      	cmp	r0, #0
 8008678:	d0dc      	beq.n	8008634 <osSemaphoreNew+0xc>
 800867a:	b1ce      	cbz	r6, 80086b0 <osSemaphoreNew+0x88>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800867c:	2300      	movs	r3, #0
 800867e:	461a      	mov	r2, r3
 8008680:	4619      	mov	r1, r3
 8008682:	f000 fdd5 	bl	8009230 <xQueueGenericSend>
 8008686:	2801      	cmp	r0, #1
 8008688:	d012      	beq.n	80086b0 <osSemaphoreNew+0x88>
            vSemaphoreDelete (hSemaphore);
 800868a:	4620      	mov	r0, r4
 800868c:	f001 f910 	bl	80098b0 <vQueueDelete>
 8008690:	e7d0      	b.n	8008634 <osSemaphoreNew+0xc>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 8008692:	2a00      	cmp	r2, #0
 8008694:	d1ce      	bne.n	8008634 <osSemaphoreNew+0xc>
      if (max_count == 1U) {
 8008696:	2801      	cmp	r0, #1
 8008698:	d104      	bne.n	80086a4 <osSemaphoreNew+0x7c>
          hSemaphore = xSemaphoreCreateBinary();
 800869a:	2203      	movs	r2, #3
 800869c:	2100      	movs	r1, #0
 800869e:	f000 fd60 	bl	8009162 <xQueueGenericCreate>
 80086a2:	e7e7      	b.n	8008674 <osSemaphoreNew+0x4c>
          hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 80086a4:	4631      	mov	r1, r6
 80086a6:	f000 fda5 	bl	80091f4 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 80086aa:	4604      	mov	r4, r0
 80086ac:	2800      	cmp	r0, #0
 80086ae:	d0c1      	beq.n	8008634 <osSemaphoreNew+0xc>
        if (attr != NULL) {
 80086b0:	b95d      	cbnz	r5, 80086ca <osSemaphoreNew+0xa2>
        vQueueAddToRegistry (hSemaphore, name);
 80086b2:	4629      	mov	r1, r5
 80086b4:	4620      	mov	r0, r4
 80086b6:	f001 f8d5 	bl	8009864 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 80086ba:	e7bc      	b.n	8008636 <osSemaphoreNew+0xe>
          hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 80086bc:	461a      	mov	r2, r3
 80086be:	4631      	mov	r1, r6
 80086c0:	f000 fd76 	bl	80091b0 <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 80086c4:	4604      	mov	r4, r0
 80086c6:	2800      	cmp	r0, #0
 80086c8:	d0b4      	beq.n	8008634 <osSemaphoreNew+0xc>
          name = attr->name;
 80086ca:	682d      	ldr	r5, [r5, #0]
 80086cc:	e7f1      	b.n	80086b2 <osSemaphoreNew+0x8a>
 80086ce:	bf00      	nop
 80086d0:	20004a60 	.word	0x20004a60

080086d4 <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 80086d4:	b513      	push	{r0, r1, r4, lr}
 80086d6:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 80086d8:	b918      	cbnz	r0, 80086e2 <osSemaphoreAcquire+0xe>
    stat = osErrorParameter;
 80086da:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 80086de:	b002      	add	sp, #8
 80086e0:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80086e2:	f3ef 8305 	mrs	r3, IPSR
  else if (IS_IRQ()) {
 80086e6:	b163      	cbz	r3, 8008702 <osSemaphoreAcquire+0x2e>
    if (timeout != 0U) {
 80086e8:	2c00      	cmp	r4, #0
 80086ea:	d1f6      	bne.n	80086da <osSemaphoreAcquire+0x6>
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 80086ec:	aa01      	add	r2, sp, #4
 80086ee:	4621      	mov	r1, r4
      yield = pdFALSE;
 80086f0:	9401      	str	r4, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 80086f2:	f001 f867 	bl	80097c4 <xQueueReceiveFromISR>
 80086f6:	2801      	cmp	r0, #1
 80086f8:	d113      	bne.n	8008722 <osSemaphoreAcquire+0x4e>
        portYIELD_FROM_ISR (yield);
 80086fa:	9b01      	ldr	r3, [sp, #4]
 80086fc:	b9a3      	cbnz	r3, 8008728 <osSemaphoreAcquire+0x54>
  stat = osOK;
 80086fe:	2000      	movs	r0, #0
 8008700:	e7ed      	b.n	80086de <osSemaphoreAcquire+0xa>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8008702:	f3ef 8310 	mrs	r3, PRIMASK
  else if (IS_IRQ()) {
 8008706:	b913      	cbnz	r3, 800870e <osSemaphoreAcquire+0x3a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8008708:	f3ef 8311 	mrs	r3, BASEPRI
 800870c:	b11b      	cbz	r3, 8008716 <osSemaphoreAcquire+0x42>
 800870e:	4b0d      	ldr	r3, [pc, #52]	; (8008744 <osSemaphoreAcquire+0x70>)
 8008710:	681b      	ldr	r3, [r3, #0]
 8008712:	2b02      	cmp	r3, #2
 8008714:	d0e8      	beq.n	80086e8 <osSemaphoreAcquire+0x14>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 8008716:	4621      	mov	r1, r4
 8008718:	f000 ff91 	bl	800963e <xQueueSemaphoreTake>
 800871c:	2801      	cmp	r0, #1
 800871e:	d0ee      	beq.n	80086fe <osSemaphoreAcquire+0x2a>
      if (timeout != 0U) {
 8008720:	b96c      	cbnz	r4, 800873e <osSemaphoreAcquire+0x6a>
        stat = osErrorResource;
 8008722:	f06f 0002 	mvn.w	r0, #2
 8008726:	e7da      	b.n	80086de <osSemaphoreAcquire+0xa>
        portYIELD_FROM_ISR (yield);
 8008728:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800872c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008730:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008734:	f3bf 8f4f 	dsb	sy
 8008738:	f3bf 8f6f 	isb	sy
 800873c:	e7df      	b.n	80086fe <osSemaphoreAcquire+0x2a>
        stat = osErrorTimeout;
 800873e:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8008742:	e7cc      	b.n	80086de <osSemaphoreAcquire+0xa>
 8008744:	20004a60 	.word	0x20004a60

08008748 <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 8008748:	b513      	push	{r0, r1, r4, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800874a:	b370      	cbz	r0, 80087aa <osSemaphoreRelease+0x62>
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800874c:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 8008750:	b14b      	cbz	r3, 8008766 <osSemaphoreRelease+0x1e>
    yield = pdFALSE;
 8008752:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8008754:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 8008756:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8008758:	f000 fe7e 	bl	8009458 <xQueueGiveFromISR>
 800875c:	2801      	cmp	r0, #1
 800875e:	d014      	beq.n	800878a <osSemaphoreRelease+0x42>
      portYIELD_FROM_ISR (yield);
    }
  }
  else {
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
      stat = osErrorResource;
 8008760:	f06f 0002 	mvn.w	r0, #2
 8008764:	e014      	b.n	8008790 <osSemaphoreRelease+0x48>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8008766:	f3ef 8310 	mrs	r3, PRIMASK
  else if (IS_IRQ()) {
 800876a:	b913      	cbnz	r3, 8008772 <osSemaphoreRelease+0x2a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800876c:	f3ef 8311 	mrs	r3, BASEPRI
 8008770:	b11b      	cbz	r3, 800877a <osSemaphoreRelease+0x32>
 8008772:	4b0f      	ldr	r3, [pc, #60]	; (80087b0 <osSemaphoreRelease+0x68>)
 8008774:	681b      	ldr	r3, [r3, #0]
 8008776:	2b02      	cmp	r3, #2
 8008778:	d0eb      	beq.n	8008752 <osSemaphoreRelease+0xa>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800877a:	2300      	movs	r3, #0
 800877c:	461a      	mov	r2, r3
 800877e:	4619      	mov	r1, r3
 8008780:	f000 fd56 	bl	8009230 <xQueueGenericSend>
 8008784:	2801      	cmp	r0, #1
 8008786:	d002      	beq.n	800878e <osSemaphoreRelease+0x46>
 8008788:	e7ea      	b.n	8008760 <osSemaphoreRelease+0x18>
      portYIELD_FROM_ISR (yield);
 800878a:	9b01      	ldr	r3, [sp, #4]
 800878c:	b913      	cbnz	r3, 8008794 <osSemaphoreRelease+0x4c>
  stat = osOK;
 800878e:	2000      	movs	r0, #0
    }
  }

  return (stat);
}
 8008790:	b002      	add	sp, #8
 8008792:	bd10      	pop	{r4, pc}
      portYIELD_FROM_ISR (yield);
 8008794:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008798:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800879c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80087a0:	f3bf 8f4f 	dsb	sy
 80087a4:	f3bf 8f6f 	isb	sy
 80087a8:	e7f1      	b.n	800878e <osSemaphoreRelease+0x46>
    stat = osErrorParameter;
 80087aa:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 80087ae:	e7ef      	b.n	8008790 <osSemaphoreRelease+0x48>
 80087b0:	20004a60 	.word	0x20004a60

080087b4 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 80087b4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80087b6:	4614      	mov	r4, r2
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80087b8:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 80087bc:	b11b      	cbz	r3, 80087c6 <osMessageQueueNew+0x12>
  hQueue = NULL;
 80087be:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 80087c0:	4628      	mov	r0, r5
 80087c2:	b002      	add	sp, #8
 80087c4:	bd70      	pop	{r4, r5, r6, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80087c6:	f3ef 8310 	mrs	r3, PRIMASK
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 80087ca:	b913      	cbnz	r3, 80087d2 <osMessageQueueNew+0x1e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80087cc:	f3ef 8311 	mrs	r3, BASEPRI
 80087d0:	b11b      	cbz	r3, 80087da <osMessageQueueNew+0x26>
 80087d2:	4b1a      	ldr	r3, [pc, #104]	; (800883c <osMessageQueueNew+0x88>)
 80087d4:	681b      	ldr	r3, [r3, #0]
 80087d6:	2b02      	cmp	r3, #2
 80087d8:	d0f1      	beq.n	80087be <osMessageQueueNew+0xa>
 80087da:	2800      	cmp	r0, #0
 80087dc:	d0ef      	beq.n	80087be <osMessageQueueNew+0xa>
 80087de:	2900      	cmp	r1, #0
 80087e0:	d0ed      	beq.n	80087be <osMessageQueueNew+0xa>
    if (attr != NULL) {
 80087e2:	b1ec      	cbz	r4, 8008820 <osMessageQueueNew+0x6c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 80087e4:	e9d4 3202 	ldrd	r3, r2, [r4, #8]
 80087e8:	b193      	cbz	r3, 8008810 <osMessageQueueNew+0x5c>
 80087ea:	2a4f      	cmp	r2, #79	; 0x4f
 80087ec:	d9e7      	bls.n	80087be <osMessageQueueNew+0xa>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 80087ee:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 80087f0:	2a00      	cmp	r2, #0
 80087f2:	d0e4      	beq.n	80087be <osMessageQueueNew+0xa>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 80087f4:	6966      	ldr	r6, [r4, #20]
 80087f6:	fb01 f500 	mul.w	r5, r1, r0
 80087fa:	42ae      	cmp	r6, r5
 80087fc:	d3df      	bcc.n	80087be <osMessageQueueNew+0xa>
      hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 80087fe:	2500      	movs	r5, #0
 8008800:	9500      	str	r5, [sp, #0]
 8008802:	f000 fc60 	bl	80090c6 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 8008806:	4605      	mov	r5, r0
 8008808:	2800      	cmp	r0, #0
 800880a:	d0d8      	beq.n	80087be <osMessageQueueNew+0xa>
        name = attr->name;
 800880c:	6824      	ldr	r4, [r4, #0]
 800880e:	e00f      	b.n	8008830 <osMessageQueueNew+0x7c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 8008810:	2a00      	cmp	r2, #0
 8008812:	d1d4      	bne.n	80087be <osMessageQueueNew+0xa>
 8008814:	6923      	ldr	r3, [r4, #16]
 8008816:	2b00      	cmp	r3, #0
 8008818:	d1d1      	bne.n	80087be <osMessageQueueNew+0xa>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 800881a:	6963      	ldr	r3, [r4, #20]
 800881c:	2b00      	cmp	r3, #0
 800881e:	d1ce      	bne.n	80087be <osMessageQueueNew+0xa>
        hQueue = xQueueCreate (msg_count, msg_size);
 8008820:	2200      	movs	r2, #0
 8008822:	f000 fc9e 	bl	8009162 <xQueueGenericCreate>
    if (hQueue != NULL) {
 8008826:	4605      	mov	r5, r0
 8008828:	2800      	cmp	r0, #0
 800882a:	d0c8      	beq.n	80087be <osMessageQueueNew+0xa>
      if (attr != NULL) {
 800882c:	2c00      	cmp	r4, #0
 800882e:	d1ed      	bne.n	800880c <osMessageQueueNew+0x58>
      vQueueAddToRegistry (hQueue, name);
 8008830:	4621      	mov	r1, r4
 8008832:	4628      	mov	r0, r5
 8008834:	f001 f816 	bl	8009864 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 8008838:	e7c2      	b.n	80087c0 <osMessageQueueNew+0xc>
 800883a:	bf00      	nop
 800883c:	20004a60 	.word	0x20004a60

08008840 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 8008840:	b513      	push	{r0, r1, r4, lr}
 8008842:	461c      	mov	r4, r3
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008844:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8008848:	b123      	cbz	r3, 8008854 <osMessageQueuePut+0x14>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800884a:	b9d8      	cbnz	r0, 8008884 <osMessageQueuePut+0x44>
      stat = osErrorParameter;
 800884c:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 8008850:	b002      	add	sp, #8
 8008852:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8008854:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 8008858:	b913      	cbnz	r3, 8008860 <osMessageQueuePut+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800885a:	f3ef 8311 	mrs	r3, BASEPRI
 800885e:	b11b      	cbz	r3, 8008868 <osMessageQueuePut+0x28>
 8008860:	4b17      	ldr	r3, [pc, #92]	; (80088c0 <osMessageQueuePut+0x80>)
 8008862:	681b      	ldr	r3, [r3, #0]
 8008864:	2b02      	cmp	r3, #2
 8008866:	d0f0      	beq.n	800884a <osMessageQueuePut+0xa>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8008868:	2800      	cmp	r0, #0
 800886a:	d0ef      	beq.n	800884c <osMessageQueuePut+0xc>
 800886c:	2900      	cmp	r1, #0
 800886e:	d0ed      	beq.n	800884c <osMessageQueuePut+0xc>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8008870:	2300      	movs	r3, #0
 8008872:	4622      	mov	r2, r4
 8008874:	f000 fcdc 	bl	8009230 <xQueueGenericSend>
 8008878:	2801      	cmp	r0, #1
 800887a:	d010      	beq.n	800889e <osMessageQueuePut+0x5e>
        if (timeout != 0U) {
 800887c:	b9e4      	cbnz	r4, 80088b8 <osMessageQueuePut+0x78>
          stat = osErrorResource;
 800887e:	f06f 0002 	mvn.w	r0, #2
 8008882:	e7e5      	b.n	8008850 <osMessageQueuePut+0x10>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8008884:	2900      	cmp	r1, #0
 8008886:	d0e1      	beq.n	800884c <osMessageQueuePut+0xc>
 8008888:	2c00      	cmp	r4, #0
 800888a:	d1df      	bne.n	800884c <osMessageQueuePut+0xc>
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800888c:	4623      	mov	r3, r4
 800888e:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8008890:	9401      	str	r4, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8008892:	f000 fd80 	bl	8009396 <xQueueGenericSendFromISR>
 8008896:	2801      	cmp	r0, #1
 8008898:	d1f1      	bne.n	800887e <osMessageQueuePut+0x3e>
        portYIELD_FROM_ISR (yield);
 800889a:	9b01      	ldr	r3, [sp, #4]
 800889c:	b90b      	cbnz	r3, 80088a2 <osMessageQueuePut+0x62>
  stat = osOK;
 800889e:	2000      	movs	r0, #0
 80088a0:	e7d6      	b.n	8008850 <osMessageQueuePut+0x10>
        portYIELD_FROM_ISR (yield);
 80088a2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80088a6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80088aa:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80088ae:	f3bf 8f4f 	dsb	sy
 80088b2:	f3bf 8f6f 	isb	sy
 80088b6:	e7f2      	b.n	800889e <osMessageQueuePut+0x5e>
          stat = osErrorTimeout;
 80088b8:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 80088bc:	e7c8      	b.n	8008850 <osMessageQueuePut+0x10>
 80088be:	bf00      	nop
 80088c0:	20004a60 	.word	0x20004a60

080088c4 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 80088c4:	b513      	push	{r0, r1, r4, lr}
 80088c6:	461c      	mov	r4, r3
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80088c8:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 80088cc:	b123      	cbz	r3, 80088d8 <osMessageQueueGet+0x14>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 80088ce:	b9d0      	cbnz	r0, 8008906 <osMessageQueueGet+0x42>
      stat = osErrorParameter;
 80088d0:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 80088d4:	b002      	add	sp, #8
 80088d6:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80088d8:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 80088dc:	b913      	cbnz	r3, 80088e4 <osMessageQueueGet+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80088de:	f3ef 8311 	mrs	r3, BASEPRI
 80088e2:	b11b      	cbz	r3, 80088ec <osMessageQueueGet+0x28>
 80088e4:	4b16      	ldr	r3, [pc, #88]	; (8008940 <osMessageQueueGet+0x7c>)
 80088e6:	681b      	ldr	r3, [r3, #0]
 80088e8:	2b02      	cmp	r3, #2
 80088ea:	d0f0      	beq.n	80088ce <osMessageQueueGet+0xa>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 80088ec:	2800      	cmp	r0, #0
 80088ee:	d0ef      	beq.n	80088d0 <osMessageQueueGet+0xc>
 80088f0:	2900      	cmp	r1, #0
 80088f2:	d0ed      	beq.n	80088d0 <osMessageQueueGet+0xc>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 80088f4:	4622      	mov	r2, r4
 80088f6:	f000 fe03 	bl	8009500 <xQueueReceive>
 80088fa:	2801      	cmp	r0, #1
 80088fc:	d00f      	beq.n	800891e <osMessageQueueGet+0x5a>
        if (timeout != 0U) {
 80088fe:	b9dc      	cbnz	r4, 8008938 <osMessageQueueGet+0x74>
          stat = osErrorResource;
 8008900:	f06f 0002 	mvn.w	r0, #2
 8008904:	e7e6      	b.n	80088d4 <osMessageQueueGet+0x10>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8008906:	2900      	cmp	r1, #0
 8008908:	d0e2      	beq.n	80088d0 <osMessageQueueGet+0xc>
 800890a:	2c00      	cmp	r4, #0
 800890c:	d1e0      	bne.n	80088d0 <osMessageQueueGet+0xc>
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800890e:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8008910:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8008912:	f000 ff57 	bl	80097c4 <xQueueReceiveFromISR>
 8008916:	2801      	cmp	r0, #1
 8008918:	d1f2      	bne.n	8008900 <osMessageQueueGet+0x3c>
        portYIELD_FROM_ISR (yield);
 800891a:	9b01      	ldr	r3, [sp, #4]
 800891c:	b90b      	cbnz	r3, 8008922 <osMessageQueueGet+0x5e>
  stat = osOK;
 800891e:	2000      	movs	r0, #0
 8008920:	e7d8      	b.n	80088d4 <osMessageQueueGet+0x10>
        portYIELD_FROM_ISR (yield);
 8008922:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008926:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800892a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800892e:	f3bf 8f4f 	dsb	sy
 8008932:	f3bf 8f6f 	isb	sy
 8008936:	e7f2      	b.n	800891e <osMessageQueueGet+0x5a>
          stat = osErrorTimeout;
 8008938:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 800893c:	e7ca      	b.n	80088d4 <osMessageQueueGet+0x10>
 800893e:	bf00      	nop
 8008940:	20004a60 	.word	0x20004a60

08008944 <vApplicationGetIdleTaskMemory>:
/*
  vApplicationGetIdleTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 8008944:	4b03      	ldr	r3, [pc, #12]	; (8008954 <vApplicationGetIdleTaskMemory+0x10>)
 8008946:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 8008948:	4b03      	ldr	r3, [pc, #12]	; (8008958 <vApplicationGetIdleTaskMemory+0x14>)
 800894a:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800894c:	2380      	movs	r3, #128	; 0x80
 800894e:	6013      	str	r3, [r2, #0]
}
 8008950:	4770      	bx	lr
 8008952:	bf00      	nop
 8008954:	200049a0 	.word	0x200049a0
 8008958:	200047a0 	.word	0x200047a0

0800895c <vApplicationGetTimerTaskMemory>:
/*
  vApplicationGetTimerTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 800895c:	4b03      	ldr	r3, [pc, #12]	; (800896c <vApplicationGetTimerTaskMemory+0x10>)
 800895e:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 8008960:	4b03      	ldr	r3, [pc, #12]	; (8008970 <vApplicationGetTimerTaskMemory+0x14>)
 8008962:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 8008964:	f44f 7380 	mov.w	r3, #256	; 0x100
 8008968:	6013      	str	r3, [r2, #0]
}
 800896a:	4770      	bx	lr
 800896c:	20004e64 	.word	0x20004e64
 8008970:	20004a64 	.word	0x20004a64

08008974 <prvInsertBlockIntoFreeList>:
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
{
 8008974:	b510      	push	{r4, lr}
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 8008976:	4b0f      	ldr	r3, [pc, #60]	; (80089b4 <prvInsertBlockIntoFreeList+0x40>)
 8008978:	461a      	mov	r2, r3
 800897a:	681b      	ldr	r3, [r3, #0]
 800897c:	4283      	cmp	r3, r0
 800897e:	d3fb      	bcc.n	8008978 <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 8008980:	6854      	ldr	r4, [r2, #4]
 8008982:	1911      	adds	r1, r2, r4
 8008984:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 8008986:	bf01      	itttt	eq
 8008988:	6841      	ldreq	r1, [r0, #4]
 800898a:	4610      	moveq	r0, r2
 800898c:	1909      	addeq	r1, r1, r4
 800898e:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 8008990:	6844      	ldr	r4, [r0, #4]
 8008992:	1901      	adds	r1, r0, r4
 8008994:	428b      	cmp	r3, r1
 8008996:	d107      	bne.n	80089a8 <prvInsertBlockIntoFreeList+0x34>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 8008998:	4907      	ldr	r1, [pc, #28]	; (80089b8 <prvInsertBlockIntoFreeList+0x44>)
 800899a:	6809      	ldr	r1, [r1, #0]
 800899c:	428b      	cmp	r3, r1
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800899e:	bf1f      	itttt	ne
 80089a0:	6859      	ldrne	r1, [r3, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 80089a2:	681b      	ldrne	r3, [r3, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 80089a4:	1909      	addne	r1, r1, r4
 80089a6:	6041      	strne	r1, [r0, #4]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 80089a8:	4290      	cmp	r0, r2
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
 80089aa:	6003      	str	r3, [r0, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 80089ac:	bf18      	it	ne
 80089ae:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 80089b0:	bd10      	pop	{r4, pc}
 80089b2:	bf00      	nop
 80089b4:	20014f34 	.word	0x20014f34
 80089b8:	20004f24 	.word	0x20004f24

080089bc <pvPortMalloc>:
{
 80089bc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80089c0:	4604      	mov	r4, r0
	vTaskSuspendAll();
 80089c2:	f001 f9df 	bl	8009d84 <vTaskSuspendAll>
		if( pxEnd == NULL )
 80089c6:	4840      	ldr	r0, [pc, #256]	; (8008ac8 <pvPortMalloc+0x10c>)
 80089c8:	4d40      	ldr	r5, [pc, #256]	; (8008acc <pvPortMalloc+0x110>)
 80089ca:	6803      	ldr	r3, [r0, #0]
 80089cc:	bb0b      	cbnz	r3, 8008a12 <pvPortMalloc+0x56>
	uxAddress = ( size_t ) ucHeap;
 80089ce:	4940      	ldr	r1, [pc, #256]	; (8008ad0 <pvPortMalloc+0x114>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 80089d0:	074e      	lsls	r6, r1, #29
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 80089d2:	bf1f      	itttt	ne
 80089d4:	1dcb      	addne	r3, r1, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 80089d6:	f023 0307 	bicne.w	r3, r3, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 80089da:	f501 3280 	addne.w	r2, r1, #65536	; 0x10000
 80089de:	1ad2      	subne	r2, r2, r3
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 80089e0:	bf14      	ite	ne
 80089e2:	4619      	movne	r1, r3
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 80089e4:	f44f 3280 	moveq.w	r2, #65536	; 0x10000
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 80089e8:	440a      	add	r2, r1
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 80089ea:	4e3a      	ldr	r6, [pc, #232]	; (8008ad4 <pvPortMalloc+0x118>)
	uxAddress -= xHeapStructSize;
 80089ec:	3a08      	subs	r2, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 80089ee:	f022 0207 	bic.w	r2, r2, #7
	xStart.xBlockSize = ( size_t ) 0;
 80089f2:	2300      	movs	r3, #0
 80089f4:	6073      	str	r3, [r6, #4]
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 80089f6:	6031      	str	r1, [r6, #0]
	pxEnd->pxNextFreeBlock = NULL;
 80089f8:	e9c2 3300 	strd	r3, r3, [r2]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 80089fc:	1a53      	subs	r3, r2, r1
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 80089fe:	e9c1 2300 	strd	r2, r3, [r1]
	pxEnd = ( void * ) uxAddress;
 8008a02:	6002      	str	r2, [r0, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8008a04:	4a34      	ldr	r2, [pc, #208]	; (8008ad8 <pvPortMalloc+0x11c>)
 8008a06:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8008a08:	4a34      	ldr	r2, [pc, #208]	; (8008adc <pvPortMalloc+0x120>)
 8008a0a:	6013      	str	r3, [r2, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 8008a0c:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8008a10:	602b      	str	r3, [r5, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 8008a12:	682f      	ldr	r7, [r5, #0]
 8008a14:	4227      	tst	r7, r4
 8008a16:	d151      	bne.n	8008abc <pvPortMalloc+0x100>
			if( xWantedSize > 0 )
 8008a18:	2c00      	cmp	r4, #0
 8008a1a:	d042      	beq.n	8008aa2 <pvPortMalloc+0xe6>
				xWantedSize += xHeapStructSize;
 8008a1c:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 8008a20:	0761      	lsls	r1, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 8008a22:	bf1c      	itt	ne
 8008a24:	f023 0307 	bicne.w	r3, r3, #7
 8008a28:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 8008a2a:	2b00      	cmp	r3, #0
 8008a2c:	d046      	beq.n	8008abc <pvPortMalloc+0x100>
 8008a2e:	4c2b      	ldr	r4, [pc, #172]	; (8008adc <pvPortMalloc+0x120>)
 8008a30:	6826      	ldr	r6, [r4, #0]
 8008a32:	429e      	cmp	r6, r3
 8008a34:	d342      	bcc.n	8008abc <pvPortMalloc+0x100>
				pxBlock = xStart.pxNextFreeBlock;
 8008a36:	4a27      	ldr	r2, [pc, #156]	; (8008ad4 <pvPortMalloc+0x118>)
 8008a38:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 8008a3a:	6869      	ldr	r1, [r5, #4]
 8008a3c:	4299      	cmp	r1, r3
 8008a3e:	d204      	bcs.n	8008a4a <pvPortMalloc+0x8e>
 8008a40:	f8d5 c000 	ldr.w	ip, [r5]
 8008a44:	f1bc 0f00 	cmp.w	ip, #0
 8008a48:	d115      	bne.n	8008a76 <pvPortMalloc+0xba>
				if( pxBlock != pxEnd )
 8008a4a:	6800      	ldr	r0, [r0, #0]
 8008a4c:	42a8      	cmp	r0, r5
 8008a4e:	d035      	beq.n	8008abc <pvPortMalloc+0x100>
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 8008a50:	1ac9      	subs	r1, r1, r3
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8008a52:	6828      	ldr	r0, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8008a54:	f8d2 8000 	ldr.w	r8, [r2]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8008a58:	6010      	str	r0, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 8008a5a:	2910      	cmp	r1, #16
 8008a5c:	d912      	bls.n	8008a84 <pvPortMalloc+0xc8>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 8008a5e:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 8008a60:	0742      	lsls	r2, r0, #29
 8008a62:	d00b      	beq.n	8008a7c <pvPortMalloc+0xc0>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 8008a64:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008a68:	f383 8811 	msr	BASEPRI, r3
 8008a6c:	f3bf 8f6f 	isb	sy
 8008a70:	f3bf 8f4f 	dsb	sy
 8008a74:	e7fe      	b.n	8008a74 <pvPortMalloc+0xb8>
 8008a76:	462a      	mov	r2, r5
 8008a78:	4665      	mov	r5, ip
 8008a7a:	e7de      	b.n	8008a3a <pvPortMalloc+0x7e>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 8008a7c:	6041      	str	r1, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 8008a7e:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 8008a80:	f7ff ff78 	bl	8008974 <prvInsertBlockIntoFreeList>
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8008a84:	4914      	ldr	r1, [pc, #80]	; (8008ad8 <pvPortMalloc+0x11c>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8008a86:	686b      	ldr	r3, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8008a88:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8008a8a:	1af6      	subs	r6, r6, r3
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8008a8c:	431f      	orrs	r7, r3
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8008a8e:	4286      	cmp	r6, r0
					pxBlock->pxNextFreeBlock = NULL;
 8008a90:	f04f 0300 	mov.w	r3, #0
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8008a94:	6026      	str	r6, [r4, #0]
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 8008a96:	bf38      	it	cc
 8008a98:	600e      	strcc	r6, [r1, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8008a9a:	f108 0408 	add.w	r4, r8, #8
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8008a9e:	606f      	str	r7, [r5, #4]
					pxBlock->pxNextFreeBlock = NULL;
 8008aa0:	602b      	str	r3, [r5, #0]
	( void ) xTaskResumeAll();
 8008aa2:	f001 fa13 	bl	8009ecc <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 8008aa6:	0763      	lsls	r3, r4, #29
 8008aa8:	d00a      	beq.n	8008ac0 <pvPortMalloc+0x104>
 8008aaa:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008aae:	f383 8811 	msr	BASEPRI, r3
 8008ab2:	f3bf 8f6f 	isb	sy
 8008ab6:	f3bf 8f4f 	dsb	sy
 8008aba:	e7fe      	b.n	8008aba <pvPortMalloc+0xfe>
void *pvReturn = NULL;
 8008abc:	2400      	movs	r4, #0
 8008abe:	e7f0      	b.n	8008aa2 <pvPortMalloc+0xe6>
}
 8008ac0:	4620      	mov	r0, r4
 8008ac2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008ac6:	bf00      	nop
 8008ac8:	20004f24 	.word	0x20004f24
 8008acc:	20014f28 	.word	0x20014f28
 8008ad0:	20004f28 	.word	0x20004f28
 8008ad4:	20014f34 	.word	0x20014f34
 8008ad8:	20014f30 	.word	0x20014f30
 8008adc:	20014f2c 	.word	0x20014f2c

08008ae0 <vPortFree>:
{
 8008ae0:	b510      	push	{r4, lr}
	if( pv != NULL )
 8008ae2:	4604      	mov	r4, r0
 8008ae4:	b370      	cbz	r0, 8008b44 <vPortFree+0x64>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 8008ae6:	4a18      	ldr	r2, [pc, #96]	; (8008b48 <vPortFree+0x68>)
 8008ae8:	f850 3c04 	ldr.w	r3, [r0, #-4]
 8008aec:	6812      	ldr	r2, [r2, #0]
 8008aee:	4213      	tst	r3, r2
 8008af0:	d108      	bne.n	8008b04 <vPortFree+0x24>
 8008af2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008af6:	f383 8811 	msr	BASEPRI, r3
 8008afa:	f3bf 8f6f 	isb	sy
 8008afe:	f3bf 8f4f 	dsb	sy
 8008b02:	e7fe      	b.n	8008b02 <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 8008b04:	f850 1c08 	ldr.w	r1, [r0, #-8]
 8008b08:	b141      	cbz	r1, 8008b1c <vPortFree+0x3c>
 8008b0a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008b0e:	f383 8811 	msr	BASEPRI, r3
 8008b12:	f3bf 8f6f 	isb	sy
 8008b16:	f3bf 8f4f 	dsb	sy
 8008b1a:	e7fe      	b.n	8008b1a <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 8008b1c:	ea23 0302 	bic.w	r3, r3, r2
 8008b20:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 8008b24:	f001 f92e 	bl	8009d84 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 8008b28:	4a08      	ldr	r2, [pc, #32]	; (8008b4c <vPortFree+0x6c>)
 8008b2a:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8008b2e:	6811      	ldr	r1, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8008b30:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 8008b34:	440b      	add	r3, r1
 8008b36:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8008b38:	f7ff ff1c 	bl	8008974 <prvInsertBlockIntoFreeList>
}
 8008b3c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				( void ) xTaskResumeAll();
 8008b40:	f001 b9c4 	b.w	8009ecc <xTaskResumeAll>
}
 8008b44:	bd10      	pop	{r4, pc}
 8008b46:	bf00      	nop
 8008b48:	20014f28 	.word	0x20014f28
 8008b4c:	20014f2c 	.word	0x20014f2c

08008b50 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008b50:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 8008b54:	f04f 32ff 	mov.w	r2, #4294967295

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008b58:	e9c0 2302 	strd	r2, r3, [r0, #8]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008b5c:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008b5e:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 8008b60:	2300      	movs	r3, #0
 8008b62:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 8008b64:	4770      	bx	lr

08008b66 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 8008b66:	2300      	movs	r3, #0
 8008b68:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 8008b6a:	4770      	bx	lr

08008b6c <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 8008b6c:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 8008b6e:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 8008b70:	689a      	ldr	r2, [r3, #8]
 8008b72:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 8008b74:	689a      	ldr	r2, [r3, #8]
 8008b76:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 8008b78:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8008b7a:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8008b7c:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8008b7e:	3301      	adds	r3, #1
 8008b80:	6003      	str	r3, [r0, #0]
}
 8008b82:	4770      	bx	lr

08008b84 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 8008b84:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 8008b86:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 8008b88:	1c63      	adds	r3, r4, #1
 8008b8a:	d10a      	bne.n	8008ba2 <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 8008b8c:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 8008b8e:	685a      	ldr	r2, [r3, #4]
 8008b90:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 8008b92:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 8008b94:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 8008b96:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8008b98:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8008b9a:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8008b9c:	3301      	adds	r3, #1
 8008b9e:	6003      	str	r3, [r0, #0]
}
 8008ba0:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 8008ba2:	f100 0208 	add.w	r2, r0, #8
 8008ba6:	4613      	mov	r3, r2
 8008ba8:	6852      	ldr	r2, [r2, #4]
 8008baa:	6815      	ldr	r5, [r2, #0]
 8008bac:	42a5      	cmp	r5, r4
 8008bae:	d9fa      	bls.n	8008ba6 <vListInsert+0x22>
 8008bb0:	e7ed      	b.n	8008b8e <vListInsert+0xa>

08008bb2 <uxListRemove>:
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8008bb2:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
List_t * const pxList = pxItemToRemove->pxContainer;
 8008bb6:	6903      	ldr	r3, [r0, #16]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8008bb8:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 8008bba:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 8008bbc:	6859      	ldr	r1, [r3, #4]
 8008bbe:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 8008bc0:	bf08      	it	eq
 8008bc2:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 8008bc4:	2200      	movs	r2, #0
 8008bc6:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 8008bc8:	681a      	ldr	r2, [r3, #0]
 8008bca:	3a01      	subs	r2, #1
 8008bcc:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 8008bce:	6818      	ldr	r0, [r3, #0]
}
 8008bd0:	4770      	bx	lr
	...

08008bd4 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 8008bd4:	4808      	ldr	r0, [pc, #32]	; (8008bf8 <prvPortStartFirstTask+0x24>)
 8008bd6:	6800      	ldr	r0, [r0, #0]
 8008bd8:	6800      	ldr	r0, [r0, #0]
 8008bda:	f380 8808 	msr	MSP, r0
 8008bde:	f04f 0000 	mov.w	r0, #0
 8008be2:	f380 8814 	msr	CONTROL, r0
 8008be6:	b662      	cpsie	i
 8008be8:	b661      	cpsie	f
 8008bea:	f3bf 8f4f 	dsb	sy
 8008bee:	f3bf 8f6f 	isb	sy
 8008bf2:	df00      	svc	0
 8008bf4:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 8008bf6:	0000      	.short	0x0000
 8008bf8:	e000ed08 	.word	0xe000ed08

08008bfc <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 8008bfc:	f8df 000c 	ldr.w	r0, [pc, #12]	; 8008c0c <vPortEnableVFP+0x10>
 8008c00:	6801      	ldr	r1, [r0, #0]
 8008c02:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8008c06:	6001      	str	r1, [r0, #0]
 8008c08:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 8008c0a:	0000      	.short	0x0000
 8008c0c:	e000ed88 	.word	0xe000ed88

08008c10 <prvTaskExitError>:
{
 8008c10:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 8008c12:	2300      	movs	r3, #0
 8008c14:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 8008c16:	4b0d      	ldr	r3, [pc, #52]	; (8008c4c <prvTaskExitError+0x3c>)
 8008c18:	681b      	ldr	r3, [r3, #0]
 8008c1a:	3301      	adds	r3, #1
 8008c1c:	d008      	beq.n	8008c30 <prvTaskExitError+0x20>
 8008c1e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008c22:	f383 8811 	msr	BASEPRI, r3
 8008c26:	f3bf 8f6f 	isb	sy
 8008c2a:	f3bf 8f4f 	dsb	sy
 8008c2e:	e7fe      	b.n	8008c2e <prvTaskExitError+0x1e>
 8008c30:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008c34:	f383 8811 	msr	BASEPRI, r3
 8008c38:	f3bf 8f6f 	isb	sy
 8008c3c:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 8008c40:	9b01      	ldr	r3, [sp, #4]
 8008c42:	2b00      	cmp	r3, #0
 8008c44:	d0fc      	beq.n	8008c40 <prvTaskExitError+0x30>
}
 8008c46:	b002      	add	sp, #8
 8008c48:	4770      	bx	lr
 8008c4a:	bf00      	nop
 8008c4c:	20000088 	.word	0x20000088

08008c50 <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 8008c50:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8008c54:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 8008c58:	4b07      	ldr	r3, [pc, #28]	; (8008c78 <pxPortInitialiseStack+0x28>)
 8008c5a:	f840 3c0c 	str.w	r3, [r0, #-12]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8008c5e:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 8008c62:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8008c66:	f840 1c08 	str.w	r1, [r0, #-8]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 8008c6a:	f840 2c20 	str.w	r2, [r0, #-32]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 8008c6e:	f840 3c24 	str.w	r3, [r0, #-36]
}
 8008c72:	3844      	subs	r0, #68	; 0x44
 8008c74:	4770      	bx	lr
 8008c76:	bf00      	nop
 8008c78:	08008c11 	.word	0x08008c11
 8008c7c:	00000000 	.word	0x00000000

08008c80 <SVC_Handler>:
	__asm volatile (
 8008c80:	4b07      	ldr	r3, [pc, #28]	; (8008ca0 <pxCurrentTCBConst2>)
 8008c82:	6819      	ldr	r1, [r3, #0]
 8008c84:	6808      	ldr	r0, [r1, #0]
 8008c86:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008c8a:	f380 8809 	msr	PSP, r0
 8008c8e:	f3bf 8f6f 	isb	sy
 8008c92:	f04f 0000 	mov.w	r0, #0
 8008c96:	f380 8811 	msr	BASEPRI, r0
 8008c9a:	4770      	bx	lr
 8008c9c:	f3af 8000 	nop.w

08008ca0 <pxCurrentTCBConst2>:
 8008ca0:	20014f84 	.word	0x20014f84

08008ca4 <vPortEnterCritical>:
 8008ca4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008ca8:	f383 8811 	msr	BASEPRI, r3
 8008cac:	f3bf 8f6f 	isb	sy
 8008cb0:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 8008cb4:	4a0a      	ldr	r2, [pc, #40]	; (8008ce0 <vPortEnterCritical+0x3c>)
 8008cb6:	6813      	ldr	r3, [r2, #0]
 8008cb8:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 8008cba:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 8008cbc:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 8008cbe:	d10e      	bne.n	8008cde <vPortEnterCritical+0x3a>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 8008cc0:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008cc4:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 8008cc8:	b2db      	uxtb	r3, r3
 8008cca:	b143      	cbz	r3, 8008cde <vPortEnterCritical+0x3a>
 8008ccc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008cd0:	f383 8811 	msr	BASEPRI, r3
 8008cd4:	f3bf 8f6f 	isb	sy
 8008cd8:	f3bf 8f4f 	dsb	sy
 8008cdc:	e7fe      	b.n	8008cdc <vPortEnterCritical+0x38>
}
 8008cde:	4770      	bx	lr
 8008ce0:	20000088 	.word	0x20000088

08008ce4 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 8008ce4:	4a08      	ldr	r2, [pc, #32]	; (8008d08 <vPortExitCritical+0x24>)
 8008ce6:	6813      	ldr	r3, [r2, #0]
 8008ce8:	b943      	cbnz	r3, 8008cfc <vPortExitCritical+0x18>
 8008cea:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008cee:	f383 8811 	msr	BASEPRI, r3
 8008cf2:	f3bf 8f6f 	isb	sy
 8008cf6:	f3bf 8f4f 	dsb	sy
 8008cfa:	e7fe      	b.n	8008cfa <vPortExitCritical+0x16>
	uxCriticalNesting--;
 8008cfc:	3b01      	subs	r3, #1
 8008cfe:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 8008d00:	b90b      	cbnz	r3, 8008d06 <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 8008d02:	f383 8811 	msr	BASEPRI, r3
}
 8008d06:	4770      	bx	lr
 8008d08:	20000088 	.word	0x20000088
 8008d0c:	00000000 	.word	0x00000000

08008d10 <PendSV_Handler>:
	__asm volatile
 8008d10:	f3ef 8009 	mrs	r0, PSP
 8008d14:	f3bf 8f6f 	isb	sy
 8008d18:	4b15      	ldr	r3, [pc, #84]	; (8008d70 <pxCurrentTCBConst>)
 8008d1a:	681a      	ldr	r2, [r3, #0]
 8008d1c:	f01e 0f10 	tst.w	lr, #16
 8008d20:	bf08      	it	eq
 8008d22:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 8008d26:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008d2a:	6010      	str	r0, [r2, #0]
 8008d2c:	e92d 0009 	stmdb	sp!, {r0, r3}
 8008d30:	f04f 0050 	mov.w	r0, #80	; 0x50
 8008d34:	f380 8811 	msr	BASEPRI, r0
 8008d38:	f3bf 8f4f 	dsb	sy
 8008d3c:	f3bf 8f6f 	isb	sy
 8008d40:	f001 f95c 	bl	8009ffc <vTaskSwitchContext>
 8008d44:	f04f 0000 	mov.w	r0, #0
 8008d48:	f380 8811 	msr	BASEPRI, r0
 8008d4c:	bc09      	pop	{r0, r3}
 8008d4e:	6819      	ldr	r1, [r3, #0]
 8008d50:	6808      	ldr	r0, [r1, #0]
 8008d52:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008d56:	f01e 0f10 	tst.w	lr, #16
 8008d5a:	bf08      	it	eq
 8008d5c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 8008d60:	f380 8809 	msr	PSP, r0
 8008d64:	f3bf 8f6f 	isb	sy
 8008d68:	4770      	bx	lr
 8008d6a:	bf00      	nop
 8008d6c:	f3af 8000 	nop.w

08008d70 <pxCurrentTCBConst>:
 8008d70:	20014f84 	.word	0x20014f84

08008d74 <SysTick_Handler>:
{
 8008d74:	b508      	push	{r3, lr}
	__asm volatile
 8008d76:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008d7a:	f383 8811 	msr	BASEPRI, r3
 8008d7e:	f3bf 8f6f 	isb	sy
 8008d82:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 8008d86:	f001 f80b 	bl	8009da0 <xTaskIncrementTick>
 8008d8a:	b128      	cbz	r0, 8008d98 <SysTick_Handler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 8008d8c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008d90:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008d94:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 8008d98:	2300      	movs	r3, #0
 8008d9a:	f383 8811 	msr	BASEPRI, r3
}
 8008d9e:	bd08      	pop	{r3, pc}

08008da0 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 8008da0:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 8008da4:	2300      	movs	r3, #0
 8008da6:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 8008da8:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 8008daa:	4b05      	ldr	r3, [pc, #20]	; (8008dc0 <vPortSetupTimerInterrupt+0x20>)
 8008dac:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8008db0:	681b      	ldr	r3, [r3, #0]
 8008db2:	fbb3 f3f1 	udiv	r3, r3, r1
 8008db6:	3b01      	subs	r3, #1
 8008db8:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 8008dba:	2307      	movs	r3, #7
 8008dbc:	6113      	str	r3, [r2, #16]
}
 8008dbe:	4770      	bx	lr
 8008dc0:	2000007c 	.word	0x2000007c

08008dc4 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8008dc4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
{
 8008dc8:	b537      	push	{r0, r1, r2, r4, r5, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8008dca:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 8008dce:	4a3a      	ldr	r2, [pc, #232]	; (8008eb8 <xPortStartScheduler+0xf4>)
 8008dd0:	4291      	cmp	r1, r2
 8008dd2:	d108      	bne.n	8008de6 <xPortStartScheduler+0x22>
	__asm volatile
 8008dd4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008dd8:	f383 8811 	msr	BASEPRI, r3
 8008ddc:	f3bf 8f6f 	isb	sy
 8008de0:	f3bf 8f4f 	dsb	sy
 8008de4:	e7fe      	b.n	8008de4 <xPortStartScheduler+0x20>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 8008de6:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 8008dea:	4b34      	ldr	r3, [pc, #208]	; (8008ebc <xPortStartScheduler+0xf8>)
 8008dec:	429a      	cmp	r2, r3
 8008dee:	d108      	bne.n	8008e02 <xPortStartScheduler+0x3e>
 8008df0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008df4:	f383 8811 	msr	BASEPRI, r3
 8008df8:	f3bf 8f6f 	isb	sy
 8008dfc:	f3bf 8f4f 	dsb	sy
 8008e00:	e7fe      	b.n	8008e00 <xPortStartScheduler+0x3c>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 8008e02:	4b2f      	ldr	r3, [pc, #188]	; (8008ec0 <xPortStartScheduler+0xfc>)
 8008e04:	781a      	ldrb	r2, [r3, #0]
 8008e06:	b2d2      	uxtb	r2, r2
 8008e08:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 8008e0a:	22ff      	movs	r2, #255	; 0xff
 8008e0c:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8008e0e:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8008e10:	4a2c      	ldr	r2, [pc, #176]	; (8008ec4 <xPortStartScheduler+0x100>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8008e12:	b2db      	uxtb	r3, r3
 8008e14:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8008e18:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8008e1c:	f003 0350 	and.w	r3, r3, #80	; 0x50
 8008e20:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 8008e22:	4a29      	ldr	r2, [pc, #164]	; (8008ec8 <xPortStartScheduler+0x104>)
 8008e24:	2307      	movs	r3, #7
 8008e26:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8008e28:	2100      	movs	r1, #0
 8008e2a:	f89d 0003 	ldrb.w	r0, [sp, #3]
 8008e2e:	0600      	lsls	r0, r0, #24
 8008e30:	f103 34ff 	add.w	r4, r3, #4294967295
 8008e34:	d40c      	bmi.n	8008e50 <xPortStartScheduler+0x8c>
 8008e36:	b111      	cbz	r1, 8008e3e <xPortStartScheduler+0x7a>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 8008e38:	2b03      	cmp	r3, #3
 8008e3a:	6013      	str	r3, [r2, #0]
 8008e3c:	d011      	beq.n	8008e62 <xPortStartScheduler+0x9e>
 8008e3e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008e42:	f383 8811 	msr	BASEPRI, r3
 8008e46:	f3bf 8f6f 	isb	sy
 8008e4a:	f3bf 8f4f 	dsb	sy
 8008e4e:	e7fe      	b.n	8008e4e <xPortStartScheduler+0x8a>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 8008e50:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8008e54:	005b      	lsls	r3, r3, #1
 8008e56:	b2db      	uxtb	r3, r3
 8008e58:	f88d 3003 	strb.w	r3, [sp, #3]
 8008e5c:	2101      	movs	r1, #1
 8008e5e:	4623      	mov	r3, r4
 8008e60:	e7e3      	b.n	8008e2a <xPortStartScheduler+0x66>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 8008e62:	f44f 7340 	mov.w	r3, #768	; 0x300
 8008e66:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8008e68:	9b01      	ldr	r3, [sp, #4]
 8008e6a:	4a15      	ldr	r2, [pc, #84]	; (8008ec0 <xPortStartScheduler+0xfc>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8008e6c:	f04f 24e0 	mov.w	r4, #3758153728	; 0xe000e000
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8008e70:	b2db      	uxtb	r3, r3
 8008e72:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8008e74:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 8008e78:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8008e7c:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 8008e80:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 8008e84:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 8008e88:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	vPortSetupTimerInterrupt();
 8008e8c:	f7ff ff88 	bl	8008da0 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 8008e90:	4b0e      	ldr	r3, [pc, #56]	; (8008ecc <xPortStartScheduler+0x108>)
 8008e92:	2500      	movs	r5, #0
 8008e94:	601d      	str	r5, [r3, #0]
	vPortEnableVFP();
 8008e96:	f7ff feb1 	bl	8008bfc <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 8008e9a:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	; 0xf34
 8008e9e:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 8008ea2:	f8c4 3f34 	str.w	r3, [r4, #3892]	; 0xf34
	prvPortStartFirstTask();
 8008ea6:	f7ff fe95 	bl	8008bd4 <prvPortStartFirstTask>
	vTaskSwitchContext();
 8008eaa:	f001 f8a7 	bl	8009ffc <vTaskSwitchContext>
	prvTaskExitError();
 8008eae:	f7ff feaf 	bl	8008c10 <prvTaskExitError>
}
 8008eb2:	4628      	mov	r0, r5
 8008eb4:	b003      	add	sp, #12
 8008eb6:	bd30      	pop	{r4, r5, pc}
 8008eb8:	410fc271 	.word	0x410fc271
 8008ebc:	410fc270 	.word	0x410fc270
 8008ec0:	e000e400 	.word	0xe000e400
 8008ec4:	20014f3c 	.word	0x20014f3c
 8008ec8:	20014f40 	.word	0x20014f40
 8008ecc:	20000088 	.word	0x20000088

08008ed0 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 8008ed0:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 8008ed4:	2b0f      	cmp	r3, #15
 8008ed6:	d90e      	bls.n	8008ef6 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 8008ed8:	4a11      	ldr	r2, [pc, #68]	; (8008f20 <vPortValidateInterruptPriority+0x50>)
 8008eda:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 8008edc:	4a11      	ldr	r2, [pc, #68]	; (8008f24 <vPortValidateInterruptPriority+0x54>)
 8008ede:	7812      	ldrb	r2, [r2, #0]
 8008ee0:	429a      	cmp	r2, r3
 8008ee2:	d908      	bls.n	8008ef6 <vPortValidateInterruptPriority+0x26>
 8008ee4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008ee8:	f383 8811 	msr	BASEPRI, r3
 8008eec:	f3bf 8f6f 	isb	sy
 8008ef0:	f3bf 8f4f 	dsb	sy
 8008ef4:	e7fe      	b.n	8008ef4 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 8008ef6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008efa:	4a0b      	ldr	r2, [pc, #44]	; (8008f28 <vPortValidateInterruptPriority+0x58>)
 8008efc:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 8008f00:	6812      	ldr	r2, [r2, #0]
 8008f02:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8008f06:	4293      	cmp	r3, r2
 8008f08:	d908      	bls.n	8008f1c <vPortValidateInterruptPriority+0x4c>
 8008f0a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008f0e:	f383 8811 	msr	BASEPRI, r3
 8008f12:	f3bf 8f6f 	isb	sy
 8008f16:	f3bf 8f4f 	dsb	sy
 8008f1a:	e7fe      	b.n	8008f1a <vPortValidateInterruptPriority+0x4a>
	}
 8008f1c:	4770      	bx	lr
 8008f1e:	bf00      	nop
 8008f20:	e000e3f0 	.word	0xe000e3f0
 8008f24:	20014f3c 	.word	0x20014f3c
 8008f28:	20014f40 	.word	0x20014f40

08008f2c <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 8008f2c:	b510      	push	{r4, lr}
 8008f2e:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8008f30:	f7ff feb8 	bl	8008ca4 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 8008f34:	6ba4      	ldr	r4, [r4, #56]	; 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8008f36:	f7ff fed5 	bl	8008ce4 <vPortExitCritical>

	return xReturn;
}
 8008f3a:	fab4 f084 	clz	r0, r4
 8008f3e:	0940      	lsrs	r0, r0, #5
 8008f40:	bd10      	pop	{r4, pc}

08008f42 <prvCopyDataToQueue>:
{
 8008f42:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008f44:	4615      	mov	r5, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8008f46:	6c02      	ldr	r2, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8008f48:	6b86      	ldr	r6, [r0, #56]	; 0x38
{
 8008f4a:	4604      	mov	r4, r0
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8008f4c:	b952      	cbnz	r2, 8008f64 <prvCopyDataToQueue+0x22>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8008f4e:	6807      	ldr	r7, [r0, #0]
 8008f50:	bb47      	cbnz	r7, 8008fa4 <prvCopyDataToQueue+0x62>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 8008f52:	6880      	ldr	r0, [r0, #8]
 8008f54:	f001 f9ae 	bl	800a2b4 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 8008f58:	60a7      	str	r7, [r4, #8]
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 8008f5a:	4605      	mov	r5, r0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8008f5c:	3601      	adds	r6, #1
 8008f5e:	63a6      	str	r6, [r4, #56]	; 0x38
}
 8008f60:	4628      	mov	r0, r5
 8008f62:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	else if( xPosition == queueSEND_TO_BACK )
 8008f64:	b965      	cbnz	r5, 8008f80 <prvCopyDataToQueue+0x3e>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8008f66:	6840      	ldr	r0, [r0, #4]
 8008f68:	f017 fdea 	bl	8020b40 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008f6c:	6863      	ldr	r3, [r4, #4]
 8008f6e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8008f70:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8008f72:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008f74:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8008f76:	4293      	cmp	r3, r2
 8008f78:	d3f0      	bcc.n	8008f5c <prvCopyDataToQueue+0x1a>
			pxQueue->pcWriteTo = pxQueue->pcHead;
 8008f7a:	6823      	ldr	r3, [r4, #0]
 8008f7c:	6063      	str	r3, [r4, #4]
 8008f7e:	e7ed      	b.n	8008f5c <prvCopyDataToQueue+0x1a>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 8008f80:	68c0      	ldr	r0, [r0, #12]
 8008f82:	f017 fddd 	bl	8020b40 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8008f86:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8008f88:	68e3      	ldr	r3, [r4, #12]
 8008f8a:	4251      	negs	r1, r2
 8008f8c:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8008f8e:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8008f90:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8008f92:	4293      	cmp	r3, r2
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 8008f94:	bf3e      	ittt	cc
 8008f96:	68a3      	ldrcc	r3, [r4, #8]
 8008f98:	185b      	addcc	r3, r3, r1
 8008f9a:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 8008f9c:	2d02      	cmp	r5, #2
 8008f9e:	d101      	bne.n	8008fa4 <prvCopyDataToQueue+0x62>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8008fa0:	b116      	cbz	r6, 8008fa8 <prvCopyDataToQueue+0x66>
				--uxMessagesWaiting;
 8008fa2:	3e01      	subs	r6, #1
BaseType_t xReturn = pdFALSE;
 8008fa4:	2500      	movs	r5, #0
 8008fa6:	e7d9      	b.n	8008f5c <prvCopyDataToQueue+0x1a>
 8008fa8:	4635      	mov	r5, r6
 8008faa:	e7d7      	b.n	8008f5c <prvCopyDataToQueue+0x1a>

08008fac <prvCopyDataFromQueue>:
{
 8008fac:	4603      	mov	r3, r0
 8008fae:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8008fb0:	6c1a      	ldr	r2, [r3, #64]	; 0x40
{
 8008fb2:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8008fb4:	b16a      	cbz	r2, 8008fd2 <prvCopyDataFromQueue+0x26>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008fb6:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8008fb8:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008fba:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8008fbc:	428c      	cmp	r4, r1
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8008fbe:	bf28      	it	cs
 8008fc0:	6819      	ldrcs	r1, [r3, #0]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008fc2:	60dc      	str	r4, [r3, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8008fc4:	bf28      	it	cs
 8008fc6:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8008fc8:	68d9      	ldr	r1, [r3, #12]
}
 8008fca:	f85d 4b04 	ldr.w	r4, [sp], #4
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8008fce:	f017 bdb7 	b.w	8020b40 <memcpy>
}
 8008fd2:	f85d 4b04 	ldr.w	r4, [sp], #4
 8008fd6:	4770      	bx	lr

08008fd8 <prvUnlockQueue>:
{
 8008fd8:	b570      	push	{r4, r5, r6, lr}
 8008fda:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 8008fdc:	f7ff fe62 	bl	8008ca4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8008fe0:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8008fe4:	f104 0624 	add.w	r6, r4, #36	; 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 8008fe8:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8008fea:	2d00      	cmp	r5, #0
 8008fec:	dc14      	bgt.n	8009018 <prvUnlockQueue+0x40>
		pxQueue->cTxLock = queueUNLOCKED;
 8008fee:	23ff      	movs	r3, #255	; 0xff
 8008ff0:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 8008ff4:	f7ff fe76 	bl	8008ce4 <vPortExitCritical>
	taskENTER_CRITICAL();
 8008ff8:	f7ff fe54 	bl	8008ca4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8008ffc:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8009000:	f104 0610 	add.w	r6, r4, #16
		int8_t cRxLock = pxQueue->cRxLock;
 8009004:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8009006:	2d00      	cmp	r5, #0
 8009008:	dc12      	bgt.n	8009030 <prvUnlockQueue+0x58>
		pxQueue->cRxLock = queueUNLOCKED;
 800900a:	23ff      	movs	r3, #255	; 0xff
 800900c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
}
 8009010:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 8009014:	f7ff be66 	b.w	8008ce4 <vPortExitCritical>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8009018:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800901a:	2b00      	cmp	r3, #0
 800901c:	d0e7      	beq.n	8008fee <prvUnlockQueue+0x16>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800901e:	4630      	mov	r0, r6
 8009020:	f001 f864 	bl	800a0ec <xTaskRemoveFromEventList>
 8009024:	b108      	cbz	r0, 800902a <prvUnlockQueue+0x52>
						vTaskMissedYield();
 8009026:	f001 f8ed 	bl	800a204 <vTaskMissedYield>
			--cTxLock;
 800902a:	3d01      	subs	r5, #1
 800902c:	b26d      	sxtb	r5, r5
 800902e:	e7dc      	b.n	8008fea <prvUnlockQueue+0x12>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8009030:	6923      	ldr	r3, [r4, #16]
 8009032:	2b00      	cmp	r3, #0
 8009034:	d0e9      	beq.n	800900a <prvUnlockQueue+0x32>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8009036:	4630      	mov	r0, r6
 8009038:	f001 f858 	bl	800a0ec <xTaskRemoveFromEventList>
 800903c:	b108      	cbz	r0, 8009042 <prvUnlockQueue+0x6a>
					vTaskMissedYield();
 800903e:	f001 f8e1 	bl	800a204 <vTaskMissedYield>
				--cRxLock;
 8009042:	3d01      	subs	r5, #1
 8009044:	b26d      	sxtb	r5, r5
 8009046:	e7de      	b.n	8009006 <prvUnlockQueue+0x2e>

08009048 <xQueueGenericReset>:
{
 8009048:	b538      	push	{r3, r4, r5, lr}
 800904a:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800904c:	4604      	mov	r4, r0
 800904e:	b940      	cbnz	r0, 8009062 <xQueueGenericReset+0x1a>
 8009050:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009054:	f383 8811 	msr	BASEPRI, r3
 8009058:	f3bf 8f6f 	isb	sy
 800905c:	f3bf 8f4f 	dsb	sy
 8009060:	e7fe      	b.n	8009060 <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 8009062:	f7ff fe1f 	bl	8008ca4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009066:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	; 0x3c
 800906a:	6822      	ldr	r2, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800906c:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800906e:	434b      	muls	r3, r1
 8009070:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009072:	1a5b      	subs	r3, r3, r1
 8009074:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009076:	60a0      	str	r0, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009078:	60e3      	str	r3, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800907a:	2000      	movs	r0, #0
		pxQueue->cRxLock = queueUNLOCKED;
 800907c:	23ff      	movs	r3, #255	; 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800907e:	63a0      	str	r0, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 8009080:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 8009084:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
		if( xNewQueue == pdFALSE )
 8009088:	b9a5      	cbnz	r5, 80090b4 <xQueueGenericReset+0x6c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800908a:	6923      	ldr	r3, [r4, #16]
 800908c:	b173      	cbz	r3, 80090ac <xQueueGenericReset+0x64>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800908e:	f104 0010 	add.w	r0, r4, #16
 8009092:	f001 f82b 	bl	800a0ec <xTaskRemoveFromEventList>
 8009096:	b148      	cbz	r0, 80090ac <xQueueGenericReset+0x64>
					queueYIELD_IF_USING_PREEMPTION();
 8009098:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800909c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80090a0:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80090a4:	f3bf 8f4f 	dsb	sy
 80090a8:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 80090ac:	f7ff fe1a 	bl	8008ce4 <vPortExitCritical>
}
 80090b0:	2001      	movs	r0, #1
 80090b2:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 80090b4:	f104 0010 	add.w	r0, r4, #16
 80090b8:	f7ff fd4a 	bl	8008b50 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 80090bc:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80090c0:	f7ff fd46 	bl	8008b50 <vListInitialise>
 80090c4:	e7f2      	b.n	80090ac <xQueueGenericReset+0x64>

080090c6 <xQueueGenericCreateStatic>:
	{
 80090c6:	b513      	push	{r0, r1, r4, lr}
 80090c8:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 80090ca:	b940      	cbnz	r0, 80090de <xQueueGenericCreateStatic+0x18>
 80090cc:	f04f 0350 	mov.w	r3, #80	; 0x50
 80090d0:	f383 8811 	msr	BASEPRI, r3
 80090d4:	f3bf 8f6f 	isb	sy
 80090d8:	f3bf 8f4f 	dsb	sy
 80090dc:	e7fe      	b.n	80090dc <xQueueGenericCreateStatic+0x16>
		configASSERT( pxStaticQueue != NULL );
 80090de:	b943      	cbnz	r3, 80090f2 <xQueueGenericCreateStatic+0x2c>
 80090e0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80090e4:	f383 8811 	msr	BASEPRI, r3
 80090e8:	f3bf 8f6f 	isb	sy
 80090ec:	f3bf 8f4f 	dsb	sy
 80090f0:	e7fe      	b.n	80090f0 <xQueueGenericCreateStatic+0x2a>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 80090f2:	b14a      	cbz	r2, 8009108 <xQueueGenericCreateStatic+0x42>
 80090f4:	b991      	cbnz	r1, 800911c <xQueueGenericCreateStatic+0x56>
 80090f6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80090fa:	f383 8811 	msr	BASEPRI, r3
 80090fe:	f3bf 8f6f 	isb	sy
 8009102:	f3bf 8f4f 	dsb	sy
 8009106:	e7fe      	b.n	8009106 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 8009108:	b141      	cbz	r1, 800911c <xQueueGenericCreateStatic+0x56>
 800910a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800910e:	f383 8811 	msr	BASEPRI, r3
 8009112:	f3bf 8f6f 	isb	sy
 8009116:	f3bf 8f4f 	dsb	sy
 800911a:	e7fe      	b.n	800911a <xQueueGenericCreateStatic+0x54>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800911c:	2350      	movs	r3, #80	; 0x50
 800911e:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 8009120:	9b01      	ldr	r3, [sp, #4]
 8009122:	2b50      	cmp	r3, #80	; 0x50
 8009124:	d008      	beq.n	8009138 <xQueueGenericCreateStatic+0x72>
 8009126:	f04f 0350 	mov.w	r3, #80	; 0x50
 800912a:	f383 8811 	msr	BASEPRI, r3
 800912e:	f3bf 8f6f 	isb	sy
 8009132:	f3bf 8f4f 	dsb	sy
 8009136:	e7fe      	b.n	8009136 <xQueueGenericCreateStatic+0x70>
	if( uxItemSize == ( UBaseType_t ) 0 )
 8009138:	2900      	cmp	r1, #0
 800913a:	bf08      	it	eq
 800913c:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800913e:	9b01      	ldr	r3, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8009140:	6022      	str	r2, [r4, #0]
 8009142:	2301      	movs	r3, #1
	pxNewQueue->uxItemSize = uxItemSize;
 8009144:	e9c4 010f 	strd	r0, r1, [r4, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8009148:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800914c:	4619      	mov	r1, r3
 800914e:	4620      	mov	r0, r4
 8009150:	f7ff ff7a 	bl	8009048 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8009154:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8009158:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
	}
 800915c:	4620      	mov	r0, r4
 800915e:	b002      	add	sp, #8
 8009160:	bd10      	pop	{r4, pc}

08009162 <xQueueGenericCreate>:
	{
 8009162:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009164:	460d      	mov	r5, r1
 8009166:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8009168:	4606      	mov	r6, r0
 800916a:	b940      	cbnz	r0, 800917e <xQueueGenericCreate+0x1c>
 800916c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009170:	f383 8811 	msr	BASEPRI, r3
 8009174:	f3bf 8f6f 	isb	sy
 8009178:	f3bf 8f4f 	dsb	sy
 800917c:	e7fe      	b.n	800917c <xQueueGenericCreate+0x1a>
			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800917e:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 8009180:	3050      	adds	r0, #80	; 0x50
 8009182:	f7ff fc1b 	bl	80089bc <pvPortMalloc>
		if( pxNewQueue != NULL )
 8009186:	4604      	mov	r4, r0
 8009188:	b170      	cbz	r0, 80091a8 <xQueueGenericCreate+0x46>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800918a:	2300      	movs	r3, #0
 800918c:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 8009190:	b165      	cbz	r5, 80091ac <xQueueGenericCreate+0x4a>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009192:	f100 0350 	add.w	r3, r0, #80	; 0x50
	pxNewQueue->uxItemSize = uxItemSize;
 8009196:	e9c4 650f 	strd	r6, r5, [r4, #60]	; 0x3c
 800919a:	6023      	str	r3, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800919c:	2101      	movs	r1, #1
 800919e:	4620      	mov	r0, r4
 80091a0:	f7ff ff52 	bl	8009048 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 80091a4:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 80091a8:	4620      	mov	r0, r4
 80091aa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80091ac:	4603      	mov	r3, r0
 80091ae:	e7f2      	b.n	8009196 <xQueueGenericCreate+0x34>

080091b0 <xQueueCreateCountingSemaphoreStatic>:
	{
 80091b0:	b513      	push	{r0, r1, r4, lr}
 80091b2:	4613      	mov	r3, r2
 80091b4:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 80091b6:	b940      	cbnz	r0, 80091ca <xQueueCreateCountingSemaphoreStatic+0x1a>
 80091b8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80091bc:	f383 8811 	msr	BASEPRI, r3
 80091c0:	f3bf 8f6f 	isb	sy
 80091c4:	f3bf 8f4f 	dsb	sy
 80091c8:	e7fe      	b.n	80091c8 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 80091ca:	4288      	cmp	r0, r1
 80091cc:	d208      	bcs.n	80091e0 <xQueueCreateCountingSemaphoreStatic+0x30>
 80091ce:	f04f 0350 	mov.w	r3, #80	; 0x50
 80091d2:	f383 8811 	msr	BASEPRI, r3
 80091d6:	f3bf 8f6f 	isb	sy
 80091da:	f3bf 8f4f 	dsb	sy
 80091de:	e7fe      	b.n	80091de <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 80091e0:	2202      	movs	r2, #2
 80091e2:	9200      	str	r2, [sp, #0]
 80091e4:	2200      	movs	r2, #0
 80091e6:	4611      	mov	r1, r2
 80091e8:	f7ff ff6d 	bl	80090c6 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 80091ec:	b100      	cbz	r0, 80091f0 <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 80091ee:	6384      	str	r4, [r0, #56]	; 0x38
	}
 80091f0:	b002      	add	sp, #8
 80091f2:	bd10      	pop	{r4, pc}

080091f4 <xQueueCreateCountingSemaphore>:
	{
 80091f4:	b510      	push	{r4, lr}
 80091f6:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 80091f8:	b940      	cbnz	r0, 800920c <xQueueCreateCountingSemaphore+0x18>
 80091fa:	f04f 0350 	mov.w	r3, #80	; 0x50
 80091fe:	f383 8811 	msr	BASEPRI, r3
 8009202:	f3bf 8f6f 	isb	sy
 8009206:	f3bf 8f4f 	dsb	sy
 800920a:	e7fe      	b.n	800920a <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 800920c:	4288      	cmp	r0, r1
 800920e:	d208      	bcs.n	8009222 <xQueueCreateCountingSemaphore+0x2e>
 8009210:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009214:	f383 8811 	msr	BASEPRI, r3
 8009218:	f3bf 8f6f 	isb	sy
 800921c:	f3bf 8f4f 	dsb	sy
 8009220:	e7fe      	b.n	8009220 <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8009222:	2202      	movs	r2, #2
 8009224:	2100      	movs	r1, #0
 8009226:	f7ff ff9c 	bl	8009162 <xQueueGenericCreate>
		if( xHandle != NULL )
 800922a:	b100      	cbz	r0, 800922e <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800922c:	6384      	str	r4, [r0, #56]	; 0x38
	}
 800922e:	bd10      	pop	{r4, pc}

08009230 <xQueueGenericSend>:
{
 8009230:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009234:	b085      	sub	sp, #20
 8009236:	4688      	mov	r8, r1
 8009238:	9201      	str	r2, [sp, #4]
 800923a:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 800923c:	4604      	mov	r4, r0
 800923e:	b940      	cbnz	r0, 8009252 <xQueueGenericSend+0x22>
 8009240:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009244:	f383 8811 	msr	BASEPRI, r3
 8009248:	f3bf 8f6f 	isb	sy
 800924c:	f3bf 8f4f 	dsb	sy
 8009250:	e7fe      	b.n	8009250 <xQueueGenericSend+0x20>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8009252:	b951      	cbnz	r1, 800926a <xQueueGenericSend+0x3a>
 8009254:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8009256:	b143      	cbz	r3, 800926a <xQueueGenericSend+0x3a>
 8009258:	f04f 0350 	mov.w	r3, #80	; 0x50
 800925c:	f383 8811 	msr	BASEPRI, r3
 8009260:	f3bf 8f6f 	isb	sy
 8009264:	f3bf 8f4f 	dsb	sy
 8009268:	e7fe      	b.n	8009268 <xQueueGenericSend+0x38>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800926a:	2f02      	cmp	r7, #2
 800926c:	d10b      	bne.n	8009286 <xQueueGenericSend+0x56>
 800926e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8009270:	2b01      	cmp	r3, #1
 8009272:	d008      	beq.n	8009286 <xQueueGenericSend+0x56>
 8009274:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009278:	f383 8811 	msr	BASEPRI, r3
 800927c:	f3bf 8f6f 	isb	sy
 8009280:	f3bf 8f4f 	dsb	sy
 8009284:	e7fe      	b.n	8009284 <xQueueGenericSend+0x54>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8009286:	f000 ffc3 	bl	800a210 <xTaskGetSchedulerState>
 800928a:	4606      	mov	r6, r0
 800928c:	b950      	cbnz	r0, 80092a4 <xQueueGenericSend+0x74>
 800928e:	9b01      	ldr	r3, [sp, #4]
 8009290:	b14b      	cbz	r3, 80092a6 <xQueueGenericSend+0x76>
 8009292:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009296:	f383 8811 	msr	BASEPRI, r3
 800929a:	f3bf 8f6f 	isb	sy
 800929e:	f3bf 8f4f 	dsb	sy
 80092a2:	e7fe      	b.n	80092a2 <xQueueGenericSend+0x72>
 80092a4:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 80092a6:	f04f 0900 	mov.w	r9, #0
 80092aa:	e037      	b.n	800931c <xQueueGenericSend+0xec>
				if( xTicksToWait == ( TickType_t ) 0 )
 80092ac:	9d01      	ldr	r5, [sp, #4]
 80092ae:	b91d      	cbnz	r5, 80092b8 <xQueueGenericSend+0x88>
					taskEXIT_CRITICAL();
 80092b0:	f7ff fd18 	bl	8008ce4 <vPortExitCritical>
			return errQUEUE_FULL;
 80092b4:	2000      	movs	r0, #0
 80092b6:	e052      	b.n	800935e <xQueueGenericSend+0x12e>
				else if( xEntryTimeSet == pdFALSE )
 80092b8:	b916      	cbnz	r6, 80092c0 <xQueueGenericSend+0x90>
					vTaskInternalSetTimeOutState( &xTimeOut );
 80092ba:	a802      	add	r0, sp, #8
 80092bc:	f000 ff5a 	bl	800a174 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 80092c0:	f7ff fd10 	bl	8008ce4 <vPortExitCritical>
		vTaskSuspendAll();
 80092c4:	f000 fd5e 	bl	8009d84 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 80092c8:	f7ff fcec 	bl	8008ca4 <vPortEnterCritical>
 80092cc:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 80092d0:	2bff      	cmp	r3, #255	; 0xff
 80092d2:	bf08      	it	eq
 80092d4:	f884 9044 	strbeq.w	r9, [r4, #68]	; 0x44
 80092d8:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 80092dc:	2bff      	cmp	r3, #255	; 0xff
 80092de:	bf08      	it	eq
 80092e0:	f884 9045 	strbeq.w	r9, [r4, #69]	; 0x45
 80092e4:	f7ff fcfe 	bl	8008ce4 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 80092e8:	a901      	add	r1, sp, #4
 80092ea:	a802      	add	r0, sp, #8
 80092ec:	f000 ff4e 	bl	800a18c <xTaskCheckForTimeOut>
 80092f0:	2800      	cmp	r0, #0
 80092f2:	d14a      	bne.n	800938a <xQueueGenericSend+0x15a>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 80092f4:	f7ff fcd6 	bl	8008ca4 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 80092f8:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80092fa:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80092fc:	429a      	cmp	r2, r3
 80092fe:	d131      	bne.n	8009364 <xQueueGenericSend+0x134>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8009300:	f7ff fcf0 	bl	8008ce4 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 8009304:	9901      	ldr	r1, [sp, #4]
 8009306:	f104 0010 	add.w	r0, r4, #16
 800930a:	f000 feb7 	bl	800a07c <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800930e:	4620      	mov	r0, r4
 8009310:	f7ff fe62 	bl	8008fd8 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8009314:	f000 fdda 	bl	8009ecc <xTaskResumeAll>
 8009318:	b360      	cbz	r0, 8009374 <xQueueGenericSend+0x144>
 800931a:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 800931c:	f7ff fcc2 	bl	8008ca4 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8009320:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8009322:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8009324:	429a      	cmp	r2, r3
 8009326:	d301      	bcc.n	800932c <xQueueGenericSend+0xfc>
 8009328:	2f02      	cmp	r7, #2
 800932a:	d1bf      	bne.n	80092ac <xQueueGenericSend+0x7c>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800932c:	463a      	mov	r2, r7
 800932e:	4641      	mov	r1, r8
 8009330:	4620      	mov	r0, r4
 8009332:	f7ff fe06 	bl	8008f42 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8009336:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8009338:	b11b      	cbz	r3, 8009342 <xQueueGenericSend+0x112>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800933a:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800933e:	f000 fed5 	bl	800a0ec <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 8009342:	b148      	cbz	r0, 8009358 <xQueueGenericSend+0x128>
						queueYIELD_IF_USING_PREEMPTION();
 8009344:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009348:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800934c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009350:	f3bf 8f4f 	dsb	sy
 8009354:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8009358:	f7ff fcc4 	bl	8008ce4 <vPortExitCritical>
				return pdPASS;
 800935c:	2001      	movs	r0, #1
}
 800935e:	b005      	add	sp, #20
 8009360:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 8009364:	f7ff fcbe 	bl	8008ce4 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 8009368:	4620      	mov	r0, r4
 800936a:	f7ff fe35 	bl	8008fd8 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800936e:	f000 fdad 	bl	8009ecc <xTaskResumeAll>
 8009372:	e7d2      	b.n	800931a <xQueueGenericSend+0xea>
					portYIELD_WITHIN_API();
 8009374:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009378:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800937c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009380:	f3bf 8f4f 	dsb	sy
 8009384:	f3bf 8f6f 	isb	sy
 8009388:	e7c7      	b.n	800931a <xQueueGenericSend+0xea>
			prvUnlockQueue( pxQueue );
 800938a:	4620      	mov	r0, r4
 800938c:	f7ff fe24 	bl	8008fd8 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8009390:	f000 fd9c 	bl	8009ecc <xTaskResumeAll>
 8009394:	e78e      	b.n	80092b4 <xQueueGenericSend+0x84>

08009396 <xQueueGenericSendFromISR>:
{
 8009396:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800939a:	4689      	mov	r9, r1
 800939c:	4690      	mov	r8, r2
 800939e:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 80093a0:	4604      	mov	r4, r0
 80093a2:	b940      	cbnz	r0, 80093b6 <xQueueGenericSendFromISR+0x20>
 80093a4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80093a8:	f383 8811 	msr	BASEPRI, r3
 80093ac:	f3bf 8f6f 	isb	sy
 80093b0:	f3bf 8f4f 	dsb	sy
 80093b4:	e7fe      	b.n	80093b4 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80093b6:	b951      	cbnz	r1, 80093ce <xQueueGenericSendFromISR+0x38>
 80093b8:	6c03      	ldr	r3, [r0, #64]	; 0x40
 80093ba:	b143      	cbz	r3, 80093ce <xQueueGenericSendFromISR+0x38>
 80093bc:	f04f 0350 	mov.w	r3, #80	; 0x50
 80093c0:	f383 8811 	msr	BASEPRI, r3
 80093c4:	f3bf 8f6f 	isb	sy
 80093c8:	f3bf 8f4f 	dsb	sy
 80093cc:	e7fe      	b.n	80093cc <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 80093ce:	2f02      	cmp	r7, #2
 80093d0:	d10b      	bne.n	80093ea <xQueueGenericSendFromISR+0x54>
 80093d2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80093d4:	2b01      	cmp	r3, #1
 80093d6:	d008      	beq.n	80093ea <xQueueGenericSendFromISR+0x54>
 80093d8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80093dc:	f383 8811 	msr	BASEPRI, r3
 80093e0:	f3bf 8f6f 	isb	sy
 80093e4:	f3bf 8f4f 	dsb	sy
 80093e8:	e7fe      	b.n	80093e8 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 80093ea:	f7ff fd71 	bl	8008ed0 <vPortValidateInterruptPriority>
	__asm volatile
 80093ee:	f3ef 8611 	mrs	r6, BASEPRI
 80093f2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80093f6:	f383 8811 	msr	BASEPRI, r3
 80093fa:	f3bf 8f6f 	isb	sy
 80093fe:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8009402:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8009404:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8009406:	429a      	cmp	r2, r3
 8009408:	d301      	bcc.n	800940e <xQueueGenericSendFromISR+0x78>
 800940a:	2f02      	cmp	r7, #2
 800940c:	d122      	bne.n	8009454 <xQueueGenericSendFromISR+0xbe>
			const int8_t cTxLock = pxQueue->cTxLock;
 800940e:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8009412:	463a      	mov	r2, r7
			const int8_t cTxLock = pxQueue->cTxLock;
 8009414:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8009416:	4649      	mov	r1, r9
 8009418:	4620      	mov	r0, r4
 800941a:	f7ff fd92 	bl	8008f42 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 800941e:	1c6b      	adds	r3, r5, #1
 8009420:	d113      	bne.n	800944a <xQueueGenericSendFromISR+0xb4>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8009422:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8009424:	b90b      	cbnz	r3, 800942a <xQueueGenericSendFromISR+0x94>
			xReturn = pdPASS;
 8009426:	2001      	movs	r0, #1
 8009428:	e00b      	b.n	8009442 <xQueueGenericSendFromISR+0xac>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800942a:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800942e:	f000 fe5d 	bl	800a0ec <xTaskRemoveFromEventList>
 8009432:	2800      	cmp	r0, #0
 8009434:	d0f7      	beq.n	8009426 <xQueueGenericSendFromISR+0x90>
							if( pxHigherPriorityTaskWoken != NULL )
 8009436:	f1b8 0f00 	cmp.w	r8, #0
 800943a:	d0f4      	beq.n	8009426 <xQueueGenericSendFromISR+0x90>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800943c:	2001      	movs	r0, #1
 800943e:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 8009442:	f386 8811 	msr	BASEPRI, r6
}
 8009446:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800944a:	3501      	adds	r5, #1
 800944c:	b26d      	sxtb	r5, r5
 800944e:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
 8009452:	e7e8      	b.n	8009426 <xQueueGenericSendFromISR+0x90>
			xReturn = errQUEUE_FULL;
 8009454:	2000      	movs	r0, #0
 8009456:	e7f4      	b.n	8009442 <xQueueGenericSendFromISR+0xac>

08009458 <xQueueGiveFromISR>:
{
 8009458:	b570      	push	{r4, r5, r6, lr}
 800945a:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800945c:	4604      	mov	r4, r0
 800945e:	b940      	cbnz	r0, 8009472 <xQueueGiveFromISR+0x1a>
	__asm volatile
 8009460:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009464:	f383 8811 	msr	BASEPRI, r3
 8009468:	f3bf 8f6f 	isb	sy
 800946c:	f3bf 8f4f 	dsb	sy
 8009470:	e7fe      	b.n	8009470 <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 8009472:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8009474:	b143      	cbz	r3, 8009488 <xQueueGiveFromISR+0x30>
 8009476:	f04f 0350 	mov.w	r3, #80	; 0x50
 800947a:	f383 8811 	msr	BASEPRI, r3
 800947e:	f3bf 8f6f 	isb	sy
 8009482:	f3bf 8f4f 	dsb	sy
 8009486:	e7fe      	b.n	8009486 <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 8009488:	6803      	ldr	r3, [r0, #0]
 800948a:	b953      	cbnz	r3, 80094a2 <xQueueGiveFromISR+0x4a>
 800948c:	6883      	ldr	r3, [r0, #8]
 800948e:	b143      	cbz	r3, 80094a2 <xQueueGiveFromISR+0x4a>
 8009490:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009494:	f383 8811 	msr	BASEPRI, r3
 8009498:	f3bf 8f6f 	isb	sy
 800949c:	f3bf 8f4f 	dsb	sy
 80094a0:	e7fe      	b.n	80094a0 <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 80094a2:	f7ff fd15 	bl	8008ed0 <vPortValidateInterruptPriority>
	__asm volatile
 80094a6:	f3ef 8611 	mrs	r6, BASEPRI
 80094aa:	f04f 0350 	mov.w	r3, #80	; 0x50
 80094ae:	f383 8811 	msr	BASEPRI, r3
 80094b2:	f3bf 8f6f 	isb	sy
 80094b6:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80094ba:	6ba2      	ldr	r2, [r4, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 80094bc:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80094be:	4293      	cmp	r3, r2
 80094c0:	d91c      	bls.n	80094fc <xQueueGiveFromISR+0xa4>
			const int8_t cTxLock = pxQueue->cTxLock;
 80094c2:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 80094c6:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 80094c8:	29ff      	cmp	r1, #255	; 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 80094ca:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 80094cc:	63a2      	str	r2, [r4, #56]	; 0x38
			if( cTxLock == queueUNLOCKED )
 80094ce:	d110      	bne.n	80094f2 <xQueueGiveFromISR+0x9a>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80094d0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80094d2:	b90b      	cbnz	r3, 80094d8 <xQueueGiveFromISR+0x80>
			xReturn = pdPASS;
 80094d4:	2001      	movs	r0, #1
 80094d6:	e009      	b.n	80094ec <xQueueGiveFromISR+0x94>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80094d8:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80094dc:	f000 fe06 	bl	800a0ec <xTaskRemoveFromEventList>
 80094e0:	2800      	cmp	r0, #0
 80094e2:	d0f7      	beq.n	80094d4 <xQueueGiveFromISR+0x7c>
							if( pxHigherPriorityTaskWoken != NULL )
 80094e4:	2d00      	cmp	r5, #0
 80094e6:	d0f5      	beq.n	80094d4 <xQueueGiveFromISR+0x7c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 80094e8:	2001      	movs	r0, #1
 80094ea:	6028      	str	r0, [r5, #0]
	__asm volatile
 80094ec:	f386 8811 	msr	BASEPRI, r6
}
 80094f0:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 80094f2:	3301      	adds	r3, #1
 80094f4:	b25b      	sxtb	r3, r3
 80094f6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 80094fa:	e7eb      	b.n	80094d4 <xQueueGiveFromISR+0x7c>
			xReturn = errQUEUE_FULL;
 80094fc:	2000      	movs	r0, #0
 80094fe:	e7f5      	b.n	80094ec <xQueueGiveFromISR+0x94>

08009500 <xQueueReceive>:
{
 8009500:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8009504:	460f      	mov	r7, r1
 8009506:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 8009508:	4604      	mov	r4, r0
 800950a:	b940      	cbnz	r0, 800951e <xQueueReceive+0x1e>
	__asm volatile
 800950c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009510:	f383 8811 	msr	BASEPRI, r3
 8009514:	f3bf 8f6f 	isb	sy
 8009518:	f3bf 8f4f 	dsb	sy
 800951c:	e7fe      	b.n	800951c <xQueueReceive+0x1c>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800951e:	b951      	cbnz	r1, 8009536 <xQueueReceive+0x36>
 8009520:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8009522:	b143      	cbz	r3, 8009536 <xQueueReceive+0x36>
 8009524:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009528:	f383 8811 	msr	BASEPRI, r3
 800952c:	f3bf 8f6f 	isb	sy
 8009530:	f3bf 8f4f 	dsb	sy
 8009534:	e7fe      	b.n	8009534 <xQueueReceive+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8009536:	f000 fe6b 	bl	800a210 <xTaskGetSchedulerState>
 800953a:	4606      	mov	r6, r0
 800953c:	b950      	cbnz	r0, 8009554 <xQueueReceive+0x54>
 800953e:	9b01      	ldr	r3, [sp, #4]
 8009540:	b14b      	cbz	r3, 8009556 <xQueueReceive+0x56>
 8009542:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009546:	f383 8811 	msr	BASEPRI, r3
 800954a:	f3bf 8f6f 	isb	sy
 800954e:	f3bf 8f4f 	dsb	sy
 8009552:	e7fe      	b.n	8009552 <xQueueReceive+0x52>
 8009554:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 8009556:	f04f 0800 	mov.w	r8, #0
 800955a:	e03d      	b.n	80095d8 <xQueueReceive+0xd8>
				if( xTicksToWait == ( TickType_t ) 0 )
 800955c:	9d01      	ldr	r5, [sp, #4]
 800955e:	b91d      	cbnz	r5, 8009568 <xQueueReceive+0x68>
					taskEXIT_CRITICAL();
 8009560:	f7ff fbc0 	bl	8008ce4 <vPortExitCritical>
				return errQUEUE_EMPTY;
 8009564:	2000      	movs	r0, #0
 8009566:	e056      	b.n	8009616 <xQueueReceive+0x116>
				else if( xEntryTimeSet == pdFALSE )
 8009568:	b916      	cbnz	r6, 8009570 <xQueueReceive+0x70>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800956a:	a802      	add	r0, sp, #8
 800956c:	f000 fe02 	bl	800a174 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8009570:	f7ff fbb8 	bl	8008ce4 <vPortExitCritical>
		vTaskSuspendAll();
 8009574:	f000 fc06 	bl	8009d84 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8009578:	f7ff fb94 	bl	8008ca4 <vPortEnterCritical>
 800957c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8009580:	2bff      	cmp	r3, #255	; 0xff
 8009582:	bf08      	it	eq
 8009584:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 8009588:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800958c:	2bff      	cmp	r3, #255	; 0xff
 800958e:	bf08      	it	eq
 8009590:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 8009594:	f7ff fba6 	bl	8008ce4 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8009598:	a901      	add	r1, sp, #4
 800959a:	a802      	add	r0, sp, #8
 800959c:	f000 fdf6 	bl	800a18c <xTaskCheckForTimeOut>
 80095a0:	2800      	cmp	r0, #0
 80095a2:	d141      	bne.n	8009628 <xQueueReceive+0x128>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 80095a4:	4620      	mov	r0, r4
 80095a6:	f7ff fcc1 	bl	8008f2c <prvIsQueueEmpty>
 80095aa:	b3b8      	cbz	r0, 800961c <xQueueReceive+0x11c>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 80095ac:	9901      	ldr	r1, [sp, #4]
 80095ae:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80095b2:	f000 fd63 	bl	800a07c <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 80095b6:	4620      	mov	r0, r4
 80095b8:	f7ff fd0e 	bl	8008fd8 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 80095bc:	f000 fc86 	bl	8009ecc <xTaskResumeAll>
 80095c0:	b948      	cbnz	r0, 80095d6 <xQueueReceive+0xd6>
					portYIELD_WITHIN_API();
 80095c2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80095c6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80095ca:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80095ce:	f3bf 8f4f 	dsb	sy
 80095d2:	f3bf 8f6f 	isb	sy
 80095d6:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 80095d8:	f7ff fb64 	bl	8008ca4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80095dc:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 80095de:	2d00      	cmp	r5, #0
 80095e0:	d0bc      	beq.n	800955c <xQueueReceive+0x5c>
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 80095e2:	4639      	mov	r1, r7
 80095e4:	4620      	mov	r0, r4
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80095e6:	3d01      	subs	r5, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 80095e8:	f7ff fce0 	bl	8008fac <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80095ec:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80095ee:	6923      	ldr	r3, [r4, #16]
 80095f0:	b173      	cbz	r3, 8009610 <xQueueReceive+0x110>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80095f2:	f104 0010 	add.w	r0, r4, #16
 80095f6:	f000 fd79 	bl	800a0ec <xTaskRemoveFromEventList>
 80095fa:	b148      	cbz	r0, 8009610 <xQueueReceive+0x110>
						queueYIELD_IF_USING_PREEMPTION();
 80095fc:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009600:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009604:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009608:	f3bf 8f4f 	dsb	sy
 800960c:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8009610:	f7ff fb68 	bl	8008ce4 <vPortExitCritical>
				return pdPASS;
 8009614:	2001      	movs	r0, #1
}
 8009616:	b004      	add	sp, #16
 8009618:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
				prvUnlockQueue( pxQueue );
 800961c:	4620      	mov	r0, r4
 800961e:	f7ff fcdb 	bl	8008fd8 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8009622:	f000 fc53 	bl	8009ecc <xTaskResumeAll>
 8009626:	e7d6      	b.n	80095d6 <xQueueReceive+0xd6>
			prvUnlockQueue( pxQueue );
 8009628:	4620      	mov	r0, r4
 800962a:	f7ff fcd5 	bl	8008fd8 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800962e:	f000 fc4d 	bl	8009ecc <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8009632:	4620      	mov	r0, r4
 8009634:	f7ff fc7a 	bl	8008f2c <prvIsQueueEmpty>
 8009638:	2800      	cmp	r0, #0
 800963a:	d0cc      	beq.n	80095d6 <xQueueReceive+0xd6>
 800963c:	e792      	b.n	8009564 <xQueueReceive+0x64>

0800963e <xQueueSemaphoreTake>:
{
 800963e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009640:	b085      	sub	sp, #20
	configASSERT( ( pxQueue ) );
 8009642:	4604      	mov	r4, r0
{
 8009644:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 8009646:	b940      	cbnz	r0, 800965a <xQueueSemaphoreTake+0x1c>
 8009648:	f04f 0350 	mov.w	r3, #80	; 0x50
 800964c:	f383 8811 	msr	BASEPRI, r3
 8009650:	f3bf 8f6f 	isb	sy
 8009654:	f3bf 8f4f 	dsb	sy
 8009658:	e7fe      	b.n	8009658 <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 800965a:	6c05      	ldr	r5, [r0, #64]	; 0x40
 800965c:	b145      	cbz	r5, 8009670 <xQueueSemaphoreTake+0x32>
 800965e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009662:	f383 8811 	msr	BASEPRI, r3
 8009666:	f3bf 8f6f 	isb	sy
 800966a:	f3bf 8f4f 	dsb	sy
 800966e:	e7fe      	b.n	800966e <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8009670:	f000 fdce 	bl	800a210 <xTaskGetSchedulerState>
 8009674:	4606      	mov	r6, r0
 8009676:	b950      	cbnz	r0, 800968e <xQueueSemaphoreTake+0x50>
 8009678:	9b01      	ldr	r3, [sp, #4]
 800967a:	b15b      	cbz	r3, 8009694 <xQueueSemaphoreTake+0x56>
 800967c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009680:	f383 8811 	msr	BASEPRI, r3
 8009684:	f3bf 8f6f 	isb	sy
 8009688:	f3bf 8f4f 	dsb	sy
 800968c:	e7fe      	b.n	800968c <xQueueSemaphoreTake+0x4e>
 800968e:	462e      	mov	r6, r5
		prvLockQueue( pxQueue );
 8009690:	2700      	movs	r7, #0
 8009692:	e053      	b.n	800973c <xQueueSemaphoreTake+0xfe>
 8009694:	4605      	mov	r5, r0
 8009696:	e7fb      	b.n	8009690 <xQueueSemaphoreTake+0x52>
				if( xTicksToWait == ( TickType_t ) 0 )
 8009698:	9b01      	ldr	r3, [sp, #4]
 800969a:	b963      	cbnz	r3, 80096b6 <xQueueSemaphoreTake+0x78>
						configASSERT( xInheritanceOccurred == pdFALSE );
 800969c:	b145      	cbz	r5, 80096b0 <xQueueSemaphoreTake+0x72>
 800969e:	f04f 0350 	mov.w	r3, #80	; 0x50
 80096a2:	f383 8811 	msr	BASEPRI, r3
 80096a6:	f3bf 8f6f 	isb	sy
 80096aa:	f3bf 8f4f 	dsb	sy
 80096ae:	e7fe      	b.n	80096ae <xQueueSemaphoreTake+0x70>
					taskEXIT_CRITICAL();
 80096b0:	f7ff fb18 	bl	8008ce4 <vPortExitCritical>
					return errQUEUE_EMPTY;
 80096b4:	e062      	b.n	800977c <xQueueSemaphoreTake+0x13e>
				else if( xEntryTimeSet == pdFALSE )
 80096b6:	b916      	cbnz	r6, 80096be <xQueueSemaphoreTake+0x80>
					vTaskInternalSetTimeOutState( &xTimeOut );
 80096b8:	a802      	add	r0, sp, #8
 80096ba:	f000 fd5b 	bl	800a174 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 80096be:	f7ff fb11 	bl	8008ce4 <vPortExitCritical>
		vTaskSuspendAll();
 80096c2:	f000 fb5f 	bl	8009d84 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 80096c6:	f7ff faed 	bl	8008ca4 <vPortEnterCritical>
 80096ca:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 80096ce:	2bff      	cmp	r3, #255	; 0xff
 80096d0:	bf08      	it	eq
 80096d2:	f884 7044 	strbeq.w	r7, [r4, #68]	; 0x44
 80096d6:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 80096da:	2bff      	cmp	r3, #255	; 0xff
 80096dc:	bf08      	it	eq
 80096de:	f884 7045 	strbeq.w	r7, [r4, #69]	; 0x45
 80096e2:	f7ff faff 	bl	8008ce4 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 80096e6:	a901      	add	r1, sp, #4
 80096e8:	a802      	add	r0, sp, #8
 80096ea:	f000 fd4f 	bl	800a18c <xTaskCheckForTimeOut>
 80096ee:	2800      	cmp	r0, #0
 80096f0:	d14d      	bne.n	800978e <xQueueSemaphoreTake+0x150>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 80096f2:	4620      	mov	r0, r4
 80096f4:	f7ff fc1a 	bl	8008f2c <prvIsQueueEmpty>
 80096f8:	2800      	cmp	r0, #0
 80096fa:	d042      	beq.n	8009782 <xQueueSemaphoreTake+0x144>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 80096fc:	6823      	ldr	r3, [r4, #0]
 80096fe:	b93b      	cbnz	r3, 8009710 <xQueueSemaphoreTake+0xd2>
						taskENTER_CRITICAL();
 8009700:	f7ff fad0 	bl	8008ca4 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 8009704:	68a0      	ldr	r0, [r4, #8]
 8009706:	f000 fd93 	bl	800a230 <xTaskPriorityInherit>
 800970a:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 800970c:	f7ff faea 	bl	8008ce4 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8009710:	9901      	ldr	r1, [sp, #4]
 8009712:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8009716:	f000 fcb1 	bl	800a07c <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800971a:	4620      	mov	r0, r4
 800971c:	f7ff fc5c 	bl	8008fd8 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8009720:	f000 fbd4 	bl	8009ecc <xTaskResumeAll>
 8009724:	b948      	cbnz	r0, 800973a <xQueueSemaphoreTake+0xfc>
					portYIELD_WITHIN_API();
 8009726:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800972a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800972e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009732:	f3bf 8f4f 	dsb	sy
 8009736:	f3bf 8f6f 	isb	sy
 800973a:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 800973c:	f7ff fab2 	bl	8008ca4 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 8009740:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 8009742:	2b00      	cmp	r3, #0
 8009744:	d0a8      	beq.n	8009698 <xQueueSemaphoreTake+0x5a>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 8009746:	3b01      	subs	r3, #1
 8009748:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800974a:	6823      	ldr	r3, [r4, #0]
 800974c:	b913      	cbnz	r3, 8009754 <xQueueSemaphoreTake+0x116>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 800974e:	f000 fe47 	bl	800a3e0 <pvTaskIncrementMutexHeldCount>
 8009752:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8009754:	6923      	ldr	r3, [r4, #16]
 8009756:	b173      	cbz	r3, 8009776 <xQueueSemaphoreTake+0x138>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8009758:	f104 0010 	add.w	r0, r4, #16
 800975c:	f000 fcc6 	bl	800a0ec <xTaskRemoveFromEventList>
 8009760:	b148      	cbz	r0, 8009776 <xQueueSemaphoreTake+0x138>
						queueYIELD_IF_USING_PREEMPTION();
 8009762:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009766:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800976a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800976e:	f3bf 8f4f 	dsb	sy
 8009772:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8009776:	f7ff fab5 	bl	8008ce4 <vPortExitCritical>
				return pdPASS;
 800977a:	2501      	movs	r5, #1
}
 800977c:	4628      	mov	r0, r5
 800977e:	b005      	add	sp, #20
 8009780:	bdf0      	pop	{r4, r5, r6, r7, pc}
				prvUnlockQueue( pxQueue );
 8009782:	4620      	mov	r0, r4
 8009784:	f7ff fc28 	bl	8008fd8 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8009788:	f000 fba0 	bl	8009ecc <xTaskResumeAll>
 800978c:	e7d5      	b.n	800973a <xQueueSemaphoreTake+0xfc>
			prvUnlockQueue( pxQueue );
 800978e:	4620      	mov	r0, r4
 8009790:	f7ff fc22 	bl	8008fd8 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8009794:	f000 fb9a 	bl	8009ecc <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8009798:	4620      	mov	r0, r4
 800979a:	f7ff fbc7 	bl	8008f2c <prvIsQueueEmpty>
 800979e:	2800      	cmp	r0, #0
 80097a0:	d0cb      	beq.n	800973a <xQueueSemaphoreTake+0xfc>
					if( xInheritanceOccurred != pdFALSE )
 80097a2:	2d00      	cmp	r5, #0
 80097a4:	d0ea      	beq.n	800977c <xQueueSemaphoreTake+0x13e>
						taskENTER_CRITICAL();
 80097a6:	f7ff fa7d 	bl	8008ca4 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 80097aa:	6a61      	ldr	r1, [r4, #36]	; 0x24
 80097ac:	b119      	cbz	r1, 80097b6 <xQueueSemaphoreTake+0x178>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 80097ae:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80097b0:	6819      	ldr	r1, [r3, #0]
 80097b2:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 80097b6:	68a0      	ldr	r0, [r4, #8]
 80097b8:	f000 fdc0 	bl	800a33c <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 80097bc:	2500      	movs	r5, #0
						taskEXIT_CRITICAL();
 80097be:	f7ff fa91 	bl	8008ce4 <vPortExitCritical>
 80097c2:	e7db      	b.n	800977c <xQueueSemaphoreTake+0x13e>

080097c4 <xQueueReceiveFromISR>:
{
 80097c4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80097c8:	4689      	mov	r9, r1
 80097ca:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 80097cc:	4605      	mov	r5, r0
 80097ce:	b940      	cbnz	r0, 80097e2 <xQueueReceiveFromISR+0x1e>
 80097d0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80097d4:	f383 8811 	msr	BASEPRI, r3
 80097d8:	f3bf 8f6f 	isb	sy
 80097dc:	f3bf 8f4f 	dsb	sy
 80097e0:	e7fe      	b.n	80097e0 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80097e2:	b951      	cbnz	r1, 80097fa <xQueueReceiveFromISR+0x36>
 80097e4:	6c03      	ldr	r3, [r0, #64]	; 0x40
 80097e6:	b143      	cbz	r3, 80097fa <xQueueReceiveFromISR+0x36>
 80097e8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80097ec:	f383 8811 	msr	BASEPRI, r3
 80097f0:	f3bf 8f6f 	isb	sy
 80097f4:	f3bf 8f4f 	dsb	sy
 80097f8:	e7fe      	b.n	80097f8 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 80097fa:	f7ff fb69 	bl	8008ed0 <vPortValidateInterruptPriority>
	__asm volatile
 80097fe:	f3ef 8711 	mrs	r7, BASEPRI
 8009802:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009806:	f383 8811 	msr	BASEPRI, r3
 800980a:	f3bf 8f6f 	isb	sy
 800980e:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8009812:	6bac      	ldr	r4, [r5, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8009814:	b31c      	cbz	r4, 800985e <xQueueReceiveFromISR+0x9a>
			const int8_t cRxLock = pxQueue->cRxLock;
 8009816:	f895 6044 	ldrb.w	r6, [r5, #68]	; 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 800981a:	4649      	mov	r1, r9
			const int8_t cRxLock = pxQueue->cRxLock;
 800981c:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 800981e:	4628      	mov	r0, r5
 8009820:	f7ff fbc4 	bl	8008fac <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8009824:	3c01      	subs	r4, #1
			if( cRxLock == queueUNLOCKED )
 8009826:	1c73      	adds	r3, r6, #1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8009828:	63ac      	str	r4, [r5, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 800982a:	d113      	bne.n	8009854 <xQueueReceiveFromISR+0x90>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800982c:	692b      	ldr	r3, [r5, #16]
 800982e:	b90b      	cbnz	r3, 8009834 <xQueueReceiveFromISR+0x70>
			xReturn = pdPASS;
 8009830:	2001      	movs	r0, #1
 8009832:	e00b      	b.n	800984c <xQueueReceiveFromISR+0x88>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8009834:	f105 0010 	add.w	r0, r5, #16
 8009838:	f000 fc58 	bl	800a0ec <xTaskRemoveFromEventList>
 800983c:	2800      	cmp	r0, #0
 800983e:	d0f7      	beq.n	8009830 <xQueueReceiveFromISR+0x6c>
						if( pxHigherPriorityTaskWoken != NULL )
 8009840:	f1b8 0f00 	cmp.w	r8, #0
 8009844:	d0f4      	beq.n	8009830 <xQueueReceiveFromISR+0x6c>
							*pxHigherPriorityTaskWoken = pdTRUE;
 8009846:	2001      	movs	r0, #1
 8009848:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 800984c:	f387 8811 	msr	BASEPRI, r7
}
 8009850:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 8009854:	3601      	adds	r6, #1
 8009856:	b276      	sxtb	r6, r6
 8009858:	f885 6044 	strb.w	r6, [r5, #68]	; 0x44
 800985c:	e7e8      	b.n	8009830 <xQueueReceiveFromISR+0x6c>
			xReturn = pdFAIL;
 800985e:	4620      	mov	r0, r4
 8009860:	e7f4      	b.n	800984c <xQueueReceiveFromISR+0x88>
	...

08009864 <vQueueAddToRegistry>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
	{
 8009864:	b510      	push	{r4, lr}

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 8009866:	4a07      	ldr	r2, [pc, #28]	; (8009884 <vQueueAddToRegistry+0x20>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8009868:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800986a:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
 800986e:	b92c      	cbnz	r4, 800987c <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 8009870:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 8009874:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 8009878:	6058      	str	r0, [r3, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 800987a:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800987c:	3301      	adds	r3, #1
 800987e:	2b08      	cmp	r3, #8
 8009880:	d1f3      	bne.n	800986a <vQueueAddToRegistry+0x6>
 8009882:	e7fa      	b.n	800987a <vQueueAddToRegistry+0x16>
 8009884:	20014f44 	.word	0x20014f44

08009888 <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueUnregisterQueue( QueueHandle_t xQueue )
	{
 8009888:	b510      	push	{r4, lr}

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800988a:	4a08      	ldr	r2, [pc, #32]	; (80098ac <vQueueUnregisterQueue+0x24>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800988c:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800988e:	eb02 01c3 	add.w	r1, r2, r3, lsl #3
 8009892:	684c      	ldr	r4, [r1, #4]
 8009894:	4284      	cmp	r4, r0
 8009896:	d104      	bne.n	80098a2 <vQueueUnregisterQueue+0x1a>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 8009898:	2000      	movs	r0, #0
 800989a:	f842 0033 	str.w	r0, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 800989e:	6048      	str	r0, [r1, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 80098a0:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80098a2:	3301      	adds	r3, #1
 80098a4:	2b08      	cmp	r3, #8
 80098a6:	d1f2      	bne.n	800988e <vQueueUnregisterQueue+0x6>
 80098a8:	e7fa      	b.n	80098a0 <vQueueUnregisterQueue+0x18>
 80098aa:	bf00      	nop
 80098ac:	20014f44 	.word	0x20014f44

080098b0 <vQueueDelete>:
{
 80098b0:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 80098b2:	4604      	mov	r4, r0
 80098b4:	b940      	cbnz	r0, 80098c8 <vQueueDelete+0x18>
	__asm volatile
 80098b6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80098ba:	f383 8811 	msr	BASEPRI, r3
 80098be:	f3bf 8f6f 	isb	sy
 80098c2:	f3bf 8f4f 	dsb	sy
 80098c6:	e7fe      	b.n	80098c6 <vQueueDelete+0x16>
		vQueueUnregisterQueue( pxQueue );
 80098c8:	f7ff ffde 	bl	8009888 <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 80098cc:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 80098d0:	b923      	cbnz	r3, 80098dc <vQueueDelete+0x2c>
			vPortFree( pxQueue );
 80098d2:	4620      	mov	r0, r4
}
 80098d4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 80098d8:	f7ff b902 	b.w	8008ae0 <vPortFree>
}
 80098dc:	bd10      	pop	{r4, pc}

080098de <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 80098de:	b570      	push	{r4, r5, r6, lr}
 80098e0:	4604      	mov	r4, r0
 80098e2:	460d      	mov	r5, r1
 80098e4:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 80098e6:	f7ff f9dd 	bl	8008ca4 <vPortEnterCritical>
 80098ea:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 80098ee:	2bff      	cmp	r3, #255	; 0xff
 80098f0:	bf04      	itt	eq
 80098f2:	2300      	moveq	r3, #0
 80098f4:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 80098f8:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 80098fc:	2bff      	cmp	r3, #255	; 0xff
 80098fe:	bf04      	itt	eq
 8009900:	2300      	moveq	r3, #0
 8009902:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 8009906:	f7ff f9ed 	bl	8008ce4 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 800990a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800990c:	b92b      	cbnz	r3, 800991a <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 800990e:	4632      	mov	r2, r6
 8009910:	4629      	mov	r1, r5
 8009912:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8009916:	f000 fbcb 	bl	800a0b0 <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 800991a:	4620      	mov	r0, r4
	}
 800991c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 8009920:	f7ff bb5a 	b.w	8008fd8 <prvUnlockQueue>

08009924 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 8009924:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009928:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 800992a:	f7ff f9bb 	bl	8008ca4 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 800992e:	4b30      	ldr	r3, [pc, #192]	; (80099f0 <prvAddNewTaskToReadyList+0xcc>)
		if( pxCurrentTCB == NULL )
 8009930:	4e30      	ldr	r6, [pc, #192]	; (80099f4 <prvAddNewTaskToReadyList+0xd0>)
		uxCurrentNumberOfTasks++;
 8009932:	681a      	ldr	r2, [r3, #0]
 8009934:	4f30      	ldr	r7, [pc, #192]	; (80099f8 <prvAddNewTaskToReadyList+0xd4>)
 8009936:	3201      	adds	r2, #1
 8009938:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 800993a:	6835      	ldr	r5, [r6, #0]
 800993c:	2d00      	cmp	r5, #0
 800993e:	d14b      	bne.n	80099d8 <prvAddNewTaskToReadyList+0xb4>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 8009940:	6034      	str	r4, [r6, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 8009942:	681b      	ldr	r3, [r3, #0]
 8009944:	2b01      	cmp	r3, #1
 8009946:	d11f      	bne.n	8009988 <prvAddNewTaskToReadyList+0x64>
 8009948:	46b8      	mov	r8, r7
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800994a:	4640      	mov	r0, r8
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800994c:	3501      	adds	r5, #1
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800994e:	f7ff f8ff 	bl	8008b50 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8009952:	2d38      	cmp	r5, #56	; 0x38
 8009954:	f108 0814 	add.w	r8, r8, #20
 8009958:	d1f7      	bne.n	800994a <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 800995a:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8009a20 <prvAddNewTaskToReadyList+0xfc>
	vListInitialise( &xDelayedTaskList2 );
 800995e:	4d27      	ldr	r5, [pc, #156]	; (80099fc <prvAddNewTaskToReadyList+0xd8>)
	vListInitialise( &xDelayedTaskList1 );
 8009960:	4640      	mov	r0, r8
 8009962:	f7ff f8f5 	bl	8008b50 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 8009966:	4628      	mov	r0, r5
 8009968:	f7ff f8f2 	bl	8008b50 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 800996c:	4824      	ldr	r0, [pc, #144]	; (8009a00 <prvAddNewTaskToReadyList+0xdc>)
 800996e:	f7ff f8ef 	bl	8008b50 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 8009972:	4824      	ldr	r0, [pc, #144]	; (8009a04 <prvAddNewTaskToReadyList+0xe0>)
 8009974:	f7ff f8ec 	bl	8008b50 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 8009978:	4823      	ldr	r0, [pc, #140]	; (8009a08 <prvAddNewTaskToReadyList+0xe4>)
 800997a:	f7ff f8e9 	bl	8008b50 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 800997e:	4b23      	ldr	r3, [pc, #140]	; (8009a0c <prvAddNewTaskToReadyList+0xe8>)
 8009980:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 8009984:	4b22      	ldr	r3, [pc, #136]	; (8009a10 <prvAddNewTaskToReadyList+0xec>)
 8009986:	601d      	str	r5, [r3, #0]
		uxTaskNumber++;
 8009988:	4a22      	ldr	r2, [pc, #136]	; (8009a14 <prvAddNewTaskToReadyList+0xf0>)
 800998a:	6813      	ldr	r3, [r2, #0]
 800998c:	3301      	adds	r3, #1
 800998e:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 8009990:	4a21      	ldr	r2, [pc, #132]	; (8009a18 <prvAddNewTaskToReadyList+0xf4>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 8009992:	6463      	str	r3, [r4, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 8009994:	6811      	ldr	r1, [r2, #0]
 8009996:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8009998:	2014      	movs	r0, #20
 800999a:	428b      	cmp	r3, r1
 800999c:	fb00 7003 	mla	r0, r0, r3, r7
 80099a0:	f104 0104 	add.w	r1, r4, #4
 80099a4:	bf88      	it	hi
 80099a6:	6013      	strhi	r3, [r2, #0]
 80099a8:	f7ff f8e0 	bl	8008b6c <vListInsertEnd>
	taskEXIT_CRITICAL();
 80099ac:	f7ff f99a 	bl	8008ce4 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 80099b0:	4b1a      	ldr	r3, [pc, #104]	; (8009a1c <prvAddNewTaskToReadyList+0xf8>)
 80099b2:	681b      	ldr	r3, [r3, #0]
 80099b4:	b173      	cbz	r3, 80099d4 <prvAddNewTaskToReadyList+0xb0>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 80099b6:	6833      	ldr	r3, [r6, #0]
 80099b8:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80099ba:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80099bc:	429a      	cmp	r2, r3
 80099be:	d209      	bcs.n	80099d4 <prvAddNewTaskToReadyList+0xb0>
			taskYIELD_IF_USING_PREEMPTION();
 80099c0:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80099c4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80099c8:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80099cc:	f3bf 8f4f 	dsb	sy
 80099d0:	f3bf 8f6f 	isb	sy
}
 80099d4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 80099d8:	4b10      	ldr	r3, [pc, #64]	; (8009a1c <prvAddNewTaskToReadyList+0xf8>)
 80099da:	681b      	ldr	r3, [r3, #0]
 80099dc:	2b00      	cmp	r3, #0
 80099de:	d1d3      	bne.n	8009988 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 80099e0:	6833      	ldr	r3, [r6, #0]
 80099e2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80099e4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80099e6:	429a      	cmp	r2, r3
					pxCurrentTCB = pxNewTCB;
 80099e8:	bf98      	it	ls
 80099ea:	6034      	strls	r4, [r6, #0]
 80099ec:	e7cc      	b.n	8009988 <prvAddNewTaskToReadyList+0x64>
 80099ee:	bf00      	nop
 80099f0:	200153f0 	.word	0x200153f0
 80099f4:	20014f84 	.word	0x20014f84
 80099f8:	20014f90 	.word	0x20014f90
 80099fc:	2001541c 	.word	0x2001541c
 8009a00:	20015438 	.word	0x20015438
 8009a04:	20015464 	.word	0x20015464
 8009a08:	20015450 	.word	0x20015450
 8009a0c:	20014f88 	.word	0x20014f88
 8009a10:	20014f8c 	.word	0x20014f8c
 8009a14:	20015400 	.word	0x20015400
 8009a18:	20015404 	.word	0x20015404
 8009a1c:	2001544c 	.word	0x2001544c
 8009a20:	20015408 	.word	0x20015408

08009a24 <prvAddCurrentTaskToDelayedList>:
	}
#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 8009a24:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 8009a26:	4b15      	ldr	r3, [pc, #84]	; (8009a7c <prvAddCurrentTaskToDelayedList+0x58>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009a28:	4e15      	ldr	r6, [pc, #84]	; (8009a80 <prvAddCurrentTaskToDelayedList+0x5c>)
const TickType_t xConstTickCount = xTickCount;
 8009a2a:	681d      	ldr	r5, [r3, #0]
{
 8009a2c:	4604      	mov	r4, r0
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009a2e:	6830      	ldr	r0, [r6, #0]
 8009a30:	3004      	adds	r0, #4
{
 8009a32:	460f      	mov	r7, r1
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009a34:	f7ff f8bd 	bl	8008bb2 <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 8009a38:	1c63      	adds	r3, r4, #1
 8009a3a:	d107      	bne.n	8009a4c <prvAddCurrentTaskToDelayedList+0x28>
 8009a3c:	b137      	cbz	r7, 8009a4c <prvAddCurrentTaskToDelayedList+0x28>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009a3e:	6831      	ldr	r1, [r6, #0]
 8009a40:	4810      	ldr	r0, [pc, #64]	; (8009a84 <prvAddCurrentTaskToDelayedList+0x60>)

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 8009a42:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009a46:	3104      	adds	r1, #4
 8009a48:	f7ff b890 	b.w	8008b6c <vListInsertEnd>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 8009a4c:	6833      	ldr	r3, [r6, #0]
 8009a4e:	192c      	adds	r4, r5, r4
 8009a50:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 8009a52:	d307      	bcc.n	8009a64 <prvAddCurrentTaskToDelayedList+0x40>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009a54:	4b0c      	ldr	r3, [pc, #48]	; (8009a88 <prvAddCurrentTaskToDelayedList+0x64>)
 8009a56:	6818      	ldr	r0, [r3, #0]
 8009a58:	6831      	ldr	r1, [r6, #0]
}
 8009a5a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009a5e:	3104      	adds	r1, #4
 8009a60:	f7ff b890 	b.w	8008b84 <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009a64:	4b09      	ldr	r3, [pc, #36]	; (8009a8c <prvAddCurrentTaskToDelayedList+0x68>)
 8009a66:	6818      	ldr	r0, [r3, #0]
 8009a68:	6831      	ldr	r1, [r6, #0]
 8009a6a:	3104      	adds	r1, #4
 8009a6c:	f7ff f88a 	bl	8008b84 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 8009a70:	4b07      	ldr	r3, [pc, #28]	; (8009a90 <prvAddCurrentTaskToDelayedList+0x6c>)
 8009a72:	681a      	ldr	r2, [r3, #0]
 8009a74:	42a2      	cmp	r2, r4
					xNextTaskUnblockTime = xTimeToWake;
 8009a76:	bf88      	it	hi
 8009a78:	601c      	strhi	r4, [r3, #0]
}
 8009a7a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8009a7c:	20015478 	.word	0x20015478
 8009a80:	20014f84 	.word	0x20014f84
 8009a84:	20015450 	.word	0x20015450
 8009a88:	20014f8c 	.word	0x20014f8c
 8009a8c:	20014f88 	.word	0x20014f88
 8009a90:	20015430 	.word	0x20015430

08009a94 <prvResetNextTaskUnblockTime>:
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8009a94:	4a06      	ldr	r2, [pc, #24]	; (8009ab0 <prvResetNextTaskUnblockTime+0x1c>)
 8009a96:	6813      	ldr	r3, [r2, #0]
 8009a98:	6819      	ldr	r1, [r3, #0]
 8009a9a:	4b06      	ldr	r3, [pc, #24]	; (8009ab4 <prvResetNextTaskUnblockTime+0x20>)
 8009a9c:	b919      	cbnz	r1, 8009aa6 <prvResetNextTaskUnblockTime+0x12>
		xNextTaskUnblockTime = portMAX_DELAY;
 8009a9e:	f04f 32ff 	mov.w	r2, #4294967295
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8009aa2:	601a      	str	r2, [r3, #0]
}
 8009aa4:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009aa6:	6812      	ldr	r2, [r2, #0]
 8009aa8:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8009aaa:	68d2      	ldr	r2, [r2, #12]
 8009aac:	6852      	ldr	r2, [r2, #4]
 8009aae:	e7f8      	b.n	8009aa2 <prvResetNextTaskUnblockTime+0xe>
 8009ab0:	20014f88 	.word	0x20014f88
 8009ab4:	20015430 	.word	0x20015430

08009ab8 <prvDeleteTCB>:
	{
 8009ab8:	b510      	push	{r4, lr}
 8009aba:	4604      	mov	r4, r0
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
 8009abc:	3058      	adds	r0, #88	; 0x58
 8009abe:	f017 fc31 	bl	8021324 <_reclaim_reent>
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8009ac2:	f894 30bd 	ldrb.w	r3, [r4, #189]	; 0xbd
 8009ac6:	b93b      	cbnz	r3, 8009ad8 <prvDeleteTCB+0x20>
				vPortFree( pxTCB->pxStack );
 8009ac8:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8009aca:	f7ff f809 	bl	8008ae0 <vPortFree>
				vPortFree( pxTCB );
 8009ace:	4620      	mov	r0, r4
	}
 8009ad0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 8009ad4:	f7ff b804 	b.w	8008ae0 <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 8009ad8:	2b01      	cmp	r3, #1
 8009ada:	d0f8      	beq.n	8009ace <prvDeleteTCB+0x16>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 8009adc:	2b02      	cmp	r3, #2
 8009ade:	d008      	beq.n	8009af2 <prvDeleteTCB+0x3a>
 8009ae0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009ae4:	f383 8811 	msr	BASEPRI, r3
 8009ae8:	f3bf 8f6f 	isb	sy
 8009aec:	f3bf 8f4f 	dsb	sy
 8009af0:	e7fe      	b.n	8009af0 <prvDeleteTCB+0x38>
	}
 8009af2:	bd10      	pop	{r4, pc}

08009af4 <prvIdleTask>:
{
 8009af4:	b580      	push	{r7, lr}
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8009af6:	4c13      	ldr	r4, [pc, #76]	; (8009b44 <prvIdleTask+0x50>)
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009af8:	4f13      	ldr	r7, [pc, #76]	; (8009b48 <prvIdleTask+0x54>)
				--uxCurrentNumberOfTasks;
 8009afa:	4d14      	ldr	r5, [pc, #80]	; (8009b4c <prvIdleTask+0x58>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8009afc:	6823      	ldr	r3, [r4, #0]
 8009afe:	b973      	cbnz	r3, 8009b1e <prvIdleTask+0x2a>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 8009b00:	4b13      	ldr	r3, [pc, #76]	; (8009b50 <prvIdleTask+0x5c>)
 8009b02:	681b      	ldr	r3, [r3, #0]
 8009b04:	2b01      	cmp	r3, #1
 8009b06:	d9f8      	bls.n	8009afa <prvIdleTask+0x6>
				taskYIELD();
 8009b08:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009b0c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009b10:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009b14:	f3bf 8f4f 	dsb	sy
 8009b18:	f3bf 8f6f 	isb	sy
 8009b1c:	e7ed      	b.n	8009afa <prvIdleTask+0x6>
			taskENTER_CRITICAL();
 8009b1e:	f7ff f8c1 	bl	8008ca4 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009b22:	68fb      	ldr	r3, [r7, #12]
 8009b24:	68de      	ldr	r6, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8009b26:	1d30      	adds	r0, r6, #4
 8009b28:	f7ff f843 	bl	8008bb2 <uxListRemove>
				--uxCurrentNumberOfTasks;
 8009b2c:	682b      	ldr	r3, [r5, #0]
 8009b2e:	3b01      	subs	r3, #1
 8009b30:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 8009b32:	6823      	ldr	r3, [r4, #0]
 8009b34:	3b01      	subs	r3, #1
 8009b36:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 8009b38:	f7ff f8d4 	bl	8008ce4 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 8009b3c:	4630      	mov	r0, r6
 8009b3e:	f7ff ffbb 	bl	8009ab8 <prvDeleteTCB>
 8009b42:	e7db      	b.n	8009afc <prvIdleTask+0x8>
 8009b44:	200153f4 	.word	0x200153f4
 8009b48:	20015464 	.word	0x20015464
 8009b4c:	200153f0 	.word	0x200153f0
 8009b50:	20014f90 	.word	0x20014f90

08009b54 <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8009b54:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009b58:	e9dd 8409 	ldrd	r8, r4, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8009b5c:	ea4f 0982 	mov.w	r9, r2, lsl #2
 8009b60:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8009b62:	4606      	mov	r6, r0
 8009b64:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8009b66:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8009b68:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8009b6a:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8009b6c:	f016 fff6 	bl	8020b5c <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 8009b70:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8009b72:	f1a9 0904 	sub.w	r9, r9, #4
 8009b76:	4491      	add	r9, r2
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 8009b78:	f029 0907 	bic.w	r9, r9, #7
	if( pcName != NULL )
 8009b7c:	2d00      	cmp	r5, #0
 8009b7e:	d042      	beq.n	8009c06 <prvInitialiseNewTask.constprop.0+0xb2>
 8009b80:	1e6b      	subs	r3, r5, #1
 8009b82:	f104 0234 	add.w	r2, r4, #52	; 0x34
 8009b86:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8009b88:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 8009b8c:	f802 0b01 	strb.w	r0, [r2], #1
			if( pcName[ x ] == ( char ) 0x00 )
 8009b90:	b108      	cbz	r0, 8009b96 <prvInitialiseNewTask.constprop.0+0x42>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 8009b92:	42ab      	cmp	r3, r5
 8009b94:	d1f8      	bne.n	8009b88 <prvInitialiseNewTask.constprop.0+0x34>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 8009b96:	2300      	movs	r3, #0
 8009b98:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 8009b9c:	9d08      	ldr	r5, [sp, #32]
 8009b9e:	2d37      	cmp	r5, #55	; 0x37
 8009ba0:	bf28      	it	cs
 8009ba2:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 8009ba4:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 8009ba8:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 8009baa:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8009bac:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 8009bae:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8009bb2:	f7fe ffd8 	bl	8008b66 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009bb6:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 8009bba:	f104 0018 	add.w	r0, r4, #24
 8009bbe:	f7fe ffd2 	bl	8008b66 <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 8009bc2:	f8c4 a0b8 	str.w	sl, [r4, #184]	; 0xb8
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 8009bc6:	2260      	movs	r2, #96	; 0x60
 8009bc8:	4651      	mov	r1, sl
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 8009bca:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009bcc:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 8009bce:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 8009bd0:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 8009bd4:	f884 a0bc 	strb.w	sl, [r4, #188]	; 0xbc
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 8009bd8:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8009bdc:	f016 ffbe 	bl	8020b5c <memset>
 8009be0:	4b0a      	ldr	r3, [pc, #40]	; (8009c0c <prvInitialiseNewTask.constprop.0+0xb8>)
 8009be2:	65e3      	str	r3, [r4, #92]	; 0x5c
 8009be4:	4b0a      	ldr	r3, [pc, #40]	; (8009c10 <prvInitialiseNewTask.constprop.0+0xbc>)
 8009be6:	6623      	str	r3, [r4, #96]	; 0x60
 8009be8:	4b0a      	ldr	r3, [pc, #40]	; (8009c14 <prvInitialiseNewTask.constprop.0+0xc0>)
 8009bea:	6663      	str	r3, [r4, #100]	; 0x64
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 8009bec:	463a      	mov	r2, r7
 8009bee:	4631      	mov	r1, r6
 8009bf0:	4648      	mov	r0, r9
 8009bf2:	f7ff f82d 	bl	8008c50 <pxPortInitialiseStack>
 8009bf6:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 8009bf8:	f1b8 0f00 	cmp.w	r8, #0
 8009bfc:	d001      	beq.n	8009c02 <prvInitialiseNewTask.constprop.0+0xae>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 8009bfe:	f8c8 4000 	str.w	r4, [r8]
}
 8009c02:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 8009c06:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 8009c0a:	e7c7      	b.n	8009b9c <prvInitialiseNewTask.constprop.0+0x48>
 8009c0c:	080246f8 	.word	0x080246f8
 8009c10:	08024718 	.word	0x08024718
 8009c14:	080246d8 	.word	0x080246d8

08009c18 <xTaskCreateStatic>:
	{
 8009c18:	b570      	push	{r4, r5, r6, lr}
 8009c1a:	b086      	sub	sp, #24
 8009c1c:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 8009c20:	b945      	cbnz	r5, 8009c34 <xTaskCreateStatic+0x1c>
 8009c22:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009c26:	f383 8811 	msr	BASEPRI, r3
 8009c2a:	f3bf 8f6f 	isb	sy
 8009c2e:	f3bf 8f4f 	dsb	sy
 8009c32:	e7fe      	b.n	8009c32 <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 8009c34:	b944      	cbnz	r4, 8009c48 <xTaskCreateStatic+0x30>
 8009c36:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009c3a:	f383 8811 	msr	BASEPRI, r3
 8009c3e:	f3bf 8f6f 	isb	sy
 8009c42:	f3bf 8f4f 	dsb	sy
 8009c46:	e7fe      	b.n	8009c46 <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 8009c48:	26c0      	movs	r6, #192	; 0xc0
 8009c4a:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 8009c4c:	9e05      	ldr	r6, [sp, #20]
 8009c4e:	2ec0      	cmp	r6, #192	; 0xc0
 8009c50:	d008      	beq.n	8009c64 <xTaskCreateStatic+0x4c>
 8009c52:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009c56:	f383 8811 	msr	BASEPRI, r3
 8009c5a:	f3bf 8f6f 	isb	sy
 8009c5e:	f3bf 8f4f 	dsb	sy
 8009c62:	e7fe      	b.n	8009c62 <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 8009c64:	6325      	str	r5, [r4, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 8009c66:	2502      	movs	r5, #2
 8009c68:	f884 50bd 	strb.w	r5, [r4, #189]	; 0xbd
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8009c6c:	ad04      	add	r5, sp, #16
 8009c6e:	9501      	str	r5, [sp, #4]
 8009c70:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8009c72:	9402      	str	r4, [sp, #8]
 8009c74:	9500      	str	r5, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 8009c76:	9e05      	ldr	r6, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8009c78:	f7ff ff6c 	bl	8009b54 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8009c7c:	4620      	mov	r0, r4
 8009c7e:	f7ff fe51 	bl	8009924 <prvAddNewTaskToReadyList>
	}
 8009c82:	9804      	ldr	r0, [sp, #16]
 8009c84:	b006      	add	sp, #24
 8009c86:	bd70      	pop	{r4, r5, r6, pc}

08009c88 <xTaskCreate>:
	{
 8009c88:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009c8c:	4607      	mov	r7, r0
 8009c8e:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8009c90:	0090      	lsls	r0, r2, #2
	{
 8009c92:	4688      	mov	r8, r1
 8009c94:	4616      	mov	r6, r2
 8009c96:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8009c98:	f7fe fe90 	bl	80089bc <pvPortMalloc>
			if( pxStack != NULL )
 8009c9c:	4605      	mov	r5, r0
 8009c9e:	b1e8      	cbz	r0, 8009cdc <xTaskCreate+0x54>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 8009ca0:	20c0      	movs	r0, #192	; 0xc0
 8009ca2:	f7fe fe8b 	bl	80089bc <pvPortMalloc>
				if( pxNewTCB != NULL )
 8009ca6:	4604      	mov	r4, r0
 8009ca8:	b1a8      	cbz	r0, 8009cd6 <xTaskCreate+0x4e>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 8009caa:	2300      	movs	r3, #0
 8009cac:	f880 30bd 	strb.w	r3, [r0, #189]	; 0xbd
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8009cb0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
					pxNewTCB->pxStack = pxStack;
 8009cb2:	6305      	str	r5, [r0, #48]	; 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8009cb4:	9301      	str	r3, [sp, #4]
 8009cb6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8009cb8:	9002      	str	r0, [sp, #8]
 8009cba:	9300      	str	r3, [sp, #0]
 8009cbc:	4632      	mov	r2, r6
 8009cbe:	464b      	mov	r3, r9
 8009cc0:	4641      	mov	r1, r8
 8009cc2:	4638      	mov	r0, r7
 8009cc4:	f7ff ff46 	bl	8009b54 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8009cc8:	4620      	mov	r0, r4
 8009cca:	f7ff fe2b 	bl	8009924 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 8009cce:	2001      	movs	r0, #1
	}
 8009cd0:	b005      	add	sp, #20
 8009cd2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 8009cd6:	4628      	mov	r0, r5
 8009cd8:	f7fe ff02 	bl	8008ae0 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 8009cdc:	f04f 30ff 	mov.w	r0, #4294967295
		return xReturn;
 8009ce0:	e7f6      	b.n	8009cd0 <xTaskCreate+0x48>
	...

08009ce4 <vTaskStartScheduler>:
{
 8009ce4:	b510      	push	{r4, lr}
 8009ce6:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 8009ce8:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8009cea:	aa07      	add	r2, sp, #28
 8009cec:	a906      	add	r1, sp, #24
 8009cee:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 8009cf0:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8009cf4:	f7fe fe26 	bl	8008944 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 8009cf8:	9b05      	ldr	r3, [sp, #20]
 8009cfa:	9302      	str	r3, [sp, #8]
 8009cfc:	9b06      	ldr	r3, [sp, #24]
 8009cfe:	9a07      	ldr	r2, [sp, #28]
 8009d00:	4919      	ldr	r1, [pc, #100]	; (8009d68 <vTaskStartScheduler+0x84>)
 8009d02:	481a      	ldr	r0, [pc, #104]	; (8009d6c <vTaskStartScheduler+0x88>)
 8009d04:	e9cd 4300 	strd	r4, r3, [sp]
 8009d08:	4623      	mov	r3, r4
 8009d0a:	f7ff ff85 	bl	8009c18 <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 8009d0e:	b340      	cbz	r0, 8009d62 <vTaskStartScheduler+0x7e>
			xReturn = xTimerCreateTimerTask();
 8009d10:	f000 fbc4 	bl	800a49c <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 8009d14:	2801      	cmp	r0, #1
 8009d16:	d119      	bne.n	8009d4c <vTaskStartScheduler+0x68>
 8009d18:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009d1c:	f383 8811 	msr	BASEPRI, r3
 8009d20:	f3bf 8f6f 	isb	sy
 8009d24:	f3bf 8f4f 	dsb	sy
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 8009d28:	4b11      	ldr	r3, [pc, #68]	; (8009d70 <vTaskStartScheduler+0x8c>)
 8009d2a:	4a12      	ldr	r2, [pc, #72]	; (8009d74 <vTaskStartScheduler+0x90>)
 8009d2c:	681b      	ldr	r3, [r3, #0]
 8009d2e:	3358      	adds	r3, #88	; 0x58
 8009d30:	6013      	str	r3, [r2, #0]
		xNextTaskUnblockTime = portMAX_DELAY;
 8009d32:	4b11      	ldr	r3, [pc, #68]	; (8009d78 <vTaskStartScheduler+0x94>)
 8009d34:	f04f 32ff 	mov.w	r2, #4294967295
 8009d38:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 8009d3a:	4b10      	ldr	r3, [pc, #64]	; (8009d7c <vTaskStartScheduler+0x98>)
 8009d3c:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 8009d3e:	4b10      	ldr	r3, [pc, #64]	; (8009d80 <vTaskStartScheduler+0x9c>)
 8009d40:	601c      	str	r4, [r3, #0]
}
 8009d42:	b008      	add	sp, #32
 8009d44:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		if( xPortStartScheduler() != pdFALSE )
 8009d48:	f7ff b83c 	b.w	8008dc4 <xPortStartScheduler>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 8009d4c:	3001      	adds	r0, #1
 8009d4e:	d108      	bne.n	8009d62 <vTaskStartScheduler+0x7e>
 8009d50:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009d54:	f383 8811 	msr	BASEPRI, r3
 8009d58:	f3bf 8f6f 	isb	sy
 8009d5c:	f3bf 8f4f 	dsb	sy
 8009d60:	e7fe      	b.n	8009d60 <vTaskStartScheduler+0x7c>
}
 8009d62:	b008      	add	sp, #32
 8009d64:	bd10      	pop	{r4, pc}
 8009d66:	bf00      	nop
 8009d68:	08023694 	.word	0x08023694
 8009d6c:	08009af5 	.word	0x08009af5
 8009d70:	20014f84 	.word	0x20014f84
 8009d74:	20000104 	.word	0x20000104
 8009d78:	20015430 	.word	0x20015430
 8009d7c:	2001544c 	.word	0x2001544c
 8009d80:	20015478 	.word	0x20015478

08009d84 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 8009d84:	4a02      	ldr	r2, [pc, #8]	; (8009d90 <vTaskSuspendAll+0xc>)
 8009d86:	6813      	ldr	r3, [r2, #0]
 8009d88:	3301      	adds	r3, #1
 8009d8a:	6013      	str	r3, [r2, #0]
}
 8009d8c:	4770      	bx	lr
 8009d8e:	bf00      	nop
 8009d90:	200153fc 	.word	0x200153fc

08009d94 <xTaskGetTickCount>:
		xTicks = xTickCount;
 8009d94:	4b01      	ldr	r3, [pc, #4]	; (8009d9c <xTaskGetTickCount+0x8>)
 8009d96:	6818      	ldr	r0, [r3, #0]
}
 8009d98:	4770      	bx	lr
 8009d9a:	bf00      	nop
 8009d9c:	20015478 	.word	0x20015478

08009da0 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009da0:	4b3f      	ldr	r3, [pc, #252]	; (8009ea0 <xTaskIncrementTick+0x100>)
 8009da2:	681b      	ldr	r3, [r3, #0]
{
 8009da4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009da8:	2b00      	cmp	r3, #0
 8009daa:	d173      	bne.n	8009e94 <xTaskIncrementTick+0xf4>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 8009dac:	4b3d      	ldr	r3, [pc, #244]	; (8009ea4 <xTaskIncrementTick+0x104>)
 8009dae:	681d      	ldr	r5, [r3, #0]
 8009db0:	3501      	adds	r5, #1
		xTickCount = xConstTickCount;
 8009db2:	601d      	str	r5, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 8009db4:	b9bd      	cbnz	r5, 8009de6 <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 8009db6:	4b3c      	ldr	r3, [pc, #240]	; (8009ea8 <xTaskIncrementTick+0x108>)
 8009db8:	681a      	ldr	r2, [r3, #0]
 8009dba:	6812      	ldr	r2, [r2, #0]
 8009dbc:	b142      	cbz	r2, 8009dd0 <xTaskIncrementTick+0x30>
 8009dbe:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009dc2:	f383 8811 	msr	BASEPRI, r3
 8009dc6:	f3bf 8f6f 	isb	sy
 8009dca:	f3bf 8f4f 	dsb	sy
 8009dce:	e7fe      	b.n	8009dce <xTaskIncrementTick+0x2e>
 8009dd0:	4a36      	ldr	r2, [pc, #216]	; (8009eac <xTaskIncrementTick+0x10c>)
 8009dd2:	6819      	ldr	r1, [r3, #0]
 8009dd4:	6810      	ldr	r0, [r2, #0]
 8009dd6:	6018      	str	r0, [r3, #0]
 8009dd8:	6011      	str	r1, [r2, #0]
 8009dda:	4a35      	ldr	r2, [pc, #212]	; (8009eb0 <xTaskIncrementTick+0x110>)
 8009ddc:	6813      	ldr	r3, [r2, #0]
 8009dde:	3301      	adds	r3, #1
 8009de0:	6013      	str	r3, [r2, #0]
 8009de2:	f7ff fe57 	bl	8009a94 <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 8009de6:	4e33      	ldr	r6, [pc, #204]	; (8009eb4 <xTaskIncrementTick+0x114>)
 8009de8:	4f33      	ldr	r7, [pc, #204]	; (8009eb8 <xTaskIncrementTick+0x118>)
 8009dea:	6833      	ldr	r3, [r6, #0]
 8009dec:	f8df 80d4 	ldr.w	r8, [pc, #212]	; 8009ec4 <xTaskIncrementTick+0x124>
 8009df0:	42ab      	cmp	r3, r5
BaseType_t xSwitchRequired = pdFALSE;
 8009df2:	f04f 0400 	mov.w	r4, #0
		if( xConstTickCount >= xNextTaskUnblockTime )
 8009df6:	d911      	bls.n	8009e1c <xTaskIncrementTick+0x7c>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 8009df8:	f8d8 3000 	ldr.w	r3, [r8]
 8009dfc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009dfe:	2214      	movs	r2, #20
 8009e00:	4353      	muls	r3, r2
 8009e02:	58fb      	ldr	r3, [r7, r3]
				xSwitchRequired = pdTRUE;
 8009e04:	2b02      	cmp	r3, #2
 8009e06:	bf28      	it	cs
 8009e08:	2401      	movcs	r4, #1
		if( xYieldPending != pdFALSE )
 8009e0a:	4b2c      	ldr	r3, [pc, #176]	; (8009ebc <xTaskIncrementTick+0x11c>)
 8009e0c:	681b      	ldr	r3, [r3, #0]
			xSwitchRequired = pdTRUE;
 8009e0e:	2b00      	cmp	r3, #0
}
 8009e10:	bf0c      	ite	eq
 8009e12:	4620      	moveq	r0, r4
 8009e14:	2001      	movne	r0, #1
 8009e16:	b003      	add	sp, #12
 8009e18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8009e1c:	f8df 9088 	ldr.w	r9, [pc, #136]	; 8009ea8 <xTaskIncrementTick+0x108>
					prvAddTaskToReadyList( pxTCB );
 8009e20:	f8df a0a4 	ldr.w	sl, [pc, #164]	; 8009ec8 <xTaskIncrementTick+0x128>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8009e24:	f8d9 3000 	ldr.w	r3, [r9]
 8009e28:	681b      	ldr	r3, [r3, #0]
 8009e2a:	b91b      	cbnz	r3, 8009e34 <xTaskIncrementTick+0x94>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009e2c:	f04f 33ff 	mov.w	r3, #4294967295
 8009e30:	6033      	str	r3, [r6, #0]
					break;
 8009e32:	e7e1      	b.n	8009df8 <xTaskIncrementTick+0x58>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009e34:	f8d9 3000 	ldr.w	r3, [r9]
 8009e38:	68db      	ldr	r3, [r3, #12]
 8009e3a:	f8d3 b00c 	ldr.w	fp, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 8009e3e:	f8db 2004 	ldr.w	r2, [fp, #4]
					if( xConstTickCount < xItemValue )
 8009e42:	4295      	cmp	r5, r2
 8009e44:	d201      	bcs.n	8009e4a <xTaskIncrementTick+0xaa>
						xNextTaskUnblockTime = xItemValue;
 8009e46:	6032      	str	r2, [r6, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 8009e48:	e7d6      	b.n	8009df8 <xTaskIncrementTick+0x58>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8009e4a:	f10b 0104 	add.w	r1, fp, #4
 8009e4e:	4608      	mov	r0, r1
 8009e50:	9101      	str	r1, [sp, #4]
 8009e52:	f7fe feae 	bl	8008bb2 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 8009e56:	f8db 2028 	ldr.w	r2, [fp, #40]	; 0x28
 8009e5a:	9901      	ldr	r1, [sp, #4]
 8009e5c:	b122      	cbz	r2, 8009e68 <xTaskIncrementTick+0xc8>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8009e5e:	f10b 0018 	add.w	r0, fp, #24
 8009e62:	f7fe fea6 	bl	8008bb2 <uxListRemove>
 8009e66:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 8009e68:	f8db 002c 	ldr.w	r0, [fp, #44]	; 0x2c
 8009e6c:	f8da 2000 	ldr.w	r2, [sl]
 8009e70:	2314      	movs	r3, #20
 8009e72:	4290      	cmp	r0, r2
 8009e74:	bf88      	it	hi
 8009e76:	f8ca 0000 	strhi.w	r0, [sl]
 8009e7a:	fb03 7000 	mla	r0, r3, r0, r7
 8009e7e:	f7fe fe75 	bl	8008b6c <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8009e82:	f8d8 1000 	ldr.w	r1, [r8]
 8009e86:	f8db 202c 	ldr.w	r2, [fp, #44]	; 0x2c
 8009e8a:	6acb      	ldr	r3, [r1, #44]	; 0x2c
							xSwitchRequired = pdTRUE;
 8009e8c:	429a      	cmp	r2, r3
 8009e8e:	bf28      	it	cs
 8009e90:	2401      	movcs	r4, #1
 8009e92:	e7c7      	b.n	8009e24 <xTaskIncrementTick+0x84>
		++uxPendedTicks;
 8009e94:	4a0a      	ldr	r2, [pc, #40]	; (8009ec0 <xTaskIncrementTick+0x120>)
 8009e96:	6813      	ldr	r3, [r2, #0]
 8009e98:	3301      	adds	r3, #1
 8009e9a:	6013      	str	r3, [r2, #0]
BaseType_t xSwitchRequired = pdFALSE;
 8009e9c:	2400      	movs	r4, #0
 8009e9e:	e7b4      	b.n	8009e0a <xTaskIncrementTick+0x6a>
 8009ea0:	200153fc 	.word	0x200153fc
 8009ea4:	20015478 	.word	0x20015478
 8009ea8:	20014f88 	.word	0x20014f88
 8009eac:	20014f8c 	.word	0x20014f8c
 8009eb0:	20015434 	.word	0x20015434
 8009eb4:	20015430 	.word	0x20015430
 8009eb8:	20014f90 	.word	0x20014f90
 8009ebc:	2001547c 	.word	0x2001547c
 8009ec0:	200153f8 	.word	0x200153f8
 8009ec4:	20014f84 	.word	0x20014f84
 8009ec8:	20015404 	.word	0x20015404

08009ecc <xTaskResumeAll>:
{
 8009ecc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	configASSERT( uxSchedulerSuspended );
 8009ece:	4c31      	ldr	r4, [pc, #196]	; (8009f94 <xTaskResumeAll+0xc8>)
 8009ed0:	6823      	ldr	r3, [r4, #0]
 8009ed2:	b943      	cbnz	r3, 8009ee6 <xTaskResumeAll+0x1a>
 8009ed4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009ed8:	f383 8811 	msr	BASEPRI, r3
 8009edc:	f3bf 8f6f 	isb	sy
 8009ee0:	f3bf 8f4f 	dsb	sy
 8009ee4:	e7fe      	b.n	8009ee4 <xTaskResumeAll+0x18>
	taskENTER_CRITICAL();
 8009ee6:	f7fe fedd 	bl	8008ca4 <vPortEnterCritical>
		--uxSchedulerSuspended;
 8009eea:	6823      	ldr	r3, [r4, #0]
 8009eec:	3b01      	subs	r3, #1
 8009eee:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009ef0:	6824      	ldr	r4, [r4, #0]
 8009ef2:	b12c      	cbz	r4, 8009f00 <xTaskResumeAll+0x34>
BaseType_t xAlreadyYielded = pdFALSE;
 8009ef4:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8009ef6:	f7fe fef5 	bl	8008ce4 <vPortExitCritical>
}
 8009efa:	4620      	mov	r0, r4
 8009efc:	b003      	add	sp, #12
 8009efe:	bdf0      	pop	{r4, r5, r6, r7, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 8009f00:	4b25      	ldr	r3, [pc, #148]	; (8009f98 <xTaskResumeAll+0xcc>)
 8009f02:	681b      	ldr	r3, [r3, #0]
 8009f04:	2b00      	cmp	r3, #0
 8009f06:	d0f5      	beq.n	8009ef4 <xTaskResumeAll+0x28>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8009f08:	4d24      	ldr	r5, [pc, #144]	; (8009f9c <xTaskResumeAll+0xd0>)
					prvAddTaskToReadyList( pxTCB );
 8009f0a:	4e25      	ldr	r6, [pc, #148]	; (8009fa0 <xTaskResumeAll+0xd4>)
 8009f0c:	4f25      	ldr	r7, [pc, #148]	; (8009fa4 <xTaskResumeAll+0xd8>)
 8009f0e:	e01e      	b.n	8009f4e <xTaskResumeAll+0x82>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009f10:	68eb      	ldr	r3, [r5, #12]
 8009f12:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8009f14:	f104 0018 	add.w	r0, r4, #24
 8009f18:	f7fe fe4b 	bl	8008bb2 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8009f1c:	1d21      	adds	r1, r4, #4
 8009f1e:	4608      	mov	r0, r1
 8009f20:	9101      	str	r1, [sp, #4]
 8009f22:	f7fe fe46 	bl	8008bb2 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 8009f26:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8009f28:	6832      	ldr	r2, [r6, #0]
 8009f2a:	9901      	ldr	r1, [sp, #4]
 8009f2c:	2014      	movs	r0, #20
 8009f2e:	4293      	cmp	r3, r2
 8009f30:	fb00 7003 	mla	r0, r0, r3, r7
 8009f34:	bf88      	it	hi
 8009f36:	6033      	strhi	r3, [r6, #0]
 8009f38:	f7fe fe18 	bl	8008b6c <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8009f3c:	4b1a      	ldr	r3, [pc, #104]	; (8009fa8 <xTaskResumeAll+0xdc>)
 8009f3e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8009f40:	681b      	ldr	r3, [r3, #0]
 8009f42:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009f44:	429a      	cmp	r2, r3
 8009f46:	d302      	bcc.n	8009f4e <xTaskResumeAll+0x82>
						xYieldPending = pdTRUE;
 8009f48:	4b18      	ldr	r3, [pc, #96]	; (8009fac <xTaskResumeAll+0xe0>)
 8009f4a:	2201      	movs	r2, #1
 8009f4c:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8009f4e:	682b      	ldr	r3, [r5, #0]
 8009f50:	2b00      	cmp	r3, #0
 8009f52:	d1dd      	bne.n	8009f10 <xTaskResumeAll+0x44>
				if( pxTCB != NULL )
 8009f54:	b10c      	cbz	r4, 8009f5a <xTaskResumeAll+0x8e>
					prvResetNextTaskUnblockTime();
 8009f56:	f7ff fd9d 	bl	8009a94 <prvResetNextTaskUnblockTime>
					UBaseType_t uxPendedCounts = uxPendedTicks; /* Non-volatile copy. */
 8009f5a:	4d15      	ldr	r5, [pc, #84]	; (8009fb0 <xTaskResumeAll+0xe4>)
 8009f5c:	682c      	ldr	r4, [r5, #0]
					if( uxPendedCounts > ( UBaseType_t ) 0U )
 8009f5e:	b144      	cbz	r4, 8009f72 <xTaskResumeAll+0xa6>
								xYieldPending = pdTRUE;
 8009f60:	4e12      	ldr	r6, [pc, #72]	; (8009fac <xTaskResumeAll+0xe0>)
 8009f62:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 8009f64:	f7ff ff1c 	bl	8009da0 <xTaskIncrementTick>
 8009f68:	b100      	cbz	r0, 8009f6c <xTaskResumeAll+0xa0>
								xYieldPending = pdTRUE;
 8009f6a:	6037      	str	r7, [r6, #0]
						} while( uxPendedCounts > ( UBaseType_t ) 0U );
 8009f6c:	3c01      	subs	r4, #1
 8009f6e:	d1f9      	bne.n	8009f64 <xTaskResumeAll+0x98>
						uxPendedTicks = 0;
 8009f70:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 8009f72:	4b0e      	ldr	r3, [pc, #56]	; (8009fac <xTaskResumeAll+0xe0>)
 8009f74:	681b      	ldr	r3, [r3, #0]
 8009f76:	2b00      	cmp	r3, #0
 8009f78:	d0bc      	beq.n	8009ef4 <xTaskResumeAll+0x28>
					taskYIELD_IF_USING_PREEMPTION();
 8009f7a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009f7e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009f82:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009f86:	f3bf 8f4f 	dsb	sy
 8009f8a:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 8009f8e:	2401      	movs	r4, #1
 8009f90:	e7b1      	b.n	8009ef6 <xTaskResumeAll+0x2a>
 8009f92:	bf00      	nop
 8009f94:	200153fc 	.word	0x200153fc
 8009f98:	200153f0 	.word	0x200153f0
 8009f9c:	20015438 	.word	0x20015438
 8009fa0:	20015404 	.word	0x20015404
 8009fa4:	20014f90 	.word	0x20014f90
 8009fa8:	20014f84 	.word	0x20014f84
 8009fac:	2001547c 	.word	0x2001547c
 8009fb0:	200153f8 	.word	0x200153f8

08009fb4 <vTaskDelay>:
	{
 8009fb4:	b508      	push	{r3, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 8009fb6:	b950      	cbnz	r0, 8009fce <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 8009fb8:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009fbc:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009fc0:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009fc4:	f3bf 8f4f 	dsb	sy
 8009fc8:	f3bf 8f6f 	isb	sy
	}
 8009fcc:	bd08      	pop	{r3, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 8009fce:	4b0a      	ldr	r3, [pc, #40]	; (8009ff8 <vTaskDelay+0x44>)
 8009fd0:	6819      	ldr	r1, [r3, #0]
 8009fd2:	b141      	cbz	r1, 8009fe6 <vTaskDelay+0x32>
 8009fd4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009fd8:	f383 8811 	msr	BASEPRI, r3
 8009fdc:	f3bf 8f6f 	isb	sy
 8009fe0:	f3bf 8f4f 	dsb	sy
 8009fe4:	e7fe      	b.n	8009fe4 <vTaskDelay+0x30>
			vTaskSuspendAll();
 8009fe6:	f7ff fecd 	bl	8009d84 <vTaskSuspendAll>
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 8009fea:	f7ff fd1b 	bl	8009a24 <prvAddCurrentTaskToDelayedList>
			xAlreadyYielded = xTaskResumeAll();
 8009fee:	f7ff ff6d 	bl	8009ecc <xTaskResumeAll>
		if( xAlreadyYielded == pdFALSE )
 8009ff2:	2800      	cmp	r0, #0
 8009ff4:	d0e0      	beq.n	8009fb8 <vTaskDelay+0x4>
 8009ff6:	e7e9      	b.n	8009fcc <vTaskDelay+0x18>
 8009ff8:	200153fc 	.word	0x200153fc

08009ffc <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 8009ffc:	4b19      	ldr	r3, [pc, #100]	; (800a064 <vTaskSwitchContext+0x68>)
 8009ffe:	681a      	ldr	r2, [r3, #0]
 800a000:	4b19      	ldr	r3, [pc, #100]	; (800a068 <vTaskSwitchContext+0x6c>)
{
 800a002:	b570      	push	{r4, r5, r6, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800a004:	b112      	cbz	r2, 800a00c <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 800a006:	2201      	movs	r2, #1
 800a008:	601a      	str	r2, [r3, #0]
}
 800a00a:	bd70      	pop	{r4, r5, r6, pc}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a00c:	4d17      	ldr	r5, [pc, #92]	; (800a06c <vTaskSwitchContext+0x70>)
		xYieldPending = pdFALSE;
 800a00e:	601a      	str	r2, [r3, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a010:	682a      	ldr	r2, [r5, #0]
 800a012:	4917      	ldr	r1, [pc, #92]	; (800a070 <vTaskSwitchContext+0x74>)
 800a014:	2614      	movs	r6, #20
 800a016:	fb06 f302 	mul.w	r3, r6, r2
 800a01a:	18c8      	adds	r0, r1, r3
 800a01c:	58cc      	ldr	r4, [r1, r3]
 800a01e:	b1ac      	cbz	r4, 800a04c <vTaskSwitchContext+0x50>
 800a020:	6844      	ldr	r4, [r0, #4]
 800a022:	3308      	adds	r3, #8
 800a024:	6864      	ldr	r4, [r4, #4]
 800a026:	6044      	str	r4, [r0, #4]
 800a028:	440b      	add	r3, r1
 800a02a:	429c      	cmp	r4, r3
 800a02c:	bf04      	itt	eq
 800a02e:	6863      	ldreq	r3, [r4, #4]
 800a030:	6043      	streq	r3, [r0, #4]
 800a032:	2314      	movs	r3, #20
 800a034:	fb03 1102 	mla	r1, r3, r2, r1
 800a038:	684b      	ldr	r3, [r1, #4]
 800a03a:	68d9      	ldr	r1, [r3, #12]
 800a03c:	4b0d      	ldr	r3, [pc, #52]	; (800a074 <vTaskSwitchContext+0x78>)
 800a03e:	6019      	str	r1, [r3, #0]
 800a040:	602a      	str	r2, [r5, #0]
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800a042:	681b      	ldr	r3, [r3, #0]
 800a044:	4a0c      	ldr	r2, [pc, #48]	; (800a078 <vTaskSwitchContext+0x7c>)
 800a046:	3358      	adds	r3, #88	; 0x58
 800a048:	6013      	str	r3, [r2, #0]
}
 800a04a:	e7de      	b.n	800a00a <vTaskSwitchContext+0xe>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a04c:	b942      	cbnz	r2, 800a060 <vTaskSwitchContext+0x64>
 800a04e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a052:	f383 8811 	msr	BASEPRI, r3
 800a056:	f3bf 8f6f 	isb	sy
 800a05a:	f3bf 8f4f 	dsb	sy
 800a05e:	e7fe      	b.n	800a05e <vTaskSwitchContext+0x62>
 800a060:	3a01      	subs	r2, #1
 800a062:	e7d8      	b.n	800a016 <vTaskSwitchContext+0x1a>
 800a064:	200153fc 	.word	0x200153fc
 800a068:	2001547c 	.word	0x2001547c
 800a06c:	20015404 	.word	0x20015404
 800a070:	20014f90 	.word	0x20014f90
 800a074:	20014f84 	.word	0x20014f84
 800a078:	20000104 	.word	0x20000104

0800a07c <vTaskPlaceOnEventList>:
{
 800a07c:	b510      	push	{r4, lr}
 800a07e:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 800a080:	b940      	cbnz	r0, 800a094 <vTaskPlaceOnEventList+0x18>
 800a082:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a086:	f383 8811 	msr	BASEPRI, r3
 800a08a:	f3bf 8f6f 	isb	sy
 800a08e:	f3bf 8f4f 	dsb	sy
 800a092:	e7fe      	b.n	800a092 <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800a094:	4b05      	ldr	r3, [pc, #20]	; (800a0ac <vTaskPlaceOnEventList+0x30>)
 800a096:	6819      	ldr	r1, [r3, #0]
 800a098:	3118      	adds	r1, #24
 800a09a:	f7fe fd73 	bl	8008b84 <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800a09e:	4620      	mov	r0, r4
 800a0a0:	2101      	movs	r1, #1
}
 800a0a2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800a0a6:	f7ff bcbd 	b.w	8009a24 <prvAddCurrentTaskToDelayedList>
 800a0aa:	bf00      	nop
 800a0ac:	20014f84 	.word	0x20014f84

0800a0b0 <vTaskPlaceOnEventListRestricted>:
	{
 800a0b0:	b538      	push	{r3, r4, r5, lr}
 800a0b2:	460d      	mov	r5, r1
 800a0b4:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 800a0b6:	b940      	cbnz	r0, 800a0ca <vTaskPlaceOnEventListRestricted+0x1a>
 800a0b8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a0bc:	f383 8811 	msr	BASEPRI, r3
 800a0c0:	f3bf 8f6f 	isb	sy
 800a0c4:	f3bf 8f4f 	dsb	sy
 800a0c8:	e7fe      	b.n	800a0c8 <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800a0ca:	4b07      	ldr	r3, [pc, #28]	; (800a0e8 <vTaskPlaceOnEventListRestricted+0x38>)
 800a0cc:	6819      	ldr	r1, [r3, #0]
 800a0ce:	3118      	adds	r1, #24
 800a0d0:	f7fe fd4c 	bl	8008b6c <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 800a0d4:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800a0d6:	4621      	mov	r1, r4
 800a0d8:	bf0c      	ite	eq
 800a0da:	4628      	moveq	r0, r5
 800a0dc:	f04f 30ff 	movne.w	r0, #4294967295
	}
 800a0e0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800a0e4:	f7ff bc9e 	b.w	8009a24 <prvAddCurrentTaskToDelayedList>
 800a0e8:	20014f84 	.word	0x20014f84

0800a0ec <xTaskRemoveFromEventList>:
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a0ec:	68c3      	ldr	r3, [r0, #12]
{
 800a0ee:	b513      	push	{r0, r1, r4, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a0f0:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 800a0f2:	b944      	cbnz	r4, 800a106 <xTaskRemoveFromEventList+0x1a>
 800a0f4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a0f8:	f383 8811 	msr	BASEPRI, r3
 800a0fc:	f3bf 8f6f 	isb	sy
 800a100:	f3bf 8f4f 	dsb	sy
 800a104:	e7fe      	b.n	800a104 <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 800a106:	f104 0118 	add.w	r1, r4, #24
 800a10a:	4608      	mov	r0, r1
 800a10c:	9101      	str	r1, [sp, #4]
 800a10e:	f7fe fd50 	bl	8008bb2 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800a112:	4b12      	ldr	r3, [pc, #72]	; (800a15c <xTaskRemoveFromEventList+0x70>)
 800a114:	9901      	ldr	r1, [sp, #4]
 800a116:	681b      	ldr	r3, [r3, #0]
 800a118:	b9eb      	cbnz	r3, 800a156 <xTaskRemoveFromEventList+0x6a>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 800a11a:	1d21      	adds	r1, r4, #4
 800a11c:	4608      	mov	r0, r1
 800a11e:	9101      	str	r1, [sp, #4]
 800a120:	f7fe fd47 	bl	8008bb2 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 800a124:	4a0e      	ldr	r2, [pc, #56]	; (800a160 <xTaskRemoveFromEventList+0x74>)
 800a126:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800a128:	6810      	ldr	r0, [r2, #0]
 800a12a:	9901      	ldr	r1, [sp, #4]
 800a12c:	4283      	cmp	r3, r0
 800a12e:	bf88      	it	hi
 800a130:	6013      	strhi	r3, [r2, #0]
 800a132:	4a0c      	ldr	r2, [pc, #48]	; (800a164 <xTaskRemoveFromEventList+0x78>)
 800a134:	2014      	movs	r0, #20
 800a136:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800a13a:	f7fe fd17 	bl	8008b6c <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 800a13e:	4b0a      	ldr	r3, [pc, #40]	; (800a168 <xTaskRemoveFromEventList+0x7c>)
 800a140:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800a142:	681b      	ldr	r3, [r3, #0]
 800a144:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a146:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 800a148:	bf85      	ittet	hi
 800a14a:	4b08      	ldrhi	r3, [pc, #32]	; (800a16c <xTaskRemoveFromEventList+0x80>)
 800a14c:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 800a14e:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 800a150:	6018      	strhi	r0, [r3, #0]
}
 800a152:	b002      	add	sp, #8
 800a154:	bd10      	pop	{r4, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800a156:	4806      	ldr	r0, [pc, #24]	; (800a170 <xTaskRemoveFromEventList+0x84>)
 800a158:	e7ef      	b.n	800a13a <xTaskRemoveFromEventList+0x4e>
 800a15a:	bf00      	nop
 800a15c:	200153fc 	.word	0x200153fc
 800a160:	20015404 	.word	0x20015404
 800a164:	20014f90 	.word	0x20014f90
 800a168:	20014f84 	.word	0x20014f84
 800a16c:	2001547c 	.word	0x2001547c
 800a170:	20015438 	.word	0x20015438

0800a174 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800a174:	4b03      	ldr	r3, [pc, #12]	; (800a184 <vTaskInternalSetTimeOutState+0x10>)
 800a176:	681b      	ldr	r3, [r3, #0]
 800a178:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800a17a:	4b03      	ldr	r3, [pc, #12]	; (800a188 <vTaskInternalSetTimeOutState+0x14>)
 800a17c:	681b      	ldr	r3, [r3, #0]
 800a17e:	6043      	str	r3, [r0, #4]
}
 800a180:	4770      	bx	lr
 800a182:	bf00      	nop
 800a184:	20015434 	.word	0x20015434
 800a188:	20015478 	.word	0x20015478

0800a18c <xTaskCheckForTimeOut>:
{
 800a18c:	b570      	push	{r4, r5, r6, lr}
 800a18e:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 800a190:	4605      	mov	r5, r0
 800a192:	b940      	cbnz	r0, 800a1a6 <xTaskCheckForTimeOut+0x1a>
 800a194:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a198:	f383 8811 	msr	BASEPRI, r3
 800a19c:	f3bf 8f6f 	isb	sy
 800a1a0:	f3bf 8f4f 	dsb	sy
 800a1a4:	e7fe      	b.n	800a1a4 <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 800a1a6:	b941      	cbnz	r1, 800a1ba <xTaskCheckForTimeOut+0x2e>
 800a1a8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a1ac:	f383 8811 	msr	BASEPRI, r3
 800a1b0:	f3bf 8f6f 	isb	sy
 800a1b4:	f3bf 8f4f 	dsb	sy
 800a1b8:	e7fe      	b.n	800a1b8 <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 800a1ba:	f7fe fd73 	bl	8008ca4 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 800a1be:	4b0f      	ldr	r3, [pc, #60]	; (800a1fc <xTaskCheckForTimeOut+0x70>)
 800a1c0:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 800a1c2:	6823      	ldr	r3, [r4, #0]
 800a1c4:	1c5a      	adds	r2, r3, #1
 800a1c6:	d010      	beq.n	800a1ea <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800a1c8:	480d      	ldr	r0, [pc, #52]	; (800a200 <xTaskCheckForTimeOut+0x74>)
 800a1ca:	682e      	ldr	r6, [r5, #0]
 800a1cc:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800a1ce:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800a1d0:	4286      	cmp	r6, r0
 800a1d2:	d001      	beq.n	800a1d8 <xTaskCheckForTimeOut+0x4c>
 800a1d4:	428a      	cmp	r2, r1
 800a1d6:	d90f      	bls.n	800a1f8 <xTaskCheckForTimeOut+0x6c>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800a1d8:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800a1da:	4283      	cmp	r3, r0
 800a1dc:	d90a      	bls.n	800a1f4 <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 800a1de:	1a5b      	subs	r3, r3, r1
 800a1e0:	4413      	add	r3, r2
 800a1e2:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 800a1e4:	4628      	mov	r0, r5
 800a1e6:	f7ff ffc5 	bl	800a174 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 800a1ea:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 800a1ec:	f7fe fd7a 	bl	8008ce4 <vPortExitCritical>
}
 800a1f0:	4620      	mov	r0, r4
 800a1f2:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 800a1f4:	2300      	movs	r3, #0
 800a1f6:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 800a1f8:	2401      	movs	r4, #1
 800a1fa:	e7f7      	b.n	800a1ec <xTaskCheckForTimeOut+0x60>
 800a1fc:	20015478 	.word	0x20015478
 800a200:	20015434 	.word	0x20015434

0800a204 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 800a204:	4b01      	ldr	r3, [pc, #4]	; (800a20c <vTaskMissedYield+0x8>)
 800a206:	2201      	movs	r2, #1
 800a208:	601a      	str	r2, [r3, #0]
}
 800a20a:	4770      	bx	lr
 800a20c:	2001547c 	.word	0x2001547c

0800a210 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 800a210:	4b05      	ldr	r3, [pc, #20]	; (800a228 <xTaskGetSchedulerState+0x18>)
 800a212:	681b      	ldr	r3, [r3, #0]
 800a214:	b133      	cbz	r3, 800a224 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800a216:	4b05      	ldr	r3, [pc, #20]	; (800a22c <xTaskGetSchedulerState+0x1c>)
 800a218:	681b      	ldr	r3, [r3, #0]
				xReturn = taskSCHEDULER_SUSPENDED;
 800a21a:	2b00      	cmp	r3, #0
 800a21c:	bf0c      	ite	eq
 800a21e:	2002      	moveq	r0, #2
 800a220:	2000      	movne	r0, #0
 800a222:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 800a224:	2001      	movs	r0, #1
	}
 800a226:	4770      	bx	lr
 800a228:	2001544c 	.word	0x2001544c
 800a22c:	200153fc 	.word	0x200153fc

0800a230 <xTaskPriorityInherit>:
	{
 800a230:	b573      	push	{r0, r1, r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 800a232:	4604      	mov	r4, r0
 800a234:	b348      	cbz	r0, 800a28a <xTaskPriorityInherit+0x5a>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 800a236:	4d1c      	ldr	r5, [pc, #112]	; (800a2a8 <xTaskPriorityInherit+0x78>)
 800a238:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800a23a:	682a      	ldr	r2, [r5, #0]
 800a23c:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800a23e:	4293      	cmp	r3, r2
 800a240:	d229      	bcs.n	800a296 <xTaskPriorityInherit+0x66>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a242:	6982      	ldr	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800a244:	4e19      	ldr	r6, [pc, #100]	; (800a2ac <xTaskPriorityInherit+0x7c>)
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a246:	2a00      	cmp	r2, #0
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a248:	bfa1      	itttt	ge
 800a24a:	682a      	ldrge	r2, [r5, #0]
 800a24c:	6ad2      	ldrge	r2, [r2, #44]	; 0x2c
 800a24e:	f1c2 0238 	rsbge	r2, r2, #56	; 0x38
 800a252:	6182      	strge	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800a254:	2214      	movs	r2, #20
 800a256:	fb02 6303 	mla	r3, r2, r3, r6
 800a25a:	6942      	ldr	r2, [r0, #20]
 800a25c:	429a      	cmp	r2, r3
 800a25e:	d116      	bne.n	800a28e <xTaskPriorityInherit+0x5e>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a260:	1d01      	adds	r1, r0, #4
 800a262:	4608      	mov	r0, r1
 800a264:	9101      	str	r1, [sp, #4]
 800a266:	f7fe fca4 	bl	8008bb2 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a26a:	682b      	ldr	r3, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800a26c:	4a10      	ldr	r2, [pc, #64]	; (800a2b0 <xTaskPriorityInherit+0x80>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a26e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800a270:	6810      	ldr	r0, [r2, #0]
 800a272:	9901      	ldr	r1, [sp, #4]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a274:	62e3      	str	r3, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800a276:	4283      	cmp	r3, r0
 800a278:	f04f 0014 	mov.w	r0, #20
 800a27c:	fb00 6003 	mla	r0, r0, r3, r6
 800a280:	bf88      	it	hi
 800a282:	6013      	strhi	r3, [r2, #0]
 800a284:	f7fe fc72 	bl	8008b6c <vListInsertEnd>
				xReturn = pdTRUE;
 800a288:	2001      	movs	r0, #1
	}
 800a28a:	b002      	add	sp, #8
 800a28c:	bd70      	pop	{r4, r5, r6, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a28e:	682b      	ldr	r3, [r5, #0]
 800a290:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a292:	62c3      	str	r3, [r0, #44]	; 0x2c
 800a294:	e7f8      	b.n	800a288 <xTaskPriorityInherit+0x58>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 800a296:	682b      	ldr	r3, [r5, #0]
 800a298:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800a29a:	6adc      	ldr	r4, [r3, #44]	; 0x2c
 800a29c:	42a0      	cmp	r0, r4
 800a29e:	bf2c      	ite	cs
 800a2a0:	2000      	movcs	r0, #0
 800a2a2:	2001      	movcc	r0, #1
 800a2a4:	e7f1      	b.n	800a28a <xTaskPriorityInherit+0x5a>
 800a2a6:	bf00      	nop
 800a2a8:	20014f84 	.word	0x20014f84
 800a2ac:	20014f90 	.word	0x20014f90
 800a2b0:	20015404 	.word	0x20015404

0800a2b4 <xTaskPriorityDisinherit>:
	{
 800a2b4:	b513      	push	{r0, r1, r4, lr}
		if( pxMutexHolder != NULL )
 800a2b6:	b910      	cbnz	r0, 800a2be <xTaskPriorityDisinherit+0xa>
	BaseType_t xReturn = pdFALSE;
 800a2b8:	2000      	movs	r0, #0
	}
 800a2ba:	b002      	add	sp, #8
 800a2bc:	bd10      	pop	{r4, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 800a2be:	4b1c      	ldr	r3, [pc, #112]	; (800a330 <xTaskPriorityDisinherit+0x7c>)
 800a2c0:	681c      	ldr	r4, [r3, #0]
 800a2c2:	4284      	cmp	r4, r0
 800a2c4:	d008      	beq.n	800a2d8 <xTaskPriorityDisinherit+0x24>
 800a2c6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a2ca:	f383 8811 	msr	BASEPRI, r3
 800a2ce:	f3bf 8f6f 	isb	sy
 800a2d2:	f3bf 8f4f 	dsb	sy
 800a2d6:	e7fe      	b.n	800a2d6 <xTaskPriorityDisinherit+0x22>
			configASSERT( pxTCB->uxMutexesHeld );
 800a2d8:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800a2da:	b943      	cbnz	r3, 800a2ee <xTaskPriorityDisinherit+0x3a>
 800a2dc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a2e0:	f383 8811 	msr	BASEPRI, r3
 800a2e4:	f3bf 8f6f 	isb	sy
 800a2e8:	f3bf 8f4f 	dsb	sy
 800a2ec:	e7fe      	b.n	800a2ec <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800a2ee:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800a2f0:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 800a2f2:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800a2f4:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 800a2f6:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800a2f8:	d0de      	beq.n	800a2b8 <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 800a2fa:	2b00      	cmp	r3, #0
 800a2fc:	d1dc      	bne.n	800a2b8 <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a2fe:	1d21      	adds	r1, r4, #4
 800a300:	4608      	mov	r0, r1
 800a302:	9101      	str	r1, [sp, #4]
 800a304:	f7fe fc55 	bl	8008bb2 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800a308:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 800a30a:	9901      	ldr	r1, [sp, #4]
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800a30c:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a30e:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 800a312:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 800a314:	4a07      	ldr	r2, [pc, #28]	; (800a334 <xTaskPriorityDisinherit+0x80>)
 800a316:	6810      	ldr	r0, [r2, #0]
 800a318:	4283      	cmp	r3, r0
 800a31a:	bf88      	it	hi
 800a31c:	6013      	strhi	r3, [r2, #0]
 800a31e:	4a06      	ldr	r2, [pc, #24]	; (800a338 <xTaskPriorityDisinherit+0x84>)
 800a320:	2014      	movs	r0, #20
 800a322:	fb00 2003 	mla	r0, r0, r3, r2
 800a326:	f7fe fc21 	bl	8008b6c <vListInsertEnd>
					xReturn = pdTRUE;
 800a32a:	2001      	movs	r0, #1
		return xReturn;
 800a32c:	e7c5      	b.n	800a2ba <xTaskPriorityDisinherit+0x6>
 800a32e:	bf00      	nop
 800a330:	20014f84 	.word	0x20014f84
 800a334:	20015404 	.word	0x20015404
 800a338:	20014f90 	.word	0x20014f90

0800a33c <vTaskPriorityDisinheritAfterTimeout>:
	{
 800a33c:	b537      	push	{r0, r1, r2, r4, r5, lr}
		if( pxMutexHolder != NULL )
 800a33e:	4604      	mov	r4, r0
 800a340:	2800      	cmp	r0, #0
 800a342:	d044      	beq.n	800a3ce <vTaskPriorityDisinheritAfterTimeout+0x92>
			configASSERT( pxTCB->uxMutexesHeld );
 800a344:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800a346:	b942      	cbnz	r2, 800a35a <vTaskPriorityDisinheritAfterTimeout+0x1e>
 800a348:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a34c:	f383 8811 	msr	BASEPRI, r3
 800a350:	f3bf 8f6f 	isb	sy
 800a354:	f3bf 8f4f 	dsb	sy
 800a358:	e7fe      	b.n	800a358 <vTaskPriorityDisinheritAfterTimeout+0x1c>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800a35a:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 800a35c:	4299      	cmp	r1, r3
 800a35e:	bf38      	it	cc
 800a360:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 800a362:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800a364:	428b      	cmp	r3, r1
 800a366:	d032      	beq.n	800a3ce <vTaskPriorityDisinheritAfterTimeout+0x92>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 800a368:	2a01      	cmp	r2, #1
 800a36a:	d130      	bne.n	800a3ce <vTaskPriorityDisinheritAfterTimeout+0x92>
					configASSERT( pxTCB != pxCurrentTCB );
 800a36c:	4a19      	ldr	r2, [pc, #100]	; (800a3d4 <vTaskPriorityDisinheritAfterTimeout+0x98>)
 800a36e:	6812      	ldr	r2, [r2, #0]
 800a370:	4282      	cmp	r2, r0
 800a372:	d108      	bne.n	800a386 <vTaskPriorityDisinheritAfterTimeout+0x4a>
 800a374:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a378:	f383 8811 	msr	BASEPRI, r3
 800a37c:	f3bf 8f6f 	isb	sy
 800a380:	f3bf 8f4f 	dsb	sy
 800a384:	e7fe      	b.n	800a384 <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a386:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800a388:	4d13      	ldr	r5, [pc, #76]	; (800a3d8 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
					pxTCB->uxPriority = uxPriorityToUse;
 800a38a:	62c1      	str	r1, [r0, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a38c:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800a38e:	f04f 0214 	mov.w	r2, #20
 800a392:	fb02 5303 	mla	r3, r2, r3, r5
 800a396:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a398:	bfa4      	itt	ge
 800a39a:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
 800a39e:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800a3a0:	429a      	cmp	r2, r3
 800a3a2:	d114      	bne.n	800a3ce <vTaskPriorityDisinheritAfterTimeout+0x92>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a3a4:	1d01      	adds	r1, r0, #4
 800a3a6:	4608      	mov	r0, r1
 800a3a8:	9101      	str	r1, [sp, #4]
 800a3aa:	f7fe fc02 	bl	8008bb2 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 800a3ae:	4a0b      	ldr	r2, [pc, #44]	; (800a3dc <vTaskPriorityDisinheritAfterTimeout+0xa0>)
 800a3b0:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800a3b2:	6810      	ldr	r0, [r2, #0]
 800a3b4:	9901      	ldr	r1, [sp, #4]
 800a3b6:	4283      	cmp	r3, r0
 800a3b8:	f04f 0014 	mov.w	r0, #20
 800a3bc:	fb00 5003 	mla	r0, r0, r3, r5
 800a3c0:	bf88      	it	hi
 800a3c2:	6013      	strhi	r3, [r2, #0]
	}
 800a3c4:	b003      	add	sp, #12
 800a3c6:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 800a3ca:	f7fe bbcf 	b.w	8008b6c <vListInsertEnd>
	}
 800a3ce:	b003      	add	sp, #12
 800a3d0:	bd30      	pop	{r4, r5, pc}
 800a3d2:	bf00      	nop
 800a3d4:	20014f84 	.word	0x20014f84
 800a3d8:	20014f90 	.word	0x20014f90
 800a3dc:	20015404 	.word	0x20015404

0800a3e0 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 800a3e0:	4b04      	ldr	r3, [pc, #16]	; (800a3f4 <pvTaskIncrementMutexHeldCount+0x14>)
 800a3e2:	681a      	ldr	r2, [r3, #0]
 800a3e4:	b11a      	cbz	r2, 800a3ee <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 800a3e6:	6819      	ldr	r1, [r3, #0]
 800a3e8:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 800a3ea:	3201      	adds	r2, #1
 800a3ec:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 800a3ee:	6818      	ldr	r0, [r3, #0]
	}
 800a3f0:	4770      	bx	lr
 800a3f2:	bf00      	nop
 800a3f4:	20014f84 	.word	0x20014f84

0800a3f8 <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 800a3f8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 800a3fa:	4c11      	ldr	r4, [pc, #68]	; (800a440 <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 800a3fc:	f7fe fc52 	bl	8008ca4 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 800a400:	6825      	ldr	r5, [r4, #0]
 800a402:	b9bd      	cbnz	r5, 800a434 <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 800a404:	4f0f      	ldr	r7, [pc, #60]	; (800a444 <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 800a406:	4e10      	ldr	r6, [pc, #64]	; (800a448 <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 800a408:	4638      	mov	r0, r7
 800a40a:	f7fe fba1 	bl	8008b50 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 800a40e:	4630      	mov	r0, r6
 800a410:	f7fe fb9e 	bl	8008b50 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 800a414:	4b0d      	ldr	r3, [pc, #52]	; (800a44c <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800a416:	4a0e      	ldr	r2, [pc, #56]	; (800a450 <prvCheckForValidListAndQueue+0x58>)
			pxCurrentTimerList = &xActiveTimerList1;
 800a418:	601f      	str	r7, [r3, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 800a41a:	4b0e      	ldr	r3, [pc, #56]	; (800a454 <prvCheckForValidListAndQueue+0x5c>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800a41c:	2110      	movs	r1, #16
			pxOverflowTimerList = &xActiveTimerList2;
 800a41e:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800a420:	200a      	movs	r0, #10
 800a422:	4b0d      	ldr	r3, [pc, #52]	; (800a458 <prvCheckForValidListAndQueue+0x60>)
 800a424:	9500      	str	r5, [sp, #0]
 800a426:	f7fe fe4e 	bl	80090c6 <xQueueGenericCreateStatic>
 800a42a:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 800a42c:	b110      	cbz	r0, 800a434 <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 800a42e:	490b      	ldr	r1, [pc, #44]	; (800a45c <prvCheckForValidListAndQueue+0x64>)
 800a430:	f7ff fa18 	bl	8009864 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 800a434:	b003      	add	sp, #12
 800a436:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 800a43a:	f7fe bc53 	b.w	8008ce4 <vPortExitCritical>
 800a43e:	bf00      	nop
 800a440:	200155a4 	.word	0x200155a4
 800a444:	20015528 	.word	0x20015528
 800a448:	2001553c 	.word	0x2001553c
 800a44c:	20015480 	.word	0x20015480
 800a450:	20015488 	.word	0x20015488
 800a454:	20015484 	.word	0x20015484
 800a458:	20015554 	.word	0x20015554
 800a45c:	08023699 	.word	0x08023699

0800a460 <prvInsertTimerInActiveList>:
	if( xNextExpiryTime <= xTimeNow )
 800a460:	4291      	cmp	r1, r2
{
 800a462:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800a464:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800a466:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 800a468:	d80a      	bhi.n	800a480 <prvInsertTimerInActiveList+0x20>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a46a:	1ad2      	subs	r2, r2, r3
 800a46c:	6983      	ldr	r3, [r0, #24]
 800a46e:	429a      	cmp	r2, r3
 800a470:	d20d      	bcs.n	800a48e <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800a472:	4b08      	ldr	r3, [pc, #32]	; (800a494 <prvInsertTimerInActiveList+0x34>)
 800a474:	1d01      	adds	r1, r0, #4
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a476:	6818      	ldr	r0, [r3, #0]
 800a478:	f7fe fb84 	bl	8008b84 <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 800a47c:	2000      	movs	r0, #0
}
 800a47e:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 800a480:	429a      	cmp	r2, r3
 800a482:	d201      	bcs.n	800a488 <prvInsertTimerInActiveList+0x28>
 800a484:	4299      	cmp	r1, r3
 800a486:	d202      	bcs.n	800a48e <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a488:	4b03      	ldr	r3, [pc, #12]	; (800a498 <prvInsertTimerInActiveList+0x38>)
 800a48a:	1d01      	adds	r1, r0, #4
 800a48c:	e7f3      	b.n	800a476 <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 800a48e:	2001      	movs	r0, #1
	return xProcessTimerNow;
 800a490:	e7f5      	b.n	800a47e <prvInsertTimerInActiveList+0x1e>
 800a492:	bf00      	nop
 800a494:	20015484 	.word	0x20015484
 800a498:	20015480 	.word	0x20015480

0800a49c <xTimerCreateTimerTask>:
{
 800a49c:	b510      	push	{r4, lr}
 800a49e:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 800a4a0:	f7ff ffaa 	bl	800a3f8 <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 800a4a4:	4b12      	ldr	r3, [pc, #72]	; (800a4f0 <xTimerCreateTimerTask+0x54>)
 800a4a6:	681b      	ldr	r3, [r3, #0]
 800a4a8:	b1b3      	cbz	r3, 800a4d8 <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 800a4aa:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800a4ac:	aa07      	add	r2, sp, #28
 800a4ae:	a906      	add	r1, sp, #24
 800a4b0:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 800a4b2:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800a4b6:	f7fe fa51 	bl	800895c <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 800a4ba:	9b05      	ldr	r3, [sp, #20]
 800a4bc:	9302      	str	r3, [sp, #8]
 800a4be:	9b06      	ldr	r3, [sp, #24]
 800a4c0:	9301      	str	r3, [sp, #4]
 800a4c2:	2302      	movs	r3, #2
 800a4c4:	9300      	str	r3, [sp, #0]
 800a4c6:	9a07      	ldr	r2, [sp, #28]
 800a4c8:	490a      	ldr	r1, [pc, #40]	; (800a4f4 <xTimerCreateTimerTask+0x58>)
 800a4ca:	480b      	ldr	r0, [pc, #44]	; (800a4f8 <xTimerCreateTimerTask+0x5c>)
 800a4cc:	4623      	mov	r3, r4
 800a4ce:	f7ff fba3 	bl	8009c18 <xTaskCreateStatic>
 800a4d2:	4b0a      	ldr	r3, [pc, #40]	; (800a4fc <xTimerCreateTimerTask+0x60>)
 800a4d4:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 800a4d6:	b940      	cbnz	r0, 800a4ea <xTimerCreateTimerTask+0x4e>
 800a4d8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a4dc:	f383 8811 	msr	BASEPRI, r3
 800a4e0:	f3bf 8f6f 	isb	sy
 800a4e4:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 800a4e8:	e7fe      	b.n	800a4e8 <xTimerCreateTimerTask+0x4c>
}
 800a4ea:	2001      	movs	r0, #1
 800a4ec:	b008      	add	sp, #32
 800a4ee:	bd10      	pop	{r4, pc}
 800a4f0:	200155a4 	.word	0x200155a4
 800a4f4:	0802369e 	.word	0x0802369e
 800a4f8:	0800a605 	.word	0x0800a605
 800a4fc:	200155a8 	.word	0x200155a8

0800a500 <xTimerGenericCommand>:
{
 800a500:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800a502:	4616      	mov	r6, r2
	configASSERT( xTimer );
 800a504:	4604      	mov	r4, r0
{
 800a506:	461a      	mov	r2, r3
	configASSERT( xTimer );
 800a508:	b940      	cbnz	r0, 800a51c <xTimerGenericCommand+0x1c>
 800a50a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a50e:	f383 8811 	msr	BASEPRI, r3
 800a512:	f3bf 8f6f 	isb	sy
 800a516:	f3bf 8f4f 	dsb	sy
 800a51a:	e7fe      	b.n	800a51a <xTimerGenericCommand+0x1a>
	if( xTimerQueue != NULL )
 800a51c:	4d0d      	ldr	r5, [pc, #52]	; (800a554 <xTimerGenericCommand+0x54>)
 800a51e:	6828      	ldr	r0, [r5, #0]
 800a520:	b180      	cbz	r0, 800a544 <xTimerGenericCommand+0x44>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800a522:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800a524:	e9cd 1600 	strd	r1, r6, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800a528:	9402      	str	r4, [sp, #8]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800a52a:	dc0d      	bgt.n	800a548 <xTimerGenericCommand+0x48>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800a52c:	f7ff fe70 	bl	800a210 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800a530:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800a532:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800a534:	bf08      	it	eq
 800a536:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 800a538:	6828      	ldr	r0, [r5, #0]
 800a53a:	bf18      	it	ne
 800a53c:	461a      	movne	r2, r3
 800a53e:	4669      	mov	r1, sp
 800a540:	f7fe fe76 	bl	8009230 <xQueueGenericSend>
}
 800a544:	b004      	add	sp, #16
 800a546:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 800a548:	2300      	movs	r3, #0
 800a54a:	4669      	mov	r1, sp
 800a54c:	f7fe ff23 	bl	8009396 <xQueueGenericSendFromISR>
 800a550:	e7f8      	b.n	800a544 <xTimerGenericCommand+0x44>
 800a552:	bf00      	nop
 800a554:	200155a4 	.word	0x200155a4

0800a558 <prvSampleTimeNow>:
{
 800a558:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
	if( xTimeNow < xLastTime )
 800a55c:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 800a600 <prvSampleTimeNow+0xa8>
{
 800a560:	4606      	mov	r6, r0
	xTimeNow = xTaskGetTickCount();
 800a562:	f7ff fc17 	bl	8009d94 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800a566:	f8d8 3000 	ldr.w	r3, [r8]
 800a56a:	4283      	cmp	r3, r0
	xTimeNow = xTaskGetTickCount();
 800a56c:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 800a56e:	d940      	bls.n	800a5f2 <prvSampleTimeNow+0x9a>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800a570:	4f21      	ldr	r7, [pc, #132]	; (800a5f8 <prvSampleTimeNow+0xa0>)
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800a572:	f04f 0900 	mov.w	r9, #0
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800a576:	683b      	ldr	r3, [r7, #0]
 800a578:	681a      	ldr	r2, [r3, #0]
 800a57a:	b95a      	cbnz	r2, 800a594 <prvSampleTimeNow+0x3c>
	pxCurrentTimerList = pxOverflowTimerList;
 800a57c:	4a1f      	ldr	r2, [pc, #124]	; (800a5fc <prvSampleTimeNow+0xa4>)
 800a57e:	6811      	ldr	r1, [r2, #0]
 800a580:	6039      	str	r1, [r7, #0]
	pxOverflowTimerList = pxTemp;
 800a582:	6013      	str	r3, [r2, #0]
		*pxTimerListsWereSwitched = pdTRUE;
 800a584:	2301      	movs	r3, #1
}
 800a586:	4628      	mov	r0, r5
		*pxTimerListsWereSwitched = pdFALSE;
 800a588:	6033      	str	r3, [r6, #0]
	xLastTime = xTimeNow;
 800a58a:	f8c8 5000 	str.w	r5, [r8]
}
 800a58e:	b004      	add	sp, #16
 800a590:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800a594:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a596:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800a598:	f8d3 a000 	ldr.w	sl, [r3]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800a59c:	1d21      	adds	r1, r4, #4
 800a59e:	4608      	mov	r0, r1
 800a5a0:	9103      	str	r1, [sp, #12]
 800a5a2:	f7fe fb06 	bl	8008bb2 <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a5a6:	6a23      	ldr	r3, [r4, #32]
 800a5a8:	4620      	mov	r0, r4
 800a5aa:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800a5ac:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800a5b0:	9903      	ldr	r1, [sp, #12]
 800a5b2:	f013 0f04 	tst.w	r3, #4
 800a5b6:	d0de      	beq.n	800a576 <prvSampleTimeNow+0x1e>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 800a5b8:	69a3      	ldr	r3, [r4, #24]
 800a5ba:	4453      	add	r3, sl
			if( xReloadTime > xNextExpireTime )
 800a5bc:	459a      	cmp	sl, r3
 800a5be:	d205      	bcs.n	800a5cc <prvSampleTimeNow+0x74>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a5c0:	6838      	ldr	r0, [r7, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 800a5c2:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800a5c4:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a5c6:	f7fe fadd 	bl	8008b84 <vListInsert>
 800a5ca:	e7d4      	b.n	800a576 <prvSampleTimeNow+0x1e>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800a5cc:	2300      	movs	r3, #0
 800a5ce:	f8cd 9000 	str.w	r9, [sp]
 800a5d2:	4652      	mov	r2, sl
 800a5d4:	4619      	mov	r1, r3
 800a5d6:	4620      	mov	r0, r4
 800a5d8:	f7ff ff92 	bl	800a500 <xTimerGenericCommand>
				configASSERT( xResult );
 800a5dc:	2800      	cmp	r0, #0
 800a5de:	d1ca      	bne.n	800a576 <prvSampleTimeNow+0x1e>
 800a5e0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a5e4:	f383 8811 	msr	BASEPRI, r3
 800a5e8:	f3bf 8f6f 	isb	sy
 800a5ec:	f3bf 8f4f 	dsb	sy
 800a5f0:	e7fe      	b.n	800a5f0 <prvSampleTimeNow+0x98>
		*pxTimerListsWereSwitched = pdFALSE;
 800a5f2:	2300      	movs	r3, #0
 800a5f4:	e7c7      	b.n	800a586 <prvSampleTimeNow+0x2e>
 800a5f6:	bf00      	nop
 800a5f8:	20015480 	.word	0x20015480
 800a5fc:	20015484 	.word	0x20015484
 800a600:	20015550 	.word	0x20015550

0800a604 <prvTimerTask>:
{
 800a604:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a608:	4d6e      	ldr	r5, [pc, #440]	; (800a7c4 <prvTimerTask+0x1c0>)
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800a60a:	4e6f      	ldr	r6, [pc, #444]	; (800a7c8 <prvTimerTask+0x1c4>)
{
 800a60c:	b089      	sub	sp, #36	; 0x24
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a60e:	682b      	ldr	r3, [r5, #0]
 800a610:	f8d3 8000 	ldr.w	r8, [r3]
 800a614:	f1b8 0f00 	cmp.w	r8, #0
 800a618:	d035      	beq.n	800a686 <prvTimerTask+0x82>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800a61a:	68db      	ldr	r3, [r3, #12]
 800a61c:	f8d3 8000 	ldr.w	r8, [r3]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a620:	2400      	movs	r4, #0
	vTaskSuspendAll();
 800a622:	f7ff fbaf 	bl	8009d84 <vTaskSuspendAll>
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a626:	a804      	add	r0, sp, #16
 800a628:	f7ff ff96 	bl	800a558 <prvSampleTimeNow>
		if( xTimerListsWereSwitched == pdFALSE )
 800a62c:	9b04      	ldr	r3, [sp, #16]
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a62e:	4681      	mov	r9, r0
		if( xTimerListsWereSwitched == pdFALSE )
 800a630:	2b00      	cmp	r3, #0
 800a632:	d169      	bne.n	800a708 <prvTimerTask+0x104>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800a634:	2c00      	cmp	r4, #0
 800a636:	d14c      	bne.n	800a6d2 <prvTimerTask+0xce>
 800a638:	4540      	cmp	r0, r8
 800a63a:	d350      	bcc.n	800a6de <prvTimerTask+0xda>
				( void ) xTaskResumeAll();
 800a63c:	f7ff fc46 	bl	8009ecc <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a640:	682b      	ldr	r3, [r5, #0]
 800a642:	68db      	ldr	r3, [r3, #12]
 800a644:	68df      	ldr	r7, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800a646:	1d38      	adds	r0, r7, #4
 800a648:	f7fe fab3 	bl	8008bb2 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800a64c:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800a650:	0758      	lsls	r0, r3, #29
 800a652:	d51a      	bpl.n	800a68a <prvTimerTask+0x86>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800a654:	69b9      	ldr	r1, [r7, #24]
 800a656:	4643      	mov	r3, r8
 800a658:	464a      	mov	r2, r9
 800a65a:	4441      	add	r1, r8
 800a65c:	4638      	mov	r0, r7
 800a65e:	f7ff feff 	bl	800a460 <prvInsertTimerInActiveList>
 800a662:	b1b0      	cbz	r0, 800a692 <prvTimerTask+0x8e>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800a664:	9400      	str	r4, [sp, #0]
 800a666:	4623      	mov	r3, r4
 800a668:	4642      	mov	r2, r8
 800a66a:	4621      	mov	r1, r4
 800a66c:	4638      	mov	r0, r7
 800a66e:	f7ff ff47 	bl	800a500 <xTimerGenericCommand>
			configASSERT( xResult );
 800a672:	b970      	cbnz	r0, 800a692 <prvTimerTask+0x8e>
 800a674:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a678:	f383 8811 	msr	BASEPRI, r3
 800a67c:	f3bf 8f6f 	isb	sy
 800a680:	f3bf 8f4f 	dsb	sy
 800a684:	e7fe      	b.n	800a684 <prvTimerTask+0x80>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a686:	2401      	movs	r4, #1
 800a688:	e7cb      	b.n	800a622 <prvTimerTask+0x1e>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800a68a:	f023 0301 	bic.w	r3, r3, #1
 800a68e:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a692:	6a3b      	ldr	r3, [r7, #32]
 800a694:	4638      	mov	r0, r7
 800a696:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800a698:	6830      	ldr	r0, [r6, #0]
 800a69a:	2200      	movs	r2, #0
 800a69c:	a904      	add	r1, sp, #16
 800a69e:	f7fe ff2f 	bl	8009500 <xQueueReceive>
 800a6a2:	2800      	cmp	r0, #0
 800a6a4:	d0b3      	beq.n	800a60e <prvTimerTask+0xa>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800a6a6:	9b04      	ldr	r3, [sp, #16]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800a6a8:	9806      	ldr	r0, [sp, #24]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800a6aa:	2b00      	cmp	r3, #0
 800a6ac:	db2f      	blt.n	800a70e <prvTimerTask+0x10a>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 800a6ae:	9c06      	ldr	r4, [sp, #24]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 800a6b0:	6963      	ldr	r3, [r4, #20]
 800a6b2:	2b00      	cmp	r3, #0
 800a6b4:	d132      	bne.n	800a71c <prvTimerTask+0x118>
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a6b6:	a803      	add	r0, sp, #12
 800a6b8:	f7ff ff4e 	bl	800a558 <prvSampleTimeNow>
			switch( xMessage.xMessageID )
 800a6bc:	9b04      	ldr	r3, [sp, #16]
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a6be:	4602      	mov	r2, r0
			switch( xMessage.xMessageID )
 800a6c0:	2b09      	cmp	r3, #9
 800a6c2:	d8e9      	bhi.n	800a698 <prvTimerTask+0x94>
 800a6c4:	e8df f003 	tbb	[pc, r3]
 800a6c8:	572e2e2e 	.word	0x572e2e2e
 800a6cc:	2e2e765e 	.word	0x2e2e765e
 800a6d0:	5e57      	.short	0x5e57
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800a6d2:	4b3e      	ldr	r3, [pc, #248]	; (800a7cc <prvTimerTask+0x1c8>)
 800a6d4:	681b      	ldr	r3, [r3, #0]
 800a6d6:	681c      	ldr	r4, [r3, #0]
 800a6d8:	fab4 f484 	clz	r4, r4
 800a6dc:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800a6de:	6830      	ldr	r0, [r6, #0]
 800a6e0:	4622      	mov	r2, r4
 800a6e2:	eba8 0109 	sub.w	r1, r8, r9
 800a6e6:	f7ff f8fa 	bl	80098de <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 800a6ea:	f7ff fbef 	bl	8009ecc <xTaskResumeAll>
 800a6ee:	2800      	cmp	r0, #0
 800a6f0:	d1d2      	bne.n	800a698 <prvTimerTask+0x94>
					portYIELD_WITHIN_API();
 800a6f2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800a6f6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800a6fa:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800a6fe:	f3bf 8f4f 	dsb	sy
 800a702:	f3bf 8f6f 	isb	sy
 800a706:	e7c7      	b.n	800a698 <prvTimerTask+0x94>
			( void ) xTaskResumeAll();
 800a708:	f7ff fbe0 	bl	8009ecc <xTaskResumeAll>
}
 800a70c:	e7c4      	b.n	800a698 <prvTimerTask+0x94>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800a70e:	9b05      	ldr	r3, [sp, #20]
 800a710:	9907      	ldr	r1, [sp, #28]
 800a712:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 800a714:	9b04      	ldr	r3, [sp, #16]
 800a716:	2b00      	cmp	r3, #0
 800a718:	dbbe      	blt.n	800a698 <prvTimerTask+0x94>
 800a71a:	e7c8      	b.n	800a6ae <prvTimerTask+0xaa>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800a71c:	1d20      	adds	r0, r4, #4
 800a71e:	f7fe fa48 	bl	8008bb2 <uxListRemove>
 800a722:	e7c8      	b.n	800a6b6 <prvTimerTask+0xb2>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800a724:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800a728:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800a72a:	f043 0301 	orr.w	r3, r3, #1
 800a72e:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800a732:	9b05      	ldr	r3, [sp, #20]
 800a734:	4620      	mov	r0, r4
 800a736:	4419      	add	r1, r3
 800a738:	f7ff fe92 	bl	800a460 <prvInsertTimerInActiveList>
 800a73c:	2800      	cmp	r0, #0
 800a73e:	d0ab      	beq.n	800a698 <prvTimerTask+0x94>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a740:	6a23      	ldr	r3, [r4, #32]
 800a742:	4620      	mov	r0, r4
 800a744:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800a746:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800a74a:	0759      	lsls	r1, r3, #29
 800a74c:	d5a4      	bpl.n	800a698 <prvTimerTask+0x94>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800a74e:	69a2      	ldr	r2, [r4, #24]
 800a750:	9905      	ldr	r1, [sp, #20]
 800a752:	2300      	movs	r3, #0
 800a754:	440a      	add	r2, r1
 800a756:	9300      	str	r3, [sp, #0]
 800a758:	4619      	mov	r1, r3
 800a75a:	4620      	mov	r0, r4
 800a75c:	f7ff fed0 	bl	800a500 <xTimerGenericCommand>
							configASSERT( xResult );
 800a760:	2800      	cmp	r0, #0
 800a762:	d199      	bne.n	800a698 <prvTimerTask+0x94>
 800a764:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a768:	f383 8811 	msr	BASEPRI, r3
 800a76c:	f3bf 8f6f 	isb	sy
 800a770:	f3bf 8f4f 	dsb	sy
 800a774:	e7fe      	b.n	800a774 <prvTimerTask+0x170>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800a776:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800a77a:	f023 0301 	bic.w	r3, r3, #1
 800a77e:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 800a782:	e789      	b.n	800a698 <prvTimerTask+0x94>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800a784:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800a788:	f043 0301 	orr.w	r3, r3, #1
 800a78c:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 800a790:	9905      	ldr	r1, [sp, #20]
 800a792:	61a1      	str	r1, [r4, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800a794:	b941      	cbnz	r1, 800a7a8 <prvTimerTask+0x1a4>
 800a796:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a79a:	f383 8811 	msr	BASEPRI, r3
 800a79e:	f3bf 8f6f 	isb	sy
 800a7a2:	f3bf 8f4f 	dsb	sy
 800a7a6:	e7fe      	b.n	800a7a6 <prvTimerTask+0x1a2>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 800a7a8:	4603      	mov	r3, r0
 800a7aa:	4401      	add	r1, r0
 800a7ac:	4620      	mov	r0, r4
 800a7ae:	f7ff fe57 	bl	800a460 <prvInsertTimerInActiveList>
					break;
 800a7b2:	e771      	b.n	800a698 <prvTimerTask+0x94>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 800a7b4:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800a7b8:	079a      	lsls	r2, r3, #30
 800a7ba:	d4de      	bmi.n	800a77a <prvTimerTask+0x176>
							vPortFree( pxTimer );
 800a7bc:	4620      	mov	r0, r4
 800a7be:	f7fe f98f 	bl	8008ae0 <vPortFree>
 800a7c2:	e769      	b.n	800a698 <prvTimerTask+0x94>
 800a7c4:	20015480 	.word	0x20015480
 800a7c8:	200155a4 	.word	0x200155a4
 800a7cc:	20015484 	.word	0x20015484

0800a7d0 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800a7d0:	8880      	ldrh	r0, [r0, #4]
 800a7d2:	4770      	bx	lr

0800a7d4 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800a7d4:	b570      	push	{r4, r5, r6, lr}
 800a7d6:	6803      	ldr	r3, [r0, #0]
 800a7d8:	4605      	mov	r5, r0
 800a7da:	460c      	mov	r4, r1
 800a7dc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a7de:	2100      	movs	r1, #0
 800a7e0:	4798      	blx	r3
 800a7e2:	682b      	ldr	r3, [r5, #0]
 800a7e4:	4606      	mov	r6, r0
 800a7e6:	6a1b      	ldr	r3, [r3, #32]
 800a7e8:	4628      	mov	r0, r5
 800a7ea:	4798      	blx	r3
 800a7ec:	1ba4      	subs	r4, r4, r6
 800a7ee:	b2a4      	uxth	r4, r4
 800a7f0:	fbb4 f0f0 	udiv	r0, r4, r0
 800a7f4:	bd70      	pop	{r4, r5, r6, pc}

0800a7f6 <_ZN8touchgfx17AbstractPartition5clearEv>:
 800a7f6:	2300      	movs	r3, #0
 800a7f8:	8083      	strh	r3, [r0, #4]
 800a7fa:	4770      	bx	lr

0800a7fc <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800a7fc:	b510      	push	{r4, lr}
 800a7fe:	6803      	ldr	r3, [r0, #0]
 800a800:	8881      	ldrh	r1, [r0, #4]
 800a802:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a804:	4604      	mov	r4, r0
 800a806:	4798      	blx	r3
 800a808:	88a3      	ldrh	r3, [r4, #4]
 800a80a:	3301      	adds	r3, #1
 800a80c:	80a3      	strh	r3, [r4, #4]
 800a80e:	bd10      	pop	{r4, pc}

0800a810 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800a810:	6803      	ldr	r3, [r0, #0]
 800a812:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a814:	4718      	bx	r3

0800a816 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800a816:	4770      	bx	lr

0800a818 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800a818:	4a02      	ldr	r2, [pc, #8]	; (800a824 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800a81a:	6002      	str	r2, [r0, #0]
 800a81c:	2200      	movs	r2, #0
 800a81e:	8082      	strh	r2, [r0, #4]
 800a820:	4770      	bx	lr
 800a822:	bf00      	nop
 800a824:	080236b0 	.word	0x080236b0

0800a828 <_ZNK8touchgfx11ModalWindow18getBackgroundWidthEv>:
 800a828:	f8b0 008c 	ldrh.w	r0, [r0, #140]	; 0x8c
 800a82c:	4770      	bx	lr

0800a82e <_ZNK8touchgfx11ModalWindow19getBackgroundHeightEv>:
 800a82e:	f8b0 008e 	ldrh.w	r0, [r0, #142]	; 0x8e
 800a832:	4770      	bx	lr

0800a834 <_ZNK8touchgfx11ModalWindow13getShadeAlphaEv>:
 800a834:	f890 0052 	ldrb.w	r0, [r0, #82]	; 0x52
 800a838:	4770      	bx	lr

0800a83a <_ZNK8touchgfx11ModalWindow13getShadeColorEv>:
 800a83a:	6d40      	ldr	r0, [r0, #84]	; 0x54
 800a83c:	4770      	bx	lr

0800a83e <_ZN8touchgfx11ModalWindow4showEv>:
 800a83e:	2201      	movs	r2, #1
 800a840:	6803      	ldr	r3, [r0, #0]
 800a842:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 800a846:	695b      	ldr	r3, [r3, #20]
 800a848:	4718      	bx	r3

0800a84a <_ZN8touchgfx11ModalWindow4hideEv>:
 800a84a:	b510      	push	{r4, lr}
 800a84c:	6803      	ldr	r3, [r0, #0]
 800a84e:	4604      	mov	r4, r0
 800a850:	695b      	ldr	r3, [r3, #20]
 800a852:	4798      	blx	r3
 800a854:	2300      	movs	r3, #0
 800a856:	f884 3025 	strb.w	r3, [r4, #37]	; 0x25
 800a85a:	bd10      	pop	{r4, pc}

0800a85c <_ZN8touchgfx11ModalWindowD1Ev>:
 800a85c:	4770      	bx	lr

0800a85e <_ZN8touchgfx11ModalWindow3addERNS_8DrawableE>:
 800a85e:	3058      	adds	r0, #88	; 0x58
 800a860:	f000 b904 	b.w	800aa6c <_ZN8touchgfx9Container3addERNS_8DrawableE>

0800a864 <_ZN8touchgfx11ModalWindow13setShadeColorENS_9colortypeE>:
 800a864:	6541      	str	r1, [r0, #84]	; 0x54
 800a866:	302c      	adds	r0, #44	; 0x2c
 800a868:	f007 bbb9 	b.w	8011fde <_ZNK8touchgfx8Drawable10invalidateEv>

0800a86c <_ZN8touchgfx11ModalWindow13setShadeAlphaEh>:
 800a86c:	f880 1052 	strb.w	r1, [r0, #82]	; 0x52
 800a870:	302c      	adds	r0, #44	; 0x2c
 800a872:	f007 bbb4 	b.w	8011fde <_ZNK8touchgfx8Drawable10invalidateEv>

0800a876 <_ZN8touchgfx11ModalWindow6removeERNS_8DrawableE>:
 800a876:	3058      	adds	r0, #88	; 0x58
 800a878:	f000 b943 	b.w	800ab02 <_ZN8touchgfx9Container6removeERNS_8DrawableE>

0800a87c <_ZN8touchgfx11ModalWindowD0Ev>:
 800a87c:	b510      	push	{r4, lr}
 800a87e:	21b0      	movs	r1, #176	; 0xb0
 800a880:	4604      	mov	r4, r0
 800a882:	f015 ff31 	bl	80206e8 <_ZdlPvj>
 800a886:	4620      	mov	r0, r4
 800a888:	bd10      	pop	{r4, pc}
	...

0800a88c <_ZN8touchgfx8DrawableC1Ev>:
 800a88c:	4a0a      	ldr	r2, [pc, #40]	; (800a8b8 <_ZN8touchgfx8DrawableC1Ev+0x2c>)
 800a88e:	6002      	str	r2, [r0, #0]
 800a890:	2200      	movs	r2, #0
 800a892:	8082      	strh	r2, [r0, #4]
 800a894:	80c2      	strh	r2, [r0, #6]
 800a896:	8102      	strh	r2, [r0, #8]
 800a898:	8142      	strh	r2, [r0, #10]
 800a89a:	8182      	strh	r2, [r0, #12]
 800a89c:	81c2      	strh	r2, [r0, #14]
 800a89e:	8202      	strh	r2, [r0, #16]
 800a8a0:	8242      	strh	r2, [r0, #18]
 800a8a2:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800a8a6:	61c2      	str	r2, [r0, #28]
 800a8a8:	8402      	strh	r2, [r0, #32]
 800a8aa:	8442      	strh	r2, [r0, #34]	; 0x22
 800a8ac:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800a8b0:	2201      	movs	r2, #1
 800a8b2:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 800a8b6:	4770      	bx	lr
 800a8b8:	080242ec 	.word	0x080242ec

0800a8bc <_ZN8touchgfx11ModalWindow13setBackgroundERKtss>:
 800a8bc:	b570      	push	{r4, r5, r6, lr}
 800a8be:	4604      	mov	r4, r0
 800a8c0:	461e      	mov	r6, r3
 800a8c2:	f854 3b58 	ldr.w	r3, [r4], #88
 800a8c6:	4615      	mov	r5, r2
 800a8c8:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800a8cc:	4798      	blx	r3
 800a8ce:	4632      	mov	r2, r6
 800a8d0:	4629      	mov	r1, r5
 800a8d2:	4620      	mov	r0, r4
 800a8d4:	f7f8 f9be 	bl	8002c54 <_ZN8touchgfx8Drawable5setXYEss>
 800a8d8:	bd70      	pop	{r4, r5, r6, pc}

0800a8da <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 800a8da:	b570      	push	{r4, r5, r6, lr}
 800a8dc:	6803      	ldr	r3, [r0, #0]
 800a8de:	4604      	mov	r4, r0
 800a8e0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a8e2:	4615      	mov	r5, r2
 800a8e4:	4798      	blx	r3
 800a8e6:	6823      	ldr	r3, [r4, #0]
 800a8e8:	4629      	mov	r1, r5
 800a8ea:	4620      	mov	r0, r4
 800a8ec:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800a8ee:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a8f2:	4718      	bx	r3

0800a8f4 <_ZN8touchgfx11ModalWindow13setBackgroundERKt>:
 800a8f4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800a8f6:	880b      	ldrh	r3, [r1, #0]
 800a8f8:	a902      	add	r1, sp, #8
 800a8fa:	f100 0584 	add.w	r5, r0, #132	; 0x84
 800a8fe:	4604      	mov	r4, r0
 800a900:	f821 3d04 	strh.w	r3, [r1, #-4]!
 800a904:	4628      	mov	r0, r5
 800a906:	f003 ff25 	bl	800e754 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800a90a:	2200      	movs	r2, #0
 800a90c:	4611      	mov	r1, r2
 800a90e:	4628      	mov	r0, r5
 800a910:	f7f8 f9a0 	bl	8002c54 <_ZN8touchgfx8Drawable5setXYEss>
 800a914:	f9b4 608c 	ldrsh.w	r6, [r4, #140]	; 0x8c
 800a918:	f9b4 708e 	ldrsh.w	r7, [r4, #142]	; 0x8e
 800a91c:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 800a920:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800a924:	f104 0558 	add.w	r5, r4, #88	; 0x58
 800a928:	2302      	movs	r3, #2
 800a92a:	4628      	mov	r0, r5
 800a92c:	1bd2      	subs	r2, r2, r7
 800a92e:	1b89      	subs	r1, r1, r6
 800a930:	fb92 f2f3 	sdiv	r2, r2, r3
 800a934:	fb91 f1f3 	sdiv	r1, r1, r3
 800a938:	b212      	sxth	r2, r2
 800a93a:	b209      	sxth	r1, r1
 800a93c:	f7f8 f98a 	bl	8002c54 <_ZN8touchgfx8Drawable5setXYEss>
 800a940:	463a      	mov	r2, r7
 800a942:	4631      	mov	r1, r6
 800a944:	4628      	mov	r0, r5
 800a946:	f7ff ffc8 	bl	800a8da <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800a94a:	6823      	ldr	r3, [r4, #0]
 800a94c:	4620      	mov	r0, r4
 800a94e:	695b      	ldr	r3, [r3, #20]
 800a950:	4798      	blx	r3
 800a952:	b003      	add	sp, #12
 800a954:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0800a958 <_ZN8touchgfx11ModalWindowC1Ev>:
 800a958:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800a95c:	4604      	mov	r4, r0
 800a95e:	4625      	mov	r5, r4
 800a960:	f7ff ff94 	bl	800a88c <_ZN8touchgfx8DrawableC1Ev>
 800a964:	2600      	movs	r6, #0
 800a966:	4b36      	ldr	r3, [pc, #216]	; (800aa40 <_ZN8touchgfx11ModalWindowC1Ev+0xe8>)
 800a968:	62a6      	str	r6, [r4, #40]	; 0x28
 800a96a:	f845 3b2c 	str.w	r3, [r5], #44
 800a96e:	f04f 0a26 	mov.w	sl, #38	; 0x26
 800a972:	4652      	mov	r2, sl
 800a974:	4631      	mov	r1, r6
 800a976:	4628      	mov	r0, r5
 800a978:	f016 f8f0 	bl	8020b5c <memset>
 800a97c:	4628      	mov	r0, r5
 800a97e:	f7ff ff85 	bl	800a88c <_ZN8touchgfx8DrawableC1Ev>
 800a982:	f104 0858 	add.w	r8, r4, #88	; 0x58
 800a986:	4b2f      	ldr	r3, [pc, #188]	; (800aa44 <_ZN8touchgfx11ModalWindowC1Ev+0xec>)
 800a988:	62e3      	str	r3, [r4, #44]	; 0x2c
 800a98a:	f04f 09ff 	mov.w	r9, #255	; 0xff
 800a98e:	f884 9052 	strb.w	r9, [r4, #82]	; 0x52
 800a992:	6566      	str	r6, [r4, #84]	; 0x54
 800a994:	4640      	mov	r0, r8
 800a996:	f7ff ff79 	bl	800a88c <_ZN8touchgfx8DrawableC1Ev>
 800a99a:	f104 0784 	add.w	r7, r4, #132	; 0x84
 800a99e:	4b2a      	ldr	r3, [pc, #168]	; (800aa48 <_ZN8touchgfx11ModalWindowC1Ev+0xf0>)
 800a9a0:	65a3      	str	r3, [r4, #88]	; 0x58
 800a9a2:	4652      	mov	r2, sl
 800a9a4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800a9a8:	4631      	mov	r1, r6
 800a9aa:	f8c4 6080 	str.w	r6, [r4, #128]	; 0x80
 800a9ae:	4638      	mov	r0, r7
 800a9b0:	f8ad 3004 	strh.w	r3, [sp, #4]
 800a9b4:	f016 f8d2 	bl	8020b5c <memset>
 800a9b8:	4638      	mov	r0, r7
 800a9ba:	f7ff ff67 	bl	800a88c <_ZN8touchgfx8DrawableC1Ev>
 800a9be:	a902      	add	r1, sp, #8
 800a9c0:	4b22      	ldr	r3, [pc, #136]	; (800aa4c <_ZN8touchgfx11ModalWindowC1Ev+0xf4>)
 800a9c2:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
 800a9c6:	f831 3d04 	ldrh.w	r3, [r1, #-4]!
 800a9ca:	f8a4 30aa 	strh.w	r3, [r4, #170]	; 0xaa
 800a9ce:	f884 90ac 	strb.w	r9, [r4, #172]	; 0xac
 800a9d2:	4638      	mov	r0, r7
 800a9d4:	f003 febe 	bl	800e754 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800a9d8:	4b1d      	ldr	r3, [pc, #116]	; (800aa50 <_ZN8touchgfx11ModalWindowC1Ev+0xf8>)
 800a9da:	f9b3 2000 	ldrsh.w	r2, [r3]
 800a9de:	4b1d      	ldr	r3, [pc, #116]	; (800aa54 <_ZN8touchgfx11ModalWindowC1Ev+0xfc>)
 800a9e0:	4620      	mov	r0, r4
 800a9e2:	f9b3 1000 	ldrsh.w	r1, [r3]
 800a9e6:	f7ff ff78 	bl	800a8da <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800a9ea:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 800a9ee:	f9b4 a00a 	ldrsh.w	sl, [r4, #10]
 800a9f2:	4632      	mov	r2, r6
 800a9f4:	4631      	mov	r1, r6
 800a9f6:	4628      	mov	r0, r5
 800a9f8:	f7f8 f92c 	bl	8002c54 <_ZN8touchgfx8Drawable5setXYEss>
 800a9fc:	4652      	mov	r2, sl
 800a9fe:	4649      	mov	r1, r9
 800aa00:	4628      	mov	r0, r5
 800aa02:	f7ff ff6a 	bl	800a8da <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800aa06:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800aa0a:	6563      	str	r3, [r4, #84]	; 0x54
 800aa0c:	2301      	movs	r3, #1
 800aa0e:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
 800aa12:	2360      	movs	r3, #96	; 0x60
 800aa14:	f884 3052 	strb.w	r3, [r4, #82]	; 0x52
 800aa18:	4628      	mov	r0, r5
 800aa1a:	f007 fae0 	bl	8011fde <_ZNK8touchgfx8Drawable10invalidateEv>
 800aa1e:	4629      	mov	r1, r5
 800aa20:	4620      	mov	r0, r4
 800aa22:	f000 f823 	bl	800aa6c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800aa26:	4641      	mov	r1, r8
 800aa28:	4620      	mov	r0, r4
 800aa2a:	f000 f81f 	bl	800aa6c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800aa2e:	4640      	mov	r0, r8
 800aa30:	4639      	mov	r1, r7
 800aa32:	f000 f81b 	bl	800aa6c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800aa36:	4620      	mov	r0, r4
 800aa38:	b002      	add	sp, #8
 800aa3a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800aa3e:	bf00      	nop
 800aa40:	080236e4 	.word	0x080236e4
 800aa44:	0802406c 	.word	0x0802406c
 800aa48:	0802379c 	.word	0x0802379c
 800aa4c:	080241b0 	.word	0x080241b0
 800aa50:	200155ae 	.word	0x200155ae
 800aa54:	200155ac 	.word	0x200155ac

0800aa58 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800aa58:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800aa5a:	2000      	movs	r0, #0
 800aa5c:	b12b      	cbz	r3, 800aa6a <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800aa5e:	b920      	cbnz	r0, 800aa6a <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800aa60:	1a5a      	subs	r2, r3, r1
 800aa62:	4250      	negs	r0, r2
 800aa64:	4150      	adcs	r0, r2
 800aa66:	699b      	ldr	r3, [r3, #24]
 800aa68:	e7f8      	b.n	800aa5c <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800aa6a:	4770      	bx	lr

0800aa6c <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800aa6c:	2300      	movs	r3, #0
 800aa6e:	6148      	str	r0, [r1, #20]
 800aa70:	618b      	str	r3, [r1, #24]
 800aa72:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800aa74:	b913      	cbnz	r3, 800aa7c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 800aa76:	6281      	str	r1, [r0, #40]	; 0x28
 800aa78:	4770      	bx	lr
 800aa7a:	4613      	mov	r3, r2
 800aa7c:	699a      	ldr	r2, [r3, #24]
 800aa7e:	2a00      	cmp	r2, #0
 800aa80:	d1fb      	bne.n	800aa7a <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 800aa82:	6199      	str	r1, [r3, #24]
 800aa84:	4770      	bx	lr

0800aa86 <_ZN8touchgfx9Container9removeAllEv>:
 800aa86:	2200      	movs	r2, #0
 800aa88:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800aa8a:	b123      	cbz	r3, 800aa96 <_ZN8touchgfx9Container9removeAllEv+0x10>
 800aa8c:	6999      	ldr	r1, [r3, #24]
 800aa8e:	6281      	str	r1, [r0, #40]	; 0x28
 800aa90:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800aa94:	e7f8      	b.n	800aa88 <_ZN8touchgfx9Container9removeAllEv+0x2>
 800aa96:	4770      	bx	lr

0800aa98 <_ZN8touchgfx9Container6unlinkEv>:
 800aa98:	2300      	movs	r3, #0
 800aa9a:	6283      	str	r3, [r0, #40]	; 0x28
 800aa9c:	4770      	bx	lr

0800aa9e <_ZNK8touchgfx9Container12getSolidRectEv>:
 800aa9e:	2200      	movs	r2, #0
 800aaa0:	8002      	strh	r2, [r0, #0]
 800aaa2:	8042      	strh	r2, [r0, #2]
 800aaa4:	8082      	strh	r2, [r0, #4]
 800aaa6:	80c2      	strh	r2, [r0, #6]
 800aaa8:	4770      	bx	lr

0800aaaa <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800aaaa:	b570      	push	{r4, r5, r6, lr}
 800aaac:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800aaae:	460d      	mov	r5, r1
 800aab0:	4616      	mov	r6, r2
 800aab2:	b13c      	cbz	r4, 800aac4 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800aab4:	6823      	ldr	r3, [r4, #0]
 800aab6:	4620      	mov	r0, r4
 800aab8:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800aaba:	4632      	mov	r2, r6
 800aabc:	4629      	mov	r1, r5
 800aabe:	4798      	blx	r3
 800aac0:	69a4      	ldr	r4, [r4, #24]
 800aac2:	e7f6      	b.n	800aab2 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800aac4:	bd70      	pop	{r4, r5, r6, pc}

0800aac6 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800aac6:	b538      	push	{r3, r4, r5, lr}
 800aac8:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800aaca:	460d      	mov	r5, r1
 800aacc:	b134      	cbz	r4, 800aadc <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800aace:	682b      	ldr	r3, [r5, #0]
 800aad0:	4621      	mov	r1, r4
 800aad2:	689b      	ldr	r3, [r3, #8]
 800aad4:	4628      	mov	r0, r5
 800aad6:	4798      	blx	r3
 800aad8:	69a4      	ldr	r4, [r4, #24]
 800aada:	e7f7      	b.n	800aacc <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800aadc:	bd38      	pop	{r3, r4, r5, pc}

0800aade <_ZNK8touchgfx9Container17invalidateContentEv>:
 800aade:	b510      	push	{r4, lr}
 800aae0:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800aae2:	b12c      	cbz	r4, 800aaf0 <_ZNK8touchgfx9Container17invalidateContentEv+0x12>
 800aae4:	6823      	ldr	r3, [r4, #0]
 800aae6:	4620      	mov	r0, r4
 800aae8:	699b      	ldr	r3, [r3, #24]
 800aaea:	4798      	blx	r3
 800aaec:	69a4      	ldr	r4, [r4, #24]
 800aaee:	e7f8      	b.n	800aae2 <_ZNK8touchgfx9Container17invalidateContentEv+0x4>
 800aaf0:	bd10      	pop	{r4, pc}

0800aaf2 <_ZN8touchgfx9ContainerD1Ev>:
 800aaf2:	4770      	bx	lr

0800aaf4 <_ZN8touchgfx9ContainerD0Ev>:
 800aaf4:	b510      	push	{r4, lr}
 800aaf6:	212c      	movs	r1, #44	; 0x2c
 800aaf8:	4604      	mov	r4, r0
 800aafa:	f015 fdf5 	bl	80206e8 <_ZdlPvj>
 800aafe:	4620      	mov	r0, r4
 800ab00:	bd10      	pop	{r4, pc}

0800ab02 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800ab02:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800ab04:	b19b      	cbz	r3, 800ab2e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800ab06:	428b      	cmp	r3, r1
 800ab08:	d109      	bne.n	800ab1e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800ab0a:	699a      	ldr	r2, [r3, #24]
 800ab0c:	2100      	movs	r1, #0
 800ab0e:	6159      	str	r1, [r3, #20]
 800ab10:	6282      	str	r2, [r0, #40]	; 0x28
 800ab12:	b902      	cbnz	r2, 800ab16 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800ab14:	4770      	bx	lr
 800ab16:	6199      	str	r1, [r3, #24]
 800ab18:	4770      	bx	lr
 800ab1a:	4613      	mov	r3, r2
 800ab1c:	b13a      	cbz	r2, 800ab2e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800ab1e:	699a      	ldr	r2, [r3, #24]
 800ab20:	428a      	cmp	r2, r1
 800ab22:	d1fa      	bne.n	800ab1a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800ab24:	698a      	ldr	r2, [r1, #24]
 800ab26:	619a      	str	r2, [r3, #24]
 800ab28:	2300      	movs	r3, #0
 800ab2a:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800ab2e:	4770      	bx	lr

0800ab30 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800ab30:	b410      	push	{r4}
 800ab32:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800ab34:	4604      	mov	r4, r0
 800ab36:	b92b      	cbnz	r3, 800ab44 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800ab38:	6803      	ldr	r3, [r0, #0]
 800ab3a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800ab3e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800ab40:	4611      	mov	r1, r2
 800ab42:	4718      	bx	r3
 800ab44:	b941      	cbnz	r1, 800ab58 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800ab46:	6193      	str	r3, [r2, #24]
 800ab48:	6282      	str	r2, [r0, #40]	; 0x28
 800ab4a:	6154      	str	r4, [r2, #20]
 800ab4c:	f85d 4b04 	ldr.w	r4, [sp], #4
 800ab50:	4770      	bx	lr
 800ab52:	4603      	mov	r3, r0
 800ab54:	2800      	cmp	r0, #0
 800ab56:	d0f9      	beq.n	800ab4c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800ab58:	4299      	cmp	r1, r3
 800ab5a:	6998      	ldr	r0, [r3, #24]
 800ab5c:	d1f9      	bne.n	800ab52 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800ab5e:	6190      	str	r0, [r2, #24]
 800ab60:	618a      	str	r2, [r1, #24]
 800ab62:	e7f2      	b.n	800ab4a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

0800ab64 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800ab64:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ab68:	461f      	mov	r7, r3
 800ab6a:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 800ab6e:	460d      	mov	r5, r1
 800ab70:	4616      	mov	r6, r2
 800ab72:	b103      	cbz	r3, 800ab76 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800ab74:	6038      	str	r0, [r7, #0]
 800ab76:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800ab78:	b314      	cbz	r4, 800abc0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800ab7a:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800ab7e:	b1eb      	cbz	r3, 800abbc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800ab80:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800ab84:	428d      	cmp	r5, r1
 800ab86:	db19      	blt.n	800abbc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800ab88:	8923      	ldrh	r3, [r4, #8]
 800ab8a:	b289      	uxth	r1, r1
 800ab8c:	440b      	add	r3, r1
 800ab8e:	b21b      	sxth	r3, r3
 800ab90:	429d      	cmp	r5, r3
 800ab92:	da13      	bge.n	800abbc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800ab94:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800ab98:	4296      	cmp	r6, r2
 800ab9a:	db0f      	blt.n	800abbc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800ab9c:	8963      	ldrh	r3, [r4, #10]
 800ab9e:	b292      	uxth	r2, r2
 800aba0:	4413      	add	r3, r2
 800aba2:	b21b      	sxth	r3, r3
 800aba4:	429e      	cmp	r6, r3
 800aba6:	da09      	bge.n	800abbc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800aba8:	6823      	ldr	r3, [r4, #0]
 800abaa:	1ab2      	subs	r2, r6, r2
 800abac:	1a69      	subs	r1, r5, r1
 800abae:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 800abb2:	b212      	sxth	r2, r2
 800abb4:	463b      	mov	r3, r7
 800abb6:	b209      	sxth	r1, r1
 800abb8:	4620      	mov	r0, r4
 800abba:	47c0      	blx	r8
 800abbc:	69a4      	ldr	r4, [r4, #24]
 800abbe:	e7db      	b.n	800ab78 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800abc0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800abc4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 800abc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800abc8:	4c6e      	ldr	r4, [pc, #440]	; (800ad84 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 800abca:	b0a1      	sub	sp, #132	; 0x84
 800abcc:	6824      	ldr	r4, [r4, #0]
 800abce:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 800abd0:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 800abd4:	9303      	str	r3, [sp, #12]
 800abd6:	2400      	movs	r4, #0
 800abd8:	802c      	strh	r4, [r5, #0]
 800abda:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 800abdc:	802c      	strh	r4, [r5, #0]
 800abde:	601c      	str	r4, [r3, #0]
 800abe0:	4606      	mov	r6, r0
 800abe2:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800abe6:	f7ff ffbd 	bl	800ab64 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800abea:	f1b9 0f03 	cmp.w	r9, #3
 800abee:	f340 80c2 	ble.w	800ad76 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 800abf2:	4631      	mov	r1, r6
 800abf4:	a80c      	add	r0, sp, #48	; 0x30
 800abf6:	f007 fa8d 	bl	8012114 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800abfa:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 800abfe:	9306      	str	r3, [sp, #24]
 800ac00:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 800ac04:	9307      	str	r3, [sp, #28]
 800ac06:	9b03      	ldr	r3, [sp, #12]
 800ac08:	f8d3 a000 	ldr.w	sl, [r3]
 800ac0c:	f1ba 0f00 	cmp.w	sl, #0
 800ac10:	f000 80b4 	beq.w	800ad7c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 800ac14:	4651      	mov	r1, sl
 800ac16:	a810      	add	r0, sp, #64	; 0x40
 800ac18:	f007 fa7c 	bl	8012114 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ac1c:	9b01      	ldr	r3, [sp, #4]
 800ac1e:	9a06      	ldr	r2, [sp, #24]
 800ac20:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 800ac24:	189d      	adds	r5, r3, r2
 800ac26:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 800ac2a:	9a07      	ldr	r2, [sp, #28]
 800ac2c:	2002      	movs	r0, #2
 800ac2e:	fb91 f1f0 	sdiv	r1, r1, r0
 800ac32:	4419      	add	r1, r3
 800ac34:	1a6d      	subs	r5, r5, r1
 800ac36:	9b02      	ldr	r3, [sp, #8]
 800ac38:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800ac3c:	4413      	add	r3, r2
 800ac3e:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 800ac42:	fb92 f2f0 	sdiv	r2, r2, r0
 800ac46:	440a      	add	r2, r1
 800ac48:	1a9b      	subs	r3, r3, r2
 800ac4a:	435b      	muls	r3, r3
 800ac4c:	fb05 3505 	mla	r5, r5, r5, r3
 800ac50:	4f4d      	ldr	r7, [pc, #308]	; (800ad88 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 800ac52:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800ac54:	ac10      	add	r4, sp, #64	; 0x40
 800ac56:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800ac58:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800ac5a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800ac5c:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800ac5e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800ac60:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 800ac64:	f1b9 0f0c 	cmp.w	r9, #12
 800ac68:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800ac6c:	f04f 0303 	mov.w	r3, #3
 800ac70:	bfc8      	it	gt
 800ac72:	4698      	movgt	r8, r3
 800ac74:	f8cd 9000 	str.w	r9, [sp]
 800ac78:	f04f 0400 	mov.w	r4, #0
 800ac7c:	bfdc      	itt	le
 800ac7e:	f109 32ff 	addle.w	r2, r9, #4294967295
 800ac82:	fb92 f8f3 	sdivle	r8, r2, r3
 800ac86:	1c63      	adds	r3, r4, #1
 800ac88:	aa10      	add	r2, sp, #64	; 0x40
 800ac8a:	f004 0401 	and.w	r4, r4, #1
 800ac8e:	9308      	str	r3, [sp, #32]
 800ac90:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 800ac94:	9b00      	ldr	r3, [sp, #0]
 800ac96:	fb93 f3f8 	sdiv	r3, r3, r8
 800ac9a:	b29b      	uxth	r3, r3
 800ac9c:	3404      	adds	r4, #4
 800ac9e:	f04f 0b00 	mov.w	fp, #0
 800aca2:	9304      	str	r3, [sp, #16]
 800aca4:	9a04      	ldr	r2, [sp, #16]
 800aca6:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800acaa:	fb13 f302 	smulbb	r3, r3, r2
 800acae:	9a01      	ldr	r2, [sp, #4]
 800acb0:	b29b      	uxth	r3, r3
 800acb2:	1899      	adds	r1, r3, r2
 800acb4:	9305      	str	r3, [sp, #20]
 800acb6:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800acba:	b209      	sxth	r1, r1
 800acbc:	4299      	cmp	r1, r3
 800acbe:	db4d      	blt.n	800ad5c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800acc0:	8932      	ldrh	r2, [r6, #8]
 800acc2:	4413      	add	r3, r2
 800acc4:	b21b      	sxth	r3, r3
 800acc6:	4299      	cmp	r1, r3
 800acc8:	da48      	bge.n	800ad5c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800acca:	9b04      	ldr	r3, [sp, #16]
 800accc:	6827      	ldr	r7, [r4, #0]
 800acce:	fb17 f703 	smulbb	r7, r7, r3
 800acd2:	9b02      	ldr	r3, [sp, #8]
 800acd4:	b2bf      	uxth	r7, r7
 800acd6:	18fa      	adds	r2, r7, r3
 800acd8:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800acdc:	b212      	sxth	r2, r2
 800acde:	429a      	cmp	r2, r3
 800ace0:	db3c      	blt.n	800ad5c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800ace2:	8970      	ldrh	r0, [r6, #10]
 800ace4:	4403      	add	r3, r0
 800ace6:	b21b      	sxth	r3, r3
 800ace8:	429a      	cmp	r2, r3
 800acea:	da37      	bge.n	800ad5c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800acec:	2300      	movs	r3, #0
 800acee:	930b      	str	r3, [sp, #44]	; 0x2c
 800acf0:	4630      	mov	r0, r6
 800acf2:	ab0b      	add	r3, sp, #44	; 0x2c
 800acf4:	f7ff ff36 	bl	800ab64 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800acf8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800acfa:	b37a      	cbz	r2, 800ad5c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800acfc:	4552      	cmp	r2, sl
 800acfe:	d02d      	beq.n	800ad5c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800ad00:	4611      	mov	r1, r2
 800ad02:	a80e      	add	r0, sp, #56	; 0x38
 800ad04:	9209      	str	r2, [sp, #36]	; 0x24
 800ad06:	f007 fa05 	bl	8012114 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ad0a:	9a06      	ldr	r2, [sp, #24]
 800ad0c:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 800ad10:	9b01      	ldr	r3, [sp, #4]
 800ad12:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 800ad16:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 800ad1a:	4413      	add	r3, r2
 800ad1c:	f04f 0e02 	mov.w	lr, #2
 800ad20:	fb91 f1fe 	sdiv	r1, r1, lr
 800ad24:	4401      	add	r1, r0
 800ad26:	1a58      	subs	r0, r3, r1
 800ad28:	9a07      	ldr	r2, [sp, #28]
 800ad2a:	9b02      	ldr	r3, [sp, #8]
 800ad2c:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 800ad30:	fb9c fcfe 	sdiv	ip, ip, lr
 800ad34:	4413      	add	r3, r2
 800ad36:	448c      	add	ip, r1
 800ad38:	eba3 030c 	sub.w	r3, r3, ip
 800ad3c:	435b      	muls	r3, r3
 800ad3e:	fb00 3300 	mla	r3, r0, r0, r3
 800ad42:	42ab      	cmp	r3, r5
 800ad44:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800ad46:	d208      	bcs.n	800ad5a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 800ad48:	9803      	ldr	r0, [sp, #12]
 800ad4a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800ad4c:	6001      	str	r1, [r0, #0]
 800ad4e:	992a      	ldr	r1, [sp, #168]	; 0xa8
 800ad50:	9805      	ldr	r0, [sp, #20]
 800ad52:	8008      	strh	r0, [r1, #0]
 800ad54:	992b      	ldr	r1, [sp, #172]	; 0xac
 800ad56:	461d      	mov	r5, r3
 800ad58:	800f      	strh	r7, [r1, #0]
 800ad5a:	4692      	mov	sl, r2
 800ad5c:	f10b 0b01 	add.w	fp, fp, #1
 800ad60:	f1bb 0f04 	cmp.w	fp, #4
 800ad64:	f104 0408 	add.w	r4, r4, #8
 800ad68:	d19c      	bne.n	800aca4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 800ad6a:	9b00      	ldr	r3, [sp, #0]
 800ad6c:	9c08      	ldr	r4, [sp, #32]
 800ad6e:	444b      	add	r3, r9
 800ad70:	4544      	cmp	r4, r8
 800ad72:	9300      	str	r3, [sp, #0]
 800ad74:	d187      	bne.n	800ac86 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 800ad76:	b021      	add	sp, #132	; 0x84
 800ad78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ad7c:	f04f 35ff 	mov.w	r5, #4294967295
 800ad80:	e766      	b.n	800ac50 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 800ad82:	bf00      	nop
 800ad84:	200155b8 	.word	0x200155b8
 800ad88:	08021aa0 	.word	0x08021aa0

0800ad8c <_ZN8touchgfx4RectaNERKS0_>:
 800ad8c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ad90:	f9b1 7000 	ldrsh.w	r7, [r1]
 800ad94:	888c      	ldrh	r4, [r1, #4]
 800ad96:	f9b0 9000 	ldrsh.w	r9, [r0]
 800ad9a:	443c      	add	r4, r7
 800ad9c:	b2a4      	uxth	r4, r4
 800ad9e:	fa0f f884 	sxth.w	r8, r4
 800ada2:	45c1      	cmp	r9, r8
 800ada4:	da2f      	bge.n	800ae06 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800ada6:	8882      	ldrh	r2, [r0, #4]
 800ada8:	444a      	add	r2, r9
 800adaa:	b292      	uxth	r2, r2
 800adac:	fa0f fe82 	sxth.w	lr, r2
 800adb0:	4577      	cmp	r7, lr
 800adb2:	da28      	bge.n	800ae06 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800adb4:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800adb8:	88cb      	ldrh	r3, [r1, #6]
 800adba:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800adbe:	442b      	add	r3, r5
 800adc0:	b21b      	sxth	r3, r3
 800adc2:	429e      	cmp	r6, r3
 800adc4:	da1f      	bge.n	800ae06 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800adc6:	88c3      	ldrh	r3, [r0, #6]
 800adc8:	4433      	add	r3, r6
 800adca:	b29b      	uxth	r3, r3
 800adcc:	fa0f fc83 	sxth.w	ip, r3
 800add0:	4565      	cmp	r5, ip
 800add2:	da18      	bge.n	800ae06 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800add4:	454f      	cmp	r7, r9
 800add6:	bfb8      	it	lt
 800add8:	464f      	movlt	r7, r9
 800adda:	42b5      	cmp	r5, r6
 800addc:	bfb8      	it	lt
 800adde:	4635      	movlt	r5, r6
 800ade0:	45f0      	cmp	r8, lr
 800ade2:	bfd8      	it	le
 800ade4:	4622      	movle	r2, r4
 800ade6:	1bd2      	subs	r2, r2, r7
 800ade8:	8082      	strh	r2, [r0, #4]
 800adea:	884a      	ldrh	r2, [r1, #2]
 800adec:	88c9      	ldrh	r1, [r1, #6]
 800adee:	8007      	strh	r7, [r0, #0]
 800adf0:	440a      	add	r2, r1
 800adf2:	b292      	uxth	r2, r2
 800adf4:	b211      	sxth	r1, r2
 800adf6:	458c      	cmp	ip, r1
 800adf8:	bfa8      	it	ge
 800adfa:	4613      	movge	r3, r2
 800adfc:	1b5b      	subs	r3, r3, r5
 800adfe:	80c3      	strh	r3, [r0, #6]
 800ae00:	8045      	strh	r5, [r0, #2]
 800ae02:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ae06:	2300      	movs	r3, #0
 800ae08:	8003      	strh	r3, [r0, #0]
 800ae0a:	8043      	strh	r3, [r0, #2]
 800ae0c:	8083      	strh	r3, [r0, #4]
 800ae0e:	80c3      	strh	r3, [r0, #6]
 800ae10:	e7f7      	b.n	800ae02 <_ZN8touchgfx4RectaNERKS0_+0x76>

0800ae12 <_ZNK8touchgfx4Rect7isEmptyEv>:
 800ae12:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800ae16:	2b00      	cmp	r3, #0
 800ae18:	dd06      	ble.n	800ae28 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800ae1a:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800ae1e:	2800      	cmp	r0, #0
 800ae20:	bfcc      	ite	gt
 800ae22:	2000      	movgt	r0, #0
 800ae24:	2001      	movle	r0, #1
 800ae26:	4770      	bx	lr
 800ae28:	2001      	movs	r0, #1
 800ae2a:	4770      	bx	lr

0800ae2c <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800ae2c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ae30:	2300      	movs	r3, #0
 800ae32:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800ae34:	8003      	strh	r3, [r0, #0]
 800ae36:	4604      	mov	r4, r0
 800ae38:	8043      	strh	r3, [r0, #2]
 800ae3a:	8083      	strh	r3, [r0, #4]
 800ae3c:	80c3      	strh	r3, [r0, #6]
 800ae3e:	2d00      	cmp	r5, #0
 800ae40:	d040      	beq.n	800aec4 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800ae42:	1d28      	adds	r0, r5, #4
 800ae44:	f7ff ffe5 	bl	800ae12 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ae48:	b988      	cbnz	r0, 800ae6e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800ae4a:	4620      	mov	r0, r4
 800ae4c:	f7ff ffe1 	bl	800ae12 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ae50:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800ae54:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800ae58:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800ae5c:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800ae60:	b138      	cbz	r0, 800ae72 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800ae62:	8022      	strh	r2, [r4, #0]
 800ae64:	8063      	strh	r3, [r4, #2]
 800ae66:	f8a4 e004 	strh.w	lr, [r4, #4]
 800ae6a:	f8a4 c006 	strh.w	ip, [r4, #6]
 800ae6e:	69ad      	ldr	r5, [r5, #24]
 800ae70:	e7e5      	b.n	800ae3e <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800ae72:	f9b4 0000 	ldrsh.w	r0, [r4]
 800ae76:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800ae7a:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800ae7e:	4290      	cmp	r0, r2
 800ae80:	4607      	mov	r7, r0
 800ae82:	bfa8      	it	ge
 800ae84:	4617      	movge	r7, r2
 800ae86:	4472      	add	r2, lr
 800ae88:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800ae8c:	8027      	strh	r7, [r4, #0]
 800ae8e:	4299      	cmp	r1, r3
 800ae90:	460e      	mov	r6, r1
 800ae92:	4440      	add	r0, r8
 800ae94:	bfa8      	it	ge
 800ae96:	461e      	movge	r6, r3
 800ae98:	4471      	add	r1, lr
 800ae9a:	4463      	add	r3, ip
 800ae9c:	b200      	sxth	r0, r0
 800ae9e:	b212      	sxth	r2, r2
 800aea0:	b209      	sxth	r1, r1
 800aea2:	b21b      	sxth	r3, r3
 800aea4:	4290      	cmp	r0, r2
 800aea6:	bfac      	ite	ge
 800aea8:	ebc7 0200 	rsbge	r2, r7, r0
 800aeac:	ebc7 0202 	rsblt	r2, r7, r2
 800aeb0:	4299      	cmp	r1, r3
 800aeb2:	bfac      	ite	ge
 800aeb4:	ebc6 0301 	rsbge	r3, r6, r1
 800aeb8:	ebc6 0303 	rsblt	r3, r6, r3
 800aebc:	8066      	strh	r6, [r4, #2]
 800aebe:	80a2      	strh	r2, [r4, #4]
 800aec0:	80e3      	strh	r3, [r4, #6]
 800aec2:	e7d4      	b.n	800ae6e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800aec4:	4620      	mov	r0, r4
 800aec6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800aeca <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800aeca:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800aece:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800aed2:	b383      	cbz	r3, 800af36 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800aed4:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800aed6:	b374      	cbz	r4, 800af36 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800aed8:	f9b1 5000 	ldrsh.w	r5, [r1]
 800aedc:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800aee0:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800aee4:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800aee8:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800aeec:	b303      	cbz	r3, 800af30 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800aeee:	4668      	mov	r0, sp
 800aef0:	1d21      	adds	r1, r4, #4
 800aef2:	f8ad 5000 	strh.w	r5, [sp]
 800aef6:	f8ad 6002 	strh.w	r6, [sp, #2]
 800aefa:	f8ad 7004 	strh.w	r7, [sp, #4]
 800aefe:	f8ad 8006 	strh.w	r8, [sp, #6]
 800af02:	f7ff ff43 	bl	800ad8c <_ZN8touchgfx4RectaNERKS0_>
 800af06:	4668      	mov	r0, sp
 800af08:	f7ff ff83 	bl	800ae12 <_ZNK8touchgfx4Rect7isEmptyEv>
 800af0c:	b980      	cbnz	r0, 800af30 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800af0e:	f8bd 3000 	ldrh.w	r3, [sp]
 800af12:	88a2      	ldrh	r2, [r4, #4]
 800af14:	1a9b      	subs	r3, r3, r2
 800af16:	f8ad 3000 	strh.w	r3, [sp]
 800af1a:	88e2      	ldrh	r2, [r4, #6]
 800af1c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800af20:	1a9b      	subs	r3, r3, r2
 800af22:	f8ad 3002 	strh.w	r3, [sp, #2]
 800af26:	6823      	ldr	r3, [r4, #0]
 800af28:	4669      	mov	r1, sp
 800af2a:	689b      	ldr	r3, [r3, #8]
 800af2c:	4620      	mov	r0, r4
 800af2e:	4798      	blx	r3
 800af30:	69a4      	ldr	r4, [r4, #24]
 800af32:	2c00      	cmp	r4, #0
 800af34:	d1d8      	bne.n	800aee8 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800af36:	b002      	add	sp, #8
 800af38:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800af3c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800af3c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800af3e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800af42:	460d      	mov	r5, r1
 800af44:	4616      	mov	r6, r2
 800af46:	b323      	cbz	r3, 800af92 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800af48:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800af4a:	b314      	cbz	r4, 800af92 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800af4c:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800af50:	b1eb      	cbz	r3, 800af8e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800af52:	6828      	ldr	r0, [r5, #0]
 800af54:	6869      	ldr	r1, [r5, #4]
 800af56:	466b      	mov	r3, sp
 800af58:	c303      	stmia	r3!, {r0, r1}
 800af5a:	4668      	mov	r0, sp
 800af5c:	1d21      	adds	r1, r4, #4
 800af5e:	f7ff ff15 	bl	800ad8c <_ZN8touchgfx4RectaNERKS0_>
 800af62:	4668      	mov	r0, sp
 800af64:	f7ff ff55 	bl	800ae12 <_ZNK8touchgfx4Rect7isEmptyEv>
 800af68:	b988      	cbnz	r0, 800af8e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800af6a:	f8bd 3000 	ldrh.w	r3, [sp]
 800af6e:	88a2      	ldrh	r2, [r4, #4]
 800af70:	1a9b      	subs	r3, r3, r2
 800af72:	f8ad 3000 	strh.w	r3, [sp]
 800af76:	88e2      	ldrh	r2, [r4, #6]
 800af78:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800af7c:	1a9b      	subs	r3, r3, r2
 800af7e:	f8ad 3002 	strh.w	r3, [sp, #2]
 800af82:	6823      	ldr	r3, [r4, #0]
 800af84:	4632      	mov	r2, r6
 800af86:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800af88:	4669      	mov	r1, sp
 800af8a:	4620      	mov	r0, r4
 800af8c:	4798      	blx	r3
 800af8e:	69a4      	ldr	r4, [r4, #24]
 800af90:	e7db      	b.n	800af4a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800af92:	b002      	add	sp, #8
 800af94:	bd70      	pop	{r4, r5, r6, pc}

0800af96 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800af96:	b513      	push	{r0, r1, r4, lr}
 800af98:	6803      	ldr	r3, [r0, #0]
 800af9a:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 800af9e:	2300      	movs	r3, #0
 800afa0:	e9cd 3300 	strd	r3, r3, [sp]
 800afa4:	466b      	mov	r3, sp
 800afa6:	47a0      	blx	r4
 800afa8:	b002      	add	sp, #8
 800afaa:	bd10      	pop	{r4, pc}

0800afac <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800afac:	2301      	movs	r3, #1
 800afae:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800afb2:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 800afb6:	4770      	bx	lr

0800afb8 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800afb8:	2301      	movs	r3, #1
 800afba:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800afbe:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 800afc2:	4770      	bx	lr

0800afc4 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800afc4:	6843      	ldr	r3, [r0, #4]
 800afc6:	2201      	movs	r2, #1
 800afc8:	725a      	strb	r2, [r3, #9]
 800afca:	6840      	ldr	r0, [r0, #4]
 800afcc:	6803      	ldr	r3, [r0, #0]
 800afce:	691b      	ldr	r3, [r3, #16]
 800afd0:	4718      	bx	r3

0800afd2 <_ZN8touchgfx3HAL8flushDMAEv>:
 800afd2:	6840      	ldr	r0, [r0, #4]
 800afd4:	6803      	ldr	r3, [r0, #0]
 800afd6:	689b      	ldr	r3, [r3, #8]
 800afd8:	4718      	bx	r3

0800afda <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 800afda:	b530      	push	{r4, r5, lr}
 800afdc:	b08b      	sub	sp, #44	; 0x2c
 800afde:	6804      	ldr	r4, [r0, #0]
 800afe0:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 800afe4:	9509      	str	r5, [sp, #36]	; 0x24
 800afe6:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 800afea:	9508      	str	r5, [sp, #32]
 800afec:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 800aff0:	9507      	str	r5, [sp, #28]
 800aff2:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 800aff6:	9506      	str	r5, [sp, #24]
 800aff8:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 800affc:	9505      	str	r5, [sp, #20]
 800affe:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 800b002:	9504      	str	r5, [sp, #16]
 800b004:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 800b008:	9503      	str	r5, [sp, #12]
 800b00a:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 800b00e:	9502      	str	r5, [sp, #8]
 800b010:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 800b014:	e9cd 3500 	strd	r3, r5, [sp]
 800b018:	4613      	mov	r3, r2
 800b01a:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 800b01c:	2200      	movs	r2, #0
 800b01e:	47a0      	blx	r4
 800b020:	b00b      	add	sp, #44	; 0x2c
 800b022:	bd30      	pop	{r4, r5, pc}

0800b024 <_ZN8touchgfx3HAL10beginFrameEv>:
 800b024:	4b04      	ldr	r3, [pc, #16]	; (800b038 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800b026:	781b      	ldrb	r3, [r3, #0]
 800b028:	b123      	cbz	r3, 800b034 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800b02a:	f890 006a 	ldrb.w	r0, [r0, #106]	; 0x6a
 800b02e:	f080 0001 	eor.w	r0, r0, #1
 800b032:	4770      	bx	lr
 800b034:	2001      	movs	r0, #1
 800b036:	4770      	bx	lr
 800b038:	200155b6 	.word	0x200155b6

0800b03c <_ZN8touchgfx3HAL8endFrameEv>:
 800b03c:	b510      	push	{r4, lr}
 800b03e:	4604      	mov	r4, r0
 800b040:	6840      	ldr	r0, [r0, #4]
 800b042:	6803      	ldr	r3, [r0, #0]
 800b044:	689b      	ldr	r3, [r3, #8]
 800b046:	4798      	blx	r3
 800b048:	f894 3069 	ldrb.w	r3, [r4, #105]	; 0x69
 800b04c:	b113      	cbz	r3, 800b054 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800b04e:	2301      	movs	r3, #1
 800b050:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800b054:	bd10      	pop	{r4, pc}

0800b056 <_ZN8touchgfx3HAL10initializeEv>:
 800b056:	b510      	push	{r4, lr}
 800b058:	4604      	mov	r4, r0
 800b05a:	f7f5 fc45 	bl	80008e8 <_ZN8touchgfx10OSWrappers10initializeEv>
 800b05e:	6860      	ldr	r0, [r4, #4]
 800b060:	6803      	ldr	r3, [r0, #0]
 800b062:	68db      	ldr	r3, [r3, #12]
 800b064:	4798      	blx	r3
 800b066:	68e0      	ldr	r0, [r4, #12]
 800b068:	6803      	ldr	r3, [r0, #0]
 800b06a:	689b      	ldr	r3, [r3, #8]
 800b06c:	4798      	blx	r3
 800b06e:	6823      	ldr	r3, [r4, #0]
 800b070:	4620      	mov	r0, r4
 800b072:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800b074:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b078:	4718      	bx	r3
	...

0800b07c <_ZN8touchgfx3HAL4tickEv>:
 800b07c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800b07e:	6803      	ldr	r3, [r0, #0]
 800b080:	4d5b      	ldr	r5, [pc, #364]	; (800b1f0 <_ZN8touchgfx3HAL4tickEv+0x174>)
 800b082:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800b086:	4604      	mov	r4, r0
 800b088:	4798      	blx	r3
 800b08a:	2800      	cmp	r0, #0
 800b08c:	f000 8095 	beq.w	800b1ba <_ZN8touchgfx3HAL4tickEv+0x13e>
 800b090:	2001      	movs	r0, #1
 800b092:	f7f5 fb55 	bl	8000740 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800b096:	f894 3066 	ldrb.w	r3, [r4, #102]	; 0x66
 800b09a:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 800b09e:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 800b0a2:	2600      	movs	r6, #0
 800b0a4:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800b0a8:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 800b0ac:	b133      	cbz	r3, 800b0bc <_ZN8touchgfx3HAL4tickEv+0x40>
 800b0ae:	6823      	ldr	r3, [r4, #0]
 800b0b0:	4620      	mov	r0, r4
 800b0b2:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 800b0b6:	4798      	blx	r3
 800b0b8:	f884 6075 	strb.w	r6, [r4, #117]	; 0x75
 800b0bc:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 800b0c0:	6862      	ldr	r2, [r4, #4]
 800b0c2:	f083 0301 	eor.w	r3, r3, #1
 800b0c6:	7253      	strb	r3, [r2, #9]
 800b0c8:	2601      	movs	r6, #1
 800b0ca:	702e      	strb	r6, [r5, #0]
 800b0cc:	f005 fff0 	bl	80110b0 <_ZN8touchgfx11Application11getInstanceEv>
 800b0d0:	6803      	ldr	r3, [r0, #0]
 800b0d2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800b0d4:	4798      	blx	r3
 800b0d6:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 800b0da:	b90b      	cbnz	r3, 800b0e0 <_ZN8touchgfx3HAL4tickEv+0x64>
 800b0dc:	f884 6067 	strb.w	r6, [r4, #103]	; 0x67
 800b0e0:	f005 ffe6 	bl	80110b0 <_ZN8touchgfx11Application11getInstanceEv>
 800b0e4:	6803      	ldr	r3, [r0, #0]
 800b0e6:	695b      	ldr	r3, [r3, #20]
 800b0e8:	4798      	blx	r3
 800b0ea:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800b0ec:	6803      	ldr	r3, [r0, #0]
 800b0ee:	691b      	ldr	r3, [r3, #16]
 800b0f0:	4798      	blx	r3
 800b0f2:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 800b0f6:	f894 2068 	ldrb.w	r2, [r4, #104]	; 0x68
 800b0fa:	3b01      	subs	r3, #1
 800b0fc:	b2db      	uxtb	r3, r3
 800b0fe:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 800b102:	b10a      	cbz	r2, 800b108 <_ZN8touchgfx3HAL4tickEv+0x8c>
 800b104:	2b00      	cmp	r3, #0
 800b106:	d1eb      	bne.n	800b0e0 <_ZN8touchgfx3HAL4tickEv+0x64>
 800b108:	4a3a      	ldr	r2, [pc, #232]	; (800b1f4 <_ZN8touchgfx3HAL4tickEv+0x178>)
 800b10a:	f994 1064 	ldrsb.w	r1, [r4, #100]	; 0x64
 800b10e:	7813      	ldrb	r3, [r2, #0]
 800b110:	3301      	adds	r3, #1
 800b112:	b25b      	sxtb	r3, r3
 800b114:	4299      	cmp	r1, r3
 800b116:	7013      	strb	r3, [r2, #0]
 800b118:	dc10      	bgt.n	800b13c <_ZN8touchgfx3HAL4tickEv+0xc0>
 800b11a:	68e0      	ldr	r0, [r4, #12]
 800b11c:	2300      	movs	r3, #0
 800b11e:	7013      	strb	r3, [r2, #0]
 800b120:	6803      	ldr	r3, [r0, #0]
 800b122:	aa03      	add	r2, sp, #12
 800b124:	68db      	ldr	r3, [r3, #12]
 800b126:	a902      	add	r1, sp, #8
 800b128:	4798      	blx	r3
 800b12a:	6823      	ldr	r3, [r4, #0]
 800b12c:	2800      	cmp	r0, #0
 800b12e:	d050      	beq.n	800b1d2 <_ZN8touchgfx3HAL4tickEv+0x156>
 800b130:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800b134:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800b138:	4620      	mov	r0, r4
 800b13a:	4798      	blx	r3
 800b13c:	6960      	ldr	r0, [r4, #20]
 800b13e:	2300      	movs	r3, #0
 800b140:	f88d 3007 	strb.w	r3, [sp, #7]
 800b144:	b158      	cbz	r0, 800b15e <_ZN8touchgfx3HAL4tickEv+0xe2>
 800b146:	6803      	ldr	r3, [r0, #0]
 800b148:	f10d 0107 	add.w	r1, sp, #7
 800b14c:	68db      	ldr	r3, [r3, #12]
 800b14e:	4798      	blx	r3
 800b150:	b128      	cbz	r0, 800b15e <_ZN8touchgfx3HAL4tickEv+0xe2>
 800b152:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800b154:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800b158:	6803      	ldr	r3, [r0, #0]
 800b15a:	68db      	ldr	r3, [r3, #12]
 800b15c:	4798      	blx	r3
 800b15e:	f104 001c 	add.w	r0, r4, #28
 800b162:	f014 fef9 	bl	801ff58 <_ZN8touchgfx8Gestures4tickEv>
 800b166:	f894 306c 	ldrb.w	r3, [r4, #108]	; 0x6c
 800b16a:	b30b      	cbz	r3, 800b1b0 <_ZN8touchgfx3HAL4tickEv+0x134>
 800b16c:	6920      	ldr	r0, [r4, #16]
 800b16e:	6803      	ldr	r3, [r0, #0]
 800b170:	691b      	ldr	r3, [r3, #16]
 800b172:	4798      	blx	r3
 800b174:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800b176:	4606      	mov	r6, r0
 800b178:	b903      	cbnz	r3, 800b17c <_ZN8touchgfx3HAL4tickEv+0x100>
 800b17a:	6720      	str	r0, [r4, #112]	; 0x70
 800b17c:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800b17e:	4a1e      	ldr	r2, [pc, #120]	; (800b1f8 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 800b180:	1af3      	subs	r3, r6, r3
 800b182:	4293      	cmp	r3, r2
 800b184:	d914      	bls.n	800b1b0 <_ZN8touchgfx3HAL4tickEv+0x134>
 800b186:	6920      	ldr	r0, [r4, #16]
 800b188:	6803      	ldr	r3, [r0, #0]
 800b18a:	699b      	ldr	r3, [r3, #24]
 800b18c:	4798      	blx	r3
 800b18e:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800b190:	2264      	movs	r2, #100	; 0x64
 800b192:	1af3      	subs	r3, r6, r3
 800b194:	fbb3 f3f2 	udiv	r3, r3, r2
 800b198:	fbb0 f0f3 	udiv	r0, r0, r3
 800b19c:	2800      	cmp	r0, #0
 800b19e:	dc1d      	bgt.n	800b1dc <_ZN8touchgfx3HAL4tickEv+0x160>
 800b1a0:	f884 2065 	strb.w	r2, [r4, #101]	; 0x65
 800b1a4:	6920      	ldr	r0, [r4, #16]
 800b1a6:	6803      	ldr	r3, [r0, #0]
 800b1a8:	2100      	movs	r1, #0
 800b1aa:	69db      	ldr	r3, [r3, #28]
 800b1ac:	4798      	blx	r3
 800b1ae:	6726      	str	r6, [r4, #112]	; 0x70
 800b1b0:	f005 ff7e 	bl	80110b0 <_ZN8touchgfx11Application11getInstanceEv>
 800b1b4:	6803      	ldr	r3, [r0, #0]
 800b1b6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b1b8:	4798      	blx	r3
 800b1ba:	6823      	ldr	r3, [r4, #0]
 800b1bc:	4620      	mov	r0, r4
 800b1be:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800b1c2:	4798      	blx	r3
 800b1c4:	2001      	movs	r0, #1
 800b1c6:	f7f5 fabc 	bl	8000742 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800b1ca:	2300      	movs	r3, #0
 800b1cc:	702b      	strb	r3, [r5, #0]
 800b1ce:	b004      	add	sp, #16
 800b1d0:	bd70      	pop	{r4, r5, r6, pc}
 800b1d2:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 800b1d6:	4620      	mov	r0, r4
 800b1d8:	4798      	blx	r3
 800b1da:	e7af      	b.n	800b13c <_ZN8touchgfx3HAL4tickEv+0xc0>
 800b1dc:	2863      	cmp	r0, #99	; 0x63
 800b1de:	bfcb      	itete	gt
 800b1e0:	2300      	movgt	r3, #0
 800b1e2:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 800b1e6:	f884 3065 	strbgt.w	r3, [r4, #101]	; 0x65
 800b1ea:	f884 0065 	strble.w	r0, [r4, #101]	; 0x65
 800b1ee:	e7d9      	b.n	800b1a4 <_ZN8touchgfx3HAL4tickEv+0x128>
 800b1f0:	200155bc 	.word	0x200155bc
 800b1f4:	200155bd 	.word	0x200155bd
 800b1f8:	05f5e100 	.word	0x05f5e100

0800b1fc <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800b1fc:	f7f5 bba4 	b.w	8000948 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800b200 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800b200:	6581      	str	r1, [r0, #88]	; 0x58
 800b202:	301c      	adds	r0, #28
 800b204:	f014 bea6 	b.w	801ff54 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800b208 <_ZN8touchgfx3HAL5touchEll>:
 800b208:	b530      	push	{r4, r5, lr}
 800b20a:	b087      	sub	sp, #28
 800b20c:	4604      	mov	r4, r0
 800b20e:	a804      	add	r0, sp, #16
 800b210:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800b214:	f005 fd0e 	bl	8010c34 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800b218:	9b04      	ldr	r3, [sp, #16]
 800b21a:	f8ad 300c 	strh.w	r3, [sp, #12]
 800b21e:	a906      	add	r1, sp, #24
 800b220:	9b05      	ldr	r3, [sp, #20]
 800b222:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800b226:	a803      	add	r0, sp, #12
 800b228:	f005 fd56 	bl	8010cd8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800b22c:	f894 106b 	ldrb.w	r1, [r4, #107]	; 0x6b
 800b230:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800b234:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800b238:	f104 001c 	add.w	r0, r4, #28
 800b23c:	b189      	cbz	r1, 800b262 <_ZN8touchgfx3HAL5touchEll+0x5a>
 800b23e:	f8b4 5060 	ldrh.w	r5, [r4, #96]	; 0x60
 800b242:	9300      	str	r3, [sp, #0]
 800b244:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 800b248:	4613      	mov	r3, r2
 800b24a:	462a      	mov	r2, r5
 800b24c:	f014 fe92 	bl	801ff74 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800b250:	b128      	cbz	r0, 800b25e <_ZN8touchgfx3HAL5touchEll+0x56>
 800b252:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800b256:	65e3      	str	r3, [r4, #92]	; 0x5c
 800b258:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800b25c:	6623      	str	r3, [r4, #96]	; 0x60
 800b25e:	b007      	add	sp, #28
 800b260:	bd30      	pop	{r4, r5, pc}
 800b262:	f014 fec7 	bl	801fff4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800b266:	2301      	movs	r3, #1
 800b268:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800b26c:	e7f1      	b.n	800b252 <_ZN8touchgfx3HAL5touchEll+0x4a>

0800b26e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800b26e:	b510      	push	{r4, lr}
 800b270:	2b00      	cmp	r3, #0
 800b272:	d046      	beq.n	800b302 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800b274:	ea81 0002 	eor.w	r0, r1, r2
 800b278:	07c4      	lsls	r4, r0, #31
 800b27a:	d508      	bpl.n	800b28e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800b27c:	440b      	add	r3, r1
 800b27e:	3a01      	subs	r2, #1
 800b280:	428b      	cmp	r3, r1
 800b282:	d93e      	bls.n	800b302 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800b284:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800b288:	f801 0b01 	strb.w	r0, [r1], #1
 800b28c:	e7f8      	b.n	800b280 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800b28e:	07d0      	lsls	r0, r2, #31
 800b290:	bf42      	ittt	mi
 800b292:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800b296:	f801 0b01 	strbmi.w	r0, [r1], #1
 800b29a:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800b29e:	2b01      	cmp	r3, #1
 800b2a0:	d911      	bls.n	800b2c6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800b2a2:	ea81 0402 	eor.w	r4, r1, r2
 800b2a6:	07a4      	lsls	r4, r4, #30
 800b2a8:	4610      	mov	r0, r2
 800b2aa:	d022      	beq.n	800b2f2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 800b2ac:	f023 0401 	bic.w	r4, r3, #1
 800b2b0:	440c      	add	r4, r1
 800b2b2:	428c      	cmp	r4, r1
 800b2b4:	4602      	mov	r2, r0
 800b2b6:	d904      	bls.n	800b2c2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 800b2b8:	8812      	ldrh	r2, [r2, #0]
 800b2ba:	f821 2b02 	strh.w	r2, [r1], #2
 800b2be:	3002      	adds	r0, #2
 800b2c0:	e7f7      	b.n	800b2b2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 800b2c2:	f003 0301 	and.w	r3, r3, #1
 800b2c6:	f023 0003 	bic.w	r0, r3, #3
 800b2ca:	4408      	add	r0, r1
 800b2cc:	4288      	cmp	r0, r1
 800b2ce:	4614      	mov	r4, r2
 800b2d0:	d904      	bls.n	800b2dc <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 800b2d2:	6824      	ldr	r4, [r4, #0]
 800b2d4:	f841 4b04 	str.w	r4, [r1], #4
 800b2d8:	3204      	adds	r2, #4
 800b2da:	e7f7      	b.n	800b2cc <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 800b2dc:	f003 0303 	and.w	r3, r3, #3
 800b2e0:	440b      	add	r3, r1
 800b2e2:	3a01      	subs	r2, #1
 800b2e4:	428b      	cmp	r3, r1
 800b2e6:	d90c      	bls.n	800b302 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800b2e8:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800b2ec:	f801 0b01 	strb.w	r0, [r1], #1
 800b2f0:	e7f8      	b.n	800b2e4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 800b2f2:	0790      	lsls	r0, r2, #30
 800b2f4:	d0e7      	beq.n	800b2c6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800b2f6:	f832 0b02 	ldrh.w	r0, [r2], #2
 800b2fa:	f821 0b02 	strh.w	r0, [r1], #2
 800b2fe:	3b02      	subs	r3, #2
 800b300:	e7e1      	b.n	800b2c6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800b302:	2001      	movs	r0, #1
 800b304:	bd10      	pop	{r4, pc}

0800b306 <_ZN8touchgfx3HAL7noTouchEv>:
 800b306:	b510      	push	{r4, lr}
 800b308:	f890 306b 	ldrb.w	r3, [r0, #107]	; 0x6b
 800b30c:	4604      	mov	r4, r0
 800b30e:	b153      	cbz	r3, 800b326 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800b310:	f8b0 3060 	ldrh.w	r3, [r0, #96]	; 0x60
 800b314:	f8b0 205c 	ldrh.w	r2, [r0, #92]	; 0x5c
 800b318:	2101      	movs	r1, #1
 800b31a:	301c      	adds	r0, #28
 800b31c:	f014 fe6a 	bl	801fff4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800b320:	2300      	movs	r3, #0
 800b322:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800b326:	bd10      	pop	{r4, pc}

0800b328 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800b328:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b32c:	b085      	sub	sp, #20
 800b32e:	ad04      	add	r5, sp, #16
 800b330:	4604      	mov	r4, r0
 800b332:	2000      	movs	r0, #0
 800b334:	f845 0d04 	str.w	r0, [r5, #-4]!
 800b338:	69a0      	ldr	r0, [r4, #24]
 800b33a:	6806      	ldr	r6, [r0, #0]
 800b33c:	9501      	str	r5, [sp, #4]
 800b33e:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 800b342:	9500      	str	r5, [sp, #0]
 800b344:	6835      	ldr	r5, [r6, #0]
 800b346:	4699      	mov	r9, r3
 800b348:	460f      	mov	r7, r1
 800b34a:	4690      	mov	r8, r2
 800b34c:	47a8      	blx	r5
 800b34e:	4d10      	ldr	r5, [pc, #64]	; (800b390 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 800b350:	4606      	mov	r6, r0
 800b352:	f8a5 9000 	strh.w	r9, [r5]
 800b356:	f7f7 f9db 	bl	8002710 <_ZN8touchgfx3HAL3lcdEv>
 800b35a:	6803      	ldr	r3, [r0, #0]
 800b35c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b35e:	4798      	blx	r3
 800b360:	b128      	cbz	r0, 800b36e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 800b362:	2801      	cmp	r0, #1
 800b364:	d00b      	beq.n	800b37e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 800b366:	4630      	mov	r0, r6
 800b368:	b005      	add	sp, #20
 800b36a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b36e:	882b      	ldrh	r3, [r5, #0]
 800b370:	fb08 7203 	mla	r2, r8, r3, r7
 800b374:	9b03      	ldr	r3, [sp, #12]
 800b376:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800b37a:	63e3      	str	r3, [r4, #60]	; 0x3c
 800b37c:	e7f3      	b.n	800b366 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800b37e:	882a      	ldrh	r2, [r5, #0]
 800b380:	9b03      	ldr	r3, [sp, #12]
 800b382:	fb08 7202 	mla	r2, r8, r2, r7
 800b386:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800b38a:	1a9a      	subs	r2, r3, r2
 800b38c:	63e2      	str	r2, [r4, #60]	; 0x3c
 800b38e:	e7ea      	b.n	800b366 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800b390:	200155b2 	.word	0x200155b2

0800b394 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 800b394:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b396:	b08b      	sub	sp, #44	; 0x2c
 800b398:	4617      	mov	r7, r2
 800b39a:	4604      	mov	r4, r0
 800b39c:	460e      	mov	r6, r1
 800b39e:	461d      	mov	r5, r3
 800b3a0:	f7f7 f9b6 	bl	8002710 <_ZN8touchgfx3HAL3lcdEv>
 800b3a4:	6803      	ldr	r3, [r0, #0]
 800b3a6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b3a8:	4798      	blx	r3
 800b3aa:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800b3ae:	9007      	str	r0, [sp, #28]
 800b3b0:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800b3b4:	4b0d      	ldr	r3, [pc, #52]	; (800b3ec <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 800b3b6:	6822      	ldr	r2, [r4, #0]
 800b3b8:	881b      	ldrh	r3, [r3, #0]
 800b3ba:	9306      	str	r3, [sp, #24]
 800b3bc:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800b3c0:	9305      	str	r3, [sp, #20]
 800b3c2:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 800b3c6:	9304      	str	r3, [sp, #16]
 800b3c8:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b3cc:	9303      	str	r3, [sp, #12]
 800b3ce:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800b3d2:	9302      	str	r3, [sp, #8]
 800b3d4:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800b3d8:	e9cd 5300 	strd	r5, r3, [sp]
 800b3dc:	4631      	mov	r1, r6
 800b3de:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 800b3e0:	463b      	mov	r3, r7
 800b3e2:	2200      	movs	r2, #0
 800b3e4:	4620      	mov	r0, r4
 800b3e6:	47a8      	blx	r5
 800b3e8:	b00b      	add	sp, #44	; 0x2c
 800b3ea:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b3ec:	200155b2 	.word	0x200155b2

0800b3f0 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 800b3f0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b3f4:	4698      	mov	r8, r3
 800b3f6:	6803      	ldr	r3, [r0, #0]
 800b3f8:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 800b3fa:	4b15      	ldr	r3, [pc, #84]	; (800b450 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 800b3fc:	b08b      	sub	sp, #44	; 0x2c
 800b3fe:	4617      	mov	r7, r2
 800b400:	f8b3 9000 	ldrh.w	r9, [r3]
 800b404:	460e      	mov	r6, r1
 800b406:	4604      	mov	r4, r0
 800b408:	f7f7 f982 	bl	8002710 <_ZN8touchgfx3HAL3lcdEv>
 800b40c:	6803      	ldr	r3, [r0, #0]
 800b40e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b410:	4798      	blx	r3
 800b412:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800b416:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800b41a:	2302      	movs	r3, #2
 800b41c:	e9cd 9306 	strd	r9, r3, [sp, #24]
 800b420:	2301      	movs	r3, #1
 800b422:	9305      	str	r3, [sp, #20]
 800b424:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800b428:	9304      	str	r3, [sp, #16]
 800b42a:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800b42e:	9303      	str	r3, [sp, #12]
 800b430:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800b434:	9302      	str	r3, [sp, #8]
 800b436:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b43a:	2200      	movs	r2, #0
 800b43c:	e9cd 8300 	strd	r8, r3, [sp]
 800b440:	4631      	mov	r1, r6
 800b442:	463b      	mov	r3, r7
 800b444:	4620      	mov	r0, r4
 800b446:	47a8      	blx	r5
 800b448:	b00b      	add	sp, #44	; 0x2c
 800b44a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b44e:	bf00      	nop
 800b450:	200155b2 	.word	0x200155b2

0800b454 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 800b454:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b458:	4698      	mov	r8, r3
 800b45a:	6803      	ldr	r3, [r0, #0]
 800b45c:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 800b45e:	4b11      	ldr	r3, [pc, #68]	; (800b4a4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 800b460:	b087      	sub	sp, #28
 800b462:	f8b3 9000 	ldrh.w	r9, [r3]
 800b466:	460e      	mov	r6, r1
 800b468:	4617      	mov	r7, r2
 800b46a:	4604      	mov	r4, r0
 800b46c:	f7f7 f950 	bl	8002710 <_ZN8touchgfx3HAL3lcdEv>
 800b470:	6803      	ldr	r3, [r0, #0]
 800b472:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b474:	4798      	blx	r3
 800b476:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 800b47a:	f8cd 900c 	str.w	r9, [sp, #12]
 800b47e:	e9cd 0304 	strd	r0, r3, [sp, #16]
 800b482:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 800b486:	9302      	str	r3, [sp, #8]
 800b488:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800b48c:	9301      	str	r3, [sp, #4]
 800b48e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800b492:	9300      	str	r3, [sp, #0]
 800b494:	463a      	mov	r2, r7
 800b496:	4643      	mov	r3, r8
 800b498:	4631      	mov	r1, r6
 800b49a:	4620      	mov	r0, r4
 800b49c:	47a8      	blx	r5
 800b49e:	b007      	add	sp, #28
 800b4a0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b4a4:	200155b2 	.word	0x200155b2

0800b4a8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800b4a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b4ac:	4604      	mov	r4, r0
 800b4ae:	b08f      	sub	sp, #60	; 0x3c
 800b4b0:	4610      	mov	r0, r2
 800b4b2:	460d      	mov	r5, r1
 800b4b4:	4691      	mov	r9, r2
 800b4b6:	461e      	mov	r6, r3
 800b4b8:	f008 ff96 	bl	80143e8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800b4bc:	2800      	cmp	r0, #0
 800b4be:	f000 809d 	beq.w	800b5fc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 800b4c2:	6823      	ldr	r3, [r4, #0]
 800b4c4:	f8df b198 	ldr.w	fp, [pc, #408]	; 800b660 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 800b4c8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b4ca:	f8df a198 	ldr.w	sl, [pc, #408]	; 800b664 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 800b4ce:	4f61      	ldr	r7, [pc, #388]	; (800b654 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800b4d0:	4620      	mov	r0, r4
 800b4d2:	4798      	blx	r3
 800b4d4:	6823      	ldr	r3, [r4, #0]
 800b4d6:	4620      	mov	r0, r4
 800b4d8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b4da:	4798      	blx	r3
 800b4dc:	f8bb 3000 	ldrh.w	r3, [fp]
 800b4e0:	9301      	str	r3, [sp, #4]
 800b4e2:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 800b4e6:	f8ba 3000 	ldrh.w	r3, [sl]
 800b4ea:	9302      	str	r3, [sp, #8]
 800b4ec:	883b      	ldrh	r3, [r7, #0]
 800b4ee:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 800b4f2:	9303      	str	r3, [sp, #12]
 800b4f4:	4b58      	ldr	r3, [pc, #352]	; (800b658 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800b4f6:	9305      	str	r3, [sp, #20]
 800b4f8:	881a      	ldrh	r2, [r3, #0]
 800b4fa:	9204      	str	r2, [sp, #16]
 800b4fc:	4640      	mov	r0, r8
 800b4fe:	f009 f807 	bl	8014510 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800b502:	8038      	strh	r0, [r7, #0]
 800b504:	4640      	mov	r0, r8
 800b506:	f009 f837 	bl	8014578 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800b50a:	9b05      	ldr	r3, [sp, #20]
 800b50c:	b280      	uxth	r0, r0
 800b50e:	8018      	strh	r0, [r3, #0]
 800b510:	4b52      	ldr	r3, [pc, #328]	; (800b65c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 800b512:	781b      	ldrb	r3, [r3, #0]
 800b514:	2b00      	cmp	r3, #0
 800b516:	d174      	bne.n	800b602 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 800b518:	883b      	ldrh	r3, [r7, #0]
 800b51a:	f8ab 3000 	strh.w	r3, [fp]
 800b51e:	f8aa 0000 	strh.w	r0, [sl]
 800b522:	4648      	mov	r0, r9
 800b524:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 800b528:	f008 ff5e 	bl	80143e8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800b52c:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 800b530:	2200      	movs	r2, #0
 800b532:	4611      	mov	r1, r2
 800b534:	4628      	mov	r0, r5
 800b536:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 800b53a:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 800b53e:	f7f7 fb89 	bl	8002c54 <_ZN8touchgfx8Drawable5setXYEss>
 800b542:	2301      	movs	r3, #1
 800b544:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 800b548:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 800b54c:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800b550:	2b00      	cmp	r3, #0
 800b552:	dd5c      	ble.n	800b60e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800b554:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800b558:	2b00      	cmp	r3, #0
 800b55a:	dd58      	ble.n	800b60e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800b55c:	462a      	mov	r2, r5
 800b55e:	ab0a      	add	r3, sp, #40	; 0x28
 800b560:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800b564:	6851      	ldr	r1, [r2, #4]
 800b566:	c303      	stmia	r3!, {r0, r1}
 800b568:	4631      	mov	r1, r6
 800b56a:	a80a      	add	r0, sp, #40	; 0x28
 800b56c:	f7ff fc0e 	bl	800ad8c <_ZN8touchgfx4RectaNERKS0_>
 800b570:	4b38      	ldr	r3, [pc, #224]	; (800b654 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800b572:	f9b3 2000 	ldrsh.w	r2, [r3]
 800b576:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 800b57a:	2100      	movs	r1, #0
 800b57c:	aa0a      	add	r2, sp, #40	; 0x28
 800b57e:	4b36      	ldr	r3, [pc, #216]	; (800b658 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800b580:	910c      	str	r1, [sp, #48]	; 0x30
 800b582:	e892 0003 	ldmia.w	r2, {r0, r1}
 800b586:	f9b3 3000 	ldrsh.w	r3, [r3]
 800b58a:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800b58e:	ab08      	add	r3, sp, #32
 800b590:	e883 0003 	stmia.w	r3, {r0, r1}
 800b594:	4618      	mov	r0, r3
 800b596:	a90c      	add	r1, sp, #48	; 0x30
 800b598:	f7ff fbf8 	bl	800ad8c <_ZN8touchgfx4RectaNERKS0_>
 800b59c:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 800b59e:	2b00      	cmp	r3, #0
 800b5a0:	d13c      	bne.n	800b61c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 800b5a2:	2000      	movs	r0, #0
 800b5a4:	f884 0076 	strb.w	r0, [r4, #118]	; 0x76
 800b5a8:	2600      	movs	r6, #0
 800b5aa:	682a      	ldr	r2, [r5, #0]
 800b5ac:	696b      	ldr	r3, [r5, #20]
 800b5ae:	616e      	str	r6, [r5, #20]
 800b5b0:	9305      	str	r3, [sp, #20]
 800b5b2:	6892      	ldr	r2, [r2, #8]
 800b5b4:	a908      	add	r1, sp, #32
 800b5b6:	4628      	mov	r0, r5
 800b5b8:	4790      	blx	r2
 800b5ba:	9b05      	ldr	r3, [sp, #20]
 800b5bc:	616b      	str	r3, [r5, #20]
 800b5be:	4652      	mov	r2, sl
 800b5c0:	f884 6076 	strb.w	r6, [r4, #118]	; 0x76
 800b5c4:	4649      	mov	r1, r9
 800b5c6:	4628      	mov	r0, r5
 800b5c8:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 800b5cc:	f7f7 fb42 	bl	8002c54 <_ZN8touchgfx8Drawable5setXYEss>
 800b5d0:	4b23      	ldr	r3, [pc, #140]	; (800b660 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 800b5d2:	9a01      	ldr	r2, [sp, #4]
 800b5d4:	801a      	strh	r2, [r3, #0]
 800b5d6:	4b23      	ldr	r3, [pc, #140]	; (800b664 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 800b5d8:	9a02      	ldr	r2, [sp, #8]
 800b5da:	801a      	strh	r2, [r3, #0]
 800b5dc:	4b1d      	ldr	r3, [pc, #116]	; (800b654 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800b5de:	9a03      	ldr	r2, [sp, #12]
 800b5e0:	801a      	strh	r2, [r3, #0]
 800b5e2:	4b1d      	ldr	r3, [pc, #116]	; (800b658 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800b5e4:	9a04      	ldr	r2, [sp, #16]
 800b5e6:	801a      	strh	r2, [r3, #0]
 800b5e8:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 800b5ec:	6823      	ldr	r3, [r4, #0]
 800b5ee:	4620      	mov	r0, r4
 800b5f0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b5f2:	4798      	blx	r3
 800b5f4:	6823      	ldr	r3, [r4, #0]
 800b5f6:	4620      	mov	r0, r4
 800b5f8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b5fa:	4798      	blx	r3
 800b5fc:	b00f      	add	sp, #60	; 0x3c
 800b5fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b602:	883b      	ldrh	r3, [r7, #0]
 800b604:	f8ab 0000 	strh.w	r0, [fp]
 800b608:	f8aa 3000 	strh.w	r3, [sl]
 800b60c:	e789      	b.n	800b522 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 800b60e:	462a      	mov	r2, r5
 800b610:	ab0a      	add	r3, sp, #40	; 0x28
 800b612:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800b616:	6851      	ldr	r1, [r2, #4]
 800b618:	c303      	stmia	r3!, {r0, r1}
 800b61a:	e7a9      	b.n	800b570 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 800b61c:	a807      	add	r0, sp, #28
 800b61e:	f009 f8e7 	bl	80147f0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800b622:	4606      	mov	r6, r0
 800b624:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 800b626:	6803      	ldr	r3, [r0, #0]
 800b628:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b62a:	4798      	blx	r3
 800b62c:	4286      	cmp	r6, r0
 800b62e:	d1b8      	bne.n	800b5a2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 800b630:	f7f7 f86e 	bl	8002710 <_ZN8touchgfx3HAL3lcdEv>
 800b634:	6803      	ldr	r3, [r0, #0]
 800b636:	4606      	mov	r6, r0
 800b638:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800b63a:	9305      	str	r3, [sp, #20]
 800b63c:	a807      	add	r0, sp, #28
 800b63e:	f009 f8d7 	bl	80147f0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800b642:	9b05      	ldr	r3, [sp, #20]
 800b644:	4601      	mov	r1, r0
 800b646:	4630      	mov	r0, r6
 800b648:	4798      	blx	r3
 800b64a:	f080 0001 	eor.w	r0, r0, #1
 800b64e:	b2c0      	uxtb	r0, r0
 800b650:	e7a8      	b.n	800b5a4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 800b652:	bf00      	nop
 800b654:	200155ac 	.word	0x200155ac
 800b658:	200155ae 	.word	0x200155ae
 800b65c:	200155b0 	.word	0x200155b0
 800b660:	200155b2 	.word	0x200155b2
 800b664:	200155b4 	.word	0x200155b4

0800b668 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800b668:	b510      	push	{r4, lr}
 800b66a:	4b07      	ldr	r3, [pc, #28]	; (800b688 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800b66c:	781b      	ldrb	r3, [r3, #0]
 800b66e:	4604      	mov	r4, r0
 800b670:	b13b      	cbz	r3, 800b682 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800b672:	6803      	ldr	r3, [r0, #0]
 800b674:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b676:	4798      	blx	r3
 800b678:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800b67a:	4283      	cmp	r3, r0
 800b67c:	d101      	bne.n	800b682 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800b67e:	6c20      	ldr	r0, [r4, #64]	; 0x40
 800b680:	bd10      	pop	{r4, pc}
 800b682:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 800b684:	e7fc      	b.n	800b680 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800b686:	bf00      	nop
 800b688:	200155b6 	.word	0x200155b6

0800b68c <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 800b68c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b690:	b08a      	sub	sp, #40	; 0x28
 800b692:	461d      	mov	r5, r3
 800b694:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800b698:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b69c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800b6a0:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b6a4:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800b6a8:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b6ac:	2400      	movs	r4, #0
 800b6ae:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b6b2:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 800b6b6:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b6ba:	4690      	mov	r8, r2
 800b6bc:	4607      	mov	r7, r0
 800b6be:	9404      	str	r4, [sp, #16]
 800b6c0:	f88d 4020 	strb.w	r4, [sp, #32]
 800b6c4:	f7ff ffd0 	bl	800b668 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b6c8:	fb06 8505 	mla	r5, r6, r5, r8
 800b6cc:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800b6d0:	6878      	ldr	r0, [r7, #4]
 800b6d2:	9505      	str	r5, [sp, #20]
 800b6d4:	f8ad 601e 	strh.w	r6, [sp, #30]
 800b6d8:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800b6dc:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 800b6e0:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 800b6e4:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 800b6e8:	6803      	ldr	r3, [r0, #0]
 800b6ea:	a901      	add	r1, sp, #4
 800b6ec:	685b      	ldr	r3, [r3, #4]
 800b6ee:	4798      	blx	r3
 800b6f0:	b00a      	add	sp, #40	; 0x28
 800b6f2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800b6f6 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 800b6f6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b6fa:	b08b      	sub	sp, #44	; 0x2c
 800b6fc:	2400      	movs	r4, #0
 800b6fe:	461d      	mov	r5, r3
 800b700:	f44f 6300 	mov.w	r3, #2048	; 0x800
 800b704:	4688      	mov	r8, r1
 800b706:	4691      	mov	r9, r2
 800b708:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 800b70c:	9404      	str	r4, [sp, #16]
 800b70e:	4607      	mov	r7, r0
 800b710:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800b714:	f7ff ffa8 	bl	800b668 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b718:	fb06 9505 	mla	r5, r6, r5, r9
 800b71c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b720:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b724:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800b728:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800b72c:	6878      	ldr	r0, [r7, #4]
 800b72e:	9505      	str	r5, [sp, #20]
 800b730:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b734:	f8ad 401c 	strh.w	r4, [sp, #28]
 800b738:	f8ad 601e 	strh.w	r6, [sp, #30]
 800b73c:	f8cd 8010 	str.w	r8, [sp, #16]
 800b740:	f8ad 4020 	strh.w	r4, [sp, #32]
 800b744:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800b748:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 800b74c:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 800b750:	6803      	ldr	r3, [r0, #0]
 800b752:	a901      	add	r1, sp, #4
 800b754:	685b      	ldr	r3, [r3, #4]
 800b756:	4798      	blx	r3
 800b758:	b00b      	add	sp, #44	; 0x2c
 800b75a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

0800b760 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 800b760:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b764:	b08a      	sub	sp, #40	; 0x28
 800b766:	4698      	mov	r8, r3
 800b768:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 800b76c:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 800b770:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 800b774:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 800b778:	2300      	movs	r3, #0
 800b77a:	2d0b      	cmp	r5, #11
 800b77c:	4606      	mov	r6, r0
 800b77e:	9304      	str	r3, [sp, #16]
 800b780:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 800b784:	d138      	bne.n	800b7f8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 800b786:	2380      	movs	r3, #128	; 0x80
 800b788:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b78c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800b790:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b794:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b798:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b79c:	f88d 0020 	strb.w	r0, [sp, #32]
 800b7a0:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800b7a4:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b7a8:	4630      	mov	r0, r6
 800b7aa:	9203      	str	r2, [sp, #12]
 800b7ac:	f7ff ff5c 	bl	800b668 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b7b0:	2c0b      	cmp	r4, #11
 800b7b2:	bf98      	it	ls
 800b7b4:	4b1b      	ldrls	r3, [pc, #108]	; (800b824 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 800b7b6:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 800b7ba:	bf98      	it	ls
 800b7bc:	5d19      	ldrbls	r1, [r3, r4]
 800b7be:	f8ad 701e 	strh.w	r7, [sp, #30]
 800b7c2:	bf88      	it	hi
 800b7c4:	2100      	movhi	r1, #0
 800b7c6:	fb02 8307 	mla	r3, r2, r7, r8
 800b7ca:	10c9      	asrs	r1, r1, #3
 800b7cc:	fb01 0003 	mla	r0, r1, r3, r0
 800b7d0:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 800b7d4:	9005      	str	r0, [sp, #20]
 800b7d6:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 800b7da:	6870      	ldr	r0, [r6, #4]
 800b7dc:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 800b7e0:	2300      	movs	r3, #0
 800b7e2:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800b7e6:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800b7ea:	6803      	ldr	r3, [r0, #0]
 800b7ec:	a901      	add	r1, sp, #4
 800b7ee:	685b      	ldr	r3, [r3, #4]
 800b7f0:	4798      	blx	r3
 800b7f2:	b00a      	add	sp, #40	; 0x28
 800b7f4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b7f8:	2d02      	cmp	r5, #2
 800b7fa:	d109      	bne.n	800b810 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 800b7fc:	28ff      	cmp	r0, #255	; 0xff
 800b7fe:	d105      	bne.n	800b80c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 800b800:	f1bc 0f00 	cmp.w	ip, #0
 800b804:	bf14      	ite	ne
 800b806:	2340      	movne	r3, #64	; 0x40
 800b808:	2320      	moveq	r3, #32
 800b80a:	e7bd      	b.n	800b788 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b80c:	2340      	movs	r3, #64	; 0x40
 800b80e:	e7bb      	b.n	800b788 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b810:	28ff      	cmp	r0, #255	; 0xff
 800b812:	d105      	bne.n	800b820 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 800b814:	f1bc 0f00 	cmp.w	ip, #0
 800b818:	bf14      	ite	ne
 800b81a:	2304      	movne	r3, #4
 800b81c:	2301      	moveq	r3, #1
 800b81e:	e7b3      	b.n	800b788 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b820:	2304      	movs	r3, #4
 800b822:	e7b1      	b.n	800b788 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b824:	08023824 	.word	0x08023824

0800b828 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 800b828:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b82c:	b08b      	sub	sp, #44	; 0x2c
 800b82e:	461d      	mov	r5, r3
 800b830:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 800b834:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 800b838:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 800b83c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 800b840:	bf14      	ite	ne
 800b842:	2308      	movne	r3, #8
 800b844:	2302      	moveq	r3, #2
 800b846:	2400      	movs	r4, #0
 800b848:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800b84c:	4688      	mov	r8, r1
 800b84e:	4693      	mov	fp, r2
 800b850:	9404      	str	r4, [sp, #16]
 800b852:	4607      	mov	r7, r0
 800b854:	f7ff ff08 	bl	800b668 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b858:	2e0b      	cmp	r6, #11
 800b85a:	bf98      	it	ls
 800b85c:	4b15      	ldrls	r3, [pc, #84]	; (800b8b4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 800b85e:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 800b862:	bf98      	it	ls
 800b864:	5d9c      	ldrbls	r4, [r3, r6]
 800b866:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800b86a:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b86e:	fb05 b50a 	mla	r5, r5, sl, fp
 800b872:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800b876:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b87a:	10e4      	asrs	r4, r4, #3
 800b87c:	fb04 0405 	mla	r4, r4, r5, r0
 800b880:	2300      	movs	r3, #0
 800b882:	6878      	ldr	r0, [r7, #4]
 800b884:	9405      	str	r4, [sp, #20]
 800b886:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b88a:	f8ad a01e 	strh.w	sl, [sp, #30]
 800b88e:	f8cd 8010 	str.w	r8, [sp, #16]
 800b892:	f88d 9020 	strb.w	r9, [sp, #32]
 800b896:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 800b89a:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800b89e:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 800b8a2:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 800b8a6:	6803      	ldr	r3, [r0, #0]
 800b8a8:	a901      	add	r1, sp, #4
 800b8aa:	685b      	ldr	r3, [r3, #4]
 800b8ac:	4798      	blx	r3
 800b8ae:	b00b      	add	sp, #44	; 0x2c
 800b8b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b8b4:	08023824 	.word	0x08023824

0800b8b8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800b8b8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b8bc:	461e      	mov	r6, r3
 800b8be:	4b0a      	ldr	r3, [pc, #40]	; (800b8e8 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 800b8c0:	460f      	mov	r7, r1
 800b8c2:	881d      	ldrh	r5, [r3, #0]
 800b8c4:	4690      	mov	r8, r2
 800b8c6:	f7f6 ff23 	bl	8002710 <_ZN8touchgfx3HAL3lcdEv>
 800b8ca:	6803      	ldr	r3, [r0, #0]
 800b8cc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b8ce:	4798      	blx	r3
 800b8d0:	280b      	cmp	r0, #11
 800b8d2:	bf9a      	itte	ls
 800b8d4:	4b05      	ldrls	r3, [pc, #20]	; (800b8ec <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800b8d6:	5c1c      	ldrbls	r4, [r3, r0]
 800b8d8:	2400      	movhi	r4, #0
 800b8da:	fb08 7005 	mla	r0, r8, r5, r7
 800b8de:	10e4      	asrs	r4, r4, #3
 800b8e0:	fb04 6000 	mla	r0, r4, r0, r6
 800b8e4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b8e8:	200155b2 	.word	0x200155b2
 800b8ec:	08023824 	.word	0x08023824

0800b8f0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 800b8f0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b8f2:	b08b      	sub	sp, #44	; 0x2c
 800b8f4:	461f      	mov	r7, r3
 800b8f6:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800b8fa:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b8fe:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800b902:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b906:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800b90a:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b90e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b912:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b916:	2500      	movs	r5, #0
 800b918:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800b91c:	f88d 3020 	strb.w	r3, [sp, #32]
 800b920:	4604      	mov	r4, r0
 800b922:	4616      	mov	r6, r2
 800b924:	9504      	str	r5, [sp, #16]
 800b926:	f7ff fe9f 	bl	800b668 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b92a:	463a      	mov	r2, r7
 800b92c:	4631      	mov	r1, r6
 800b92e:	4603      	mov	r3, r0
 800b930:	4620      	mov	r0, r4
 800b932:	f7ff ffc1 	bl	800b8b8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b936:	4b0e      	ldr	r3, [pc, #56]	; (800b970 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 800b938:	9005      	str	r0, [sp, #20]
 800b93a:	881b      	ldrh	r3, [r3, #0]
 800b93c:	f8ad 301e 	strh.w	r3, [sp, #30]
 800b940:	f7f6 fee6 	bl	8002710 <_ZN8touchgfx3HAL3lcdEv>
 800b944:	6803      	ldr	r3, [r0, #0]
 800b946:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b948:	4798      	blx	r3
 800b94a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800b94c:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 800b950:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 800b954:	9304      	str	r3, [sp, #16]
 800b956:	6860      	ldr	r0, [r4, #4]
 800b958:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800b95c:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 800b960:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 800b964:	6803      	ldr	r3, [r0, #0]
 800b966:	a901      	add	r1, sp, #4
 800b968:	685b      	ldr	r3, [r3, #4]
 800b96a:	4798      	blx	r3
 800b96c:	b00b      	add	sp, #44	; 0x2c
 800b96e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b970:	200155b2 	.word	0x200155b2

0800b974 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800b974:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b976:	b08d      	sub	sp, #52	; 0x34
 800b978:	466b      	mov	r3, sp
 800b97a:	e883 0006 	stmia.w	r3, {r1, r2}
 800b97e:	2300      	movs	r3, #0
 800b980:	9306      	str	r3, [sp, #24]
 800b982:	6803      	ldr	r3, [r0, #0]
 800b984:	f8bd 6000 	ldrh.w	r6, [sp]
 800b988:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b98a:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800b98e:	2501      	movs	r5, #1
 800b990:	9503      	str	r5, [sp, #12]
 800b992:	4604      	mov	r4, r0
 800b994:	4798      	blx	r3
 800b996:	463a      	mov	r2, r7
 800b998:	4631      	mov	r1, r6
 800b99a:	4603      	mov	r3, r0
 800b99c:	4620      	mov	r0, r4
 800b99e:	f7ff ff8b 	bl	800b8b8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b9a2:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800b9a4:	9307      	str	r3, [sp, #28]
 800b9a6:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800b9aa:	f8ad 3020 	strh.w	r3, [sp, #32]
 800b9ae:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800b9b2:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800b9b6:	4b0f      	ldr	r3, [pc, #60]	; (800b9f4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 800b9b8:	9004      	str	r0, [sp, #16]
 800b9ba:	881b      	ldrh	r3, [r3, #0]
 800b9bc:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800b9c0:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800b9c4:	f7f6 fea4 	bl	8002710 <_ZN8touchgfx3HAL3lcdEv>
 800b9c8:	6803      	ldr	r3, [r0, #0]
 800b9ca:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b9cc:	4798      	blx	r3
 800b9ce:	23ff      	movs	r3, #255	; 0xff
 800b9d0:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 800b9d4:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800b9d8:	6860      	ldr	r0, [r4, #4]
 800b9da:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 800b9de:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800b9e2:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800b9e6:	6803      	ldr	r3, [r0, #0]
 800b9e8:	a903      	add	r1, sp, #12
 800b9ea:	685b      	ldr	r3, [r3, #4]
 800b9ec:	4798      	blx	r3
 800b9ee:	6c60      	ldr	r0, [r4, #68]	; 0x44
 800b9f0:	b00d      	add	sp, #52	; 0x34
 800b9f2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b9f4:	200155b2 	.word	0x200155b2

0800b9f8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800b9f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b9fc:	b08c      	sub	sp, #48	; 0x30
 800b9fe:	461e      	mov	r6, r3
 800ba00:	466d      	mov	r5, sp
 800ba02:	2300      	movs	r3, #0
 800ba04:	e885 0006 	stmia.w	r5, {r1, r2}
 800ba08:	9306      	str	r3, [sp, #24]
 800ba0a:	6803      	ldr	r3, [r0, #0]
 800ba0c:	f8bd 7000 	ldrh.w	r7, [sp]
 800ba10:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800ba12:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 800ba16:	2501      	movs	r5, #1
 800ba18:	9503      	str	r5, [sp, #12]
 800ba1a:	4604      	mov	r4, r0
 800ba1c:	4798      	blx	r3
 800ba1e:	4642      	mov	r2, r8
 800ba20:	4639      	mov	r1, r7
 800ba22:	4603      	mov	r3, r0
 800ba24:	4620      	mov	r0, r4
 800ba26:	f7ff ff47 	bl	800b8b8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800ba2a:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800ba2e:	f8ad 3020 	strh.w	r3, [sp, #32]
 800ba32:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800ba36:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800ba3a:	4b11      	ldr	r3, [pc, #68]	; (800ba80 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 800ba3c:	9004      	str	r0, [sp, #16]
 800ba3e:	881b      	ldrh	r3, [r3, #0]
 800ba40:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800ba44:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800ba46:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800ba4a:	9607      	str	r6, [sp, #28]
 800ba4c:	f7f6 fe60 	bl	8002710 <_ZN8touchgfx3HAL3lcdEv>
 800ba50:	6803      	ldr	r3, [r0, #0]
 800ba52:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ba54:	4798      	blx	r3
 800ba56:	23ff      	movs	r3, #255	; 0xff
 800ba58:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 800ba5c:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800ba60:	6860      	ldr	r0, [r4, #4]
 800ba62:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 800ba66:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800ba6a:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800ba6e:	6803      	ldr	r3, [r0, #0]
 800ba70:	a903      	add	r1, sp, #12
 800ba72:	685b      	ldr	r3, [r3, #4]
 800ba74:	4798      	blx	r3
 800ba76:	4630      	mov	r0, r6
 800ba78:	b00c      	add	sp, #48	; 0x30
 800ba7a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ba7e:	bf00      	nop
 800ba80:	200155b2 	.word	0x200155b2

0800ba84 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 800ba84:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ba86:	b085      	sub	sp, #20
 800ba88:	ac02      	add	r4, sp, #8
 800ba8a:	e884 0006 	stmia.w	r4, {r1, r2}
 800ba8e:	4605      	mov	r5, r0
 800ba90:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 800ba94:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 800ba98:	f7ff fde6 	bl	800b668 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800ba9c:	463a      	mov	r2, r7
 800ba9e:	4603      	mov	r3, r0
 800baa0:	4631      	mov	r1, r6
 800baa2:	4628      	mov	r0, r5
 800baa4:	f7ff ff08 	bl	800b8b8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800baa8:	4a05      	ldr	r2, [pc, #20]	; (800bac0 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 800baaa:	682b      	ldr	r3, [r5, #0]
 800baac:	8812      	ldrh	r2, [r2, #0]
 800baae:	9200      	str	r2, [sp, #0]
 800bab0:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 800bab2:	e894 0006 	ldmia.w	r4, {r1, r2}
 800bab6:	4603      	mov	r3, r0
 800bab8:	4628      	mov	r0, r5
 800baba:	47b0      	blx	r6
 800babc:	b005      	add	sp, #20
 800babe:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800bac0:	200155b2 	.word	0x200155b2

0800bac4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800bac4:	b570      	push	{r4, r5, r6, lr}
 800bac6:	f890 306a 	ldrb.w	r3, [r0, #106]	; 0x6a
 800baca:	4604      	mov	r4, r0
 800bacc:	b19b      	cbz	r3, 800baf6 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800bace:	2002      	movs	r0, #2
 800bad0:	f7f4 fe38 	bl	8000744 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800bad4:	2300      	movs	r3, #0
 800bad6:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800bada:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 800bade:	6823      	ldr	r3, [r4, #0]
 800bae0:	4620      	mov	r0, r4
 800bae2:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 800bae6:	f7ff fdbf 	bl	800b668 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800baea:	462b      	mov	r3, r5
 800baec:	4601      	mov	r1, r0
 800baee:	4620      	mov	r0, r4
 800baf0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800baf4:	4718      	bx	r3
 800baf6:	bd70      	pop	{r4, r5, r6, pc}

0800baf8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 800baf8:	b538      	push	{r3, r4, r5, lr}
 800bafa:	f890 3078 	ldrb.w	r3, [r0, #120]	; 0x78
 800bafe:	428b      	cmp	r3, r1
 800bb00:	4604      	mov	r4, r0
 800bb02:	460d      	mov	r5, r1
 800bb04:	d006      	beq.n	800bb14 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 800bb06:	6803      	ldr	r3, [r0, #0]
 800bb08:	b929      	cbnz	r1, 800bb16 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 800bb0a:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 800bb0e:	4798      	blx	r3
 800bb10:	f884 5078 	strb.w	r5, [r4, #120]	; 0x78
 800bb14:	bd38      	pop	{r3, r4, r5, pc}
 800bb16:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 800bb1a:	e7f8      	b.n	800bb0e <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0800bb1c <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800bb1c:	b510      	push	{r4, lr}
 800bb1e:	4b0d      	ldr	r3, [pc, #52]	; (800bb54 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 800bb20:	781b      	ldrb	r3, [r3, #0]
 800bb22:	4604      	mov	r4, r0
 800bb24:	b95b      	cbnz	r3, 800bb3e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800bb26:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 800bb2a:	2b02      	cmp	r3, #2
 800bb2c:	d007      	beq.n	800bb3e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800bb2e:	6840      	ldr	r0, [r0, #4]
 800bb30:	f000 f92a 	bl	800bd88 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800bb34:	b118      	cbz	r0, 800bb3e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800bb36:	6862      	ldr	r2, [r4, #4]
 800bb38:	7a53      	ldrb	r3, [r2, #9]
 800bb3a:	2b00      	cmp	r3, #0
 800bb3c:	d0fc      	beq.n	800bb38 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 800bb3e:	f7f4 fefb 	bl	8000938 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800bb42:	4620      	mov	r0, r4
 800bb44:	2100      	movs	r1, #0
 800bb46:	f7ff ffd7 	bl	800baf8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800bb4a:	4620      	mov	r0, r4
 800bb4c:	f7ff fd8c 	bl	800b668 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800bb50:	bd10      	pop	{r4, pc}
 800bb52:	bf00      	nop
 800bb54:	200155b6 	.word	0x200155b6

0800bb58 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 800bb58:	b570      	push	{r4, r5, r6, lr}
 800bb5a:	4604      	mov	r4, r0
 800bb5c:	6803      	ldr	r3, [r0, #0]
 800bb5e:	b919      	cbnz	r1, 800bb68 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 800bb60:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800bb62:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bb66:	4718      	bx	r3
 800bb68:	2200      	movs	r2, #0
 800bb6a:	f890 6078 	ldrb.w	r6, [r0, #120]	; 0x78
 800bb6e:	f880 2078 	strb.w	r2, [r0, #120]	; 0x78
 800bb72:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800bb74:	4798      	blx	r3
 800bb76:	f884 6078 	strb.w	r6, [r4, #120]	; 0x78
 800bb7a:	4605      	mov	r5, r0
 800bb7c:	2101      	movs	r1, #1
 800bb7e:	4620      	mov	r0, r4
 800bb80:	f7ff ffba 	bl	800baf8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800bb84:	4628      	mov	r0, r5
 800bb86:	bd70      	pop	{r4, r5, r6, pc}

0800bb88 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800bb88:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800bb8c:	1a13      	subs	r3, r2, r0
 800bb8e:	4258      	negs	r0, r3
 800bb90:	4158      	adcs	r0, r3
 800bb92:	4770      	bx	lr

0800bb94 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800bb94:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800bb98:	1a9b      	subs	r3, r3, r2
 800bb9a:	2b00      	cmp	r3, #0
 800bb9c:	bfdc      	itt	le
 800bb9e:	6882      	ldrle	r2, [r0, #8]
 800bba0:	189b      	addle	r3, r3, r2
 800bba2:	2b01      	cmp	r3, #1
 800bba4:	bfcc      	ite	gt
 800bba6:	2000      	movgt	r0, #0
 800bba8:	2001      	movle	r0, #1
 800bbaa:	4770      	bx	lr

0800bbac <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800bbac:	6902      	ldr	r2, [r0, #16]
 800bbae:	6843      	ldr	r3, [r0, #4]
 800bbb0:	2024      	movs	r0, #36	; 0x24
 800bbb2:	fb00 3002 	mla	r0, r0, r2, r3
 800bbb6:	4770      	bx	lr

0800bbb8 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800bbb8:	6803      	ldr	r3, [r0, #0]
 800bbba:	691b      	ldr	r3, [r3, #16]
 800bbbc:	4718      	bx	r3

0800bbbe <_ZN8touchgfx13DMA_Interface7executeEv>:
 800bbbe:	b570      	push	{r4, r5, r6, lr}
 800bbc0:	2301      	movs	r3, #1
 800bbc2:	7203      	strb	r3, [r0, #8]
 800bbc4:	4604      	mov	r4, r0
 800bbc6:	6840      	ldr	r0, [r0, #4]
 800bbc8:	6803      	ldr	r3, [r0, #0]
 800bbca:	699b      	ldr	r3, [r3, #24]
 800bbcc:	4798      	blx	r3
 800bbce:	6803      	ldr	r3, [r0, #0]
 800bbd0:	2b40      	cmp	r3, #64	; 0x40
 800bbd2:	4605      	mov	r5, r0
 800bbd4:	d00c      	beq.n	800bbf0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800bbd6:	d810      	bhi.n	800bbfa <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 800bbd8:	2b04      	cmp	r3, #4
 800bbda:	d01d      	beq.n	800bc18 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 800bbdc:	d804      	bhi.n	800bbe8 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 800bbde:	2b01      	cmp	r3, #1
 800bbe0:	d006      	beq.n	800bbf0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800bbe2:	2b02      	cmp	r3, #2
 800bbe4:	d02c      	beq.n	800bc40 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 800bbe6:	bd70      	pop	{r4, r5, r6, pc}
 800bbe8:	2b08      	cmp	r3, #8
 800bbea:	d01d      	beq.n	800bc28 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 800bbec:	2b20      	cmp	r3, #32
 800bbee:	d1fa      	bne.n	800bbe6 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 800bbf0:	6823      	ldr	r3, [r4, #0]
 800bbf2:	4620      	mov	r0, r4
 800bbf4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800bbf6:	4798      	blx	r3
 800bbf8:	e013      	b.n	800bc22 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800bbfa:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800bbfe:	d0f7      	beq.n	800bbf0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800bc00:	d804      	bhi.n	800bc0c <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 800bc02:	2b80      	cmp	r3, #128	; 0x80
 800bc04:	d0f4      	beq.n	800bbf0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800bc06:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800bc0a:	e7f0      	b.n	800bbee <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 800bc0c:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800bc10:	d0ee      	beq.n	800bbf0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800bc12:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800bc16:	e7e5      	b.n	800bbe4 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 800bc18:	6823      	ldr	r3, [r4, #0]
 800bc1a:	7f01      	ldrb	r1, [r0, #28]
 800bc1c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800bc1e:	4620      	mov	r0, r4
 800bc20:	4798      	blx	r3
 800bc22:	6823      	ldr	r3, [r4, #0]
 800bc24:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800bc26:	e006      	b.n	800bc36 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800bc28:	6823      	ldr	r3, [r4, #0]
 800bc2a:	7f01      	ldrb	r1, [r0, #28]
 800bc2c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800bc2e:	4620      	mov	r0, r4
 800bc30:	4798      	blx	r3
 800bc32:	6823      	ldr	r3, [r4, #0]
 800bc34:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800bc36:	4629      	mov	r1, r5
 800bc38:	4620      	mov	r0, r4
 800bc3a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bc3e:	4718      	bx	r3
 800bc40:	6823      	ldr	r3, [r4, #0]
 800bc42:	4620      	mov	r0, r4
 800bc44:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800bc46:	4798      	blx	r3
 800bc48:	e7f3      	b.n	800bc32 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

0800bc4a <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800bc4a:	4770      	bx	lr

0800bc4c <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800bc4c:	4770      	bx	lr

0800bc4e <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800bc4e:	4770      	bx	lr

0800bc50 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800bc50:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 800bc54:	1ad2      	subs	r2, r2, r3
 800bc56:	2a00      	cmp	r2, #0
 800bc58:	b510      	push	{r4, lr}
 800bc5a:	bfdc      	itt	le
 800bc5c:	6884      	ldrle	r4, [r0, #8]
 800bc5e:	1912      	addle	r2, r2, r4
 800bc60:	2a01      	cmp	r2, #1
 800bc62:	dd16      	ble.n	800bc92 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 800bc64:	6842      	ldr	r2, [r0, #4]
 800bc66:	2424      	movs	r4, #36	; 0x24
 800bc68:	fb04 2303 	mla	r3, r4, r3, r2
 800bc6c:	f101 0220 	add.w	r2, r1, #32
 800bc70:	f851 4b04 	ldr.w	r4, [r1], #4
 800bc74:	f843 4b04 	str.w	r4, [r3], #4
 800bc78:	4291      	cmp	r1, r2
 800bc7a:	d1f9      	bne.n	800bc70 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 800bc7c:	780a      	ldrb	r2, [r1, #0]
 800bc7e:	701a      	strb	r2, [r3, #0]
 800bc80:	68c3      	ldr	r3, [r0, #12]
 800bc82:	6882      	ldr	r2, [r0, #8]
 800bc84:	f3bf 8f5b 	dmb	ish
 800bc88:	3301      	adds	r3, #1
 800bc8a:	429a      	cmp	r2, r3
 800bc8c:	bfd8      	it	le
 800bc8e:	1a9b      	suble	r3, r3, r2
 800bc90:	60c3      	str	r3, [r0, #12]
 800bc92:	bd10      	pop	{r4, pc}

0800bc94 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800bc94:	6903      	ldr	r3, [r0, #16]
 800bc96:	6882      	ldr	r2, [r0, #8]
 800bc98:	f3bf 8f5b 	dmb	ish
 800bc9c:	3301      	adds	r3, #1
 800bc9e:	429a      	cmp	r2, r3
 800bca0:	bfd8      	it	le
 800bca2:	1a9b      	suble	r3, r3, r2
 800bca4:	6103      	str	r3, [r0, #16]
 800bca6:	4770      	bx	lr

0800bca8 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800bca8:	b570      	push	{r4, r5, r6, lr}
 800bcaa:	4604      	mov	r4, r0
 800bcac:	460e      	mov	r6, r1
 800bcae:	6860      	ldr	r0, [r4, #4]
 800bcb0:	6803      	ldr	r3, [r0, #0]
 800bcb2:	685b      	ldr	r3, [r3, #4]
 800bcb4:	4798      	blx	r3
 800bcb6:	2800      	cmp	r0, #0
 800bcb8:	d1f9      	bne.n	800bcae <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800bcba:	4d0d      	ldr	r5, [pc, #52]	; (800bcf0 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800bcbc:	6828      	ldr	r0, [r5, #0]
 800bcbe:	6803      	ldr	r3, [r0, #0]
 800bcc0:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800bcc2:	4798      	blx	r3
 800bcc4:	f7f4 fe46 	bl	8000954 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800bcc8:	6828      	ldr	r0, [r5, #0]
 800bcca:	2101      	movs	r1, #1
 800bccc:	f7ff ff14 	bl	800baf8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800bcd0:	6860      	ldr	r0, [r4, #4]
 800bcd2:	6803      	ldr	r3, [r0, #0]
 800bcd4:	4631      	mov	r1, r6
 800bcd6:	689b      	ldr	r3, [r3, #8]
 800bcd8:	4798      	blx	r3
 800bcda:	6823      	ldr	r3, [r4, #0]
 800bcdc:	4620      	mov	r0, r4
 800bcde:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800bce0:	4798      	blx	r3
 800bce2:	6828      	ldr	r0, [r5, #0]
 800bce4:	6803      	ldr	r3, [r0, #0]
 800bce6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bcea:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800bcec:	4718      	bx	r3
 800bcee:	bf00      	nop
 800bcf0:	200155b8 	.word	0x200155b8

0800bcf4 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800bcf4:	b508      	push	{r3, lr}
 800bcf6:	f7f4 fe1f 	bl	8000938 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800bcfa:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800bcfe:	f7f4 be23 	b.w	8000948 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800bd02 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800bd02:	b510      	push	{r4, lr}
 800bd04:	2114      	movs	r1, #20
 800bd06:	4604      	mov	r4, r0
 800bd08:	f014 fcee 	bl	80206e8 <_ZdlPvj>
 800bd0c:	4620      	mov	r0, r4
 800bd0e:	bd10      	pop	{r4, pc}

0800bd10 <_ZN8touchgfx13DMA_Interface5startEv>:
 800bd10:	b510      	push	{r4, lr}
 800bd12:	4604      	mov	r4, r0
 800bd14:	6840      	ldr	r0, [r0, #4]
 800bd16:	6803      	ldr	r3, [r0, #0]
 800bd18:	681b      	ldr	r3, [r3, #0]
 800bd1a:	4798      	blx	r3
 800bd1c:	b948      	cbnz	r0, 800bd32 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800bd1e:	7a63      	ldrb	r3, [r4, #9]
 800bd20:	b13b      	cbz	r3, 800bd32 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800bd22:	7a23      	ldrb	r3, [r4, #8]
 800bd24:	b92b      	cbnz	r3, 800bd32 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800bd26:	6823      	ldr	r3, [r4, #0]
 800bd28:	4620      	mov	r0, r4
 800bd2a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800bd2c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bd30:	4718      	bx	r3
 800bd32:	bd10      	pop	{r4, pc}

0800bd34 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800bd34:	b570      	push	{r4, r5, r6, lr}
 800bd36:	4604      	mov	r4, r0
 800bd38:	6840      	ldr	r0, [r0, #4]
 800bd3a:	6803      	ldr	r3, [r0, #0]
 800bd3c:	681b      	ldr	r3, [r3, #0]
 800bd3e:	4798      	blx	r3
 800bd40:	4605      	mov	r5, r0
 800bd42:	b930      	cbnz	r0, 800bd52 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800bd44:	7a23      	ldrb	r3, [r4, #8]
 800bd46:	b123      	cbz	r3, 800bd52 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800bd48:	6860      	ldr	r0, [r4, #4]
 800bd4a:	6803      	ldr	r3, [r0, #0]
 800bd4c:	695b      	ldr	r3, [r3, #20]
 800bd4e:	4798      	blx	r3
 800bd50:	7225      	strb	r5, [r4, #8]
 800bd52:	6860      	ldr	r0, [r4, #4]
 800bd54:	6803      	ldr	r3, [r0, #0]
 800bd56:	681b      	ldr	r3, [r3, #0]
 800bd58:	4798      	blx	r3
 800bd5a:	b928      	cbnz	r0, 800bd68 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800bd5c:	6823      	ldr	r3, [r4, #0]
 800bd5e:	4620      	mov	r0, r4
 800bd60:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800bd62:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bd66:	4718      	bx	r3
 800bd68:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bd6c:	f7f4 bdfa 	b.w	8000964 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800bd70 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800bd70:	b510      	push	{r4, lr}
 800bd72:	4c04      	ldr	r4, [pc, #16]	; (800bd84 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800bd74:	6082      	str	r2, [r0, #8]
 800bd76:	2200      	movs	r2, #0
 800bd78:	e9c0 4100 	strd	r4, r1, [r0]
 800bd7c:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800bd80:	bd10      	pop	{r4, pc}
 800bd82:	bf00      	nop
 800bd84:	08023838 	.word	0x08023838

0800bd88 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800bd88:	6840      	ldr	r0, [r0, #4]
 800bd8a:	6803      	ldr	r3, [r0, #0]
 800bd8c:	681b      	ldr	r3, [r3, #0]
 800bd8e:	4718      	bx	r3

0800bd90 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 800bd90:	4b06      	ldr	r3, [pc, #24]	; (800bdac <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
 800bd92:	60c1      	str	r1, [r0, #12]
 800bd94:	094a      	lsrs	r2, r1, #5
 800bd96:	ea03 2311 	and.w	r3, r3, r1, lsr #8
 800bd9a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 800bd9e:	4313      	orrs	r3, r2
 800bda0:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 800bda4:	4319      	orrs	r1, r3
 800bda6:	8201      	strh	r1, [r0, #16]
 800bda8:	4770      	bx	lr
 800bdaa:	bf00      	nop
 800bdac:	fffff800 	.word	0xfffff800

0800bdb0 <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 800bdb0:	f1a0 0008 	sub.w	r0, r0, #8
 800bdb4:	e7ec      	b.n	800bd90 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 800bdb6:	bf00      	nop

0800bdb8 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 800bdb8:	b508      	push	{r3, lr}
 800bdba:	4b05      	ldr	r3, [pc, #20]	; (800bdd0 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 800bdbc:	6818      	ldr	r0, [r3, #0]
 800bdbe:	6803      	ldr	r3, [r0, #0]
 800bdc0:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 800bdc4:	4798      	blx	r3
 800bdc6:	1e43      	subs	r3, r0, #1
 800bdc8:	4258      	negs	r0, r3
 800bdca:	4158      	adcs	r0, r3
 800bdcc:	bd08      	pop	{r3, pc}
 800bdce:	bf00      	nop
 800bdd0:	200155b8 	.word	0x200155b8

0800bdd4 <_ZN8touchgfx13PainterRGB565D1Ev>:
 800bdd4:	4770      	bx	lr

0800bdd6 <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 800bdd6:	3808      	subs	r0, #8
 800bdd8:	4770      	bx	lr

0800bdda <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 800bdda:	b430      	push	{r4, r5}
 800bddc:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 800bde0:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 800bde4:	8a02      	ldrh	r2, [r0, #16]
 800bde6:	9202      	str	r2, [sp, #8]
 800bde8:	f89d 3010 	ldrb.w	r3, [sp, #16]
 800bdec:	68c2      	ldr	r2, [r0, #12]
 800bdee:	4629      	mov	r1, r5
 800bdf0:	4620      	mov	r0, r4
 800bdf2:	bc30      	pop	{r4, r5}
 800bdf4:	f7f4 bf74 	b.w	8000ce0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

0800bdf8 <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 800bdf8:	f7f4 bf68 	b.w	8000ccc <_ZN8touchgfx5paint6rgb5658tearDownEv>

0800bdfc <_ZN8touchgfx13PainterRGB565D0Ev>:
 800bdfc:	b510      	push	{r4, lr}
 800bdfe:	2114      	movs	r1, #20
 800be00:	4604      	mov	r4, r0
 800be02:	f014 fc71 	bl	80206e8 <_ZdlPvj>
 800be06:	4620      	mov	r0, r4
 800be08:	bd10      	pop	{r4, pc}

0800be0a <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 800be0a:	f1a0 0008 	sub.w	r0, r0, #8
 800be0e:	e7f5      	b.n	800bdfc <_ZN8touchgfx13PainterRGB565D0Ev>

0800be10 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 800be10:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800be12:	6803      	ldr	r3, [r0, #0]
 800be14:	460d      	mov	r5, r1
 800be16:	4604      	mov	r4, r0
 800be18:	4601      	mov	r1, r0
 800be1a:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800be1c:	a802      	add	r0, sp, #8
 800be1e:	4798      	blx	r3
 800be20:	6828      	ldr	r0, [r5, #0]
 800be22:	6869      	ldr	r1, [r5, #4]
 800be24:	466b      	mov	r3, sp
 800be26:	c303      	stmia	r3!, {r0, r1}
 800be28:	4668      	mov	r0, sp
 800be2a:	4619      	mov	r1, r3
 800be2c:	f7fe ffae 	bl	800ad8c <_ZN8touchgfx4RectaNERKS0_>
 800be30:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800be32:	b1a8      	cbz	r0, 800be60 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
 800be34:	6803      	ldr	r3, [r0, #0]
 800be36:	1d21      	adds	r1, r4, #4
 800be38:	68db      	ldr	r3, [r3, #12]
 800be3a:	4798      	blx	r3
 800be3c:	b180      	cbz	r0, 800be60 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
 800be3e:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800be42:	2b00      	cmp	r3, #0
 800be44:	dd0c      	ble.n	800be60 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
 800be46:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 800be4a:	2d00      	cmp	r5, #0
 800be4c:	dd08      	ble.n	800be60 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
 800be4e:	4a2d      	ldr	r2, [pc, #180]	; (800bf04 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xf4>)
 800be50:	7812      	ldrb	r2, [r2, #0]
 800be52:	b13a      	cbz	r2, 800be64 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x54>
 800be54:	2a01      	cmp	r2, #1
 800be56:	d02d      	beq.n	800beb4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa4>
 800be58:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800be5a:	6803      	ldr	r3, [r0, #0]
 800be5c:	691b      	ldr	r3, [r3, #16]
 800be5e:	4798      	blx	r3
 800be60:	b004      	add	sp, #16
 800be62:	bd70      	pop	{r4, r5, r6, pc}
 800be64:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800be68:	441d      	add	r5, r3
 800be6a:	b2ad      	uxth	r5, r5
 800be6c:	b22e      	sxth	r6, r5
 800be6e:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 800be72:	42b3      	cmp	r3, r6
 800be74:	daf0      	bge.n	800be58 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800be76:	6823      	ldr	r3, [r4, #0]
 800be78:	4669      	mov	r1, sp
 800be7a:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800be7c:	4620      	mov	r0, r4
 800be7e:	4798      	blx	r3
 800be80:	b940      	cbnz	r0, 800be94 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x84>
 800be82:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800be86:	2b01      	cmp	r3, #1
 800be88:	d004      	beq.n	800be94 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x84>
 800be8a:	3301      	adds	r3, #1
 800be8c:	105b      	asrs	r3, r3, #1
 800be8e:	f8ad 3006 	strh.w	r3, [sp, #6]
 800be92:	e7f0      	b.n	800be76 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x66>
 800be94:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800be98:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800be9c:	4413      	add	r3, r2
 800be9e:	b29b      	uxth	r3, r3
 800bea0:	441a      	add	r2, r3
 800bea2:	b212      	sxth	r2, r2
 800bea4:	4296      	cmp	r6, r2
 800bea6:	f8ad 3002 	strh.w	r3, [sp, #2]
 800beaa:	dae0      	bge.n	800be6e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 800beac:	1aeb      	subs	r3, r5, r3
 800beae:	f8ad 3006 	strh.w	r3, [sp, #6]
 800beb2:	e7dc      	b.n	800be6e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 800beb4:	f8bd 5000 	ldrh.w	r5, [sp]
 800beb8:	441d      	add	r5, r3
 800beba:	b2ad      	uxth	r5, r5
 800bebc:	b22e      	sxth	r6, r5
 800bebe:	f9bd 3000 	ldrsh.w	r3, [sp]
 800bec2:	42b3      	cmp	r3, r6
 800bec4:	dac8      	bge.n	800be58 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800bec6:	6823      	ldr	r3, [r4, #0]
 800bec8:	4669      	mov	r1, sp
 800beca:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800becc:	4620      	mov	r0, r4
 800bece:	4798      	blx	r3
 800bed0:	b940      	cbnz	r0, 800bee4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xd4>
 800bed2:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800bed6:	2b01      	cmp	r3, #1
 800bed8:	d004      	beq.n	800bee4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xd4>
 800beda:	3301      	adds	r3, #1
 800bedc:	105b      	asrs	r3, r3, #1
 800bede:	f8ad 3004 	strh.w	r3, [sp, #4]
 800bee2:	e7f0      	b.n	800bec6 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xb6>
 800bee4:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 800bee8:	f8bd 3000 	ldrh.w	r3, [sp]
 800beec:	4413      	add	r3, r2
 800beee:	b29b      	uxth	r3, r3
 800bef0:	441a      	add	r2, r3
 800bef2:	b212      	sxth	r2, r2
 800bef4:	4296      	cmp	r6, r2
 800bef6:	f8ad 3000 	strh.w	r3, [sp]
 800befa:	dae0      	bge.n	800bebe <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 800befc:	1aeb      	subs	r3, r5, r3
 800befe:	f8ad 3004 	strh.w	r3, [sp, #4]
 800bf02:	e7dc      	b.n	800bebe <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 800bf04:	200155b0 	.word	0x200155b0

0800bf08 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 800bf08:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800bf0a:	6803      	ldr	r3, [r0, #0]
 800bf0c:	4604      	mov	r4, r0
 800bf0e:	4601      	mov	r1, r0
 800bf10:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800bf12:	4668      	mov	r0, sp
 800bf14:	4798      	blx	r3
 800bf16:	2100      	movs	r1, #0
 800bf18:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800bf1c:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800bf20:	9102      	str	r1, [sp, #8]
 800bf22:	4668      	mov	r0, sp
 800bf24:	a902      	add	r1, sp, #8
 800bf26:	f8ad 200c 	strh.w	r2, [sp, #12]
 800bf2a:	f8ad 300e 	strh.w	r3, [sp, #14]
 800bf2e:	f7fe ff2d 	bl	800ad8c <_ZN8touchgfx4RectaNERKS0_>
 800bf32:	6823      	ldr	r3, [r4, #0]
 800bf34:	4669      	mov	r1, sp
 800bf36:	691b      	ldr	r3, [r3, #16]
 800bf38:	4620      	mov	r0, r4
 800bf3a:	4798      	blx	r3
 800bf3c:	b004      	add	sp, #16
 800bf3e:	bd10      	pop	{r4, pc}

0800bf40 <_ZN8touchgfx12CanvasWidgetC1Ev>:
 800bf40:	2101      	movs	r1, #1
 800bf42:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800bf46:	490b      	ldr	r1, [pc, #44]	; (800bf74 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 800bf48:	6001      	str	r1, [r0, #0]
 800bf4a:	2200      	movs	r2, #0
 800bf4c:	21ff      	movs	r1, #255	; 0xff
 800bf4e:	8082      	strh	r2, [r0, #4]
 800bf50:	80c2      	strh	r2, [r0, #6]
 800bf52:	8102      	strh	r2, [r0, #8]
 800bf54:	8142      	strh	r2, [r0, #10]
 800bf56:	8182      	strh	r2, [r0, #12]
 800bf58:	81c2      	strh	r2, [r0, #14]
 800bf5a:	8202      	strh	r2, [r0, #16]
 800bf5c:	8242      	strh	r2, [r0, #18]
 800bf5e:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800bf62:	61c2      	str	r2, [r0, #28]
 800bf64:	8402      	strh	r2, [r0, #32]
 800bf66:	8442      	strh	r2, [r0, #34]	; 0x22
 800bf68:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800bf6c:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
 800bf70:	6282      	str	r2, [r0, #40]	; 0x28
 800bf72:	4770      	bx	lr
 800bf74:	08023894 	.word	0x08023894

0800bf78 <_ZN8touchgfx17AbstractDataGraph9setScaleXEib>:
 800bf78:	6301      	str	r1, [r0, #48]	; 0x30
 800bf7a:	4770      	bx	lr

0800bf7c <_ZNK8touchgfx17AbstractDataGraph9getScaleXEv>:
 800bf7c:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800bf7e:	4770      	bx	lr

0800bf80 <_ZN8touchgfx17AbstractDataGraph9setScaleYEib>:
 800bf80:	6341      	str	r1, [r0, #52]	; 0x34
 800bf82:	4770      	bx	lr

0800bf84 <_ZNK8touchgfx17AbstractDataGraph9getScaleYEv>:
 800bf84:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800bf86:	4770      	bx	lr

0800bf88 <_ZN8touchgfx16DynamicDataGraph14beforeAddValueEv>:
 800bf88:	4770      	bx	lr

0800bf8a <_ZNK8touchgfx16DynamicDataGraph9dataIndexEs>:
 800bf8a:	4608      	mov	r0, r1
 800bf8c:	4770      	bx	lr

0800bf8e <_ZNK8touchgfx16DynamicDataGraph18indexToGlobalIndexEs>:
 800bf8e:	4608      	mov	r0, r1
 800bf90:	4770      	bx	lr

0800bf92 <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE>:
 800bf92:	b530      	push	{r4, r5, lr}
 800bf94:	460d      	mov	r5, r1
 800bf96:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 800bf98:	8949      	ldrh	r1, [r1, #10]
 800bf9a:	1ac9      	subs	r1, r1, r3
 800bf9c:	6803      	ldr	r3, [r0, #0]
 800bf9e:	b085      	sub	sp, #20
 800bfa0:	f8d3 3104 	ldr.w	r3, [r3, #260]	; 0x104
 800bfa4:	f10d 0206 	add.w	r2, sp, #6
 800bfa8:	b209      	sxth	r1, r1
 800bfaa:	4604      	mov	r4, r0
 800bfac:	4798      	blx	r3
 800bfae:	b1a0      	cbz	r0, 800bfda <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 800bfb0:	792b      	ldrb	r3, [r5, #4]
 800bfb2:	b993      	cbnz	r3, 800bfda <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 800bfb4:	f8d4 0128 	ldr.w	r0, [r4, #296]	; 0x128
 800bfb8:	b178      	cbz	r0, 800bfda <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 800bfba:	6803      	ldr	r3, [r0, #0]
 800bfbc:	68db      	ldr	r3, [r3, #12]
 800bfbe:	4798      	blx	r3
 800bfc0:	b158      	cbz	r0, 800bfda <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 800bfc2:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800bfc6:	f8d4 0128 	ldr.w	r0, [r4, #296]	; 0x128
 800bfca:	f8ad 3008 	strh.w	r3, [sp, #8]
 800bfce:	9503      	str	r5, [sp, #12]
 800bfd0:	6803      	ldr	r3, [r0, #0]
 800bfd2:	aa02      	add	r2, sp, #8
 800bfd4:	689b      	ldr	r3, [r3, #8]
 800bfd6:	4621      	mov	r1, r4
 800bfd8:	4798      	blx	r3
 800bfda:	b005      	add	sp, #20
 800bfdc:	bd30      	pop	{r4, r5, pc}

0800bfde <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii>:
 800bfde:	b510      	push	{r4, lr}
 800bfe0:	428a      	cmp	r2, r1
 800bfe2:	bfbe      	ittt	lt
 800bfe4:	460b      	movlt	r3, r1
 800bfe6:	4611      	movlt	r1, r2
 800bfe8:	461a      	movlt	r2, r3
 800bfea:	f8d0 312c 	ldr.w	r3, [r0, #300]	; 0x12c
 800bfee:	428b      	cmp	r3, r1
 800bff0:	4604      	mov	r4, r0
 800bff2:	d103      	bne.n	800bffc <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii+0x1e>
 800bff4:	f8d0 3130 	ldr.w	r3, [r0, #304]	; 0x130
 800bff8:	4293      	cmp	r3, r2
 800bffa:	d011      	beq.n	800c020 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii+0x42>
 800bffc:	f8c4 112c 	str.w	r1, [r4, #300]	; 0x12c
 800c000:	f8c4 2130 	str.w	r2, [r4, #304]	; 0x130
 800c004:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 800c008:	f005 ffe9 	bl	8011fde <_ZNK8touchgfx8Drawable10invalidateEv>
 800c00c:	f104 0038 	add.w	r0, r4, #56	; 0x38
 800c010:	f005 ffe5 	bl	8011fde <_ZNK8touchgfx8Drawable10invalidateEv>
 800c014:	f104 00e8 	add.w	r0, r4, #232	; 0xe8
 800c018:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c01c:	f005 bfdf 	b.w	8011fde <_ZNK8touchgfx8Drawable10invalidateEv>
 800c020:	bd10      	pop	{r4, pc}

0800c022 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii>:
 800c022:	b510      	push	{r4, lr}
 800c024:	428a      	cmp	r2, r1
 800c026:	bfbe      	ittt	lt
 800c028:	460b      	movlt	r3, r1
 800c02a:	4611      	movlt	r1, r2
 800c02c:	461a      	movlt	r2, r3
 800c02e:	f8d0 3134 	ldr.w	r3, [r0, #308]	; 0x134
 800c032:	428b      	cmp	r3, r1
 800c034:	4604      	mov	r4, r0
 800c036:	d103      	bne.n	800c040 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii+0x1e>
 800c038:	f8d0 3138 	ldr.w	r3, [r0, #312]	; 0x138
 800c03c:	4293      	cmp	r3, r2
 800c03e:	d011      	beq.n	800c064 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii+0x42>
 800c040:	f8c4 1134 	str.w	r1, [r4, #308]	; 0x134
 800c044:	f8c4 2138 	str.w	r2, [r4, #312]	; 0x138
 800c048:	f104 0064 	add.w	r0, r4, #100	; 0x64
 800c04c:	f005 ffc7 	bl	8011fde <_ZNK8touchgfx8Drawable10invalidateEv>
 800c050:	f104 0038 	add.w	r0, r4, #56	; 0x38
 800c054:	f005 ffc3 	bl	8011fde <_ZNK8touchgfx8Drawable10invalidateEv>
 800c058:	f104 0090 	add.w	r0, r4, #144	; 0x90
 800c05c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c060:	f005 bfbd 	b.w	8011fde <_ZNK8touchgfx8Drawable10invalidateEv>
 800c064:	bd10      	pop	{r4, pc}

0800c066 <_ZN8touchgfx17AbstractDataGraph5clearEv>:
 800c066:	2300      	movs	r3, #0
 800c068:	f8a0 311e 	strh.w	r3, [r0, #286]	; 0x11e
 800c06c:	3038      	adds	r0, #56	; 0x38
 800c06e:	f005 bfb6 	b.w	8011fde <_ZNK8touchgfx8Drawable10invalidateEv>

0800c072 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi>:
 800c072:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c076:	f9b0 311e 	ldrsh.w	r3, [r0, #286]	; 0x11e
 800c07a:	4605      	mov	r5, r0
 800c07c:	4688      	mov	r8, r1
 800c07e:	4617      	mov	r7, r2
 800c080:	2b00      	cmp	r3, #0
 800c082:	d03f      	beq.n	800c104 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x92>
 800c084:	6803      	ldr	r3, [r0, #0]
 800c086:	f8d3 3130 	ldr.w	r3, [r3, #304]	; 0x130
 800c08a:	4798      	blx	r3
 800c08c:	682b      	ldr	r3, [r5, #0]
 800c08e:	4604      	mov	r4, r0
 800c090:	f8d3 3134 	ldr.w	r3, [r3, #308]	; 0x134
 800c094:	4628      	mov	r0, r5
 800c096:	4798      	blx	r3
 800c098:	4284      	cmp	r4, r0
 800c09a:	bfc8      	it	gt
 800c09c:	4623      	movgt	r3, r4
 800c09e:	f9b5 611e 	ldrsh.w	r6, [r5, #286]	; 0x11e
 800c0a2:	bfc4      	itt	gt
 800c0a4:	4604      	movgt	r4, r0
 800c0a6:	4618      	movgt	r0, r3
 800c0a8:	ea24 73e4 	bic.w	r3, r4, r4, asr #31
 800c0ac:	42b3      	cmp	r3, r6
 800c0ae:	da29      	bge.n	800c104 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x92>
 800c0b0:	42b0      	cmp	r0, r6
 800c0b2:	bfa8      	it	ge
 800c0b4:	4630      	movge	r0, r6
 800c0b6:	2800      	cmp	r0, #0
 800c0b8:	db24      	blt.n	800c104 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x92>
 800c0ba:	f1b8 0f00 	cmp.w	r8, #0
 800c0be:	d11e      	bne.n	800c0fe <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x8c>
 800c0c0:	f8d5 2144 	ldr.w	r2, [r5, #324]	; 0x144
 800c0c4:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 800c0c8:	460c      	mov	r4, r1
 800c0ca:	009a      	lsls	r2, r3, #2
 800c0cc:	4298      	cmp	r0, r3
 800c0ce:	dd0b      	ble.n	800c0e8 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x76>
 800c0d0:	f8d5 6144 	ldr.w	r6, [r5, #324]	; 0x144
 800c0d4:	58b6      	ldr	r6, [r6, r2]
 800c0d6:	42b1      	cmp	r1, r6
 800c0d8:	bfa8      	it	ge
 800c0da:	4631      	movge	r1, r6
 800c0dc:	42b4      	cmp	r4, r6
 800c0de:	bfb8      	it	lt
 800c0e0:	4634      	movlt	r4, r6
 800c0e2:	3301      	adds	r3, #1
 800c0e4:	3204      	adds	r2, #4
 800c0e6:	e7f1      	b.n	800c0cc <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x5a>
 800c0e8:	1bc9      	subs	r1, r1, r7
 800c0ea:	193a      	adds	r2, r7, r4
 800c0ec:	4291      	cmp	r1, r2
 800c0ee:	d009      	beq.n	800c104 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x92>
 800c0f0:	682b      	ldr	r3, [r5, #0]
 800c0f2:	4628      	mov	r0, r5
 800c0f4:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800c0f8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800c0fc:	4718      	bx	r3
 800c0fe:	427c      	negs	r4, r7
 800c100:	4639      	mov	r1, r7
 800c102:	e7e2      	b.n	800c0ca <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x58>
 800c104:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800c108 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE>:
 800c108:	b530      	push	{r4, r5, lr}
 800c10a:	790b      	ldrb	r3, [r1, #4]
 800c10c:	2b02      	cmp	r3, #2
 800c10e:	b085      	sub	sp, #20
 800c110:	4604      	mov	r4, r0
 800c112:	460d      	mov	r5, r1
 800c114:	d020      	beq.n	800c158 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800c116:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 800c118:	88c9      	ldrh	r1, [r1, #6]
 800c11a:	1ac9      	subs	r1, r1, r3
 800c11c:	6803      	ldr	r3, [r0, #0]
 800c11e:	f10d 0206 	add.w	r2, sp, #6
 800c122:	f8d3 3104 	ldr.w	r3, [r3, #260]	; 0x104
 800c126:	b209      	sxth	r1, r1
 800c128:	4798      	blx	r3
 800c12a:	b1a8      	cbz	r0, 800c158 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800c12c:	792b      	ldrb	r3, [r5, #4]
 800c12e:	2b01      	cmp	r3, #1
 800c130:	d812      	bhi.n	800c158 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800c132:	f8d4 0124 	ldr.w	r0, [r4, #292]	; 0x124
 800c136:	b178      	cbz	r0, 800c158 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800c138:	6803      	ldr	r3, [r0, #0]
 800c13a:	68db      	ldr	r3, [r3, #12]
 800c13c:	4798      	blx	r3
 800c13e:	b158      	cbz	r0, 800c158 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800c140:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800c144:	f8d4 0124 	ldr.w	r0, [r4, #292]	; 0x124
 800c148:	f8ad 3008 	strh.w	r3, [sp, #8]
 800c14c:	9503      	str	r5, [sp, #12]
 800c14e:	6803      	ldr	r3, [r0, #0]
 800c150:	aa02      	add	r2, sp, #8
 800c152:	689b      	ldr	r3, [r3, #8]
 800c154:	4621      	mov	r1, r4
 800c156:	4798      	blx	r3
 800c158:	b005      	add	sp, #20
 800c15a:	bd30      	pop	{r4, r5, pc}

0800c15c <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_>:
 800c15c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c160:	4604      	mov	r4, r0
 800c162:	f9b0 011e 	ldrsh.w	r0, [r0, #286]	; 0x11e
 800c166:	9e06      	ldr	r6, [sp, #24]
 800c168:	4690      	mov	r8, r2
 800c16a:	461f      	mov	r7, r3
 800c16c:	b928      	cbnz	r0, 800c17a <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1e>
 800c16e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800c172:	8033      	strh	r3, [r6, #0]
 800c174:	803b      	strh	r3, [r7, #0]
 800c176:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c17a:	f8b4 2118 	ldrh.w	r2, [r4, #280]	; 0x118
 800c17e:	f9b4 0116 	ldrsh.w	r0, [r4, #278]	; 0x116
 800c182:	1883      	adds	r3, r0, r2
 800c184:	f8b4 2040 	ldrh.w	r2, [r4, #64]	; 0x40
 800c188:	1ad2      	subs	r2, r2, r3
 800c18a:	b212      	sxth	r2, r2
 800c18c:	2a01      	cmp	r2, #1
 800c18e:	dc07      	bgt.n	800c1a0 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x44>
 800c190:	2300      	movs	r3, #0
 800c192:	803b      	strh	r3, [r7, #0]
 800c194:	f8b4 311e 	ldrh.w	r3, [r4, #286]	; 0x11e
 800c198:	3b01      	subs	r3, #1
 800c19a:	8033      	strh	r3, [r6, #0]
 800c19c:	2001      	movs	r0, #1
 800c19e:	e7ea      	b.n	800c176 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1a>
 800c1a0:	1a08      	subs	r0, r1, r0
 800c1a2:	f8d4 3130 	ldr.w	r3, [r4, #304]	; 0x130
 800c1a6:	f8d4 112c 	ldr.w	r1, [r4, #300]	; 0x12c
 800c1aa:	6b25      	ldr	r5, [r4, #48]	; 0x30
 800c1ac:	1a5b      	subs	r3, r3, r1
 800c1ae:	ea4f 1040 	mov.w	r0, r0, lsl #5
 800c1b2:	d45b      	bmi.n	800c26c <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x110>
 800c1b4:	eb05 0343 	add.w	r3, r5, r3, lsl #1
 800c1b8:	fb93 f1f5 	sdiv	r1, r3, r5
 800c1bc:	2302      	movs	r3, #2
 800c1be:	fb91 f1f3 	sdiv	r1, r1, r3
 800c1c2:	3a01      	subs	r2, #1
 800c1c4:	f006 f8cc 	bl	8012360 <_ZN8touchgfx6muldivElll>
 800c1c8:	f8d4 112c 	ldr.w	r1, [r4, #300]	; 0x12c
 800c1cc:	f8d4 c030 	ldr.w	ip, [r4, #48]	; 0x30
 800c1d0:	2900      	cmp	r1, #0
 800c1d2:	db57      	blt.n	800c284 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x128>
 800c1d4:	eb0c 0341 	add.w	r3, ip, r1, lsl #1
 800c1d8:	2502      	movs	r5, #2
 800c1da:	fb93 f3fc 	sdiv	r3, r3, ip
 800c1de:	fb93 f3f5 	sdiv	r3, r3, r5
 800c1e2:	eb00 1543 	add.w	r5, r0, r3, lsl #5
 800c1e6:	f8d4 2130 	ldr.w	r2, [r4, #304]	; 0x130
 800c1ea:	f9b4 3116 	ldrsh.w	r3, [r4, #278]	; 0x116
 800c1ee:	1a52      	subs	r2, r2, r1
 800c1f0:	eba8 0003 	sub.w	r0, r8, r3
 800c1f4:	ea4f 1040 	mov.w	r0, r0, lsl #5
 800c1f8:	d450      	bmi.n	800c29c <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x140>
 800c1fa:	eb0c 0242 	add.w	r2, ip, r2, lsl #1
 800c1fe:	fb92 f1fc 	sdiv	r1, r2, ip
 800c202:	2202      	movs	r2, #2
 800c204:	fb91 f1f2 	sdiv	r1, r1, r2
 800c208:	f8b4 2118 	ldrh.w	r2, [r4, #280]	; 0x118
 800c20c:	4413      	add	r3, r2
 800c20e:	f8b4 2040 	ldrh.w	r2, [r4, #64]	; 0x40
 800c212:	1ad2      	subs	r2, r2, r3
 800c214:	b212      	sxth	r2, r2
 800c216:	3a01      	subs	r2, #1
 800c218:	f006 f8a2 	bl	8012360 <_ZN8touchgfx6muldivElll>
 800c21c:	f8d4 312c 	ldr.w	r3, [r4, #300]	; 0x12c
 800c220:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800c222:	2b00      	cmp	r3, #0
 800c224:	db46      	blt.n	800c2b4 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x158>
 800c226:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 800c22a:	fb93 f3f2 	sdiv	r3, r3, r2
 800c22e:	2202      	movs	r2, #2
 800c230:	fb93 f3f2 	sdiv	r3, r3, r2
 800c234:	eb00 1343 	add.w	r3, r0, r3, lsl #5
 800c238:	429d      	cmp	r5, r3
 800c23a:	bfde      	ittt	le
 800c23c:	461a      	movle	r2, r3
 800c23e:	462b      	movle	r3, r5
 800c240:	4615      	movle	r5, r2
 800c242:	2d00      	cmp	r5, #0
 800c244:	bfa4      	itt	ge
 800c246:	351f      	addge	r5, #31
 800c248:	116d      	asrge	r5, r5, #5
 800c24a:	f04f 0020 	mov.w	r0, #32
 800c24e:	bfb8      	it	lt
 800c250:	fb95 f5f0 	sdivlt	r5, r5, r0
 800c254:	b22d      	sxth	r5, r5
 800c256:	2d00      	cmp	r5, #0
 800c258:	b21b      	sxth	r3, r3
 800c25a:	fb93 f3f0 	sdiv	r3, r3, r0
 800c25e:	803b      	strh	r3, [r7, #0]
 800c260:	8035      	strh	r5, [r6, #0]
 800c262:	da33      	bge.n	800c2cc <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x170>
 800c264:	2000      	movs	r0, #0
 800c266:	8030      	strh	r0, [r6, #0]
 800c268:	8038      	strh	r0, [r7, #0]
 800c26a:	e784      	b.n	800c176 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1a>
 800c26c:	f06f 0101 	mvn.w	r1, #1
 800c270:	fb01 5303 	mla	r3, r1, r3, r5
 800c274:	1e59      	subs	r1, r3, #1
 800c276:	2302      	movs	r3, #2
 800c278:	fb91 f1f5 	sdiv	r1, r1, r5
 800c27c:	fb91 f1f3 	sdiv	r1, r1, r3
 800c280:	4249      	negs	r1, r1
 800c282:	e79e      	b.n	800c1c2 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x66>
 800c284:	f06f 0301 	mvn.w	r3, #1
 800c288:	fb03 c301 	mla	r3, r3, r1, ip
 800c28c:	3b01      	subs	r3, #1
 800c28e:	2502      	movs	r5, #2
 800c290:	fb93 f3fc 	sdiv	r3, r3, ip
 800c294:	fb93 f3f5 	sdiv	r3, r3, r5
 800c298:	425b      	negs	r3, r3
 800c29a:	e7a2      	b.n	800c1e2 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x86>
 800c29c:	f06f 0101 	mvn.w	r1, #1
 800c2a0:	fb01 c202 	mla	r2, r1, r2, ip
 800c2a4:	1e51      	subs	r1, r2, #1
 800c2a6:	2202      	movs	r2, #2
 800c2a8:	fb91 f1fc 	sdiv	r1, r1, ip
 800c2ac:	fb91 f1f2 	sdiv	r1, r1, r2
 800c2b0:	4249      	negs	r1, r1
 800c2b2:	e7a9      	b.n	800c208 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0xac>
 800c2b4:	f06f 0101 	mvn.w	r1, #1
 800c2b8:	fb01 2303 	mla	r3, r1, r3, r2
 800c2bc:	3b01      	subs	r3, #1
 800c2be:	fb93 f3f2 	sdiv	r3, r3, r2
 800c2c2:	2202      	movs	r2, #2
 800c2c4:	fb93 f3f2 	sdiv	r3, r3, r2
 800c2c8:	425b      	negs	r3, r3
 800c2ca:	e7b3      	b.n	800c234 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0xd8>
 800c2cc:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800c2d0:	f9b7 2000 	ldrsh.w	r2, [r7]
 800c2d4:	4293      	cmp	r3, r2
 800c2d6:	dc05      	bgt.n	800c2e4 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x188>
 800c2d8:	3b01      	subs	r3, #1
 800c2da:	b21b      	sxth	r3, r3
 800c2dc:	8033      	strh	r3, [r6, #0]
 800c2de:	2000      	movs	r0, #0
 800c2e0:	803b      	strh	r3, [r7, #0]
 800c2e2:	e748      	b.n	800c176 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1a>
 800c2e4:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 800c2e8:	803a      	strh	r2, [r7, #0]
 800c2ea:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800c2ee:	f9b6 2000 	ldrsh.w	r2, [r6]
 800c2f2:	4293      	cmp	r3, r2
 800c2f4:	bfdc      	itt	le
 800c2f6:	f103 33ff 	addle.w	r3, r3, #4294967295
 800c2fa:	b21a      	sxthle	r2, r3
 800c2fc:	8032      	strh	r2, [r6, #0]
 800c2fe:	e74d      	b.n	800c19c <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x40>

0800c300 <_ZN8touchgfx9ContainerC1Ev>:
 800c300:	2101      	movs	r1, #1
 800c302:	2200      	movs	r2, #0
 800c304:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800c308:	4909      	ldr	r1, [pc, #36]	; (800c330 <_ZN8touchgfx9ContainerC1Ev+0x30>)
 800c30a:	8082      	strh	r2, [r0, #4]
 800c30c:	80c2      	strh	r2, [r0, #6]
 800c30e:	8102      	strh	r2, [r0, #8]
 800c310:	8142      	strh	r2, [r0, #10]
 800c312:	8182      	strh	r2, [r0, #12]
 800c314:	81c2      	strh	r2, [r0, #14]
 800c316:	8202      	strh	r2, [r0, #16]
 800c318:	8242      	strh	r2, [r0, #18]
 800c31a:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800c31e:	61c2      	str	r2, [r0, #28]
 800c320:	8402      	strh	r2, [r0, #32]
 800c322:	8442      	strh	r2, [r0, #34]	; 0x22
 800c324:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800c328:	6001      	str	r1, [r0, #0]
 800c32a:	6282      	str	r2, [r0, #40]	; 0x28
 800c32c:	4770      	bx	lr
 800c32e:	bf00      	nop
 800c330:	0802379c 	.word	0x0802379c

0800c334 <_ZNK8touchgfx7CWRUtil2Q55roundEv>:
 800c334:	6800      	ldr	r0, [r0, #0]
 800c336:	2800      	cmp	r0, #0
 800c338:	bfbd      	ittte	lt
 800c33a:	380f      	sublt	r0, #15
 800c33c:	2320      	movlt	r3, #32
 800c33e:	fb90 f0f3 	sdivlt	r0, r0, r3
 800c342:	3010      	addge	r0, #16
 800c344:	bfa8      	it	ge
 800c346:	1140      	asrge	r0, r0, #5
 800c348:	4770      	bx	lr

0800c34a <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs>:
 800c34a:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c34e:	4605      	mov	r5, r0
 800c350:	f9b0 011e 	ldrsh.w	r0, [r0, #286]	; 0x11e
 800c354:	4688      	mov	r8, r1
 800c356:	4691      	mov	r9, r2
 800c358:	469a      	mov	sl, r3
 800c35a:	b360      	cbz	r0, 800c3b6 <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs+0x6c>
 800c35c:	2700      	movs	r7, #0
 800c35e:	f04f 3bff 	mov.w	fp, #4294967295
 800c362:	f9b5 311e 	ldrsh.w	r3, [r5, #286]	; 0x11e
 800c366:	b23e      	sxth	r6, r7
 800c368:	42b3      	cmp	r3, r6
 800c36a:	dd23      	ble.n	800c3b4 <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs+0x6a>
 800c36c:	682b      	ldr	r3, [r5, #0]
 800c36e:	4631      	mov	r1, r6
 800c370:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800c374:	4628      	mov	r0, r5
 800c376:	4798      	blx	r3
 800c378:	9001      	str	r0, [sp, #4]
 800c37a:	a801      	add	r0, sp, #4
 800c37c:	f7ff ffda 	bl	800c334 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c380:	682b      	ldr	r3, [r5, #0]
 800c382:	eba0 0008 	sub.w	r0, r0, r8
 800c386:	b204      	sxth	r4, r0
 800c388:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800c38c:	4631      	mov	r1, r6
 800c38e:	4628      	mov	r0, r5
 800c390:	4798      	blx	r3
 800c392:	9001      	str	r0, [sp, #4]
 800c394:	a801      	add	r0, sp, #4
 800c396:	f7ff ffcd 	bl	800c334 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c39a:	eba0 0009 	sub.w	r0, r0, r9
 800c39e:	fb10 f000 	smulbb	r0, r0, r0
 800c3a2:	fb04 0404 	mla	r4, r4, r4, r0
 800c3a6:	455c      	cmp	r4, fp
 800c3a8:	bf3c      	itt	cc
 800c3aa:	f8aa 6000 	strhcc.w	r6, [sl]
 800c3ae:	46a3      	movcc	fp, r4
 800c3b0:	3701      	adds	r7, #1
 800c3b2:	e7d6      	b.n	800c362 <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs+0x18>
 800c3b4:	2001      	movs	r0, #1
 800c3b6:	b003      	add	sp, #12
 800c3b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800c3bc <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs>:
 800c3bc:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800c3c0:	4604      	mov	r4, r0
 800c3c2:	f9b0 011e 	ldrsh.w	r0, [r0, #286]	; 0x11e
 800c3c6:	4688      	mov	r8, r1
 800c3c8:	4691      	mov	r9, r2
 800c3ca:	b1f8      	cbz	r0, 800c40c <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs+0x50>
 800c3cc:	2500      	movs	r5, #0
 800c3ce:	f04f 37ff 	mov.w	r7, #4294967295
 800c3d2:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800c3d6:	b22e      	sxth	r6, r5
 800c3d8:	42b3      	cmp	r3, r6
 800c3da:	dd16      	ble.n	800c40a <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs+0x4e>
 800c3dc:	6823      	ldr	r3, [r4, #0]
 800c3de:	4631      	mov	r1, r6
 800c3e0:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800c3e4:	4620      	mov	r0, r4
 800c3e6:	4798      	blx	r3
 800c3e8:	9001      	str	r0, [sp, #4]
 800c3ea:	a801      	add	r0, sp, #4
 800c3ec:	f7ff ffa2 	bl	800c334 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c3f0:	b200      	sxth	r0, r0
 800c3f2:	eba0 0008 	sub.w	r0, r0, r8
 800c3f6:	2800      	cmp	r0, #0
 800c3f8:	bfb8      	it	lt
 800c3fa:	4240      	neglt	r0, r0
 800c3fc:	42b8      	cmp	r0, r7
 800c3fe:	bf3c      	itt	cc
 800c400:	f8a9 6000 	strhcc.w	r6, [r9]
 800c404:	4607      	movcc	r7, r0
 800c406:	3501      	adds	r5, #1
 800c408:	e7e3      	b.n	800c3d2 <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs+0x16>
 800c40a:	2001      	movs	r0, #1
 800c40c:	b003      	add	sp, #12
 800c40e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800c412 <_ZN8touchgfx17AbstractDataGraph19setGraphAreaPaddingEssss>:
 800c412:	f8a0 3118 	strh.w	r3, [r0, #280]	; 0x118
 800c416:	f9bd 3000 	ldrsh.w	r3, [sp]
 800c41a:	f8a0 1114 	strh.w	r1, [r0, #276]	; 0x114
 800c41e:	f8a0 2116 	strh.w	r2, [r0, #278]	; 0x116
 800c422:	f8a0 311a 	strh.w	r3, [r0, #282]	; 0x11a
 800c426:	4770      	bx	lr

0800c428 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>:
 800c428:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c42a:	4604      	mov	r4, r0
 800c42c:	3038      	adds	r0, #56	; 0x38
 800c42e:	460d      	mov	r5, r1
 800c430:	f7fe fb1c 	bl	800aa6c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c434:	f9b4 2042 	ldrsh.w	r2, [r4, #66]	; 0x42
 800c438:	9200      	str	r2, [sp, #0]
 800c43a:	2200      	movs	r2, #0
 800c43c:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800c440:	4611      	mov	r1, r2
 800c442:	4628      	mov	r0, r5
 800c444:	f7f6 fc45 	bl	8002cd2 <_ZN8touchgfx8Drawable11setPositionEssss>
 800c448:	b003      	add	sp, #12
 800c44a:	bd30      	pop	{r4, r5, pc}

0800c44c <_ZN8touchgfx17AbstractDataGraph14addLeftElementERNS_23AbstractGraphDecorationE>:
 800c44c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c44e:	4604      	mov	r4, r0
 800c450:	3064      	adds	r0, #100	; 0x64
 800c452:	460d      	mov	r5, r1
 800c454:	f7fe fb0a 	bl	800aa6c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c458:	f9b4 206e 	ldrsh.w	r2, [r4, #110]	; 0x6e
 800c45c:	9200      	str	r2, [sp, #0]
 800c45e:	2200      	movs	r2, #0
 800c460:	f9b4 306c 	ldrsh.w	r3, [r4, #108]	; 0x6c
 800c464:	4611      	mov	r1, r2
 800c466:	4628      	mov	r0, r5
 800c468:	f7f6 fc33 	bl	8002cd2 <_ZN8touchgfx8Drawable11setPositionEssss>
 800c46c:	b003      	add	sp, #12
 800c46e:	bd30      	pop	{r4, r5, pc}

0800c470 <_ZN8touchgfx17AbstractDataGraph16addBottomElementERNS_23AbstractGraphDecorationE>:
 800c470:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c472:	4604      	mov	r4, r0
 800c474:	30e8      	adds	r0, #232	; 0xe8
 800c476:	460d      	mov	r5, r1
 800c478:	f7fe faf8 	bl	800aa6c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c47c:	f9b4 20f2 	ldrsh.w	r2, [r4, #242]	; 0xf2
 800c480:	9200      	str	r2, [sp, #0]
 800c482:	2200      	movs	r2, #0
 800c484:	f9b4 30f0 	ldrsh.w	r3, [r4, #240]	; 0xf0
 800c488:	4611      	mov	r1, r2
 800c48a:	4628      	mov	r0, r5
 800c48c:	f7f6 fc21 	bl	8002cd2 <_ZN8touchgfx8Drawable11setPositionEssss>
 800c490:	b003      	add	sp, #12
 800c492:	bd30      	pop	{r4, r5, pc}

0800c494 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs>:
 800c494:	b538      	push	{r3, r4, r5, lr}
 800c496:	f9b0 311e 	ldrsh.w	r3, [r0, #286]	; 0x11e
 800c49a:	428b      	cmp	r3, r1
 800c49c:	460d      	mov	r5, r1
 800c49e:	dd08      	ble.n	800c4b2 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs+0x1e>
 800c4a0:	6e04      	ldr	r4, [r0, #96]	; 0x60
 800c4a2:	b134      	cbz	r4, 800c4b2 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs+0x1e>
 800c4a4:	6823      	ldr	r3, [r4, #0]
 800c4a6:	4620      	mov	r0, r4
 800c4a8:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800c4aa:	4629      	mov	r1, r5
 800c4ac:	4798      	blx	r3
 800c4ae:	69a4      	ldr	r4, [r4, #24]
 800c4b0:	e7f7      	b.n	800c4a2 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs+0xe>
 800c4b2:	bd38      	pop	{r3, r4, r5, pc}

0800c4b4 <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs>:
 800c4b4:	b570      	push	{r4, r5, r6, lr}
 800c4b6:	f8d0 40e4 	ldr.w	r4, [r0, #228]	; 0xe4
 800c4ba:	4606      	mov	r6, r0
 800c4bc:	460d      	mov	r5, r1
 800c4be:	b134      	cbz	r4, 800c4ce <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0x1a>
 800c4c0:	6823      	ldr	r3, [r4, #0]
 800c4c2:	4620      	mov	r0, r4
 800c4c4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800c4c6:	4629      	mov	r1, r5
 800c4c8:	4798      	blx	r3
 800c4ca:	69a4      	ldr	r4, [r4, #24]
 800c4cc:	e7f7      	b.n	800c4be <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0xa>
 800c4ce:	f8d6 4110 	ldr.w	r4, [r6, #272]	; 0x110
 800c4d2:	b134      	cbz	r4, 800c4e2 <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0x2e>
 800c4d4:	6823      	ldr	r3, [r4, #0]
 800c4d6:	4620      	mov	r0, r4
 800c4d8:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800c4da:	4629      	mov	r1, r5
 800c4dc:	4798      	blx	r3
 800c4de:	69a4      	ldr	r4, [r4, #24]
 800c4e0:	e7f7      	b.n	800c4d2 <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0x1e>
 800c4e2:	bd70      	pop	{r4, r5, r6, pc}

0800c4e4 <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv>:
 800c4e4:	b538      	push	{r3, r4, r5, lr}
 800c4e6:	4604      	mov	r4, r0
 800c4e8:	2500      	movs	r5, #0
 800c4ea:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800c4ee:	42ab      	cmp	r3, r5
 800c4f0:	db05      	blt.n	800c4fe <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv+0x1a>
 800c4f2:	b229      	sxth	r1, r5
 800c4f4:	4620      	mov	r0, r4
 800c4f6:	f7ff ffdd 	bl	800c4b4 <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs>
 800c4fa:	3501      	adds	r5, #1
 800c4fc:	e7f5      	b.n	800c4ea <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv+0x6>
 800c4fe:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 800c502:	f005 fd6c 	bl	8011fde <_ZNK8touchgfx8Drawable10invalidateEv>
 800c506:	f104 00e8 	add.w	r0, r4, #232	; 0xe8
 800c50a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c50e:	f005 bd66 	b.w	8011fde <_ZNK8touchgfx8Drawable10invalidateEv>

0800c512 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>:
 800c512:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c514:	6e05      	ldr	r5, [r0, #96]	; 0x60
 800c516:	4604      	mov	r4, r0
 800c518:	b15d      	cbz	r5, 800c532 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x20>
 800c51a:	f9b4 2042 	ldrsh.w	r2, [r4, #66]	; 0x42
 800c51e:	9200      	str	r2, [sp, #0]
 800c520:	2200      	movs	r2, #0
 800c522:	4628      	mov	r0, r5
 800c524:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800c528:	4611      	mov	r1, r2
 800c52a:	f7f6 fbd2 	bl	8002cd2 <_ZN8touchgfx8Drawable11setPositionEssss>
 800c52e:	69ad      	ldr	r5, [r5, #24]
 800c530:	e7f2      	b.n	800c518 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x6>
 800c532:	f8d4 50e4 	ldr.w	r5, [r4, #228]	; 0xe4
 800c536:	b15d      	cbz	r5, 800c550 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x3e>
 800c538:	f9b4 20c6 	ldrsh.w	r2, [r4, #198]	; 0xc6
 800c53c:	9200      	str	r2, [sp, #0]
 800c53e:	2200      	movs	r2, #0
 800c540:	4628      	mov	r0, r5
 800c542:	f9b4 30c4 	ldrsh.w	r3, [r4, #196]	; 0xc4
 800c546:	4611      	mov	r1, r2
 800c548:	f7f6 fbc3 	bl	8002cd2 <_ZN8touchgfx8Drawable11setPositionEssss>
 800c54c:	69ad      	ldr	r5, [r5, #24]
 800c54e:	e7f2      	b.n	800c536 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x24>
 800c550:	f8d4 508c 	ldr.w	r5, [r4, #140]	; 0x8c
 800c554:	b15d      	cbz	r5, 800c56e <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x5c>
 800c556:	f9b4 206e 	ldrsh.w	r2, [r4, #110]	; 0x6e
 800c55a:	9200      	str	r2, [sp, #0]
 800c55c:	2200      	movs	r2, #0
 800c55e:	4628      	mov	r0, r5
 800c560:	f9b4 306c 	ldrsh.w	r3, [r4, #108]	; 0x6c
 800c564:	4611      	mov	r1, r2
 800c566:	f7f6 fbb4 	bl	8002cd2 <_ZN8touchgfx8Drawable11setPositionEssss>
 800c56a:	69ad      	ldr	r5, [r5, #24]
 800c56c:	e7f2      	b.n	800c554 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x42>
 800c56e:	f8d4 50b8 	ldr.w	r5, [r4, #184]	; 0xb8
 800c572:	b15d      	cbz	r5, 800c58c <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x7a>
 800c574:	f9b4 209a 	ldrsh.w	r2, [r4, #154]	; 0x9a
 800c578:	9200      	str	r2, [sp, #0]
 800c57a:	2200      	movs	r2, #0
 800c57c:	4628      	mov	r0, r5
 800c57e:	f9b4 3098 	ldrsh.w	r3, [r4, #152]	; 0x98
 800c582:	4611      	mov	r1, r2
 800c584:	f7f6 fba5 	bl	8002cd2 <_ZN8touchgfx8Drawable11setPositionEssss>
 800c588:	69ad      	ldr	r5, [r5, #24]
 800c58a:	e7f2      	b.n	800c572 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x60>
 800c58c:	f8d4 5110 	ldr.w	r5, [r4, #272]	; 0x110
 800c590:	b15d      	cbz	r5, 800c5aa <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x98>
 800c592:	f9b4 20f2 	ldrsh.w	r2, [r4, #242]	; 0xf2
 800c596:	9200      	str	r2, [sp, #0]
 800c598:	2200      	movs	r2, #0
 800c59a:	4628      	mov	r0, r5
 800c59c:	f9b4 30f0 	ldrsh.w	r3, [r4, #240]	; 0xf0
 800c5a0:	4611      	mov	r1, r2
 800c5a2:	f7f6 fb96 	bl	8002cd2 <_ZN8touchgfx8Drawable11setPositionEssss>
 800c5a6:	69ad      	ldr	r5, [r5, #24]
 800c5a8:	e7f2      	b.n	800c590 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x7e>
 800c5aa:	6823      	ldr	r3, [r4, #0]
 800c5ac:	695b      	ldr	r3, [r3, #20]
 800c5ae:	4620      	mov	r0, r4
 800c5b0:	b003      	add	sp, #12
 800c5b2:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800c5b6:	4718      	bx	r3

0800c5b8 <_ZN8touchgfx17AbstractDataGraph8setWidthEs>:
 800c5b8:	b430      	push	{r4, r5}
 800c5ba:	f8b0 4098 	ldrh.w	r4, [r0, #152]	; 0x98
 800c5be:	f8a0 10c4 	strh.w	r1, [r0, #196]	; 0xc4
 800c5c2:	b28a      	uxth	r2, r1
 800c5c4:	1b15      	subs	r5, r2, r4
 800c5c6:	f8a0 5094 	strh.w	r5, [r0, #148]	; 0x94
 800c5ca:	f8b0 506c 	ldrh.w	r5, [r0, #108]	; 0x6c
 800c5ce:	f8a0 10f0 	strh.w	r1, [r0, #240]	; 0xf0
 800c5d2:	442c      	add	r4, r5
 800c5d4:	1b12      	subs	r2, r2, r4
 800c5d6:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 800c5da:	8101      	strh	r1, [r0, #8]
 800c5dc:	bc30      	pop	{r4, r5}
 800c5de:	f7ff bf98 	b.w	800c512 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>

0800c5e2 <_ZN8touchgfx17AbstractDataGraph9setHeightEs>:
 800c5e2:	b430      	push	{r4, r5}
 800c5e4:	f8b0 40f2 	ldrh.w	r4, [r0, #242]	; 0xf2
 800c5e8:	f8a0 106e 	strh.w	r1, [r0, #110]	; 0x6e
 800c5ec:	b28a      	uxth	r2, r1
 800c5ee:	1b15      	subs	r5, r2, r4
 800c5f0:	f8a0 50ee 	strh.w	r5, [r0, #238]	; 0xee
 800c5f4:	f8b0 50c6 	ldrh.w	r5, [r0, #198]	; 0xc6
 800c5f8:	f8a0 109a 	strh.w	r1, [r0, #154]	; 0x9a
 800c5fc:	442c      	add	r4, r5
 800c5fe:	1b12      	subs	r2, r2, r4
 800c600:	f8a0 2042 	strh.w	r2, [r0, #66]	; 0x42
 800c604:	8141      	strh	r1, [r0, #10]
 800c606:	bc30      	pop	{r4, r5}
 800c608:	f7ff bf83 	b.w	800c512 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>

0800c60c <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>:
 800c60c:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800c610:	f9bd 7028 	ldrsh.w	r7, [sp, #40]	; 0x28
 800c614:	fa1f fa83 	uxth.w	sl, r3
 800c618:	4699      	mov	r9, r3
 800c61a:	8903      	ldrh	r3, [r0, #8]
 800c61c:	4604      	mov	r4, r0
 800c61e:	4615      	mov	r5, r2
 800c620:	fa1f f887 	uxth.w	r8, r7
 800c624:	4452      	add	r2, sl
 800c626:	8940      	ldrh	r0, [r0, #10]
 800c628:	1a9b      	subs	r3, r3, r2
 800c62a:	eb08 0201 	add.w	r2, r8, r1
 800c62e:	1a80      	subs	r0, r0, r2
 800c630:	b200      	sxth	r0, r0
 800c632:	460e      	mov	r6, r1
 800c634:	9000      	str	r0, [sp, #0]
 800c636:	460a      	mov	r2, r1
 800c638:	f104 0038 	add.w	r0, r4, #56	; 0x38
 800c63c:	4629      	mov	r1, r5
 800c63e:	b21b      	sxth	r3, r3
 800c640:	f7f6 fb47 	bl	8002cd2 <_ZN8touchgfx8Drawable11setPositionEssss>
 800c644:	2200      	movs	r2, #0
 800c646:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800c64a:	9600      	str	r6, [sp, #0]
 800c64c:	4611      	mov	r1, r2
 800c64e:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 800c652:	f7f6 fb3e 	bl	8002cd2 <_ZN8touchgfx8Drawable11setPositionEssss>
 800c656:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800c65a:	9300      	str	r3, [sp, #0]
 800c65c:	2200      	movs	r2, #0
 800c65e:	462b      	mov	r3, r5
 800c660:	4611      	mov	r1, r2
 800c662:	f104 0064 	add.w	r0, r4, #100	; 0x64
 800c666:	f7f6 fb34 	bl	8002cd2 <_ZN8touchgfx8Drawable11setPositionEssss>
 800c66a:	8921      	ldrh	r1, [r4, #8]
 800c66c:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800c670:	9300      	str	r3, [sp, #0]
 800c672:	eba1 010a 	sub.w	r1, r1, sl
 800c676:	464b      	mov	r3, r9
 800c678:	f104 0090 	add.w	r0, r4, #144	; 0x90
 800c67c:	2200      	movs	r2, #0
 800c67e:	b209      	sxth	r1, r1
 800c680:	f7f6 fb27 	bl	8002cd2 <_ZN8touchgfx8Drawable11setPositionEssss>
 800c684:	8962      	ldrh	r2, [r4, #10]
 800c686:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800c68a:	9700      	str	r7, [sp, #0]
 800c68c:	eba2 0208 	sub.w	r2, r2, r8
 800c690:	f104 00e8 	add.w	r0, r4, #232	; 0xe8
 800c694:	b212      	sxth	r2, r2
 800c696:	2100      	movs	r1, #0
 800c698:	f7f6 fb1b 	bl	8002cd2 <_ZN8touchgfx8Drawable11setPositionEssss>
 800c69c:	4620      	mov	r0, r4
 800c69e:	b002      	add	sp, #8
 800c6a0:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c6a4:	f7ff bf35 	b.w	800c512 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>

0800c6a8 <_ZN8touchgfx17AbstractDataGraphC1Es>:
 800c6a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c6ac:	b085      	sub	sp, #20
 800c6ae:	4604      	mov	r4, r0
 800c6b0:	9103      	str	r1, [sp, #12]
 800c6b2:	f7ff fe25 	bl	800c300 <_ZN8touchgfx9ContainerC1Ev>
 800c6b6:	4b2d      	ldr	r3, [pc, #180]	; (800c76c <_ZN8touchgfx17AbstractDataGraphC1Es+0xc4>)
 800c6b8:	6023      	str	r3, [r4, #0]
 800c6ba:	2601      	movs	r6, #1
 800c6bc:	23ff      	movs	r3, #255	; 0xff
 800c6be:	f104 0b38 	add.w	fp, r4, #56	; 0x38
 800c6c2:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 800c6c6:	f104 0964 	add.w	r9, r4, #100	; 0x64
 800c6ca:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 800c6ce:	4658      	mov	r0, fp
 800c6d0:	f7ff fe16 	bl	800c300 <_ZN8touchgfx9ContainerC1Ev>
 800c6d4:	f104 0890 	add.w	r8, r4, #144	; 0x90
 800c6d8:	4648      	mov	r0, r9
 800c6da:	f7ff fe11 	bl	800c300 <_ZN8touchgfx9ContainerC1Ev>
 800c6de:	f104 0abc 	add.w	sl, r4, #188	; 0xbc
 800c6e2:	4640      	mov	r0, r8
 800c6e4:	f7ff fe0c 	bl	800c300 <_ZN8touchgfx9ContainerC1Ev>
 800c6e8:	f104 07e8 	add.w	r7, r4, #232	; 0xe8
 800c6ec:	4650      	mov	r0, sl
 800c6ee:	f7ff fe07 	bl	800c300 <_ZN8touchgfx9ContainerC1Ev>
 800c6f2:	4638      	mov	r0, r7
 800c6f4:	f7ff fe04 	bl	800c300 <_ZN8touchgfx9ContainerC1Ev>
 800c6f8:	2500      	movs	r5, #0
 800c6fa:	9903      	ldr	r1, [sp, #12]
 800c6fc:	f8a4 111c 	strh.w	r1, [r4, #284]	; 0x11c
 800c700:	4620      	mov	r0, r4
 800c702:	4659      	mov	r1, fp
 800c704:	f8c4 5114 	str.w	r5, [r4, #276]	; 0x114
 800c708:	f8c4 5118 	str.w	r5, [r4, #280]	; 0x118
 800c70c:	f8a4 511e 	strh.w	r5, [r4, #286]	; 0x11e
 800c710:	f8a4 5120 	strh.w	r5, [r4, #288]	; 0x120
 800c714:	f8c4 5124 	str.w	r5, [r4, #292]	; 0x124
 800c718:	f8c4 5128 	str.w	r5, [r4, #296]	; 0x128
 800c71c:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
 800c720:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 800c724:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 800c728:	f8c4 5138 	str.w	r5, [r4, #312]	; 0x138
 800c72c:	f7fe f99e 	bl	800aa6c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c730:	4651      	mov	r1, sl
 800c732:	4620      	mov	r0, r4
 800c734:	f7fe f99a 	bl	800aa6c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c738:	4649      	mov	r1, r9
 800c73a:	4620      	mov	r0, r4
 800c73c:	f7fe f996 	bl	800aa6c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c740:	4641      	mov	r1, r8
 800c742:	4620      	mov	r0, r4
 800c744:	f7fe f992 	bl	800aa6c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c748:	4639      	mov	r1, r7
 800c74a:	4620      	mov	r0, r4
 800c74c:	f7fe f98e 	bl	800aa6c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c750:	4620      	mov	r0, r4
 800c752:	9500      	str	r5, [sp, #0]
 800c754:	462b      	mov	r3, r5
 800c756:	462a      	mov	r2, r5
 800c758:	4629      	mov	r1, r5
 800c75a:	f7ff ff57 	bl	800c60c <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>
 800c75e:	4620      	mov	r0, r4
 800c760:	f884 6024 	strb.w	r6, [r4, #36]	; 0x24
 800c764:	b005      	add	sp, #20
 800c766:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c76a:	bf00      	nop
 800c76c:	08023aa4 	.word	0x08023aa4

0800c770 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>:
 800c770:	4291      	cmp	r1, r2
 800c772:	4613      	mov	r3, r2
 800c774:	d003      	beq.n	800c77e <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii+0xe>
 800c776:	460a      	mov	r2, r1
 800c778:	4619      	mov	r1, r3
 800c77a:	f005 bdf1 	b.w	8012360 <_ZN8touchgfx6muldivElll>
 800c77e:	4770      	bx	lr

0800c780 <_ZN8touchgfx16DynamicDataGraph9setScaleXEib>:
 800c780:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c784:	6803      	ldr	r3, [r0, #0]
 800c786:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800c78a:	460d      	mov	r5, r1
 800c78c:	4604      	mov	r4, r0
 800c78e:	4798      	blx	r3
 800c790:	42a8      	cmp	r0, r5
 800c792:	4606      	mov	r6, r0
 800c794:	d024      	beq.n	800c7e0 <_ZN8touchgfx16DynamicDataGraph9setScaleXEib+0x60>
 800c796:	6823      	ldr	r3, [r4, #0]
 800c798:	4601      	mov	r1, r0
 800c79a:	462a      	mov	r2, r5
 800c79c:	f8d4 012c 	ldr.w	r0, [r4, #300]	; 0x12c
 800c7a0:	f8d3 70a4 	ldr.w	r7, [r3, #164]	; 0xa4
 800c7a4:	f7ff ffe4 	bl	800c770 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800c7a8:	462a      	mov	r2, r5
 800c7aa:	4680      	mov	r8, r0
 800c7ac:	4631      	mov	r1, r6
 800c7ae:	f8d4 0130 	ldr.w	r0, [r4, #304]	; 0x130
 800c7b2:	f7ff ffdd 	bl	800c770 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800c7b6:	4641      	mov	r1, r8
 800c7b8:	4602      	mov	r2, r0
 800c7ba:	4620      	mov	r0, r4
 800c7bc:	47b8      	blx	r7
 800c7be:	462a      	mov	r2, r5
 800c7c0:	4631      	mov	r1, r6
 800c7c2:	f8d4 013c 	ldr.w	r0, [r4, #316]	; 0x13c
 800c7c6:	f7ff ffd3 	bl	800c770 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800c7ca:	462a      	mov	r2, r5
 800c7cc:	f8c4 013c 	str.w	r0, [r4, #316]	; 0x13c
 800c7d0:	4631      	mov	r1, r6
 800c7d2:	f8d4 0140 	ldr.w	r0, [r4, #320]	; 0x140
 800c7d6:	f7ff ffcb 	bl	800c770 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800c7da:	6325      	str	r5, [r4, #48]	; 0x30
 800c7dc:	f8c4 0140 	str.w	r0, [r4, #320]	; 0x140
 800c7e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800c7e4 <_ZN8touchgfx16DynamicDataGraph9setScaleYEib>:
 800c7e4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800c7e8:	4604      	mov	r4, r0
 800c7ea:	460f      	mov	r7, r1
 800c7ec:	b1ba      	cbz	r2, 800c81e <_ZN8touchgfx16DynamicDataGraph9setScaleYEib+0x3a>
 800c7ee:	6803      	ldr	r3, [r0, #0]
 800c7f0:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800c7f4:	4798      	blx	r3
 800c7f6:	2600      	movs	r6, #0
 800c7f8:	4681      	mov	r9, r0
 800c7fa:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800c7fe:	b235      	sxth	r5, r6
 800c800:	42ab      	cmp	r3, r5
 800c802:	f106 0601 	add.w	r6, r6, #1
 800c806:	dd0a      	ble.n	800c81e <_ZN8touchgfx16DynamicDataGraph9setScaleYEib+0x3a>
 800c808:	f8d4 8144 	ldr.w	r8, [r4, #324]	; 0x144
 800c80c:	463a      	mov	r2, r7
 800c80e:	4649      	mov	r1, r9
 800c810:	f858 0025 	ldr.w	r0, [r8, r5, lsl #2]
 800c814:	f7ff ffac 	bl	800c770 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800c818:	f848 0025 	str.w	r0, [r8, r5, lsl #2]
 800c81c:	e7ed      	b.n	800c7fa <_ZN8touchgfx16DynamicDataGraph9setScaleYEib+0x16>
 800c81e:	6367      	str	r7, [r4, #52]	; 0x34
 800c820:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

0800c824 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>:
 800c824:	b570      	push	{r4, r5, r6, lr}
 800c826:	6803      	ldr	r3, [r0, #0]
 800c828:	4604      	mov	r4, r0
 800c82a:	f8d3 3178 	ldr.w	r3, [r3, #376]	; 0x178
 800c82e:	460d      	mov	r5, r1
 800c830:	4798      	blx	r3
 800c832:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 800c836:	3301      	adds	r3, #1
 800c838:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
 800c83c:	6823      	ldr	r3, [r4, #0]
 800c83e:	4629      	mov	r1, r5
 800c840:	4620      	mov	r0, r4
 800c842:	f8d3 317c 	ldr.w	r3, [r3, #380]	; 0x17c
 800c846:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c84a:	4718      	bx	r3

0800c84c <_ZN8touchgfx16GraphElementLineD1Ev>:
 800c84c:	4770      	bx	lr

0800c84e <_ZN8touchgfx16GraphElementLineD0Ev>:
 800c84e:	b510      	push	{r4, lr}
 800c850:	2130      	movs	r1, #48	; 0x30
 800c852:	4604      	mov	r4, r0
 800c854:	f013 ff48 	bl	80206e8 <_ZdlPvj>
 800c858:	4620      	mov	r0, r4
 800c85a:	bd10      	pop	{r4, pc}

0800c85c <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800c85c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c85e:	4604      	mov	r4, r0
 800c860:	4608      	mov	r0, r1
 800c862:	460d      	mov	r5, r1
 800c864:	f7fe fad5 	bl	800ae12 <_ZNK8touchgfx4Rect7isEmptyEv>
 800c868:	b978      	cbnz	r0, 800c88a <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 800c86a:	4620      	mov	r0, r4
 800c86c:	f7fe fad1 	bl	800ae12 <_ZNK8touchgfx4Rect7isEmptyEv>
 800c870:	f9b5 6000 	ldrsh.w	r6, [r5]
 800c874:	b150      	cbz	r0, 800c88c <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 800c876:	8026      	strh	r6, [r4, #0]
 800c878:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800c87c:	8063      	strh	r3, [r4, #2]
 800c87e:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800c882:	80a3      	strh	r3, [r4, #4]
 800c884:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800c888:	80e3      	strh	r3, [r4, #6]
 800c88a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800c88c:	f9b4 1000 	ldrsh.w	r1, [r4]
 800c890:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800c894:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800c898:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 800c89c:	88ed      	ldrh	r5, [r5, #6]
 800c89e:	42b1      	cmp	r1, r6
 800c8a0:	460f      	mov	r7, r1
 800c8a2:	bfa8      	it	ge
 800c8a4:	4637      	movge	r7, r6
 800c8a6:	4293      	cmp	r3, r2
 800c8a8:	4618      	mov	r0, r3
 800c8aa:	4466      	add	r6, ip
 800c8ac:	bfa8      	it	ge
 800c8ae:	4610      	movge	r0, r2
 800c8b0:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800c8b4:	8027      	strh	r7, [r4, #0]
 800c8b6:	442a      	add	r2, r5
 800c8b8:	88e5      	ldrh	r5, [r4, #6]
 800c8ba:	8060      	strh	r0, [r4, #2]
 800c8bc:	4461      	add	r1, ip
 800c8be:	442b      	add	r3, r5
 800c8c0:	b236      	sxth	r6, r6
 800c8c2:	b209      	sxth	r1, r1
 800c8c4:	b212      	sxth	r2, r2
 800c8c6:	b21b      	sxth	r3, r3
 800c8c8:	428e      	cmp	r6, r1
 800c8ca:	bfac      	ite	ge
 800c8cc:	ebc7 0106 	rsbge	r1, r7, r6
 800c8d0:	ebc7 0101 	rsblt	r1, r7, r1
 800c8d4:	429a      	cmp	r2, r3
 800c8d6:	bfac      	ite	ge
 800c8d8:	ebc0 0202 	rsbge	r2, r0, r2
 800c8dc:	ebc0 0203 	rsblt	r2, r0, r3
 800c8e0:	80a1      	strh	r1, [r4, #4]
 800c8e2:	80e2      	strh	r2, [r4, #6]
 800c8e4:	e7d1      	b.n	800c88a <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>

0800c8e6 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>:
 800c8e6:	6800      	ldr	r0, [r0, #0]
 800c8e8:	2800      	cmp	r0, #0
 800c8ea:	bfb9      	ittee	lt
 800c8ec:	2320      	movlt	r3, #32
 800c8ee:	fb90 f0f3 	sdivlt	r0, r0, r3
 800c8f2:	301f      	addge	r0, #31
 800c8f4:	1140      	asrge	r0, r0, #5
 800c8f6:	4770      	bx	lr

0800c8f8 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE>:
 800c8f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c8fc:	6803      	ldr	r3, [r0, #0]
 800c8fe:	6945      	ldr	r5, [r0, #20]
 800c900:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800c902:	b093      	sub	sp, #76	; 0x4c
 800c904:	4604      	mov	r4, r0
 800c906:	460f      	mov	r7, r1
 800c908:	2d00      	cmp	r5, #0
 800c90a:	f000 81ad 	beq.w	800cc68 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x370>
 800c90e:	696d      	ldr	r5, [r5, #20]
 800c910:	4798      	blx	r3
 800c912:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800c916:	2b00      	cmp	r3, #0
 800c918:	d077      	beq.n	800ca0a <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800c91a:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 800c91e:	fb13 f000 	smulbb	r0, r3, r0
 800c922:	b283      	uxth	r3, r0
 800c924:	1c58      	adds	r0, r3, #1
 800c926:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 800c92a:	1200      	asrs	r0, r0, #8
 800c92c:	d06d      	beq.n	800ca0a <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800c92e:	b2c3      	uxtb	r3, r0
 800c930:	9308      	str	r3, [sp, #32]
 800c932:	6823      	ldr	r3, [r4, #0]
 800c934:	f10d 0840 	add.w	r8, sp, #64	; 0x40
 800c938:	462a      	mov	r2, r5
 800c93a:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800c93e:	4621      	mov	r1, r4
 800c940:	4640      	mov	r0, r8
 800c942:	4798      	blx	r3
 800c944:	e898 0003 	ldmia.w	r8, {r0, r1}
 800c948:	ae0e      	add	r6, sp, #56	; 0x38
 800c94a:	e886 0003 	stmia.w	r6, {r0, r1}
 800c94e:	4639      	mov	r1, r7
 800c950:	4630      	mov	r0, r6
 800c952:	f7fe fa1b 	bl	800ad8c <_ZN8touchgfx4RectaNERKS0_>
 800c956:	6823      	ldr	r3, [r4, #0]
 800c958:	4629      	mov	r1, r5
 800c95a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800c95e:	4620      	mov	r0, r4
 800c960:	4798      	blx	r3
 800c962:	6823      	ldr	r3, [r4, #0]
 800c964:	4607      	mov	r7, r0
 800c966:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800c96a:	4629      	mov	r1, r5
 800c96c:	4620      	mov	r0, r4
 800c96e:	4798      	blx	r3
 800c970:	4681      	mov	r9, r0
 800c972:	f894 0038 	ldrb.w	r0, [r4, #56]	; 0x38
 800c976:	0103      	lsls	r3, r0, #4
 800c978:	9309      	str	r3, [sp, #36]	; 0x24
 800c97a:	6823      	ldr	r3, [r4, #0]
 800c97c:	4629      	mov	r1, r5
 800c97e:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 800c982:	4620      	mov	r0, r4
 800c984:	4798      	blx	r3
 800c986:	b203      	sxth	r3, r0
 800c988:	9306      	str	r3, [sp, #24]
 800c98a:	6823      	ldr	r3, [r4, #0]
 800c98c:	4629      	mov	r1, r5
 800c98e:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 800c992:	4620      	mov	r0, r4
 800c994:	4798      	blx	r3
 800c996:	2f00      	cmp	r7, #0
 800c998:	b203      	sxth	r3, r0
 800c99a:	9307      	str	r3, [sp, #28]
 800c99c:	d138      	bne.n	800ca10 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x118>
 800c99e:	f1b9 0f00 	cmp.w	r9, #0
 800c9a2:	d132      	bne.n	800ca0a <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800c9a4:	6823      	ldr	r3, [r4, #0]
 800c9a6:	464a      	mov	r2, r9
 800c9a8:	4629      	mov	r1, r5
 800c9aa:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800c9ae:	4620      	mov	r0, r4
 800c9b0:	4798      	blx	r3
 800c9b2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c9b4:	1ac0      	subs	r0, r0, r3
 800c9b6:	9010      	str	r0, [sp, #64]	; 0x40
 800c9b8:	4640      	mov	r0, r8
 800c9ba:	f7ff fcbb 	bl	800c334 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c9be:	6823      	ldr	r3, [r4, #0]
 800c9c0:	4607      	mov	r7, r0
 800c9c2:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800c9c6:	4629      	mov	r1, r5
 800c9c8:	4620      	mov	r0, r4
 800c9ca:	4798      	blx	r3
 800c9cc:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800c9d0:	1a38      	subs	r0, r7, r0
 800c9d2:	fa0f f880 	sxth.w	r8, r0
 800c9d6:	eb13 0f08 	cmn.w	r3, r8
 800c9da:	d416      	bmi.n	800ca0a <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800c9dc:	6823      	ldr	r3, [r4, #0]
 800c9de:	4629      	mov	r1, r5
 800c9e0:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 800c9e4:	4620      	mov	r0, r4
 800c9e6:	4798      	blx	r3
 800c9e8:	4580      	cmp	r8, r0
 800c9ea:	da0e      	bge.n	800ca0a <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800c9ec:	9a08      	ldr	r2, [sp, #32]
 800c9ee:	6823      	ldr	r3, [r4, #0]
 800c9f0:	9202      	str	r2, [sp, #8]
 800c9f2:	b23f      	sxth	r7, r7
 800c9f4:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 800c9f8:	9201      	str	r2, [sp, #4]
 800c9fa:	9700      	str	r7, [sp, #0]
 800c9fc:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 800ca00:	4631      	mov	r1, r6
 800ca02:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800ca06:	4620      	mov	r0, r4
 800ca08:	47a8      	blx	r5
 800ca0a:	b013      	add	sp, #76	; 0x4c
 800ca0c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ca10:	ddfb      	ble.n	800ca0a <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800ca12:	6823      	ldr	r3, [r4, #0]
 800ca14:	4629      	mov	r1, r5
 800ca16:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800ca1a:	4620      	mov	r0, r4
 800ca1c:	4798      	blx	r3
 800ca1e:	6823      	ldr	r3, [r4, #0]
 800ca20:	4683      	mov	fp, r0
 800ca22:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 800ca26:	4629      	mov	r1, r5
 800ca28:	4620      	mov	r0, r4
 800ca2a:	4798      	blx	r3
 800ca2c:	eba0 030b 	sub.w	r3, r0, fp
 800ca30:	2b00      	cmp	r3, #0
 800ca32:	bfb8      	it	lt
 800ca34:	425b      	neglt	r3, r3
 800ca36:	fb93 f3f7 	sdiv	r3, r3, r7
 800ca3a:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800ca3e:	4680      	mov	r8, r0
 800ca40:	dce3      	bgt.n	800ca0a <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800ca42:	6823      	ldr	r3, [r4, #0]
 800ca44:	465a      	mov	r2, fp
 800ca46:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800ca4a:	4629      	mov	r1, r5
 800ca4c:	4620      	mov	r0, r4
 800ca4e:	4798      	blx	r3
 800ca50:	6823      	ldr	r3, [r4, #0]
 800ca52:	4606      	mov	r6, r0
 800ca54:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800ca58:	4642      	mov	r2, r8
 800ca5a:	4629      	mov	r1, r5
 800ca5c:	4620      	mov	r0, r4
 800ca5e:	4798      	blx	r3
 800ca60:	42b0      	cmp	r0, r6
 800ca62:	bfa2      	ittt	ge
 800ca64:	4643      	movge	r3, r8
 800ca66:	46d8      	movge	r8, fp
 800ca68:	469b      	movge	fp, r3
 800ca6a:	45d8      	cmp	r8, fp
 800ca6c:	bfac      	ite	ge
 800ca6e:	f04f 33ff 	movge.w	r3, #4294967295
 800ca72:	2301      	movlt	r3, #1
 800ca74:	fb98 f6f7 	sdiv	r6, r8, r7
 800ca78:	fb9b f2f7 	sdiv	r2, fp, r7
 800ca7c:	1af6      	subs	r6, r6, r3
 800ca7e:	441a      	add	r2, r3
 800ca80:	4296      	cmp	r6, r2
 800ca82:	bfac      	ite	ge
 800ca84:	f04f 3aff 	movge.w	sl, #4294967295
 800ca88:	f04f 0a01 	movlt.w	sl, #1
 800ca8c:	f1b9 0f00 	cmp.w	r9, #0
 800ca90:	d13e      	bne.n	800cb10 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x218>
 800ca92:	fb07 fb0a 	mul.w	fp, r7, sl
 800ca96:	eb0a 0802 	add.w	r8, sl, r2
 800ca9a:	4377      	muls	r7, r6
 800ca9c:	45b0      	cmp	r8, r6
 800ca9e:	d0b4      	beq.n	800ca0a <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800caa0:	6823      	ldr	r3, [r4, #0]
 800caa2:	463a      	mov	r2, r7
 800caa4:	4629      	mov	r1, r5
 800caa6:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800caaa:	4620      	mov	r0, r4
 800caac:	4798      	blx	r3
 800caae:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800cab0:	1ac0      	subs	r0, r0, r3
 800cab2:	9010      	str	r0, [sp, #64]	; 0x40
 800cab4:	a810      	add	r0, sp, #64	; 0x40
 800cab6:	f7ff fc3d 	bl	800c334 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800caba:	6823      	ldr	r3, [r4, #0]
 800cabc:	4681      	mov	r9, r0
 800cabe:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800cac2:	4629      	mov	r1, r5
 800cac4:	4620      	mov	r0, r4
 800cac6:	4798      	blx	r3
 800cac8:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 800cacc:	eba9 0000 	sub.w	r0, r9, r0
 800cad0:	b203      	sxth	r3, r0
 800cad2:	42da      	cmn	r2, r3
 800cad4:	9304      	str	r3, [sp, #16]
 800cad6:	d418      	bmi.n	800cb0a <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x212>
 800cad8:	6822      	ldr	r2, [r4, #0]
 800cada:	4629      	mov	r1, r5
 800cadc:	f8d2 20a8 	ldr.w	r2, [r2, #168]	; 0xa8
 800cae0:	4620      	mov	r0, r4
 800cae2:	4790      	blx	r2
 800cae4:	9b04      	ldr	r3, [sp, #16]
 800cae6:	4283      	cmp	r3, r0
 800cae8:	da0f      	bge.n	800cb0a <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x212>
 800caea:	9b08      	ldr	r3, [sp, #32]
 800caec:	9302      	str	r3, [sp, #8]
 800caee:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800caf2:	6822      	ldr	r2, [r4, #0]
 800caf4:	9301      	str	r3, [sp, #4]
 800caf6:	fa0f f389 	sxth.w	r3, r9
 800cafa:	9300      	str	r3, [sp, #0]
 800cafc:	f8d2 9088 	ldr.w	r9, [r2, #136]	; 0x88
 800cb00:	a90e      	add	r1, sp, #56	; 0x38
 800cb02:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800cb06:	4620      	mov	r0, r4
 800cb08:	47c8      	blx	r9
 800cb0a:	4456      	add	r6, sl
 800cb0c:	445f      	add	r7, fp
 800cb0e:	e7c5      	b.n	800ca9c <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x1a4>
 800cb10:	fb98 f8f9 	sdiv	r8, r8, r9
 800cb14:	eba8 0203 	sub.w	r2, r8, r3
 800cb18:	fb9b f8f9 	sdiv	r8, fp, r9
 800cb1c:	4498      	add	r8, r3
 800cb1e:	4542      	cmp	r2, r8
 800cb20:	bfac      	ite	ge
 800cb22:	f04f 33ff 	movge.w	r3, #4294967295
 800cb26:	2301      	movlt	r3, #1
 800cb28:	930a      	str	r3, [sp, #40]	; 0x28
 800cb2a:	6823      	ldr	r3, [r4, #0]
 800cb2c:	9204      	str	r2, [sp, #16]
 800cb2e:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800cb32:	fb02 f209 	mul.w	r2, r2, r9
 800cb36:	4629      	mov	r1, r5
 800cb38:	4620      	mov	r0, r4
 800cb3a:	4798      	blx	r3
 800cb3c:	f10d 0b48 	add.w	fp, sp, #72	; 0x48
 800cb40:	f84b 0d08 	str.w	r0, [fp, #-8]!
 800cb44:	4658      	mov	r0, fp
 800cb46:	f7ff fbf5 	bl	800c334 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800cb4a:	b203      	sxth	r3, r0
 800cb4c:	9305      	str	r3, [sp, #20]
 800cb4e:	6823      	ldr	r3, [r4, #0]
 800cb50:	fb06 f207 	mul.w	r2, r6, r7
 800cb54:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800cb58:	4629      	mov	r1, r5
 800cb5a:	4620      	mov	r0, r4
 800cb5c:	4798      	blx	r3
 800cb5e:	9010      	str	r0, [sp, #64]	; 0x40
 800cb60:	4658      	mov	r0, fp
 800cb62:	f7ff fbe7 	bl	800c334 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800cb66:	fb07 f20a 	mul.w	r2, r7, sl
 800cb6a:	920b      	str	r2, [sp, #44]	; 0x2c
 800cb6c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800cb6e:	4442      	add	r2, r8
 800cb70:	b203      	sxth	r3, r0
 800cb72:	920c      	str	r2, [sp, #48]	; 0x30
 800cb74:	9a05      	ldr	r2, [sp, #20]
 800cb76:	429a      	cmp	r2, r3
 800cb78:	dc16      	bgt.n	800cba8 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x2b0>
 800cb7a:	eb06 080a 	add.w	r8, r6, sl
 800cb7e:	fb07 f808 	mul.w	r8, r7, r8
 800cb82:	9a05      	ldr	r2, [sp, #20]
 800cb84:	429a      	cmp	r2, r3
 800cb86:	db54      	blt.n	800cc32 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x33a>
 800cb88:	6823      	ldr	r3, [r4, #0]
 800cb8a:	4642      	mov	r2, r8
 800cb8c:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800cb90:	4629      	mov	r1, r5
 800cb92:	4620      	mov	r0, r4
 800cb94:	4798      	blx	r3
 800cb96:	9010      	str	r0, [sp, #64]	; 0x40
 800cb98:	4658      	mov	r0, fp
 800cb9a:	f7ff fbcb 	bl	800c334 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800cb9e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800cba0:	4456      	add	r6, sl
 800cba2:	b203      	sxth	r3, r0
 800cba4:	4490      	add	r8, r2
 800cba6:	e7ec      	b.n	800cb82 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x28a>
 800cba8:	6823      	ldr	r3, [r4, #0]
 800cbaa:	fb07 f206 	mul.w	r2, r7, r6
 800cbae:	4629      	mov	r1, r5
 800cbb0:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800cbb4:	4620      	mov	r0, r4
 800cbb6:	4798      	blx	r3
 800cbb8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800cbba:	1ac0      	subs	r0, r0, r3
 800cbbc:	9010      	str	r0, [sp, #64]	; 0x40
 800cbbe:	4658      	mov	r0, fp
 800cbc0:	f7ff fbb8 	bl	800c334 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800cbc4:	6823      	ldr	r3, [r4, #0]
 800cbc6:	4680      	mov	r8, r0
 800cbc8:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800cbcc:	4629      	mov	r1, r5
 800cbce:	4620      	mov	r0, r4
 800cbd0:	4798      	blx	r3
 800cbd2:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 800cbd6:	eba8 0000 	sub.w	r0, r8, r0
 800cbda:	b203      	sxth	r3, r0
 800cbdc:	42da      	cmn	r2, r3
 800cbde:	930d      	str	r3, [sp, #52]	; 0x34
 800cbe0:	d418      	bmi.n	800cc14 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x31c>
 800cbe2:	6822      	ldr	r2, [r4, #0]
 800cbe4:	4629      	mov	r1, r5
 800cbe6:	f8d2 20a8 	ldr.w	r2, [r2, #168]	; 0xa8
 800cbea:	4620      	mov	r0, r4
 800cbec:	4790      	blx	r2
 800cbee:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800cbf0:	4283      	cmp	r3, r0
 800cbf2:	da0f      	bge.n	800cc14 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x31c>
 800cbf4:	9b08      	ldr	r3, [sp, #32]
 800cbf6:	9302      	str	r3, [sp, #8]
 800cbf8:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800cbfc:	6822      	ldr	r2, [r4, #0]
 800cbfe:	9301      	str	r3, [sp, #4]
 800cc00:	fa0f f388 	sxth.w	r3, r8
 800cc04:	9300      	str	r3, [sp, #0]
 800cc06:	f8d2 8088 	ldr.w	r8, [r2, #136]	; 0x88
 800cc0a:	a90e      	add	r1, sp, #56	; 0x38
 800cc0c:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800cc10:	4620      	mov	r0, r4
 800cc12:	47c0      	blx	r8
 800cc14:	6823      	ldr	r3, [r4, #0]
 800cc16:	4456      	add	r6, sl
 800cc18:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800cc1c:	fb06 f207 	mul.w	r2, r6, r7
 800cc20:	4629      	mov	r1, r5
 800cc22:	4620      	mov	r0, r4
 800cc24:	4798      	blx	r3
 800cc26:	9010      	str	r0, [sp, #64]	; 0x40
 800cc28:	4658      	mov	r0, fp
 800cc2a:	f7ff fb83 	bl	800c334 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800cc2e:	b203      	sxth	r3, r0
 800cc30:	e7a0      	b.n	800cb74 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x27c>
 800cc32:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800cc34:	930d      	str	r3, [sp, #52]	; 0x34
 800cc36:	9b04      	ldr	r3, [sp, #16]
 800cc38:	4413      	add	r3, r2
 800cc3a:	9304      	str	r3, [sp, #16]
 800cc3c:	9a04      	ldr	r2, [sp, #16]
 800cc3e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800cc40:	4293      	cmp	r3, r2
 800cc42:	f43f aee2 	beq.w	800ca0a <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800cc46:	9b04      	ldr	r3, [sp, #16]
 800cc48:	6822      	ldr	r2, [r4, #0]
 800cc4a:	4629      	mov	r1, r5
 800cc4c:	f8d2 80ac 	ldr.w	r8, [r2, #172]	; 0xac
 800cc50:	4620      	mov	r0, r4
 800cc52:	fb03 f209 	mul.w	r2, r3, r9
 800cc56:	47c0      	blx	r8
 800cc58:	9010      	str	r0, [sp, #64]	; 0x40
 800cc5a:	4658      	mov	r0, fp
 800cc5c:	f7ff fb6a 	bl	800c334 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800cc60:	b203      	sxth	r3, r0
 800cc62:	9305      	str	r3, [sp, #20]
 800cc64:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800cc66:	e785      	b.n	800cb74 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x27c>
 800cc68:	4798      	blx	r3
 800cc6a:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 800cc6e:	deff      	udf	#255	; 0xff

0800cc70 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>:
 800cc70:	b510      	push	{r4, lr}
 800cc72:	ea80 73e0 	eor.w	r3, r0, r0, asr #31
 800cc76:	ea81 74e1 	eor.w	r4, r1, r1, asr #31
 800cc7a:	eba4 74e1 	sub.w	r4, r4, r1, asr #31
 800cc7e:	eba3 73e0 	sub.w	r3, r3, r0, asr #31
 800cc82:	13a4      	asrs	r4, r4, #14
 800cc84:	139b      	asrs	r3, r3, #14
 800cc86:	429c      	cmp	r4, r3
 800cc88:	bfb8      	it	lt
 800cc8a:	461c      	movlt	r4, r3
 800cc8c:	2c01      	cmp	r4, #1
 800cc8e:	dd07      	ble.n	800cca0 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x30>
 800cc90:	fb91 f1f4 	sdiv	r1, r1, r4
 800cc94:	fb90 f0f4 	sdiv	r0, r0, r4
 800cc98:	f7ff ffea 	bl	800cc70 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 800cc9c:	4360      	muls	r0, r4
 800cc9e:	bd10      	pop	{r4, pc}
 800cca0:	4340      	muls	r0, r0
 800cca2:	fb01 0101 	mla	r1, r1, r1, r0
 800cca6:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
 800ccaa:	bfb4      	ite	lt
 800ccac:	f44f 4380 	movlt.w	r3, #16384	; 0x4000
 800ccb0:	f04f 4380 	movge.w	r3, #1073741824	; 0x40000000
 800ccb4:	2000      	movs	r0, #0
 800ccb6:	18c2      	adds	r2, r0, r3
 800ccb8:	428a      	cmp	r2, r1
 800ccba:	bf9c      	itt	ls
 800ccbc:	1898      	addls	r0, r3, r2
 800ccbe:	1a89      	subls	r1, r1, r2
 800ccc0:	089b      	lsrs	r3, r3, #2
 800ccc2:	ea4f 0050 	mov.w	r0, r0, lsr #1
 800ccc6:	d1f6      	bne.n	800ccb6 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x46>
 800ccc8:	e7e9      	b.n	800cc9e <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x2e>

0800ccca <_ZNK8touchgfx20AbstractGraphElement21rectFromQ5CoordinatesENS_7CWRUtil2Q5ES2_S2_S2_>:
 800ccca:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cccc:	9906      	ldr	r1, [sp, #24]
 800ccce:	4291      	cmp	r1, r2
 800ccd0:	bfbc      	itt	lt
 800ccd2:	9206      	strlt	r2, [sp, #24]
 800ccd4:	460a      	movlt	r2, r1
 800ccd6:	9907      	ldr	r1, [sp, #28]
 800ccd8:	428b      	cmp	r3, r1
 800ccda:	4606      	mov	r6, r0
 800ccdc:	461c      	mov	r4, r3
 800ccde:	f04f 0020 	mov.w	r0, #32
 800cce2:	bfc8      	it	gt
 800cce4:	460c      	movgt	r4, r1
 800cce6:	fb92 f5f0 	sdiv	r5, r2, r0
 800ccea:	fb94 f4f0 	sdiv	r4, r4, r0
 800ccee:	a806      	add	r0, sp, #24
 800ccf0:	bfc8      	it	gt
 800ccf2:	9307      	strgt	r3, [sp, #28]
 800ccf4:	f7ff fdf7 	bl	800c8e6 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 800ccf8:	4607      	mov	r7, r0
 800ccfa:	a807      	add	r0, sp, #28
 800ccfc:	f7ff fdf3 	bl	800c8e6 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 800cd00:	1b7a      	subs	r2, r7, r5
 800cd02:	1b00      	subs	r0, r0, r4
 800cd04:	80f0      	strh	r0, [r6, #6]
 800cd06:	8035      	strh	r5, [r6, #0]
 800cd08:	8074      	strh	r4, [r6, #2]
 800cd0a:	80b2      	strh	r2, [r6, #4]
 800cd0c:	4630      	mov	r0, r6
 800cd0e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800cd10 <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>:
 800cd10:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800cd12:	9c08      	ldr	r4, [sp, #32]
 800cd14:	2602      	movs	r6, #2
 800cd16:	3401      	adds	r4, #1
 800cd18:	fb94 f4f6 	sdiv	r4, r4, r6
 800cd1c:	18a6      	adds	r6, r4, r2
 800cd1e:	191f      	adds	r7, r3, r4
 800cd20:	e9cd 6700 	strd	r6, r7, [sp]
 800cd24:	1b1b      	subs	r3, r3, r4
 800cd26:	1b12      	subs	r2, r2, r4
 800cd28:	4605      	mov	r5, r0
 800cd2a:	f7ff ffce 	bl	800ccca <_ZNK8touchgfx20AbstractGraphElement21rectFromQ5CoordinatesENS_7CWRUtil2Q5ES2_S2_S2_>
 800cd2e:	4628      	mov	r0, r5
 800cd30:	b003      	add	sp, #12
 800cd32:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800cd34 <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs>:
 800cd34:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800cd38:	6943      	ldr	r3, [r0, #20]
 800cd3a:	b087      	sub	sp, #28
 800cd3c:	4606      	mov	r6, r0
 800cd3e:	460d      	mov	r5, r1
 800cd40:	2b00      	cmp	r3, #0
 800cd42:	d072      	beq.n	800ce2a <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs+0xf6>
 800cd44:	695c      	ldr	r4, [r3, #20]
 800cd46:	f890 702c 	ldrb.w	r7, [r0, #44]	; 0x2c
 800cd4a:	6823      	ldr	r3, [r4, #0]
 800cd4c:	4620      	mov	r0, r4
 800cd4e:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800cd52:	4798      	blx	r3
 800cd54:	6823      	ldr	r3, [r4, #0]
 800cd56:	4680      	mov	r8, r0
 800cd58:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800cd5c:	4629      	mov	r1, r5
 800cd5e:	4620      	mov	r0, r4
 800cd60:	4798      	blx	r3
 800cd62:	017f      	lsls	r7, r7, #5
 800cd64:	4603      	mov	r3, r0
 800cd66:	9700      	str	r7, [sp, #0]
 800cd68:	4642      	mov	r2, r8
 800cd6a:	4631      	mov	r1, r6
 800cd6c:	a802      	add	r0, sp, #8
 800cd6e:	f7ff ffcf 	bl	800cd10 <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>
 800cd72:	2d00      	cmp	r5, #0
 800cd74:	dd1b      	ble.n	800cdae <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs+0x7a>
 800cd76:	6823      	ldr	r3, [r4, #0]
 800cd78:	f105 38ff 	add.w	r8, r5, #4294967295
 800cd7c:	fa0f f888 	sxth.w	r8, r8
 800cd80:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800cd84:	4641      	mov	r1, r8
 800cd86:	4620      	mov	r0, r4
 800cd88:	4798      	blx	r3
 800cd8a:	6823      	ldr	r3, [r4, #0]
 800cd8c:	4681      	mov	r9, r0
 800cd8e:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800cd92:	4641      	mov	r1, r8
 800cd94:	4620      	mov	r0, r4
 800cd96:	4798      	blx	r3
 800cd98:	4631      	mov	r1, r6
 800cd9a:	4603      	mov	r3, r0
 800cd9c:	9700      	str	r7, [sp, #0]
 800cd9e:	a804      	add	r0, sp, #16
 800cda0:	464a      	mov	r2, r9
 800cda2:	f7ff ffb5 	bl	800cd10 <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>
 800cda6:	a904      	add	r1, sp, #16
 800cda8:	a802      	add	r0, sp, #8
 800cdaa:	f7ff fd57 	bl	800c85c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800cdae:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800cdb2:	3b01      	subs	r3, #1
 800cdb4:	429d      	cmp	r5, r3
 800cdb6:	da19      	bge.n	800cdec <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs+0xb8>
 800cdb8:	6823      	ldr	r3, [r4, #0]
 800cdba:	3501      	adds	r5, #1
 800cdbc:	b22d      	sxth	r5, r5
 800cdbe:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800cdc2:	4629      	mov	r1, r5
 800cdc4:	4620      	mov	r0, r4
 800cdc6:	4798      	blx	r3
 800cdc8:	6823      	ldr	r3, [r4, #0]
 800cdca:	4680      	mov	r8, r0
 800cdcc:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800cdd0:	4629      	mov	r1, r5
 800cdd2:	4620      	mov	r0, r4
 800cdd4:	4798      	blx	r3
 800cdd6:	4631      	mov	r1, r6
 800cdd8:	4603      	mov	r3, r0
 800cdda:	9700      	str	r7, [sp, #0]
 800cddc:	a804      	add	r0, sp, #16
 800cdde:	4642      	mov	r2, r8
 800cde0:	f7ff ff96 	bl	800cd10 <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>
 800cde4:	a904      	add	r1, sp, #16
 800cde6:	a802      	add	r0, sp, #8
 800cde8:	f7ff fd38 	bl	800c85c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800cdec:	f9b4 1114 	ldrsh.w	r1, [r4, #276]	; 0x114
 800cdf0:	f8b4 311a 	ldrh.w	r3, [r4, #282]	; 0x11a
 800cdf4:	f9b4 0040 	ldrsh.w	r0, [r4, #64]	; 0x40
 800cdf8:	18ca      	adds	r2, r1, r3
 800cdfa:	f8b4 3042 	ldrh.w	r3, [r4, #66]	; 0x42
 800cdfe:	f8ad 1012 	strh.w	r1, [sp, #18]
 800ce02:	1a9b      	subs	r3, r3, r2
 800ce04:	f8ad 0014 	strh.w	r0, [sp, #20]
 800ce08:	2200      	movs	r2, #0
 800ce0a:	a904      	add	r1, sp, #16
 800ce0c:	a802      	add	r0, sp, #8
 800ce0e:	f8ad 2010 	strh.w	r2, [sp, #16]
 800ce12:	f8ad 3016 	strh.w	r3, [sp, #22]
 800ce16:	f7fd ffb9 	bl	800ad8c <_ZN8touchgfx4RectaNERKS0_>
 800ce1a:	6833      	ldr	r3, [r6, #0]
 800ce1c:	a902      	add	r1, sp, #8
 800ce1e:	691b      	ldr	r3, [r3, #16]
 800ce20:	4630      	mov	r0, r6
 800ce22:	4798      	blx	r3
 800ce24:	b007      	add	sp, #28
 800ce26:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ce2a:	681b      	ldr	r3, [r3, #0]
 800ce2c:	deff      	udf	#255	; 0xff

0800ce2e <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE>:
 800ce2e:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 800ce32:	2b00      	cmp	r3, #0
 800ce34:	da05      	bge.n	800ce42 <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE+0x14>
 800ce36:	880a      	ldrh	r2, [r1, #0]
 800ce38:	b29b      	uxth	r3, r3
 800ce3a:	441a      	add	r2, r3
 800ce3c:	425b      	negs	r3, r3
 800ce3e:	800a      	strh	r2, [r1, #0]
 800ce40:	808b      	strh	r3, [r1, #4]
 800ce42:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800ce46:	2b00      	cmp	r3, #0
 800ce48:	da05      	bge.n	800ce56 <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE+0x28>
 800ce4a:	884a      	ldrh	r2, [r1, #2]
 800ce4c:	b29b      	uxth	r3, r3
 800ce4e:	441a      	add	r2, r3
 800ce50:	425b      	negs	r3, r3
 800ce52:	804a      	strh	r2, [r1, #2]
 800ce54:	80cb      	strh	r3, [r1, #6]
 800ce56:	4770      	bx	lr

0800ce58 <_ZNK8touchgfx20GraphElementGridBase8drawLineERKNS_4RectEssssh>:
 800ce58:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800ce5a:	4604      	mov	r4, r0
 800ce5c:	460d      	mov	r5, r1
 800ce5e:	6801      	ldr	r1, [r0, #0]
 800ce60:	f9bd 0024 	ldrsh.w	r0, [sp, #36]	; 0x24
 800ce64:	9001      	str	r0, [sp, #4]
 800ce66:	f9bd 0020 	ldrsh.w	r0, [sp, #32]
 800ce6a:	9000      	str	r0, [sp, #0]
 800ce6c:	f8d1 6090 	ldr.w	r6, [r1, #144]	; 0x90
 800ce70:	a802      	add	r0, sp, #8
 800ce72:	4621      	mov	r1, r4
 800ce74:	47b0      	blx	r6
 800ce76:	a902      	add	r1, sp, #8
 800ce78:	4620      	mov	r0, r4
 800ce7a:	f7ff ffd8 	bl	800ce2e <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE>
 800ce7e:	a802      	add	r0, sp, #8
 800ce80:	4629      	mov	r1, r5
 800ce82:	f7fd ff83 	bl	800ad8c <_ZN8touchgfx4RectaNERKS0_>
 800ce86:	a802      	add	r0, sp, #8
 800ce88:	f7fd ffc3 	bl	800ae12 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ce8c:	b968      	cbnz	r0, 800ceaa <_ZNK8touchgfx20GraphElementGridBase8drawLineERKNS_4RectEssssh+0x52>
 800ce8e:	6823      	ldr	r3, [r4, #0]
 800ce90:	a902      	add	r1, sp, #8
 800ce92:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ce94:	4620      	mov	r0, r4
 800ce96:	4798      	blx	r3
 800ce98:	f7f5 fc3a 	bl	8002710 <_ZN8touchgfx3HAL3lcdEv>
 800ce9c:	6803      	ldr	r3, [r0, #0]
 800ce9e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800cea0:	6a1d      	ldr	r5, [r3, #32]
 800cea2:	f89d 3028 	ldrb.w	r3, [sp, #40]	; 0x28
 800cea6:	a902      	add	r1, sp, #8
 800cea8:	47a8      	blx	r5
 800ceaa:	b004      	add	sp, #16
 800ceac:	bd70      	pop	{r4, r5, r6, pc}

0800ceae <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss>:
 800ceae:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ceb2:	b08b      	sub	sp, #44	; 0x2c
 800ceb4:	461e      	mov	r6, r3
 800ceb6:	f9bd 3050 	ldrsh.w	r3, [sp, #80]	; 0x50
 800ceba:	9304      	str	r3, [sp, #16]
 800cebc:	429e      	cmp	r6, r3
 800cebe:	4689      	mov	r9, r1
 800cec0:	4615      	mov	r5, r2
 800cec2:	d072      	beq.n	800cfaa <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0xfc>
 800cec4:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800cec8:	015b      	lsls	r3, r3, #5
 800ceca:	9303      	str	r3, [sp, #12]
 800cecc:	6813      	ldr	r3, [r2, #0]
 800cece:	4610      	mov	r0, r2
 800ced0:	4631      	mov	r1, r6
 800ced2:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800ced6:	4798      	blx	r3
 800ced8:	ab0a      	add	r3, sp, #40	; 0x28
 800ceda:	4634      	mov	r4, r6
 800cedc:	f843 0d10 	str.w	r0, [r3, #-16]!
 800cee0:	4618      	mov	r0, r3
 800cee2:	f7ff fa27 	bl	800c334 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800cee6:	682b      	ldr	r3, [r5, #0]
 800cee8:	4631      	mov	r1, r6
 800ceea:	0147      	lsls	r7, r0, #5
 800ceec:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800cef0:	4628      	mov	r0, r5
 800cef2:	4798      	blx	r3
 800cef4:	ab0a      	add	r3, sp, #40	; 0x28
 800cef6:	f843 0d0c 	str.w	r0, [r3, #-12]!
 800cefa:	4618      	mov	r0, r3
 800cefc:	f7ff fa1a 	bl	800c334 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800cf00:	ea4f 1840 	mov.w	r8, r0, lsl #5
 800cf04:	4642      	mov	r2, r8
 800cf06:	4639      	mov	r1, r7
 800cf08:	4648      	mov	r0, r9
 800cf0a:	f013 fb9b 	bl	8020644 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 800cf0e:	2301      	movs	r3, #1
 800cf10:	9300      	str	r3, [sp, #0]
 800cf12:	9b00      	ldr	r3, [sp, #0]
 800cf14:	441c      	add	r4, r3
 800cf16:	682b      	ldr	r3, [r5, #0]
 800cf18:	b224      	sxth	r4, r4
 800cf1a:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800cf1e:	4621      	mov	r1, r4
 800cf20:	4628      	mov	r0, r5
 800cf22:	4798      	blx	r3
 800cf24:	9008      	str	r0, [sp, #32]
 800cf26:	a808      	add	r0, sp, #32
 800cf28:	f7ff fa04 	bl	800c334 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800cf2c:	0143      	lsls	r3, r0, #5
 800cf2e:	9301      	str	r3, [sp, #4]
 800cf30:	682b      	ldr	r3, [r5, #0]
 800cf32:	4621      	mov	r1, r4
 800cf34:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800cf38:	4628      	mov	r0, r5
 800cf3a:	4798      	blx	r3
 800cf3c:	9009      	str	r0, [sp, #36]	; 0x24
 800cf3e:	a809      	add	r0, sp, #36	; 0x24
 800cf40:	f7ff f9f8 	bl	800c334 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800cf44:	0143      	lsls	r3, r0, #5
 800cf46:	9302      	str	r3, [sp, #8]
 800cf48:	9b01      	ldr	r3, [sp, #4]
 800cf4a:	eba3 0b07 	sub.w	fp, r3, r7
 800cf4e:	9b02      	ldr	r3, [sp, #8]
 800cf50:	eba3 0a08 	sub.w	sl, r3, r8
 800cf54:	4651      	mov	r1, sl
 800cf56:	4658      	mov	r0, fp
 800cf58:	f7ff fe8a 	bl	800cc70 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 800cf5c:	b318      	cbz	r0, 800cfa6 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0xf8>
 800cf5e:	4602      	mov	r2, r0
 800cf60:	4651      	mov	r1, sl
 800cf62:	9005      	str	r0, [sp, #20]
 800cf64:	9803      	ldr	r0, [sp, #12]
 800cf66:	f005 f9fb 	bl	8012360 <_ZN8touchgfx6muldivElll>
 800cf6a:	2302      	movs	r3, #2
 800cf6c:	fb90 faf3 	sdiv	sl, r0, r3
 800cf70:	9b05      	ldr	r3, [sp, #20]
 800cf72:	9803      	ldr	r0, [sp, #12]
 800cf74:	461a      	mov	r2, r3
 800cf76:	4659      	mov	r1, fp
 800cf78:	f005 f9f2 	bl	8012360 <_ZN8touchgfx6muldivElll>
 800cf7c:	2302      	movs	r3, #2
 800cf7e:	eba7 010a 	sub.w	r1, r7, sl
 800cf82:	fb90 fbf3 	sdiv	fp, r0, r3
 800cf86:	4648      	mov	r0, r9
 800cf88:	eb0b 0208 	add.w	r2, fp, r8
 800cf8c:	f013 fa30 	bl	80203f0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800cf90:	9b02      	ldr	r3, [sp, #8]
 800cf92:	eb03 020b 	add.w	r2, r3, fp
 800cf96:	9b01      	ldr	r3, [sp, #4]
 800cf98:	4648      	mov	r0, r9
 800cf9a:	eba3 010a 	sub.w	r1, r3, sl
 800cf9e:	f013 fa27 	bl	80203f0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800cfa2:	e9dd 7801 	ldrd	r7, r8, [sp, #4]
 800cfa6:	42a6      	cmp	r6, r4
 800cfa8:	db02      	blt.n	800cfb0 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0x102>
 800cfaa:	b00b      	add	sp, #44	; 0x2c
 800cfac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cfb0:	9b00      	ldr	r3, [sp, #0]
 800cfb2:	9a04      	ldr	r2, [sp, #16]
 800cfb4:	42a2      	cmp	r2, r4
 800cfb6:	bf08      	it	eq
 800cfb8:	f04f 33ff 	moveq.w	r3, #4294967295
 800cfbc:	e7a8      	b.n	800cf10 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0x62>
	...

0800cfc0 <_ZN8touchgfx6CanvasD1Ev>:
 800cfc0:	b510      	push	{r4, lr}
 800cfc2:	4b04      	ldr	r3, [pc, #16]	; (800cfd4 <_ZN8touchgfx6CanvasD1Ev+0x14>)
 800cfc4:	4604      	mov	r4, r0
 800cfc6:	f840 3b20 	str.w	r3, [r0], #32
 800cfca:	f001 fd23 	bl	800ea14 <_ZN8touchgfx7OutlineD1Ev>
 800cfce:	4620      	mov	r0, r4
 800cfd0:	bd10      	pop	{r4, pc}
 800cfd2:	bf00      	nop
 800cfd4:	08023bd4 	.word	0x08023bd4

0800cfd8 <_ZN8touchgfx6CanvasD0Ev>:
 800cfd8:	b510      	push	{r4, lr}
 800cfda:	4604      	mov	r4, r0
 800cfdc:	f7ff fff0 	bl	800cfc0 <_ZN8touchgfx6CanvasD1Ev>
 800cfe0:	4620      	mov	r0, r4
 800cfe2:	2170      	movs	r1, #112	; 0x70
 800cfe4:	f013 fb80 	bl	80206e8 <_ZdlPvj>
 800cfe8:	4620      	mov	r0, r4
 800cfea:	bd10      	pop	{r4, pc}

0800cfec <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE>:
 800cfec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cff0:	6943      	ldr	r3, [r0, #20]
 800cff2:	b0a2      	sub	sp, #136	; 0x88
 800cff4:	4606      	mov	r6, r0
 800cff6:	460f      	mov	r7, r1
 800cff8:	2b00      	cmp	r3, #0
 800cffa:	d06a      	beq.n	800d0d2 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xe6>
 800cffc:	695c      	ldr	r4, [r3, #20]
 800cffe:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800d002:	2b01      	cmp	r3, #1
 800d004:	dc04      	bgt.n	800d010 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0x24>
 800d006:	2401      	movs	r4, #1
 800d008:	4620      	mov	r0, r4
 800d00a:	b022      	add	sp, #136	; 0x88
 800d00c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d010:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800d014:	ad22      	add	r5, sp, #136	; 0x88
 800d016:	011b      	lsls	r3, r3, #4
 800d018:	f845 3d70 	str.w	r3, [r5, #-112]!
 800d01c:	4628      	mov	r0, r5
 800d01e:	f7ff fc62 	bl	800c8e6 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 800d022:	8839      	ldrh	r1, [r7, #0]
 800d024:	88ba      	ldrh	r2, [r7, #4]
 800d026:	6823      	ldr	r3, [r4, #0]
 800d028:	b280      	uxth	r0, r0
 800d02a:	440a      	add	r2, r1
 800d02c:	4402      	add	r2, r0
 800d02e:	1a09      	subs	r1, r1, r0
 800d030:	f10d 000e 	add.w	r0, sp, #14
 800d034:	9000      	str	r0, [sp, #0]
 800d036:	f8d3 8124 	ldr.w	r8, [r3, #292]	; 0x124
 800d03a:	b212      	sxth	r2, r2
 800d03c:	ab03      	add	r3, sp, #12
 800d03e:	b209      	sxth	r1, r1
 800d040:	4620      	mov	r0, r4
 800d042:	47c0      	blx	r8
 800d044:	2800      	cmp	r0, #0
 800d046:	d0de      	beq.n	800d006 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0x1a>
 800d048:	f9b4 1114 	ldrsh.w	r1, [r4, #276]	; 0x114
 800d04c:	f8b4 311a 	ldrh.w	r3, [r4, #282]	; 0x11a
 800d050:	f9b4 0040 	ldrsh.w	r0, [r4, #64]	; 0x40
 800d054:	f8ad 1012 	strh.w	r1, [sp, #18]
 800d058:	18ca      	adds	r2, r1, r3
 800d05a:	f8b4 3042 	ldrh.w	r3, [r4, #66]	; 0x42
 800d05e:	f8ad 0014 	strh.w	r0, [sp, #20]
 800d062:	1a9b      	subs	r3, r3, r2
 800d064:	4639      	mov	r1, r7
 800d066:	2200      	movs	r2, #0
 800d068:	a804      	add	r0, sp, #16
 800d06a:	f8ad 3016 	strh.w	r3, [sp, #22]
 800d06e:	f8ad 2010 	strh.w	r2, [sp, #16]
 800d072:	f7fd fe8b 	bl	800ad8c <_ZN8touchgfx4RectaNERKS0_>
 800d076:	aa04      	add	r2, sp, #16
 800d078:	4631      	mov	r1, r6
 800d07a:	4628      	mov	r0, r5
 800d07c:	f013 f90a 	bl	8020294 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 800d080:	f9b4 7120 	ldrsh.w	r7, [r4, #288]	; 0x120
 800d084:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800d088:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
 800d08c:	2f00      	cmp	r7, #0
 800d08e:	dd03      	ble.n	800d098 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xac>
 800d090:	42bb      	cmp	r3, r7
 800d092:	da01      	bge.n	800d098 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xac>
 800d094:	42ba      	cmp	r2, r7
 800d096:	da0f      	bge.n	800d0b8 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xcc>
 800d098:	9200      	str	r2, [sp, #0]
 800d09a:	4622      	mov	r2, r4
 800d09c:	4629      	mov	r1, r5
 800d09e:	4630      	mov	r0, r6
 800d0a0:	f7ff ff05 	bl	800ceae <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss>
 800d0a4:	f894 102c 	ldrb.w	r1, [r4, #44]	; 0x2c
 800d0a8:	4628      	mov	r0, r5
 800d0aa:	f013 fa1d 	bl	80204e8 <_ZN8touchgfx6Canvas6renderEh>
 800d0ae:	4604      	mov	r4, r0
 800d0b0:	4628      	mov	r0, r5
 800d0b2:	f7ff ff85 	bl	800cfc0 <_ZN8touchgfx6CanvasD1Ev>
 800d0b6:	e7a7      	b.n	800d008 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0x1c>
 800d0b8:	1e7a      	subs	r2, r7, #1
 800d0ba:	b212      	sxth	r2, r2
 800d0bc:	9200      	str	r2, [sp, #0]
 800d0be:	4629      	mov	r1, r5
 800d0c0:	4622      	mov	r2, r4
 800d0c2:	4630      	mov	r0, r6
 800d0c4:	f7ff fef3 	bl	800ceae <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss>
 800d0c8:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800d0cc:	9300      	str	r3, [sp, #0]
 800d0ce:	463b      	mov	r3, r7
 800d0d0:	e7e3      	b.n	800d09a <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xae>
 800d0d2:	f8b3 311e 	ldrh.w	r3, [r3, #286]	; 0x11e
 800d0d6:	deff      	udf	#255	; 0xff

0800d0d8 <_ZN8touchgfx15GraphLabelsBase22invalidateGraphPointAtEs>:
 800d0d8:	4770      	bx	lr

0800d0da <_ZNK8touchgfx15GraphLabelsBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE>:
 800d0da:	6c80      	ldr	r0, [r0, #72]	; 0x48
 800d0dc:	b118      	cbz	r0, 800d0e6 <_ZNK8touchgfx15GraphLabelsBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE+0xc>
 800d0de:	6803      	ldr	r3, [r0, #0]
 800d0e0:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800d0e4:	4718      	bx	r3
 800d0e6:	4770      	bx	lr

0800d0e8 <_ZNK8touchgfx12GraphLabelsX22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:
 800d0e8:	680b      	ldr	r3, [r1, #0]
 800d0ea:	4608      	mov	r0, r1
 800d0ec:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 800d0f0:	4718      	bx	r3

0800d0f2 <_ZNK8touchgfx12GraphLabelsX22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
 800d0f2:	680b      	ldr	r3, [r1, #0]
 800d0f4:	4608      	mov	r0, r1
 800d0f6:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 800d0fa:	4718      	bx	r3

0800d0fc <_ZNK8touchgfx12GraphLabelsY22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:
 800d0fc:	680b      	ldr	r3, [r1, #0]
 800d0fe:	4608      	mov	r0, r1
 800d100:	f8d3 30ec 	ldr.w	r3, [r3, #236]	; 0xec
 800d104:	4718      	bx	r3

0800d106 <_ZNK8touchgfx12GraphLabelsY22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
 800d106:	680b      	ldr	r3, [r1, #0]
 800d108:	4608      	mov	r0, r1
 800d10a:	f8d3 30f8 	ldr.w	r3, [r3, #248]	; 0xf8
 800d10e:	4718      	bx	r3

0800d110 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE>:
 800d110:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d114:	4a37      	ldr	r2, [pc, #220]	; (800d1f4 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xe4>)
 800d116:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 800d118:	8812      	ldrh	r2, [r2, #0]
 800d11a:	429a      	cmp	r2, r3
 800d11c:	b087      	sub	sp, #28
 800d11e:	4604      	mov	r4, r0
 800d120:	4689      	mov	r9, r1
 800d122:	d937      	bls.n	800d194 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800d124:	4a34      	ldr	r2, [pc, #208]	; (800d1f8 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xe8>)
 800d126:	6812      	ldr	r2, [r2, #0]
 800d128:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800d12c:	4b33      	ldr	r3, [pc, #204]	; (800d1fc <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xec>)
 800d12e:	681b      	ldr	r3, [r3, #0]
 800d130:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
 800d134:	f1b8 0f00 	cmp.w	r8, #0
 800d138:	d02c      	beq.n	800d194 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800d13a:	6803      	ldr	r3, [r0, #0]
 800d13c:	6945      	ldr	r5, [r0, #20]
 800d13e:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800d140:	2d00      	cmp	r5, #0
 800d142:	d052      	beq.n	800d1ea <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xda>
 800d144:	696f      	ldr	r7, [r5, #20]
 800d146:	4798      	blx	r3
 800d148:	f897 502c 	ldrb.w	r5, [r7, #44]	; 0x2c
 800d14c:	fb15 f000 	smulbb	r0, r5, r0
 800d150:	b280      	uxth	r0, r0
 800d152:	1c45      	adds	r5, r0, #1
 800d154:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 800d158:	122d      	asrs	r5, r5, #8
 800d15a:	d01b      	beq.n	800d194 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800d15c:	6823      	ldr	r3, [r4, #0]
 800d15e:	4639      	mov	r1, r7
 800d160:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800d164:	4620      	mov	r0, r4
 800d166:	4798      	blx	r3
 800d168:	6823      	ldr	r3, [r4, #0]
 800d16a:	4606      	mov	r6, r0
 800d16c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800d170:	4639      	mov	r1, r7
 800d172:	4620      	mov	r0, r4
 800d174:	4798      	blx	r3
 800d176:	b2ed      	uxtb	r5, r5
 800d178:	4683      	mov	fp, r0
 800d17a:	b970      	cbnz	r0, 800d19a <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x8a>
 800d17c:	b96e      	cbnz	r6, 800d19a <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x8a>
 800d17e:	e9cd 6501 	strd	r6, r5, [sp, #4]
 800d182:	6823      	ldr	r3, [r4, #0]
 800d184:	9600      	str	r6, [sp, #0]
 800d186:	f8d3 508c 	ldr.w	r5, [r3, #140]	; 0x8c
 800d18a:	4642      	mov	r2, r8
 800d18c:	463b      	mov	r3, r7
 800d18e:	4649      	mov	r1, r9
 800d190:	4620      	mov	r0, r4
 800d192:	47a8      	blx	r5
 800d194:	b007      	add	sp, #28
 800d196:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d19a:	2e00      	cmp	r6, #0
 800d19c:	ddfa      	ble.n	800d194 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800d19e:	6823      	ldr	r3, [r4, #0]
 800d1a0:	4639      	mov	r1, r7
 800d1a2:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800d1a6:	4620      	mov	r0, r4
 800d1a8:	4798      	blx	r3
 800d1aa:	6823      	ldr	r3, [r4, #0]
 800d1ac:	4682      	mov	sl, r0
 800d1ae:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800d1b2:	4639      	mov	r1, r7
 800d1b4:	4620      	mov	r0, r4
 800d1b6:	4798      	blx	r3
 800d1b8:	4582      	cmp	sl, r0
 800d1ba:	bfde      	ittt	le
 800d1bc:	4603      	movle	r3, r0
 800d1be:	4650      	movle	r0, sl
 800d1c0:	469a      	movle	sl, r3
 800d1c2:	ebaa 0300 	sub.w	r3, sl, r0
 800d1c6:	fb93 f3f6 	sdiv	r3, r3, r6
 800d1ca:	2b64      	cmp	r3, #100	; 0x64
 800d1cc:	dce2      	bgt.n	800d194 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800d1ce:	e9cd b503 	strd	fp, r5, [sp, #12]
 800d1d2:	e9cd a601 	strd	sl, r6, [sp, #4]
 800d1d6:	6823      	ldr	r3, [r4, #0]
 800d1d8:	9000      	str	r0, [sp, #0]
 800d1da:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 800d1de:	4642      	mov	r2, r8
 800d1e0:	463b      	mov	r3, r7
 800d1e2:	4649      	mov	r1, r9
 800d1e4:	4620      	mov	r0, r4
 800d1e6:	47a8      	blx	r5
 800d1e8:	e7d4      	b.n	800d194 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800d1ea:	4798      	blx	r3
 800d1ec:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 800d1f0:	deff      	udf	#255	; 0xff
 800d1f2:	bf00      	nop
 800d1f4:	20015614 	.word	0x20015614
 800d1f8:	20015610 	.word	0x20015610
 800d1fc:	20015618 	.word	0x20015618

0800d200 <_ZN8touchgfx12GraphLabelsYD1Ev>:
 800d200:	4770      	bx	lr

0800d202 <_ZN8touchgfx12GraphLabelsXD1Ev>:
 800d202:	4770      	bx	lr

0800d204 <_ZNK8touchgfx12GraphLabelsX31getCorrectlyScaledLabelIntervalEPKNS_17AbstractDataGraphE>:
 800d204:	b538      	push	{r3, r4, r5, lr}
 800d206:	680a      	ldr	r2, [r1, #0]
 800d208:	e9d0 540c 	ldrd	r5, r4, [r0, #48]	; 0x30
 800d20c:	f8d2 208c 	ldr.w	r2, [r2, #140]	; 0x8c
 800d210:	4608      	mov	r0, r1
 800d212:	4790      	blx	r2
 800d214:	4629      	mov	r1, r5
 800d216:	4602      	mov	r2, r0
 800d218:	4620      	mov	r0, r4
 800d21a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800d21e:	f7ff baa7 	b.w	800c770 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>

0800d222 <_ZNK8touchgfx12GraphLabelsY31getCorrectlyScaledLabelIntervalEPKNS_17AbstractDataGraphE>:
 800d222:	b538      	push	{r3, r4, r5, lr}
 800d224:	680a      	ldr	r2, [r1, #0]
 800d226:	e9d0 540c 	ldrd	r5, r4, [r0, #48]	; 0x30
 800d22a:	f8d2 2094 	ldr.w	r2, [r2, #148]	; 0x94
 800d22e:	4608      	mov	r0, r1
 800d230:	4790      	blx	r2
 800d232:	4629      	mov	r1, r5
 800d234:	4602      	mov	r2, r0
 800d236:	4620      	mov	r0, r4
 800d238:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800d23c:	f7ff ba98 	b.w	800c770 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>

0800d240 <_ZN8touchgfx12GraphLabelsYD0Ev>:
 800d240:	b510      	push	{r4, lr}
 800d242:	214c      	movs	r1, #76	; 0x4c
 800d244:	4604      	mov	r4, r0
 800d246:	f013 fa4f 	bl	80206e8 <_ZdlPvj>
 800d24a:	4620      	mov	r0, r4
 800d24c:	bd10      	pop	{r4, pc}

0800d24e <_ZN8touchgfx12GraphLabelsXD0Ev>:
 800d24e:	b510      	push	{r4, lr}
 800d250:	214c      	movs	r1, #76	; 0x4c
 800d252:	4604      	mov	r4, r0
 800d254:	f013 fa48 	bl	80206e8 <_ZdlPvj>
 800d258:	4620      	mov	r0, r4
 800d25a:	bd10      	pop	{r4, pc}

0800d25c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>:
 800d25c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d260:	b08d      	sub	sp, #52	; 0x34
 800d262:	e9dd 9a18 	ldrd	r9, sl, [sp, #96]	; 0x60
 800d266:	9309      	str	r3, [sp, #36]	; 0x24
 800d268:	f89d 3068 	ldrb.w	r3, [sp, #104]	; 0x68
 800d26c:	930a      	str	r3, [sp, #40]	; 0x28
 800d26e:	4606      	mov	r6, r0
 800d270:	e9cd 1207 	strd	r1, r2, [sp, #28]
 800d274:	e9dd 7816 	ldrd	r7, r8, [sp, #88]	; 0x58
 800d278:	f1b9 0f00 	cmp.w	r9, #0
 800d27c:	d117      	bne.n	800d2ae <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x52>
 800d27e:	2f00      	cmp	r7, #0
 800d280:	dc7c      	bgt.n	800d37c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x120>
 800d282:	f1b8 0f00 	cmp.w	r8, #0
 800d286:	da01      	bge.n	800d28c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x30>
 800d288:	2f00      	cmp	r7, #0
 800d28a:	d17a      	bne.n	800d382 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x126>
 800d28c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d28e:	9318      	str	r3, [sp, #96]	; 0x60
 800d290:	2300      	movs	r3, #0
 800d292:	e9cd 3316 	strd	r3, r3, [sp, #88]	; 0x58
 800d296:	6832      	ldr	r2, [r6, #0]
 800d298:	9907      	ldr	r1, [sp, #28]
 800d29a:	f8d2 408c 	ldr.w	r4, [r2, #140]	; 0x8c
 800d29e:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800d2a2:	4630      	mov	r0, r6
 800d2a4:	46a4      	mov	ip, r4
 800d2a6:	b00d      	add	sp, #52	; 0x34
 800d2a8:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d2ac:	4760      	bx	ip
 800d2ae:	fb97 f4f9 	sdiv	r4, r7, r9
 800d2b2:	1e63      	subs	r3, r4, #1
 800d2b4:	9305      	str	r3, [sp, #20]
 800d2b6:	f1ba 0f00 	cmp.w	sl, #0
 800d2ba:	d122      	bne.n	800d302 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xa6>
 800d2bc:	fb98 faf9 	sdiv	sl, r8, r9
 800d2c0:	fb03 f509 	mul.w	r5, r3, r9
 800d2c4:	f10a 0a02 	add.w	sl, sl, #2
 800d2c8:	9b05      	ldr	r3, [sp, #20]
 800d2ca:	459a      	cmp	sl, r3
 800d2cc:	d059      	beq.n	800d382 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x126>
 800d2ce:	42af      	cmp	r7, r5
 800d2d0:	dc5a      	bgt.n	800d388 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x12c>
 800d2d2:	45a8      	cmp	r8, r5
 800d2d4:	da01      	bge.n	800d2da <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x7e>
 800d2d6:	42af      	cmp	r7, r5
 800d2d8:	db0e      	blt.n	800d2f8 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x9c>
 800d2da:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d2dc:	9302      	str	r3, [sp, #8]
 800d2de:	9905      	ldr	r1, [sp, #20]
 800d2e0:	6b73      	ldr	r3, [r6, #52]	; 0x34
 800d2e2:	6832      	ldr	r2, [r6, #0]
 800d2e4:	434b      	muls	r3, r1
 800d2e6:	e9cd 5300 	strd	r5, r3, [sp]
 800d2ea:	9907      	ldr	r1, [sp, #28]
 800d2ec:	f8d2 b08c 	ldr.w	fp, [r2, #140]	; 0x8c
 800d2f0:	4630      	mov	r0, r6
 800d2f2:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800d2f6:	47d8      	blx	fp
 800d2f8:	9b05      	ldr	r3, [sp, #20]
 800d2fa:	3301      	adds	r3, #1
 800d2fc:	9305      	str	r3, [sp, #20]
 800d2fe:	444d      	add	r5, r9
 800d300:	e7e2      	b.n	800d2c8 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x6c>
 800d302:	fb97 f3fa 	sdiv	r3, r7, sl
 800d306:	3b01      	subs	r3, #1
 800d308:	9306      	str	r3, [sp, #24]
 800d30a:	9a06      	ldr	r2, [sp, #24]
 800d30c:	fb98 f3fa 	sdiv	r3, r8, sl
 800d310:	fb02 fb0a 	mul.w	fp, r2, sl
 800d314:	9a05      	ldr	r2, [sp, #20]
 800d316:	3302      	adds	r3, #2
 800d318:	fb02 f509 	mul.w	r5, r2, r9
 800d31c:	930b      	str	r3, [sp, #44]	; 0x2c
 800d31e:	45ab      	cmp	fp, r5
 800d320:	dd1d      	ble.n	800d35e <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x102>
 800d322:	42af      	cmp	r7, r5
 800d324:	dc08      	bgt.n	800d338 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xdc>
 800d326:	45a8      	cmp	r8, r5
 800d328:	da08      	bge.n	800d33c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xe0>
 800d32a:	42af      	cmp	r7, r5
 800d32c:	da06      	bge.n	800d33c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xe0>
 800d32e:	9b05      	ldr	r3, [sp, #20]
 800d330:	3301      	adds	r3, #1
 800d332:	9305      	str	r3, [sp, #20]
 800d334:	444d      	add	r5, r9
 800d336:	e7f2      	b.n	800d31e <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xc2>
 800d338:	45a8      	cmp	r8, r5
 800d33a:	dcf8      	bgt.n	800d32e <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xd2>
 800d33c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d33e:	9302      	str	r3, [sp, #8]
 800d340:	9905      	ldr	r1, [sp, #20]
 800d342:	6b73      	ldr	r3, [r6, #52]	; 0x34
 800d344:	6832      	ldr	r2, [r6, #0]
 800d346:	434b      	muls	r3, r1
 800d348:	e9cd 5300 	strd	r5, r3, [sp]
 800d34c:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 800d350:	9907      	ldr	r1, [sp, #28]
 800d352:	461c      	mov	r4, r3
 800d354:	4630      	mov	r0, r6
 800d356:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800d35a:	47a0      	blx	r4
 800d35c:	e7e7      	b.n	800d32e <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xd2>
 800d35e:	45ab      	cmp	fp, r5
 800d360:	db04      	blt.n	800d36c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x110>
 800d362:	9b05      	ldr	r3, [sp, #20]
 800d364:	3301      	adds	r3, #1
 800d366:	9305      	str	r3, [sp, #20]
 800d368:	444d      	add	r5, r9
 800d36a:	e7f8      	b.n	800d35e <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x102>
 800d36c:	9b06      	ldr	r3, [sp, #24]
 800d36e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800d370:	3301      	adds	r3, #1
 800d372:	4293      	cmp	r3, r2
 800d374:	9306      	str	r3, [sp, #24]
 800d376:	d004      	beq.n	800d382 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x126>
 800d378:	44d3      	add	fp, sl
 800d37a:	e7d0      	b.n	800d31e <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xc2>
 800d37c:	f1b8 0f00 	cmp.w	r8, #0
 800d380:	dd84      	ble.n	800d28c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x30>
 800d382:	b00d      	add	sp, #52	; 0x34
 800d384:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d388:	45a8      	cmp	r8, r5
 800d38a:	dcb5      	bgt.n	800d2f8 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x9c>
 800d38c:	e7a5      	b.n	800d2da <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x7e>

0800d38e <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>:
 800d38e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d392:	f9b3 4120 	ldrsh.w	r4, [r3, #288]	; 0x120
 800d396:	b089      	sub	sp, #36	; 0x24
 800d398:	2c00      	cmp	r4, #0
 800d39a:	9007      	str	r0, [sp, #28]
 800d39c:	468a      	mov	sl, r1
 800d39e:	4693      	mov	fp, r2
 800d3a0:	461d      	mov	r5, r3
 800d3a2:	e9dd c612 	ldrd	ip, r6, [sp, #72]	; 0x48
 800d3a6:	e9dd 7814 	ldrd	r7, r8, [sp, #80]	; 0x50
 800d3aa:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 800d3ae:	dd03      	ble.n	800d3b8 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x2a>
 800d3b0:	4564      	cmp	r4, ip
 800d3b2:	dd01      	ble.n	800d3b8 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x2a>
 800d3b4:	42b4      	cmp	r4, r6
 800d3b6:	dd0e      	ble.n	800d3d6 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x48>
 800d3b8:	e9cd 8915 	strd	r8, r9, [sp, #84]	; 0x54
 800d3bc:	e9cd 6713 	strd	r6, r7, [sp, #76]	; 0x4c
 800d3c0:	f8cd c048 	str.w	ip, [sp, #72]	; 0x48
 800d3c4:	9807      	ldr	r0, [sp, #28]
 800d3c6:	462b      	mov	r3, r5
 800d3c8:	465a      	mov	r2, fp
 800d3ca:	4651      	mov	r1, sl
 800d3cc:	b009      	add	sp, #36	; 0x24
 800d3ce:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d3d2:	f7ff bf43 	b.w	800d25c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>
 800d3d6:	f104 3eff 	add.w	lr, r4, #4294967295
 800d3da:	e9cd 8903 	strd	r8, r9, [sp, #12]
 800d3de:	9702      	str	r7, [sp, #8]
 800d3e0:	e9cd ce00 	strd	ip, lr, [sp]
 800d3e4:	f7ff ff3a 	bl	800d25c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>
 800d3e8:	e9cd 8915 	strd	r8, r9, [sp, #84]	; 0x54
 800d3ec:	e9cd 6713 	strd	r6, r7, [sp, #76]	; 0x4c
 800d3f0:	9412      	str	r4, [sp, #72]	; 0x48
 800d3f2:	e7e7      	b.n	800d3c4 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x36>

0800d3f4 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>:
 800d3f4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d3f8:	f1b3 0900 	subs.w	r9, r3, #0
 800d3fc:	460d      	mov	r5, r1
 800d3fe:	4690      	mov	r8, r2
 800d400:	9f08      	ldr	r7, [sp, #32]
 800d402:	f8bd a024 	ldrh.w	sl, [sp, #36]	; 0x24
 800d406:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 800d408:	da18      	bge.n	800d43c <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x48>
 800d40a:	2a01      	cmp	r2, #1
 800d40c:	dd16      	ble.n	800d43c <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x48>
 800d40e:	232d      	movs	r3, #45	; 0x2d
 800d410:	800b      	strh	r3, [r1, #0]
 800d412:	f1c9 0900 	rsb	r9, r9, #0
 800d416:	2001      	movs	r0, #1
 800d418:	2f00      	cmp	r7, #0
 800d41a:	d111      	bne.n	800d440 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x4c>
 800d41c:	eba8 0100 	sub.w	r1, r8, r0
 800d420:	2302      	movs	r3, #2
 800d422:	eb05 0040 	add.w	r0, r5, r0, lsl #1
 800d426:	fb96 f3f3 	sdiv	r3, r6, r3
 800d42a:	4a24      	ldr	r2, [pc, #144]	; (800d4bc <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc8>)
 800d42c:	444b      	add	r3, r9
 800d42e:	b289      	uxth	r1, r1
 800d430:	fb93 f3f6 	sdiv	r3, r3, r6
 800d434:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d438:	f006 bdf8 	b.w	801402c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800d43c:	2000      	movs	r0, #0
 800d43e:	e7eb      	b.n	800d418 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x24>
 800d440:	dd39      	ble.n	800d4b6 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc2>
 800d442:	fb99 f4f6 	sdiv	r4, r9, r6
 800d446:	eba8 0100 	sub.w	r1, r8, r0
 800d44a:	4623      	mov	r3, r4
 800d44c:	4a1b      	ldr	r2, [pc, #108]	; (800d4bc <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc8>)
 800d44e:	b289      	uxth	r1, r1
 800d450:	eb05 0040 	add.w	r0, r5, r0, lsl #1
 800d454:	f006 fdea 	bl	801402c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800d458:	4628      	mov	r0, r5
 800d45a:	f006 fa73 	bl	8013944 <_ZN8touchgfx7Unicode6strlenEPKt>
 800d45e:	f108 38ff 	add.w	r8, r8, #4294967295
 800d462:	4580      	cmp	r8, r0
 800d464:	dd27      	ble.n	800d4b6 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc2>
 800d466:	f825 a010 	strh.w	sl, [r5, r0, lsl #1]
 800d46a:	fb06 9314 	mls	r3, r6, r4, r9
 800d46e:	3001      	adds	r0, #1
 800d470:	2200      	movs	r2, #0
 800d472:	f04f 090a 	mov.w	r9, #10
 800d476:	f107 3aff 	add.w	sl, r7, #4294967295
 800d47a:	f04f 0e02 	mov.w	lr, #2
 800d47e:	fb96 fefe 	sdiv	lr, r6, lr
 800d482:	4580      	cmp	r8, r0
 800d484:	4684      	mov	ip, r0
 800d486:	dd13      	ble.n	800d4b0 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xbc>
 800d488:	fb09 f303 	mul.w	r3, r9, r3
 800d48c:	4592      	cmp	sl, r2
 800d48e:	f102 0201 	add.w	r2, r2, #1
 800d492:	bf08      	it	eq
 800d494:	4473      	addeq	r3, lr
 800d496:	f100 0c01 	add.w	ip, r0, #1
 800d49a:	fb93 f4f6 	sdiv	r4, r3, r6
 800d49e:	4297      	cmp	r7, r2
 800d4a0:	f104 0130 	add.w	r1, r4, #48	; 0x30
 800d4a4:	f825 1010 	strh.w	r1, [r5, r0, lsl #1]
 800d4a8:	fb06 3314 	mls	r3, r6, r4, r3
 800d4ac:	4660      	mov	r0, ip
 800d4ae:	d1e8      	bne.n	800d482 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x8e>
 800d4b0:	2300      	movs	r3, #0
 800d4b2:	f825 301c 	strh.w	r3, [r5, ip, lsl #1]
 800d4b6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800d4ba:	bf00      	nop
 800d4bc:	08023560 	.word	0x08023560

0800d4c0 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs>:
 800d4c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d4c4:	4a6b      	ldr	r2, [pc, #428]	; (800d674 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1b4>)
 800d4c6:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 800d4c8:	8812      	ldrh	r2, [r2, #0]
 800d4ca:	429a      	cmp	r2, r3
 800d4cc:	b092      	sub	sp, #72	; 0x48
 800d4ce:	4604      	mov	r4, r0
 800d4d0:	460e      	mov	r6, r1
 800d4d2:	d93a      	bls.n	800d54a <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800d4d4:	4a68      	ldr	r2, [pc, #416]	; (800d678 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1b8>)
 800d4d6:	6812      	ldr	r2, [r2, #0]
 800d4d8:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800d4dc:	4b67      	ldr	r3, [pc, #412]	; (800d67c <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1bc>)
 800d4de:	681b      	ldr	r3, [r3, #0]
 800d4e0:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
 800d4e4:	f1b8 0f00 	cmp.w	r8, #0
 800d4e8:	d02f      	beq.n	800d54a <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800d4ea:	6803      	ldr	r3, [r0, #0]
 800d4ec:	6945      	ldr	r5, [r0, #20]
 800d4ee:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800d4f0:	2d00      	cmp	r5, #0
 800d4f2:	f000 80ba 	beq.w	800d66a <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1aa>
 800d4f6:	696f      	ldr	r7, [r5, #20]
 800d4f8:	4798      	blx	r3
 800d4fa:	f897 302c 	ldrb.w	r3, [r7, #44]	; 0x2c
 800d4fe:	fb13 f000 	smulbb	r0, r3, r0
 800d502:	b280      	uxth	r0, r0
 800d504:	1c43      	adds	r3, r0, #1
 800d506:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 800d50a:	0a03      	lsrs	r3, r0, #8
 800d50c:	d01d      	beq.n	800d54a <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800d50e:	6b39      	ldr	r1, [r7, #48]	; 0x30
 800d510:	6823      	ldr	r3, [r4, #0]
 800d512:	434e      	muls	r6, r1
 800d514:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800d518:	4639      	mov	r1, r7
 800d51a:	4620      	mov	r0, r4
 800d51c:	4798      	blx	r3
 800d51e:	6823      	ldr	r3, [r4, #0]
 800d520:	4605      	mov	r5, r0
 800d522:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800d526:	4639      	mov	r1, r7
 800d528:	4620      	mov	r0, r4
 800d52a:	4798      	blx	r3
 800d52c:	2d00      	cmp	r5, #0
 800d52e:	dd0f      	ble.n	800d550 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x90>
 800d530:	fb96 f3f5 	sdiv	r3, r6, r5
 800d534:	436b      	muls	r3, r5
 800d536:	1b9a      	subs	r2, r3, r6
 800d538:	4253      	negs	r3, r2
 800d53a:	4153      	adcs	r3, r2
 800d53c:	2800      	cmp	r0, #0
 800d53e:	dd09      	ble.n	800d554 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x94>
 800d540:	fb96 f2f0 	sdiv	r2, r6, r0
 800d544:	4350      	muls	r0, r2
 800d546:	42b0      	cmp	r0, r6
 800d548:	d10e      	bne.n	800d568 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xa8>
 800d54a:	b012      	add	sp, #72	; 0x48
 800d54c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800d550:	2300      	movs	r3, #0
 800d552:	e7f3      	b.n	800d53c <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x7c>
 800d554:	d108      	bne.n	800d568 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xa8>
 800d556:	2d00      	cmp	r5, #0
 800d558:	f040 8084 	bne.w	800d664 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1a4>
 800d55c:	2e00      	cmp	r6, #0
 800d55e:	d055      	beq.n	800d60c <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x14c>
 800d560:	2b00      	cmp	r3, #0
 800d562:	d0f2      	beq.n	800d54a <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800d564:	462a      	mov	r2, r5
 800d566:	e007      	b.n	800d578 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xb8>
 800d568:	2b00      	cmp	r3, #0
 800d56a:	d0ee      	beq.n	800d54a <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800d56c:	2d00      	cmp	r5, #0
 800d56e:	d0f9      	beq.n	800d564 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xa4>
 800d570:	fb96 f2f5 	sdiv	r2, r6, r5
 800d574:	6b65      	ldr	r5, [r4, #52]	; 0x34
 800d576:	436a      	muls	r2, r5
 800d578:	683b      	ldr	r3, [r7, #0]
 800d57a:	f8df 9104 	ldr.w	r9, [pc, #260]	; 800d680 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1c0>
 800d57e:	f8d3 3110 	ldr.w	r3, [r3, #272]	; 0x110
 800d582:	4631      	mov	r1, r6
 800d584:	4638      	mov	r0, r7
 800d586:	4798      	blx	r3
 800d588:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800d58a:	9302      	str	r3, [sp, #8]
 800d58c:	f8b4 3044 	ldrh.w	r3, [r4, #68]	; 0x44
 800d590:	9301      	str	r3, [sp, #4]
 800d592:	f8b4 3042 	ldrh.w	r3, [r4, #66]	; 0x42
 800d596:	9300      	str	r3, [sp, #0]
 800d598:	a908      	add	r1, sp, #32
 800d59a:	4603      	mov	r3, r0
 800d59c:	2214      	movs	r2, #20
 800d59e:	4620      	mov	r0, r4
 800d5a0:	f7ff ff28 	bl	800d3f4 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>
 800d5a4:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800d5a8:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800d5aa:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800d5ae:	f8d8 3000 	ldr.w	r3, [r8]
 800d5b2:	d12d      	bne.n	800d610 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x150>
 800d5b4:	f8d9 0000 	ldr.w	r0, [r9]
 800d5b8:	699d      	ldr	r5, [r3, #24]
 800d5ba:	f7f7 fc11 	bl	8004de0 <_ZNK8touchgfx5Texts7getTextEt>
 800d5be:	aa08      	add	r2, sp, #32
 800d5c0:	4601      	mov	r1, r0
 800d5c2:	4640      	mov	r0, r8
 800d5c4:	47a8      	blx	r5
 800d5c6:	4605      	mov	r5, r0
 800d5c8:	683b      	ldr	r3, [r7, #0]
 800d5ca:	f8b7 806c 	ldrh.w	r8, [r7, #108]	; 0x6c
 800d5ce:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 800d5d2:	4631      	mov	r1, r6
 800d5d4:	4638      	mov	r0, r7
 800d5d6:	4798      	blx	r3
 800d5d8:	ab12      	add	r3, sp, #72	; 0x48
 800d5da:	f843 0d34 	str.w	r0, [r3, #-52]!
 800d5de:	4618      	mov	r0, r3
 800d5e0:	f7fe fea8 	bl	800c334 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800d5e4:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800d5e8:	f8ad 301e 	strh.w	r3, [sp, #30]
 800d5ec:	4440      	add	r0, r8
 800d5ee:	6823      	ldr	r3, [r4, #0]
 800d5f0:	f8ad 501c 	strh.w	r5, [sp, #28]
 800d5f4:	eba0 0055 	sub.w	r0, r0, r5, lsr #1
 800d5f8:	2200      	movs	r2, #0
 800d5fa:	f8ad 0018 	strh.w	r0, [sp, #24]
 800d5fe:	f8ad 201a 	strh.w	r2, [sp, #26]
 800d602:	691b      	ldr	r3, [r3, #16]
 800d604:	a906      	add	r1, sp, #24
 800d606:	4620      	mov	r0, r4
 800d608:	4798      	blx	r3
 800d60a:	e79e      	b.n	800d54a <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800d60c:	4632      	mov	r2, r6
 800d60e:	e7b3      	b.n	800d578 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xb8>
 800d610:	f8d9 0000 	ldr.w	r0, [r9]
 800d614:	6a9d      	ldr	r5, [r3, #40]	; 0x28
 800d616:	f7f7 fbe3 	bl	8004de0 <_ZNK8touchgfx5Texts7getTextEt>
 800d61a:	aa08      	add	r2, sp, #32
 800d61c:	4601      	mov	r1, r0
 800d61e:	4640      	mov	r0, r8
 800d620:	47a8      	blx	r5
 800d622:	f8d8 3000 	ldr.w	r3, [r8]
 800d626:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800d628:	f8d3 a040 	ldr.w	sl, [r3, #64]	; 0x40
 800d62c:	4605      	mov	r5, r0
 800d62e:	f8d9 0000 	ldr.w	r0, [r9]
 800d632:	f7f7 fbd5 	bl	8004de0 <_ZNK8touchgfx5Texts7getTextEt>
 800d636:	aa08      	add	r2, sp, #32
 800d638:	4601      	mov	r1, r0
 800d63a:	4640      	mov	r0, r8
 800d63c:	47d0      	blx	sl
 800d63e:	f8d8 3000 	ldr.w	r3, [r8]
 800d642:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800d644:	f8d3 a024 	ldr.w	sl, [r3, #36]	; 0x24
 800d648:	fb15 f500 	smulbb	r5, r5, r0
 800d64c:	f8d9 0000 	ldr.w	r0, [r9]
 800d650:	f7f7 fbc6 	bl	8004de0 <_ZNK8touchgfx5Texts7getTextEt>
 800d654:	aa08      	add	r2, sp, #32
 800d656:	4601      	mov	r1, r0
 800d658:	4640      	mov	r0, r8
 800d65a:	47d0      	blx	sl
 800d65c:	b2ad      	uxth	r5, r5
 800d65e:	4405      	add	r5, r0
 800d660:	b2ad      	uxth	r5, r5
 800d662:	e7b1      	b.n	800d5c8 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x108>
 800d664:	2b00      	cmp	r3, #0
 800d666:	d183      	bne.n	800d570 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xb0>
 800d668:	e76f      	b.n	800d54a <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800d66a:	4798      	blx	r3
 800d66c:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 800d670:	deff      	udf	#255	; 0xff
 800d672:	bf00      	nop
 800d674:	20015614 	.word	0x20015614
 800d678:	20015610 	.word	0x20015610
 800d67c:	20015618 	.word	0x20015618
 800d680:	2001561c 	.word	0x2001561c

0800d684 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih>:
 800d684:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d688:	461d      	mov	r5, r3
 800d68a:	b099      	sub	sp, #100	; 0x64
 800d68c:	681b      	ldr	r3, [r3, #0]
 800d68e:	4604      	mov	r4, r0
 800d690:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 800d694:	4689      	mov	r9, r1
 800d696:	4628      	mov	r0, r5
 800d698:	9922      	ldr	r1, [sp, #136]	; 0x88
 800d69a:	4690      	mov	r8, r2
 800d69c:	4798      	blx	r3
 800d69e:	af18      	add	r7, sp, #96	; 0x60
 800d6a0:	f847 0d28 	str.w	r0, [r7, #-40]!
 800d6a4:	4638      	mov	r0, r7
 800d6a6:	f7fe fe45 	bl	800c334 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800d6aa:	f8b5 3116 	ldrh.w	r3, [r5, #278]	; 0x116
 800d6ae:	1ac0      	subs	r0, r0, r3
 800d6b0:	b200      	sxth	r0, r0
 800d6b2:	2800      	cmp	r0, #0
 800d6b4:	f2c0 80b0 	blt.w	800d818 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x194>
 800d6b8:	f8b5 2118 	ldrh.w	r2, [r5, #280]	; 0x118
 800d6bc:	441a      	add	r2, r3
 800d6be:	f8b5 3040 	ldrh.w	r3, [r5, #64]	; 0x40
 800d6c2:	1a9b      	subs	r3, r3, r2
 800d6c4:	b21b      	sxth	r3, r3
 800d6c6:	4298      	cmp	r0, r3
 800d6c8:	f280 80a6 	bge.w	800d818 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x194>
 800d6cc:	682b      	ldr	r3, [r5, #0]
 800d6ce:	e9dd 1222 	ldrd	r1, r2, [sp, #136]	; 0x88
 800d6d2:	f8d3 3110 	ldr.w	r3, [r3, #272]	; 0x110
 800d6d6:	4628      	mov	r0, r5
 800d6d8:	4798      	blx	r3
 800d6da:	682b      	ldr	r3, [r5, #0]
 800d6dc:	f8b4 a042 	ldrh.w	sl, [r4, #66]	; 0x42
 800d6e0:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800d6e4:	f8b4 b044 	ldrh.w	fp, [r4, #68]	; 0x44
 800d6e8:	4606      	mov	r6, r0
 800d6ea:	4628      	mov	r0, r5
 800d6ec:	4798      	blx	r3
 800d6ee:	f8cd a000 	str.w	sl, [sp]
 800d6f2:	e9cd b001 	strd	fp, r0, [sp, #4]
 800d6f6:	4633      	mov	r3, r6
 800d6f8:	4639      	mov	r1, r7
 800d6fa:	2214      	movs	r2, #20
 800d6fc:	4620      	mov	r0, r4
 800d6fe:	f7ff fe79 	bl	800d3f4 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>
 800d702:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800d706:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800d708:	f8df a16c 	ldr.w	sl, [pc, #364]	; 800d878 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1f4>
 800d70c:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800d710:	f8d8 3000 	ldr.w	r3, [r8]
 800d714:	f040 8083 	bne.w	800d81e <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x19a>
 800d718:	f8da 0000 	ldr.w	r0, [sl]
 800d71c:	699e      	ldr	r6, [r3, #24]
 800d71e:	f7f7 fb5f 	bl	8004de0 <_ZNK8touchgfx5Texts7getTextEt>
 800d722:	463a      	mov	r2, r7
 800d724:	4601      	mov	r1, r0
 800d726:	4640      	mov	r0, r8
 800d728:	47b0      	blx	r6
 800d72a:	4606      	mov	r6, r0
 800d72c:	682b      	ldr	r3, [r5, #0]
 800d72e:	9922      	ldr	r1, [sp, #136]	; 0x88
 800d730:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 800d734:	f8b5 a06c 	ldrh.w	sl, [r5, #108]	; 0x6c
 800d738:	4628      	mov	r0, r5
 800d73a:	4798      	blx	r3
 800d73c:	f10d 0b60 	add.w	fp, sp, #96	; 0x60
 800d740:	ad05      	add	r5, sp, #20
 800d742:	f84b 0d3c 	str.w	r0, [fp, #-60]!
 800d746:	4658      	mov	r0, fp
 800d748:	f7fe fdf4 	bl	800c334 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800d74c:	4450      	add	r0, sl
 800d74e:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800d752:	f8ad 6018 	strh.w	r6, [sp, #24]
 800d756:	eba0 0056 	sub.w	r0, r0, r6, lsr #1
 800d75a:	f04f 0a00 	mov.w	sl, #0
 800d75e:	f8ad 301a 	strh.w	r3, [sp, #26]
 800d762:	f8ad 0014 	strh.w	r0, [sp, #20]
 800d766:	f8ad a016 	strh.w	sl, [sp, #22]
 800d76a:	e895 0003 	ldmia.w	r5, {r0, r1}
 800d76e:	ae07      	add	r6, sp, #28
 800d770:	e886 0003 	stmia.w	r6, {r0, r1}
 800d774:	4649      	mov	r1, r9
 800d776:	4630      	mov	r0, r6
 800d778:	f7fd fb08 	bl	800ad8c <_ZN8touchgfx4RectaNERKS0_>
 800d77c:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800d780:	4553      	cmp	r3, sl
 800d782:	dd49      	ble.n	800d818 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x194>
 800d784:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800d788:	4553      	cmp	r3, sl
 800d78a:	dd45      	ble.n	800d818 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x194>
 800d78c:	f8bd 301c 	ldrh.w	r3, [sp, #28]
 800d790:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800d794:	1a9b      	subs	r3, r3, r2
 800d796:	f8ad 301c 	strh.w	r3, [sp, #28]
 800d79a:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800d79e:	f8bd 301e 	ldrh.w	r3, [sp, #30]
 800d7a2:	1a9b      	subs	r3, r3, r2
 800d7a4:	f8ad 301e 	strh.w	r3, [sp, #30]
 800d7a8:	6823      	ldr	r3, [r4, #0]
 800d7aa:	4620      	mov	r0, r4
 800d7ac:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d7ae:	4629      	mov	r1, r5
 800d7b0:	4798      	blx	r3
 800d7b2:	4b30      	ldr	r3, [pc, #192]	; (800d874 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1f0>)
 800d7b4:	f8b4 903c 	ldrh.w	r9, [r4, #60]	; 0x3c
 800d7b8:	681b      	ldr	r3, [r3, #0]
 800d7ba:	f894 1040 	ldrb.w	r1, [r4, #64]	; 0x40
 800d7be:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800d7c0:	eb03 0349 	add.w	r3, r3, r9, lsl #1
 800d7c4:	785b      	ldrb	r3, [r3, #1]
 800d7c6:	920b      	str	r2, [sp, #44]	; 0x2c
 800d7c8:	f3c3 0001 	ubfx	r0, r3, #0, #2
 800d7cc:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800d7d0:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800d7d4:	f89d 3090 	ldrb.w	r3, [sp, #144]	; 0x90
 800d7d8:	f88d 102a 	strb.w	r1, [sp, #42]	; 0x2a
 800d7dc:	f88d 3032 	strb.w	r3, [sp, #50]	; 0x32
 800d7e0:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 800d7e4:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 800d7e8:	f8ad a030 	strh.w	sl, [sp, #48]	; 0x30
 800d7ec:	f88d a033 	strb.w	sl, [sp, #51]	; 0x33
 800d7f0:	f88d a034 	strb.w	sl, [sp, #52]	; 0x34
 800d7f4:	f7f4 ff8c 	bl	8002710 <_ZN8touchgfx3HAL3lcdEv>
 800d7f8:	4b1f      	ldr	r3, [pc, #124]	; (800d878 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1f4>)
 800d7fa:	4604      	mov	r4, r0
 800d7fc:	4649      	mov	r1, r9
 800d7fe:	6818      	ldr	r0, [r3, #0]
 800d800:	f7f7 faee 	bl	8004de0 <_ZNK8touchgfx5Texts7getTextEt>
 800d804:	e9cd 7a02 	strd	r7, sl, [sp, #8]
 800d808:	e9cd b000 	strd	fp, r0, [sp]
 800d80c:	4633      	mov	r3, r6
 800d80e:	e895 0006 	ldmia.w	r5, {r1, r2}
 800d812:	4620      	mov	r0, r4
 800d814:	f7f7 fa96 	bl	8004d44 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800d818:	b019      	add	sp, #100	; 0x64
 800d81a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d81e:	f8da 0000 	ldr.w	r0, [sl]
 800d822:	6a9e      	ldr	r6, [r3, #40]	; 0x28
 800d824:	f7f7 fadc 	bl	8004de0 <_ZNK8touchgfx5Texts7getTextEt>
 800d828:	463a      	mov	r2, r7
 800d82a:	4601      	mov	r1, r0
 800d82c:	4640      	mov	r0, r8
 800d82e:	47b0      	blx	r6
 800d830:	f8d8 3000 	ldr.w	r3, [r8]
 800d834:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800d836:	f8d3 b040 	ldr.w	fp, [r3, #64]	; 0x40
 800d83a:	4606      	mov	r6, r0
 800d83c:	f8da 0000 	ldr.w	r0, [sl]
 800d840:	f7f7 face 	bl	8004de0 <_ZNK8touchgfx5Texts7getTextEt>
 800d844:	463a      	mov	r2, r7
 800d846:	4601      	mov	r1, r0
 800d848:	4640      	mov	r0, r8
 800d84a:	47d8      	blx	fp
 800d84c:	f8d8 3000 	ldr.w	r3, [r8]
 800d850:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800d852:	f8d3 b024 	ldr.w	fp, [r3, #36]	; 0x24
 800d856:	fb16 f600 	smulbb	r6, r6, r0
 800d85a:	f8da 0000 	ldr.w	r0, [sl]
 800d85e:	f7f7 fabf 	bl	8004de0 <_ZNK8touchgfx5Texts7getTextEt>
 800d862:	463a      	mov	r2, r7
 800d864:	4601      	mov	r1, r0
 800d866:	4640      	mov	r0, r8
 800d868:	47d8      	blx	fp
 800d86a:	b2b6      	uxth	r6, r6
 800d86c:	4406      	add	r6, r0
 800d86e:	b2b6      	uxth	r6, r6
 800d870:	e75c      	b.n	800d72c <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xa8>
 800d872:	bf00      	nop
 800d874:	20015610 	.word	0x20015610
 800d878:	2001561c 	.word	0x2001561c

0800d87c <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih>:
 800d87c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d880:	4698      	mov	r8, r3
 800d882:	b099      	sub	sp, #100	; 0x64
 800d884:	681b      	ldr	r3, [r3, #0]
 800d886:	4604      	mov	r4, r0
 800d888:	f8d3 3118 	ldr.w	r3, [r3, #280]	; 0x118
 800d88c:	4689      	mov	r9, r1
 800d88e:	4640      	mov	r0, r8
 800d890:	9922      	ldr	r1, [sp, #136]	; 0x88
 800d892:	4617      	mov	r7, r2
 800d894:	4798      	blx	r3
 800d896:	ae18      	add	r6, sp, #96	; 0x60
 800d898:	f846 0d28 	str.w	r0, [r6, #-40]!
 800d89c:	4630      	mov	r0, r6
 800d89e:	f7fe fd49 	bl	800c334 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800d8a2:	f8b8 3114 	ldrh.w	r3, [r8, #276]	; 0x114
 800d8a6:	1ac0      	subs	r0, r0, r3
 800d8a8:	b200      	sxth	r0, r0
 800d8aa:	2800      	cmp	r0, #0
 800d8ac:	f2c0 80c0 	blt.w	800da30 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1b4>
 800d8b0:	f8b8 211a 	ldrh.w	r2, [r8, #282]	; 0x11a
 800d8b4:	441a      	add	r2, r3
 800d8b6:	f8b8 3042 	ldrh.w	r3, [r8, #66]	; 0x42
 800d8ba:	1a9b      	subs	r3, r3, r2
 800d8bc:	b21b      	sxth	r3, r3
 800d8be:	4298      	cmp	r0, r3
 800d8c0:	f280 80b6 	bge.w	800da30 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1b4>
 800d8c4:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800d8c6:	9302      	str	r3, [sp, #8]
 800d8c8:	f8b4 3044 	ldrh.w	r3, [r4, #68]	; 0x44
 800d8cc:	9301      	str	r3, [sp, #4]
 800d8ce:	f8b4 3042 	ldrh.w	r3, [r4, #66]	; 0x42
 800d8d2:	9300      	str	r3, [sp, #0]
 800d8d4:	4631      	mov	r1, r6
 800d8d6:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800d8d8:	f8df a174 	ldr.w	sl, [pc, #372]	; 800da50 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1d4>
 800d8dc:	2214      	movs	r2, #20
 800d8de:	4620      	mov	r0, r4
 800d8e0:	f7ff fd88 	bl	800d3f4 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>
 800d8e4:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800d8e8:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800d8ea:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800d8ee:	683b      	ldr	r3, [r7, #0]
 800d8f0:	f040 80a1 	bne.w	800da36 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1ba>
 800d8f4:	f8da 0000 	ldr.w	r0, [sl]
 800d8f8:	6a9d      	ldr	r5, [r3, #40]	; 0x28
 800d8fa:	f7f7 fa71 	bl	8004de0 <_ZNK8touchgfx5Texts7getTextEt>
 800d8fe:	4632      	mov	r2, r6
 800d900:	4601      	mov	r1, r0
 800d902:	4638      	mov	r0, r7
 800d904:	47a8      	blx	r5
 800d906:	683b      	ldr	r3, [r7, #0]
 800d908:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800d90a:	f8d3 b040 	ldr.w	fp, [r3, #64]	; 0x40
 800d90e:	4605      	mov	r5, r0
 800d910:	f8da 0000 	ldr.w	r0, [sl]
 800d914:	f7f7 fa64 	bl	8004de0 <_ZNK8touchgfx5Texts7getTextEt>
 800d918:	4632      	mov	r2, r6
 800d91a:	4601      	mov	r1, r0
 800d91c:	4638      	mov	r0, r7
 800d91e:	47d8      	blx	fp
 800d920:	683b      	ldr	r3, [r7, #0]
 800d922:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800d924:	f8d3 b024 	ldr.w	fp, [r3, #36]	; 0x24
 800d928:	fb15 f500 	smulbb	r5, r5, r0
 800d92c:	f8da 0000 	ldr.w	r0, [sl]
 800d930:	f7f7 fa56 	bl	8004de0 <_ZNK8touchgfx5Texts7getTextEt>
 800d934:	4632      	mov	r2, r6
 800d936:	4601      	mov	r1, r0
 800d938:	4638      	mov	r0, r7
 800d93a:	47d8      	blx	fp
 800d93c:	b2ad      	uxth	r5, r5
 800d93e:	4405      	add	r5, r0
 800d940:	b2ad      	uxth	r5, r5
 800d942:	f8d8 3000 	ldr.w	r3, [r8]
 800d946:	9922      	ldr	r1, [sp, #136]	; 0x88
 800d948:	f8d3 3118 	ldr.w	r3, [r3, #280]	; 0x118
 800d94c:	f8b8 a0c6 	ldrh.w	sl, [r8, #198]	; 0xc6
 800d950:	4640      	mov	r0, r8
 800d952:	4798      	blx	r3
 800d954:	f10d 0b60 	add.w	fp, sp, #96	; 0x60
 800d958:	f04f 0800 	mov.w	r8, #0
 800d95c:	f84b 0d3c 	str.w	r0, [fp, #-60]!
 800d960:	4658      	mov	r0, fp
 800d962:	f7fe fce7 	bl	800c334 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800d966:	4450      	add	r0, sl
 800d968:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800d96c:	f8ad 3018 	strh.w	r3, [sp, #24]
 800d970:	eba0 0055 	sub.w	r0, r0, r5, lsr #1
 800d974:	f8ad 501a 	strh.w	r5, [sp, #26]
 800d978:	f8ad 8014 	strh.w	r8, [sp, #20]
 800d97c:	f8ad 0016 	strh.w	r0, [sp, #22]
 800d980:	ad05      	add	r5, sp, #20
 800d982:	e895 0003 	ldmia.w	r5, {r0, r1}
 800d986:	f10d 0a1c 	add.w	sl, sp, #28
 800d98a:	e88a 0003 	stmia.w	sl, {r0, r1}
 800d98e:	4649      	mov	r1, r9
 800d990:	4650      	mov	r0, sl
 800d992:	f7fd f9fb 	bl	800ad8c <_ZN8touchgfx4RectaNERKS0_>
 800d996:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800d99a:	4543      	cmp	r3, r8
 800d99c:	dd48      	ble.n	800da30 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1b4>
 800d99e:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800d9a2:	4543      	cmp	r3, r8
 800d9a4:	dd44      	ble.n	800da30 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1b4>
 800d9a6:	f8bd 301c 	ldrh.w	r3, [sp, #28]
 800d9aa:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800d9ae:	1a9b      	subs	r3, r3, r2
 800d9b0:	f8ad 301c 	strh.w	r3, [sp, #28]
 800d9b4:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800d9b8:	f8bd 301e 	ldrh.w	r3, [sp, #30]
 800d9bc:	1a9b      	subs	r3, r3, r2
 800d9be:	f8ad 301e 	strh.w	r3, [sp, #30]
 800d9c2:	6823      	ldr	r3, [r4, #0]
 800d9c4:	4620      	mov	r0, r4
 800d9c6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d9c8:	4629      	mov	r1, r5
 800d9ca:	4798      	blx	r3
 800d9cc:	4b1f      	ldr	r3, [pc, #124]	; (800da4c <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1d0>)
 800d9ce:	f8b4 903c 	ldrh.w	r9, [r4, #60]	; 0x3c
 800d9d2:	681b      	ldr	r3, [r3, #0]
 800d9d4:	f894 1040 	ldrb.w	r1, [r4, #64]	; 0x40
 800d9d8:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800d9da:	eb03 0349 	add.w	r3, r3, r9, lsl #1
 800d9de:	785b      	ldrb	r3, [r3, #1]
 800d9e0:	920b      	str	r2, [sp, #44]	; 0x2c
 800d9e2:	f3c3 0001 	ubfx	r0, r3, #0, #2
 800d9e6:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800d9ea:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800d9ee:	f89d 3090 	ldrb.w	r3, [sp, #144]	; 0x90
 800d9f2:	f88d 102a 	strb.w	r1, [sp, #42]	; 0x2a
 800d9f6:	f88d 3032 	strb.w	r3, [sp, #50]	; 0x32
 800d9fa:	9709      	str	r7, [sp, #36]	; 0x24
 800d9fc:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 800da00:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 800da04:	f88d 8033 	strb.w	r8, [sp, #51]	; 0x33
 800da08:	f88d 8034 	strb.w	r8, [sp, #52]	; 0x34
 800da0c:	f7f4 fe80 	bl	8002710 <_ZN8touchgfx3HAL3lcdEv>
 800da10:	4b0f      	ldr	r3, [pc, #60]	; (800da50 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1d4>)
 800da12:	4604      	mov	r4, r0
 800da14:	4649      	mov	r1, r9
 800da16:	6818      	ldr	r0, [r3, #0]
 800da18:	f7f7 f9e2 	bl	8004de0 <_ZNK8touchgfx5Texts7getTextEt>
 800da1c:	e9cd 6802 	strd	r6, r8, [sp, #8]
 800da20:	e9cd b000 	strd	fp, r0, [sp]
 800da24:	4653      	mov	r3, sl
 800da26:	e895 0006 	ldmia.w	r5, {r1, r2}
 800da2a:	4620      	mov	r0, r4
 800da2c:	f7f7 f98a 	bl	8004d44 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800da30:	b019      	add	sp, #100	; 0x64
 800da32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800da36:	f8da 0000 	ldr.w	r0, [sl]
 800da3a:	699d      	ldr	r5, [r3, #24]
 800da3c:	f7f7 f9d0 	bl	8004de0 <_ZNK8touchgfx5Texts7getTextEt>
 800da40:	4632      	mov	r2, r6
 800da42:	4601      	mov	r1, r0
 800da44:	4638      	mov	r0, r7
 800da46:	47a8      	blx	r5
 800da48:	4605      	mov	r5, r0
 800da4a:	e77a      	b.n	800d942 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xc6>
 800da4c:	20015610 	.word	0x20015610
 800da50:	2001561c 	.word	0x2001561c

0800da54 <_ZN8touchgfx15GraphScrollData5clearEv>:
 800da54:	b510      	push	{r4, lr}
 800da56:	4604      	mov	r4, r0
 800da58:	f7fe fb05 	bl	800c066 <_ZN8touchgfx17AbstractDataGraph5clearEv>
 800da5c:	2300      	movs	r3, #0
 800da5e:	f8a4 314c 	strh.w	r3, [r4, #332]	; 0x14c
 800da62:	bd10      	pop	{r4, pc}

0800da64 <_ZN8touchgfx15GraphScrollData14beforeAddValueEv>:
 800da64:	f9b0 211e 	ldrsh.w	r2, [r0, #286]	; 0x11e
 800da68:	f9b0 311c 	ldrsh.w	r3, [r0, #284]	; 0x11c
 800da6c:	429a      	cmp	r2, r3
 800da6e:	d101      	bne.n	800da74 <_ZN8touchgfx15GraphScrollData14beforeAddValueEv+0x10>
 800da70:	f7fe bd38 	b.w	800c4e4 <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv>
 800da74:	4770      	bx	lr

0800da76 <_ZNK8touchgfx15GraphScrollData18indexToGlobalIndexEs>:
 800da76:	b538      	push	{r3, r4, r5, lr}
 800da78:	f9b0 411c 	ldrsh.w	r4, [r0, #284]	; 0x11c
 800da7c:	f9b0 511e 	ldrsh.w	r5, [r0, #286]	; 0x11e
 800da80:	42a5      	cmp	r5, r4
 800da82:	da04      	bge.n	800da8e <_ZNK8touchgfx15GraphScrollData18indexToGlobalIndexEs+0x18>
 800da84:	6803      	ldr	r3, [r0, #0]
 800da86:	f8d3 3180 	ldr.w	r3, [r3, #384]	; 0x180
 800da8a:	4798      	blx	r3
 800da8c:	bd38      	pop	{r3, r4, r5, pc}
 800da8e:	f8d0 0148 	ldr.w	r0, [r0, #328]	; 0x148
 800da92:	4408      	add	r0, r1
 800da94:	1b00      	subs	r0, r0, r4
 800da96:	e7f9      	b.n	800da8c <_ZNK8touchgfx15GraphScrollData18indexToGlobalIndexEs+0x16>

0800da98 <_ZN8touchgfx15GraphScrollData8addValueEi>:
 800da98:	b570      	push	{r4, r5, r6, lr}
 800da9a:	f9b0 514c 	ldrsh.w	r5, [r0, #332]	; 0x14c
 800da9e:	f9b0 611e 	ldrsh.w	r6, [r0, #286]	; 0x11e
 800daa2:	f9b0 211c 	ldrsh.w	r2, [r0, #284]	; 0x11c
 800daa6:	4604      	mov	r4, r0
 800daa8:	1c6b      	adds	r3, r5, #1
 800daaa:	b21b      	sxth	r3, r3
 800daac:	42ae      	cmp	r6, r5
 800daae:	bf08      	it	eq
 800dab0:	f8a4 311e 	strheq.w	r3, [r4, #286]	; 0x11e
 800dab4:	fb93 f0f2 	sdiv	r0, r3, r2
 800dab8:	fb02 3010 	mls	r0, r2, r0, r3
 800dabc:	f8d4 3144 	ldr.w	r3, [r4, #324]	; 0x144
 800dac0:	f8a4 014c 	strh.w	r0, [r4, #332]	; 0x14c
 800dac4:	4296      	cmp	r6, r2
 800dac6:	f843 1025 	str.w	r1, [r3, r5, lsl #2]
 800daca:	d108      	bne.n	800dade <_ZN8touchgfx15GraphScrollData8addValueEi+0x46>
 800dacc:	f104 0038 	add.w	r0, r4, #56	; 0x38
 800dad0:	f004 fa85 	bl	8011fde <_ZNK8touchgfx8Drawable10invalidateEv>
 800dad4:	4620      	mov	r0, r4
 800dad6:	f7fe fd05 	bl	800c4e4 <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv>
 800dada:	4628      	mov	r0, r5
 800dadc:	bd70      	pop	{r4, r5, r6, pc}
 800dade:	4629      	mov	r1, r5
 800dae0:	4620      	mov	r0, r4
 800dae2:	f7fe fcd7 	bl	800c494 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs>
 800dae6:	e7f8      	b.n	800dada <_ZN8touchgfx15GraphScrollData8addValueEi+0x42>

0800dae8 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 800dae8:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 800daec:	4770      	bx	lr

0800daee <_ZN8touchgfx14AbstractButton13executeActionEv>:
 800daee:	b510      	push	{r4, lr}
 800daf0:	4604      	mov	r4, r0
 800daf2:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800daf4:	b150      	cbz	r0, 800db0c <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800daf6:	6803      	ldr	r3, [r0, #0]
 800daf8:	68db      	ldr	r3, [r3, #12]
 800dafa:	4798      	blx	r3
 800dafc:	b130      	cbz	r0, 800db0c <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800dafe:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800db00:	6803      	ldr	r3, [r0, #0]
 800db02:	4621      	mov	r1, r4
 800db04:	689b      	ldr	r3, [r3, #8]
 800db06:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800db0a:	4718      	bx	r3
 800db0c:	bd10      	pop	{r4, pc}

0800db0e <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 800db0e:	b570      	push	{r4, r5, r6, lr}
 800db10:	790b      	ldrb	r3, [r1, #4]
 800db12:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 800db16:	2b00      	cmp	r3, #0
 800db18:	bf0c      	ite	eq
 800db1a:	2301      	moveq	r3, #1
 800db1c:	2300      	movne	r3, #0
 800db1e:	4604      	mov	r4, r0
 800db20:	460e      	mov	r6, r1
 800db22:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 800db26:	d109      	bne.n	800db3c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 800db28:	b14d      	cbz	r5, 800db3e <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 800db2a:	7933      	ldrb	r3, [r6, #4]
 800db2c:	2b01      	cmp	r3, #1
 800db2e:	d10c      	bne.n	800db4a <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 800db30:	6823      	ldr	r3, [r4, #0]
 800db32:	4620      	mov	r0, r4
 800db34:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800db36:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800db3a:	4718      	bx	r3
 800db3c:	b12d      	cbz	r5, 800db4a <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 800db3e:	6823      	ldr	r3, [r4, #0]
 800db40:	4620      	mov	r0, r4
 800db42:	695b      	ldr	r3, [r3, #20]
 800db44:	4798      	blx	r3
 800db46:	2d00      	cmp	r5, #0
 800db48:	d1ef      	bne.n	800db2a <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 800db4a:	bd70      	pop	{r4, r5, r6, pc}

0800db4c <_ZN8touchgfx12ToggleButtonD1Ev>:
 800db4c:	4770      	bx	lr

0800db4e <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE>:
 800db4e:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800db52:	b133      	cbz	r3, 800db62 <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE+0x14>
 800db54:	790b      	ldrb	r3, [r1, #4]
 800db56:	2b01      	cmp	r3, #1
 800db58:	bf01      	itttt	eq
 800db5a:	8dc3      	ldrheq	r3, [r0, #46]	; 0x2e
 800db5c:	8e02      	ldrheq	r2, [r0, #48]	; 0x30
 800db5e:	85c2      	strheq	r2, [r0, #46]	; 0x2e
 800db60:	8603      	strheq	r3, [r0, #48]	; 0x30
 800db62:	f7ff bfd4 	b.w	800db0e <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>

0800db66 <_ZN8touchgfx12ToggleButton10setBitmapsERKNS_6BitmapES3_>:
 800db66:	8813      	ldrh	r3, [r2, #0]
 800db68:	8683      	strh	r3, [r0, #52]	; 0x34
 800db6a:	f000 bbd0 	b.w	800e30e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>

0800db6e <_ZN8touchgfx12ToggleButtonD0Ev>:
 800db6e:	b510      	push	{r4, lr}
 800db70:	2138      	movs	r1, #56	; 0x38
 800db72:	4604      	mov	r4, r0
 800db74:	f012 fdb8 	bl	80206e8 <_ZdlPvj>
 800db78:	4620      	mov	r0, r4
 800db7a:	bd10      	pop	{r4, pc}

0800db7c <_ZNK8touchgfx6Button17invalidateContentEv>:
 800db7c:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 800db80:	b12a      	cbz	r2, 800db8e <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800db82:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800db86:	b112      	cbz	r2, 800db8e <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800db88:	6803      	ldr	r3, [r0, #0]
 800db8a:	695b      	ldr	r3, [r3, #20]
 800db8c:	4718      	bx	r3
 800db8e:	4770      	bx	lr

0800db90 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 800db90:	2000      	movs	r0, #0
 800db92:	4770      	bx	lr

0800db94 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 800db94:	4b07      	ldr	r3, [pc, #28]	; (800dbb4 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 800db96:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800db98:	881b      	ldrh	r3, [r3, #0]
 800db9a:	4293      	cmp	r3, r2
 800db9c:	bf81      	itttt	hi
 800db9e:	4b06      	ldrhi	r3, [pc, #24]	; (800dbb8 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 800dba0:	681b      	ldrhi	r3, [r3, #0]
 800dba2:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 800dba6:	7858      	ldrbhi	r0, [r3, #1]
 800dba8:	bf8c      	ite	hi
 800dbaa:	f000 0003 	andhi.w	r0, r0, #3
 800dbae:	2000      	movls	r0, #0
 800dbb0:	4770      	bx	lr
 800dbb2:	bf00      	nop
 800dbb4:	20015614 	.word	0x20015614
 800dbb8:	20015610 	.word	0x20015610

0800dbbc <_ZN8touchgfx8TextAreaD1Ev>:
 800dbbc:	4770      	bx	lr
	...

0800dbc0 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 800dbc0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800dbc4:	4b10      	ldr	r3, [pc, #64]	; (800dc08 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 800dbc6:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800dbc8:	881b      	ldrh	r3, [r3, #0]
 800dbca:	428b      	cmp	r3, r1
 800dbcc:	4604      	mov	r4, r0
 800dbce:	d918      	bls.n	800dc02 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 800dbd0:	6803      	ldr	r3, [r0, #0]
 800dbd2:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 800dbd4:	4b0d      	ldr	r3, [pc, #52]	; (800dc0c <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 800dbd6:	6818      	ldr	r0, [r3, #0]
 800dbd8:	f7f7 f902 	bl	8004de0 <_ZNK8touchgfx5Texts7getTextEt>
 800dbdc:	6823      	ldr	r3, [r4, #0]
 800dbde:	4606      	mov	r6, r0
 800dbe0:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800dbe2:	4620      	mov	r0, r4
 800dbe4:	4798      	blx	r3
 800dbe6:	6823      	ldr	r3, [r4, #0]
 800dbe8:	4607      	mov	r7, r0
 800dbea:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800dbee:	4620      	mov	r0, r4
 800dbf0:	4798      	blx	r3
 800dbf2:	463a      	mov	r2, r7
 800dbf4:	4603      	mov	r3, r0
 800dbf6:	4631      	mov	r1, r6
 800dbf8:	4620      	mov	r0, r4
 800dbfa:	46ac      	mov	ip, r5
 800dbfc:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800dc00:	4760      	bx	ip
 800dc02:	2000      	movs	r0, #0
 800dc04:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800dc08:	20015614 	.word	0x20015614
 800dc0c:	2001561c 	.word	0x2001561c

0800dc10 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 800dc10:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800dc14:	4b17      	ldr	r3, [pc, #92]	; (800dc74 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 800dc16:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800dc18:	881b      	ldrh	r3, [r3, #0]
 800dc1a:	428b      	cmp	r3, r1
 800dc1c:	4604      	mov	r4, r0
 800dc1e:	d926      	bls.n	800dc6e <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 800dc20:	4b15      	ldr	r3, [pc, #84]	; (800dc78 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 800dc22:	681b      	ldr	r3, [r3, #0]
 800dc24:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 800dc28:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 800dc2c:	4b13      	ldr	r3, [pc, #76]	; (800dc7c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 800dc2e:	7855      	ldrb	r5, [r2, #1]
 800dc30:	681b      	ldr	r3, [r3, #0]
 800dc32:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 800dc36:	6833      	ldr	r3, [r6, #0]
 800dc38:	69df      	ldr	r7, [r3, #28]
 800dc3a:	4b11      	ldr	r3, [pc, #68]	; (800dc80 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 800dc3c:	6818      	ldr	r0, [r3, #0]
 800dc3e:	f7f7 f8cf 	bl	8004de0 <_ZNK8touchgfx5Texts7getTextEt>
 800dc42:	6823      	ldr	r3, [r4, #0]
 800dc44:	4680      	mov	r8, r0
 800dc46:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800dc48:	4620      	mov	r0, r4
 800dc4a:	4798      	blx	r3
 800dc4c:	6823      	ldr	r3, [r4, #0]
 800dc4e:	4681      	mov	r9, r0
 800dc50:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800dc54:	4620      	mov	r0, r4
 800dc56:	4798      	blx	r3
 800dc58:	f3c5 0581 	ubfx	r5, r5, #2, #2
 800dc5c:	9000      	str	r0, [sp, #0]
 800dc5e:	464b      	mov	r3, r9
 800dc60:	4642      	mov	r2, r8
 800dc62:	4629      	mov	r1, r5
 800dc64:	4630      	mov	r0, r6
 800dc66:	47b8      	blx	r7
 800dc68:	b003      	add	sp, #12
 800dc6a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800dc6e:	2000      	movs	r0, #0
 800dc70:	e7fa      	b.n	800dc68 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 800dc72:	bf00      	nop
 800dc74:	20015614 	.word	0x20015614
 800dc78:	20015610 	.word	0x20015610
 800dc7c:	20015618 	.word	0x20015618
 800dc80:	2001561c 	.word	0x2001561c

0800dc84 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 800dc84:	b40e      	push	{r1, r2, r3}
 800dc86:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800dc8a:	4b2f      	ldr	r3, [pc, #188]	; (800dd48 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 800dc8c:	881a      	ldrh	r2, [r3, #0]
 800dc8e:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 800dc90:	429a      	cmp	r2, r3
 800dc92:	b09d      	sub	sp, #116	; 0x74
 800dc94:	4604      	mov	r4, r0
 800dc96:	d954      	bls.n	800dd42 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 800dc98:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 800dd4c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 800dc9c:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 800dd50 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 800dca0:	aa26      	add	r2, sp, #152	; 0x98
 800dca2:	9202      	str	r2, [sp, #8]
 800dca4:	f8d9 2000 	ldr.w	r2, [r9]
 800dca8:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800dcac:	f8d8 3000 	ldr.w	r3, [r8]
 800dcb0:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800dcb4:	682b      	ldr	r3, [r5, #0]
 800dcb6:	4628      	mov	r0, r5
 800dcb8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800dcba:	4798      	blx	r3
 800dcbc:	b207      	sxth	r7, r0
 800dcbe:	4606      	mov	r6, r0
 800dcc0:	a803      	add	r0, sp, #12
 800dcc2:	f004 fedc 	bl	8012a7e <_ZN8touchgfx12TextProviderC1Ev>
 800dcc6:	682b      	ldr	r3, [r5, #0]
 800dcc8:	4628      	mov	r0, r5
 800dcca:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800dccc:	4798      	blx	r3
 800dcce:	682b      	ldr	r3, [r5, #0]
 800dcd0:	4682      	mov	sl, r0
 800dcd2:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800dcd4:	4628      	mov	r0, r5
 800dcd6:	4798      	blx	r3
 800dcd8:	4653      	mov	r3, sl
 800dcda:	9000      	str	r0, [sp, #0]
 800dcdc:	9a02      	ldr	r2, [sp, #8]
 800dcde:	9925      	ldr	r1, [sp, #148]	; 0x94
 800dce0:	a803      	add	r0, sp, #12
 800dce2:	f004 ff27 	bl	8012b34 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800dce6:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800dce8:	f8d9 3000 	ldr.w	r3, [r9]
 800dcec:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 800dcf0:	8925      	ldrh	r5, [r4, #8]
 800dcf2:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 800dcf6:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 800dcfa:	eba5 050c 	sub.w	r5, r5, ip
 800dcfe:	784a      	ldrb	r2, [r1, #1]
 800dd00:	f8d8 3000 	ldr.w	r3, [r8]
 800dd04:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 800dd08:	b22d      	sxth	r5, r5
 800dd0a:	9500      	str	r5, [sp, #0]
 800dd0c:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800dd10:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800dd14:	a803      	add	r0, sp, #12
 800dd16:	f002 fd21 	bl	801075c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 800dd1a:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 800dd1e:	18b9      	adds	r1, r7, r2
 800dd20:	2900      	cmp	r1, #0
 800dd22:	b203      	sxth	r3, r0
 800dd24:	dd0b      	ble.n	800dd3e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 800dd26:	3b01      	subs	r3, #1
 800dd28:	fb13 f302 	smulbb	r3, r3, r2
 800dd2c:	fb16 3300 	smlabb	r3, r6, r0, r3
 800dd30:	b21f      	sxth	r7, r3
 800dd32:	4638      	mov	r0, r7
 800dd34:	b01d      	add	sp, #116	; 0x74
 800dd36:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800dd3a:	b003      	add	sp, #12
 800dd3c:	4770      	bx	lr
 800dd3e:	2b00      	cmp	r3, #0
 800dd40:	dcf7      	bgt.n	800dd32 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800dd42:	2700      	movs	r7, #0
 800dd44:	e7f5      	b.n	800dd32 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800dd46:	bf00      	nop
 800dd48:	20015614 	.word	0x20015614
 800dd4c:	20015610 	.word	0x20015610
 800dd50:	20015618 	.word	0x20015618

0800dd54 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 800dd54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dd58:	4bbb      	ldr	r3, [pc, #748]	; (800e048 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f4>)
 800dd5a:	460c      	mov	r4, r1
 800dd5c:	881b      	ldrh	r3, [r3, #0]
 800dd5e:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 800dd60:	428b      	cmp	r3, r1
 800dd62:	b0a9      	sub	sp, #164	; 0xa4
 800dd64:	4681      	mov	r9, r0
 800dd66:	d809      	bhi.n	800dd7c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 800dd68:	2300      	movs	r3, #0
 800dd6a:	f04f 32ff 	mov.w	r2, #4294967295
 800dd6e:	e9c0 3200 	strd	r3, r2, [r0]
 800dd72:	6083      	str	r3, [r0, #8]
 800dd74:	4648      	mov	r0, r9
 800dd76:	b029      	add	sp, #164	; 0xa4
 800dd78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dd7c:	f8df b2d0 	ldr.w	fp, [pc, #720]	; 800e050 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 800dd80:	f8df 82d0 	ldr.w	r8, [pc, #720]	; 800e054 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>
 800dd84:	f8db 3000 	ldr.w	r3, [fp]
 800dd88:	f8d8 0000 	ldr.w	r0, [r8]
 800dd8c:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 800dd90:	4bae      	ldr	r3, [pc, #696]	; (800e04c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 800dd92:	681b      	ldr	r3, [r3, #0]
 800dd94:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800dd98:	f7f7 f822 	bl	8004de0 <_ZNK8touchgfx5Texts7getTextEt>
 800dd9c:	682b      	ldr	r3, [r5, #0]
 800dd9e:	4607      	mov	r7, r0
 800dda0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800dda2:	4628      	mov	r0, r5
 800dda4:	4798      	blx	r3
 800dda6:	8ea6      	ldrh	r6, [r4, #52]	; 0x34
 800dda8:	f8cd 800c 	str.w	r8, [sp, #12]
 800ddac:	4430      	add	r0, r6
 800ddae:	f894 6039 	ldrb.w	r6, [r4, #57]	; 0x39
 800ddb2:	b283      	uxth	r3, r0
 800ddb4:	f10d 0a3c 	add.w	sl, sp, #60	; 0x3c
 800ddb8:	9302      	str	r3, [sp, #8]
 800ddba:	4650      	mov	r0, sl
 800ddbc:	2e00      	cmp	r6, #0
 800ddbe:	f040 8091 	bne.w	800dee4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 800ddc2:	f004 fe5c 	bl	8012a7e <_ZN8touchgfx12TextProviderC1Ev>
 800ddc6:	682b      	ldr	r3, [r5, #0]
 800ddc8:	4628      	mov	r0, r5
 800ddca:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800ddcc:	4798      	blx	r3
 800ddce:	682b      	ldr	r3, [r5, #0]
 800ddd0:	9005      	str	r0, [sp, #20]
 800ddd2:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800ddd4:	4628      	mov	r0, r5
 800ddd6:	4798      	blx	r3
 800ddd8:	6823      	ldr	r3, [r4, #0]
 800ddda:	4680      	mov	r8, r0
 800dddc:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800ddde:	4620      	mov	r0, r4
 800dde0:	4798      	blx	r3
 800dde2:	6822      	ldr	r2, [r4, #0]
 800dde4:	9004      	str	r0, [sp, #16]
 800dde6:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 800ddea:	4620      	mov	r0, r4
 800ddec:	4790      	blx	r2
 800ddee:	9905      	ldr	r1, [sp, #20]
 800ddf0:	9b04      	ldr	r3, [sp, #16]
 800ddf2:	9001      	str	r0, [sp, #4]
 800ddf4:	9300      	str	r3, [sp, #0]
 800ddf6:	460a      	mov	r2, r1
 800ddf8:	4643      	mov	r3, r8
 800ddfa:	4639      	mov	r1, r7
 800ddfc:	4650      	mov	r0, sl
 800ddfe:	f004 feae 	bl	8012b5e <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800de02:	4637      	mov	r7, r6
 800de04:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800de06:	f8db 3000 	ldr.w	r3, [fp]
 800de0a:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800de0e:	4629      	mov	r1, r5
 800de10:	785b      	ldrb	r3, [r3, #1]
 800de12:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800de16:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800de1a:	4650      	mov	r0, sl
 800de1c:	f002 f9f0 	bl	8010200 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800de20:	4287      	cmp	r7, r0
 800de22:	bfb8      	it	lt
 800de24:	b207      	sxthlt	r7, r0
 800de26:	3601      	adds	r6, #1
 800de28:	4650      	mov	r0, sl
 800de2a:	b2b6      	uxth	r6, r6
 800de2c:	f004 fe4e 	bl	8012acc <_ZN8touchgfx12TextProvider11endOfStringEv>
 800de30:	2800      	cmp	r0, #0
 800de32:	d0e7      	beq.n	800de04 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xb0>
 800de34:	9b02      	ldr	r3, [sp, #8]
 800de36:	f8b4 8034 	ldrh.w	r8, [r4, #52]	; 0x34
 800de3a:	fb13 f606 	smulbb	r6, r3, r6
 800de3e:	eba6 0608 	sub.w	r6, r6, r8
 800de42:	b2b6      	uxth	r6, r6
 800de44:	fa0f f886 	sxth.w	r8, r6
 800de48:	f1b8 0f00 	cmp.w	r8, #0
 800de4c:	dd06      	ble.n	800de5c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x108>
 800de4e:	682b      	ldr	r3, [r5, #0]
 800de50:	4628      	mov	r0, r5
 800de52:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800de54:	4798      	blx	r3
 800de56:	4430      	add	r0, r6
 800de58:	fa0f f880 	sxth.w	r8, r0
 800de5c:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800de60:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800de64:	6823      	ldr	r3, [r4, #0]
 800de66:	bf08      	it	eq
 800de68:	f9b4 6008 	ldrsheq.w	r6, [r4, #8]
 800de6c:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800de6e:	bf18      	it	ne
 800de70:	f9b4 600a 	ldrshne.w	r6, [r4, #10]
 800de74:	4620      	mov	r0, r4
 800de76:	4798      	blx	r3
 800de78:	2801      	cmp	r0, #1
 800de7a:	b2ba      	uxth	r2, r7
 800de7c:	f000 80d1 	beq.w	800e022 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ce>
 800de80:	2802      	cmp	r0, #2
 800de82:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 800de86:	f000 80d2 	beq.w	800e02e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2da>
 800de8a:	b21e      	sxth	r6, r3
 800de8c:	7a29      	ldrb	r1, [r5, #8]
 800de8e:	7a6d      	ldrb	r5, [r5, #9]
 800de90:	1a76      	subs	r6, r6, r1
 800de92:	4429      	add	r1, r5
 800de94:	440a      	add	r2, r1
 800de96:	f894 1038 	ldrb.w	r1, [r4, #56]	; 0x38
 800de9a:	b2b3      	uxth	r3, r6
 800de9c:	b292      	uxth	r2, r2
 800de9e:	2902      	cmp	r1, #2
 800dea0:	b21f      	sxth	r7, r3
 800dea2:	b216      	sxth	r6, r2
 800dea4:	f000 80c6 	beq.w	800e034 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2e0>
 800dea8:	2903      	cmp	r1, #3
 800deaa:	f000 80d5 	beq.w	800e058 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>
 800deae:	2901      	cmp	r1, #1
 800deb0:	f040 80db 	bne.w	800e06a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x316>
 800deb4:	8923      	ldrh	r3, [r4, #8]
 800deb6:	4632      	mov	r2, r6
 800deb8:	eba3 0308 	sub.w	r3, r3, r8
 800debc:	4646      	mov	r6, r8
 800debe:	463d      	mov	r5, r7
 800dec0:	4690      	mov	r8, r2
 800dec2:	b21f      	sxth	r7, r3
 800dec4:	9b03      	ldr	r3, [sp, #12]
 800dec6:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800dec8:	6818      	ldr	r0, [r3, #0]
 800deca:	f7f6 ff89 	bl	8004de0 <_ZNK8touchgfx5Texts7getTextEt>
 800dece:	f8a9 7000 	strh.w	r7, [r9]
 800ded2:	f8a9 5002 	strh.w	r5, [r9, #2]
 800ded6:	f8a9 6004 	strh.w	r6, [r9, #4]
 800deda:	f8a9 8006 	strh.w	r8, [r9, #6]
 800dede:	f8c9 0008 	str.w	r0, [r9, #8]
 800dee2:	e747      	b.n	800dd74 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 800dee4:	f004 fdcb 	bl	8012a7e <_ZN8touchgfx12TextProviderC1Ev>
 800dee8:	682b      	ldr	r3, [r5, #0]
 800deea:	4628      	mov	r0, r5
 800deec:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800deee:	4798      	blx	r3
 800def0:	682b      	ldr	r3, [r5, #0]
 800def2:	4606      	mov	r6, r0
 800def4:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800def6:	4628      	mov	r0, r5
 800def8:	4798      	blx	r3
 800defa:	6823      	ldr	r3, [r4, #0]
 800defc:	4680      	mov	r8, r0
 800defe:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800df00:	4620      	mov	r0, r4
 800df02:	4798      	blx	r3
 800df04:	6822      	ldr	r2, [r4, #0]
 800df06:	9004      	str	r0, [sp, #16]
 800df08:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 800df0c:	4620      	mov	r0, r4
 800df0e:	4790      	blx	r2
 800df10:	9b04      	ldr	r3, [sp, #16]
 800df12:	9001      	str	r0, [sp, #4]
 800df14:	4632      	mov	r2, r6
 800df16:	9300      	str	r3, [sp, #0]
 800df18:	4639      	mov	r1, r7
 800df1a:	4643      	mov	r3, r8
 800df1c:	4650      	mov	r0, sl
 800df1e:	f004 fe1e 	bl	8012b5e <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800df22:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800df26:	f9b4 8008 	ldrsh.w	r8, [r4, #8]
 800df2a:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800df2c:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 800df30:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800df34:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800df38:	bf0a      	itet	eq
 800df3a:	4642      	moveq	r2, r8
 800df3c:	461a      	movne	r2, r3
 800df3e:	4698      	moveq	r8, r3
 800df40:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 800df44:	1ad2      	subs	r2, r2, r3
 800df46:	f8db 3000 	ldr.w	r3, [fp]
 800df4a:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800df4e:	7859      	ldrb	r1, [r3, #1]
 800df50:	f8cd a020 	str.w	sl, [sp, #32]
 800df54:	2300      	movs	r3, #0
 800df56:	f3c1 0181 	ubfx	r1, r1, #2, #2
 800df5a:	f8ad 301c 	strh.w	r3, [sp, #28]
 800df5e:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 800df62:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 800df66:	950a      	str	r5, [sp, #40]	; 0x28
 800df68:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800df6c:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800df70:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 800df74:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 800df78:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 800df7c:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800df80:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 800df84:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 800df88:	b350      	cbz	r0, 800dfe0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28c>
 800df8a:	682b      	ldr	r3, [r5, #0]
 800df8c:	4628      	mov	r0, r5
 800df8e:	695b      	ldr	r3, [r3, #20]
 800df90:	4798      	blx	r3
 800df92:	4607      	mov	r7, r0
 800df94:	b320      	cbz	r0, 800dfe0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28c>
 800df96:	980a      	ldr	r0, [sp, #40]	; 0x28
 800df98:	6803      	ldr	r3, [r0, #0]
 800df9a:	4639      	mov	r1, r7
 800df9c:	68db      	ldr	r3, [r3, #12]
 800df9e:	4798      	blx	r3
 800dfa0:	4606      	mov	r6, r0
 800dfa2:	b1e8      	cbz	r0, 800dfe0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28c>
 800dfa4:	7b43      	ldrb	r3, [r0, #13]
 800dfa6:	7a82      	ldrb	r2, [r0, #10]
 800dfa8:	005b      	lsls	r3, r3, #1
 800dfaa:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800dfae:	4313      	orrs	r3, r2
 800dfb0:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 800dfb4:	f89d 3025 	ldrb.w	r3, [sp, #37]	; 0x25
 800dfb8:	2b04      	cmp	r3, #4
 800dfba:	d111      	bne.n	800dfe0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28c>
 800dfbc:	980a      	ldr	r0, [sp, #40]	; 0x28
 800dfbe:	6803      	ldr	r3, [r0, #0]
 800dfc0:	4632      	mov	r2, r6
 800dfc2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800dfc4:	4639      	mov	r1, r7
 800dfc6:	4798      	blx	r3
 800dfc8:	7b73      	ldrb	r3, [r6, #13]
 800dfca:	005b      	lsls	r3, r3, #1
 800dfcc:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800dfd0:	7ab3      	ldrb	r3, [r6, #10]
 800dfd2:	4313      	orrs	r3, r2
 800dfd4:	4418      	add	r0, r3
 800dfd6:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800dfda:	4418      	add	r0, r3
 800dfdc:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
 800dfe0:	f9bd a008 	ldrsh.w	sl, [sp, #8]
 800dfe4:	2600      	movs	r6, #0
 800dfe6:	ea4f 0b4a 	mov.w	fp, sl, lsl #1
 800dfea:	4637      	mov	r7, r6
 800dfec:	45c3      	cmp	fp, r8
 800dfee:	bfd4      	ite	le
 800dff0:	2100      	movle	r1, #0
 800dff2:	2101      	movgt	r1, #1
 800dff4:	a807      	add	r0, sp, #28
 800dff6:	f002 fae2 	bl	80105be <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800dffa:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 800dffe:	429f      	cmp	r7, r3
 800e000:	bfb8      	it	lt
 800e002:	b21f      	sxthlt	r7, r3
 800e004:	9b02      	ldr	r3, [sp, #8]
 800e006:	eba8 0803 	sub.w	r8, r8, r3
 800e00a:	f8bd 301c 	ldrh.w	r3, [sp, #28]
 800e00e:	3601      	adds	r6, #1
 800e010:	b2b6      	uxth	r6, r6
 800e012:	fa0f f888 	sxth.w	r8, r8
 800e016:	2b00      	cmp	r3, #0
 800e018:	f43f af0c 	beq.w	800de34 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xe0>
 800e01c:	45c2      	cmp	sl, r8
 800e01e:	dbe5      	blt.n	800dfec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x298>
 800e020:	e708      	b.n	800de34 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xe0>
 800e022:	1bf6      	subs	r6, r6, r7
 800e024:	2702      	movs	r7, #2
 800e026:	fb96 f6f7 	sdiv	r6, r6, r7
 800e02a:	b236      	sxth	r6, r6
 800e02c:	e72e      	b.n	800de8c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x138>
 800e02e:	4413      	add	r3, r2
 800e030:	1af6      	subs	r6, r6, r3
 800e032:	e7fa      	b.n	800e02a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2d6>
 800e034:	8925      	ldrh	r5, [r4, #8]
 800e036:	1aad      	subs	r5, r5, r2
 800e038:	1aed      	subs	r5, r5, r3
 800e03a:	b22f      	sxth	r7, r5
 800e03c:	8965      	ldrh	r5, [r4, #10]
 800e03e:	eba5 0508 	sub.w	r5, r5, r8
 800e042:	b22d      	sxth	r5, r5
 800e044:	e73e      	b.n	800dec4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x170>
 800e046:	bf00      	nop
 800e048:	20015614 	.word	0x20015614
 800e04c:	20015618 	.word	0x20015618
 800e050:	20015610 	.word	0x20015610
 800e054:	2001561c 	.word	0x2001561c
 800e058:	8965      	ldrh	r5, [r4, #10]
 800e05a:	1aad      	subs	r5, r5, r2
 800e05c:	1aed      	subs	r5, r5, r3
 800e05e:	4633      	mov	r3, r6
 800e060:	b22d      	sxth	r5, r5
 800e062:	4646      	mov	r6, r8
 800e064:	2700      	movs	r7, #0
 800e066:	4698      	mov	r8, r3
 800e068:	e72c      	b.n	800dec4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x170>
 800e06a:	2500      	movs	r5, #0
 800e06c:	e72a      	b.n	800dec4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x170>
 800e06e:	bf00      	nop

0800e070 <_ZN8touchgfx8TextAreaD0Ev>:
 800e070:	b510      	push	{r4, lr}
 800e072:	2148      	movs	r1, #72	; 0x48
 800e074:	4604      	mov	r4, r0
 800e076:	f012 fb37 	bl	80206e8 <_ZdlPvj>
 800e07a:	4620      	mov	r0, r4
 800e07c:	bd10      	pop	{r4, pc}
	...

0800e080 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 800e080:	b513      	push	{r0, r1, r4, lr}
 800e082:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 800e086:	4604      	mov	r4, r0
 800e088:	b1fb      	cbz	r3, 800e0ca <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800e08a:	4b16      	ldr	r3, [pc, #88]	; (800e0e4 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 800e08c:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800e08e:	881b      	ldrh	r3, [r3, #0]
 800e090:	428b      	cmp	r3, r1
 800e092:	d91a      	bls.n	800e0ca <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800e094:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800e098:	2b00      	cmp	r3, #0
 800e09a:	dd16      	ble.n	800e0ca <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800e09c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800e0a0:	2b00      	cmp	r3, #0
 800e0a2:	dd12      	ble.n	800e0ca <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800e0a4:	4b10      	ldr	r3, [pc, #64]	; (800e0e8 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 800e0a6:	6818      	ldr	r0, [r3, #0]
 800e0a8:	f7f6 fe9a 	bl	8004de0 <_ZNK8touchgfx5Texts7getTextEt>
 800e0ac:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 800e0b0:	6822      	ldr	r2, [r4, #0]
 800e0b2:	2b00      	cmp	r3, #0
 800e0b4:	db06      	blt.n	800e0c4 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 800e0b6:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800e0ba:	2b00      	cmp	r3, #0
 800e0bc:	db02      	blt.n	800e0c4 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 800e0be:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800e0c0:	4298      	cmp	r0, r3
 800e0c2:	d004      	beq.n	800e0ce <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 800e0c4:	6953      	ldr	r3, [r2, #20]
 800e0c6:	4620      	mov	r0, r4
 800e0c8:	4798      	blx	r3
 800e0ca:	b002      	add	sp, #8
 800e0cc:	bd10      	pop	{r4, pc}
 800e0ce:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 800e0d2:	c903      	ldmia	r1, {r0, r1}
 800e0d4:	466b      	mov	r3, sp
 800e0d6:	e883 0003 	stmia.w	r3, {r0, r1}
 800e0da:	6912      	ldr	r2, [r2, #16]
 800e0dc:	4619      	mov	r1, r3
 800e0de:	4620      	mov	r0, r4
 800e0e0:	4790      	blx	r2
 800e0e2:	e7f2      	b.n	800e0ca <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800e0e4:	20015614 	.word	0x20015614
 800e0e8:	2001561c 	.word	0x2001561c

0800e0ec <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 800e0ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e0f0:	4b44      	ldr	r3, [pc, #272]	; (800e204 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 800e0f2:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800e0f4:	881b      	ldrh	r3, [r3, #0]
 800e0f6:	4293      	cmp	r3, r2
 800e0f8:	b08e      	sub	sp, #56	; 0x38
 800e0fa:	4604      	mov	r4, r0
 800e0fc:	d97e      	bls.n	800e1fc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800e0fe:	6808      	ldr	r0, [r1, #0]
 800e100:	4d41      	ldr	r5, [pc, #260]	; (800e208 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 800e102:	6849      	ldr	r1, [r1, #4]
 800e104:	ab05      	add	r3, sp, #20
 800e106:	c303      	stmia	r3!, {r0, r1}
 800e108:	4611      	mov	r1, r2
 800e10a:	6828      	ldr	r0, [r5, #0]
 800e10c:	f7f6 fe68 	bl	8004de0 <_ZNK8touchgfx5Texts7getTextEt>
 800e110:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 800e114:	2b00      	cmp	r3, #0
 800e116:	db11      	blt.n	800e13c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800e118:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800e11c:	2b00      	cmp	r3, #0
 800e11e:	db0d      	blt.n	800e13c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800e120:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800e122:	4298      	cmp	r0, r3
 800e124:	d10a      	bne.n	800e13c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800e126:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 800e12a:	e892 0003 	ldmia.w	r2, {r0, r1}
 800e12e:	ab09      	add	r3, sp, #36	; 0x24
 800e130:	e883 0003 	stmia.w	r3, {r0, r1}
 800e134:	4619      	mov	r1, r3
 800e136:	a805      	add	r0, sp, #20
 800e138:	f7fc fe28 	bl	800ad8c <_ZN8touchgfx4RectaNERKS0_>
 800e13c:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800e140:	2b00      	cmp	r3, #0
 800e142:	dd5b      	ble.n	800e1fc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800e144:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800e148:	2b00      	cmp	r3, #0
 800e14a:	dd57      	ble.n	800e1fc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800e14c:	4f2f      	ldr	r7, [pc, #188]	; (800e20c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 800e14e:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800e150:	683b      	ldr	r3, [r7, #0]
 800e152:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800e156:	4b2e      	ldr	r3, [pc, #184]	; (800e210 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 800e158:	681b      	ldr	r3, [r3, #0]
 800e15a:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 800e15e:	2e00      	cmp	r6, #0
 800e160:	d04c      	beq.n	800e1fc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800e162:	6823      	ldr	r3, [r4, #0]
 800e164:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
 800e168:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800e16a:	4620      	mov	r0, r4
 800e16c:	4798      	blx	r3
 800e16e:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800e170:	683b      	ldr	r3, [r7, #0]
 800e172:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
 800e176:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
 800e17a:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
 800e17e:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800e180:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800e184:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 800e188:	785b      	ldrb	r3, [r3, #1]
 800e18a:	9609      	str	r6, [sp, #36]	; 0x24
 800e18c:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800e190:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800e194:	4b1f      	ldr	r3, [pc, #124]	; (800e214 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 800e196:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 800e19a:	681b      	ldr	r3, [r3, #0]
 800e19c:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
 800e1a0:	910b      	str	r1, [sp, #44]	; 0x2c
 800e1a2:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
 800e1a6:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
 800e1aa:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
 800e1ae:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
 800e1b2:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800e1b6:	b10a      	cbz	r2, 800e1bc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 800e1b8:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 800e1ba:	b906      	cbnz	r6, 800e1be <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 800e1bc:	689e      	ldr	r6, [r3, #8]
 800e1be:	af07      	add	r7, sp, #28
 800e1c0:	4621      	mov	r1, r4
 800e1c2:	4638      	mov	r0, r7
 800e1c4:	f003 ffa6 	bl	8012114 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e1c8:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800e1ca:	6828      	ldr	r0, [r5, #0]
 800e1cc:	f7f6 fe08 	bl	8004de0 <_ZNK8touchgfx5Texts7getTextEt>
 800e1d0:	6823      	ldr	r3, [r4, #0]
 800e1d2:	4605      	mov	r5, r0
 800e1d4:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800e1d6:	4620      	mov	r0, r4
 800e1d8:	4798      	blx	r3
 800e1da:	6823      	ldr	r3, [r4, #0]
 800e1dc:	4680      	mov	r8, r0
 800e1de:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800e1e2:	4620      	mov	r0, r4
 800e1e4:	4798      	blx	r3
 800e1e6:	e9cd 8002 	strd	r8, r0, [sp, #8]
 800e1ea:	ab09      	add	r3, sp, #36	; 0x24
 800e1ec:	9300      	str	r3, [sp, #0]
 800e1ee:	9501      	str	r5, [sp, #4]
 800e1f0:	ab05      	add	r3, sp, #20
 800e1f2:	e897 0006 	ldmia.w	r7, {r1, r2}
 800e1f6:	4630      	mov	r0, r6
 800e1f8:	f7f6 fda4 	bl	8004d44 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800e1fc:	b00e      	add	sp, #56	; 0x38
 800e1fe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e202:	bf00      	nop
 800e204:	20015614 	.word	0x20015614
 800e208:	2001561c 	.word	0x2001561c
 800e20c:	20015610 	.word	0x20015610
 800e210:	20015618 	.word	0x20015618
 800e214:	200155b8 	.word	0x200155b8

0800e218 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 800e218:	b538      	push	{r3, r4, r5, lr}
 800e21a:	4b0e      	ldr	r3, [pc, #56]	; (800e254 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 800e21c:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800e21e:	881b      	ldrh	r3, [r3, #0]
 800e220:	429a      	cmp	r2, r3
 800e222:	4604      	mov	r4, r0
 800e224:	d214      	bcs.n	800e250 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 800e226:	6803      	ldr	r3, [r0, #0]
 800e228:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800e22a:	4798      	blx	r3
 800e22c:	6823      	ldr	r3, [r4, #0]
 800e22e:	4605      	mov	r5, r0
 800e230:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800e232:	4620      	mov	r0, r4
 800e234:	4798      	blx	r3
 800e236:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800e23a:	b22d      	sxth	r5, r5
 800e23c:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800e240:	4601      	mov	r1, r0
 800e242:	bf06      	itte	eq
 800e244:	4602      	moveq	r2, r0
 800e246:	4629      	moveq	r1, r5
 800e248:	462a      	movne	r2, r5
 800e24a:	4620      	mov	r0, r4
 800e24c:	f7fc fb45 	bl	800a8da <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800e250:	bd38      	pop	{r3, r4, r5, pc}
 800e252:	bf00      	nop
 800e254:	20015614 	.word	0x20015614

0800e258 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 800e258:	b530      	push	{r4, r5, lr}
 800e25a:	888b      	ldrh	r3, [r1, #4]
 800e25c:	8583      	strh	r3, [r0, #44]	; 0x2c
 800e25e:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800e262:	b085      	sub	sp, #20
 800e264:	4604      	mov	r4, r0
 800e266:	b923      	cbnz	r3, 800e272 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800e268:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800e26c:	b90b      	cbnz	r3, 800e272 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800e26e:	f7ff ffd3 	bl	800e218 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 800e272:	6823      	ldr	r3, [r4, #0]
 800e274:	466d      	mov	r5, sp
 800e276:	4621      	mov	r1, r4
 800e278:	4628      	mov	r0, r5
 800e27a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800e27e:	4798      	blx	r3
 800e280:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800e284:	343c      	adds	r4, #60	; 0x3c
 800e286:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800e28a:	b005      	add	sp, #20
 800e28c:	bd30      	pop	{r4, r5, pc}

0800e28e <_ZNK8touchgfx3Box12getSolidRectEv>:
 800e28e:	2300      	movs	r3, #0
 800e290:	8083      	strh	r3, [r0, #4]
 800e292:	80c3      	strh	r3, [r0, #6]
 800e294:	8003      	strh	r3, [r0, #0]
 800e296:	8043      	strh	r3, [r0, #2]
 800e298:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 800e29c:	2bff      	cmp	r3, #255	; 0xff
 800e29e:	bf01      	itttt	eq
 800e2a0:	890b      	ldrheq	r3, [r1, #8]
 800e2a2:	8083      	strheq	r3, [r0, #4]
 800e2a4:	894b      	ldrheq	r3, [r1, #10]
 800e2a6:	80c3      	strheq	r3, [r0, #6]
 800e2a8:	4770      	bx	lr
	...

0800e2ac <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800e2ac:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e2ae:	4604      	mov	r4, r0
 800e2b0:	6808      	ldr	r0, [r1, #0]
 800e2b2:	6849      	ldr	r1, [r1, #4]
 800e2b4:	466b      	mov	r3, sp
 800e2b6:	c303      	stmia	r3!, {r0, r1}
 800e2b8:	6823      	ldr	r3, [r4, #0]
 800e2ba:	4669      	mov	r1, sp
 800e2bc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e2be:	4620      	mov	r0, r4
 800e2c0:	4798      	blx	r3
 800e2c2:	4b08      	ldr	r3, [pc, #32]	; (800e2e4 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800e2c4:	681b      	ldr	r3, [r3, #0]
 800e2c6:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800e2ca:	b10a      	cbz	r2, 800e2d0 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800e2cc:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800e2ce:	b900      	cbnz	r0, 800e2d2 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800e2d0:	6898      	ldr	r0, [r3, #8]
 800e2d2:	6803      	ldr	r3, [r0, #0]
 800e2d4:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800e2d6:	6a1d      	ldr	r5, [r3, #32]
 800e2d8:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800e2dc:	4669      	mov	r1, sp
 800e2de:	47a8      	blx	r5
 800e2e0:	b003      	add	sp, #12
 800e2e2:	bd30      	pop	{r4, r5, pc}
 800e2e4:	200155b8 	.word	0x200155b8

0800e2e8 <_ZN8touchgfx3BoxD1Ev>:
 800e2e8:	4770      	bx	lr

0800e2ea <_ZN8touchgfx3BoxD0Ev>:
 800e2ea:	b510      	push	{r4, lr}
 800e2ec:	212c      	movs	r1, #44	; 0x2c
 800e2ee:	4604      	mov	r4, r0
 800e2f0:	f012 f9fa 	bl	80206e8 <_ZdlPvj>
 800e2f4:	4620      	mov	r0, r4
 800e2f6:	bd10      	pop	{r4, pc}

0800e2f8 <_ZNK8touchgfx3Box17invalidateContentEv>:
 800e2f8:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 800e2fc:	b12a      	cbz	r2, 800e30a <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800e2fe:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800e302:	b112      	cbz	r2, 800e30a <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800e304:	6803      	ldr	r3, [r0, #0]
 800e306:	695b      	ldr	r3, [r3, #20]
 800e308:	4718      	bx	r3
 800e30a:	4770      	bx	lr

0800e30c <_ZN8touchgfx6ButtonD1Ev>:
 800e30c:	4770      	bx	lr

0800e30e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 800e30e:	b570      	push	{r4, r5, r6, lr}
 800e310:	880b      	ldrh	r3, [r1, #0]
 800e312:	85c3      	strh	r3, [r0, #46]	; 0x2e
 800e314:	4605      	mov	r5, r0
 800e316:	8813      	ldrh	r3, [r2, #0]
 800e318:	f825 3f30 	strh.w	r3, [r5, #48]!
 800e31c:	4604      	mov	r4, r0
 800e31e:	4628      	mov	r0, r5
 800e320:	f006 f8f6 	bl	8014510 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800e324:	4606      	mov	r6, r0
 800e326:	4628      	mov	r0, r5
 800e328:	f006 f926 	bl	8014578 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800e32c:	6823      	ldr	r3, [r4, #0]
 800e32e:	4605      	mov	r5, r0
 800e330:	4631      	mov	r1, r6
 800e332:	4620      	mov	r0, r4
 800e334:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800e336:	4798      	blx	r3
 800e338:	6823      	ldr	r3, [r4, #0]
 800e33a:	4629      	mov	r1, r5
 800e33c:	4620      	mov	r0, r4
 800e33e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800e340:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e344:	4718      	bx	r3

0800e346 <_ZN8touchgfx6ButtonD0Ev>:
 800e346:	b510      	push	{r4, lr}
 800e348:	2134      	movs	r1, #52	; 0x34
 800e34a:	4604      	mov	r4, r0
 800e34c:	f012 f9cc 	bl	80206e8 <_ZdlPvj>
 800e350:	4620      	mov	r0, r4
 800e352:	bd10      	pop	{r4, pc}

0800e354 <_ZNK8touchgfx6Button12getSolidRectEv>:
 800e354:	b510      	push	{r4, lr}
 800e356:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 800e35a:	2bff      	cmp	r3, #255	; 0xff
 800e35c:	4604      	mov	r4, r0
 800e35e:	d006      	beq.n	800e36e <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 800e360:	2300      	movs	r3, #0
 800e362:	8003      	strh	r3, [r0, #0]
 800e364:	8043      	strh	r3, [r0, #2]
 800e366:	8083      	strh	r3, [r0, #4]
 800e368:	80c3      	strh	r3, [r0, #6]
 800e36a:	4620      	mov	r0, r4
 800e36c:	bd10      	pop	{r4, pc}
 800e36e:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 800e372:	b11b      	cbz	r3, 800e37c <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 800e374:	3130      	adds	r1, #48	; 0x30
 800e376:	f006 f933 	bl	80145e0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800e37a:	e7f6      	b.n	800e36a <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 800e37c:	312e      	adds	r1, #46	; 0x2e
 800e37e:	e7fa      	b.n	800e376 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>

0800e380 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 800e380:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e384:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800e388:	b08a      	sub	sp, #40	; 0x28
 800e38a:	4604      	mov	r4, r0
 800e38c:	4688      	mov	r8, r1
 800e38e:	2b00      	cmp	r3, #0
 800e390:	d066      	beq.n	800e460 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 800e392:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800e394:	f8ad 3014 	strh.w	r3, [sp, #20]
 800e398:	a805      	add	r0, sp, #20
 800e39a:	f006 f8b9 	bl	8014510 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800e39e:	4607      	mov	r7, r0
 800e3a0:	a805      	add	r0, sp, #20
 800e3a2:	f006 f8e9 	bl	8014578 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800e3a6:	f9b8 6000 	ldrsh.w	r6, [r8]
 800e3aa:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 800e3ae:	4432      	add	r2, r6
 800e3b0:	b292      	uxth	r2, r2
 800e3b2:	2300      	movs	r3, #0
 800e3b4:	fa0f fc82 	sxth.w	ip, r2
 800e3b8:	459c      	cmp	ip, r3
 800e3ba:	9306      	str	r3, [sp, #24]
 800e3bc:	dd52      	ble.n	800e464 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800e3be:	42b7      	cmp	r7, r6
 800e3c0:	dd50      	ble.n	800e464 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800e3c2:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 800e3c6:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 800e3ca:	442b      	add	r3, r5
 800e3cc:	b29b      	uxth	r3, r3
 800e3ce:	b219      	sxth	r1, r3
 800e3d0:	2900      	cmp	r1, #0
 800e3d2:	dd47      	ble.n	800e464 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800e3d4:	42a8      	cmp	r0, r5
 800e3d6:	dd45      	ble.n	800e464 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800e3d8:	4567      	cmp	r7, ip
 800e3da:	bfb8      	it	lt
 800e3dc:	b2ba      	uxthlt	r2, r7
 800e3de:	4288      	cmp	r0, r1
 800e3e0:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 800e3e4:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 800e3e8:	bfb8      	it	lt
 800e3ea:	b283      	uxthlt	r3, r0
 800e3ec:	1b92      	subs	r2, r2, r6
 800e3ee:	1b5b      	subs	r3, r3, r5
 800e3f0:	f8ad 201c 	strh.w	r2, [sp, #28]
 800e3f4:	f8ad 301e 	strh.w	r3, [sp, #30]
 800e3f8:	f8ad 6018 	strh.w	r6, [sp, #24]
 800e3fc:	f8ad 501a 	strh.w	r5, [sp, #26]
 800e400:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800e404:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800e408:	429a      	cmp	r2, r3
 800e40a:	d026      	beq.n	800e45a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800e40c:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800e410:	2b00      	cmp	r3, #0
 800e412:	dd22      	ble.n	800e45a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800e414:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800e418:	2b00      	cmp	r3, #0
 800e41a:	dd1e      	ble.n	800e45a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800e41c:	2300      	movs	r3, #0
 800e41e:	e9cd 3308 	strd	r3, r3, [sp, #32]
 800e422:	6823      	ldr	r3, [r4, #0]
 800e424:	a908      	add	r1, sp, #32
 800e426:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e428:	4620      	mov	r0, r4
 800e42a:	4798      	blx	r3
 800e42c:	4b0f      	ldr	r3, [pc, #60]	; (800e46c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 800e42e:	681b      	ldr	r3, [r3, #0]
 800e430:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800e434:	b10a      	cbz	r2, 800e43a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 800e436:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800e438:	b900      	cbnz	r0, 800e43c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 800e43a:	6898      	ldr	r0, [r3, #8]
 800e43c:	6801      	ldr	r1, [r0, #0]
 800e43e:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800e442:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 800e446:	2501      	movs	r5, #1
 800e448:	9502      	str	r5, [sp, #8]
 800e44a:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 800e44e:	9401      	str	r4, [sp, #4]
 800e450:	ac06      	add	r4, sp, #24
 800e452:	9400      	str	r4, [sp, #0]
 800e454:	688c      	ldr	r4, [r1, #8]
 800e456:	a905      	add	r1, sp, #20
 800e458:	47a0      	blx	r4
 800e45a:	b00a      	add	sp, #40	; 0x28
 800e45c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e460:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800e462:	e797      	b.n	800e394 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 800e464:	2300      	movs	r3, #0
 800e466:	9307      	str	r3, [sp, #28]
 800e468:	e7ca      	b.n	800e400 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 800e46a:	bf00      	nop
 800e46c:	200155b8 	.word	0x200155b8

0800e470 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 800e470:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e474:	4b2f      	ldr	r3, [pc, #188]	; (800e534 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 800e476:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800e478:	881b      	ldrh	r3, [r3, #0]
 800e47a:	4293      	cmp	r3, r2
 800e47c:	b08d      	sub	sp, #52	; 0x34
 800e47e:	4604      	mov	r4, r0
 800e480:	460f      	mov	r7, r1
 800e482:	d954      	bls.n	800e52e <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 800e484:	4b2c      	ldr	r3, [pc, #176]	; (800e538 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 800e486:	6819      	ldr	r1, [r3, #0]
 800e488:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 800e48c:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 800e490:	4a2a      	ldr	r2, [pc, #168]	; (800e53c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 800e492:	6812      	ldr	r2, [r2, #0]
 800e494:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 800e498:	2900      	cmp	r1, #0
 800e49a:	d048      	beq.n	800e52e <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 800e49c:	785a      	ldrb	r2, [r3, #1]
 800e49e:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 800e4a2:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 800e4a6:	4b26      	ldr	r3, [pc, #152]	; (800e540 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 800e4a8:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
 800e4ac:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 800e4b0:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 800e4b4:	6b26      	ldr	r6, [r4, #48]	; 0x30
 800e4b6:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
 800e4ba:	9107      	str	r1, [sp, #28]
 800e4bc:	f3c2 0801 	ubfx	r8, r2, #0, #2
 800e4c0:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800e4c4:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
 800e4c8:	681a      	ldr	r2, [r3, #0]
 800e4ca:	f88d 8020 	strb.w	r8, [sp, #32]
 800e4ce:	f892 3076 	ldrb.w	r3, [r2, #118]	; 0x76
 800e4d2:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 800e4d6:	9609      	str	r6, [sp, #36]	; 0x24
 800e4d8:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 800e4dc:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
 800e4e0:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
 800e4e4:	b10b      	cbz	r3, 800e4ea <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 800e4e6:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
 800e4e8:	b905      	cbnz	r5, 800e4ec <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 800e4ea:	6895      	ldr	r5, [r2, #8]
 800e4ec:	ae05      	add	r6, sp, #20
 800e4ee:	4621      	mov	r1, r4
 800e4f0:	4630      	mov	r0, r6
 800e4f2:	f003 fe0f 	bl	8012114 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e4f6:	4b13      	ldr	r3, [pc, #76]	; (800e544 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 800e4f8:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800e4fa:	6818      	ldr	r0, [r3, #0]
 800e4fc:	f7f6 fc70 	bl	8004de0 <_ZNK8touchgfx5Texts7getTextEt>
 800e500:	6823      	ldr	r3, [r4, #0]
 800e502:	4680      	mov	r8, r0
 800e504:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800e506:	4620      	mov	r0, r4
 800e508:	4798      	blx	r3
 800e50a:	6823      	ldr	r3, [r4, #0]
 800e50c:	4681      	mov	r9, r0
 800e50e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800e512:	4620      	mov	r0, r4
 800e514:	4798      	blx	r3
 800e516:	e9cd 9002 	strd	r9, r0, [sp, #8]
 800e51a:	ab07      	add	r3, sp, #28
 800e51c:	9300      	str	r3, [sp, #0]
 800e51e:	f8cd 8004 	str.w	r8, [sp, #4]
 800e522:	463b      	mov	r3, r7
 800e524:	e896 0006 	ldmia.w	r6, {r1, r2}
 800e528:	4628      	mov	r0, r5
 800e52a:	f7f6 fc0b 	bl	8004d44 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800e52e:	b00d      	add	sp, #52	; 0x34
 800e530:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e534:	20015614 	.word	0x20015614
 800e538:	20015610 	.word	0x20015610
 800e53c:	20015618 	.word	0x20015618
 800e540:	200155b8 	.word	0x200155b8
 800e544:	2001561c 	.word	0x2001561c

0800e548 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
 800e548:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e54c:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 800e550:	b0a0      	sub	sp, #128	; 0x80
 800e552:	4604      	mov	r4, r0
 800e554:	b193      	cbz	r3, 800e57c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800e556:	4b30      	ldr	r3, [pc, #192]	; (800e618 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xd0>)
 800e558:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800e55a:	881b      	ldrh	r3, [r3, #0]
 800e55c:	428b      	cmp	r3, r1
 800e55e:	d90d      	bls.n	800e57c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800e560:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800e564:	2b00      	cmp	r3, #0
 800e566:	dd09      	ble.n	800e57c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800e568:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800e56c:	2b00      	cmp	r3, #0
 800e56e:	dd05      	ble.n	800e57c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800e570:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 800e574:	b12b      	cbz	r3, 800e582 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x3a>
 800e576:	6803      	ldr	r3, [r0, #0]
 800e578:	695b      	ldr	r3, [r3, #20]
 800e57a:	4798      	blx	r3
 800e57c:	b020      	add	sp, #128	; 0x80
 800e57e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e582:	4b26      	ldr	r3, [pc, #152]	; (800e61c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xd4>)
 800e584:	681b      	ldr	r3, [r3, #0]
 800e586:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 800e58a:	4b25      	ldr	r3, [pc, #148]	; (800e620 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xd8>)
 800e58c:	681b      	ldr	r3, [r3, #0]
 800e58e:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800e592:	4b24      	ldr	r3, [pc, #144]	; (800e624 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xdc>)
 800e594:	6818      	ldr	r0, [r3, #0]
 800e596:	f7f6 fc23 	bl	8004de0 <_ZNK8touchgfx5Texts7getTextEt>
 800e59a:	4606      	mov	r6, r0
 800e59c:	a807      	add	r0, sp, #28
 800e59e:	f004 fa6e 	bl	8012a7e <_ZN8touchgfx12TextProviderC1Ev>
 800e5a2:	682b      	ldr	r3, [r5, #0]
 800e5a4:	4628      	mov	r0, r5
 800e5a6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800e5a8:	4798      	blx	r3
 800e5aa:	682b      	ldr	r3, [r5, #0]
 800e5ac:	4607      	mov	r7, r0
 800e5ae:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800e5b0:	4628      	mov	r0, r5
 800e5b2:	4798      	blx	r3
 800e5b4:	6823      	ldr	r3, [r4, #0]
 800e5b6:	4605      	mov	r5, r0
 800e5b8:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800e5ba:	4620      	mov	r0, r4
 800e5bc:	4798      	blx	r3
 800e5be:	6823      	ldr	r3, [r4, #0]
 800e5c0:	4680      	mov	r8, r0
 800e5c2:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800e5c6:	4620      	mov	r0, r4
 800e5c8:	4798      	blx	r3
 800e5ca:	462b      	mov	r3, r5
 800e5cc:	e9cd 8000 	strd	r8, r0, [sp]
 800e5d0:	463a      	mov	r2, r7
 800e5d2:	a807      	add	r0, sp, #28
 800e5d4:	4631      	mov	r1, r6
 800e5d6:	f004 fac2 	bl	8012b5e <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800e5da:	a807      	add	r0, sp, #28
 800e5dc:	f004 fe7a 	bl	80132d4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800e5e0:	280a      	cmp	r0, #10
 800e5e2:	d103      	bne.n	800e5ec <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xa4>
 800e5e4:	6823      	ldr	r3, [r4, #0]
 800e5e6:	4620      	mov	r0, r4
 800e5e8:	695b      	ldr	r3, [r3, #20]
 800e5ea:	e7c6      	b.n	800e57a <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x32>
 800e5ec:	a807      	add	r0, sp, #28
 800e5ee:	f004 fe71 	bl	80132d4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800e5f2:	2800      	cmp	r0, #0
 800e5f4:	d1f4      	bne.n	800e5e0 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x98>
 800e5f6:	ad04      	add	r5, sp, #16
 800e5f8:	4621      	mov	r1, r4
 800e5fa:	4628      	mov	r0, r5
 800e5fc:	f7ff fbaa 	bl	800dd54 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800e600:	e895 0003 	ldmia.w	r5, {r0, r1}
 800e604:	6822      	ldr	r2, [r4, #0]
 800e606:	ab02      	add	r3, sp, #8
 800e608:	e883 0003 	stmia.w	r3, {r0, r1}
 800e60c:	6912      	ldr	r2, [r2, #16]
 800e60e:	4619      	mov	r1, r3
 800e610:	4620      	mov	r0, r4
 800e612:	4790      	blx	r2
 800e614:	e7b2      	b.n	800e57c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800e616:	bf00      	nop
 800e618:	20015614 	.word	0x20015614
 800e61c:	20015610 	.word	0x20015610
 800e620:	20015618 	.word	0x20015618
 800e624:	2001561c 	.word	0x2001561c

0800e628 <_ZN8touchgfx13BoxWithBorderD1Ev>:
 800e628:	4770      	bx	lr

0800e62a <_ZN8touchgfx13BoxWithBorderD0Ev>:
 800e62a:	b510      	push	{r4, lr}
 800e62c:	2134      	movs	r1, #52	; 0x34
 800e62e:	4604      	mov	r4, r0
 800e630:	f012 f85a 	bl	80206e8 <_ZdlPvj>
 800e634:	4620      	mov	r0, r4
 800e636:	bd10      	pop	{r4, pc}

0800e638 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE>:
 800e638:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e63c:	4604      	mov	r4, r0
 800e63e:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800e640:	8962      	ldrh	r2, [r4, #10]
 800e642:	b218      	sxth	r0, r3
 800e644:	460e      	mov	r6, r1
 800e646:	005b      	lsls	r3, r3, #1
 800e648:	8921      	ldrh	r1, [r4, #8]
 800e64a:	b29b      	uxth	r3, r3
 800e64c:	1ac9      	subs	r1, r1, r3
 800e64e:	b08e      	sub	sp, #56	; 0x38
 800e650:	b209      	sxth	r1, r1
 800e652:	1ad3      	subs	r3, r2, r3
 800e654:	b21b      	sxth	r3, r3
 800e656:	2900      	cmp	r1, #0
 800e658:	f8ad 0000 	strh.w	r0, [sp]
 800e65c:	f8ad 0002 	strh.w	r0, [sp, #2]
 800e660:	f8ad 1004 	strh.w	r1, [sp, #4]
 800e664:	f8ad 3006 	strh.w	r3, [sp, #6]
 800e668:	dd5e      	ble.n	800e728 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 800e66a:	2b00      	cmp	r3, #0
 800e66c:	dd5c      	ble.n	800e728 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 800e66e:	6830      	ldr	r0, [r6, #0]
 800e670:	6871      	ldr	r1, [r6, #4]
 800e672:	ab02      	add	r3, sp, #8
 800e674:	c303      	stmia	r3!, {r0, r1}
 800e676:	4669      	mov	r1, sp
 800e678:	a802      	add	r0, sp, #8
 800e67a:	f7fc fb87 	bl	800ad8c <_ZN8touchgfx4RectaNERKS0_>
 800e67e:	4620      	mov	r0, r4
 800e680:	a902      	add	r1, sp, #8
 800e682:	f7ff fe13 	bl	800e2ac <_ZNK8touchgfx3Box4drawERKNS_4RectE>
 800e686:	8e20      	ldrh	r0, [r4, #48]	; 0x30
 800e688:	2800      	cmp	r0, #0
 800e68a:	d05f      	beq.n	800e74c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 800e68c:	8963      	ldrh	r3, [r4, #10]
 800e68e:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800e692:	f8ad 101c 	strh.w	r1, [sp, #28]
 800e696:	1a1f      	subs	r7, r3, r0
 800e698:	eba3 0340 	sub.w	r3, r3, r0, lsl #1
 800e69c:	b202      	sxth	r2, r0
 800e69e:	2500      	movs	r5, #0
 800e6a0:	b21b      	sxth	r3, r3
 800e6a2:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
 800e6a6:	1a09      	subs	r1, r1, r0
 800e6a8:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 800e6ac:	9506      	str	r5, [sp, #24]
 800e6ae:	f8ad 201e 	strh.w	r2, [sp, #30]
 800e6b2:	f8ad 5020 	strh.w	r5, [sp, #32]
 800e6b6:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 800e6ba:	f8ad 5028 	strh.w	r5, [sp, #40]	; 0x28
 800e6be:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 800e6c2:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800e6c6:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800e6ca:	f8ad 1030 	strh.w	r1, [sp, #48]	; 0x30
 800e6ce:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 800e6d2:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 800e6d6:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800e6da:	af04      	add	r7, sp, #16
 800e6dc:	ab06      	add	r3, sp, #24
 800e6de:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800e6e2:	e893 0003 	ldmia.w	r3, {r0, r1}
 800e6e6:	e887 0003 	stmia.w	r7, {r0, r1}
 800e6ea:	4631      	mov	r1, r6
 800e6ec:	4638      	mov	r0, r7
 800e6ee:	f7fc fb4d 	bl	800ad8c <_ZN8touchgfx4RectaNERKS0_>
 800e6f2:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800e6f6:	2b00      	cmp	r3, #0
 800e6f8:	dd12      	ble.n	800e720 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 800e6fa:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800e6fe:	2b00      	cmp	r3, #0
 800e700:	dd0e      	ble.n	800e720 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 800e702:	6823      	ldr	r3, [r4, #0]
 800e704:	4639      	mov	r1, r7
 800e706:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e708:	4620      	mov	r0, r4
 800e70a:	4798      	blx	r3
 800e70c:	f7f4 f800 	bl	8002710 <_ZN8touchgfx3HAL3lcdEv>
 800e710:	6803      	ldr	r3, [r0, #0]
 800e712:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800e714:	f8d3 8020 	ldr.w	r8, [r3, #32]
 800e718:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800e71c:	4639      	mov	r1, r7
 800e71e:	47c0      	blx	r8
 800e720:	3501      	adds	r5, #1
 800e722:	2d04      	cmp	r5, #4
 800e724:	d1da      	bne.n	800e6dc <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xa4>
 800e726:	e011      	b.n	800e74c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 800e728:	6830      	ldr	r0, [r6, #0]
 800e72a:	6871      	ldr	r1, [r6, #4]
 800e72c:	ab06      	add	r3, sp, #24
 800e72e:	c303      	stmia	r3!, {r0, r1}
 800e730:	6823      	ldr	r3, [r4, #0]
 800e732:	a906      	add	r1, sp, #24
 800e734:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e736:	4620      	mov	r0, r4
 800e738:	4798      	blx	r3
 800e73a:	f7f3 ffe9 	bl	8002710 <_ZN8touchgfx3HAL3lcdEv>
 800e73e:	6803      	ldr	r3, [r0, #0]
 800e740:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800e742:	6a1d      	ldr	r5, [r3, #32]
 800e744:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800e748:	a906      	add	r1, sp, #24
 800e74a:	47a8      	blx	r5
 800e74c:	b00e      	add	sp, #56	; 0x38
 800e74e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800e752 <_ZN8touchgfx5ImageD1Ev>:
 800e752:	4770      	bx	lr

0800e754 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 800e754:	b570      	push	{r4, r5, r6, lr}
 800e756:	880b      	ldrh	r3, [r1, #0]
 800e758:	84c3      	strh	r3, [r0, #38]	; 0x26
 800e75a:	4604      	mov	r4, r0
 800e75c:	4608      	mov	r0, r1
 800e75e:	460d      	mov	r5, r1
 800e760:	f005 fed6 	bl	8014510 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800e764:	4606      	mov	r6, r0
 800e766:	4628      	mov	r0, r5
 800e768:	f005 ff06 	bl	8014578 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800e76c:	6823      	ldr	r3, [r4, #0]
 800e76e:	4605      	mov	r5, r0
 800e770:	4631      	mov	r1, r6
 800e772:	4620      	mov	r0, r4
 800e774:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800e776:	4798      	blx	r3
 800e778:	6823      	ldr	r3, [r4, #0]
 800e77a:	4629      	mov	r1, r5
 800e77c:	4620      	mov	r0, r4
 800e77e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800e780:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e784:	4718      	bx	r3

0800e786 <_ZN8touchgfx5ImageD0Ev>:
 800e786:	b510      	push	{r4, lr}
 800e788:	212c      	movs	r1, #44	; 0x2c
 800e78a:	4604      	mov	r4, r0
 800e78c:	f011 ffac 	bl	80206e8 <_ZdlPvj>
 800e790:	4620      	mov	r0, r4
 800e792:	bd10      	pop	{r4, pc}

0800e794 <_ZNK8touchgfx5Image12getSolidRectEv>:
 800e794:	b510      	push	{r4, lr}
 800e796:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 800e79a:	2bff      	cmp	r3, #255	; 0xff
 800e79c:	4604      	mov	r4, r0
 800e79e:	d006      	beq.n	800e7ae <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 800e7a0:	2300      	movs	r3, #0
 800e7a2:	8003      	strh	r3, [r0, #0]
 800e7a4:	8043      	strh	r3, [r0, #2]
 800e7a6:	8083      	strh	r3, [r0, #4]
 800e7a8:	80c3      	strh	r3, [r0, #6]
 800e7aa:	4620      	mov	r0, r4
 800e7ac:	bd10      	pop	{r4, pc}
 800e7ae:	3126      	adds	r1, #38	; 0x26
 800e7b0:	f005 ff16 	bl	80145e0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800e7b4:	e7f9      	b.n	800e7aa <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

0800e7b6 <_ZNK8touchgfx5Image17invalidateContentEv>:
 800e7b6:	f890 2028 	ldrb.w	r2, [r0, #40]	; 0x28
 800e7ba:	b12a      	cbz	r2, 800e7c8 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 800e7bc:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800e7c0:	b112      	cbz	r2, 800e7c8 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 800e7c2:	6803      	ldr	r3, [r0, #0]
 800e7c4:	695b      	ldr	r3, [r3, #20]
 800e7c6:	4718      	bx	r3
 800e7c8:	4770      	bx	lr
	...

0800e7cc <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 800e7cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e7d0:	4604      	mov	r4, r0
 800e7d2:	b088      	sub	sp, #32
 800e7d4:	f854 3b26 	ldr.w	r3, [r4], #38
 800e7d8:	2500      	movs	r5, #0
 800e7da:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e7dc:	460f      	mov	r7, r1
 800e7de:	e9cd 5504 	strd	r5, r5, [sp, #16]
 800e7e2:	a904      	add	r1, sp, #16
 800e7e4:	4606      	mov	r6, r0
 800e7e6:	4798      	blx	r3
 800e7e8:	4620      	mov	r0, r4
 800e7ea:	f005 fe91 	bl	8014510 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800e7ee:	4680      	mov	r8, r0
 800e7f0:	4620      	mov	r0, r4
 800e7f2:	f005 fec1 	bl	8014578 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800e7f6:	9506      	str	r5, [sp, #24]
 800e7f8:	ad06      	add	r5, sp, #24
 800e7fa:	f8ad 001e 	strh.w	r0, [sp, #30]
 800e7fe:	4639      	mov	r1, r7
 800e800:	4628      	mov	r0, r5
 800e802:	f8ad 801c 	strh.w	r8, [sp, #28]
 800e806:	f7fc fac1 	bl	800ad8c <_ZN8touchgfx4RectaNERKS0_>
 800e80a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800e80e:	2b00      	cmp	r3, #0
 800e810:	dd19      	ble.n	800e846 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800e812:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800e816:	2b00      	cmp	r3, #0
 800e818:	dd15      	ble.n	800e846 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800e81a:	4b0c      	ldr	r3, [pc, #48]	; (800e84c <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 800e81c:	681b      	ldr	r3, [r3, #0]
 800e81e:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800e822:	b10a      	cbz	r2, 800e828 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 800e824:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800e826:	b900      	cbnz	r0, 800e82a <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 800e828:	6898      	ldr	r0, [r3, #8]
 800e82a:	6801      	ldr	r1, [r0, #0]
 800e82c:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 800e830:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 800e834:	2701      	movs	r7, #1
 800e836:	9702      	str	r7, [sp, #8]
 800e838:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 800e83c:	e9cd 5600 	strd	r5, r6, [sp]
 800e840:	688d      	ldr	r5, [r1, #8]
 800e842:	4621      	mov	r1, r4
 800e844:	47a8      	blx	r5
 800e846:	b008      	add	sp, #32
 800e848:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e84c:	200155b8 	.word	0x200155b8

0800e850 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 800e850:	4770      	bx	lr

0800e852 <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 800e852:	b510      	push	{r4, lr}
 800e854:	2148      	movs	r1, #72	; 0x48
 800e856:	4604      	mov	r4, r0
 800e858:	f011 ff46 	bl	80206e8 <_ZdlPvj>
 800e85c:	4620      	mov	r0, r4
 800e85e:	bd10      	pop	{r4, pc}

0800e860 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 800e860:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e864:	b08d      	sub	sp, #52	; 0x34
 800e866:	4604      	mov	r4, r0
 800e868:	4688      	mov	r8, r1
 800e86a:	f7ff fd89 	bl	800e380 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 800e86e:	4a4d      	ldr	r2, [pc, #308]	; (800e9a4 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x144>)
 800e870:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800e872:	8812      	ldrh	r2, [r2, #0]
 800e874:	429a      	cmp	r2, r3
 800e876:	f240 8081 	bls.w	800e97c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11c>
 800e87a:	4e4b      	ldr	r6, [pc, #300]	; (800e9a8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x148>)
 800e87c:	6832      	ldr	r2, [r6, #0]
 800e87e:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800e882:	4b4a      	ldr	r3, [pc, #296]	; (800e9ac <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x14c>)
 800e884:	681b      	ldr	r3, [r3, #0]
 800e886:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 800e88a:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
 800e88e:	2300      	movs	r3, #0
 800e890:	e9cd 3303 	strd	r3, r3, [sp, #12]
 800e894:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e898:	2b03      	cmp	r3, #3
 800e89a:	d811      	bhi.n	800e8c0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 800e89c:	e8df f003 	tbb	[pc, r3]
 800e8a0:	71027102 	.word	0x71027102
 800e8a4:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800e8a8:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800e8ac:	f8ad 1010 	strh.w	r1, [sp, #16]
 800e8b0:	1a9b      	subs	r3, r3, r2
 800e8b2:	2002      	movs	r0, #2
 800e8b4:	f8ad 2012 	strh.w	r2, [sp, #18]
 800e8b8:	fb93 f3f0 	sdiv	r3, r3, r0
 800e8bc:	f8ad 300e 	strh.w	r3, [sp, #14]
 800e8c0:	ad03      	add	r5, sp, #12
 800e8c2:	e895 0003 	ldmia.w	r5, {r0, r1}
 800e8c6:	f10d 0914 	add.w	r9, sp, #20
 800e8ca:	e889 0003 	stmia.w	r9, {r0, r1}
 800e8ce:	4641      	mov	r1, r8
 800e8d0:	4648      	mov	r0, r9
 800e8d2:	f7fc fa5b 	bl	800ad8c <_ZN8touchgfx4RectaNERKS0_>
 800e8d6:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800e8da:	2b00      	cmp	r3, #0
 800e8dc:	dd4e      	ble.n	800e97c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11c>
 800e8de:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800e8e2:	2b00      	cmp	r3, #0
 800e8e4:	dd4a      	ble.n	800e97c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11c>
 800e8e6:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 800e8ea:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800e8ee:	1a9b      	subs	r3, r3, r2
 800e8f0:	f8ad 3014 	strh.w	r3, [sp, #20]
 800e8f4:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 800e8f8:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800e8fc:	1a9b      	subs	r3, r3, r2
 800e8fe:	f8ad 3016 	strh.w	r3, [sp, #22]
 800e902:	6823      	ldr	r3, [r4, #0]
 800e904:	4629      	mov	r1, r5
 800e906:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e908:	4620      	mov	r0, r4
 800e90a:	4798      	blx	r3
 800e90c:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800e910:	2b00      	cmp	r3, #0
 800e912:	d045      	beq.n	800e9a0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x140>
 800e914:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800e916:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 800e918:	6833      	ldr	r3, [r6, #0]
 800e91a:	f894 0032 	ldrb.w	r0, [r4, #50]	; 0x32
 800e91e:	f894 4044 	ldrb.w	r4, [r4, #68]	; 0x44
 800e922:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800e926:	785b      	ldrb	r3, [r3, #1]
 800e928:	9209      	str	r2, [sp, #36]	; 0x24
 800e92a:	f3c3 0601 	ubfx	r6, r3, #0, #2
 800e92e:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800e932:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 800e936:	2300      	movs	r3, #0
 800e938:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800e93c:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 800e940:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 800e944:	4b1a      	ldr	r3, [pc, #104]	; (800e9b0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x150>)
 800e946:	9707      	str	r7, [sp, #28]
 800e948:	681b      	ldr	r3, [r3, #0]
 800e94a:	f88d 6020 	strb.w	r6, [sp, #32]
 800e94e:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800e952:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800e956:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800e95a:	b10a      	cbz	r2, 800e960 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x100>
 800e95c:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 800e95e:	b904      	cbnz	r4, 800e962 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
 800e960:	689c      	ldr	r4, [r3, #8]
 800e962:	4b14      	ldr	r3, [pc, #80]	; (800e9b4 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x154>)
 800e964:	6818      	ldr	r0, [r3, #0]
 800e966:	f7f6 fa3b 	bl	8004de0 <_ZNK8touchgfx5Texts7getTextEt>
 800e96a:	ab07      	add	r3, sp, #28
 800e96c:	9001      	str	r0, [sp, #4]
 800e96e:	9300      	str	r3, [sp, #0]
 800e970:	e895 0006 	ldmia.w	r5, {r1, r2}
 800e974:	464b      	mov	r3, r9
 800e976:	4620      	mov	r0, r4
 800e978:	f7f6 f9e4 	bl	8004d44 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800e97c:	b00d      	add	sp, #52	; 0x34
 800e97e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e982:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800e986:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 800e98a:	f8ad 2010 	strh.w	r2, [sp, #16]
 800e98e:	1a9b      	subs	r3, r3, r2
 800e990:	2002      	movs	r0, #2
 800e992:	f8ad 1012 	strh.w	r1, [sp, #18]
 800e996:	fb93 f3f0 	sdiv	r3, r3, r0
 800e99a:	f8ad 300c 	strh.w	r3, [sp, #12]
 800e99e:	e78f      	b.n	800e8c0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 800e9a0:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 800e9a2:	e7b8      	b.n	800e916 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb6>
 800e9a4:	20015614 	.word	0x20015614
 800e9a8:	20015610 	.word	0x20015610
 800e9ac:	20015618 	.word	0x20015618
 800e9b0:	200155b8 	.word	0x200155b8
 800e9b4:	2001561c 	.word	0x2001561c

0800e9b8 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 800e9b8:	b510      	push	{r4, lr}
 800e9ba:	2101      	movs	r1, #1
 800e9bc:	4c13      	ldr	r4, [pc, #76]	; (800ea0c <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 800e9be:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800e9c2:	2200      	movs	r2, #0
 800e9c4:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 800e9c8:	6004      	str	r4, [r0, #0]
 800e9ca:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800e9ce:	4c10      	ldr	r4, [pc, #64]	; (800ea10 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 800e9d0:	8082      	strh	r2, [r0, #4]
 800e9d2:	80c2      	strh	r2, [r0, #6]
 800e9d4:	8102      	strh	r2, [r0, #8]
 800e9d6:	8142      	strh	r2, [r0, #10]
 800e9d8:	8182      	strh	r2, [r0, #12]
 800e9da:	81c2      	strh	r2, [r0, #14]
 800e9dc:	8202      	strh	r2, [r0, #16]
 800e9de:	8242      	strh	r2, [r0, #18]
 800e9e0:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800e9e4:	61c2      	str	r2, [r0, #28]
 800e9e6:	8402      	strh	r2, [r0, #32]
 800e9e8:	8442      	strh	r2, [r0, #34]	; 0x22
 800e9ea:	6282      	str	r2, [r0, #40]	; 0x28
 800e9ec:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 800e9f0:	85c1      	strh	r1, [r0, #46]	; 0x2e
 800e9f2:	8601      	strh	r1, [r0, #48]	; 0x30
 800e9f4:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 800e9f8:	6344      	str	r4, [r0, #52]	; 0x34
 800e9fa:	8701      	strh	r1, [r0, #56]	; 0x38
 800e9fc:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
 800ea00:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
 800ea04:	f880 2045 	strb.w	r2, [r0, #69]	; 0x45
 800ea08:	bd10      	pop	{r4, pc}
 800ea0a:	bf00      	nop
 800ea0c:	0802421c 	.word	0x0802421c
 800ea10:	0802221c 	.word	0x0802221c

0800ea14 <_ZN8touchgfx7OutlineD1Ev>:
 800ea14:	4770      	bx	lr

0800ea16 <_ZN8touchgfx7OutlineD0Ev>:
 800ea16:	b510      	push	{r4, lr}
 800ea18:	2130      	movs	r1, #48	; 0x30
 800ea1a:	4604      	mov	r4, r0
 800ea1c:	f011 fe64 	bl	80206e8 <_ZdlPvj>
 800ea20:	4620      	mov	r0, r4
 800ea22:	bd10      	pop	{r4, pc}

0800ea24 <_ZN8touchgfx7Outline5resetEv>:
 800ea24:	b510      	push	{r4, lr}
 800ea26:	4604      	mov	r4, r0
 800ea28:	f000 fe8c 	bl	800f744 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 800ea2c:	60e0      	str	r0, [r4, #12]
 800ea2e:	f000 fe8f 	bl	800f750 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 800ea32:	68e3      	ldr	r3, [r4, #12]
 800ea34:	6123      	str	r3, [r4, #16]
 800ea36:	08c0      	lsrs	r0, r0, #3
 800ea38:	2200      	movs	r2, #0
 800ea3a:	f647 71ff 	movw	r1, #32767	; 0x7fff
 800ea3e:	3801      	subs	r0, #1
 800ea40:	6060      	str	r0, [r4, #4]
 800ea42:	60a2      	str	r2, [r4, #8]
 800ea44:	8019      	strh	r1, [r3, #0]
 800ea46:	8059      	strh	r1, [r3, #2]
 800ea48:	809a      	strh	r2, [r3, #4]
 800ea4a:	80da      	strh	r2, [r3, #6]
 800ea4c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800ea4e:	f023 0301 	bic.w	r3, r3, #1
 800ea52:	f043 0302 	orr.w	r3, r3, #2
 800ea56:	6263      	str	r3, [r4, #36]	; 0x24
 800ea58:	bd10      	pop	{r4, pc}
	...

0800ea5c <_ZN8touchgfx7OutlineC1Ev>:
 800ea5c:	b510      	push	{r4, lr}
 800ea5e:	4b0a      	ldr	r3, [pc, #40]	; (800ea88 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 800ea60:	6003      	str	r3, [r0, #0]
 800ea62:	2300      	movs	r3, #0
 800ea64:	e9c0 3301 	strd	r3, r3, [r0, #4]
 800ea68:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800ea6c:	e9c0 3305 	strd	r3, r3, [r0, #20]
 800ea70:	e9c0 3307 	strd	r3, r3, [r0, #28]
 800ea74:	6243      	str	r3, [r0, #36]	; 0x24
 800ea76:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 800ea7a:	4604      	mov	r4, r0
 800ea7c:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 800ea80:	f7ff ffd0 	bl	800ea24 <_ZN8touchgfx7Outline5resetEv>
 800ea84:	4620      	mov	r0, r4
 800ea86:	bd10      	pop	{r4, pc}
 800ea88:	08024290 	.word	0x08024290

0800ea8c <_ZN8touchgfx7Outline10renderLineEiiii>:
 800ea8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ea90:	b093      	sub	sp, #76	; 0x4c
 800ea92:	1156      	asrs	r6, r2, #5
 800ea94:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 800ea96:	9305      	str	r3, [sp, #20]
 800ea98:	f004 051f 	and.w	r5, r4, #31
 800ea9c:	1153      	asrs	r3, r2, #5
 800ea9e:	9504      	str	r5, [sp, #16]
 800eaa0:	1165      	asrs	r5, r4, #5
 800eaa2:	9303      	str	r3, [sp, #12]
 800eaa4:	42ae      	cmp	r6, r5
 800eaa6:	ea4f 1364 	mov.w	r3, r4, asr #5
 800eaaa:	9306      	str	r3, [sp, #24]
 800eaac:	f002 031f 	and.w	r3, r2, #31
 800eab0:	f040 80f8 	bne.w	800eca4 <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 800eab4:	9c04      	ldr	r4, [sp, #16]
 800eab6:	9a05      	ldr	r2, [sp, #20]
 800eab8:	42a3      	cmp	r3, r4
 800eaba:	ea4f 1e62 	mov.w	lr, r2, asr #5
 800eabe:	6902      	ldr	r2, [r0, #16]
 800eac0:	d125      	bne.n	800eb0e <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 800eac2:	f9b2 3000 	ldrsh.w	r3, [r2]
 800eac6:	459e      	cmp	lr, r3
 800eac8:	d103      	bne.n	800ead2 <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 800eaca:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 800eace:	429e      	cmp	r6, r3
 800ead0:	d035      	beq.n	800eb3e <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800ead2:	88d1      	ldrh	r1, [r2, #6]
 800ead4:	8893      	ldrh	r3, [r2, #4]
 800ead6:	430b      	orrs	r3, r1
 800ead8:	d010      	beq.n	800eafc <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 800eada:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 800eade:	2b00      	cmp	r3, #0
 800eae0:	db0c      	blt.n	800eafc <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 800eae2:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 800eae4:	428b      	cmp	r3, r1
 800eae6:	da09      	bge.n	800eafc <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 800eae8:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 800eaec:	428b      	cmp	r3, r1
 800eaee:	bf38      	it	cc
 800eaf0:	3208      	addcc	r2, #8
 800eaf2:	f103 0301 	add.w	r3, r3, #1
 800eaf6:	bf38      	it	cc
 800eaf8:	6102      	strcc	r2, [r0, #16]
 800eafa:	6083      	str	r3, [r0, #8]
 800eafc:	6903      	ldr	r3, [r0, #16]
 800eafe:	9a03      	ldr	r2, [sp, #12]
 800eb00:	f8a3 e000 	strh.w	lr, [r3]
 800eb04:	805a      	strh	r2, [r3, #2]
 800eb06:	2200      	movs	r2, #0
 800eb08:	809a      	strh	r2, [r3, #4]
 800eb0a:	80da      	strh	r2, [r3, #6]
 800eb0c:	e017      	b.n	800eb3e <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800eb0e:	9c05      	ldr	r4, [sp, #20]
 800eb10:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 800eb14:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 800eb18:	f004 041f 	and.w	r4, r4, #31
 800eb1c:	114e      	asrs	r6, r1, #5
 800eb1e:	9402      	str	r4, [sp, #8]
 800eb20:	9c04      	ldr	r4, [sp, #16]
 800eb22:	4576      	cmp	r6, lr
 800eb24:	f001 0c1f 	and.w	ip, r1, #31
 800eb28:	eba4 0403 	sub.w	r4, r4, r3
 800eb2c:	d10a      	bne.n	800eb44 <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 800eb2e:	9b02      	ldr	r3, [sp, #8]
 800eb30:	449c      	add	ip, r3
 800eb32:	44a0      	add	r8, r4
 800eb34:	fb04 a40c 	mla	r4, r4, ip, sl
 800eb38:	f8a2 8004 	strh.w	r8, [r2, #4]
 800eb3c:	80d4      	strh	r4, [r2, #6]
 800eb3e:	b013      	add	sp, #76	; 0x4c
 800eb40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800eb44:	9d05      	ldr	r5, [sp, #20]
 800eb46:	1a69      	subs	r1, r5, r1
 800eb48:	bf5b      	ittet	pl
 800eb4a:	f1cc 0520 	rsbpl	r5, ip, #32
 800eb4e:	436c      	mulpl	r4, r5
 800eb50:	2500      	movmi	r5, #0
 800eb52:	2520      	movpl	r5, #32
 800eb54:	bf44      	itt	mi
 800eb56:	fb04 f40c 	mulmi.w	r4, r4, ip
 800eb5a:	4249      	negmi	r1, r1
 800eb5c:	9501      	str	r5, [sp, #4]
 800eb5e:	9f01      	ldr	r7, [sp, #4]
 800eb60:	fb94 f5f1 	sdiv	r5, r4, r1
 800eb64:	fb01 4415 	mls	r4, r1, r5, r4
 800eb68:	bf54      	ite	pl
 800eb6a:	f04f 0901 	movpl.w	r9, #1
 800eb6e:	f04f 39ff 	movmi.w	r9, #4294967295
 800eb72:	2c00      	cmp	r4, #0
 800eb74:	bfb8      	it	lt
 800eb76:	f105 35ff 	addlt.w	r5, r5, #4294967295
 800eb7a:	44bc      	add	ip, r7
 800eb7c:	44a8      	add	r8, r5
 800eb7e:	fb05 ac0c 	mla	ip, r5, ip, sl
 800eb82:	f8a2 8004 	strh.w	r8, [r2, #4]
 800eb86:	f8a2 c006 	strh.w	ip, [r2, #6]
 800eb8a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800eb8e:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 800eb92:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 800eb96:	bfb8      	it	lt
 800eb98:	1864      	addlt	r4, r4, r1
 800eb9a:	ea58 0202 	orrs.w	r2, r8, r2
 800eb9e:	444e      	add	r6, r9
 800eba0:	d011      	beq.n	800ebc6 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 800eba2:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 800eba6:	f1b8 0f00 	cmp.w	r8, #0
 800ebaa:	db0c      	blt.n	800ebc6 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 800ebac:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 800ebae:	4590      	cmp	r8, r2
 800ebb0:	da09      	bge.n	800ebc6 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 800ebb2:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 800ebb6:	4590      	cmp	r8, r2
 800ebb8:	bf3c      	itt	cc
 800ebba:	f10c 0208 	addcc.w	r2, ip, #8
 800ebbe:	6102      	strcc	r2, [r0, #16]
 800ebc0:	f108 0201 	add.w	r2, r8, #1
 800ebc4:	6082      	str	r2, [r0, #8]
 800ebc6:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800ebca:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800ebce:	f8ac 6000 	strh.w	r6, [ip]
 800ebd2:	2700      	movs	r7, #0
 800ebd4:	45b6      	cmp	lr, r6
 800ebd6:	f8ac 2002 	strh.w	r2, [ip, #2]
 800ebda:	f8ac 7004 	strh.w	r7, [ip, #4]
 800ebde:	f8ac 7006 	strh.w	r7, [ip, #6]
 800ebe2:	442b      	add	r3, r5
 800ebe4:	d04d      	beq.n	800ec82 <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 800ebe6:	9f04      	ldr	r7, [sp, #16]
 800ebe8:	1aff      	subs	r7, r7, r3
 800ebea:	443d      	add	r5, r7
 800ebec:	016d      	lsls	r5, r5, #5
 800ebee:	fb95 f8f1 	sdiv	r8, r5, r1
 800ebf2:	fb01 5518 	mls	r5, r1, r8, r5
 800ebf6:	2d00      	cmp	r5, #0
 800ebf8:	bfb8      	it	lt
 800ebfa:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800ebfe:	f108 0701 	add.w	r7, r8, #1
 800ec02:	bfb8      	it	lt
 800ec04:	186d      	addlt	r5, r5, r1
 800ec06:	1a64      	subs	r4, r4, r1
 800ec08:	9703      	str	r7, [sp, #12]
 800ec0a:	f04f 0a00 	mov.w	sl, #0
 800ec0e:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800ec12:	1964      	adds	r4, r4, r5
 800ec14:	bf58      	it	pl
 800ec16:	9f03      	ldrpl	r7, [sp, #12]
 800ec18:	f8bc b004 	ldrh.w	fp, [ip, #4]
 800ec1c:	bf48      	it	mi
 800ec1e:	4647      	movmi	r7, r8
 800ec20:	44bb      	add	fp, r7
 800ec22:	f8ac b004 	strh.w	fp, [ip, #4]
 800ec26:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800ec2a:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800ec2e:	f8ac b006 	strh.w	fp, [ip, #6]
 800ec32:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800ec36:	443b      	add	r3, r7
 800ec38:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800ec3c:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800ec40:	bf58      	it	pl
 800ec42:	1a64      	subpl	r4, r4, r1
 800ec44:	ea5b 0707 	orrs.w	r7, fp, r7
 800ec48:	444e      	add	r6, r9
 800ec4a:	d011      	beq.n	800ec70 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 800ec4c:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 800ec50:	f1bb 0f00 	cmp.w	fp, #0
 800ec54:	db0c      	blt.n	800ec70 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 800ec56:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800ec58:	45bb      	cmp	fp, r7
 800ec5a:	da09      	bge.n	800ec70 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 800ec5c:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800ec60:	45bb      	cmp	fp, r7
 800ec62:	bf3c      	itt	cc
 800ec64:	f10c 0708 	addcc.w	r7, ip, #8
 800ec68:	6107      	strcc	r7, [r0, #16]
 800ec6a:	f10b 0701 	add.w	r7, fp, #1
 800ec6e:	6087      	str	r7, [r0, #8]
 800ec70:	6907      	ldr	r7, [r0, #16]
 800ec72:	45b6      	cmp	lr, r6
 800ec74:	803e      	strh	r6, [r7, #0]
 800ec76:	807a      	strh	r2, [r7, #2]
 800ec78:	f8a7 a004 	strh.w	sl, [r7, #4]
 800ec7c:	f8a7 a006 	strh.w	sl, [r7, #6]
 800ec80:	d1c5      	bne.n	800ec0e <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 800ec82:	9a04      	ldr	r2, [sp, #16]
 800ec84:	1ad3      	subs	r3, r2, r3
 800ec86:	6902      	ldr	r2, [r0, #16]
 800ec88:	8891      	ldrh	r1, [r2, #4]
 800ec8a:	88d6      	ldrh	r6, [r2, #6]
 800ec8c:	4419      	add	r1, r3
 800ec8e:	8091      	strh	r1, [r2, #4]
 800ec90:	9902      	ldr	r1, [sp, #8]
 800ec92:	f101 0c20 	add.w	ip, r1, #32
 800ec96:	9901      	ldr	r1, [sp, #4]
 800ec98:	ebac 0c01 	sub.w	ip, ip, r1
 800ec9c:	fb03 630c 	mla	r3, r3, ip, r6
 800eca0:	80d3      	strh	r3, [r2, #6]
 800eca2:	e74c      	b.n	800eb3e <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800eca4:	9d05      	ldr	r5, [sp, #20]
 800eca6:	1aa2      	subs	r2, r4, r2
 800eca8:	eba5 0501 	sub.w	r5, r5, r1
 800ecac:	9508      	str	r5, [sp, #32]
 800ecae:	9202      	str	r2, [sp, #8]
 800ecb0:	f140 8128 	bpl.w	800ef04 <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 800ecb4:	9a03      	ldr	r2, [sp, #12]
 800ecb6:	2a00      	cmp	r2, #0
 800ecb8:	f6ff af41 	blt.w	800eb3e <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800ecbc:	9a02      	ldr	r2, [sp, #8]
 800ecbe:	4252      	negs	r2, r2
 800ecc0:	9202      	str	r2, [sp, #8]
 800ecc2:	9a06      	ldr	r2, [sp, #24]
 800ecc4:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 800ecc8:	f04f 34ff 	mov.w	r4, #4294967295
 800eccc:	9206      	str	r2, [sp, #24]
 800ecce:	462a      	mov	r2, r5
 800ecd0:	940b      	str	r4, [sp, #44]	; 0x2c
 800ecd2:	435a      	muls	r2, r3
 800ecd4:	2400      	movs	r4, #0
 800ecd6:	9d02      	ldr	r5, [sp, #8]
 800ecd8:	9401      	str	r4, [sp, #4]
 800ecda:	9c02      	ldr	r4, [sp, #8]
 800ecdc:	fb92 f4f4 	sdiv	r4, r2, r4
 800ece0:	fb05 2214 	mls	r2, r5, r4, r2
 800ece4:	2a00      	cmp	r2, #0
 800ece6:	9207      	str	r2, [sp, #28]
 800ece8:	bfbc      	itt	lt
 800ecea:	1952      	addlt	r2, r2, r5
 800ecec:	9207      	strlt	r2, [sp, #28]
 800ecee:	9a01      	ldr	r2, [sp, #4]
 800ecf0:	6905      	ldr	r5, [r0, #16]
 800ecf2:	bfb8      	it	lt
 800ecf4:	f104 34ff 	addlt.w	r4, r4, #4294967295
 800ecf8:	eb04 0901 	add.w	r9, r4, r1
 800ecfc:	429a      	cmp	r2, r3
 800ecfe:	ea4f 1669 	mov.w	r6, r9, asr #5
 800ed02:	f040 8112 	bne.w	800ef2a <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 800ed06:	f9b5 3000 	ldrsh.w	r3, [r5]
 800ed0a:	429e      	cmp	r6, r3
 800ed0c:	d104      	bne.n	800ed18 <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 800ed0e:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800ed12:	9a03      	ldr	r2, [sp, #12]
 800ed14:	429a      	cmp	r2, r3
 800ed16:	d01b      	beq.n	800ed50 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 800ed18:	88ea      	ldrh	r2, [r5, #6]
 800ed1a:	88ab      	ldrh	r3, [r5, #4]
 800ed1c:	4313      	orrs	r3, r2
 800ed1e:	d010      	beq.n	800ed42 <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 800ed20:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800ed24:	2a00      	cmp	r2, #0
 800ed26:	db0c      	blt.n	800ed42 <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 800ed28:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800ed2a:	429a      	cmp	r2, r3
 800ed2c:	da09      	bge.n	800ed42 <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 800ed2e:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 800ed32:	429a      	cmp	r2, r3
 800ed34:	bf38      	it	cc
 800ed36:	3508      	addcc	r5, #8
 800ed38:	f102 0201 	add.w	r2, r2, #1
 800ed3c:	bf38      	it	cc
 800ed3e:	6105      	strcc	r5, [r0, #16]
 800ed40:	6082      	str	r2, [r0, #8]
 800ed42:	6903      	ldr	r3, [r0, #16]
 800ed44:	9a03      	ldr	r2, [sp, #12]
 800ed46:	805a      	strh	r2, [r3, #2]
 800ed48:	2200      	movs	r2, #0
 800ed4a:	801e      	strh	r6, [r3, #0]
 800ed4c:	809a      	strh	r2, [r3, #4]
 800ed4e:	80da      	strh	r2, [r3, #6]
 800ed50:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800ed52:	9a03      	ldr	r2, [sp, #12]
 800ed54:	6901      	ldr	r1, [r0, #16]
 800ed56:	441a      	add	r2, r3
 800ed58:	f9b1 3000 	ldrsh.w	r3, [r1]
 800ed5c:	42b3      	cmp	r3, r6
 800ed5e:	d103      	bne.n	800ed68 <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 800ed60:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800ed64:	429a      	cmp	r2, r3
 800ed66:	d01a      	beq.n	800ed9e <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 800ed68:	88cc      	ldrh	r4, [r1, #6]
 800ed6a:	888b      	ldrh	r3, [r1, #4]
 800ed6c:	4323      	orrs	r3, r4
 800ed6e:	d010      	beq.n	800ed92 <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 800ed70:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 800ed74:	2c00      	cmp	r4, #0
 800ed76:	db0c      	blt.n	800ed92 <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 800ed78:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800ed7a:	429c      	cmp	r4, r3
 800ed7c:	da09      	bge.n	800ed92 <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 800ed7e:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 800ed82:	429c      	cmp	r4, r3
 800ed84:	bf38      	it	cc
 800ed86:	3108      	addcc	r1, #8
 800ed88:	f104 0401 	add.w	r4, r4, #1
 800ed8c:	bf38      	it	cc
 800ed8e:	6101      	strcc	r1, [r0, #16]
 800ed90:	6084      	str	r4, [r0, #8]
 800ed92:	6903      	ldr	r3, [r0, #16]
 800ed94:	2100      	movs	r1, #0
 800ed96:	801e      	strh	r6, [r3, #0]
 800ed98:	805a      	strh	r2, [r3, #2]
 800ed9a:	8099      	strh	r1, [r3, #4]
 800ed9c:	80d9      	strh	r1, [r3, #6]
 800ed9e:	9b06      	ldr	r3, [sp, #24]
 800eda0:	4293      	cmp	r3, r2
 800eda2:	f000 8082 	beq.w	800eeaa <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 800eda6:	9b08      	ldr	r3, [sp, #32]
 800eda8:	9c02      	ldr	r4, [sp, #8]
 800edaa:	9902      	ldr	r1, [sp, #8]
 800edac:	015b      	lsls	r3, r3, #5
 800edae:	fb93 f1f1 	sdiv	r1, r3, r1
 800edb2:	fb04 3311 	mls	r3, r4, r1, r3
 800edb6:	2b00      	cmp	r3, #0
 800edb8:	9103      	str	r1, [sp, #12]
 800edba:	9308      	str	r3, [sp, #32]
 800edbc:	da04      	bge.n	800edc8 <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 800edbe:	1e4b      	subs	r3, r1, #1
 800edc0:	9303      	str	r3, [sp, #12]
 800edc2:	9b08      	ldr	r3, [sp, #32]
 800edc4:	4423      	add	r3, r4
 800edc6:	9308      	str	r3, [sp, #32]
 800edc8:	9b07      	ldr	r3, [sp, #28]
 800edca:	9902      	ldr	r1, [sp, #8]
 800edcc:	1a5b      	subs	r3, r3, r1
 800edce:	9307      	str	r3, [sp, #28]
 800edd0:	9b01      	ldr	r3, [sp, #4]
 800edd2:	f1c3 0320 	rsb	r3, r3, #32
 800edd6:	930e      	str	r3, [sp, #56]	; 0x38
 800edd8:	990e      	ldr	r1, [sp, #56]	; 0x38
 800edda:	9b01      	ldr	r3, [sp, #4]
 800eddc:	1a5b      	subs	r3, r3, r1
 800edde:	464f      	mov	r7, r9
 800ede0:	930a      	str	r3, [sp, #40]	; 0x28
 800ede2:	2600      	movs	r6, #0
 800ede4:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 800ede8:	185b      	adds	r3, r3, r1
 800edea:	bf58      	it	pl
 800edec:	9902      	ldrpl	r1, [sp, #8]
 800edee:	9307      	str	r3, [sp, #28]
 800edf0:	bf5d      	ittte	pl
 800edf2:	1a5b      	subpl	r3, r3, r1
 800edf4:	9307      	strpl	r3, [sp, #28]
 800edf6:	9b03      	ldrpl	r3, [sp, #12]
 800edf8:	9903      	ldrmi	r1, [sp, #12]
 800edfa:	bf58      	it	pl
 800edfc:	1c59      	addpl	r1, r3, #1
 800edfe:	4489      	add	r9, r1
 800ee00:	2a00      	cmp	r2, #0
 800ee02:	ea4f 1a69 	mov.w	sl, r9, asr #5
 800ee06:	db2e      	blt.n	800ee66 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800ee08:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800ee0a:	4293      	cmp	r3, r2
 800ee0c:	dd2b      	ble.n	800ee66 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800ee0e:	9c01      	ldr	r4, [sp, #4]
 800ee10:	6905      	ldr	r5, [r0, #16]
 800ee12:	46a0      	mov	r8, r4
 800ee14:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 800ee16:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 800ee1a:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 800ee1e:	45a0      	cmp	r8, r4
 800ee20:	f040 814f 	bne.w	800f0c2 <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 800ee24:	f9b5 1000 	ldrsh.w	r1, [r5]
 800ee28:	4551      	cmp	r1, sl
 800ee2a:	d103      	bne.n	800ee34 <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 800ee2c:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 800ee30:	4291      	cmp	r1, r2
 800ee32:	d018      	beq.n	800ee66 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800ee34:	ea5c 010e 	orrs.w	r1, ip, lr
 800ee38:	d00f      	beq.n	800ee5a <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 800ee3a:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 800ee3e:	2900      	cmp	r1, #0
 800ee40:	db0b      	blt.n	800ee5a <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 800ee42:	428b      	cmp	r3, r1
 800ee44:	dd09      	ble.n	800ee5a <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 800ee46:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 800ee4a:	4299      	cmp	r1, r3
 800ee4c:	bf38      	it	cc
 800ee4e:	3508      	addcc	r5, #8
 800ee50:	f101 0101 	add.w	r1, r1, #1
 800ee54:	bf38      	it	cc
 800ee56:	6105      	strcc	r5, [r0, #16]
 800ee58:	6081      	str	r1, [r0, #8]
 800ee5a:	6903      	ldr	r3, [r0, #16]
 800ee5c:	f8a3 a000 	strh.w	sl, [r3]
 800ee60:	805a      	strh	r2, [r3, #2]
 800ee62:	809e      	strh	r6, [r3, #4]
 800ee64:	80de      	strh	r6, [r3, #6]
 800ee66:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800ee68:	6901      	ldr	r1, [r0, #16]
 800ee6a:	441a      	add	r2, r3
 800ee6c:	88cc      	ldrh	r4, [r1, #6]
 800ee6e:	888b      	ldrh	r3, [r1, #4]
 800ee70:	4323      	orrs	r3, r4
 800ee72:	d010      	beq.n	800ee96 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 800ee74:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 800ee78:	2c00      	cmp	r4, #0
 800ee7a:	db0c      	blt.n	800ee96 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 800ee7c:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800ee7e:	429c      	cmp	r4, r3
 800ee80:	da09      	bge.n	800ee96 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 800ee82:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 800ee86:	429c      	cmp	r4, r3
 800ee88:	bf38      	it	cc
 800ee8a:	3108      	addcc	r1, #8
 800ee8c:	f104 0401 	add.w	r4, r4, #1
 800ee90:	bf38      	it	cc
 800ee92:	6101      	strcc	r1, [r0, #16]
 800ee94:	6084      	str	r4, [r0, #8]
 800ee96:	6903      	ldr	r3, [r0, #16]
 800ee98:	f8a3 a000 	strh.w	sl, [r3]
 800ee9c:	805a      	strh	r2, [r3, #2]
 800ee9e:	809e      	strh	r6, [r3, #4]
 800eea0:	80de      	strh	r6, [r3, #6]
 800eea2:	9b06      	ldr	r3, [sp, #24]
 800eea4:	4293      	cmp	r3, r2
 800eea6:	464f      	mov	r7, r9
 800eea8:	d19c      	bne.n	800ede4 <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 800eeaa:	9b01      	ldr	r3, [sp, #4]
 800eeac:	6907      	ldr	r7, [r0, #16]
 800eeae:	f1c3 0620 	rsb	r6, r3, #32
 800eeb2:	9b05      	ldr	r3, [sp, #20]
 800eeb4:	ea4f 1e63 	mov.w	lr, r3, asr #5
 800eeb8:	9b04      	ldr	r3, [sp, #16]
 800eeba:	429e      	cmp	r6, r3
 800eebc:	f040 81cc 	bne.w	800f258 <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 800eec0:	f9b7 3000 	ldrsh.w	r3, [r7]
 800eec4:	459e      	cmp	lr, r3
 800eec6:	d104      	bne.n	800eed2 <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 800eec8:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800eecc:	429a      	cmp	r2, r3
 800eece:	f43f ae36 	beq.w	800eb3e <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800eed2:	88f9      	ldrh	r1, [r7, #6]
 800eed4:	88bb      	ldrh	r3, [r7, #4]
 800eed6:	430b      	orrs	r3, r1
 800eed8:	d010      	beq.n	800eefc <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 800eeda:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800eede:	2b00      	cmp	r3, #0
 800eee0:	db0c      	blt.n	800eefc <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 800eee2:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 800eee4:	428b      	cmp	r3, r1
 800eee6:	da09      	bge.n	800eefc <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 800eee8:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 800eeec:	428b      	cmp	r3, r1
 800eeee:	bf38      	it	cc
 800eef0:	3708      	addcc	r7, #8
 800eef2:	f103 0301 	add.w	r3, r3, #1
 800eef6:	bf38      	it	cc
 800eef8:	6107      	strcc	r7, [r0, #16]
 800eefa:	6083      	str	r3, [r0, #8]
 800eefc:	6903      	ldr	r3, [r0, #16]
 800eefe:	f8a3 e000 	strh.w	lr, [r3]
 800ef02:	e5ff      	b.n	800eb04 <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 800ef04:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 800ef06:	9c03      	ldr	r4, [sp, #12]
 800ef08:	42a2      	cmp	r2, r4
 800ef0a:	f6ff ae18 	blt.w	800eb3e <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800ef0e:	9c06      	ldr	r4, [sp, #24]
 800ef10:	42a2      	cmp	r2, r4
 800ef12:	bfb8      	it	lt
 800ef14:	3201      	addlt	r2, #1
 800ef16:	9c08      	ldr	r4, [sp, #32]
 800ef18:	bfb8      	it	lt
 800ef1a:	9206      	strlt	r2, [sp, #24]
 800ef1c:	f1c3 0220 	rsb	r2, r3, #32
 800ef20:	4362      	muls	r2, r4
 800ef22:	2401      	movs	r4, #1
 800ef24:	940b      	str	r4, [sp, #44]	; 0x2c
 800ef26:	2420      	movs	r4, #32
 800ef28:	e6d5      	b.n	800ecd6 <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 800ef2a:	f009 021f 	and.w	r2, r9, #31
 800ef2e:	ea4f 1861 	mov.w	r8, r1, asr #5
 800ef32:	920c      	str	r2, [sp, #48]	; 0x30
 800ef34:	9a01      	ldr	r2, [sp, #4]
 800ef36:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 800ef3a:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 800ef3e:	45b0      	cmp	r8, r6
 800ef40:	f001 011f 	and.w	r1, r1, #31
 800ef44:	eba2 0203 	sub.w	r2, r2, r3
 800ef48:	d108      	bne.n	800ef5c <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 800ef4a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800ef4c:	4419      	add	r1, r3
 800ef4e:	4496      	add	lr, r2
 800ef50:	fb02 a101 	mla	r1, r2, r1, sl
 800ef54:	f8a5 e004 	strh.w	lr, [r5, #4]
 800ef58:	80e9      	strh	r1, [r5, #6]
 800ef5a:	e6f9      	b.n	800ed50 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 800ef5c:	2c00      	cmp	r4, #0
 800ef5e:	f2c0 80a9 	blt.w	800f0b4 <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 800ef62:	2701      	movs	r7, #1
 800ef64:	f1c1 0c20 	rsb	ip, r1, #32
 800ef68:	970a      	str	r7, [sp, #40]	; 0x28
 800ef6a:	fb02 f20c 	mul.w	r2, r2, ip
 800ef6e:	2720      	movs	r7, #32
 800ef70:	9709      	str	r7, [sp, #36]	; 0x24
 800ef72:	fb92 fcf4 	sdiv	ip, r2, r4
 800ef76:	9f09      	ldr	r7, [sp, #36]	; 0x24
 800ef78:	fb04 221c 	mls	r2, r4, ip, r2
 800ef7c:	2a00      	cmp	r2, #0
 800ef7e:	bfb8      	it	lt
 800ef80:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 800ef84:	4439      	add	r1, r7
 800ef86:	fb0c a101 	mla	r1, ip, r1, sl
 800ef8a:	80e9      	strh	r1, [r5, #6]
 800ef8c:	44e6      	add	lr, ip
 800ef8e:	990a      	ldr	r1, [sp, #40]	; 0x28
 800ef90:	f8a5 e004 	strh.w	lr, [r5, #4]
 800ef94:	eb08 0501 	add.w	r5, r8, r1
 800ef98:	6901      	ldr	r1, [r0, #16]
 800ef9a:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 800ef9e:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 800efa2:	bfb8      	it	lt
 800efa4:	1912      	addlt	r2, r2, r4
 800efa6:	ea58 070e 	orrs.w	r7, r8, lr
 800efaa:	d010      	beq.n	800efce <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 800efac:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 800efb0:	f1be 0f00 	cmp.w	lr, #0
 800efb4:	db0b      	blt.n	800efce <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 800efb6:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800efb8:	45be      	cmp	lr, r7
 800efba:	da08      	bge.n	800efce <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 800efbc:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 800efc0:	45be      	cmp	lr, r7
 800efc2:	bf3c      	itt	cc
 800efc4:	3108      	addcc	r1, #8
 800efc6:	6101      	strcc	r1, [r0, #16]
 800efc8:	f10e 0101 	add.w	r1, lr, #1
 800efcc:	6081      	str	r1, [r0, #8]
 800efce:	6901      	ldr	r1, [r0, #16]
 800efd0:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 800efd4:	800d      	strh	r5, [r1, #0]
 800efd6:	f04f 0e00 	mov.w	lr, #0
 800efda:	42ae      	cmp	r6, r5
 800efdc:	f8a1 8002 	strh.w	r8, [r1, #2]
 800efe0:	f8a1 e004 	strh.w	lr, [r1, #4]
 800efe4:	f8a1 e006 	strh.w	lr, [r1, #6]
 800efe8:	4463      	add	r3, ip
 800efea:	d054      	beq.n	800f096 <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 800efec:	9901      	ldr	r1, [sp, #4]
 800efee:	1ac9      	subs	r1, r1, r3
 800eff0:	4461      	add	r1, ip
 800eff2:	0149      	lsls	r1, r1, #5
 800eff4:	fb91 fef4 	sdiv	lr, r1, r4
 800eff8:	fb04 111e 	mls	r1, r4, lr, r1
 800effc:	2900      	cmp	r1, #0
 800effe:	bfb8      	it	lt
 800f000:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 800f004:	f10e 0701 	add.w	r7, lr, #1
 800f008:	bfb8      	it	lt
 800f00a:	1909      	addlt	r1, r1, r4
 800f00c:	1b12      	subs	r2, r2, r4
 800f00e:	970d      	str	r7, [sp, #52]	; 0x34
 800f010:	f8d0 a010 	ldr.w	sl, [r0, #16]
 800f014:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 800f016:	f8ba b004 	ldrh.w	fp, [sl, #4]
 800f01a:	1852      	adds	r2, r2, r1
 800f01c:	bf54      	ite	pl
 800f01e:	f8dd c034 	ldrpl.w	ip, [sp, #52]	; 0x34
 800f022:	46f4      	movmi	ip, lr
 800f024:	44e3      	add	fp, ip
 800f026:	f8aa b004 	strh.w	fp, [sl, #4]
 800f02a:	f8ba b006 	ldrh.w	fp, [sl, #6]
 800f02e:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 800f032:	f8aa b006 	strh.w	fp, [sl, #6]
 800f036:	4463      	add	r3, ip
 800f038:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800f03c:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800f040:	f8bc a004 	ldrh.w	sl, [ip, #4]
 800f044:	bf58      	it	pl
 800f046:	1b12      	subpl	r2, r2, r4
 800f048:	443d      	add	r5, r7
 800f04a:	ea5b 070a 	orrs.w	r7, fp, sl
 800f04e:	d014      	beq.n	800f07a <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 800f050:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 800f054:	f1ba 0f00 	cmp.w	sl, #0
 800f058:	db0f      	blt.n	800f07a <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 800f05a:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800f05c:	45ba      	cmp	sl, r7
 800f05e:	da0c      	bge.n	800f07a <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 800f060:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 800f064:	45ba      	cmp	sl, r7
 800f066:	bf38      	it	cc
 800f068:	f10c 0c08 	addcc.w	ip, ip, #8
 800f06c:	f10a 0a01 	add.w	sl, sl, #1
 800f070:	bf38      	it	cc
 800f072:	f8c0 c010 	strcc.w	ip, [r0, #16]
 800f076:	f8c0 a008 	str.w	sl, [r0, #8]
 800f07a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800f07e:	f04f 0700 	mov.w	r7, #0
 800f082:	42ae      	cmp	r6, r5
 800f084:	f8ac 5000 	strh.w	r5, [ip]
 800f088:	f8ac 8002 	strh.w	r8, [ip, #2]
 800f08c:	f8ac 7004 	strh.w	r7, [ip, #4]
 800f090:	f8ac 7006 	strh.w	r7, [ip, #6]
 800f094:	d1bc      	bne.n	800f010 <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 800f096:	6904      	ldr	r4, [r0, #16]
 800f098:	9a01      	ldr	r2, [sp, #4]
 800f09a:	990c      	ldr	r1, [sp, #48]	; 0x30
 800f09c:	1ad3      	subs	r3, r2, r3
 800f09e:	88a2      	ldrh	r2, [r4, #4]
 800f0a0:	441a      	add	r2, r3
 800f0a2:	80a2      	strh	r2, [r4, #4]
 800f0a4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800f0a6:	3120      	adds	r1, #32
 800f0a8:	1a89      	subs	r1, r1, r2
 800f0aa:	88e2      	ldrh	r2, [r4, #6]
 800f0ac:	fb03 2301 	mla	r3, r3, r1, r2
 800f0b0:	80e3      	strh	r3, [r4, #6]
 800f0b2:	e64d      	b.n	800ed50 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 800f0b4:	f04f 37ff 	mov.w	r7, #4294967295
 800f0b8:	970a      	str	r7, [sp, #40]	; 0x28
 800f0ba:	434a      	muls	r2, r1
 800f0bc:	4264      	negs	r4, r4
 800f0be:	2700      	movs	r7, #0
 800f0c0:	e756      	b.n	800ef70 <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 800f0c2:	ea4f 1867 	mov.w	r8, r7, asr #5
 800f0c6:	f009 031f 	and.w	r3, r9, #31
 800f0ca:	45d0      	cmp	r8, sl
 800f0cc:	f007 071f 	and.w	r7, r7, #31
 800f0d0:	930f      	str	r3, [sp, #60]	; 0x3c
 800f0d2:	fa1f fc8c 	uxth.w	ip, ip
 800f0d6:	fa1f fe8e 	uxth.w	lr, lr
 800f0da:	d10a      	bne.n	800f0f2 <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 800f0dc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800f0de:	449c      	add	ip, r3
 800f0e0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800f0e2:	f8a5 c004 	strh.w	ip, [r5, #4]
 800f0e6:	441f      	add	r7, r3
 800f0e8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800f0ea:	fb03 e707 	mla	r7, r3, r7, lr
 800f0ee:	80ef      	strh	r7, [r5, #6]
 800f0f0:	e6b9      	b.n	800ee66 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800f0f2:	2900      	cmp	r1, #0
 800f0f4:	f2c0 80a8 	blt.w	800f248 <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 800f0f8:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800f0fa:	f1c7 0320 	rsb	r3, r7, #32
 800f0fe:	4363      	muls	r3, r4
 800f100:	2401      	movs	r4, #1
 800f102:	940d      	str	r4, [sp, #52]	; 0x34
 800f104:	2420      	movs	r4, #32
 800f106:	940c      	str	r4, [sp, #48]	; 0x30
 800f108:	fb93 f4f1 	sdiv	r4, r3, r1
 800f10c:	fb01 3b14 	mls	fp, r1, r4, r3
 800f110:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800f112:	f1bb 0f00 	cmp.w	fp, #0
 800f116:	bfb8      	it	lt
 800f118:	f104 34ff 	addlt.w	r4, r4, #4294967295
 800f11c:	441f      	add	r7, r3
 800f11e:	fb04 e707 	mla	r7, r4, r7, lr
 800f122:	44a4      	add	ip, r4
 800f124:	f8a5 c004 	strh.w	ip, [r5, #4]
 800f128:	80ef      	strh	r7, [r5, #6]
 800f12a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800f12e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f130:	f8bc e006 	ldrh.w	lr, [ip, #6]
 800f134:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800f138:	bfb8      	it	lt
 800f13a:	448b      	addlt	fp, r1
 800f13c:	eb08 0503 	add.w	r5, r8, r3
 800f140:	ea5e 0307 	orrs.w	r3, lr, r7
 800f144:	d011      	beq.n	800f16a <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 800f146:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 800f14a:	f1be 0f00 	cmp.w	lr, #0
 800f14e:	db0c      	blt.n	800f16a <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 800f150:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800f152:	45be      	cmp	lr, r7
 800f154:	da09      	bge.n	800f16a <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 800f156:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 800f15a:	45be      	cmp	lr, r7
 800f15c:	bf3c      	itt	cc
 800f15e:	f10c 0708 	addcc.w	r7, ip, #8
 800f162:	6107      	strcc	r7, [r0, #16]
 800f164:	f10e 0701 	add.w	r7, lr, #1
 800f168:	6087      	str	r7, [r0, #8]
 800f16a:	6907      	ldr	r7, [r0, #16]
 800f16c:	b213      	sxth	r3, r2
 800f16e:	9310      	str	r3, [sp, #64]	; 0x40
 800f170:	807b      	strh	r3, [r7, #2]
 800f172:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f174:	803d      	strh	r5, [r7, #0]
 800f176:	4555      	cmp	r5, sl
 800f178:	80be      	strh	r6, [r7, #4]
 800f17a:	80fe      	strh	r6, [r7, #6]
 800f17c:	eb04 0c03 	add.w	ip, r4, r3
 800f180:	d051      	beq.n	800f226 <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 800f182:	9b01      	ldr	r3, [sp, #4]
 800f184:	eba3 070c 	sub.w	r7, r3, ip
 800f188:	443c      	add	r4, r7
 800f18a:	0164      	lsls	r4, r4, #5
 800f18c:	fb94 f8f1 	sdiv	r8, r4, r1
 800f190:	fb01 4418 	mls	r4, r1, r8, r4
 800f194:	2c00      	cmp	r4, #0
 800f196:	bfb8      	it	lt
 800f198:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800f19c:	ebab 0301 	sub.w	r3, fp, r1
 800f1a0:	f108 0701 	add.w	r7, r8, #1
 800f1a4:	bfb8      	it	lt
 800f1a6:	1864      	addlt	r4, r4, r1
 800f1a8:	9309      	str	r3, [sp, #36]	; 0x24
 800f1aa:	9711      	str	r7, [sp, #68]	; 0x44
 800f1ac:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f1ae:	f8d0 e010 	ldr.w	lr, [r0, #16]
 800f1b2:	191b      	adds	r3, r3, r4
 800f1b4:	bf58      	it	pl
 800f1b6:	9f11      	ldrpl	r7, [sp, #68]	; 0x44
 800f1b8:	f8be b004 	ldrh.w	fp, [lr, #4]
 800f1bc:	9309      	str	r3, [sp, #36]	; 0x24
 800f1be:	bf48      	it	mi
 800f1c0:	4647      	movmi	r7, r8
 800f1c2:	44bb      	add	fp, r7
 800f1c4:	f8ae b004 	strh.w	fp, [lr, #4]
 800f1c8:	f8be b006 	ldrh.w	fp, [lr, #6]
 800f1cc:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800f1d0:	f8ae b006 	strh.w	fp, [lr, #6]
 800f1d4:	f8d0 e010 	ldr.w	lr, [r0, #16]
 800f1d8:	44bc      	add	ip, r7
 800f1da:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 800f1dc:	f8be b006 	ldrh.w	fp, [lr, #6]
 800f1e0:	443d      	add	r5, r7
 800f1e2:	f8be 7004 	ldrh.w	r7, [lr, #4]
 800f1e6:	bf5c      	itt	pl
 800f1e8:	1a5b      	subpl	r3, r3, r1
 800f1ea:	9309      	strpl	r3, [sp, #36]	; 0x24
 800f1ec:	ea5b 0307 	orrs.w	r3, fp, r7
 800f1f0:	d011      	beq.n	800f216 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 800f1f2:	f9be b002 	ldrsh.w	fp, [lr, #2]
 800f1f6:	f1bb 0f00 	cmp.w	fp, #0
 800f1fa:	db0c      	blt.n	800f216 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 800f1fc:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800f1fe:	45bb      	cmp	fp, r7
 800f200:	da09      	bge.n	800f216 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 800f202:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800f206:	45bb      	cmp	fp, r7
 800f208:	bf3c      	itt	cc
 800f20a:	f10e 0708 	addcc.w	r7, lr, #8
 800f20e:	6107      	strcc	r7, [r0, #16]
 800f210:	f10b 0701 	add.w	r7, fp, #1
 800f214:	6087      	str	r7, [r0, #8]
 800f216:	6907      	ldr	r7, [r0, #16]
 800f218:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f21a:	803d      	strh	r5, [r7, #0]
 800f21c:	4555      	cmp	r5, sl
 800f21e:	807b      	strh	r3, [r7, #2]
 800f220:	80be      	strh	r6, [r7, #4]
 800f222:	80fe      	strh	r6, [r7, #6]
 800f224:	d1c2      	bne.n	800f1ac <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 800f226:	9b01      	ldr	r3, [sp, #4]
 800f228:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 800f22a:	eba3 0c0c 	sub.w	ip, r3, ip
 800f22e:	6903      	ldr	r3, [r0, #16]
 800f230:	8899      	ldrh	r1, [r3, #4]
 800f232:	4461      	add	r1, ip
 800f234:	8099      	strh	r1, [r3, #4]
 800f236:	990c      	ldr	r1, [sp, #48]	; 0x30
 800f238:	3720      	adds	r7, #32
 800f23a:	1a7f      	subs	r7, r7, r1
 800f23c:	88d9      	ldrh	r1, [r3, #6]
 800f23e:	fb0c 1c07 	mla	ip, ip, r7, r1
 800f242:	f8a3 c006 	strh.w	ip, [r3, #6]
 800f246:	e60e      	b.n	800ee66 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800f248:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800f24a:	f04f 34ff 	mov.w	r4, #4294967295
 800f24e:	940d      	str	r4, [sp, #52]	; 0x34
 800f250:	437b      	muls	r3, r7
 800f252:	4249      	negs	r1, r1
 800f254:	2400      	movs	r4, #0
 800f256:	e756      	b.n	800f106 <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 800f258:	9905      	ldr	r1, [sp, #20]
 800f25a:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 800f25e:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 800f262:	f001 011f 	and.w	r1, r1, #31
 800f266:	ea4f 1b69 	mov.w	fp, r9, asr #5
 800f26a:	9102      	str	r1, [sp, #8]
 800f26c:	9904      	ldr	r1, [sp, #16]
 800f26e:	45f3      	cmp	fp, lr
 800f270:	f009 0c1f 	and.w	ip, r9, #31
 800f274:	eba1 0406 	sub.w	r4, r1, r6
 800f278:	d108      	bne.n	800f28c <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 800f27a:	9b02      	ldr	r3, [sp, #8]
 800f27c:	449c      	add	ip, r3
 800f27e:	44a0      	add	r8, r4
 800f280:	fb04 a40c 	mla	r4, r4, ip, sl
 800f284:	f8a7 8004 	strh.w	r8, [r7, #4]
 800f288:	80fc      	strh	r4, [r7, #6]
 800f28a:	e458      	b.n	800eb3e <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800f28c:	9905      	ldr	r1, [sp, #20]
 800f28e:	ebb1 0109 	subs.w	r1, r1, r9
 800f292:	bf5b      	ittet	pl
 800f294:	f1cc 0520 	rsbpl	r5, ip, #32
 800f298:	436c      	mulpl	r4, r5
 800f29a:	2500      	movmi	r5, #0
 800f29c:	2520      	movpl	r5, #32
 800f29e:	bf44      	itt	mi
 800f2a0:	fb04 f40c 	mulmi.w	r4, r4, ip
 800f2a4:	4249      	negmi	r1, r1
 800f2a6:	9501      	str	r5, [sp, #4]
 800f2a8:	9b01      	ldr	r3, [sp, #4]
 800f2aa:	fb94 f5f1 	sdiv	r5, r4, r1
 800f2ae:	fb01 4415 	mls	r4, r1, r5, r4
 800f2b2:	bf54      	ite	pl
 800f2b4:	f04f 0901 	movpl.w	r9, #1
 800f2b8:	f04f 39ff 	movmi.w	r9, #4294967295
 800f2bc:	2c00      	cmp	r4, #0
 800f2be:	bfb8      	it	lt
 800f2c0:	f105 35ff 	addlt.w	r5, r5, #4294967295
 800f2c4:	449c      	add	ip, r3
 800f2c6:	44a8      	add	r8, r5
 800f2c8:	fb05 ac0c 	mla	ip, r5, ip, sl
 800f2cc:	f8a7 8004 	strh.w	r8, [r7, #4]
 800f2d0:	f8a7 c006 	strh.w	ip, [r7, #6]
 800f2d4:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800f2d8:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 800f2dc:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800f2e0:	bfb8      	it	lt
 800f2e2:	1864      	addlt	r4, r4, r1
 800f2e4:	ea58 0707 	orrs.w	r7, r8, r7
 800f2e8:	eb0b 0309 	add.w	r3, fp, r9
 800f2ec:	d011      	beq.n	800f312 <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 800f2ee:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 800f2f2:	f1b8 0f00 	cmp.w	r8, #0
 800f2f6:	db0c      	blt.n	800f312 <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 800f2f8:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800f2fa:	45b8      	cmp	r8, r7
 800f2fc:	da09      	bge.n	800f312 <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 800f2fe:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 800f302:	45b8      	cmp	r8, r7
 800f304:	bf3c      	itt	cc
 800f306:	f10c 0708 	addcc.w	r7, ip, #8
 800f30a:	6107      	strcc	r7, [r0, #16]
 800f30c:	f108 0701 	add.w	r7, r8, #1
 800f310:	6087      	str	r7, [r0, #8]
 800f312:	6907      	ldr	r7, [r0, #16]
 800f314:	f04f 0c00 	mov.w	ip, #0
 800f318:	b212      	sxth	r2, r2
 800f31a:	459e      	cmp	lr, r3
 800f31c:	803b      	strh	r3, [r7, #0]
 800f31e:	807a      	strh	r2, [r7, #2]
 800f320:	f8a7 c004 	strh.w	ip, [r7, #4]
 800f324:	f8a7 c006 	strh.w	ip, [r7, #6]
 800f328:	442e      	add	r6, r5
 800f32a:	d04d      	beq.n	800f3c8 <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 800f32c:	9f04      	ldr	r7, [sp, #16]
 800f32e:	1bbf      	subs	r7, r7, r6
 800f330:	443d      	add	r5, r7
 800f332:	016d      	lsls	r5, r5, #5
 800f334:	fb95 f8f1 	sdiv	r8, r5, r1
 800f338:	fb01 5518 	mls	r5, r1, r8, r5
 800f33c:	4565      	cmp	r5, ip
 800f33e:	bfb8      	it	lt
 800f340:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800f344:	f108 0701 	add.w	r7, r8, #1
 800f348:	bfb8      	it	lt
 800f34a:	186d      	addlt	r5, r5, r1
 800f34c:	1a64      	subs	r4, r4, r1
 800f34e:	9703      	str	r7, [sp, #12]
 800f350:	f04f 0a00 	mov.w	sl, #0
 800f354:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800f358:	1964      	adds	r4, r4, r5
 800f35a:	bf58      	it	pl
 800f35c:	9f03      	ldrpl	r7, [sp, #12]
 800f35e:	f8bc b004 	ldrh.w	fp, [ip, #4]
 800f362:	bf48      	it	mi
 800f364:	4647      	movmi	r7, r8
 800f366:	44bb      	add	fp, r7
 800f368:	f8ac b004 	strh.w	fp, [ip, #4]
 800f36c:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800f370:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800f374:	f8ac b006 	strh.w	fp, [ip, #6]
 800f378:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800f37c:	443e      	add	r6, r7
 800f37e:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800f382:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800f386:	bf58      	it	pl
 800f388:	1a64      	subpl	r4, r4, r1
 800f38a:	ea5b 0707 	orrs.w	r7, fp, r7
 800f38e:	444b      	add	r3, r9
 800f390:	d011      	beq.n	800f3b6 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 800f392:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 800f396:	f1bb 0f00 	cmp.w	fp, #0
 800f39a:	db0c      	blt.n	800f3b6 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 800f39c:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800f39e:	45bb      	cmp	fp, r7
 800f3a0:	da09      	bge.n	800f3b6 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 800f3a2:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800f3a6:	45bb      	cmp	fp, r7
 800f3a8:	bf3c      	itt	cc
 800f3aa:	f10c 0708 	addcc.w	r7, ip, #8
 800f3ae:	6107      	strcc	r7, [r0, #16]
 800f3b0:	f10b 0701 	add.w	r7, fp, #1
 800f3b4:	6087      	str	r7, [r0, #8]
 800f3b6:	6907      	ldr	r7, [r0, #16]
 800f3b8:	459e      	cmp	lr, r3
 800f3ba:	803b      	strh	r3, [r7, #0]
 800f3bc:	807a      	strh	r2, [r7, #2]
 800f3be:	f8a7 a004 	strh.w	sl, [r7, #4]
 800f3c2:	f8a7 a006 	strh.w	sl, [r7, #6]
 800f3c6:	d1c5      	bne.n	800f354 <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 800f3c8:	9b04      	ldr	r3, [sp, #16]
 800f3ca:	1b9e      	subs	r6, r3, r6
 800f3cc:	6903      	ldr	r3, [r0, #16]
 800f3ce:	889a      	ldrh	r2, [r3, #4]
 800f3d0:	4432      	add	r2, r6
 800f3d2:	809a      	strh	r2, [r3, #4]
 800f3d4:	9a02      	ldr	r2, [sp, #8]
 800f3d6:	f102 0c20 	add.w	ip, r2, #32
 800f3da:	9a01      	ldr	r2, [sp, #4]
 800f3dc:	ebac 0c02 	sub.w	ip, ip, r2
 800f3e0:	88da      	ldrh	r2, [r3, #6]
 800f3e2:	fb06 260c 	mla	r6, r6, ip, r2
 800f3e6:	80de      	strh	r6, [r3, #6]
 800f3e8:	f7ff bba9 	b.w	800eb3e <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

0800f3ec <_ZN8touchgfx7Outline6lineToEii>:
 800f3ec:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800f3ee:	079b      	lsls	r3, r3, #30
 800f3f0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800f3f2:	460e      	mov	r6, r1
 800f3f4:	4615      	mov	r5, r2
 800f3f6:	d511      	bpl.n	800f41c <_ZN8touchgfx7Outline6lineToEii+0x30>
 800f3f8:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 800f3fc:	ea86 0701 	eor.w	r7, r6, r1
 800f400:	ea85 0302 	eor.w	r3, r5, r2
 800f404:	433b      	orrs	r3, r7
 800f406:	d009      	beq.n	800f41c <_ZN8touchgfx7Outline6lineToEii+0x30>
 800f408:	4633      	mov	r3, r6
 800f40a:	9500      	str	r5, [sp, #0]
 800f40c:	f7ff fb3e 	bl	800ea8c <_ZN8touchgfx7Outline10renderLineEiiii>
 800f410:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800f412:	e9c0 6505 	strd	r6, r5, [r0, #20]
 800f416:	f043 0301 	orr.w	r3, r3, #1
 800f41a:	6243      	str	r3, [r0, #36]	; 0x24
 800f41c:	b003      	add	sp, #12
 800f41e:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800f420 <_ZN8touchgfx7Outline6moveToEii>:
 800f420:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f422:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800f424:	4615      	mov	r5, r2
 800f426:	079a      	lsls	r2, r3, #30
 800f428:	4604      	mov	r4, r0
 800f42a:	460e      	mov	r6, r1
 800f42c:	d401      	bmi.n	800f432 <_ZN8touchgfx7Outline6moveToEii+0x12>
 800f42e:	f7ff faf9 	bl	800ea24 <_ZN8touchgfx7Outline5resetEv>
 800f432:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800f434:	07db      	lsls	r3, r3, #31
 800f436:	d504      	bpl.n	800f442 <_ZN8touchgfx7Outline6moveToEii+0x22>
 800f438:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 800f43c:	4620      	mov	r0, r4
 800f43e:	f7ff ffd5 	bl	800f3ec <_ZN8touchgfx7Outline6lineToEii>
 800f442:	6923      	ldr	r3, [r4, #16]
 800f444:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f448:	1170      	asrs	r0, r6, #5
 800f44a:	4290      	cmp	r0, r2
 800f44c:	ea4f 1165 	mov.w	r1, r5, asr #5
 800f450:	d103      	bne.n	800f45a <_ZN8touchgfx7Outline6moveToEii+0x3a>
 800f452:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800f456:	4291      	cmp	r1, r2
 800f458:	d01a      	beq.n	800f490 <_ZN8touchgfx7Outline6moveToEii+0x70>
 800f45a:	88df      	ldrh	r7, [r3, #6]
 800f45c:	889a      	ldrh	r2, [r3, #4]
 800f45e:	433a      	orrs	r2, r7
 800f460:	d010      	beq.n	800f484 <_ZN8touchgfx7Outline6moveToEii+0x64>
 800f462:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800f466:	2a00      	cmp	r2, #0
 800f468:	db0c      	blt.n	800f484 <_ZN8touchgfx7Outline6moveToEii+0x64>
 800f46a:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 800f46c:	42ba      	cmp	r2, r7
 800f46e:	da09      	bge.n	800f484 <_ZN8touchgfx7Outline6moveToEii+0x64>
 800f470:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 800f474:	42ba      	cmp	r2, r7
 800f476:	bf38      	it	cc
 800f478:	3308      	addcc	r3, #8
 800f47a:	f102 0201 	add.w	r2, r2, #1
 800f47e:	bf38      	it	cc
 800f480:	6123      	strcc	r3, [r4, #16]
 800f482:	60a2      	str	r2, [r4, #8]
 800f484:	6923      	ldr	r3, [r4, #16]
 800f486:	2200      	movs	r2, #0
 800f488:	8018      	strh	r0, [r3, #0]
 800f48a:	8059      	strh	r1, [r3, #2]
 800f48c:	809a      	strh	r2, [r3, #4]
 800f48e:	80da      	strh	r2, [r3, #6]
 800f490:	6166      	str	r6, [r4, #20]
 800f492:	e9c4 5606 	strd	r5, r6, [r4, #24]
 800f496:	6225      	str	r5, [r4, #32]
 800f498:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800f49a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 800f49a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f49e:	b0d0      	sub	sp, #320	; 0x140
 800f4a0:	466c      	mov	r4, sp
 800f4a2:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 800f4a6:	4627      	mov	r7, r4
 800f4a8:	1a0d      	subs	r5, r1, r0
 800f4aa:	2d48      	cmp	r5, #72	; 0x48
 800f4ac:	f100 0308 	add.w	r3, r0, #8
 800f4b0:	f340 80d5 	ble.w	800f65e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 800f4b4:	112d      	asrs	r5, r5, #4
 800f4b6:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 800f4ba:	f9b0 9000 	ldrsh.w	r9, [r0]
 800f4be:	6816      	ldr	r6, [r2, #0]
 800f4c0:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 800f4c4:	6006      	str	r6, [r0, #0]
 800f4c6:	6856      	ldr	r6, [r2, #4]
 800f4c8:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 800f4cc:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 800f4d0:	6046      	str	r6, [r0, #4]
 800f4d2:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 800f4d6:	f8a2 8002 	strh.w	r8, [r2, #2]
 800f4da:	f8a2 e004 	strh.w	lr, [r2, #4]
 800f4de:	f8a2 c006 	strh.w	ip, [r2, #6]
 800f4e2:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 800f4e6:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 800f4ea:	4565      	cmp	r5, ip
 800f4ec:	f1a1 0208 	sub.w	r2, r1, #8
 800f4f0:	db06      	blt.n	800f500 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 800f4f2:	d119      	bne.n	800f528 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 800f4f4:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 800f4f8:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 800f4fc:	42ae      	cmp	r6, r5
 800f4fe:	dd13      	ble.n	800f528 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 800f500:	460e      	mov	r6, r1
 800f502:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 800f506:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 800f50a:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 800f50e:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 800f512:	601d      	str	r5, [r3, #0]
 800f514:	6875      	ldr	r5, [r6, #4]
 800f516:	605d      	str	r5, [r3, #4]
 800f518:	f821 9c08 	strh.w	r9, [r1, #-8]
 800f51c:	f821 cc06 	strh.w	ip, [r1, #-6]
 800f520:	f821 8c04 	strh.w	r8, [r1, #-4]
 800f524:	f821 ec02 	strh.w	lr, [r1, #-2]
 800f528:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800f52c:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 800f530:	42ae      	cmp	r6, r5
 800f532:	db06      	blt.n	800f542 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 800f534:	d116      	bne.n	800f564 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 800f536:	f9b0 c000 	ldrsh.w	ip, [r0]
 800f53a:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 800f53e:	45ac      	cmp	ip, r5
 800f540:	da10      	bge.n	800f564 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 800f542:	681d      	ldr	r5, [r3, #0]
 800f544:	f9b0 8000 	ldrsh.w	r8, [r0]
 800f548:	6005      	str	r5, [r0, #0]
 800f54a:	685d      	ldr	r5, [r3, #4]
 800f54c:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 800f550:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 800f554:	f8a0 8008 	strh.w	r8, [r0, #8]
 800f558:	6045      	str	r5, [r0, #4]
 800f55a:	8146      	strh	r6, [r0, #10]
 800f55c:	f8a0 e00c 	strh.w	lr, [r0, #12]
 800f560:	f8a0 c00e 	strh.w	ip, [r0, #14]
 800f564:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 800f568:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 800f56c:	4565      	cmp	r5, ip
 800f56e:	db06      	blt.n	800f57e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 800f570:	d119      	bne.n	800f5a6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800f572:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 800f576:	f9b0 5000 	ldrsh.w	r5, [r0]
 800f57a:	42ae      	cmp	r6, r5
 800f57c:	da13      	bge.n	800f5a6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800f57e:	460e      	mov	r6, r1
 800f580:	f9b0 9000 	ldrsh.w	r9, [r0]
 800f584:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 800f588:	6005      	str	r5, [r0, #0]
 800f58a:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 800f58e:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 800f592:	6875      	ldr	r5, [r6, #4]
 800f594:	6045      	str	r5, [r0, #4]
 800f596:	f821 9c08 	strh.w	r9, [r1, #-8]
 800f59a:	f821 cc06 	strh.w	ip, [r1, #-6]
 800f59e:	f821 8c04 	strh.w	r8, [r1, #-4]
 800f5a2:	f821 ec02 	strh.w	lr, [r1, #-2]
 800f5a6:	3308      	adds	r3, #8
 800f5a8:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 800f5ac:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 800f5b0:	45e6      	cmp	lr, ip
 800f5b2:	dbf8      	blt.n	800f5a6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800f5b4:	d105      	bne.n	800f5c2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800f5b6:	f9b3 6000 	ldrsh.w	r6, [r3]
 800f5ba:	f9b0 5000 	ldrsh.w	r5, [r0]
 800f5be:	42ae      	cmp	r6, r5
 800f5c0:	dbf1      	blt.n	800f5a6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800f5c2:	4615      	mov	r5, r2
 800f5c4:	3a08      	subs	r2, #8
 800f5c6:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 800f5ca:	45b4      	cmp	ip, r6
 800f5cc:	dbf9      	blt.n	800f5c2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800f5ce:	d105      	bne.n	800f5dc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 800f5d0:	f9b0 8000 	ldrsh.w	r8, [r0]
 800f5d4:	f9b2 6000 	ldrsh.w	r6, [r2]
 800f5d8:	45b0      	cmp	r8, r6
 800f5da:	dbf2      	blt.n	800f5c2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800f5dc:	4293      	cmp	r3, r2
 800f5de:	f1a5 0608 	sub.w	r6, r5, #8
 800f5e2:	d816      	bhi.n	800f612 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 800f5e4:	f8d6 c000 	ldr.w	ip, [r6]
 800f5e8:	f9b3 a000 	ldrsh.w	sl, [r3]
 800f5ec:	f8c3 c000 	str.w	ip, [r3]
 800f5f0:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 800f5f4:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 800f5f8:	f8d6 c004 	ldr.w	ip, [r6, #4]
 800f5fc:	f8c3 c004 	str.w	ip, [r3, #4]
 800f600:	f825 ac08 	strh.w	sl, [r5, #-8]
 800f604:	f825 ec06 	strh.w	lr, [r5, #-6]
 800f608:	f825 9c04 	strh.w	r9, [r5, #-4]
 800f60c:	f825 8c02 	strh.w	r8, [r5, #-2]
 800f610:	e7c9      	b.n	800f5a6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800f612:	f8d6 e000 	ldr.w	lr, [r6]
 800f616:	f9b0 a000 	ldrsh.w	sl, [r0]
 800f61a:	f8c0 e000 	str.w	lr, [r0]
 800f61e:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 800f622:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 800f626:	f8d6 e004 	ldr.w	lr, [r6, #4]
 800f62a:	f8c0 e004 	str.w	lr, [r0, #4]
 800f62e:	f825 ac08 	strh.w	sl, [r5, #-8]
 800f632:	f825 cc06 	strh.w	ip, [r5, #-6]
 800f636:	f825 9c04 	strh.w	r9, [r5, #-4]
 800f63a:	f825 8c02 	strh.w	r8, [r5, #-2]
 800f63e:	1acd      	subs	r5, r1, r3
 800f640:	1a16      	subs	r6, r2, r0
 800f642:	10ed      	asrs	r5, r5, #3
 800f644:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 800f648:	bfb5      	itete	lt
 800f64a:	e9c4 0200 	strdlt	r0, r2, [r4]
 800f64e:	e9c4 3100 	strdge	r3, r1, [r4]
 800f652:	460a      	movlt	r2, r1
 800f654:	4603      	movge	r3, r0
 800f656:	3408      	adds	r4, #8
 800f658:	4618      	mov	r0, r3
 800f65a:	4611      	mov	r1, r2
 800f65c:	e724      	b.n	800f4a8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 800f65e:	4299      	cmp	r1, r3
 800f660:	d928      	bls.n	800f6b4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 800f662:	f1a3 0210 	sub.w	r2, r3, #16
 800f666:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 800f66a:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 800f66e:	45ac      	cmp	ip, r5
 800f670:	db06      	blt.n	800f680 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 800f672:	d11d      	bne.n	800f6b0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 800f674:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 800f678:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 800f67c:	42ae      	cmp	r6, r5
 800f67e:	da17      	bge.n	800f6b0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 800f680:	4615      	mov	r5, r2
 800f682:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 800f686:	f855 6f08 	ldr.w	r6, [r5, #8]!
 800f68a:	6116      	str	r6, [r2, #16]
 800f68c:	686e      	ldr	r6, [r5, #4]
 800f68e:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 800f692:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 800f696:	f8a2 9008 	strh.w	r9, [r2, #8]
 800f69a:	42a8      	cmp	r0, r5
 800f69c:	6156      	str	r6, [r2, #20]
 800f69e:	f8a2 c00a 	strh.w	ip, [r2, #10]
 800f6a2:	f8a2 800c 	strh.w	r8, [r2, #12]
 800f6a6:	f8a2 e00e 	strh.w	lr, [r2, #14]
 800f6aa:	f1a2 0208 	sub.w	r2, r2, #8
 800f6ae:	d1da      	bne.n	800f666 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 800f6b0:	3308      	adds	r3, #8
 800f6b2:	e7d4      	b.n	800f65e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 800f6b4:	42bc      	cmp	r4, r7
 800f6b6:	d903      	bls.n	800f6c0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 800f6b8:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 800f6bc:	3c08      	subs	r4, #8
 800f6be:	e6f3      	b.n	800f4a8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 800f6c0:	b050      	add	sp, #320	; 0x140
 800f6c2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0800f6c6 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 800f6c6:	b510      	push	{r4, lr}
 800f6c8:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800f6ca:	07da      	lsls	r2, r3, #31
 800f6cc:	4604      	mov	r4, r0
 800f6ce:	d507      	bpl.n	800f6e0 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 800f6d0:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 800f6d4:	f7ff fe8a 	bl	800f3ec <_ZN8touchgfx7Outline6lineToEii>
 800f6d8:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800f6da:	f023 0301 	bic.w	r3, r3, #1
 800f6de:	6243      	str	r3, [r0, #36]	; 0x24
 800f6e0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800f6e2:	079b      	lsls	r3, r3, #30
 800f6e4:	d521      	bpl.n	800f72a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 800f6e6:	6923      	ldr	r3, [r4, #16]
 800f6e8:	88d9      	ldrh	r1, [r3, #6]
 800f6ea:	889a      	ldrh	r2, [r3, #4]
 800f6ec:	430a      	orrs	r2, r1
 800f6ee:	d010      	beq.n	800f712 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800f6f0:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800f6f4:	2a00      	cmp	r2, #0
 800f6f6:	db0c      	blt.n	800f712 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800f6f8:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800f6fa:	428a      	cmp	r2, r1
 800f6fc:	da09      	bge.n	800f712 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800f6fe:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 800f702:	4291      	cmp	r1, r2
 800f704:	bf88      	it	hi
 800f706:	3308      	addhi	r3, #8
 800f708:	f102 0201 	add.w	r2, r2, #1
 800f70c:	bf88      	it	hi
 800f70e:	6123      	strhi	r3, [r4, #16]
 800f710:	60a2      	str	r2, [r4, #8]
 800f712:	68a1      	ldr	r1, [r4, #8]
 800f714:	b129      	cbz	r1, 800f722 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 800f716:	6863      	ldr	r3, [r4, #4]
 800f718:	4299      	cmp	r1, r3
 800f71a:	d802      	bhi.n	800f722 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 800f71c:	68e0      	ldr	r0, [r4, #12]
 800f71e:	f7ff febc 	bl	800f49a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 800f722:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800f724:	f023 0302 	bic.w	r3, r3, #2
 800f728:	6263      	str	r3, [r4, #36]	; 0x24
 800f72a:	68e0      	ldr	r0, [r4, #12]
 800f72c:	bd10      	pop	{r4, pc}
	...

0800f730 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 800f730:	4b02      	ldr	r3, [pc, #8]	; (800f73c <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 800f732:	6018      	str	r0, [r3, #0]
 800f734:	4b02      	ldr	r3, [pc, #8]	; (800f740 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 800f736:	6019      	str	r1, [r3, #0]
 800f738:	4770      	bx	lr
 800f73a:	bf00      	nop
 800f73c:	200155c0 	.word	0x200155c0
 800f740:	200155c4 	.word	0x200155c4

0800f744 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 800f744:	4b01      	ldr	r3, [pc, #4]	; (800f74c <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 800f746:	6818      	ldr	r0, [r3, #0]
 800f748:	4770      	bx	lr
 800f74a:	bf00      	nop
 800f74c:	200155c0 	.word	0x200155c0

0800f750 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 800f750:	4b01      	ldr	r3, [pc, #4]	; (800f758 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 800f752:	6818      	ldr	r0, [r3, #0]
 800f754:	4770      	bx	lr
 800f756:	bf00      	nop
 800f758:	200155c4 	.word	0x200155c4

0800f75c <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 800f75c:	b510      	push	{r4, lr}
 800f75e:	6803      	ldr	r3, [r0, #0]
 800f760:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f762:	460c      	mov	r4, r1
 800f764:	4798      	blx	r3
 800f766:	1b03      	subs	r3, r0, r4
 800f768:	4258      	negs	r0, r3
 800f76a:	4158      	adcs	r0, r3
 800f76c:	bd10      	pop	{r4, pc}
	...

0800f770 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 800f770:	4b01      	ldr	r3, [pc, #4]	; (800f778 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 800f772:	6019      	str	r1, [r3, #0]
 800f774:	4770      	bx	lr
 800f776:	bf00      	nop
 800f778:	200155c8 	.word	0x200155c8

0800f77c <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800f77c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f780:	4696      	mov	lr, r2
 800f782:	4605      	mov	r5, r0
 800f784:	4614      	mov	r4, r2
 800f786:	460e      	mov	r6, r1
 800f788:	461f      	mov	r7, r3
 800f78a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800f78e:	b097      	sub	sp, #92	; 0x5c
 800f790:	f10d 0c1c 	add.w	ip, sp, #28
 800f794:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800f798:	f8de 3000 	ldr.w	r3, [lr]
 800f79c:	f8cc 3000 	str.w	r3, [ip]
 800f7a0:	f104 0e14 	add.w	lr, r4, #20
 800f7a4:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800f7a8:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800f7ac:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800f7b0:	f8de 3000 	ldr.w	r3, [lr]
 800f7b4:	f8cc 3000 	str.w	r3, [ip]
 800f7b8:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800f7bc:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800f7c0:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800f7c4:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800f7c8:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 800f7cc:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 800f7d0:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 800f7d4:	f8de 3000 	ldr.w	r3, [lr]
 800f7d8:	f8cc 3000 	str.w	r3, [ip]
 800f7dc:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800f7de:	682b      	ldr	r3, [r5, #0]
 800f7e0:	9201      	str	r2, [sp, #4]
 800f7e2:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800f7e6:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800f7e8:	9200      	str	r2, [sp, #0]
 800f7ea:	f8cd 8008 	str.w	r8, [sp, #8]
 800f7ee:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 800f7f2:	aa07      	add	r2, sp, #28
 800f7f4:	463b      	mov	r3, r7
 800f7f6:	4631      	mov	r1, r6
 800f7f8:	4628      	mov	r0, r5
 800f7fa:	47d8      	blx	fp
 800f7fc:	46a6      	mov	lr, r4
 800f7fe:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800f802:	f10d 0c1c 	add.w	ip, sp, #28
 800f806:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800f80a:	f8de 3000 	ldr.w	r3, [lr]
 800f80e:	f8cc 3000 	str.w	r3, [ip]
 800f812:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800f816:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800f81a:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800f81e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800f822:	343c      	adds	r4, #60	; 0x3c
 800f824:	f8de 3000 	ldr.w	r3, [lr]
 800f828:	f8cc 3000 	str.w	r3, [ip]
 800f82c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800f82e:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800f832:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800f836:	6823      	ldr	r3, [r4, #0]
 800f838:	f8cc 3000 	str.w	r3, [ip]
 800f83c:	682b      	ldr	r3, [r5, #0]
 800f83e:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800f842:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800f844:	9201      	str	r2, [sp, #4]
 800f846:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800f848:	9200      	str	r2, [sp, #0]
 800f84a:	f8cd 8008 	str.w	r8, [sp, #8]
 800f84e:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 800f850:	aa07      	add	r2, sp, #28
 800f852:	463b      	mov	r3, r7
 800f854:	4631      	mov	r1, r6
 800f856:	4628      	mov	r0, r5
 800f858:	47a0      	blx	r4
 800f85a:	b017      	add	sp, #92	; 0x5c
 800f85c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800f860 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800f860:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f864:	b08d      	sub	sp, #52	; 0x34
 800f866:	4688      	mov	r8, r1
 800f868:	9916      	ldr	r1, [sp, #88]	; 0x58
 800f86a:	f8d3 c000 	ldr.w	ip, [r3]
 800f86e:	680f      	ldr	r7, [r1, #0]
 800f870:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 800f874:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 800f878:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 800f87c:	edd3 6a07 	vldr	s13, [r3, #28]
 800f880:	9918      	ldr	r1, [sp, #96]	; 0x60
 800f882:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 800f886:	f9b1 9000 	ldrsh.w	r9, [r1]
 800f88a:	f9ba 1000 	ldrsh.w	r1, [sl]
 800f88e:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 800f892:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 800f896:	eba7 070c 	sub.w	r7, r7, ip
 800f89a:	42bc      	cmp	r4, r7
 800f89c:	bfa8      	it	ge
 800f89e:	463c      	movge	r4, r7
 800f8a0:	ee07 4a90 	vmov	s15, r4
 800f8a4:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800f8a8:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 800f8ac:	ee25 4a04 	vmul.f32	s8, s10, s8
 800f8b0:	ee65 4a24 	vmul.f32	s9, s10, s9
 800f8b4:	ee25 5a27 	vmul.f32	s10, s10, s15
 800f8b8:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 800f8bc:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800f8c0:	eb09 0e0c 	add.w	lr, r9, ip
 800f8c4:	4571      	cmp	r1, lr
 800f8c6:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800f8ca:	ee32 1a05 	vadd.f32	s2, s4, s10
 800f8ce:	ee36 0a84 	vadd.f32	s0, s13, s8
 800f8d2:	ee61 1a87 	vmul.f32	s3, s3, s14
 800f8d6:	ee22 2a07 	vmul.f32	s4, s4, s14
 800f8da:	f340 808d 	ble.w	800f9f8 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 800f8de:	eba1 060e 	sub.w	r6, r1, lr
 800f8e2:	fb96 f5f4 	sdiv	r5, r6, r4
 800f8e6:	ee07 5a10 	vmov	s14, r5
 800f8ea:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f8ee:	2d00      	cmp	r5, #0
 800f8f0:	fb04 6615 	mls	r6, r4, r5, r6
 800f8f4:	eea7 0a04 	vfma.f32	s0, s14, s8
 800f8f8:	eee7 0a24 	vfma.f32	s1, s14, s9
 800f8fc:	eea7 1a05 	vfma.f32	s2, s14, s10
 800f900:	dd13      	ble.n	800f92a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 800f902:	ee70 6a44 	vsub.f32	s13, s0, s8
 800f906:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800f90a:	eef5 6a40 	vcmp.f32	s13, #0.0
 800f90e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f912:	bf18      	it	ne
 800f914:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800f918:	ee31 2a45 	vsub.f32	s4, s2, s10
 800f91c:	bf08      	it	eq
 800f91e:	eeb0 7a67 	vmoveq.f32	s14, s15
 800f922:	ee61 1a87 	vmul.f32	s3, s3, s14
 800f926:	ee22 2a07 	vmul.f32	s4, s4, s14
 800f92a:	fb05 f204 	mul.w	r2, r5, r4
 800f92e:	1abf      	subs	r7, r7, r2
 800f930:	4494      	add	ip, r2
 800f932:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 800f936:	4411      	add	r1, r2
 800f938:	eb09 020c 	add.w	r2, r9, ip
 800f93c:	443a      	add	r2, r7
 800f93e:	b209      	sxth	r1, r1
 800f940:	428a      	cmp	r2, r1
 800f942:	bfc4      	itt	gt
 800f944:	eba1 0209 	subgt.w	r2, r1, r9
 800f948:	eba2 070c 	subgt.w	r7, r2, ip
 800f94c:	2f00      	cmp	r7, #0
 800f94e:	dd50      	ble.n	800f9f2 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 800f950:	fb97 f1f4 	sdiv	r1, r7, r4
 800f954:	fb04 7211 	mls	r2, r4, r1, r7
 800f958:	b90a      	cbnz	r2, 800f95e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 800f95a:	3901      	subs	r1, #1
 800f95c:	4622      	mov	r2, r4
 800f95e:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800f962:	6840      	ldr	r0, [r0, #4]
 800f964:	900b      	str	r0, [sp, #44]	; 0x2c
 800f966:	f8d0 a000 	ldr.w	sl, [r0]
 800f96a:	9817      	ldr	r0, [sp, #92]	; 0x5c
 800f96c:	9008      	str	r0, [sp, #32]
 800f96e:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 800f972:	9818      	ldr	r0, [sp, #96]	; 0x60
 800f974:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 800f978:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 800f97c:	695b      	ldr	r3, [r3, #20]
 800f97e:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800f980:	445b      	add	r3, fp
 800f982:	eef0 6a42 	vmov.f32	s13, s4
 800f986:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800f98a:	ee21 3a23 	vmul.f32	s6, s2, s7
 800f98e:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800f992:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800f996:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800f99a:	9307      	str	r3, [sp, #28]
 800f99c:	ee17 7a90 	vmov	r7, s15
 800f9a0:	ee73 7a42 	vsub.f32	s15, s6, s4
 800f9a4:	eeb0 7a61 	vmov.f32	s14, s3
 800f9a8:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800f9ac:	ee16 3a90 	vmov	r3, s13
 800f9b0:	fb97 f7f4 	sdiv	r7, r7, r4
 800f9b4:	ee17 ca90 	vmov	ip, s15
 800f9b8:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800f9bc:	fb9c fcf4 	sdiv	ip, ip, r4
 800f9c0:	fb0c 3306 	mla	r3, ip, r6, r3
 800f9c4:	9302      	str	r3, [sp, #8]
 800f9c6:	ee17 3a10 	vmov	r3, s14
 800f9ca:	44b6      	add	lr, r6
 800f9cc:	fb04 e505 	mla	r5, r4, r5, lr
 800f9d0:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 800f9d4:	fb07 3706 	mla	r7, r7, r6, r3
 800f9d8:	e9cd 8505 	strd	r8, r5, [sp, #20]
 800f9dc:	e9cd 4700 	strd	r4, r7, [sp]
 800f9e0:	2900      	cmp	r1, #0
 800f9e2:	bfcc      	ite	gt
 800f9e4:	46a1      	movgt	r9, r4
 800f9e6:	4691      	movle	r9, r2
 800f9e8:	eba9 0306 	sub.w	r3, r9, r6
 800f9ec:	f8da 4008 	ldr.w	r4, [sl, #8]
 800f9f0:	47a0      	blx	r4
 800f9f2:	b00d      	add	sp, #52	; 0x34
 800f9f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f9f8:	2500      	movs	r5, #0
 800f9fa:	462e      	mov	r6, r5
 800f9fc:	e799      	b.n	800f932 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

0800fa00 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800fa00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fa04:	b0db      	sub	sp, #364	; 0x16c
 800fa06:	461d      	mov	r5, r3
 800fa08:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 800fa0c:	930a      	str	r3, [sp, #40]	; 0x28
 800fa0e:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 800fa12:	930b      	str	r3, [sp, #44]	; 0x2c
 800fa14:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 800fa18:	9310      	str	r3, [sp, #64]	; 0x40
 800fa1a:	6803      	ldr	r3, [r0, #0]
 800fa1c:	910f      	str	r1, [sp, #60]	; 0x3c
 800fa1e:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 800fa20:	9009      	str	r0, [sp, #36]	; 0x24
 800fa22:	4614      	mov	r4, r2
 800fa24:	4629      	mov	r1, r5
 800fa26:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 800fa2a:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 800fa2e:	47b8      	blx	r7
 800fa30:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800fa32:	6058      	str	r0, [r3, #4]
 800fa34:	2800      	cmp	r0, #0
 800fa36:	f000 83a1 	beq.w	801017c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fa3a:	682b      	ldr	r3, [r5, #0]
 800fa3c:	9314      	str	r3, [sp, #80]	; 0x50
 800fa3e:	686b      	ldr	r3, [r5, #4]
 800fa40:	9315      	str	r3, [sp, #84]	; 0x54
 800fa42:	4bc4      	ldr	r3, [pc, #784]	; (800fd54 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 800fa44:	ed94 7a02 	vldr	s14, [r4, #8]
 800fa48:	7819      	ldrb	r1, [r3, #0]
 800fa4a:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 800fa4e:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 800fa52:	2900      	cmp	r1, #0
 800fa54:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800fa58:	bf16      	itet	ne
 800fa5a:	4619      	movne	r1, r3
 800fa5c:	4611      	moveq	r1, r2
 800fa5e:	4613      	movne	r3, r2
 800fa60:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800fa64:	9116      	str	r1, [sp, #88]	; 0x58
 800fa66:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 800fa6a:	f240 8387 	bls.w	801017c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fa6e:	ed94 7a07 	vldr	s14, [r4, #28]
 800fa72:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800fa76:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800fa7a:	f240 837f 	bls.w	801017c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fa7e:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 800fa82:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800fa86:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800fa8a:	f240 8377 	bls.w	801017c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fa8e:	6822      	ldr	r2, [r4, #0]
 800fa90:	4bb1      	ldr	r3, [pc, #708]	; (800fd58 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 800fa92:	429a      	cmp	r2, r3
 800fa94:	f2c0 8372 	blt.w	801017c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fa98:	49b0      	ldr	r1, [pc, #704]	; (800fd5c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 800fa9a:	6963      	ldr	r3, [r4, #20]
 800fa9c:	428a      	cmp	r2, r1
 800fa9e:	f300 836d 	bgt.w	801017c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800faa2:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800faa6:	48ae      	ldr	r0, [pc, #696]	; (800fd60 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 800faa8:	33ff      	adds	r3, #255	; 0xff
 800faaa:	4283      	cmp	r3, r0
 800faac:	f200 8366 	bhi.w	801017c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fab0:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800fab2:	4dac      	ldr	r5, [pc, #688]	; (800fd64 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 800fab4:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800fab8:	33ff      	adds	r3, #255	; 0xff
 800faba:	42ab      	cmp	r3, r5
 800fabc:	f200 835e 	bhi.w	801017c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fac0:	6862      	ldr	r2, [r4, #4]
 800fac2:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 800fac6:	33ff      	adds	r3, #255	; 0xff
 800fac8:	4283      	cmp	r3, r0
 800faca:	f200 8357 	bhi.w	801017c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800face:	69a1      	ldr	r1, [r4, #24]
 800fad0:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 800fad4:	33ff      	adds	r3, #255	; 0xff
 800fad6:	4283      	cmp	r3, r0
 800fad8:	f200 8350 	bhi.w	801017c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fadc:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800fade:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 800fae2:	30ff      	adds	r0, #255	; 0xff
 800fae4:	42a8      	cmp	r0, r5
 800fae6:	f200 8349 	bhi.w	801017c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800faea:	428a      	cmp	r2, r1
 800faec:	f280 8110 	bge.w	800fd10 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 800faf0:	429a      	cmp	r2, r3
 800faf2:	f300 8119 	bgt.w	800fd28 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 800faf6:	4299      	cmp	r1, r3
 800faf8:	f280 811d 	bge.w	800fd36 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 800fafc:	2502      	movs	r5, #2
 800fafe:	2701      	movs	r7, #1
 800fb00:	46a9      	mov	r9, r5
 800fb02:	46b8      	mov	r8, r7
 800fb04:	f04f 0a00 	mov.w	sl, #0
 800fb08:	4621      	mov	r1, r4
 800fb0a:	a849      	add	r0, sp, #292	; 0x124
 800fb0c:	f003 fcfe 	bl	801350c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 800fb10:	4622      	mov	r2, r4
 800fb12:	4653      	mov	r3, sl
 800fb14:	a949      	add	r1, sp, #292	; 0x124
 800fb16:	f8cd 9000 	str.w	r9, [sp]
 800fb1a:	a819      	add	r0, sp, #100	; 0x64
 800fb1c:	f003 fe26 	bl	801376c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800fb20:	4622      	mov	r2, r4
 800fb22:	4653      	mov	r3, sl
 800fb24:	a949      	add	r1, sp, #292	; 0x124
 800fb26:	f8cd 8000 	str.w	r8, [sp]
 800fb2a:	a829      	add	r0, sp, #164	; 0xa4
 800fb2c:	f003 fe1e 	bl	801376c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800fb30:	4643      	mov	r3, r8
 800fb32:	4622      	mov	r2, r4
 800fb34:	a949      	add	r1, sp, #292	; 0x124
 800fb36:	f8cd 9000 	str.w	r9, [sp]
 800fb3a:	a839      	add	r0, sp, #228	; 0xe4
 800fb3c:	f003 fe16 	bl	801376c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800fb40:	42af      	cmp	r7, r5
 800fb42:	bfb5      	itete	lt
 800fb44:	2300      	movlt	r3, #0
 800fb46:	2301      	movge	r3, #1
 800fb48:	930e      	strlt	r3, [sp, #56]	; 0x38
 800fb4a:	930e      	strge	r3, [sp, #56]	; 0x38
 800fb4c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800fb4e:	e893 0003 	ldmia.w	r3, {r0, r1}
 800fb52:	af12      	add	r7, sp, #72	; 0x48
 800fb54:	bfb9      	ittee	lt
 800fb56:	ad29      	addlt	r5, sp, #164	; 0xa4
 800fb58:	ac19      	addlt	r4, sp, #100	; 0x64
 800fb5a:	ad19      	addge	r5, sp, #100	; 0x64
 800fb5c:	ac29      	addge	r4, sp, #164	; 0xa4
 800fb5e:	e887 0003 	stmia.w	r7, {r0, r1}
 800fb62:	b928      	cbnz	r0, 800fb70 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 800fb64:	4b80      	ldr	r3, [pc, #512]	; (800fd68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 800fb66:	6818      	ldr	r0, [r3, #0]
 800fb68:	6803      	ldr	r3, [r0, #0]
 800fb6a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800fb6c:	4798      	blx	r3
 800fb6e:	6038      	str	r0, [r7, #0]
 800fb70:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800fb72:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800fb76:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800fb7a:	930c      	str	r3, [sp, #48]	; 0x30
 800fb7c:	990c      	ldr	r1, [sp, #48]	; 0x30
 800fb7e:	6963      	ldr	r3, [r4, #20]
 800fb80:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 800fb82:	440b      	add	r3, r1
 800fb84:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800fb88:	4408      	add	r0, r1
 800fb8a:	b200      	sxth	r0, r0
 800fb8c:	4283      	cmp	r3, r0
 800fb8e:	900d      	str	r0, [sp, #52]	; 0x34
 800fb90:	f280 80dd 	bge.w	800fd4e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 800fb94:	428b      	cmp	r3, r1
 800fb96:	da08      	bge.n	800fbaa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800fb98:	2a00      	cmp	r2, #0
 800fb9a:	dd06      	ble.n	800fbaa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800fb9c:	1acb      	subs	r3, r1, r3
 800fb9e:	429a      	cmp	r2, r3
 800fba0:	f2c0 80e4 	blt.w	800fd6c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 800fba4:	2b00      	cmp	r3, #0
 800fba6:	f300 80e2 	bgt.w	800fd6e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 800fbaa:	6967      	ldr	r7, [r4, #20]
 800fbac:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800fbae:	443b      	add	r3, r7
 800fbb0:	461f      	mov	r7, r3
 800fbb2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800fbb4:	1bdf      	subs	r7, r3, r7
 800fbb6:	4297      	cmp	r7, r2
 800fbb8:	bfa8      	it	ge
 800fbba:	4617      	movge	r7, r2
 800fbbc:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800fbc0:	2f00      	cmp	r7, #0
 800fbc2:	f340 8166 	ble.w	800fe92 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 800fbc6:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800fbc8:	6829      	ldr	r1, [r5, #0]
 800fbca:	f9b3 2000 	ldrsh.w	r2, [r3]
 800fbce:	f9bb 3000 	ldrsh.w	r3, [fp]
 800fbd2:	6820      	ldr	r0, [r4, #0]
 800fbd4:	4411      	add	r1, r2
 800fbd6:	4299      	cmp	r1, r3
 800fbd8:	dd1a      	ble.n	800fc10 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800fbda:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800fbde:	440b      	add	r3, r1
 800fbe0:	4402      	add	r2, r0
 800fbe2:	b21b      	sxth	r3, r3
 800fbe4:	429a      	cmp	r2, r3
 800fbe6:	dc13      	bgt.n	800fc10 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800fbe8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800fbea:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800fbec:	681b      	ldr	r3, [r3, #0]
 800fbee:	9206      	str	r2, [sp, #24]
 800fbf0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800fbf2:	9205      	str	r2, [sp, #20]
 800fbf4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800fbf6:	9500      	str	r5, [sp, #0]
 800fbf8:	e9cd b203 	strd	fp, r2, [sp, #12]
 800fbfc:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800fbfe:	9809      	ldr	r0, [sp, #36]	; 0x24
 800fc00:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800fc04:	a912      	add	r1, sp, #72	; 0x48
 800fc06:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 800fc0a:	aa49      	add	r2, sp, #292	; 0x124
 800fc0c:	4623      	mov	r3, r4
 800fc0e:	47c8      	blx	r9
 800fc10:	e9d4 2300 	ldrd	r2, r3, [r4]
 800fc14:	441a      	add	r2, r3
 800fc16:	6963      	ldr	r3, [r4, #20]
 800fc18:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800fc1c:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800fc20:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800fc24:	68a1      	ldr	r1, [r4, #8]
 800fc26:	ed94 6a08 	vldr	s12, [r4, #32]
 800fc2a:	6022      	str	r2, [r4, #0]
 800fc2c:	3301      	adds	r3, #1
 800fc2e:	6163      	str	r3, [r4, #20]
 800fc30:	69a3      	ldr	r3, [r4, #24]
 800fc32:	ee37 7a27 	vadd.f32	s14, s14, s15
 800fc36:	3b01      	subs	r3, #1
 800fc38:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800fc3c:	61a3      	str	r3, [r4, #24]
 800fc3e:	6923      	ldr	r3, [r4, #16]
 800fc40:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800fc44:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800fc48:	edd4 6a07 	vldr	s13, [r4, #28]
 800fc4c:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800fc50:	440b      	add	r3, r1
 800fc52:	68e1      	ldr	r1, [r4, #12]
 800fc54:	6123      	str	r3, [r4, #16]
 800fc56:	ee76 6a86 	vadd.f32	s13, s13, s12
 800fc5a:	428b      	cmp	r3, r1
 800fc5c:	edc4 6a07 	vstr	s13, [r4, #28]
 800fc60:	db15      	blt.n	800fc8e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 800fc62:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800fc66:	ee76 6a26 	vadd.f32	s13, s12, s13
 800fc6a:	3201      	adds	r2, #1
 800fc6c:	edc4 6a07 	vstr	s13, [r4, #28]
 800fc70:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800fc74:	6022      	str	r2, [r4, #0]
 800fc76:	ee36 7a87 	vadd.f32	s14, s13, s14
 800fc7a:	1a5b      	subs	r3, r3, r1
 800fc7c:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800fc80:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800fc84:	6123      	str	r3, [r4, #16]
 800fc86:	ee77 7a27 	vadd.f32	s15, s14, s15
 800fc8a:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800fc8e:	e9d5 2300 	ldrd	r2, r3, [r5]
 800fc92:	441a      	add	r2, r3
 800fc94:	696b      	ldr	r3, [r5, #20]
 800fc96:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800fc9a:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800fc9e:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800fca2:	68a9      	ldr	r1, [r5, #8]
 800fca4:	ed95 6a08 	vldr	s12, [r5, #32]
 800fca8:	602a      	str	r2, [r5, #0]
 800fcaa:	3301      	adds	r3, #1
 800fcac:	616b      	str	r3, [r5, #20]
 800fcae:	69ab      	ldr	r3, [r5, #24]
 800fcb0:	ee37 7a27 	vadd.f32	s14, s14, s15
 800fcb4:	3b01      	subs	r3, #1
 800fcb6:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800fcba:	61ab      	str	r3, [r5, #24]
 800fcbc:	692b      	ldr	r3, [r5, #16]
 800fcbe:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800fcc2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800fcc6:	edd5 6a07 	vldr	s13, [r5, #28]
 800fcca:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800fcce:	440b      	add	r3, r1
 800fcd0:	68e9      	ldr	r1, [r5, #12]
 800fcd2:	612b      	str	r3, [r5, #16]
 800fcd4:	ee76 6a86 	vadd.f32	s13, s13, s12
 800fcd8:	428b      	cmp	r3, r1
 800fcda:	edc5 6a07 	vstr	s13, [r5, #28]
 800fcde:	db15      	blt.n	800fd0c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 800fce0:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800fce4:	ee76 6a26 	vadd.f32	s13, s12, s13
 800fce8:	3201      	adds	r2, #1
 800fcea:	edc5 6a07 	vstr	s13, [r5, #28]
 800fcee:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800fcf2:	602a      	str	r2, [r5, #0]
 800fcf4:	ee36 7a87 	vadd.f32	s14, s13, s14
 800fcf8:	1a5b      	subs	r3, r3, r1
 800fcfa:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800fcfe:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800fd02:	612b      	str	r3, [r5, #16]
 800fd04:	ee77 7a27 	vadd.f32	s15, s14, s15
 800fd08:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800fd0c:	3f01      	subs	r7, #1
 800fd0e:	e757      	b.n	800fbc0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 800fd10:	4299      	cmp	r1, r3
 800fd12:	dc13      	bgt.n	800fd3c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 800fd14:	429a      	cmp	r2, r3
 800fd16:	da14      	bge.n	800fd42 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 800fd18:	2502      	movs	r5, #2
 800fd1a:	2703      	movs	r7, #3
 800fd1c:	46a9      	mov	r9, r5
 800fd1e:	f04f 0800 	mov.w	r8, #0
 800fd22:	f04f 0a01 	mov.w	sl, #1
 800fd26:	e6ef      	b.n	800fb08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800fd28:	2501      	movs	r5, #1
 800fd2a:	2700      	movs	r7, #0
 800fd2c:	46a9      	mov	r9, r5
 800fd2e:	46b8      	mov	r8, r7
 800fd30:	f04f 0a02 	mov.w	sl, #2
 800fd34:	e6e8      	b.n	800fb08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800fd36:	2501      	movs	r5, #1
 800fd38:	2702      	movs	r7, #2
 800fd3a:	e6e1      	b.n	800fb00 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 800fd3c:	2500      	movs	r5, #0
 800fd3e:	2701      	movs	r7, #1
 800fd40:	e7f4      	b.n	800fd2c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 800fd42:	2702      	movs	r7, #2
 800fd44:	2503      	movs	r5, #3
 800fd46:	f04f 0900 	mov.w	r9, #0
 800fd4a:	46b8      	mov	r8, r7
 800fd4c:	e7e9      	b.n	800fd22 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 800fd4e:	4613      	mov	r3, r2
 800fd50:	e728      	b.n	800fba4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 800fd52:	bf00      	nop
 800fd54:	200155b0 	.word	0x200155b0
 800fd58:	fffd8f01 	.word	0xfffd8f01
 800fd5c:	00027100 	.word	0x00027100
 800fd60:	0004e1ff 	.word	0x0004e1ff
 800fd64:	0004e1fe 	.word	0x0004e1fe
 800fd68:	200155b8 	.word	0x200155b8
 800fd6c:	4613      	mov	r3, r2
 800fd6e:	992b      	ldr	r1, [sp, #172]	; 0xac
 800fd70:	9111      	str	r1, [sp, #68]	; 0x44
 800fd72:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 800fd76:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 800fd7a:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 800fd7c:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 800fd80:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 800fd84:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 800fd88:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 800fd8c:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 800fd90:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 800fd94:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 800fd98:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 800fd9c:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 800fda0:	469e      	mov	lr, r3
 800fda2:	469c      	mov	ip, r3
 800fda4:	f04f 0900 	mov.w	r9, #0
 800fda8:	f1bc 0f00 	cmp.w	ip, #0
 800fdac:	d147      	bne.n	800fe3e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 800fdae:	eb03 0c07 	add.w	ip, r3, r7
 800fdb2:	1ad7      	subs	r7, r2, r3
 800fdb4:	f1b9 0f00 	cmp.w	r9, #0
 800fdb8:	d009      	beq.n	800fdce <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 800fdba:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 800fdbe:	9029      	str	r0, [sp, #164]	; 0xa4
 800fdc0:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 800fdc4:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 800fdc8:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 800fdcc:	912d      	str	r1, [sp, #180]	; 0xb4
 800fdce:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800fdd0:	9111      	str	r1, [sp, #68]	; 0x44
 800fdd2:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 800fdd6:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 800fdda:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 800fdde:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 800fde2:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 800fde6:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 800fdea:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 800fdee:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 800fdf2:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 800fdf6:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 800fdfa:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 800fdfe:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 800fe02:	f04f 0800 	mov.w	r8, #0
 800fe06:	f1be 0f00 	cmp.w	lr, #0
 800fe0a:	d031      	beq.n	800fe70 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 800fe0c:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800fe0e:	4431      	add	r1, r6
 800fe10:	4549      	cmp	r1, r9
 800fe12:	4450      	add	r0, sl
 800fe14:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800fe18:	ee37 7a04 	vadd.f32	s14, s14, s8
 800fe1c:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800fe20:	db08      	blt.n	800fe34 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 800fe22:	ee77 7a85 	vadd.f32	s15, s15, s10
 800fe26:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800fe2a:	ee37 7a06 	vadd.f32	s14, s14, s12
 800fe2e:	3001      	adds	r0, #1
 800fe30:	eba1 0109 	sub.w	r1, r1, r9
 800fe34:	f10e 3eff 	add.w	lr, lr, #4294967295
 800fe38:	f04f 0801 	mov.w	r8, #1
 800fe3c:	e7e3      	b.n	800fe06 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 800fe3e:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800fe40:	4431      	add	r1, r6
 800fe42:	4541      	cmp	r1, r8
 800fe44:	4450      	add	r0, sl
 800fe46:	ee37 7a24 	vadd.f32	s14, s14, s9
 800fe4a:	ee77 7a84 	vadd.f32	s15, s15, s8
 800fe4e:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800fe52:	db08      	blt.n	800fe66 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 800fe54:	ee76 6a85 	vadd.f32	s13, s13, s10
 800fe58:	ee37 7a25 	vadd.f32	s14, s14, s11
 800fe5c:	ee77 7a86 	vadd.f32	s15, s15, s12
 800fe60:	3001      	adds	r0, #1
 800fe62:	eba1 0108 	sub.w	r1, r1, r8
 800fe66:	f10c 3cff 	add.w	ip, ip, #4294967295
 800fe6a:	f04f 0901 	mov.w	r9, #1
 800fe6e:	e79b      	b.n	800fda8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 800fe70:	449c      	add	ip, r3
 800fe72:	1aff      	subs	r7, r7, r3
 800fe74:	f1b8 0f00 	cmp.w	r8, #0
 800fe78:	d009      	beq.n	800fe8e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 800fe7a:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 800fe7e:	9019      	str	r0, [sp, #100]	; 0x64
 800fe80:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 800fe84:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 800fe88:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 800fe8c:	911d      	str	r1, [sp, #116]	; 0x74
 800fe8e:	1ad2      	subs	r2, r2, r3
 800fe90:	e68b      	b.n	800fbaa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800fe92:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800fe94:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 800fe96:	2b00      	cmp	r3, #0
 800fe98:	f000 80d1 	beq.w	801003e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 800fe9c:	ad19      	add	r5, sp, #100	; 0x64
 800fe9e:	ac39      	add	r4, sp, #228	; 0xe4
 800fea0:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800fea2:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800fea6:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800feaa:	930c      	str	r3, [sp, #48]	; 0x30
 800feac:	990c      	ldr	r1, [sp, #48]	; 0x30
 800feae:	6963      	ldr	r3, [r4, #20]
 800feb0:	440b      	add	r3, r1
 800feb2:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800feb6:	4408      	add	r0, r1
 800feb8:	b200      	sxth	r0, r0
 800feba:	4283      	cmp	r3, r0
 800febc:	900d      	str	r0, [sp, #52]	; 0x34
 800febe:	f280 80c1 	bge.w	8010044 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 800fec2:	428b      	cmp	r3, r1
 800fec4:	da08      	bge.n	800fed8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800fec6:	2a00      	cmp	r2, #0
 800fec8:	dd06      	ble.n	800fed8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800feca:	1acb      	subs	r3, r1, r3
 800fecc:	429a      	cmp	r2, r3
 800fece:	f2c0 80bb 	blt.w	8010048 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 800fed2:	2b00      	cmp	r3, #0
 800fed4:	f300 80b9 	bgt.w	801004a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 800fed8:	6967      	ldr	r7, [r4, #20]
 800feda:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800fedc:	443b      	add	r3, r7
 800fede:	461f      	mov	r7, r3
 800fee0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800fee2:	1bdf      	subs	r7, r3, r7
 800fee4:	4297      	cmp	r7, r2
 800fee6:	bfa8      	it	ge
 800fee8:	4617      	movge	r7, r2
 800feea:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800feee:	2f00      	cmp	r7, #0
 800fef0:	f340 813c 	ble.w	801016c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 800fef4:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800fef6:	6829      	ldr	r1, [r5, #0]
 800fef8:	f9b3 2000 	ldrsh.w	r2, [r3]
 800fefc:	f9bb 3000 	ldrsh.w	r3, [fp]
 800ff00:	6820      	ldr	r0, [r4, #0]
 800ff02:	4411      	add	r1, r2
 800ff04:	4299      	cmp	r1, r3
 800ff06:	dd1a      	ble.n	800ff3e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800ff08:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800ff0c:	440b      	add	r3, r1
 800ff0e:	4402      	add	r2, r0
 800ff10:	b21b      	sxth	r3, r3
 800ff12:	429a      	cmp	r2, r3
 800ff14:	dc13      	bgt.n	800ff3e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800ff16:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800ff18:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800ff1a:	681b      	ldr	r3, [r3, #0]
 800ff1c:	9206      	str	r2, [sp, #24]
 800ff1e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800ff20:	9205      	str	r2, [sp, #20]
 800ff22:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800ff24:	9500      	str	r5, [sp, #0]
 800ff26:	e9cd b203 	strd	fp, r2, [sp, #12]
 800ff2a:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800ff2c:	9809      	ldr	r0, [sp, #36]	; 0x24
 800ff2e:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800ff32:	a912      	add	r1, sp, #72	; 0x48
 800ff34:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 800ff38:	aa49      	add	r2, sp, #292	; 0x124
 800ff3a:	4623      	mov	r3, r4
 800ff3c:	47c8      	blx	r9
 800ff3e:	e9d4 2300 	ldrd	r2, r3, [r4]
 800ff42:	441a      	add	r2, r3
 800ff44:	6963      	ldr	r3, [r4, #20]
 800ff46:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800ff4a:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800ff4e:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800ff52:	68a1      	ldr	r1, [r4, #8]
 800ff54:	ed94 6a08 	vldr	s12, [r4, #32]
 800ff58:	6022      	str	r2, [r4, #0]
 800ff5a:	3301      	adds	r3, #1
 800ff5c:	6163      	str	r3, [r4, #20]
 800ff5e:	69a3      	ldr	r3, [r4, #24]
 800ff60:	ee37 7a27 	vadd.f32	s14, s14, s15
 800ff64:	3b01      	subs	r3, #1
 800ff66:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800ff6a:	61a3      	str	r3, [r4, #24]
 800ff6c:	6923      	ldr	r3, [r4, #16]
 800ff6e:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800ff72:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ff76:	edd4 6a07 	vldr	s13, [r4, #28]
 800ff7a:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800ff7e:	440b      	add	r3, r1
 800ff80:	68e1      	ldr	r1, [r4, #12]
 800ff82:	6123      	str	r3, [r4, #16]
 800ff84:	ee76 6a86 	vadd.f32	s13, s13, s12
 800ff88:	428b      	cmp	r3, r1
 800ff8a:	edc4 6a07 	vstr	s13, [r4, #28]
 800ff8e:	db15      	blt.n	800ffbc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 800ff90:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800ff94:	ee76 6a26 	vadd.f32	s13, s12, s13
 800ff98:	3201      	adds	r2, #1
 800ff9a:	edc4 6a07 	vstr	s13, [r4, #28]
 800ff9e:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800ffa2:	6022      	str	r2, [r4, #0]
 800ffa4:	ee36 7a87 	vadd.f32	s14, s13, s14
 800ffa8:	1a5b      	subs	r3, r3, r1
 800ffaa:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800ffae:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800ffb2:	6123      	str	r3, [r4, #16]
 800ffb4:	ee77 7a27 	vadd.f32	s15, s14, s15
 800ffb8:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800ffbc:	e9d5 2300 	ldrd	r2, r3, [r5]
 800ffc0:	441a      	add	r2, r3
 800ffc2:	696b      	ldr	r3, [r5, #20]
 800ffc4:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800ffc8:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800ffcc:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800ffd0:	68a9      	ldr	r1, [r5, #8]
 800ffd2:	ed95 6a08 	vldr	s12, [r5, #32]
 800ffd6:	602a      	str	r2, [r5, #0]
 800ffd8:	3301      	adds	r3, #1
 800ffda:	616b      	str	r3, [r5, #20]
 800ffdc:	69ab      	ldr	r3, [r5, #24]
 800ffde:	ee37 7a27 	vadd.f32	s14, s14, s15
 800ffe2:	3b01      	subs	r3, #1
 800ffe4:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800ffe8:	61ab      	str	r3, [r5, #24]
 800ffea:	692b      	ldr	r3, [r5, #16]
 800ffec:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800fff0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800fff4:	edd5 6a07 	vldr	s13, [r5, #28]
 800fff8:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800fffc:	440b      	add	r3, r1
 800fffe:	68e9      	ldr	r1, [r5, #12]
 8010000:	612b      	str	r3, [r5, #16]
 8010002:	ee76 6a86 	vadd.f32	s13, s13, s12
 8010006:	428b      	cmp	r3, r1
 8010008:	edc5 6a07 	vstr	s13, [r5, #28]
 801000c:	db15      	blt.n	801003a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 801000e:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8010012:	ee76 6a26 	vadd.f32	s13, s12, s13
 8010016:	3201      	adds	r2, #1
 8010018:	edc5 6a07 	vstr	s13, [r5, #28]
 801001c:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 8010020:	602a      	str	r2, [r5, #0]
 8010022:	ee36 7a87 	vadd.f32	s14, s13, s14
 8010026:	1a5b      	subs	r3, r3, r1
 8010028:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801002c:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 8010030:	612b      	str	r3, [r5, #16]
 8010032:	ee77 7a27 	vadd.f32	s15, s14, s15
 8010036:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 801003a:	3f01      	subs	r7, #1
 801003c:	e757      	b.n	800feee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 801003e:	ad39      	add	r5, sp, #228	; 0xe4
 8010040:	ac19      	add	r4, sp, #100	; 0x64
 8010042:	e72d      	b.n	800fea0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 8010044:	4613      	mov	r3, r2
 8010046:	e744      	b.n	800fed2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 8010048:	4613      	mov	r3, r2
 801004a:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 801004e:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 8010050:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 8010054:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 8010058:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 801005c:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 8010060:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 8010064:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 8010068:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 801006c:	993d      	ldr	r1, [sp, #244]	; 0xf4
 801006e:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 8010072:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 8010076:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 801007a:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 801007e:	960e      	str	r6, [sp, #56]	; 0x38
 8010080:	469e      	mov	lr, r3
 8010082:	461f      	mov	r7, r3
 8010084:	f04f 0900 	mov.w	r9, #0
 8010088:	2f00      	cmp	r7, #0
 801008a:	d146      	bne.n	801011a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 801008c:	449c      	add	ip, r3
 801008e:	1ad7      	subs	r7, r2, r3
 8010090:	f1b9 0f00 	cmp.w	r9, #0
 8010094:	d009      	beq.n	80100aa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 8010096:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 801009a:	9039      	str	r0, [sp, #228]	; 0xe4
 801009c:	913d      	str	r1, [sp, #244]	; 0xf4
 801009e:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 80100a2:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 80100a6:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 80100aa:	991b      	ldr	r1, [sp, #108]	; 0x6c
 80100ac:	910e      	str	r1, [sp, #56]	; 0x38
 80100ae:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 80100b2:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 80100b6:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 80100ba:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 80100be:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 80100c2:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 80100c6:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 80100ca:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 80100ce:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 80100d2:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 80100d6:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 80100da:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 80100de:	f04f 0800 	mov.w	r8, #0
 80100e2:	f1be 0f00 	cmp.w	lr, #0
 80100e6:	d030      	beq.n	801014a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 80100e8:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 80100ea:	4431      	add	r1, r6
 80100ec:	4549      	cmp	r1, r9
 80100ee:	4450      	add	r0, sl
 80100f0:	ee76 6aa4 	vadd.f32	s13, s13, s9
 80100f4:	ee37 7a04 	vadd.f32	s14, s14, s8
 80100f8:	ee77 7aa3 	vadd.f32	s15, s15, s7
 80100fc:	db08      	blt.n	8010110 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 80100fe:	ee77 7a85 	vadd.f32	s15, s15, s10
 8010102:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8010106:	ee37 7a06 	vadd.f32	s14, s14, s12
 801010a:	3001      	adds	r0, #1
 801010c:	eba1 0109 	sub.w	r1, r1, r9
 8010110:	f10e 3eff 	add.w	lr, lr, #4294967295
 8010114:	f04f 0801 	mov.w	r8, #1
 8010118:	e7e3      	b.n	80100e2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 801011a:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 801011c:	4431      	add	r1, r6
 801011e:	4541      	cmp	r1, r8
 8010120:	4450      	add	r0, sl
 8010122:	ee37 7a24 	vadd.f32	s14, s14, s9
 8010126:	ee77 7a84 	vadd.f32	s15, s15, s8
 801012a:	ee76 6aa3 	vadd.f32	s13, s13, s7
 801012e:	db08      	blt.n	8010142 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 8010130:	ee76 6a85 	vadd.f32	s13, s13, s10
 8010134:	ee37 7a25 	vadd.f32	s14, s14, s11
 8010138:	ee77 7a86 	vadd.f32	s15, s15, s12
 801013c:	3001      	adds	r0, #1
 801013e:	eba1 0108 	sub.w	r1, r1, r8
 8010142:	3f01      	subs	r7, #1
 8010144:	f04f 0901 	mov.w	r9, #1
 8010148:	e79e      	b.n	8010088 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 801014a:	449c      	add	ip, r3
 801014c:	1aff      	subs	r7, r7, r3
 801014e:	f1b8 0f00 	cmp.w	r8, #0
 8010152:	d009      	beq.n	8010168 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 8010154:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 8010158:	9019      	str	r0, [sp, #100]	; 0x64
 801015a:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 801015e:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8010162:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8010166:	911d      	str	r1, [sp, #116]	; 0x74
 8010168:	1ad2      	subs	r2, r2, r3
 801016a:	e6b5      	b.n	800fed8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 801016c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801016e:	681b      	ldr	r3, [r3, #0]
 8010170:	b923      	cbnz	r3, 801017c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8010172:	4b04      	ldr	r3, [pc, #16]	; (8010184 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 8010174:	6818      	ldr	r0, [r3, #0]
 8010176:	6803      	ldr	r3, [r0, #0]
 8010178:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801017a:	4798      	blx	r3
 801017c:	b05b      	add	sp, #364	; 0x16c
 801017e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010182:	bf00      	nop
 8010184:	200155b8 	.word	0x200155b8

08010188 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>:
 8010188:	b570      	push	{r4, r5, r6, lr}
 801018a:	4604      	mov	r4, r0
 801018c:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8010190:	9804      	ldr	r0, [sp, #16]
 8010192:	6061      	str	r1, [r4, #4]
 8010194:	2500      	movs	r5, #0
 8010196:	8025      	strh	r5, [r4, #0]
 8010198:	7223      	strb	r3, [r4, #8]
 801019a:	7266      	strb	r6, [r4, #9]
 801019c:	60e0      	str	r0, [r4, #12]
 801019e:	8222      	strh	r2, [r4, #16]
 80101a0:	8265      	strh	r5, [r4, #18]
 80101a2:	82a5      	strh	r5, [r4, #20]
 80101a4:	82e5      	strh	r5, [r4, #22]
 80101a6:	8325      	strh	r5, [r4, #24]
 80101a8:	8365      	strh	r5, [r4, #26]
 80101aa:	83a5      	strh	r5, [r4, #28]
 80101ac:	77a5      	strb	r5, [r4, #30]
 80101ae:	b32e      	cbz	r6, 80101fc <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 80101b0:	6803      	ldr	r3, [r0, #0]
 80101b2:	695b      	ldr	r3, [r3, #20]
 80101b4:	4798      	blx	r3
 80101b6:	4606      	mov	r6, r0
 80101b8:	b300      	cbz	r0, 80101fc <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 80101ba:	68e0      	ldr	r0, [r4, #12]
 80101bc:	6803      	ldr	r3, [r0, #0]
 80101be:	4631      	mov	r1, r6
 80101c0:	68db      	ldr	r3, [r3, #12]
 80101c2:	4798      	blx	r3
 80101c4:	4605      	mov	r5, r0
 80101c6:	b1c8      	cbz	r0, 80101fc <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 80101c8:	7b43      	ldrb	r3, [r0, #13]
 80101ca:	7a82      	ldrb	r2, [r0, #10]
 80101cc:	005b      	lsls	r3, r3, #1
 80101ce:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80101d2:	4313      	orrs	r3, r2
 80101d4:	83a3      	strh	r3, [r4, #28]
 80101d6:	7a63      	ldrb	r3, [r4, #9]
 80101d8:	2b04      	cmp	r3, #4
 80101da:	d10f      	bne.n	80101fc <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 80101dc:	68e0      	ldr	r0, [r4, #12]
 80101de:	6803      	ldr	r3, [r0, #0]
 80101e0:	462a      	mov	r2, r5
 80101e2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80101e4:	4631      	mov	r1, r6
 80101e6:	4798      	blx	r3
 80101e8:	7b6b      	ldrb	r3, [r5, #13]
 80101ea:	005b      	lsls	r3, r3, #1
 80101ec:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80101f0:	7aab      	ldrb	r3, [r5, #10]
 80101f2:	4313      	orrs	r3, r2
 80101f4:	4418      	add	r0, r3
 80101f6:	8ba3      	ldrh	r3, [r4, #28]
 80101f8:	4418      	add	r0, r3
 80101fa:	83a0      	strh	r0, [r4, #28]
 80101fc:	4620      	mov	r0, r4
 80101fe:	bd70      	pop	{r4, r5, r6, pc}

08010200 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 8010200:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010204:	2400      	movs	r4, #0
 8010206:	b085      	sub	sp, #20
 8010208:	4681      	mov	r9, r0
 801020a:	4688      	mov	r8, r1
 801020c:	4692      	mov	sl, r2
 801020e:	469b      	mov	fp, r3
 8010210:	4627      	mov	r7, r4
 8010212:	4625      	mov	r5, r4
 8010214:	4626      	mov	r6, r4
 8010216:	4554      	cmp	r4, sl
 8010218:	da2a      	bge.n	8010270 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 801021a:	2300      	movs	r3, #0
 801021c:	9303      	str	r3, [sp, #12]
 801021e:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8010222:	429d      	cmp	r5, r3
 8010224:	d004      	beq.n	8010230 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 8010226:	f242 030b 	movw	r3, #8203	; 0x200b
 801022a:	429d      	cmp	r5, r3
 801022c:	bf18      	it	ne
 801022e:	462f      	movne	r7, r5
 8010230:	ab03      	add	r3, sp, #12
 8010232:	4642      	mov	r2, r8
 8010234:	4659      	mov	r1, fp
 8010236:	4648      	mov	r0, r9
 8010238:	f002 ff7e 	bl	8013138 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801023c:	4605      	mov	r5, r0
 801023e:	b1b8      	cbz	r0, 8010270 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8010240:	280a      	cmp	r0, #10
 8010242:	d015      	beq.n	8010270 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8010244:	9a03      	ldr	r2, [sp, #12]
 8010246:	b18a      	cbz	r2, 801026c <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 8010248:	7b50      	ldrb	r0, [r2, #13]
 801024a:	7a93      	ldrb	r3, [r2, #10]
 801024c:	8895      	ldrh	r5, [r2, #4]
 801024e:	0040      	lsls	r0, r0, #1
 8010250:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8010254:	4303      	orrs	r3, r0
 8010256:	9301      	str	r3, [sp, #4]
 8010258:	f8d8 3000 	ldr.w	r3, [r8]
 801025c:	4639      	mov	r1, r7
 801025e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010260:	4640      	mov	r0, r8
 8010262:	4798      	blx	r3
 8010264:	9b01      	ldr	r3, [sp, #4]
 8010266:	4418      	add	r0, r3
 8010268:	4406      	add	r6, r0
 801026a:	b2b6      	uxth	r6, r6
 801026c:	3401      	adds	r4, #1
 801026e:	e7d2      	b.n	8010216 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 8010270:	4630      	mov	r0, r6
 8010272:	b005      	add	sp, #20
 8010274:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010278 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 8010278:	2a02      	cmp	r2, #2
 801027a:	b530      	push	{r4, r5, lr}
 801027c:	d011      	beq.n	80102a2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 801027e:	2a03      	cmp	r2, #3
 8010280:	d01c      	beq.n	80102bc <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 8010282:	2a01      	cmp	r2, #1
 8010284:	d10c      	bne.n	80102a0 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8010286:	888b      	ldrh	r3, [r1, #4]
 8010288:	8801      	ldrh	r1, [r0, #0]
 801028a:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 801028e:	8844      	ldrh	r4, [r0, #2]
 8010290:	8004      	strh	r4, [r0, #0]
 8010292:	1a5b      	subs	r3, r3, r1
 8010294:	1a9b      	subs	r3, r3, r2
 8010296:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 801029a:	8043      	strh	r3, [r0, #2]
 801029c:	8081      	strh	r1, [r0, #4]
 801029e:	80c2      	strh	r2, [r0, #6]
 80102a0:	bd30      	pop	{r4, r5, pc}
 80102a2:	88cb      	ldrh	r3, [r1, #6]
 80102a4:	8842      	ldrh	r2, [r0, #2]
 80102a6:	1a9b      	subs	r3, r3, r2
 80102a8:	88c2      	ldrh	r2, [r0, #6]
 80102aa:	1a9b      	subs	r3, r3, r2
 80102ac:	888a      	ldrh	r2, [r1, #4]
 80102ae:	8801      	ldrh	r1, [r0, #0]
 80102b0:	8043      	strh	r3, [r0, #2]
 80102b2:	1a52      	subs	r2, r2, r1
 80102b4:	8881      	ldrh	r1, [r0, #4]
 80102b6:	1a52      	subs	r2, r2, r1
 80102b8:	8002      	strh	r2, [r0, #0]
 80102ba:	e7f1      	b.n	80102a0 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 80102bc:	88cb      	ldrh	r3, [r1, #6]
 80102be:	8841      	ldrh	r1, [r0, #2]
 80102c0:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 80102c4:	f9b0 5000 	ldrsh.w	r5, [r0]
 80102c8:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 80102cc:	8045      	strh	r5, [r0, #2]
 80102ce:	1a5b      	subs	r3, r3, r1
 80102d0:	1a9b      	subs	r3, r3, r2
 80102d2:	8003      	strh	r3, [r0, #0]
 80102d4:	8082      	strh	r2, [r0, #4]
 80102d6:	80c4      	strh	r4, [r0, #6]
 80102d8:	e7e2      	b.n	80102a0 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

080102da <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 80102da:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80102de:	b09f      	sub	sp, #124	; 0x7c
 80102e0:	9116      	str	r1, [sp, #88]	; 0x58
 80102e2:	9317      	str	r3, [sp, #92]	; 0x5c
 80102e4:	9929      	ldr	r1, [sp, #164]	; 0xa4
 80102e6:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80102e8:	8809      	ldrh	r1, [r1, #0]
 80102ea:	889b      	ldrh	r3, [r3, #4]
 80102ec:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 80102f0:	9212      	str	r2, [sp, #72]	; 0x48
 80102f2:	440b      	add	r3, r1
 80102f4:	b21b      	sxth	r3, r3
 80102f6:	9310      	str	r3, [sp, #64]	; 0x40
 80102f8:	f8d8 3000 	ldr.w	r3, [r8]
 80102fc:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 8010300:	7a59      	ldrb	r1, [r3, #9]
 8010302:	7a1b      	ldrb	r3, [r3, #8]
 8010304:	9011      	str	r0, [sp, #68]	; 0x44
 8010306:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 801030a:	9114      	str	r1, [sp, #80]	; 0x50
 801030c:	9315      	str	r3, [sp, #84]	; 0x54
 801030e:	f9bd 50a0 	ldrsh.w	r5, [sp, #160]	; 0xa0
 8010312:	2a00      	cmp	r2, #0
 8010314:	d06a      	beq.n	80103ec <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 8010316:	f898 3010 	ldrb.w	r3, [r8, #16]
 801031a:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801031c:	2b04      	cmp	r3, #4
 801031e:	bf14      	ite	ne
 8010320:	2301      	movne	r3, #1
 8010322:	2302      	moveq	r3, #2
 8010324:	4413      	add	r3, r2
 8010326:	f04f 0900 	mov.w	r9, #0
 801032a:	930f      	str	r3, [sp, #60]	; 0x3c
 801032c:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 8010330:	464c      	mov	r4, r9
 8010332:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 8010336:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 801033a:	4293      	cmp	r3, r2
 801033c:	f280 808f 	bge.w	801045e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8010340:	2300      	movs	r3, #0
 8010342:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 8010346:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 801034a:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 801034e:	429c      	cmp	r4, r3
 8010350:	d006      	beq.n	8010360 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 8010352:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8010354:	f242 020b 	movw	r2, #8203	; 0x200b
 8010358:	4294      	cmp	r4, r2
 801035a:	bf18      	it	ne
 801035c:	4623      	movne	r3, r4
 801035e:	930d      	str	r3, [sp, #52]	; 0x34
 8010360:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010362:	992d      	ldr	r1, [sp, #180]	; 0xb4
 8010364:	f8d8 2000 	ldr.w	r2, [r8]
 8010368:	428b      	cmp	r3, r1
 801036a:	db41      	blt.n	80103f0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 801036c:	6813      	ldr	r3, [r2, #0]
 801036e:	4610      	mov	r0, r2
 8010370:	695b      	ldr	r3, [r3, #20]
 8010372:	4798      	blx	r3
 8010374:	4604      	mov	r4, r0
 8010376:	f8d8 0000 	ldr.w	r0, [r8]
 801037a:	6803      	ldr	r3, [r0, #0]
 801037c:	aa1d      	add	r2, sp, #116	; 0x74
 801037e:	689e      	ldr	r6, [r3, #8]
 8010380:	4621      	mov	r1, r4
 8010382:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8010386:	47b0      	blx	r6
 8010388:	901c      	str	r0, [sp, #112]	; 0x70
 801038a:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 801038e:	429c      	cmp	r4, r3
 8010390:	f000 80e9 	beq.w	8010566 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 8010394:	f242 030b 	movw	r3, #8203	; 0x200b
 8010398:	429c      	cmp	r4, r3
 801039a:	f000 80e4 	beq.w	8010566 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 801039e:	2c00      	cmp	r4, #0
 80103a0:	f000 80f6 	beq.w	8010590 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b6>
 80103a4:	2c0a      	cmp	r4, #10
 80103a6:	d060      	beq.n	801046a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 80103a8:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 80103aa:	b36a      	cbz	r2, 8010408 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 80103ac:	8894      	ldrh	r4, [r2, #4]
 80103ae:	f1bb 0f00 	cmp.w	fp, #0
 80103b2:	d03b      	beq.n	801042c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 80103b4:	f892 900d 	ldrb.w	r9, [r2, #13]
 80103b8:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80103bc:	f409 7380 	and.w	r3, r9, #256	; 0x100
 80103c0:	f892 900a 	ldrb.w	r9, [r2, #10]
 80103c4:	f1bb 0f01 	cmp.w	fp, #1
 80103c8:	ea49 0903 	orr.w	r9, r9, r3
 80103cc:	d134      	bne.n	8010438 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 80103ce:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80103d0:	eba5 0509 	sub.w	r5, r5, r9
 80103d4:	2b00      	cmp	r3, #0
 80103d6:	d14f      	bne.n	8010478 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 80103d8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80103da:	eb09 0305 	add.w	r3, r9, r5
 80103de:	4413      	add	r3, r2
 80103e0:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80103e2:	f9b2 2000 	ldrsh.w	r2, [r2]
 80103e6:	4293      	cmp	r3, r2
 80103e8:	da51      	bge.n	801048e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 80103ea:	e038      	b.n	801045e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 80103ec:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80103ee:	e79a      	b.n	8010326 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 80103f0:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 80103f4:	9301      	str	r3, [sp, #4]
 80103f6:	ab1d      	add	r3, sp, #116	; 0x74
 80103f8:	9300      	str	r3, [sp, #0]
 80103fa:	4659      	mov	r1, fp
 80103fc:	ab1c      	add	r3, sp, #112	; 0x70
 80103fe:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8010400:	f002 fee3 	bl	80131ca <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 8010404:	4604      	mov	r4, r0
 8010406:	e7c0      	b.n	801038a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 8010408:	f8d8 0000 	ldr.w	r0, [r8]
 801040c:	6803      	ldr	r3, [r0, #0]
 801040e:	691b      	ldr	r3, [r3, #16]
 8010410:	4798      	blx	r3
 8010412:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8010416:	4298      	cmp	r0, r3
 8010418:	f000 80a5 	beq.w	8010566 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 801041c:	f242 030b 	movw	r3, #8203	; 0x200b
 8010420:	4298      	cmp	r0, r3
 8010422:	f000 80a0 	beq.w	8010566 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 8010426:	f1bb 0f00 	cmp.w	fp, #0
 801042a:	d100      	bne.n	801042e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 801042c:	444d      	add	r5, r9
 801042e:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8010430:	2a00      	cmp	r2, #0
 8010432:	d1bf      	bne.n	80103b4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 8010434:	4691      	mov	r9, r2
 8010436:	e096      	b.n	8010566 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 8010438:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801043a:	2b00      	cmp	r3, #0
 801043c:	f000 80aa 	beq.w	8010594 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8010440:	f1bb 0f00 	cmp.w	fp, #0
 8010444:	d118      	bne.n	8010478 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8010446:	f8d8 0000 	ldr.w	r0, [r8]
 801044a:	990d      	ldr	r1, [sp, #52]	; 0x34
 801044c:	6803      	ldr	r3, [r0, #0]
 801044e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010450:	4798      	blx	r3
 8010452:	4405      	add	r5, r0
 8010454:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8010456:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8010458:	1aeb      	subs	r3, r5, r3
 801045a:	4293      	cmp	r3, r2
 801045c:	dd17      	ble.n	801048e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 801045e:	2c00      	cmp	r4, #0
 8010460:	f000 8096 	beq.w	8010590 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b6>
 8010464:	2c0a      	cmp	r4, #10
 8010466:	f040 8084 	bne.w	8010572 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 801046a:	240a      	movs	r4, #10
 801046c:	fab4 f084 	clz	r0, r4
 8010470:	0940      	lsrs	r0, r0, #5
 8010472:	b01f      	add	sp, #124	; 0x7c
 8010474:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010478:	f8d8 0000 	ldr.w	r0, [r8]
 801047c:	990d      	ldr	r1, [sp, #52]	; 0x34
 801047e:	6803      	ldr	r3, [r0, #0]
 8010480:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010482:	4798      	blx	r3
 8010484:	f1bb 0f01 	cmp.w	fp, #1
 8010488:	eba5 0500 	sub.w	r5, r5, r0
 801048c:	d0a4      	beq.n	80103d8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 801048e:	981c      	ldr	r0, [sp, #112]	; 0x70
 8010490:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8010492:	f990 1009 	ldrsb.w	r1, [r0, #9]
 8010496:	f9b3 6000 	ldrsh.w	r6, [r3]
 801049a:	7b43      	ldrb	r3, [r0, #13]
 801049c:	015b      	lsls	r3, r3, #5
 801049e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80104a2:	7983      	ldrb	r3, [r0, #6]
 80104a4:	4429      	add	r1, r5
 80104a6:	4313      	orrs	r3, r2
 80104a8:	440b      	add	r3, r1
 80104aa:	42b3      	cmp	r3, r6
 80104ac:	db5b      	blt.n	8010566 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 80104ae:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80104b0:	4299      	cmp	r1, r3
 80104b2:	da58      	bge.n	8010566 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 80104b4:	f8d8 0000 	ldr.w	r0, [r8]
 80104b8:	6803      	ldr	r3, [r0, #0]
 80104ba:	42ae      	cmp	r6, r5
 80104bc:	bfc8      	it	gt
 80104be:	1b76      	subgt	r6, r6, r5
 80104c0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80104c2:	bfcc      	ite	gt
 80104c4:	b2b6      	uxthgt	r6, r6
 80104c6:	2600      	movle	r6, #0
 80104c8:	4798      	blx	r3
 80104ca:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80104cc:	7b5a      	ldrb	r2, [r3, #13]
 80104ce:	00d1      	lsls	r1, r2, #3
 80104d0:	f401 7780 	and.w	r7, r1, #256	; 0x100
 80104d4:	7a19      	ldrb	r1, [r3, #8]
 80104d6:	4339      	orrs	r1, r7
 80104d8:	0657      	lsls	r7, r2, #25
 80104da:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 80104dc:	bf44      	itt	mi
 80104de:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 80104e2:	b209      	sxthmi	r1, r1
 80104e4:	19c7      	adds	r7, r0, r7
 80104e6:	1a7f      	subs	r7, r7, r1
 80104e8:	9929      	ldr	r1, [sp, #164]	; 0xa4
 80104ea:	b2bf      	uxth	r7, r7
 80104ec:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 80104f0:	fa0f fa87 	sxth.w	sl, r7
 80104f4:	4551      	cmp	r1, sl
 80104f6:	dd3a      	ble.n	801056e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x294>
 80104f8:	0112      	lsls	r2, r2, #4
 80104fa:	79d8      	ldrb	r0, [r3, #7]
 80104fc:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8010500:	4302      	orrs	r2, r0
 8010502:	4492      	add	sl, r2
 8010504:	4551      	cmp	r1, sl
 8010506:	dc2e      	bgt.n	8010566 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 8010508:	1bcf      	subs	r7, r1, r7
 801050a:	b2bf      	uxth	r7, r7
 801050c:	468a      	mov	sl, r1
 801050e:	9319      	str	r3, [sp, #100]	; 0x64
 8010510:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8010512:	f8d8 0000 	ldr.w	r0, [r8]
 8010516:	681a      	ldr	r2, [r3, #0]
 8010518:	6801      	ldr	r1, [r0, #0]
 801051a:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 801051c:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 801051e:	9313      	str	r3, [sp, #76]	; 0x4c
 8010520:	9218      	str	r2, [sp, #96]	; 0x60
 8010522:	6b89      	ldr	r1, [r1, #56]	; 0x38
 8010524:	4788      	blx	r1
 8010526:	f898 1006 	ldrb.w	r1, [r8, #6]
 801052a:	910b      	str	r1, [sp, #44]	; 0x2c
 801052c:	f898 100e 	ldrb.w	r1, [r8, #14]
 8010530:	910a      	str	r1, [sp, #40]	; 0x28
 8010532:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 8010536:	9109      	str	r1, [sp, #36]	; 0x24
 8010538:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801053a:	f8d8 1008 	ldr.w	r1, [r8, #8]
 801053e:	9305      	str	r3, [sp, #20]
 8010540:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8010542:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8010544:	9206      	str	r2, [sp, #24]
 8010546:	e9cd 0107 	strd	r0, r1, [sp, #28]
 801054a:	e9cd 7303 	strd	r7, r3, [sp, #12]
 801054e:	e9cd a601 	strd	sl, r6, [sp, #4]
 8010552:	442e      	add	r6, r5
 8010554:	b236      	sxth	r6, r6
 8010556:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8010558:	9600      	str	r6, [sp, #0]
 801055a:	681a      	ldr	r2, [r3, #0]
 801055c:	9916      	ldr	r1, [sp, #88]	; 0x58
 801055e:	685b      	ldr	r3, [r3, #4]
 8010560:	9811      	ldr	r0, [sp, #68]	; 0x44
 8010562:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8010564:	47b0      	blx	r6
 8010566:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010568:	3301      	adds	r3, #1
 801056a:	930e      	str	r3, [sp, #56]	; 0x38
 801056c:	e6e3      	b.n	8010336 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 801056e:	2700      	movs	r7, #0
 8010570:	e7cd      	b.n	801050e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
 8010572:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8010574:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8010576:	3501      	adds	r5, #1
 8010578:	429d      	cmp	r5, r3
 801057a:	f6bf af77 	bge.w	801046c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 801057e:	4659      	mov	r1, fp
 8010580:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8010582:	f7f4 fb9b 	bl	8004cbc <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8010586:	4604      	mov	r4, r0
 8010588:	b110      	cbz	r0, 8010590 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b6>
 801058a:	280a      	cmp	r0, #10
 801058c:	d1f2      	bne.n	8010574 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29a>
 801058e:	e76c      	b.n	801046a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8010590:	2400      	movs	r4, #0
 8010592:	e76b      	b.n	801046c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 8010594:	f1bb 0f00 	cmp.w	fp, #0
 8010598:	f43f af5c 	beq.w	8010454 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 801059c:	e777      	b.n	801048e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

0801059e <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 801059e:	b530      	push	{r4, r5, lr}
 80105a0:	8a44      	ldrh	r4, [r0, #18]
 80105a2:	8ac5      	ldrh	r5, [r0, #22]
 80105a4:	82c3      	strh	r3, [r0, #22]
 80105a6:	442c      	add	r4, r5
 80105a8:	1ae4      	subs	r4, r4, r3
 80105aa:	8244      	strh	r4, [r0, #18]
 80105ac:	8b03      	ldrh	r3, [r0, #24]
 80105ae:	8a84      	ldrh	r4, [r0, #20]
 80105b0:	4422      	add	r2, r4
 80105b2:	440c      	add	r4, r1
 80105b4:	1a59      	subs	r1, r3, r1
 80105b6:	8342      	strh	r2, [r0, #26]
 80105b8:	8284      	strh	r4, [r0, #20]
 80105ba:	8301      	strh	r1, [r0, #24]
 80105bc:	bd30      	pop	{r4, r5, pc}

080105be <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>:
 80105be:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80105c2:	7a43      	ldrb	r3, [r0, #9]
 80105c4:	1eda      	subs	r2, r3, #3
 80105c6:	b087      	sub	sp, #28
 80105c8:	4604      	mov	r4, r0
 80105ca:	b2d2      	uxtb	r2, r2
 80105cc:	460f      	mov	r7, r1
 80105ce:	2900      	cmp	r1, #0
 80105d0:	d036      	beq.n	8010640 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x82>
 80105d2:	2a01      	cmp	r2, #1
 80105d4:	d932      	bls.n	801063c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x7e>
 80105d6:	1e58      	subs	r0, r3, #1
 80105d8:	f1d0 0b00 	rsbs	fp, r0, #0
 80105dc:	eb4b 0b00 	adc.w	fp, fp, r0
 80105e0:	1e99      	subs	r1, r3, #2
 80105e2:	424b      	negs	r3, r1
 80105e4:	414b      	adcs	r3, r1
 80105e6:	9303      	str	r3, [sp, #12]
 80105e8:	2300      	movs	r3, #0
 80105ea:	e9cd 3301 	strd	r3, r3, [sp, #4]
 80105ee:	2500      	movs	r5, #0
 80105f0:	8265      	strh	r5, [r4, #18]
 80105f2:	82a5      	strh	r5, [r4, #20]
 80105f4:	46a9      	mov	r9, r5
 80105f6:	f242 0a0b 	movw	sl, #8203	; 0x200b
 80105fa:	2300      	movs	r3, #0
 80105fc:	9305      	str	r3, [sp, #20]
 80105fe:	8823      	ldrh	r3, [r4, #0]
 8010600:	2b20      	cmp	r3, #32
 8010602:	d02b      	beq.n	801065c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x9e>
 8010604:	eba3 020a 	sub.w	r2, r3, sl
 8010608:	4256      	negs	r6, r2
 801060a:	4156      	adcs	r6, r2
 801060c:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8010610:	4293      	cmp	r3, r2
 8010612:	d004      	beq.n	801061e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 8010614:	4553      	cmp	r3, sl
 8010616:	bf16      	itet	ne
 8010618:	4699      	movne	r9, r3
 801061a:	2601      	moveq	r6, #1
 801061c:	2600      	movne	r6, #0
 801061e:	ab05      	add	r3, sp, #20
 8010620:	68e2      	ldr	r2, [r4, #12]
 8010622:	7a21      	ldrb	r1, [r4, #8]
 8010624:	6860      	ldr	r0, [r4, #4]
 8010626:	f002 fd87 	bl	8013138 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801062a:	8020      	strh	r0, [r4, #0]
 801062c:	b9c8      	cbnz	r0, 8010662 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xa4>
 801062e:	8b22      	ldrh	r2, [r4, #24]
 8010630:	2300      	movs	r3, #0
 8010632:	4611      	mov	r1, r2
 8010634:	4620      	mov	r0, r4
 8010636:	f7ff ffb2 	bl	801059e <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 801063a:	e066      	b.n	801070a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 801063c:	468b      	mov	fp, r1
 801063e:	e7cf      	b.n	80105e0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x22>
 8010640:	3b01      	subs	r3, #1
 8010642:	2a01      	cmp	r2, #1
 8010644:	bf8c      	ite	hi
 8010646:	2200      	movhi	r2, #0
 8010648:	2201      	movls	r2, #1
 801064a:	2b01      	cmp	r3, #1
 801064c:	bf8c      	ite	hi
 801064e:	2300      	movhi	r3, #0
 8010650:	2301      	movls	r3, #1
 8010652:	9202      	str	r2, [sp, #8]
 8010654:	9301      	str	r3, [sp, #4]
 8010656:	9103      	str	r1, [sp, #12]
 8010658:	468b      	mov	fp, r1
 801065a:	e7c8      	b.n	80105ee <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x30>
 801065c:	4699      	mov	r9, r3
 801065e:	2601      	movs	r6, #1
 8010660:	e7dd      	b.n	801061e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 8010662:	8ae3      	ldrh	r3, [r4, #22]
 8010664:	280a      	cmp	r0, #10
 8010666:	f103 0301 	add.w	r3, r3, #1
 801066a:	82e3      	strh	r3, [r4, #22]
 801066c:	d0df      	beq.n	801062e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x70>
 801066e:	9a05      	ldr	r2, [sp, #20]
 8010670:	bb42      	cbnz	r2, 80106c4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x106>
 8010672:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8010676:	4298      	cmp	r0, r3
 8010678:	d001      	beq.n	801067e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 801067a:	4550      	cmp	r0, sl
 801067c:	d1bd      	bne.n	80105fa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 801067e:	8823      	ldrh	r3, [r4, #0]
 8010680:	8b21      	ldrh	r1, [r4, #24]
 8010682:	2b20      	cmp	r3, #32
 8010684:	d001      	beq.n	801068a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xcc>
 8010686:	4553      	cmp	r3, sl
 8010688:	d131      	bne.n	80106ee <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x130>
 801068a:	2e00      	cmp	r6, #0
 801068c:	bf0a      	itet	eq
 801068e:	460d      	moveq	r5, r1
 8010690:	4630      	movne	r0, r6
 8010692:	2001      	moveq	r0, #1
 8010694:	440a      	add	r2, r1
 8010696:	8aa3      	ldrh	r3, [r4, #20]
 8010698:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 801069c:	b292      	uxth	r2, r2
 801069e:	8322      	strh	r2, [r4, #24]
 80106a0:	4413      	add	r3, r2
 80106a2:	2f00      	cmp	r7, #0
 80106a4:	d03a      	beq.n	801071c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x15e>
 80106a6:	f1bb 0f00 	cmp.w	fp, #0
 80106aa:	d102      	bne.n	80106b2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xf4>
 80106ac:	9903      	ldr	r1, [sp, #12]
 80106ae:	b301      	cbz	r1, 80106f2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 80106b0:	b1f8      	cbz	r0, 80106f2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 80106b2:	8ba1      	ldrh	r1, [r4, #28]
 80106b4:	4419      	add	r1, r3
 80106b6:	458c      	cmp	ip, r1
 80106b8:	da2a      	bge.n	8010710 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 80106ba:	8a61      	ldrh	r1, [r4, #18]
 80106bc:	b341      	cbz	r1, 8010710 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 80106be:	4563      	cmp	r3, ip
 80106c0:	dd9b      	ble.n	80105fa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 80106c2:	e01c      	b.n	80106fe <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x140>
 80106c4:	8893      	ldrh	r3, [r2, #4]
 80106c6:	8023      	strh	r3, [r4, #0]
 80106c8:	f892 800d 	ldrb.w	r8, [r2, #13]
 80106cc:	ea4f 0848 	mov.w	r8, r8, lsl #1
 80106d0:	f408 7080 	and.w	r0, r8, #256	; 0x100
 80106d4:	f892 800a 	ldrb.w	r8, [r2, #10]
 80106d8:	ea48 0800 	orr.w	r8, r8, r0
 80106dc:	68e0      	ldr	r0, [r4, #12]
 80106de:	6803      	ldr	r3, [r0, #0]
 80106e0:	4649      	mov	r1, r9
 80106e2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80106e4:	4798      	blx	r3
 80106e6:	eb08 0200 	add.w	r2, r8, r0
 80106ea:	b292      	uxth	r2, r2
 80106ec:	e7c7      	b.n	801067e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 80106ee:	2000      	movs	r0, #0
 80106f0:	e7d0      	b.n	8010694 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xd6>
 80106f2:	4563      	cmp	r3, ip
 80106f4:	dd81      	ble.n	80105fa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 80106f6:	8a63      	ldrh	r3, [r4, #18]
 80106f8:	2b00      	cmp	r3, #0
 80106fa:	f43f af7e 	beq.w	80105fa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 80106fe:	2301      	movs	r3, #1
 8010700:	77a3      	strb	r3, [r4, #30]
 8010702:	8ba2      	ldrh	r2, [r4, #28]
 8010704:	8b63      	ldrh	r3, [r4, #26]
 8010706:	4413      	add	r3, r2
 8010708:	8363      	strh	r3, [r4, #26]
 801070a:	b007      	add	sp, #28
 801070c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010710:	2300      	movs	r3, #0
 8010712:	4611      	mov	r1, r2
 8010714:	4620      	mov	r0, r4
 8010716:	f7ff ff42 	bl	801059e <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 801071a:	e76e      	b.n	80105fa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 801071c:	4563      	cmp	r3, ip
 801071e:	dd14      	ble.n	801074a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x18c>
 8010720:	9b02      	ldr	r3, [sp, #8]
 8010722:	b113      	cbz	r3, 801072a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x16c>
 8010724:	2301      	movs	r3, #1
 8010726:	460a      	mov	r2, r1
 8010728:	e783      	b.n	8010632 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x74>
 801072a:	9b01      	ldr	r3, [sp, #4]
 801072c:	2b00      	cmp	r3, #0
 801072e:	f43f af64 	beq.w	80105fa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8010732:	2800      	cmp	r0, #0
 8010734:	f47f af61 	bne.w	80105fa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8010738:	b116      	cbz	r6, 8010740 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x182>
 801073a:	2301      	movs	r3, #1
 801073c:	462a      	mov	r2, r5
 801073e:	e779      	b.n	8010634 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x76>
 8010740:	8a63      	ldrh	r3, [r4, #18]
 8010742:	2b00      	cmp	r3, #0
 8010744:	f43f af59 	beq.w	80105fa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8010748:	e7df      	b.n	801070a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 801074a:	2800      	cmp	r0, #0
 801074c:	f47f af55 	bne.w	80105fa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8010750:	2e00      	cmp	r6, #0
 8010752:	f43f af52 	beq.w	80105fa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8010756:	2301      	movs	r3, #1
 8010758:	462a      	mov	r2, r5
 801075a:	e7db      	b.n	8010714 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x156>

0801075c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 801075c:	b530      	push	{r4, r5, lr}
 801075e:	4605      	mov	r5, r0
 8010760:	b08b      	sub	sp, #44	; 0x2c
 8010762:	b191      	cbz	r1, 801078a <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x2e>
 8010764:	e9cd 3100 	strd	r3, r1, [sp]
 8010768:	4613      	mov	r3, r2
 801076a:	4601      	mov	r1, r0
 801076c:	f8bd 2038 	ldrh.w	r2, [sp, #56]	; 0x38
 8010770:	a802      	add	r0, sp, #8
 8010772:	f7ff fd09 	bl	8010188 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 8010776:	2401      	movs	r4, #1
 8010778:	2100      	movs	r1, #0
 801077a:	a802      	add	r0, sp, #8
 801077c:	f7ff ff1f 	bl	80105be <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 8010780:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8010784:	b163      	cbz	r3, 80107a0 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 8010786:	3401      	adds	r4, #1
 8010788:	e7f6      	b.n	8010778 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x1c>
 801078a:	f002 fda3 	bl	80132d4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801078e:	2401      	movs	r4, #1
 8010790:	280a      	cmp	r0, #10
 8010792:	4628      	mov	r0, r5
 8010794:	bf08      	it	eq
 8010796:	3401      	addeq	r4, #1
 8010798:	f002 fd9c 	bl	80132d4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801079c:	2800      	cmp	r0, #0
 801079e:	d1f7      	bne.n	8010790 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 80107a0:	b2a0      	uxth	r0, r4
 80107a2:	b00b      	add	sp, #44	; 0x2c
 80107a4:	bd30      	pop	{r4, r5, pc}

080107a6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 80107a6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80107aa:	b0e5      	sub	sp, #404	; 0x194
 80107ac:	4689      	mov	r9, r1
 80107ae:	f8dd a1b8 	ldr.w	sl, [sp, #440]	; 0x1b8
 80107b2:	900a      	str	r0, [sp, #40]	; 0x28
 80107b4:	461c      	mov	r4, r3
 80107b6:	f1ba 0f00 	cmp.w	sl, #0
 80107ba:	f000 80b4 	beq.w	8010926 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 80107be:	681b      	ldr	r3, [r3, #0]
 80107c0:	2b00      	cmp	r3, #0
 80107c2:	f000 80b0 	beq.w	8010926 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 80107c6:	7ba3      	ldrb	r3, [r4, #14]
 80107c8:	2b00      	cmp	r3, #0
 80107ca:	f000 80ac 	beq.w	8010926 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 80107ce:	6810      	ldr	r0, [r2, #0]
 80107d0:	6851      	ldr	r1, [r2, #4]
 80107d2:	f9b9 2004 	ldrsh.w	r2, [r9, #4]
 80107d6:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 80107da:	f10d 0834 	add.w	r8, sp, #52	; 0x34
 80107de:	4643      	mov	r3, r8
 80107e0:	c303      	stmia	r3!, {r0, r1}
 80107e2:	2500      	movs	r5, #0
 80107e4:	f9b9 3006 	ldrsh.w	r3, [r9, #6]
 80107e8:	79a2      	ldrb	r2, [r4, #6]
 80107ea:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 80107ee:	a90f      	add	r1, sp, #60	; 0x3c
 80107f0:	4640      	mov	r0, r8
 80107f2:	950f      	str	r5, [sp, #60]	; 0x3c
 80107f4:	f7ff fd40 	bl	8010278 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 80107f8:	a90f      	add	r1, sp, #60	; 0x3c
 80107fa:	4608      	mov	r0, r1
 80107fc:	79a2      	ldrb	r2, [r4, #6]
 80107fe:	af19      	add	r7, sp, #100	; 0x64
 8010800:	f7ff fd3a 	bl	8010278 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8010804:	4638      	mov	r0, r7
 8010806:	f002 f93a 	bl	8012a7e <_ZN8touchgfx12TextProviderC1Ev>
 801080a:	6820      	ldr	r0, [r4, #0]
 801080c:	6803      	ldr	r3, [r0, #0]
 801080e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8010810:	4798      	blx	r3
 8010812:	4606      	mov	r6, r0
 8010814:	6820      	ldr	r0, [r4, #0]
 8010816:	6803      	ldr	r3, [r0, #0]
 8010818:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801081a:	4798      	blx	r3
 801081c:	4633      	mov	r3, r6
 801081e:	9000      	str	r0, [sp, #0]
 8010820:	9a6f      	ldr	r2, [sp, #444]	; 0x1bc
 8010822:	4651      	mov	r1, sl
 8010824:	4638      	mov	r0, r7
 8010826:	f002 f985 	bl	8012b34 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801082a:	6820      	ldr	r0, [r4, #0]
 801082c:	7923      	ldrb	r3, [r4, #4]
 801082e:	9308      	str	r3, [sp, #32]
 8010830:	6803      	ldr	r3, [r0, #0]
 8010832:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010834:	4798      	blx	r3
 8010836:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801083a:	181e      	adds	r6, r3, r0
 801083c:	42ae      	cmp	r6, r5
 801083e:	dd06      	ble.n	801084e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xa8>
 8010840:	f9b8 2002 	ldrsh.w	r2, [r8, #2]
 8010844:	4282      	cmp	r2, r0
 8010846:	bfa4      	itt	ge
 8010848:	189d      	addge	r5, r3, r2
 801084a:	fb95 f5f6 	sdivge	r5, r5, r6
 801084e:	a832      	add	r0, sp, #200	; 0xc8
 8010850:	f002 f915 	bl	8012a7e <_ZN8touchgfx12TextProviderC1Ev>
 8010854:	7c23      	ldrb	r3, [r4, #16]
 8010856:	b17b      	cbz	r3, 8010878 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xd2>
 8010858:	6820      	ldr	r0, [r4, #0]
 801085a:	6803      	ldr	r3, [r0, #0]
 801085c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801085e:	4798      	blx	r3
 8010860:	4683      	mov	fp, r0
 8010862:	6820      	ldr	r0, [r4, #0]
 8010864:	6803      	ldr	r3, [r0, #0]
 8010866:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8010868:	4798      	blx	r3
 801086a:	465b      	mov	r3, fp
 801086c:	9000      	str	r0, [sp, #0]
 801086e:	9a6f      	ldr	r2, [sp, #444]	; 0x1bc
 8010870:	4651      	mov	r1, sl
 8010872:	a832      	add	r0, sp, #200	; 0xc8
 8010874:	f002 f95e 	bl	8012b34 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8010878:	7be1      	ldrb	r1, [r4, #15]
 801087a:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 801087e:	7963      	ldrb	r3, [r4, #5]
 8010880:	1a52      	subs	r2, r2, r1
 8010882:	7c21      	ldrb	r1, [r4, #16]
 8010884:	9101      	str	r1, [sp, #4]
 8010886:	6821      	ldr	r1, [r4, #0]
 8010888:	9100      	str	r1, [sp, #0]
 801088a:	b292      	uxth	r2, r2
 801088c:	a932      	add	r1, sp, #200	; 0xc8
 801088e:	a811      	add	r0, sp, #68	; 0x44
 8010890:	f7ff fc7a 	bl	8010188 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 8010894:	7c23      	ldrb	r3, [r4, #16]
 8010896:	b9bb      	cbnz	r3, 80108c8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>
 8010898:	fa1f fa86 	uxth.w	sl, r6
 801089c:	2d00      	cmp	r5, #0
 801089e:	dd45      	ble.n	801092c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x186>
 80108a0:	4638      	mov	r0, r7
 80108a2:	f002 fd17 	bl	80132d4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80108a6:	2800      	cmp	r0, #0
 80108a8:	d03d      	beq.n	8010926 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 80108aa:	280a      	cmp	r0, #10
 80108ac:	d1f6      	bne.n	801089c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf6>
 80108ae:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 80108b2:	4453      	add	r3, sl
 80108b4:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 80108b8:	f8bd 3042 	ldrh.w	r3, [sp, #66]	; 0x42
 80108bc:	eba3 030a 	sub.w	r3, r3, sl
 80108c0:	3d01      	subs	r5, #1
 80108c2:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 80108c6:	e7e9      	b.n	801089c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf6>
 80108c8:	0073      	lsls	r3, r6, #1
 80108ca:	9309      	str	r3, [sp, #36]	; 0x24
 80108cc:	f64f 7bff 	movw	fp, #65535	; 0xffff
 80108d0:	fa1f fa86 	uxth.w	sl, r6
 80108d4:	2d00      	cmp	r5, #0
 80108d6:	dd29      	ble.n	801092c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x186>
 80108d8:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 80108dc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80108de:	428b      	cmp	r3, r1
 80108e0:	bfd4      	ite	le
 80108e2:	2100      	movle	r1, #0
 80108e4:	2101      	movgt	r1, #1
 80108e6:	a811      	add	r0, sp, #68	; 0x44
 80108e8:	f7ff fe69 	bl	80105be <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 80108ec:	f8bd 3056 	ldrh.w	r3, [sp, #86]	; 0x56
 80108f0:	3b01      	subs	r3, #1
 80108f2:	b29b      	uxth	r3, r3
 80108f4:	455b      	cmp	r3, fp
 80108f6:	930b      	str	r3, [sp, #44]	; 0x2c
 80108f8:	d005      	beq.n	8010906 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x160>
 80108fa:	7961      	ldrb	r1, [r4, #5]
 80108fc:	4638      	mov	r0, r7
 80108fe:	f7f4 f9dd 	bl	8004cbc <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8010902:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8010904:	e7f4      	b.n	80108f0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x14a>
 8010906:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 801090a:	4453      	add	r3, sl
 801090c:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 8010910:	f8bd 3042 	ldrh.w	r3, [sp, #66]	; 0x42
 8010914:	eba3 030a 	sub.w	r3, r3, sl
 8010918:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 801091c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8010920:	3d01      	subs	r5, #1
 8010922:	2b00      	cmp	r3, #0
 8010924:	d1d6      	bne.n	80108d4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x12e>
 8010926:	b065      	add	sp, #404	; 0x194
 8010928:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801092c:	0075      	lsls	r5, r6, #1
 801092e:	f04f 0a00 	mov.w	sl, #0
 8010932:	7c23      	ldrb	r3, [r4, #16]
 8010934:	2b00      	cmp	r3, #0
 8010936:	d066      	beq.n	8010a06 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x260>
 8010938:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 801093c:	428d      	cmp	r5, r1
 801093e:	bfd4      	ite	le
 8010940:	2100      	movle	r1, #0
 8010942:	2101      	movgt	r1, #1
 8010944:	a811      	add	r0, sp, #68	; 0x44
 8010946:	f7ff fe3a 	bl	80105be <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 801094a:	9b08      	ldr	r3, [sp, #32]
 801094c:	2b00      	cmp	r3, #0
 801094e:	d055      	beq.n	80109fc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 8010950:	f894 b010 	ldrb.w	fp, [r4, #16]
 8010954:	2264      	movs	r2, #100	; 0x64
 8010956:	4639      	mov	r1, r7
 8010958:	a84b      	add	r0, sp, #300	; 0x12c
 801095a:	f010 f8f1 	bl	8020b40 <memcpy>
 801095e:	f1bb 0f00 	cmp.w	fp, #0
 8010962:	d058      	beq.n	8010a16 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x270>
 8010964:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 8010968:	7922      	ldrb	r2, [r4, #4]
 801096a:	2a01      	cmp	r2, #1
 801096c:	d13c      	bne.n	80109e8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x242>
 801096e:	f9bd 0040 	ldrsh.w	r0, [sp, #64]	; 0x40
 8010972:	1ac0      	subs	r0, r0, r3
 8010974:	2302      	movs	r3, #2
 8010976:	fb90 f0f3 	sdiv	r0, r0, r3
 801097a:	b200      	sxth	r0, r0
 801097c:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8010980:	4418      	add	r0, r3
 8010982:	7c23      	ldrb	r3, [r4, #16]
 8010984:	b200      	sxth	r0, r0
 8010986:	2b00      	cmp	r3, #0
 8010988:	d03a      	beq.n	8010a00 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25a>
 801098a:	f8bd 2056 	ldrh.w	r2, [sp, #86]	; 0x56
 801098e:	f89d 1062 	ldrb.w	r1, [sp, #98]	; 0x62
 8010992:	9000      	str	r0, [sp, #0]
 8010994:	e9cd 2105 	strd	r2, r1, [sp, #20]
 8010998:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	; 0x3e
 801099c:	980a      	ldr	r0, [sp, #40]	; 0x28
 801099e:	e9cd a703 	strd	sl, r7, [sp, #12]
 80109a2:	e9cd 8401 	strd	r8, r4, [sp, #4]
 80109a6:	464a      	mov	r2, r9
 80109a8:	2100      	movs	r1, #0
 80109aa:	f7ff fc96 	bl	80102da <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 80109ae:	2800      	cmp	r0, #0
 80109b0:	d1b9      	bne.n	8010926 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 80109b2:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 80109b6:	b2b2      	uxth	r2, r6
 80109b8:	4611      	mov	r1, r2
 80109ba:	4413      	add	r3, r2
 80109bc:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 80109c0:	1a52      	subs	r2, r2, r1
 80109c2:	7c21      	ldrb	r1, [r4, #16]
 80109c4:	b21b      	sxth	r3, r3
 80109c6:	b212      	sxth	r2, r2
 80109c8:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 80109cc:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 80109d0:	b109      	cbz	r1, 80109d6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x230>
 80109d2:	42b2      	cmp	r2, r6
 80109d4:	dba7      	blt.n	8010926 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 80109d6:	f8b8 2006 	ldrh.w	r2, [r8, #6]
 80109da:	f8b8 1002 	ldrh.w	r1, [r8, #2]
 80109de:	440a      	add	r2, r1
 80109e0:	b212      	sxth	r2, r2
 80109e2:	4293      	cmp	r3, r2
 80109e4:	dda5      	ble.n	8010932 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x18c>
 80109e6:	e79e      	b.n	8010926 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 80109e8:	2a02      	cmp	r2, #2
 80109ea:	d105      	bne.n	80109f8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 80109ec:	7be2      	ldrb	r2, [r4, #15]
 80109ee:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 80109f2:	1a80      	subs	r0, r0, r2
 80109f4:	1ac0      	subs	r0, r0, r3
 80109f6:	e7c0      	b.n	801097a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d4>
 80109f8:	2000      	movs	r0, #0
 80109fa:	e7bf      	b.n	801097c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d6>
 80109fc:	7be0      	ldrb	r0, [r4, #15]
 80109fe:	e7bd      	b.n	801097c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d6>
 8010a00:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8010a04:	e7c3      	b.n	801098e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e8>
 8010a06:	9b08      	ldr	r3, [sp, #32]
 8010a08:	2b00      	cmp	r3, #0
 8010a0a:	d0f7      	beq.n	80109fc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 8010a0c:	2264      	movs	r2, #100	; 0x64
 8010a0e:	4639      	mov	r1, r7
 8010a10:	a84b      	add	r0, sp, #300	; 0x12c
 8010a12:	f010 f895 	bl	8020b40 <memcpy>
 8010a16:	2300      	movs	r3, #0
 8010a18:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8010a1c:	6821      	ldr	r1, [r4, #0]
 8010a1e:	a84b      	add	r0, sp, #300	; 0x12c
 8010a20:	f7ff fbee 	bl	8010200 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8010a24:	b203      	sxth	r3, r0
 8010a26:	e79f      	b.n	8010968 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c2>

08010a28 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 8010a28:	2b03      	cmp	r3, #3
 8010a2a:	d818      	bhi.n	8010a5e <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 8010a2c:	e8df f003 	tbb	[pc, r3]
 8010a30:	130d0602 	.word	0x130d0602
 8010a34:	f9b0 2000 	ldrsh.w	r2, [r0]
 8010a38:	1850      	adds	r0, r2, r1
 8010a3a:	4770      	bx	lr
 8010a3c:	8803      	ldrh	r3, [r0, #0]
 8010a3e:	8880      	ldrh	r0, [r0, #4]
 8010a40:	4418      	add	r0, r3
 8010a42:	b200      	sxth	r0, r0
 8010a44:	1a80      	subs	r0, r0, r2
 8010a46:	3801      	subs	r0, #1
 8010a48:	4770      	bx	lr
 8010a4a:	8803      	ldrh	r3, [r0, #0]
 8010a4c:	8880      	ldrh	r0, [r0, #4]
 8010a4e:	4418      	add	r0, r3
 8010a50:	b200      	sxth	r0, r0
 8010a52:	1a40      	subs	r0, r0, r1
 8010a54:	e7f7      	b.n	8010a46 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 8010a56:	f9b0 0000 	ldrsh.w	r0, [r0]
 8010a5a:	4410      	add	r0, r2
 8010a5c:	4770      	bx	lr
 8010a5e:	2000      	movs	r0, #0
 8010a60:	4770      	bx	lr

08010a62 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 8010a62:	2b03      	cmp	r3, #3
 8010a64:	d817      	bhi.n	8010a96 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 8010a66:	e8df f003 	tbb	[pc, r3]
 8010a6a:	0602      	.short	0x0602
 8010a6c:	1009      	.short	0x1009
 8010a6e:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8010a72:	1850      	adds	r0, r2, r1
 8010a74:	4770      	bx	lr
 8010a76:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8010a7a:	e7fa      	b.n	8010a72 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 8010a7c:	8843      	ldrh	r3, [r0, #2]
 8010a7e:	88c0      	ldrh	r0, [r0, #6]
 8010a80:	4418      	add	r0, r3
 8010a82:	b200      	sxth	r0, r0
 8010a84:	1a80      	subs	r0, r0, r2
 8010a86:	3801      	subs	r0, #1
 8010a88:	4770      	bx	lr
 8010a8a:	8843      	ldrh	r3, [r0, #2]
 8010a8c:	88c0      	ldrh	r0, [r0, #6]
 8010a8e:	4418      	add	r0, r3
 8010a90:	b200      	sxth	r0, r0
 8010a92:	1a40      	subs	r0, r0, r1
 8010a94:	e7f7      	b.n	8010a86 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 8010a96:	2000      	movs	r0, #0
 8010a98:	4770      	bx	lr
	...

08010a9c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 8010a9c:	4b01      	ldr	r3, [pc, #4]	; (8010aa4 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 8010a9e:	2200      	movs	r2, #0
 8010aa0:	601a      	str	r2, [r3, #0]
 8010aa2:	4770      	bx	lr
 8010aa4:	200155c8 	.word	0x200155c8

08010aa8 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 8010aa8:	4603      	mov	r3, r0
 8010aaa:	b1c8      	cbz	r0, 8010ae0 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 8010aac:	0c02      	lsrs	r2, r0, #16
 8010aae:	0412      	lsls	r2, r2, #16
 8010ab0:	b9a2      	cbnz	r2, 8010adc <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 8010ab2:	0403      	lsls	r3, r0, #16
 8010ab4:	2010      	movs	r0, #16
 8010ab6:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8010aba:	bf04      	itt	eq
 8010abc:	021b      	lsleq	r3, r3, #8
 8010abe:	3008      	addeq	r0, #8
 8010ac0:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8010ac4:	bf04      	itt	eq
 8010ac6:	011b      	lsleq	r3, r3, #4
 8010ac8:	3004      	addeq	r0, #4
 8010aca:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8010ace:	bf04      	itt	eq
 8010ad0:	009b      	lsleq	r3, r3, #2
 8010ad2:	3002      	addeq	r0, #2
 8010ad4:	2b00      	cmp	r3, #0
 8010ad6:	db04      	blt.n	8010ae2 <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 8010ad8:	3001      	adds	r0, #1
 8010ada:	4770      	bx	lr
 8010adc:	2000      	movs	r0, #0
 8010ade:	e7ea      	b.n	8010ab6 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 8010ae0:	2020      	movs	r0, #32
 8010ae2:	4770      	bx	lr

08010ae4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 8010ae4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010ae8:	b087      	sub	sp, #28
 8010aea:	4681      	mov	r9, r0
 8010aec:	4698      	mov	r8, r3
 8010aee:	4610      	mov	r0, r2
 8010af0:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 8010af4:	460d      	mov	r5, r1
 8010af6:	b981      	cbnz	r1, 8010b1a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x36>
 8010af8:	b14b      	cbz	r3, 8010b0e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x2a>
 8010afa:	460b      	mov	r3, r1
 8010afc:	e9cd 4700 	strd	r4, r7, [sp]
 8010b00:	464a      	mov	r2, r9
 8010b02:	4641      	mov	r1, r8
 8010b04:	f7ff ffee 	bl	8010ae4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8010b08:	b007      	add	sp, #28
 8010b0a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010b0e:	f04f 33ff 	mov.w	r3, #4294967295
 8010b12:	603b      	str	r3, [r7, #0]
 8010b14:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8010b18:	e7f6      	b.n	8010b08 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 8010b1a:	fa32 fa01 	lsrs.w	sl, r2, r1
 8010b1e:	d107      	bne.n	8010b30 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4c>
 8010b20:	fb09 f602 	mul.w	r6, r9, r2
 8010b24:	fbb6 f0f4 	udiv	r0, r6, r4
 8010b28:	fb04 6610 	mls	r6, r4, r0, r6
 8010b2c:	603e      	str	r6, [r7, #0]
 8010b2e:	e7eb      	b.n	8010b08 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 8010b30:	2601      	movs	r6, #1
 8010b32:	408e      	lsls	r6, r1
 8010b34:	3e01      	subs	r6, #1
 8010b36:	4016      	ands	r6, r2
 8010b38:	fa09 fb01 	lsl.w	fp, r9, r1
 8010b3c:	4630      	mov	r0, r6
 8010b3e:	fbbb f3f4 	udiv	r3, fp, r4
 8010b42:	9302      	str	r3, [sp, #8]
 8010b44:	fb0a f303 	mul.w	r3, sl, r3
 8010b48:	9303      	str	r3, [sp, #12]
 8010b4a:	f7ff ffad 	bl	8010aa8 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8010b4e:	464a      	mov	r2, r9
 8010b50:	460b      	mov	r3, r1
 8010b52:	e9cd 4700 	strd	r4, r7, [sp]
 8010b56:	4601      	mov	r1, r0
 8010b58:	4630      	mov	r0, r6
 8010b5a:	f7ff ffc3 	bl	8010ae4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8010b5e:	9b02      	ldr	r3, [sp, #8]
 8010b60:	fb04 bb13 	mls	fp, r4, r3, fp
 8010b64:	4606      	mov	r6, r0
 8010b66:	4658      	mov	r0, fp
 8010b68:	eb05 0108 	add.w	r1, r5, r8
 8010b6c:	f7ff ff9c 	bl	8010aa8 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8010b70:	ab05      	add	r3, sp, #20
 8010b72:	e9cd 4300 	strd	r4, r3, [sp]
 8010b76:	465a      	mov	r2, fp
 8010b78:	4603      	mov	r3, r0
 8010b7a:	4650      	mov	r0, sl
 8010b7c:	f7ff ffb2 	bl	8010ae4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8010b80:	6839      	ldr	r1, [r7, #0]
 8010b82:	9a05      	ldr	r2, [sp, #20]
 8010b84:	9b03      	ldr	r3, [sp, #12]
 8010b86:	4411      	add	r1, r2
 8010b88:	fbb1 f2f4 	udiv	r2, r1, r4
 8010b8c:	18d3      	adds	r3, r2, r3
 8010b8e:	441e      	add	r6, r3
 8010b90:	fb04 1412 	mls	r4, r4, r2, r1
 8010b94:	4430      	add	r0, r6
 8010b96:	603c      	str	r4, [r7, #0]
 8010b98:	e7b6      	b.n	8010b08 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>

08010b9a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 8010b9a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010b9e:	b085      	sub	sp, #20
 8010ba0:	f1b0 0900 	subs.w	r9, r0, #0
 8010ba4:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8010ba6:	461d      	mov	r5, r3
 8010ba8:	bfbf      	itttt	lt
 8010baa:	6823      	ldrlt	r3, [r4, #0]
 8010bac:	425b      	neglt	r3, r3
 8010bae:	f1c9 0900 	rsblt	r9, r9, #0
 8010bb2:	6023      	strlt	r3, [r4, #0]
 8010bb4:	bfb4      	ite	lt
 8010bb6:	f04f 36ff 	movlt.w	r6, #4294967295
 8010bba:	2601      	movge	r6, #1
 8010bbc:	2a00      	cmp	r2, #0
 8010bbe:	4617      	mov	r7, r2
 8010bc0:	da04      	bge.n	8010bcc <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 8010bc2:	6823      	ldr	r3, [r4, #0]
 8010bc4:	425b      	negs	r3, r3
 8010bc6:	4257      	negs	r7, r2
 8010bc8:	4276      	negs	r6, r6
 8010bca:	6023      	str	r3, [r4, #0]
 8010bcc:	2d00      	cmp	r5, #0
 8010bce:	4638      	mov	r0, r7
 8010bd0:	bfba      	itte	lt
 8010bd2:	426d      	neglt	r5, r5
 8010bd4:	f04f 38ff 	movlt.w	r8, #4294967295
 8010bd8:	f04f 0801 	movge.w	r8, #1
 8010bdc:	f7ff ff64 	bl	8010aa8 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8010be0:	ab03      	add	r3, sp, #12
 8010be2:	e9cd 5300 	strd	r5, r3, [sp]
 8010be6:	463a      	mov	r2, r7
 8010be8:	4603      	mov	r3, r0
 8010bea:	4648      	mov	r0, r9
 8010bec:	f7ff ff7a 	bl	8010ae4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8010bf0:	6823      	ldr	r3, [r4, #0]
 8010bf2:	9a03      	ldr	r2, [sp, #12]
 8010bf4:	4546      	cmp	r6, r8
 8010bf6:	441a      	add	r2, r3
 8010bf8:	fb92 f3f5 	sdiv	r3, r2, r5
 8010bfc:	4418      	add	r0, r3
 8010bfe:	bf18      	it	ne
 8010c00:	4240      	negne	r0, r0
 8010c02:	fb05 2313 	mls	r3, r5, r3, r2
 8010c06:	1c72      	adds	r2, r6, #1
 8010c08:	6023      	str	r3, [r4, #0]
 8010c0a:	d105      	bne.n	8010c18 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 8010c0c:	2b00      	cmp	r3, #0
 8010c0e:	f1c3 0200 	rsb	r2, r3, #0
 8010c12:	db0b      	blt.n	8010c2c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 8010c14:	6022      	str	r2, [r4, #0]
 8010c16:	e006      	b.n	8010c26 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8010c18:	2e01      	cmp	r6, #1
 8010c1a:	d104      	bne.n	8010c26 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8010c1c:	2b00      	cmp	r3, #0
 8010c1e:	da02      	bge.n	8010c26 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8010c20:	442b      	add	r3, r5
 8010c22:	3801      	subs	r0, #1
 8010c24:	6023      	str	r3, [r4, #0]
 8010c26:	b005      	add	sp, #20
 8010c28:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010c2c:	3801      	subs	r0, #1
 8010c2e:	1b52      	subs	r2, r2, r5
 8010c30:	e7f0      	b.n	8010c14 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>
	...

08010c34 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 8010c34:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8010c38:	4c1c      	ldr	r4, [pc, #112]	; (8010cac <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 8010c3a:	6807      	ldr	r7, [r0, #0]
 8010c3c:	69a3      	ldr	r3, [r4, #24]
 8010c3e:	4605      	mov	r5, r0
 8010c40:	b92b      	cbnz	r3, 8010c4e <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 8010c42:	6840      	ldr	r0, [r0, #4]
 8010c44:	e9c5 7000 	strd	r7, r0, [r5]
 8010c48:	b004      	add	sp, #16
 8010c4a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010c4e:	68a2      	ldr	r2, [r4, #8]
 8010c50:	6820      	ldr	r0, [r4, #0]
 8010c52:	ae04      	add	r6, sp, #16
 8010c54:	f04f 0802 	mov.w	r8, #2
 8010c58:	fb93 f1f8 	sdiv	r1, r3, r8
 8010c5c:	440a      	add	r2, r1
 8010c5e:	f846 2d04 	str.w	r2, [r6, #-4]!
 8010c62:	69e1      	ldr	r1, [r4, #28]
 8010c64:	9600      	str	r6, [sp, #0]
 8010c66:	463a      	mov	r2, r7
 8010c68:	f7ff ff97 	bl	8010b9a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8010c6c:	69a3      	ldr	r3, [r4, #24]
 8010c6e:	686a      	ldr	r2, [r5, #4]
 8010c70:	6a21      	ldr	r1, [r4, #32]
 8010c72:	9600      	str	r6, [sp, #0]
 8010c74:	4607      	mov	r7, r0
 8010c76:	6860      	ldr	r0, [r4, #4]
 8010c78:	f7ff ff8f 	bl	8010b9a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8010c7c:	6962      	ldr	r2, [r4, #20]
 8010c7e:	69a3      	ldr	r3, [r4, #24]
 8010c80:	fb93 f8f8 	sdiv	r8, r3, r8
 8010c84:	4442      	add	r2, r8
 8010c86:	9203      	str	r2, [sp, #12]
 8010c88:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8010c8a:	682a      	ldr	r2, [r5, #0]
 8010c8c:	9600      	str	r6, [sp, #0]
 8010c8e:	4407      	add	r7, r0
 8010c90:	68e0      	ldr	r0, [r4, #12]
 8010c92:	f7ff ff82 	bl	8010b9a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8010c96:	9600      	str	r6, [sp, #0]
 8010c98:	4680      	mov	r8, r0
 8010c9a:	69a3      	ldr	r3, [r4, #24]
 8010c9c:	686a      	ldr	r2, [r5, #4]
 8010c9e:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 8010ca0:	6920      	ldr	r0, [r4, #16]
 8010ca2:	f7ff ff7a 	bl	8010b9a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8010ca6:	4440      	add	r0, r8
 8010ca8:	e7cc      	b.n	8010c44 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 8010caa:	bf00      	nop
 8010cac:	200155cc 	.word	0x200155cc

08010cb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 8010cb0:	4b07      	ldr	r3, [pc, #28]	; (8010cd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 8010cb2:	781b      	ldrb	r3, [r3, #0]
 8010cb4:	2b01      	cmp	r3, #1
 8010cb6:	d109      	bne.n	8010ccc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 8010cb8:	f9b1 3000 	ldrsh.w	r3, [r1]
 8010cbc:	f9b0 2000 	ldrsh.w	r2, [r0]
 8010cc0:	8003      	strh	r3, [r0, #0]
 8010cc2:	4b04      	ldr	r3, [pc, #16]	; (8010cd4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 8010cc4:	881b      	ldrh	r3, [r3, #0]
 8010cc6:	3b01      	subs	r3, #1
 8010cc8:	1a9b      	subs	r3, r3, r2
 8010cca:	800b      	strh	r3, [r1, #0]
 8010ccc:	4770      	bx	lr
 8010cce:	bf00      	nop
 8010cd0:	200155b0 	.word	0x200155b0
 8010cd4:	200155ac 	.word	0x200155ac

08010cd8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 8010cd8:	b510      	push	{r4, lr}
 8010cda:	4b07      	ldr	r3, [pc, #28]	; (8010cf8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 8010cdc:	781b      	ldrb	r3, [r3, #0]
 8010cde:	2b01      	cmp	r3, #1
 8010ce0:	d108      	bne.n	8010cf4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 8010ce2:	4b06      	ldr	r3, [pc, #24]	; (8010cfc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 8010ce4:	880c      	ldrh	r4, [r1, #0]
 8010ce6:	881b      	ldrh	r3, [r3, #0]
 8010ce8:	f9b0 2000 	ldrsh.w	r2, [r0]
 8010cec:	3b01      	subs	r3, #1
 8010cee:	1b1b      	subs	r3, r3, r4
 8010cf0:	8003      	strh	r3, [r0, #0]
 8010cf2:	800a      	strh	r2, [r1, #0]
 8010cf4:	bd10      	pop	{r4, pc}
 8010cf6:	bf00      	nop
 8010cf8:	200155b0 	.word	0x200155b0
 8010cfc:	200155ac 	.word	0x200155ac

08010d00 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 8010d00:	b510      	push	{r4, lr}
 8010d02:	4b0a      	ldr	r3, [pc, #40]	; (8010d2c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 8010d04:	781b      	ldrb	r3, [r3, #0]
 8010d06:	2b01      	cmp	r3, #1
 8010d08:	d10e      	bne.n	8010d28 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 8010d0a:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8010d0e:	8843      	ldrh	r3, [r0, #2]
 8010d10:	f9b0 4000 	ldrsh.w	r4, [r0]
 8010d14:	8044      	strh	r4, [r0, #2]
 8010d16:	18ca      	adds	r2, r1, r3
 8010d18:	4b05      	ldr	r3, [pc, #20]	; (8010d30 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 8010d1a:	881b      	ldrh	r3, [r3, #0]
 8010d1c:	1a9b      	subs	r3, r3, r2
 8010d1e:	8003      	strh	r3, [r0, #0]
 8010d20:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8010d24:	80c3      	strh	r3, [r0, #6]
 8010d26:	8081      	strh	r1, [r0, #4]
 8010d28:	bd10      	pop	{r4, pc}
 8010d2a:	bf00      	nop
 8010d2c:	200155b0 	.word	0x200155b0
 8010d30:	200155ac 	.word	0x200155ac

08010d34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 8010d34:	4b08      	ldr	r3, [pc, #32]	; (8010d58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 8010d36:	781b      	ldrb	r3, [r3, #0]
 8010d38:	2b01      	cmp	r3, #1
 8010d3a:	d10c      	bne.n	8010d56 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 8010d3c:	8803      	ldrh	r3, [r0, #0]
 8010d3e:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 8010d42:	8842      	ldrh	r2, [r0, #2]
 8010d44:	8002      	strh	r2, [r0, #0]
 8010d46:	185a      	adds	r2, r3, r1
 8010d48:	4b04      	ldr	r3, [pc, #16]	; (8010d5c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 8010d4a:	881b      	ldrh	r3, [r3, #0]
 8010d4c:	1a9b      	subs	r3, r3, r2
 8010d4e:	8043      	strh	r3, [r0, #2]
 8010d50:	88c3      	ldrh	r3, [r0, #6]
 8010d52:	8083      	strh	r3, [r0, #4]
 8010d54:	80c1      	strh	r1, [r0, #6]
 8010d56:	4770      	bx	lr
 8010d58:	200155b0 	.word	0x200155b0
 8010d5c:	200155ac 	.word	0x200155ac

08010d60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 8010d60:	b510      	push	{r4, lr}
 8010d62:	4b07      	ldr	r3, [pc, #28]	; (8010d80 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 8010d64:	781b      	ldrb	r3, [r3, #0]
 8010d66:	2b01      	cmp	r3, #1
 8010d68:	d108      	bne.n	8010d7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 8010d6a:	f9b1 3000 	ldrsh.w	r3, [r1]
 8010d6e:	f9b0 4000 	ldrsh.w	r4, [r0]
 8010d72:	8003      	strh	r3, [r0, #0]
 8010d74:	8893      	ldrh	r3, [r2, #4]
 8010d76:	3b01      	subs	r3, #1
 8010d78:	1b1b      	subs	r3, r3, r4
 8010d7a:	800b      	strh	r3, [r1, #0]
 8010d7c:	bd10      	pop	{r4, pc}
 8010d7e:	bf00      	nop
 8010d80:	200155b0 	.word	0x200155b0

08010d84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 8010d84:	b510      	push	{r4, lr}
 8010d86:	4b0a      	ldr	r3, [pc, #40]	; (8010db0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 8010d88:	781b      	ldrb	r3, [r3, #0]
 8010d8a:	2b01      	cmp	r3, #1
 8010d8c:	460a      	mov	r2, r1
 8010d8e:	d10d      	bne.n	8010dac <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 8010d90:	8881      	ldrh	r1, [r0, #4]
 8010d92:	8803      	ldrh	r3, [r0, #0]
 8010d94:	440b      	add	r3, r1
 8010d96:	4601      	mov	r1, r0
 8010d98:	3b01      	subs	r3, #1
 8010d9a:	f821 3b02 	strh.w	r3, [r1], #2
 8010d9e:	f7ff ffdf 	bl	8010d60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 8010da2:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8010da6:	88c2      	ldrh	r2, [r0, #6]
 8010da8:	8082      	strh	r2, [r0, #4]
 8010daa:	80c3      	strh	r3, [r0, #6]
 8010dac:	bd10      	pop	{r4, pc}
 8010dae:	bf00      	nop
 8010db0:	200155b0 	.word	0x200155b0

08010db4 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 8010db4:	b570      	push	{r4, r5, r6, lr}
 8010db6:	4c0b      	ldr	r4, [pc, #44]	; (8010de4 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 8010db8:	2300      	movs	r3, #0
 8010dba:	4605      	mov	r5, r0
 8010dbc:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 8010dc0:	6820      	ldr	r0, [r4, #0]
 8010dc2:	460e      	mov	r6, r1
 8010dc4:	b110      	cbz	r0, 8010dcc <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x18>
 8010dc6:	6803      	ldr	r3, [r0, #0]
 8010dc8:	695b      	ldr	r3, [r3, #20]
 8010dca:	4798      	blx	r3
 8010dcc:	6026      	str	r6, [r4, #0]
 8010dce:	6833      	ldr	r3, [r6, #0]
 8010dd0:	4630      	mov	r0, r6
 8010dd2:	68db      	ldr	r3, [r3, #12]
 8010dd4:	4798      	blx	r3
 8010dd6:	682b      	ldr	r3, [r5, #0]
 8010dd8:	4628      	mov	r0, r5
 8010dda:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010ddc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010de0:	4718      	bx	r3
 8010de2:	bf00      	nop
 8010de4:	200155fc 	.word	0x200155fc

08010de8 <_ZN8touchgfx11Application13requestRedrawEv>:
 8010de8:	4b06      	ldr	r3, [pc, #24]	; (8010e04 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 8010dea:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010dee:	4b06      	ldr	r3, [pc, #24]	; (8010e08 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 8010df0:	f8a0 2130 	strh.w	r2, [r0, #304]	; 0x130
 8010df4:	f9b3 3000 	ldrsh.w	r3, [r3]
 8010df8:	f8a0 3132 	strh.w	r3, [r0, #306]	; 0x132
 8010dfc:	2100      	movs	r1, #0
 8010dfe:	f8c0 112c 	str.w	r1, [r0, #300]	; 0x12c
 8010e02:	4770      	bx	lr
 8010e04:	200155ac 	.word	0x200155ac
 8010e08:	200155ae 	.word	0x200155ae

08010e0c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 8010e0c:	4b03      	ldr	r3, [pc, #12]	; (8010e1c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 8010e0e:	6818      	ldr	r0, [r3, #0]
 8010e10:	b110      	cbz	r0, 8010e18 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 8010e12:	6803      	ldr	r3, [r0, #0]
 8010e14:	699b      	ldr	r3, [r3, #24]
 8010e16:	4718      	bx	r3
 8010e18:	4770      	bx	lr
 8010e1a:	bf00      	nop
 8010e1c:	200155fc 	.word	0x200155fc

08010e20 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 8010e20:	4770      	bx	lr
	...

08010e24 <_ZN8touchgfx11Application4drawEv>:
 8010e24:	b507      	push	{r0, r1, r2, lr}
 8010e26:	4b09      	ldr	r3, [pc, #36]	; (8010e4c <_ZN8touchgfx11Application4drawEv+0x28>)
 8010e28:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010e2c:	4b08      	ldr	r3, [pc, #32]	; (8010e50 <_ZN8touchgfx11Application4drawEv+0x2c>)
 8010e2e:	f8ad 2004 	strh.w	r2, [sp, #4]
 8010e32:	f9b3 3000 	ldrsh.w	r3, [r3]
 8010e36:	f8ad 3006 	strh.w	r3, [sp, #6]
 8010e3a:	6803      	ldr	r3, [r0, #0]
 8010e3c:	2100      	movs	r1, #0
 8010e3e:	9100      	str	r1, [sp, #0]
 8010e40:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8010e42:	4669      	mov	r1, sp
 8010e44:	4798      	blx	r3
 8010e46:	b003      	add	sp, #12
 8010e48:	f85d fb04 	ldr.w	pc, [sp], #4
 8010e4c:	200155ac 	.word	0x200155ac
 8010e50:	200155ae 	.word	0x200155ae

08010e54 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 8010e54:	4b03      	ldr	r3, [pc, #12]	; (8010e64 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 8010e56:	6818      	ldr	r0, [r3, #0]
 8010e58:	b110      	cbz	r0, 8010e60 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 8010e5a:	6803      	ldr	r3, [r0, #0]
 8010e5c:	69db      	ldr	r3, [r3, #28]
 8010e5e:	4718      	bx	r3
 8010e60:	4770      	bx	lr
 8010e62:	bf00      	nop
 8010e64:	200155fc 	.word	0x200155fc

08010e68 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 8010e68:	4b03      	ldr	r3, [pc, #12]	; (8010e78 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 8010e6a:	6818      	ldr	r0, [r3, #0]
 8010e6c:	b110      	cbz	r0, 8010e74 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 8010e6e:	6803      	ldr	r3, [r0, #0]
 8010e70:	6a1b      	ldr	r3, [r3, #32]
 8010e72:	4718      	bx	r3
 8010e74:	4770      	bx	lr
 8010e76:	bf00      	nop
 8010e78:	200155fc 	.word	0x200155fc

08010e7c <_ZN8touchgfx11Application16clearCachedAreasEv>:
 8010e7c:	2300      	movs	r3, #0
 8010e7e:	f8a0 30e8 	strh.w	r3, [r0, #232]	; 0xe8
 8010e82:	4770      	bx	lr

08010e84 <_ZN8touchgfx11Application14handleKeyEventEh>:
 8010e84:	4b03      	ldr	r3, [pc, #12]	; (8010e94 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 8010e86:	6818      	ldr	r0, [r3, #0]
 8010e88:	b110      	cbz	r0, 8010e90 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 8010e8a:	6803      	ldr	r3, [r0, #0]
 8010e8c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8010e8e:	4718      	bx	r3
 8010e90:	4770      	bx	lr
 8010e92:	bf00      	nop
 8010e94:	200155fc 	.word	0x200155fc

08010e98 <_ZN8touchgfx11Application15handleTickEventEv>:
 8010e98:	b570      	push	{r4, r5, r6, lr}
 8010e9a:	4d32      	ldr	r5, [pc, #200]	; (8010f64 <_ZN8touchgfx11Application15handleTickEventEv+0xcc>)
 8010e9c:	4604      	mov	r4, r0
 8010e9e:	6828      	ldr	r0, [r5, #0]
 8010ea0:	b140      	cbz	r0, 8010eb4 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8010ea2:	7a03      	ldrb	r3, [r0, #8]
 8010ea4:	b933      	cbnz	r3, 8010eb4 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8010ea6:	f884 3134 	strb.w	r3, [r4, #308]	; 0x134
 8010eaa:	6803      	ldr	r3, [r0, #0]
 8010eac:	689b      	ldr	r3, [r3, #8]
 8010eae:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010eb2:	4718      	bx	r3
 8010eb4:	f894 3134 	ldrb.w	r3, [r4, #308]	; 0x134
 8010eb8:	b97b      	cbnz	r3, 8010eda <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8010eba:	b170      	cbz	r0, 8010eda <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8010ebc:	7a03      	ldrb	r3, [r0, #8]
 8010ebe:	b163      	cbz	r3, 8010eda <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8010ec0:	4b29      	ldr	r3, [pc, #164]	; (8010f68 <_ZN8touchgfx11Application15handleTickEventEv+0xd0>)
 8010ec2:	6818      	ldr	r0, [r3, #0]
 8010ec4:	b110      	cbz	r0, 8010ecc <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 8010ec6:	6803      	ldr	r3, [r0, #0]
 8010ec8:	691b      	ldr	r3, [r3, #16]
 8010eca:	4798      	blx	r3
 8010ecc:	6828      	ldr	r0, [r5, #0]
 8010ece:	6803      	ldr	r3, [r0, #0]
 8010ed0:	68db      	ldr	r3, [r3, #12]
 8010ed2:	4798      	blx	r3
 8010ed4:	2301      	movs	r3, #1
 8010ed6:	f884 3134 	strb.w	r3, [r4, #308]	; 0x134
 8010eda:	2500      	movs	r5, #0
 8010edc:	f8b4 0084 	ldrh.w	r0, [r4, #132]	; 0x84
 8010ee0:	42a8      	cmp	r0, r5
 8010ee2:	dd0c      	ble.n	8010efe <_ZN8touchgfx11Application15handleTickEventEv+0x66>
 8010ee4:	1963      	adds	r3, r4, r5
 8010ee6:	f893 2088 	ldrb.w	r2, [r3, #136]	; 0x88
 8010eea:	b132      	cbz	r2, 8010efa <_ZN8touchgfx11Application15handleTickEventEv+0x62>
 8010eec:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 8010ef0:	4413      	add	r3, r2
 8010ef2:	6858      	ldr	r0, [r3, #4]
 8010ef4:	6803      	ldr	r3, [r0, #0]
 8010ef6:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8010ef8:	4798      	blx	r3
 8010efa:	3501      	adds	r5, #1
 8010efc:	e7ee      	b.n	8010edc <_ZN8touchgfx11Application15handleTickEventEv+0x44>
 8010efe:	2300      	movs	r3, #0
 8010f00:	461a      	mov	r2, r3
 8010f02:	4298      	cmp	r0, r3
 8010f04:	d015      	beq.n	8010f32 <_ZN8touchgfx11Application15handleTickEventEv+0x9a>
 8010f06:	18e1      	adds	r1, r4, r3
 8010f08:	f891 5088 	ldrb.w	r5, [r1, #136]	; 0x88
 8010f0c:	b16d      	cbz	r5, 8010f2a <_ZN8touchgfx11Application15handleTickEventEv+0x92>
 8010f0e:	429a      	cmp	r2, r3
 8010f10:	d00a      	beq.n	8010f28 <_ZN8touchgfx11Application15handleTickEventEv+0x90>
 8010f12:	eb03 0643 	add.w	r6, r3, r3, lsl #1
 8010f16:	4431      	add	r1, r6
 8010f18:	684e      	ldr	r6, [r1, #4]
 8010f1a:	b291      	uxth	r1, r2
 8010f1c:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8010f20:	604e      	str	r6, [r1, #4]
 8010f22:	18a1      	adds	r1, r4, r2
 8010f24:	f881 5088 	strb.w	r5, [r1, #136]	; 0x88
 8010f28:	3201      	adds	r2, #1
 8010f2a:	3301      	adds	r3, #1
 8010f2c:	e7e9      	b.n	8010f02 <_ZN8touchgfx11Application15handleTickEventEv+0x6a>
 8010f2e:	f8a4 3084 	strh.w	r3, [r4, #132]	; 0x84
 8010f32:	f8b4 5084 	ldrh.w	r5, [r4, #132]	; 0x84
 8010f36:	4295      	cmp	r5, r2
 8010f38:	dd0d      	ble.n	8010f56 <_ZN8touchgfx11Application15handleTickEventEv+0xbe>
 8010f3a:	1e6b      	subs	r3, r5, #1
 8010f3c:	b29b      	uxth	r3, r3
 8010f3e:	eb04 0183 	add.w	r1, r4, r3, lsl #2
 8010f42:	4618      	mov	r0, r3
 8010f44:	3104      	adds	r1, #4
 8010f46:	4285      	cmp	r5, r0
 8010f48:	ddf1      	ble.n	8010f2e <_ZN8touchgfx11Application15handleTickEventEv+0x96>
 8010f4a:	f851 6f04 	ldr.w	r6, [r1, #4]!
 8010f4e:	f841 6c04 	str.w	r6, [r1, #-4]
 8010f52:	3001      	adds	r0, #1
 8010f54:	e7f7      	b.n	8010f46 <_ZN8touchgfx11Application15handleTickEventEv+0xae>
 8010f56:	4b04      	ldr	r3, [pc, #16]	; (8010f68 <_ZN8touchgfx11Application15handleTickEventEv+0xd0>)
 8010f58:	6818      	ldr	r0, [r3, #0]
 8010f5a:	b110      	cbz	r0, 8010f62 <_ZN8touchgfx11Application15handleTickEventEv+0xca>
 8010f5c:	6803      	ldr	r3, [r0, #0]
 8010f5e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010f60:	e7a5      	b.n	8010eae <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 8010f62:	bd70      	pop	{r4, r5, r6, pc}
 8010f64:	20015600 	.word	0x20015600
 8010f68:	200155fc 	.word	0x200155fc

08010f6c <_ZN8touchgfx11ApplicationD1Ev>:
 8010f6c:	4770      	bx	lr

08010f6e <_ZN8touchgfx11ApplicationD0Ev>:
 8010f6e:	b510      	push	{r4, lr}
 8010f70:	f44f 719c 	mov.w	r1, #312	; 0x138
 8010f74:	4604      	mov	r4, r0
 8010f76:	f00f fbb7 	bl	80206e8 <_ZdlPvj>
 8010f7a:	4620      	mov	r0, r4
 8010f7c:	bd10      	pop	{r4, pc}

08010f7e <_ZNK8touchgfx4Rect9intersectERKS0_>:
 8010f7e:	b510      	push	{r4, lr}
 8010f80:	f9b1 4000 	ldrsh.w	r4, [r1]
 8010f84:	888a      	ldrh	r2, [r1, #4]
 8010f86:	f9b0 3000 	ldrsh.w	r3, [r0]
 8010f8a:	4422      	add	r2, r4
 8010f8c:	b212      	sxth	r2, r2
 8010f8e:	4293      	cmp	r3, r2
 8010f90:	da15      	bge.n	8010fbe <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8010f92:	8882      	ldrh	r2, [r0, #4]
 8010f94:	4413      	add	r3, r2
 8010f96:	b21b      	sxth	r3, r3
 8010f98:	429c      	cmp	r4, r3
 8010f9a:	da10      	bge.n	8010fbe <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8010f9c:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8010fa0:	88c9      	ldrh	r1, [r1, #6]
 8010fa2:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8010fa6:	4419      	add	r1, r3
 8010fa8:	b209      	sxth	r1, r1
 8010faa:	428a      	cmp	r2, r1
 8010fac:	da07      	bge.n	8010fbe <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8010fae:	88c0      	ldrh	r0, [r0, #6]
 8010fb0:	4410      	add	r0, r2
 8010fb2:	b200      	sxth	r0, r0
 8010fb4:	4283      	cmp	r3, r0
 8010fb6:	bfac      	ite	ge
 8010fb8:	2000      	movge	r0, #0
 8010fba:	2001      	movlt	r0, #1
 8010fbc:	bd10      	pop	{r4, pc}
 8010fbe:	2000      	movs	r0, #0
 8010fc0:	e7fc      	b.n	8010fbc <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

08010fc2 <_ZN8touchgfx4Rect10restrictToEss>:
 8010fc2:	f9b0 3000 	ldrsh.w	r3, [r0]
 8010fc6:	2b00      	cmp	r3, #0
 8010fc8:	b510      	push	{r4, lr}
 8010fca:	da04      	bge.n	8010fd6 <_ZN8touchgfx4Rect10restrictToEss+0x14>
 8010fcc:	8884      	ldrh	r4, [r0, #4]
 8010fce:	4423      	add	r3, r4
 8010fd0:	8083      	strh	r3, [r0, #4]
 8010fd2:	2300      	movs	r3, #0
 8010fd4:	8003      	strh	r3, [r0, #0]
 8010fd6:	f9b0 4000 	ldrsh.w	r4, [r0]
 8010fda:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8010fde:	1b09      	subs	r1, r1, r4
 8010fe0:	428b      	cmp	r3, r1
 8010fe2:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8010fe6:	bfc8      	it	gt
 8010fe8:	8081      	strhgt	r1, [r0, #4]
 8010fea:	2b00      	cmp	r3, #0
 8010fec:	da04      	bge.n	8010ff8 <_ZN8touchgfx4Rect10restrictToEss+0x36>
 8010fee:	88c1      	ldrh	r1, [r0, #6]
 8010ff0:	440b      	add	r3, r1
 8010ff2:	80c3      	strh	r3, [r0, #6]
 8010ff4:	2300      	movs	r3, #0
 8010ff6:	8043      	strh	r3, [r0, #2]
 8010ff8:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8010ffc:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8011000:	1a52      	subs	r2, r2, r1
 8011002:	4293      	cmp	r3, r2
 8011004:	bfc8      	it	gt
 8011006:	80c2      	strhgt	r2, [r0, #6]
 8011008:	bd10      	pop	{r4, pc}
	...

0801100c <_ZN8touchgfx11Application4drawERNS_4RectE>:
 801100c:	b510      	push	{r4, lr}
 801100e:	4b10      	ldr	r3, [pc, #64]	; (8011050 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 8011010:	f9b3 2000 	ldrsh.w	r2, [r3]
 8011014:	4b0f      	ldr	r3, [pc, #60]	; (8011054 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 8011016:	460c      	mov	r4, r1
 8011018:	4620      	mov	r0, r4
 801101a:	f9b3 1000 	ldrsh.w	r1, [r3]
 801101e:	f7ff ffd0 	bl	8010fc2 <_ZN8touchgfx4Rect10restrictToEss>
 8011022:	4b0d      	ldr	r3, [pc, #52]	; (8011058 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 8011024:	6818      	ldr	r0, [r3, #0]
 8011026:	b190      	cbz	r0, 801104e <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 8011028:	6803      	ldr	r3, [r0, #0]
 801102a:	4621      	mov	r1, r4
 801102c:	689b      	ldr	r3, [r3, #8]
 801102e:	4798      	blx	r3
 8011030:	4b0a      	ldr	r3, [pc, #40]	; (801105c <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 8011032:	6818      	ldr	r0, [r3, #0]
 8011034:	b118      	cbz	r0, 801103e <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 8011036:	6803      	ldr	r3, [r0, #0]
 8011038:	4621      	mov	r1, r4
 801103a:	689b      	ldr	r3, [r3, #8]
 801103c:	4798      	blx	r3
 801103e:	4b08      	ldr	r3, [pc, #32]	; (8011060 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 8011040:	6818      	ldr	r0, [r3, #0]
 8011042:	6803      	ldr	r3, [r0, #0]
 8011044:	4621      	mov	r1, r4
 8011046:	69db      	ldr	r3, [r3, #28]
 8011048:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801104c:	4718      	bx	r3
 801104e:	bd10      	pop	{r4, pc}
 8011050:	200155ae 	.word	0x200155ae
 8011054:	200155ac 	.word	0x200155ac
 8011058:	200155fc 	.word	0x200155fc
 801105c:	200155f8 	.word	0x200155f8
 8011060:	200155b8 	.word	0x200155b8

08011064 <_ZNK8touchgfx4Rect8includesERKS0_>:
 8011064:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011066:	4606      	mov	r6, r0
 8011068:	4608      	mov	r0, r1
 801106a:	460f      	mov	r7, r1
 801106c:	f7f9 fed1 	bl	800ae12 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011070:	b9e8      	cbnz	r0, 80110ae <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8011072:	f9b7 5000 	ldrsh.w	r5, [r7]
 8011076:	f9b6 4000 	ldrsh.w	r4, [r6]
 801107a:	42a5      	cmp	r5, r4
 801107c:	db17      	blt.n	80110ae <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801107e:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8011082:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 8011086:	429a      	cmp	r2, r3
 8011088:	db11      	blt.n	80110ae <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801108a:	88b9      	ldrh	r1, [r7, #4]
 801108c:	440d      	add	r5, r1
 801108e:	88b1      	ldrh	r1, [r6, #4]
 8011090:	440c      	add	r4, r1
 8011092:	b22d      	sxth	r5, r5
 8011094:	b224      	sxth	r4, r4
 8011096:	42a5      	cmp	r5, r4
 8011098:	dc09      	bgt.n	80110ae <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801109a:	88f8      	ldrh	r0, [r7, #6]
 801109c:	4410      	add	r0, r2
 801109e:	88f2      	ldrh	r2, [r6, #6]
 80110a0:	4413      	add	r3, r2
 80110a2:	b200      	sxth	r0, r0
 80110a4:	b21b      	sxth	r3, r3
 80110a6:	4298      	cmp	r0, r3
 80110a8:	bfcc      	ite	gt
 80110aa:	2000      	movgt	r0, #0
 80110ac:	2001      	movle	r0, #1
 80110ae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080110b0 <_ZN8touchgfx11Application11getInstanceEv>:
 80110b0:	4b01      	ldr	r3, [pc, #4]	; (80110b8 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 80110b2:	6818      	ldr	r0, [r3, #0]
 80110b4:	4770      	bx	lr
 80110b6:	bf00      	nop
 80110b8:	2001560c 	.word	0x2001560c

080110bc <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
 80110bc:	2300      	movs	r3, #0
 80110be:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 80110c2:	f100 0288 	add.w	r2, r0, #136	; 0x88
 80110c6:	30a8      	adds	r0, #168	; 0xa8
 80110c8:	f802 3b01 	strb.w	r3, [r2], #1
 80110cc:	4282      	cmp	r2, r0
 80110ce:	d1fb      	bne.n	80110c8 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv+0xc>
 80110d0:	4770      	bx	lr

080110d2 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 80110d2:	4603      	mov	r3, r0
 80110d4:	f100 0140 	add.w	r1, r0, #64	; 0x40
 80110d8:	2200      	movs	r2, #0
 80110da:	801a      	strh	r2, [r3, #0]
 80110dc:	805a      	strh	r2, [r3, #2]
 80110de:	809a      	strh	r2, [r3, #4]
 80110e0:	80da      	strh	r2, [r3, #6]
 80110e2:	3308      	adds	r3, #8
 80110e4:	428b      	cmp	r3, r1
 80110e6:	d1f8      	bne.n	80110da <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 80110e8:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 80110ec:	4770      	bx	lr
	...

080110f0 <_ZN8touchgfx11ApplicationC1Ev>:
 80110f0:	b570      	push	{r4, r5, r6, lr}
 80110f2:	4b19      	ldr	r3, [pc, #100]	; (8011158 <_ZN8touchgfx11ApplicationC1Ev+0x68>)
 80110f4:	6003      	str	r3, [r0, #0]
 80110f6:	2500      	movs	r5, #0
 80110f8:	4604      	mov	r4, r0
 80110fa:	f8a0 5084 	strh.w	r5, [r0, #132]	; 0x84
 80110fe:	30a8      	adds	r0, #168	; 0xa8
 8011100:	f7ff ffe7 	bl	80110d2 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8011104:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 8011108:	f7ff ffe3 	bl	80110d2 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 801110c:	f8a4 512c 	strh.w	r5, [r4, #300]	; 0x12c
 8011110:	f8a4 512e 	strh.w	r5, [r4, #302]	; 0x12e
 8011114:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 8011118:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 801111c:	f884 5134 	strb.w	r5, [r4, #308]	; 0x134
 8011120:	490e      	ldr	r1, [pc, #56]	; (801115c <_ZN8touchgfx11ApplicationC1Ev+0x6c>)
 8011122:	480f      	ldr	r0, [pc, #60]	; (8011160 <_ZN8touchgfx11ApplicationC1Ev+0x70>)
 8011124:	4e0f      	ldr	r6, [pc, #60]	; (8011164 <_ZN8touchgfx11ApplicationC1Ev+0x74>)
 8011126:	f00e fec3 	bl	801feb0 <CRC_Lock>
 801112a:	4b0f      	ldr	r3, [pc, #60]	; (8011168 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 801112c:	b158      	cbz	r0, 8011146 <_ZN8touchgfx11ApplicationC1Ev+0x56>
 801112e:	801d      	strh	r5, [r3, #0]
 8011130:	4a0e      	ldr	r2, [pc, #56]	; (801116c <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 8011132:	2300      	movs	r3, #0
 8011134:	6013      	str	r3, [r2, #0]
 8011136:	4a0e      	ldr	r2, [pc, #56]	; (8011170 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 8011138:	6033      	str	r3, [r6, #0]
 801113a:	4620      	mov	r0, r4
 801113c:	6013      	str	r3, [r2, #0]
 801113e:	f7ff ffbd 	bl	80110bc <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
 8011142:	4620      	mov	r0, r4
 8011144:	bd70      	pop	{r4, r5, r6, pc}
 8011146:	f44f 6280 	mov.w	r2, #1024	; 0x400
 801114a:	2002      	movs	r0, #2
 801114c:	801a      	strh	r2, [r3, #0]
 801114e:	6030      	str	r0, [r6, #0]
 8011150:	f001 fae8 	bl	8012724 <_ZN8touchgfx6Screen4drawEv>
 8011154:	e7ec      	b.n	8011130 <_ZN8touchgfx11ApplicationC1Ev+0x40>
 8011156:	bf00      	nop
 8011158:	080242a0 	.word	0x080242a0
 801115c:	b5e8b5cd 	.word	0xb5e8b5cd
 8011160:	f407a5c2 	.word	0xf407a5c2
 8011164:	200155fc 	.word	0x200155fc
 8011168:	2000008c 	.word	0x2000008c
 801116c:	2001560c 	.word	0x2001560c
 8011170:	20015600 	.word	0x20015600

08011174 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 8011174:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 8011178:	3b01      	subs	r3, #1
 801117a:	b29b      	uxth	r3, r3
 801117c:	428b      	cmp	r3, r1
 801117e:	b510      	push	{r4, lr}
 8011180:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 8011184:	d908      	bls.n	8011198 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 8011186:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 801118a:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 801118e:	681a      	ldr	r2, [r3, #0]
 8011190:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 8011194:	685a      	ldr	r2, [r3, #4]
 8011196:	6062      	str	r2, [r4, #4]
 8011198:	bd10      	pop	{r4, pc}
	...

0801119c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 801119c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80111a0:	4b94      	ldr	r3, [pc, #592]	; (80113f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>)
 80111a2:	b08f      	sub	sp, #60	; 0x3c
 80111a4:	ac0a      	add	r4, sp, #40	; 0x28
 80111a6:	e884 0006 	stmia.w	r4, {r1, r2}
 80111aa:	f9b3 2000 	ldrsh.w	r2, [r3]
 80111ae:	4b92      	ldr	r3, [pc, #584]	; (80113f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x25c>)
 80111b0:	4683      	mov	fp, r0
 80111b2:	f9b3 1000 	ldrsh.w	r1, [r3]
 80111b6:	4620      	mov	r0, r4
 80111b8:	f7ff ff03 	bl	8010fc2 <_ZN8touchgfx4Rect10restrictToEss>
 80111bc:	4620      	mov	r0, r4
 80111be:	f7f9 fe28 	bl	800ae12 <_ZNK8touchgfx4Rect7isEmptyEv>
 80111c2:	2800      	cmp	r0, #0
 80111c4:	d16a      	bne.n	801129c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80111c6:	9403      	str	r4, [sp, #12]
 80111c8:	f8bb 50e8 	ldrh.w	r5, [fp, #232]	; 0xe8
 80111cc:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 80111d0:	eb0b 06c5 	add.w	r6, fp, r5, lsl #3
 80111d4:	2400      	movs	r4, #0
 80111d6:	9301      	str	r3, [sp, #4]
 80111d8:	36a0      	adds	r6, #160	; 0xa0
 80111da:	42a5      	cmp	r5, r4
 80111dc:	d00d      	beq.n	80111fa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e>
 80111de:	eba6 01c4 	sub.w	r1, r6, r4, lsl #3
 80111e2:	9803      	ldr	r0, [sp, #12]
 80111e4:	f7ff ff3e 	bl	8011064 <_ZNK8touchgfx4Rect8includesERKS0_>
 80111e8:	b128      	cbz	r0, 80111f6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a>
 80111ea:	1e69      	subs	r1, r5, #1
 80111ec:	1b09      	subs	r1, r1, r4
 80111ee:	b289      	uxth	r1, r1
 80111f0:	9801      	ldr	r0, [sp, #4]
 80111f2:	f7ff ffbf 	bl	8011174 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80111f6:	3401      	adds	r4, #1
 80111f8:	e7ef      	b.n	80111da <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e>
 80111fa:	f8bb 70e8 	ldrh.w	r7, [fp, #232]	; 0xe8
 80111fe:	9704      	str	r7, [sp, #16]
 8011200:	1e7b      	subs	r3, r7, #1
 8011202:	9302      	str	r3, [sp, #8]
 8011204:	eb0b 0ac7 	add.w	sl, fp, r7, lsl #3
 8011208:	2400      	movs	r4, #0
 801120a:	4655      	mov	r5, sl
 801120c:	9705      	str	r7, [sp, #20]
 801120e:	4626      	mov	r6, r4
 8011210:	9b05      	ldr	r3, [sp, #20]
 8011212:	2b00      	cmp	r3, #0
 8011214:	d078      	beq.n	8011308 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x16c>
 8011216:	9903      	ldr	r1, [sp, #12]
 8011218:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 801121c:	f7ff feaf 	bl	8010f7e <_ZNK8touchgfx4Rect9intersectERKS0_>
 8011220:	b360      	cbz	r0, 801127c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8011222:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 8011226:	f9b5 c0a0 	ldrsh.w	ip, [r5, #160]	; 0xa0
 801122a:	f9bd 902a 	ldrsh.w	r9, [sp, #42]	; 0x2a
 801122e:	f9b5 80a2 	ldrsh.w	r8, [r5, #162]	; 0xa2
 8011232:	45e6      	cmp	lr, ip
 8011234:	db35      	blt.n	80112a2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8011236:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 801123a:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 801123e:	4472      	add	r2, lr
 8011240:	4463      	add	r3, ip
 8011242:	b212      	sxth	r2, r2
 8011244:	b21b      	sxth	r3, r3
 8011246:	429a      	cmp	r2, r3
 8011248:	dc2b      	bgt.n	80112a2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 801124a:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 801124e:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8011252:	fa1f f288 	uxth.w	r2, r8
 8011256:	4413      	add	r3, r2
 8011258:	b29b      	uxth	r3, r3
 801125a:	45c1      	cmp	r9, r8
 801125c:	fa0f fe83 	sxth.w	lr, r3
 8011260:	fa1f fc89 	uxth.w	ip, r9
 8011264:	db0f      	blt.n	8011286 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 8011266:	eba3 030c 	sub.w	r3, r3, ip
 801126a:	1ac9      	subs	r1, r1, r3
 801126c:	b209      	sxth	r1, r1
 801126e:	2900      	cmp	r1, #0
 8011270:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8011274:	dd12      	ble.n	801129c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8011276:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 801127a:	4604      	mov	r4, r0
 801127c:	9b05      	ldr	r3, [sp, #20]
 801127e:	3b01      	subs	r3, #1
 8011280:	9305      	str	r3, [sp, #20]
 8011282:	3d08      	subs	r5, #8
 8011284:	e7c4      	b.n	8011210 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x74>
 8011286:	4461      	add	r1, ip
 8011288:	b209      	sxth	r1, r1
 801128a:	4571      	cmp	r1, lr
 801128c:	dc3a      	bgt.n	8011304 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 801128e:	eba2 020c 	sub.w	r2, r2, ip
 8011292:	b212      	sxth	r2, r2
 8011294:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 8011298:	2a00      	cmp	r2, #0
 801129a:	dcee      	bgt.n	801127a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 801129c:	b00f      	add	sp, #60	; 0x3c
 801129e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80112a2:	45c1      	cmp	r9, r8
 80112a4:	db2e      	blt.n	8011304 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 80112a6:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 80112aa:	4499      	add	r9, r3
 80112ac:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 80112b0:	4498      	add	r8, r3
 80112b2:	fa0f f989 	sxth.w	r9, r9
 80112b6:	fa0f f888 	sxth.w	r8, r8
 80112ba:	45c1      	cmp	r9, r8
 80112bc:	dc22      	bgt.n	8011304 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 80112be:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 80112c2:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 80112c6:	fa1f f28c 	uxth.w	r2, ip
 80112ca:	4413      	add	r3, r2
 80112cc:	b29b      	uxth	r3, r3
 80112ce:	45e6      	cmp	lr, ip
 80112d0:	fa1f f88e 	uxth.w	r8, lr
 80112d4:	fa0f f983 	sxth.w	r9, r3
 80112d8:	db0a      	blt.n	80112f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x154>
 80112da:	eba3 0308 	sub.w	r3, r3, r8
 80112de:	1ac9      	subs	r1, r1, r3
 80112e0:	b209      	sxth	r1, r1
 80112e2:	2900      	cmp	r1, #0
 80112e4:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 80112e8:	ddd8      	ble.n	801129c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80112ea:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 80112ee:	e7c4      	b.n	801127a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 80112f0:	4441      	add	r1, r8
 80112f2:	b209      	sxth	r1, r1
 80112f4:	4549      	cmp	r1, r9
 80112f6:	dc05      	bgt.n	8011304 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 80112f8:	eba2 0208 	sub.w	r2, r2, r8
 80112fc:	b212      	sxth	r2, r2
 80112fe:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 8011302:	e7c9      	b.n	8011298 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 8011304:	4606      	mov	r6, r0
 8011306:	e7b9      	b.n	801127c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8011308:	2c00      	cmp	r4, #0
 801130a:	f47f af7d 	bne.w	8011208 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c>
 801130e:	2e00      	cmp	r6, #0
 8011310:	f000 81e1 	beq.w	80116d6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 8011314:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 8011318:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 801131c:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8011320:	b2b9      	uxth	r1, r7
 8011322:	9105      	str	r1, [sp, #20]
 8011324:	9805      	ldr	r0, [sp, #20]
 8011326:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 801132a:	4401      	add	r1, r0
 801132c:	b2b3      	uxth	r3, r6
 801132e:	b289      	uxth	r1, r1
 8011330:	441a      	add	r2, r3
 8011332:	9106      	str	r1, [sp, #24]
 8011334:	b292      	uxth	r2, r2
 8011336:	f9bd 9018 	ldrsh.w	r9, [sp, #24]
 801133a:	fa0f f882 	sxth.w	r8, r2
 801133e:	4655      	mov	r5, sl
 8011340:	e9cd 2307 	strd	r2, r3, [sp, #28]
 8011344:	9b04      	ldr	r3, [sp, #16]
 8011346:	2b00      	cmp	r3, #0
 8011348:	d058      	beq.n	80113fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x260>
 801134a:	9903      	ldr	r1, [sp, #12]
 801134c:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 8011350:	f7ff fe15 	bl	8010f7e <_ZNK8touchgfx4Rect9intersectERKS0_>
 8011354:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 8011358:	b1d8      	cbz	r0, 8011392 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 801135a:	f9b5 e0a0 	ldrsh.w	lr, [r5, #160]	; 0xa0
 801135e:	f9b5 10a2 	ldrsh.w	r1, [r5, #162]	; 0xa2
 8011362:	4576      	cmp	r6, lr
 8011364:	dc26      	bgt.n	80113b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x218>
 8011366:	f8b5 c0a4 	ldrh.w	ip, [r5, #164]	; 0xa4
 801136a:	44f4      	add	ip, lr
 801136c:	fa0f fc8c 	sxth.w	ip, ip
 8011370:	45e0      	cmp	r8, ip
 8011372:	db1f      	blt.n	80113b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x218>
 8011374:	428f      	cmp	r7, r1
 8011376:	fa1f fc81 	uxth.w	ip, r1
 801137a:	f8b5 10a6 	ldrh.w	r1, [r5, #166]	; 0xa6
 801137e:	dc0f      	bgt.n	80113a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x204>
 8011380:	9806      	ldr	r0, [sp, #24]
 8011382:	f8a5 90a2 	strh.w	r9, [r5, #162]	; 0xa2
 8011386:	eba0 0c0c 	sub.w	ip, r0, ip
 801138a:	eba1 010c 	sub.w	r1, r1, ip
 801138e:	f8a5 10a6 	strh.w	r1, [r5, #166]	; 0xa6
 8011392:	4620      	mov	r0, r4
 8011394:	9904      	ldr	r1, [sp, #16]
 8011396:	3901      	subs	r1, #1
 8011398:	9104      	str	r1, [sp, #16]
 801139a:	3d08      	subs	r5, #8
 801139c:	4604      	mov	r4, r0
 801139e:	e7cf      	b.n	8011340 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a4>
 80113a0:	4461      	add	r1, ip
 80113a2:	b209      	sxth	r1, r1
 80113a4:	4549      	cmp	r1, r9
 80113a6:	dcf5      	bgt.n	8011394 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 80113a8:	9905      	ldr	r1, [sp, #20]
 80113aa:	eba1 0c0c 	sub.w	ip, r1, ip
 80113ae:	f8a5 c0a6 	strh.w	ip, [r5, #166]	; 0xa6
 80113b2:	e7ee      	b.n	8011392 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 80113b4:	428f      	cmp	r7, r1
 80113b6:	dced      	bgt.n	8011394 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 80113b8:	f8b5 c0a6 	ldrh.w	ip, [r5, #166]	; 0xa6
 80113bc:	4461      	add	r1, ip
 80113be:	b209      	sxth	r1, r1
 80113c0:	4589      	cmp	r9, r1
 80113c2:	dbe7      	blt.n	8011394 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 80113c4:	4576      	cmp	r6, lr
 80113c6:	fa1f fc8e 	uxth.w	ip, lr
 80113ca:	f8b5 10a4 	ldrh.w	r1, [r5, #164]	; 0xa4
 80113ce:	dc08      	bgt.n	80113e2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x246>
 80113d0:	eba2 0c0c 	sub.w	ip, r2, ip
 80113d4:	eba1 010c 	sub.w	r1, r1, ip
 80113d8:	f8a5 80a0 	strh.w	r8, [r5, #160]	; 0xa0
 80113dc:	f8a5 10a4 	strh.w	r1, [r5, #164]	; 0xa4
 80113e0:	e7d7      	b.n	8011392 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 80113e2:	4461      	add	r1, ip
 80113e4:	b209      	sxth	r1, r1
 80113e6:	4588      	cmp	r8, r1
 80113e8:	dbd4      	blt.n	8011394 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 80113ea:	eba3 0c0c 	sub.w	ip, r3, ip
 80113ee:	f8a5 c0a4 	strh.w	ip, [r5, #164]	; 0xa4
 80113f2:	e7ce      	b.n	8011392 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 80113f4:	200155ae 	.word	0x200155ae
 80113f8:	200155ac 	.word	0x200155ac
 80113fc:	2c00      	cmp	r4, #0
 80113fe:	f000 816a 	beq.w	80116d6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 8011402:	9b02      	ldr	r3, [sp, #8]
 8011404:	3301      	adds	r3, #1
 8011406:	f000 8166 	beq.w	80116d6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 801140a:	f10a 04a0 	add.w	r4, sl, #160	; 0xa0
 801140e:	4621      	mov	r1, r4
 8011410:	9803      	ldr	r0, [sp, #12]
 8011412:	f7ff fe27 	bl	8011064 <_ZNK8touchgfx4Rect8includesERKS0_>
 8011416:	b120      	cbz	r0, 8011422 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x286>
 8011418:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801141c:	9801      	ldr	r0, [sp, #4]
 801141e:	f7ff fea9 	bl	8011174 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8011422:	9903      	ldr	r1, [sp, #12]
 8011424:	4620      	mov	r0, r4
 8011426:	f7ff fdaa 	bl	8010f7e <_ZNK8touchgfx4Rect9intersectERKS0_>
 801142a:	2800      	cmp	r0, #0
 801142c:	f000 809b 	beq.w	8011566 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ca>
 8011430:	f9ba 00a0 	ldrsh.w	r0, [sl, #160]	; 0xa0
 8011434:	f9ba 30a4 	ldrsh.w	r3, [sl, #164]	; 0xa4
 8011438:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 801143c:	9309      	str	r3, [sp, #36]	; 0x24
 801143e:	b281      	uxth	r1, r0
 8011440:	eb01 0c03 	add.w	ip, r1, r3
 8011444:	fa1f f98c 	uxth.w	r9, ip
 8011448:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 801144c:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 8011450:	f9ba 20a2 	ldrsh.w	r2, [sl, #162]	; 0xa2
 8011454:	b2ab      	uxth	r3, r5
 8011456:	eb03 040c 	add.w	r4, r3, ip
 801145a:	b2a4      	uxth	r4, r4
 801145c:	9405      	str	r4, [sp, #20]
 801145e:	f9bd 4014 	ldrsh.w	r4, [sp, #20]
 8011462:	9404      	str	r4, [sp, #16]
 8011464:	4285      	cmp	r5, r0
 8011466:	f8bb 40e8 	ldrh.w	r4, [fp, #232]	; 0xe8
 801146a:	f340 809a 	ble.w	80115a2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x406>
 801146e:	1a5b      	subs	r3, r3, r1
 8011470:	b29b      	uxth	r3, r3
 8011472:	4596      	cmp	lr, r2
 8011474:	fa0f f589 	sxth.w	r5, r9
 8011478:	b21e      	sxth	r6, r3
 801147a:	dd2e      	ble.n	80114da <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x33e>
 801147c:	9f02      	ldr	r7, [sp, #8]
 801147e:	f8bd 002e 	ldrh.w	r0, [sp, #46]	; 0x2e
 8011482:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 8011486:	9f04      	ldr	r7, [sp, #16]
 8011488:	1b7f      	subs	r7, r7, r5
 801148a:	f8b8 50ae 	ldrh.w	r5, [r8, #174]	; 0xae
 801148e:	fa1f fe8e 	uxth.w	lr, lr
 8011492:	b292      	uxth	r2, r2
 8011494:	ebae 0102 	sub.w	r1, lr, r2
 8011498:	4486      	add	lr, r0
 801149a:	442a      	add	r2, r5
 801149c:	b289      	uxth	r1, r1
 801149e:	fa0f fe8e 	sxth.w	lr, lr
 80114a2:	b212      	sxth	r2, r2
 80114a4:	b20c      	sxth	r4, r1
 80114a6:	ebae 0202 	sub.w	r2, lr, r2
 80114aa:	4367      	muls	r7, r4
 80114ac:	4372      	muls	r2, r6
 80114ae:	4297      	cmp	r7, r2
 80114b0:	db09      	blt.n	80114c6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x32a>
 80114b2:	f8b8 20a8 	ldrh.w	r2, [r8, #168]	; 0xa8
 80114b6:	f8a8 40ae 	strh.w	r4, [r8, #174]	; 0xae
 80114ba:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80114be:	449c      	add	ip, r3
 80114c0:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 80114c4:	e680      	b.n	80111c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80114c6:	4401      	add	r1, r0
 80114c8:	f8b8 30aa 	ldrh.w	r3, [r8, #170]	; 0xaa
 80114cc:	f8a8 60ac 	strh.w	r6, [r8, #172]	; 0xac
 80114d0:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80114d4:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 80114d8:	e676      	b.n	80111c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80114da:	9f04      	ldr	r7, [sp, #16]
 80114dc:	42bd      	cmp	r5, r7
 80114de:	da27      	bge.n	8011530 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x394>
 80114e0:	9902      	ldr	r1, [sp, #8]
 80114e2:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 80114e6:	eb0b 00c1 	add.w	r0, fp, r1, lsl #3
 80114ea:	eb04 010e 	add.w	r1, r4, lr
 80114ee:	fa1f f881 	uxth.w	r8, r1
 80114f2:	f8b0 10ae 	ldrh.w	r1, [r0, #174]	; 0xae
 80114f6:	4411      	add	r1, r2
 80114f8:	eba1 0108 	sub.w	r1, r1, r8
 80114fc:	b289      	uxth	r1, r1
 80114fe:	fa0f f988 	sxth.w	r9, r8
 8011502:	eba2 020e 	sub.w	r2, r2, lr
 8011506:	fa0f f881 	sxth.w	r8, r1
 801150a:	1b7f      	subs	r7, r7, r5
 801150c:	4372      	muls	r2, r6
 801150e:	fb08 f707 	mul.w	r7, r8, r7
 8011512:	42ba      	cmp	r2, r7
 8011514:	dc06      	bgt.n	8011524 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 8011516:	f8a0 90aa 	strh.w	r9, [r0, #170]	; 0xaa
 801151a:	f8a0 80ae 	strh.w	r8, [r0, #174]	; 0xae
 801151e:	f8b0 20a8 	ldrh.w	r2, [r0, #168]	; 0xa8
 8011522:	e7ca      	b.n	80114ba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 8011524:	f8a0 60ac 	strh.w	r6, [r0, #172]	; 0xac
 8011528:	4421      	add	r1, r4
 801152a:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 801152e:	e64b      	b.n	80111c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8011530:	9d05      	ldr	r5, [sp, #20]
 8011532:	eba9 0505 	sub.w	r5, r9, r5
 8011536:	b2ad      	uxth	r5, r5
 8011538:	2c06      	cmp	r4, #6
 801153a:	fa0f fe85 	sxth.w	lr, r5
 801153e:	d818      	bhi.n	8011572 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3d6>
 8011540:	9b04      	ldr	r3, [sp, #16]
 8011542:	f8aa 30a0 	strh.w	r3, [sl, #160]	; 0xa0
 8011546:	1c63      	adds	r3, r4, #1
 8011548:	f9ba 10a6 	ldrsh.w	r1, [sl, #166]	; 0xa6
 801154c:	f8aa e0a4 	strh.w	lr, [sl, #164]	; 0xa4
 8011550:	f8ab 30e8 	strh.w	r3, [fp, #232]	; 0xe8
 8011554:	9b01      	ldr	r3, [sp, #4]
 8011556:	9d01      	ldr	r5, [sp, #4]
 8011558:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 801155c:	f825 0034 	strh.w	r0, [r5, r4, lsl #3]
 8011560:	805a      	strh	r2, [r3, #2]
 8011562:	809e      	strh	r6, [r3, #4]
 8011564:	80d9      	strh	r1, [r3, #6]
 8011566:	9b02      	ldr	r3, [sp, #8]
 8011568:	3b01      	subs	r3, #1
 801156a:	9302      	str	r3, [sp, #8]
 801156c:	f1aa 0a08 	sub.w	sl, sl, #8
 8011570:	e747      	b.n	8011402 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x266>
 8011572:	9a02      	ldr	r2, [sp, #8]
 8011574:	45b6      	cmp	lr, r6
 8011576:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 801157a:	db0d      	blt.n	8011598 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3fc>
 801157c:	449c      	add	ip, r3
 801157e:	fa1f fc8c 	uxth.w	ip, ip
 8011582:	445a      	add	r2, fp
 8011584:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8011588:	448c      	add	ip, r1
 801158a:	f8ad 0028 	strh.w	r0, [sp, #40]	; 0x28
 801158e:	f8a2 c0a8 	strh.w	ip, [r2, #168]	; 0xa8
 8011592:	f8a2 e0ac 	strh.w	lr, [r2, #172]	; 0xac
 8011596:	e617      	b.n	80111c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8011598:	445a      	add	r2, fp
 801159a:	44ac      	add	ip, r5
 801159c:	f8a2 60ac 	strh.w	r6, [r2, #172]	; 0xac
 80115a0:	e78e      	b.n	80114c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x324>
 80115a2:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 80115a6:	fa1f f18e 	uxth.w	r1, lr
 80115aa:	eb01 0806 	add.w	r8, r1, r6
 80115ae:	b293      	uxth	r3, r2
 80115b0:	fa1f f888 	uxth.w	r8, r8
 80115b4:	9306      	str	r3, [sp, #24]
 80115b6:	fa0f f388 	sxth.w	r3, r8
 80115ba:	9307      	str	r3, [sp, #28]
 80115bc:	9f06      	ldr	r7, [sp, #24]
 80115be:	f8ba 30a6 	ldrh.w	r3, [sl, #166]	; 0xa6
 80115c2:	443b      	add	r3, r7
 80115c4:	b29b      	uxth	r3, r3
 80115c6:	4596      	cmp	lr, r2
 80115c8:	9308      	str	r3, [sp, #32]
 80115ca:	da25      	bge.n	8011618 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x47c>
 80115cc:	9905      	ldr	r1, [sp, #20]
 80115ce:	eba3 0308 	sub.w	r3, r3, r8
 80115d2:	eba9 0401 	sub.w	r4, r9, r1
 80115d6:	b2a4      	uxth	r4, r4
 80115d8:	b29b      	uxth	r3, r3
 80115da:	fa0f f984 	sxth.w	r9, r4
 80115de:	b219      	sxth	r1, r3
 80115e0:	eba2 020e 	sub.w	r2, r2, lr
 80115e4:	1b40      	subs	r0, r0, r5
 80115e6:	fb09 f202 	mul.w	r2, r9, r2
 80115ea:	4348      	muls	r0, r1
 80115ec:	4282      	cmp	r2, r0
 80115ee:	9a02      	ldr	r2, [sp, #8]
 80115f0:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80115f4:	445a      	add	r2, fp
 80115f6:	dc06      	bgt.n	8011606 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46a>
 80115f8:	9b07      	ldr	r3, [sp, #28]
 80115fa:	f8a2 10ae 	strh.w	r1, [r2, #174]	; 0xae
 80115fe:	f8a2 30aa 	strh.w	r3, [r2, #170]	; 0xaa
 8011602:	44a4      	add	ip, r4
 8011604:	e75c      	b.n	80114c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x324>
 8011606:	9904      	ldr	r1, [sp, #16]
 8011608:	f8a2 90ac 	strh.w	r9, [r2, #172]	; 0xac
 801160c:	f8a2 10a8 	strh.w	r1, [r2, #168]	; 0xa8
 8011610:	4433      	add	r3, r6
 8011612:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8011616:	e5d7      	b.n	80111c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8011618:	9f06      	ldr	r7, [sp, #24]
 801161a:	9b04      	ldr	r3, [sp, #16]
 801161c:	1bc9      	subs	r1, r1, r7
 801161e:	fa0f f789 	sxth.w	r7, r9
 8011622:	b289      	uxth	r1, r1
 8011624:	429f      	cmp	r7, r3
 8011626:	fa0f fe81 	sxth.w	lr, r1
 801162a:	dd22      	ble.n	8011672 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4d6>
 801162c:	9a05      	ldr	r2, [sp, #20]
 801162e:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8011632:	1b40      	subs	r0, r0, r5
 8011634:	eba9 0202 	sub.w	r2, r9, r2
 8011638:	9d07      	ldr	r5, [sp, #28]
 801163a:	b292      	uxth	r2, r2
 801163c:	eba5 0a03 	sub.w	sl, r5, r3
 8011640:	b214      	sxth	r4, r2
 8011642:	9b02      	ldr	r3, [sp, #8]
 8011644:	fb0e f000 	mul.w	r0, lr, r0
 8011648:	fb04 fa0a 	mul.w	sl, r4, sl
 801164c:	00db      	lsls	r3, r3, #3
 801164e:	4550      	cmp	r0, sl
 8011650:	445b      	add	r3, fp
 8011652:	db03      	blt.n	801165c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c0>
 8011654:	f8a3 e0ae 	strh.w	lr, [r3, #174]	; 0xae
 8011658:	4494      	add	ip, r2
 801165a:	e731      	b.n	80114c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x324>
 801165c:	9a04      	ldr	r2, [sp, #16]
 801165e:	f8a3 20a8 	strh.w	r2, [r3, #168]	; 0xa8
 8011662:	f8a3 40ac 	strh.w	r4, [r3, #172]	; 0xac
 8011666:	f8b3 30aa 	ldrh.w	r3, [r3, #170]	; 0xaa
 801166a:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801166e:	4431      	add	r1, r6
 8011670:	e75b      	b.n	801152a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38e>
 8011672:	9b08      	ldr	r3, [sp, #32]
 8011674:	eba3 0308 	sub.w	r3, r3, r8
 8011678:	b29b      	uxth	r3, r3
 801167a:	2c06      	cmp	r4, #6
 801167c:	b21d      	sxth	r5, r3
 801167e:	d813      	bhi.n	80116a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x50c>
 8011680:	9b07      	ldr	r3, [sp, #28]
 8011682:	f8aa 30a2 	strh.w	r3, [sl, #162]	; 0xa2
 8011686:	1c63      	adds	r3, r4, #1
 8011688:	f8aa 50a6 	strh.w	r5, [sl, #166]	; 0xa6
 801168c:	f8ab 30e8 	strh.w	r3, [fp, #232]	; 0xe8
 8011690:	9b01      	ldr	r3, [sp, #4]
 8011692:	9901      	ldr	r1, [sp, #4]
 8011694:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8011698:	f821 0034 	strh.w	r0, [r1, r4, lsl #3]
 801169c:	805a      	strh	r2, [r3, #2]
 801169e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80116a0:	809a      	strh	r2, [r3, #4]
 80116a2:	f8a3 e006 	strh.w	lr, [r3, #6]
 80116a6:	e75e      	b.n	8011566 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ca>
 80116a8:	9802      	ldr	r0, [sp, #8]
 80116aa:	4575      	cmp	r5, lr
 80116ac:	ea4f 00c0 	mov.w	r0, r0, lsl #3
 80116b0:	db0d      	blt.n	80116ce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x532>
 80116b2:	4431      	add	r1, r6
 80116b4:	9b06      	ldr	r3, [sp, #24]
 80116b6:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 80116ba:	b289      	uxth	r1, r1
 80116bc:	4458      	add	r0, fp
 80116be:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80116c2:	4419      	add	r1, r3
 80116c4:	f8a0 10aa 	strh.w	r1, [r0, #170]	; 0xaa
 80116c8:	f8a0 50ae 	strh.w	r5, [r0, #174]	; 0xae
 80116cc:	e57c      	b.n	80111c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80116ce:	4458      	add	r0, fp
 80116d0:	f8a0 e0ae 	strh.w	lr, [r0, #174]	; 0xae
 80116d4:	e79c      	b.n	8011610 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x474>
 80116d6:	f8bb 60e8 	ldrh.w	r6, [fp, #232]	; 0xe8
 80116da:	2e07      	cmp	r6, #7
 80116dc:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 80116e0:	d812      	bhi.n	8011708 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56c>
 80116e2:	1c75      	adds	r5, r6, #1
 80116e4:	f8ab 50e8 	strh.w	r5, [fp, #232]	; 0xe8
 80116e8:	9d01      	ldr	r5, [sp, #4]
 80116ea:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 80116ee:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 80116f2:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 80116f6:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 80116fa:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 80116fe:	442c      	add	r4, r5
 8011700:	8061      	strh	r1, [r4, #2]
 8011702:	80a2      	strh	r2, [r4, #4]
 8011704:	80e3      	strh	r3, [r4, #6]
 8011706:	e5c9      	b.n	801129c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8011708:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 801170c:	3e01      	subs	r6, #1
 801170e:	445c      	add	r4, fp
 8011710:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 8011714:	f04f 37ff 	mov.w	r7, #4294967295
 8011718:	2500      	movs	r5, #0
 801171a:	9305      	str	r3, [sp, #20]
 801171c:	f9b4 30a4 	ldrsh.w	r3, [r4, #164]	; 0xa4
 8011720:	9302      	str	r3, [sp, #8]
 8011722:	1e72      	subs	r2, r6, #1
 8011724:	f9b4 30a6 	ldrsh.w	r3, [r4, #166]	; 0xa6
 8011728:	9304      	str	r3, [sp, #16]
 801172a:	4691      	mov	r9, r2
 801172c:	f104 03a0 	add.w	r3, r4, #160	; 0xa0
 8011730:	f1b9 3fff 	cmp.w	r9, #4294967295
 8011734:	bf14      	ite	ne
 8011736:	9905      	ldrne	r1, [sp, #20]
 8011738:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 801173c:	6818      	ldr	r0, [r3, #0]
 801173e:	9207      	str	r2, [sp, #28]
 8011740:	bf18      	it	ne
 8011742:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 8011746:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 801174a:	f8be 1006 	ldrh.w	r1, [lr, #6]
 801174e:	f8be 8004 	ldrh.w	r8, [lr, #4]
 8011752:	9306      	str	r3, [sp, #24]
 8011754:	fb18 f801 	smulbb	r8, r8, r1
 8011758:	6859      	ldr	r1, [r3, #4]
 801175a:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 801175e:	4671      	mov	r1, lr
 8011760:	a80c      	add	r0, sp, #48	; 0x30
 8011762:	f7fb f87b 	bl	800c85c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8011766:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 801176a:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 801176e:	9b04      	ldr	r3, [sp, #16]
 8011770:	9a02      	ldr	r2, [sp, #8]
 8011772:	fb10 f001 	smulbb	r0, r0, r1
 8011776:	fb02 8803 	mla	r8, r2, r3, r8
 801177a:	eba0 0108 	sub.w	r1, r0, r8
 801177e:	f04f 0c08 	mov.w	ip, #8
 8011782:	fb90 f0fc 	sdiv	r0, r0, ip
 8011786:	4288      	cmp	r0, r1
 8011788:	dc20      	bgt.n	80117cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x630>
 801178a:	4551      	cmp	r1, sl
 801178c:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8011790:	da03      	bge.n	801179a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fe>
 8011792:	b1d9      	cbz	r1, 80117cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x630>
 8011794:	468a      	mov	sl, r1
 8011796:	464f      	mov	r7, r9
 8011798:	4635      	mov	r5, r6
 801179a:	f109 39ff 	add.w	r9, r9, #4294967295
 801179e:	f119 0f02 	cmn.w	r9, #2
 80117a2:	d1c5      	bne.n	8011730 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 80117a4:	4616      	mov	r6, r2
 80117a6:	3201      	adds	r2, #1
 80117a8:	f1a4 0408 	sub.w	r4, r4, #8
 80117ac:	d1b6      	bne.n	801171c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x580>
 80117ae:	9b01      	ldr	r3, [sp, #4]
 80117b0:	b2ac      	uxth	r4, r5
 80117b2:	00ed      	lsls	r5, r5, #3
 80117b4:	1958      	adds	r0, r3, r5
 80117b6:	1c7b      	adds	r3, r7, #1
 80117b8:	d10b      	bne.n	80117d2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x636>
 80117ba:	4601      	mov	r1, r0
 80117bc:	9803      	ldr	r0, [sp, #12]
 80117be:	f7fb f84d 	bl	800c85c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 80117c2:	4621      	mov	r1, r4
 80117c4:	9801      	ldr	r0, [sp, #4]
 80117c6:	f7ff fcd5 	bl	8011174 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80117ca:	e4fd      	b.n	80111c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80117cc:	464f      	mov	r7, r9
 80117ce:	4635      	mov	r5, r6
 80117d0:	e7ed      	b.n	80117ae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x612>
 80117d2:	9b01      	ldr	r3, [sp, #4]
 80117d4:	00ff      	lsls	r7, r7, #3
 80117d6:	19d9      	adds	r1, r3, r7
 80117d8:	f7fb f840 	bl	800c85c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 80117dc:	9b03      	ldr	r3, [sp, #12]
 80117de:	cb03      	ldmia	r3!, {r0, r1}
 80117e0:	445f      	add	r7, fp
 80117e2:	445d      	add	r5, fp
 80117e4:	f8c7 00a8 	str.w	r0, [r7, #168]	; 0xa8
 80117e8:	f8c7 10ac 	str.w	r1, [r7, #172]	; 0xac
 80117ec:	f855 0fa8 	ldr.w	r0, [r5, #168]!
 80117f0:	9b03      	ldr	r3, [sp, #12]
 80117f2:	6869      	ldr	r1, [r5, #4]
 80117f4:	c303      	stmia	r3!, {r0, r1}
 80117f6:	e7e4      	b.n	80117c2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x626>

080117f8 <_ZN8touchgfx11Application10invalidateEv>:
 80117f8:	4b09      	ldr	r3, [pc, #36]	; (8011820 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 80117fa:	f9b3 2000 	ldrsh.w	r2, [r3]
 80117fe:	4b09      	ldr	r3, [pc, #36]	; (8011824 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 8011800:	b082      	sub	sp, #8
 8011802:	f9b3 3000 	ldrsh.w	r3, [r3]
 8011806:	f8ad 3006 	strh.w	r3, [sp, #6]
 801180a:	2100      	movs	r1, #0
 801180c:	9100      	str	r1, [sp, #0]
 801180e:	f8ad 2004 	strh.w	r2, [sp, #4]
 8011812:	ab02      	add	r3, sp, #8
 8011814:	e913 0006 	ldmdb	r3, {r1, r2}
 8011818:	b002      	add	sp, #8
 801181a:	f7ff bcbf 	b.w	801119c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 801181e:	bf00      	nop
 8011820:	200155ac 	.word	0x200155ac
 8011824:	200155ae 	.word	0x200155ae

08011828 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 8011828:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801182c:	f500 7696 	add.w	r6, r0, #300	; 0x12c
 8011830:	b09b      	sub	sp, #108	; 0x6c
 8011832:	4604      	mov	r4, r0
 8011834:	4630      	mov	r0, r6
 8011836:	f7f9 faec 	bl	800ae12 <_ZNK8touchgfx4Rect7isEmptyEv>
 801183a:	4605      	mov	r5, r0
 801183c:	b940      	cbnz	r0, 8011850 <_ZN8touchgfx11Application15drawCachedAreasEv+0x28>
 801183e:	e896 0006 	ldmia.w	r6, {r1, r2}
 8011842:	4620      	mov	r0, r4
 8011844:	f7ff fcaa 	bl	801119c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8011848:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
 801184c:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 8011850:	4bc9      	ldr	r3, [pc, #804]	; (8011b78 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8011852:	681b      	ldr	r3, [r3, #0]
 8011854:	2b00      	cmp	r3, #0
 8011856:	d03e      	beq.n	80118d6 <_ZN8touchgfx11Application15drawCachedAreasEv+0xae>
 8011858:	4dc8      	ldr	r5, [pc, #800]	; (8011b7c <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 801185a:	4628      	mov	r0, r5
 801185c:	f7f9 fad9 	bl	800ae12 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011860:	4606      	mov	r6, r0
 8011862:	2800      	cmp	r0, #0
 8011864:	d137      	bne.n	80118d6 <_ZN8touchgfx11Application15drawCachedAreasEv+0xae>
 8011866:	4628      	mov	r0, r5
 8011868:	f7ff fa4a 	bl	8010d00 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 801186c:	6829      	ldr	r1, [r5, #0]
 801186e:	686a      	ldr	r2, [r5, #4]
 8011870:	4620      	mov	r0, r4
 8011872:	f7ff fc93 	bl	801119c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8011876:	802e      	strh	r6, [r5, #0]
 8011878:	806e      	strh	r6, [r5, #2]
 801187a:	80ae      	strh	r6, [r5, #4]
 801187c:	80ee      	strh	r6, [r5, #6]
 801187e:	ae09      	add	r6, sp, #36	; 0x24
 8011880:	4630      	mov	r0, r6
 8011882:	f7ff fc26 	bl	80110d2 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8011886:	4abe      	ldr	r2, [pc, #760]	; (8011b80 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 8011888:	f8b4 70e8 	ldrh.w	r7, [r4, #232]	; 0xe8
 801188c:	8815      	ldrh	r5, [r2, #0]
 801188e:	9202      	str	r2, [sp, #8]
 8011890:	462b      	mov	r3, r5
 8011892:	f104 00a8 	add.w	r0, r4, #168	; 0xa8
 8011896:	429f      	cmp	r7, r3
 8011898:	d924      	bls.n	80118e4 <_ZN8touchgfx11Application15drawCachedAreasEv+0xbc>
 801189a:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 801189e:	2907      	cmp	r1, #7
 80118a0:	d816      	bhi.n	80118d0 <_ZN8touchgfx11Application15drawCachedAreasEv+0xa8>
 80118a2:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 80118a6:	f930 8033 	ldrsh.w	r8, [r0, r3, lsl #3]
 80118aa:	f9b2 9002 	ldrsh.w	r9, [r2, #2]
 80118ae:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 80118b2:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 80118b6:	1c4a      	adds	r2, r1, #1
 80118b8:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 80118bc:	eb06 02c1 	add.w	r2, r6, r1, lsl #3
 80118c0:	f826 8031 	strh.w	r8, [r6, r1, lsl #3]
 80118c4:	f8a2 9002 	strh.w	r9, [r2, #2]
 80118c8:	f8a2 e004 	strh.w	lr, [r2, #4]
 80118cc:	f8a2 c006 	strh.w	ip, [r2, #6]
 80118d0:	3301      	adds	r3, #1
 80118d2:	b29b      	uxth	r3, r3
 80118d4:	e7df      	b.n	8011896 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6e>
 80118d6:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 80118da:	2b00      	cmp	r3, #0
 80118dc:	d1cf      	bne.n	801187e <_ZN8touchgfx11Application15drawCachedAreasEv+0x56>
 80118de:	b01b      	add	sp, #108	; 0x6c
 80118e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80118e4:	462f      	mov	r7, r5
 80118e6:	f8b4 312a 	ldrh.w	r3, [r4, #298]	; 0x12a
 80118ea:	42bb      	cmp	r3, r7
 80118ec:	d90b      	bls.n	8011906 <_ZN8touchgfx11Application15drawCachedAreasEv+0xde>
 80118ee:	eb04 03c7 	add.w	r3, r4, r7, lsl #3
 80118f2:	4620      	mov	r0, r4
 80118f4:	f8d3 10ea 	ldr.w	r1, [r3, #234]	; 0xea
 80118f8:	f8d3 20ee 	ldr.w	r2, [r3, #238]	; 0xee
 80118fc:	3701      	adds	r7, #1
 80118fe:	f7ff fc4d 	bl	801119c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8011902:	b2bf      	uxth	r7, r7
 8011904:	e7ef      	b.n	80118e6 <_ZN8touchgfx11Application15drawCachedAreasEv+0xbe>
 8011906:	4a9f      	ldr	r2, [pc, #636]	; (8011b84 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 8011908:	6813      	ldr	r3, [r2, #0]
 801190a:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 801190e:	2b01      	cmp	r3, #1
 8011910:	4690      	mov	r8, r2
 8011912:	f040 80e6 	bne.w	8011ae2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ba>
 8011916:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 801191a:	f8b4 70e8 	ldrh.w	r7, [r4, #232]	; 0xe8
 801191e:	4629      	mov	r1, r5
 8011920:	33aa      	adds	r3, #170	; 0xaa
 8011922:	2500      	movs	r5, #0
 8011924:	428f      	cmp	r7, r1
 8011926:	f103 0308 	add.w	r3, r3, #8
 801192a:	dd0a      	ble.n	8011942 <_ZN8touchgfx11Application15drawCachedAreasEv+0x11a>
 801192c:	f833 2c08 	ldrh.w	r2, [r3, #-8]
 8011930:	f833 0c04 	ldrh.w	r0, [r3, #-4]
 8011934:	4402      	add	r2, r0
 8011936:	b212      	sxth	r2, r2
 8011938:	4295      	cmp	r5, r2
 801193a:	bfb8      	it	lt
 801193c:	4615      	movlt	r5, r2
 801193e:	3101      	adds	r1, #1
 8011940:	e7f0      	b.n	8011924 <_ZN8touchgfx11Application15drawCachedAreasEv+0xfc>
 8011942:	4b91      	ldr	r3, [pc, #580]	; (8011b88 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 8011944:	f8df b23c 	ldr.w	fp, [pc, #572]	; 8011b84 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>
 8011948:	881b      	ldrh	r3, [r3, #0]
 801194a:	2b0f      	cmp	r3, #15
 801194c:	bf88      	it	hi
 801194e:	ea4f 0ad3 	movhi.w	sl, r3, lsr #3
 8011952:	f04f 0300 	mov.w	r3, #0
 8011956:	e9cd 3305 	strd	r3, r3, [sp, #20]
 801195a:	bf98      	it	ls
 801195c:	f04f 0a01 	movls.w	sl, #1
 8011960:	46d8      	mov	r8, fp
 8011962:	f8bd 701a 	ldrh.w	r7, [sp, #26]
 8011966:	f8bd 0016 	ldrh.w	r0, [sp, #22]
 801196a:	4438      	add	r0, r7
 801196c:	b207      	sxth	r7, r0
 801196e:	f8db 0000 	ldr.w	r0, [fp]
 8011972:	42bd      	cmp	r5, r7
 8011974:	6803      	ldr	r3, [r0, #0]
 8011976:	f340 8084 	ble.w	8011a82 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 801197a:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 801197e:	4798      	blx	r3
 8011980:	eb07 030a 	add.w	r3, r7, sl
 8011984:	4298      	cmp	r0, r3
 8011986:	da07      	bge.n	8011998 <_ZN8touchgfx11Application15drawCachedAreasEv+0x170>
 8011988:	4285      	cmp	r5, r0
 801198a:	dd05      	ble.n	8011998 <_ZN8touchgfx11Application15drawCachedAreasEv+0x170>
 801198c:	4287      	cmp	r7, r0
 801198e:	dd6d      	ble.n	8011a6c <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8011990:	2f00      	cmp	r7, #0
 8011992:	dd6b      	ble.n	8011a6c <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8011994:	4628      	mov	r0, r5
 8011996:	e004      	b.n	80119a2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x17a>
 8011998:	4287      	cmp	r7, r0
 801199a:	dcfb      	bgt.n	8011994 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16c>
 801199c:	42a8      	cmp	r0, r5
 801199e:	bfa8      	it	ge
 80119a0:	4628      	movge	r0, r5
 80119a2:	4b7a      	ldr	r3, [pc, #488]	; (8011b8c <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>)
 80119a4:	f8ad 7016 	strh.w	r7, [sp, #22]
 80119a8:	f9b3 3000 	ldrsh.w	r3, [r3]
 80119ac:	f8ad 3018 	strh.w	r3, [sp, #24]
 80119b0:	9b02      	ldr	r3, [sp, #8]
 80119b2:	1bc0      	subs	r0, r0, r7
 80119b4:	2200      	movs	r2, #0
 80119b6:	881f      	ldrh	r7, [r3, #0]
 80119b8:	f8ad 2014 	strh.w	r2, [sp, #20]
 80119bc:	f8ad 001a 	strh.w	r0, [sp, #26]
 80119c0:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 80119c4:	42bb      	cmp	r3, r7
 80119c6:	d9cc      	bls.n	8011962 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13a>
 80119c8:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 80119cc:	ab07      	add	r3, sp, #28
 80119ce:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 80119d2:	6851      	ldr	r1, [r2, #4]
 80119d4:	c303      	stmia	r3!, {r0, r1}
 80119d6:	a905      	add	r1, sp, #20
 80119d8:	a807      	add	r0, sp, #28
 80119da:	f7ff fad0 	bl	8010f7e <_ZNK8touchgfx4Rect9intersectERKS0_>
 80119de:	2800      	cmp	r0, #0
 80119e0:	d04c      	beq.n	8011a7c <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 80119e2:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 80119e6:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 80119ea:	f8bd 9020 	ldrh.w	r9, [sp, #32]
 80119ee:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 80119f2:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 80119f6:	9303      	str	r3, [sp, #12]
 80119f8:	4686      	mov	lr, r0
 80119fa:	4290      	cmp	r0, r2
 80119fc:	4448      	add	r0, r9
 80119fe:	f8bd 9018 	ldrh.w	r9, [sp, #24]
 8011a02:	bfb8      	it	lt
 8011a04:	4696      	movlt	lr, r2
 8011a06:	444a      	add	r2, r9
 8011a08:	4299      	cmp	r1, r3
 8011a0a:	b280      	uxth	r0, r0
 8011a0c:	b292      	uxth	r2, r2
 8011a0e:	468c      	mov	ip, r1
 8011a10:	fa0f f982 	sxth.w	r9, r2
 8011a14:	bfb8      	it	lt
 8011a16:	469c      	movlt	ip, r3
 8011a18:	b203      	sxth	r3, r0
 8011a1a:	454b      	cmp	r3, r9
 8011a1c:	bfb8      	it	lt
 8011a1e:	4602      	movlt	r2, r0
 8011a20:	eba2 020e 	sub.w	r2, r2, lr
 8011a24:	f8ad 2020 	strh.w	r2, [sp, #32]
 8011a28:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8011a2c:	9b03      	ldr	r3, [sp, #12]
 8011a2e:	f8ad e01c 	strh.w	lr, [sp, #28]
 8011a32:	4411      	add	r1, r2
 8011a34:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8011a38:	f8ad c01e 	strh.w	ip, [sp, #30]
 8011a3c:	4413      	add	r3, r2
 8011a3e:	b289      	uxth	r1, r1
 8011a40:	b29b      	uxth	r3, r3
 8011a42:	b208      	sxth	r0, r1
 8011a44:	b21a      	sxth	r2, r3
 8011a46:	4290      	cmp	r0, r2
 8011a48:	bfb8      	it	lt
 8011a4a:	460b      	movlt	r3, r1
 8011a4c:	eba3 030c 	sub.w	r3, r3, ip
 8011a50:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8011a54:	a807      	add	r0, sp, #28
 8011a56:	f7f9 f9dc 	bl	800ae12 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011a5a:	b920      	cbnz	r0, 8011a66 <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 8011a5c:	6823      	ldr	r3, [r4, #0]
 8011a5e:	a907      	add	r1, sp, #28
 8011a60:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8011a62:	4620      	mov	r0, r4
 8011a64:	4798      	blx	r3
 8011a66:	3701      	adds	r7, #1
 8011a68:	b2bf      	uxth	r7, r7
 8011a6a:	e7a9      	b.n	80119c0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 8011a6c:	f8d8 0000 	ldr.w	r0, [r8]
 8011a70:	6803      	ldr	r3, [r0, #0]
 8011a72:	2101      	movs	r1, #1
 8011a74:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8011a78:	4798      	blx	r3
 8011a7a:	e772      	b.n	8011962 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13a>
 8011a7c:	e9cd 0007 	strd	r0, r0, [sp, #28]
 8011a80:	e7e8      	b.n	8011a54 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 8011a82:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011a84:	4798      	blx	r3
 8011a86:	4b42      	ldr	r3, [pc, #264]	; (8011b90 <_ZN8touchgfx11Application15drawCachedAreasEv+0x368>)
 8011a88:	781b      	ldrb	r3, [r3, #0]
 8011a8a:	2b00      	cmp	r3, #0
 8011a8c:	f43f af27 	beq.w	80118de <_ZN8touchgfx11Application15drawCachedAreasEv+0xb6>
 8011a90:	2300      	movs	r3, #0
 8011a92:	f8a4 312a 	strh.w	r3, [r4, #298]	; 0x12a
 8011a96:	9b02      	ldr	r3, [sp, #8]
 8011a98:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 8011a9c:	881b      	ldrh	r3, [r3, #0]
 8011a9e:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 8011aa2:	429d      	cmp	r5, r3
 8011aa4:	f67f af1b 	bls.w	80118de <_ZN8touchgfx11Application15drawCachedAreasEv+0xb6>
 8011aa8:	f8b4 112a 	ldrh.w	r1, [r4, #298]	; 0x12a
 8011aac:	2907      	cmp	r1, #7
 8011aae:	d815      	bhi.n	8011adc <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b4>
 8011ab0:	eb06 02c3 	add.w	r2, r6, r3, lsl #3
 8011ab4:	f936 8033 	ldrsh.w	r8, [r6, r3, lsl #3]
 8011ab8:	f9b2 e002 	ldrsh.w	lr, [r2, #2]
 8011abc:	f9b2 c004 	ldrsh.w	ip, [r2, #4]
 8011ac0:	f9b2 7006 	ldrsh.w	r7, [r2, #6]
 8011ac4:	1c4a      	adds	r2, r1, #1
 8011ac6:	f8a4 212a 	strh.w	r2, [r4, #298]	; 0x12a
 8011aca:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 8011ace:	f820 8031 	strh.w	r8, [r0, r1, lsl #3]
 8011ad2:	f8a2 e002 	strh.w	lr, [r2, #2]
 8011ad6:	f8a2 c004 	strh.w	ip, [r2, #4]
 8011ada:	80d7      	strh	r7, [r2, #6]
 8011adc:	3301      	adds	r3, #1
 8011ade:	b29b      	uxth	r3, r3
 8011ae0:	e7df      	b.n	8011aa2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x27a>
 8011ae2:	2b02      	cmp	r3, #2
 8011ae4:	f040 8136 	bne.w	8011d54 <_ZN8touchgfx11Application15drawCachedAreasEv+0x52c>
 8011ae8:	4b2a      	ldr	r3, [pc, #168]	; (8011b94 <_ZN8touchgfx11Application15drawCachedAreasEv+0x36c>)
 8011aea:	781b      	ldrb	r3, [r3, #0]
 8011aec:	2b01      	cmp	r3, #1
 8011aee:	f104 09a8 	add.w	r9, r4, #168	; 0xa8
 8011af2:	f000 809c 	beq.w	8011c2e <_ZN8touchgfx11Application15drawCachedAreasEv+0x406>
 8011af6:	9b02      	ldr	r3, [sp, #8]
 8011af8:	f8b4 20e8 	ldrh.w	r2, [r4, #232]	; 0xe8
 8011afc:	f8b3 b000 	ldrh.w	fp, [r3]
 8011b00:	f10b 0b01 	add.w	fp, fp, #1
 8011b04:	fa1f fb8b 	uxth.w	fp, fp
 8011b08:	2a00      	cmp	r2, #0
 8011b0a:	d0bc      	beq.n	8011a86 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8011b0c:	f8b4 50aa 	ldrh.w	r5, [r4, #170]	; 0xaa
 8011b10:	f8b4 30ae 	ldrh.w	r3, [r4, #174]	; 0xae
 8011b14:	441d      	add	r5, r3
 8011b16:	b22d      	sxth	r5, r5
 8011b18:	4659      	mov	r1, fp
 8011b1a:	f04f 0800 	mov.w	r8, #0
 8011b1e:	b28b      	uxth	r3, r1
 8011b20:	429a      	cmp	r2, r3
 8011b22:	ea4f 07c8 	mov.w	r7, r8, lsl #3
 8011b26:	f240 80c1 	bls.w	8011cac <_ZN8touchgfx11Application15drawCachedAreasEv+0x484>
 8011b2a:	4427      	add	r7, r4
 8011b2c:	eb04 0ec1 	add.w	lr, r4, r1, lsl #3
 8011b30:	f9b7 30aa 	ldrsh.w	r3, [r7, #170]	; 0xaa
 8011b34:	f9be c0aa 	ldrsh.w	ip, [lr, #170]	; 0xaa
 8011b38:	4563      	cmp	r3, ip
 8011b3a:	4608      	mov	r0, r1
 8011b3c:	f340 80a3 	ble.w	8011c86 <_ZN8touchgfx11Application15drawCachedAreasEv+0x45e>
 8011b40:	f8be 50ae 	ldrh.w	r5, [lr, #174]	; 0xae
 8011b44:	4465      	add	r5, ip
 8011b46:	b22d      	sxth	r5, r5
 8011b48:	429d      	cmp	r5, r3
 8011b4a:	bfa8      	it	ge
 8011b4c:	461d      	movge	r5, r3
 8011b4e:	3101      	adds	r1, #1
 8011b50:	4680      	mov	r8, r0
 8011b52:	e7e4      	b.n	8011b1e <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f6>
 8011b54:	d10b      	bne.n	8011b6e <_ZN8touchgfx11Application15drawCachedAreasEv+0x346>
 8011b56:	f9b5 c0ae 	ldrsh.w	ip, [r5, #174]	; 0xae
 8011b5a:	f9ba 10ae 	ldrsh.w	r1, [sl, #174]	; 0xae
 8011b5e:	458c      	cmp	ip, r1
 8011b60:	bfb4      	ite	lt
 8011b62:	469c      	movlt	ip, r3
 8011b64:	46bc      	movge	ip, r7
 8011b66:	4572      	cmp	r2, lr
 8011b68:	bfb8      	it	lt
 8011b6a:	4672      	movlt	r2, lr
 8011b6c:	e088      	b.n	8011c80 <_ZN8touchgfx11Application15drawCachedAreasEv+0x458>
 8011b6e:	428a      	cmp	r2, r1
 8011b70:	bfb8      	it	lt
 8011b72:	460a      	movlt	r2, r1
 8011b74:	46bc      	mov	ip, r7
 8011b76:	e083      	b.n	8011c80 <_ZN8touchgfx11Application15drawCachedAreasEv+0x458>
 8011b78:	200155f8 	.word	0x200155f8
 8011b7c:	20015604 	.word	0x20015604
 8011b80:	2000008c 	.word	0x2000008c
 8011b84:	200155b8 	.word	0x200155b8
 8011b88:	200155ae 	.word	0x200155ae
 8011b8c:	200155ac 	.word	0x200155ac
 8011b90:	200155b6 	.word	0x200155b6
 8011b94:	200155b0 	.word	0x200155b0
 8011b98:	1961      	adds	r1, r4, r5
 8011b9a:	ab07      	add	r3, sp, #28
 8011b9c:	f851 0fa8 	ldr.w	r0, [r1, #168]!
 8011ba0:	6849      	ldr	r1, [r1, #4]
 8011ba2:	c303      	stmia	r3!, {r0, r1}
 8011ba4:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8011ba8:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8011bac:	2b13      	cmp	r3, #19
 8011bae:	bfd8      	it	le
 8011bb0:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 8011bb4:	f8ad 201c 	strh.w	r2, [sp, #28]
 8011bb8:	440b      	add	r3, r1
 8011bba:	1a9b      	subs	r3, r3, r2
 8011bbc:	a807      	add	r0, sp, #28
 8011bbe:	f8ad 3020 	strh.w	r3, [sp, #32]
 8011bc2:	f7ff f8b7 	bl	8010d34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8011bc6:	a807      	add	r0, sp, #28
 8011bc8:	f7f9 f923 	bl	800ae12 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011bcc:	bb78      	cbnz	r0, 8011c2e <_ZN8touchgfx11Application15drawCachedAreasEv+0x406>
 8011bce:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 8011bd2:	f8d8 0000 	ldr.w	r0, [r8]
 8011bd6:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8011bda:	f8d0 e000 	ldr.w	lr, [r0]
 8011bde:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 8011be2:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8011be6:	f1bc 0f14 	cmp.w	ip, #20
 8011bea:	bfa8      	it	ge
 8011bec:	f04f 0c14 	movge.w	ip, #20
 8011bf0:	fa1f fc8c 	uxth.w	ip, ip
 8011bf4:	f8cd c000 	str.w	ip, [sp]
 8011bf8:	f8de a090 	ldr.w	sl, [lr, #144]	; 0x90
 8011bfc:	47d0      	blx	sl
 8011bfe:	4682      	mov	sl, r0
 8011c00:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8011c04:	a807      	add	r0, sp, #28
 8011c06:	f7ff f87b 	bl	8010d00 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8011c0a:	6823      	ldr	r3, [r4, #0]
 8011c0c:	4425      	add	r5, r4
 8011c0e:	4620      	mov	r0, r4
 8011c10:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8011c12:	a907      	add	r1, sp, #28
 8011c14:	4798      	blx	r3
 8011c16:	f8b5 00ac 	ldrh.w	r0, [r5, #172]	; 0xac
 8011c1a:	eba0 000a 	sub.w	r0, r0, sl
 8011c1e:	b200      	sxth	r0, r0
 8011c20:	f8a5 00ac 	strh.w	r0, [r5, #172]	; 0xac
 8011c24:	b918      	cbnz	r0, 8011c2e <_ZN8touchgfx11Application15drawCachedAreasEv+0x406>
 8011c26:	b2b9      	uxth	r1, r7
 8011c28:	4648      	mov	r0, r9
 8011c2a:	f7ff faa3 	bl	8011174 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8011c2e:	f8b4 b0e8 	ldrh.w	fp, [r4, #232]	; 0xe8
 8011c32:	f1bb 0f00 	cmp.w	fp, #0
 8011c36:	f43f af26 	beq.w	8011a86 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8011c3a:	9b02      	ldr	r3, [sp, #8]
 8011c3c:	f9b4 20a8 	ldrsh.w	r2, [r4, #168]	; 0xa8
 8011c40:	881b      	ldrh	r3, [r3, #0]
 8011c42:	3301      	adds	r3, #1
 8011c44:	b29b      	uxth	r3, r3
 8011c46:	2700      	movs	r7, #0
 8011c48:	b299      	uxth	r1, r3
 8011c4a:	458b      	cmp	fp, r1
 8011c4c:	ea4f 05c7 	mov.w	r5, r7, lsl #3
 8011c50:	d9a2      	bls.n	8011b98 <_ZN8touchgfx11Application15drawCachedAreasEv+0x370>
 8011c52:	4425      	add	r5, r4
 8011c54:	eb04 0ac3 	add.w	sl, r4, r3, lsl #3
 8011c58:	f8b5 10ac 	ldrh.w	r1, [r5, #172]	; 0xac
 8011c5c:	f8b5 00a8 	ldrh.w	r0, [r5, #168]	; 0xa8
 8011c60:	f9ba e0a8 	ldrsh.w	lr, [sl, #168]	; 0xa8
 8011c64:	4408      	add	r0, r1
 8011c66:	f8ba 10ac 	ldrh.w	r1, [sl, #172]	; 0xac
 8011c6a:	4471      	add	r1, lr
 8011c6c:	b200      	sxth	r0, r0
 8011c6e:	b209      	sxth	r1, r1
 8011c70:	4288      	cmp	r0, r1
 8011c72:	469c      	mov	ip, r3
 8011c74:	f6bf af6e 	bge.w	8011b54 <_ZN8touchgfx11Application15drawCachedAreasEv+0x32c>
 8011c78:	4586      	cmp	lr, r0
 8011c7a:	4672      	mov	r2, lr
 8011c7c:	bfb8      	it	lt
 8011c7e:	4602      	movlt	r2, r0
 8011c80:	3301      	adds	r3, #1
 8011c82:	4667      	mov	r7, ip
 8011c84:	e7e0      	b.n	8011c48 <_ZN8touchgfx11Application15drawCachedAreasEv+0x420>
 8011c86:	d10c      	bne.n	8011ca2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x47a>
 8011c88:	f9b7 70ac 	ldrsh.w	r7, [r7, #172]	; 0xac
 8011c8c:	f9be 00ac 	ldrsh.w	r0, [lr, #172]	; 0xac
 8011c90:	4287      	cmp	r7, r0
 8011c92:	bfb4      	ite	lt
 8011c94:	4608      	movlt	r0, r1
 8011c96:	4640      	movge	r0, r8
 8011c98:	f8be 70ae 	ldrh.w	r7, [lr, #174]	; 0xae
 8011c9c:	443b      	add	r3, r7
 8011c9e:	b21b      	sxth	r3, r3
 8011ca0:	e752      	b.n	8011b48 <_ZN8touchgfx11Application15drawCachedAreasEv+0x320>
 8011ca2:	4565      	cmp	r5, ip
 8011ca4:	bfa8      	it	ge
 8011ca6:	4665      	movge	r5, ip
 8011ca8:	4640      	mov	r0, r8
 8011caa:	e750      	b.n	8011b4e <_ZN8touchgfx11Application15drawCachedAreasEv+0x326>
 8011cac:	eb09 0007 	add.w	r0, r9, r7
 8011cb0:	4427      	add	r7, r4
 8011cb2:	9203      	str	r2, [sp, #12]
 8011cb4:	f9b7 a0ae 	ldrsh.w	sl, [r7, #174]	; 0xae
 8011cb8:	f1ba 0f13 	cmp.w	sl, #19
 8011cbc:	bfde      	ittt	le
 8011cbe:	f8b7 50aa 	ldrhle.w	r5, [r7, #170]	; 0xaa
 8011cc2:	4455      	addle	r5, sl
 8011cc4:	b22d      	sxthle	r5, r5
 8011cc6:	f7f9 f8a4 	bl	800ae12 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011cca:	9a03      	ldr	r2, [sp, #12]
 8011ccc:	2800      	cmp	r0, #0
 8011cce:	f47f af1b 	bne.w	8011b08 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2e0>
 8011cd2:	f9b7 20aa 	ldrsh.w	r2, [r7, #170]	; 0xaa
 8011cd6:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8011cda:	482a      	ldr	r0, [pc, #168]	; (8011d84 <_ZN8touchgfx11Application15drawCachedAreasEv+0x55c>)
 8011cdc:	f9b7 10a8 	ldrsh.w	r1, [r7, #168]	; 0xa8
 8011ce0:	f9b7 30ac 	ldrsh.w	r3, [r7, #172]	; 0xac
 8011ce4:	6800      	ldr	r0, [r0, #0]
 8011ce6:	f8ad 101c 	strh.w	r1, [sp, #28]
 8011cea:	1aad      	subs	r5, r5, r2
 8011cec:	2d14      	cmp	r5, #20
 8011cee:	f8ad 201e 	strh.w	r2, [sp, #30]
 8011cf2:	f8ad 3020 	strh.w	r3, [sp, #32]
 8011cf6:	bfa8      	it	ge
 8011cf8:	2514      	movge	r5, #20
 8011cfa:	f8d0 c000 	ldr.w	ip, [r0]
 8011cfe:	b2ad      	uxth	r5, r5
 8011d00:	fa1f fa8a 	uxth.w	sl, sl
 8011d04:	4555      	cmp	r5, sl
 8011d06:	bf94      	ite	ls
 8011d08:	9500      	strls	r5, [sp, #0]
 8011d0a:	f8cd a000 	strhi.w	sl, [sp]
 8011d0e:	b292      	uxth	r2, r2
 8011d10:	f8dc 5090 	ldr.w	r5, [ip, #144]	; 0x90
 8011d14:	b29b      	uxth	r3, r3
 8011d16:	b289      	uxth	r1, r1
 8011d18:	47a8      	blx	r5
 8011d1a:	6823      	ldr	r3, [r4, #0]
 8011d1c:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8011d20:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8011d22:	a907      	add	r1, sp, #28
 8011d24:	4620      	mov	r0, r4
 8011d26:	4798      	blx	r3
 8011d28:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 8011d2c:	f8b7 30ae 	ldrh.w	r3, [r7, #174]	; 0xae
 8011d30:	f8b7 20aa 	ldrh.w	r2, [r7, #170]	; 0xaa
 8011d34:	1a5b      	subs	r3, r3, r1
 8011d36:	440a      	add	r2, r1
 8011d38:	b21b      	sxth	r3, r3
 8011d3a:	f8a7 20aa 	strh.w	r2, [r7, #170]	; 0xaa
 8011d3e:	f8a7 30ae 	strh.w	r3, [r7, #174]	; 0xae
 8011d42:	2b00      	cmp	r3, #0
 8011d44:	f47f aed7 	bne.w	8011af6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ce>
 8011d48:	fa1f f188 	uxth.w	r1, r8
 8011d4c:	4648      	mov	r0, r9
 8011d4e:	f7ff fa11 	bl	8011174 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8011d52:	e6d0      	b.n	8011af6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ce>
 8011d54:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 8011d58:	42ab      	cmp	r3, r5
 8011d5a:	f67f ae94 	bls.w	8011a86 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8011d5e:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
 8011d62:	ab07      	add	r3, sp, #28
 8011d64:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 8011d68:	6851      	ldr	r1, [r2, #4]
 8011d6a:	c303      	stmia	r3!, {r0, r1}
 8011d6c:	a807      	add	r0, sp, #28
 8011d6e:	f7f9 f850 	bl	800ae12 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011d72:	b920      	cbnz	r0, 8011d7e <_ZN8touchgfx11Application15drawCachedAreasEv+0x556>
 8011d74:	6823      	ldr	r3, [r4, #0]
 8011d76:	a907      	add	r1, sp, #28
 8011d78:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8011d7a:	4620      	mov	r0, r4
 8011d7c:	4798      	blx	r3
 8011d7e:	3501      	adds	r5, #1
 8011d80:	b2ad      	uxth	r5, r5
 8011d82:	e7e7      	b.n	8011d54 <_ZN8touchgfx11Application15drawCachedAreasEv+0x52c>
 8011d84:	200155b8 	.word	0x200155b8

08011d88 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8011d88:	4b03      	ldr	r3, [pc, #12]	; (8011d98 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 8011d8a:	2200      	movs	r2, #0
 8011d8c:	801a      	strh	r2, [r3, #0]
 8011d8e:	805a      	strh	r2, [r3, #2]
 8011d90:	809a      	strh	r2, [r3, #4]
 8011d92:	80da      	strh	r2, [r3, #6]
 8011d94:	4770      	bx	lr
 8011d96:	bf00      	nop
 8011d98:	20015604 	.word	0x20015604

08011d9c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 8011d9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011da0:	4606      	mov	r6, r0
 8011da2:	b09d      	sub	sp, #116	; 0x74
 8011da4:	a803      	add	r0, sp, #12
 8011da6:	4614      	mov	r4, r2
 8011da8:	468a      	mov	sl, r1
 8011daa:	461d      	mov	r5, r3
 8011dac:	f000 fe67 	bl	8012a7e <_ZN8touchgfx12TextProviderC1Ev>
 8011db0:	6833      	ldr	r3, [r6, #0]
 8011db2:	4630      	mov	r0, r6
 8011db4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8011db6:	4798      	blx	r3
 8011db8:	6833      	ldr	r3, [r6, #0]
 8011dba:	4607      	mov	r7, r0
 8011dbc:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8011dbe:	4630      	mov	r0, r6
 8011dc0:	4798      	blx	r3
 8011dc2:	462a      	mov	r2, r5
 8011dc4:	9000      	str	r0, [sp, #0]
 8011dc6:	4621      	mov	r1, r4
 8011dc8:	463b      	mov	r3, r7
 8011dca:	a803      	add	r0, sp, #12
 8011dcc:	f000 feb2 	bl	8012b34 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8011dd0:	2500      	movs	r5, #0
 8011dd2:	462c      	mov	r4, r5
 8011dd4:	46a9      	mov	r9, r5
 8011dd6:	46a8      	mov	r8, r5
 8011dd8:	f242 0b0b 	movw	fp, #8203	; 0x200b
 8011ddc:	2300      	movs	r3, #0
 8011dde:	9302      	str	r3, [sp, #8]
 8011de0:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8011de4:	429c      	cmp	r4, r3
 8011de6:	d002      	beq.n	8011dee <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8011de8:	455c      	cmp	r4, fp
 8011dea:	bf18      	it	ne
 8011dec:	4625      	movne	r5, r4
 8011dee:	ab02      	add	r3, sp, #8
 8011df0:	4632      	mov	r2, r6
 8011df2:	4651      	mov	r1, sl
 8011df4:	a803      	add	r0, sp, #12
 8011df6:	f001 f99f 	bl	8013138 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8011dfa:	4604      	mov	r4, r0
 8011dfc:	b108      	cbz	r0, 8011e02 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 8011dfe:	280a      	cmp	r0, #10
 8011e00:	d10a      	bne.n	8011e18 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 8011e02:	45c1      	cmp	r9, r8
 8011e04:	bf38      	it	cc
 8011e06:	46c1      	movcc	r9, r8
 8011e08:	f04f 0800 	mov.w	r8, #0
 8011e0c:	2c00      	cmp	r4, #0
 8011e0e:	d1e5      	bne.n	8011ddc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8011e10:	4648      	mov	r0, r9
 8011e12:	b01d      	add	sp, #116	; 0x74
 8011e14:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011e18:	9a02      	ldr	r2, [sp, #8]
 8011e1a:	2a00      	cmp	r2, #0
 8011e1c:	d0de      	beq.n	8011ddc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8011e1e:	7b57      	ldrb	r7, [r2, #13]
 8011e20:	6833      	ldr	r3, [r6, #0]
 8011e22:	8894      	ldrh	r4, [r2, #4]
 8011e24:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8011e26:	007f      	lsls	r7, r7, #1
 8011e28:	f407 7080 	and.w	r0, r7, #256	; 0x100
 8011e2c:	7a97      	ldrb	r7, [r2, #10]
 8011e2e:	4629      	mov	r1, r5
 8011e30:	4307      	orrs	r7, r0
 8011e32:	4630      	mov	r0, r6
 8011e34:	4798      	blx	r3
 8011e36:	4438      	add	r0, r7
 8011e38:	4480      	add	r8, r0
 8011e3a:	fa1f f888 	uxth.w	r8, r8
 8011e3e:	e7e5      	b.n	8011e0c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

08011e40 <_ZNK8touchgfx4Font12getCharWidthEt>:
 8011e40:	b508      	push	{r3, lr}
 8011e42:	6803      	ldr	r3, [r0, #0]
 8011e44:	68db      	ldr	r3, [r3, #12]
 8011e46:	4798      	blx	r3
 8011e48:	b128      	cbz	r0, 8011e56 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 8011e4a:	7b43      	ldrb	r3, [r0, #13]
 8011e4c:	7a80      	ldrb	r0, [r0, #10]
 8011e4e:	005b      	lsls	r3, r3, #1
 8011e50:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8011e54:	4318      	orrs	r0, r3
 8011e56:	bd08      	pop	{r3, pc}

08011e58 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 8011e58:	b40e      	push	{r1, r2, r3}
 8011e5a:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011e5c:	b09e      	sub	sp, #120	; 0x78
 8011e5e:	ab23      	add	r3, sp, #140	; 0x8c
 8011e60:	4605      	mov	r5, r0
 8011e62:	f853 4b04 	ldr.w	r4, [r3], #4
 8011e66:	9303      	str	r3, [sp, #12]
 8011e68:	a805      	add	r0, sp, #20
 8011e6a:	f000 fe08 	bl	8012a7e <_ZN8touchgfx12TextProviderC1Ev>
 8011e6e:	682b      	ldr	r3, [r5, #0]
 8011e70:	4628      	mov	r0, r5
 8011e72:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8011e74:	4798      	blx	r3
 8011e76:	682b      	ldr	r3, [r5, #0]
 8011e78:	4606      	mov	r6, r0
 8011e7a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8011e7c:	4628      	mov	r0, r5
 8011e7e:	4798      	blx	r3
 8011e80:	4633      	mov	r3, r6
 8011e82:	ae1e      	add	r6, sp, #120	; 0x78
 8011e84:	4621      	mov	r1, r4
 8011e86:	9000      	str	r0, [sp, #0]
 8011e88:	9a03      	ldr	r2, [sp, #12]
 8011e8a:	2400      	movs	r4, #0
 8011e8c:	a805      	add	r0, sp, #20
 8011e8e:	f000 fe51 	bl	8012b34 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8011e92:	f846 4d68 	str.w	r4, [r6, #-104]!
 8011e96:	462a      	mov	r2, r5
 8011e98:	4633      	mov	r3, r6
 8011e9a:	4621      	mov	r1, r4
 8011e9c:	a805      	add	r0, sp, #20
 8011e9e:	f001 f94b 	bl	8013138 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8011ea2:	b1f0      	cbz	r0, 8011ee2 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 8011ea4:	280a      	cmp	r0, #10
 8011ea6:	d018      	beq.n	8011eda <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8011ea8:	9f04      	ldr	r7, [sp, #16]
 8011eaa:	b1b7      	cbz	r7, 8011eda <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8011eac:	7b78      	ldrb	r0, [r7, #13]
 8011eae:	7a3b      	ldrb	r3, [r7, #8]
 8011eb0:	88aa      	ldrh	r2, [r5, #4]
 8011eb2:	00c1      	lsls	r1, r0, #3
 8011eb4:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8011eb8:	4319      	orrs	r1, r3
 8011eba:	0643      	lsls	r3, r0, #25
 8011ebc:	bf44      	itt	mi
 8011ebe:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 8011ec2:	b219      	sxthmi	r1, r3
 8011ec4:	0100      	lsls	r0, r0, #4
 8011ec6:	79fb      	ldrb	r3, [r7, #7]
 8011ec8:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8011ecc:	4303      	orrs	r3, r0
 8011ece:	4413      	add	r3, r2
 8011ed0:	1a5b      	subs	r3, r3, r1
 8011ed2:	b29b      	uxth	r3, r3
 8011ed4:	42a3      	cmp	r3, r4
 8011ed6:	bfc8      	it	gt
 8011ed8:	b21c      	sxthgt	r4, r3
 8011eda:	4633      	mov	r3, r6
 8011edc:	462a      	mov	r2, r5
 8011ede:	2100      	movs	r1, #0
 8011ee0:	e7dc      	b.n	8011e9c <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 8011ee2:	b2a0      	uxth	r0, r4
 8011ee4:	b01e      	add	sp, #120	; 0x78
 8011ee6:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8011eea:	b003      	add	sp, #12
 8011eec:	4770      	bx	lr

08011eee <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 8011eee:	b40e      	push	{r1, r2, r3}
 8011ef0:	b570      	push	{r4, r5, r6, lr}
 8011ef2:	b09d      	sub	sp, #116	; 0x74
 8011ef4:	ab21      	add	r3, sp, #132	; 0x84
 8011ef6:	4604      	mov	r4, r0
 8011ef8:	f853 5b04 	ldr.w	r5, [r3], #4
 8011efc:	9302      	str	r3, [sp, #8]
 8011efe:	a803      	add	r0, sp, #12
 8011f00:	f000 fdbd 	bl	8012a7e <_ZN8touchgfx12TextProviderC1Ev>
 8011f04:	6823      	ldr	r3, [r4, #0]
 8011f06:	4620      	mov	r0, r4
 8011f08:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8011f0a:	4798      	blx	r3
 8011f0c:	6823      	ldr	r3, [r4, #0]
 8011f0e:	4606      	mov	r6, r0
 8011f10:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8011f12:	4620      	mov	r0, r4
 8011f14:	4798      	blx	r3
 8011f16:	4633      	mov	r3, r6
 8011f18:	9000      	str	r0, [sp, #0]
 8011f1a:	9a02      	ldr	r2, [sp, #8]
 8011f1c:	4629      	mov	r1, r5
 8011f1e:	a803      	add	r0, sp, #12
 8011f20:	f000 fe08 	bl	8012b34 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8011f24:	a803      	add	r0, sp, #12
 8011f26:	f001 f9d5 	bl	80132d4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8011f2a:	2401      	movs	r4, #1
 8011f2c:	b2a3      	uxth	r3, r4
 8011f2e:	b140      	cbz	r0, 8011f42 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 8011f30:	280a      	cmp	r0, #10
 8011f32:	bf08      	it	eq
 8011f34:	3301      	addeq	r3, #1
 8011f36:	a803      	add	r0, sp, #12
 8011f38:	bf08      	it	eq
 8011f3a:	b21c      	sxtheq	r4, r3
 8011f3c:	f001 f9ca 	bl	80132d4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8011f40:	e7f4      	b.n	8011f2c <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 8011f42:	4618      	mov	r0, r3
 8011f44:	b01d      	add	sp, #116	; 0x74
 8011f46:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011f4a:	b003      	add	sp, #12
 8011f4c:	4770      	bx	lr

08011f4e <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 8011f4e:	b40e      	push	{r1, r2, r3}
 8011f50:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011f52:	b09e      	sub	sp, #120	; 0x78
 8011f54:	ab23      	add	r3, sp, #140	; 0x8c
 8011f56:	4604      	mov	r4, r0
 8011f58:	f853 5b04 	ldr.w	r5, [r3], #4
 8011f5c:	9303      	str	r3, [sp, #12]
 8011f5e:	a805      	add	r0, sp, #20
 8011f60:	f000 fd8d 	bl	8012a7e <_ZN8touchgfx12TextProviderC1Ev>
 8011f64:	6823      	ldr	r3, [r4, #0]
 8011f66:	4620      	mov	r0, r4
 8011f68:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8011f6a:	4798      	blx	r3
 8011f6c:	6823      	ldr	r3, [r4, #0]
 8011f6e:	4606      	mov	r6, r0
 8011f70:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8011f72:	4620      	mov	r0, r4
 8011f74:	4798      	blx	r3
 8011f76:	4633      	mov	r3, r6
 8011f78:	4629      	mov	r1, r5
 8011f7a:	9000      	str	r0, [sp, #0]
 8011f7c:	9a03      	ldr	r2, [sp, #12]
 8011f7e:	a805      	add	r0, sp, #20
 8011f80:	ad1e      	add	r5, sp, #120	; 0x78
 8011f82:	f000 fdd7 	bl	8012b34 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8011f86:	2100      	movs	r1, #0
 8011f88:	f845 1d68 	str.w	r1, [r5, #-104]!
 8011f8c:	4622      	mov	r2, r4
 8011f8e:	462b      	mov	r3, r5
 8011f90:	a805      	add	r0, sp, #20
 8011f92:	f001 f8d1 	bl	8013138 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8011f96:	26ff      	movs	r6, #255	; 0xff
 8011f98:	b1d8      	cbz	r0, 8011fd2 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x84>
 8011f9a:	280a      	cmp	r0, #10
 8011f9c:	d012      	beq.n	8011fc4 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 8011f9e:	9804      	ldr	r0, [sp, #16]
 8011fa0:	b180      	cbz	r0, 8011fc4 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 8011fa2:	7b47      	ldrb	r7, [r0, #13]
 8011fa4:	7922      	ldrb	r2, [r4, #4]
 8011fa6:	00fb      	lsls	r3, r7, #3
 8011fa8:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8011fac:	7a03      	ldrb	r3, [r0, #8]
 8011fae:	430b      	orrs	r3, r1
 8011fb0:	0679      	lsls	r1, r7, #25
 8011fb2:	bf44      	itt	mi
 8011fb4:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8011fb8:	b21b      	sxthmi	r3, r3
 8011fba:	1ad3      	subs	r3, r2, r3
 8011fbc:	b2db      	uxtb	r3, r3
 8011fbe:	429e      	cmp	r6, r3
 8011fc0:	bf28      	it	cs
 8011fc2:	461e      	movcs	r6, r3
 8011fc4:	462b      	mov	r3, r5
 8011fc6:	4622      	mov	r2, r4
 8011fc8:	2100      	movs	r1, #0
 8011fca:	a805      	add	r0, sp, #20
 8011fcc:	f001 f8b4 	bl	8013138 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8011fd0:	e7e2      	b.n	8011f98 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4a>
 8011fd2:	4630      	mov	r0, r6
 8011fd4:	b01e      	add	sp, #120	; 0x78
 8011fd6:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8011fda:	b003      	add	sp, #12
 8011fdc:	4770      	bx	lr

08011fde <_ZNK8touchgfx8Drawable10invalidateEv>:
 8011fde:	b513      	push	{r0, r1, r4, lr}
 8011fe0:	6803      	ldr	r3, [r0, #0]
 8011fe2:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8011fe6:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8011fea:	f8ad 1004 	strh.w	r1, [sp, #4]
 8011fee:	2400      	movs	r4, #0
 8011ff0:	9400      	str	r4, [sp, #0]
 8011ff2:	f8ad 2006 	strh.w	r2, [sp, #6]
 8011ff6:	691b      	ldr	r3, [r3, #16]
 8011ff8:	4669      	mov	r1, sp
 8011ffa:	4798      	blx	r3
 8011ffc:	b002      	add	sp, #8
 8011ffe:	bd10      	pop	{r4, pc}

08012000 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 8012000:	b538      	push	{r3, r4, r5, lr}
 8012002:	680b      	ldr	r3, [r1, #0]
 8012004:	460c      	mov	r4, r1
 8012006:	68db      	ldr	r3, [r3, #12]
 8012008:	4605      	mov	r5, r0
 801200a:	4798      	blx	r3
 801200c:	6823      	ldr	r3, [r4, #0]
 801200e:	4620      	mov	r0, r4
 8012010:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012012:	4629      	mov	r1, r5
 8012014:	4798      	blx	r3
 8012016:	4628      	mov	r0, r5
 8012018:	bd38      	pop	{r3, r4, r5, pc}

0801201a <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 801201a:	b410      	push	{r4}
 801201c:	880a      	ldrh	r2, [r1, #0]
 801201e:	8884      	ldrh	r4, [r0, #4]
 8012020:	4422      	add	r2, r4
 8012022:	800a      	strh	r2, [r1, #0]
 8012024:	88c4      	ldrh	r4, [r0, #6]
 8012026:	884a      	ldrh	r2, [r1, #2]
 8012028:	4422      	add	r2, r4
 801202a:	804a      	strh	r2, [r1, #2]
 801202c:	6940      	ldr	r0, [r0, #20]
 801202e:	b120      	cbz	r0, 801203a <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 8012030:	6803      	ldr	r3, [r0, #0]
 8012032:	f85d 4b04 	ldr.w	r4, [sp], #4
 8012036:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012038:	4718      	bx	r3
 801203a:	f85d 4b04 	ldr.w	r4, [sp], #4
 801203e:	4770      	bx	lr

08012040 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 8012040:	b570      	push	{r4, r5, r6, lr}
 8012042:	8882      	ldrh	r2, [r0, #4]
 8012044:	880b      	ldrh	r3, [r1, #0]
 8012046:	4413      	add	r3, r2
 8012048:	800b      	strh	r3, [r1, #0]
 801204a:	88c2      	ldrh	r2, [r0, #6]
 801204c:	884b      	ldrh	r3, [r1, #2]
 801204e:	460c      	mov	r4, r1
 8012050:	4413      	add	r3, r2
 8012052:	804b      	strh	r3, [r1, #2]
 8012054:	4605      	mov	r5, r0
 8012056:	1d01      	adds	r1, r0, #4
 8012058:	4620      	mov	r0, r4
 801205a:	f7f8 fe97 	bl	800ad8c <_ZN8touchgfx4RectaNERKS0_>
 801205e:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8012062:	2b00      	cmp	r3, #0
 8012064:	dd0b      	ble.n	801207e <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8012066:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801206a:	2b00      	cmp	r3, #0
 801206c:	dd07      	ble.n	801207e <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 801206e:	6968      	ldr	r0, [r5, #20]
 8012070:	b128      	cbz	r0, 801207e <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8012072:	6803      	ldr	r3, [r0, #0]
 8012074:	4621      	mov	r1, r4
 8012076:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012078:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801207c:	4718      	bx	r3
 801207e:	bd70      	pop	{r4, r5, r6, pc}

08012080 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8012080:	b570      	push	{r4, r5, r6, lr}
 8012082:	8882      	ldrh	r2, [r0, #4]
 8012084:	880b      	ldrh	r3, [r1, #0]
 8012086:	4413      	add	r3, r2
 8012088:	800b      	strh	r3, [r1, #0]
 801208a:	88c2      	ldrh	r2, [r0, #6]
 801208c:	884b      	ldrh	r3, [r1, #2]
 801208e:	460c      	mov	r4, r1
 8012090:	4413      	add	r3, r2
 8012092:	804b      	strh	r3, [r1, #2]
 8012094:	4605      	mov	r5, r0
 8012096:	1d01      	adds	r1, r0, #4
 8012098:	4620      	mov	r0, r4
 801209a:	f7f8 fe77 	bl	800ad8c <_ZN8touchgfx4RectaNERKS0_>
 801209e:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 80120a2:	2b00      	cmp	r3, #0
 80120a4:	dd18      	ble.n	80120d8 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 80120a6:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80120aa:	2b00      	cmp	r3, #0
 80120ac:	dd14      	ble.n	80120d8 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 80120ae:	6968      	ldr	r0, [r5, #20]
 80120b0:	b128      	cbz	r0, 80120be <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 80120b2:	6803      	ldr	r3, [r0, #0]
 80120b4:	4621      	mov	r1, r4
 80120b6:	691b      	ldr	r3, [r3, #16]
 80120b8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80120bc:	4718      	bx	r3
 80120be:	4b07      	ldr	r3, [pc, #28]	; (80120dc <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 80120c0:	681b      	ldr	r3, [r3, #0]
 80120c2:	3304      	adds	r3, #4
 80120c4:	429d      	cmp	r5, r3
 80120c6:	d107      	bne.n	80120d8 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 80120c8:	f7fe fff2 	bl	80110b0 <_ZN8touchgfx11Application11getInstanceEv>
 80120cc:	6821      	ldr	r1, [r4, #0]
 80120ce:	6862      	ldr	r2, [r4, #4]
 80120d0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80120d4:	f7ff b862 	b.w	801119c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 80120d8:	bd70      	pop	{r4, r5, r6, pc}
 80120da:	bf00      	nop
 80120dc:	200155fc 	.word	0x200155fc

080120e0 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 80120e0:	b570      	push	{r4, r5, r6, lr}
 80120e2:	4604      	mov	r4, r0
 80120e4:	4616      	mov	r6, r2
 80120e6:	460d      	mov	r5, r1
 80120e8:	b901      	cbnz	r1, 80120ec <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 80120ea:	b192      	cbz	r2, 8012112 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 80120ec:	6823      	ldr	r3, [r4, #0]
 80120ee:	4620      	mov	r0, r4
 80120f0:	699b      	ldr	r3, [r3, #24]
 80120f2:	4798      	blx	r3
 80120f4:	88e2      	ldrh	r2, [r4, #6]
 80120f6:	88a1      	ldrh	r1, [r4, #4]
 80120f8:	4432      	add	r2, r6
 80120fa:	4429      	add	r1, r5
 80120fc:	4620      	mov	r0, r4
 80120fe:	b212      	sxth	r2, r2
 8012100:	b209      	sxth	r1, r1
 8012102:	f7f0 fda7 	bl	8002c54 <_ZN8touchgfx8Drawable5setXYEss>
 8012106:	6823      	ldr	r3, [r4, #0]
 8012108:	4620      	mov	r0, r4
 801210a:	699b      	ldr	r3, [r3, #24]
 801210c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012110:	4718      	bx	r3
 8012112:	bd70      	pop	{r4, r5, r6, pc}

08012114 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 8012114:	b510      	push	{r4, lr}
 8012116:	4604      	mov	r4, r0
 8012118:	4608      	mov	r0, r1
 801211a:	2300      	movs	r3, #0
 801211c:	8023      	strh	r3, [r4, #0]
 801211e:	8063      	strh	r3, [r4, #2]
 8012120:	6803      	ldr	r3, [r0, #0]
 8012122:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8012126:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 801212a:	80a1      	strh	r1, [r4, #4]
 801212c:	80e2      	strh	r2, [r4, #6]
 801212e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012130:	4621      	mov	r1, r4
 8012132:	4798      	blx	r3
 8012134:	4620      	mov	r0, r4
 8012136:	bd10      	pop	{r4, pc}

08012138 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>:
 8012138:	b530      	push	{r4, r5, lr}
 801213a:	8083      	strh	r3, [r0, #4]
 801213c:	f89d 300c 	ldrb.w	r3, [sp, #12]
 8012140:	f89d 5010 	ldrb.w	r5, [sp, #16]
 8012144:	7183      	strb	r3, [r0, #6]
 8012146:	79c3      	ldrb	r3, [r0, #7]
 8012148:	6101      	str	r1, [r0, #16]
 801214a:	f365 0306 	bfi	r3, r5, #0, #7
 801214e:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8012152:	8282      	strh	r2, [r0, #20]
 8012154:	f365 13c7 	bfi	r3, r5, #7, #1
 8012158:	71c3      	strb	r3, [r0, #7]
 801215a:	f89d 3018 	ldrb.w	r3, [sp, #24]
 801215e:	7203      	strb	r3, [r0, #8]
 8012160:	f89d 301c 	ldrb.w	r3, [sp, #28]
 8012164:	7243      	strb	r3, [r0, #9]
 8012166:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 801216a:	8143      	strh	r3, [r0, #10]
 801216c:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 8012170:	8183      	strh	r3, [r0, #12]
 8012172:	4b01      	ldr	r3, [pc, #4]	; (8012178 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt+0x40>)
 8012174:	6003      	str	r3, [r0, #0]
 8012176:	bd30      	pop	{r4, r5, pc}
 8012178:	08024354 	.word	0x08024354

0801217c <_ZNK8touchgfx9ConstFont4findEt>:
 801217c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801217e:	6904      	ldr	r4, [r0, #16]
 8012180:	b3bc      	cbz	r4, 80121f2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8012182:	88a3      	ldrh	r3, [r4, #4]
 8012184:	8a82      	ldrh	r2, [r0, #20]
 8012186:	1acb      	subs	r3, r1, r3
 8012188:	f102 32ff 	add.w	r2, r2, #4294967295
 801218c:	d431      	bmi.n	80121f2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801218e:	4293      	cmp	r3, r2
 8012190:	dd0c      	ble.n	80121ac <_ZNK8touchgfx9ConstFont4findEt+0x30>
 8012192:	230e      	movs	r3, #14
 8012194:	fb03 4302 	mla	r3, r3, r2, r4
 8012198:	889b      	ldrh	r3, [r3, #4]
 801219a:	1a5b      	subs	r3, r3, r1
 801219c:	1ad3      	subs	r3, r2, r3
 801219e:	429a      	cmp	r2, r3
 80121a0:	db27      	blt.n	80121f2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80121a2:	2b00      	cmp	r3, #0
 80121a4:	bfbc      	itt	lt
 80121a6:	2302      	movlt	r3, #2
 80121a8:	fb92 f3f3 	sdivlt	r3, r2, r3
 80121ac:	2500      	movs	r5, #0
 80121ae:	260e      	movs	r6, #14
 80121b0:	4295      	cmp	r5, r2
 80121b2:	dc1e      	bgt.n	80121f2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80121b4:	fb06 4003 	mla	r0, r6, r3, r4
 80121b8:	8887      	ldrh	r7, [r0, #4]
 80121ba:	42b9      	cmp	r1, r7
 80121bc:	d01a      	beq.n	80121f4 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 80121be:	d20d      	bcs.n	80121dc <_ZNK8touchgfx9ConstFont4findEt+0x60>
 80121c0:	1e5a      	subs	r2, r3, #1
 80121c2:	4295      	cmp	r5, r2
 80121c4:	dc15      	bgt.n	80121f2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80121c6:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 80121ca:	1a5b      	subs	r3, r3, r1
 80121cc:	1ad3      	subs	r3, r2, r3
 80121ce:	429a      	cmp	r2, r3
 80121d0:	db0f      	blt.n	80121f2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80121d2:	429d      	cmp	r5, r3
 80121d4:	ddec      	ble.n	80121b0 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80121d6:	1953      	adds	r3, r2, r5
 80121d8:	105b      	asrs	r3, r3, #1
 80121da:	e7e9      	b.n	80121b0 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80121dc:	1c5d      	adds	r5, r3, #1
 80121de:	42aa      	cmp	r2, r5
 80121e0:	db07      	blt.n	80121f2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80121e2:	8a43      	ldrh	r3, [r0, #18]
 80121e4:	1acb      	subs	r3, r1, r3
 80121e6:	442b      	add	r3, r5
 80121e8:	429d      	cmp	r5, r3
 80121ea:	dc02      	bgt.n	80121f2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80121ec:	429a      	cmp	r2, r3
 80121ee:	dadf      	bge.n	80121b0 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80121f0:	e7f1      	b.n	80121d6 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 80121f2:	2000      	movs	r0, #0
 80121f4:	bdf0      	pop	{r4, r5, r6, r7, pc}

080121f6 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 80121f6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80121f8:	4604      	mov	r4, r0
 80121fa:	4617      	mov	r7, r2
 80121fc:	461e      	mov	r6, r3
 80121fe:	b911      	cbnz	r1, 8012206 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 8012200:	2500      	movs	r5, #0
 8012202:	4628      	mov	r0, r5
 8012204:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8012206:	290a      	cmp	r1, #10
 8012208:	d0fa      	beq.n	8012200 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801220a:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 801220e:	4291      	cmp	r1, r2
 8012210:	d0f6      	beq.n	8012200 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8012212:	f242 020b 	movw	r2, #8203	; 0x200b
 8012216:	4291      	cmp	r1, r2
 8012218:	d0f2      	beq.n	8012200 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801221a:	f7ff ffaf 	bl	801217c <_ZNK8touchgfx9ConstFont4findEt>
 801221e:	4605      	mov	r5, r0
 8012220:	b950      	cbnz	r0, 8012238 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 8012222:	6823      	ldr	r3, [r4, #0]
 8012224:	4620      	mov	r0, r4
 8012226:	691b      	ldr	r3, [r3, #16]
 8012228:	4798      	blx	r3
 801222a:	4601      	mov	r1, r0
 801222c:	4620      	mov	r0, r4
 801222e:	f7ff ffa5 	bl	801217c <_ZNK8touchgfx9ConstFont4findEt>
 8012232:	4605      	mov	r5, r0
 8012234:	2800      	cmp	r0, #0
 8012236:	d0e3      	beq.n	8012200 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8012238:	6823      	ldr	r3, [r4, #0]
 801223a:	4629      	mov	r1, r5
 801223c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801223e:	4620      	mov	r0, r4
 8012240:	4798      	blx	r3
 8012242:	6038      	str	r0, [r7, #0]
 8012244:	6823      	ldr	r3, [r4, #0]
 8012246:	4620      	mov	r0, r4
 8012248:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801224a:	4798      	blx	r3
 801224c:	7030      	strb	r0, [r6, #0]
 801224e:	e7d8      	b.n	8012202 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

08012250 <_ZN8touchgfx4clzuEm>:
 8012250:	4603      	mov	r3, r0
 8012252:	b1c8      	cbz	r0, 8012288 <_ZN8touchgfx4clzuEm+0x38>
 8012254:	0c02      	lsrs	r2, r0, #16
 8012256:	0412      	lsls	r2, r2, #16
 8012258:	b9a2      	cbnz	r2, 8012284 <_ZN8touchgfx4clzuEm+0x34>
 801225a:	0403      	lsls	r3, r0, #16
 801225c:	2010      	movs	r0, #16
 801225e:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8012262:	bf04      	itt	eq
 8012264:	021b      	lsleq	r3, r3, #8
 8012266:	3008      	addeq	r0, #8
 8012268:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 801226c:	bf04      	itt	eq
 801226e:	011b      	lsleq	r3, r3, #4
 8012270:	3004      	addeq	r0, #4
 8012272:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8012276:	bf04      	itt	eq
 8012278:	009b      	lsleq	r3, r3, #2
 801227a:	3002      	addeq	r0, #2
 801227c:	2b00      	cmp	r3, #0
 801227e:	db04      	blt.n	801228a <_ZN8touchgfx4clzuEm+0x3a>
 8012280:	3001      	adds	r0, #1
 8012282:	4770      	bx	lr
 8012284:	2000      	movs	r0, #0
 8012286:	e7ea      	b.n	801225e <_ZN8touchgfx4clzuEm+0xe>
 8012288:	2020      	movs	r0, #32
 801228a:	4770      	bx	lr

0801228c <_ZN8touchgfx7muldivuEmmmRm>:
 801228c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012290:	4680      	mov	r8, r0
 8012292:	460f      	mov	r7, r1
 8012294:	4615      	mov	r5, r2
 8012296:	461e      	mov	r6, r3
 8012298:	f7ff ffda 	bl	8012250 <_ZN8touchgfx4clzuEm>
 801229c:	b998      	cbnz	r0, 80122c6 <_ZN8touchgfx7muldivuEmmmRm+0x3a>
 801229e:	4608      	mov	r0, r1
 80122a0:	f7ff ffd6 	bl	8012250 <_ZN8touchgfx4clzuEm>
 80122a4:	2800      	cmp	r0, #0
 80122a6:	dd08      	ble.n	80122ba <_ZN8touchgfx7muldivuEmmmRm+0x2e>
 80122a8:	4633      	mov	r3, r6
 80122aa:	462a      	mov	r2, r5
 80122ac:	4641      	mov	r1, r8
 80122ae:	4638      	mov	r0, r7
 80122b0:	f7ff ffec 	bl	801228c <_ZN8touchgfx7muldivuEmmmRm>
 80122b4:	b003      	add	sp, #12
 80122b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80122ba:	f04f 33ff 	mov.w	r3, #4294967295
 80122be:	6033      	str	r3, [r6, #0]
 80122c0:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 80122c4:	e7f6      	b.n	80122b4 <_ZN8touchgfx7muldivuEmmmRm+0x28>
 80122c6:	fa31 f900 	lsrs.w	r9, r1, r0
 80122ca:	fb01 f308 	mul.w	r3, r1, r8
 80122ce:	d105      	bne.n	80122dc <_ZN8touchgfx7muldivuEmmmRm+0x50>
 80122d0:	fbb3 f0f5 	udiv	r0, r3, r5
 80122d4:	fb05 3510 	mls	r5, r5, r0, r3
 80122d8:	6035      	str	r5, [r6, #0]
 80122da:	e7eb      	b.n	80122b4 <_ZN8touchgfx7muldivuEmmmRm+0x28>
 80122dc:	2301      	movs	r3, #1
 80122de:	fa08 fb00 	lsl.w	fp, r8, r0
 80122e2:	fa03 f000 	lsl.w	r0, r3, r0
 80122e6:	3801      	subs	r0, #1
 80122e8:	462a      	mov	r2, r5
 80122ea:	4633      	mov	r3, r6
 80122ec:	4641      	mov	r1, r8
 80122ee:	4038      	ands	r0, r7
 80122f0:	f7ff ffcc 	bl	801228c <_ZN8touchgfx7muldivuEmmmRm>
 80122f4:	fbbb faf5 	udiv	sl, fp, r5
 80122f8:	462a      	mov	r2, r5
 80122fa:	4607      	mov	r7, r0
 80122fc:	ab01      	add	r3, sp, #4
 80122fe:	fb05 b11a 	mls	r1, r5, sl, fp
 8012302:	4648      	mov	r0, r9
 8012304:	f7ff ffc2 	bl	801228c <_ZN8touchgfx7muldivuEmmmRm>
 8012308:	9b01      	ldr	r3, [sp, #4]
 801230a:	6832      	ldr	r2, [r6, #0]
 801230c:	fb09 f40a 	mul.w	r4, r9, sl
 8012310:	441a      	add	r2, r3
 8012312:	fbb2 f3f5 	udiv	r3, r2, r5
 8012316:	441c      	add	r4, r3
 8012318:	443c      	add	r4, r7
 801231a:	4420      	add	r0, r4
 801231c:	fb05 2513 	mls	r5, r5, r3, r2
 8012320:	e7da      	b.n	80122d8 <_ZN8touchgfx7muldivuEmmmRm+0x4c>

08012322 <_ZN8touchgfx6muldivElllRl>:
 8012322:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8012324:	2800      	cmp	r0, #0
 8012326:	bfba      	itte	lt
 8012328:	4240      	neglt	r0, r0
 801232a:	f04f 34ff 	movlt.w	r4, #4294967295
 801232e:	2401      	movge	r4, #1
 8012330:	2900      	cmp	r1, #0
 8012332:	bfbc      	itt	lt
 8012334:	4249      	neglt	r1, r1
 8012336:	4264      	neglt	r4, r4
 8012338:	2a00      	cmp	r2, #0
 801233a:	bfb6      	itet	lt
 801233c:	4265      	neglt	r5, r4
 801233e:	4625      	movge	r5, r4
 8012340:	4252      	neglt	r2, r2
 8012342:	4288      	cmp	r0, r1
 8012344:	461e      	mov	r6, r3
 8012346:	bfc2      	ittt	gt
 8012348:	4603      	movgt	r3, r0
 801234a:	4608      	movgt	r0, r1
 801234c:	4619      	movgt	r1, r3
 801234e:	ab01      	add	r3, sp, #4
 8012350:	f7ff ff9c 	bl	801228c <_ZN8touchgfx7muldivuEmmmRm>
 8012354:	9b01      	ldr	r3, [sp, #4]
 8012356:	4368      	muls	r0, r5
 8012358:	435c      	muls	r4, r3
 801235a:	6034      	str	r4, [r6, #0]
 801235c:	b002      	add	sp, #8
 801235e:	bd70      	pop	{r4, r5, r6, pc}

08012360 <_ZN8touchgfx6muldivElll>:
 8012360:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8012362:	4606      	mov	r6, r0
 8012364:	ab01      	add	r3, sp, #4
 8012366:	460d      	mov	r5, r1
 8012368:	4614      	mov	r4, r2
 801236a:	f7ff ffda 	bl	8012322 <_ZN8touchgfx6muldivElllRl>
 801236e:	2e00      	cmp	r6, #0
 8012370:	db20      	blt.n	80123b4 <_ZN8touchgfx6muldivElll+0x54>
 8012372:	bf14      	ite	ne
 8012374:	2301      	movne	r3, #1
 8012376:	2300      	moveq	r3, #0
 8012378:	2d00      	cmp	r5, #0
 801237a:	db1e      	blt.n	80123ba <_ZN8touchgfx6muldivElll+0x5a>
 801237c:	bf14      	ite	ne
 801237e:	2201      	movne	r2, #1
 8012380:	2200      	moveq	r2, #0
 8012382:	2c00      	cmp	r4, #0
 8012384:	fb03 f202 	mul.w	r2, r3, r2
 8012388:	db1a      	blt.n	80123c0 <_ZN8touchgfx6muldivElll+0x60>
 801238a:	bf14      	ite	ne
 801238c:	2301      	movne	r3, #1
 801238e:	2300      	moveq	r3, #0
 8012390:	4353      	muls	r3, r2
 8012392:	2b01      	cmp	r3, #1
 8012394:	d117      	bne.n	80123c6 <_ZN8touchgfx6muldivElll+0x66>
 8012396:	9b01      	ldr	r3, [sp, #4]
 8012398:	2c00      	cmp	r4, #0
 801239a:	bfb8      	it	lt
 801239c:	4264      	neglt	r4, r4
 801239e:	2b00      	cmp	r3, #0
 80123a0:	f104 0401 	add.w	r4, r4, #1
 80123a4:	bfb8      	it	lt
 80123a6:	425b      	neglt	r3, r3
 80123a8:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 80123ac:	db00      	blt.n	80123b0 <_ZN8touchgfx6muldivElll+0x50>
 80123ae:	3001      	adds	r0, #1
 80123b0:	b002      	add	sp, #8
 80123b2:	bd70      	pop	{r4, r5, r6, pc}
 80123b4:	f04f 33ff 	mov.w	r3, #4294967295
 80123b8:	e7de      	b.n	8012378 <_ZN8touchgfx6muldivElll+0x18>
 80123ba:	f04f 32ff 	mov.w	r2, #4294967295
 80123be:	e7e0      	b.n	8012382 <_ZN8touchgfx6muldivElll+0x22>
 80123c0:	f04f 33ff 	mov.w	r3, #4294967295
 80123c4:	e7e4      	b.n	8012390 <_ZN8touchgfx6muldivElll+0x30>
 80123c6:	3301      	adds	r3, #1
 80123c8:	d1f2      	bne.n	80123b0 <_ZN8touchgfx6muldivElll+0x50>
 80123ca:	9b01      	ldr	r3, [sp, #4]
 80123cc:	2c00      	cmp	r4, #0
 80123ce:	bfb8      	it	lt
 80123d0:	4264      	neglt	r4, r4
 80123d2:	2b00      	cmp	r3, #0
 80123d4:	bfb8      	it	lt
 80123d6:	425b      	neglt	r3, r3
 80123d8:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 80123dc:	bfc8      	it	gt
 80123de:	f100 30ff 	addgt.w	r0, r0, #4294967295
 80123e2:	e7e5      	b.n	80123b0 <_ZN8touchgfx6muldivElll+0x50>

080123e4 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 80123e4:	2000      	movs	r0, #0
 80123e6:	4770      	bx	lr

080123e8 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 80123e8:	2001      	movs	r0, #1
 80123ea:	4770      	bx	lr

080123ec <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 80123ec:	2002      	movs	r0, #2
 80123ee:	4770      	bx	lr

080123f0 <_ZN8touchgfx6ScreenD1Ev>:
 80123f0:	4770      	bx	lr

080123f2 <_ZN8touchgfx12GestureEventD1Ev>:
 80123f2:	4770      	bx	lr

080123f4 <_ZN8touchgfx9DragEventD1Ev>:
 80123f4:	4770      	bx	lr

080123f6 <_ZN8touchgfx10ClickEventD1Ev>:
 80123f6:	4770      	bx	lr

080123f8 <_ZN8touchgfx10ClickEventD0Ev>:
 80123f8:	b510      	push	{r4, lr}
 80123fa:	210c      	movs	r1, #12
 80123fc:	4604      	mov	r4, r0
 80123fe:	f00e f973 	bl	80206e8 <_ZdlPvj>
 8012402:	4620      	mov	r0, r4
 8012404:	bd10      	pop	{r4, pc}

08012406 <_ZN8touchgfx9DragEventD0Ev>:
 8012406:	b510      	push	{r4, lr}
 8012408:	2110      	movs	r1, #16
 801240a:	4604      	mov	r4, r0
 801240c:	f00e f96c 	bl	80206e8 <_ZdlPvj>
 8012410:	4620      	mov	r0, r4
 8012412:	bd10      	pop	{r4, pc}

08012414 <_ZN8touchgfx12GestureEventD0Ev>:
 8012414:	b510      	push	{r4, lr}
 8012416:	210c      	movs	r1, #12
 8012418:	4604      	mov	r4, r0
 801241a:	f00e f965 	bl	80206e8 <_ZdlPvj>
 801241e:	4620      	mov	r0, r4
 8012420:	bd10      	pop	{r4, pc}

08012422 <_ZN8touchgfx6ScreenD0Ev>:
 8012422:	b510      	push	{r4, lr}
 8012424:	213c      	movs	r1, #60	; 0x3c
 8012426:	4604      	mov	r4, r0
 8012428:	f00e f95e 	bl	80206e8 <_ZdlPvj>
 801242c:	4620      	mov	r0, r4
 801242e:	bd10      	pop	{r4, pc}

08012430 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 8012430:	b530      	push	{r4, r5, lr}
 8012432:	460d      	mov	r5, r1
 8012434:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8012436:	b087      	sub	sp, #28
 8012438:	4604      	mov	r4, r0
 801243a:	b301      	cbz	r1, 801247e <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 801243c:	a801      	add	r0, sp, #4
 801243e:	f7ff fe69 	bl	8012114 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012442:	892a      	ldrh	r2, [r5, #8]
 8012444:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8012448:	7928      	ldrb	r0, [r5, #4]
 801244a:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 801244e:	f88d 0010 	strb.w	r0, [sp, #16]
 8012452:	1ad2      	subs	r2, r2, r3
 8012454:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8012456:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8012458:	f8ad 1012 	strh.w	r1, [sp, #18]
 801245c:	441a      	add	r2, r3
 801245e:	896b      	ldrh	r3, [r5, #10]
 8012460:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 8012464:	f8ad 2014 	strh.w	r2, [sp, #20]
 8012468:	1b5b      	subs	r3, r3, r5
 801246a:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 801246c:	442b      	add	r3, r5
 801246e:	4d05      	ldr	r5, [pc, #20]	; (8012484 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 8012470:	9503      	str	r5, [sp, #12]
 8012472:	f8ad 3016 	strh.w	r3, [sp, #22]
 8012476:	6803      	ldr	r3, [r0, #0]
 8012478:	a903      	add	r1, sp, #12
 801247a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801247c:	4798      	blx	r3
 801247e:	b007      	add	sp, #28
 8012480:	bd30      	pop	{r4, r5, pc}
 8012482:	bf00      	nop
 8012484:	080243d4 	.word	0x080243d4

08012488 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8012488:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801248c:	6b03      	ldr	r3, [r0, #48]	; 0x30
 801248e:	b08a      	sub	sp, #40	; 0x28
 8012490:	4604      	mov	r4, r0
 8012492:	460d      	mov	r5, r1
 8012494:	b113      	cbz	r3, 801249c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 8012496:	790b      	ldrb	r3, [r1, #4]
 8012498:	2b00      	cmp	r3, #0
 801249a:	d044      	beq.n	8012526 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801249c:	f104 0804 	add.w	r8, r4, #4
 80124a0:	4641      	mov	r1, r8
 80124a2:	a803      	add	r0, sp, #12
 80124a4:	f7ff fe36 	bl	8012114 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80124a8:	792b      	ldrb	r3, [r5, #4]
 80124aa:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 80124ae:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 80124b2:	b983      	cbnz	r3, 80124d6 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 80124b4:	892a      	ldrh	r2, [r5, #8]
 80124b6:	88e9      	ldrh	r1, [r5, #6]
 80124b8:	f104 0336 	add.w	r3, r4, #54	; 0x36
 80124bc:	1b92      	subs	r2, r2, r6
 80124be:	1bc9      	subs	r1, r1, r7
 80124c0:	9301      	str	r3, [sp, #4]
 80124c2:	f104 0334 	add.w	r3, r4, #52	; 0x34
 80124c6:	9300      	str	r3, [sp, #0]
 80124c8:	b212      	sxth	r2, r2
 80124ca:	f104 0330 	add.w	r3, r4, #48	; 0x30
 80124ce:	b209      	sxth	r1, r1
 80124d0:	4640      	mov	r0, r8
 80124d2:	f7f8 fb77 	bl	800abc4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 80124d6:	6b21      	ldr	r1, [r4, #48]	; 0x30
 80124d8:	b329      	cbz	r1, 8012526 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80124da:	a805      	add	r0, sp, #20
 80124dc:	f7ff fe1a 	bl	8012114 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80124e0:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 80124e4:	792b      	ldrb	r3, [r5, #4]
 80124e6:	6b20      	ldr	r0, [r4, #48]	; 0x30
 80124e8:	f88d 3020 	strb.w	r3, [sp, #32]
 80124ec:	1abf      	subs	r7, r7, r2
 80124ee:	88ea      	ldrh	r2, [r5, #6]
 80124f0:	4417      	add	r7, r2
 80124f2:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 80124f4:	4417      	add	r7, r2
 80124f6:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 80124fa:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 80124fe:	1ab6      	subs	r6, r6, r2
 8012500:	892a      	ldrh	r2, [r5, #8]
 8012502:	4416      	add	r6, r2
 8012504:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8012506:	4416      	add	r6, r2
 8012508:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 801250c:	4a07      	ldr	r2, [pc, #28]	; (801252c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 801250e:	9207      	str	r2, [sp, #28]
 8012510:	2600      	movs	r6, #0
 8012512:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 8012516:	6803      	ldr	r3, [r0, #0]
 8012518:	a907      	add	r1, sp, #28
 801251a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801251c:	4798      	blx	r3
 801251e:	792b      	ldrb	r3, [r5, #4]
 8012520:	b10b      	cbz	r3, 8012526 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8012522:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 8012526:	b00a      	add	sp, #40	; 0x28
 8012528:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801252c:	080243ac 	.word	0x080243ac

08012530 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 8012530:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012534:	460c      	mov	r4, r1
 8012536:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8012538:	b088      	sub	sp, #32
 801253a:	4605      	mov	r5, r0
 801253c:	2900      	cmp	r1, #0
 801253e:	d06d      	beq.n	801261c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 8012540:	4668      	mov	r0, sp
 8012542:	f7ff fde7 	bl	8012114 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012546:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 8012548:	88e3      	ldrh	r3, [r4, #6]
 801254a:	f9bd 8000 	ldrsh.w	r8, [sp]
 801254e:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 8012552:	440b      	add	r3, r1
 8012554:	b21b      	sxth	r3, r3
 8012556:	4543      	cmp	r3, r8
 8012558:	db31      	blt.n	80125be <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801255a:	f8bd c004 	ldrh.w	ip, [sp, #4]
 801255e:	44c4      	add	ip, r8
 8012560:	fa0f fc8c 	sxth.w	ip, ip
 8012564:	4563      	cmp	r3, ip
 8012566:	da2a      	bge.n	80125be <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8012568:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 801256a:	8926      	ldrh	r6, [r4, #8]
 801256c:	4416      	add	r6, r2
 801256e:	b236      	sxth	r6, r6
 8012570:	42be      	cmp	r6, r7
 8012572:	db24      	blt.n	80125be <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8012574:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8012578:	4438      	add	r0, r7
 801257a:	b200      	sxth	r0, r0
 801257c:	4286      	cmp	r6, r0
 801257e:	da1e      	bge.n	80125be <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8012580:	8963      	ldrh	r3, [r4, #10]
 8012582:	4419      	add	r1, r3
 8012584:	b209      	sxth	r1, r1
 8012586:	4541      	cmp	r1, r8
 8012588:	db08      	blt.n	801259c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801258a:	4561      	cmp	r1, ip
 801258c:	da06      	bge.n	801259c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801258e:	89a3      	ldrh	r3, [r4, #12]
 8012590:	441a      	add	r2, r3
 8012592:	b212      	sxth	r2, r2
 8012594:	42ba      	cmp	r2, r7
 8012596:	db01      	blt.n	801259c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8012598:	4282      	cmp	r2, r0
 801259a:	db10      	blt.n	80125be <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801259c:	4b21      	ldr	r3, [pc, #132]	; (8012624 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 801259e:	9304      	str	r3, [sp, #16]
 80125a0:	2302      	movs	r3, #2
 80125a2:	f88d 3014 	strb.w	r3, [sp, #20]
 80125a6:	6b28      	ldr	r0, [r5, #48]	; 0x30
 80125a8:	2300      	movs	r3, #0
 80125aa:	f8ad 3016 	strh.w	r3, [sp, #22]
 80125ae:	f8ad 3018 	strh.w	r3, [sp, #24]
 80125b2:	f8ad 301a 	strh.w	r3, [sp, #26]
 80125b6:	6803      	ldr	r3, [r0, #0]
 80125b8:	a904      	add	r1, sp, #16
 80125ba:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80125bc:	4798      	blx	r3
 80125be:	1d29      	adds	r1, r5, #4
 80125c0:	a802      	add	r0, sp, #8
 80125c2:	f7ff fda7 	bl	8012114 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80125c6:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 80125ca:	88e0      	ldrh	r0, [r4, #6]
 80125cc:	7921      	ldrb	r1, [r4, #4]
 80125ce:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 80125d2:	8922      	ldrh	r2, [r4, #8]
 80125d4:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 80125d6:	f88d 1014 	strb.w	r1, [sp, #20]
 80125da:	eba3 0808 	sub.w	r8, r3, r8
 80125de:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80125e2:	1bdf      	subs	r7, r3, r7
 80125e4:	b2bb      	uxth	r3, r7
 80125e6:	fa1f f888 	uxth.w	r8, r8
 80125ea:	8967      	ldrh	r7, [r4, #10]
 80125ec:	89a4      	ldrh	r4, [r4, #12]
 80125ee:	4440      	add	r0, r8
 80125f0:	4460      	add	r0, ip
 80125f2:	441a      	add	r2, r3
 80125f4:	44b8      	add	r8, r7
 80125f6:	4423      	add	r3, r4
 80125f8:	f8ad 0016 	strh.w	r0, [sp, #22]
 80125fc:	4433      	add	r3, r6
 80125fe:	4432      	add	r2, r6
 8012600:	44e0      	add	r8, ip
 8012602:	4c09      	ldr	r4, [pc, #36]	; (8012628 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 8012604:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8012606:	9404      	str	r4, [sp, #16]
 8012608:	f8ad 2018 	strh.w	r2, [sp, #24]
 801260c:	f8ad 801a 	strh.w	r8, [sp, #26]
 8012610:	f8ad 301c 	strh.w	r3, [sp, #28]
 8012614:	6803      	ldr	r3, [r0, #0]
 8012616:	a904      	add	r1, sp, #16
 8012618:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801261a:	4798      	blx	r3
 801261c:	b008      	add	sp, #32
 801261e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012622:	bf00      	nop
 8012624:	080243ac 	.word	0x080243ac
 8012628:	080243c0 	.word	0x080243c0

0801262c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 801262c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801262e:	4604      	mov	r4, r0
 8012630:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 8012634:	3201      	adds	r2, #1
 8012636:	d112      	bne.n	801265e <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 8012638:	6803      	ldr	r3, [r0, #0]
 801263a:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 801263e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8012642:	f8ad 1004 	strh.w	r1, [sp, #4]
 8012646:	2500      	movs	r5, #0
 8012648:	9500      	str	r5, [sp, #0]
 801264a:	466d      	mov	r5, sp
 801264c:	4629      	mov	r1, r5
 801264e:	f8ad 2006 	strh.w	r2, [sp, #6]
 8012652:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012654:	4798      	blx	r3
 8012656:	e895 0003 	ldmia.w	r5, {r0, r1}
 801265a:	e884 0003 	stmia.w	r4, {r0, r1}
 801265e:	4620      	mov	r0, r4
 8012660:	b003      	add	sp, #12
 8012662:	bd30      	pop	{r4, r5, pc}

08012664 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8012664:	b513      	push	{r0, r1, r4, lr}
 8012666:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 801266a:	3301      	adds	r3, #1
 801266c:	4604      	mov	r4, r0
 801266e:	d109      	bne.n	8012684 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 8012670:	4601      	mov	r1, r0
 8012672:	4668      	mov	r0, sp
 8012674:	f7ff fd4e 	bl	8012114 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012678:	f8bd 3000 	ldrh.w	r3, [sp]
 801267c:	8423      	strh	r3, [r4, #32]
 801267e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8012682:	8463      	strh	r3, [r4, #34]	; 0x22
 8012684:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8012688:	b002      	add	sp, #8
 801268a:	bd10      	pop	{r4, pc}

0801268c <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 801268c:	b513      	push	{r0, r1, r4, lr}
 801268e:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 8012692:	3301      	adds	r3, #1
 8012694:	4604      	mov	r4, r0
 8012696:	d109      	bne.n	80126ac <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8012698:	4601      	mov	r1, r0
 801269a:	4668      	mov	r0, sp
 801269c:	f7ff fd3a 	bl	8012114 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80126a0:	f8bd 3000 	ldrh.w	r3, [sp]
 80126a4:	8423      	strh	r3, [r4, #32]
 80126a6:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80126aa:	8463      	strh	r3, [r4, #34]	; 0x22
 80126ac:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 80126b0:	b002      	add	sp, #8
 80126b2:	bd10      	pop	{r4, pc}

080126b4 <_ZN8touchgfx6ScreenC1Ev>:
 80126b4:	b570      	push	{r4, r5, r6, lr}
 80126b6:	4605      	mov	r5, r0
 80126b8:	4b16      	ldr	r3, [pc, #88]	; (8012714 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 80126ba:	f845 3b04 	str.w	r3, [r5], #4
 80126be:	2300      	movs	r3, #0
 80126c0:	8103      	strh	r3, [r0, #8]
 80126c2:	8143      	strh	r3, [r0, #10]
 80126c4:	8183      	strh	r3, [r0, #12]
 80126c6:	81c3      	strh	r3, [r0, #14]
 80126c8:	8203      	strh	r3, [r0, #16]
 80126ca:	8243      	strh	r3, [r0, #18]
 80126cc:	8283      	strh	r3, [r0, #20]
 80126ce:	82c3      	strh	r3, [r0, #22]
 80126d0:	e9c0 3306 	strd	r3, r3, [r0, #24]
 80126d4:	6203      	str	r3, [r0, #32]
 80126d6:	8483      	strh	r3, [r0, #36]	; 0x24
 80126d8:	84c3      	strh	r3, [r0, #38]	; 0x26
 80126da:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 80126de:	4a0e      	ldr	r2, [pc, #56]	; (8012718 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 80126e0:	6343      	str	r3, [r0, #52]	; 0x34
 80126e2:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 80126e6:	4b0d      	ldr	r3, [pc, #52]	; (801271c <_ZN8touchgfx6ScreenC1Ev+0x68>)
 80126e8:	6042      	str	r2, [r0, #4]
 80126ea:	f9b3 6000 	ldrsh.w	r6, [r3]
 80126ee:	6b93      	ldr	r3, [r2, #56]	; 0x38
 80126f0:	4a0b      	ldr	r2, [pc, #44]	; (8012720 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 80126f2:	4604      	mov	r4, r0
 80126f4:	2101      	movs	r1, #1
 80126f6:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 80126fa:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 80126fe:	f9b2 1000 	ldrsh.w	r1, [r2]
 8012702:	4628      	mov	r0, r5
 8012704:	4798      	blx	r3
 8012706:	6863      	ldr	r3, [r4, #4]
 8012708:	4628      	mov	r0, r5
 801270a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801270c:	4631      	mov	r1, r6
 801270e:	4798      	blx	r3
 8012710:	4620      	mov	r0, r4
 8012712:	bd70      	pop	{r4, r5, r6, pc}
 8012714:	080243e8 	.word	0x080243e8
 8012718:	0802379c 	.word	0x0802379c
 801271c:	200155ae 	.word	0x200155ae
 8012720:	200155ac 	.word	0x200155ac

08012724 <_ZN8touchgfx6Screen4drawEv>:
 8012724:	b507      	push	{r0, r1, r2, lr}
 8012726:	4b09      	ldr	r3, [pc, #36]	; (801274c <_ZN8touchgfx6Screen4drawEv+0x28>)
 8012728:	f9b3 2000 	ldrsh.w	r2, [r3]
 801272c:	4b08      	ldr	r3, [pc, #32]	; (8012750 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 801272e:	f8ad 2004 	strh.w	r2, [sp, #4]
 8012732:	f9b3 3000 	ldrsh.w	r3, [r3]
 8012736:	f8ad 3006 	strh.w	r3, [sp, #6]
 801273a:	6803      	ldr	r3, [r0, #0]
 801273c:	2100      	movs	r1, #0
 801273e:	9100      	str	r1, [sp, #0]
 8012740:	689b      	ldr	r3, [r3, #8]
 8012742:	4669      	mov	r1, sp
 8012744:	4798      	blx	r3
 8012746:	b003      	add	sp, #12
 8012748:	f85d fb04 	ldr.w	pc, [sp], #4
 801274c:	200155ac 	.word	0x200155ac
 8012750:	200155ae 	.word	0x200155ae

08012754 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 8012754:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012758:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 801275c:	2b00      	cmp	r3, #0
 801275e:	b089      	sub	sp, #36	; 0x24
 8012760:	4680      	mov	r8, r0
 8012762:	460c      	mov	r4, r1
 8012764:	4615      	mov	r5, r2
 8012766:	dd0e      	ble.n	8012786 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8012768:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 801276c:	2b00      	cmp	r3, #0
 801276e:	dd0a      	ble.n	8012786 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8012770:	4628      	mov	r0, r5
 8012772:	f7ff ff5b 	bl	801262c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8012776:	4621      	mov	r1, r4
 8012778:	f7fe fc01 	bl	8010f7e <_ZNK8touchgfx4Rect9intersectERKS0_>
 801277c:	69eb      	ldr	r3, [r5, #28]
 801277e:	b928      	cbnz	r0, 801278c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 8012780:	461d      	mov	r5, r3
 8012782:	2b00      	cmp	r3, #0
 8012784:	d1f4      	bne.n	8012770 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 8012786:	b009      	add	sp, #36	; 0x24
 8012788:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801278c:	ae04      	add	r6, sp, #16
 801278e:	2b00      	cmp	r3, #0
 8012790:	f000 80b5 	beq.w	80128fe <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8012794:	682b      	ldr	r3, [r5, #0]
 8012796:	4629      	mov	r1, r5
 8012798:	68db      	ldr	r3, [r3, #12]
 801279a:	a802      	add	r0, sp, #8
 801279c:	4798      	blx	r3
 801279e:	4628      	mov	r0, r5
 80127a0:	f7ff ff60 	bl	8012664 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 80127a4:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 80127a8:	4407      	add	r7, r0
 80127aa:	4628      	mov	r0, r5
 80127ac:	f7ff ff6e 	bl	801268c <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 80127b0:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80127b4:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 80127b8:	f8ad 2014 	strh.w	r2, [sp, #20]
 80127bc:	4418      	add	r0, r3
 80127be:	4621      	mov	r1, r4
 80127c0:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 80127c4:	f8ad 0012 	strh.w	r0, [sp, #18]
 80127c8:	b23f      	sxth	r7, r7
 80127ca:	4630      	mov	r0, r6
 80127cc:	f8ad 3016 	strh.w	r3, [sp, #22]
 80127d0:	f8ad 7010 	strh.w	r7, [sp, #16]
 80127d4:	f7f8 fada 	bl	800ad8c <_ZN8touchgfx4RectaNERKS0_>
 80127d8:	4628      	mov	r0, r5
 80127da:	f7ff ff27 	bl	801262c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80127de:	4602      	mov	r2, r0
 80127e0:	e896 0003 	ldmia.w	r6, {r0, r1}
 80127e4:	ab06      	add	r3, sp, #24
 80127e6:	e883 0003 	stmia.w	r3, {r0, r1}
 80127ea:	4611      	mov	r1, r2
 80127ec:	4618      	mov	r0, r3
 80127ee:	f7f8 facd 	bl	800ad8c <_ZN8touchgfx4RectaNERKS0_>
 80127f2:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80127f6:	f9b4 1000 	ldrsh.w	r1, [r4]
 80127fa:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 80127fe:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 8012802:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 8012806:	4299      	cmp	r1, r3
 8012808:	d10b      	bne.n	8012822 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801280a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801280e:	4552      	cmp	r2, sl
 8012810:	d107      	bne.n	8012822 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8012812:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8012816:	455a      	cmp	r2, fp
 8012818:	d103      	bne.n	8012822 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801281a:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 801281e:	454a      	cmp	r2, r9
 8012820:	d06d      	beq.n	80128fe <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8012822:	f1bb 0f00 	cmp.w	fp, #0
 8012826:	dd65      	ble.n	80128f4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8012828:	f1b9 0f00 	cmp.w	r9, #0
 801282c:	dd62      	ble.n	80128f4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 801282e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8012832:	fa1f f08a 	uxth.w	r0, sl
 8012836:	4552      	cmp	r2, sl
 8012838:	9000      	str	r0, [sp, #0]
 801283a:	da12      	bge.n	8012862 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 801283c:	9301      	str	r3, [sp, #4]
 801283e:	9b00      	ldr	r3, [sp, #0]
 8012840:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8012844:	f8ad 2012 	strh.w	r2, [sp, #18]
 8012848:	1a9a      	subs	r2, r3, r2
 801284a:	f8ad 1010 	strh.w	r1, [sp, #16]
 801284e:	f8ad 0014 	strh.w	r0, [sp, #20]
 8012852:	f8ad 2016 	strh.w	r2, [sp, #22]
 8012856:	69ea      	ldr	r2, [r5, #28]
 8012858:	4631      	mov	r1, r6
 801285a:	4640      	mov	r0, r8
 801285c:	f7ff ff7a 	bl	8012754 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8012860:	9b01      	ldr	r3, [sp, #4]
 8012862:	f9b4 2000 	ldrsh.w	r2, [r4]
 8012866:	429a      	cmp	r2, r3
 8012868:	b29f      	uxth	r7, r3
 801286a:	da0d      	bge.n	8012888 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 801286c:	f8ad 2010 	strh.w	r2, [sp, #16]
 8012870:	1aba      	subs	r2, r7, r2
 8012872:	f8ad a012 	strh.w	sl, [sp, #18]
 8012876:	f8ad 2014 	strh.w	r2, [sp, #20]
 801287a:	f8ad 9016 	strh.w	r9, [sp, #22]
 801287e:	69ea      	ldr	r2, [r5, #28]
 8012880:	4631      	mov	r1, r6
 8012882:	4640      	mov	r0, r8
 8012884:	f7ff ff66 	bl	8012754 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8012888:	8822      	ldrh	r2, [r4, #0]
 801288a:	88a3      	ldrh	r3, [r4, #4]
 801288c:	445f      	add	r7, fp
 801288e:	4413      	add	r3, r2
 8012890:	b29b      	uxth	r3, r3
 8012892:	b2bf      	uxth	r7, r7
 8012894:	b23a      	sxth	r2, r7
 8012896:	b219      	sxth	r1, r3
 8012898:	4291      	cmp	r1, r2
 801289a:	dd0d      	ble.n	80128b8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 801289c:	1bdb      	subs	r3, r3, r7
 801289e:	f8ad 2010 	strh.w	r2, [sp, #16]
 80128a2:	f8ad a012 	strh.w	sl, [sp, #18]
 80128a6:	f8ad 3014 	strh.w	r3, [sp, #20]
 80128aa:	f8ad 9016 	strh.w	r9, [sp, #22]
 80128ae:	69ea      	ldr	r2, [r5, #28]
 80128b0:	4631      	mov	r1, r6
 80128b2:	4640      	mov	r0, r8
 80128b4:	f7ff ff4e 	bl	8012754 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80128b8:	88e2      	ldrh	r2, [r4, #6]
 80128ba:	8863      	ldrh	r3, [r4, #2]
 80128bc:	4413      	add	r3, r2
 80128be:	9a00      	ldr	r2, [sp, #0]
 80128c0:	444a      	add	r2, r9
 80128c2:	b29b      	uxth	r3, r3
 80128c4:	fa1f f982 	uxth.w	r9, r2
 80128c8:	fa0f f289 	sxth.w	r2, r9
 80128cc:	b219      	sxth	r1, r3
 80128ce:	428a      	cmp	r2, r1
 80128d0:	da15      	bge.n	80128fe <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80128d2:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80128d6:	f9b4 0000 	ldrsh.w	r0, [r4]
 80128da:	f8ad 1014 	strh.w	r1, [sp, #20]
 80128de:	eba3 0309 	sub.w	r3, r3, r9
 80128e2:	f8ad 0010 	strh.w	r0, [sp, #16]
 80128e6:	f8ad 2012 	strh.w	r2, [sp, #18]
 80128ea:	f8ad 3016 	strh.w	r3, [sp, #22]
 80128ee:	69ea      	ldr	r2, [r5, #28]
 80128f0:	4631      	mov	r1, r6
 80128f2:	e001      	b.n	80128f8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 80128f4:	69ea      	ldr	r2, [r5, #28]
 80128f6:	4621      	mov	r1, r4
 80128f8:	4640      	mov	r0, r8
 80128fa:	f7ff ff2b 	bl	8012754 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80128fe:	4628      	mov	r0, r5
 8012900:	f7ff fe94 	bl	801262c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8012904:	6861      	ldr	r1, [r4, #4]
 8012906:	4602      	mov	r2, r0
 8012908:	6820      	ldr	r0, [r4, #0]
 801290a:	4633      	mov	r3, r6
 801290c:	c303      	stmia	r3!, {r0, r1}
 801290e:	4611      	mov	r1, r2
 8012910:	4630      	mov	r0, r6
 8012912:	f7f8 fa3b 	bl	800ad8c <_ZN8touchgfx4RectaNERKS0_>
 8012916:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 801291a:	2b00      	cmp	r3, #0
 801291c:	f77f af33 	ble.w	8012786 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8012920:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8012924:	2b00      	cmp	r3, #0
 8012926:	f77f af2e 	ble.w	8012786 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801292a:	4628      	mov	r0, r5
 801292c:	f7ff fe9a 	bl	8012664 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8012930:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8012934:	1a18      	subs	r0, r3, r0
 8012936:	f8ad 0010 	strh.w	r0, [sp, #16]
 801293a:	4628      	mov	r0, r5
 801293c:	f7ff fea6 	bl	801268c <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8012940:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8012944:	1a18      	subs	r0, r3, r0
 8012946:	f8ad 0012 	strh.w	r0, [sp, #18]
 801294a:	682b      	ldr	r3, [r5, #0]
 801294c:	4631      	mov	r1, r6
 801294e:	689b      	ldr	r3, [r3, #8]
 8012950:	4628      	mov	r0, r5
 8012952:	4798      	blx	r3
 8012954:	e717      	b.n	8012786 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

08012956 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 8012956:	b570      	push	{r4, r5, r6, lr}
 8012958:	460c      	mov	r4, r1
 801295a:	b086      	sub	sp, #24
 801295c:	1d06      	adds	r6, r0, #4
 801295e:	2300      	movs	r3, #0
 8012960:	4631      	mov	r1, r6
 8012962:	4605      	mov	r5, r0
 8012964:	a802      	add	r0, sp, #8
 8012966:	9301      	str	r3, [sp, #4]
 8012968:	f7ff fbd4 	bl	8012114 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801296c:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8012970:	8822      	ldrh	r2, [r4, #0]
 8012972:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8012976:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801297a:	f8ad 0014 	strh.w	r0, [sp, #20]
 801297e:	1ad2      	subs	r2, r2, r3
 8012980:	8863      	ldrh	r3, [r4, #2]
 8012982:	f8ad 2010 	strh.w	r2, [sp, #16]
 8012986:	1a5b      	subs	r3, r3, r1
 8012988:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 801298c:	f8ad 1016 	strh.w	r1, [sp, #22]
 8012990:	aa01      	add	r2, sp, #4
 8012992:	a904      	add	r1, sp, #16
 8012994:	4630      	mov	r0, r6
 8012996:	f8ad 3012 	strh.w	r3, [sp, #18]
 801299a:	f7f8 facf 	bl	800af3c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 801299e:	9a01      	ldr	r2, [sp, #4]
 80129a0:	b11a      	cbz	r2, 80129aa <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 80129a2:	4621      	mov	r1, r4
 80129a4:	4628      	mov	r0, r5
 80129a6:	f7ff fed5 	bl	8012754 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80129aa:	b006      	add	sp, #24
 80129ac:	bd70      	pop	{r4, r5, r6, pc}

080129ae <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 80129ae:	b530      	push	{r4, r5, lr}
 80129b0:	4602      	mov	r2, r0
 80129b2:	4604      	mov	r4, r0
 80129b4:	f852 0f08 	ldr.w	r0, [r2, #8]!
 80129b8:	b085      	sub	sp, #20
 80129ba:	460d      	mov	r5, r1
 80129bc:	6851      	ldr	r1, [r2, #4]
 80129be:	466b      	mov	r3, sp
 80129c0:	c303      	stmia	r3!, {r0, r1}
 80129c2:	4629      	mov	r1, r5
 80129c4:	4668      	mov	r0, sp
 80129c6:	f7f8 f9e1 	bl	800ad8c <_ZN8touchgfx4RectaNERKS0_>
 80129ca:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80129ce:	b12b      	cbz	r3, 80129dc <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 80129d0:	4669      	mov	r1, sp
 80129d2:	4620      	mov	r0, r4
 80129d4:	f7ff ffbf 	bl	8012956 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 80129d8:	b005      	add	sp, #20
 80129da:	bd30      	pop	{r4, r5, pc}
 80129dc:	3404      	adds	r4, #4
 80129de:	4621      	mov	r1, r4
 80129e0:	a802      	add	r0, sp, #8
 80129e2:	f7ff fb97 	bl	8012114 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80129e6:	f8bd 3000 	ldrh.w	r3, [sp]
 80129ea:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 80129ee:	1a9b      	subs	r3, r3, r2
 80129f0:	f8ad 3000 	strh.w	r3, [sp]
 80129f4:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80129f8:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80129fc:	4669      	mov	r1, sp
 80129fe:	1a9b      	subs	r3, r3, r2
 8012a00:	4620      	mov	r0, r4
 8012a02:	f8ad 3002 	strh.w	r3, [sp, #2]
 8012a06:	f7f8 fa60 	bl	800aeca <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 8012a0a:	e7e5      	b.n	80129d8 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

08012a0c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 8012a0c:	680a      	ldr	r2, [r1, #0]
 8012a0e:	460b      	mov	r3, r1
 8012a10:	6992      	ldr	r2, [r2, #24]
 8012a12:	1d01      	adds	r1, r0, #4
 8012a14:	4618      	mov	r0, r3
 8012a16:	4710      	bx	r2

08012a18 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 8012a18:	4298      	cmp	r0, r3
 8012a1a:	d200      	bcs.n	8012a1e <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 8012a1c:	b913      	cbnz	r3, 8012a24 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 8012a1e:	440a      	add	r2, r1
 8012a20:	b210      	sxth	r0, r2
 8012a22:	4770      	bx	lr
 8012a24:	ee07 0a90 	vmov	s15, r0
 8012a28:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8012a2c:	ee07 3a90 	vmov	s15, r3
 8012a30:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012a34:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8012a38:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8012a3c:	ee37 7a66 	vsub.f32	s14, s14, s13
 8012a40:	ee07 2a90 	vmov	s15, r2
 8012a44:	ee67 5a07 	vmul.f32	s11, s14, s14
 8012a48:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 8012a4c:	eee5 6a87 	vfma.f32	s13, s11, s14
 8012a50:	ee07 1a90 	vmov	s15, r1
 8012a54:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012a58:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8012a5c:	eee6 7a26 	vfma.f32	s15, s12, s13
 8012a60:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8012a64:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012a68:	bfcc      	ite	gt
 8012a6a:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8012a6e:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 8012a72:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8012a76:	ee17 3a90 	vmov	r3, s15
 8012a7a:	b218      	sxth	r0, r3
 8012a7c:	4770      	bx	lr

08012a7e <_ZN8touchgfx12TextProviderC1Ev>:
 8012a7e:	b538      	push	{r3, r4, r5, lr}
 8012a80:	2500      	movs	r5, #0
 8012a82:	2302      	movs	r3, #2
 8012a84:	4604      	mov	r4, r0
 8012a86:	e9c0 5500 	strd	r5, r5, [r0]
 8012a8a:	7403      	strb	r3, [r0, #16]
 8012a8c:	6145      	str	r5, [r0, #20]
 8012a8e:	7605      	strb	r5, [r0, #24]
 8012a90:	83c5      	strh	r5, [r0, #30]
 8012a92:	8405      	strh	r5, [r0, #32]
 8012a94:	86c5      	strh	r5, [r0, #54]	; 0x36
 8012a96:	8705      	strh	r5, [r0, #56]	; 0x38
 8012a98:	87c5      	strh	r5, [r0, #62]	; 0x3e
 8012a9a:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 8012a9e:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 8012aa2:	220e      	movs	r2, #14
 8012aa4:	4629      	mov	r1, r5
 8012aa6:	304c      	adds	r0, #76	; 0x4c
 8012aa8:	f00e f858 	bl	8020b5c <memset>
 8012aac:	2301      	movs	r3, #1
 8012aae:	4620      	mov	r0, r4
 8012ab0:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 8012ab4:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8012ab8:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 8012abc:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 8012ac0:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 8012ac4:	f7f2 f93c 	bl	8004d40 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 8012ac8:	4620      	mov	r0, r4
 8012aca:	bd38      	pop	{r3, r4, r5, pc}

08012acc <_ZN8touchgfx12TextProvider11endOfStringEv>:
 8012acc:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8012ace:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8012ad2:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 8012ad4:	fab0 f080 	clz	r0, r0
 8012ad8:	0940      	lsrs	r0, r0, #5
 8012ada:	4770      	bx	lr

08012adc <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 8012adc:	b530      	push	{r4, r5, lr}
 8012ade:	2500      	movs	r5, #0
 8012ae0:	2401      	movs	r4, #1
 8012ae2:	6843      	ldr	r3, [r0, #4]
 8012ae4:	b913      	cbnz	r3, 8012aec <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 8012ae6:	6803      	ldr	r3, [r0, #0]
 8012ae8:	b313      	cbz	r3, 8012b30 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8012aea:	6043      	str	r3, [r0, #4]
 8012aec:	7e03      	ldrb	r3, [r0, #24]
 8012aee:	b143      	cbz	r3, 8012b02 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 8012af0:	6943      	ldr	r3, [r0, #20]
 8012af2:	b12b      	cbz	r3, 8012b00 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8012af4:	881a      	ldrh	r2, [r3, #0]
 8012af6:	b11a      	cbz	r2, 8012b00 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8012af8:	1c9a      	adds	r2, r3, #2
 8012afa:	6142      	str	r2, [r0, #20]
 8012afc:	8818      	ldrh	r0, [r3, #0]
 8012afe:	bd30      	pop	{r4, r5, pc}
 8012b00:	7605      	strb	r5, [r0, #24]
 8012b02:	6843      	ldr	r3, [r0, #4]
 8012b04:	8819      	ldrh	r1, [r3, #0]
 8012b06:	b199      	cbz	r1, 8012b30 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8012b08:	1c9a      	adds	r2, r3, #2
 8012b0a:	2902      	cmp	r1, #2
 8012b0c:	6042      	str	r2, [r0, #4]
 8012b0e:	d1f5      	bne.n	8012afc <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 8012b10:	7c03      	ldrb	r3, [r0, #16]
 8012b12:	2b01      	cmp	r3, #1
 8012b14:	d8e5      	bhi.n	8012ae2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8012b16:	1c5a      	adds	r2, r3, #1
 8012b18:	3302      	adds	r3, #2
 8012b1a:	7402      	strb	r2, [r0, #16]
 8012b1c:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8012b20:	6143      	str	r3, [r0, #20]
 8012b22:	2b00      	cmp	r3, #0
 8012b24:	d0dd      	beq.n	8012ae2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8012b26:	881b      	ldrh	r3, [r3, #0]
 8012b28:	2b00      	cmp	r3, #0
 8012b2a:	d0da      	beq.n	8012ae2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8012b2c:	7604      	strb	r4, [r0, #24]
 8012b2e:	e7d8      	b.n	8012ae2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8012b30:	2000      	movs	r0, #0
 8012b32:	e7e4      	b.n	8012afe <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

08012b34 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 8012b34:	b430      	push	{r4, r5}
 8012b36:	6001      	str	r1, [r0, #0]
 8012b38:	2100      	movs	r1, #0
 8012b3a:	6041      	str	r1, [r0, #4]
 8012b3c:	6815      	ldr	r5, [r2, #0]
 8012b3e:	6085      	str	r5, [r0, #8]
 8012b40:	6852      	ldr	r2, [r2, #4]
 8012b42:	6443      	str	r3, [r0, #68]	; 0x44
 8012b44:	9b02      	ldr	r3, [sp, #8]
 8012b46:	60c2      	str	r2, [r0, #12]
 8012b48:	7401      	strb	r1, [r0, #16]
 8012b4a:	6141      	str	r1, [r0, #20]
 8012b4c:	7601      	strb	r1, [r0, #24]
 8012b4e:	8701      	strh	r1, [r0, #56]	; 0x38
 8012b50:	8401      	strh	r1, [r0, #32]
 8012b52:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 8012b56:	6483      	str	r3, [r0, #72]	; 0x48
 8012b58:	bc30      	pop	{r4, r5}
 8012b5a:	f7f2 b8f1 	b.w	8004d40 <_ZN8touchgfx12TextProvider18initializeInternalEv>

08012b5e <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 8012b5e:	b408      	push	{r3}
 8012b60:	b510      	push	{r4, lr}
 8012b62:	b085      	sub	sp, #20
 8012b64:	ac07      	add	r4, sp, #28
 8012b66:	f854 3b04 	ldr.w	r3, [r4], #4
 8012b6a:	9300      	str	r3, [sp, #0]
 8012b6c:	4613      	mov	r3, r2
 8012b6e:	4622      	mov	r2, r4
 8012b70:	9403      	str	r4, [sp, #12]
 8012b72:	f7ff ffdf 	bl	8012b34 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8012b76:	b005      	add	sp, #20
 8012b78:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012b7c:	b001      	add	sp, #4
 8012b7e:	4770      	bx	lr

08012b80 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 8012b80:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012b82:	4605      	mov	r5, r0
 8012b84:	4608      	mov	r0, r1
 8012b86:	b1e9      	cbz	r1, 8012bc4 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 8012b88:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 8012b8c:	460b      	mov	r3, r1
 8012b8e:	f101 0708 	add.w	r7, r1, #8
 8012b92:	4622      	mov	r2, r4
 8012b94:	6818      	ldr	r0, [r3, #0]
 8012b96:	6859      	ldr	r1, [r3, #4]
 8012b98:	4626      	mov	r6, r4
 8012b9a:	c603      	stmia	r6!, {r0, r1}
 8012b9c:	3308      	adds	r3, #8
 8012b9e:	42bb      	cmp	r3, r7
 8012ba0:	4634      	mov	r4, r6
 8012ba2:	d1f7      	bne.n	8012b94 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 8012ba4:	6818      	ldr	r0, [r3, #0]
 8012ba6:	6030      	str	r0, [r6, #0]
 8012ba8:	889b      	ldrh	r3, [r3, #4]
 8012baa:	80b3      	strh	r3, [r6, #4]
 8012bac:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 8012bb0:	015b      	lsls	r3, r3, #5
 8012bb2:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8012bb6:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 8012bba:	430b      	orrs	r3, r1
 8012bbc:	425b      	negs	r3, r3
 8012bbe:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 8012bc2:	4610      	mov	r0, r2
 8012bc4:	bdf0      	pop	{r4, r5, r6, r7, pc}

08012bc6 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 8012bc6:	b538      	push	{r3, r4, r5, lr}
 8012bc8:	460c      	mov	r4, r1
 8012bca:	6811      	ldr	r1, [r2, #0]
 8012bcc:	4610      	mov	r0, r2
 8012bce:	68cd      	ldr	r5, [r1, #12]
 8012bd0:	4619      	mov	r1, r3
 8012bd2:	47a8      	blx	r5
 8012bd4:	2800      	cmp	r0, #0
 8012bd6:	bf08      	it	eq
 8012bd8:	4620      	moveq	r0, r4
 8012bda:	bd38      	pop	{r3, r4, r5, pc}

08012bdc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8012bdc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8012bde:	4604      	mov	r4, r0
 8012be0:	4615      	mov	r5, r2
 8012be2:	4608      	mov	r0, r1
 8012be4:	b93a      	cbnz	r2, 8012bf6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 8012be6:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8012bea:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 8012bee:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 8012bf2:	4628      	mov	r0, r5
 8012bf4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8012bf6:	f892 c00d 	ldrb.w	ip, [r2, #13]
 8012bfa:	8893      	ldrh	r3, [r2, #4]
 8012bfc:	ea4f 160c 	mov.w	r6, ip, lsl #4
 8012c00:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8012c04:	79ee      	ldrb	r6, [r5, #7]
 8012c06:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 8012c0a:	4316      	orrs	r6, r2
 8012c0c:	19da      	adds	r2, r3, r7
 8012c0e:	b291      	uxth	r1, r2
 8012c10:	291d      	cmp	r1, #29
 8012c12:	b2b7      	uxth	r7, r6
 8012c14:	d87a      	bhi.n	8012d0c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 8012c16:	2201      	movs	r2, #1
 8012c18:	408a      	lsls	r2, r1
 8012c1a:	4975      	ldr	r1, [pc, #468]	; (8012df0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 8012c1c:	420a      	tst	r2, r1
 8012c1e:	ea4f 06e6 	mov.w	r6, r6, asr #3
 8012c22:	d12d      	bne.n	8012c80 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 8012c24:	f412 7f60 	tst.w	r2, #896	; 0x380
 8012c28:	d070      	beq.n	8012d0c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 8012c2a:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 8012c2e:	462b      	mov	r3, r5
 8012c30:	f105 0e08 	add.w	lr, r5, #8
 8012c34:	4615      	mov	r5, r2
 8012c36:	6818      	ldr	r0, [r3, #0]
 8012c38:	6859      	ldr	r1, [r3, #4]
 8012c3a:	4694      	mov	ip, r2
 8012c3c:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8012c40:	3308      	adds	r3, #8
 8012c42:	4573      	cmp	r3, lr
 8012c44:	4662      	mov	r2, ip
 8012c46:	d1f6      	bne.n	8012c36 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 8012c48:	6818      	ldr	r0, [r3, #0]
 8012c4a:	f8cc 0000 	str.w	r0, [ip]
 8012c4e:	889b      	ldrh	r3, [r3, #4]
 8012c50:	f8ac 3004 	strh.w	r3, [ip, #4]
 8012c54:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 8012c58:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 8012c5c:	b2b3      	uxth	r3, r6
 8012c5e:	1aca      	subs	r2, r1, r3
 8012c60:	b292      	uxth	r2, r2
 8012c62:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 8012c66:	10d2      	asrs	r2, r2, #3
 8012c68:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 8012c6c:	f002 0260 	and.w	r2, r2, #96	; 0x60
 8012c70:	4302      	orrs	r2, r0
 8012c72:	1bcf      	subs	r7, r1, r7
 8012c74:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 8012c78:	1afb      	subs	r3, r7, r3
 8012c7a:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8012c7e:	e7b8      	b.n	8012bf2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8012c80:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8012c82:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8012c86:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 8012c88:	f640 6333 	movw	r3, #3635	; 0xe33
 8012c8c:	4299      	cmp	r1, r3
 8012c8e:	d110      	bne.n	8012cb2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 8012c90:	6803      	ldr	r3, [r0, #0]
 8012c92:	68db      	ldr	r3, [r3, #12]
 8012c94:	4798      	blx	r3
 8012c96:	7b41      	ldrb	r1, [r0, #13]
 8012c98:	00cb      	lsls	r3, r1, #3
 8012c9a:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8012c9e:	7a03      	ldrb	r3, [r0, #8]
 8012ca0:	0648      	lsls	r0, r1, #25
 8012ca2:	ea43 0302 	orr.w	r3, r3, r2
 8012ca6:	bf44      	itt	mi
 8012ca8:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8012cac:	b21b      	sxthmi	r3, r3
 8012cae:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8012cb2:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 8012cb6:	443b      	add	r3, r7
 8012cb8:	4433      	add	r3, r6
 8012cba:	b29b      	uxth	r3, r3
 8012cbc:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 8012cc0:	462a      	mov	r2, r5
 8012cc2:	f105 0c08 	add.w	ip, r5, #8
 8012cc6:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8012cca:	4635      	mov	r5, r6
 8012ccc:	6810      	ldr	r0, [r2, #0]
 8012cce:	6851      	ldr	r1, [r2, #4]
 8012cd0:	4637      	mov	r7, r6
 8012cd2:	c703      	stmia	r7!, {r0, r1}
 8012cd4:	3208      	adds	r2, #8
 8012cd6:	4562      	cmp	r2, ip
 8012cd8:	463e      	mov	r6, r7
 8012cda:	d1f7      	bne.n	8012ccc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 8012cdc:	6810      	ldr	r0, [r2, #0]
 8012cde:	6038      	str	r0, [r7, #0]
 8012ce0:	8892      	ldrh	r2, [r2, #4]
 8012ce2:	80ba      	strh	r2, [r7, #4]
 8012ce4:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8012ce8:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8012cec:	10db      	asrs	r3, r3, #3
 8012cee:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8012cf2:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8012cf6:	4313      	orrs	r3, r2
 8012cf8:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8012cfc:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 8012d00:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 8012d04:	1a9b      	subs	r3, r3, r2
 8012d06:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 8012d0a:	e772      	b.n	8012bf2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8012d0c:	f023 0204 	bic.w	r2, r3, #4
 8012d10:	f640 611b 	movw	r1, #3611	; 0xe1b
 8012d14:	428a      	cmp	r2, r1
 8012d16:	d003      	beq.n	8012d20 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 8012d18:	f640 621d 	movw	r2, #3613	; 0xe1d
 8012d1c:	4293      	cmp	r3, r2
 8012d1e:	d120      	bne.n	8012d62 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x186>
 8012d20:	3b01      	subs	r3, #1
 8012d22:	4602      	mov	r2, r0
 8012d24:	b29b      	uxth	r3, r3
 8012d26:	4629      	mov	r1, r5
 8012d28:	4620      	mov	r0, r4
 8012d2a:	f7ff ff4c 	bl	8012bc6 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8012d2e:	7b41      	ldrb	r1, [r0, #13]
 8012d30:	00cb      	lsls	r3, r1, #3
 8012d32:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8012d36:	7a03      	ldrb	r3, [r0, #8]
 8012d38:	0649      	lsls	r1, r1, #25
 8012d3a:	ea43 0302 	orr.w	r3, r3, r2
 8012d3e:	bf44      	itt	mi
 8012d40:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8012d44:	b21b      	sxthmi	r3, r3
 8012d46:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8012d4a:	7b6b      	ldrb	r3, [r5, #13]
 8012d4c:	7aaa      	ldrb	r2, [r5, #10]
 8012d4e:	005b      	lsls	r3, r3, #1
 8012d50:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8012d54:	4313      	orrs	r3, r2
 8012d56:	115a      	asrs	r2, r3, #5
 8012d58:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 8012d5c:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8012d60:	e036      	b.n	8012dd0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 8012d62:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 8012d66:	f402 7180 	and.w	r1, r2, #256	; 0x100
 8012d6a:	7a2a      	ldrb	r2, [r5, #8]
 8012d6c:	f01c 0f40 	tst.w	ip, #64	; 0x40
 8012d70:	ea42 0201 	orr.w	r2, r2, r1
 8012d74:	bf1c      	itt	ne
 8012d76:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 8012d7a:	b212      	sxthne	r2, r2
 8012d7c:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8012d80:	f640 6109 	movw	r1, #3593	; 0xe09
 8012d84:	f023 0210 	bic.w	r2, r3, #16
 8012d88:	428a      	cmp	r2, r1
 8012d8a:	d003      	beq.n	8012d94 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b8>
 8012d8c:	f640 6213 	movw	r2, #3603	; 0xe13
 8012d90:	4293      	cmp	r3, r2
 8012d92:	d12a      	bne.n	8012dea <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 8012d94:	7b6e      	ldrb	r6, [r5, #13]
 8012d96:	0076      	lsls	r6, r6, #1
 8012d98:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8012d9c:	7aae      	ldrb	r6, [r5, #10]
 8012d9e:	4316      	orrs	r6, r2
 8012da0:	f640 6213 	movw	r2, #3603	; 0xe13
 8012da4:	4293      	cmp	r3, r2
 8012da6:	bf18      	it	ne
 8012da8:	f103 33ff 	addne.w	r3, r3, #4294967295
 8012dac:	4602      	mov	r2, r0
 8012dae:	bf14      	ite	ne
 8012db0:	b29b      	uxthne	r3, r3
 8012db2:	f640 630c 	movweq	r3, #3596	; 0xe0c
 8012db6:	4629      	mov	r1, r5
 8012db8:	4620      	mov	r0, r4
 8012dba:	f7ff ff04 	bl	8012bc6 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8012dbe:	7b43      	ldrb	r3, [r0, #13]
 8012dc0:	7a82      	ldrb	r2, [r0, #10]
 8012dc2:	005b      	lsls	r3, r3, #1
 8012dc4:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8012dc8:	4313      	orrs	r3, r2
 8012dca:	1af6      	subs	r6, r6, r3
 8012dcc:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 8012dd0:	7b69      	ldrb	r1, [r5, #13]
 8012dd2:	00cb      	lsls	r3, r1, #3
 8012dd4:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8012dd8:	7a2b      	ldrb	r3, [r5, #8]
 8012dda:	4313      	orrs	r3, r2
 8012ddc:	064a      	lsls	r2, r1, #25
 8012dde:	bf44      	itt	mi
 8012de0:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8012de4:	b21b      	sxthmi	r3, r3
 8012de6:	1bdb      	subs	r3, r3, r7
 8012de8:	e747      	b.n	8012c7a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 8012dea:	2300      	movs	r3, #0
 8012dec:	e7b6      	b.n	8012d5c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x180>
 8012dee:	bf00      	nop
 8012df0:	3fc00079 	.word	0x3fc00079

08012df4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 8012df4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012df8:	4604      	mov	r4, r0
 8012dfa:	b942      	cbnz	r2, 8012e0e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8012dfc:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8012e00:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 8012e04:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 8012e08:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8012e0c:	e047      	b.n	8012e9e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8012e0e:	7b51      	ldrb	r1, [r2, #13]
 8012e10:	8893      	ldrh	r3, [r2, #4]
 8012e12:	010d      	lsls	r5, r1, #4
 8012e14:	f405 7080 	and.w	r0, r5, #256	; 0x100
 8012e18:	79d5      	ldrb	r5, [r2, #7]
 8012e1a:	4305      	orrs	r5, r0
 8012e1c:	2d04      	cmp	r5, #4
 8012e1e:	bfcc      	ite	gt
 8012e20:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 8012e24:	f04f 0e01 	movle.w	lr, #1
 8012e28:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 8012e2c:	f200 80ab 	bhi.w	8012f86 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 8012e30:	f240 60e7 	movw	r0, #1767	; 0x6e7
 8012e34:	4283      	cmp	r3, r0
 8012e36:	d216      	bcs.n	8012e66 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012e38:	f240 605b 	movw	r0, #1627	; 0x65b
 8012e3c:	4283      	cmp	r3, r0
 8012e3e:	d859      	bhi.n	8012ef4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 8012e40:	f240 6057 	movw	r0, #1623	; 0x657
 8012e44:	4283      	cmp	r3, r0
 8012e46:	d20e      	bcs.n	8012e66 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012e48:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8012e4c:	d24a      	bcs.n	8012ee4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 8012e4e:	f240 604e 	movw	r0, #1614	; 0x64e
 8012e52:	4283      	cmp	r3, r0
 8012e54:	d207      	bcs.n	8012e66 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012e56:	f240 601a 	movw	r0, #1562	; 0x61a
 8012e5a:	4283      	cmp	r3, r0
 8012e5c:	d02a      	beq.n	8012eb4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012e5e:	d821      	bhi.n	8012ea4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 8012e60:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 8012e64:	d35b      	bcc.n	8012f1e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8012e66:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 8012e6a:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8012e6e:	f040 80d0 	bne.w	8013012 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8012e72:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 8012e76:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8012e7a:	f040 80ca 	bne.w	8013012 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8012e7e:	00cb      	lsls	r3, r1, #3
 8012e80:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8012e84:	7a13      	ldrb	r3, [r2, #8]
 8012e86:	0649      	lsls	r1, r1, #25
 8012e88:	ea43 0300 	orr.w	r3, r3, r0
 8012e8c:	bf44      	itt	mi
 8012e8e:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8012e92:	b21b      	sxthmi	r3, r3
 8012e94:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8012e98:	1b5d      	subs	r5, r3, r5
 8012e9a:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8012e9e:	4610      	mov	r0, r2
 8012ea0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012ea4:	f240 604b 	movw	r0, #1611	; 0x64b
 8012ea8:	4283      	cmp	r3, r0
 8012eaa:	d338      	bcc.n	8012f1e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8012eac:	f240 604c 	movw	r0, #1612	; 0x64c
 8012eb0:	4283      	cmp	r3, r0
 8012eb2:	d9d8      	bls.n	8012e66 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012eb4:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 8012eb8:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 8012ebc:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8012ec0:	f040 80f2 	bne.w	80130a8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8012ec4:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8012ec8:	f040 80ee 	bne.w	80130a8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8012ecc:	00cb      	lsls	r3, r1, #3
 8012ece:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8012ed2:	7a13      	ldrb	r3, [r2, #8]
 8012ed4:	064e      	lsls	r6, r1, #25
 8012ed6:	ea43 0300 	orr.w	r3, r3, r0
 8012eda:	bf44      	itt	mi
 8012edc:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8012ee0:	b21b      	sxthmi	r3, r3
 8012ee2:	e7d9      	b.n	8012e98 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 8012ee4:	f240 6054 	movw	r0, #1620	; 0x654
 8012ee8:	4283      	cmp	r3, r0
 8012eea:	d8e3      	bhi.n	8012eb4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012eec:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8012ef0:	d9e0      	bls.n	8012eb4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012ef2:	e7b8      	b.n	8012e66 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012ef4:	f240 6074 	movw	r0, #1652	; 0x674
 8012ef8:	4283      	cmp	r3, r0
 8012efa:	d0b4      	beq.n	8012e66 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012efc:	d82d      	bhi.n	8012f5a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 8012efe:	f240 605e 	movw	r0, #1630	; 0x65e
 8012f02:	4283      	cmp	r3, r0
 8012f04:	d804      	bhi.n	8012f10 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 8012f06:	f240 605d 	movw	r0, #1629	; 0x65d
 8012f0a:	4283      	cmp	r3, r0
 8012f0c:	d3d2      	bcc.n	8012eb4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012f0e:	e7aa      	b.n	8012e66 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012f10:	f240 605f 	movw	r0, #1631	; 0x65f
 8012f14:	4283      	cmp	r3, r0
 8012f16:	d0cd      	beq.n	8012eb4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012f18:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 8012f1c:	d0a3      	beq.n	8012e66 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012f1e:	00cb      	lsls	r3, r1, #3
 8012f20:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8012f24:	7a13      	ldrb	r3, [r2, #8]
 8012f26:	0649      	lsls	r1, r1, #25
 8012f28:	ea43 0300 	orr.w	r3, r3, r0
 8012f2c:	bf44      	itt	mi
 8012f2e:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8012f32:	b21b      	sxthmi	r3, r3
 8012f34:	1b5d      	subs	r5, r3, r5
 8012f36:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8012f3a:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8012f3e:	7b53      	ldrb	r3, [r2, #13]
 8012f40:	015b      	lsls	r3, r3, #5
 8012f42:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8012f46:	7993      	ldrb	r3, [r2, #6]
 8012f48:	430b      	orrs	r3, r1
 8012f4a:	005b      	lsls	r3, r3, #1
 8012f4c:	2105      	movs	r1, #5
 8012f4e:	fb93 f3f1 	sdiv	r3, r3, r1
 8012f52:	f992 1009 	ldrsb.w	r1, [r2, #9]
 8012f56:	440b      	add	r3, r1
 8012f58:	e756      	b.n	8012e08 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 8012f5a:	f240 60e2 	movw	r0, #1762	; 0x6e2
 8012f5e:	4283      	cmp	r3, r0
 8012f60:	d809      	bhi.n	8012f76 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 8012f62:	f240 60df 	movw	r0, #1759	; 0x6df
 8012f66:	4283      	cmp	r3, r0
 8012f68:	f4bf af7d 	bcs.w	8012e66 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012f6c:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 8012f70:	2b05      	cmp	r3, #5
 8012f72:	d8d4      	bhi.n	8012f1e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8012f74:	e777      	b.n	8012e66 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012f76:	f240 60e3 	movw	r0, #1763	; 0x6e3
 8012f7a:	4283      	cmp	r3, r0
 8012f7c:	d09a      	beq.n	8012eb4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012f7e:	f240 60e4 	movw	r0, #1764	; 0x6e4
 8012f82:	4283      	cmp	r3, r0
 8012f84:	e7ca      	b.n	8012f1c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8012f86:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 8012f8a:	d22b      	bcs.n	8012fe4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 8012f8c:	f640 00ed 	movw	r0, #2285	; 0x8ed
 8012f90:	4283      	cmp	r3, r0
 8012f92:	d28f      	bcs.n	8012eb4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012f94:	f640 00e5 	movw	r0, #2277	; 0x8e5
 8012f98:	4283      	cmp	r3, r0
 8012f9a:	d816      	bhi.n	8012fca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 8012f9c:	f640 00e4 	movw	r0, #2276	; 0x8e4
 8012fa0:	4283      	cmp	r3, r0
 8012fa2:	f4bf af60 	bcs.w	8012e66 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012fa6:	f240 60ec 	movw	r0, #1772	; 0x6ec
 8012faa:	4283      	cmp	r3, r0
 8012fac:	d80a      	bhi.n	8012fc4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 8012fae:	f240 60eb 	movw	r0, #1771	; 0x6eb
 8012fb2:	4283      	cmp	r3, r0
 8012fb4:	f4bf af57 	bcs.w	8012e66 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012fb8:	f240 60ea 	movw	r0, #1770	; 0x6ea
 8012fbc:	4283      	cmp	r3, r0
 8012fbe:	f43f af79 	beq.w	8012eb4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012fc2:	e7ac      	b.n	8012f1e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8012fc4:	f240 60ed 	movw	r0, #1773	; 0x6ed
 8012fc8:	e7f8      	b.n	8012fbc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 8012fca:	f640 00e8 	movw	r0, #2280	; 0x8e8
 8012fce:	4283      	cmp	r3, r0
 8012fd0:	d802      	bhi.n	8012fd8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 8012fd2:	f640 00e7 	movw	r0, #2279	; 0x8e7
 8012fd6:	e798      	b.n	8012f0a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 8012fd8:	f640 00e9 	movw	r0, #2281	; 0x8e9
 8012fdc:	4283      	cmp	r3, r0
 8012fde:	f47f af42 	bne.w	8012e66 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012fe2:	e767      	b.n	8012eb4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012fe4:	f640 00f6 	movw	r0, #2294	; 0x8f6
 8012fe8:	4283      	cmp	r3, r0
 8012fea:	f43f af63 	beq.w	8012eb4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012fee:	d802      	bhi.n	8012ff6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 8012ff0:	f640 00f2 	movw	r0, #2290	; 0x8f2
 8012ff4:	e7f2      	b.n	8012fdc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 8012ff6:	f640 00fa 	movw	r0, #2298	; 0x8fa
 8012ffa:	4283      	cmp	r3, r0
 8012ffc:	d805      	bhi.n	801300a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 8012ffe:	f640 00f9 	movw	r0, #2297	; 0x8f9
 8013002:	4283      	cmp	r3, r0
 8013004:	f4ff af2f 	bcc.w	8012e66 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013008:	e754      	b.n	8012eb4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801300a:	f640 00fe 	movw	r0, #2302	; 0x8fe
 801300e:	4283      	cmp	r3, r0
 8013010:	e7af      	b.n	8012f72 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 8013012:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8013016:	4617      	mov	r7, r2
 8013018:	f102 0808 	add.w	r8, r2, #8
 801301c:	4666      	mov	r6, ip
 801301e:	6838      	ldr	r0, [r7, #0]
 8013020:	6879      	ldr	r1, [r7, #4]
 8013022:	46e6      	mov	lr, ip
 8013024:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8013028:	3708      	adds	r7, #8
 801302a:	4547      	cmp	r7, r8
 801302c:	46f4      	mov	ip, lr
 801302e:	d1f6      	bne.n	801301e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 8013030:	6838      	ldr	r0, [r7, #0]
 8013032:	f8ce 0000 	str.w	r0, [lr]
 8013036:	88b9      	ldrh	r1, [r7, #4]
 8013038:	f8ae 1004 	strh.w	r1, [lr, #4]
 801303c:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8013040:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8013044:	d009      	beq.n	801305a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 8013046:	7b51      	ldrb	r1, [r2, #13]
 8013048:	7992      	ldrb	r2, [r2, #6]
 801304a:	0149      	lsls	r1, r1, #5
 801304c:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8013050:	4311      	orrs	r1, r2
 8013052:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8013056:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 801305a:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801305e:	b2ad      	uxth	r5, r5
 8013060:	d00d      	beq.n	801307e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 8013062:	442b      	add	r3, r5
 8013064:	b29b      	uxth	r3, r3
 8013066:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 801306a:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 801306e:	10db      	asrs	r3, r3, #3
 8013070:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8013074:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8013078:	4313      	orrs	r3, r2
 801307a:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 801307e:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8013082:	00cb      	lsls	r3, r1, #3
 8013084:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8013088:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 801308c:	064f      	lsls	r7, r1, #25
 801308e:	ea43 0302 	orr.w	r3, r3, r2
 8013092:	bf44      	itt	mi
 8013094:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8013098:	b21b      	sxthmi	r3, r3
 801309a:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801309e:	1b5b      	subs	r3, r3, r5
 80130a0:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 80130a4:	4632      	mov	r2, r6
 80130a6:	e6fa      	b.n	8012e9e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 80130a8:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 80130ac:	4617      	mov	r7, r2
 80130ae:	f102 0908 	add.w	r9, r2, #8
 80130b2:	4666      	mov	r6, ip
 80130b4:	6838      	ldr	r0, [r7, #0]
 80130b6:	6879      	ldr	r1, [r7, #4]
 80130b8:	46e0      	mov	r8, ip
 80130ba:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 80130be:	3708      	adds	r7, #8
 80130c0:	454f      	cmp	r7, r9
 80130c2:	46c4      	mov	ip, r8
 80130c4:	d1f6      	bne.n	80130b4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 80130c6:	6838      	ldr	r0, [r7, #0]
 80130c8:	f8c8 0000 	str.w	r0, [r8]
 80130cc:	88b9      	ldrh	r1, [r7, #4]
 80130ce:	f8a8 1004 	strh.w	r1, [r8, #4]
 80130d2:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 80130d6:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 80130da:	d009      	beq.n	80130f0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 80130dc:	7b51      	ldrb	r1, [r2, #13]
 80130de:	7992      	ldrb	r2, [r2, #6]
 80130e0:	0149      	lsls	r1, r1, #5
 80130e2:	f401 7180 	and.w	r1, r1, #256	; 0x100
 80130e6:	4311      	orrs	r1, r2
 80130e8:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 80130ec:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 80130f0:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 80130f4:	d00e      	beq.n	8013114 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 80130f6:	eba3 030e 	sub.w	r3, r3, lr
 80130fa:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 80130fe:	b29b      	uxth	r3, r3
 8013100:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8013104:	10db      	asrs	r3, r3, #3
 8013106:	f003 0360 	and.w	r3, r3, #96	; 0x60
 801310a:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 801310e:	4313      	orrs	r3, r2
 8013110:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8013114:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8013118:	00cb      	lsls	r3, r1, #3
 801311a:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801311e:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8013122:	0648      	lsls	r0, r1, #25
 8013124:	ea43 0302 	orr.w	r3, r3, r2
 8013128:	bf44      	itt	mi
 801312a:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801312e:	b21b      	sxthmi	r3, r3
 8013130:	1b5d      	subs	r5, r3, r5
 8013132:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8013136:	e7b5      	b.n	80130a4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

08013138 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 8013138:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801313c:	461e      	mov	r6, r3
 801313e:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8013140:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8013144:	4604      	mov	r4, r0
 8013146:	4617      	mov	r7, r2
 8013148:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 801314c:	f7f1 fdb6 	bl	8004cbc <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8013150:	4605      	mov	r5, r0
 8013152:	b918      	cbnz	r0, 801315c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 8013154:	6030      	str	r0, [r6, #0]
 8013156:	4628      	mov	r0, r5
 8013158:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801315c:	683b      	ldr	r3, [r7, #0]
 801315e:	4601      	mov	r1, r0
 8013160:	68db      	ldr	r3, [r3, #12]
 8013162:	4638      	mov	r0, r7
 8013164:	4798      	blx	r3
 8013166:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 801316a:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 801316e:	4602      	mov	r2, r0
 8013170:	6030      	str	r0, [r6, #0]
 8013172:	d213      	bcs.n	801319c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 8013174:	4643      	mov	r3, r8
 8013176:	4639      	mov	r1, r7
 8013178:	4620      	mov	r0, r4
 801317a:	f7ff fe3b 	bl	8012df4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801317e:	6030      	str	r0, [r6, #0]
 8013180:	6833      	ldr	r3, [r6, #0]
 8013182:	b143      	cbz	r3, 8013196 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 8013184:	7b5a      	ldrb	r2, [r3, #13]
 8013186:	7a9b      	ldrb	r3, [r3, #10]
 8013188:	0052      	lsls	r2, r2, #1
 801318a:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801318e:	4313      	orrs	r3, r2
 8013190:	bf0c      	ite	eq
 8013192:	2301      	moveq	r3, #1
 8013194:	2300      	movne	r3, #0
 8013196:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 801319a:	e7dc      	b.n	8013156 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 801319c:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 80131a0:	b29b      	uxth	r3, r3
 80131a2:	2b7f      	cmp	r3, #127	; 0x7f
 80131a4:	d804      	bhi.n	80131b0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 80131a6:	4639      	mov	r1, r7
 80131a8:	4620      	mov	r0, r4
 80131aa:	f7ff fd17 	bl	8012bdc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 80131ae:	e7e6      	b.n	801317e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 80131b0:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 80131b4:	2b00      	cmp	r3, #0
 80131b6:	d0e3      	beq.n	8013180 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 80131b8:	f640 1302 	movw	r3, #2306	; 0x902
 80131bc:	429d      	cmp	r5, r3
 80131be:	d1df      	bne.n	8013180 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 80131c0:	4601      	mov	r1, r0
 80131c2:	4620      	mov	r0, r4
 80131c4:	f7ff fcdc 	bl	8012b80 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 80131c8:	e7d9      	b.n	801317e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

080131ca <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 80131ca:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80131ce:	461e      	mov	r6, r3
 80131d0:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80131d2:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80131d6:	4604      	mov	r4, r0
 80131d8:	4617      	mov	r7, r2
 80131da:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 80131de:	f7f1 fd6d 	bl	8004cbc <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80131e2:	4605      	mov	r5, r0
 80131e4:	b918      	cbnz	r0, 80131ee <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 80131e6:	6030      	str	r0, [r6, #0]
 80131e8:	4628      	mov	r0, r5
 80131ea:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80131ee:	683b      	ldr	r3, [r7, #0]
 80131f0:	4601      	mov	r1, r0
 80131f2:	f8d3 9008 	ldr.w	r9, [r3, #8]
 80131f6:	4638      	mov	r0, r7
 80131f8:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 80131fc:	47c8      	blx	r9
 80131fe:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8013202:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8013206:	4602      	mov	r2, r0
 8013208:	6030      	str	r0, [r6, #0]
 801320a:	d213      	bcs.n	8013234 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 801320c:	4643      	mov	r3, r8
 801320e:	4639      	mov	r1, r7
 8013210:	4620      	mov	r0, r4
 8013212:	f7ff fdef 	bl	8012df4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8013216:	6030      	str	r0, [r6, #0]
 8013218:	6833      	ldr	r3, [r6, #0]
 801321a:	b143      	cbz	r3, 801322e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 801321c:	7b5a      	ldrb	r2, [r3, #13]
 801321e:	7a9b      	ldrb	r3, [r3, #10]
 8013220:	0052      	lsls	r2, r2, #1
 8013222:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8013226:	4313      	orrs	r3, r2
 8013228:	bf0c      	ite	eq
 801322a:	2301      	moveq	r3, #1
 801322c:	2300      	movne	r3, #0
 801322e:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 8013232:	e7d9      	b.n	80131e8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 8013234:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8013238:	b29b      	uxth	r3, r3
 801323a:	2b7f      	cmp	r3, #127	; 0x7f
 801323c:	d804      	bhi.n	8013248 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 801323e:	4639      	mov	r1, r7
 8013240:	4620      	mov	r0, r4
 8013242:	f7ff fccb 	bl	8012bdc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8013246:	e7e6      	b.n	8013216 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 8013248:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 801324c:	2b00      	cmp	r3, #0
 801324e:	d0e3      	beq.n	8013218 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8013250:	f640 1302 	movw	r3, #2306	; 0x902
 8013254:	429d      	cmp	r5, r3
 8013256:	d1df      	bne.n	8013218 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8013258:	4601      	mov	r1, r0
 801325a:	4620      	mov	r0, r4
 801325c:	f7ff fc90 	bl	8012b80 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8013260:	e7d9      	b.n	8013216 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

08013262 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 8013262:	b510      	push	{r4, lr}
 8013264:	4604      	mov	r4, r0
 8013266:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 801326a:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801326c:	b1f1      	cbz	r1, 80132ac <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 801326e:	2b0a      	cmp	r3, #10
 8013270:	d02f      	beq.n	80132d2 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 8013272:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 8013274:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 8013278:	3901      	subs	r1, #1
 801327a:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 801327c:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 8013280:	1c51      	adds	r1, r2, #1
 8013282:	b289      	uxth	r1, r1
 8013284:	2901      	cmp	r1, #1
 8013286:	bf84      	itt	hi
 8013288:	f102 32ff 	addhi.w	r2, r2, #4294967295
 801328c:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 801328e:	f103 0201 	add.w	r2, r3, #1
 8013292:	8722      	strh	r2, [r4, #56]	; 0x38
 8013294:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8013296:	bf98      	it	ls
 8013298:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 801329a:	4413      	add	r3, r2
 801329c:	b29b      	uxth	r3, r3
 801329e:	2b09      	cmp	r3, #9
 80132a0:	bf88      	it	hi
 80132a2:	3b0a      	subhi	r3, #10
 80132a4:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80132a8:	8458      	strh	r0, [r3, #34]	; 0x22
 80132aa:	e7dc      	b.n	8013266 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 80132ac:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80132ae:	2b0a      	cmp	r3, #10
 80132b0:	d00f      	beq.n	80132d2 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 80132b2:	4620      	mov	r0, r4
 80132b4:	f7ff fc12 	bl	8012adc <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 80132b8:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80132ba:	1c5a      	adds	r2, r3, #1
 80132bc:	8722      	strh	r2, [r4, #56]	; 0x38
 80132be:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80132c0:	4413      	add	r3, r2
 80132c2:	b29b      	uxth	r3, r3
 80132c4:	2b09      	cmp	r3, #9
 80132c6:	bf88      	it	hi
 80132c8:	3b0a      	subhi	r3, #10
 80132ca:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80132ce:	8458      	strh	r0, [r3, #34]	; 0x22
 80132d0:	e7ec      	b.n	80132ac <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 80132d2:	bd10      	pop	{r4, pc}

080132d4 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 80132d4:	b538      	push	{r3, r4, r5, lr}
 80132d6:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80132d8:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 80132dc:	4604      	mov	r4, r0
 80132de:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 80132e0:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 80132e2:	3a01      	subs	r2, #1
 80132e4:	8702      	strh	r2, [r0, #56]	; 0x38
 80132e6:	1c5a      	adds	r2, r3, #1
 80132e8:	b292      	uxth	r2, r2
 80132ea:	2a09      	cmp	r2, #9
 80132ec:	bf86      	itte	hi
 80132ee:	3b09      	subhi	r3, #9
 80132f0:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 80132f2:	86c2      	strhls	r2, [r0, #54]	; 0x36
 80132f4:	f7ff ffb5 	bl	8013262 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 80132f8:	8c23      	ldrh	r3, [r4, #32]
 80132fa:	2b01      	cmp	r3, #1
 80132fc:	bf9c      	itt	ls
 80132fe:	3301      	addls	r3, #1
 8013300:	8423      	strhls	r3, [r4, #32]
 8013302:	8be3      	ldrh	r3, [r4, #30]
 8013304:	b90b      	cbnz	r3, 801330a <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 8013306:	2302      	movs	r3, #2
 8013308:	83e3      	strh	r3, [r4, #30]
 801330a:	8be3      	ldrh	r3, [r4, #30]
 801330c:	3b01      	subs	r3, #1
 801330e:	b29b      	uxth	r3, r3
 8013310:	83e3      	strh	r3, [r4, #30]
 8013312:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013316:	4628      	mov	r0, r5
 8013318:	8365      	strh	r5, [r4, #26]
 801331a:	bd38      	pop	{r3, r4, r5, pc}

0801331c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 801331c:	428a      	cmp	r2, r1
 801331e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013322:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 8013324:	d931      	bls.n	801338a <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 8013326:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 8013328:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 801332c:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 8013330:	19ee      	adds	r6, r5, r7
 8013332:	1a54      	subs	r4, r2, r1
 8013334:	3e01      	subs	r6, #1
 8013336:	fa1f fe84 	uxth.w	lr, r4
 801333a:	b2b4      	uxth	r4, r6
 801333c:	eba4 090e 	sub.w	r9, r4, lr
 8013340:	fa1f f989 	uxth.w	r9, r9
 8013344:	2c09      	cmp	r4, #9
 8013346:	4626      	mov	r6, r4
 8013348:	bf88      	it	hi
 801334a:	f1a4 060a 	subhi.w	r6, r4, #10
 801334e:	f1bc 0f00 	cmp.w	ip, #0
 8013352:	bf08      	it	eq
 8013354:	f04f 0c02 	moveq.w	ip, #2
 8013358:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801335c:	f10c 3cff 	add.w	ip, ip, #4294967295
 8013360:	fa1f fc8c 	uxth.w	ip, ip
 8013364:	3c01      	subs	r4, #1
 8013366:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 801336a:	b2a4      	uxth	r4, r4
 801336c:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 8013370:	454c      	cmp	r4, r9
 8013372:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 8013376:	d1e5      	bne.n	8013344 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 8013378:	eba5 050e 	sub.w	r5, r5, lr
 801337c:	eb0e 0408 	add.w	r4, lr, r8
 8013380:	8705      	strh	r5, [r0, #56]	; 0x38
 8013382:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 8013386:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 801338a:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 801338c:	1a64      	subs	r4, r4, r1
 801338e:	4439      	add	r1, r7
 8013390:	b289      	uxth	r1, r1
 8013392:	2909      	cmp	r1, #9
 8013394:	bf88      	it	hi
 8013396:	390a      	subhi	r1, #10
 8013398:	8704      	strh	r4, [r0, #56]	; 0x38
 801339a:	86c1      	strh	r1, [r0, #54]	; 0x36
 801339c:	250a      	movs	r5, #10
 801339e:	b18a      	cbz	r2, 80133c4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 80133a0:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 80133a2:	3a01      	subs	r2, #1
 80133a4:	b292      	uxth	r2, r2
 80133a6:	3101      	adds	r1, #1
 80133a8:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 80133ac:	8701      	strh	r1, [r0, #56]	; 0x38
 80133ae:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 80133b0:	b901      	cbnz	r1, 80133b4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 80133b2:	86c5      	strh	r5, [r0, #54]	; 0x36
 80133b4:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 80133b6:	3901      	subs	r1, #1
 80133b8:	b289      	uxth	r1, r1
 80133ba:	86c1      	strh	r1, [r0, #54]	; 0x36
 80133bc:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 80133c0:	844c      	strh	r4, [r1, #34]	; 0x22
 80133c2:	e7ec      	b.n	801339e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 80133c4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80133c8:	f7ff bf4b 	b.w	8013262 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

080133cc <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 80133cc:	b570      	push	{r4, r5, r6, lr}
 80133ce:	2500      	movs	r5, #0
 80133d0:	4295      	cmp	r5, r2
 80133d2:	d011      	beq.n	80133f8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 80133d4:	8bc4      	ldrh	r4, [r0, #30]
 80133d6:	f831 6b02 	ldrh.w	r6, [r1], #2
 80133da:	4414      	add	r4, r2
 80133dc:	3c01      	subs	r4, #1
 80133de:	1b64      	subs	r4, r4, r5
 80133e0:	b2a4      	uxth	r4, r4
 80133e2:	2c01      	cmp	r4, #1
 80133e4:	bf88      	it	hi
 80133e6:	3c02      	subhi	r4, #2
 80133e8:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80133ec:	8b64      	ldrh	r4, [r4, #26]
 80133ee:	42b4      	cmp	r4, r6
 80133f0:	d117      	bne.n	8013422 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 80133f2:	3501      	adds	r5, #1
 80133f4:	b2ad      	uxth	r5, r5
 80133f6:	e7eb      	b.n	80133d0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 80133f8:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80133fc:	2400      	movs	r4, #0
 80133fe:	4413      	add	r3, r2
 8013400:	b2a2      	uxth	r2, r4
 8013402:	429a      	cmp	r2, r3
 8013404:	da0f      	bge.n	8013426 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 8013406:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 8013408:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 801340c:	4432      	add	r2, r6
 801340e:	b292      	uxth	r2, r2
 8013410:	2a09      	cmp	r2, #9
 8013412:	bf88      	it	hi
 8013414:	3a0a      	subhi	r2, #10
 8013416:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801341a:	3401      	adds	r4, #1
 801341c:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 801341e:	42aa      	cmp	r2, r5
 8013420:	d0ee      	beq.n	8013400 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 8013422:	2000      	movs	r0, #0
 8013424:	bd70      	pop	{r4, r5, r6, pc}
 8013426:	2001      	movs	r0, #1
 8013428:	e7fc      	b.n	8013424 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

0801342a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 801342a:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801342e:	4605      	mov	r5, r0
 8013430:	4616      	mov	r6, r2
 8013432:	1c8c      	adds	r4, r1, #2
 8013434:	8809      	ldrh	r1, [r1, #0]
 8013436:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 801343a:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 801343e:	42b3      	cmp	r3, r6
 8013440:	d124      	bne.n	801348c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 8013442:	f3c1 2903 	ubfx	r9, r1, #8, #4
 8013446:	f3c1 1803 	ubfx	r8, r1, #4, #4
 801344a:	f001 070f 	and.w	r7, r1, #15
 801344e:	f8cd 8000 	str.w	r8, [sp]
 8013452:	464b      	mov	r3, r9
 8013454:	4652      	mov	r2, sl
 8013456:	4621      	mov	r1, r4
 8013458:	4628      	mov	r0, r5
 801345a:	f7ff ffb7 	bl	80133cc <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 801345e:	4683      	mov	fp, r0
 8013460:	b168      	cbz	r0, 801347e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 8013462:	eb0a 0109 	add.w	r1, sl, r9
 8013466:	4441      	add	r1, r8
 8013468:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 801346c:	463a      	mov	r2, r7
 801346e:	4649      	mov	r1, r9
 8013470:	4628      	mov	r0, r5
 8013472:	f7ff ff53 	bl	801331c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 8013476:	4658      	mov	r0, fp
 8013478:	b003      	add	sp, #12
 801347a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801347e:	eb07 010a 	add.w	r1, r7, sl
 8013482:	4449      	add	r1, r9
 8013484:	4441      	add	r1, r8
 8013486:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 801348a:	e7d2      	b.n	8013432 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 801348c:	f04f 0b00 	mov.w	fp, #0
 8013490:	e7f1      	b.n	8013476 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

08013492 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 8013492:	b570      	push	{r4, r5, r6, lr}
 8013494:	8810      	ldrh	r0, [r2, #0]
 8013496:	4298      	cmp	r0, r3
 8013498:	d817      	bhi.n	80134ca <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801349a:	1e48      	subs	r0, r1, #1
 801349c:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 80134a0:	4298      	cmp	r0, r3
 80134a2:	d312      	bcc.n	80134ca <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80134a4:	2400      	movs	r4, #0
 80134a6:	428c      	cmp	r4, r1
 80134a8:	d20f      	bcs.n	80134ca <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80134aa:	1860      	adds	r0, r4, r1
 80134ac:	1040      	asrs	r0, r0, #1
 80134ae:	0085      	lsls	r5, r0, #2
 80134b0:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 80134b4:	42b3      	cmp	r3, r6
 80134b6:	d902      	bls.n	80134be <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 80134b8:	3001      	adds	r0, #1
 80134ba:	b284      	uxth	r4, r0
 80134bc:	e7f3      	b.n	80134a6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 80134be:	d201      	bcs.n	80134c4 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 80134c0:	b281      	uxth	r1, r0
 80134c2:	e7f0      	b.n	80134a6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 80134c4:	442a      	add	r2, r5
 80134c6:	8850      	ldrh	r0, [r2, #2]
 80134c8:	bd70      	pop	{r4, r5, r6, pc}
 80134ca:	2000      	movs	r0, #0
 80134cc:	e7fc      	b.n	80134c8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

080134ce <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 80134ce:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80134d2:	6c45      	ldr	r5, [r0, #68]	; 0x44
 80134d4:	886f      	ldrh	r7, [r5, #2]
 80134d6:	4604      	mov	r4, r0
 80134d8:	087f      	lsrs	r7, r7, #1
 80134da:	260b      	movs	r6, #11
 80134dc:	3e01      	subs	r6, #1
 80134de:	d013      	beq.n	8013508 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 80134e0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80134e2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80134e6:	462a      	mov	r2, r5
 80134e8:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 80134ec:	4639      	mov	r1, r7
 80134ee:	4643      	mov	r3, r8
 80134f0:	4620      	mov	r0, r4
 80134f2:	f7ff ffce 	bl	8013492 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 80134f6:	b138      	cbz	r0, 8013508 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 80134f8:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 80134fc:	4642      	mov	r2, r8
 80134fe:	4620      	mov	r0, r4
 8013500:	f7ff ff93 	bl	801342a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 8013504:	2800      	cmp	r0, #0
 8013506:	d1e9      	bne.n	80134dc <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 8013508:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801350c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 801350c:	b570      	push	{r4, r5, r6, lr}
 801350e:	694a      	ldr	r2, [r1, #20]
 8013510:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8013512:	684b      	ldr	r3, [r1, #4]
 8013514:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 8013516:	1b54      	subs	r4, r2, r5
 8013518:	f000 8106 	beq.w	8013728 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 801351c:	1b9b      	subs	r3, r3, r6
 801351e:	d003      	beq.n	8013528 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8013520:	4363      	muls	r3, r4
 8013522:	2210      	movs	r2, #16
 8013524:	fb93 f3f2 	sdiv	r3, r3, r2
 8013528:	680c      	ldr	r4, [r1, #0]
 801352a:	698a      	ldr	r2, [r1, #24]
 801352c:	1b65      	subs	r5, r4, r5
 801352e:	f000 80fd 	beq.w	801372c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 8013532:	1b92      	subs	r2, r2, r6
 8013534:	d003      	beq.n	801353e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8013536:	436a      	muls	r2, r5
 8013538:	2410      	movs	r4, #16
 801353a:	fb92 f2f4 	sdiv	r2, r2, r4
 801353e:	1a9b      	subs	r3, r3, r2
 8013540:	ee07 3a90 	vmov	s15, r3
 8013544:	ed9f 4a88 	vldr	s8, [pc, #544]	; 8013768 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 8013548:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801354c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8013550:	ee67 7a84 	vmul.f32	s15, s15, s8
 8013554:	460a      	mov	r2, r1
 8013556:	ee87 3a27 	vdiv.f32	s6, s14, s15
 801355a:	4603      	mov	r3, r0
 801355c:	f100 040c 	add.w	r4, r0, #12
 8013560:	eeb1 6a43 	vneg.f32	s12, s6
 8013564:	edd2 7a02 	vldr	s15, [r2, #8]
 8013568:	eec7 6a27 	vdiv.f32	s13, s14, s15
 801356c:	3214      	adds	r2, #20
 801356e:	ece3 6a01 	vstmia	r3!, {s13}
 8013572:	ed52 7a02 	vldr	s15, [r2, #-8]
 8013576:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801357a:	429c      	cmp	r4, r3
 801357c:	edc3 7a02 	vstr	s15, [r3, #8]
 8013580:	ed52 7a01 	vldr	s15, [r2, #-4]
 8013584:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8013588:	edc3 7a05 	vstr	s15, [r3, #20]
 801358c:	d1ea      	bne.n	8013564 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 801358e:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8013590:	698b      	ldr	r3, [r1, #24]
 8013592:	edd0 4a02 	vldr	s9, [r0, #8]
 8013596:	edd0 3a00 	vldr	s7, [r0]
 801359a:	edd0 6a01 	vldr	s13, [r0, #4]
 801359e:	ed90 5a05 	vldr	s10, [r0, #20]
 80135a2:	ed90 2a03 	vldr	s4, [r0, #12]
 80135a6:	edd0 5a04 	vldr	s11, [r0, #16]
 80135aa:	ed90 1a07 	vldr	s2, [r0, #28]
 80135ae:	edd0 2a06 	vldr	s5, [r0, #24]
 80135b2:	1a9b      	subs	r3, r3, r2
 80135b4:	ee07 3a90 	vmov	s15, r3
 80135b8:	684b      	ldr	r3, [r1, #4]
 80135ba:	1a9b      	subs	r3, r3, r2
 80135bc:	ee07 3a10 	vmov	s14, r3
 80135c0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80135c4:	ee76 6ae4 	vsub.f32	s13, s13, s9
 80135c8:	ee67 7a84 	vmul.f32	s15, s15, s8
 80135cc:	ee73 4ae4 	vsub.f32	s9, s7, s9
 80135d0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80135d4:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 80135d8:	ee27 7a04 	vmul.f32	s14, s14, s8
 80135dc:	ee75 5ac5 	vsub.f32	s11, s11, s10
 80135e0:	eee6 7a87 	vfma.f32	s15, s13, s14
 80135e4:	ee32 5a45 	vsub.f32	s10, s4, s10
 80135e8:	ee67 7a83 	vmul.f32	s15, s15, s6
 80135ec:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 80135f0:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 80135f2:	694a      	ldr	r2, [r1, #20]
 80135f4:	1b13      	subs	r3, r2, r4
 80135f6:	ee07 3a10 	vmov	s14, r3
 80135fa:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80135fe:	680b      	ldr	r3, [r1, #0]
 8013600:	ee27 7a04 	vmul.f32	s14, s14, s8
 8013604:	1b1b      	subs	r3, r3, r4
 8013606:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 801360a:	ee07 3a10 	vmov	s14, r3
 801360e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013612:	ee27 7a04 	vmul.f32	s14, s14, s8
 8013616:	eee6 4a87 	vfma.f32	s9, s13, s14
 801361a:	ee64 4a86 	vmul.f32	s9, s9, s12
 801361e:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 8013622:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8013624:	698b      	ldr	r3, [r1, #24]
 8013626:	1a9b      	subs	r3, r3, r2
 8013628:	ee06 3a90 	vmov	s13, r3
 801362c:	684b      	ldr	r3, [r1, #4]
 801362e:	1a9b      	subs	r3, r3, r2
 8013630:	ee07 3a10 	vmov	s14, r3
 8013634:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8013638:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801363c:	ee66 6a84 	vmul.f32	s13, s13, s8
 8013640:	ee27 7a04 	vmul.f32	s14, s14, s8
 8013644:	ee65 6a66 	vnmul.f32	s13, s10, s13
 8013648:	eee5 6a87 	vfma.f32	s13, s11, s14
 801364c:	ee66 6a83 	vmul.f32	s13, s13, s6
 8013650:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 8013654:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8013656:	694a      	ldr	r2, [r1, #20]
 8013658:	1b13      	subs	r3, r2, r4
 801365a:	ee07 3a10 	vmov	s14, r3
 801365e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013662:	680b      	ldr	r3, [r1, #0]
 8013664:	ee27 7a04 	vmul.f32	s14, s14, s8
 8013668:	1b1b      	subs	r3, r3, r4
 801366a:	ee25 5a47 	vnmul.f32	s10, s10, s14
 801366e:	ee07 3a10 	vmov	s14, r3
 8013672:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013676:	ee27 7a04 	vmul.f32	s14, s14, s8
 801367a:	eea5 5a87 	vfma.f32	s10, s11, s14
 801367e:	edd0 5a08 	vldr	s11, [r0, #32]
 8013682:	ee25 5a06 	vmul.f32	s10, s10, s12
 8013686:	ee31 1a65 	vsub.f32	s2, s2, s11
 801368a:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 801368e:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8013690:	698b      	ldr	r3, [r1, #24]
 8013692:	1a9b      	subs	r3, r3, r2
 8013694:	ee07 3a10 	vmov	s14, r3
 8013698:	684b      	ldr	r3, [r1, #4]
 801369a:	1a9b      	subs	r3, r3, r2
 801369c:	ee01 3a90 	vmov	s3, r3
 80136a0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80136a4:	ee72 5ae5 	vsub.f32	s11, s5, s11
 80136a8:	ee27 7a04 	vmul.f32	s14, s14, s8
 80136ac:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 80136b0:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 80136b4:	ee61 1a84 	vmul.f32	s3, s3, s8
 80136b8:	eea1 7a21 	vfma.f32	s14, s2, s3
 80136bc:	ee27 7a03 	vmul.f32	s14, s14, s6
 80136c0:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 80136c4:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 80136c6:	694a      	ldr	r2, [r1, #20]
 80136c8:	1b13      	subs	r3, r2, r4
 80136ca:	ee03 3a10 	vmov	s6, r3
 80136ce:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 80136d2:	680b      	ldr	r3, [r1, #0]
 80136d4:	ee23 3a04 	vmul.f32	s6, s6, s8
 80136d8:	1b1b      	subs	r3, r3, r4
 80136da:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 80136de:	ee03 3a10 	vmov	s6, r3
 80136e2:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 80136e6:	ee23 4a04 	vmul.f32	s8, s6, s8
 80136ea:	eee1 5a04 	vfma.f32	s11, s2, s8
 80136ee:	ee25 6a86 	vmul.f32	s12, s11, s12
 80136f2:	ee62 5a67 	vnmul.f32	s11, s4, s15
 80136f6:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 80136fa:	eee3 5aa6 	vfma.f32	s11, s7, s13
 80136fe:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8013702:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013706:	dd13      	ble.n	8013730 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 8013708:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 801370c:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 8013710:	63c3      	str	r3, [r0, #60]	; 0x3c
 8013712:	eee3 7a87 	vfma.f32	s15, s7, s14
 8013716:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801371a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801371e:	dd15      	ble.n	801374c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 8013720:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8013724:	6403      	str	r3, [r0, #64]	; 0x40
 8013726:	bd70      	pop	{r4, r5, r6, pc}
 8013728:	4623      	mov	r3, r4
 801372a:	e6fd      	b.n	8013528 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 801372c:	462a      	mov	r2, r5
 801372e:	e706      	b.n	801353e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8013730:	d502      	bpl.n	8013738 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 8013732:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8013736:	e7e9      	b.n	801370c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 8013738:	ee22 2a64 	vnmul.f32	s4, s4, s9
 801373c:	eea3 2a85 	vfma.f32	s4, s7, s10
 8013740:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 8013744:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013748:	dade      	bge.n	8013708 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 801374a:	e7f2      	b.n	8013732 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 801374c:	d502      	bpl.n	8013754 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 801374e:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8013752:	e7e7      	b.n	8013724 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 8013754:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 8013758:	eee3 4a86 	vfma.f32	s9, s7, s12
 801375c:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8013760:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013764:	dadc      	bge.n	8013720 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 8013766:	e7f2      	b.n	801374e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8013768:	3d800000 	.word	0x3d800000

0801376c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 801376c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013770:	2714      	movs	r7, #20
 8013772:	435f      	muls	r7, r3
 8013774:	eb02 0c07 	add.w	ip, r2, r7
 8013778:	f8dc 5004 	ldr.w	r5, [ip, #4]
 801377c:	f115 0e0f 	adds.w	lr, r5, #15
 8013780:	f100 80a2 	bmi.w	80138c8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 8013784:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 8013788:	9c08      	ldr	r4, [sp, #32]
 801378a:	f8c0 e014 	str.w	lr, [r0, #20]
 801378e:	2614      	movs	r6, #20
 8013790:	4366      	muls	r6, r4
 8013792:	eb02 0806 	add.w	r8, r2, r6
 8013796:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801379a:	f115 040f 	adds.w	r4, r5, #15
 801379e:	f100 809f 	bmi.w	80138e0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 80137a2:	1124      	asrs	r4, r4, #4
 80137a4:	eba4 040e 	sub.w	r4, r4, lr
 80137a8:	6184      	str	r4, [r0, #24]
 80137aa:	2c00      	cmp	r4, #0
 80137ac:	f000 808a 	beq.w	80138c4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 80137b0:	f8dc 9004 	ldr.w	r9, [ip, #4]
 80137b4:	f8d8 4004 	ldr.w	r4, [r8, #4]
 80137b8:	5995      	ldr	r5, [r2, r6]
 80137ba:	eba4 0809 	sub.w	r8, r4, r9
 80137be:	59d4      	ldr	r4, [r2, r7]
 80137c0:	eba5 0a04 	sub.w	sl, r5, r4
 80137c4:	ea4f 150a 	mov.w	r5, sl, lsl #4
 80137c8:	fb0e fe05 	mul.w	lr, lr, r5
 80137cc:	fb0a ee19 	mls	lr, sl, r9, lr
 80137d0:	fb08 e404 	mla	r4, r8, r4, lr
 80137d4:	ea4f 1608 	mov.w	r6, r8, lsl #4
 80137d8:	3c01      	subs	r4, #1
 80137da:	19a4      	adds	r4, r4, r6
 80137dc:	f100 808c 	bmi.w	80138f8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 80137e0:	fb94 fef6 	sdiv	lr, r4, r6
 80137e4:	f8c0 e000 	str.w	lr, [r0]
 80137e8:	fb06 441e 	mls	r4, r6, lr, r4
 80137ec:	6104      	str	r4, [r0, #16]
 80137ee:	2d00      	cmp	r5, #0
 80137f0:	f2c0 8095 	blt.w	801391e <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 80137f4:	fb95 f4f6 	sdiv	r4, r5, r6
 80137f8:	6044      	str	r4, [r0, #4]
 80137fa:	fb06 5514 	mls	r5, r6, r4, r5
 80137fe:	6085      	str	r5, [r0, #8]
 8013800:	60c6      	str	r6, [r0, #12]
 8013802:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8013806:	6945      	ldr	r5, [r0, #20]
 8013808:	59d2      	ldr	r2, [r2, r7]
 801380a:	eddf 6a4d 	vldr	s13, [pc, #308]	; 8013940 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 801380e:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 8013812:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 8013816:	ee07 4a10 	vmov	s14, r4
 801381a:	6804      	ldr	r4, [r0, #0]
 801381c:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 8013820:	ee07 2a90 	vmov	s15, r2
 8013824:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013828:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801382c:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8013830:	ee27 7a26 	vmul.f32	s14, s14, s13
 8013834:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8013838:	edd3 6a00 	vldr	s13, [r3]
 801383c:	eee6 6a07 	vfma.f32	s13, s12, s14
 8013840:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 8013844:	eee6 6a27 	vfma.f32	s13, s12, s15
 8013848:	edc0 6a07 	vstr	s13, [r0, #28]
 801384c:	edd0 6a01 	vldr	s13, [r0, #4]
 8013850:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 8013854:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 8013858:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801385c:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8013860:	ed80 6a08 	vstr	s12, [r0, #32]
 8013864:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 8013866:	6242      	str	r2, [r0, #36]	; 0x24
 8013868:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 801386c:	ed93 6a03 	vldr	s12, [r3, #12]
 8013870:	eea5 6a87 	vfma.f32	s12, s11, s14
 8013874:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8013878:	eea5 6aa7 	vfma.f32	s12, s11, s15
 801387c:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 8013880:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8013884:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 8013888:	eea6 6aa5 	vfma.f32	s12, s13, s11
 801388c:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 8013890:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8013892:	6302      	str	r2, [r0, #48]	; 0x30
 8013894:	ed93 6a06 	vldr	s12, [r3, #24]
 8013898:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 801389c:	eea5 6a87 	vfma.f32	s12, s11, s14
 80138a0:	eeb0 7a46 	vmov.f32	s14, s12
 80138a4:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 80138a8:	eea6 7a27 	vfma.f32	s14, s12, s15
 80138ac:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 80138b0:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 80138b4:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 80138b8:	eee6 7a87 	vfma.f32	s15, s13, s14
 80138bc:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 80138c0:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 80138c2:	63c3      	str	r3, [r0, #60]	; 0x3c
 80138c4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80138c8:	f1c5 0501 	rsb	r5, r5, #1
 80138cc:	f015 050f 	ands.w	r5, r5, #15
 80138d0:	bf18      	it	ne
 80138d2:	2501      	movne	r5, #1
 80138d4:	2410      	movs	r4, #16
 80138d6:	fb9e fef4 	sdiv	lr, lr, r4
 80138da:	ebae 0e05 	sub.w	lr, lr, r5
 80138de:	e753      	b.n	8013788 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 80138e0:	f1c5 0501 	rsb	r5, r5, #1
 80138e4:	f015 050f 	ands.w	r5, r5, #15
 80138e8:	bf18      	it	ne
 80138ea:	2501      	movne	r5, #1
 80138ec:	f04f 0910 	mov.w	r9, #16
 80138f0:	fb94 f4f9 	sdiv	r4, r4, r9
 80138f4:	1b64      	subs	r4, r4, r5
 80138f6:	e755      	b.n	80137a4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 80138f8:	4264      	negs	r4, r4
 80138fa:	fb94 fef6 	sdiv	lr, r4, r6
 80138fe:	f1ce 0800 	rsb	r8, lr, #0
 8013902:	fb06 441e 	mls	r4, r6, lr, r4
 8013906:	f8c0 8000 	str.w	r8, [r0]
 801390a:	6104      	str	r4, [r0, #16]
 801390c:	2c00      	cmp	r4, #0
 801390e:	f43f af6e 	beq.w	80137ee <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 8013912:	ea6f 0e0e 	mvn.w	lr, lr
 8013916:	f8c0 e000 	str.w	lr, [r0]
 801391a:	1b34      	subs	r4, r6, r4
 801391c:	e766      	b.n	80137ec <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 801391e:	426d      	negs	r5, r5
 8013920:	fb95 f4f6 	sdiv	r4, r5, r6
 8013924:	f1c4 0e00 	rsb	lr, r4, #0
 8013928:	fb06 5514 	mls	r5, r6, r4, r5
 801392c:	f8c0 e004 	str.w	lr, [r0, #4]
 8013930:	6085      	str	r5, [r0, #8]
 8013932:	2d00      	cmp	r5, #0
 8013934:	f43f af64 	beq.w	8013800 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 8013938:	43e4      	mvns	r4, r4
 801393a:	6044      	str	r4, [r0, #4]
 801393c:	1b75      	subs	r5, r6, r5
 801393e:	e75e      	b.n	80137fe <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 8013940:	3d800000 	.word	0x3d800000

08013944 <_ZN8touchgfx7Unicode6strlenEPKt>:
 8013944:	4602      	mov	r2, r0
 8013946:	b148      	cbz	r0, 801395c <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 8013948:	2300      	movs	r3, #0
 801394a:	b298      	uxth	r0, r3
 801394c:	3301      	adds	r3, #1
 801394e:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 8013952:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 8013956:	2900      	cmp	r1, #0
 8013958:	d1f7      	bne.n	801394a <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 801395a:	4770      	bx	lr
 801395c:	4770      	bx	lr

0801395e <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 801395e:	b530      	push	{r4, r5, lr}
 8013960:	4604      	mov	r4, r0
 8013962:	b159      	cbz	r1, 801397c <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 8013964:	b148      	cbz	r0, 801397a <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8013966:	2300      	movs	r3, #0
 8013968:	b298      	uxth	r0, r3
 801396a:	4282      	cmp	r2, r0
 801396c:	d905      	bls.n	801397a <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 801396e:	5ccd      	ldrb	r5, [r1, r3]
 8013970:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 8013974:	3301      	adds	r3, #1
 8013976:	2d00      	cmp	r5, #0
 8013978:	d1f6      	bne.n	8013968 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 801397a:	bd30      	pop	{r4, r5, pc}
 801397c:	4608      	mov	r0, r1
 801397e:	e7fc      	b.n	801397a <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

08013980 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>:
 8013980:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013982:	b08b      	sub	sp, #44	; 0x2c
 8013984:	468c      	mov	ip, r1
 8013986:	2100      	movs	r1, #0
 8013988:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 801398c:	ae01      	add	r6, sp, #4
 801398e:	211f      	movs	r1, #31
 8013990:	fbb0 f7f3 	udiv	r7, r0, r3
 8013994:	fb03 0517 	mls	r5, r3, r7, r0
 8013998:	b2ec      	uxtb	r4, r5
 801399a:	2d09      	cmp	r5, #9
 801399c:	bfd4      	ite	le
 801399e:	3430      	addle	r4, #48	; 0x30
 80139a0:	3457      	addgt	r4, #87	; 0x57
 80139a2:	b2e4      	uxtb	r4, r4
 80139a4:	558c      	strb	r4, [r1, r6]
 80139a6:	4638      	mov	r0, r7
 80139a8:	1e4c      	subs	r4, r1, #1
 80139aa:	b92f      	cbnz	r7, 80139b8 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x38>
 80139ac:	4431      	add	r1, r6
 80139ae:	4660      	mov	r0, ip
 80139b0:	f7ff ffd5 	bl	801395e <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 80139b4:	b00b      	add	sp, #44	; 0x2c
 80139b6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80139b8:	4621      	mov	r1, r4
 80139ba:	e7e9      	b.n	8013990 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x10>

080139bc <_ZN8touchgfx7Unicode4itoaElPtti>:
 80139bc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80139be:	4607      	mov	r7, r0
 80139c0:	b08b      	sub	sp, #44	; 0x2c
 80139c2:	4608      	mov	r0, r1
 80139c4:	b341      	cbz	r1, 8013a18 <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 80139c6:	1e99      	subs	r1, r3, #2
 80139c8:	2922      	cmp	r1, #34	; 0x22
 80139ca:	d825      	bhi.n	8013a18 <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 80139cc:	2100      	movs	r1, #0
 80139ce:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 80139d2:	463c      	mov	r4, r7
 80139d4:	261f      	movs	r6, #31
 80139d6:	f10d 0c04 	add.w	ip, sp, #4
 80139da:	fb94 fef3 	sdiv	lr, r4, r3
 80139de:	fb03 441e 	mls	r4, r3, lr, r4
 80139e2:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 80139e6:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 80139ea:	b2ec      	uxtb	r4, r5
 80139ec:	2d09      	cmp	r5, #9
 80139ee:	bfd4      	ite	le
 80139f0:	3430      	addle	r4, #48	; 0x30
 80139f2:	3457      	addgt	r4, #87	; 0x57
 80139f4:	b2e4      	uxtb	r4, r4
 80139f6:	f80c 4006 	strb.w	r4, [ip, r6]
 80139fa:	4674      	mov	r4, lr
 80139fc:	1e71      	subs	r1, r6, #1
 80139fe:	b96c      	cbnz	r4, 8013a1c <_ZN8touchgfx7Unicode4itoaElPtti+0x60>
 8013a00:	2f00      	cmp	r7, #0
 8013a02:	da05      	bge.n	8013a10 <_ZN8touchgfx7Unicode4itoaElPtti+0x54>
 8013a04:	ab0a      	add	r3, sp, #40	; 0x28
 8013a06:	4419      	add	r1, r3
 8013a08:	232d      	movs	r3, #45	; 0x2d
 8013a0a:	f801 3c24 	strb.w	r3, [r1, #-36]
 8013a0e:	1eb1      	subs	r1, r6, #2
 8013a10:	3101      	adds	r1, #1
 8013a12:	4461      	add	r1, ip
 8013a14:	f7ff ffa3 	bl	801395e <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8013a18:	b00b      	add	sp, #44	; 0x2c
 8013a1a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013a1c:	460e      	mov	r6, r1
 8013a1e:	e7dc      	b.n	80139da <_ZN8touchgfx7Unicode4itoaElPtti+0x1e>

08013a20 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 8013a20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013a24:	4691      	mov	r9, r2
 8013a26:	b085      	sub	sp, #20
 8013a28:	6802      	ldr	r2, [r0, #0]
 8013a2a:	9201      	str	r2, [sp, #4]
 8013a2c:	4688      	mov	r8, r1
 8013a2e:	4683      	mov	fp, r0
 8013a30:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 8013a34:	9103      	str	r1, [sp, #12]
 8013a36:	4610      	mov	r0, r2
 8013a38:	461c      	mov	r4, r3
 8013a3a:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 8013a3e:	9302      	str	r3, [sp, #8]
 8013a40:	f7ff ff80 	bl	8013944 <_ZN8touchgfx7Unicode6strlenEPKt>
 8013a44:	f1b8 0f00 	cmp.w	r8, #0
 8013a48:	bf0c      	ite	eq
 8013a4a:	4684      	moveq	ip, r0
 8013a4c:	f100 0c01 	addne.w	ip, r0, #1
 8013a50:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 8013a54:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 8013a58:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8013a5a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8013a5c:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 8013a60:	9903      	ldr	r1, [sp, #12]
 8013a62:	fa1f fc8c 	uxth.w	ip, ip
 8013a66:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 8013a6a:	d041      	beq.n	8013af0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8013a6c:	d834      	bhi.n	8013ad8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 8013a6e:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 8013a72:	d059      	beq.n	8013b28 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 8013a74:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 8013a78:	d03a      	beq.n	8013af0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8013a7a:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 8013a7e:	d034      	beq.n	8013aea <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8013a80:	2400      	movs	r4, #0
 8013a82:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 8013a86:	3a01      	subs	r2, #1
 8013a88:	b169      	cbz	r1, 8013aa6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8013a8a:	9911      	ldr	r1, [sp, #68]	; 0x44
 8013a8c:	458c      	cmp	ip, r1
 8013a8e:	da09      	bge.n	8013aa4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8013a90:	eba1 010c 	sub.w	r1, r1, ip
 8013a94:	b289      	uxth	r1, r1
 8013a96:	b933      	cbnz	r3, 8013aa6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8013a98:	2e00      	cmp	r6, #0
 8013a9a:	d051      	beq.n	8013b40 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8013a9c:	2800      	cmp	r0, #0
 8013a9e:	d04f      	beq.n	8013b40 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8013aa0:	440c      	add	r4, r1
 8013aa2:	b2a4      	uxth	r4, r4
 8013aa4:	2100      	movs	r1, #0
 8013aa6:	682b      	ldr	r3, [r5, #0]
 8013aa8:	4293      	cmp	r3, r2
 8013aaa:	da07      	bge.n	8013abc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8013aac:	f1b8 0f00 	cmp.w	r8, #0
 8013ab0:	d004      	beq.n	8013abc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8013ab2:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 8013ab6:	682b      	ldr	r3, [r5, #0]
 8013ab8:	3301      	adds	r3, #1
 8013aba:	602b      	str	r3, [r5, #0]
 8013abc:	2730      	movs	r7, #48	; 0x30
 8013abe:	2c00      	cmp	r4, #0
 8013ac0:	d04e      	beq.n	8013b60 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8013ac2:	682e      	ldr	r6, [r5, #0]
 8013ac4:	3c01      	subs	r4, #1
 8013ac6:	42b2      	cmp	r2, r6
 8013ac8:	b2a4      	uxth	r4, r4
 8013aca:	dd49      	ble.n	8013b60 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8013acc:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8013ad0:	682b      	ldr	r3, [r5, #0]
 8013ad2:	3301      	adds	r3, #1
 8013ad4:	602b      	str	r3, [r5, #0]
 8013ad6:	e7f2      	b.n	8013abe <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 8013ad8:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 8013adc:	d01d      	beq.n	8013b1a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 8013ade:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 8013ae2:	d002      	beq.n	8013aea <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8013ae4:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 8013ae8:	e7c9      	b.n	8013a7e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 8013aea:	4684      	mov	ip, r0
 8013aec:	f04f 0800 	mov.w	r8, #0
 8013af0:	2c00      	cmp	r4, #0
 8013af2:	d0c6      	beq.n	8013a82 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8013af4:	b947      	cbnz	r7, 8013b08 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8013af6:	2801      	cmp	r0, #1
 8013af8:	d106      	bne.n	8013b08 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8013afa:	8814      	ldrh	r4, [r2, #0]
 8013afc:	2c30      	cmp	r4, #48	; 0x30
 8013afe:	bf02      	ittt	eq
 8013b00:	3202      	addeq	r2, #2
 8013b02:	f8cb 2000 	streq.w	r2, [fp]
 8013b06:	4638      	moveq	r0, r7
 8013b08:	45bc      	cmp	ip, r7
 8013b0a:	da14      	bge.n	8013b36 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 8013b0c:	b2bf      	uxth	r7, r7
 8013b0e:	eba7 040c 	sub.w	r4, r7, ip
 8013b12:	b2a4      	uxth	r4, r4
 8013b14:	46bc      	mov	ip, r7
 8013b16:	2600      	movs	r6, #0
 8013b18:	e7b3      	b.n	8013a82 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8013b1a:	4684      	mov	ip, r0
 8013b1c:	b16c      	cbz	r4, 8013b3a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 8013b1e:	42b8      	cmp	r0, r7
 8013b20:	dd00      	ble.n	8013b24 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 8013b22:	b2b8      	uxth	r0, r7
 8013b24:	2400      	movs	r4, #0
 8013b26:	e003      	b.n	8013b30 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 8013b28:	f04f 0c01 	mov.w	ip, #1
 8013b2c:	2400      	movs	r4, #0
 8013b2e:	4660      	mov	r0, ip
 8013b30:	4626      	mov	r6, r4
 8013b32:	46a0      	mov	r8, r4
 8013b34:	e7a5      	b.n	8013a82 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8013b36:	2400      	movs	r4, #0
 8013b38:	e7ed      	b.n	8013b16 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 8013b3a:	4626      	mov	r6, r4
 8013b3c:	46a0      	mov	r8, r4
 8013b3e:	e7a0      	b.n	8013a82 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8013b40:	2900      	cmp	r1, #0
 8013b42:	d0b0      	beq.n	8013aa6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8013b44:	2720      	movs	r7, #32
 8013b46:	682e      	ldr	r6, [r5, #0]
 8013b48:	2900      	cmp	r1, #0
 8013b4a:	d0ac      	beq.n	8013aa6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8013b4c:	3901      	subs	r1, #1
 8013b4e:	4296      	cmp	r6, r2
 8013b50:	b289      	uxth	r1, r1
 8013b52:	daa7      	bge.n	8013aa4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8013b54:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8013b58:	682b      	ldr	r3, [r5, #0]
 8013b5a:	3301      	adds	r3, #1
 8013b5c:	602b      	str	r3, [r5, #0]
 8013b5e:	e7f2      	b.n	8013b46 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 8013b60:	b188      	cbz	r0, 8013b86 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8013b62:	682b      	ldr	r3, [r5, #0]
 8013b64:	3801      	subs	r0, #1
 8013b66:	429a      	cmp	r2, r3
 8013b68:	b280      	uxth	r0, r0
 8013b6a:	dd0c      	ble.n	8013b86 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8013b6c:	f8db 3000 	ldr.w	r3, [fp]
 8013b70:	1c9c      	adds	r4, r3, #2
 8013b72:	f8cb 4000 	str.w	r4, [fp]
 8013b76:	881c      	ldrh	r4, [r3, #0]
 8013b78:	682b      	ldr	r3, [r5, #0]
 8013b7a:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 8013b7e:	682b      	ldr	r3, [r5, #0]
 8013b80:	3301      	adds	r3, #1
 8013b82:	602b      	str	r3, [r5, #0]
 8013b84:	e7ec      	b.n	8013b60 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8013b86:	2620      	movs	r6, #32
 8013b88:	b151      	cbz	r1, 8013ba0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8013b8a:	6828      	ldr	r0, [r5, #0]
 8013b8c:	3901      	subs	r1, #1
 8013b8e:	4282      	cmp	r2, r0
 8013b90:	b289      	uxth	r1, r1
 8013b92:	dd05      	ble.n	8013ba0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8013b94:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 8013b98:	682b      	ldr	r3, [r5, #0]
 8013b9a:	3301      	adds	r3, #1
 8013b9c:	602b      	str	r3, [r5, #0]
 8013b9e:	e7f3      	b.n	8013b88 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 8013ba0:	b005      	add	sp, #20
 8013ba2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08013ba6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 8013ba6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013baa:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 8013bae:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 8013bb2:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 8013bb6:	2400      	movs	r4, #0
 8013bb8:	8014      	strh	r4, [r2, #0]
 8013bba:	701c      	strb	r4, [r3, #0]
 8013bbc:	f888 4000 	strb.w	r4, [r8]
 8013bc0:	f88c 4000 	strb.w	r4, [ip]
 8013bc4:	f88e 4000 	strb.w	r4, [lr]
 8013bc8:	703c      	strb	r4, [r7, #0]
 8013bca:	6804      	ldr	r4, [r0, #0]
 8013bcc:	b1a4      	cbz	r4, 8013bf8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 8013bce:	8824      	ldrh	r4, [r4, #0]
 8013bd0:	f04f 0901 	mov.w	r9, #1
 8013bd4:	b314      	cbz	r4, 8013c1c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8013bd6:	2c2b      	cmp	r4, #43	; 0x2b
 8013bd8:	d001      	beq.n	8013bde <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 8013bda:	2c20      	cmp	r4, #32
 8013bdc:	d110      	bne.n	8013c00 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 8013bde:	8014      	strh	r4, [r2, #0]
 8013be0:	6804      	ldr	r4, [r0, #0]
 8013be2:	b10c      	cbz	r4, 8013be8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 8013be4:	3402      	adds	r4, #2
 8013be6:	6004      	str	r4, [r0, #0]
 8013be8:	680c      	ldr	r4, [r1, #0]
 8013bea:	b10c      	cbz	r4, 8013bf0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 8013bec:	3401      	adds	r4, #1
 8013bee:	600c      	str	r4, [r1, #0]
 8013bf0:	6804      	ldr	r4, [r0, #0]
 8013bf2:	b17c      	cbz	r4, 8013c14 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 8013bf4:	8824      	ldrh	r4, [r4, #0]
 8013bf6:	e7ed      	b.n	8013bd4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8013bf8:	680c      	ldr	r4, [r1, #0]
 8013bfa:	b17c      	cbz	r4, 8013c1c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8013bfc:	7824      	ldrb	r4, [r4, #0]
 8013bfe:	e7e7      	b.n	8013bd0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 8013c00:	2c2d      	cmp	r4, #45	; 0x2d
 8013c02:	d102      	bne.n	8013c0a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 8013c04:	f883 9000 	strb.w	r9, [r3]
 8013c08:	e7ea      	b.n	8013be0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8013c0a:	2c23      	cmp	r4, #35	; 0x23
 8013c0c:	d107      	bne.n	8013c1e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 8013c0e:	f888 9000 	strb.w	r9, [r8]
 8013c12:	e7e5      	b.n	8013be0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8013c14:	680c      	ldr	r4, [r1, #0]
 8013c16:	b10c      	cbz	r4, 8013c1c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8013c18:	7824      	ldrb	r4, [r4, #0]
 8013c1a:	e7db      	b.n	8013bd4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8013c1c:	2400      	movs	r4, #0
 8013c1e:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8013c22:	2b09      	cmp	r3, #9
 8013c24:	d901      	bls.n	8013c2a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 8013c26:	2c2a      	cmp	r4, #42	; 0x2a
 8013c28:	d122      	bne.n	8013c70 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8013c2a:	2301      	movs	r3, #1
 8013c2c:	2c30      	cmp	r4, #48	; 0x30
 8013c2e:	f88e 3000 	strb.w	r3, [lr]
 8013c32:	d10d      	bne.n	8013c50 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8013c34:	f88c 3000 	strb.w	r3, [ip]
 8013c38:	6803      	ldr	r3, [r0, #0]
 8013c3a:	b10b      	cbz	r3, 8013c40 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 8013c3c:	3302      	adds	r3, #2
 8013c3e:	6003      	str	r3, [r0, #0]
 8013c40:	680b      	ldr	r3, [r1, #0]
 8013c42:	b10b      	cbz	r3, 8013c48 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 8013c44:	3301      	adds	r3, #1
 8013c46:	600b      	str	r3, [r1, #0]
 8013c48:	6803      	ldr	r3, [r0, #0]
 8013c4a:	2b00      	cmp	r3, #0
 8013c4c:	d02f      	beq.n	8013cae <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 8013c4e:	881c      	ldrh	r4, [r3, #0]
 8013c50:	2c2a      	cmp	r4, #42	; 0x2a
 8013c52:	d135      	bne.n	8013cc0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8013c54:	f04f 33ff 	mov.w	r3, #4294967295
 8013c58:	6033      	str	r3, [r6, #0]
 8013c5a:	6803      	ldr	r3, [r0, #0]
 8013c5c:	b10b      	cbz	r3, 8013c62 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 8013c5e:	3302      	adds	r3, #2
 8013c60:	6003      	str	r3, [r0, #0]
 8013c62:	680b      	ldr	r3, [r1, #0]
 8013c64:	b10b      	cbz	r3, 8013c6a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 8013c66:	3301      	adds	r3, #1
 8013c68:	600b      	str	r3, [r1, #0]
 8013c6a:	6803      	ldr	r3, [r0, #0]
 8013c6c:	b31b      	cbz	r3, 8013cb6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 8013c6e:	881c      	ldrh	r4, [r3, #0]
 8013c70:	2c2e      	cmp	r4, #46	; 0x2e
 8013c72:	d11a      	bne.n	8013caa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8013c74:	2301      	movs	r3, #1
 8013c76:	703b      	strb	r3, [r7, #0]
 8013c78:	6803      	ldr	r3, [r0, #0]
 8013c7a:	b10b      	cbz	r3, 8013c80 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 8013c7c:	3302      	adds	r3, #2
 8013c7e:	6003      	str	r3, [r0, #0]
 8013c80:	680b      	ldr	r3, [r1, #0]
 8013c82:	b10b      	cbz	r3, 8013c88 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 8013c84:	3301      	adds	r3, #1
 8013c86:	600b      	str	r3, [r1, #0]
 8013c88:	6803      	ldr	r3, [r0, #0]
 8013c8a:	2b00      	cmp	r3, #0
 8013c8c:	d036      	beq.n	8013cfc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 8013c8e:	881b      	ldrh	r3, [r3, #0]
 8013c90:	2b2a      	cmp	r3, #42	; 0x2a
 8013c92:	d137      	bne.n	8013d04 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8013c94:	f04f 33ff 	mov.w	r3, #4294967295
 8013c98:	602b      	str	r3, [r5, #0]
 8013c9a:	6803      	ldr	r3, [r0, #0]
 8013c9c:	b10b      	cbz	r3, 8013ca2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 8013c9e:	3302      	adds	r3, #2
 8013ca0:	6003      	str	r3, [r0, #0]
 8013ca2:	680b      	ldr	r3, [r1, #0]
 8013ca4:	b10b      	cbz	r3, 8013caa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8013ca6:	3301      	adds	r3, #1
 8013ca8:	600b      	str	r3, [r1, #0]
 8013caa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013cae:	680c      	ldr	r4, [r1, #0]
 8013cb0:	b134      	cbz	r4, 8013cc0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8013cb2:	7824      	ldrb	r4, [r4, #0]
 8013cb4:	e7cc      	b.n	8013c50 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8013cb6:	680b      	ldr	r3, [r1, #0]
 8013cb8:	2b00      	cmp	r3, #0
 8013cba:	d0f6      	beq.n	8013caa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8013cbc:	781c      	ldrb	r4, [r3, #0]
 8013cbe:	e7d7      	b.n	8013c70 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8013cc0:	2300      	movs	r3, #0
 8013cc2:	6033      	str	r3, [r6, #0]
 8013cc4:	220a      	movs	r2, #10
 8013cc6:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 8013cca:	fa1f f38c 	uxth.w	r3, ip
 8013cce:	2b09      	cmp	r3, #9
 8013cd0:	d8ce      	bhi.n	8013c70 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8013cd2:	6833      	ldr	r3, [r6, #0]
 8013cd4:	fb02 c303 	mla	r3, r2, r3, ip
 8013cd8:	6033      	str	r3, [r6, #0]
 8013cda:	6803      	ldr	r3, [r0, #0]
 8013cdc:	b10b      	cbz	r3, 8013ce2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 8013cde:	3302      	adds	r3, #2
 8013ce0:	6003      	str	r3, [r0, #0]
 8013ce2:	680b      	ldr	r3, [r1, #0]
 8013ce4:	b10b      	cbz	r3, 8013cea <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 8013ce6:	3301      	adds	r3, #1
 8013ce8:	600b      	str	r3, [r1, #0]
 8013cea:	6803      	ldr	r3, [r0, #0]
 8013cec:	b10b      	cbz	r3, 8013cf2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 8013cee:	881c      	ldrh	r4, [r3, #0]
 8013cf0:	e7e9      	b.n	8013cc6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8013cf2:	680c      	ldr	r4, [r1, #0]
 8013cf4:	2c00      	cmp	r4, #0
 8013cf6:	d0e6      	beq.n	8013cc6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8013cf8:	7824      	ldrb	r4, [r4, #0]
 8013cfa:	e7e4      	b.n	8013cc6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8013cfc:	680b      	ldr	r3, [r1, #0]
 8013cfe:	b10b      	cbz	r3, 8013d04 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8013d00:	781b      	ldrb	r3, [r3, #0]
 8013d02:	e7c5      	b.n	8013c90 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 8013d04:	2200      	movs	r2, #0
 8013d06:	602a      	str	r2, [r5, #0]
 8013d08:	240a      	movs	r4, #10
 8013d0a:	3b30      	subs	r3, #48	; 0x30
 8013d0c:	b29e      	uxth	r6, r3
 8013d0e:	2e09      	cmp	r6, #9
 8013d10:	682a      	ldr	r2, [r5, #0]
 8013d12:	d813      	bhi.n	8013d3c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 8013d14:	fb04 3302 	mla	r3, r4, r2, r3
 8013d18:	602b      	str	r3, [r5, #0]
 8013d1a:	6803      	ldr	r3, [r0, #0]
 8013d1c:	b10b      	cbz	r3, 8013d22 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 8013d1e:	3302      	adds	r3, #2
 8013d20:	6003      	str	r3, [r0, #0]
 8013d22:	680b      	ldr	r3, [r1, #0]
 8013d24:	b10b      	cbz	r3, 8013d2a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 8013d26:	3301      	adds	r3, #1
 8013d28:	600b      	str	r3, [r1, #0]
 8013d2a:	6803      	ldr	r3, [r0, #0]
 8013d2c:	b10b      	cbz	r3, 8013d32 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 8013d2e:	881b      	ldrh	r3, [r3, #0]
 8013d30:	e7eb      	b.n	8013d0a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8013d32:	680b      	ldr	r3, [r1, #0]
 8013d34:	2b00      	cmp	r3, #0
 8013d36:	d0e8      	beq.n	8013d0a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8013d38:	781b      	ldrb	r3, [r3, #0]
 8013d3a:	e7e6      	b.n	8013d0a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8013d3c:	2a06      	cmp	r2, #6
 8013d3e:	bfa8      	it	ge
 8013d40:	2206      	movge	r2, #6
 8013d42:	602a      	str	r2, [r5, #0]
 8013d44:	e7b1      	b.n	8013caa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

08013d46 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 8013d46:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013d4a:	b0a3      	sub	sp, #140	; 0x8c
 8013d4c:	2600      	movs	r6, #0
 8013d4e:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 8013d52:	4607      	mov	r7, r0
 8013d54:	4688      	mov	r8, r1
 8013d56:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8013d5a:	4631      	mov	r1, r6
 8013d5c:	2242      	movs	r2, #66	; 0x42
 8013d5e:	4648      	mov	r0, r9
 8013d60:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 8013d62:	960d      	str	r6, [sp, #52]	; 0x34
 8013d64:	f00c fefa 	bl	8020b5c <memset>
 8013d68:	b15f      	cbz	r7, 8013d82 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 8013d6a:	f108 3aff 	add.w	sl, r8, #4294967295
 8013d6e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8013d70:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013d72:	b152      	cbz	r2, 8013d8a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 8013d74:	8812      	ldrh	r2, [r2, #0]
 8013d76:	b10a      	cbz	r2, 8013d7c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8013d78:	459a      	cmp	sl, r3
 8013d7a:	dc2e      	bgt.n	8013dda <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 8013d7c:	2200      	movs	r2, #0
 8013d7e:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8013d82:	4638      	mov	r0, r7
 8013d84:	b023      	add	sp, #140	; 0x8c
 8013d86:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013d8a:	9a08      	ldr	r2, [sp, #32]
 8013d8c:	2a00      	cmp	r2, #0
 8013d8e:	d0f5      	beq.n	8013d7c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8013d90:	7812      	ldrb	r2, [r2, #0]
 8013d92:	e7f0      	b.n	8013d76 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 8013d94:	2d00      	cmp	r5, #0
 8013d96:	d0ea      	beq.n	8013d6e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8013d98:	782a      	ldrb	r2, [r5, #0]
 8013d9a:	b142      	cbz	r2, 8013dae <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 8013d9c:	2a25      	cmp	r2, #37	; 0x25
 8013d9e:	d001      	beq.n	8013da4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 8013da0:	459a      	cmp	sl, r3
 8013da2:	dc08      	bgt.n	8013db6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 8013da4:	f1bb 0f00 	cmp.w	fp, #0
 8013da8:	d121      	bne.n	8013dee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 8013daa:	2d00      	cmp	r5, #0
 8013dac:	d0df      	beq.n	8013d6e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8013dae:	782a      	ldrb	r2, [r5, #0]
 8013db0:	f04f 0b00 	mov.w	fp, #0
 8013db4:	e01d      	b.n	8013df2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 8013db6:	f1bb 0f00 	cmp.w	fp, #0
 8013dba:	d078      	beq.n	8013eae <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 8013dbc:	f8bb 2000 	ldrh.w	r2, [fp]
 8013dc0:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8013dc4:	f1bb 0f00 	cmp.w	fp, #0
 8013dc8:	d002      	beq.n	8013dd0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 8013dca:	f10b 0202 	add.w	r2, fp, #2
 8013dce:	9209      	str	r2, [sp, #36]	; 0x24
 8013dd0:	b10d      	cbz	r5, 8013dd6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 8013dd2:	3501      	adds	r5, #1
 8013dd4:	9508      	str	r5, [sp, #32]
 8013dd6:	3301      	adds	r3, #1
 8013dd8:	930d      	str	r3, [sp, #52]	; 0x34
 8013dda:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 8013dde:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013de0:	f1bb 0f00 	cmp.w	fp, #0
 8013de4:	d0d6      	beq.n	8013d94 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 8013de6:	f8bb 2000 	ldrh.w	r2, [fp]
 8013dea:	2a00      	cmp	r2, #0
 8013dec:	d1d6      	bne.n	8013d9c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 8013dee:	f8bb 2000 	ldrh.w	r2, [fp]
 8013df2:	2a00      	cmp	r2, #0
 8013df4:	d0bb      	beq.n	8013d6e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8013df6:	459a      	cmp	sl, r3
 8013df8:	ddb9      	ble.n	8013d6e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8013dfa:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 8013dfe:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 8013e02:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 8013e06:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 8013e0a:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 8013e0e:	960e      	str	r6, [sp, #56]	; 0x38
 8013e10:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 8013e14:	960f      	str	r6, [sp, #60]	; 0x3c
 8013e16:	f1bb 0f00 	cmp.w	fp, #0
 8013e1a:	d002      	beq.n	8013e22 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 8013e1c:	f10b 0302 	add.w	r3, fp, #2
 8013e20:	9309      	str	r3, [sp, #36]	; 0x24
 8013e22:	b10d      	cbz	r5, 8013e28 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 8013e24:	1c6b      	adds	r3, r5, #1
 8013e26:	9308      	str	r3, [sp, #32]
 8013e28:	ab0f      	add	r3, sp, #60	; 0x3c
 8013e2a:	9305      	str	r3, [sp, #20]
 8013e2c:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 8013e30:	9304      	str	r3, [sp, #16]
 8013e32:	ab0e      	add	r3, sp, #56	; 0x38
 8013e34:	9303      	str	r3, [sp, #12]
 8013e36:	ab0c      	add	r3, sp, #48	; 0x30
 8013e38:	9302      	str	r3, [sp, #8]
 8013e3a:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 8013e3e:	9301      	str	r3, [sp, #4]
 8013e40:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8013e44:	9300      	str	r3, [sp, #0]
 8013e46:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 8013e4a:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 8013e4e:	a908      	add	r1, sp, #32
 8013e50:	a809      	add	r0, sp, #36	; 0x24
 8013e52:	f7ff fea8 	bl	8013ba6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8013e56:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013e58:	2b00      	cmp	r3, #0
 8013e5a:	bfbe      	ittt	lt
 8013e5c:	6823      	ldrlt	r3, [r4, #0]
 8013e5e:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8013e62:	930e      	strlt	r3, [sp, #56]	; 0x38
 8013e64:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8013e66:	bfb8      	it	lt
 8013e68:	3404      	addlt	r4, #4
 8013e6a:	2b00      	cmp	r3, #0
 8013e6c:	bfb8      	it	lt
 8013e6e:	6823      	ldrlt	r3, [r4, #0]
 8013e70:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8013e74:	bfbe      	ittt	lt
 8013e76:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8013e7a:	930f      	strlt	r3, [sp, #60]	; 0x3c
 8013e7c:	3404      	addlt	r4, #4
 8013e7e:	b1d9      	cbz	r1, 8013eb8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 8013e80:	880b      	ldrh	r3, [r1, #0]
 8013e82:	2b69      	cmp	r3, #105	; 0x69
 8013e84:	d01f      	beq.n	8013ec6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8013e86:	d82f      	bhi.n	8013ee8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 8013e88:	2b58      	cmp	r3, #88	; 0x58
 8013e8a:	d01c      	beq.n	8013ec6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8013e8c:	d818      	bhi.n	8013ec0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 8013e8e:	2b25      	cmp	r3, #37	; 0x25
 8013e90:	d034      	beq.n	8013efc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 8013e92:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 8013e96:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013e98:	f1bb 0f00 	cmp.w	fp, #0
 8013e9c:	f000 80b8 	beq.w	8014010 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 8013ea0:	f8bb 5000 	ldrh.w	r5, [fp]
 8013ea4:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 8013ea8:	3301      	adds	r3, #1
 8013eaa:	930d      	str	r3, [sp, #52]	; 0x34
 8013eac:	e029      	b.n	8013f02 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8013eae:	b10d      	cbz	r5, 8013eb4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 8013eb0:	782a      	ldrb	r2, [r5, #0]
 8013eb2:	e785      	b.n	8013dc0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8013eb4:	462a      	mov	r2, r5
 8013eb6:	e783      	b.n	8013dc0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8013eb8:	2a00      	cmp	r2, #0
 8013eba:	d0ea      	beq.n	8013e92 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8013ebc:	7813      	ldrb	r3, [r2, #0]
 8013ebe:	e7e0      	b.n	8013e82 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 8013ec0:	3b63      	subs	r3, #99	; 0x63
 8013ec2:	2b01      	cmp	r3, #1
 8013ec4:	d8e5      	bhi.n	8013e92 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8013ec6:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 8013eca:	b329      	cbz	r1, 8013f18 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 8013ecc:	880b      	ldrh	r3, [r1, #0]
 8013ece:	2b69      	cmp	r3, #105	; 0x69
 8013ed0:	d063      	beq.n	8013f9a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8013ed2:	d825      	bhi.n	8013f20 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 8013ed4:	2b63      	cmp	r3, #99	; 0x63
 8013ed6:	d038      	beq.n	8013f4a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 8013ed8:	2b64      	cmp	r3, #100	; 0x64
 8013eda:	d05e      	beq.n	8013f9a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8013edc:	2b58      	cmp	r3, #88	; 0x58
 8013ede:	d07b      	beq.n	8013fd8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 8013ee0:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 8013ee4:	4625      	mov	r5, r4
 8013ee6:	e036      	b.n	8013f56 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8013ee8:	2b73      	cmp	r3, #115	; 0x73
 8013eea:	d0ec      	beq.n	8013ec6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8013eec:	d802      	bhi.n	8013ef4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 8013eee:	2b6f      	cmp	r3, #111	; 0x6f
 8013ef0:	d1cf      	bne.n	8013e92 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8013ef2:	e7e8      	b.n	8013ec6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8013ef4:	2b75      	cmp	r3, #117	; 0x75
 8013ef6:	d0e6      	beq.n	8013ec6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8013ef8:	2b78      	cmp	r3, #120	; 0x78
 8013efa:	e7f9      	b.n	8013ef0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 8013efc:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8013efe:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 8013f02:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013f04:	b10b      	cbz	r3, 8013f0a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 8013f06:	3302      	adds	r3, #2
 8013f08:	9309      	str	r3, [sp, #36]	; 0x24
 8013f0a:	9b08      	ldr	r3, [sp, #32]
 8013f0c:	2b00      	cmp	r3, #0
 8013f0e:	f43f af2e 	beq.w	8013d6e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8013f12:	3301      	adds	r3, #1
 8013f14:	9308      	str	r3, [sp, #32]
 8013f16:	e72a      	b.n	8013d6e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8013f18:	2a00      	cmp	r2, #0
 8013f1a:	d0e1      	beq.n	8013ee0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8013f1c:	7813      	ldrb	r3, [r2, #0]
 8013f1e:	e7d6      	b.n	8013ece <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 8013f20:	2b73      	cmp	r3, #115	; 0x73
 8013f22:	d036      	beq.n	8013f92 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 8013f24:	d807      	bhi.n	8013f36 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 8013f26:	2b6f      	cmp	r3, #111	; 0x6f
 8013f28:	d1da      	bne.n	8013ee0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8013f2a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8013f2c:	1d25      	adds	r5, r4, #4
 8013f2e:	eba8 0202 	sub.w	r2, r8, r2
 8013f32:	2308      	movs	r3, #8
 8013f34:	e04a      	b.n	8013fcc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8013f36:	2b75      	cmp	r3, #117	; 0x75
 8013f38:	d043      	beq.n	8013fc2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 8013f3a:	2b78      	cmp	r3, #120	; 0x78
 8013f3c:	d1d0      	bne.n	8013ee0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8013f3e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8013f40:	1d25      	adds	r5, r4, #4
 8013f42:	eba8 0202 	sub.w	r2, r8, r2
 8013f46:	2310      	movs	r3, #16
 8013f48:	e040      	b.n	8013fcc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8013f4a:	6823      	ldr	r3, [r4, #0]
 8013f4c:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 8013f50:	1d25      	adds	r5, r4, #4
 8013f52:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 8013f56:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013f58:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 8013f5c:	2b00      	cmp	r3, #0
 8013f5e:	d052      	beq.n	8014006 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 8013f60:	881a      	ldrh	r2, [r3, #0]
 8013f62:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 8013f66:	a80d      	add	r0, sp, #52	; 0x34
 8013f68:	9005      	str	r0, [sp, #20]
 8013f6a:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 8013f6e:	9004      	str	r0, [sp, #16]
 8013f70:	980e      	ldr	r0, [sp, #56]	; 0x38
 8013f72:	9003      	str	r0, [sp, #12]
 8013f74:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 8013f78:	9002      	str	r0, [sp, #8]
 8013f7a:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8013f7c:	9001      	str	r0, [sp, #4]
 8013f7e:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 8013f82:	9000      	str	r0, [sp, #0]
 8013f84:	e9cd 8706 	strd	r8, r7, [sp, #24]
 8013f88:	a810      	add	r0, sp, #64	; 0x40
 8013f8a:	f7ff fd49 	bl	8013a20 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 8013f8e:	462c      	mov	r4, r5
 8013f90:	e7b7      	b.n	8013f02 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8013f92:	6823      	ldr	r3, [r4, #0]
 8013f94:	1d25      	adds	r5, r4, #4
 8013f96:	9310      	str	r3, [sp, #64]	; 0x40
 8013f98:	e7dd      	b.n	8013f56 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8013f9a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8013f9c:	6820      	ldr	r0, [r4, #0]
 8013f9e:	eba8 0202 	sub.w	r2, r8, r2
 8013fa2:	230a      	movs	r3, #10
 8013fa4:	b292      	uxth	r2, r2
 8013fa6:	4649      	mov	r1, r9
 8013fa8:	f7ff fd08 	bl	80139bc <_ZN8touchgfx7Unicode4itoaElPtti>
 8013fac:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8013fb0:	2b2d      	cmp	r3, #45	; 0x2d
 8013fb2:	f104 0504 	add.w	r5, r4, #4
 8013fb6:	d1ce      	bne.n	8013f56 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8013fb8:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8013fbc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013fbe:	3302      	adds	r3, #2
 8013fc0:	e7e9      	b.n	8013f96 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 8013fc2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8013fc4:	1d25      	adds	r5, r4, #4
 8013fc6:	eba8 0202 	sub.w	r2, r8, r2
 8013fca:	230a      	movs	r3, #10
 8013fcc:	b292      	uxth	r2, r2
 8013fce:	4649      	mov	r1, r9
 8013fd0:	6820      	ldr	r0, [r4, #0]
 8013fd2:	f7ff fcd5 	bl	8013980 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 8013fd6:	e7be      	b.n	8013f56 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8013fd8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8013fda:	6820      	ldr	r0, [r4, #0]
 8013fdc:	eba8 0202 	sub.w	r2, r8, r2
 8013fe0:	b292      	uxth	r2, r2
 8013fe2:	2310      	movs	r3, #16
 8013fe4:	4649      	mov	r1, r9
 8013fe6:	f7ff fccb 	bl	8013980 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 8013fea:	1d25      	adds	r5, r4, #4
 8013fec:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 8013ff0:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 8013ff4:	2b00      	cmp	r3, #0
 8013ff6:	d0ae      	beq.n	8013f56 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8013ff8:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 8013ffc:	2919      	cmp	r1, #25
 8013ffe:	d8f7      	bhi.n	8013ff0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8014000:	3b20      	subs	r3, #32
 8014002:	8013      	strh	r3, [r2, #0]
 8014004:	e7f4      	b.n	8013ff0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8014006:	9a08      	ldr	r2, [sp, #32]
 8014008:	2a00      	cmp	r2, #0
 801400a:	d0aa      	beq.n	8013f62 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 801400c:	7812      	ldrb	r2, [r2, #0]
 801400e:	e7a8      	b.n	8013f62 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8014010:	2d00      	cmp	r5, #0
 8014012:	f43f af47 	beq.w	8013ea4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 8014016:	782d      	ldrb	r5, [r5, #0]
 8014018:	e744      	b.n	8013ea4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

0801401a <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 801401a:	b507      	push	{r0, r1, r2, lr}
 801401c:	9300      	str	r3, [sp, #0]
 801401e:	4613      	mov	r3, r2
 8014020:	2200      	movs	r2, #0
 8014022:	f7ff fe90 	bl	8013d46 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 8014026:	b003      	add	sp, #12
 8014028:	f85d fb04 	ldr.w	pc, [sp], #4

0801402c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 801402c:	b40c      	push	{r2, r3}
 801402e:	b507      	push	{r0, r1, r2, lr}
 8014030:	ab04      	add	r3, sp, #16
 8014032:	f853 2b04 	ldr.w	r2, [r3], #4
 8014036:	9301      	str	r3, [sp, #4]
 8014038:	f7ff ffef 	bl	801401a <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 801403c:	b003      	add	sp, #12
 801403e:	f85d eb04 	ldr.w	lr, [sp], #4
 8014042:	b002      	add	sp, #8
 8014044:	4770      	bx	lr
	...

08014048 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>:
 8014048:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801404c:	b0c3      	sub	sp, #268	; 0x10c
 801404e:	2600      	movs	r6, #0
 8014050:	f10d 0840 	add.w	r8, sp, #64	; 0x40
 8014054:	4607      	mov	r7, r0
 8014056:	4689      	mov	r9, r1
 8014058:	e9cd 3208 	strd	r3, r2, [sp, #32]
 801405c:	4631      	mov	r1, r6
 801405e:	22c8      	movs	r2, #200	; 0xc8
 8014060:	4640      	mov	r0, r8
 8014062:	f8dd a130 	ldr.w	sl, [sp, #304]	; 0x130
 8014066:	960c      	str	r6, [sp, #48]	; 0x30
 8014068:	f00c fd78 	bl	8020b5c <memset>
 801406c:	b17f      	cbz	r7, 801408e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x46>
 801406e:	eddf 5aa4 	vldr	s11, [pc, #656]	; 8014300 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2b8>
 8014072:	f8df b298 	ldr.w	fp, [pc, #664]	; 801430c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c4>
 8014076:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8014078:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801407a:	b162      	cbz	r2, 8014096 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x4e>
 801407c:	8812      	ldrh	r2, [r2, #0]
 801407e:	b11a      	cbz	r2, 8014088 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x40>
 8014080:	f109 31ff 	add.w	r1, r9, #4294967295
 8014084:	4299      	cmp	r1, r3
 8014086:	dc26      	bgt.n	80140d6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x8e>
 8014088:	2200      	movs	r2, #0
 801408a:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 801408e:	4638      	mov	r0, r7
 8014090:	b043      	add	sp, #268	; 0x10c
 8014092:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014096:	9a08      	ldr	r2, [sp, #32]
 8014098:	2a00      	cmp	r2, #0
 801409a:	d0f5      	beq.n	8014088 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x40>
 801409c:	7812      	ldrb	r2, [r2, #0]
 801409e:	e7ee      	b.n	801407e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36>
 80140a0:	2c00      	cmp	r4, #0
 80140a2:	d0e8      	beq.n	8014076 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 80140a4:	7822      	ldrb	r2, [r4, #0]
 80140a6:	b132      	cbz	r2, 80140b6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x6e>
 80140a8:	2a25      	cmp	r2, #37	; 0x25
 80140aa:	d001      	beq.n	80140b0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x68>
 80140ac:	4299      	cmp	r1, r3
 80140ae:	dc05      	bgt.n	80140bc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x74>
 80140b0:	b9cd      	cbnz	r5, 80140e6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x9e>
 80140b2:	2c00      	cmp	r4, #0
 80140b4:	d0df      	beq.n	8014076 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 80140b6:	7822      	ldrb	r2, [r4, #0]
 80140b8:	2500      	movs	r5, #0
 80140ba:	e015      	b.n	80140e8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xa0>
 80140bc:	2d00      	cmp	r5, #0
 80140be:	d073      	beq.n	80141a8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x160>
 80140c0:	882a      	ldrh	r2, [r5, #0]
 80140c2:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 80140c6:	b10d      	cbz	r5, 80140cc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x84>
 80140c8:	3502      	adds	r5, #2
 80140ca:	9509      	str	r5, [sp, #36]	; 0x24
 80140cc:	b10c      	cbz	r4, 80140d2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x8a>
 80140ce:	3401      	adds	r4, #1
 80140d0:	9408      	str	r4, [sp, #32]
 80140d2:	3301      	adds	r3, #1
 80140d4:	930c      	str	r3, [sp, #48]	; 0x30
 80140d6:	e9dd 4508 	ldrd	r4, r5, [sp, #32]
 80140da:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80140dc:	2d00      	cmp	r5, #0
 80140de:	d0df      	beq.n	80140a0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x58>
 80140e0:	882a      	ldrh	r2, [r5, #0]
 80140e2:	2a00      	cmp	r2, #0
 80140e4:	d1e0      	bne.n	80140a8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x60>
 80140e6:	882a      	ldrh	r2, [r5, #0]
 80140e8:	2a00      	cmp	r2, #0
 80140ea:	d0c4      	beq.n	8014076 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 80140ec:	4299      	cmp	r1, r3
 80140ee:	ddc2      	ble.n	8014076 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 80140f0:	2300      	movs	r3, #0
 80140f2:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 80140f6:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80140fa:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80140fe:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 8014102:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 8014106:	930d      	str	r3, [sp, #52]	; 0x34
 8014108:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
 801410c:	930e      	str	r3, [sp, #56]	; 0x38
 801410e:	b10d      	cbz	r5, 8014114 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xcc>
 8014110:	1cab      	adds	r3, r5, #2
 8014112:	9309      	str	r3, [sp, #36]	; 0x24
 8014114:	b10c      	cbz	r4, 801411a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xd2>
 8014116:	1c63      	adds	r3, r4, #1
 8014118:	9308      	str	r3, [sp, #32]
 801411a:	ab0e      	add	r3, sp, #56	; 0x38
 801411c:	9305      	str	r3, [sp, #20]
 801411e:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 8014122:	9304      	str	r3, [sp, #16]
 8014124:	ab0d      	add	r3, sp, #52	; 0x34
 8014126:	9303      	str	r3, [sp, #12]
 8014128:	ab0b      	add	r3, sp, #44	; 0x2c
 801412a:	9302      	str	r3, [sp, #8]
 801412c:	f10d 032b 	add.w	r3, sp, #43	; 0x2b
 8014130:	9301      	str	r3, [sp, #4]
 8014132:	f10d 032a 	add.w	r3, sp, #42	; 0x2a
 8014136:	9300      	str	r3, [sp, #0]
 8014138:	f10d 022e 	add.w	r2, sp, #46	; 0x2e
 801413c:	f10d 0329 	add.w	r3, sp, #41	; 0x29
 8014140:	a908      	add	r1, sp, #32
 8014142:	a809      	add	r0, sp, #36	; 0x24
 8014144:	f7ff fd2f 	bl	8013ba6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8014148:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801414a:	2b00      	cmp	r3, #0
 801414c:	da0b      	bge.n	8014166 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x11e>
 801414e:	eb0a 0386 	add.w	r3, sl, r6, lsl #2
 8014152:	edd3 7a00 	vldr	s15, [r3]
 8014156:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801415a:	3601      	adds	r6, #1
 801415c:	ee17 3a90 	vmov	r3, s15
 8014160:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014164:	930d      	str	r3, [sp, #52]	; 0x34
 8014166:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014168:	2b00      	cmp	r3, #0
 801416a:	da0b      	bge.n	8014184 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x13c>
 801416c:	eb0a 0386 	add.w	r3, sl, r6, lsl #2
 8014170:	edd3 7a00 	vldr	s15, [r3]
 8014174:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8014178:	3601      	adds	r6, #1
 801417a:	ee17 3a90 	vmov	r3, s15
 801417e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014182:	930e      	str	r3, [sp, #56]	; 0x38
 8014184:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014186:	b1a3      	cbz	r3, 80141b2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x16a>
 8014188:	881a      	ldrh	r2, [r3, #0]
 801418a:	2a25      	cmp	r2, #37	; 0x25
 801418c:	d016      	beq.n	80141bc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x174>
 801418e:	2a66      	cmp	r2, #102	; 0x66
 8014190:	d01a      	beq.n	80141c8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x180>
 8014192:	e9cd 4508 	strd	r4, r5, [sp, #32]
 8014196:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014198:	2d00      	cmp	r5, #0
 801419a:	f000 80fe 	beq.w	801439a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x352>
 801419e:	882c      	ldrh	r4, [r5, #0]
 80141a0:	f827 4013 	strh.w	r4, [r7, r3, lsl #1]
 80141a4:	3301      	adds	r3, #1
 80141a6:	e00d      	b.n	80141c4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x17c>
 80141a8:	b10c      	cbz	r4, 80141ae <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x166>
 80141aa:	7822      	ldrb	r2, [r4, #0]
 80141ac:	e789      	b.n	80140c2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7a>
 80141ae:	4622      	mov	r2, r4
 80141b0:	e787      	b.n	80140c2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7a>
 80141b2:	9b08      	ldr	r3, [sp, #32]
 80141b4:	2b00      	cmp	r3, #0
 80141b6:	d0ec      	beq.n	8014192 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x14a>
 80141b8:	781a      	ldrb	r2, [r3, #0]
 80141ba:	e7e6      	b.n	801418a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x142>
 80141bc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80141be:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 80141c2:	3302      	adds	r3, #2
 80141c4:	930c      	str	r3, [sp, #48]	; 0x30
 80141c6:	e042      	b.n	801424e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x206>
 80141c8:	eb0a 0386 	add.w	r3, sl, r6, lsl #2
 80141cc:	edd3 7a00 	vldr	s15, [r3]
 80141d0:	f89d 302d 	ldrb.w	r3, [sp, #45]	; 0x2d
 80141d4:	f8cd 803c 	str.w	r8, [sp, #60]	; 0x3c
 80141d8:	3601      	adds	r6, #1
 80141da:	b923      	cbnz	r3, 80141e6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x19e>
 80141dc:	2301      	movs	r3, #1
 80141de:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
 80141e2:	2306      	movs	r3, #6
 80141e4:	930e      	str	r3, [sp, #56]	; 0x38
 80141e6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80141ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80141ee:	bf48      	it	mi
 80141f0:	eef1 7a67 	vnegmi.f32	s15, s15
 80141f4:	eeb0 7ae7 	vabs.f32	s14, s15
 80141f8:	bf48      	it	mi
 80141fa:	232d      	movmi	r3, #45	; 0x2d
 80141fc:	eeb4 7a65 	vcmp.f32	s14, s11
 8014200:	bf48      	it	mi
 8014202:	f8ad 302e 	strhmi.w	r3, [sp, #46]	; 0x2e
 8014206:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801420a:	dd2b      	ble.n	8014264 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x21c>
 801420c:	f8cd b040 	str.w	fp, [sp, #64]	; 0x40
 8014210:	2366      	movs	r3, #102	; 0x66
 8014212:	9311      	str	r3, [sp, #68]	; 0x44
 8014214:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014216:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 801421a:	2b00      	cmp	r3, #0
 801421c:	f000 80b7 	beq.w	801438e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x346>
 8014220:	881a      	ldrh	r2, [r3, #0]
 8014222:	f89d 302d 	ldrb.w	r3, [sp, #45]	; 0x2d
 8014226:	a80c      	add	r0, sp, #48	; 0x30
 8014228:	9005      	str	r0, [sp, #20]
 801422a:	f89d 0029 	ldrb.w	r0, [sp, #41]	; 0x29
 801422e:	9004      	str	r0, [sp, #16]
 8014230:	980d      	ldr	r0, [sp, #52]	; 0x34
 8014232:	9003      	str	r0, [sp, #12]
 8014234:	f89d 002c 	ldrb.w	r0, [sp, #44]	; 0x2c
 8014238:	9002      	str	r0, [sp, #8]
 801423a:	980e      	ldr	r0, [sp, #56]	; 0x38
 801423c:	9001      	str	r0, [sp, #4]
 801423e:	f89d 002b 	ldrb.w	r0, [sp, #43]	; 0x2b
 8014242:	9000      	str	r0, [sp, #0]
 8014244:	e9cd 9706 	strd	r9, r7, [sp, #24]
 8014248:	a80f      	add	r0, sp, #60	; 0x3c
 801424a:	f7ff fbe9 	bl	8013a20 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 801424e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014250:	b10b      	cbz	r3, 8014256 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x20e>
 8014252:	3302      	adds	r3, #2
 8014254:	9309      	str	r3, [sp, #36]	; 0x24
 8014256:	9b08      	ldr	r3, [sp, #32]
 8014258:	2b00      	cmp	r3, #0
 801425a:	f43f af0c 	beq.w	8014076 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 801425e:	3301      	adds	r3, #1
 8014260:	9308      	str	r3, [sp, #32]
 8014262:	e708      	b.n	8014076 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 8014264:	eef4 7a67 	vcmp.f32	s15, s15
 8014268:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801426c:	d60b      	bvs.n	8014286 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x23e>
 801426e:	980e      	ldr	r0, [sp, #56]	; 0x38
 8014270:	ed9f 7a24 	vldr	s14, [pc, #144]	; 8014304 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2bc>
 8014274:	2300      	movs	r3, #0
 8014276:	eeb2 6a04 	vmov.f32	s12, #36	; 0x41200000  10.0
 801427a:	4283      	cmp	r3, r0
 801427c:	da07      	bge.n	801428e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x246>
 801427e:	ee87 7a06 	vdiv.f32	s14, s14, s12
 8014282:	3301      	adds	r3, #1
 8014284:	e7f9      	b.n	801427a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x232>
 8014286:	4b20      	ldr	r3, [pc, #128]	; (8014308 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c0>)
 8014288:	9310      	str	r3, [sp, #64]	; 0x40
 801428a:	236e      	movs	r3, #110	; 0x6e
 801428c:	e7c1      	b.n	8014212 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1ca>
 801428e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8014292:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8014296:	eeb0 7a67 	vmov.f32	s14, s15
 801429a:	eeb4 7ac6 	vcmpe.f32	s14, s12
 801429e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80142a2:	da27      	bge.n	80142f4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2ac>
 80142a4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80142a6:	2100      	movs	r1, #0
 80142a8:	eeb6 5a00 	vmov.f32	s10, #96	; 0x3f000000  0.5
 80142ac:	eba9 0202 	sub.w	r2, r9, r2
 80142b0:	eef4 6ac5 	vcmpe.f32	s13, s10
 80142b4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80142b8:	b28c      	uxth	r4, r1
 80142ba:	db2a      	blt.n	8014312 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2ca>
 80142bc:	1a53      	subs	r3, r2, r1
 80142be:	2b00      	cmp	r3, #0
 80142c0:	dd27      	ble.n	8014312 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2ca>
 80142c2:	2963      	cmp	r1, #99	; 0x63
 80142c4:	d024      	beq.n	8014310 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c8>
 80142c6:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 80142ca:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 80142ce:	ee17 3a10 	vmov	r3, s14
 80142d2:	2b09      	cmp	r3, #9
 80142d4:	bfa8      	it	ge
 80142d6:	2309      	movge	r3, #9
 80142d8:	ee07 3a10 	vmov	s14, r3
 80142dc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80142e0:	f103 0430 	add.w	r4, r3, #48	; 0x30
 80142e4:	f828 4011 	strh.w	r4, [r8, r1, lsl #1]
 80142e8:	eee7 7a66 	vfms.f32	s15, s14, s13
 80142ec:	3101      	adds	r1, #1
 80142ee:	eec6 6a86 	vdiv.f32	s13, s13, s12
 80142f2:	e7dd      	b.n	80142b0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x268>
 80142f4:	ee66 6a86 	vmul.f32	s13, s13, s12
 80142f8:	ee87 7a06 	vdiv.f32	s14, s14, s12
 80142fc:	e7cd      	b.n	801429a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x252>
 80142fe:	bf00      	nop
 8014300:	7f7fffff 	.word	0x7f7fffff
 8014304:	3f000002 	.word	0x3f000002
 8014308:	0061006e 	.word	0x0061006e
 801430c:	006e0069 	.word	0x006e0069
 8014310:	460c      	mov	r4, r1
 8014312:	2a63      	cmp	r2, #99	; 0x63
 8014314:	bfd4      	ite	le
 8014316:	ebc4 0202 	rsble	r2, r4, r2
 801431a:	f1c4 0263 	rsbgt	r2, r4, #99	; 0x63
 801431e:	2a00      	cmp	r2, #0
 8014320:	dd30      	ble.n	8014384 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x33c>
 8014322:	4603      	mov	r3, r0
 8014324:	2501      	movs	r5, #1
 8014326:	210a      	movs	r1, #10
 8014328:	2b00      	cmp	r3, #0
 801432a:	dd0d      	ble.n	8014348 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x300>
 801432c:	ee67 7a86 	vmul.f32	s15, s15, s12
 8014330:	3b01      	subs	r3, #1
 8014332:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8014336:	ee17 ca10 	vmov	ip, s14
 801433a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801433e:	fb01 c505 	mla	r5, r1, r5, ip
 8014342:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8014346:	e7ef      	b.n	8014328 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e0>
 8014348:	2800      	cmp	r0, #0
 801434a:	f100 33ff 	add.w	r3, r0, #4294967295
 801434e:	bfac      	ite	ge
 8014350:	1a18      	subge	r0, r3, r0
 8014352:	4618      	movlt	r0, r3
 8014354:	0064      	lsls	r4, r4, #1
 8014356:	900e      	str	r0, [sp, #56]	; 0x38
 8014358:	230a      	movs	r3, #10
 801435a:	b292      	uxth	r2, r2
 801435c:	eb08 0104 	add.w	r1, r8, r4
 8014360:	4628      	mov	r0, r5
 8014362:	f7ff fb2b 	bl	80139bc <_ZN8touchgfx7Unicode4itoaElPtti>
 8014366:	2d01      	cmp	r5, #1
 8014368:	dc0a      	bgt.n	8014380 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x338>
 801436a:	f89d 302a 	ldrb.w	r3, [sp, #42]	; 0x2a
 801436e:	2b00      	cmp	r3, #0
 8014370:	bf0c      	ite	eq
 8014372:	2300      	moveq	r3, #0
 8014374:	232e      	movne	r3, #46	; 0x2e
 8014376:	aa42      	add	r2, sp, #264	; 0x108
 8014378:	4414      	add	r4, r2
 801437a:	f824 3cc8 	strh.w	r3, [r4, #-200]
 801437e:	e749      	b.n	8014214 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1cc>
 8014380:	232e      	movs	r3, #46	; 0x2e
 8014382:	e7f8      	b.n	8014376 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x32e>
 8014384:	ab42      	add	r3, sp, #264	; 0x108
 8014386:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 801438a:	2300      	movs	r3, #0
 801438c:	e7f5      	b.n	801437a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x332>
 801438e:	9a08      	ldr	r2, [sp, #32]
 8014390:	2a00      	cmp	r2, #0
 8014392:	f43f af46 	beq.w	8014222 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1da>
 8014396:	7812      	ldrb	r2, [r2, #0]
 8014398:	e743      	b.n	8014222 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1da>
 801439a:	2c00      	cmp	r4, #0
 801439c:	f43f af00 	beq.w	80141a0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x158>
 80143a0:	7824      	ldrb	r4, [r4, #0]
 80143a2:	e6fd      	b.n	80141a0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x158>

080143a4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>:
 80143a4:	b507      	push	{r0, r1, r2, lr}
 80143a6:	9300      	str	r3, [sp, #0]
 80143a8:	4613      	mov	r3, r2
 80143aa:	2200      	movs	r2, #0
 80143ac:	f7ff fe4c 	bl	8014048 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>
 80143b0:	b003      	add	sp, #12
 80143b2:	f85d fb04 	ldr.w	pc, [sp], #4
	...

080143b8 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 80143b8:	4b01      	ldr	r3, [pc, #4]	; (80143c0 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 80143ba:	6018      	str	r0, [r3, #0]
 80143bc:	4770      	bx	lr
 80143be:	bf00      	nop
 80143c0:	20015620 	.word	0x20015620

080143c4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 80143c4:	4b06      	ldr	r3, [pc, #24]	; (80143e0 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 80143c6:	881a      	ldrh	r2, [r3, #0]
 80143c8:	4282      	cmp	r2, r0
 80143ca:	d807      	bhi.n	80143dc <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 80143cc:	4b05      	ldr	r3, [pc, #20]	; (80143e4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 80143ce:	881b      	ldrh	r3, [r3, #0]
 80143d0:	4413      	add	r3, r2
 80143d2:	4298      	cmp	r0, r3
 80143d4:	bfac      	ite	ge
 80143d6:	2000      	movge	r0, #0
 80143d8:	2001      	movlt	r0, #1
 80143da:	4770      	bx	lr
 80143dc:	2000      	movs	r0, #0
 80143de:	4770      	bx	lr
 80143e0:	20015640 	.word	0x20015640
 80143e4:	20015644 	.word	0x20015644

080143e8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 80143e8:	b508      	push	{r3, lr}
 80143ea:	4601      	mov	r1, r0
 80143ec:	f7ff ffea 	bl	80143c4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 80143f0:	b118      	cbz	r0, 80143fa <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 80143f2:	4b02      	ldr	r3, [pc, #8]	; (80143fc <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 80143f4:	681b      	ldr	r3, [r3, #0]
 80143f6:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 80143fa:	bd08      	pop	{r3, pc}
 80143fc:	20015624 	.word	0x20015624

08014400 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 8014400:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014402:	4c24      	ldr	r4, [pc, #144]	; (8014494 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 8014404:	6823      	ldr	r3, [r4, #0]
 8014406:	2b00      	cmp	r3, #0
 8014408:	d042      	beq.n	8014490 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 801440a:	4a23      	ldr	r2, [pc, #140]	; (8014498 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 801440c:	4d23      	ldr	r5, [pc, #140]	; (801449c <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 801440e:	8811      	ldrh	r1, [r2, #0]
 8014410:	f8b5 c000 	ldrh.w	ip, [r5]
 8014414:	4822      	ldr	r0, [pc, #136]	; (80144a0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 8014416:	4461      	add	r1, ip
 8014418:	1c4a      	adds	r2, r1, #1
 801441a:	f022 0201 	bic.w	r2, r2, #1
 801441e:	008f      	lsls	r7, r1, #2
 8014420:	0412      	lsls	r2, r2, #16
 8014422:	19de      	adds	r6, r3, r7
 8014424:	0c12      	lsrs	r2, r2, #16
 8014426:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 801442a:	6006      	str	r6, [r0, #0]
 801442c:	4e1d      	ldr	r6, [pc, #116]	; (80144a4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 801442e:	19da      	adds	r2, r3, r7
 8014430:	6032      	str	r2, [r6, #0]
 8014432:	220e      	movs	r2, #14
 8014434:	fb02 f20c 	mul.w	r2, r2, ip
 8014438:	3203      	adds	r2, #3
 801443a:	f022 0203 	bic.w	r2, r2, #3
 801443e:	443a      	add	r2, r7
 8014440:	4f19      	ldr	r7, [pc, #100]	; (80144a8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 8014442:	4413      	add	r3, r2
 8014444:	603b      	str	r3, [r7, #0]
 8014446:	4f19      	ldr	r7, [pc, #100]	; (80144ac <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 8014448:	2300      	movs	r3, #0
 801444a:	803b      	strh	r3, [r7, #0]
 801444c:	4f18      	ldr	r7, [pc, #96]	; (80144b0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 801444e:	683f      	ldr	r7, [r7, #0]
 8014450:	1aba      	subs	r2, r7, r2
 8014452:	4f18      	ldr	r7, [pc, #96]	; (80144b4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 8014454:	603a      	str	r2, [r7, #0]
 8014456:	4a18      	ldr	r2, [pc, #96]	; (80144b8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 8014458:	469c      	mov	ip, r3
 801445a:	8013      	strh	r3, [r2, #0]
 801445c:	f64f 77ff 	movw	r7, #65535	; 0xffff
 8014460:	428b      	cmp	r3, r1
 8014462:	d10d      	bne.n	8014480 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 8014464:	882d      	ldrh	r5, [r5, #0]
 8014466:	6830      	ldr	r0, [r6, #0]
 8014468:	2300      	movs	r3, #0
 801446a:	240e      	movs	r4, #14
 801446c:	429d      	cmp	r5, r3
 801446e:	d90f      	bls.n	8014490 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8014470:	fb04 0203 	mla	r2, r4, r3, r0
 8014474:	3301      	adds	r3, #1
 8014476:	7b11      	ldrb	r1, [r2, #12]
 8014478:	f36f 1145 	bfc	r1, #5, #1
 801447c:	7311      	strb	r1, [r2, #12]
 801447e:	e7f5      	b.n	801446c <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 8014480:	6822      	ldr	r2, [r4, #0]
 8014482:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 8014486:	6802      	ldr	r2, [r0, #0]
 8014488:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 801448c:	3301      	adds	r3, #1
 801448e:	e7e7      	b.n	8014460 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 8014490:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8014492:	bf00      	nop
 8014494:	20015624 	.word	0x20015624
 8014498:	20015640 	.word	0x20015640
 801449c:	20015644 	.word	0x20015644
 80144a0:	20015638 	.word	0x20015638
 80144a4:	20015628 	.word	0x20015628
 80144a8:	20015630 	.word	0x20015630
 80144ac:	20015642 	.word	0x20015642
 80144b0:	2001562c 	.word	0x2001562c
 80144b4:	2001563c 	.word	0x2001563c
 80144b8:	20015634 	.word	0x20015634

080144bc <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 80144bc:	4b06      	ldr	r3, [pc, #24]	; (80144d8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 80144be:	681b      	ldr	r3, [r3, #0]
 80144c0:	b943      	cbnz	r3, 80144d4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 80144c2:	b139      	cbz	r1, 80144d4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 80144c4:	4b05      	ldr	r3, [pc, #20]	; (80144dc <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 80144c6:	801a      	strh	r2, [r3, #0]
 80144c8:	4b05      	ldr	r3, [pc, #20]	; (80144e0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 80144ca:	6019      	str	r1, [r3, #0]
 80144cc:	4b05      	ldr	r3, [pc, #20]	; (80144e4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 80144ce:	6018      	str	r0, [r3, #0]
 80144d0:	f7ff bf96 	b.w	8014400 <_ZN8touchgfx6Bitmap10clearCacheEv>
 80144d4:	4770      	bx	lr
 80144d6:	bf00      	nop
 80144d8:	20015630 	.word	0x20015630
 80144dc:	20015644 	.word	0x20015644
 80144e0:	2001562c 	.word	0x2001562c
 80144e4:	20015624 	.word	0x20015624

080144e8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 80144e8:	b470      	push	{r4, r5, r6}
 80144ea:	4c07      	ldr	r4, [pc, #28]	; (8014508 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 80144ec:	6826      	ldr	r6, [r4, #0]
 80144ee:	4605      	mov	r5, r0
 80144f0:	4610      	mov	r0, r2
 80144f2:	9a03      	ldr	r2, [sp, #12]
 80144f4:	b936      	cbnz	r6, 8014504 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 80144f6:	6025      	str	r5, [r4, #0]
 80144f8:	4c04      	ldr	r4, [pc, #16]	; (801450c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 80144fa:	8021      	strh	r1, [r4, #0]
 80144fc:	bc70      	pop	{r4, r5, r6}
 80144fe:	4619      	mov	r1, r3
 8014500:	f7ff bfdc 	b.w	80144bc <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 8014504:	bc70      	pop	{r4, r5, r6}
 8014506:	4770      	bx	lr
 8014508:	20015648 	.word	0x20015648
 801450c:	20015640 	.word	0x20015640

08014510 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 8014510:	4a12      	ldr	r2, [pc, #72]	; (801455c <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 8014512:	8803      	ldrh	r3, [r0, #0]
 8014514:	8812      	ldrh	r2, [r2, #0]
 8014516:	4293      	cmp	r3, r2
 8014518:	d207      	bcs.n	801452a <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 801451a:	4a11      	ldr	r2, [pc, #68]	; (8014560 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 801451c:	6812      	ldr	r2, [r2, #0]
 801451e:	2114      	movs	r1, #20
 8014520:	fb01 2303 	mla	r3, r1, r3, r2
 8014524:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8014528:	4770      	bx	lr
 801452a:	490e      	ldr	r1, [pc, #56]	; (8014564 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 801452c:	8809      	ldrh	r1, [r1, #0]
 801452e:	4411      	add	r1, r2
 8014530:	428b      	cmp	r3, r1
 8014532:	da04      	bge.n	801453e <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 8014534:	1a9b      	subs	r3, r3, r2
 8014536:	4a0c      	ldr	r2, [pc, #48]	; (8014568 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 8014538:	210e      	movs	r1, #14
 801453a:	6812      	ldr	r2, [r2, #0]
 801453c:	e7f0      	b.n	8014520 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 801453e:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8014542:	4293      	cmp	r3, r2
 8014544:	d108      	bne.n	8014558 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 8014546:	4b09      	ldr	r3, [pc, #36]	; (801456c <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 8014548:	781b      	ldrb	r3, [r3, #0]
 801454a:	b91b      	cbnz	r3, 8014554 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 801454c:	4b08      	ldr	r3, [pc, #32]	; (8014570 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 801454e:	f9b3 0000 	ldrsh.w	r0, [r3]
 8014552:	4770      	bx	lr
 8014554:	4b07      	ldr	r3, [pc, #28]	; (8014574 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 8014556:	e7fa      	b.n	801454e <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 8014558:	2000      	movs	r0, #0
 801455a:	4770      	bx	lr
 801455c:	20015640 	.word	0x20015640
 8014560:	20015648 	.word	0x20015648
 8014564:	20015644 	.word	0x20015644
 8014568:	20015628 	.word	0x20015628
 801456c:	200155b0 	.word	0x200155b0
 8014570:	200155b2 	.word	0x200155b2
 8014574:	200155b4 	.word	0x200155b4

08014578 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 8014578:	4a12      	ldr	r2, [pc, #72]	; (80145c4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 801457a:	8803      	ldrh	r3, [r0, #0]
 801457c:	8812      	ldrh	r2, [r2, #0]
 801457e:	4293      	cmp	r3, r2
 8014580:	d207      	bcs.n	8014592 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 8014582:	4a11      	ldr	r2, [pc, #68]	; (80145c8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 8014584:	6812      	ldr	r2, [r2, #0]
 8014586:	2114      	movs	r1, #20
 8014588:	fb01 2303 	mla	r3, r1, r3, r2
 801458c:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 8014590:	4770      	bx	lr
 8014592:	490e      	ldr	r1, [pc, #56]	; (80145cc <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 8014594:	8809      	ldrh	r1, [r1, #0]
 8014596:	4411      	add	r1, r2
 8014598:	428b      	cmp	r3, r1
 801459a:	da04      	bge.n	80145a6 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 801459c:	1a9b      	subs	r3, r3, r2
 801459e:	4a0c      	ldr	r2, [pc, #48]	; (80145d0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 80145a0:	210e      	movs	r1, #14
 80145a2:	6812      	ldr	r2, [r2, #0]
 80145a4:	e7f0      	b.n	8014588 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 80145a6:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80145aa:	4293      	cmp	r3, r2
 80145ac:	d108      	bne.n	80145c0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 80145ae:	4b09      	ldr	r3, [pc, #36]	; (80145d4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 80145b0:	781b      	ldrb	r3, [r3, #0]
 80145b2:	b91b      	cbnz	r3, 80145bc <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 80145b4:	4b08      	ldr	r3, [pc, #32]	; (80145d8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 80145b6:	f9b3 0000 	ldrsh.w	r0, [r3]
 80145ba:	4770      	bx	lr
 80145bc:	4b07      	ldr	r3, [pc, #28]	; (80145dc <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 80145be:	e7fa      	b.n	80145b6 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 80145c0:	2000      	movs	r0, #0
 80145c2:	4770      	bx	lr
 80145c4:	20015640 	.word	0x20015640
 80145c8:	20015648 	.word	0x20015648
 80145cc:	20015644 	.word	0x20015644
 80145d0:	20015628 	.word	0x20015628
 80145d4:	200155b0 	.word	0x200155b0
 80145d8:	200155b4 	.word	0x200155b4
 80145dc:	200155b2 	.word	0x200155b2

080145e0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 80145e0:	b510      	push	{r4, lr}
 80145e2:	4a1f      	ldr	r2, [pc, #124]	; (8014660 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 80145e4:	880b      	ldrh	r3, [r1, #0]
 80145e6:	8812      	ldrh	r2, [r2, #0]
 80145e8:	4293      	cmp	r3, r2
 80145ea:	d213      	bcs.n	8014614 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 80145ec:	4a1d      	ldr	r2, [pc, #116]	; (8014664 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 80145ee:	6812      	ldr	r2, [r2, #0]
 80145f0:	2114      	movs	r1, #20
 80145f2:	fb01 2303 	mla	r3, r1, r3, r2
 80145f6:	8a1a      	ldrh	r2, [r3, #16]
 80145f8:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 80145fc:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 8014600:	8a5b      	ldrh	r3, [r3, #18]
 8014602:	8004      	strh	r4, [r0, #0]
 8014604:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8014608:	f3c3 030c 	ubfx	r3, r3, #0, #13
 801460c:	8041      	strh	r1, [r0, #2]
 801460e:	8082      	strh	r2, [r0, #4]
 8014610:	80c3      	strh	r3, [r0, #6]
 8014612:	e00e      	b.n	8014632 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8014614:	4914      	ldr	r1, [pc, #80]	; (8014668 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 8014616:	8809      	ldrh	r1, [r1, #0]
 8014618:	4411      	add	r1, r2
 801461a:	428b      	cmp	r3, r1
 801461c:	da0a      	bge.n	8014634 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 801461e:	1a9b      	subs	r3, r3, r2
 8014620:	4a12      	ldr	r2, [pc, #72]	; (801466c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 8014622:	6812      	ldr	r2, [r2, #0]
 8014624:	210e      	movs	r1, #14
 8014626:	fb01 2303 	mla	r3, r1, r3, r2
 801462a:	681a      	ldr	r2, [r3, #0]
 801462c:	6002      	str	r2, [r0, #0]
 801462e:	685a      	ldr	r2, [r3, #4]
 8014630:	6042      	str	r2, [r0, #4]
 8014632:	bd10      	pop	{r4, pc}
 8014634:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8014638:	4293      	cmp	r3, r2
 801463a:	d10b      	bne.n	8014654 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 801463c:	4b0c      	ldr	r3, [pc, #48]	; (8014670 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 801463e:	f9b3 1000 	ldrsh.w	r1, [r3]
 8014642:	4b0c      	ldr	r3, [pc, #48]	; (8014674 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 8014644:	8081      	strh	r1, [r0, #4]
 8014646:	f9b3 2000 	ldrsh.w	r2, [r3]
 801464a:	80c2      	strh	r2, [r0, #6]
 801464c:	2300      	movs	r3, #0
 801464e:	8003      	strh	r3, [r0, #0]
 8014650:	8043      	strh	r3, [r0, #2]
 8014652:	e7ee      	b.n	8014632 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8014654:	2300      	movs	r3, #0
 8014656:	8003      	strh	r3, [r0, #0]
 8014658:	8043      	strh	r3, [r0, #2]
 801465a:	8083      	strh	r3, [r0, #4]
 801465c:	e7d8      	b.n	8014610 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 801465e:	bf00      	nop
 8014660:	20015640 	.word	0x20015640
 8014664:	20015648 	.word	0x20015648
 8014668:	20015644 	.word	0x20015644
 801466c:	20015628 	.word	0x20015628
 8014670:	200155ac 	.word	0x200155ac
 8014674:	200155ae 	.word	0x200155ae

08014678 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 8014678:	4a17      	ldr	r2, [pc, #92]	; (80146d8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 801467a:	8803      	ldrh	r3, [r0, #0]
 801467c:	8812      	ldrh	r2, [r2, #0]
 801467e:	4293      	cmp	r3, r2
 8014680:	d213      	bcs.n	80146aa <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 8014682:	4a16      	ldr	r2, [pc, #88]	; (80146dc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 8014684:	6812      	ldr	r2, [r2, #0]
 8014686:	2114      	movs	r1, #20
 8014688:	fb01 2303 	mla	r3, r1, r3, r2
 801468c:	8a1a      	ldrh	r2, [r3, #16]
 801468e:	8919      	ldrh	r1, [r3, #8]
 8014690:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8014694:	428a      	cmp	r2, r1
 8014696:	db1d      	blt.n	80146d4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8014698:	8a58      	ldrh	r0, [r3, #18]
 801469a:	f3c0 000c 	ubfx	r0, r0, #0, #13
 801469e:	895b      	ldrh	r3, [r3, #10]
 80146a0:	4298      	cmp	r0, r3
 80146a2:	bfac      	ite	ge
 80146a4:	2000      	movge	r0, #0
 80146a6:	2001      	movlt	r0, #1
 80146a8:	4770      	bx	lr
 80146aa:	490d      	ldr	r1, [pc, #52]	; (80146e0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 80146ac:	8809      	ldrh	r1, [r1, #0]
 80146ae:	4411      	add	r1, r2
 80146b0:	428b      	cmp	r3, r1
 80146b2:	da0d      	bge.n	80146d0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 80146b4:	1a9b      	subs	r3, r3, r2
 80146b6:	4a0b      	ldr	r2, [pc, #44]	; (80146e4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 80146b8:	6812      	ldr	r2, [r2, #0]
 80146ba:	210e      	movs	r1, #14
 80146bc:	fb01 2303 	mla	r3, r1, r3, r2
 80146c0:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 80146c4:	891a      	ldrh	r2, [r3, #8]
 80146c6:	4291      	cmp	r1, r2
 80146c8:	db04      	blt.n	80146d4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 80146ca:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 80146ce:	e7e6      	b.n	801469e <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 80146d0:	2000      	movs	r0, #0
 80146d2:	4770      	bx	lr
 80146d4:	2001      	movs	r0, #1
 80146d6:	4770      	bx	lr
 80146d8:	20015640 	.word	0x20015640
 80146dc:	20015648 	.word	0x20015648
 80146e0:	20015644 	.word	0x20015644
 80146e4:	20015628 	.word	0x20015628

080146e8 <_ZNK8touchgfx6Bitmap7getDataEv>:
 80146e8:	4a12      	ldr	r2, [pc, #72]	; (8014734 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 80146ea:	8803      	ldrh	r3, [r0, #0]
 80146ec:	8811      	ldrh	r1, [r2, #0]
 80146ee:	428b      	cmp	r3, r1
 80146f0:	d20b      	bcs.n	801470a <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 80146f2:	4a11      	ldr	r2, [pc, #68]	; (8014738 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 80146f4:	6812      	ldr	r2, [r2, #0]
 80146f6:	b112      	cbz	r2, 80146fe <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 80146f8:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80146fc:	b9c0      	cbnz	r0, 8014730 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 80146fe:	4a0f      	ldr	r2, [pc, #60]	; (801473c <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 8014700:	6811      	ldr	r1, [r2, #0]
 8014702:	2214      	movs	r2, #20
 8014704:	4353      	muls	r3, r2
 8014706:	58c8      	ldr	r0, [r1, r3]
 8014708:	4770      	bx	lr
 801470a:	4a0d      	ldr	r2, [pc, #52]	; (8014740 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 801470c:	8812      	ldrh	r2, [r2, #0]
 801470e:	440a      	add	r2, r1
 8014710:	4293      	cmp	r3, r2
 8014712:	da04      	bge.n	801471e <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 8014714:	4a08      	ldr	r2, [pc, #32]	; (8014738 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8014716:	6812      	ldr	r2, [r2, #0]
 8014718:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 801471c:	4770      	bx	lr
 801471e:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8014722:	4293      	cmp	r3, r2
 8014724:	d103      	bne.n	801472e <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 8014726:	4b07      	ldr	r3, [pc, #28]	; (8014744 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 8014728:	681b      	ldr	r3, [r3, #0]
 801472a:	6c58      	ldr	r0, [r3, #68]	; 0x44
 801472c:	4770      	bx	lr
 801472e:	2000      	movs	r0, #0
 8014730:	4770      	bx	lr
 8014732:	bf00      	nop
 8014734:	20015640 	.word	0x20015640
 8014738:	20015624 	.word	0x20015624
 801473c:	20015648 	.word	0x20015648
 8014740:	20015644 	.word	0x20015644
 8014744:	200155b8 	.word	0x200155b8

08014748 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 8014748:	4b24      	ldr	r3, [pc, #144]	; (80147dc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 801474a:	8802      	ldrh	r2, [r0, #0]
 801474c:	8818      	ldrh	r0, [r3, #0]
 801474e:	4282      	cmp	r2, r0
 8014750:	d221      	bcs.n	8014796 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 8014752:	4b23      	ldr	r3, [pc, #140]	; (80147e0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 8014754:	6819      	ldr	r1, [r3, #0]
 8014756:	2314      	movs	r3, #20
 8014758:	fb03 1302 	mla	r3, r3, r2, r1
 801475c:	6858      	ldr	r0, [r3, #4]
 801475e:	2800      	cmp	r0, #0
 8014760:	d03a      	beq.n	80147d8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8014762:	4920      	ldr	r1, [pc, #128]	; (80147e4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8014764:	6809      	ldr	r1, [r1, #0]
 8014766:	2900      	cmp	r1, #0
 8014768:	d036      	beq.n	80147d8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801476a:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 801476e:	2900      	cmp	r1, #0
 8014770:	d032      	beq.n	80147d8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8014772:	891a      	ldrh	r2, [r3, #8]
 8014774:	8958      	ldrh	r0, [r3, #10]
 8014776:	4350      	muls	r0, r2
 8014778:	7c5a      	ldrb	r2, [r3, #17]
 801477a:	7cdb      	ldrb	r3, [r3, #19]
 801477c:	0952      	lsrs	r2, r2, #5
 801477e:	f3c3 1342 	ubfx	r3, r3, #5, #3
 8014782:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8014786:	2b0b      	cmp	r3, #11
 8014788:	bf18      	it	ne
 801478a:	0040      	lslne	r0, r0, #1
 801478c:	3003      	adds	r0, #3
 801478e:	f020 0003 	bic.w	r0, r0, #3
 8014792:	4408      	add	r0, r1
 8014794:	4770      	bx	lr
 8014796:	4b14      	ldr	r3, [pc, #80]	; (80147e8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8014798:	881b      	ldrh	r3, [r3, #0]
 801479a:	4403      	add	r3, r0
 801479c:	429a      	cmp	r2, r3
 801479e:	da1a      	bge.n	80147d6 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 80147a0:	4b12      	ldr	r3, [pc, #72]	; (80147ec <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 80147a2:	681b      	ldr	r3, [r3, #0]
 80147a4:	1a10      	subs	r0, r2, r0
 80147a6:	210e      	movs	r1, #14
 80147a8:	fb01 3000 	mla	r0, r1, r0, r3
 80147ac:	7b03      	ldrb	r3, [r0, #12]
 80147ae:	f003 031f 	and.w	r3, r3, #31
 80147b2:	2b0b      	cmp	r3, #11
 80147b4:	d10b      	bne.n	80147ce <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 80147b6:	8903      	ldrh	r3, [r0, #8]
 80147b8:	8940      	ldrh	r0, [r0, #10]
 80147ba:	4358      	muls	r0, r3
 80147bc:	4b09      	ldr	r3, [pc, #36]	; (80147e4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 80147be:	6819      	ldr	r1, [r3, #0]
 80147c0:	3003      	adds	r0, #3
 80147c2:	f020 0303 	bic.w	r3, r0, #3
 80147c6:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 80147ca:	4418      	add	r0, r3
 80147cc:	4770      	bx	lr
 80147ce:	2b0d      	cmp	r3, #13
 80147d0:	d101      	bne.n	80147d6 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 80147d2:	300d      	adds	r0, #13
 80147d4:	4770      	bx	lr
 80147d6:	2000      	movs	r0, #0
 80147d8:	4770      	bx	lr
 80147da:	bf00      	nop
 80147dc:	20015640 	.word	0x20015640
 80147e0:	20015648 	.word	0x20015648
 80147e4:	20015624 	.word	0x20015624
 80147e8:	20015644 	.word	0x20015644
 80147ec:	20015628 	.word	0x20015628

080147f0 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 80147f0:	b510      	push	{r4, lr}
 80147f2:	4a17      	ldr	r2, [pc, #92]	; (8014850 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 80147f4:	8803      	ldrh	r3, [r0, #0]
 80147f6:	8812      	ldrh	r2, [r2, #0]
 80147f8:	4293      	cmp	r3, r2
 80147fa:	d20c      	bcs.n	8014816 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 80147fc:	4a15      	ldr	r2, [pc, #84]	; (8014854 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 80147fe:	6812      	ldr	r2, [r2, #0]
 8014800:	2114      	movs	r1, #20
 8014802:	fb01 2303 	mla	r3, r1, r3, r2
 8014806:	7c58      	ldrb	r0, [r3, #17]
 8014808:	0942      	lsrs	r2, r0, #5
 801480a:	7cd8      	ldrb	r0, [r3, #19]
 801480c:	f3c0 1042 	ubfx	r0, r0, #5, #3
 8014810:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 8014814:	bd10      	pop	{r4, pc}
 8014816:	4910      	ldr	r1, [pc, #64]	; (8014858 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 8014818:	8809      	ldrh	r1, [r1, #0]
 801481a:	4411      	add	r1, r2
 801481c:	428b      	cmp	r3, r1
 801481e:	da09      	bge.n	8014834 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 8014820:	1a9b      	subs	r3, r3, r2
 8014822:	4a0e      	ldr	r2, [pc, #56]	; (801485c <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 8014824:	6812      	ldr	r2, [r2, #0]
 8014826:	210e      	movs	r1, #14
 8014828:	fb01 2303 	mla	r3, r1, r3, r2
 801482c:	7b18      	ldrb	r0, [r3, #12]
 801482e:	f000 001f 	and.w	r0, r0, #31
 8014832:	e7ef      	b.n	8014814 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 8014834:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8014838:	4293      	cmp	r3, r2
 801483a:	d106      	bne.n	801484a <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 801483c:	f7ed ff68 	bl	8002710 <_ZN8touchgfx3HAL3lcdEv>
 8014840:	6803      	ldr	r3, [r0, #0]
 8014842:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014846:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014848:	4718      	bx	r3
 801484a:	2000      	movs	r0, #0
 801484c:	e7e2      	b.n	8014814 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 801484e:	bf00      	nop
 8014850:	20015640 	.word	0x20015640
 8014854:	20015648 	.word	0x20015648
 8014858:	20015644 	.word	0x20015644
 801485c:	20015628 	.word	0x20015628

08014860 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 8014860:	2010      	movs	r0, #16
 8014862:	4770      	bx	lr

08014864 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 8014864:	2000      	movs	r0, #0
 8014866:	4770      	bx	lr

08014868 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8014868:	4b02      	ldr	r3, [pc, #8]	; (8014874 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 801486a:	8818      	ldrh	r0, [r3, #0]
 801486c:	0040      	lsls	r0, r0, #1
 801486e:	b280      	uxth	r0, r0
 8014870:	4770      	bx	lr
 8014872:	bf00      	nop
 8014874:	200155b2 	.word	0x200155b2

08014878 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8014878:	2bff      	cmp	r3, #255	; 0xff
 801487a:	d050      	beq.n	801491e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 801487c:	2a0b      	cmp	r2, #11
 801487e:	d04a      	beq.n	8014916 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8014880:	d80e      	bhi.n	80148a0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 8014882:	2a03      	cmp	r2, #3
 8014884:	d03f      	beq.n	8014906 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 8014886:	d804      	bhi.n	8014892 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8014888:	2a01      	cmp	r2, #1
 801488a:	d03e      	beq.n	801490a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 801488c:	d93f      	bls.n	801490e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 801488e:	6b80      	ldr	r0, [r0, #56]	; 0x38
 8014890:	4770      	bx	lr
 8014892:	2a09      	cmp	r2, #9
 8014894:	d03f      	beq.n	8014916 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8014896:	d83c      	bhi.n	8014912 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8014898:	2a08      	cmp	r2, #8
 801489a:	d03a      	beq.n	8014912 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 801489c:	2000      	movs	r0, #0
 801489e:	4770      	bx	lr
 80148a0:	2a2f      	cmp	r2, #47	; 0x2f
 80148a2:	d024      	beq.n	80148ee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 80148a4:	d80d      	bhi.n	80148c2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 80148a6:	2a2d      	cmp	r2, #45	; 0x2d
 80148a8:	d014      	beq.n	80148d4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 80148aa:	d826      	bhi.n	80148fa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 80148ac:	2a2c      	cmp	r2, #44	; 0x2c
 80148ae:	d1f5      	bne.n	801489c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80148b0:	684b      	ldr	r3, [r1, #4]
 80148b2:	781b      	ldrb	r3, [r3, #0]
 80148b4:	2b01      	cmp	r3, #1
 80148b6:	d018      	beq.n	80148ea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 80148b8:	d323      	bcc.n	8014902 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 80148ba:	2b02      	cmp	r3, #2
 80148bc:	d1ee      	bne.n	801489c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80148be:	6880      	ldr	r0, [r0, #8]
 80148c0:	4770      	bx	lr
 80148c2:	2a31      	cmp	r2, #49	; 0x31
 80148c4:	d004      	beq.n	80148d0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 80148c6:	d328      	bcc.n	801491a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 80148c8:	2a32      	cmp	r2, #50	; 0x32
 80148ca:	d026      	beq.n	801491a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 80148cc:	2a33      	cmp	r2, #51	; 0x33
 80148ce:	d1e5      	bne.n	801489c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80148d0:	6f00      	ldr	r0, [r0, #112]	; 0x70
 80148d2:	4770      	bx	lr
 80148d4:	684b      	ldr	r3, [r1, #4]
 80148d6:	781b      	ldrb	r3, [r3, #0]
 80148d8:	2b01      	cmp	r3, #1
 80148da:	d004      	beq.n	80148e6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 80148dc:	d30b      	bcc.n	80148f6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80148de:	2b02      	cmp	r3, #2
 80148e0:	d1dc      	bne.n	801489c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80148e2:	6900      	ldr	r0, [r0, #16]
 80148e4:	4770      	bx	lr
 80148e6:	6a00      	ldr	r0, [r0, #32]
 80148e8:	4770      	bx	lr
 80148ea:	6980      	ldr	r0, [r0, #24]
 80148ec:	4770      	bx	lr
 80148ee:	684b      	ldr	r3, [r1, #4]
 80148f0:	781b      	ldrb	r3, [r3, #0]
 80148f2:	2b00      	cmp	r3, #0
 80148f4:	d1d2      	bne.n	801489c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80148f6:	6b00      	ldr	r0, [r0, #48]	; 0x30
 80148f8:	4770      	bx	lr
 80148fa:	684b      	ldr	r3, [r1, #4]
 80148fc:	781b      	ldrb	r3, [r3, #0]
 80148fe:	2b00      	cmp	r3, #0
 8014900:	d1cc      	bne.n	801489c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014902:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8014904:	4770      	bx	lr
 8014906:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8014908:	4770      	bx	lr
 801490a:	6d00      	ldr	r0, [r0, #80]	; 0x50
 801490c:	4770      	bx	lr
 801490e:	6c00      	ldr	r0, [r0, #64]	; 0x40
 8014910:	4770      	bx	lr
 8014912:	6d80      	ldr	r0, [r0, #88]	; 0x58
 8014914:	4770      	bx	lr
 8014916:	6e00      	ldr	r0, [r0, #96]	; 0x60
 8014918:	4770      	bx	lr
 801491a:	6e80      	ldr	r0, [r0, #104]	; 0x68
 801491c:	4770      	bx	lr
 801491e:	2a0b      	cmp	r2, #11
 8014920:	d049      	beq.n	80149b6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8014922:	d80e      	bhi.n	8014942 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 8014924:	2a03      	cmp	r2, #3
 8014926:	d040      	beq.n	80149aa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 8014928:	d804      	bhi.n	8014934 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 801492a:	2a01      	cmp	r2, #1
 801492c:	d03f      	beq.n	80149ae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 801492e:	d940      	bls.n	80149b2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 8014930:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8014932:	4770      	bx	lr
 8014934:	2a09      	cmp	r2, #9
 8014936:	d03e      	beq.n	80149b6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8014938:	d801      	bhi.n	801493e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 801493a:	2a08      	cmp	r2, #8
 801493c:	d1ae      	bne.n	801489c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801493e:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 8014940:	4770      	bx	lr
 8014942:	2a2f      	cmp	r2, #47	; 0x2f
 8014944:	d024      	beq.n	8014990 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 8014946:	d80d      	bhi.n	8014964 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 8014948:	2a2d      	cmp	r2, #45	; 0x2d
 801494a:	d014      	beq.n	8014976 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 801494c:	d826      	bhi.n	801499c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 801494e:	2a2c      	cmp	r2, #44	; 0x2c
 8014950:	d1a4      	bne.n	801489c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014952:	684b      	ldr	r3, [r1, #4]
 8014954:	781b      	ldrb	r3, [r3, #0]
 8014956:	2b01      	cmp	r3, #1
 8014958:	d018      	beq.n	801498c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 801495a:	d324      	bcc.n	80149a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 801495c:	2b02      	cmp	r3, #2
 801495e:	d19d      	bne.n	801489c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014960:	68c0      	ldr	r0, [r0, #12]
 8014962:	4770      	bx	lr
 8014964:	2a31      	cmp	r2, #49	; 0x31
 8014966:	d004      	beq.n	8014972 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 8014968:	d327      	bcc.n	80149ba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801496a:	2a32      	cmp	r2, #50	; 0x32
 801496c:	d025      	beq.n	80149ba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801496e:	2a33      	cmp	r2, #51	; 0x33
 8014970:	d194      	bne.n	801489c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014972:	6f40      	ldr	r0, [r0, #116]	; 0x74
 8014974:	4770      	bx	lr
 8014976:	684b      	ldr	r3, [r1, #4]
 8014978:	781b      	ldrb	r3, [r3, #0]
 801497a:	2b01      	cmp	r3, #1
 801497c:	d004      	beq.n	8014988 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 801497e:	d30b      	bcc.n	8014998 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 8014980:	2b02      	cmp	r3, #2
 8014982:	d18b      	bne.n	801489c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014984:	6940      	ldr	r0, [r0, #20]
 8014986:	4770      	bx	lr
 8014988:	6a40      	ldr	r0, [r0, #36]	; 0x24
 801498a:	4770      	bx	lr
 801498c:	69c0      	ldr	r0, [r0, #28]
 801498e:	4770      	bx	lr
 8014990:	684b      	ldr	r3, [r1, #4]
 8014992:	781b      	ldrb	r3, [r3, #0]
 8014994:	2b00      	cmp	r3, #0
 8014996:	d181      	bne.n	801489c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014998:	6b40      	ldr	r0, [r0, #52]	; 0x34
 801499a:	4770      	bx	lr
 801499c:	684b      	ldr	r3, [r1, #4]
 801499e:	781b      	ldrb	r3, [r3, #0]
 80149a0:	2b00      	cmp	r3, #0
 80149a2:	f47f af7b 	bne.w	801489c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80149a6:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 80149a8:	4770      	bx	lr
 80149aa:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 80149ac:	4770      	bx	lr
 80149ae:	6d40      	ldr	r0, [r0, #84]	; 0x54
 80149b0:	4770      	bx	lr
 80149b2:	6c40      	ldr	r0, [r0, #68]	; 0x44
 80149b4:	4770      	bx	lr
 80149b6:	6e40      	ldr	r0, [r0, #100]	; 0x64
 80149b8:	4770      	bx	lr
 80149ba:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 80149bc:	4770      	bx	lr

080149be <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80149be:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80149c2:	b087      	sub	sp, #28
 80149c4:	9815      	ldr	r0, [sp, #84]	; 0x54
 80149c6:	9205      	str	r2, [sp, #20]
 80149c8:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80149cc:	9202      	str	r2, [sp, #8]
 80149ce:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 80149d2:	9101      	str	r1, [sp, #4]
 80149d4:	6841      	ldr	r1, [r0, #4]
 80149d6:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 80149da:	fb01 2404 	mla	r4, r1, r4, r2
 80149de:	6802      	ldr	r2, [r0, #0]
 80149e0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80149e4:	f8de 2000 	ldr.w	r2, [lr]
 80149e8:	9203      	str	r2, [sp, #12]
 80149ea:	f8de 2004 	ldr.w	r2, [lr, #4]
 80149ee:	3204      	adds	r2, #4
 80149f0:	9204      	str	r2, [sp, #16]
 80149f2:	9a02      	ldr	r2, [sp, #8]
 80149f4:	43d6      	mvns	r6, r2
 80149f6:	b2f6      	uxtb	r6, r6
 80149f8:	9a01      	ldr	r2, [sp, #4]
 80149fa:	2a00      	cmp	r2, #0
 80149fc:	dc03      	bgt.n	8014a06 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80149fe:	9a05      	ldr	r2, [sp, #20]
 8014a00:	2a00      	cmp	r2, #0
 8014a02:	f340 8129 	ble.w	8014c58 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8014a06:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8014a08:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8014a0c:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8014a10:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8014a14:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8014a16:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8014a1a:	2b00      	cmp	r3, #0
 8014a1c:	dd0e      	ble.n	8014a3c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8014a1e:	1408      	asrs	r0, r1, #16
 8014a20:	d405      	bmi.n	8014a2e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8014a22:	4560      	cmp	r0, ip
 8014a24:	da03      	bge.n	8014a2e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8014a26:	1410      	asrs	r0, r2, #16
 8014a28:	d401      	bmi.n	8014a2e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8014a2a:	42b8      	cmp	r0, r7
 8014a2c:	db07      	blt.n	8014a3e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8014a2e:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8014a30:	4401      	add	r1, r0
 8014a32:	9814      	ldr	r0, [sp, #80]	; 0x50
 8014a34:	3b01      	subs	r3, #1
 8014a36:	4402      	add	r2, r0
 8014a38:	3402      	adds	r4, #2
 8014a3a:	e7ee      	b.n	8014a1a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8014a3c:	d071      	beq.n	8014b22 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8014a3e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8014a40:	1e58      	subs	r0, r3, #1
 8014a42:	fb05 1500 	mla	r5, r5, r0, r1
 8014a46:	142d      	asrs	r5, r5, #16
 8014a48:	d45f      	bmi.n	8014b0a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8014a4a:	4565      	cmp	r5, ip
 8014a4c:	da5d      	bge.n	8014b0a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8014a4e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8014a50:	fb05 2000 	mla	r0, r5, r0, r2
 8014a54:	1400      	asrs	r0, r0, #16
 8014a56:	d458      	bmi.n	8014b0a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8014a58:	42b8      	cmp	r0, r7
 8014a5a:	da56      	bge.n	8014b0a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8014a5c:	f8bd b008 	ldrh.w	fp, [sp, #8]
 8014a60:	4699      	mov	r9, r3
 8014a62:	46a2      	mov	sl, r4
 8014a64:	f1b9 0f00 	cmp.w	r9, #0
 8014a68:	dd57      	ble.n	8014b1a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 8014a6a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8014a6e:	9803      	ldr	r0, [sp, #12]
 8014a70:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8014a74:	140d      	asrs	r5, r1, #16
 8014a76:	fb07 000c 	mla	r0, r7, ip, r0
 8014a7a:	f109 39ff 	add.w	r9, r9, #4294967295
 8014a7e:	5d40      	ldrb	r0, [r0, r5]
 8014a80:	9d04      	ldr	r5, [sp, #16]
 8014a82:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8014a86:	f8ba 5000 	ldrh.w	r5, [sl]
 8014a8a:	122f      	asrs	r7, r5, #8
 8014a8c:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8014a90:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8014a94:	fb17 f706 	smulbb	r7, r7, r6
 8014a98:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8014a9c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8014aa0:	00ed      	lsls	r5, r5, #3
 8014aa2:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8014aa6:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8014aaa:	10c7      	asrs	r7, r0, #3
 8014aac:	b2ed      	uxtb	r5, r5
 8014aae:	00c0      	lsls	r0, r0, #3
 8014ab0:	fb18 f806 	smulbb	r8, r8, r6
 8014ab4:	fb15 f506 	smulbb	r5, r5, r6
 8014ab8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8014abc:	b2c0      	uxtb	r0, r0
 8014abe:	fa1f fc8c 	uxth.w	ip, ip
 8014ac2:	fb07 870b 	mla	r7, r7, fp, r8
 8014ac6:	fb00 500b 	mla	r0, r0, fp, r5
 8014aca:	b280      	uxth	r0, r0
 8014acc:	b2bf      	uxth	r7, r7
 8014ace:	f10c 0501 	add.w	r5, ip, #1
 8014ad2:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8014ad6:	f107 0801 	add.w	r8, r7, #1
 8014ada:	1c45      	adds	r5, r0, #1
 8014adc:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8014ae0:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8014ae4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8014ae6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8014aea:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8014aee:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8014af2:	ea45 0c0c 	orr.w	ip, r5, ip
 8014af6:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8014afa:	4401      	add	r1, r0
 8014afc:	9814      	ldr	r0, [sp, #80]	; 0x50
 8014afe:	ea4c 0c08 	orr.w	ip, ip, r8
 8014b02:	f82a cb02 	strh.w	ip, [sl], #2
 8014b06:	4402      	add	r2, r0
 8014b08:	e7ac      	b.n	8014a64 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8014b0a:	f8bd a008 	ldrh.w	sl, [sp, #8]
 8014b0e:	f04f 0800 	mov.w	r8, #0
 8014b12:	eb03 0008 	add.w	r0, r3, r8
 8014b16:	2800      	cmp	r0, #0
 8014b18:	dc41      	bgt.n	8014b9e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8014b1a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014b1e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014b22:	9b01      	ldr	r3, [sp, #4]
 8014b24:	2b00      	cmp	r3, #0
 8014b26:	f340 8097 	ble.w	8014c58 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8014b2a:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014b2e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8014b32:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8014b36:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014b38:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014b3c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014b40:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014b44:	eef0 6a62 	vmov.f32	s13, s5
 8014b48:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014b4c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014b50:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014b54:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8014b58:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014b5c:	eef0 6a43 	vmov.f32	s13, s6
 8014b60:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014b64:	ee12 2a90 	vmov	r2, s5
 8014b68:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014b6c:	fb92 f3f3 	sdiv	r3, r2, r3
 8014b70:	ee13 2a10 	vmov	r2, s6
 8014b74:	9313      	str	r3, [sp, #76]	; 0x4c
 8014b76:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014b78:	fb92 f3f3 	sdiv	r3, r2, r3
 8014b7c:	9314      	str	r3, [sp, #80]	; 0x50
 8014b7e:	9b01      	ldr	r3, [sp, #4]
 8014b80:	9a05      	ldr	r2, [sp, #20]
 8014b82:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014b86:	3b01      	subs	r3, #1
 8014b88:	9301      	str	r3, [sp, #4]
 8014b8a:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8014b8e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014b90:	eeb0 3a67 	vmov.f32	s6, s15
 8014b94:	bf08      	it	eq
 8014b96:	4613      	moveq	r3, r2
 8014b98:	eef0 2a47 	vmov.f32	s5, s14
 8014b9c:	e72c      	b.n	80149f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8014b9e:	140f      	asrs	r7, r1, #16
 8014ba0:	d453      	bmi.n	8014c4a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8014ba2:	f8de 5008 	ldr.w	r5, [lr, #8]
 8014ba6:	42bd      	cmp	r5, r7
 8014ba8:	dd4f      	ble.n	8014c4a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8014baa:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8014bae:	d44c      	bmi.n	8014c4a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8014bb0:	f8de 000c 	ldr.w	r0, [lr, #12]
 8014bb4:	4560      	cmp	r0, ip
 8014bb6:	dd48      	ble.n	8014c4a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8014bb8:	9803      	ldr	r0, [sp, #12]
 8014bba:	b22d      	sxth	r5, r5
 8014bbc:	fb0c 0505 	mla	r5, ip, r5, r0
 8014bc0:	5de8      	ldrb	r0, [r5, r7]
 8014bc2:	9d04      	ldr	r5, [sp, #16]
 8014bc4:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8014bc8:	f06f 0501 	mvn.w	r5, #1
 8014bcc:	fb05 fb08 	mul.w	fp, r5, r8
 8014bd0:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8014bd4:	f834 500b 	ldrh.w	r5, [r4, fp]
 8014bd8:	122f      	asrs	r7, r5, #8
 8014bda:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8014bde:	fb17 f706 	smulbb	r7, r7, r6
 8014be2:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8014be6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8014bea:	00ed      	lsls	r5, r5, #3
 8014bec:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8014bf0:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8014bf4:	10c7      	asrs	r7, r0, #3
 8014bf6:	b2ed      	uxtb	r5, r5
 8014bf8:	00c0      	lsls	r0, r0, #3
 8014bfa:	fb19 f906 	smulbb	r9, r9, r6
 8014bfe:	fb15 f506 	smulbb	r5, r5, r6
 8014c02:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8014c06:	b2c0      	uxtb	r0, r0
 8014c08:	fa1f fc8c 	uxth.w	ip, ip
 8014c0c:	fb07 970a 	mla	r7, r7, sl, r9
 8014c10:	fb00 500a 	mla	r0, r0, sl, r5
 8014c14:	b2bf      	uxth	r7, r7
 8014c16:	b280      	uxth	r0, r0
 8014c18:	f10c 0501 	add.w	r5, ip, #1
 8014c1c:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8014c20:	f107 0901 	add.w	r9, r7, #1
 8014c24:	1c45      	adds	r5, r0, #1
 8014c26:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8014c2a:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8014c2e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8014c32:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8014c36:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8014c3a:	ea45 0c0c 	orr.w	ip, r5, ip
 8014c3e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8014c42:	ea4c 0c09 	orr.w	ip, ip, r9
 8014c46:	f824 c00b 	strh.w	ip, [r4, fp]
 8014c4a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8014c4c:	4401      	add	r1, r0
 8014c4e:	9814      	ldr	r0, [sp, #80]	; 0x50
 8014c50:	f108 38ff 	add.w	r8, r8, #4294967295
 8014c54:	4402      	add	r2, r0
 8014c56:	e75c      	b.n	8014b12 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8014c58:	b007      	add	sp, #28
 8014c5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014c5e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014c5e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014c62:	b085      	sub	sp, #20
 8014c64:	4693      	mov	fp, r2
 8014c66:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8014c68:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8014c6a:	6870      	ldr	r0, [r6, #4]
 8014c6c:	9100      	str	r1, [sp, #0]
 8014c6e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8014c72:	fb00 2404 	mla	r4, r0, r4, r2
 8014c76:	6832      	ldr	r2, [r6, #0]
 8014c78:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014c7c:	682a      	ldr	r2, [r5, #0]
 8014c7e:	9201      	str	r2, [sp, #4]
 8014c80:	686a      	ldr	r2, [r5, #4]
 8014c82:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8014c86:	3204      	adds	r2, #4
 8014c88:	9202      	str	r2, [sp, #8]
 8014c8a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8014c8e:	9a00      	ldr	r2, [sp, #0]
 8014c90:	2a00      	cmp	r2, #0
 8014c92:	dc03      	bgt.n	8014c9c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8014c94:	f1bb 0f00 	cmp.w	fp, #0
 8014c98:	f340 80a0 	ble.w	8014ddc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8014c9c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8014c9e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8014ca2:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8014ca6:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8014caa:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8014cac:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8014cb0:	2b00      	cmp	r3, #0
 8014cb2:	dd0c      	ble.n	8014cce <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8014cb4:	1406      	asrs	r6, r0, #16
 8014cb6:	d405      	bmi.n	8014cc4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014cb8:	454e      	cmp	r6, r9
 8014cba:	da03      	bge.n	8014cc4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014cbc:	1416      	asrs	r6, r2, #16
 8014cbe:	d401      	bmi.n	8014cc4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014cc0:	4546      	cmp	r6, r8
 8014cc2:	db05      	blt.n	8014cd0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014cc4:	4470      	add	r0, lr
 8014cc6:	4462      	add	r2, ip
 8014cc8:	3b01      	subs	r3, #1
 8014cca:	3402      	adds	r4, #2
 8014ccc:	e7f0      	b.n	8014cb0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8014cce:	d00f      	beq.n	8014cf0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8014cd0:	1e5e      	subs	r6, r3, #1
 8014cd2:	fb0e 0706 	mla	r7, lr, r6, r0
 8014cd6:	143f      	asrs	r7, r7, #16
 8014cd8:	d541      	bpl.n	8014d5e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 8014cda:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8014cde:	4698      	mov	r8, r3
 8014ce0:	9603      	str	r6, [sp, #12]
 8014ce2:	f1b8 0f00 	cmp.w	r8, #0
 8014ce6:	dc59      	bgt.n	8014d9c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8014ce8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014cec:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014cf0:	9b00      	ldr	r3, [sp, #0]
 8014cf2:	2b00      	cmp	r3, #0
 8014cf4:	dd72      	ble.n	8014ddc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8014cf6:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014cfa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014cfe:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014d02:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014d04:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014d08:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014d0c:	eeb0 6a62 	vmov.f32	s12, s5
 8014d10:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014d14:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014d18:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014d1c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8014d20:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014d24:	eeb0 6a43 	vmov.f32	s12, s6
 8014d28:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014d2c:	ee12 2a90 	vmov	r2, s5
 8014d30:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014d34:	fb92 fef3 	sdiv	lr, r2, r3
 8014d38:	ee13 2a10 	vmov	r2, s6
 8014d3c:	fb92 fcf3 	sdiv	ip, r2, r3
 8014d40:	9b00      	ldr	r3, [sp, #0]
 8014d42:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014d46:	3b01      	subs	r3, #1
 8014d48:	9300      	str	r3, [sp, #0]
 8014d4a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8014d4e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014d50:	eeb0 3a67 	vmov.f32	s6, s15
 8014d54:	bf08      	it	eq
 8014d56:	465b      	moveq	r3, fp
 8014d58:	eef0 2a47 	vmov.f32	s5, s14
 8014d5c:	e797      	b.n	8014c8e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8014d5e:	454f      	cmp	r7, r9
 8014d60:	dabb      	bge.n	8014cda <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8014d62:	fb0c 2606 	mla	r6, ip, r6, r2
 8014d66:	1436      	asrs	r6, r6, #16
 8014d68:	d4b7      	bmi.n	8014cda <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8014d6a:	4546      	cmp	r6, r8
 8014d6c:	dab5      	bge.n	8014cda <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8014d6e:	461e      	mov	r6, r3
 8014d70:	46a0      	mov	r8, r4
 8014d72:	2e00      	cmp	r6, #0
 8014d74:	ddb8      	ble.n	8014ce8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8014d76:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8014d7a:	9901      	ldr	r1, [sp, #4]
 8014d7c:	1417      	asrs	r7, r2, #16
 8014d7e:	ea4f 4920 	mov.w	r9, r0, asr #16
 8014d82:	fb0a 1707 	mla	r7, sl, r7, r1
 8014d86:	9902      	ldr	r1, [sp, #8]
 8014d88:	f817 7009 	ldrb.w	r7, [r7, r9]
 8014d8c:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8014d90:	f828 7b02 	strh.w	r7, [r8], #2
 8014d94:	4470      	add	r0, lr
 8014d96:	4462      	add	r2, ip
 8014d98:	3e01      	subs	r6, #1
 8014d9a:	e7ea      	b.n	8014d72 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8014d9c:	ea5f 4920 	movs.w	r9, r0, asr #16
 8014da0:	d417      	bmi.n	8014dd2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8014da2:	68ae      	ldr	r6, [r5, #8]
 8014da4:	454e      	cmp	r6, r9
 8014da6:	dd14      	ble.n	8014dd2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8014da8:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8014dac:	d411      	bmi.n	8014dd2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8014dae:	68ef      	ldr	r7, [r5, #12]
 8014db0:	4557      	cmp	r7, sl
 8014db2:	dd0e      	ble.n	8014dd2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8014db4:	9f01      	ldr	r7, [sp, #4]
 8014db6:	b236      	sxth	r6, r6
 8014db8:	fb0a 7606 	mla	r6, sl, r6, r7
 8014dbc:	9f02      	ldr	r7, [sp, #8]
 8014dbe:	f816 6009 	ldrb.w	r6, [r6, r9]
 8014dc2:	f06f 0101 	mvn.w	r1, #1
 8014dc6:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8014dca:	fb01 f608 	mul.w	r6, r1, r8
 8014dce:	9903      	ldr	r1, [sp, #12]
 8014dd0:	538f      	strh	r7, [r1, r6]
 8014dd2:	4470      	add	r0, lr
 8014dd4:	4462      	add	r2, ip
 8014dd6:	f108 38ff 	add.w	r8, r8, #4294967295
 8014dda:	e782      	b.n	8014ce2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8014ddc:	b005      	add	sp, #20
 8014dde:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014de2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014de2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014de6:	b087      	sub	sp, #28
 8014de8:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8014dea:	9205      	str	r2, [sp, #20]
 8014dec:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8014df0:	9203      	str	r2, [sp, #12]
 8014df2:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8014df6:	9102      	str	r1, [sp, #8]
 8014df8:	6861      	ldr	r1, [r4, #4]
 8014dfa:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8014dfe:	fb01 2000 	mla	r0, r1, r0, r2
 8014e02:	6822      	ldr	r2, [r4, #0]
 8014e04:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 8014e08:	9200      	str	r2, [sp, #0]
 8014e0a:	f8dc 2000 	ldr.w	r2, [ip]
 8014e0e:	9204      	str	r2, [sp, #16]
 8014e10:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8014e14:	3204      	adds	r2, #4
 8014e16:	9201      	str	r2, [sp, #4]
 8014e18:	9a03      	ldr	r2, [sp, #12]
 8014e1a:	43d5      	mvns	r5, r2
 8014e1c:	b2ed      	uxtb	r5, r5
 8014e1e:	9a02      	ldr	r2, [sp, #8]
 8014e20:	2a00      	cmp	r2, #0
 8014e22:	dc03      	bgt.n	8014e2c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8014e24:	9a05      	ldr	r2, [sp, #20]
 8014e26:	2a00      	cmp	r2, #0
 8014e28:	f340 812c 	ble.w	8015084 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8014e2c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8014e2e:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 8014e32:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 8014e36:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8014e3a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8014e3c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8014e40:	2b00      	cmp	r3, #0
 8014e42:	dd10      	ble.n	8014e66 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8014e44:	140c      	asrs	r4, r1, #16
 8014e46:	d405      	bmi.n	8014e54 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014e48:	4574      	cmp	r4, lr
 8014e4a:	da03      	bge.n	8014e54 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014e4c:	1414      	asrs	r4, r2, #16
 8014e4e:	d401      	bmi.n	8014e54 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014e50:	42bc      	cmp	r4, r7
 8014e52:	db09      	blt.n	8014e68 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8014e54:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8014e56:	9800      	ldr	r0, [sp, #0]
 8014e58:	4421      	add	r1, r4
 8014e5a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8014e5c:	3002      	adds	r0, #2
 8014e5e:	4422      	add	r2, r4
 8014e60:	3b01      	subs	r3, #1
 8014e62:	9000      	str	r0, [sp, #0]
 8014e64:	e7ec      	b.n	8014e40 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8014e66:	d071      	beq.n	8014f4c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8014e68:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8014e6a:	1e5c      	subs	r4, r3, #1
 8014e6c:	fb06 1604 	mla	r6, r6, r4, r1
 8014e70:	1436      	asrs	r6, r6, #16
 8014e72:	d45d      	bmi.n	8014f30 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8014e74:	4576      	cmp	r6, lr
 8014e76:	da5b      	bge.n	8014f30 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8014e78:	9e14      	ldr	r6, [sp, #80]	; 0x50
 8014e7a:	fb06 2404 	mla	r4, r6, r4, r2
 8014e7e:	1424      	asrs	r4, r4, #16
 8014e80:	d456      	bmi.n	8014f30 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8014e82:	42bc      	cmp	r4, r7
 8014e84:	da54      	bge.n	8014f30 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8014e86:	f8dd 9000 	ldr.w	r9, [sp]
 8014e8a:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 8014e8e:	4698      	mov	r8, r3
 8014e90:	f1b8 0f00 	cmp.w	r8, #0
 8014e94:	dd54      	ble.n	8014f40 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8014e96:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8014e9a:	9804      	ldr	r0, [sp, #16]
 8014e9c:	1414      	asrs	r4, r2, #16
 8014e9e:	fb07 0404 	mla	r4, r7, r4, r0
 8014ea2:	140e      	asrs	r6, r1, #16
 8014ea4:	9801      	ldr	r0, [sp, #4]
 8014ea6:	f814 e006 	ldrb.w	lr, [r4, r6]
 8014eaa:	f8b9 4000 	ldrh.w	r4, [r9]
 8014eae:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8014eb2:	eb00 0b0e 	add.w	fp, r0, lr
 8014eb6:	1227      	asrs	r7, r4, #8
 8014eb8:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8014ebc:	f89b b001 	ldrb.w	fp, [fp, #1]
 8014ec0:	f810 e00e 	ldrb.w	lr, [r0, lr]
 8014ec4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8014ec6:	fb16 f60a 	smulbb	r6, r6, sl
 8014eca:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8014ece:	fb07 6705 	mla	r7, r7, r5, r6
 8014ed2:	10e6      	asrs	r6, r4, #3
 8014ed4:	00e4      	lsls	r4, r4, #3
 8014ed6:	b2e4      	uxtb	r4, r4
 8014ed8:	fb1b fb0a 	smulbb	fp, fp, sl
 8014edc:	fb14 f405 	smulbb	r4, r4, r5
 8014ee0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8014ee4:	b2bf      	uxth	r7, r7
 8014ee6:	fb06 b605 	mla	r6, r6, r5, fp
 8014eea:	fb0e 4e0a 	mla	lr, lr, sl, r4
 8014eee:	b2b6      	uxth	r6, r6
 8014ef0:	fa1f fe8e 	uxth.w	lr, lr
 8014ef4:	1c7c      	adds	r4, r7, #1
 8014ef6:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8014efa:	f106 0b01 	add.w	fp, r6, #1
 8014efe:	f10e 0401 	add.w	r4, lr, #1
 8014f02:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 8014f06:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8014f0a:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8014f0e:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8014f12:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8014f16:	4327      	orrs	r7, r4
 8014f18:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8014f1c:	4401      	add	r1, r0
 8014f1e:	9814      	ldr	r0, [sp, #80]	; 0x50
 8014f20:	ea47 070b 	orr.w	r7, r7, fp
 8014f24:	f829 7b02 	strh.w	r7, [r9], #2
 8014f28:	4402      	add	r2, r0
 8014f2a:	f108 38ff 	add.w	r8, r8, #4294967295
 8014f2e:	e7af      	b.n	8014e90 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8014f30:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 8014f34:	f04f 0e00 	mov.w	lr, #0
 8014f38:	eb03 040e 	add.w	r4, r3, lr
 8014f3c:	2c00      	cmp	r4, #0
 8014f3e:	dc43      	bgt.n	8014fc8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8014f40:	9a00      	ldr	r2, [sp, #0]
 8014f42:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014f46:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8014f4a:	9300      	str	r3, [sp, #0]
 8014f4c:	9b02      	ldr	r3, [sp, #8]
 8014f4e:	2b00      	cmp	r3, #0
 8014f50:	f340 8098 	ble.w	8015084 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8014f54:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014f58:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8014f5c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8014f60:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014f62:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014f66:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014f6a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014f6e:	eef0 6a62 	vmov.f32	s13, s5
 8014f72:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014f76:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014f7a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014f7e:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8014f82:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014f86:	eef0 6a43 	vmov.f32	s13, s6
 8014f8a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014f8e:	ee12 2a90 	vmov	r2, s5
 8014f92:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014f96:	fb92 f3f3 	sdiv	r3, r2, r3
 8014f9a:	ee13 2a10 	vmov	r2, s6
 8014f9e:	9313      	str	r3, [sp, #76]	; 0x4c
 8014fa0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014fa2:	fb92 f3f3 	sdiv	r3, r2, r3
 8014fa6:	9314      	str	r3, [sp, #80]	; 0x50
 8014fa8:	9b02      	ldr	r3, [sp, #8]
 8014faa:	9a05      	ldr	r2, [sp, #20]
 8014fac:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014fb0:	3b01      	subs	r3, #1
 8014fb2:	9302      	str	r3, [sp, #8]
 8014fb4:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8014fb8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014fba:	eeb0 3a67 	vmov.f32	s6, s15
 8014fbe:	bf08      	it	eq
 8014fc0:	4613      	moveq	r3, r2
 8014fc2:	eef0 2a47 	vmov.f32	s5, s14
 8014fc6:	e72a      	b.n	8014e1e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8014fc8:	140f      	asrs	r7, r1, #16
 8014fca:	d454      	bmi.n	8015076 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8014fcc:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8014fd0:	42be      	cmp	r6, r7
 8014fd2:	dd50      	ble.n	8015076 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8014fd4:	ea5f 4822 	movs.w	r8, r2, asr #16
 8014fd8:	d44d      	bmi.n	8015076 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8014fda:	f8dc 400c 	ldr.w	r4, [ip, #12]
 8014fde:	4544      	cmp	r4, r8
 8014fe0:	dd49      	ble.n	8015076 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8014fe2:	9c04      	ldr	r4, [sp, #16]
 8014fe4:	b236      	sxth	r6, r6
 8014fe6:	fb08 4606 	mla	r6, r8, r6, r4
 8014fea:	f06f 0001 	mvn.w	r0, #1
 8014fee:	f816 8007 	ldrb.w	r8, [r6, r7]
 8014ff2:	9c01      	ldr	r4, [sp, #4]
 8014ff4:	fb00 fa0e 	mul.w	sl, r0, lr
 8014ff8:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8014ffc:	9800      	ldr	r0, [sp, #0]
 8014ffe:	eb04 0b08 	add.w	fp, r4, r8
 8015002:	f830 400a 	ldrh.w	r4, [r0, sl]
 8015006:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801500a:	9801      	ldr	r0, [sp, #4]
 801500c:	f89b b001 	ldrb.w	fp, [fp, #1]
 8015010:	f810 8008 	ldrb.w	r8, [r0, r8]
 8015014:	9800      	ldr	r0, [sp, #0]
 8015016:	1227      	asrs	r7, r4, #8
 8015018:	fb16 f609 	smulbb	r6, r6, r9
 801501c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8015020:	fb07 6705 	mla	r7, r7, r5, r6
 8015024:	10e6      	asrs	r6, r4, #3
 8015026:	00e4      	lsls	r4, r4, #3
 8015028:	b2e4      	uxtb	r4, r4
 801502a:	fb1b fb09 	smulbb	fp, fp, r9
 801502e:	fb14 f405 	smulbb	r4, r4, r5
 8015032:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8015036:	b2bf      	uxth	r7, r7
 8015038:	fb06 b605 	mla	r6, r6, r5, fp
 801503c:	fb08 4809 	mla	r8, r8, r9, r4
 8015040:	b2b6      	uxth	r6, r6
 8015042:	fa1f f888 	uxth.w	r8, r8
 8015046:	1c7c      	adds	r4, r7, #1
 8015048:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801504c:	f106 0b01 	add.w	fp, r6, #1
 8015050:	f108 0401 	add.w	r4, r8, #1
 8015054:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 8015058:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801505c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8015060:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8015064:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8015068:	4327      	orrs	r7, r4
 801506a:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801506e:	ea47 070b 	orr.w	r7, r7, fp
 8015072:	f820 700a 	strh.w	r7, [r0, sl]
 8015076:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8015078:	4401      	add	r1, r0
 801507a:	9814      	ldr	r0, [sp, #80]	; 0x50
 801507c:	f10e 3eff 	add.w	lr, lr, #4294967295
 8015080:	4402      	add	r2, r0
 8015082:	e759      	b.n	8014f38 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8015084:	b007      	add	sp, #28
 8015086:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801508c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801508c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015090:	b085      	sub	sp, #20
 8015092:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8015096:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8015098:	9203      	str	r2, [sp, #12]
 801509a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801509e:	6870      	ldr	r0, [r6, #4]
 80150a0:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80150a2:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 80150a6:	686f      	ldr	r7, [r5, #4]
 80150a8:	9101      	str	r1, [sp, #4]
 80150aa:	fb00 2404 	mla	r4, r0, r4, r2
 80150ae:	6832      	ldr	r2, [r6, #0]
 80150b0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80150b4:	682a      	ldr	r2, [r5, #0]
 80150b6:	9202      	str	r2, [sp, #8]
 80150b8:	3704      	adds	r7, #4
 80150ba:	9a01      	ldr	r2, [sp, #4]
 80150bc:	2a00      	cmp	r2, #0
 80150be:	dc03      	bgt.n	80150c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80150c0:	9a03      	ldr	r2, [sp, #12]
 80150c2:	2a00      	cmp	r2, #0
 80150c4:	f340 80cc 	ble.w	8015260 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80150c8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80150ca:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 80150ce:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 80150d2:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80150d6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80150d8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80150dc:	2b00      	cmp	r3, #0
 80150de:	dd0d      	ble.n	80150fc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80150e0:	1406      	asrs	r6, r0, #16
 80150e2:	d405      	bmi.n	80150f0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80150e4:	454e      	cmp	r6, r9
 80150e6:	da03      	bge.n	80150f0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80150e8:	1416      	asrs	r6, r2, #16
 80150ea:	d401      	bmi.n	80150f0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80150ec:	4546      	cmp	r6, r8
 80150ee:	db06      	blt.n	80150fe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80150f0:	9e12      	ldr	r6, [sp, #72]	; 0x48
 80150f2:	4460      	add	r0, ip
 80150f4:	4432      	add	r2, r6
 80150f6:	3b01      	subs	r3, #1
 80150f8:	3402      	adds	r4, #2
 80150fa:	e7ef      	b.n	80150dc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 80150fc:	d00f      	beq.n	801511e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80150fe:	1e5e      	subs	r6, r3, #1
 8015100:	fb0c 0e06 	mla	lr, ip, r6, r0
 8015104:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 8015108:	d543      	bpl.n	8015192 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801510a:	4698      	mov	r8, r3
 801510c:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 8015110:	f1b8 0f00 	cmp.w	r8, #0
 8015114:	dc71      	bgt.n	80151fa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8015116:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801511a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801511e:	9b01      	ldr	r3, [sp, #4]
 8015120:	2b00      	cmp	r3, #0
 8015122:	f340 809d 	ble.w	8015260 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8015126:	ee30 0a04 	vadd.f32	s0, s0, s8
 801512a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801512e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015132:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015134:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015138:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801513c:	eeb0 6a62 	vmov.f32	s12, s5
 8015140:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015144:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015148:	ee77 2a62 	vsub.f32	s5, s14, s5
 801514c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8015150:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015154:	eeb0 6a43 	vmov.f32	s12, s6
 8015158:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801515c:	ee12 2a90 	vmov	r2, s5
 8015160:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015164:	fb92 fcf3 	sdiv	ip, r2, r3
 8015168:	ee13 2a10 	vmov	r2, s6
 801516c:	fb92 f3f3 	sdiv	r3, r2, r3
 8015170:	9312      	str	r3, [sp, #72]	; 0x48
 8015172:	9b01      	ldr	r3, [sp, #4]
 8015174:	9a03      	ldr	r2, [sp, #12]
 8015176:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801517a:	3b01      	subs	r3, #1
 801517c:	9301      	str	r3, [sp, #4]
 801517e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8015182:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015184:	eeb0 3a67 	vmov.f32	s6, s15
 8015188:	bf08      	it	eq
 801518a:	4613      	moveq	r3, r2
 801518c:	eef0 2a47 	vmov.f32	s5, s14
 8015190:	e793      	b.n	80150ba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8015192:	45ce      	cmp	lr, r9
 8015194:	dab9      	bge.n	801510a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8015196:	9912      	ldr	r1, [sp, #72]	; 0x48
 8015198:	fb01 2606 	mla	r6, r1, r6, r2
 801519c:	1436      	asrs	r6, r6, #16
 801519e:	d4b4      	bmi.n	801510a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80151a0:	4546      	cmp	r6, r8
 80151a2:	dab2      	bge.n	801510a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80151a4:	4698      	mov	r8, r3
 80151a6:	46a2      	mov	sl, r4
 80151a8:	f1b8 0f00 	cmp.w	r8, #0
 80151ac:	ddb3      	ble.n	8015116 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80151ae:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 80151b2:	9902      	ldr	r1, [sp, #8]
 80151b4:	1416      	asrs	r6, r2, #16
 80151b6:	fb09 1606 	mla	r6, r9, r6, r1
 80151ba:	ea4f 4e20 	mov.w	lr, r0, asr #16
 80151be:	492a      	ldr	r1, [pc, #168]	; (8015268 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 80151c0:	f816 e00e 	ldrb.w	lr, [r6, lr]
 80151c4:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80151c8:	eb07 0b0e 	add.w	fp, r7, lr
 80151cc:	4460      	add	r0, ip
 80151ce:	f89b 6001 	ldrb.w	r6, [fp, #1]
 80151d2:	f89b 9002 	ldrb.w	r9, [fp, #2]
 80151d6:	00f6      	lsls	r6, r6, #3
 80151d8:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 80151dc:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80151e0:	ea49 0606 	orr.w	r6, r9, r6
 80151e4:	f817 900e 	ldrb.w	r9, [r7, lr]
 80151e8:	9912      	ldr	r1, [sp, #72]	; 0x48
 80151ea:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 80151ee:	f82a 6b02 	strh.w	r6, [sl], #2
 80151f2:	440a      	add	r2, r1
 80151f4:	f108 38ff 	add.w	r8, r8, #4294967295
 80151f8:	e7d6      	b.n	80151a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80151fa:	ea5f 4920 	movs.w	r9, r0, asr #16
 80151fe:	d429      	bmi.n	8015254 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8015200:	68ae      	ldr	r6, [r5, #8]
 8015202:	454e      	cmp	r6, r9
 8015204:	dd26      	ble.n	8015254 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8015206:	ea5f 4b22 	movs.w	fp, r2, asr #16
 801520a:	d423      	bmi.n	8015254 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801520c:	68e9      	ldr	r1, [r5, #12]
 801520e:	4559      	cmp	r1, fp
 8015210:	dd20      	ble.n	8015254 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8015212:	9902      	ldr	r1, [sp, #8]
 8015214:	fa0f fe86 	sxth.w	lr, r6
 8015218:	fb0b 1e0e 	mla	lr, fp, lr, r1
 801521c:	f06f 0101 	mvn.w	r1, #1
 8015220:	f81e e009 	ldrb.w	lr, [lr, r9]
 8015224:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8015228:	eb07 060e 	add.w	r6, r7, lr
 801522c:	fb01 f908 	mul.w	r9, r1, r8
 8015230:	f896 b002 	ldrb.w	fp, [r6, #2]
 8015234:	7876      	ldrb	r6, [r6, #1]
 8015236:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 801523a:	00f6      	lsls	r6, r6, #3
 801523c:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 8015240:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8015244:	ea4b 0606 	orr.w	r6, fp, r6
 8015248:	f817 b00e 	ldrb.w	fp, [r7, lr]
 801524c:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 8015250:	f82a 6009 	strh.w	r6, [sl, r9]
 8015254:	9912      	ldr	r1, [sp, #72]	; 0x48
 8015256:	4460      	add	r0, ip
 8015258:	440a      	add	r2, r1
 801525a:	f108 38ff 	add.w	r8, r8, #4294967295
 801525e:	e757      	b.n	8015110 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8015260:	b005      	add	sp, #20
 8015262:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015266:	bf00      	nop
 8015268:	fffff800 	.word	0xfffff800

0801526c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801526c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015270:	b087      	sub	sp, #28
 8015272:	468b      	mov	fp, r1
 8015274:	9815      	ldr	r0, [sp, #84]	; 0x54
 8015276:	9204      	str	r2, [sp, #16]
 8015278:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801527c:	9205      	str	r2, [sp, #20]
 801527e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8015282:	6841      	ldr	r1, [r0, #4]
 8015284:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8015288:	fb01 2404 	mla	r4, r1, r4, r2
 801528c:	6802      	ldr	r2, [r0, #0]
 801528e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015292:	f8dc 2000 	ldr.w	r2, [ip]
 8015296:	9201      	str	r2, [sp, #4]
 8015298:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801529c:	3204      	adds	r2, #4
 801529e:	9202      	str	r2, [sp, #8]
 80152a0:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80152a4:	f1bb 0f00 	cmp.w	fp, #0
 80152a8:	dc03      	bgt.n	80152b2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 80152aa:	9a04      	ldr	r2, [sp, #16]
 80152ac:	2a00      	cmp	r2, #0
 80152ae:	f340 8138 	ble.w	8015522 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 80152b2:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80152b4:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 80152b8:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 80152bc:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80152c0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80152c2:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80152c6:	2b00      	cmp	r3, #0
 80152c8:	dd0e      	ble.n	80152e8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80152ca:	1402      	asrs	r2, r0, #16
 80152cc:	d405      	bmi.n	80152da <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80152ce:	42ba      	cmp	r2, r7
 80152d0:	da03      	bge.n	80152da <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80152d2:	140a      	asrs	r2, r1, #16
 80152d4:	d401      	bmi.n	80152da <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80152d6:	42b2      	cmp	r2, r6
 80152d8:	db07      	blt.n	80152ea <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80152da:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80152dc:	4410      	add	r0, r2
 80152de:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80152e0:	3b01      	subs	r3, #1
 80152e2:	4411      	add	r1, r2
 80152e4:	3402      	adds	r4, #2
 80152e6:	e7ee      	b.n	80152c6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 80152e8:	d019      	beq.n	801531e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 80152ea:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80152ec:	1e5a      	subs	r2, r3, #1
 80152ee:	fb05 0502 	mla	r5, r5, r2, r0
 80152f2:	142d      	asrs	r5, r5, #16
 80152f4:	d409      	bmi.n	801530a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80152f6:	42bd      	cmp	r5, r7
 80152f8:	da07      	bge.n	801530a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80152fa:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80152fc:	fb05 1202 	mla	r2, r5, r2, r1
 8015300:	1412      	asrs	r2, r2, #16
 8015302:	d402      	bmi.n	801530a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015304:	42b2      	cmp	r2, r6
 8015306:	f2c0 80ac 	blt.w	8015462 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 801530a:	f04f 0e00 	mov.w	lr, #0
 801530e:	eb03 020e 	add.w	r2, r3, lr
 8015312:	2a00      	cmp	r2, #0
 8015314:	dc3e      	bgt.n	8015394 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8015316:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801531a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801531e:	f1bb 0f00 	cmp.w	fp, #0
 8015322:	f340 80fe 	ble.w	8015522 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8015326:	ee30 0a04 	vadd.f32	s0, s0, s8
 801532a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801532e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015332:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015334:	f1bb 0b01 	subs.w	fp, fp, #1
 8015338:	ee31 1a05 	vadd.f32	s2, s2, s10
 801533c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015340:	eeb0 6a62 	vmov.f32	s12, s5
 8015344:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015348:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801534c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015350:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8015354:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015358:	eeb0 6a43 	vmov.f32	s12, s6
 801535c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015360:	ee12 2a90 	vmov	r2, s5
 8015364:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015368:	fb92 f3f3 	sdiv	r3, r2, r3
 801536c:	ee13 2a10 	vmov	r2, s6
 8015370:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015374:	9313      	str	r3, [sp, #76]	; 0x4c
 8015376:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015378:	fb92 f3f3 	sdiv	r3, r2, r3
 801537c:	9a04      	ldr	r2, [sp, #16]
 801537e:	9314      	str	r3, [sp, #80]	; 0x50
 8015380:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8015384:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015386:	eeb0 3a67 	vmov.f32	s6, s15
 801538a:	bf08      	it	eq
 801538c:	4613      	moveq	r3, r2
 801538e:	eef0 2a47 	vmov.f32	s5, s14
 8015392:	e787      	b.n	80152a4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8015394:	1406      	asrs	r6, r0, #16
 8015396:	d45d      	bmi.n	8015454 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8015398:	f8dc 5008 	ldr.w	r5, [ip, #8]
 801539c:	42b5      	cmp	r5, r6
 801539e:	dd59      	ble.n	8015454 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80153a0:	140f      	asrs	r7, r1, #16
 80153a2:	d457      	bmi.n	8015454 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80153a4:	f8dc 200c 	ldr.w	r2, [ip, #12]
 80153a8:	42ba      	cmp	r2, r7
 80153aa:	dd53      	ble.n	8015454 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80153ac:	9a01      	ldr	r2, [sp, #4]
 80153ae:	b22d      	sxth	r5, r5
 80153b0:	fb07 2505 	mla	r5, r7, r5, r2
 80153b4:	5daa      	ldrb	r2, [r5, r6]
 80153b6:	9d02      	ldr	r5, [sp, #8]
 80153b8:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 80153bc:	0e2e      	lsrs	r6, r5, #24
 80153be:	d049      	beq.n	8015454 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80153c0:	f06f 0201 	mvn.w	r2, #1
 80153c4:	fb02 f20e 	mul.w	r2, r2, lr
 80153c8:	9203      	str	r2, [sp, #12]
 80153ca:	f834 8002 	ldrh.w	r8, [r4, r2]
 80153ce:	9a05      	ldr	r2, [sp, #20]
 80153d0:	4356      	muls	r6, r2
 80153d2:	1c72      	adds	r2, r6, #1
 80153d4:	eb02 2226 	add.w	r2, r2, r6, asr #8
 80153d8:	1212      	asrs	r2, r2, #8
 80153da:	fa1f f982 	uxth.w	r9, r2
 80153de:	ea4f 2728 	mov.w	r7, r8, asr #8
 80153e2:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80153e6:	43d2      	mvns	r2, r2
 80153e8:	b2d2      	uxtb	r2, r2
 80153ea:	fb16 f609 	smulbb	r6, r6, r9
 80153ee:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80153f2:	fb07 6702 	mla	r7, r7, r2, r6
 80153f6:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80153fa:	ea4f 06e8 	mov.w	r6, r8, asr #3
 80153fe:	b2ed      	uxtb	r5, r5
 8015400:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8015404:	fa5f f888 	uxtb.w	r8, r8
 8015408:	fb15 f509 	smulbb	r5, r5, r9
 801540c:	fb08 5502 	mla	r5, r8, r2, r5
 8015410:	b2bf      	uxth	r7, r7
 8015412:	fb1a fa09 	smulbb	sl, sl, r9
 8015416:	b2ad      	uxth	r5, r5
 8015418:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801541c:	fb06 a602 	mla	r6, r6, r2, sl
 8015420:	1c7a      	adds	r2, r7, #1
 8015422:	f105 0a01 	add.w	sl, r5, #1
 8015426:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801542a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801542e:	b2b6      	uxth	r6, r6
 8015430:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015434:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8015438:	ea4a 0707 	orr.w	r7, sl, r7
 801543c:	f106 0a01 	add.w	sl, r6, #1
 8015440:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8015444:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015448:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801544c:	9a03      	ldr	r2, [sp, #12]
 801544e:	ea47 070a 	orr.w	r7, r7, sl
 8015452:	52a7      	strh	r7, [r4, r2]
 8015454:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8015456:	4410      	add	r0, r2
 8015458:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801545a:	f10e 3eff 	add.w	lr, lr, #4294967295
 801545e:	4411      	add	r1, r2
 8015460:	e755      	b.n	801530e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8015462:	f04f 0800 	mov.w	r8, #0
 8015466:	eba3 0208 	sub.w	r2, r3, r8
 801546a:	2a00      	cmp	r2, #0
 801546c:	f77f af53 	ble.w	8015316 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8015470:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 8015474:	9f01      	ldr	r7, [sp, #4]
 8015476:	140a      	asrs	r2, r1, #16
 8015478:	1405      	asrs	r5, r0, #16
 801547a:	fb06 7202 	mla	r2, r6, r2, r7
 801547e:	5d52      	ldrb	r2, [r2, r5]
 8015480:	9d02      	ldr	r5, [sp, #8]
 8015482:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8015486:	0e2e      	lsrs	r6, r5, #24
 8015488:	d044      	beq.n	8015514 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801548a:	9a05      	ldr	r2, [sp, #20]
 801548c:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8015490:	4356      	muls	r6, r2
 8015492:	1c72      	adds	r2, r6, #1
 8015494:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8015498:	1212      	asrs	r2, r2, #8
 801549a:	fa1f f982 	uxth.w	r9, r2
 801549e:	ea4f 272e 	mov.w	r7, lr, asr #8
 80154a2:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80154a6:	43d2      	mvns	r2, r2
 80154a8:	b2d2      	uxtb	r2, r2
 80154aa:	fb16 f609 	smulbb	r6, r6, r9
 80154ae:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80154b2:	fb07 6702 	mla	r7, r7, r2, r6
 80154b6:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80154ba:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80154be:	b2ed      	uxtb	r5, r5
 80154c0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80154c4:	fa5f fe8e 	uxtb.w	lr, lr
 80154c8:	fb15 f509 	smulbb	r5, r5, r9
 80154cc:	fb0e 5502 	mla	r5, lr, r2, r5
 80154d0:	b2bf      	uxth	r7, r7
 80154d2:	fb1a fa09 	smulbb	sl, sl, r9
 80154d6:	b2ad      	uxth	r5, r5
 80154d8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80154dc:	fb06 a602 	mla	r6, r6, r2, sl
 80154e0:	1c7a      	adds	r2, r7, #1
 80154e2:	f105 0a01 	add.w	sl, r5, #1
 80154e6:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80154ea:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80154ee:	b2b6      	uxth	r6, r6
 80154f0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80154f4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80154f8:	ea4a 0707 	orr.w	r7, sl, r7
 80154fc:	f106 0a01 	add.w	sl, r6, #1
 8015500:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8015504:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015508:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801550c:	ea47 070a 	orr.w	r7, r7, sl
 8015510:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8015514:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8015516:	4410      	add	r0, r2
 8015518:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801551a:	f108 0801 	add.w	r8, r8, #1
 801551e:	4411      	add	r1, r2
 8015520:	e7a1      	b.n	8015466 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8015522:	b007      	add	sp, #28
 8015524:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015528 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015528:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801552c:	b085      	sub	sp, #20
 801552e:	468b      	mov	fp, r1
 8015530:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8015532:	9203      	str	r2, [sp, #12]
 8015534:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8015538:	6841      	ldr	r1, [r0, #4]
 801553a:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801553e:	fb01 2404 	mla	r4, r1, r4, r2
 8015542:	6802      	ldr	r2, [r0, #0]
 8015544:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015548:	f8de 2000 	ldr.w	r2, [lr]
 801554c:	9200      	str	r2, [sp, #0]
 801554e:	f8de 2004 	ldr.w	r2, [lr, #4]
 8015552:	3204      	adds	r2, #4
 8015554:	9201      	str	r2, [sp, #4]
 8015556:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801555a:	f1bb 0f00 	cmp.w	fp, #0
 801555e:	dc03      	bgt.n	8015568 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8015560:	9a03      	ldr	r2, [sp, #12]
 8015562:	2a00      	cmp	r2, #0
 8015564:	f340 8153 	ble.w	801580e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8015568:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801556a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801556e:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8015572:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8015576:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015578:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801557c:	2b00      	cmp	r3, #0
 801557e:	dd0e      	ble.n	801559e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8015580:	1408      	asrs	r0, r1, #16
 8015582:	d405      	bmi.n	8015590 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8015584:	42b8      	cmp	r0, r7
 8015586:	da03      	bge.n	8015590 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8015588:	1410      	asrs	r0, r2, #16
 801558a:	d401      	bmi.n	8015590 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801558c:	42b0      	cmp	r0, r6
 801558e:	db07      	blt.n	80155a0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8015590:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015592:	4401      	add	r1, r0
 8015594:	9812      	ldr	r0, [sp, #72]	; 0x48
 8015596:	3b01      	subs	r3, #1
 8015598:	4402      	add	r2, r0
 801559a:	3402      	adds	r4, #2
 801559c:	e7ee      	b.n	801557c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801559e:	d017      	beq.n	80155d0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80155a0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80155a2:	1e58      	subs	r0, r3, #1
 80155a4:	fb05 1500 	mla	r5, r5, r0, r1
 80155a8:	142d      	asrs	r5, r5, #16
 80155aa:	d409      	bmi.n	80155c0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80155ac:	42bd      	cmp	r5, r7
 80155ae:	da07      	bge.n	80155c0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80155b0:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80155b2:	fb05 2000 	mla	r0, r5, r0, r2
 80155b6:	1400      	asrs	r0, r0, #16
 80155b8:	d402      	bmi.n	80155c0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80155ba:	42b0      	cmp	r0, r6
 80155bc:	f2c0 80bc 	blt.w	8015738 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 80155c0:	2600      	movs	r6, #0
 80155c2:	1998      	adds	r0, r3, r6
 80155c4:	2800      	cmp	r0, #0
 80155c6:	dc3e      	bgt.n	8015646 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 80155c8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80155cc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80155d0:	f1bb 0f00 	cmp.w	fp, #0
 80155d4:	f340 811b 	ble.w	801580e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 80155d8:	ee30 0a04 	vadd.f32	s0, s0, s8
 80155dc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80155e0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80155e4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80155e6:	f1bb 0b01 	subs.w	fp, fp, #1
 80155ea:	ee31 1a05 	vadd.f32	s2, s2, s10
 80155ee:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80155f2:	eeb0 6a62 	vmov.f32	s12, s5
 80155f6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80155fa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80155fe:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015602:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8015606:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801560a:	eeb0 6a43 	vmov.f32	s12, s6
 801560e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015612:	ee12 2a90 	vmov	r2, s5
 8015616:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801561a:	fb92 f3f3 	sdiv	r3, r2, r3
 801561e:	ee13 2a10 	vmov	r2, s6
 8015622:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015626:	9311      	str	r3, [sp, #68]	; 0x44
 8015628:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801562a:	fb92 f3f3 	sdiv	r3, r2, r3
 801562e:	9a03      	ldr	r2, [sp, #12]
 8015630:	9312      	str	r3, [sp, #72]	; 0x48
 8015632:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8015636:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015638:	eeb0 3a67 	vmov.f32	s6, s15
 801563c:	bf08      	it	eq
 801563e:	4613      	moveq	r3, r2
 8015640:	eef0 2a47 	vmov.f32	s5, s14
 8015644:	e789      	b.n	801555a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8015646:	140f      	asrs	r7, r1, #16
 8015648:	d426      	bmi.n	8015698 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801564a:	f8de 5008 	ldr.w	r5, [lr, #8]
 801564e:	42bd      	cmp	r5, r7
 8015650:	dd22      	ble.n	8015698 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8015652:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8015656:	d41f      	bmi.n	8015698 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8015658:	f8de 000c 	ldr.w	r0, [lr, #12]
 801565c:	4560      	cmp	r0, ip
 801565e:	dd1b      	ble.n	8015698 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8015660:	9800      	ldr	r0, [sp, #0]
 8015662:	b22d      	sxth	r5, r5
 8015664:	fb0c 0505 	mla	r5, ip, r5, r0
 8015668:	5de8      	ldrb	r0, [r5, r7]
 801566a:	9d01      	ldr	r5, [sp, #4]
 801566c:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8015670:	0e07      	lsrs	r7, r0, #24
 8015672:	2fff      	cmp	r7, #255	; 0xff
 8015674:	d116      	bne.n	80156a4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8015676:	f06f 0501 	mvn.w	r5, #1
 801567a:	fb05 f706 	mul.w	r7, r5, r6
 801567e:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 8015682:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8015686:	0945      	lsrs	r5, r0, #5
 8015688:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801568c:	ea4c 0505 	orr.w	r5, ip, r5
 8015690:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8015694:	4305      	orrs	r5, r0
 8015696:	53e5      	strh	r5, [r4, r7]
 8015698:	9811      	ldr	r0, [sp, #68]	; 0x44
 801569a:	4401      	add	r1, r0
 801569c:	9812      	ldr	r0, [sp, #72]	; 0x48
 801569e:	3e01      	subs	r6, #1
 80156a0:	4402      	add	r2, r0
 80156a2:	e78e      	b.n	80155c2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80156a4:	b2fd      	uxtb	r5, r7
 80156a6:	2f00      	cmp	r7, #0
 80156a8:	d0f6      	beq.n	8015698 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80156aa:	f06f 0701 	mvn.w	r7, #1
 80156ae:	4377      	muls	r7, r6
 80156b0:	fa1f f985 	uxth.w	r9, r5
 80156b4:	f834 8007 	ldrh.w	r8, [r4, r7]
 80156b8:	9702      	str	r7, [sp, #8]
 80156ba:	ea4f 2c28 	mov.w	ip, r8, asr #8
 80156be:	f3c0 4707 	ubfx	r7, r0, #16, #8
 80156c2:	43ed      	mvns	r5, r5
 80156c4:	b2ed      	uxtb	r5, r5
 80156c6:	fb17 f709 	smulbb	r7, r7, r9
 80156ca:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80156ce:	fb0c 7c05 	mla	ip, ip, r5, r7
 80156d2:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 80156d6:	ea4f 07e8 	mov.w	r7, r8, asr #3
 80156da:	b2c0      	uxtb	r0, r0
 80156dc:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80156e0:	fa5f f888 	uxtb.w	r8, r8
 80156e4:	fb10 f009 	smulbb	r0, r0, r9
 80156e8:	fb08 0005 	mla	r0, r8, r5, r0
 80156ec:	b280      	uxth	r0, r0
 80156ee:	fa1f fc8c 	uxth.w	ip, ip
 80156f2:	fb1a fa09 	smulbb	sl, sl, r9
 80156f6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80156fa:	fb07 a705 	mla	r7, r7, r5, sl
 80156fe:	f100 0a01 	add.w	sl, r0, #1
 8015702:	f10c 0501 	add.w	r5, ip, #1
 8015706:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801570a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801570e:	b2bf      	uxth	r7, r7
 8015710:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015714:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8015718:	ea4a 0c0c 	orr.w	ip, sl, ip
 801571c:	f107 0a01 	add.w	sl, r7, #1
 8015720:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8015724:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015728:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801572c:	9802      	ldr	r0, [sp, #8]
 801572e:	ea4c 0c0a 	orr.w	ip, ip, sl
 8015732:	f824 c000 	strh.w	ip, [r4, r0]
 8015736:	e7af      	b.n	8015698 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8015738:	f04f 0800 	mov.w	r8, #0
 801573c:	eba3 0008 	sub.w	r0, r3, r8
 8015740:	2800      	cmp	r0, #0
 8015742:	f77f af41 	ble.w	80155c8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8015746:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801574a:	9f00      	ldr	r7, [sp, #0]
 801574c:	1410      	asrs	r0, r2, #16
 801574e:	140d      	asrs	r5, r1, #16
 8015750:	fb06 7000 	mla	r0, r6, r0, r7
 8015754:	5d40      	ldrb	r0, [r0, r5]
 8015756:	9d01      	ldr	r5, [sp, #4]
 8015758:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801575c:	0e2e      	lsrs	r6, r5, #24
 801575e:	2eff      	cmp	r6, #255	; 0xff
 8015760:	d112      	bne.n	8015788 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 8015762:	482c      	ldr	r0, [pc, #176]	; (8015814 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8015764:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8015768:	0968      	lsrs	r0, r5, #5
 801576a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801576e:	4330      	orrs	r0, r6
 8015770:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8015774:	4328      	orrs	r0, r5
 8015776:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 801577a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801577c:	4401      	add	r1, r0
 801577e:	9812      	ldr	r0, [sp, #72]	; 0x48
 8015780:	f108 0801 	add.w	r8, r8, #1
 8015784:	4402      	add	r2, r0
 8015786:	e7d9      	b.n	801573c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8015788:	b2f0      	uxtb	r0, r6
 801578a:	2e00      	cmp	r6, #0
 801578c:	d0f5      	beq.n	801577a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801578e:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 8015792:	fa1f f980 	uxth.w	r9, r0
 8015796:	ea4f 272c 	mov.w	r7, ip, asr #8
 801579a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801579e:	43c0      	mvns	r0, r0
 80157a0:	b2c0      	uxtb	r0, r0
 80157a2:	fb16 f609 	smulbb	r6, r6, r9
 80157a6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80157aa:	fb07 6700 	mla	r7, r7, r0, r6
 80157ae:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80157b2:	ea4f 06ec 	mov.w	r6, ip, asr #3
 80157b6:	b2ed      	uxtb	r5, r5
 80157b8:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80157bc:	fa5f fc8c 	uxtb.w	ip, ip
 80157c0:	fb15 f509 	smulbb	r5, r5, r9
 80157c4:	fb0c 5500 	mla	r5, ip, r0, r5
 80157c8:	b2bf      	uxth	r7, r7
 80157ca:	fb1a fa09 	smulbb	sl, sl, r9
 80157ce:	b2ad      	uxth	r5, r5
 80157d0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80157d4:	fb06 a600 	mla	r6, r6, r0, sl
 80157d8:	1c78      	adds	r0, r7, #1
 80157da:	f105 0a01 	add.w	sl, r5, #1
 80157de:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 80157e2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80157e6:	b2b6      	uxth	r6, r6
 80157e8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80157ec:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80157f0:	ea4a 0707 	orr.w	r7, sl, r7
 80157f4:	f106 0a01 	add.w	sl, r6, #1
 80157f8:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80157fc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015800:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015804:	ea47 070a 	orr.w	r7, r7, sl
 8015808:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801580c:	e7b5      	b.n	801577a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801580e:	b005      	add	sp, #20
 8015810:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015814:	fffff800 	.word	0xfffff800

08015818 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015818:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801581c:	b087      	sub	sp, #28
 801581e:	468b      	mov	fp, r1
 8015820:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8015822:	9204      	str	r2, [sp, #16]
 8015824:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8015828:	9205      	str	r2, [sp, #20]
 801582a:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801582e:	6861      	ldr	r1, [r4, #4]
 8015830:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8015834:	fb01 2000 	mla	r0, r1, r0, r2
 8015838:	6822      	ldr	r2, [r4, #0]
 801583a:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801583e:	f8de 2000 	ldr.w	r2, [lr]
 8015842:	9201      	str	r2, [sp, #4]
 8015844:	f8de 2004 	ldr.w	r2, [lr, #4]
 8015848:	9202      	str	r2, [sp, #8]
 801584a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801584e:	f1bb 0f00 	cmp.w	fp, #0
 8015852:	dc03      	bgt.n	801585c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8015854:	9a04      	ldr	r2, [sp, #16]
 8015856:	2a00      	cmp	r2, #0
 8015858:	f340 8142 	ble.w	8015ae0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801585c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801585e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8015862:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8015866:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801586a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801586c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8015870:	2b00      	cmp	r3, #0
 8015872:	dd0e      	ble.n	8015892 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8015874:	140c      	asrs	r4, r1, #16
 8015876:	d405      	bmi.n	8015884 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8015878:	42bc      	cmp	r4, r7
 801587a:	da03      	bge.n	8015884 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801587c:	1414      	asrs	r4, r2, #16
 801587e:	d401      	bmi.n	8015884 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8015880:	42b4      	cmp	r4, r6
 8015882:	db07      	blt.n	8015894 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8015884:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8015886:	4421      	add	r1, r4
 8015888:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801588a:	3b01      	subs	r3, #1
 801588c:	4422      	add	r2, r4
 801588e:	3002      	adds	r0, #2
 8015890:	e7ee      	b.n	8015870 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8015892:	d019      	beq.n	80158c8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8015894:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8015896:	1e5c      	subs	r4, r3, #1
 8015898:	fb05 1504 	mla	r5, r5, r4, r1
 801589c:	142d      	asrs	r5, r5, #16
 801589e:	d409      	bmi.n	80158b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80158a0:	42bd      	cmp	r5, r7
 80158a2:	da07      	bge.n	80158b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80158a4:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80158a6:	fb05 2404 	mla	r4, r5, r4, r2
 80158aa:	1424      	asrs	r4, r4, #16
 80158ac:	d402      	bmi.n	80158b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80158ae:	42b4      	cmp	r4, r6
 80158b0:	f2c0 80b1 	blt.w	8015a16 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 80158b4:	f04f 0800 	mov.w	r8, #0
 80158b8:	eb03 0408 	add.w	r4, r3, r8
 80158bc:	2c00      	cmp	r4, #0
 80158be:	dc3e      	bgt.n	801593e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 80158c0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80158c4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80158c8:	f1bb 0f00 	cmp.w	fp, #0
 80158cc:	f340 8108 	ble.w	8015ae0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 80158d0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80158d4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80158d8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80158dc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80158de:	f1bb 0b01 	subs.w	fp, fp, #1
 80158e2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80158e6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80158ea:	eeb0 6a62 	vmov.f32	s12, s5
 80158ee:	ee61 7a27 	vmul.f32	s15, s2, s15
 80158f2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80158f6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80158fa:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80158fe:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015902:	eeb0 6a43 	vmov.f32	s12, s6
 8015906:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801590a:	ee12 2a90 	vmov	r2, s5
 801590e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015912:	fb92 f3f3 	sdiv	r3, r2, r3
 8015916:	ee13 2a10 	vmov	r2, s6
 801591a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801591e:	9313      	str	r3, [sp, #76]	; 0x4c
 8015920:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015922:	fb92 f3f3 	sdiv	r3, r2, r3
 8015926:	9a04      	ldr	r2, [sp, #16]
 8015928:	9314      	str	r3, [sp, #80]	; 0x50
 801592a:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801592e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015930:	eeb0 3a67 	vmov.f32	s6, s15
 8015934:	bf08      	it	eq
 8015936:	4613      	moveq	r3, r2
 8015938:	eef0 2a47 	vmov.f32	s5, s14
 801593c:	e787      	b.n	801584e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 801593e:	140e      	asrs	r6, r1, #16
 8015940:	d462      	bmi.n	8015a08 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8015942:	f8de 5008 	ldr.w	r5, [lr, #8]
 8015946:	42b5      	cmp	r5, r6
 8015948:	dd5e      	ble.n	8015a08 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801594a:	1417      	asrs	r7, r2, #16
 801594c:	d45c      	bmi.n	8015a08 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801594e:	f8de 400c 	ldr.w	r4, [lr, #12]
 8015952:	42bc      	cmp	r4, r7
 8015954:	dd58      	ble.n	8015a08 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8015956:	b22d      	sxth	r5, r5
 8015958:	fb07 6505 	mla	r5, r7, r5, r6
 801595c:	9c02      	ldr	r4, [sp, #8]
 801595e:	5d66      	ldrb	r6, [r4, r5]
 8015960:	2e00      	cmp	r6, #0
 8015962:	d051      	beq.n	8015a08 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8015964:	9c01      	ldr	r4, [sp, #4]
 8015966:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 801596a:	f06f 0401 	mvn.w	r4, #1
 801596e:	fb04 f408 	mul.w	r4, r4, r8
 8015972:	9403      	str	r4, [sp, #12]
 8015974:	5b05      	ldrh	r5, [r0, r4]
 8015976:	9c05      	ldr	r4, [sp, #20]
 8015978:	4366      	muls	r6, r4
 801597a:	1c74      	adds	r4, r6, #1
 801597c:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8015980:	1224      	asrs	r4, r4, #8
 8015982:	b2a7      	uxth	r7, r4
 8015984:	122e      	asrs	r6, r5, #8
 8015986:	43e4      	mvns	r4, r4
 8015988:	b2e4      	uxtb	r4, r4
 801598a:	ea4f 2c29 	mov.w	ip, r9, asr #8
 801598e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8015992:	fb16 f604 	smulbb	r6, r6, r4
 8015996:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801599a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801599e:	00ed      	lsls	r5, r5, #3
 80159a0:	fb0c 6c07 	mla	ip, ip, r7, r6
 80159a4:	b2ed      	uxtb	r5, r5
 80159a6:	ea4f 06e9 	mov.w	r6, r9, asr #3
 80159aa:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 80159ae:	fb15 f504 	smulbb	r5, r5, r4
 80159b2:	fa5f f989 	uxtb.w	r9, r9
 80159b6:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80159ba:	fb09 5507 	mla	r5, r9, r7, r5
 80159be:	fb1a fa04 	smulbb	sl, sl, r4
 80159c2:	fa1f fc8c 	uxth.w	ip, ip
 80159c6:	b2ad      	uxth	r5, r5
 80159c8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80159cc:	fb06 a607 	mla	r6, r6, r7, sl
 80159d0:	f10c 0401 	add.w	r4, ip, #1
 80159d4:	f105 0a01 	add.w	sl, r5, #1
 80159d8:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 80159dc:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80159e0:	b2b6      	uxth	r6, r6
 80159e2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80159e6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80159ea:	ea4a 0c0c 	orr.w	ip, sl, ip
 80159ee:	f106 0a01 	add.w	sl, r6, #1
 80159f2:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80159f6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80159fa:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80159fe:	9c03      	ldr	r4, [sp, #12]
 8015a00:	ea4c 0c0a 	orr.w	ip, ip, sl
 8015a04:	f820 c004 	strh.w	ip, [r0, r4]
 8015a08:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8015a0a:	4421      	add	r1, r4
 8015a0c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8015a0e:	f108 38ff 	add.w	r8, r8, #4294967295
 8015a12:	4422      	add	r2, r4
 8015a14:	e750      	b.n	80158b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8015a16:	f04f 0900 	mov.w	r9, #0
 8015a1a:	eba3 0409 	sub.w	r4, r3, r9
 8015a1e:	2c00      	cmp	r4, #0
 8015a20:	f77f af4e 	ble.w	80158c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8015a24:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8015a28:	140d      	asrs	r5, r1, #16
 8015a2a:	1414      	asrs	r4, r2, #16
 8015a2c:	fb06 5404 	mla	r4, r6, r4, r5
 8015a30:	9d02      	ldr	r5, [sp, #8]
 8015a32:	5d2e      	ldrb	r6, [r5, r4]
 8015a34:	2e00      	cmp	r6, #0
 8015a36:	d04c      	beq.n	8015ad2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 8015a38:	9d01      	ldr	r5, [sp, #4]
 8015a3a:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 8015a3e:	9c05      	ldr	r4, [sp, #20]
 8015a40:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8015a44:	4366      	muls	r6, r4
 8015a46:	1c74      	adds	r4, r6, #1
 8015a48:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8015a4c:	1224      	asrs	r4, r4, #8
 8015a4e:	b2a7      	uxth	r7, r4
 8015a50:	122e      	asrs	r6, r5, #8
 8015a52:	43e4      	mvns	r4, r4
 8015a54:	b2e4      	uxtb	r4, r4
 8015a56:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8015a5a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8015a5e:	fb16 f604 	smulbb	r6, r6, r4
 8015a62:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8015a66:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8015a6a:	00ed      	lsls	r5, r5, #3
 8015a6c:	fb0c 6c07 	mla	ip, ip, r7, r6
 8015a70:	b2ed      	uxtb	r5, r5
 8015a72:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8015a76:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8015a7a:	fb15 f504 	smulbb	r5, r5, r4
 8015a7e:	fa5f f888 	uxtb.w	r8, r8
 8015a82:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8015a86:	fb08 5507 	mla	r5, r8, r7, r5
 8015a8a:	fb1a fa04 	smulbb	sl, sl, r4
 8015a8e:	fa1f fc8c 	uxth.w	ip, ip
 8015a92:	b2ad      	uxth	r5, r5
 8015a94:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8015a98:	fb06 a607 	mla	r6, r6, r7, sl
 8015a9c:	f10c 0401 	add.w	r4, ip, #1
 8015aa0:	f105 0a01 	add.w	sl, r5, #1
 8015aa4:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8015aa8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015aac:	b2b6      	uxth	r6, r6
 8015aae:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015ab2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8015ab6:	ea4a 0c0c 	orr.w	ip, sl, ip
 8015aba:	f106 0a01 	add.w	sl, r6, #1
 8015abe:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8015ac2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015ac6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015aca:	ea4c 0c0a 	orr.w	ip, ip, sl
 8015ace:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8015ad2:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8015ad4:	4421      	add	r1, r4
 8015ad6:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8015ad8:	f109 0901 	add.w	r9, r9, #1
 8015adc:	4422      	add	r2, r4
 8015ade:	e79c      	b.n	8015a1a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8015ae0:	b007      	add	sp, #28
 8015ae2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015ae6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015ae6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015aea:	b085      	sub	sp, #20
 8015aec:	468b      	mov	fp, r1
 8015aee:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8015af0:	9203      	str	r2, [sp, #12]
 8015af2:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 8015af6:	6861      	ldr	r1, [r4, #4]
 8015af8:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8015afc:	fb01 2000 	mla	r0, r1, r0, r2
 8015b00:	6822      	ldr	r2, [r4, #0]
 8015b02:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8015b06:	f8d8 2000 	ldr.w	r2, [r8]
 8015b0a:	9200      	str	r2, [sp, #0]
 8015b0c:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8015b10:	9201      	str	r2, [sp, #4]
 8015b12:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8015b16:	f1bb 0f00 	cmp.w	fp, #0
 8015b1a:	dc03      	bgt.n	8015b24 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8015b1c:	9a03      	ldr	r2, [sp, #12]
 8015b1e:	2a00      	cmp	r2, #0
 8015b20:	f340 8146 	ble.w	8015db0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8015b24:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8015b26:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8015b2a:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8015b2e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8015b32:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015b34:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8015b38:	2b00      	cmp	r3, #0
 8015b3a:	dd0e      	ble.n	8015b5a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8015b3c:	140c      	asrs	r4, r1, #16
 8015b3e:	d405      	bmi.n	8015b4c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015b40:	42bc      	cmp	r4, r7
 8015b42:	da03      	bge.n	8015b4c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015b44:	1414      	asrs	r4, r2, #16
 8015b46:	d401      	bmi.n	8015b4c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015b48:	42b4      	cmp	r4, r6
 8015b4a:	db07      	blt.n	8015b5c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8015b4c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8015b4e:	4421      	add	r1, r4
 8015b50:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8015b52:	3b01      	subs	r3, #1
 8015b54:	4422      	add	r2, r4
 8015b56:	3002      	adds	r0, #2
 8015b58:	e7ee      	b.n	8015b38 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8015b5a:	d017      	beq.n	8015b8c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8015b5c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8015b5e:	1e5c      	subs	r4, r3, #1
 8015b60:	fb05 1504 	mla	r5, r5, r4, r1
 8015b64:	142d      	asrs	r5, r5, #16
 8015b66:	d409      	bmi.n	8015b7c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8015b68:	42bd      	cmp	r5, r7
 8015b6a:	da07      	bge.n	8015b7c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8015b6c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8015b6e:	fb05 2404 	mla	r4, r5, r4, r2
 8015b72:	1424      	asrs	r4, r4, #16
 8015b74:	d402      	bmi.n	8015b7c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8015b76:	42b4      	cmp	r4, r6
 8015b78:	f2c0 80b3 	blt.w	8015ce2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8015b7c:	2600      	movs	r6, #0
 8015b7e:	199c      	adds	r4, r3, r6
 8015b80:	2c00      	cmp	r4, #0
 8015b82:	dc3e      	bgt.n	8015c02 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8015b84:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015b88:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8015b8c:	f1bb 0f00 	cmp.w	fp, #0
 8015b90:	f340 810e 	ble.w	8015db0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8015b94:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015b98:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015b9c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015ba0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015ba2:	f1bb 0b01 	subs.w	fp, fp, #1
 8015ba6:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015baa:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015bae:	eeb0 6a62 	vmov.f32	s12, s5
 8015bb2:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015bb6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015bba:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015bbe:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8015bc2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015bc6:	eeb0 6a43 	vmov.f32	s12, s6
 8015bca:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015bce:	ee12 2a90 	vmov	r2, s5
 8015bd2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015bd6:	fb92 f3f3 	sdiv	r3, r2, r3
 8015bda:	ee13 2a10 	vmov	r2, s6
 8015bde:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015be2:	9311      	str	r3, [sp, #68]	; 0x44
 8015be4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015be6:	fb92 f3f3 	sdiv	r3, r2, r3
 8015bea:	9a03      	ldr	r2, [sp, #12]
 8015bec:	9312      	str	r3, [sp, #72]	; 0x48
 8015bee:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8015bf2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015bf4:	eeb0 3a67 	vmov.f32	s6, s15
 8015bf8:	bf08      	it	eq
 8015bfa:	4613      	moveq	r3, r2
 8015bfc:	eef0 2a47 	vmov.f32	s5, s14
 8015c00:	e789      	b.n	8015b16 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8015c02:	140f      	asrs	r7, r1, #16
 8015c04:	d418      	bmi.n	8015c38 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8015c06:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8015c0a:	42bd      	cmp	r5, r7
 8015c0c:	dd14      	ble.n	8015c38 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8015c0e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8015c12:	d411      	bmi.n	8015c38 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8015c14:	f8d8 400c 	ldr.w	r4, [r8, #12]
 8015c18:	4564      	cmp	r4, ip
 8015c1a:	dd0d      	ble.n	8015c38 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8015c1c:	b22d      	sxth	r5, r5
 8015c1e:	fb0c 7505 	mla	r5, ip, r5, r7
 8015c22:	9c01      	ldr	r4, [sp, #4]
 8015c24:	5d64      	ldrb	r4, [r4, r5]
 8015c26:	2cff      	cmp	r4, #255	; 0xff
 8015c28:	d10c      	bne.n	8015c44 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8015c2a:	9c00      	ldr	r4, [sp, #0]
 8015c2c:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 8015c30:	f06f 0401 	mvn.w	r4, #1
 8015c34:	4374      	muls	r4, r6
 8015c36:	5305      	strh	r5, [r0, r4]
 8015c38:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8015c3a:	4421      	add	r1, r4
 8015c3c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8015c3e:	3e01      	subs	r6, #1
 8015c40:	4422      	add	r2, r4
 8015c42:	e79c      	b.n	8015b7e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8015c44:	2c00      	cmp	r4, #0
 8015c46:	d0f7      	beq.n	8015c38 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8015c48:	9f00      	ldr	r7, [sp, #0]
 8015c4a:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 8015c4e:	f06f 0501 	mvn.w	r5, #1
 8015c52:	4375      	muls	r5, r6
 8015c54:	9502      	str	r5, [sp, #8]
 8015c56:	5b45      	ldrh	r5, [r0, r5]
 8015c58:	fa1f fc84 	uxth.w	ip, r4
 8015c5c:	122f      	asrs	r7, r5, #8
 8015c5e:	43e4      	mvns	r4, r4
 8015c60:	b2e4      	uxtb	r4, r4
 8015c62:	ea4f 2e29 	mov.w	lr, r9, asr #8
 8015c66:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8015c6a:	fb17 f704 	smulbb	r7, r7, r4
 8015c6e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8015c72:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8015c76:	00ed      	lsls	r5, r5, #3
 8015c78:	fb0e 7e0c 	mla	lr, lr, ip, r7
 8015c7c:	b2ed      	uxtb	r5, r5
 8015c7e:	ea4f 07e9 	mov.w	r7, r9, asr #3
 8015c82:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8015c86:	fb15 f504 	smulbb	r5, r5, r4
 8015c8a:	fa5f f989 	uxtb.w	r9, r9
 8015c8e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8015c92:	fb09 550c 	mla	r5, r9, ip, r5
 8015c96:	fb1a fa04 	smulbb	sl, sl, r4
 8015c9a:	fa1f fe8e 	uxth.w	lr, lr
 8015c9e:	b2ad      	uxth	r5, r5
 8015ca0:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8015ca4:	fb07 a70c 	mla	r7, r7, ip, sl
 8015ca8:	f10e 0401 	add.w	r4, lr, #1
 8015cac:	f105 0a01 	add.w	sl, r5, #1
 8015cb0:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 8015cb4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015cb8:	b2bf      	uxth	r7, r7
 8015cba:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015cbe:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8015cc2:	ea4a 0e0e 	orr.w	lr, sl, lr
 8015cc6:	f107 0a01 	add.w	sl, r7, #1
 8015cca:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8015cce:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015cd2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015cd6:	9c02      	ldr	r4, [sp, #8]
 8015cd8:	ea4e 0e0a 	orr.w	lr, lr, sl
 8015cdc:	f820 e004 	strh.w	lr, [r0, r4]
 8015ce0:	e7aa      	b.n	8015c38 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8015ce2:	f04f 0900 	mov.w	r9, #0
 8015ce6:	eba3 0409 	sub.w	r4, r3, r9
 8015cea:	2c00      	cmp	r4, #0
 8015cec:	f77f af4a 	ble.w	8015b84 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015cf0:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8015cf4:	1414      	asrs	r4, r2, #16
 8015cf6:	140d      	asrs	r5, r1, #16
 8015cf8:	fb06 5504 	mla	r5, r6, r4, r5
 8015cfc:	9c01      	ldr	r4, [sp, #4]
 8015cfe:	5d64      	ldrb	r4, [r4, r5]
 8015d00:	2cff      	cmp	r4, #255	; 0xff
 8015d02:	d10b      	bne.n	8015d1c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8015d04:	9c00      	ldr	r4, [sp, #0]
 8015d06:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 8015d0a:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 8015d0e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8015d10:	4421      	add	r1, r4
 8015d12:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8015d14:	f109 0901 	add.w	r9, r9, #1
 8015d18:	4422      	add	r2, r4
 8015d1a:	e7e4      	b.n	8015ce6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8015d1c:	2c00      	cmp	r4, #0
 8015d1e:	d0f6      	beq.n	8015d0e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8015d20:	9e00      	ldr	r6, [sp, #0]
 8015d22:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 8015d26:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8015d2a:	b2a7      	uxth	r7, r4
 8015d2c:	122e      	asrs	r6, r5, #8
 8015d2e:	43e4      	mvns	r4, r4
 8015d30:	b2e4      	uxtb	r4, r4
 8015d32:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8015d36:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8015d3a:	fb16 f604 	smulbb	r6, r6, r4
 8015d3e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8015d42:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8015d46:	00ed      	lsls	r5, r5, #3
 8015d48:	fb0c 6c07 	mla	ip, ip, r7, r6
 8015d4c:	b2ed      	uxtb	r5, r5
 8015d4e:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8015d52:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8015d56:	fb15 f504 	smulbb	r5, r5, r4
 8015d5a:	fa5f fe8e 	uxtb.w	lr, lr
 8015d5e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8015d62:	fb0e 5507 	mla	r5, lr, r7, r5
 8015d66:	fb1a fa04 	smulbb	sl, sl, r4
 8015d6a:	fa1f fc8c 	uxth.w	ip, ip
 8015d6e:	b2ad      	uxth	r5, r5
 8015d70:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8015d74:	fb06 a607 	mla	r6, r6, r7, sl
 8015d78:	f10c 0401 	add.w	r4, ip, #1
 8015d7c:	f105 0a01 	add.w	sl, r5, #1
 8015d80:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8015d84:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015d88:	b2b6      	uxth	r6, r6
 8015d8a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015d8e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8015d92:	ea4a 0c0c 	orr.w	ip, sl, ip
 8015d96:	f106 0a01 	add.w	sl, r6, #1
 8015d9a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8015d9e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015da2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015da6:	ea4c 0c0a 	orr.w	ip, ip, sl
 8015daa:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8015dae:	e7ae      	b.n	8015d0e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8015db0:	b005      	add	sp, #20
 8015db2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015db6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015db6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015dba:	b085      	sub	sp, #20
 8015dbc:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8015dbe:	9203      	str	r2, [sp, #12]
 8015dc0:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 8015dc4:	9201      	str	r2, [sp, #4]
 8015dc6:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8015dca:	9100      	str	r1, [sp, #0]
 8015dcc:	6841      	ldr	r1, [r0, #4]
 8015dce:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 8015dd2:	fb01 2404 	mla	r4, r1, r4, r2
 8015dd6:	6802      	ldr	r2, [r0, #0]
 8015dd8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015ddc:	f8de 2000 	ldr.w	r2, [lr]
 8015de0:	9202      	str	r2, [sp, #8]
 8015de2:	9a01      	ldr	r2, [sp, #4]
 8015de4:	43d6      	mvns	r6, r2
 8015de6:	b2f6      	uxtb	r6, r6
 8015de8:	9a00      	ldr	r2, [sp, #0]
 8015dea:	2a00      	cmp	r2, #0
 8015dec:	dc03      	bgt.n	8015df6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8015dee:	9a03      	ldr	r2, [sp, #12]
 8015df0:	2a00      	cmp	r2, #0
 8015df2:	f340 8124 	ble.w	801603e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8015df6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8015df8:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8015dfc:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8015e00:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8015e04:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015e06:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8015e0a:	2b00      	cmp	r3, #0
 8015e0c:	dd0e      	ble.n	8015e2c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8015e0e:	1408      	asrs	r0, r1, #16
 8015e10:	d405      	bmi.n	8015e1e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8015e12:	4560      	cmp	r0, ip
 8015e14:	da03      	bge.n	8015e1e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8015e16:	1410      	asrs	r0, r2, #16
 8015e18:	d401      	bmi.n	8015e1e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8015e1a:	42b8      	cmp	r0, r7
 8015e1c:	db07      	blt.n	8015e2e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8015e1e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015e20:	4401      	add	r1, r0
 8015e22:	9812      	ldr	r0, [sp, #72]	; 0x48
 8015e24:	3b01      	subs	r3, #1
 8015e26:	4402      	add	r2, r0
 8015e28:	3402      	adds	r4, #2
 8015e2a:	e7ee      	b.n	8015e0a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8015e2c:	d06e      	beq.n	8015f0c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8015e2e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8015e30:	1e58      	subs	r0, r3, #1
 8015e32:	fb05 1500 	mla	r5, r5, r0, r1
 8015e36:	142d      	asrs	r5, r5, #16
 8015e38:	d45c      	bmi.n	8015ef4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8015e3a:	4565      	cmp	r5, ip
 8015e3c:	da5a      	bge.n	8015ef4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8015e3e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8015e40:	fb05 2000 	mla	r0, r5, r0, r2
 8015e44:	1400      	asrs	r0, r0, #16
 8015e46:	d455      	bmi.n	8015ef4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8015e48:	42b8      	cmp	r0, r7
 8015e4a:	da53      	bge.n	8015ef4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8015e4c:	f8bd b004 	ldrh.w	fp, [sp, #4]
 8015e50:	4699      	mov	r9, r3
 8015e52:	46a2      	mov	sl, r4
 8015e54:	f1b9 0f00 	cmp.w	r9, #0
 8015e58:	dd54      	ble.n	8015f04 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8015e5a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8015e5e:	140d      	asrs	r5, r1, #16
 8015e60:	1410      	asrs	r0, r2, #16
 8015e62:	fb07 5000 	mla	r0, r7, r0, r5
 8015e66:	9d02      	ldr	r5, [sp, #8]
 8015e68:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8015e6c:	f8ba 5000 	ldrh.w	r5, [sl]
 8015e70:	122f      	asrs	r7, r5, #8
 8015e72:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8015e76:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8015e7a:	fb17 f706 	smulbb	r7, r7, r6
 8015e7e:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8015e82:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8015e86:	00ed      	lsls	r5, r5, #3
 8015e88:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8015e8c:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8015e90:	10c7      	asrs	r7, r0, #3
 8015e92:	b2ed      	uxtb	r5, r5
 8015e94:	00c0      	lsls	r0, r0, #3
 8015e96:	fb18 f806 	smulbb	r8, r8, r6
 8015e9a:	fb15 f506 	smulbb	r5, r5, r6
 8015e9e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8015ea2:	b2c0      	uxtb	r0, r0
 8015ea4:	fa1f fc8c 	uxth.w	ip, ip
 8015ea8:	fb07 870b 	mla	r7, r7, fp, r8
 8015eac:	fb00 500b 	mla	r0, r0, fp, r5
 8015eb0:	b280      	uxth	r0, r0
 8015eb2:	b2bf      	uxth	r7, r7
 8015eb4:	f10c 0501 	add.w	r5, ip, #1
 8015eb8:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8015ebc:	f107 0801 	add.w	r8, r7, #1
 8015ec0:	1c45      	adds	r5, r0, #1
 8015ec2:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8015ec6:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8015eca:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015ecc:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8015ed0:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8015ed4:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8015ed8:	ea45 0c0c 	orr.w	ip, r5, ip
 8015edc:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8015ee0:	4401      	add	r1, r0
 8015ee2:	9812      	ldr	r0, [sp, #72]	; 0x48
 8015ee4:	ea4c 0c08 	orr.w	ip, ip, r8
 8015ee8:	f82a cb02 	strh.w	ip, [sl], #2
 8015eec:	4402      	add	r2, r0
 8015eee:	f109 39ff 	add.w	r9, r9, #4294967295
 8015ef2:	e7af      	b.n	8015e54 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015ef4:	f8bd a004 	ldrh.w	sl, [sp, #4]
 8015ef8:	f04f 0800 	mov.w	r8, #0
 8015efc:	eb03 0008 	add.w	r0, r3, r8
 8015f00:	2800      	cmp	r0, #0
 8015f02:	dc41      	bgt.n	8015f88 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8015f04:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015f08:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015f0c:	9b00      	ldr	r3, [sp, #0]
 8015f0e:	2b00      	cmp	r3, #0
 8015f10:	f340 8095 	ble.w	801603e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8015f14:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015f18:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8015f1c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8015f20:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015f22:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015f26:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015f2a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015f2e:	eef0 6a62 	vmov.f32	s13, s5
 8015f32:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015f36:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015f3a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015f3e:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 8015f42:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015f46:	eef0 6a43 	vmov.f32	s13, s6
 8015f4a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015f4e:	ee12 2a90 	vmov	r2, s5
 8015f52:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015f56:	fb92 f3f3 	sdiv	r3, r2, r3
 8015f5a:	ee13 2a10 	vmov	r2, s6
 8015f5e:	9311      	str	r3, [sp, #68]	; 0x44
 8015f60:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015f62:	fb92 f3f3 	sdiv	r3, r2, r3
 8015f66:	9312      	str	r3, [sp, #72]	; 0x48
 8015f68:	9b00      	ldr	r3, [sp, #0]
 8015f6a:	9a03      	ldr	r2, [sp, #12]
 8015f6c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015f70:	3b01      	subs	r3, #1
 8015f72:	9300      	str	r3, [sp, #0]
 8015f74:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 8015f78:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015f7a:	eeb0 3a67 	vmov.f32	s6, s15
 8015f7e:	bf08      	it	eq
 8015f80:	4613      	moveq	r3, r2
 8015f82:	eef0 2a47 	vmov.f32	s5, s14
 8015f86:	e72f      	b.n	8015de8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8015f88:	140f      	asrs	r7, r1, #16
 8015f8a:	d451      	bmi.n	8016030 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8015f8c:	f8de 5008 	ldr.w	r5, [lr, #8]
 8015f90:	42bd      	cmp	r5, r7
 8015f92:	dd4d      	ble.n	8016030 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8015f94:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8015f98:	d44a      	bmi.n	8016030 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8015f9a:	f8de 000c 	ldr.w	r0, [lr, #12]
 8015f9e:	4560      	cmp	r0, ip
 8015fa0:	dd46      	ble.n	8016030 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8015fa2:	b22d      	sxth	r5, r5
 8015fa4:	fb0c 7505 	mla	r5, ip, r5, r7
 8015fa8:	9802      	ldr	r0, [sp, #8]
 8015faa:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 8015fae:	f06f 0501 	mvn.w	r5, #1
 8015fb2:	fb05 fb08 	mul.w	fp, r5, r8
 8015fb6:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8015fba:	f834 500b 	ldrh.w	r5, [r4, fp]
 8015fbe:	122f      	asrs	r7, r5, #8
 8015fc0:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8015fc4:	fb17 f706 	smulbb	r7, r7, r6
 8015fc8:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8015fcc:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8015fd0:	00ed      	lsls	r5, r5, #3
 8015fd2:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8015fd6:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8015fda:	10c7      	asrs	r7, r0, #3
 8015fdc:	b2ed      	uxtb	r5, r5
 8015fde:	00c0      	lsls	r0, r0, #3
 8015fe0:	fb19 f906 	smulbb	r9, r9, r6
 8015fe4:	fb15 f506 	smulbb	r5, r5, r6
 8015fe8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8015fec:	b2c0      	uxtb	r0, r0
 8015fee:	fa1f fc8c 	uxth.w	ip, ip
 8015ff2:	fb07 970a 	mla	r7, r7, sl, r9
 8015ff6:	fb00 500a 	mla	r0, r0, sl, r5
 8015ffa:	b2bf      	uxth	r7, r7
 8015ffc:	b280      	uxth	r0, r0
 8015ffe:	f10c 0501 	add.w	r5, ip, #1
 8016002:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8016006:	f107 0901 	add.w	r9, r7, #1
 801600a:	1c45      	adds	r5, r0, #1
 801600c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8016010:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8016014:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8016018:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801601c:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8016020:	ea45 0c0c 	orr.w	ip, r5, ip
 8016024:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8016028:	ea4c 0c09 	orr.w	ip, ip, r9
 801602c:	f824 c00b 	strh.w	ip, [r4, fp]
 8016030:	9811      	ldr	r0, [sp, #68]	; 0x44
 8016032:	4401      	add	r1, r0
 8016034:	9812      	ldr	r0, [sp, #72]	; 0x48
 8016036:	f108 38ff 	add.w	r8, r8, #4294967295
 801603a:	4402      	add	r2, r0
 801603c:	e75e      	b.n	8015efc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 801603e:	b005      	add	sp, #20
 8016040:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016044 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016044:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016048:	b085      	sub	sp, #20
 801604a:	4693      	mov	fp, r2
 801604c:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801604e:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8016050:	6870      	ldr	r0, [r6, #4]
 8016052:	9101      	str	r1, [sp, #4]
 8016054:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8016058:	fb00 2404 	mla	r4, r0, r4, r2
 801605c:	6832      	ldr	r2, [r6, #0]
 801605e:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8016062:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8016066:	682a      	ldr	r2, [r5, #0]
 8016068:	9202      	str	r2, [sp, #8]
 801606a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801606e:	9a01      	ldr	r2, [sp, #4]
 8016070:	2a00      	cmp	r2, #0
 8016072:	dc03      	bgt.n	801607c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8016074:	f1bb 0f00 	cmp.w	fp, #0
 8016078:	f340 809a 	ble.w	80161b0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801607c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801607e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8016082:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8016086:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801608a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801608c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8016090:	2b00      	cmp	r3, #0
 8016092:	dd0c      	ble.n	80160ae <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8016094:	1406      	asrs	r6, r0, #16
 8016096:	d405      	bmi.n	80160a4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8016098:	454e      	cmp	r6, r9
 801609a:	da03      	bge.n	80160a4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801609c:	1416      	asrs	r6, r2, #16
 801609e:	d401      	bmi.n	80160a4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80160a0:	4546      	cmp	r6, r8
 80160a2:	db05      	blt.n	80160b0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80160a4:	4470      	add	r0, lr
 80160a6:	4462      	add	r2, ip
 80160a8:	3b01      	subs	r3, #1
 80160aa:	3402      	adds	r4, #2
 80160ac:	e7f0      	b.n	8016090 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 80160ae:	d00f      	beq.n	80160d0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80160b0:	1e5e      	subs	r6, r3, #1
 80160b2:	fb0e 0706 	mla	r7, lr, r6, r0
 80160b6:	143f      	asrs	r7, r7, #16
 80160b8:	d541      	bpl.n	801613e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 80160ba:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 80160be:	4698      	mov	r8, r3
 80160c0:	9603      	str	r6, [sp, #12]
 80160c2:	f1b8 0f00 	cmp.w	r8, #0
 80160c6:	dc56      	bgt.n	8016176 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 80160c8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80160cc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80160d0:	9b01      	ldr	r3, [sp, #4]
 80160d2:	2b00      	cmp	r3, #0
 80160d4:	dd6c      	ble.n	80161b0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 80160d6:	ee30 0a04 	vadd.f32	s0, s0, s8
 80160da:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80160de:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80160e2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80160e4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80160e8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80160ec:	eeb0 6a62 	vmov.f32	s12, s5
 80160f0:	ee61 7a27 	vmul.f32	s15, s2, s15
 80160f4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80160f8:	ee77 2a62 	vsub.f32	s5, s14, s5
 80160fc:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8016100:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016104:	eeb0 6a43 	vmov.f32	s12, s6
 8016108:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801610c:	ee12 2a90 	vmov	r2, s5
 8016110:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016114:	fb92 fef3 	sdiv	lr, r2, r3
 8016118:	ee13 2a10 	vmov	r2, s6
 801611c:	fb92 fcf3 	sdiv	ip, r2, r3
 8016120:	9b01      	ldr	r3, [sp, #4]
 8016122:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016126:	3b01      	subs	r3, #1
 8016128:	9301      	str	r3, [sp, #4]
 801612a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801612e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016130:	eeb0 3a67 	vmov.f32	s6, s15
 8016134:	bf08      	it	eq
 8016136:	465b      	moveq	r3, fp
 8016138:	eef0 2a47 	vmov.f32	s5, s14
 801613c:	e797      	b.n	801606e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801613e:	454f      	cmp	r7, r9
 8016140:	dabb      	bge.n	80160ba <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8016142:	fb0c 2606 	mla	r6, ip, r6, r2
 8016146:	1436      	asrs	r6, r6, #16
 8016148:	d4b7      	bmi.n	80160ba <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801614a:	4546      	cmp	r6, r8
 801614c:	dab5      	bge.n	80160ba <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801614e:	461e      	mov	r6, r3
 8016150:	46a0      	mov	r8, r4
 8016152:	2e00      	cmp	r6, #0
 8016154:	ddb8      	ble.n	80160c8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8016156:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801615a:	9902      	ldr	r1, [sp, #8]
 801615c:	1417      	asrs	r7, r2, #16
 801615e:	ea4f 4920 	mov.w	r9, r0, asr #16
 8016162:	fb0a 9707 	mla	r7, sl, r7, r9
 8016166:	4470      	add	r0, lr
 8016168:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801616c:	f828 7b02 	strh.w	r7, [r8], #2
 8016170:	4462      	add	r2, ip
 8016172:	3e01      	subs	r6, #1
 8016174:	e7ed      	b.n	8016152 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 8016176:	ea5f 4920 	movs.w	r9, r0, asr #16
 801617a:	d414      	bmi.n	80161a6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801617c:	68ae      	ldr	r6, [r5, #8]
 801617e:	454e      	cmp	r6, r9
 8016180:	dd11      	ble.n	80161a6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8016182:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8016186:	d40e      	bmi.n	80161a6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8016188:	68ef      	ldr	r7, [r5, #12]
 801618a:	4557      	cmp	r7, sl
 801618c:	dd0b      	ble.n	80161a6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801618e:	b236      	sxth	r6, r6
 8016190:	fb0a 9606 	mla	r6, sl, r6, r9
 8016194:	9f02      	ldr	r7, [sp, #8]
 8016196:	f06f 0101 	mvn.w	r1, #1
 801619a:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801619e:	fb01 f608 	mul.w	r6, r1, r8
 80161a2:	9903      	ldr	r1, [sp, #12]
 80161a4:	538f      	strh	r7, [r1, r6]
 80161a6:	4470      	add	r0, lr
 80161a8:	4462      	add	r2, ip
 80161aa:	f108 38ff 	add.w	r8, r8, #4294967295
 80161ae:	e788      	b.n	80160c2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80161b0:	b005      	add	sp, #20
 80161b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080161b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80161b6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80161ba:	b087      	sub	sp, #28
 80161bc:	468b      	mov	fp, r1
 80161be:	9815      	ldr	r0, [sp, #84]	; 0x54
 80161c0:	9203      	str	r2, [sp, #12]
 80161c2:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80161c6:	9204      	str	r2, [sp, #16]
 80161c8:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 80161cc:	6841      	ldr	r1, [r0, #4]
 80161ce:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 80161d2:	fb01 2505 	mla	r5, r1, r5, r2
 80161d6:	6802      	ldr	r2, [r0, #0]
 80161d8:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 80161dc:	f8d9 2000 	ldr.w	r2, [r9]
 80161e0:	9201      	str	r2, [sp, #4]
 80161e2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80161e6:	f1bb 0f00 	cmp.w	fp, #0
 80161ea:	dc03      	bgt.n	80161f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80161ec:	9a03      	ldr	r2, [sp, #12]
 80161ee:	2a00      	cmp	r2, #0
 80161f0:	f340 8159 	ble.w	80164a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 80161f4:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80161f6:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 80161fa:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 80161fe:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8016202:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8016204:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8016208:	2b00      	cmp	r3, #0
 801620a:	dd0e      	ble.n	801622a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801620c:	1402      	asrs	r2, r0, #16
 801620e:	d405      	bmi.n	801621c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8016210:	42ba      	cmp	r2, r7
 8016212:	da03      	bge.n	801621c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8016214:	140a      	asrs	r2, r1, #16
 8016216:	d401      	bmi.n	801621c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8016218:	42b2      	cmp	r2, r6
 801621a:	db07      	blt.n	801622c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801621c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801621e:	4410      	add	r0, r2
 8016220:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016222:	3b01      	subs	r3, #1
 8016224:	4411      	add	r1, r2
 8016226:	3502      	adds	r5, #2
 8016228:	e7ee      	b.n	8016208 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801622a:	d017      	beq.n	801625c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801622c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801622e:	1e5a      	subs	r2, r3, #1
 8016230:	fb04 0402 	mla	r4, r4, r2, r0
 8016234:	1424      	asrs	r4, r4, #16
 8016236:	d409      	bmi.n	801624c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8016238:	42bc      	cmp	r4, r7
 801623a:	da07      	bge.n	801624c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801623c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801623e:	fb04 1202 	mla	r2, r4, r2, r1
 8016242:	1412      	asrs	r2, r2, #16
 8016244:	d402      	bmi.n	801624c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8016246:	42b2      	cmp	r2, r6
 8016248:	f2c0 80bf 	blt.w	80163ca <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801624c:	2700      	movs	r7, #0
 801624e:	19da      	adds	r2, r3, r7
 8016250:	2a00      	cmp	r2, #0
 8016252:	dc3e      	bgt.n	80162d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8016254:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016258:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801625c:	f1bb 0f00 	cmp.w	fp, #0
 8016260:	f340 8121 	ble.w	80164a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8016264:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016268:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801626c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8016270:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016272:	f1bb 0b01 	subs.w	fp, fp, #1
 8016276:	ee31 1a05 	vadd.f32	s2, s2, s10
 801627a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801627e:	eeb0 6a62 	vmov.f32	s12, s5
 8016282:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016286:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801628a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801628e:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8016292:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016296:	eeb0 6a43 	vmov.f32	s12, s6
 801629a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801629e:	ee12 2a90 	vmov	r2, s5
 80162a2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80162a6:	fb92 f3f3 	sdiv	r3, r2, r3
 80162aa:	ee13 2a10 	vmov	r2, s6
 80162ae:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80162b2:	9313      	str	r3, [sp, #76]	; 0x4c
 80162b4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80162b6:	fb92 f3f3 	sdiv	r3, r2, r3
 80162ba:	9a03      	ldr	r2, [sp, #12]
 80162bc:	9314      	str	r3, [sp, #80]	; 0x50
 80162be:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80162c2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80162c4:	eeb0 3a67 	vmov.f32	s6, s15
 80162c8:	bf08      	it	eq
 80162ca:	4613      	moveq	r3, r2
 80162cc:	eef0 2a47 	vmov.f32	s5, s14
 80162d0:	e789      	b.n	80161e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 80162d2:	1406      	asrs	r6, r0, #16
 80162d4:	d42d      	bmi.n	8016332 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80162d6:	f8d9 4008 	ldr.w	r4, [r9, #8]
 80162da:	42b4      	cmp	r4, r6
 80162dc:	dd29      	ble.n	8016332 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80162de:	ea5f 4c21 	movs.w	ip, r1, asr #16
 80162e2:	d426      	bmi.n	8016332 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80162e4:	f8d9 200c 	ldr.w	r2, [r9, #12]
 80162e8:	4562      	cmp	r2, ip
 80162ea:	dd22      	ble.n	8016332 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80162ec:	b224      	sxth	r4, r4
 80162ee:	9a01      	ldr	r2, [sp, #4]
 80162f0:	fb0c 6404 	mla	r4, ip, r4, r6
 80162f4:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 80162f8:	0e22      	lsrs	r2, r4, #24
 80162fa:	d01a      	beq.n	8016332 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80162fc:	9e04      	ldr	r6, [sp, #16]
 80162fe:	4372      	muls	r2, r6
 8016300:	1c56      	adds	r6, r2, #1
 8016302:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8016306:	1212      	asrs	r2, r2, #8
 8016308:	0a26      	lsrs	r6, r4, #8
 801630a:	2aff      	cmp	r2, #255	; 0xff
 801630c:	9605      	str	r6, [sp, #20]
 801630e:	d116      	bne.n	801633e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8016310:	f06f 0201 	mvn.w	r2, #1
 8016314:	fb02 fc07 	mul.w	ip, r2, r7
 8016318:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801631c:	0962      	lsrs	r2, r4, #5
 801631e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016322:	f026 0607 	bic.w	r6, r6, #7
 8016326:	4316      	orrs	r6, r2
 8016328:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801632c:	4326      	orrs	r6, r4
 801632e:	f825 600c 	strh.w	r6, [r5, ip]
 8016332:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8016334:	4410      	add	r0, r2
 8016336:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016338:	3f01      	subs	r7, #1
 801633a:	4411      	add	r1, r2
 801633c:	e787      	b.n	801624e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801633e:	f06f 0601 	mvn.w	r6, #1
 8016342:	437e      	muls	r6, r7
 8016344:	fa1f fa82 	uxth.w	sl, r2
 8016348:	f835 8006 	ldrh.w	r8, [r5, r6]
 801634c:	9602      	str	r6, [sp, #8]
 801634e:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8016352:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 8016356:	43d2      	mvns	r2, r2
 8016358:	b2d2      	uxtb	r2, r2
 801635a:	fb1c fc0a 	smulbb	ip, ip, sl
 801635e:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8016362:	fb0e ce02 	mla	lr, lr, r2, ip
 8016366:	b2e4      	uxtb	r4, r4
 8016368:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801636c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8016370:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8016374:	fa5f f888 	uxtb.w	r8, r8
 8016378:	fb14 f40a 	smulbb	r4, r4, sl
 801637c:	fb08 4402 	mla	r4, r8, r2, r4
 8016380:	fa1f fe8e 	uxth.w	lr, lr
 8016384:	fb16 f60a 	smulbb	r6, r6, sl
 8016388:	b2a4      	uxth	r4, r4
 801638a:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801638e:	fb0c 6c02 	mla	ip, ip, r2, r6
 8016392:	f10e 0201 	add.w	r2, lr, #1
 8016396:	1c66      	adds	r6, r4, #1
 8016398:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801639c:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 80163a0:	fa1f fc8c 	uxth.w	ip, ip
 80163a4:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80163a8:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 80163ac:	ea46 0e0e 	orr.w	lr, r6, lr
 80163b0:	f10c 0601 	add.w	r6, ip, #1
 80163b4:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 80163b8:	0976      	lsrs	r6, r6, #5
 80163ba:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80163be:	9a02      	ldr	r2, [sp, #8]
 80163c0:	ea4e 0e06 	orr.w	lr, lr, r6
 80163c4:	f825 e002 	strh.w	lr, [r5, r2]
 80163c8:	e7b3      	b.n	8016332 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80163ca:	f04f 0800 	mov.w	r8, #0
 80163ce:	eba3 0208 	sub.w	r2, r3, r8
 80163d2:	2a00      	cmp	r2, #0
 80163d4:	f77f af3e 	ble.w	8016254 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80163d8:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 80163dc:	1404      	asrs	r4, r0, #16
 80163de:	140a      	asrs	r2, r1, #16
 80163e0:	fb06 4202 	mla	r2, r6, r2, r4
 80163e4:	9c01      	ldr	r4, [sp, #4]
 80163e6:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 80163ea:	0e22      	lsrs	r2, r4, #24
 80163ec:	d016      	beq.n	801641c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 80163ee:	9e04      	ldr	r6, [sp, #16]
 80163f0:	4372      	muls	r2, r6
 80163f2:	1c56      	adds	r6, r2, #1
 80163f4:	eb06 2222 	add.w	r2, r6, r2, asr #8
 80163f8:	1212      	asrs	r2, r2, #8
 80163fa:	2aff      	cmp	r2, #255	; 0xff
 80163fc:	ea4f 2614 	mov.w	r6, r4, lsr #8
 8016400:	d113      	bne.n	801642a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 8016402:	0962      	lsrs	r2, r4, #5
 8016404:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8016408:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801640c:	f026 0607 	bic.w	r6, r6, #7
 8016410:	4316      	orrs	r6, r2
 8016412:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8016416:	4326      	orrs	r6, r4
 8016418:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 801641c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801641e:	4410      	add	r0, r2
 8016420:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016422:	f108 0801 	add.w	r8, r8, #1
 8016426:	4411      	add	r1, r2
 8016428:	e7d1      	b.n	80163ce <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 801642a:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 801642e:	fa1f fa82 	uxth.w	sl, r2
 8016432:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8016436:	f3c4 4707 	ubfx	r7, r4, #16, #8
 801643a:	43d2      	mvns	r2, r2
 801643c:	b2d2      	uxtb	r2, r2
 801643e:	fb17 f70a 	smulbb	r7, r7, sl
 8016442:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8016446:	fb0c 7c02 	mla	ip, ip, r2, r7
 801644a:	b2e4      	uxtb	r4, r4
 801644c:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8016450:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8016454:	fa5f fe8e 	uxtb.w	lr, lr
 8016458:	fb14 f40a 	smulbb	r4, r4, sl
 801645c:	fb0e 4402 	mla	r4, lr, r2, r4
 8016460:	b2f6      	uxtb	r6, r6
 8016462:	fa1f fc8c 	uxth.w	ip, ip
 8016466:	fb16 f60a 	smulbb	r6, r6, sl
 801646a:	b2a4      	uxth	r4, r4
 801646c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8016470:	fb07 6702 	mla	r7, r7, r2, r6
 8016474:	f10c 0201 	add.w	r2, ip, #1
 8016478:	1c66      	adds	r6, r4, #1
 801647a:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801647e:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8016482:	b2bf      	uxth	r7, r7
 8016484:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8016488:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801648c:	ea46 0c0c 	orr.w	ip, r6, ip
 8016490:	1c7e      	adds	r6, r7, #1
 8016492:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8016496:	0976      	lsrs	r6, r6, #5
 8016498:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801649c:	ea4c 0c06 	orr.w	ip, ip, r6
 80164a0:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 80164a4:	e7ba      	b.n	801641c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 80164a6:	b007      	add	sp, #28
 80164a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080164ac <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80164ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80164b0:	b085      	sub	sp, #20
 80164b2:	468b      	mov	fp, r1
 80164b4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80164b6:	9203      	str	r2, [sp, #12]
 80164b8:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80164bc:	6841      	ldr	r1, [r0, #4]
 80164be:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 80164c2:	fb01 2404 	mla	r4, r1, r4, r2
 80164c6:	6802      	ldr	r2, [r0, #0]
 80164c8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80164cc:	f8d8 2000 	ldr.w	r2, [r8]
 80164d0:	9201      	str	r2, [sp, #4]
 80164d2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80164d6:	f1bb 0f00 	cmp.w	fp, #0
 80164da:	dc03      	bgt.n	80164e4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80164dc:	9a03      	ldr	r2, [sp, #12]
 80164de:	2a00      	cmp	r2, #0
 80164e0:	f340 814f 	ble.w	8016782 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 80164e4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80164e6:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 80164ea:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 80164ee:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80164f2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80164f4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80164f8:	2b00      	cmp	r3, #0
 80164fa:	dd0e      	ble.n	801651a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80164fc:	1408      	asrs	r0, r1, #16
 80164fe:	d405      	bmi.n	801650c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8016500:	42b8      	cmp	r0, r7
 8016502:	da03      	bge.n	801650c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8016504:	1410      	asrs	r0, r2, #16
 8016506:	d401      	bmi.n	801650c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8016508:	42b0      	cmp	r0, r6
 801650a:	db07      	blt.n	801651c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801650c:	9811      	ldr	r0, [sp, #68]	; 0x44
 801650e:	4401      	add	r1, r0
 8016510:	9812      	ldr	r0, [sp, #72]	; 0x48
 8016512:	3b01      	subs	r3, #1
 8016514:	4402      	add	r2, r0
 8016516:	3402      	adds	r4, #2
 8016518:	e7ee      	b.n	80164f8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801651a:	d017      	beq.n	801654c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801651c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801651e:	1e58      	subs	r0, r3, #1
 8016520:	fb05 1500 	mla	r5, r5, r0, r1
 8016524:	142d      	asrs	r5, r5, #16
 8016526:	d409      	bmi.n	801653c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8016528:	42bd      	cmp	r5, r7
 801652a:	da07      	bge.n	801653c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801652c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801652e:	fb05 2000 	mla	r0, r5, r0, r2
 8016532:	1400      	asrs	r0, r0, #16
 8016534:	d402      	bmi.n	801653c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8016536:	42b0      	cmp	r0, r6
 8016538:	f2c0 80ba 	blt.w	80166b0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801653c:	2600      	movs	r6, #0
 801653e:	1998      	adds	r0, r3, r6
 8016540:	2800      	cmp	r0, #0
 8016542:	dc3e      	bgt.n	80165c2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8016544:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016548:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801654c:	f1bb 0f00 	cmp.w	fp, #0
 8016550:	f340 8117 	ble.w	8016782 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8016554:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016558:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801655c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8016560:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016562:	f1bb 0b01 	subs.w	fp, fp, #1
 8016566:	ee31 1a05 	vadd.f32	s2, s2, s10
 801656a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801656e:	eeb0 6a62 	vmov.f32	s12, s5
 8016572:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016576:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801657a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801657e:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8016582:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016586:	eeb0 6a43 	vmov.f32	s12, s6
 801658a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801658e:	ee12 2a90 	vmov	r2, s5
 8016592:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016596:	fb92 f3f3 	sdiv	r3, r2, r3
 801659a:	ee13 2a10 	vmov	r2, s6
 801659e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80165a2:	9311      	str	r3, [sp, #68]	; 0x44
 80165a4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80165a6:	fb92 f3f3 	sdiv	r3, r2, r3
 80165aa:	9a03      	ldr	r2, [sp, #12]
 80165ac:	9312      	str	r3, [sp, #72]	; 0x48
 80165ae:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80165b2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80165b4:	eeb0 3a67 	vmov.f32	s6, s15
 80165b8:	bf08      	it	eq
 80165ba:	4613      	moveq	r3, r2
 80165bc:	eef0 2a47 	vmov.f32	s5, s14
 80165c0:	e789      	b.n	80164d6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 80165c2:	140f      	asrs	r7, r1, #16
 80165c4:	d424      	bmi.n	8016610 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80165c6:	f8d8 5008 	ldr.w	r5, [r8, #8]
 80165ca:	42bd      	cmp	r5, r7
 80165cc:	dd20      	ble.n	8016610 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80165ce:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80165d2:	d41d      	bmi.n	8016610 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80165d4:	f8d8 000c 	ldr.w	r0, [r8, #12]
 80165d8:	4560      	cmp	r0, ip
 80165da:	dd19      	ble.n	8016610 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80165dc:	b22d      	sxth	r5, r5
 80165de:	fb0c 7505 	mla	r5, ip, r5, r7
 80165e2:	9801      	ldr	r0, [sp, #4]
 80165e4:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 80165e8:	0e07      	lsrs	r7, r0, #24
 80165ea:	2fff      	cmp	r7, #255	; 0xff
 80165ec:	d116      	bne.n	801661c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80165ee:	f06f 0501 	mvn.w	r5, #1
 80165f2:	fb05 f706 	mul.w	r7, r5, r6
 80165f6:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 80165fa:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 80165fe:	0945      	lsrs	r5, r0, #5
 8016600:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8016604:	ea4c 0505 	orr.w	r5, ip, r5
 8016608:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801660c:	4305      	orrs	r5, r0
 801660e:	53e5      	strh	r5, [r4, r7]
 8016610:	9811      	ldr	r0, [sp, #68]	; 0x44
 8016612:	4401      	add	r1, r0
 8016614:	9812      	ldr	r0, [sp, #72]	; 0x48
 8016616:	3e01      	subs	r6, #1
 8016618:	4402      	add	r2, r0
 801661a:	e790      	b.n	801653e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801661c:	b2fd      	uxtb	r5, r7
 801661e:	2f00      	cmp	r7, #0
 8016620:	d0f6      	beq.n	8016610 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8016622:	f06f 0701 	mvn.w	r7, #1
 8016626:	4377      	muls	r7, r6
 8016628:	fa1f f985 	uxth.w	r9, r5
 801662c:	f834 e007 	ldrh.w	lr, [r4, r7]
 8016630:	9702      	str	r7, [sp, #8]
 8016632:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8016636:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801663a:	43ed      	mvns	r5, r5
 801663c:	b2ed      	uxtb	r5, r5
 801663e:	fb17 f709 	smulbb	r7, r7, r9
 8016642:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8016646:	fb0c 7c05 	mla	ip, ip, r5, r7
 801664a:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801664e:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8016652:	b2c0      	uxtb	r0, r0
 8016654:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8016658:	fa5f fe8e 	uxtb.w	lr, lr
 801665c:	fb10 f009 	smulbb	r0, r0, r9
 8016660:	fb0e 0005 	mla	r0, lr, r5, r0
 8016664:	b280      	uxth	r0, r0
 8016666:	fa1f fc8c 	uxth.w	ip, ip
 801666a:	fb1a fa09 	smulbb	sl, sl, r9
 801666e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8016672:	fb07 a705 	mla	r7, r7, r5, sl
 8016676:	f100 0a01 	add.w	sl, r0, #1
 801667a:	f10c 0501 	add.w	r5, ip, #1
 801667e:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8016682:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8016686:	b2bf      	uxth	r7, r7
 8016688:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801668c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8016690:	ea4a 0c0c 	orr.w	ip, sl, ip
 8016694:	f107 0a01 	add.w	sl, r7, #1
 8016698:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801669c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80166a0:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80166a4:	9802      	ldr	r0, [sp, #8]
 80166a6:	ea4c 0c0a 	orr.w	ip, ip, sl
 80166aa:	f824 c000 	strh.w	ip, [r4, r0]
 80166ae:	e7af      	b.n	8016610 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80166b0:	f04f 0e00 	mov.w	lr, #0
 80166b4:	eba3 000e 	sub.w	r0, r3, lr
 80166b8:	2800      	cmp	r0, #0
 80166ba:	f77f af43 	ble.w	8016544 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80166be:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 80166c2:	140d      	asrs	r5, r1, #16
 80166c4:	1410      	asrs	r0, r2, #16
 80166c6:	fb06 5000 	mla	r0, r6, r0, r5
 80166ca:	9d01      	ldr	r5, [sp, #4]
 80166cc:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 80166d0:	0e2e      	lsrs	r6, r5, #24
 80166d2:	2eff      	cmp	r6, #255	; 0xff
 80166d4:	d112      	bne.n	80166fc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 80166d6:	482c      	ldr	r0, [pc, #176]	; (8016788 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 80166d8:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 80166dc:	0968      	lsrs	r0, r5, #5
 80166de:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80166e2:	4330      	orrs	r0, r6
 80166e4:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80166e8:	4328      	orrs	r0, r5
 80166ea:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 80166ee:	9811      	ldr	r0, [sp, #68]	; 0x44
 80166f0:	4401      	add	r1, r0
 80166f2:	9812      	ldr	r0, [sp, #72]	; 0x48
 80166f4:	f10e 0e01 	add.w	lr, lr, #1
 80166f8:	4402      	add	r2, r0
 80166fa:	e7db      	b.n	80166b4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 80166fc:	b2f0      	uxtb	r0, r6
 80166fe:	2e00      	cmp	r6, #0
 8016700:	d0f5      	beq.n	80166ee <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8016702:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8016706:	fa1f f980 	uxth.w	r9, r0
 801670a:	ea4f 272c 	mov.w	r7, ip, asr #8
 801670e:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8016712:	43c0      	mvns	r0, r0
 8016714:	b2c0      	uxtb	r0, r0
 8016716:	fb16 f609 	smulbb	r6, r6, r9
 801671a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801671e:	fb07 6700 	mla	r7, r7, r0, r6
 8016722:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8016726:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801672a:	b2ed      	uxtb	r5, r5
 801672c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8016730:	fa5f fc8c 	uxtb.w	ip, ip
 8016734:	fb15 f509 	smulbb	r5, r5, r9
 8016738:	fb0c 5500 	mla	r5, ip, r0, r5
 801673c:	b2bf      	uxth	r7, r7
 801673e:	fb1a fa09 	smulbb	sl, sl, r9
 8016742:	b2ad      	uxth	r5, r5
 8016744:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8016748:	fb06 a600 	mla	r6, r6, r0, sl
 801674c:	1c78      	adds	r0, r7, #1
 801674e:	f105 0a01 	add.w	sl, r5, #1
 8016752:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8016756:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801675a:	b2b6      	uxth	r6, r6
 801675c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8016760:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8016764:	ea4a 0707 	orr.w	r7, sl, r7
 8016768:	f106 0a01 	add.w	sl, r6, #1
 801676c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8016770:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016774:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8016778:	ea47 070a 	orr.w	r7, r7, sl
 801677c:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 8016780:	e7b5      	b.n	80166ee <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8016782:	b005      	add	sp, #20
 8016784:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016788:	fffff800 	.word	0xfffff800

0801678c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801678c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016790:	b087      	sub	sp, #28
 8016792:	468b      	mov	fp, r1
 8016794:	9815      	ldr	r0, [sp, #84]	; 0x54
 8016796:	9203      	str	r2, [sp, #12]
 8016798:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801679c:	9204      	str	r2, [sp, #16]
 801679e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 80167a2:	6841      	ldr	r1, [r0, #4]
 80167a4:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 80167a8:	fb01 2404 	mla	r4, r1, r4, r2
 80167ac:	6802      	ldr	r2, [r0, #0]
 80167ae:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80167b2:	f8d9 2008 	ldr.w	r2, [r9, #8]
 80167b6:	3201      	adds	r2, #1
 80167b8:	f022 0201 	bic.w	r2, r2, #1
 80167bc:	9200      	str	r2, [sp, #0]
 80167be:	f8d9 2000 	ldr.w	r2, [r9]
 80167c2:	9201      	str	r2, [sp, #4]
 80167c4:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80167c8:	f1bb 0f00 	cmp.w	fp, #0
 80167cc:	dc03      	bgt.n	80167d6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80167ce:	9a03      	ldr	r2, [sp, #12]
 80167d0:	2a00      	cmp	r2, #0
 80167d2:	f340 8169 	ble.w	8016aa8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 80167d6:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80167d8:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 80167dc:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 80167e0:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80167e4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80167e6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80167ea:	2b00      	cmp	r3, #0
 80167ec:	dd0e      	ble.n	801680c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80167ee:	1402      	asrs	r2, r0, #16
 80167f0:	d405      	bmi.n	80167fe <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80167f2:	42ba      	cmp	r2, r7
 80167f4:	da03      	bge.n	80167fe <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80167f6:	140a      	asrs	r2, r1, #16
 80167f8:	d401      	bmi.n	80167fe <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80167fa:	42b2      	cmp	r2, r6
 80167fc:	db07      	blt.n	801680e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80167fe:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8016800:	4410      	add	r0, r2
 8016802:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016804:	3b01      	subs	r3, #1
 8016806:	4411      	add	r1, r2
 8016808:	3402      	adds	r4, #2
 801680a:	e7ee      	b.n	80167ea <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801680c:	d017      	beq.n	801683e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801680e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8016810:	1e5a      	subs	r2, r3, #1
 8016812:	fb05 0502 	mla	r5, r5, r2, r0
 8016816:	142d      	asrs	r5, r5, #16
 8016818:	d409      	bmi.n	801682e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801681a:	42bd      	cmp	r5, r7
 801681c:	da07      	bge.n	801682e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801681e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8016820:	fb05 1202 	mla	r2, r5, r2, r1
 8016824:	1412      	asrs	r2, r2, #16
 8016826:	d402      	bmi.n	801682e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8016828:	42b2      	cmp	r2, r6
 801682a:	f2c0 80c7 	blt.w	80169bc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 801682e:	2700      	movs	r7, #0
 8016830:	19da      	adds	r2, r3, r7
 8016832:	2a00      	cmp	r2, #0
 8016834:	dc3e      	bgt.n	80168b4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8016836:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801683a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801683e:	f1bb 0f00 	cmp.w	fp, #0
 8016842:	f340 8131 	ble.w	8016aa8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8016846:	ee30 0a04 	vadd.f32	s0, s0, s8
 801684a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801684e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8016852:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016854:	f1bb 0b01 	subs.w	fp, fp, #1
 8016858:	ee31 1a05 	vadd.f32	s2, s2, s10
 801685c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8016860:	eeb0 6a62 	vmov.f32	s12, s5
 8016864:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016868:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801686c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8016870:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8016874:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016878:	eeb0 6a43 	vmov.f32	s12, s6
 801687c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8016880:	ee12 2a90 	vmov	r2, s5
 8016884:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016888:	fb92 f3f3 	sdiv	r3, r2, r3
 801688c:	ee13 2a10 	vmov	r2, s6
 8016890:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016894:	9313      	str	r3, [sp, #76]	; 0x4c
 8016896:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016898:	fb92 f3f3 	sdiv	r3, r2, r3
 801689c:	9a03      	ldr	r2, [sp, #12]
 801689e:	9314      	str	r3, [sp, #80]	; 0x50
 80168a0:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80168a4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80168a6:	eeb0 3a67 	vmov.f32	s6, s15
 80168aa:	bf08      	it	eq
 80168ac:	4613      	moveq	r3, r2
 80168ae:	eef0 2a47 	vmov.f32	s5, s14
 80168b2:	e789      	b.n	80167c8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80168b4:	1405      	asrs	r5, r0, #16
 80168b6:	d435      	bmi.n	8016924 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80168b8:	f8d9 2008 	ldr.w	r2, [r9, #8]
 80168bc:	42aa      	cmp	r2, r5
 80168be:	dd31      	ble.n	8016924 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80168c0:	140e      	asrs	r6, r1, #16
 80168c2:	d42f      	bmi.n	8016924 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80168c4:	f8d9 200c 	ldr.w	r2, [r9, #12]
 80168c8:	42b2      	cmp	r2, r6
 80168ca:	dd2b      	ble.n	8016924 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80168cc:	9a00      	ldr	r2, [sp, #0]
 80168ce:	fb06 5502 	mla	r5, r6, r2, r5
 80168d2:	086a      	lsrs	r2, r5, #1
 80168d4:	9e01      	ldr	r6, [sp, #4]
 80168d6:	5cb2      	ldrb	r2, [r6, r2]
 80168d8:	07ee      	lsls	r6, r5, #31
 80168da:	bf54      	ite	pl
 80168dc:	f002 020f 	andpl.w	r2, r2, #15
 80168e0:	1112      	asrmi	r2, r2, #4
 80168e2:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80168e6:	b2d2      	uxtb	r2, r2
 80168e8:	b1e2      	cbz	r2, 8016924 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80168ea:	9d04      	ldr	r5, [sp, #16]
 80168ec:	436a      	muls	r2, r5
 80168ee:	1c55      	adds	r5, r2, #1
 80168f0:	eb05 2222 	add.w	r2, r5, r2, asr #8
 80168f4:	4d6e      	ldr	r5, [pc, #440]	; (8016ab0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 80168f6:	682d      	ldr	r5, [r5, #0]
 80168f8:	1212      	asrs	r2, r2, #8
 80168fa:	0a2e      	lsrs	r6, r5, #8
 80168fc:	2aff      	cmp	r2, #255	; 0xff
 80168fe:	9605      	str	r6, [sp, #20]
 8016900:	d116      	bne.n	8016930 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8016902:	f06f 0201 	mvn.w	r2, #1
 8016906:	fb02 fc07 	mul.w	ip, r2, r7
 801690a:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801690e:	096a      	lsrs	r2, r5, #5
 8016910:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016914:	f026 0607 	bic.w	r6, r6, #7
 8016918:	4316      	orrs	r6, r2
 801691a:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801691e:	432e      	orrs	r6, r5
 8016920:	f824 600c 	strh.w	r6, [r4, ip]
 8016924:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8016926:	4410      	add	r0, r2
 8016928:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801692a:	3f01      	subs	r7, #1
 801692c:	4411      	add	r1, r2
 801692e:	e77f      	b.n	8016830 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8016930:	f06f 0601 	mvn.w	r6, #1
 8016934:	437e      	muls	r6, r7
 8016936:	fa1f fa82 	uxth.w	sl, r2
 801693a:	f834 8006 	ldrh.w	r8, [r4, r6]
 801693e:	9602      	str	r6, [sp, #8]
 8016940:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8016944:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 8016948:	43d2      	mvns	r2, r2
 801694a:	b2d2      	uxtb	r2, r2
 801694c:	fb1c fc0a 	smulbb	ip, ip, sl
 8016950:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8016954:	fb0e ce02 	mla	lr, lr, r2, ip
 8016958:	b2ed      	uxtb	r5, r5
 801695a:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801695e:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8016962:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8016966:	fa5f f888 	uxtb.w	r8, r8
 801696a:	fb15 f50a 	smulbb	r5, r5, sl
 801696e:	fb08 5502 	mla	r5, r8, r2, r5
 8016972:	fa1f fe8e 	uxth.w	lr, lr
 8016976:	fb16 f60a 	smulbb	r6, r6, sl
 801697a:	b2ad      	uxth	r5, r5
 801697c:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8016980:	fb0c 6c02 	mla	ip, ip, r2, r6
 8016984:	f10e 0201 	add.w	r2, lr, #1
 8016988:	1c6e      	adds	r6, r5, #1
 801698a:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801698e:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 8016992:	fa1f fc8c 	uxth.w	ip, ip
 8016996:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801699a:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801699e:	ea46 0e0e 	orr.w	lr, r6, lr
 80169a2:	f10c 0601 	add.w	r6, ip, #1
 80169a6:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 80169aa:	0976      	lsrs	r6, r6, #5
 80169ac:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80169b0:	9a02      	ldr	r2, [sp, #8]
 80169b2:	ea4e 0e06 	orr.w	lr, lr, r6
 80169b6:	f824 e002 	strh.w	lr, [r4, r2]
 80169ba:	e7b3      	b.n	8016924 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80169bc:	f04f 0800 	mov.w	r8, #0
 80169c0:	eba3 0208 	sub.w	r2, r3, r8
 80169c4:	2a00      	cmp	r2, #0
 80169c6:	f77f af36 	ble.w	8016836 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 80169ca:	9e00      	ldr	r6, [sp, #0]
 80169cc:	1402      	asrs	r2, r0, #16
 80169ce:	140d      	asrs	r5, r1, #16
 80169d0:	fb06 2505 	mla	r5, r6, r5, r2
 80169d4:	086a      	lsrs	r2, r5, #1
 80169d6:	9e01      	ldr	r6, [sp, #4]
 80169d8:	5cb2      	ldrb	r2, [r6, r2]
 80169da:	07ed      	lsls	r5, r5, #31
 80169dc:	bf54      	ite	pl
 80169de:	f002 020f 	andpl.w	r2, r2, #15
 80169e2:	1112      	asrmi	r2, r2, #4
 80169e4:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80169e8:	b2d2      	uxtb	r2, r2
 80169ea:	b1c2      	cbz	r2, 8016a1e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 80169ec:	9d04      	ldr	r5, [sp, #16]
 80169ee:	436a      	muls	r2, r5
 80169f0:	1c55      	adds	r5, r2, #1
 80169f2:	eb05 2222 	add.w	r2, r5, r2, asr #8
 80169f6:	4d2e      	ldr	r5, [pc, #184]	; (8016ab0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 80169f8:	1212      	asrs	r2, r2, #8
 80169fa:	682e      	ldr	r6, [r5, #0]
 80169fc:	2aff      	cmp	r2, #255	; 0xff
 80169fe:	ea4f 2516 	mov.w	r5, r6, lsr #8
 8016a02:	d113      	bne.n	8016a2c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8016a04:	0972      	lsrs	r2, r6, #5
 8016a06:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 8016a0a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016a0e:	f025 0507 	bic.w	r5, r5, #7
 8016a12:	4315      	orrs	r5, r2
 8016a14:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8016a18:	4335      	orrs	r5, r6
 8016a1a:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 8016a1e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8016a20:	4410      	add	r0, r2
 8016a22:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016a24:	f108 0801 	add.w	r8, r8, #1
 8016a28:	4411      	add	r1, r2
 8016a2a:	e7c9      	b.n	80169c0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8016a2c:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8016a30:	fa1f fa82 	uxth.w	sl, r2
 8016a34:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8016a38:	f3c6 4707 	ubfx	r7, r6, #16, #8
 8016a3c:	43d2      	mvns	r2, r2
 8016a3e:	b2d2      	uxtb	r2, r2
 8016a40:	fb17 f70a 	smulbb	r7, r7, sl
 8016a44:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8016a48:	fb0c 7c02 	mla	ip, ip, r2, r7
 8016a4c:	b2f6      	uxtb	r6, r6
 8016a4e:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8016a52:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8016a56:	fa5f fe8e 	uxtb.w	lr, lr
 8016a5a:	fb16 f60a 	smulbb	r6, r6, sl
 8016a5e:	fb0e 6602 	mla	r6, lr, r2, r6
 8016a62:	b2ed      	uxtb	r5, r5
 8016a64:	fa1f fc8c 	uxth.w	ip, ip
 8016a68:	fb15 f50a 	smulbb	r5, r5, sl
 8016a6c:	b2b6      	uxth	r6, r6
 8016a6e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8016a72:	fb07 5702 	mla	r7, r7, r2, r5
 8016a76:	f10c 0201 	add.w	r2, ip, #1
 8016a7a:	1c75      	adds	r5, r6, #1
 8016a7c:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8016a80:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8016a84:	b2bf      	uxth	r7, r7
 8016a86:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8016a8a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8016a8e:	ea45 0c0c 	orr.w	ip, r5, ip
 8016a92:	1c7d      	adds	r5, r7, #1
 8016a94:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 8016a98:	096d      	lsrs	r5, r5, #5
 8016a9a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8016a9e:	ea4c 0c05 	orr.w	ip, ip, r5
 8016aa2:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 8016aa6:	e7ba      	b.n	8016a1e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8016aa8:	b007      	add	sp, #28
 8016aaa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016aae:	bf00      	nop
 8016ab0:	200155c8 	.word	0x200155c8

08016ab4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016ab4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016ab8:	b087      	sub	sp, #28
 8016aba:	f8df 830c 	ldr.w	r8, [pc, #780]	; 8016dc8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8016abe:	9815      	ldr	r0, [sp, #84]	; 0x54
 8016ac0:	9205      	str	r2, [sp, #20]
 8016ac2:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8016ac6:	9101      	str	r1, [sp, #4]
 8016ac8:	6841      	ldr	r1, [r0, #4]
 8016aca:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 8016ace:	fb01 2404 	mla	r4, r1, r4, r2
 8016ad2:	6802      	ldr	r2, [r0, #0]
 8016ad4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8016ad8:	f8db 2008 	ldr.w	r2, [fp, #8]
 8016adc:	3201      	adds	r2, #1
 8016ade:	f022 0201 	bic.w	r2, r2, #1
 8016ae2:	9202      	str	r2, [sp, #8]
 8016ae4:	f8db 2000 	ldr.w	r2, [fp]
 8016ae8:	9203      	str	r2, [sp, #12]
 8016aea:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8016aee:	9a01      	ldr	r2, [sp, #4]
 8016af0:	2a00      	cmp	r2, #0
 8016af2:	dc03      	bgt.n	8016afc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8016af4:	9a05      	ldr	r2, [sp, #20]
 8016af6:	2a00      	cmp	r2, #0
 8016af8:	f340 8162 	ble.w	8016dc0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8016afc:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8016afe:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 8016b02:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 8016b06:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8016b0a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8016b0c:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8016b10:	2b00      	cmp	r3, #0
 8016b12:	dd0e      	ble.n	8016b32 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8016b14:	1402      	asrs	r2, r0, #16
 8016b16:	d405      	bmi.n	8016b24 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8016b18:	42ba      	cmp	r2, r7
 8016b1a:	da03      	bge.n	8016b24 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8016b1c:	140a      	asrs	r2, r1, #16
 8016b1e:	d401      	bmi.n	8016b24 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8016b20:	42b2      	cmp	r2, r6
 8016b22:	db07      	blt.n	8016b34 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8016b24:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8016b26:	4410      	add	r0, r2
 8016b28:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016b2a:	3b01      	subs	r3, #1
 8016b2c:	4411      	add	r1, r2
 8016b2e:	3402      	adds	r4, #2
 8016b30:	e7ee      	b.n	8016b10 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8016b32:	d017      	beq.n	8016b64 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8016b34:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8016b36:	1e5a      	subs	r2, r3, #1
 8016b38:	fb05 0502 	mla	r5, r5, r2, r0
 8016b3c:	142d      	asrs	r5, r5, #16
 8016b3e:	d409      	bmi.n	8016b54 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8016b40:	42bd      	cmp	r5, r7
 8016b42:	da07      	bge.n	8016b54 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8016b44:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8016b46:	fb05 1202 	mla	r2, r5, r2, r1
 8016b4a:	1412      	asrs	r2, r2, #16
 8016b4c:	d402      	bmi.n	8016b54 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8016b4e:	42b2      	cmp	r2, r6
 8016b50:	f2c0 80c3 	blt.w	8016cda <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 8016b54:	2500      	movs	r5, #0
 8016b56:	195a      	adds	r2, r3, r5
 8016b58:	2a00      	cmp	r2, #0
 8016b5a:	dc3f      	bgt.n	8016bdc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8016b5c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016b60:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016b64:	9b01      	ldr	r3, [sp, #4]
 8016b66:	2b00      	cmp	r3, #0
 8016b68:	f340 812a 	ble.w	8016dc0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8016b6c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016b70:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8016b74:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8016b78:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016b7a:	ee31 1a05 	vadd.f32	s2, s2, s10
 8016b7e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8016b82:	eeb0 6a62 	vmov.f32	s12, s5
 8016b86:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016b8a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016b8e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8016b92:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8016b96:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016b9a:	eeb0 6a43 	vmov.f32	s12, s6
 8016b9e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8016ba2:	ee12 2a90 	vmov	r2, s5
 8016ba6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016baa:	fb92 f3f3 	sdiv	r3, r2, r3
 8016bae:	ee13 2a10 	vmov	r2, s6
 8016bb2:	9313      	str	r3, [sp, #76]	; 0x4c
 8016bb4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016bb6:	fb92 f3f3 	sdiv	r3, r2, r3
 8016bba:	9314      	str	r3, [sp, #80]	; 0x50
 8016bbc:	9b01      	ldr	r3, [sp, #4]
 8016bbe:	9a05      	ldr	r2, [sp, #20]
 8016bc0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016bc4:	3b01      	subs	r3, #1
 8016bc6:	9301      	str	r3, [sp, #4]
 8016bc8:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8016bcc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016bce:	eeb0 3a67 	vmov.f32	s6, s15
 8016bd2:	bf08      	it	eq
 8016bd4:	4613      	moveq	r3, r2
 8016bd6:	eef0 2a47 	vmov.f32	s5, s14
 8016bda:	e788      	b.n	8016aee <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8016bdc:	1406      	asrs	r6, r0, #16
 8016bde:	d42c      	bmi.n	8016c3a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016be0:	f8db 2008 	ldr.w	r2, [fp, #8]
 8016be4:	42b2      	cmp	r2, r6
 8016be6:	dd28      	ble.n	8016c3a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016be8:	140f      	asrs	r7, r1, #16
 8016bea:	d426      	bmi.n	8016c3a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016bec:	f8db 200c 	ldr.w	r2, [fp, #12]
 8016bf0:	42ba      	cmp	r2, r7
 8016bf2:	dd22      	ble.n	8016c3a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016bf4:	9a02      	ldr	r2, [sp, #8]
 8016bf6:	fb07 6602 	mla	r6, r7, r2, r6
 8016bfa:	0872      	lsrs	r2, r6, #1
 8016bfc:	9f03      	ldr	r7, [sp, #12]
 8016bfe:	5cba      	ldrb	r2, [r7, r2]
 8016c00:	07f6      	lsls	r6, r6, #31
 8016c02:	bf54      	ite	pl
 8016c04:	f002 020f 	andpl.w	r2, r2, #15
 8016c08:	1112      	asrmi	r2, r2, #4
 8016c0a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8016c0e:	b2d2      	uxtb	r2, r2
 8016c10:	2aff      	cmp	r2, #255	; 0xff
 8016c12:	d118      	bne.n	8016c46 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 8016c14:	f8d8 2000 	ldr.w	r2, [r8]
 8016c18:	f06f 0601 	mvn.w	r6, #1
 8016c1c:	fb06 f705 	mul.w	r7, r6, r5
 8016c20:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 8016c24:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 8016c28:	0956      	lsrs	r6, r2, #5
 8016c2a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8016c2e:	ea4c 0606 	orr.w	r6, ip, r6
 8016c32:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8016c36:	4316      	orrs	r6, r2
 8016c38:	53e6      	strh	r6, [r4, r7]
 8016c3a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8016c3c:	4410      	add	r0, r2
 8016c3e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016c40:	3d01      	subs	r5, #1
 8016c42:	4411      	add	r1, r2
 8016c44:	e787      	b.n	8016b56 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8016c46:	2a00      	cmp	r2, #0
 8016c48:	d0f7      	beq.n	8016c3a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016c4a:	f06f 0601 	mvn.w	r6, #1
 8016c4e:	436e      	muls	r6, r5
 8016c50:	f8d8 c000 	ldr.w	ip, [r8]
 8016c54:	f834 e006 	ldrh.w	lr, [r4, r6]
 8016c58:	9604      	str	r6, [sp, #16]
 8016c5a:	fa1f f982 	uxth.w	r9, r2
 8016c5e:	ea4f 272e 	mov.w	r7, lr, asr #8
 8016c62:	f3cc 4607 	ubfx	r6, ip, #16, #8
 8016c66:	43d2      	mvns	r2, r2
 8016c68:	b2d2      	uxtb	r2, r2
 8016c6a:	fb16 f609 	smulbb	r6, r6, r9
 8016c6e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8016c72:	fb07 6702 	mla	r7, r7, r2, r6
 8016c76:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 8016c7a:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8016c7e:	fa5f fc8c 	uxtb.w	ip, ip
 8016c82:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8016c86:	fa5f fe8e 	uxtb.w	lr, lr
 8016c8a:	fb1c fc09 	smulbb	ip, ip, r9
 8016c8e:	fb0e cc02 	mla	ip, lr, r2, ip
 8016c92:	b2bf      	uxth	r7, r7
 8016c94:	fb1a fa09 	smulbb	sl, sl, r9
 8016c98:	fa1f fc8c 	uxth.w	ip, ip
 8016c9c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8016ca0:	fb06 a602 	mla	r6, r6, r2, sl
 8016ca4:	1c7a      	adds	r2, r7, #1
 8016ca6:	f10c 0a01 	add.w	sl, ip, #1
 8016caa:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8016cae:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 8016cb2:	b2b6      	uxth	r6, r6
 8016cb4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8016cb8:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8016cbc:	ea4a 0707 	orr.w	r7, sl, r7
 8016cc0:	f106 0a01 	add.w	sl, r6, #1
 8016cc4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8016cc8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016ccc:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8016cd0:	9a04      	ldr	r2, [sp, #16]
 8016cd2:	ea47 070a 	orr.w	r7, r7, sl
 8016cd6:	52a7      	strh	r7, [r4, r2]
 8016cd8:	e7af      	b.n	8016c3a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016cda:	f04f 0e00 	mov.w	lr, #0
 8016cde:	eba3 020e 	sub.w	r2, r3, lr
 8016ce2:	2a00      	cmp	r2, #0
 8016ce4:	f77f af3a 	ble.w	8016b5c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8016ce8:	9e02      	ldr	r6, [sp, #8]
 8016cea:	1402      	asrs	r2, r0, #16
 8016cec:	140d      	asrs	r5, r1, #16
 8016cee:	fb06 2505 	mla	r5, r6, r5, r2
 8016cf2:	086a      	lsrs	r2, r5, #1
 8016cf4:	9e03      	ldr	r6, [sp, #12]
 8016cf6:	5cb2      	ldrb	r2, [r6, r2]
 8016cf8:	07ed      	lsls	r5, r5, #31
 8016cfa:	bf54      	ite	pl
 8016cfc:	f002 020f 	andpl.w	r2, r2, #15
 8016d00:	1112      	asrmi	r2, r2, #4
 8016d02:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8016d06:	b2d2      	uxtb	r2, r2
 8016d08:	2aff      	cmp	r2, #255	; 0xff
 8016d0a:	d115      	bne.n	8016d38 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 8016d0c:	f8d8 5000 	ldr.w	r5, [r8]
 8016d10:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 8016d14:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 8016d18:	096a      	lsrs	r2, r5, #5
 8016d1a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016d1e:	4332      	orrs	r2, r6
 8016d20:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8016d24:	432a      	orrs	r2, r5
 8016d26:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 8016d2a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8016d2c:	4410      	add	r0, r2
 8016d2e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016d30:	f10e 0e01 	add.w	lr, lr, #1
 8016d34:	4411      	add	r1, r2
 8016d36:	e7d2      	b.n	8016cde <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8016d38:	2a00      	cmp	r2, #0
 8016d3a:	d0f6      	beq.n	8016d2a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8016d3c:	f8d8 7000 	ldr.w	r7, [r8]
 8016d40:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8016d44:	fa1f f982 	uxth.w	r9, r2
 8016d48:	ea4f 262c 	mov.w	r6, ip, asr #8
 8016d4c:	f3c7 4507 	ubfx	r5, r7, #16, #8
 8016d50:	43d2      	mvns	r2, r2
 8016d52:	b2d2      	uxtb	r2, r2
 8016d54:	fb15 f509 	smulbb	r5, r5, r9
 8016d58:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8016d5c:	fb06 5602 	mla	r6, r6, r2, r5
 8016d60:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 8016d64:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8016d68:	b2ff      	uxtb	r7, r7
 8016d6a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8016d6e:	fa5f fc8c 	uxtb.w	ip, ip
 8016d72:	fb17 f709 	smulbb	r7, r7, r9
 8016d76:	fb0c 7702 	mla	r7, ip, r2, r7
 8016d7a:	b2b6      	uxth	r6, r6
 8016d7c:	fb1a fa09 	smulbb	sl, sl, r9
 8016d80:	b2bf      	uxth	r7, r7
 8016d82:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8016d86:	fb05 a502 	mla	r5, r5, r2, sl
 8016d8a:	1c72      	adds	r2, r6, #1
 8016d8c:	f107 0a01 	add.w	sl, r7, #1
 8016d90:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8016d94:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8016d98:	b2ad      	uxth	r5, r5
 8016d9a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8016d9e:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8016da2:	ea4a 0606 	orr.w	r6, sl, r6
 8016da6:	f105 0a01 	add.w	sl, r5, #1
 8016daa:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8016dae:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016db2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8016db6:	ea46 060a 	orr.w	r6, r6, sl
 8016dba:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 8016dbe:	e7b4      	b.n	8016d2a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8016dc0:	b007      	add	sp, #28
 8016dc2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016dc6:	bf00      	nop
 8016dc8:	200155c8 	.word	0x200155c8

08016dcc <_ZN8touchgfx8LCD16bppD1Ev>:
 8016dcc:	4770      	bx	lr

08016dce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 8016dce:	4770      	bx	lr

08016dd0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 8016dd0:	4770      	bx	lr

08016dd2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 8016dd2:	4770      	bx	lr

08016dd4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 8016dd4:	4770      	bx	lr

08016dd6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8016dd6:	4770      	bx	lr

08016dd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8016dd8:	4770      	bx	lr

08016dda <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8016dda:	4770      	bx	lr

08016ddc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8016ddc:	4770      	bx	lr

08016dde <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8016dde:	4770      	bx	lr

08016de0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8016de0:	4770      	bx	lr

08016de2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8016de2:	4770      	bx	lr

08016de4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8016de4:	4770      	bx	lr

08016de6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8016de6:	4770      	bx	lr

08016de8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8016de8:	4770      	bx	lr

08016dea <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8016dea:	4770      	bx	lr

08016dec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 8016dec:	4770      	bx	lr

08016dee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8016dee:	4770      	bx	lr

08016df0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8016df0:	4770      	bx	lr

08016df2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8016df2:	4770      	bx	lr

08016df4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8016df4:	4770      	bx	lr

08016df6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8016df6:	4770      	bx	lr

08016df8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8016df8:	4770      	bx	lr

08016dfa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8016dfa:	4770      	bx	lr

08016dfc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8016dfc:	4770      	bx	lr

08016dfe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8016dfe:	4770      	bx	lr

08016e00 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8016e00:	4770      	bx	lr

08016e02 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8016e02:	4770      	bx	lr

08016e04 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8016e04:	4770      	bx	lr

08016e06 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 8016e06:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8016e0a:	b088      	sub	sp, #32
 8016e0c:	ac08      	add	r4, sp, #32
 8016e0e:	4606      	mov	r6, r0
 8016e10:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 8016e14:	4620      	mov	r0, r4
 8016e16:	4688      	mov	r8, r1
 8016e18:	4691      	mov	r9, r2
 8016e1a:	f7fd fc65 	bl	80146e8 <_ZNK8touchgfx6Bitmap7getDataEv>
 8016e1e:	6833      	ldr	r3, [r6, #0]
 8016e20:	4605      	mov	r5, r0
 8016e22:	4620      	mov	r0, r4
 8016e24:	699f      	ldr	r7, [r3, #24]
 8016e26:	f7fd fb73 	bl	8014510 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8016e2a:	4682      	mov	sl, r0
 8016e2c:	4620      	mov	r0, r4
 8016e2e:	f7fd fba3 	bl	8014578 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8016e32:	9500      	str	r5, [sp, #0]
 8016e34:	e9cd a001 	strd	sl, r0, [sp, #4]
 8016e38:	464b      	mov	r3, r9
 8016e3a:	a806      	add	r0, sp, #24
 8016e3c:	4642      	mov	r2, r8
 8016e3e:	4631      	mov	r1, r6
 8016e40:	47b8      	blx	r7
 8016e42:	4628      	mov	r0, r5
 8016e44:	b008      	add	sp, #32
 8016e46:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

08016e4c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 8016e4c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8016e50:	2300      	movs	r3, #0
 8016e52:	9300      	str	r3, [sp, #0]
 8016e54:	4b3d      	ldr	r3, [pc, #244]	; (8016f4c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 8016e56:	781b      	ldrb	r3, [r3, #0]
 8016e58:	2b00      	cmp	r3, #0
 8016e5a:	d137      	bne.n	8016ecc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 8016e5c:	4a3c      	ldr	r2, [pc, #240]	; (8016f50 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8016e5e:	f9b2 2000 	ldrsh.w	r2, [r2]
 8016e62:	f8ad 2004 	strh.w	r2, [sp, #4]
 8016e66:	2b00      	cmp	r3, #0
 8016e68:	d132      	bne.n	8016ed0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 8016e6a:	4b3a      	ldr	r3, [pc, #232]	; (8016f54 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8016e6c:	f9b3 3000 	ldrsh.w	r3, [r3]
 8016e70:	6808      	ldr	r0, [r1, #0]
 8016e72:	6849      	ldr	r1, [r1, #4]
 8016e74:	f8ad 3006 	strh.w	r3, [sp, #6]
 8016e78:	ac02      	add	r4, sp, #8
 8016e7a:	ab02      	add	r3, sp, #8
 8016e7c:	c303      	stmia	r3!, {r0, r1}
 8016e7e:	4669      	mov	r1, sp
 8016e80:	4620      	mov	r0, r4
 8016e82:	f7f9 ff7f 	bl	8010d84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016e86:	4668      	mov	r0, sp
 8016e88:	f7f9 ff54 	bl	8010d34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016e8c:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8016e90:	f8bd 2000 	ldrh.w	r2, [sp]
 8016e94:	4d30      	ldr	r5, [pc, #192]	; (8016f58 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 8016e96:	4413      	add	r3, r2
 8016e98:	f8ad 3008 	strh.w	r3, [sp, #8]
 8016e9c:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8016ea0:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8016ea4:	6828      	ldr	r0, [r5, #0]
 8016ea6:	4413      	add	r3, r2
 8016ea8:	f8ad 300a 	strh.w	r3, [sp, #10]
 8016eac:	6803      	ldr	r3, [r0, #0]
 8016eae:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8016eb0:	4798      	blx	r3
 8016eb2:	f010 0f01 	tst.w	r0, #1
 8016eb6:	462f      	mov	r7, r5
 8016eb8:	d00c      	beq.n	8016ed4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 8016eba:	6828      	ldr	r0, [r5, #0]
 8016ebc:	6803      	ldr	r3, [r0, #0]
 8016ebe:	e894 0006 	ldmia.w	r4, {r1, r2}
 8016ec2:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8016ec4:	4798      	blx	r3
 8016ec6:	b004      	add	sp, #16
 8016ec8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8016ecc:	4a21      	ldr	r2, [pc, #132]	; (8016f54 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8016ece:	e7c6      	b.n	8016e5e <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 8016ed0:	4b1f      	ldr	r3, [pc, #124]	; (8016f50 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8016ed2:	e7cb      	b.n	8016e6c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 8016ed4:	6838      	ldr	r0, [r7, #0]
 8016ed6:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 8016eda:	6803      	ldr	r3, [r0, #0]
 8016edc:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 8016ee0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8016ee2:	4798      	blx	r3
 8016ee4:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 8016ee8:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8016eec:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 8016ef0:	fb16 3602 	smlabb	r6, r6, r2, r3
 8016ef4:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8016ef8:	6838      	ldr	r0, [r7, #0]
 8016efa:	6803      	ldr	r3, [r0, #0]
 8016efc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8016efe:	4798      	blx	r3
 8016f00:	4a13      	ldr	r2, [pc, #76]	; (8016f50 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8016f02:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 8016f06:	8813      	ldrh	r3, [r2, #0]
 8016f08:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8016f0c:	fb03 1404 	mla	r4, r3, r4, r1
 8016f10:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8016f14:	435d      	muls	r5, r3
 8016f16:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8016f1a:	ea4f 0848 	mov.w	r8, r8, lsl #1
 8016f1e:	4691      	mov	r9, r2
 8016f20:	6838      	ldr	r0, [r7, #0]
 8016f22:	42ac      	cmp	r4, r5
 8016f24:	6803      	ldr	r3, [r0, #0]
 8016f26:	d20e      	bcs.n	8016f46 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 8016f28:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 8016f2c:	4632      	mov	r2, r6
 8016f2e:	4643      	mov	r3, r8
 8016f30:	4621      	mov	r1, r4
 8016f32:	47d0      	blx	sl
 8016f34:	f8b9 3000 	ldrh.w	r3, [r9]
 8016f38:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016f3c:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8016f40:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8016f44:	e7ec      	b.n	8016f20 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 8016f46:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016f48:	4798      	blx	r3
 8016f4a:	e7bc      	b.n	8016ec6 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 8016f4c:	200155b0 	.word	0x200155b0
 8016f50:	200155b2 	.word	0x200155b2
 8016f54:	200155b4 	.word	0x200155b4
 8016f58:	200155b8 	.word	0x200155b8

08016f5c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 8016f5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016f60:	b08b      	sub	sp, #44	; 0x2c
 8016f62:	460f      	mov	r7, r1
 8016f64:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 8016f68:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 8016f6c:	4616      	mov	r6, r2
 8016f6e:	f1bb 0f00 	cmp.w	fp, #0
 8016f72:	d049      	beq.n	8017008 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 8016f74:	6810      	ldr	r0, [r2, #0]
 8016f76:	6851      	ldr	r1, [r2, #4]
 8016f78:	ad06      	add	r5, sp, #24
 8016f7a:	c503      	stmia	r5!, {r0, r1}
 8016f7c:	6818      	ldr	r0, [r3, #0]
 8016f7e:	6859      	ldr	r1, [r3, #4]
 8016f80:	ad08      	add	r5, sp, #32
 8016f82:	c503      	stmia	r5!, {r0, r1}
 8016f84:	a806      	add	r0, sp, #24
 8016f86:	f7f9 fed5 	bl	8010d34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016f8a:	4631      	mov	r1, r6
 8016f8c:	a808      	add	r0, sp, #32
 8016f8e:	f7f9 fef9 	bl	8010d84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016f92:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8016f96:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8016f9a:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 8016f9e:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 8016fa2:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 8016fa6:	fb16 2103 	smlabb	r1, r6, r3, r2
 8016faa:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 8016fae:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 8016fb2:	4f5f      	ldr	r7, [pc, #380]	; (8017130 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8016fb4:	440a      	add	r2, r1
 8016fb6:	f8ad 2020 	strh.w	r2, [sp, #32]
 8016fba:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8016fbe:	6838      	ldr	r0, [r7, #0]
 8016fc0:	4413      	add	r3, r2
 8016fc2:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8016fc6:	6803      	ldr	r3, [r0, #0]
 8016fc8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8016fca:	4798      	blx	r3
 8016fcc:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8016fd0:	46b9      	mov	r9, r7
 8016fd2:	d01c      	beq.n	801700e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb2>
 8016fd4:	f010 0f04 	tst.w	r0, #4
 8016fd8:	d01d      	beq.n	8017016 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8016fda:	f8d9 0000 	ldr.w	r0, [r9]
 8016fde:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8016fe2:	6801      	ldr	r1, [r0, #0]
 8016fe4:	f8cd b00c 	str.w	fp, [sp, #12]
 8016fe8:	2700      	movs	r7, #0
 8016fea:	e9cd 4704 	strd	r4, r7, [sp, #16]
 8016fee:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 8016ff2:	9402      	str	r4, [sp, #8]
 8016ff4:	b2ad      	uxth	r5, r5
 8016ff6:	fa1f f488 	uxth.w	r4, r8
 8016ffa:	9501      	str	r5, [sp, #4]
 8016ffc:	9400      	str	r4, [sp, #0]
 8016ffe:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 8017000:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8017004:	4631      	mov	r1, r6
 8017006:	47a0      	blx	r4
 8017008:	b00b      	add	sp, #44	; 0x2c
 801700a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801700e:	b914      	cbnz	r4, 8017016 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8017010:	f010 0f01 	tst.w	r0, #1
 8017014:	e7e0      	b.n	8016fd8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7c>
 8017016:	f8d9 0000 	ldr.w	r0, [r9]
 801701a:	6803      	ldr	r3, [r0, #0]
 801701c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801701e:	4798      	blx	r3
 8017020:	4b44      	ldr	r3, [pc, #272]	; (8017134 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 8017022:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 8017026:	881a      	ldrh	r2, [r3, #0]
 8017028:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801702c:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8017030:	fb02 1404 	mla	r4, r2, r4, r1
 8017034:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8017038:	469a      	mov	sl, r3
 801703a:	fb05 f502 	mul.w	r5, r5, r2
 801703e:	ea4f 0748 	mov.w	r7, r8, lsl #1
 8017042:	d059      	beq.n	80170f8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 8017044:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 8017048:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801704c:	fa1f f28b 	uxth.w	r2, fp
 8017050:	fa1f f989 	uxth.w	r9, r9
 8017054:	469e      	mov	lr, r3
 8017056:	42ac      	cmp	r4, r5
 8017058:	d264      	bcs.n	8017124 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801705a:	eb04 0a07 	add.w	sl, r4, r7
 801705e:	4554      	cmp	r4, sl
 8017060:	d23d      	bcs.n	80170de <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 8017062:	8821      	ldrh	r1, [r4, #0]
 8017064:	f836 3b02 	ldrh.w	r3, [r6], #2
 8017068:	1208      	asrs	r0, r1, #8
 801706a:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801706e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8017072:	fb10 f009 	smulbb	r0, r0, r9
 8017076:	ea4f 0be1 	mov.w	fp, r1, asr #3
 801707a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801707e:	00c9      	lsls	r1, r1, #3
 8017080:	fb0c 0c02 	mla	ip, ip, r2, r0
 8017084:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8017088:	10d8      	asrs	r0, r3, #3
 801708a:	b2c9      	uxtb	r1, r1
 801708c:	00db      	lsls	r3, r3, #3
 801708e:	fa1f fc8c 	uxth.w	ip, ip
 8017092:	fb1b fb09 	smulbb	fp, fp, r9
 8017096:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801709a:	b2db      	uxtb	r3, r3
 801709c:	fb11 f109 	smulbb	r1, r1, r9
 80170a0:	fb00 b002 	mla	r0, r0, r2, fp
 80170a4:	fb03 1302 	mla	r3, r3, r2, r1
 80170a8:	f10c 0b01 	add.w	fp, ip, #1
 80170ac:	b29b      	uxth	r3, r3
 80170ae:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 80170b2:	b280      	uxth	r0, r0
 80170b4:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 80170b8:	f103 0c01 	add.w	ip, r3, #1
 80170bc:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 80170c0:	1c43      	adds	r3, r0, #1
 80170c2:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80170c6:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80170ca:	0940      	lsrs	r0, r0, #5
 80170cc:	ea4c 0c0b 	orr.w	ip, ip, fp
 80170d0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80170d4:	ea4c 0c00 	orr.w	ip, ip, r0
 80170d8:	f824 cb02 	strh.w	ip, [r4], #2
 80170dc:	e7bf      	b.n	801705e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 80170de:	f8be 3000 	ldrh.w	r3, [lr]
 80170e2:	eba3 0308 	sub.w	r3, r3, r8
 80170e6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80170ea:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80170ee:	eba3 0308 	sub.w	r3, r3, r8
 80170f2:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 80170f6:	e7ae      	b.n	8017056 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 80170f8:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 80170fc:	f8d9 0000 	ldr.w	r0, [r9]
 8017100:	42ac      	cmp	r4, r5
 8017102:	6803      	ldr	r3, [r0, #0]
 8017104:	d20e      	bcs.n	8017124 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 8017106:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 801710a:	4632      	mov	r2, r6
 801710c:	463b      	mov	r3, r7
 801710e:	4621      	mov	r1, r4
 8017110:	47c0      	blx	r8
 8017112:	f8ba 3000 	ldrh.w	r3, [sl]
 8017116:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801711a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801711e:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8017122:	e7eb      	b.n	80170fc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 8017124:	4b02      	ldr	r3, [pc, #8]	; (8017130 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8017126:	6818      	ldr	r0, [r3, #0]
 8017128:	6803      	ldr	r3, [r0, #0]
 801712a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801712c:	4798      	blx	r3
 801712e:	e76b      	b.n	8017008 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 8017130:	200155b8 	.word	0x200155b8
 8017134:	200155b2 	.word	0x200155b2

08017138 <_ZN8touchgfx8LCD16bppD0Ev>:
 8017138:	b510      	push	{r4, lr}
 801713a:	2178      	movs	r1, #120	; 0x78
 801713c:	4604      	mov	r4, r0
 801713e:	f009 fad3 	bl	80206e8 <_ZdlPvj>
 8017142:	4620      	mov	r0, r4
 8017144:	bd10      	pop	{r4, pc}

08017146 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8017146:	b510      	push	{r4, lr}
 8017148:	2104      	movs	r1, #4
 801714a:	4604      	mov	r4, r0
 801714c:	f009 facc 	bl	80206e8 <_ZdlPvj>
 8017150:	4620      	mov	r0, r4
 8017152:	bd10      	pop	{r4, pc}

08017154 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8017154:	b510      	push	{r4, lr}
 8017156:	2104      	movs	r1, #4
 8017158:	4604      	mov	r4, r0
 801715a:	f009 fac5 	bl	80206e8 <_ZdlPvj>
 801715e:	4620      	mov	r0, r4
 8017160:	bd10      	pop	{r4, pc}

08017162 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8017162:	b510      	push	{r4, lr}
 8017164:	2104      	movs	r1, #4
 8017166:	4604      	mov	r4, r0
 8017168:	f009 fabe 	bl	80206e8 <_ZdlPvj>
 801716c:	4620      	mov	r0, r4
 801716e:	bd10      	pop	{r4, pc}

08017170 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8017170:	b510      	push	{r4, lr}
 8017172:	2104      	movs	r1, #4
 8017174:	4604      	mov	r4, r0
 8017176:	f009 fab7 	bl	80206e8 <_ZdlPvj>
 801717a:	4620      	mov	r0, r4
 801717c:	bd10      	pop	{r4, pc}

0801717e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801717e:	b510      	push	{r4, lr}
 8017180:	2104      	movs	r1, #4
 8017182:	4604      	mov	r4, r0
 8017184:	f009 fab0 	bl	80206e8 <_ZdlPvj>
 8017188:	4620      	mov	r0, r4
 801718a:	bd10      	pop	{r4, pc}

0801718c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 801718c:	b510      	push	{r4, lr}
 801718e:	2104      	movs	r1, #4
 8017190:	4604      	mov	r4, r0
 8017192:	f009 faa9 	bl	80206e8 <_ZdlPvj>
 8017196:	4620      	mov	r0, r4
 8017198:	bd10      	pop	{r4, pc}

0801719a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801719a:	b510      	push	{r4, lr}
 801719c:	2104      	movs	r1, #4
 801719e:	4604      	mov	r4, r0
 80171a0:	f009 faa2 	bl	80206e8 <_ZdlPvj>
 80171a4:	4620      	mov	r0, r4
 80171a6:	bd10      	pop	{r4, pc}

080171a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 80171a8:	b510      	push	{r4, lr}
 80171aa:	2104      	movs	r1, #4
 80171ac:	4604      	mov	r4, r0
 80171ae:	f009 fa9b 	bl	80206e8 <_ZdlPvj>
 80171b2:	4620      	mov	r0, r4
 80171b4:	bd10      	pop	{r4, pc}

080171b6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 80171b6:	b510      	push	{r4, lr}
 80171b8:	2104      	movs	r1, #4
 80171ba:	4604      	mov	r4, r0
 80171bc:	f009 fa94 	bl	80206e8 <_ZdlPvj>
 80171c0:	4620      	mov	r0, r4
 80171c2:	bd10      	pop	{r4, pc}

080171c4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 80171c4:	b510      	push	{r4, lr}
 80171c6:	2104      	movs	r1, #4
 80171c8:	4604      	mov	r4, r0
 80171ca:	f009 fa8d 	bl	80206e8 <_ZdlPvj>
 80171ce:	4620      	mov	r0, r4
 80171d0:	bd10      	pop	{r4, pc}

080171d2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 80171d2:	b510      	push	{r4, lr}
 80171d4:	2104      	movs	r1, #4
 80171d6:	4604      	mov	r4, r0
 80171d8:	f009 fa86 	bl	80206e8 <_ZdlPvj>
 80171dc:	4620      	mov	r0, r4
 80171de:	bd10      	pop	{r4, pc}

080171e0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 80171e0:	b510      	push	{r4, lr}
 80171e2:	2104      	movs	r1, #4
 80171e4:	4604      	mov	r4, r0
 80171e6:	f009 fa7f 	bl	80206e8 <_ZdlPvj>
 80171ea:	4620      	mov	r0, r4
 80171ec:	bd10      	pop	{r4, pc}

080171ee <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 80171ee:	b510      	push	{r4, lr}
 80171f0:	2104      	movs	r1, #4
 80171f2:	4604      	mov	r4, r0
 80171f4:	f009 fa78 	bl	80206e8 <_ZdlPvj>
 80171f8:	4620      	mov	r0, r4
 80171fa:	bd10      	pop	{r4, pc}

080171fc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 80171fc:	b510      	push	{r4, lr}
 80171fe:	2104      	movs	r1, #4
 8017200:	4604      	mov	r4, r0
 8017202:	f009 fa71 	bl	80206e8 <_ZdlPvj>
 8017206:	4620      	mov	r0, r4
 8017208:	bd10      	pop	{r4, pc}

0801720a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801720a:	b510      	push	{r4, lr}
 801720c:	2104      	movs	r1, #4
 801720e:	4604      	mov	r4, r0
 8017210:	f009 fa6a 	bl	80206e8 <_ZdlPvj>
 8017214:	4620      	mov	r0, r4
 8017216:	bd10      	pop	{r4, pc}

08017218 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8017218:	b510      	push	{r4, lr}
 801721a:	2104      	movs	r1, #4
 801721c:	4604      	mov	r4, r0
 801721e:	f009 fa63 	bl	80206e8 <_ZdlPvj>
 8017222:	4620      	mov	r0, r4
 8017224:	bd10      	pop	{r4, pc}

08017226 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8017226:	b510      	push	{r4, lr}
 8017228:	2104      	movs	r1, #4
 801722a:	4604      	mov	r4, r0
 801722c:	f009 fa5c 	bl	80206e8 <_ZdlPvj>
 8017230:	4620      	mov	r0, r4
 8017232:	bd10      	pop	{r4, pc}

08017234 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8017234:	b510      	push	{r4, lr}
 8017236:	2104      	movs	r1, #4
 8017238:	4604      	mov	r4, r0
 801723a:	f009 fa55 	bl	80206e8 <_ZdlPvj>
 801723e:	4620      	mov	r0, r4
 8017240:	bd10      	pop	{r4, pc}

08017242 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8017242:	b510      	push	{r4, lr}
 8017244:	2104      	movs	r1, #4
 8017246:	4604      	mov	r4, r0
 8017248:	f009 fa4e 	bl	80206e8 <_ZdlPvj>
 801724c:	4620      	mov	r0, r4
 801724e:	bd10      	pop	{r4, pc}

08017250 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 8017250:	b510      	push	{r4, lr}
 8017252:	2104      	movs	r1, #4
 8017254:	4604      	mov	r4, r0
 8017256:	f009 fa47 	bl	80206e8 <_ZdlPvj>
 801725a:	4620      	mov	r0, r4
 801725c:	bd10      	pop	{r4, pc}

0801725e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801725e:	b510      	push	{r4, lr}
 8017260:	2104      	movs	r1, #4
 8017262:	4604      	mov	r4, r0
 8017264:	f009 fa40 	bl	80206e8 <_ZdlPvj>
 8017268:	4620      	mov	r0, r4
 801726a:	bd10      	pop	{r4, pc}

0801726c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801726c:	b510      	push	{r4, lr}
 801726e:	2104      	movs	r1, #4
 8017270:	4604      	mov	r4, r0
 8017272:	f009 fa39 	bl	80206e8 <_ZdlPvj>
 8017276:	4620      	mov	r0, r4
 8017278:	bd10      	pop	{r4, pc}

0801727a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801727a:	b510      	push	{r4, lr}
 801727c:	2104      	movs	r1, #4
 801727e:	4604      	mov	r4, r0
 8017280:	f009 fa32 	bl	80206e8 <_ZdlPvj>
 8017284:	4620      	mov	r0, r4
 8017286:	bd10      	pop	{r4, pc}

08017288 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8017288:	b510      	push	{r4, lr}
 801728a:	2104      	movs	r1, #4
 801728c:	4604      	mov	r4, r0
 801728e:	f009 fa2b 	bl	80206e8 <_ZdlPvj>
 8017292:	4620      	mov	r0, r4
 8017294:	bd10      	pop	{r4, pc}

08017296 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 8017296:	b510      	push	{r4, lr}
 8017298:	2104      	movs	r1, #4
 801729a:	4604      	mov	r4, r0
 801729c:	f009 fa24 	bl	80206e8 <_ZdlPvj>
 80172a0:	4620      	mov	r0, r4
 80172a2:	bd10      	pop	{r4, pc}

080172a4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 80172a4:	b510      	push	{r4, lr}
 80172a6:	2104      	movs	r1, #4
 80172a8:	4604      	mov	r4, r0
 80172aa:	f009 fa1d 	bl	80206e8 <_ZdlPvj>
 80172ae:	4620      	mov	r0, r4
 80172b0:	bd10      	pop	{r4, pc}

080172b2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 80172b2:	b510      	push	{r4, lr}
 80172b4:	2104      	movs	r1, #4
 80172b6:	4604      	mov	r4, r0
 80172b8:	f009 fa16 	bl	80206e8 <_ZdlPvj>
 80172bc:	4620      	mov	r0, r4
 80172be:	bd10      	pop	{r4, pc}

080172c0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 80172c0:	b510      	push	{r4, lr}
 80172c2:	2104      	movs	r1, #4
 80172c4:	4604      	mov	r4, r0
 80172c6:	f009 fa0f 	bl	80206e8 <_ZdlPvj>
 80172ca:	4620      	mov	r0, r4
 80172cc:	bd10      	pop	{r4, pc}
	...

080172d0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 80172d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80172d4:	b091      	sub	sp, #68	; 0x44
 80172d6:	469b      	mov	fp, r3
 80172d8:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 80172dc:	4616      	mov	r6, r2
 80172de:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
 80172e2:	f9b3 2000 	ldrsh.w	r2, [r3]
 80172e6:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 80172ea:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80172ee:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80172f2:	4604      	mov	r4, r0
 80172f4:	460d      	mov	r5, r1
 80172f6:	4640      	mov	r0, r8
 80172f8:	4659      	mov	r1, fp
 80172fa:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 80172fe:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 8017302:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 8017306:	f7f3 fd41 	bl	800ad8c <_ZN8touchgfx4RectaNERKS0_>
 801730a:	4631      	mov	r1, r6
 801730c:	4640      	mov	r0, r8
 801730e:	f7f3 fd3d 	bl	800ad8c <_ZN8touchgfx4RectaNERKS0_>
 8017312:	4b74      	ldr	r3, [pc, #464]	; (80174e4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 8017314:	8818      	ldrh	r0, [r3, #0]
 8017316:	4b74      	ldr	r3, [pc, #464]	; (80174e8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 8017318:	8819      	ldrh	r1, [r3, #0]
 801731a:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801731e:	2b00      	cmp	r3, #0
 8017320:	b202      	sxth	r2, r0
 8017322:	b20e      	sxth	r6, r1
 8017324:	da07      	bge.n	8017336 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 8017326:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 801732a:	4463      	add	r3, ip
 801732c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8017330:	2300      	movs	r3, #0
 8017332:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8017336:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801733a:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801733e:	1ad2      	subs	r2, r2, r3
 8017340:	4594      	cmp	ip, r2
 8017342:	bfc4      	itt	gt
 8017344:	1ac2      	subgt	r2, r0, r3
 8017346:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
 801734a:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801734e:	2a00      	cmp	r2, #0
 8017350:	da07      	bge.n	8017362 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 8017352:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
 8017356:	4462      	add	r2, ip
 8017358:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 801735c:	2200      	movs	r2, #0
 801735e:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 8017362:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 8017366:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801736a:	eba6 060a 	sub.w	r6, r6, sl
 801736e:	42b2      	cmp	r2, r6
 8017370:	bfc4      	itt	gt
 8017372:	eba1 020a 	subgt.w	r2, r1, sl
 8017376:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
 801737a:	4a5c      	ldr	r2, [pc, #368]	; (80174ec <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 801737c:	7812      	ldrb	r2, [r2, #0]
 801737e:	b9a2      	cbnz	r2, 80173aa <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 8017380:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 8017384:	4286      	cmp	r6, r0
 8017386:	4640      	mov	r0, r8
 8017388:	9303      	str	r3, [sp, #12]
 801738a:	bf14      	ite	ne
 801738c:	2600      	movne	r6, #0
 801738e:	2601      	moveq	r6, #1
 8017390:	f7f3 fd3f 	bl	800ae12 <_ZNK8touchgfx4Rect7isEmptyEv>
 8017394:	9b03      	ldr	r3, [sp, #12]
 8017396:	b160      	cbz	r0, 80173b2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 8017398:	2300      	movs	r3, #0
 801739a:	8023      	strh	r3, [r4, #0]
 801739c:	8063      	strh	r3, [r4, #2]
 801739e:	80a3      	strh	r3, [r4, #4]
 80173a0:	4620      	mov	r0, r4
 80173a2:	80e3      	strh	r3, [r4, #6]
 80173a4:	b011      	add	sp, #68	; 0x44
 80173a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80173aa:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 80173ae:	428e      	cmp	r6, r1
 80173b0:	e7e9      	b.n	8017386 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 80173b2:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 80173b6:	9205      	str	r2, [sp, #20]
 80173b8:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 80173bc:	9206      	str	r2, [sp, #24]
 80173be:	f8bb 2000 	ldrh.w	r2, [fp]
 80173c2:	900e      	str	r0, [sp, #56]	; 0x38
 80173c4:	1a9b      	subs	r3, r3, r2
 80173c6:	b21b      	sxth	r3, r3
 80173c8:	9303      	str	r3, [sp, #12]
 80173ca:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 80173ce:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 80173d2:	ebaa 0a03 	sub.w	sl, sl, r3
 80173d6:	fa0f f38a 	sxth.w	r3, sl
 80173da:	9304      	str	r3, [sp, #16]
 80173dc:	9b03      	ldr	r3, [sp, #12]
 80173de:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 80173e2:	9b04      	ldr	r3, [sp, #16]
 80173e4:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 80173e8:	9b05      	ldr	r3, [sp, #20]
 80173ea:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80173ee:	a90e      	add	r1, sp, #56	; 0x38
 80173f0:	9b06      	ldr	r3, [sp, #24]
 80173f2:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80173f6:	a80c      	add	r0, sp, #48	; 0x30
 80173f8:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 80173fc:	f7f9 fcc2 	bl	8010d84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017400:	4640      	mov	r0, r8
 8017402:	f7f9 fc97 	bl	8010d34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017406:	a80e      	add	r0, sp, #56	; 0x38
 8017408:	f7f9 fc94 	bl	8010d34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801740c:	4b38      	ldr	r3, [pc, #224]	; (80174f0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 801740e:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 8017412:	881b      	ldrh	r3, [r3, #0]
 8017414:	9307      	str	r3, [sp, #28]
 8017416:	682b      	ldr	r3, [r5, #0]
 8017418:	f8df b0d8 	ldr.w	fp, [pc, #216]	; 80174f4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801741c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801741e:	4628      	mov	r0, r5
 8017420:	4798      	blx	r3
 8017422:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
 8017426:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 801742a:	4681      	mov	r9, r0
 801742c:	fb1a 3305 	smlabb	r3, sl, r5, r3
 8017430:	f8db 0000 	ldr.w	r0, [fp]
 8017434:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8017436:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801743a:	6803      	ldr	r3, [r0, #0]
 801743c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801743e:	4798      	blx	r3
 8017440:	4607      	mov	r7, r0
 8017442:	f8db 0000 	ldr.w	r0, [fp]
 8017446:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 801744a:	6803      	ldr	r3, [r0, #0]
 801744c:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8017450:	9109      	str	r1, [sp, #36]	; 0x24
 8017452:	9208      	str	r2, [sp, #32]
 8017454:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017456:	4798      	blx	r3
 8017458:	f010 0f01 	tst.w	r0, #1
 801745c:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8017460:	d012      	beq.n	8017488 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 8017462:	f8db 0000 	ldr.w	r0, [fp]
 8017466:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 801746a:	6803      	ldr	r3, [r0, #0]
 801746c:	9200      	str	r2, [sp, #0]
 801746e:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 8017470:	e898 0006 	ldmia.w	r8, {r1, r2}
 8017474:	462b      	mov	r3, r5
 8017476:	47b0      	blx	r6
 8017478:	9b03      	ldr	r3, [sp, #12]
 801747a:	8023      	strh	r3, [r4, #0]
 801747c:	9b04      	ldr	r3, [sp, #16]
 801747e:	8063      	strh	r3, [r4, #2]
 8017480:	9b05      	ldr	r3, [sp, #20]
 8017482:	80a3      	strh	r3, [r4, #4]
 8017484:	9b06      	ldr	r3, [sp, #24]
 8017486:	e78b      	b.n	80173a0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 8017488:	fb09 f202 	mul.w	r2, r9, r2
 801748c:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 8017490:	440f      	add	r7, r1
 8017492:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 8017496:	b166      	cbz	r6, 80174b2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 8017498:	9a07      	ldr	r2, [sp, #28]
 801749a:	4592      	cmp	sl, r2
 801749c:	d109      	bne.n	80174b2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801749e:	f8db 0000 	ldr.w	r0, [fp]
 80174a2:	6802      	ldr	r2, [r0, #0]
 80174a4:	fb09 f303 	mul.w	r3, r9, r3
 80174a8:	6b56      	ldr	r6, [r2, #52]	; 0x34
 80174aa:	4629      	mov	r1, r5
 80174ac:	463a      	mov	r2, r7
 80174ae:	47b0      	blx	r6
 80174b0:	e7e2      	b.n	8017478 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 80174b2:	fb0a f303 	mul.w	r3, sl, r3
 80174b6:	f8df b03c 	ldr.w	fp, [pc, #60]	; 80174f4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 80174ba:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 80174be:	ea4f 064a 	mov.w	r6, sl, lsl #1
 80174c2:	4545      	cmp	r5, r8
 80174c4:	d2d8      	bcs.n	8017478 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 80174c6:	f8db 0000 	ldr.w	r0, [fp]
 80174ca:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 80174ce:	6802      	ldr	r2, [r0, #0]
 80174d0:	4629      	mov	r1, r5
 80174d2:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 80174d6:	005b      	lsls	r3, r3, #1
 80174d8:	463a      	mov	r2, r7
 80174da:	47d0      	blx	sl
 80174dc:	444f      	add	r7, r9
 80174de:	4435      	add	r5, r6
 80174e0:	e7ef      	b.n	80174c2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 80174e2:	bf00      	nop
 80174e4:	200155ac 	.word	0x200155ac
 80174e8:	200155ae 	.word	0x200155ae
 80174ec:	200155b0 	.word	0x200155b0
 80174f0:	200155b2 	.word	0x200155b2
 80174f4:	200155b8 	.word	0x200155b8

080174f8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 80174f8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80174fa:	4606      	mov	r6, r0
 80174fc:	b087      	sub	sp, #28
 80174fe:	460c      	mov	r4, r1
 8017500:	4617      	mov	r7, r2
 8017502:	461d      	mov	r5, r3
 8017504:	b333      	cbz	r3, 8017554 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8017506:	4608      	mov	r0, r1
 8017508:	f7f3 fc83 	bl	800ae12 <_ZNK8touchgfx4Rect7isEmptyEv>
 801750c:	bb10      	cbnz	r0, 8017554 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801750e:	6820      	ldr	r0, [r4, #0]
 8017510:	6861      	ldr	r1, [r4, #4]
 8017512:	4c1c      	ldr	r4, [pc, #112]	; (8017584 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 8017514:	ab04      	add	r3, sp, #16
 8017516:	c303      	stmia	r3!, {r0, r1}
 8017518:	a804      	add	r0, sp, #16
 801751a:	f7f9 fc0b 	bl	8010d34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801751e:	6820      	ldr	r0, [r4, #0]
 8017520:	6803      	ldr	r3, [r0, #0]
 8017522:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017524:	4798      	blx	r3
 8017526:	2dff      	cmp	r5, #255	; 0xff
 8017528:	d016      	beq.n	8017558 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 801752a:	f010 0f08 	tst.w	r0, #8
 801752e:	6820      	ldr	r0, [r4, #0]
 8017530:	d015      	beq.n	801755e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 8017532:	2400      	movs	r4, #0
 8017534:	6801      	ldr	r1, [r0, #0]
 8017536:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801753a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801753e:	e9cd 5402 	strd	r5, r4, [sp, #8]
 8017542:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 8017546:	9401      	str	r4, [sp, #4]
 8017548:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 801754c:	9400      	str	r4, [sp, #0]
 801754e:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 8017550:	4639      	mov	r1, r7
 8017552:	47a0      	blx	r4
 8017554:	b007      	add	sp, #28
 8017556:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8017558:	f010 0f02 	tst.w	r0, #2
 801755c:	e7e7      	b.n	801752e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 801755e:	6803      	ldr	r3, [r0, #0]
 8017560:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017562:	4798      	blx	r3
 8017564:	4b08      	ldr	r3, [pc, #32]	; (8017588 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 8017566:	881a      	ldrh	r2, [r3, #0]
 8017568:	6833      	ldr	r3, [r6, #0]
 801756a:	e9cd 7500 	strd	r7, r5, [sp]
 801756e:	4601      	mov	r1, r0
 8017570:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 8017572:	4630      	mov	r0, r6
 8017574:	ab04      	add	r3, sp, #16
 8017576:	47a8      	blx	r5
 8017578:	6820      	ldr	r0, [r4, #0]
 801757a:	6803      	ldr	r3, [r0, #0]
 801757c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801757e:	4798      	blx	r3
 8017580:	e7e8      	b.n	8017554 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8017582:	bf00      	nop
 8017584:	200155b8 	.word	0x200155b8
 8017588:	200155b2 	.word	0x200155b2

0801758c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 801758c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017590:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 8017594:	9e08      	ldr	r6, [sp, #32]
 8017596:	4688      	mov	r8, r1
 8017598:	4614      	mov	r4, r2
 801759a:	461d      	mov	r5, r3
 801759c:	2f00      	cmp	r7, #0
 801759e:	f000 80a9 	beq.w	80176f4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 80175a2:	4618      	mov	r0, r3
 80175a4:	f7f3 fc35 	bl	800ae12 <_ZNK8touchgfx4Rect7isEmptyEv>
 80175a8:	2800      	cmp	r0, #0
 80175aa:	f040 80a3 	bne.w	80176f4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 80175ae:	f9b5 1000 	ldrsh.w	r1, [r5]
 80175b2:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 80175b6:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 80175ba:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 80175be:	fb04 1303 	mla	r3, r4, r3, r1
 80175c2:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 80175c6:	4365      	muls	r5, r4
 80175c8:	2fff      	cmp	r7, #255	; 0xff
 80175ca:	eba4 0200 	sub.w	r2, r4, r0
 80175ce:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 80175d2:	ea4f 2816 	mov.w	r8, r6, lsr #8
 80175d6:	d04a      	beq.n	801766e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 80175d8:	b2bc      	uxth	r4, r7
 80175da:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 80175de:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 80175e2:	fa5f f788 	uxtb.w	r7, r8
 80175e6:	b2f3      	uxtb	r3, r6
 80175e8:	0040      	lsls	r0, r0, #1
 80175ea:	fb0e fe04 	mul.w	lr, lr, r4
 80175ee:	4367      	muls	r7, r4
 80175f0:	4363      	muls	r3, r4
 80175f2:	ea4f 0842 	mov.w	r8, r2, lsl #1
 80175f6:	fa1f fc8c 	uxth.w	ip, ip
 80175fa:	42a9      	cmp	r1, r5
 80175fc:	d27a      	bcs.n	80176f4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 80175fe:	eb01 0900 	add.w	r9, r1, r0
 8017602:	4549      	cmp	r1, r9
 8017604:	d231      	bcs.n	801766a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 8017606:	880a      	ldrh	r2, [r1, #0]
 8017608:	1214      	asrs	r4, r2, #8
 801760a:	10d6      	asrs	r6, r2, #3
 801760c:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8017610:	00d2      	lsls	r2, r2, #3
 8017612:	b2d2      	uxtb	r2, r2
 8017614:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8017618:	fb14 f40c 	smulbb	r4, r4, ip
 801761c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8017620:	4474      	add	r4, lr
 8017622:	fb12 f20c 	smulbb	r2, r2, ip
 8017626:	b2a4      	uxth	r4, r4
 8017628:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801762c:	441a      	add	r2, r3
 801762e:	b292      	uxth	r2, r2
 8017630:	f104 0a01 	add.w	sl, r4, #1
 8017634:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8017638:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801763c:	fb16 f60c 	smulbb	r6, r6, ip
 8017640:	f102 0a01 	add.w	sl, r2, #1
 8017644:	443e      	add	r6, r7
 8017646:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 801764a:	b2b6      	uxth	r6, r6
 801764c:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8017650:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8017654:	4322      	orrs	r2, r4
 8017656:	1c74      	adds	r4, r6, #1
 8017658:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 801765c:	0976      	lsrs	r6, r6, #5
 801765e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8017662:	4332      	orrs	r2, r6
 8017664:	f821 2b02 	strh.w	r2, [r1], #2
 8017668:	e7cb      	b.n	8017602 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 801766a:	4441      	add	r1, r8
 801766c:	e7c5      	b.n	80175fa <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 801766e:	4f22      	ldr	r7, [pc, #136]	; (80176f8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 8017670:	0973      	lsrs	r3, r6, #5
 8017672:	ea08 0707 	and.w	r7, r8, r7
 8017676:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801767a:	433b      	orrs	r3, r7
 801767c:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8017680:	4333      	orrs	r3, r6
 8017682:	07e7      	lsls	r7, r4, #31
 8017684:	b29b      	uxth	r3, r3
 8017686:	d50b      	bpl.n	80176a0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 8017688:	0040      	lsls	r0, r0, #1
 801768a:	0052      	lsls	r2, r2, #1
 801768c:	42a9      	cmp	r1, r5
 801768e:	d231      	bcs.n	80176f4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8017690:	180c      	adds	r4, r1, r0
 8017692:	42a1      	cmp	r1, r4
 8017694:	d202      	bcs.n	801769c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 8017696:	f821 3b02 	strh.w	r3, [r1], #2
 801769a:	e7fa      	b.n	8017692 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 801769c:	4411      	add	r1, r2
 801769e:	e7f5      	b.n	801768c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 80176a0:	078e      	lsls	r6, r1, #30
 80176a2:	d008      	beq.n	80176b6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 80176a4:	0066      	lsls	r6, r4, #1
 80176a6:	460a      	mov	r2, r1
 80176a8:	42aa      	cmp	r2, r5
 80176aa:	d202      	bcs.n	80176b2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 80176ac:	8013      	strh	r3, [r2, #0]
 80176ae:	4432      	add	r2, r6
 80176b0:	e7fa      	b.n	80176a8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 80176b2:	3102      	adds	r1, #2
 80176b4:	3801      	subs	r0, #1
 80176b6:	07c2      	lsls	r2, r0, #31
 80176b8:	d50b      	bpl.n	80176d2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 80176ba:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 80176be:	3a01      	subs	r2, #1
 80176c0:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 80176c4:	0066      	lsls	r6, r4, #1
 80176c6:	42aa      	cmp	r2, r5
 80176c8:	d202      	bcs.n	80176d0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 80176ca:	8013      	strh	r3, [r2, #0]
 80176cc:	4432      	add	r2, r6
 80176ce:	e7fa      	b.n	80176c6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 80176d0:	3801      	subs	r0, #1
 80176d2:	b178      	cbz	r0, 80176f4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 80176d4:	1040      	asrs	r0, r0, #1
 80176d6:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 80176da:	0080      	lsls	r0, r0, #2
 80176dc:	0064      	lsls	r4, r4, #1
 80176de:	42a9      	cmp	r1, r5
 80176e0:	d208      	bcs.n	80176f4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 80176e2:	180e      	adds	r6, r1, r0
 80176e4:	460a      	mov	r2, r1
 80176e6:	42b2      	cmp	r2, r6
 80176e8:	d202      	bcs.n	80176f0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 80176ea:	f842 3b04 	str.w	r3, [r2], #4
 80176ee:	e7fa      	b.n	80176e6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 80176f0:	4421      	add	r1, r4
 80176f2:	e7f4      	b.n	80176de <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 80176f4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80176f8:	00fff800 	.word	0x00fff800

080176fc <_ZN8touchgfx8LCD16bppC1Ev>:
 80176fc:	2200      	movs	r2, #0
 80176fe:	4910      	ldr	r1, [pc, #64]	; (8017740 <_ZN8touchgfx8LCD16bppC1Ev+0x44>)
 8017700:	6042      	str	r2, [r0, #4]
 8017702:	6001      	str	r1, [r0, #0]
 8017704:	e9c0 2202 	strd	r2, r2, [r0, #8]
 8017708:	e9c0 2204 	strd	r2, r2, [r0, #16]
 801770c:	e9c0 2206 	strd	r2, r2, [r0, #24]
 8017710:	e9c0 2208 	strd	r2, r2, [r0, #32]
 8017714:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 8017718:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 801771c:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 8017720:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 8017724:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 8017728:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 801772c:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 8017730:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 8017734:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 8017738:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 801773c:	4770      	bx	lr
 801773e:	bf00      	nop
 8017740:	0802464c 	.word	0x0802464c

08017744 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 8017744:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017748:	460d      	mov	r5, r1
 801774a:	b08d      	sub	sp, #52	; 0x34
 801774c:	4604      	mov	r4, r0
 801774e:	6808      	ldr	r0, [r1, #0]
 8017750:	6849      	ldr	r1, [r1, #4]
 8017752:	4699      	mov	r9, r3
 8017754:	ab08      	add	r3, sp, #32
 8017756:	c303      	stmia	r3!, {r0, r1}
 8017758:	6810      	ldr	r0, [r2, #0]
 801775a:	6851      	ldr	r1, [r2, #4]
 801775c:	ab0a      	add	r3, sp, #40	; 0x28
 801775e:	c303      	stmia	r3!, {r0, r1}
 8017760:	a808      	add	r0, sp, #32
 8017762:	f7f9 fae7 	bl	8010d34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017766:	4629      	mov	r1, r5
 8017768:	a80a      	add	r0, sp, #40	; 0x28
 801776a:	f7f9 fb0b 	bl	8010d84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801776e:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8017772:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 8017776:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 801777a:	4d63      	ldr	r5, [pc, #396]	; (8017908 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801777c:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 8017780:	6828      	ldr	r0, [r5, #0]
 8017782:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 8017786:	fb11 2103 	smlabb	r1, r1, r3, r2
 801778a:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801778e:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 8017792:	440a      	add	r2, r1
 8017794:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8017798:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 801779c:	4413      	add	r3, r2
 801779e:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 80177a2:	6803      	ldr	r3, [r0, #0]
 80177a4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80177a6:	4798      	blx	r3
 80177a8:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80177ac:	d119      	bne.n	80177e2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 80177ae:	f010 0f20 	tst.w	r0, #32
 80177b2:	6828      	ldr	r0, [r5, #0]
 80177b4:	d018      	beq.n	80177e8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 80177b6:	2500      	movs	r5, #0
 80177b8:	6801      	ldr	r1, [r0, #0]
 80177ba:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 80177be:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 80177c2:	e9cd 9503 	strd	r9, r5, [sp, #12]
 80177c6:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 80177ca:	9502      	str	r5, [sp, #8]
 80177cc:	b2b6      	uxth	r6, r6
 80177ce:	fa1f f588 	uxth.w	r5, r8
 80177d2:	9601      	str	r6, [sp, #4]
 80177d4:	9500      	str	r5, [sp, #0]
 80177d6:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 80177d8:	4621      	mov	r1, r4
 80177da:	47a8      	blx	r5
 80177dc:	b00d      	add	sp, #52	; 0x34
 80177de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80177e2:	f010 0f40 	tst.w	r0, #64	; 0x40
 80177e6:	e7e4      	b.n	80177b2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 80177e8:	6803      	ldr	r3, [r0, #0]
 80177ea:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80177ec:	4798      	blx	r3
 80177ee:	4947      	ldr	r1, [pc, #284]	; (801790c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 80177f0:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 80177f4:	880b      	ldrh	r3, [r1, #0]
 80177f6:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 80177fa:	fb03 5202 	mla	r2, r3, r2, r5
 80177fe:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8017802:	4373      	muls	r3, r6
 8017804:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8017808:	9307      	str	r3, [sp, #28]
 801780a:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801780e:	9306      	str	r3, [sp, #24]
 8017810:	468a      	mov	sl, r1
 8017812:	9b07      	ldr	r3, [sp, #28]
 8017814:	4298      	cmp	r0, r3
 8017816:	d270      	bcs.n	80178fa <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 8017818:	9b06      	ldr	r3, [sp, #24]
 801781a:	4621      	mov	r1, r4
 801781c:	eb00 0b03 	add.w	fp, r0, r3
 8017820:	4558      	cmp	r0, fp
 8017822:	d25d      	bcs.n	80178e0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 8017824:	f851 4b04 	ldr.w	r4, [r1], #4
 8017828:	0e23      	lsrs	r3, r4, #24
 801782a:	d014      	beq.n	8017856 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801782c:	2bff      	cmp	r3, #255	; 0xff
 801782e:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 8017832:	d112      	bne.n	801785a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8017834:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8017838:	d10f      	bne.n	801785a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801783a:	0963      	lsrs	r3, r4, #5
 801783c:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8017840:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017844:	f02c 0c07 	bic.w	ip, ip, #7
 8017848:	ea43 0c0c 	orr.w	ip, r3, ip
 801784c:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8017850:	ea4c 0404 	orr.w	r4, ip, r4
 8017854:	8004      	strh	r4, [r0, #0]
 8017856:	3002      	adds	r0, #2
 8017858:	e7e2      	b.n	8017820 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 801785a:	fb09 f303 	mul.w	r3, r9, r3
 801785e:	8807      	ldrh	r7, [r0, #0]
 8017860:	1c5a      	adds	r2, r3, #1
 8017862:	eb02 2223 	add.w	r2, r2, r3, asr #8
 8017866:	1212      	asrs	r2, r2, #8
 8017868:	123e      	asrs	r6, r7, #8
 801786a:	b293      	uxth	r3, r2
 801786c:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 8017870:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8017874:	43d2      	mvns	r2, r2
 8017876:	b2d2      	uxtb	r2, r2
 8017878:	10fd      	asrs	r5, r7, #3
 801787a:	fb1e fe03 	smulbb	lr, lr, r3
 801787e:	00ff      	lsls	r7, r7, #3
 8017880:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8017884:	fb06 e602 	mla	r6, r6, r2, lr
 8017888:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801788c:	b2ff      	uxtb	r7, r7
 801788e:	fa5f fc8c 	uxtb.w	ip, ip
 8017892:	b2e4      	uxtb	r4, r4
 8017894:	b2b6      	uxth	r6, r6
 8017896:	fb1c fc03 	smulbb	ip, ip, r3
 801789a:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801789e:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 80178a2:	fb14 f403 	smulbb	r4, r4, r3
 80178a6:	fb05 c502 	mla	r5, r5, r2, ip
 80178aa:	f106 0e01 	add.w	lr, r6, #1
 80178ae:	fb07 4702 	mla	r7, r7, r2, r4
 80178b2:	b2ad      	uxth	r5, r5
 80178b4:	b2bf      	uxth	r7, r7
 80178b6:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 80178ba:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 80178be:	f105 0c01 	add.w	ip, r5, #1
 80178c2:	1c7e      	adds	r6, r7, #1
 80178c4:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 80178c8:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80178cc:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80178d0:	096d      	lsrs	r5, r5, #5
 80178d2:	ea46 060e 	orr.w	r6, r6, lr
 80178d6:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80178da:	432e      	orrs	r6, r5
 80178dc:	8006      	strh	r6, [r0, #0]
 80178de:	e7ba      	b.n	8017856 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 80178e0:	f8ba 3000 	ldrh.w	r3, [sl]
 80178e4:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 80178e8:	eba3 0308 	sub.w	r3, r3, r8
 80178ec:	eba4 0408 	sub.w	r4, r4, r8
 80178f0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80178f4:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 80178f8:	e78b      	b.n	8017812 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 80178fa:	4b03      	ldr	r3, [pc, #12]	; (8017908 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 80178fc:	6818      	ldr	r0, [r3, #0]
 80178fe:	6803      	ldr	r3, [r0, #0]
 8017900:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017902:	4798      	blx	r3
 8017904:	e76a      	b.n	80177dc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 8017906:	bf00      	nop
 8017908:	200155b8 	.word	0x200155b8
 801790c:	200155b2 	.word	0x200155b2

08017910 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 8017910:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8017914:	460c      	mov	r4, r1
 8017916:	b085      	sub	sp, #20
 8017918:	6810      	ldr	r0, [r2, #0]
 801791a:	6851      	ldr	r1, [r2, #4]
 801791c:	466d      	mov	r5, sp
 801791e:	c503      	stmia	r5!, {r0, r1}
 8017920:	6818      	ldr	r0, [r3, #0]
 8017922:	6859      	ldr	r1, [r3, #4]
 8017924:	4616      	mov	r6, r2
 8017926:	c503      	stmia	r5!, {r0, r1}
 8017928:	4668      	mov	r0, sp
 801792a:	f7f9 fa03 	bl	8010d34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801792e:	4631      	mov	r1, r6
 8017930:	a802      	add	r0, sp, #8
 8017932:	f7f9 fa27 	bl	8010d84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017936:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 801793a:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 801793e:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8017942:	4d28      	ldr	r5, [pc, #160]	; (80179e4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 8017944:	4e28      	ldr	r6, [pc, #160]	; (80179e8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 8017946:	6828      	ldr	r0, [r5, #0]
 8017948:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801794c:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 8017950:	fb11 2103 	smlabb	r1, r1, r3, r2
 8017954:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8017958:	f8bd 1000 	ldrh.w	r1, [sp]
 801795c:	440a      	add	r2, r1
 801795e:	f8ad 2008 	strh.w	r2, [sp, #8]
 8017962:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8017966:	4413      	add	r3, r2
 8017968:	f8ad 300a 	strh.w	r3, [sp, #10]
 801796c:	6803      	ldr	r3, [r0, #0]
 801796e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017970:	4798      	blx	r3
 8017972:	8833      	ldrh	r3, [r6, #0]
 8017974:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 8017978:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801797c:	f8df e06c 	ldr.w	lr, [pc, #108]	; 80179ec <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 8017980:	fb03 1202 	mla	r2, r3, r2, r1
 8017984:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8017988:	fb08 f303 	mul.w	r3, r8, r3
 801798c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8017990:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 8017994:	4298      	cmp	r0, r3
 8017996:	d21d      	bcs.n	80179d4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 8017998:	eb00 080c 	add.w	r8, r0, ip
 801799c:	4540      	cmp	r0, r8
 801799e:	d20f      	bcs.n	80179c0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 80179a0:	f854 1b04 	ldr.w	r1, [r4], #4
 80179a4:	ea4f 1951 	mov.w	r9, r1, lsr #5
 80179a8:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 80179ac:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80179b0:	ea42 0209 	orr.w	r2, r2, r9
 80179b4:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 80179b8:	430a      	orrs	r2, r1
 80179ba:	f820 2b02 	strh.w	r2, [r0], #2
 80179be:	e7ed      	b.n	801799c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 80179c0:	8832      	ldrh	r2, [r6, #0]
 80179c2:	1bd2      	subs	r2, r2, r7
 80179c4:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80179c8:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 80179cc:	1bd2      	subs	r2, r2, r7
 80179ce:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 80179d2:	e7df      	b.n	8017994 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 80179d4:	6828      	ldr	r0, [r5, #0]
 80179d6:	6803      	ldr	r3, [r0, #0]
 80179d8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80179da:	4798      	blx	r3
 80179dc:	b005      	add	sp, #20
 80179de:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80179e2:	bf00      	nop
 80179e4:	200155b8 	.word	0x200155b8
 80179e8:	200155b2 	.word	0x200155b2
 80179ec:	fffff800 	.word	0xfffff800

080179f0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 80179f0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80179f4:	460e      	mov	r6, r1
 80179f6:	b08e      	sub	sp, #56	; 0x38
 80179f8:	4604      	mov	r4, r0
 80179fa:	6808      	ldr	r0, [r1, #0]
 80179fc:	6849      	ldr	r1, [r1, #4]
 80179fe:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 8017bd8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 8017a02:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 8017bdc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 8017a06:	461d      	mov	r5, r3
 8017a08:	ab0a      	add	r3, sp, #40	; 0x28
 8017a0a:	c303      	stmia	r3!, {r0, r1}
 8017a0c:	6810      	ldr	r0, [r2, #0]
 8017a0e:	6851      	ldr	r1, [r2, #4]
 8017a10:	ab0c      	add	r3, sp, #48	; 0x30
 8017a12:	c303      	stmia	r3!, {r0, r1}
 8017a14:	a80a      	add	r0, sp, #40	; 0x28
 8017a16:	f7f9 f98d 	bl	8010d34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017a1a:	4631      	mov	r1, r6
 8017a1c:	a80c      	add	r0, sp, #48	; 0x30
 8017a1e:	f7f9 f9b1 	bl	8010d84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017a22:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8017a26:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8017a2a:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8017a2e:	f8d8 0000 	ldr.w	r0, [r8]
 8017a32:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 8017a36:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 8017a3a:	fb11 2103 	smlabb	r1, r1, r3, r2
 8017a3e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8017a42:	440c      	add	r4, r1
 8017a44:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 8017a48:	440a      	add	r2, r1
 8017a4a:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8017a4e:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 8017a52:	4413      	add	r3, r2
 8017a54:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8017a58:	6803      	ldr	r3, [r0, #0]
 8017a5a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017a5c:	4798      	blx	r3
 8017a5e:	2dff      	cmp	r5, #255	; 0xff
 8017a60:	d124      	bne.n	8017aac <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 8017a62:	f010 0f01 	tst.w	r0, #1
 8017a66:	f8d8 0000 	ldr.w	r0, [r8]
 8017a6a:	d022      	beq.n	8017ab2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 8017a6c:	2100      	movs	r1, #0
 8017a6e:	f8d0 c000 	ldr.w	ip, [r0]
 8017a72:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8017a76:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 8017a7a:	e9cd 1107 	strd	r1, r1, [sp, #28]
 8017a7e:	f04f 0e01 	mov.w	lr, #1
 8017a82:	f8cd e018 	str.w	lr, [sp, #24]
 8017a86:	f8b9 e000 	ldrh.w	lr, [r9]
 8017a8a:	9503      	str	r5, [sp, #12]
 8017a8c:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 8017a90:	b2b6      	uxth	r6, r6
 8017a92:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8017a96:	9102      	str	r1, [sp, #8]
 8017a98:	b2bf      	uxth	r7, r7
 8017a9a:	9601      	str	r6, [sp, #4]
 8017a9c:	9700      	str	r7, [sp, #0]
 8017a9e:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 8017aa2:	4621      	mov	r1, r4
 8017aa4:	47a8      	blx	r5
 8017aa6:	b00e      	add	sp, #56	; 0x38
 8017aa8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017aac:	f010 0f04 	tst.w	r0, #4
 8017ab0:	e7d9      	b.n	8017a66 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 8017ab2:	6803      	ldr	r3, [r0, #0]
 8017ab4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017ab6:	4798      	blx	r3
 8017ab8:	f8b9 3000 	ldrh.w	r3, [r9]
 8017abc:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 8017ac0:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 8017ac4:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 8017ac8:	fb03 1202 	mla	r2, r3, r2, r1
 8017acc:	ebac 0c07 	sub.w	ip, ip, r7
 8017ad0:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8017ad4:	435e      	muls	r6, r3
 8017ad6:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 8017ada:	2dff      	cmp	r5, #255	; 0xff
 8017adc:	eba3 0707 	sub.w	r7, r3, r7
 8017ae0:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8017ae4:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8017ae8:	ea4f 0747 	mov.w	r7, r7, lsl #1
 8017aec:	d049      	beq.n	8017b82 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 8017aee:	43eb      	mvns	r3, r5
 8017af0:	fa1f f985 	uxth.w	r9, r5
 8017af4:	b2db      	uxtb	r3, r3
 8017af6:	42b0      	cmp	r0, r6
 8017af8:	d266      	bcs.n	8017bc8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8017afa:	eb00 0a0e 	add.w	sl, r0, lr
 8017afe:	4550      	cmp	r0, sl
 8017b00:	4621      	mov	r1, r4
 8017b02:	f104 0403 	add.w	r4, r4, #3
 8017b06:	d25b      	bcs.n	8017bc0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 8017b08:	8802      	ldrh	r2, [r0, #0]
 8017b0a:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8017b0e:	ea4f 2822 	mov.w	r8, r2, asr #8
 8017b12:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 8017b16:	fb11 f109 	smulbb	r1, r1, r9
 8017b1a:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 8017b1e:	10d5      	asrs	r5, r2, #3
 8017b20:	fb08 1803 	mla	r8, r8, r3, r1
 8017b24:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 8017b28:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8017b2c:	fb11 f109 	smulbb	r1, r1, r9
 8017b30:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8017b34:	fb05 1503 	mla	r5, r5, r3, r1
 8017b38:	00d2      	lsls	r2, r2, #3
 8017b3a:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8017b3e:	b2d2      	uxtb	r2, r2
 8017b40:	fb11 f109 	smulbb	r1, r1, r9
 8017b44:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8017b48:	fa1f f888 	uxth.w	r8, r8
 8017b4c:	fb02 1203 	mla	r2, r2, r3, r1
 8017b50:	b292      	uxth	r2, r2
 8017b52:	f108 0101 	add.w	r1, r8, #1
 8017b56:	b2ad      	uxth	r5, r5
 8017b58:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 8017b5c:	1c51      	adds	r1, r2, #1
 8017b5e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8017b62:	1c69      	adds	r1, r5, #1
 8017b64:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8017b68:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 8017b6c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8017b70:	096d      	lsrs	r5, r5, #5
 8017b72:	ea42 0208 	orr.w	r2, r2, r8
 8017b76:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8017b7a:	432a      	orrs	r2, r5
 8017b7c:	f820 2b02 	strh.w	r2, [r0], #2
 8017b80:	e7bd      	b.n	8017afe <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 8017b82:	4a14      	ldr	r2, [pc, #80]	; (8017bd4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 8017b84:	42b0      	cmp	r0, r6
 8017b86:	d21f      	bcs.n	8017bc8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8017b88:	eb00 050e 	add.w	r5, r0, lr
 8017b8c:	42a8      	cmp	r0, r5
 8017b8e:	4621      	mov	r1, r4
 8017b90:	f104 0403 	add.w	r4, r4, #3
 8017b94:	d210      	bcs.n	8017bb8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 8017b96:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 8017b9a:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8017b9e:	00db      	lsls	r3, r3, #3
 8017ba0:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 8017ba4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017ba8:	430b      	orrs	r3, r1
 8017baa:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8017bae:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 8017bb2:	f820 3b02 	strh.w	r3, [r0], #2
 8017bb6:	e7e9      	b.n	8017b8c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 8017bb8:	4438      	add	r0, r7
 8017bba:	eb01 040c 	add.w	r4, r1, ip
 8017bbe:	e7e1      	b.n	8017b84 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 8017bc0:	4438      	add	r0, r7
 8017bc2:	eb01 040c 	add.w	r4, r1, ip
 8017bc6:	e796      	b.n	8017af6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 8017bc8:	4b03      	ldr	r3, [pc, #12]	; (8017bd8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 8017bca:	6818      	ldr	r0, [r3, #0]
 8017bcc:	6803      	ldr	r3, [r0, #0]
 8017bce:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017bd0:	4798      	blx	r3
 8017bd2:	e768      	b.n	8017aa6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 8017bd4:	fffff800 	.word	0xfffff800
 8017bd8:	200155b8 	.word	0x200155b8
 8017bdc:	200155b2 	.word	0x200155b2

08017be0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 8017be0:	b4f0      	push	{r4, r5, r6, r7}
 8017be2:	4616      	mov	r6, r2
 8017be4:	2e01      	cmp	r6, #1
 8017be6:	461c      	mov	r4, r3
 8017be8:	460d      	mov	r5, r1
 8017bea:	9a04      	ldr	r2, [sp, #16]
 8017bec:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8017bf0:	f89d 7018 	ldrb.w	r7, [sp, #24]
 8017bf4:	d012      	beq.n	8017c1c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 8017bf6:	d303      	bcc.n	8017c00 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 8017bf8:	2e02      	cmp	r6, #2
 8017bfa:	d00a      	beq.n	8017c12 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 8017bfc:	bcf0      	pop	{r4, r5, r6, r7}
 8017bfe:	4770      	bx	lr
 8017c00:	6805      	ldr	r5, [r0, #0]
 8017c02:	e9cd 3704 	strd	r3, r7, [sp, #16]
 8017c06:	68ed      	ldr	r5, [r5, #12]
 8017c08:	4613      	mov	r3, r2
 8017c0a:	46ac      	mov	ip, r5
 8017c0c:	4622      	mov	r2, r4
 8017c0e:	bcf0      	pop	{r4, r5, r6, r7}
 8017c10:	4760      	bx	ip
 8017c12:	4621      	mov	r1, r4
 8017c14:	4628      	mov	r0, r5
 8017c16:	bcf0      	pop	{r4, r5, r6, r7}
 8017c18:	f7ff bd94 	b.w	8017744 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8017c1c:	4621      	mov	r1, r4
 8017c1e:	4628      	mov	r0, r5
 8017c20:	bcf0      	pop	{r4, r5, r6, r7}
 8017c22:	f7ff bee5 	b.w	80179f0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

08017c28 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 8017c28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017c2c:	4681      	mov	r9, r0
 8017c2e:	b093      	sub	sp, #76	; 0x4c
 8017c30:	6810      	ldr	r0, [r2, #0]
 8017c32:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 8017c36:	4f6d      	ldr	r7, [pc, #436]	; (8017dec <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 8017c38:	4688      	mov	r8, r1
 8017c3a:	6851      	ldr	r1, [r2, #4]
 8017c3c:	ac0e      	add	r4, sp, #56	; 0x38
 8017c3e:	c403      	stmia	r4!, {r0, r1}
 8017c40:	6818      	ldr	r0, [r3, #0]
 8017c42:	6859      	ldr	r1, [r3, #4]
 8017c44:	ac10      	add	r4, sp, #64	; 0x40
 8017c46:	4616      	mov	r6, r2
 8017c48:	c403      	stmia	r4!, {r0, r1}
 8017c4a:	a80e      	add	r0, sp, #56	; 0x38
 8017c4c:	f7f9 f872 	bl	8010d34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017c50:	4631      	mov	r1, r6
 8017c52:	a810      	add	r0, sp, #64	; 0x40
 8017c54:	f7f9 f896 	bl	8010d84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017c58:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 8017c5c:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 8017c60:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 8017c64:	4e62      	ldr	r6, [pc, #392]	; (8017df0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8017c66:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 8017c6a:	6830      	ldr	r0, [r6, #0]
 8017c6c:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 8017c70:	fb11 2103 	smlabb	r1, r1, r3, r2
 8017c74:	4489      	add	r9, r1
 8017c76:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 8017c7a:	440a      	add	r2, r1
 8017c7c:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8017c80:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8017c84:	4413      	add	r3, r2
 8017c86:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8017c8a:	6803      	ldr	r3, [r0, #0]
 8017c8c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017c8e:	4798      	blx	r3
 8017c90:	f010 0f80 	tst.w	r0, #128	; 0x80
 8017c94:	6830      	ldr	r0, [r6, #0]
 8017c96:	d01d      	beq.n	8017cd4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 8017c98:	2200      	movs	r2, #0
 8017c9a:	6801      	ldr	r1, [r0, #0]
 8017c9c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8017ca0:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8017ca4:	220b      	movs	r2, #11
 8017ca6:	9207      	str	r2, [sp, #28]
 8017ca8:	883a      	ldrh	r2, [r7, #0]
 8017caa:	9206      	str	r2, [sp, #24]
 8017cac:	2201      	movs	r2, #1
 8017cae:	e9cd a204 	strd	sl, r2, [sp, #16]
 8017cb2:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 8017cb6:	9203      	str	r2, [sp, #12]
 8017cb8:	b2a4      	uxth	r4, r4
 8017cba:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 8017cbe:	9200      	str	r2, [sp, #0]
 8017cc0:	b2ad      	uxth	r5, r5
 8017cc2:	9502      	str	r5, [sp, #8]
 8017cc4:	9401      	str	r4, [sp, #4]
 8017cc6:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 8017cc8:	4642      	mov	r2, r8
 8017cca:	4649      	mov	r1, r9
 8017ccc:	47a0      	blx	r4
 8017cce:	b013      	add	sp, #76	; 0x4c
 8017cd0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017cd4:	6803      	ldr	r3, [r0, #0]
 8017cd6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017cd8:	4798      	blx	r3
 8017cda:	883b      	ldrh	r3, [r7, #0]
 8017cdc:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 8017ce0:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 8017ce4:	fb03 1202 	mla	r2, r3, r2, r1
 8017ce8:	435d      	muls	r5, r3
 8017cea:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8017cee:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 8017cf2:	920c      	str	r2, [sp, #48]	; 0x30
 8017cf4:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 8017cf8:	1b12      	subs	r2, r2, r4
 8017cfa:	920d      	str	r2, [sp, #52]	; 0x34
 8017cfc:	0062      	lsls	r2, r4, #1
 8017cfe:	1b1c      	subs	r4, r3, r4
 8017d00:	0063      	lsls	r3, r4, #1
 8017d02:	920a      	str	r2, [sp, #40]	; 0x28
 8017d04:	930b      	str	r3, [sp, #44]	; 0x2c
 8017d06:	f04f 0e04 	mov.w	lr, #4
 8017d0a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8017d0c:	4298      	cmp	r0, r3
 8017d0e:	d266      	bcs.n	8017dde <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 8017d10:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017d12:	eb00 0b03 	add.w	fp, r0, r3
 8017d16:	4558      	cmp	r0, fp
 8017d18:	d25c      	bcs.n	8017dd4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 8017d1a:	f819 3b01 	ldrb.w	r3, [r9], #1
 8017d1e:	fb1e e303 	smlabb	r3, lr, r3, lr
 8017d22:	f858 2003 	ldr.w	r2, [r8, r3]
 8017d26:	0e11      	lsrs	r1, r2, #24
 8017d28:	d012      	beq.n	8017d50 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8017d2a:	29ff      	cmp	r1, #255	; 0xff
 8017d2c:	ea4f 2712 	mov.w	r7, r2, lsr #8
 8017d30:	d110      	bne.n	8017d54 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8017d32:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8017d36:	d10d      	bne.n	8017d54 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8017d38:	0953      	lsrs	r3, r2, #5
 8017d3a:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 8017d3e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017d42:	f027 0707 	bic.w	r7, r7, #7
 8017d46:	431f      	orrs	r7, r3
 8017d48:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8017d4c:	433a      	orrs	r2, r7
 8017d4e:	8002      	strh	r2, [r0, #0]
 8017d50:	3002      	adds	r0, #2
 8017d52:	e7e0      	b.n	8017d16 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 8017d54:	fb0a f101 	mul.w	r1, sl, r1
 8017d58:	8806      	ldrh	r6, [r0, #0]
 8017d5a:	1c4b      	adds	r3, r1, #1
 8017d5c:	eb03 2321 	add.w	r3, r3, r1, asr #8
 8017d60:	1235      	asrs	r5, r6, #8
 8017d62:	10f4      	asrs	r4, r6, #3
 8017d64:	121b      	asrs	r3, r3, #8
 8017d66:	00f6      	lsls	r6, r6, #3
 8017d68:	b299      	uxth	r1, r3
 8017d6a:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 8017d6e:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8017d72:	b2f6      	uxtb	r6, r6
 8017d74:	43db      	mvns	r3, r3
 8017d76:	b2d2      	uxtb	r2, r2
 8017d78:	b2db      	uxtb	r3, r3
 8017d7a:	fb1c fc01 	smulbb	ip, ip, r1
 8017d7e:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8017d82:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8017d86:	fb12 f201 	smulbb	r2, r2, r1
 8017d8a:	fb05 c503 	mla	r5, r5, r3, ip
 8017d8e:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8017d92:	b2ff      	uxtb	r7, r7
 8017d94:	fb06 2203 	mla	r2, r6, r3, r2
 8017d98:	b2ad      	uxth	r5, r5
 8017d9a:	fb17 f701 	smulbb	r7, r7, r1
 8017d9e:	b292      	uxth	r2, r2
 8017da0:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 8017da4:	fb04 7403 	mla	r4, r4, r3, r7
 8017da8:	f105 0c01 	add.w	ip, r5, #1
 8017dac:	1c57      	adds	r7, r2, #1
 8017dae:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8017db2:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8017db6:	b2a4      	uxth	r4, r4
 8017db8:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8017dbc:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8017dc0:	433d      	orrs	r5, r7
 8017dc2:	1c67      	adds	r7, r4, #1
 8017dc4:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 8017dc8:	0964      	lsrs	r4, r4, #5
 8017dca:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8017dce:	4325      	orrs	r5, r4
 8017dd0:	8005      	strh	r5, [r0, #0]
 8017dd2:	e7bd      	b.n	8017d50 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8017dd4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8017dd6:	4418      	add	r0, r3
 8017dd8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017dda:	4499      	add	r9, r3
 8017ddc:	e795      	b.n	8017d0a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 8017dde:	4b04      	ldr	r3, [pc, #16]	; (8017df0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8017de0:	6818      	ldr	r0, [r3, #0]
 8017de2:	6803      	ldr	r3, [r0, #0]
 8017de4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017de6:	4798      	blx	r3
 8017de8:	e771      	b.n	8017cce <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 8017dea:	bf00      	nop
 8017dec:	200155b2 	.word	0x200155b2
 8017df0:	200155b8 	.word	0x200155b8

08017df4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 8017df4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017df8:	b087      	sub	sp, #28
 8017dfa:	4680      	mov	r8, r0
 8017dfc:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 8017e00:	460d      	mov	r5, r1
 8017e02:	4614      	mov	r4, r2
 8017e04:	2e00      	cmp	r6, #0
 8017e06:	f000 80b9 	beq.w	8017f7c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 8017e0a:	6810      	ldr	r0, [r2, #0]
 8017e0c:	6851      	ldr	r1, [r2, #4]
 8017e0e:	af02      	add	r7, sp, #8
 8017e10:	c703      	stmia	r7!, {r0, r1}
 8017e12:	6818      	ldr	r0, [r3, #0]
 8017e14:	6859      	ldr	r1, [r3, #4]
 8017e16:	af04      	add	r7, sp, #16
 8017e18:	c703      	stmia	r7!, {r0, r1}
 8017e1a:	a802      	add	r0, sp, #8
 8017e1c:	f7f8 ff8a 	bl	8010d34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017e20:	4621      	mov	r1, r4
 8017e22:	a804      	add	r0, sp, #16
 8017e24:	f7f8 ffae 	bl	8010d84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017e28:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8017e2c:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8017e30:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 8017e34:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 8017e38:	fb14 2103 	smlabb	r1, r4, r3, r2
 8017e3c:	eb08 0401 	add.w	r4, r8, r1
 8017e40:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8017e44:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8017e48:	440a      	add	r2, r1
 8017e4a:	f8ad 2010 	strh.w	r2, [sp, #16]
 8017e4e:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8017e52:	4413      	add	r3, r2
 8017e54:	f8ad 3012 	strh.w	r3, [sp, #18]
 8017e58:	4b4a      	ldr	r3, [pc, #296]	; (8017f84 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8017e5a:	6818      	ldr	r0, [r3, #0]
 8017e5c:	6803      	ldr	r3, [r0, #0]
 8017e5e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017e60:	4798      	blx	r3
 8017e62:	4b49      	ldr	r3, [pc, #292]	; (8017f88 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 8017e64:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 8017e68:	881a      	ldrh	r2, [r3, #0]
 8017e6a:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 8017e6e:	2eff      	cmp	r6, #255	; 0xff
 8017e70:	fb02 c101 	mla	r1, r2, r1, ip
 8017e74:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8017e78:	fb02 f207 	mul.w	r2, r2, r7
 8017e7c:	f105 0104 	add.w	r1, r5, #4
 8017e80:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 8017e84:	461d      	mov	r5, r3
 8017e86:	d05a      	beq.n	8017f3e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 8017e88:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 8017e8c:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8017e90:	b2b6      	uxth	r6, r6
 8017e92:	fa1f fe8e 	uxth.w	lr, lr
 8017e96:	9301      	str	r3, [sp, #4]
 8017e98:	4282      	cmp	r2, r0
 8017e9a:	d96a      	bls.n	8017f72 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8017e9c:	eb00 0b0a 	add.w	fp, r0, sl
 8017ea0:	4583      	cmp	fp, r0
 8017ea2:	d940      	bls.n	8017f26 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 8017ea4:	f814 3b01 	ldrb.w	r3, [r4], #1
 8017ea8:	8805      	ldrh	r5, [r0, #0]
 8017eaa:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8017eae:	122f      	asrs	r7, r5, #8
 8017eb0:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8017eb4:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8017eb8:	fb17 f70e 	smulbb	r7, r7, lr
 8017ebc:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8017ec0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8017ec4:	00ed      	lsls	r5, r5, #3
 8017ec6:	fb0c 7c06 	mla	ip, ip, r6, r7
 8017eca:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8017ece:	10df      	asrs	r7, r3, #3
 8017ed0:	b2ed      	uxtb	r5, r5
 8017ed2:	00db      	lsls	r3, r3, #3
 8017ed4:	fa1f fc8c 	uxth.w	ip, ip
 8017ed8:	fb19 f90e 	smulbb	r9, r9, lr
 8017edc:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8017ee0:	b2db      	uxtb	r3, r3
 8017ee2:	fb15 f50e 	smulbb	r5, r5, lr
 8017ee6:	fb07 9706 	mla	r7, r7, r6, r9
 8017eea:	fb03 5306 	mla	r3, r3, r6, r5
 8017eee:	f10c 0901 	add.w	r9, ip, #1
 8017ef2:	b29b      	uxth	r3, r3
 8017ef4:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8017ef8:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 8017efc:	f103 0c01 	add.w	ip, r3, #1
 8017f00:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8017f04:	b2bf      	uxth	r7, r7
 8017f06:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8017f0a:	ea4c 0c09 	orr.w	ip, ip, r9
 8017f0e:	f107 0901 	add.w	r9, r7, #1
 8017f12:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 8017f16:	097f      	lsrs	r7, r7, #5
 8017f18:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8017f1c:	ea4c 0c07 	orr.w	ip, ip, r7
 8017f20:	f820 cb02 	strh.w	ip, [r0], #2
 8017f24:	e7bc      	b.n	8017ea0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 8017f26:	9b01      	ldr	r3, [sp, #4]
 8017f28:	881b      	ldrh	r3, [r3, #0]
 8017f2a:	eba3 0308 	sub.w	r3, r3, r8
 8017f2e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017f32:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8017f36:	eba3 0308 	sub.w	r3, r3, r8
 8017f3a:	441c      	add	r4, r3
 8017f3c:	e7ac      	b.n	8017e98 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 8017f3e:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8017f42:	4282      	cmp	r2, r0
 8017f44:	d915      	bls.n	8017f72 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8017f46:	eb00 060a 	add.w	r6, r0, sl
 8017f4a:	4286      	cmp	r6, r0
 8017f4c:	d906      	bls.n	8017f5c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 8017f4e:	f814 3b01 	ldrb.w	r3, [r4], #1
 8017f52:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8017f56:	f820 3b02 	strh.w	r3, [r0], #2
 8017f5a:	e7f6      	b.n	8017f4a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 8017f5c:	882b      	ldrh	r3, [r5, #0]
 8017f5e:	eba3 0308 	sub.w	r3, r3, r8
 8017f62:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017f66:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8017f6a:	eba3 0308 	sub.w	r3, r3, r8
 8017f6e:	441c      	add	r4, r3
 8017f70:	e7e7      	b.n	8017f42 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 8017f72:	4b04      	ldr	r3, [pc, #16]	; (8017f84 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8017f74:	6818      	ldr	r0, [r3, #0]
 8017f76:	6803      	ldr	r3, [r0, #0]
 8017f78:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017f7a:	4798      	blx	r3
 8017f7c:	b007      	add	sp, #28
 8017f7e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017f82:	bf00      	nop
 8017f84:	200155b8 	.word	0x200155b8
 8017f88:	200155b2 	.word	0x200155b2

08017f8c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 8017f8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017f90:	b091      	sub	sp, #68	; 0x44
 8017f92:	4680      	mov	r8, r0
 8017f94:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 8017f98:	460f      	mov	r7, r1
 8017f9a:	4614      	mov	r4, r2
 8017f9c:	2d00      	cmp	r5, #0
 8017f9e:	d051      	beq.n	8018044 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 8017fa0:	6810      	ldr	r0, [r2, #0]
 8017fa2:	6851      	ldr	r1, [r2, #4]
 8017fa4:	f8df 9200 	ldr.w	r9, [pc, #512]	; 80181a8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 8017fa8:	ae0c      	add	r6, sp, #48	; 0x30
 8017faa:	c603      	stmia	r6!, {r0, r1}
 8017fac:	6818      	ldr	r0, [r3, #0]
 8017fae:	6859      	ldr	r1, [r3, #4]
 8017fb0:	ae0e      	add	r6, sp, #56	; 0x38
 8017fb2:	c603      	stmia	r6!, {r0, r1}
 8017fb4:	a80c      	add	r0, sp, #48	; 0x30
 8017fb6:	f7f8 febd 	bl	8010d34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017fba:	4621      	mov	r1, r4
 8017fbc:	a80e      	add	r0, sp, #56	; 0x38
 8017fbe:	f7f8 fee1 	bl	8010d84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017fc2:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 8017fc6:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8017fca:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8017fce:	f8d9 0000 	ldr.w	r0, [r9]
 8017fd2:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 8017fd6:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 8017fda:	fb11 2103 	smlabb	r1, r1, r3, r2
 8017fde:	eb08 0401 	add.w	r4, r8, r1
 8017fe2:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 8017fe6:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 80181ac <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 8017fea:	440a      	add	r2, r1
 8017fec:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 8017ff0:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 8017ff4:	4413      	add	r3, r2
 8017ff6:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 8017ffa:	6803      	ldr	r3, [r0, #0]
 8017ffc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017ffe:	4798      	blx	r3
 8018000:	f010 0f80 	tst.w	r0, #128	; 0x80
 8018004:	f8d9 0000 	ldr.w	r0, [r9]
 8018008:	d01f      	beq.n	801804a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 801800a:	2200      	movs	r2, #0
 801800c:	6801      	ldr	r1, [r0, #0]
 801800e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8018012:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8018016:	220b      	movs	r2, #11
 8018018:	9207      	str	r2, [sp, #28]
 801801a:	f8b8 2000 	ldrh.w	r2, [r8]
 801801e:	9206      	str	r2, [sp, #24]
 8018020:	2201      	movs	r2, #1
 8018022:	e9cd 5204 	strd	r5, r2, [sp, #16]
 8018026:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 801802a:	9203      	str	r2, [sp, #12]
 801802c:	fa1f f28a 	uxth.w	r2, sl
 8018030:	9202      	str	r2, [sp, #8]
 8018032:	b2b6      	uxth	r6, r6
 8018034:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8018038:	9200      	str	r2, [sp, #0]
 801803a:	9601      	str	r6, [sp, #4]
 801803c:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 801803e:	463a      	mov	r2, r7
 8018040:	4621      	mov	r1, r4
 8018042:	47a8      	blx	r5
 8018044:	b011      	add	sp, #68	; 0x44
 8018046:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801804a:	6803      	ldr	r3, [r0, #0]
 801804c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801804e:	4798      	blx	r3
 8018050:	f8b8 2000 	ldrh.w	r2, [r8]
 8018054:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8018058:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 801805c:	2dff      	cmp	r5, #255	; 0xff
 801805e:	fb02 1303 	mla	r3, r2, r3, r1
 8018062:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018066:	ea4f 0946 	mov.w	r9, r6, lsl #1
 801806a:	fb0a fa02 	mul.w	sl, sl, r2
 801806e:	d062      	beq.n	8018136 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 8018070:	ea6f 0c05 	mvn.w	ip, r5
 8018074:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 8018078:	930a      	str	r3, [sp, #40]	; 0x28
 801807a:	b2ad      	uxth	r5, r5
 801807c:	fa5f fc8c 	uxtb.w	ip, ip
 8018080:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 8018084:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018086:	4298      	cmp	r0, r3
 8018088:	f080 8085 	bcs.w	8018196 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801808c:	eb00 0b09 	add.w	fp, r0, r9
 8018090:	4558      	cmp	r0, fp
 8018092:	d246      	bcs.n	8018122 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 8018094:	f814 eb01 	ldrb.w	lr, [r4], #1
 8018098:	2303      	movs	r3, #3
 801809a:	2204      	movs	r2, #4
 801809c:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 80180a0:	eb07 0a0e 	add.w	sl, r7, lr
 80180a4:	8803      	ldrh	r3, [r0, #0]
 80180a6:	f89a 8002 	ldrb.w	r8, [sl, #2]
 80180aa:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80180ae:	1219      	asrs	r1, r3, #8
 80180b0:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80180b4:	fb18 f805 	smulbb	r8, r8, r5
 80180b8:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 80180bc:	10da      	asrs	r2, r3, #3
 80180be:	fb01 810c 	mla	r1, r1, ip, r8
 80180c2:	00db      	lsls	r3, r3, #3
 80180c4:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80180c8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80180cc:	b2db      	uxtb	r3, r3
 80180ce:	fb18 f805 	smulbb	r8, r8, r5
 80180d2:	fb1e fe05 	smulbb	lr, lr, r5
 80180d6:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 80180da:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 80180de:	b289      	uxth	r1, r1
 80180e0:	fb02 820c 	mla	r2, r2, ip, r8
 80180e4:	fb03 e30c 	mla	r3, r3, ip, lr
 80180e8:	b292      	uxth	r2, r2
 80180ea:	b29b      	uxth	r3, r3
 80180ec:	f101 0801 	add.w	r8, r1, #1
 80180f0:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 80180f4:	f103 0e01 	add.w	lr, r3, #1
 80180f8:	f102 0801 	add.w	r8, r2, #1
 80180fc:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 8018100:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 8018104:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8018108:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801810c:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8018110:	ea4e 0101 	orr.w	r1, lr, r1
 8018114:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8018118:	ea41 0108 	orr.w	r1, r1, r8
 801811c:	f820 1b02 	strh.w	r1, [r0], #2
 8018120:	e7b6      	b.n	8018090 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 8018122:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018124:	881b      	ldrh	r3, [r3, #0]
 8018126:	1b9b      	subs	r3, r3, r6
 8018128:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801812c:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8018130:	1b9b      	subs	r3, r3, r6
 8018132:	441c      	add	r4, r3
 8018134:	e7a6      	b.n	8018084 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 8018136:	491b      	ldr	r1, [pc, #108]	; (80181a4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 8018138:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 801813c:	2203      	movs	r2, #3
 801813e:	2504      	movs	r5, #4
 8018140:	4550      	cmp	r0, sl
 8018142:	d228      	bcs.n	8018196 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8018144:	eb00 0c09 	add.w	ip, r0, r9
 8018148:	4560      	cmp	r0, ip
 801814a:	4623      	mov	r3, r4
 801814c:	d219      	bcs.n	8018182 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 801814e:	f893 e000 	ldrb.w	lr, [r3]
 8018152:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 8018156:	eb07 0b0e 	add.w	fp, r7, lr
 801815a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801815e:	f89b 3002 	ldrb.w	r3, [fp, #2]
 8018162:	f89b b001 	ldrb.w	fp, [fp, #1]
 8018166:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 801816a:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 801816e:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8018172:	ea43 030b 	orr.w	r3, r3, fp
 8018176:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 801817a:	3401      	adds	r4, #1
 801817c:	f820 3b02 	strh.w	r3, [r0], #2
 8018180:	e7e2      	b.n	8018148 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 8018182:	f8b8 3000 	ldrh.w	r3, [r8]
 8018186:	1b9b      	subs	r3, r3, r6
 8018188:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801818c:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8018190:	1b9b      	subs	r3, r3, r6
 8018192:	441c      	add	r4, r3
 8018194:	e7d4      	b.n	8018140 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 8018196:	4b04      	ldr	r3, [pc, #16]	; (80181a8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 8018198:	6818      	ldr	r0, [r3, #0]
 801819a:	6803      	ldr	r3, [r0, #0]
 801819c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801819e:	4798      	blx	r3
 80181a0:	e750      	b.n	8018044 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 80181a2:	bf00      	nop
 80181a4:	fffff800 	.word	0xfffff800
 80181a8:	200155b8 	.word	0x200155b8
 80181ac:	200155b2 	.word	0x200155b2

080181b0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 80181b0:	b430      	push	{r4, r5}
 80181b2:	780d      	ldrb	r5, [r1, #0]
 80181b4:	f89d 4008 	ldrb.w	r4, [sp, #8]
 80181b8:	2d01      	cmp	r5, #1
 80181ba:	d00a      	beq.n	80181d2 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x22>
 80181bc:	d305      	bcc.n	80181ca <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1a>
 80181be:	2d02      	cmp	r5, #2
 80181c0:	d10b      	bne.n	80181da <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x2a>
 80181c2:	9402      	str	r4, [sp, #8]
 80181c4:	bc30      	pop	{r4, r5}
 80181c6:	f7ff be15 	b.w	8017df4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 80181ca:	9402      	str	r4, [sp, #8]
 80181cc:	bc30      	pop	{r4, r5}
 80181ce:	f7ff bd2b 	b.w	8017c28 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 80181d2:	9402      	str	r4, [sp, #8]
 80181d4:	bc30      	pop	{r4, r5}
 80181d6:	f7ff bed9 	b.w	8017f8c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 80181da:	bc30      	pop	{r4, r5}
 80181dc:	4770      	bx	lr
	...

080181e0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 80181e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80181e4:	4604      	mov	r4, r0
 80181e6:	b087      	sub	sp, #28
 80181e8:	6810      	ldr	r0, [r2, #0]
 80181ea:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 80181ee:	f8df 9238 	ldr.w	r9, [pc, #568]	; 8018428 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 80181f2:	460e      	mov	r6, r1
 80181f4:	6851      	ldr	r1, [r2, #4]
 80181f6:	ad02      	add	r5, sp, #8
 80181f8:	c503      	stmia	r5!, {r0, r1}
 80181fa:	6818      	ldr	r0, [r3, #0]
 80181fc:	6859      	ldr	r1, [r3, #4]
 80181fe:	ad04      	add	r5, sp, #16
 8018200:	4617      	mov	r7, r2
 8018202:	c503      	stmia	r5!, {r0, r1}
 8018204:	a802      	add	r0, sp, #8
 8018206:	f7f8 fd95 	bl	8010d34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801820a:	4639      	mov	r1, r7
 801820c:	a804      	add	r0, sp, #16
 801820e:	f7f8 fdb9 	bl	8010d84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8018212:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8018216:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801821a:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 801821e:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8018222:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 8018226:	fb11 2103 	smlabb	r1, r1, r3, r2
 801822a:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801822e:	440e      	add	r6, r1
 8018230:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8018234:	440a      	add	r2, r1
 8018236:	f8ad 2010 	strh.w	r2, [sp, #16]
 801823a:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801823e:	4413      	add	r3, r2
 8018240:	f8ad 3012 	strh.w	r3, [sp, #18]
 8018244:	4b77      	ldr	r3, [pc, #476]	; (8018424 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 8018246:	6818      	ldr	r0, [r3, #0]
 8018248:	6803      	ldr	r3, [r0, #0]
 801824a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801824c:	4798      	blx	r3
 801824e:	f8b9 b000 	ldrh.w	fp, [r9]
 8018252:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8018256:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801825a:	fb0b 2303 	mla	r3, fp, r3, r2
 801825e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018262:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8018266:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801826a:	fb05 f50b 	mul.w	r5, r5, fp
 801826e:	9300      	str	r3, [sp, #0]
 8018270:	d069      	beq.n	8018346 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 8018272:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 8018276:	4558      	cmp	r0, fp
 8018278:	f080 80cc 	bcs.w	8018414 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801827c:	9b00      	ldr	r3, [sp, #0]
 801827e:	18c3      	adds	r3, r0, r3
 8018280:	9301      	str	r3, [sp, #4]
 8018282:	4631      	mov	r1, r6
 8018284:	9b01      	ldr	r3, [sp, #4]
 8018286:	4298      	cmp	r0, r3
 8018288:	d24f      	bcs.n	801832a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 801828a:	f811 2b01 	ldrb.w	r2, [r1], #1
 801828e:	2a00      	cmp	r2, #0
 8018290:	d048      	beq.n	8018324 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8018292:	fb0a f202 	mul.w	r2, sl, r2
 8018296:	1c53      	adds	r3, r2, #1
 8018298:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801829c:	121b      	asrs	r3, r3, #8
 801829e:	d041      	beq.n	8018324 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 80182a0:	8802      	ldrh	r2, [r0, #0]
 80182a2:	f8b4 c000 	ldrh.w	ip, [r4]
 80182a6:	b29e      	uxth	r6, r3
 80182a8:	1215      	asrs	r5, r2, #8
 80182aa:	43db      	mvns	r3, r3
 80182ac:	b2db      	uxtb	r3, r3
 80182ae:	ea4f 272c 	mov.w	r7, ip, asr #8
 80182b2:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80182b6:	fb15 f503 	smulbb	r5, r5, r3
 80182ba:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 80182be:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80182c2:	00d2      	lsls	r2, r2, #3
 80182c4:	fb07 5706 	mla	r7, r7, r6, r5
 80182c8:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 80182cc:	ea4f 05ec 	mov.w	r5, ip, asr #3
 80182d0:	b2d2      	uxtb	r2, r2
 80182d2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80182d6:	b2bf      	uxth	r7, r7
 80182d8:	fb1e fe03 	smulbb	lr, lr, r3
 80182dc:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80182e0:	fa5f fc8c 	uxtb.w	ip, ip
 80182e4:	fb12 f203 	smulbb	r2, r2, r3
 80182e8:	fb05 e506 	mla	r5, r5, r6, lr
 80182ec:	fb0c 2c06 	mla	ip, ip, r6, r2
 80182f0:	f107 0e01 	add.w	lr, r7, #1
 80182f4:	fa1f fc8c 	uxth.w	ip, ip
 80182f8:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 80182fc:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 8018300:	f10c 0701 	add.w	r7, ip, #1
 8018304:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8018308:	b2ad      	uxth	r5, r5
 801830a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801830e:	ea47 070e 	orr.w	r7, r7, lr
 8018312:	f105 0e01 	add.w	lr, r5, #1
 8018316:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801831a:	096d      	lsrs	r5, r5, #5
 801831c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8018320:	432f      	orrs	r7, r5
 8018322:	8007      	strh	r7, [r0, #0]
 8018324:	3002      	adds	r0, #2
 8018326:	3402      	adds	r4, #2
 8018328:	e7ac      	b.n	8018284 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 801832a:	f8b9 3000 	ldrh.w	r3, [r9]
 801832e:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8018332:	eba3 0308 	sub.w	r3, r3, r8
 8018336:	eba6 0608 	sub.w	r6, r6, r8
 801833a:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801833e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018342:	440e      	add	r6, r1
 8018344:	e797      	b.n	8018276 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 8018346:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801834a:	42a8      	cmp	r0, r5
 801834c:	d262      	bcs.n	8018414 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801834e:	9b00      	ldr	r3, [sp, #0]
 8018350:	4631      	mov	r1, r6
 8018352:	eb00 0b03 	add.w	fp, r0, r3
 8018356:	4558      	cmp	r0, fp
 8018358:	d24e      	bcs.n	80183f8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 801835a:	f811 3b01 	ldrb.w	r3, [r1], #1
 801835e:	b12b      	cbz	r3, 801836c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8018360:	2bff      	cmp	r3, #255	; 0xff
 8018362:	f8b4 e000 	ldrh.w	lr, [r4]
 8018366:	d104      	bne.n	8018372 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 8018368:	f8a0 e000 	strh.w	lr, [r0]
 801836c:	3002      	adds	r0, #2
 801836e:	3402      	adds	r4, #2
 8018370:	e7f1      	b.n	8018356 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 8018372:	8802      	ldrh	r2, [r0, #0]
 8018374:	b29f      	uxth	r7, r3
 8018376:	1216      	asrs	r6, r2, #8
 8018378:	43db      	mvns	r3, r3
 801837a:	b2db      	uxtb	r3, r3
 801837c:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8018380:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8018384:	fb16 f603 	smulbb	r6, r6, r3
 8018388:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801838c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8018390:	00d2      	lsls	r2, r2, #3
 8018392:	fb0c 6c07 	mla	ip, ip, r7, r6
 8018396:	b2d2      	uxtb	r2, r2
 8018398:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801839c:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80183a0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80183a4:	fb1a fa03 	smulbb	sl, sl, r3
 80183a8:	fa1f fc8c 	uxth.w	ip, ip
 80183ac:	fb12 f303 	smulbb	r3, r2, r3
 80183b0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80183b4:	fa5f fe8e 	uxtb.w	lr, lr
 80183b8:	fb06 a607 	mla	r6, r6, r7, sl
 80183bc:	f10c 0201 	add.w	r2, ip, #1
 80183c0:	fb0e 3307 	mla	r3, lr, r7, r3
 80183c4:	b2b6      	uxth	r6, r6
 80183c6:	b29b      	uxth	r3, r3
 80183c8:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 80183cc:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 80183d0:	f106 0a01 	add.w	sl, r6, #1
 80183d4:	f103 0c01 	add.w	ip, r3, #1
 80183d8:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 80183dc:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 80183e0:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80183e4:	0976      	lsrs	r6, r6, #5
 80183e6:	ea4c 0c02 	orr.w	ip, ip, r2
 80183ea:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80183ee:	ea4c 0c06 	orr.w	ip, ip, r6
 80183f2:	f8a0 c000 	strh.w	ip, [r0]
 80183f6:	e7b9      	b.n	801836c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 80183f8:	f8b9 3000 	ldrh.w	r3, [r9]
 80183fc:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8018400:	eba3 0308 	sub.w	r3, r3, r8
 8018404:	eba6 0608 	sub.w	r6, r6, r8
 8018408:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801840c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018410:	440e      	add	r6, r1
 8018412:	e79a      	b.n	801834a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 8018414:	4b03      	ldr	r3, [pc, #12]	; (8018424 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 8018416:	6818      	ldr	r0, [r3, #0]
 8018418:	6803      	ldr	r3, [r0, #0]
 801841a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801841c:	4798      	blx	r3
 801841e:	b007      	add	sp, #28
 8018420:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018424:	200155b8 	.word	0x200155b8
 8018428:	200155b2 	.word	0x200155b2

0801842c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 801842c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018430:	b089      	sub	sp, #36	; 0x24
 8018432:	4682      	mov	sl, r0
 8018434:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 8018438:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801843a:	460f      	mov	r7, r1
 801843c:	4691      	mov	r9, r2
 801843e:	4698      	mov	r8, r3
 8018440:	2e00      	cmp	r6, #0
 8018442:	d036      	beq.n	80184b2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8018444:	4608      	mov	r0, r1
 8018446:	f7fc f863 	bl	8014510 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801844a:	4605      	mov	r5, r0
 801844c:	4638      	mov	r0, r7
 801844e:	f7fc f893 	bl	8014578 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8018452:	f8ad 000e 	strh.w	r0, [sp, #14]
 8018456:	4638      	mov	r0, r7
 8018458:	f8ad 9008 	strh.w	r9, [sp, #8]
 801845c:	f8ad 500c 	strh.w	r5, [sp, #12]
 8018460:	f8ad 800a 	strh.w	r8, [sp, #10]
 8018464:	f7fc f940 	bl	80146e8 <_ZNK8touchgfx6Bitmap7getDataEv>
 8018468:	4605      	mov	r5, r0
 801846a:	4638      	mov	r0, r7
 801846c:	f7fc f96c 	bl	8014748 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8018470:	4681      	mov	r9, r0
 8018472:	4638      	mov	r0, r7
 8018474:	f7fc f9bc 	bl	80147f0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8018478:	280b      	cmp	r0, #11
 801847a:	d81a      	bhi.n	80184b2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 801847c:	e8df f000 	tbb	[pc, r0]
 8018480:	1906aebd 	.word	0x1906aebd
 8018484:	19191919 	.word	0x19191919
 8018488:	b5191919 	.word	0xb5191919
 801848c:	4bb0      	ldr	r3, [pc, #704]	; (8018750 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 801848e:	6818      	ldr	r0, [r3, #0]
 8018490:	6803      	ldr	r3, [r0, #0]
 8018492:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8018494:	4798      	blx	r3
 8018496:	2eff      	cmp	r6, #255	; 0xff
 8018498:	d121      	bne.n	80184de <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb2>
 801849a:	0683      	lsls	r3, r0, #26
 801849c:	d41f      	bmi.n	80184de <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb2>
 801849e:	4638      	mov	r0, r7
 80184a0:	f7fc f8ea 	bl	8014678 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 80184a4:	b940      	cbnz	r0, 80184b8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x8c>
 80184a6:	4623      	mov	r3, r4
 80184a8:	aa02      	add	r2, sp, #8
 80184aa:	4629      	mov	r1, r5
 80184ac:	4650      	mov	r0, sl
 80184ae:	f7ff fa2f 	bl	8017910 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 80184b2:	b009      	add	sp, #36	; 0x24
 80184b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80184b8:	f10d 0818 	add.w	r8, sp, #24
 80184bc:	4639      	mov	r1, r7
 80184be:	4640      	mov	r0, r8
 80184c0:	f7fc f88e 	bl	80145e0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80184c4:	e898 0003 	ldmia.w	r8, {r0, r1}
 80184c8:	af04      	add	r7, sp, #16
 80184ca:	e887 0003 	stmia.w	r7, {r0, r1}
 80184ce:	4638      	mov	r0, r7
 80184d0:	4621      	mov	r1, r4
 80184d2:	f7f2 fc5b 	bl	800ad8c <_ZN8touchgfx4RectaNERKS0_>
 80184d6:	4638      	mov	r0, r7
 80184d8:	f7f2 fc9b 	bl	800ae12 <_ZNK8touchgfx4Rect7isEmptyEv>
 80184dc:	b130      	cbz	r0, 80184ec <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc0>
 80184de:	4633      	mov	r3, r6
 80184e0:	4622      	mov	r2, r4
 80184e2:	a902      	add	r1, sp, #8
 80184e4:	4628      	mov	r0, r5
 80184e6:	f7ff f92d 	bl	8017744 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80184ea:	e7e2      	b.n	80184b2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 80184ec:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80184f0:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80184f4:	4293      	cmp	r3, r2
 80184f6:	dd12      	ble.n	801851e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf2>
 80184f8:	1a9b      	subs	r3, r3, r2
 80184fa:	f9b4 0000 	ldrsh.w	r0, [r4]
 80184fe:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8018502:	f8ad 0018 	strh.w	r0, [sp, #24]
 8018506:	f8ad 201a 	strh.w	r2, [sp, #26]
 801850a:	f8ad 101c 	strh.w	r1, [sp, #28]
 801850e:	f8ad 301e 	strh.w	r3, [sp, #30]
 8018512:	4642      	mov	r2, r8
 8018514:	4633      	mov	r3, r6
 8018516:	a902      	add	r1, sp, #8
 8018518:	4628      	mov	r0, r5
 801851a:	f7ff f913 	bl	8017744 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801851e:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8018522:	f9b4 2000 	ldrsh.w	r2, [r4]
 8018526:	4293      	cmp	r3, r2
 8018528:	dd12      	ble.n	8018550 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x124>
 801852a:	1a9b      	subs	r3, r3, r2
 801852c:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8018530:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8018534:	f8ad 2018 	strh.w	r2, [sp, #24]
 8018538:	f8ad 001a 	strh.w	r0, [sp, #26]
 801853c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8018540:	f8ad 101e 	strh.w	r1, [sp, #30]
 8018544:	23ff      	movs	r3, #255	; 0xff
 8018546:	4642      	mov	r2, r8
 8018548:	a902      	add	r1, sp, #8
 801854a:	4628      	mov	r0, r5
 801854c:	f7ff f8fa 	bl	8017744 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8018550:	463b      	mov	r3, r7
 8018552:	aa02      	add	r2, sp, #8
 8018554:	4629      	mov	r1, r5
 8018556:	4650      	mov	r0, sl
 8018558:	f7ff f9da 	bl	8017910 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801855c:	88a2      	ldrh	r2, [r4, #4]
 801855e:	8823      	ldrh	r3, [r4, #0]
 8018560:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8018564:	4413      	add	r3, r2
 8018566:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801856a:	440a      	add	r2, r1
 801856c:	b29b      	uxth	r3, r3
 801856e:	b292      	uxth	r2, r2
 8018570:	b211      	sxth	r1, r2
 8018572:	b218      	sxth	r0, r3
 8018574:	4288      	cmp	r0, r1
 8018576:	dd12      	ble.n	801859e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x172>
 8018578:	1a9b      	subs	r3, r3, r2
 801857a:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801857e:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 8018582:	f8ad 1018 	strh.w	r1, [sp, #24]
 8018586:	f8ad 301c 	strh.w	r3, [sp, #28]
 801858a:	f8ad 001e 	strh.w	r0, [sp, #30]
 801858e:	23ff      	movs	r3, #255	; 0xff
 8018590:	4642      	mov	r2, r8
 8018592:	a902      	add	r1, sp, #8
 8018594:	4628      	mov	r0, r5
 8018596:	f8ad 601a 	strh.w	r6, [sp, #26]
 801859a:	f7ff f8d3 	bl	8017744 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801859e:	88e2      	ldrh	r2, [r4, #6]
 80185a0:	8863      	ldrh	r3, [r4, #2]
 80185a2:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 80185a6:	4413      	add	r3, r2
 80185a8:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 80185ac:	440a      	add	r2, r1
 80185ae:	b29b      	uxth	r3, r3
 80185b0:	b292      	uxth	r2, r2
 80185b2:	b211      	sxth	r1, r2
 80185b4:	b218      	sxth	r0, r3
 80185b6:	4288      	cmp	r0, r1
 80185b8:	f77f af7b 	ble.w	80184b2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 80185bc:	1a9b      	subs	r3, r3, r2
 80185be:	f9b4 6000 	ldrsh.w	r6, [r4]
 80185c2:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80185c6:	f8ad 301e 	strh.w	r3, [sp, #30]
 80185ca:	f8ad 6018 	strh.w	r6, [sp, #24]
 80185ce:	f8ad 101a 	strh.w	r1, [sp, #26]
 80185d2:	f8ad 001c 	strh.w	r0, [sp, #28]
 80185d6:	23ff      	movs	r3, #255	; 0xff
 80185d8:	4642      	mov	r2, r8
 80185da:	e782      	b.n	80184e2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb6>
 80185dc:	4633      	mov	r3, r6
 80185de:	4622      	mov	r2, r4
 80185e0:	a902      	add	r1, sp, #8
 80185e2:	4628      	mov	r0, r5
 80185e4:	f7ff fa04 	bl	80179f0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 80185e8:	e763      	b.n	80184b2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 80185ea:	9600      	str	r6, [sp, #0]
 80185ec:	4623      	mov	r3, r4
 80185ee:	aa02      	add	r2, sp, #8
 80185f0:	4649      	mov	r1, r9
 80185f2:	4628      	mov	r0, r5
 80185f4:	f7ff fddc 	bl	80181b0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 80185f8:	e75b      	b.n	80184b2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 80185fa:	4638      	mov	r0, r7
 80185fc:	f7fc f83c 	bl	8014678 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8018600:	b950      	cbnz	r0, 8018618 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ec>
 8018602:	e9cd 6000 	strd	r6, r0, [sp]
 8018606:	f8da 3000 	ldr.w	r3, [sl]
 801860a:	aa02      	add	r2, sp, #8
 801860c:	68de      	ldr	r6, [r3, #12]
 801860e:	4629      	mov	r1, r5
 8018610:	4623      	mov	r3, r4
 8018612:	4650      	mov	r0, sl
 8018614:	47b0      	blx	r6
 8018616:	e74c      	b.n	80184b2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8018618:	f10d 0818 	add.w	r8, sp, #24
 801861c:	4639      	mov	r1, r7
 801861e:	4640      	mov	r0, r8
 8018620:	f7fb ffde 	bl	80145e0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8018624:	e898 0003 	ldmia.w	r8, {r0, r1}
 8018628:	af04      	add	r7, sp, #16
 801862a:	e887 0003 	stmia.w	r7, {r0, r1}
 801862e:	4638      	mov	r0, r7
 8018630:	4621      	mov	r1, r4
 8018632:	f7f2 fbab 	bl	800ad8c <_ZN8touchgfx4RectaNERKS0_>
 8018636:	4638      	mov	r0, r7
 8018638:	f7f2 fbeb 	bl	800ae12 <_ZNK8touchgfx4Rect7isEmptyEv>
 801863c:	b138      	cbz	r0, 801864e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x222>
 801863e:	9600      	str	r6, [sp, #0]
 8018640:	4623      	mov	r3, r4
 8018642:	aa02      	add	r2, sp, #8
 8018644:	4649      	mov	r1, r9
 8018646:	4628      	mov	r0, r5
 8018648:	f7ff fdca 	bl	80181e0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801864c:	e731      	b.n	80184b2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 801864e:	e9cd 6000 	strd	r6, r0, [sp]
 8018652:	f8da 3000 	ldr.w	r3, [sl]
 8018656:	aa02      	add	r2, sp, #8
 8018658:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801865c:	4629      	mov	r1, r5
 801865e:	463b      	mov	r3, r7
 8018660:	4650      	mov	r0, sl
 8018662:	47d8      	blx	fp
 8018664:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8018668:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801866c:	4293      	cmp	r3, r2
 801866e:	dd13      	ble.n	8018698 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26c>
 8018670:	f9b4 0000 	ldrsh.w	r0, [r4]
 8018674:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8018678:	f8ad 0018 	strh.w	r0, [sp, #24]
 801867c:	1a9b      	subs	r3, r3, r2
 801867e:	f8ad 201a 	strh.w	r2, [sp, #26]
 8018682:	f8ad 101c 	strh.w	r1, [sp, #28]
 8018686:	f8ad 301e 	strh.w	r3, [sp, #30]
 801868a:	9600      	str	r6, [sp, #0]
 801868c:	4643      	mov	r3, r8
 801868e:	aa02      	add	r2, sp, #8
 8018690:	4649      	mov	r1, r9
 8018692:	4628      	mov	r0, r5
 8018694:	f7ff fda4 	bl	80181e0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8018698:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801869c:	f9b4 2000 	ldrsh.w	r2, [r4]
 80186a0:	4293      	cmp	r3, r2
 80186a2:	dd13      	ble.n	80186cc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a0>
 80186a4:	1a9b      	subs	r3, r3, r2
 80186a6:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 80186aa:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 80186ae:	f8ad 2018 	strh.w	r2, [sp, #24]
 80186b2:	f8ad 001a 	strh.w	r0, [sp, #26]
 80186b6:	f8ad 301c 	strh.w	r3, [sp, #28]
 80186ba:	f8ad 101e 	strh.w	r1, [sp, #30]
 80186be:	9600      	str	r6, [sp, #0]
 80186c0:	4643      	mov	r3, r8
 80186c2:	aa02      	add	r2, sp, #8
 80186c4:	4649      	mov	r1, r9
 80186c6:	4628      	mov	r0, r5
 80186c8:	f7ff fd8a 	bl	80181e0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80186cc:	88a2      	ldrh	r2, [r4, #4]
 80186ce:	8823      	ldrh	r3, [r4, #0]
 80186d0:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 80186d4:	4413      	add	r3, r2
 80186d6:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80186da:	440a      	add	r2, r1
 80186dc:	b29b      	uxth	r3, r3
 80186de:	b292      	uxth	r2, r2
 80186e0:	b211      	sxth	r1, r2
 80186e2:	b218      	sxth	r0, r3
 80186e4:	4288      	cmp	r0, r1
 80186e6:	dd13      	ble.n	8018710 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e4>
 80186e8:	1a9b      	subs	r3, r3, r2
 80186ea:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 80186ee:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 80186f2:	f8ad 1018 	strh.w	r1, [sp, #24]
 80186f6:	f8ad 301c 	strh.w	r3, [sp, #28]
 80186fa:	f8ad 001e 	strh.w	r0, [sp, #30]
 80186fe:	9600      	str	r6, [sp, #0]
 8018700:	4643      	mov	r3, r8
 8018702:	aa02      	add	r2, sp, #8
 8018704:	4649      	mov	r1, r9
 8018706:	4628      	mov	r0, r5
 8018708:	f8ad 701a 	strh.w	r7, [sp, #26]
 801870c:	f7ff fd68 	bl	80181e0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8018710:	88e2      	ldrh	r2, [r4, #6]
 8018712:	8863      	ldrh	r3, [r4, #2]
 8018714:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8018718:	4413      	add	r3, r2
 801871a:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801871e:	440a      	add	r2, r1
 8018720:	b29b      	uxth	r3, r3
 8018722:	b292      	uxth	r2, r2
 8018724:	b211      	sxth	r1, r2
 8018726:	b218      	sxth	r0, r3
 8018728:	4288      	cmp	r0, r1
 801872a:	f77f aec2 	ble.w	80184b2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 801872e:	f9b4 7000 	ldrsh.w	r7, [r4]
 8018732:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8018736:	f8ad 7018 	strh.w	r7, [sp, #24]
 801873a:	1a9b      	subs	r3, r3, r2
 801873c:	f8ad 301e 	strh.w	r3, [sp, #30]
 8018740:	f8ad 101a 	strh.w	r1, [sp, #26]
 8018744:	f8ad 001c 	strh.w	r0, [sp, #28]
 8018748:	9600      	str	r6, [sp, #0]
 801874a:	4643      	mov	r3, r8
 801874c:	e779      	b.n	8018642 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x216>
 801874e:	bf00      	nop
 8018750:	200155b8 	.word	0x200155b8

08018754 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 8018754:	b180      	cbz	r0, 8018778 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 8018756:	2903      	cmp	r1, #3
 8018758:	d81c      	bhi.n	8018794 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801875a:	e8df f001 	tbb	[pc, r1]
 801875e:	1d02      	.short	0x1d02
 8018760:	1f08      	.short	0x1f08
 8018762:	4b10      	ldr	r3, [pc, #64]	; (80187a4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8018764:	8818      	ldrh	r0, [r3, #0]
 8018766:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801876a:	4240      	negs	r0, r0
 801876c:	4770      	bx	lr
 801876e:	4b0d      	ldr	r3, [pc, #52]	; (80187a4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8018770:	8818      	ldrh	r0, [r3, #0]
 8018772:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8018776:	4770      	bx	lr
 8018778:	2903      	cmp	r1, #3
 801877a:	d80b      	bhi.n	8018794 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801877c:	a301      	add	r3, pc, #4	; (adr r3, 8018784 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 801877e:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 8018782:	bf00      	nop
 8018784:	08018799 	.word	0x08018799
 8018788:	0801876f 	.word	0x0801876f
 801878c:	0801879d 	.word	0x0801879d
 8018790:	08018763 	.word	0x08018763
 8018794:	2000      	movs	r0, #0
 8018796:	4770      	bx	lr
 8018798:	2001      	movs	r0, #1
 801879a:	4770      	bx	lr
 801879c:	f04f 30ff 	mov.w	r0, #4294967295
 80187a0:	4770      	bx	lr
 80187a2:	bf00      	nop
 80187a4:	200155b2 	.word	0x200155b2

080187a8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 80187a8:	b180      	cbz	r0, 80187cc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 80187aa:	2903      	cmp	r1, #3
 80187ac:	d81c      	bhi.n	80187e8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 80187ae:	e8df f001 	tbb	[pc, r1]
 80187b2:	021d      	.short	0x021d
 80187b4:	071f      	.short	0x071f
 80187b6:	4b10      	ldr	r3, [pc, #64]	; (80187f8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 80187b8:	8818      	ldrh	r0, [r3, #0]
 80187ba:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80187be:	4770      	bx	lr
 80187c0:	4b0d      	ldr	r3, [pc, #52]	; (80187f8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 80187c2:	8818      	ldrh	r0, [r3, #0]
 80187c4:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80187c8:	4240      	negs	r0, r0
 80187ca:	4770      	bx	lr
 80187cc:	2903      	cmp	r1, #3
 80187ce:	d80b      	bhi.n	80187e8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 80187d0:	a301      	add	r3, pc, #4	; (adr r3, 80187d8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 80187d2:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 80187d6:	bf00      	nop
 80187d8:	080187b7 	.word	0x080187b7
 80187dc:	080187f1 	.word	0x080187f1
 80187e0:	080187c1 	.word	0x080187c1
 80187e4:	080187ed 	.word	0x080187ed
 80187e8:	2000      	movs	r0, #0
 80187ea:	4770      	bx	lr
 80187ec:	2001      	movs	r0, #1
 80187ee:	4770      	bx	lr
 80187f0:	f04f 30ff 	mov.w	r0, #4294967295
 80187f4:	4770      	bx	lr
 80187f6:	bf00      	nop
 80187f8:	200155b2 	.word	0x200155b2

080187fc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 80187fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018800:	b099      	sub	sp, #100	; 0x64
 8018802:	910b      	str	r1, [sp, #44]	; 0x2c
 8018804:	a914      	add	r1, sp, #80	; 0x50
 8018806:	e881 000c 	stmia.w	r1, {r2, r3}
 801880a:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 801880e:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 8018812:	f891 900d 	ldrb.w	r9, [r1, #13]
 8018816:	9309      	str	r3, [sp, #36]	; 0x24
 8018818:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801881c:	9310      	str	r3, [sp, #64]	; 0x40
 801881e:	ea4f 1749 	mov.w	r7, r9, lsl #5
 8018822:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 8018826:	930c      	str	r3, [sp, #48]	; 0x30
 8018828:	f407 7380 	and.w	r3, r7, #256	; 0x100
 801882c:	798f      	ldrb	r7, [r1, #6]
 801882e:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
 8018832:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 8018836:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
 801883a:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 801883e:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 8018842:	431f      	orrs	r7, r3
 8018844:	f000 8195 	beq.w	8018b72 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8018848:	ea4f 1909 	mov.w	r9, r9, lsl #4
 801884c:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8018850:	f891 9007 	ldrb.w	r9, [r1, #7]
 8018854:	ea59 0903 	orrs.w	r9, r9, r3
 8018858:	f000 818b 	beq.w	8018b72 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801885c:	f991 3009 	ldrsb.w	r3, [r1, #9]
 8018860:	b29b      	uxth	r3, r3
 8018862:	2d00      	cmp	r5, #0
 8018864:	f000 812e 	beq.w	8018ac4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 8018868:	1aed      	subs	r5, r5, r3
 801886a:	b2ad      	uxth	r5, r5
 801886c:	042b      	lsls	r3, r5, #16
 801886e:	d502      	bpl.n	8018876 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 8018870:	1b64      	subs	r4, r4, r5
 8018872:	b224      	sxth	r4, r4
 8018874:	2500      	movs	r5, #0
 8018876:	f9b2 1000 	ldrsh.w	r1, [r2]
 801887a:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 801887e:	428c      	cmp	r4, r1
 8018880:	b28b      	uxth	r3, r1
 8018882:	bfbf      	itttt	lt
 8018884:	18ed      	addlt	r5, r5, r3
 8018886:	1b2c      	sublt	r4, r5, r4
 8018888:	b2a5      	uxthlt	r5, r4
 801888a:	460c      	movlt	r4, r1
 801888c:	8891      	ldrh	r1, [r2, #4]
 801888e:	440b      	add	r3, r1
 8018890:	b21b      	sxth	r3, r3
 8018892:	930f      	str	r3, [sp, #60]	; 0x3c
 8018894:	88d3      	ldrh	r3, [r2, #6]
 8018896:	8852      	ldrh	r2, [r2, #2]
 8018898:	4413      	add	r3, r2
 801889a:	b21b      	sxth	r3, r3
 801889c:	930d      	str	r3, [sp, #52]	; 0x34
 801889e:	4bbe      	ldr	r3, [pc, #760]	; (8018b98 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 80188a0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80188a2:	f893 b000 	ldrb.w	fp, [r3]
 80188a6:	f10b 3cff 	add.w	ip, fp, #4294967295
 80188aa:	f1dc 0300 	rsbs	r3, ip, #0
 80188ae:	eb43 030c 	adc.w	r3, r3, ip
 80188b2:	930e      	str	r3, [sp, #56]	; 0x38
 80188b4:	4621      	mov	r1, r4
 80188b6:	4653      	mov	r3, sl
 80188b8:	a814      	add	r0, sp, #80	; 0x50
 80188ba:	f7f8 f8b5 	bl	8010a28 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 80188be:	4621      	mov	r1, r4
 80188c0:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 80188c4:	4653      	mov	r3, sl
 80188c6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80188c8:	a814      	add	r0, sp, #80	; 0x50
 80188ca:	f7f8 f8ca 	bl	8010a62 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 80188ce:	a918      	add	r1, sp, #96	; 0x60
 80188d0:	f821 0d02 	strh.w	r0, [r1, #-2]!
 80188d4:	a817      	add	r0, sp, #92	; 0x5c
 80188d6:	f7f8 f9eb 	bl	8010cb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 80188da:	f1ba 0f00 	cmp.w	sl, #0
 80188de:	f040 80f4 	bne.w	8018aca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 80188e2:	f1bb 0f01 	cmp.w	fp, #1
 80188e6:	f040 80f8 	bne.w	8018ada <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 80188ea:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80188ec:	2b00      	cmp	r3, #0
 80188ee:	f040 8145 	bne.w	8018b7c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 80188f2:	b2ba      	uxth	r2, r7
 80188f4:	b905      	cbnz	r5, 80188f8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 80188f6:	b16e      	cbz	r6, 8018914 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 80188f8:	fb06 5302 	mla	r3, r6, r2, r5
 80188fc:	9828      	ldr	r0, [sp, #160]	; 0xa0
 80188fe:	fb08 f303 	mul.w	r3, r8, r3
 8018902:	4631      	mov	r1, r6
 8018904:	f003 0607 	and.w	r6, r3, #7
 8018908:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 801890c:	9328      	str	r3, [sp, #160]	; 0xa0
 801890e:	eba9 0301 	sub.w	r3, r9, r1
 8018912:	930a      	str	r3, [sp, #40]	; 0x28
 8018914:	4651      	mov	r1, sl
 8018916:	980e      	ldr	r0, [sp, #56]	; 0x38
 8018918:	f7ff ff1c 	bl	8018754 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 801891c:	4681      	mov	r9, r0
 801891e:	980e      	ldr	r0, [sp, #56]	; 0x38
 8018920:	f7ff ff42 	bl	80187a8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 8018924:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018926:	9909      	ldr	r1, [sp, #36]	; 0x24
 8018928:	eba3 0a01 	sub.w	sl, r3, r1
 801892c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801892e:	459a      	cmp	sl, r3
 8018930:	bfa8      	it	ge
 8018932:	469a      	movge	sl, r3
 8018934:	f1ba 0f00 	cmp.w	sl, #0
 8018938:	4683      	mov	fp, r0
 801893a:	f340 811a 	ble.w	8018b72 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801893e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8018940:	1b64      	subs	r4, r4, r5
 8018942:	1b1c      	subs	r4, r3, r4
 8018944:	42bc      	cmp	r4, r7
 8018946:	bfd4      	ite	le
 8018948:	ebc5 0504 	rsble	r5, r5, r4
 801894c:	ebc5 0507 	rsbgt	r5, r5, r7
 8018950:	2d00      	cmp	r5, #0
 8018952:	f340 810e 	ble.w	8018b72 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8018956:	1b52      	subs	r2, r2, r5
 8018958:	fb08 f302 	mul.w	r3, r8, r2
 801895c:	930f      	str	r3, [sp, #60]	; 0x3c
 801895e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018960:	2b00      	cmp	r3, #0
 8018962:	f040 8116 	bne.w	8018b92 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 8018966:	4b8d      	ldr	r3, [pc, #564]	; (8018b9c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 8018968:	6818      	ldr	r0, [r3, #0]
 801896a:	6803      	ldr	r3, [r0, #0]
 801896c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801896e:	4798      	blx	r3
 8018970:	2301      	movs	r3, #1
 8018972:	fa03 f308 	lsl.w	r3, r3, r8
 8018976:	4a8a      	ldr	r2, [pc, #552]	; (8018ba0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 8018978:	3b01      	subs	r3, #1
 801897a:	b2db      	uxtb	r3, r3
 801897c:	8811      	ldrh	r1, [r2, #0]
 801897e:	930e      	str	r3, [sp, #56]	; 0x38
 8018980:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 8018984:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 8018988:	fb01 2303 	mla	r3, r1, r3, r2
 801898c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8018990:	930a      	str	r3, [sp, #40]	; 0x28
 8018992:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018994:	f3c3 4307 	ubfx	r3, r3, #16, #8
 8018998:	9313      	str	r3, [sp, #76]	; 0x4c
 801899a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801899c:	0a19      	lsrs	r1, r3, #8
 801899e:	b2cb      	uxtb	r3, r1
 80189a0:	9312      	str	r3, [sp, #72]	; 0x48
 80189a2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80189a4:	b2db      	uxtb	r3, r3
 80189a6:	9311      	str	r3, [sp, #68]	; 0x44
 80189a8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80189aa:	095a      	lsrs	r2, r3, #5
 80189ac:	4b7d      	ldr	r3, [pc, #500]	; (8018ba4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 80189ae:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80189b2:	400b      	ands	r3, r1
 80189b4:	4313      	orrs	r3, r2
 80189b6:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 80189b8:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80189bc:	4313      	orrs	r3, r2
 80189be:	b29b      	uxth	r3, r3
 80189c0:	9310      	str	r3, [sp, #64]	; 0x40
 80189c2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80189c4:	781a      	ldrb	r2, [r3, #0]
 80189c6:	ea4f 0349 	mov.w	r3, r9, lsl #1
 80189ca:	4132      	asrs	r2, r6
 80189cc:	fb05 b919 	mls	r9, r5, r9, fp
 80189d0:	fb03 fb05 	mul.w	fp, r3, r5
 80189d4:	b2d2      	uxtb	r2, r2
 80189d6:	930d      	str	r3, [sp, #52]	; 0x34
 80189d8:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 80189dc:	f11a 3aff 	adds.w	sl, sl, #4294967295
 80189e0:	f0c0 80f5 	bcc.w	8018bce <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 80189e4:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 80189e8:	46ae      	mov	lr, r5
 80189ea:	f11e 3eff 	adds.w	lr, lr, #4294967295
 80189ee:	f0c0 80dd 	bcc.w	8018bac <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 80189f2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80189f4:	4013      	ands	r3, r2
 80189f6:	d055      	beq.n	8018aa4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 80189f8:	20ff      	movs	r0, #255	; 0xff
 80189fa:	990e      	ldr	r1, [sp, #56]	; 0x38
 80189fc:	fb90 f1f1 	sdiv	r1, r0, r1
 8018a00:	434b      	muls	r3, r1
 8018a02:	2bfe      	cmp	r3, #254	; 0xfe
 8018a04:	dd03      	ble.n	8018a0e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 8018a06:	990c      	ldr	r1, [sp, #48]	; 0x30
 8018a08:	4281      	cmp	r1, r0
 8018a0a:	f000 80cd 	beq.w	8018ba8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 8018a0e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8018a10:	f8bc 4000 	ldrh.w	r4, [ip]
 8018a14:	fb11 f303 	smulbb	r3, r1, r3
 8018a18:	b29b      	uxth	r3, r3
 8018a1a:	1c59      	adds	r1, r3, #1
 8018a1c:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8018a20:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8018a24:	b29f      	uxth	r7, r3
 8018a26:	43db      	mvns	r3, r3
 8018a28:	b2db      	uxtb	r3, r3
 8018a2a:	9309      	str	r3, [sp, #36]	; 0x24
 8018a2c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8018a2e:	1220      	asrs	r0, r4, #8
 8018a30:	fb13 f907 	smulbb	r9, r3, r7
 8018a34:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8018a38:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018a3a:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 8018a3e:	fb00 9003 	mla	r0, r0, r3, r9
 8018a42:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8018a44:	10e1      	asrs	r1, r4, #3
 8018a46:	fb13 f907 	smulbb	r9, r3, r7
 8018a4a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8018a4e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018a50:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 8018a54:	fb01 9103 	mla	r1, r1, r3, r9
 8018a58:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8018a5a:	00e4      	lsls	r4, r4, #3
 8018a5c:	fb13 f707 	smulbb	r7, r3, r7
 8018a60:	b2e4      	uxtb	r4, r4
 8018a62:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018a64:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8018a68:	fb04 7403 	mla	r4, r4, r3, r7
 8018a6c:	b280      	uxth	r0, r0
 8018a6e:	b2a4      	uxth	r4, r4
 8018a70:	1c43      	adds	r3, r0, #1
 8018a72:	f104 0901 	add.w	r9, r4, #1
 8018a76:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8018a7a:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 8018a7e:	b289      	uxth	r1, r1
 8018a80:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 8018a84:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8018a88:	ea49 0000 	orr.w	r0, r9, r0
 8018a8c:	f101 0901 	add.w	r9, r1, #1
 8018a90:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 8018a94:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8018a98:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8018a9c:	ea40 0009 	orr.w	r0, r0, r9
 8018aa0:	f8ac 0000 	strh.w	r0, [ip]
 8018aa4:	4446      	add	r6, r8
 8018aa6:	b2b6      	uxth	r6, r6
 8018aa8:	2e07      	cmp	r6, #7
 8018aaa:	bf81      	itttt	hi
 8018aac:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 8018aae:	785a      	ldrbhi	r2, [r3, #1]
 8018ab0:	3301      	addhi	r3, #1
 8018ab2:	9328      	strhi	r3, [sp, #160]	; 0xa0
 8018ab4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018ab6:	bf9a      	itte	ls
 8018ab8:	fa42 f208 	asrls.w	r2, r2, r8
 8018abc:	b2d2      	uxtbls	r2, r2
 8018abe:	2600      	movhi	r6, #0
 8018ac0:	449c      	add	ip, r3
 8018ac2:	e792      	b.n	80189ea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 8018ac4:	441c      	add	r4, r3
 8018ac6:	b224      	sxth	r4, r4
 8018ac8:	e6d5      	b.n	8018876 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 8018aca:	f1ba 0f01 	cmp.w	sl, #1
 8018ace:	f47f af0c 	bne.w	80188ea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018ad2:	f1bb 0f01 	cmp.w	fp, #1
 8018ad6:	f47f af08 	bne.w	80188ea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018ada:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 8018b9c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 8018ade:	f8db 0000 	ldr.w	r0, [fp]
 8018ae2:	6803      	ldr	r3, [r0, #0]
 8018ae4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8018ae6:	4798      	blx	r3
 8018ae8:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 8018aec:	465a      	mov	r2, fp
 8018aee:	d006      	beq.n	8018afe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 8018af0:	f1b8 0f04 	cmp.w	r8, #4
 8018af4:	d140      	bne.n	8018b78 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 8018af6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018af8:	3300      	adds	r3, #0
 8018afa:	bf18      	it	ne
 8018afc:	2301      	movne	r3, #1
 8018afe:	0580      	lsls	r0, r0, #22
 8018b00:	d56e      	bpl.n	8018be0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 8018b02:	f1b8 0f08 	cmp.w	r8, #8
 8018b06:	d16b      	bne.n	8018be0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 8018b08:	2b00      	cmp	r3, #0
 8018b0a:	bf0c      	ite	eq
 8018b0c:	f44f 7100 	moveq.w	r1, #512	; 0x200
 8018b10:	f44f 7180 	movne.w	r1, #256	; 0x100
 8018b14:	2d00      	cmp	r5, #0
 8018b16:	f47f aee8 	bne.w	80188ea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018b1a:	2e00      	cmp	r6, #0
 8018b1c:	f47f aee5 	bne.w	80188ea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018b20:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8018b22:	19e3      	adds	r3, r4, r7
 8018b24:	4283      	cmp	r3, r0
 8018b26:	f73f aee0 	bgt.w	80188ea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018b2a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018b2c:	980d      	ldr	r0, [sp, #52]	; 0x34
 8018b2e:	444b      	add	r3, r9
 8018b30:	4283      	cmp	r3, r0
 8018b32:	f73f aeda 	bgt.w	80188ea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018b36:	6810      	ldr	r0, [r2, #0]
 8018b38:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 8018b3c:	6804      	ldr	r4, [r0, #0]
 8018b3e:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 8018b42:	b2bf      	uxth	r7, r7
 8018b44:	f1b8 0f08 	cmp.w	r8, #8
 8018b48:	f04f 0500 	mov.w	r5, #0
 8018b4c:	bf18      	it	ne
 8018b4e:	3701      	addne	r7, #1
 8018b50:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8018b54:	990c      	ldr	r1, [sp, #48]	; 0x30
 8018b56:	9104      	str	r1, [sp, #16]
 8018b58:	bf18      	it	ne
 8018b5a:	f027 0701 	bicne.w	r7, r7, #1
 8018b5e:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8018b60:	bf18      	it	ne
 8018b62:	b2bf      	uxthne	r7, r7
 8018b64:	e9cd 7102 	strd	r7, r1, [sp, #8]
 8018b68:	e9cd 7900 	strd	r7, r9, [sp]
 8018b6c:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8018b6e:	6d64      	ldr	r4, [r4, #84]	; 0x54
 8018b70:	47a0      	blx	r4
 8018b72:	b019      	add	sp, #100	; 0x64
 8018b74:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018b78:	2300      	movs	r3, #0
 8018b7a:	e7c0      	b.n	8018afe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 8018b7c:	2208      	movs	r2, #8
 8018b7e:	fb92 f3f8 	sdiv	r3, r2, r8
 8018b82:	1e5a      	subs	r2, r3, #1
 8018b84:	443a      	add	r2, r7
 8018b86:	fb92 f2f3 	sdiv	r2, r2, r3
 8018b8a:	fb12 f203 	smulbb	r2, r2, r3
 8018b8e:	b292      	uxth	r2, r2
 8018b90:	e6b0      	b.n	80188f4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 8018b92:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8018b94:	e6ec      	b.n	8018970 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 8018b96:	bf00      	nop
 8018b98:	200155b0 	.word	0x200155b0
 8018b9c:	200155b8 	.word	0x200155b8
 8018ba0:	200155b2 	.word	0x200155b2
 8018ba4:	00fff800 	.word	0x00fff800
 8018ba8:	9810      	ldr	r0, [sp, #64]	; 0x40
 8018baa:	e779      	b.n	8018aa0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 8018bac:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8018bae:	b153      	cbz	r3, 8018bc6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 8018bb0:	441e      	add	r6, r3
 8018bb2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018bb4:	b2b6      	uxth	r6, r6
 8018bb6:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 8018bba:	f006 0607 	and.w	r6, r6, #7
 8018bbe:	781a      	ldrb	r2, [r3, #0]
 8018bc0:	9328      	str	r3, [sp, #160]	; 0xa0
 8018bc2:	4132      	asrs	r2, r6
 8018bc4:	b2d2      	uxtb	r2, r2
 8018bc6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018bc8:	445b      	add	r3, fp
 8018bca:	930a      	str	r3, [sp, #40]	; 0x28
 8018bcc:	e706      	b.n	80189dc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 8018bce:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018bd0:	2b00      	cmp	r3, #0
 8018bd2:	d1ce      	bne.n	8018b72 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8018bd4:	4b05      	ldr	r3, [pc, #20]	; (8018bec <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 8018bd6:	6818      	ldr	r0, [r3, #0]
 8018bd8:	6803      	ldr	r3, [r0, #0]
 8018bda:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8018bdc:	4798      	blx	r3
 8018bde:	e7c8      	b.n	8018b72 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8018be0:	2b00      	cmp	r3, #0
 8018be2:	f43f ae82 	beq.w	80188ea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018be6:	f44f 7180 	mov.w	r1, #256	; 0x100
 8018bea:	e793      	b.n	8018b14 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 8018bec:	200155b8 	.word	0x200155b8

08018bf0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 8018bf0:	b538      	push	{r3, r4, r5, lr}
 8018bf2:	4c15      	ldr	r4, [pc, #84]	; (8018c48 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 8018bf4:	7823      	ldrb	r3, [r4, #0]
 8018bf6:	f3bf 8f5b 	dmb	ish
 8018bfa:	07da      	lsls	r2, r3, #31
 8018bfc:	4605      	mov	r5, r0
 8018bfe:	d40b      	bmi.n	8018c18 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8018c00:	4620      	mov	r0, r4
 8018c02:	f007 fd73 	bl	80206ec <__cxa_guard_acquire>
 8018c06:	b138      	cbz	r0, 8018c18 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8018c08:	4620      	mov	r0, r4
 8018c0a:	f007 fd7b 	bl	8020704 <__cxa_guard_release>
 8018c0e:	4a0f      	ldr	r2, [pc, #60]	; (8018c4c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8018c10:	490f      	ldr	r1, [pc, #60]	; (8018c50 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 8018c12:	4810      	ldr	r0, [pc, #64]	; (8018c54 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8018c14:	f007 fd63 	bl	80206de <__aeabi_atexit>
 8018c18:	4c0f      	ldr	r4, [pc, #60]	; (8018c58 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 8018c1a:	7823      	ldrb	r3, [r4, #0]
 8018c1c:	f3bf 8f5b 	dmb	ish
 8018c20:	07db      	lsls	r3, r3, #31
 8018c22:	d40b      	bmi.n	8018c3c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8018c24:	4620      	mov	r0, r4
 8018c26:	f007 fd61 	bl	80206ec <__cxa_guard_acquire>
 8018c2a:	b138      	cbz	r0, 8018c3c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8018c2c:	4620      	mov	r0, r4
 8018c2e:	f007 fd69 	bl	8020704 <__cxa_guard_release>
 8018c32:	4a06      	ldr	r2, [pc, #24]	; (8018c4c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8018c34:	4909      	ldr	r1, [pc, #36]	; (8018c5c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 8018c36:	480a      	ldr	r0, [pc, #40]	; (8018c60 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8018c38:	f007 fd51 	bl	80206de <__aeabi_atexit>
 8018c3c:	4b05      	ldr	r3, [pc, #20]	; (8018c54 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8018c3e:	612b      	str	r3, [r5, #16]
 8018c40:	4b07      	ldr	r3, [pc, #28]	; (8018c60 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8018c42:	616b      	str	r3, [r5, #20]
 8018c44:	bd38      	pop	{r3, r4, r5, pc}
 8018c46:	bf00      	nop
 8018c48:	2001568c 	.word	0x2001568c
 8018c4c:	20000000 	.word	0x20000000
 8018c50:	08016e01 	.word	0x08016e01
 8018c54:	200000d0 	.word	0x200000d0
 8018c58:	20015690 	.word	0x20015690
 8018c5c:	08016dff 	.word	0x08016dff
 8018c60:	200000d4 	.word	0x200000d4

08018c64 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 8018c64:	b538      	push	{r3, r4, r5, lr}
 8018c66:	4c15      	ldr	r4, [pc, #84]	; (8018cbc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 8018c68:	7823      	ldrb	r3, [r4, #0]
 8018c6a:	f3bf 8f5b 	dmb	ish
 8018c6e:	07da      	lsls	r2, r3, #31
 8018c70:	4605      	mov	r5, r0
 8018c72:	d40b      	bmi.n	8018c8c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8018c74:	4620      	mov	r0, r4
 8018c76:	f007 fd39 	bl	80206ec <__cxa_guard_acquire>
 8018c7a:	b138      	cbz	r0, 8018c8c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8018c7c:	4620      	mov	r0, r4
 8018c7e:	f007 fd41 	bl	8020704 <__cxa_guard_release>
 8018c82:	4a0f      	ldr	r2, [pc, #60]	; (8018cc0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8018c84:	490f      	ldr	r1, [pc, #60]	; (8018cc4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 8018c86:	4810      	ldr	r0, [pc, #64]	; (8018cc8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8018c88:	f007 fd29 	bl	80206de <__aeabi_atexit>
 8018c8c:	4c0f      	ldr	r4, [pc, #60]	; (8018ccc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 8018c8e:	7823      	ldrb	r3, [r4, #0]
 8018c90:	f3bf 8f5b 	dmb	ish
 8018c94:	07db      	lsls	r3, r3, #31
 8018c96:	d40b      	bmi.n	8018cb0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8018c98:	4620      	mov	r0, r4
 8018c9a:	f007 fd27 	bl	80206ec <__cxa_guard_acquire>
 8018c9e:	b138      	cbz	r0, 8018cb0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8018ca0:	4620      	mov	r0, r4
 8018ca2:	f007 fd2f 	bl	8020704 <__cxa_guard_release>
 8018ca6:	4a06      	ldr	r2, [pc, #24]	; (8018cc0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8018ca8:	4909      	ldr	r1, [pc, #36]	; (8018cd0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 8018caa:	480a      	ldr	r0, [pc, #40]	; (8018cd4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8018cac:	f007 fd17 	bl	80206de <__aeabi_atexit>
 8018cb0:	4b05      	ldr	r3, [pc, #20]	; (8018cc8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8018cb2:	60ab      	str	r3, [r5, #8]
 8018cb4:	4b07      	ldr	r3, [pc, #28]	; (8018cd4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8018cb6:	60eb      	str	r3, [r5, #12]
 8018cb8:	bd38      	pop	{r3, r4, r5, pc}
 8018cba:	bf00      	nop
 8018cbc:	20015664 	.word	0x20015664
 8018cc0:	20000000 	.word	0x20000000
 8018cc4:	08016e05 	.word	0x08016e05
 8018cc8:	200000a8 	.word	0x200000a8
 8018ccc:	20015668 	.word	0x20015668
 8018cd0:	08016e03 	.word	0x08016e03
 8018cd4:	200000ac 	.word	0x200000ac

08018cd8 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 8018cd8:	b510      	push	{r4, lr}
 8018cda:	4604      	mov	r4, r0
 8018cdc:	f7ff ff88 	bl	8018bf0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 8018ce0:	4620      	mov	r0, r4
 8018ce2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018ce6:	f7ff bfbd 	b.w	8018c64 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

08018cec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 8018cec:	b538      	push	{r3, r4, r5, lr}
 8018cee:	4c15      	ldr	r4, [pc, #84]	; (8018d44 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 8018cf0:	7823      	ldrb	r3, [r4, #0]
 8018cf2:	f3bf 8f5b 	dmb	ish
 8018cf6:	07da      	lsls	r2, r3, #31
 8018cf8:	4605      	mov	r5, r0
 8018cfa:	d40b      	bmi.n	8018d14 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8018cfc:	4620      	mov	r0, r4
 8018cfe:	f007 fcf5 	bl	80206ec <__cxa_guard_acquire>
 8018d02:	b138      	cbz	r0, 8018d14 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8018d04:	4620      	mov	r0, r4
 8018d06:	f007 fcfd 	bl	8020704 <__cxa_guard_release>
 8018d0a:	4a0f      	ldr	r2, [pc, #60]	; (8018d48 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8018d0c:	490f      	ldr	r1, [pc, #60]	; (8018d4c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 8018d0e:	4810      	ldr	r0, [pc, #64]	; (8018d50 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8018d10:	f007 fce5 	bl	80206de <__aeabi_atexit>
 8018d14:	4c0f      	ldr	r4, [pc, #60]	; (8018d54 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 8018d16:	7823      	ldrb	r3, [r4, #0]
 8018d18:	f3bf 8f5b 	dmb	ish
 8018d1c:	07db      	lsls	r3, r3, #31
 8018d1e:	d40b      	bmi.n	8018d38 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8018d20:	4620      	mov	r0, r4
 8018d22:	f007 fce3 	bl	80206ec <__cxa_guard_acquire>
 8018d26:	b138      	cbz	r0, 8018d38 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8018d28:	4620      	mov	r0, r4
 8018d2a:	f007 fceb 	bl	8020704 <__cxa_guard_release>
 8018d2e:	4a06      	ldr	r2, [pc, #24]	; (8018d48 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8018d30:	4909      	ldr	r1, [pc, #36]	; (8018d58 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 8018d32:	480a      	ldr	r0, [pc, #40]	; (8018d5c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8018d34:	f007 fcd3 	bl	80206de <__aeabi_atexit>
 8018d38:	4b05      	ldr	r3, [pc, #20]	; (8018d50 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8018d3a:	622b      	str	r3, [r5, #32]
 8018d3c:	4b07      	ldr	r3, [pc, #28]	; (8018d5c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8018d3e:	626b      	str	r3, [r5, #36]	; 0x24
 8018d40:	bd38      	pop	{r3, r4, r5, pc}
 8018d42:	bf00      	nop
 8018d44:	20015694 	.word	0x20015694
 8018d48:	20000000 	.word	0x20000000
 8018d4c:	08016df9 	.word	0x08016df9
 8018d50:	200000d8 	.word	0x200000d8
 8018d54:	20015698 	.word	0x20015698
 8018d58:	08016df7 	.word	0x08016df7
 8018d5c:	200000dc 	.word	0x200000dc

08018d60 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 8018d60:	b538      	push	{r3, r4, r5, lr}
 8018d62:	4c15      	ldr	r4, [pc, #84]	; (8018db8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 8018d64:	7823      	ldrb	r3, [r4, #0]
 8018d66:	f3bf 8f5b 	dmb	ish
 8018d6a:	07da      	lsls	r2, r3, #31
 8018d6c:	4605      	mov	r5, r0
 8018d6e:	d40b      	bmi.n	8018d88 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8018d70:	4620      	mov	r0, r4
 8018d72:	f007 fcbb 	bl	80206ec <__cxa_guard_acquire>
 8018d76:	b138      	cbz	r0, 8018d88 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8018d78:	4620      	mov	r0, r4
 8018d7a:	f007 fcc3 	bl	8020704 <__cxa_guard_release>
 8018d7e:	4a0f      	ldr	r2, [pc, #60]	; (8018dbc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8018d80:	490f      	ldr	r1, [pc, #60]	; (8018dc0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 8018d82:	4810      	ldr	r0, [pc, #64]	; (8018dc4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8018d84:	f007 fcab 	bl	80206de <__aeabi_atexit>
 8018d88:	4c0f      	ldr	r4, [pc, #60]	; (8018dc8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 8018d8a:	7823      	ldrb	r3, [r4, #0]
 8018d8c:	f3bf 8f5b 	dmb	ish
 8018d90:	07db      	lsls	r3, r3, #31
 8018d92:	d40b      	bmi.n	8018dac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8018d94:	4620      	mov	r0, r4
 8018d96:	f007 fca9 	bl	80206ec <__cxa_guard_acquire>
 8018d9a:	b138      	cbz	r0, 8018dac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8018d9c:	4620      	mov	r0, r4
 8018d9e:	f007 fcb1 	bl	8020704 <__cxa_guard_release>
 8018da2:	4a06      	ldr	r2, [pc, #24]	; (8018dbc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8018da4:	4909      	ldr	r1, [pc, #36]	; (8018dcc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 8018da6:	480a      	ldr	r0, [pc, #40]	; (8018dd0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8018da8:	f007 fc99 	bl	80206de <__aeabi_atexit>
 8018dac:	4b05      	ldr	r3, [pc, #20]	; (8018dc4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8018dae:	61ab      	str	r3, [r5, #24]
 8018db0:	4b07      	ldr	r3, [pc, #28]	; (8018dd0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8018db2:	61eb      	str	r3, [r5, #28]
 8018db4:	bd38      	pop	{r3, r4, r5, pc}
 8018db6:	bf00      	nop
 8018db8:	2001566c 	.word	0x2001566c
 8018dbc:	20000000 	.word	0x20000000
 8018dc0:	08016dfd 	.word	0x08016dfd
 8018dc4:	200000b0 	.word	0x200000b0
 8018dc8:	20015670 	.word	0x20015670
 8018dcc:	08016dfb 	.word	0x08016dfb
 8018dd0:	200000b4 	.word	0x200000b4

08018dd4 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 8018dd4:	b510      	push	{r4, lr}
 8018dd6:	4604      	mov	r4, r0
 8018dd8:	f7ff ff88 	bl	8018cec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 8018ddc:	4620      	mov	r0, r4
 8018dde:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018de2:	f7ff bfbd 	b.w	8018d60 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

08018de8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 8018de8:	b538      	push	{r3, r4, r5, lr}
 8018dea:	4c15      	ldr	r4, [pc, #84]	; (8018e40 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 8018dec:	7823      	ldrb	r3, [r4, #0]
 8018dee:	f3bf 8f5b 	dmb	ish
 8018df2:	07da      	lsls	r2, r3, #31
 8018df4:	4605      	mov	r5, r0
 8018df6:	d40b      	bmi.n	8018e10 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8018df8:	4620      	mov	r0, r4
 8018dfa:	f007 fc77 	bl	80206ec <__cxa_guard_acquire>
 8018dfe:	b138      	cbz	r0, 8018e10 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8018e00:	4620      	mov	r0, r4
 8018e02:	f007 fc7f 	bl	8020704 <__cxa_guard_release>
 8018e06:	4a0f      	ldr	r2, [pc, #60]	; (8018e44 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8018e08:	490f      	ldr	r1, [pc, #60]	; (8018e48 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 8018e0a:	4810      	ldr	r0, [pc, #64]	; (8018e4c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8018e0c:	f007 fc67 	bl	80206de <__aeabi_atexit>
 8018e10:	4c0f      	ldr	r4, [pc, #60]	; (8018e50 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 8018e12:	7823      	ldrb	r3, [r4, #0]
 8018e14:	f3bf 8f5b 	dmb	ish
 8018e18:	07db      	lsls	r3, r3, #31
 8018e1a:	d40b      	bmi.n	8018e34 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8018e1c:	4620      	mov	r0, r4
 8018e1e:	f007 fc65 	bl	80206ec <__cxa_guard_acquire>
 8018e22:	b138      	cbz	r0, 8018e34 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8018e24:	4620      	mov	r0, r4
 8018e26:	f007 fc6d 	bl	8020704 <__cxa_guard_release>
 8018e2a:	4a06      	ldr	r2, [pc, #24]	; (8018e44 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8018e2c:	4909      	ldr	r1, [pc, #36]	; (8018e54 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 8018e2e:	480a      	ldr	r0, [pc, #40]	; (8018e58 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8018e30:	f007 fc55 	bl	80206de <__aeabi_atexit>
 8018e34:	4b05      	ldr	r3, [pc, #20]	; (8018e4c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8018e36:	632b      	str	r3, [r5, #48]	; 0x30
 8018e38:	4b07      	ldr	r3, [pc, #28]	; (8018e58 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8018e3a:	636b      	str	r3, [r5, #52]	; 0x34
 8018e3c:	bd38      	pop	{r3, r4, r5, pc}
 8018e3e:	bf00      	nop
 8018e40:	200156a4 	.word	0x200156a4
 8018e44:	20000000 	.word	0x20000000
 8018e48:	08016df1 	.word	0x08016df1
 8018e4c:	200000e8 	.word	0x200000e8
 8018e50:	200156a8 	.word	0x200156a8
 8018e54:	08016def 	.word	0x08016def
 8018e58:	200000ec 	.word	0x200000ec

08018e5c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 8018e5c:	b538      	push	{r3, r4, r5, lr}
 8018e5e:	4c15      	ldr	r4, [pc, #84]	; (8018eb4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 8018e60:	7823      	ldrb	r3, [r4, #0]
 8018e62:	f3bf 8f5b 	dmb	ish
 8018e66:	07da      	lsls	r2, r3, #31
 8018e68:	4605      	mov	r5, r0
 8018e6a:	d40b      	bmi.n	8018e84 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8018e6c:	4620      	mov	r0, r4
 8018e6e:	f007 fc3d 	bl	80206ec <__cxa_guard_acquire>
 8018e72:	b138      	cbz	r0, 8018e84 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8018e74:	4620      	mov	r0, r4
 8018e76:	f007 fc45 	bl	8020704 <__cxa_guard_release>
 8018e7a:	4a0f      	ldr	r2, [pc, #60]	; (8018eb8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8018e7c:	490f      	ldr	r1, [pc, #60]	; (8018ebc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 8018e7e:	4810      	ldr	r0, [pc, #64]	; (8018ec0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8018e80:	f007 fc2d 	bl	80206de <__aeabi_atexit>
 8018e84:	4c0f      	ldr	r4, [pc, #60]	; (8018ec4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 8018e86:	7823      	ldrb	r3, [r4, #0]
 8018e88:	f3bf 8f5b 	dmb	ish
 8018e8c:	07db      	lsls	r3, r3, #31
 8018e8e:	d40b      	bmi.n	8018ea8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8018e90:	4620      	mov	r0, r4
 8018e92:	f007 fc2b 	bl	80206ec <__cxa_guard_acquire>
 8018e96:	b138      	cbz	r0, 8018ea8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8018e98:	4620      	mov	r0, r4
 8018e9a:	f007 fc33 	bl	8020704 <__cxa_guard_release>
 8018e9e:	4a06      	ldr	r2, [pc, #24]	; (8018eb8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8018ea0:	4909      	ldr	r1, [pc, #36]	; (8018ec8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 8018ea2:	480a      	ldr	r0, [pc, #40]	; (8018ecc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8018ea4:	f007 fc1b 	bl	80206de <__aeabi_atexit>
 8018ea8:	4b05      	ldr	r3, [pc, #20]	; (8018ec0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8018eaa:	62ab      	str	r3, [r5, #40]	; 0x28
 8018eac:	4b07      	ldr	r3, [pc, #28]	; (8018ecc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8018eae:	62eb      	str	r3, [r5, #44]	; 0x2c
 8018eb0:	bd38      	pop	{r3, r4, r5, pc}
 8018eb2:	bf00      	nop
 8018eb4:	20015674 	.word	0x20015674
 8018eb8:	20000000 	.word	0x20000000
 8018ebc:	08016df5 	.word	0x08016df5
 8018ec0:	200000b8 	.word	0x200000b8
 8018ec4:	20015678 	.word	0x20015678
 8018ec8:	08016df3 	.word	0x08016df3
 8018ecc:	200000bc 	.word	0x200000bc

08018ed0 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 8018ed0:	b510      	push	{r4, lr}
 8018ed2:	4604      	mov	r4, r0
 8018ed4:	f7ff ff88 	bl	8018de8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 8018ed8:	4620      	mov	r0, r4
 8018eda:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018ede:	f7ff bfbd 	b.w	8018e5c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

08018ee4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 8018ee4:	b538      	push	{r3, r4, r5, lr}
 8018ee6:	4c15      	ldr	r4, [pc, #84]	; (8018f3c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 8018ee8:	7823      	ldrb	r3, [r4, #0]
 8018eea:	f3bf 8f5b 	dmb	ish
 8018eee:	07da      	lsls	r2, r3, #31
 8018ef0:	4605      	mov	r5, r0
 8018ef2:	d40b      	bmi.n	8018f0c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8018ef4:	4620      	mov	r0, r4
 8018ef6:	f007 fbf9 	bl	80206ec <__cxa_guard_acquire>
 8018efa:	b138      	cbz	r0, 8018f0c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8018efc:	4620      	mov	r0, r4
 8018efe:	f007 fc01 	bl	8020704 <__cxa_guard_release>
 8018f02:	4a0f      	ldr	r2, [pc, #60]	; (8018f40 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8018f04:	490f      	ldr	r1, [pc, #60]	; (8018f44 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 8018f06:	4810      	ldr	r0, [pc, #64]	; (8018f48 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8018f08:	f007 fbe9 	bl	80206de <__aeabi_atexit>
 8018f0c:	4c0f      	ldr	r4, [pc, #60]	; (8018f4c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 8018f0e:	7823      	ldrb	r3, [r4, #0]
 8018f10:	f3bf 8f5b 	dmb	ish
 8018f14:	07db      	lsls	r3, r3, #31
 8018f16:	d40b      	bmi.n	8018f30 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8018f18:	4620      	mov	r0, r4
 8018f1a:	f007 fbe7 	bl	80206ec <__cxa_guard_acquire>
 8018f1e:	b138      	cbz	r0, 8018f30 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8018f20:	4620      	mov	r0, r4
 8018f22:	f007 fbef 	bl	8020704 <__cxa_guard_release>
 8018f26:	4a06      	ldr	r2, [pc, #24]	; (8018f40 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8018f28:	4909      	ldr	r1, [pc, #36]	; (8018f50 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 8018f2a:	480a      	ldr	r0, [pc, #40]	; (8018f54 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8018f2c:	f007 fbd7 	bl	80206de <__aeabi_atexit>
 8018f30:	4b05      	ldr	r3, [pc, #20]	; (8018f48 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8018f32:	652b      	str	r3, [r5, #80]	; 0x50
 8018f34:	4b07      	ldr	r3, [pc, #28]	; (8018f54 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8018f36:	656b      	str	r3, [r5, #84]	; 0x54
 8018f38:	bd38      	pop	{r3, r4, r5, pc}
 8018f3a:	bf00      	nop
 8018f3c:	200156ac 	.word	0x200156ac
 8018f40:	20000000 	.word	0x20000000
 8018f44:	08016de1 	.word	0x08016de1
 8018f48:	200000f0 	.word	0x200000f0
 8018f4c:	200156b0 	.word	0x200156b0
 8018f50:	08016ddf 	.word	0x08016ddf
 8018f54:	200000f4 	.word	0x200000f4

08018f58 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 8018f58:	b538      	push	{r3, r4, r5, lr}
 8018f5a:	4c15      	ldr	r4, [pc, #84]	; (8018fb0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 8018f5c:	7823      	ldrb	r3, [r4, #0]
 8018f5e:	f3bf 8f5b 	dmb	ish
 8018f62:	07da      	lsls	r2, r3, #31
 8018f64:	4605      	mov	r5, r0
 8018f66:	d40b      	bmi.n	8018f80 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8018f68:	4620      	mov	r0, r4
 8018f6a:	f007 fbbf 	bl	80206ec <__cxa_guard_acquire>
 8018f6e:	b138      	cbz	r0, 8018f80 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8018f70:	4620      	mov	r0, r4
 8018f72:	f007 fbc7 	bl	8020704 <__cxa_guard_release>
 8018f76:	4a0f      	ldr	r2, [pc, #60]	; (8018fb4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8018f78:	490f      	ldr	r1, [pc, #60]	; (8018fb8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 8018f7a:	4810      	ldr	r0, [pc, #64]	; (8018fbc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8018f7c:	f007 fbaf 	bl	80206de <__aeabi_atexit>
 8018f80:	4c0f      	ldr	r4, [pc, #60]	; (8018fc0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 8018f82:	7823      	ldrb	r3, [r4, #0]
 8018f84:	f3bf 8f5b 	dmb	ish
 8018f88:	07db      	lsls	r3, r3, #31
 8018f8a:	d40b      	bmi.n	8018fa4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8018f8c:	4620      	mov	r0, r4
 8018f8e:	f007 fbad 	bl	80206ec <__cxa_guard_acquire>
 8018f92:	b138      	cbz	r0, 8018fa4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8018f94:	4620      	mov	r0, r4
 8018f96:	f007 fbb5 	bl	8020704 <__cxa_guard_release>
 8018f9a:	4a06      	ldr	r2, [pc, #24]	; (8018fb4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8018f9c:	4909      	ldr	r1, [pc, #36]	; (8018fc4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 8018f9e:	480a      	ldr	r0, [pc, #40]	; (8018fc8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8018fa0:	f007 fb9d 	bl	80206de <__aeabi_atexit>
 8018fa4:	4b05      	ldr	r3, [pc, #20]	; (8018fbc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8018fa6:	64ab      	str	r3, [r5, #72]	; 0x48
 8018fa8:	4b07      	ldr	r3, [pc, #28]	; (8018fc8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8018faa:	64eb      	str	r3, [r5, #76]	; 0x4c
 8018fac:	bd38      	pop	{r3, r4, r5, pc}
 8018fae:	bf00      	nop
 8018fb0:	200156b4 	.word	0x200156b4
 8018fb4:	20000000 	.word	0x20000000
 8018fb8:	08016de5 	.word	0x08016de5
 8018fbc:	200000f8 	.word	0x200000f8
 8018fc0:	200156b8 	.word	0x200156b8
 8018fc4:	08016de3 	.word	0x08016de3
 8018fc8:	200000fc 	.word	0x200000fc

08018fcc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 8018fcc:	b538      	push	{r3, r4, r5, lr}
 8018fce:	4c15      	ldr	r4, [pc, #84]	; (8019024 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 8018fd0:	7823      	ldrb	r3, [r4, #0]
 8018fd2:	f3bf 8f5b 	dmb	ish
 8018fd6:	07da      	lsls	r2, r3, #31
 8018fd8:	4605      	mov	r5, r0
 8018fda:	d40b      	bmi.n	8018ff4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8018fdc:	4620      	mov	r0, r4
 8018fde:	f007 fb85 	bl	80206ec <__cxa_guard_acquire>
 8018fe2:	b138      	cbz	r0, 8018ff4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8018fe4:	4620      	mov	r0, r4
 8018fe6:	f007 fb8d 	bl	8020704 <__cxa_guard_release>
 8018fea:	4a0f      	ldr	r2, [pc, #60]	; (8019028 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8018fec:	490f      	ldr	r1, [pc, #60]	; (801902c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 8018fee:	4810      	ldr	r0, [pc, #64]	; (8019030 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8018ff0:	f007 fb75 	bl	80206de <__aeabi_atexit>
 8018ff4:	4c0f      	ldr	r4, [pc, #60]	; (8019034 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 8018ff6:	7823      	ldrb	r3, [r4, #0]
 8018ff8:	f3bf 8f5b 	dmb	ish
 8018ffc:	07db      	lsls	r3, r3, #31
 8018ffe:	d40b      	bmi.n	8019018 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8019000:	4620      	mov	r0, r4
 8019002:	f007 fb73 	bl	80206ec <__cxa_guard_acquire>
 8019006:	b138      	cbz	r0, 8019018 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8019008:	4620      	mov	r0, r4
 801900a:	f007 fb7b 	bl	8020704 <__cxa_guard_release>
 801900e:	4a06      	ldr	r2, [pc, #24]	; (8019028 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8019010:	4909      	ldr	r1, [pc, #36]	; (8019038 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 8019012:	480a      	ldr	r0, [pc, #40]	; (801903c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8019014:	f007 fb63 	bl	80206de <__aeabi_atexit>
 8019018:	4b05      	ldr	r3, [pc, #20]	; (8019030 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801901a:	642b      	str	r3, [r5, #64]	; 0x40
 801901c:	4b07      	ldr	r3, [pc, #28]	; (801903c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801901e:	646b      	str	r3, [r5, #68]	; 0x44
 8019020:	bd38      	pop	{r3, r4, r5, pc}
 8019022:	bf00      	nop
 8019024:	2001567c 	.word	0x2001567c
 8019028:	20000000 	.word	0x20000000
 801902c:	08016de9 	.word	0x08016de9
 8019030:	200000c0 	.word	0x200000c0
 8019034:	20015680 	.word	0x20015680
 8019038:	08016de7 	.word	0x08016de7
 801903c:	200000c4 	.word	0x200000c4

08019040 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 8019040:	b538      	push	{r3, r4, r5, lr}
 8019042:	4c15      	ldr	r4, [pc, #84]	; (8019098 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 8019044:	7823      	ldrb	r3, [r4, #0]
 8019046:	f3bf 8f5b 	dmb	ish
 801904a:	07da      	lsls	r2, r3, #31
 801904c:	4605      	mov	r5, r0
 801904e:	d40b      	bmi.n	8019068 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8019050:	4620      	mov	r0, r4
 8019052:	f007 fb4b 	bl	80206ec <__cxa_guard_acquire>
 8019056:	b138      	cbz	r0, 8019068 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8019058:	4620      	mov	r0, r4
 801905a:	f007 fb53 	bl	8020704 <__cxa_guard_release>
 801905e:	4a0f      	ldr	r2, [pc, #60]	; (801909c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8019060:	490f      	ldr	r1, [pc, #60]	; (80190a0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 8019062:	4810      	ldr	r0, [pc, #64]	; (80190a4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8019064:	f007 fb3b 	bl	80206de <__aeabi_atexit>
 8019068:	4c0f      	ldr	r4, [pc, #60]	; (80190a8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 801906a:	7823      	ldrb	r3, [r4, #0]
 801906c:	f3bf 8f5b 	dmb	ish
 8019070:	07db      	lsls	r3, r3, #31
 8019072:	d40b      	bmi.n	801908c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8019074:	4620      	mov	r0, r4
 8019076:	f007 fb39 	bl	80206ec <__cxa_guard_acquire>
 801907a:	b138      	cbz	r0, 801908c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801907c:	4620      	mov	r0, r4
 801907e:	f007 fb41 	bl	8020704 <__cxa_guard_release>
 8019082:	4a06      	ldr	r2, [pc, #24]	; (801909c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8019084:	4909      	ldr	r1, [pc, #36]	; (80190ac <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 8019086:	480a      	ldr	r0, [pc, #40]	; (80190b0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8019088:	f007 fb29 	bl	80206de <__aeabi_atexit>
 801908c:	4b05      	ldr	r3, [pc, #20]	; (80190a4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801908e:	63ab      	str	r3, [r5, #56]	; 0x38
 8019090:	4b07      	ldr	r3, [pc, #28]	; (80190b0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8019092:	63eb      	str	r3, [r5, #60]	; 0x3c
 8019094:	bd38      	pop	{r3, r4, r5, pc}
 8019096:	bf00      	nop
 8019098:	2001569c 	.word	0x2001569c
 801909c:	20000000 	.word	0x20000000
 80190a0:	08016ded 	.word	0x08016ded
 80190a4:	200000e0 	.word	0x200000e0
 80190a8:	200156a0 	.word	0x200156a0
 80190ac:	08016deb 	.word	0x08016deb
 80190b0:	200000e4 	.word	0x200000e4

080190b4 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 80190b4:	b510      	push	{r4, lr}
 80190b6:	4604      	mov	r4, r0
 80190b8:	f7ff ff14 	bl	8018ee4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 80190bc:	4620      	mov	r0, r4
 80190be:	f7ff ff85 	bl	8018fcc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 80190c2:	4620      	mov	r0, r4
 80190c4:	f7ff ff48 	bl	8018f58 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 80190c8:	4620      	mov	r0, r4
 80190ca:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80190ce:	f7ff bfb7 	b.w	8019040 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

080190d4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 80190d4:	b538      	push	{r3, r4, r5, lr}
 80190d6:	4c15      	ldr	r4, [pc, #84]	; (801912c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 80190d8:	7823      	ldrb	r3, [r4, #0]
 80190da:	f3bf 8f5b 	dmb	ish
 80190de:	07da      	lsls	r2, r3, #31
 80190e0:	4605      	mov	r5, r0
 80190e2:	d40b      	bmi.n	80190fc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 80190e4:	4620      	mov	r0, r4
 80190e6:	f007 fb01 	bl	80206ec <__cxa_guard_acquire>
 80190ea:	b138      	cbz	r0, 80190fc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 80190ec:	4620      	mov	r0, r4
 80190ee:	f007 fb09 	bl	8020704 <__cxa_guard_release>
 80190f2:	4a0f      	ldr	r2, [pc, #60]	; (8019130 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 80190f4:	490f      	ldr	r1, [pc, #60]	; (8019134 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 80190f6:	4810      	ldr	r0, [pc, #64]	; (8019138 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 80190f8:	f007 faf1 	bl	80206de <__aeabi_atexit>
 80190fc:	4c0f      	ldr	r4, [pc, #60]	; (801913c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 80190fe:	7823      	ldrb	r3, [r4, #0]
 8019100:	f3bf 8f5b 	dmb	ish
 8019104:	07db      	lsls	r3, r3, #31
 8019106:	d40b      	bmi.n	8019120 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8019108:	4620      	mov	r0, r4
 801910a:	f007 faef 	bl	80206ec <__cxa_guard_acquire>
 801910e:	b138      	cbz	r0, 8019120 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8019110:	4620      	mov	r0, r4
 8019112:	f007 faf7 	bl	8020704 <__cxa_guard_release>
 8019116:	4a06      	ldr	r2, [pc, #24]	; (8019130 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8019118:	4909      	ldr	r1, [pc, #36]	; (8019140 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 801911a:	480a      	ldr	r0, [pc, #40]	; (8019144 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801911c:	f007 fadf 	bl	80206de <__aeabi_atexit>
 8019120:	4b05      	ldr	r3, [pc, #20]	; (8019138 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8019122:	662b      	str	r3, [r5, #96]	; 0x60
 8019124:	4b07      	ldr	r3, [pc, #28]	; (8019144 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8019126:	666b      	str	r3, [r5, #100]	; 0x64
 8019128:	bd38      	pop	{r3, r4, r5, pc}
 801912a:	bf00      	nop
 801912c:	20015684 	.word	0x20015684
 8019130:	20000000 	.word	0x20000000
 8019134:	08016dd9 	.word	0x08016dd9
 8019138:	200000c8 	.word	0x200000c8
 801913c:	20015688 	.word	0x20015688
 8019140:	08016dd7 	.word	0x08016dd7
 8019144:	200000cc 	.word	0x200000cc

08019148 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 8019148:	b538      	push	{r3, r4, r5, lr}
 801914a:	4c15      	ldr	r4, [pc, #84]	; (80191a0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 801914c:	7823      	ldrb	r3, [r4, #0]
 801914e:	f3bf 8f5b 	dmb	ish
 8019152:	07da      	lsls	r2, r3, #31
 8019154:	4605      	mov	r5, r0
 8019156:	d40b      	bmi.n	8019170 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8019158:	4620      	mov	r0, r4
 801915a:	f007 fac7 	bl	80206ec <__cxa_guard_acquire>
 801915e:	b138      	cbz	r0, 8019170 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8019160:	4620      	mov	r0, r4
 8019162:	f007 facf 	bl	8020704 <__cxa_guard_release>
 8019166:	4a0f      	ldr	r2, [pc, #60]	; (80191a4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8019168:	490f      	ldr	r1, [pc, #60]	; (80191a8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801916a:	4810      	ldr	r0, [pc, #64]	; (80191ac <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801916c:	f007 fab7 	bl	80206de <__aeabi_atexit>
 8019170:	4c0f      	ldr	r4, [pc, #60]	; (80191b0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 8019172:	7823      	ldrb	r3, [r4, #0]
 8019174:	f3bf 8f5b 	dmb	ish
 8019178:	07db      	lsls	r3, r3, #31
 801917a:	d40b      	bmi.n	8019194 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801917c:	4620      	mov	r0, r4
 801917e:	f007 fab5 	bl	80206ec <__cxa_guard_acquire>
 8019182:	b138      	cbz	r0, 8019194 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8019184:	4620      	mov	r0, r4
 8019186:	f007 fabd 	bl	8020704 <__cxa_guard_release>
 801918a:	4a06      	ldr	r2, [pc, #24]	; (80191a4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801918c:	4909      	ldr	r1, [pc, #36]	; (80191b4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801918e:	480a      	ldr	r0, [pc, #40]	; (80191b8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8019190:	f007 faa5 	bl	80206de <__aeabi_atexit>
 8019194:	4b05      	ldr	r3, [pc, #20]	; (80191ac <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8019196:	65ab      	str	r3, [r5, #88]	; 0x58
 8019198:	4b07      	ldr	r3, [pc, #28]	; (80191b8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801919a:	65eb      	str	r3, [r5, #92]	; 0x5c
 801919c:	bd38      	pop	{r3, r4, r5, pc}
 801919e:	bf00      	nop
 80191a0:	2001565c 	.word	0x2001565c
 80191a4:	20000000 	.word	0x20000000
 80191a8:	08016ddd 	.word	0x08016ddd
 80191ac:	200000a0 	.word	0x200000a0
 80191b0:	20015660 	.word	0x20015660
 80191b4:	08016ddb 	.word	0x08016ddb
 80191b8:	200000a4 	.word	0x200000a4

080191bc <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 80191bc:	b510      	push	{r4, lr}
 80191be:	4604      	mov	r4, r0
 80191c0:	f7ff ff88 	bl	80190d4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 80191c4:	4620      	mov	r0, r4
 80191c6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80191ca:	f7ff bfbd 	b.w	8019148 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

080191d0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 80191d0:	b538      	push	{r3, r4, r5, lr}
 80191d2:	4c15      	ldr	r4, [pc, #84]	; (8019228 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 80191d4:	7823      	ldrb	r3, [r4, #0]
 80191d6:	f3bf 8f5b 	dmb	ish
 80191da:	07da      	lsls	r2, r3, #31
 80191dc:	4605      	mov	r5, r0
 80191de:	d40b      	bmi.n	80191f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 80191e0:	4620      	mov	r0, r4
 80191e2:	f007 fa83 	bl	80206ec <__cxa_guard_acquire>
 80191e6:	b138      	cbz	r0, 80191f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 80191e8:	4620      	mov	r0, r4
 80191ea:	f007 fa8b 	bl	8020704 <__cxa_guard_release>
 80191ee:	4a0f      	ldr	r2, [pc, #60]	; (801922c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 80191f0:	490f      	ldr	r1, [pc, #60]	; (8019230 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 80191f2:	4810      	ldr	r0, [pc, #64]	; (8019234 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 80191f4:	f007 fa73 	bl	80206de <__aeabi_atexit>
 80191f8:	4c0f      	ldr	r4, [pc, #60]	; (8019238 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 80191fa:	7823      	ldrb	r3, [r4, #0]
 80191fc:	f3bf 8f5b 	dmb	ish
 8019200:	07db      	lsls	r3, r3, #31
 8019202:	d40b      	bmi.n	801921c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8019204:	4620      	mov	r0, r4
 8019206:	f007 fa71 	bl	80206ec <__cxa_guard_acquire>
 801920a:	b138      	cbz	r0, 801921c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801920c:	4620      	mov	r0, r4
 801920e:	f007 fa79 	bl	8020704 <__cxa_guard_release>
 8019212:	4a06      	ldr	r2, [pc, #24]	; (801922c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8019214:	4909      	ldr	r1, [pc, #36]	; (801923c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 8019216:	480a      	ldr	r0, [pc, #40]	; (8019240 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8019218:	f007 fa61 	bl	80206de <__aeabi_atexit>
 801921c:	4b05      	ldr	r3, [pc, #20]	; (8019234 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801921e:	672b      	str	r3, [r5, #112]	; 0x70
 8019220:	4b07      	ldr	r3, [pc, #28]	; (8019240 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8019222:	676b      	str	r3, [r5, #116]	; 0x74
 8019224:	bd38      	pop	{r3, r4, r5, pc}
 8019226:	bf00      	nop
 8019228:	20015654 	.word	0x20015654
 801922c:	20000000 	.word	0x20000000
 8019230:	08016dd1 	.word	0x08016dd1
 8019234:	20000098 	.word	0x20000098
 8019238:	20015658 	.word	0x20015658
 801923c:	08016dcf 	.word	0x08016dcf
 8019240:	2000009c 	.word	0x2000009c

08019244 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 8019244:	b538      	push	{r3, r4, r5, lr}
 8019246:	4c15      	ldr	r4, [pc, #84]	; (801929c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 8019248:	7823      	ldrb	r3, [r4, #0]
 801924a:	f3bf 8f5b 	dmb	ish
 801924e:	07da      	lsls	r2, r3, #31
 8019250:	4605      	mov	r5, r0
 8019252:	d40b      	bmi.n	801926c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8019254:	4620      	mov	r0, r4
 8019256:	f007 fa49 	bl	80206ec <__cxa_guard_acquire>
 801925a:	b138      	cbz	r0, 801926c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801925c:	4620      	mov	r0, r4
 801925e:	f007 fa51 	bl	8020704 <__cxa_guard_release>
 8019262:	4a0f      	ldr	r2, [pc, #60]	; (80192a0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8019264:	490f      	ldr	r1, [pc, #60]	; (80192a4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 8019266:	4810      	ldr	r0, [pc, #64]	; (80192a8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8019268:	f007 fa39 	bl	80206de <__aeabi_atexit>
 801926c:	4c0f      	ldr	r4, [pc, #60]	; (80192ac <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801926e:	7823      	ldrb	r3, [r4, #0]
 8019270:	f3bf 8f5b 	dmb	ish
 8019274:	07db      	lsls	r3, r3, #31
 8019276:	d40b      	bmi.n	8019290 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8019278:	4620      	mov	r0, r4
 801927a:	f007 fa37 	bl	80206ec <__cxa_guard_acquire>
 801927e:	b138      	cbz	r0, 8019290 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8019280:	4620      	mov	r0, r4
 8019282:	f007 fa3f 	bl	8020704 <__cxa_guard_release>
 8019286:	4a06      	ldr	r2, [pc, #24]	; (80192a0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8019288:	4909      	ldr	r1, [pc, #36]	; (80192b0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 801928a:	480a      	ldr	r0, [pc, #40]	; (80192b4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801928c:	f007 fa27 	bl	80206de <__aeabi_atexit>
 8019290:	4b05      	ldr	r3, [pc, #20]	; (80192a8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8019292:	66ab      	str	r3, [r5, #104]	; 0x68
 8019294:	4b07      	ldr	r3, [pc, #28]	; (80192b4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8019296:	66eb      	str	r3, [r5, #108]	; 0x6c
 8019298:	bd38      	pop	{r3, r4, r5, pc}
 801929a:	bf00      	nop
 801929c:	2001564c 	.word	0x2001564c
 80192a0:	20000000 	.word	0x20000000
 80192a4:	08016dd5 	.word	0x08016dd5
 80192a8:	20000090 	.word	0x20000090
 80192ac:	20015650 	.word	0x20015650
 80192b0:	08016dd3 	.word	0x08016dd3
 80192b4:	20000094 	.word	0x20000094

080192b8 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 80192b8:	b510      	push	{r4, lr}
 80192ba:	4604      	mov	r4, r0
 80192bc:	f7ff ff88 	bl	80191d0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 80192c0:	4620      	mov	r0, r4
 80192c2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80192c6:	f7ff bfbd 	b.w	8019244 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

080192ca <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 80192ca:	b510      	push	{r4, lr}
 80192cc:	4604      	mov	r4, r0
 80192ce:	f7ff fff3 	bl	80192b8 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 80192d2:	4620      	mov	r0, r4
 80192d4:	f7ff ff72 	bl	80191bc <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 80192d8:	4620      	mov	r0, r4
 80192da:	f7ff fdf9 	bl	8018ed0 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 80192de:	4620      	mov	r0, r4
 80192e0:	f7ff fcfa 	bl	8018cd8 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 80192e4:	4620      	mov	r0, r4
 80192e6:	f7ff fd75 	bl	8018dd4 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 80192ea:	4620      	mov	r0, r4
 80192ec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80192f0:	f7ff bee0 	b.w	80190b4 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

080192f4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 80192f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80192f8:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
 80192fc:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
 8019300:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
 8019304:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 8019308:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 801930c:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 8019310:	8808      	ldrh	r0, [r1, #0]
 8019312:	fb05 4c0e 	mla	ip, r5, lr, r4
 8019316:	2d00      	cmp	r5, #0
 8019318:	eb02 0a0c 	add.w	sl, r2, ip
 801931c:	f2c0 80b0 	blt.w	8019480 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 8019320:	45ab      	cmp	fp, r5
 8019322:	f340 80ad 	ble.w	8019480 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 8019326:	2c00      	cmp	r4, #0
 8019328:	f2c0 80a8 	blt.w	801947c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801932c:	45a6      	cmp	lr, r4
 801932e:	f340 80a5 	ble.w	801947c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 8019332:	f812 200c 	ldrb.w	r2, [r2, ip]
 8019336:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 801933a:	1c62      	adds	r2, r4, #1
 801933c:	f100 80a3 	bmi.w	8019486 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8019340:	4596      	cmp	lr, r2
 8019342:	f340 80a0 	ble.w	8019486 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8019346:	f1b9 0f00 	cmp.w	r9, #0
 801934a:	f000 809c 	beq.w	8019486 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801934e:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8019352:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 8019356:	3501      	adds	r5, #1
 8019358:	f100 8099 	bmi.w	801948e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801935c:	45ab      	cmp	fp, r5
 801935e:	f340 8096 	ble.w	801948e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8019362:	2f00      	cmp	r7, #0
 8019364:	f000 8093 	beq.w	801948e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8019368:	2c00      	cmp	r4, #0
 801936a:	f2c0 808e 	blt.w	801948a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801936e:	45a6      	cmp	lr, r4
 8019370:	f340 808b 	ble.w	801948a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 8019374:	f81a 200e 	ldrb.w	r2, [sl, lr]
 8019378:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 801937c:	3401      	adds	r4, #1
 801937e:	f100 8089 	bmi.w	8019494 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8019382:	45a6      	cmp	lr, r4
 8019384:	f340 8086 	ble.w	8019494 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8019388:	f1b9 0f00 	cmp.w	r9, #0
 801938c:	f000 8082 	beq.w	8019494 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8019390:	44d6      	add	lr, sl
 8019392:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8019396:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 801939a:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801939e:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80193a2:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 80193a6:	fb19 fe07 	smulbb	lr, r9, r7
 80193aa:	ea44 0808 	orr.w	r8, r4, r8
 80193ae:	ea4f 440c 	mov.w	r4, ip, lsl #16
 80193b2:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 80193b6:	f1c7 0210 	rsb	r2, r7, #16
 80193ba:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80193be:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80193c2:	ea44 0c0c 	orr.w	ip, r4, ip
 80193c6:	eba2 0209 	sub.w	r2, r2, r9
 80193ca:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 80193ce:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 80193d2:	fb04 f40c 	mul.w	r4, r4, ip
 80193d6:	fb02 4808 	mla	r8, r2, r8, r4
 80193da:	041a      	lsls	r2, r3, #16
 80193dc:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80193e0:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80193e4:	4313      	orrs	r3, r2
 80193e6:	042a      	lsls	r2, r5, #16
 80193e8:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80193ec:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80193f0:	fb0e 8303 	mla	r3, lr, r3, r8
 80193f4:	432a      	orrs	r2, r5
 80193f6:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 80193fa:	fb07 3202 	mla	r2, r7, r2, r3
 80193fe:	0d53      	lsrs	r3, r2, #21
 8019400:	0952      	lsrs	r2, r2, #5
 8019402:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019406:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801940a:	431a      	orrs	r2, r3
 801940c:	b293      	uxth	r3, r2
 801940e:	b2b4      	uxth	r4, r6
 8019410:	1202      	asrs	r2, r0, #8
 8019412:	43f6      	mvns	r6, r6
 8019414:	b2f6      	uxtb	r6, r6
 8019416:	121d      	asrs	r5, r3, #8
 8019418:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801941c:	fb12 f206 	smulbb	r2, r2, r6
 8019420:	10c7      	asrs	r7, r0, #3
 8019422:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8019426:	00c0      	lsls	r0, r0, #3
 8019428:	fb05 2504 	mla	r5, r5, r4, r2
 801942c:	b2c0      	uxtb	r0, r0
 801942e:	10da      	asrs	r2, r3, #3
 8019430:	00db      	lsls	r3, r3, #3
 8019432:	b2db      	uxtb	r3, r3
 8019434:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019438:	fb10 f006 	smulbb	r0, r0, r6
 801943c:	b2ad      	uxth	r5, r5
 801943e:	fb03 0004 	mla	r0, r3, r4, r0
 8019442:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8019446:	fb17 f706 	smulbb	r7, r7, r6
 801944a:	b280      	uxth	r0, r0
 801944c:	1c6b      	adds	r3, r5, #1
 801944e:	fb02 7204 	mla	r2, r2, r4, r7
 8019452:	b292      	uxth	r2, r2
 8019454:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8019458:	1c43      	adds	r3, r0, #1
 801945a:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801945e:	1c50      	adds	r0, r2, #1
 8019460:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8019464:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8019468:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801946c:	0952      	lsrs	r2, r2, #5
 801946e:	432b      	orrs	r3, r5
 8019470:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019474:	4313      	orrs	r3, r2
 8019476:	800b      	strh	r3, [r1, #0]
 8019478:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801947c:	4680      	mov	r8, r0
 801947e:	e75c      	b.n	801933a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 8019480:	4684      	mov	ip, r0
 8019482:	4680      	mov	r8, r0
 8019484:	e767      	b.n	8019356 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 8019486:	4684      	mov	ip, r0
 8019488:	e765      	b.n	8019356 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801948a:	4605      	mov	r5, r0
 801948c:	e776      	b.n	801937c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 801948e:	4603      	mov	r3, r0
 8019490:	4605      	mov	r5, r0
 8019492:	e782      	b.n	801939a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 8019494:	4603      	mov	r3, r0
 8019496:	e780      	b.n	801939a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

08019498 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019498:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801949c:	b099      	sub	sp, #100	; 0x64
 801949e:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
 80194a2:	9215      	str	r2, [sp, #84]	; 0x54
 80194a4:	9309      	str	r3, [sp, #36]	; 0x24
 80194a6:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 80194a8:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
 80194ac:	930d      	str	r3, [sp, #52]	; 0x34
 80194ae:	910c      	str	r1, [sp, #48]	; 0x30
 80194b0:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 80194b4:	9016      	str	r0, [sp, #88]	; 0x58
 80194b6:	6850      	ldr	r0, [r2, #4]
 80194b8:	6812      	ldr	r2, [r2, #0]
 80194ba:	fb00 1303 	mla	r3, r0, r3, r1
 80194be:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 80194c2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80194c4:	681b      	ldr	r3, [r3, #0]
 80194c6:	930b      	str	r3, [sp, #44]	; 0x2c
 80194c8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80194ca:	685e      	ldr	r6, [r3, #4]
 80194cc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80194ce:	43db      	mvns	r3, r3
 80194d0:	b2db      	uxtb	r3, r3
 80194d2:	3604      	adds	r6, #4
 80194d4:	930a      	str	r3, [sp, #40]	; 0x28
 80194d6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80194d8:	2b00      	cmp	r3, #0
 80194da:	dc03      	bgt.n	80194e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 80194dc:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80194de:	2b00      	cmp	r3, #0
 80194e0:	f340 8225 	ble.w	801992e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 80194e4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80194e6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80194ea:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80194ee:	1e48      	subs	r0, r1, #1
 80194f0:	1e57      	subs	r7, r2, #1
 80194f2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80194f4:	2b00      	cmp	r3, #0
 80194f6:	f340 80e3 	ble.w	80196c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 80194fa:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 80194fe:	ea4f 4325 	mov.w	r3, r5, asr #16
 8019502:	d406      	bmi.n	8019512 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019504:	4584      	cmp	ip, r0
 8019506:	da04      	bge.n	8019512 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019508:	2b00      	cmp	r3, #0
 801950a:	db02      	blt.n	8019512 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801950c:	42bb      	cmp	r3, r7
 801950e:	f2c0 80d8 	blt.w	80196c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8019512:	f11c 0c01 	adds.w	ip, ip, #1
 8019516:	f100 80c9 	bmi.w	80196ac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801951a:	4561      	cmp	r1, ip
 801951c:	f2c0 80c6 	blt.w	80196ac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8019520:	3301      	adds	r3, #1
 8019522:	f100 80c3 	bmi.w	80196ac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8019526:	429a      	cmp	r2, r3
 8019528:	f2c0 80c0 	blt.w	80196ac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801952c:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8019530:	4647      	mov	r7, r8
 8019532:	f1bb 0f00 	cmp.w	fp, #0
 8019536:	f340 80e3 	ble.w	8019700 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 801953a:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801953c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801953e:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8019542:	689b      	ldr	r3, [r3, #8]
 8019544:	ea5f 422a 	movs.w	r2, sl, asr #16
 8019548:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801954c:	f3ca 3003 	ubfx	r0, sl, #12, #4
 8019550:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8019554:	f100 8121 	bmi.w	801979a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8019558:	f103 39ff 	add.w	r9, r3, #4294967295
 801955c:	454a      	cmp	r2, r9
 801955e:	f280 811c 	bge.w	801979a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8019562:	f1bc 0f00 	cmp.w	ip, #0
 8019566:	f2c0 8118 	blt.w	801979a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801956a:	f10e 39ff 	add.w	r9, lr, #4294967295
 801956e:	45cc      	cmp	ip, r9
 8019570:	f280 8113 	bge.w	801979a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8019574:	b21b      	sxth	r3, r3
 8019576:	fb0c 2203 	mla	r2, ip, r3, r2
 801957a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801957c:	eb04 0902 	add.w	r9, r4, r2
 8019580:	5ca2      	ldrb	r2, [r4, r2]
 8019582:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 8019586:	2800      	cmp	r0, #0
 8019588:	f000 80fe 	beq.w	8019788 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801958c:	f899 2001 	ldrb.w	r2, [r9, #1]
 8019590:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8019594:	9211      	str	r2, [sp, #68]	; 0x44
 8019596:	b151      	cbz	r1, 80195ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8019598:	eb09 0203 	add.w	r2, r9, r3
 801959c:	f819 3003 	ldrb.w	r3, [r9, r3]
 80195a0:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80195a4:	930f      	str	r3, [sp, #60]	; 0x3c
 80195a6:	7853      	ldrb	r3, [r2, #1]
 80195a8:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80195ac:	9312      	str	r3, [sp, #72]	; 0x48
 80195ae:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80195b0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80195b2:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80195b6:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80195ba:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80195be:	ea4c 0c03 	orr.w	ip, ip, r3
 80195c2:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80195c4:	041b      	lsls	r3, r3, #16
 80195c6:	fb10 f201 	smulbb	r2, r0, r1
 80195ca:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 80195ce:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80195d2:	10d2      	asrs	r2, r2, #3
 80195d4:	4323      	orrs	r3, r4
 80195d6:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 80195da:	4353      	muls	r3, r2
 80195dc:	fb09 330c 	mla	r3, r9, ip, r3
 80195e0:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 80195e4:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80195e8:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80195ec:	ea4c 0e0e 	orr.w	lr, ip, lr
 80195f0:	f1c1 0c10 	rsb	ip, r1, #16
 80195f4:	ebac 0c00 	sub.w	ip, ip, r0
 80195f8:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 80195fc:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8019600:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019602:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8019604:	0418      	lsls	r0, r3, #16
 8019606:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801960a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801960e:	4318      	orrs	r0, r3
 8019610:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8019614:	fb02 c200 	mla	r2, r2, r0, ip
 8019618:	0d53      	lsrs	r3, r2, #21
 801961a:	0952      	lsrs	r2, r2, #5
 801961c:	8838      	ldrh	r0, [r7, #0]
 801961e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019622:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8019626:	431a      	orrs	r2, r3
 8019628:	b292      	uxth	r2, r2
 801962a:	1201      	asrs	r1, r0, #8
 801962c:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 8019630:	ea4f 2c22 	mov.w	ip, r2, asr #8
 8019634:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8019638:	fb11 f104 	smulbb	r1, r1, r4
 801963c:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8019640:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019644:	00c0      	lsls	r0, r0, #3
 8019646:	fb0c 1c03 	mla	ip, ip, r3, r1
 801964a:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801964e:	10d1      	asrs	r1, r2, #3
 8019650:	b2c0      	uxtb	r0, r0
 8019652:	00d2      	lsls	r2, r2, #3
 8019654:	b2d2      	uxtb	r2, r2
 8019656:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801965a:	fb1e fe04 	smulbb	lr, lr, r4
 801965e:	fb10 f004 	smulbb	r0, r0, r4
 8019662:	fa1f fc8c 	uxth.w	ip, ip
 8019666:	fb01 e103 	mla	r1, r1, r3, lr
 801966a:	fb02 0303 	mla	r3, r2, r3, r0
 801966e:	b29a      	uxth	r2, r3
 8019670:	f10c 0301 	add.w	r3, ip, #1
 8019674:	b289      	uxth	r1, r1
 8019676:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801967a:	1c53      	adds	r3, r2, #1
 801967c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8019680:	1c4a      	adds	r2, r1, #1
 8019682:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8019686:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801968a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801968e:	0949      	lsrs	r1, r1, #5
 8019690:	ea43 030c 	orr.w	r3, r3, ip
 8019694:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8019698:	430b      	orrs	r3, r1
 801969a:	803b      	strh	r3, [r7, #0]
 801969c:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801969e:	449a      	add	sl, r3
 80196a0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80196a2:	3702      	adds	r7, #2
 80196a4:	441d      	add	r5, r3
 80196a6:	f10b 3bff 	add.w	fp, fp, #4294967295
 80196aa:	e742      	b.n	8019532 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80196ac:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80196ae:	449a      	add	sl, r3
 80196b0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80196b2:	441d      	add	r5, r3
 80196b4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80196b6:	3b01      	subs	r3, #1
 80196b8:	9309      	str	r3, [sp, #36]	; 0x24
 80196ba:	f108 0802 	add.w	r8, r8, #2
 80196be:	e718      	b.n	80194f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 80196c0:	d023      	beq.n	801970a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 80196c2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80196c4:	9825      	ldr	r0, [sp, #148]	; 0x94
 80196c6:	3b01      	subs	r3, #1
 80196c8:	fb00 a003 	mla	r0, r0, r3, sl
 80196cc:	1400      	asrs	r0, r0, #16
 80196ce:	f53f af2d 	bmi.w	801952c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80196d2:	3901      	subs	r1, #1
 80196d4:	4288      	cmp	r0, r1
 80196d6:	f6bf af29 	bge.w	801952c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80196da:	9926      	ldr	r1, [sp, #152]	; 0x98
 80196dc:	fb01 5303 	mla	r3, r1, r3, r5
 80196e0:	141b      	asrs	r3, r3, #16
 80196e2:	f53f af23 	bmi.w	801952c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80196e6:	3a01      	subs	r2, #1
 80196e8:	4293      	cmp	r3, r2
 80196ea:	f6bf af1f 	bge.w	801952c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80196ee:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 80196f2:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 80196f6:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 80196fa:	f1be 0f00 	cmp.w	lr, #0
 80196fe:	dc6c      	bgt.n	80197da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 8019700:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019702:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8019706:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801970a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801970c:	2b00      	cmp	r3, #0
 801970e:	f340 810e 	ble.w	801992e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 8019712:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019716:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801971a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801971e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8019720:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019724:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019728:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801972c:	eef0 6a62 	vmov.f32	s13, s5
 8019730:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019734:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019738:	ee77 2a62 	vsub.f32	s5, s14, s5
 801973c:	ee16 aa90 	vmov	sl, s13
 8019740:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019744:	eef0 6a43 	vmov.f32	s13, s6
 8019748:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801974c:	ee12 2a90 	vmov	r2, s5
 8019750:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019754:	fb92 f3f3 	sdiv	r3, r2, r3
 8019758:	ee13 2a10 	vmov	r2, s6
 801975c:	9325      	str	r3, [sp, #148]	; 0x94
 801975e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8019760:	fb92 f3f3 	sdiv	r3, r2, r3
 8019764:	9326      	str	r3, [sp, #152]	; 0x98
 8019766:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8019768:	9a15      	ldr	r2, [sp, #84]	; 0x54
 801976a:	3b01      	subs	r3, #1
 801976c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019770:	930c      	str	r3, [sp, #48]	; 0x30
 8019772:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8019774:	bf08      	it	eq
 8019776:	4613      	moveq	r3, r2
 8019778:	ee16 5a90 	vmov	r5, s13
 801977c:	9309      	str	r3, [sp, #36]	; 0x24
 801977e:	eeb0 3a67 	vmov.f32	s6, s15
 8019782:	eef0 2a47 	vmov.f32	s5, s14
 8019786:	e6a6      	b.n	80194d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8019788:	2900      	cmp	r1, #0
 801978a:	f43f af10 	beq.w	80195ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801978e:	f819 3003 	ldrb.w	r3, [r9, r3]
 8019792:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019796:	930f      	str	r3, [sp, #60]	; 0x3c
 8019798:	e709      	b.n	80195ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801979a:	f112 0901 	adds.w	r9, r2, #1
 801979e:	f53f af7d 	bmi.w	801969c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80197a2:	454b      	cmp	r3, r9
 80197a4:	f6ff af7a 	blt.w	801969c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80197a8:	f11c 0901 	adds.w	r9, ip, #1
 80197ac:	f53f af76 	bmi.w	801969c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80197b0:	45ce      	cmp	lr, r9
 80197b2:	f6ff af73 	blt.w	801969c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80197b6:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80197b8:	9202      	str	r2, [sp, #8]
 80197ba:	b21b      	sxth	r3, r3
 80197bc:	fa0f f28e 	sxth.w	r2, lr
 80197c0:	e9cd 1405 	strd	r1, r4, [sp, #20]
 80197c4:	e9cd c003 	strd	ip, r0, [sp, #12]
 80197c8:	9201      	str	r2, [sp, #4]
 80197ca:	9300      	str	r3, [sp, #0]
 80197cc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80197ce:	9816      	ldr	r0, [sp, #88]	; 0x58
 80197d0:	4633      	mov	r3, r6
 80197d2:	4639      	mov	r1, r7
 80197d4:	f7ff fd8e 	bl	80192f4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 80197d8:	e760      	b.n	801969c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80197da:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80197dc:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80197de:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80197e2:	ea4f 422a 	mov.w	r2, sl, asr #16
 80197e6:	1429      	asrs	r1, r5, #16
 80197e8:	fb03 2101 	mla	r1, r3, r1, r2
 80197ec:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80197ee:	440a      	add	r2, r1
 80197f0:	5c61      	ldrb	r1, [r4, r1]
 80197f2:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 80197f6:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80197fa:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 80197fe:	f1bc 0f00 	cmp.w	ip, #0
 8019802:	f000 808c 	beq.w	801991e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 8019806:	7857      	ldrb	r7, [r2, #1]
 8019808:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 801980c:	9413      	str	r4, [sp, #76]	; 0x4c
 801980e:	b140      	cbz	r0, 8019822 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8019810:	18d7      	adds	r7, r2, r3
 8019812:	5cd3      	ldrb	r3, [r2, r3]
 8019814:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019818:	9310      	str	r3, [sp, #64]	; 0x40
 801981a:	787b      	ldrb	r3, [r7, #1]
 801981c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019820:	9314      	str	r3, [sp, #80]	; 0x50
 8019822:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8019824:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8019826:	fb1c f200 	smulbb	r2, ip, r0
 801982a:	041f      	lsls	r7, r3, #16
 801982c:	10d2      	asrs	r2, r2, #3
 801982e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8019832:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 8019836:	431f      	orrs	r7, r3
 8019838:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 801983c:	9317      	str	r3, [sp, #92]	; 0x5c
 801983e:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8019840:	041b      	lsls	r3, r3, #16
 8019842:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 8019846:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801984a:	ea43 030b 	orr.w	r3, r3, fp
 801984e:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8019850:	4353      	muls	r3, r2
 8019852:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8019856:	fb04 3707 	mla	r7, r4, r7, r3
 801985a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801985e:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8019862:	ea43 0b01 	orr.w	fp, r3, r1
 8019866:	f1c0 0110 	rsb	r1, r0, #16
 801986a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801986c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801986e:	eba1 0c0c 	sub.w	ip, r1, ip
 8019872:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8019876:	fb0c 770b 	mla	r7, ip, fp, r7
 801987a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801987e:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 8019882:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8019886:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801988a:	ea4c 0c0b 	orr.w	ip, ip, fp
 801988e:	fb02 770c 	mla	r7, r2, ip, r7
 8019892:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8019894:	0d79      	lsrs	r1, r7, #21
 8019896:	097f      	lsrs	r7, r7, #5
 8019898:	8812      	ldrh	r2, [r2, #0]
 801989a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801989e:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80198a2:	430f      	orrs	r7, r1
 80198a4:	b2bb      	uxth	r3, r7
 80198a6:	1211      	asrs	r1, r2, #8
 80198a8:	1218      	asrs	r0, r3, #8
 80198aa:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80198ae:	fb11 f104 	smulbb	r1, r1, r4
 80198b2:	10d7      	asrs	r7, r2, #3
 80198b4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80198b8:	00d2      	lsls	r2, r2, #3
 80198ba:	fb00 1009 	mla	r0, r0, r9, r1
 80198be:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80198c2:	10d9      	asrs	r1, r3, #3
 80198c4:	b2d2      	uxtb	r2, r2
 80198c6:	00db      	lsls	r3, r3, #3
 80198c8:	fb17 f704 	smulbb	r7, r7, r4
 80198cc:	fb12 f204 	smulbb	r2, r2, r4
 80198d0:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80198d4:	b2db      	uxtb	r3, r3
 80198d6:	b280      	uxth	r0, r0
 80198d8:	fb01 7109 	mla	r1, r1, r9, r7
 80198dc:	fb03 2309 	mla	r3, r3, r9, r2
 80198e0:	b29b      	uxth	r3, r3
 80198e2:	b289      	uxth	r1, r1
 80198e4:	1c42      	adds	r2, r0, #1
 80198e6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80198ea:	1c4f      	adds	r7, r1, #1
 80198ec:	1c5a      	adds	r2, r3, #1
 80198ee:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 80198f2:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 80198f6:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 80198fa:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80198fe:	0949      	lsrs	r1, r1, #5
 8019900:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019902:	4310      	orrs	r0, r2
 8019904:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8019908:	4308      	orrs	r0, r1
 801990a:	f823 0b02 	strh.w	r0, [r3], #2
 801990e:	930e      	str	r3, [sp, #56]	; 0x38
 8019910:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8019912:	449a      	add	sl, r3
 8019914:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019916:	f10e 3eff 	add.w	lr, lr, #4294967295
 801991a:	441d      	add	r5, r3
 801991c:	e6ed      	b.n	80196fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 801991e:	2800      	cmp	r0, #0
 8019920:	f43f af7f 	beq.w	8019822 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8019924:	5cd3      	ldrb	r3, [r2, r3]
 8019926:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801992a:	9310      	str	r3, [sp, #64]	; 0x40
 801992c:	e779      	b.n	8019822 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801992e:	b019      	add	sp, #100	; 0x64
 8019930:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019934 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8019934:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8019938:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
 801993c:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 8019940:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 8019944:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 8019948:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 801994c:	8808      	ldrh	r0, [r1, #0]
 801994e:	fb08 470e 	mla	r7, r8, lr, r4
 8019952:	f1b8 0f00 	cmp.w	r8, #0
 8019956:	eb02 0907 	add.w	r9, r2, r7
 801995a:	db67      	blt.n	8019a2c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801995c:	45c2      	cmp	sl, r8
 801995e:	dd65      	ble.n	8019a2c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8019960:	2c00      	cmp	r4, #0
 8019962:	db61      	blt.n	8019a28 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8019964:	45a6      	cmp	lr, r4
 8019966:	dd5f      	ble.n	8019a28 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8019968:	5dd2      	ldrb	r2, [r2, r7]
 801996a:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801996e:	1c62      	adds	r2, r4, #1
 8019970:	d45f      	bmi.n	8019a32 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8019972:	4596      	cmp	lr, r2
 8019974:	dd5d      	ble.n	8019a32 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8019976:	2d00      	cmp	r5, #0
 8019978:	d05b      	beq.n	8019a32 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801997a:	f899 2001 	ldrb.w	r2, [r9, #1]
 801997e:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8019982:	f118 0801 	adds.w	r8, r8, #1
 8019986:	d458      	bmi.n	8019a3a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8019988:	45c2      	cmp	sl, r8
 801998a:	dd56      	ble.n	8019a3a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801998c:	2e00      	cmp	r6, #0
 801998e:	d054      	beq.n	8019a3a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8019990:	2c00      	cmp	r4, #0
 8019992:	db50      	blt.n	8019a36 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8019994:	45a6      	cmp	lr, r4
 8019996:	dd4e      	ble.n	8019a36 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8019998:	f819 200e 	ldrb.w	r2, [r9, lr]
 801999c:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 80199a0:	3401      	adds	r4, #1
 80199a2:	d407      	bmi.n	80199b4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 80199a4:	45a6      	cmp	lr, r4
 80199a6:	dd05      	ble.n	80199b4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 80199a8:	b125      	cbz	r5, 80199b4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 80199aa:	44ce      	add	lr, r9
 80199ac:	f89e 0001 	ldrb.w	r0, [lr, #1]
 80199b0:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 80199b4:	ea4f 430c 	mov.w	r3, ip, lsl #16
 80199b8:	fb15 f406 	smulbb	r4, r5, r6
 80199bc:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80199c0:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 80199c4:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80199c8:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 80199cc:	ea43 0c0c 	orr.w	ip, r3, ip
 80199d0:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80199d4:	f1c6 0310 	rsb	r3, r6, #16
 80199d8:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80199dc:	1b5b      	subs	r3, r3, r5
 80199de:	ea4e 0707 	orr.w	r7, lr, r7
 80199e2:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 80199e6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80199ea:	437d      	muls	r5, r7
 80199ec:	fb03 5c0c 	mla	ip, r3, ip, r5
 80199f0:	0403      	lsls	r3, r0, #16
 80199f2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80199f6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80199fa:	4318      	orrs	r0, r3
 80199fc:	0413      	lsls	r3, r2, #16
 80199fe:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8019a02:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8019a06:	4313      	orrs	r3, r2
 8019a08:	fb04 c000 	mla	r0, r4, r0, ip
 8019a0c:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8019a10:	fb06 0003 	mla	r0, r6, r3, r0
 8019a14:	0d43      	lsrs	r3, r0, #21
 8019a16:	0940      	lsrs	r0, r0, #5
 8019a18:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019a1c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8019a20:	4318      	orrs	r0, r3
 8019a22:	8008      	strh	r0, [r1, #0]
 8019a24:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8019a28:	4684      	mov	ip, r0
 8019a2a:	e7a0      	b.n	801996e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 8019a2c:	4607      	mov	r7, r0
 8019a2e:	4684      	mov	ip, r0
 8019a30:	e7a7      	b.n	8019982 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 8019a32:	4607      	mov	r7, r0
 8019a34:	e7a5      	b.n	8019982 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 8019a36:	4602      	mov	r2, r0
 8019a38:	e7b2      	b.n	80199a0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 8019a3a:	4602      	mov	r2, r0
 8019a3c:	e7ba      	b.n	80199b4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

08019a3e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019a3e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019a42:	b093      	sub	sp, #76	; 0x4c
 8019a44:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8019a48:	920f      	str	r2, [sp, #60]	; 0x3c
 8019a4a:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8019a4c:	9108      	str	r1, [sp, #32]
 8019a4e:	9306      	str	r3, [sp, #24]
 8019a50:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8019a54:	9010      	str	r0, [sp, #64]	; 0x40
 8019a56:	6850      	ldr	r0, [r2, #4]
 8019a58:	6812      	ldr	r2, [r2, #0]
 8019a5a:	fb00 1303 	mla	r3, r0, r3, r1
 8019a5e:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8019a62:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019a64:	681b      	ldr	r3, [r3, #0]
 8019a66:	9307      	str	r3, [sp, #28]
 8019a68:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019a6a:	685f      	ldr	r7, [r3, #4]
 8019a6c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019a70:	3704      	adds	r7, #4
 8019a72:	9b08      	ldr	r3, [sp, #32]
 8019a74:	2b00      	cmp	r3, #0
 8019a76:	dc03      	bgt.n	8019a80 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8019a78:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019a7a:	2b00      	cmp	r3, #0
 8019a7c:	f340 81b2 	ble.w	8019de4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8019a80:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019a82:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019a86:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8019a8a:	1e48      	subs	r0, r1, #1
 8019a8c:	f102 3cff 	add.w	ip, r2, #4294967295
 8019a90:	9b06      	ldr	r3, [sp, #24]
 8019a92:	2b00      	cmp	r3, #0
 8019a94:	f340 80a9 	ble.w	8019bea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 8019a98:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8019a9c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8019aa0:	d406      	bmi.n	8019ab0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019aa2:	4586      	cmp	lr, r0
 8019aa4:	da04      	bge.n	8019ab0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019aa6:	2b00      	cmp	r3, #0
 8019aa8:	db02      	blt.n	8019ab0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019aaa:	4563      	cmp	r3, ip
 8019aac:	f2c0 809e 	blt.w	8019bec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8019ab0:	f11e 0e01 	adds.w	lr, lr, #1
 8019ab4:	f100 808f 	bmi.w	8019bd6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019ab8:	4571      	cmp	r1, lr
 8019aba:	f2c0 808c 	blt.w	8019bd6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019abe:	3301      	adds	r3, #1
 8019ac0:	f100 8089 	bmi.w	8019bd6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019ac4:	429a      	cmp	r2, r3
 8019ac6:	f2c0 8086 	blt.w	8019bd6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019aca:	f8dd b018 	ldr.w	fp, [sp, #24]
 8019ace:	46c8      	mov	r8, r9
 8019ad0:	f1bb 0f00 	cmp.w	fp, #0
 8019ad4:	f340 80a6 	ble.w	8019c24 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8019ad8:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8019ada:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019adc:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8019ae0:	689b      	ldr	r3, [r3, #8]
 8019ae2:	1422      	asrs	r2, r4, #16
 8019ae4:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8019ae8:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8019aec:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8019af0:	f100 80e3 	bmi.w	8019cba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8019af4:	f103 3aff 	add.w	sl, r3, #4294967295
 8019af8:	4552      	cmp	r2, sl
 8019afa:	f280 80de 	bge.w	8019cba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8019afe:	f1bc 0f00 	cmp.w	ip, #0
 8019b02:	f2c0 80da 	blt.w	8019cba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8019b06:	f10e 3aff 	add.w	sl, lr, #4294967295
 8019b0a:	45d4      	cmp	ip, sl
 8019b0c:	f280 80d5 	bge.w	8019cba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8019b10:	b21b      	sxth	r3, r3
 8019b12:	fb0c 2203 	mla	r2, ip, r3, r2
 8019b16:	9d07      	ldr	r5, [sp, #28]
 8019b18:	eb05 0a02 	add.w	sl, r5, r2
 8019b1c:	5caa      	ldrb	r2, [r5, r2]
 8019b1e:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 8019b22:	2800      	cmp	r0, #0
 8019b24:	f000 80c0 	beq.w	8019ca8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 8019b28:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8019b2c:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 8019b30:	920b      	str	r2, [sp, #44]	; 0x2c
 8019b32:	b151      	cbz	r1, 8019b4a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8019b34:	eb0a 0203 	add.w	r2, sl, r3
 8019b38:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8019b3c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8019b40:	9309      	str	r3, [sp, #36]	; 0x24
 8019b42:	7853      	ldrb	r3, [r2, #1]
 8019b44:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8019b48:	930c      	str	r3, [sp, #48]	; 0x30
 8019b4a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019b4c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8019b4e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8019b52:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8019b56:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8019b5a:	ea4c 0c03 	orr.w	ip, ip, r3
 8019b5e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8019b60:	041b      	lsls	r3, r3, #16
 8019b62:	fb10 f201 	smulbb	r2, r0, r1
 8019b66:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8019b6a:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8019b6e:	10d2      	asrs	r2, r2, #3
 8019b70:	432b      	orrs	r3, r5
 8019b72:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 8019b76:	4353      	muls	r3, r2
 8019b78:	fb0a 330c 	mla	r3, sl, ip, r3
 8019b7c:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8019b80:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8019b84:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8019b88:	ea4c 0e0e 	orr.w	lr, ip, lr
 8019b8c:	f1c1 0c10 	rsb	ip, r1, #16
 8019b90:	ebac 0c00 	sub.w	ip, ip, r0
 8019b94:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8019b98:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8019b9c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019b9e:	0418      	lsls	r0, r3, #16
 8019ba0:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8019ba4:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8019ba8:	4318      	orrs	r0, r3
 8019baa:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8019bae:	fb02 c200 	mla	r2, r2, r0, ip
 8019bb2:	0d53      	lsrs	r3, r2, #21
 8019bb4:	0952      	lsrs	r2, r2, #5
 8019bb6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019bba:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8019bbe:	431a      	orrs	r2, r3
 8019bc0:	f8a8 2000 	strh.w	r2, [r8]
 8019bc4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8019bc6:	441c      	add	r4, r3
 8019bc8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019bca:	f108 0802 	add.w	r8, r8, #2
 8019bce:	441e      	add	r6, r3
 8019bd0:	f10b 3bff 	add.w	fp, fp, #4294967295
 8019bd4:	e77c      	b.n	8019ad0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8019bd6:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8019bd8:	441c      	add	r4, r3
 8019bda:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019bdc:	441e      	add	r6, r3
 8019bde:	9b06      	ldr	r3, [sp, #24]
 8019be0:	3b01      	subs	r3, #1
 8019be2:	9306      	str	r3, [sp, #24]
 8019be4:	f109 0902 	add.w	r9, r9, #2
 8019be8:	e752      	b.n	8019a90 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8019bea:	d020      	beq.n	8019c2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8019bec:	9b06      	ldr	r3, [sp, #24]
 8019bee:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8019bf0:	3b01      	subs	r3, #1
 8019bf2:	fb00 4003 	mla	r0, r0, r3, r4
 8019bf6:	1400      	asrs	r0, r0, #16
 8019bf8:	f53f af67 	bmi.w	8019aca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8019bfc:	3901      	subs	r1, #1
 8019bfe:	4288      	cmp	r0, r1
 8019c00:	f6bf af63 	bge.w	8019aca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8019c04:	9920      	ldr	r1, [sp, #128]	; 0x80
 8019c06:	fb01 6303 	mla	r3, r1, r3, r6
 8019c0a:	141b      	asrs	r3, r3, #16
 8019c0c:	f53f af5d 	bmi.w	8019aca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8019c10:	3a01      	subs	r2, #1
 8019c12:	4293      	cmp	r3, r2
 8019c14:	f6bf af59 	bge.w	8019aca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8019c18:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8019c1c:	46ca      	mov	sl, r9
 8019c1e:	f1b8 0f00 	cmp.w	r8, #0
 8019c22:	dc67      	bgt.n	8019cf4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8019c24:	9b06      	ldr	r3, [sp, #24]
 8019c26:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8019c2a:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8019c2e:	9b08      	ldr	r3, [sp, #32]
 8019c30:	2b00      	cmp	r3, #0
 8019c32:	f340 80d7 	ble.w	8019de4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8019c36:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019c3a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019c3e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019c42:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8019c44:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019c48:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019c4c:	eeb0 6a62 	vmov.f32	s12, s5
 8019c50:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019c54:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019c58:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019c5c:	ee16 4a10 	vmov	r4, s12
 8019c60:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019c64:	eeb0 6a43 	vmov.f32	s12, s6
 8019c68:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019c6c:	ee12 2a90 	vmov	r2, s5
 8019c70:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019c74:	fb92 f3f3 	sdiv	r3, r2, r3
 8019c78:	ee13 2a10 	vmov	r2, s6
 8019c7c:	931f      	str	r3, [sp, #124]	; 0x7c
 8019c7e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8019c80:	fb92 f3f3 	sdiv	r3, r2, r3
 8019c84:	9320      	str	r3, [sp, #128]	; 0x80
 8019c86:	9b08      	ldr	r3, [sp, #32]
 8019c88:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019c8a:	3b01      	subs	r3, #1
 8019c8c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019c90:	9308      	str	r3, [sp, #32]
 8019c92:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8019c94:	bf08      	it	eq
 8019c96:	4613      	moveq	r3, r2
 8019c98:	ee16 6a10 	vmov	r6, s12
 8019c9c:	9306      	str	r3, [sp, #24]
 8019c9e:	eeb0 3a67 	vmov.f32	s6, s15
 8019ca2:	eef0 2a47 	vmov.f32	s5, s14
 8019ca6:	e6e4      	b.n	8019a72 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8019ca8:	2900      	cmp	r1, #0
 8019caa:	f43f af4e 	beq.w	8019b4a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8019cae:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8019cb2:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8019cb6:	9309      	str	r3, [sp, #36]	; 0x24
 8019cb8:	e747      	b.n	8019b4a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8019cba:	f112 0a01 	adds.w	sl, r2, #1
 8019cbe:	d481      	bmi.n	8019bc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019cc0:	4553      	cmp	r3, sl
 8019cc2:	f6ff af7f 	blt.w	8019bc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019cc6:	f11c 0a01 	adds.w	sl, ip, #1
 8019cca:	f53f af7b 	bmi.w	8019bc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019cce:	45d6      	cmp	lr, sl
 8019cd0:	f6ff af78 	blt.w	8019bc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019cd4:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 8019cd8:	b21b      	sxth	r3, r3
 8019cda:	fa0f f28e 	sxth.w	r2, lr
 8019cde:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8019ce2:	9201      	str	r2, [sp, #4]
 8019ce4:	9300      	str	r3, [sp, #0]
 8019ce6:	9a07      	ldr	r2, [sp, #28]
 8019ce8:	9810      	ldr	r0, [sp, #64]	; 0x40
 8019cea:	463b      	mov	r3, r7
 8019cec:	4641      	mov	r1, r8
 8019cee:	f7ff fe21 	bl	8019934 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8019cf2:	e767      	b.n	8019bc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019cf4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019cf6:	9d07      	ldr	r5, [sp, #28]
 8019cf8:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8019cfc:	1422      	asrs	r2, r4, #16
 8019cfe:	1431      	asrs	r1, r6, #16
 8019d00:	fb03 2101 	mla	r1, r3, r1, r2
 8019d04:	9a07      	ldr	r2, [sp, #28]
 8019d06:	440a      	add	r2, r1
 8019d08:	5c69      	ldrb	r1, [r5, r1]
 8019d0a:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 8019d0e:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8019d12:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 8019d16:	f1be 0f00 	cmp.w	lr, #0
 8019d1a:	d05c      	beq.n	8019dd6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8019d1c:	f892 c001 	ldrb.w	ip, [r2, #1]
 8019d20:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 8019d24:	950d      	str	r5, [sp, #52]	; 0x34
 8019d26:	b150      	cbz	r0, 8019d3e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8019d28:	eb02 0c03 	add.w	ip, r2, r3
 8019d2c:	5cd3      	ldrb	r3, [r2, r3]
 8019d2e:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8019d32:	930a      	str	r3, [sp, #40]	; 0x28
 8019d34:	f89c 3001 	ldrb.w	r3, [ip, #1]
 8019d38:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8019d3c:	930e      	str	r3, [sp, #56]	; 0x38
 8019d3e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019d40:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8019d42:	fb1e f200 	smulbb	r2, lr, r0
 8019d46:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8019d4a:	10d2      	asrs	r2, r2, #3
 8019d4c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8019d50:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8019d54:	ea4c 0c03 	orr.w	ip, ip, r3
 8019d58:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 8019d5c:	9311      	str	r3, [sp, #68]	; 0x44
 8019d5e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019d60:	041b      	lsls	r3, r3, #16
 8019d62:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 8019d66:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8019d6a:	ea43 030b 	orr.w	r3, r3, fp
 8019d6e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8019d70:	4353      	muls	r3, r2
 8019d72:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8019d76:	fb05 3c0c 	mla	ip, r5, ip, r3
 8019d7a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8019d7e:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8019d82:	ea43 0b01 	orr.w	fp, r3, r1
 8019d86:	f1c0 0110 	rsb	r1, r0, #16
 8019d8a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019d8c:	eba1 0e0e 	sub.w	lr, r1, lr
 8019d90:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8019d94:	fb0e cc0b 	mla	ip, lr, fp, ip
 8019d98:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8019d9c:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 8019da0:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8019da4:	ea4b 0e0e 	orr.w	lr, fp, lr
 8019da8:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8019dac:	fb02 cc0e 	mla	ip, r2, lr, ip
 8019db0:	ea4f 535c 	mov.w	r3, ip, lsr #21
 8019db4:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8019db8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019dbc:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8019dc0:	ea43 0c0c 	orr.w	ip, r3, ip
 8019dc4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8019dc6:	f82a cb02 	strh.w	ip, [sl], #2
 8019dca:	441c      	add	r4, r3
 8019dcc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019dce:	f108 38ff 	add.w	r8, r8, #4294967295
 8019dd2:	441e      	add	r6, r3
 8019dd4:	e723      	b.n	8019c1e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8019dd6:	2800      	cmp	r0, #0
 8019dd8:	d0b1      	beq.n	8019d3e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8019dda:	5cd3      	ldrb	r3, [r2, r3]
 8019ddc:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8019de0:	930a      	str	r3, [sp, #40]	; 0x28
 8019de2:	e7ac      	b.n	8019d3e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8019de4:	b013      	add	sp, #76	; 0x4c
 8019de6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019dea <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 8019dea:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019dee:	880d      	ldrh	r5, [r1, #0]
 8019df0:	b087      	sub	sp, #28
 8019df2:	10ef      	asrs	r7, r5, #3
 8019df4:	ea4f 2a25 	mov.w	sl, r5, asr #8
 8019df8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019dfc:	00ed      	lsls	r5, r5, #3
 8019dfe:	9701      	str	r7, [sp, #4]
 8019e00:	b2ed      	uxtb	r5, r5
 8019e02:	9502      	str	r5, [sp, #8]
 8019e04:	9d01      	ldr	r5, [sp, #4]
 8019e06:	9103      	str	r1, [sp, #12]
 8019e08:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 8019e0c:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
 8019e10:	9902      	ldr	r1, [sp, #8]
 8019e12:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 8019e16:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 8019e1a:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
 8019e1e:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
 8019e22:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
 8019e26:	022d      	lsls	r5, r5, #8
 8019e28:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 8019e2c:	fb06 0709 	mla	r7, r6, r9, r0
 8019e30:	430d      	orrs	r5, r1
 8019e32:	2e00      	cmp	r6, #0
 8019e34:	eb02 0c07 	add.w	ip, r2, r7
 8019e38:	9505      	str	r5, [sp, #20]
 8019e3a:	f2c0 80b6 	blt.w	8019faa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 8019e3e:	45b3      	cmp	fp, r6
 8019e40:	f340 80b3 	ble.w	8019faa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 8019e44:	2800      	cmp	r0, #0
 8019e46:	f2c0 80ae 	blt.w	8019fa6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8019e4a:	4581      	cmp	r9, r0
 8019e4c:	f340 80ab 	ble.w	8019fa6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8019e50:	5dd7      	ldrb	r7, [r2, r7]
 8019e52:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8019e56:	441f      	add	r7, r3
 8019e58:	1c42      	adds	r2, r0, #1
 8019e5a:	f100 80a9 	bmi.w	8019fb0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8019e5e:	4591      	cmp	r9, r2
 8019e60:	f340 80a6 	ble.w	8019fb0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8019e64:	2c00      	cmp	r4, #0
 8019e66:	f000 80a3 	beq.w	8019fb0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8019e6a:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8019e6e:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8019e72:	441d      	add	r5, r3
 8019e74:	3601      	adds	r6, #1
 8019e76:	f100 809f 	bmi.w	8019fb8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8019e7a:	45b3      	cmp	fp, r6
 8019e7c:	f340 809c 	ble.w	8019fb8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8019e80:	f1be 0f00 	cmp.w	lr, #0
 8019e84:	f000 8098 	beq.w	8019fb8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8019e88:	2800      	cmp	r0, #0
 8019e8a:	f2c0 8093 	blt.w	8019fb4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8019e8e:	4581      	cmp	r9, r0
 8019e90:	f340 8090 	ble.w	8019fb4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8019e94:	f81c 6009 	ldrb.w	r6, [ip, r9]
 8019e98:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8019e9c:	441e      	add	r6, r3
 8019e9e:	3001      	adds	r0, #1
 8019ea0:	f100 808d 	bmi.w	8019fbe <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8019ea4:	4581      	cmp	r9, r0
 8019ea6:	f340 808a 	ble.w	8019fbe <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8019eaa:	2c00      	cmp	r4, #0
 8019eac:	f000 8087 	beq.w	8019fbe <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8019eb0:	44e1      	add	r9, ip
 8019eb2:	f899 2001 	ldrb.w	r2, [r9, #1]
 8019eb6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8019eba:	4413      	add	r3, r2
 8019ebc:	b2a4      	uxth	r4, r4
 8019ebe:	fa1f fe8e 	uxth.w	lr, lr
 8019ec2:	fb04 fb0e 	mul.w	fp, r4, lr
 8019ec6:	0124      	lsls	r4, r4, #4
 8019ec8:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 8019ecc:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
 8019ed0:	eba4 040b 	sub.w	r4, r4, fp
 8019ed4:	fa1f f08e 	uxth.w	r0, lr
 8019ed8:	b2a2      	uxth	r2, r4
 8019eda:	78ac      	ldrb	r4, [r5, #2]
 8019edc:	f897 c002 	ldrb.w	ip, [r7, #2]
 8019ee0:	9901      	ldr	r1, [sp, #4]
 8019ee2:	eba9 0900 	sub.w	r9, r9, r0
 8019ee6:	fa1f f989 	uxth.w	r9, r9
 8019eea:	4354      	muls	r4, r2
 8019eec:	fb09 440c 	mla	r4, r9, ip, r4
 8019ef0:	f896 c002 	ldrb.w	ip, [r6, #2]
 8019ef4:	fb00 440c 	mla	r4, r0, ip, r4
 8019ef8:	f893 c002 	ldrb.w	ip, [r3, #2]
 8019efc:	fa1f fe88 	uxth.w	lr, r8
 8019f00:	ea6f 0808 	mvn.w	r8, r8
 8019f04:	fa5f f888 	uxtb.w	r8, r8
 8019f08:	fb0b 4c0c 	mla	ip, fp, ip, r4
 8019f0c:	fb1a fa08 	smulbb	sl, sl, r8
 8019f10:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8019f14:	fb0c ac0e 	mla	ip, ip, lr, sl
 8019f18:	f895 a001 	ldrb.w	sl, [r5, #1]
 8019f1c:	787c      	ldrb	r4, [r7, #1]
 8019f1e:	782d      	ldrb	r5, [r5, #0]
 8019f20:	783f      	ldrb	r7, [r7, #0]
 8019f22:	fb02 fa0a 	mul.w	sl, r2, sl
 8019f26:	fb09 aa04 	mla	sl, r9, r4, sl
 8019f2a:	7874      	ldrb	r4, [r6, #1]
 8019f2c:	436a      	muls	r2, r5
 8019f2e:	7835      	ldrb	r5, [r6, #0]
 8019f30:	fb00 aa04 	mla	sl, r0, r4, sl
 8019f34:	fb09 2207 	mla	r2, r9, r7, r2
 8019f38:	785c      	ldrb	r4, [r3, #1]
 8019f3a:	781b      	ldrb	r3, [r3, #0]
 8019f3c:	fb00 2005 	mla	r0, r0, r5, r2
 8019f40:	fb0b a404 	mla	r4, fp, r4, sl
 8019f44:	fb0b 0b03 	mla	fp, fp, r3, r0
 8019f48:	9b02      	ldr	r3, [sp, #8]
 8019f4a:	fb11 fa08 	smulbb	sl, r1, r8
 8019f4e:	fa1f fc8c 	uxth.w	ip, ip
 8019f52:	fb13 f808 	smulbb	r8, r3, r8
 8019f56:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 8019f5a:	f3c4 2407 	ubfx	r4, r4, #8, #8
 8019f5e:	fb04 a40e 	mla	r4, r4, lr, sl
 8019f62:	f10c 0301 	add.w	r3, ip, #1
 8019f66:	fb0b 8e0e 	mla	lr, fp, lr, r8
 8019f6a:	fa1f fe8e 	uxth.w	lr, lr
 8019f6e:	b2a4      	uxth	r4, r4
 8019f70:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8019f74:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
 8019f78:	f104 0a01 	add.w	sl, r4, #1
 8019f7c:	f10e 0c01 	add.w	ip, lr, #1
 8019f80:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8019f84:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8019f88:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8019f8c:	0964      	lsrs	r4, r4, #5
 8019f8e:	ea4c 0c03 	orr.w	ip, ip, r3
 8019f92:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8019f96:	9b03      	ldr	r3, [sp, #12]
 8019f98:	ea4c 0c04 	orr.w	ip, ip, r4
 8019f9c:	f8a3 c000 	strh.w	ip, [r3]
 8019fa0:	b007      	add	sp, #28
 8019fa2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019fa6:	af05      	add	r7, sp, #20
 8019fa8:	e756      	b.n	8019e58 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 8019faa:	ad05      	add	r5, sp, #20
 8019fac:	462f      	mov	r7, r5
 8019fae:	e761      	b.n	8019e74 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 8019fb0:	ad05      	add	r5, sp, #20
 8019fb2:	e75f      	b.n	8019e74 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 8019fb4:	ae05      	add	r6, sp, #20
 8019fb6:	e772      	b.n	8019e9e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 8019fb8:	ab05      	add	r3, sp, #20
 8019fba:	461e      	mov	r6, r3
 8019fbc:	e77e      	b.n	8019ebc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 8019fbe:	ab05      	add	r3, sp, #20
 8019fc0:	e77c      	b.n	8019ebc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

08019fc2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019fc2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019fc6:	b095      	sub	sp, #84	; 0x54
 8019fc8:	9212      	str	r2, [sp, #72]	; 0x48
 8019fca:	9309      	str	r3, [sp, #36]	; 0x24
 8019fcc:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8019fce:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 8019fd2:	930f      	str	r3, [sp, #60]	; 0x3c
 8019fd4:	910e      	str	r1, [sp, #56]	; 0x38
 8019fd6:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
 8019fda:	9013      	str	r0, [sp, #76]	; 0x4c
 8019fdc:	6850      	ldr	r0, [r2, #4]
 8019fde:	6812      	ldr	r2, [r2, #0]
 8019fe0:	fb00 1303 	mla	r3, r0, r3, r1
 8019fe4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8019fe8:	930a      	str	r3, [sp, #40]	; 0x28
 8019fea:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019fec:	681b      	ldr	r3, [r3, #0]
 8019fee:	930d      	str	r3, [sp, #52]	; 0x34
 8019ff0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019ff2:	685c      	ldr	r4, [r3, #4]
 8019ff4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019ff6:	43db      	mvns	r3, r3
 8019ff8:	b2db      	uxtb	r3, r3
 8019ffa:	3404      	adds	r4, #4
 8019ffc:	930b      	str	r3, [sp, #44]	; 0x2c
 8019ffe:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a000:	2b00      	cmp	r3, #0
 801a002:	dc03      	bgt.n	801a00c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801a004:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801a006:	2b00      	cmp	r3, #0
 801a008:	f340 8255 	ble.w	801a4b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801a00c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801a00e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a012:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a016:	1e48      	subs	r0, r1, #1
 801a018:	1e55      	subs	r5, r2, #1
 801a01a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a01c:	2b00      	cmp	r3, #0
 801a01e:	f340 80f9 	ble.w	801a214 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801a022:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 801a024:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a026:	1436      	asrs	r6, r6, #16
 801a028:	ea4f 4323 	mov.w	r3, r3, asr #16
 801a02c:	d406      	bmi.n	801a03c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801a02e:	4286      	cmp	r6, r0
 801a030:	da04      	bge.n	801a03c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801a032:	2b00      	cmp	r3, #0
 801a034:	db02      	blt.n	801a03c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801a036:	42ab      	cmp	r3, r5
 801a038:	f2c0 80ed 	blt.w	801a216 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 801a03c:	3601      	adds	r6, #1
 801a03e:	f100 80da 	bmi.w	801a1f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801a042:	42b1      	cmp	r1, r6
 801a044:	f2c0 80d7 	blt.w	801a1f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801a048:	3301      	adds	r3, #1
 801a04a:	f100 80d4 	bmi.w	801a1f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801a04e:	429a      	cmp	r2, r3
 801a050:	f2c0 80d1 	blt.w	801a1f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801a054:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a056:	9311      	str	r3, [sp, #68]	; 0x44
 801a058:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a05a:	930c      	str	r3, [sp, #48]	; 0x30
 801a05c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801a05e:	2b00      	cmp	r3, #0
 801a060:	f340 80fa 	ble.w	801a258 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801a064:	9826      	ldr	r0, [sp, #152]	; 0x98
 801a066:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a068:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801a06a:	68c6      	ldr	r6, [r0, #12]
 801a06c:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801a06e:	141d      	asrs	r5, r3, #16
 801a070:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801a074:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801a076:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801a078:	1400      	asrs	r0, r0, #16
 801a07a:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801a07e:	6892      	ldr	r2, [r2, #8]
 801a080:	f100 813e 	bmi.w	801a300 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801a084:	1e57      	subs	r7, r2, #1
 801a086:	42b8      	cmp	r0, r7
 801a088:	f280 813a 	bge.w	801a300 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801a08c:	2d00      	cmp	r5, #0
 801a08e:	f2c0 8137 	blt.w	801a300 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801a092:	1e77      	subs	r7, r6, #1
 801a094:	42bd      	cmp	r5, r7
 801a096:	f280 8133 	bge.w	801a300 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801a09a:	b212      	sxth	r2, r2
 801a09c:	fb05 0002 	mla	r0, r5, r2, r0
 801a0a0:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801a0a2:	f815 a000 	ldrb.w	sl, [r5, r0]
 801a0a6:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 801a0aa:	182e      	adds	r6, r5, r0
 801a0ac:	eb04 050a 	add.w	r5, r4, sl
 801a0b0:	2b00      	cmp	r3, #0
 801a0b2:	f000 8117 	beq.w	801a2e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 801a0b6:	f896 c001 	ldrb.w	ip, [r6, #1]
 801a0ba:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801a0be:	44a4      	add	ip, r4
 801a0c0:	2900      	cmp	r1, #0
 801a0c2:	f000 8117 	beq.w	801a2f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 801a0c6:	18b0      	adds	r0, r6, r2
 801a0c8:	5cb2      	ldrb	r2, [r6, r2]
 801a0ca:	7840      	ldrb	r0, [r0, #1]
 801a0cc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a0d0:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801a0d4:	4422      	add	r2, r4
 801a0d6:	4420      	add	r0, r4
 801a0d8:	b29b      	uxth	r3, r3
 801a0da:	b289      	uxth	r1, r1
 801a0dc:	fb03 f901 	mul.w	r9, r3, r1
 801a0e0:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801a0e4:	011b      	lsls	r3, r3, #4
 801a0e6:	b289      	uxth	r1, r1
 801a0e8:	f89c 7002 	ldrb.w	r7, [ip, #2]
 801a0ec:	f895 b002 	ldrb.w	fp, [r5, #2]
 801a0f0:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801a0f2:	f814 a00a 	ldrb.w	sl, [r4, sl]
 801a0f6:	f8b6 e000 	ldrh.w	lr, [r6]
 801a0fa:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 801a0fe:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 801a102:	eba3 0309 	sub.w	r3, r3, r9
 801a106:	b29b      	uxth	r3, r3
 801a108:	eba8 0801 	sub.w	r8, r8, r1
 801a10c:	fa1f f888 	uxth.w	r8, r8
 801a110:	435f      	muls	r7, r3
 801a112:	fb08 770b 	mla	r7, r8, fp, r7
 801a116:	f892 b002 	ldrb.w	fp, [r2, #2]
 801a11a:	9310      	str	r3, [sp, #64]	; 0x40
 801a11c:	fb01 770b 	mla	r7, r1, fp, r7
 801a120:	f890 b002 	ldrb.w	fp, [r0, #2]
 801a124:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a126:	fb09 770b 	mla	r7, r9, fp, r7
 801a12a:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 801a12e:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801a132:	fb1b fb03 	smulbb	fp, fp, r3
 801a136:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801a13a:	fb07 b706 	mla	r7, r7, r6, fp
 801a13e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a140:	f895 b001 	ldrb.w	fp, [r5, #1]
 801a144:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801a148:	f89c c000 	ldrb.w	ip, [ip]
 801a14c:	435d      	muls	r5, r3
 801a14e:	fb08 550b 	mla	r5, r8, fp, r5
 801a152:	f892 b001 	ldrb.w	fp, [r2, #1]
 801a156:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a158:	fb01 550b 	mla	r5, r1, fp, r5
 801a15c:	f890 b001 	ldrb.w	fp, [r0, #1]
 801a160:	fb09 550b 	mla	r5, r9, fp, r5
 801a164:	ea4f 0bee 	mov.w	fp, lr, asr #3
 801a168:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801a16c:	fb1b fb03 	smulbb	fp, fp, r3
 801a170:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a172:	fb03 f30c 	mul.w	r3, r3, ip
 801a176:	f892 c000 	ldrb.w	ip, [r2]
 801a17a:	fb08 330a 	mla	r3, r8, sl, r3
 801a17e:	fb01 330c 	mla	r3, r1, ip, r3
 801a182:	f890 c000 	ldrb.w	ip, [r0]
 801a186:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a18a:	fb09 3c0c 	mla	ip, r9, ip, r3
 801a18e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a190:	fa5f fe8e 	uxtb.w	lr, lr
 801a194:	b2bf      	uxth	r7, r7
 801a196:	fb1e fe03 	smulbb	lr, lr, r3
 801a19a:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801a19e:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801a1a2:	fb05 b506 	mla	r5, r5, r6, fp
 801a1a6:	1c7b      	adds	r3, r7, #1
 801a1a8:	fb0c e606 	mla	r6, ip, r6, lr
 801a1ac:	b2ad      	uxth	r5, r5
 801a1ae:	b2b6      	uxth	r6, r6
 801a1b0:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801a1b4:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 801a1b8:	f105 0b01 	add.w	fp, r5, #1
 801a1bc:	1c77      	adds	r7, r6, #1
 801a1be:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 801a1c2:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801a1c6:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801a1ca:	096d      	lsrs	r5, r5, #5
 801a1cc:	431f      	orrs	r7, r3
 801a1ce:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801a1d2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801a1d4:	433d      	orrs	r5, r7
 801a1d6:	801d      	strh	r5, [r3, #0]
 801a1d8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801a1da:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801a1dc:	3302      	adds	r3, #2
 801a1de:	930c      	str	r3, [sp, #48]	; 0x30
 801a1e0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801a1e2:	4413      	add	r3, r2
 801a1e4:	931f      	str	r3, [sp, #124]	; 0x7c
 801a1e6:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801a1e8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a1ea:	4413      	add	r3, r2
 801a1ec:	9320      	str	r3, [sp, #128]	; 0x80
 801a1ee:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801a1f0:	3b01      	subs	r3, #1
 801a1f2:	9311      	str	r3, [sp, #68]	; 0x44
 801a1f4:	e732      	b.n	801a05c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801a1f6:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801a1f8:	9e21      	ldr	r6, [sp, #132]	; 0x84
 801a1fa:	4433      	add	r3, r6
 801a1fc:	931f      	str	r3, [sp, #124]	; 0x7c
 801a1fe:	9e22      	ldr	r6, [sp, #136]	; 0x88
 801a200:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a202:	4433      	add	r3, r6
 801a204:	9320      	str	r3, [sp, #128]	; 0x80
 801a206:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a208:	3b01      	subs	r3, #1
 801a20a:	9309      	str	r3, [sp, #36]	; 0x24
 801a20c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a20e:	3302      	adds	r3, #2
 801a210:	930a      	str	r3, [sp, #40]	; 0x28
 801a212:	e702      	b.n	801a01a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801a214:	d027      	beq.n	801a266 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 801a216:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a218:	9821      	ldr	r0, [sp, #132]	; 0x84
 801a21a:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801a21c:	3b01      	subs	r3, #1
 801a21e:	fb00 5003 	mla	r0, r0, r3, r5
 801a222:	1400      	asrs	r0, r0, #16
 801a224:	f53f af16 	bmi.w	801a054 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a228:	3901      	subs	r1, #1
 801a22a:	4288      	cmp	r0, r1
 801a22c:	f6bf af12 	bge.w	801a054 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a230:	9922      	ldr	r1, [sp, #136]	; 0x88
 801a232:	9820      	ldr	r0, [sp, #128]	; 0x80
 801a234:	fb01 0303 	mla	r3, r1, r3, r0
 801a238:	141b      	asrs	r3, r3, #16
 801a23a:	f53f af0b 	bmi.w	801a054 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a23e:	3a01      	subs	r2, #1
 801a240:	4293      	cmp	r3, r2
 801a242:	f6bf af07 	bge.w	801a054 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a246:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a248:	9311      	str	r3, [sp, #68]	; 0x44
 801a24a:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 801a24e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a250:	930c      	str	r3, [sp, #48]	; 0x30
 801a252:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801a254:	2b00      	cmp	r3, #0
 801a256:	dc70      	bgt.n	801a33a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801a258:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a25a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801a25c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a260:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a264:	930a      	str	r3, [sp, #40]	; 0x28
 801a266:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a268:	2b00      	cmp	r3, #0
 801a26a:	f340 8124 	ble.w	801a4b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801a26e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a272:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a276:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a27a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801a27c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a280:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a284:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a288:	eef0 6a62 	vmov.f32	s13, s5
 801a28c:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a290:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a294:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a298:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 801a29c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a2a0:	eef0 6a43 	vmov.f32	s13, s6
 801a2a4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a2a8:	ee12 2a90 	vmov	r2, s5
 801a2ac:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a2b0:	fb92 f3f3 	sdiv	r3, r2, r3
 801a2b4:	ee13 2a10 	vmov	r2, s6
 801a2b8:	9321      	str	r3, [sp, #132]	; 0x84
 801a2ba:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801a2bc:	fb92 f3f3 	sdiv	r3, r2, r3
 801a2c0:	9322      	str	r3, [sp, #136]	; 0x88
 801a2c2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a2c4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a2c6:	3b01      	subs	r3, #1
 801a2c8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a2cc:	930e      	str	r3, [sp, #56]	; 0x38
 801a2ce:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801a2d0:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
 801a2d4:	bf08      	it	eq
 801a2d6:	4613      	moveq	r3, r2
 801a2d8:	9309      	str	r3, [sp, #36]	; 0x24
 801a2da:	eeb0 3a67 	vmov.f32	s6, s15
 801a2de:	eef0 2a47 	vmov.f32	s5, s14
 801a2e2:	e68c      	b.n	8019ffe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801a2e4:	b149      	cbz	r1, 801a2fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 801a2e6:	5cb2      	ldrb	r2, [r6, r2]
 801a2e8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a2ec:	4422      	add	r2, r4
 801a2ee:	4628      	mov	r0, r5
 801a2f0:	46ac      	mov	ip, r5
 801a2f2:	e6f1      	b.n	801a0d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801a2f4:	4628      	mov	r0, r5
 801a2f6:	462a      	mov	r2, r5
 801a2f8:	e6ee      	b.n	801a0d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801a2fa:	4628      	mov	r0, r5
 801a2fc:	462a      	mov	r2, r5
 801a2fe:	e7f7      	b.n	801a2f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 801a300:	1c47      	adds	r7, r0, #1
 801a302:	f53f af69 	bmi.w	801a1d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a306:	42ba      	cmp	r2, r7
 801a308:	f6ff af66 	blt.w	801a1d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a30c:	1c6f      	adds	r7, r5, #1
 801a30e:	f53f af63 	bmi.w	801a1d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a312:	42be      	cmp	r6, r7
 801a314:	f6ff af60 	blt.w	801a1d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a318:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801a31a:	9002      	str	r0, [sp, #8]
 801a31c:	b236      	sxth	r6, r6
 801a31e:	b212      	sxth	r2, r2
 801a320:	e9cd 1705 	strd	r1, r7, [sp, #20]
 801a324:	e9cd 5303 	strd	r5, r3, [sp, #12]
 801a328:	9200      	str	r2, [sp, #0]
 801a32a:	9601      	str	r6, [sp, #4]
 801a32c:	4623      	mov	r3, r4
 801a32e:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 801a332:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a334:	f7ff fd59 	bl	8019dea <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 801a338:	e74e      	b.n	801a1d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a33a:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801a33c:	9820      	ldr	r0, [sp, #128]	; 0x80
 801a33e:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801a340:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801a342:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801a346:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801a348:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801a34c:	142d      	asrs	r5, r5, #16
 801a34e:	1400      	asrs	r0, r0, #16
 801a350:	fb02 5000 	mla	r0, r2, r0, r5
 801a354:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801a356:	f815 9000 	ldrb.w	r9, [r5, r0]
 801a35a:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801a35e:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 801a362:	182e      	adds	r6, r5, r0
 801a364:	eb04 0509 	add.w	r5, r4, r9
 801a368:	2b00      	cmp	r3, #0
 801a36a:	f000 8096 	beq.w	801a49a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801a36e:	7877      	ldrb	r7, [r6, #1]
 801a370:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801a374:	4427      	add	r7, r4
 801a376:	2900      	cmp	r1, #0
 801a378:	f000 8097 	beq.w	801a4aa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 801a37c:	18b0      	adds	r0, r6, r2
 801a37e:	5cb2      	ldrb	r2, [r6, r2]
 801a380:	7840      	ldrb	r0, [r0, #1]
 801a382:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a386:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801a38a:	4422      	add	r2, r4
 801a38c:	4420      	add	r0, r4
 801a38e:	b29b      	uxth	r3, r3
 801a390:	b289      	uxth	r1, r1
 801a392:	fb03 f801 	mul.w	r8, r3, r1
 801a396:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801a398:	f895 b002 	ldrb.w	fp, [r5, #2]
 801a39c:	f8b6 c000 	ldrh.w	ip, [r6]
 801a3a0:	78be      	ldrb	r6, [r7, #2]
 801a3a2:	f814 9009 	ldrb.w	r9, [r4, r9]
 801a3a6:	011b      	lsls	r3, r3, #4
 801a3a8:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 801a3ac:	b289      	uxth	r1, r1
 801a3ae:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801a3b2:	eba3 0308 	sub.w	r3, r3, r8
 801a3b6:	b29b      	uxth	r3, r3
 801a3b8:	ebae 0e01 	sub.w	lr, lr, r1
 801a3bc:	fa1f fe8e 	uxth.w	lr, lr
 801a3c0:	435e      	muls	r6, r3
 801a3c2:	fb0e 660b 	mla	r6, lr, fp, r6
 801a3c6:	f892 b002 	ldrb.w	fp, [r2, #2]
 801a3ca:	9310      	str	r3, [sp, #64]	; 0x40
 801a3cc:	fb01 660b 	mla	r6, r1, fp, r6
 801a3d0:	f890 b002 	ldrb.w	fp, [r0, #2]
 801a3d4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a3d6:	fb08 660b 	mla	r6, r8, fp, r6
 801a3da:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 801a3de:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801a3e2:	fb1b fb03 	smulbb	fp, fp, r3
 801a3e6:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801a3ea:	fb06 b60a 	mla	r6, r6, sl, fp
 801a3ee:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a3f0:	f895 b001 	ldrb.w	fp, [r5, #1]
 801a3f4:	787d      	ldrb	r5, [r7, #1]
 801a3f6:	783f      	ldrb	r7, [r7, #0]
 801a3f8:	435d      	muls	r5, r3
 801a3fa:	fb0e 550b 	mla	r5, lr, fp, r5
 801a3fe:	f892 b001 	ldrb.w	fp, [r2, #1]
 801a402:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a404:	fb01 550b 	mla	r5, r1, fp, r5
 801a408:	f890 b001 	ldrb.w	fp, [r0, #1]
 801a40c:	fb08 550b 	mla	r5, r8, fp, r5
 801a410:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801a414:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801a418:	fb1b fb03 	smulbb	fp, fp, r3
 801a41c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a41e:	437b      	muls	r3, r7
 801a420:	7817      	ldrb	r7, [r2, #0]
 801a422:	fb0e 3309 	mla	r3, lr, r9, r3
 801a426:	fb01 3307 	mla	r3, r1, r7, r3
 801a42a:	7807      	ldrb	r7, [r0, #0]
 801a42c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801a430:	fb08 3707 	mla	r7, r8, r7, r3
 801a434:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a436:	fa5f fc8c 	uxtb.w	ip, ip
 801a43a:	fb1c fc03 	smulbb	ip, ip, r3
 801a43e:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801a442:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801a446:	fb05 b50a 	mla	r5, r5, sl, fp
 801a44a:	fb07 c70a 	mla	r7, r7, sl, ip
 801a44e:	b2b6      	uxth	r6, r6
 801a450:	b2ad      	uxth	r5, r5
 801a452:	b2bf      	uxth	r7, r7
 801a454:	1c73      	adds	r3, r6, #1
 801a456:	1c7a      	adds	r2, r7, #1
 801a458:	f105 0b01 	add.w	fp, r5, #1
 801a45c:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801a460:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801a464:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801a468:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801a46c:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801a470:	096d      	lsrs	r5, r5, #5
 801a472:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801a474:	4316      	orrs	r6, r2
 801a476:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801a47a:	432e      	orrs	r6, r5
 801a47c:	f823 6b02 	strh.w	r6, [r3], #2
 801a480:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801a482:	930c      	str	r3, [sp, #48]	; 0x30
 801a484:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801a486:	4413      	add	r3, r2
 801a488:	931f      	str	r3, [sp, #124]	; 0x7c
 801a48a:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801a48c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a48e:	4413      	add	r3, r2
 801a490:	9320      	str	r3, [sp, #128]	; 0x80
 801a492:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801a494:	3b01      	subs	r3, #1
 801a496:	9311      	str	r3, [sp, #68]	; 0x44
 801a498:	e6db      	b.n	801a252 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801a49a:	b149      	cbz	r1, 801a4b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801a49c:	5cb2      	ldrb	r2, [r6, r2]
 801a49e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a4a2:	4422      	add	r2, r4
 801a4a4:	4628      	mov	r0, r5
 801a4a6:	462f      	mov	r7, r5
 801a4a8:	e771      	b.n	801a38e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801a4aa:	4628      	mov	r0, r5
 801a4ac:	462a      	mov	r2, r5
 801a4ae:	e76e      	b.n	801a38e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801a4b0:	4628      	mov	r0, r5
 801a4b2:	462a      	mov	r2, r5
 801a4b4:	e7f7      	b.n	801a4a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801a4b6:	b015      	add	sp, #84	; 0x54
 801a4b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a4bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 801a4bc:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a4c0:	880f      	ldrh	r7, [r1, #0]
 801a4c2:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 801a4c6:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801a4ca:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 801a4ce:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801a4d2:	023c      	lsls	r4, r7, #8
 801a4d4:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
 801a4d8:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
 801a4dc:	017c      	lsls	r4, r7, #5
 801a4de:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 801a4e2:	00ff      	lsls	r7, r7, #3
 801a4e4:	ea4b 0404 	orr.w	r4, fp, r4
 801a4e8:	b2ff      	uxtb	r7, r7
 801a4ea:	fb05 ca0e 	mla	sl, r5, lr, ip
 801a4ee:	4327      	orrs	r7, r4
 801a4f0:	2d00      	cmp	r5, #0
 801a4f2:	eb02 080a 	add.w	r8, r2, sl
 801a4f6:	9701      	str	r7, [sp, #4]
 801a4f8:	db7e      	blt.n	801a5f8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801a4fa:	45a9      	cmp	r9, r5
 801a4fc:	dd7c      	ble.n	801a5f8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801a4fe:	f1bc 0f00 	cmp.w	ip, #0
 801a502:	db77      	blt.n	801a5f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801a504:	45e6      	cmp	lr, ip
 801a506:	dd75      	ble.n	801a5f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801a508:	f812 700a 	ldrb.w	r7, [r2, sl]
 801a50c:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801a510:	441f      	add	r7, r3
 801a512:	f11c 0201 	adds.w	r2, ip, #1
 801a516:	d472      	bmi.n	801a5fe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801a518:	4596      	cmp	lr, r2
 801a51a:	dd70      	ble.n	801a5fe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801a51c:	2800      	cmp	r0, #0
 801a51e:	d06e      	beq.n	801a5fe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801a520:	f898 4001 	ldrb.w	r4, [r8, #1]
 801a524:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801a528:	441c      	add	r4, r3
 801a52a:	3501      	adds	r5, #1
 801a52c:	d46b      	bmi.n	801a606 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801a52e:	45a9      	cmp	r9, r5
 801a530:	dd69      	ble.n	801a606 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801a532:	2e00      	cmp	r6, #0
 801a534:	d067      	beq.n	801a606 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801a536:	f1bc 0f00 	cmp.w	ip, #0
 801a53a:	db62      	blt.n	801a602 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801a53c:	45e6      	cmp	lr, ip
 801a53e:	dd60      	ble.n	801a602 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801a540:	f818 500e 	ldrb.w	r5, [r8, lr]
 801a544:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801a548:	441d      	add	r5, r3
 801a54a:	f11c 0201 	adds.w	r2, ip, #1
 801a54e:	d45d      	bmi.n	801a60c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801a550:	4596      	cmp	lr, r2
 801a552:	dd5b      	ble.n	801a60c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801a554:	2800      	cmp	r0, #0
 801a556:	d059      	beq.n	801a60c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801a558:	44c6      	add	lr, r8
 801a55a:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801a55e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a562:	4413      	add	r3, r2
 801a564:	b280      	uxth	r0, r0
 801a566:	b2b2      	uxth	r2, r6
 801a568:	fb00 f602 	mul.w	r6, r0, r2
 801a56c:	0100      	lsls	r0, r0, #4
 801a56e:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 801a572:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
 801a576:	1b80      	subs	r0, r0, r6
 801a578:	fa1f fc82 	uxth.w	ip, r2
 801a57c:	b282      	uxth	r2, r0
 801a57e:	78a0      	ldrb	r0, [r4, #2]
 801a580:	f897 e002 	ldrb.w	lr, [r7, #2]
 801a584:	f897 9000 	ldrb.w	r9, [r7]
 801a588:	787f      	ldrb	r7, [r7, #1]
 801a58a:	eba8 080c 	sub.w	r8, r8, ip
 801a58e:	fa1f f888 	uxth.w	r8, r8
 801a592:	4350      	muls	r0, r2
 801a594:	fb08 0e0e 	mla	lr, r8, lr, r0
 801a598:	78a8      	ldrb	r0, [r5, #2]
 801a59a:	fb0c e000 	mla	r0, ip, r0, lr
 801a59e:	f893 e002 	ldrb.w	lr, [r3, #2]
 801a5a2:	fb06 0e0e 	mla	lr, r6, lr, r0
 801a5a6:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
 801a5aa:	f894 e000 	ldrb.w	lr, [r4]
 801a5ae:	fb02 fe0e 	mul.w	lr, r2, lr
 801a5b2:	fb08 e909 	mla	r9, r8, r9, lr
 801a5b6:	f895 e000 	ldrb.w	lr, [r5]
 801a5ba:	fb0c 990e 	mla	r9, ip, lr, r9
 801a5be:	f893 e000 	ldrb.w	lr, [r3]
 801a5c2:	785b      	ldrb	r3, [r3, #1]
 801a5c4:	fb06 9e0e 	mla	lr, r6, lr, r9
 801a5c8:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801a5cc:	ea4e 0e00 	orr.w	lr, lr, r0
 801a5d0:	7860      	ldrb	r0, [r4, #1]
 801a5d2:	4350      	muls	r0, r2
 801a5d4:	786a      	ldrb	r2, [r5, #1]
 801a5d6:	fb08 0007 	mla	r0, r8, r7, r0
 801a5da:	fb0c 0202 	mla	r2, ip, r2, r0
 801a5de:	fb06 2303 	mla	r3, r6, r3, r2
 801a5e2:	095b      	lsrs	r3, r3, #5
 801a5e4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a5e8:	ea4e 0303 	orr.w	r3, lr, r3
 801a5ec:	800b      	strh	r3, [r1, #0]
 801a5ee:	b003      	add	sp, #12
 801a5f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a5f4:	af01      	add	r7, sp, #4
 801a5f6:	e78c      	b.n	801a512 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 801a5f8:	ac01      	add	r4, sp, #4
 801a5fa:	4627      	mov	r7, r4
 801a5fc:	e795      	b.n	801a52a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801a5fe:	ac01      	add	r4, sp, #4
 801a600:	e793      	b.n	801a52a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801a602:	ad01      	add	r5, sp, #4
 801a604:	e7a1      	b.n	801a54a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 801a606:	ab01      	add	r3, sp, #4
 801a608:	461d      	mov	r5, r3
 801a60a:	e7ab      	b.n	801a564 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 801a60c:	ab01      	add	r3, sp, #4
 801a60e:	e7a9      	b.n	801a564 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

0801a610 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a610:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a614:	b08f      	sub	sp, #60	; 0x3c
 801a616:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
 801a61a:	920c      	str	r2, [sp, #48]	; 0x30
 801a61c:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 801a61e:	910a      	str	r1, [sp, #40]	; 0x28
 801a620:	9306      	str	r3, [sp, #24]
 801a622:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
 801a626:	900d      	str	r0, [sp, #52]	; 0x34
 801a628:	6850      	ldr	r0, [r2, #4]
 801a62a:	6812      	ldr	r2, [r2, #0]
 801a62c:	fb00 1303 	mla	r3, r0, r3, r1
 801a630:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a634:	9307      	str	r3, [sp, #28]
 801a636:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a638:	681b      	ldr	r3, [r3, #0]
 801a63a:	9308      	str	r3, [sp, #32]
 801a63c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a63e:	685c      	ldr	r4, [r3, #4]
 801a640:	3404      	adds	r4, #4
 801a642:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a644:	2b00      	cmp	r3, #0
 801a646:	dc03      	bgt.n	801a650 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801a648:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801a64a:	2b00      	cmp	r3, #0
 801a64c:	f340 81d6 	ble.w	801a9fc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801a650:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a652:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a656:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a65a:	1e48      	subs	r0, r1, #1
 801a65c:	1e56      	subs	r6, r2, #1
 801a65e:	9b06      	ldr	r3, [sp, #24]
 801a660:	2b00      	cmp	r3, #0
 801a662:	f340 80b7 	ble.w	801a7d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 801a666:	ea5f 472b 	movs.w	r7, fp, asr #16
 801a66a:	ea4f 4325 	mov.w	r3, r5, asr #16
 801a66e:	d406      	bmi.n	801a67e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a670:	4287      	cmp	r7, r0
 801a672:	da04      	bge.n	801a67e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a674:	2b00      	cmp	r3, #0
 801a676:	db02      	blt.n	801a67e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a678:	42b3      	cmp	r3, r6
 801a67a:	f2c0 80ac 	blt.w	801a7d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801a67e:	3701      	adds	r7, #1
 801a680:	f100 809d 	bmi.w	801a7be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801a684:	42b9      	cmp	r1, r7
 801a686:	f2c0 809a 	blt.w	801a7be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801a68a:	3301      	adds	r3, #1
 801a68c:	f100 8097 	bmi.w	801a7be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801a690:	429a      	cmp	r2, r3
 801a692:	f2c0 8094 	blt.w	801a7be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801a696:	9b06      	ldr	r3, [sp, #24]
 801a698:	930b      	str	r3, [sp, #44]	; 0x2c
 801a69a:	9b07      	ldr	r3, [sp, #28]
 801a69c:	9309      	str	r3, [sp, #36]	; 0x24
 801a69e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a6a0:	2b00      	cmp	r3, #0
 801a6a2:	f340 80b5 	ble.w	801a810 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801a6a6:	9820      	ldr	r0, [sp, #128]	; 0x80
 801a6a8:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801a6aa:	68c7      	ldr	r7, [r0, #12]
 801a6ac:	6892      	ldr	r2, [r2, #8]
 801a6ae:	ea5f 402b 	movs.w	r0, fp, asr #16
 801a6b2:	ea4f 4625 	mov.w	r6, r5, asr #16
 801a6b6:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801a6ba:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801a6be:	f100 80fb 	bmi.w	801a8b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801a6c2:	f102 3cff 	add.w	ip, r2, #4294967295
 801a6c6:	4560      	cmp	r0, ip
 801a6c8:	f280 80f6 	bge.w	801a8b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801a6cc:	2e00      	cmp	r6, #0
 801a6ce:	f2c0 80f3 	blt.w	801a8b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801a6d2:	f107 3cff 	add.w	ip, r7, #4294967295
 801a6d6:	4566      	cmp	r6, ip
 801a6d8:	f280 80ee 	bge.w	801a8b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801a6dc:	b212      	sxth	r2, r2
 801a6de:	fb06 0002 	mla	r0, r6, r2, r0
 801a6e2:	9e08      	ldr	r6, [sp, #32]
 801a6e4:	1837      	adds	r7, r6, r0
 801a6e6:	5c30      	ldrb	r0, [r6, r0]
 801a6e8:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 801a6ec:	eb04 0c08 	add.w	ip, r4, r8
 801a6f0:	2b00      	cmp	r3, #0
 801a6f2:	f000 80d3 	beq.w	801a89c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801a6f6:	787e      	ldrb	r6, [r7, #1]
 801a6f8:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801a6fc:	4426      	add	r6, r4
 801a6fe:	2900      	cmp	r1, #0
 801a700:	f000 80d4 	beq.w	801a8ac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 801a704:	18b8      	adds	r0, r7, r2
 801a706:	5cba      	ldrb	r2, [r7, r2]
 801a708:	7840      	ldrb	r0, [r0, #1]
 801a70a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a70e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801a712:	4422      	add	r2, r4
 801a714:	4420      	add	r0, r4
 801a716:	b29b      	uxth	r3, r3
 801a718:	b289      	uxth	r1, r1
 801a71a:	fb03 f901 	mul.w	r9, r3, r1
 801a71e:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801a722:	011b      	lsls	r3, r3, #4
 801a724:	b289      	uxth	r1, r1
 801a726:	78b7      	ldrb	r7, [r6, #2]
 801a728:	f89c a002 	ldrb.w	sl, [ip, #2]
 801a72c:	f89c c001 	ldrb.w	ip, [ip, #1]
 801a730:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801a734:	eba3 0309 	sub.w	r3, r3, r9
 801a738:	b29b      	uxth	r3, r3
 801a73a:	ebae 0e01 	sub.w	lr, lr, r1
 801a73e:	fa1f fe8e 	uxth.w	lr, lr
 801a742:	435f      	muls	r7, r3
 801a744:	fb0e 770a 	mla	r7, lr, sl, r7
 801a748:	f892 a002 	ldrb.w	sl, [r2, #2]
 801a74c:	fb01 770a 	mla	r7, r1, sl, r7
 801a750:	f890 a002 	ldrb.w	sl, [r0, #2]
 801a754:	fb09 7a0a 	mla	sl, r9, sl, r7
 801a758:	f814 7008 	ldrb.w	r7, [r4, r8]
 801a75c:	f896 8000 	ldrb.w	r8, [r6]
 801a760:	7876      	ldrb	r6, [r6, #1]
 801a762:	fb03 f808 	mul.w	r8, r3, r8
 801a766:	fb0e 8807 	mla	r8, lr, r7, r8
 801a76a:	7817      	ldrb	r7, [r2, #0]
 801a76c:	fb01 8807 	mla	r8, r1, r7, r8
 801a770:	7807      	ldrb	r7, [r0, #0]
 801a772:	fb09 8707 	mla	r7, r9, r7, r8
 801a776:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801a77a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801a77e:	ea47 070a 	orr.w	r7, r7, sl
 801a782:	4373      	muls	r3, r6
 801a784:	f892 a001 	ldrb.w	sl, [r2, #1]
 801a788:	fb0e 330c 	mla	r3, lr, ip, r3
 801a78c:	fb01 310a 	mla	r1, r1, sl, r3
 801a790:	f890 a001 	ldrb.w	sl, [r0, #1]
 801a794:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a796:	fb09 1a0a 	mla	sl, r9, sl, r1
 801a79a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a79e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a7a2:	ea47 070a 	orr.w	r7, r7, sl
 801a7a6:	801f      	strh	r7, [r3, #0]
 801a7a8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a7aa:	3302      	adds	r3, #2
 801a7ac:	9309      	str	r3, [sp, #36]	; 0x24
 801a7ae:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801a7b0:	449b      	add	fp, r3
 801a7b2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801a7b4:	441d      	add	r5, r3
 801a7b6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a7b8:	3b01      	subs	r3, #1
 801a7ba:	930b      	str	r3, [sp, #44]	; 0x2c
 801a7bc:	e76f      	b.n	801a69e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801a7be:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801a7c0:	449b      	add	fp, r3
 801a7c2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801a7c4:	441d      	add	r5, r3
 801a7c6:	9b06      	ldr	r3, [sp, #24]
 801a7c8:	3b01      	subs	r3, #1
 801a7ca:	9306      	str	r3, [sp, #24]
 801a7cc:	9b07      	ldr	r3, [sp, #28]
 801a7ce:	3302      	adds	r3, #2
 801a7d0:	9307      	str	r3, [sp, #28]
 801a7d2:	e744      	b.n	801a65e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 801a7d4:	d023      	beq.n	801a81e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801a7d6:	9b06      	ldr	r3, [sp, #24]
 801a7d8:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801a7da:	3b01      	subs	r3, #1
 801a7dc:	fb00 b003 	mla	r0, r0, r3, fp
 801a7e0:	1400      	asrs	r0, r0, #16
 801a7e2:	f53f af58 	bmi.w	801a696 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801a7e6:	3901      	subs	r1, #1
 801a7e8:	4288      	cmp	r0, r1
 801a7ea:	f6bf af54 	bge.w	801a696 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801a7ee:	991c      	ldr	r1, [sp, #112]	; 0x70
 801a7f0:	fb01 5303 	mla	r3, r1, r3, r5
 801a7f4:	141b      	asrs	r3, r3, #16
 801a7f6:	f53f af4e 	bmi.w	801a696 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801a7fa:	3a01      	subs	r2, #1
 801a7fc:	4293      	cmp	r3, r2
 801a7fe:	f6bf af4a 	bge.w	801a696 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801a802:	9b06      	ldr	r3, [sp, #24]
 801a804:	9309      	str	r3, [sp, #36]	; 0x24
 801a806:	9b07      	ldr	r3, [sp, #28]
 801a808:	930b      	str	r3, [sp, #44]	; 0x2c
 801a80a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a80c:	2b00      	cmp	r3, #0
 801a80e:	dc70      	bgt.n	801a8f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 801a810:	9b06      	ldr	r3, [sp, #24]
 801a812:	9a07      	ldr	r2, [sp, #28]
 801a814:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a818:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a81c:	9307      	str	r3, [sp, #28]
 801a81e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a820:	2b00      	cmp	r3, #0
 801a822:	f340 80eb 	ble.w	801a9fc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801a826:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a82a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a82e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a832:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801a834:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a838:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a83c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a840:	eef0 6a62 	vmov.f32	s13, s5
 801a844:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a848:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a84c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a850:	ee16 ba90 	vmov	fp, s13
 801a854:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a858:	eef0 6a43 	vmov.f32	s13, s6
 801a85c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a860:	ee12 2a90 	vmov	r2, s5
 801a864:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a868:	fb92 f3f3 	sdiv	r3, r2, r3
 801a86c:	ee13 2a10 	vmov	r2, s6
 801a870:	931b      	str	r3, [sp, #108]	; 0x6c
 801a872:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801a874:	fb92 f3f3 	sdiv	r3, r2, r3
 801a878:	931c      	str	r3, [sp, #112]	; 0x70
 801a87a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a87c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801a87e:	3b01      	subs	r3, #1
 801a880:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a884:	930a      	str	r3, [sp, #40]	; 0x28
 801a886:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801a888:	bf08      	it	eq
 801a88a:	4613      	moveq	r3, r2
 801a88c:	ee16 5a90 	vmov	r5, s13
 801a890:	9306      	str	r3, [sp, #24]
 801a892:	eeb0 3a67 	vmov.f32	s6, s15
 801a896:	eef0 2a47 	vmov.f32	s5, s14
 801a89a:	e6d2      	b.n	801a642 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801a89c:	b149      	cbz	r1, 801a8b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801a89e:	5cba      	ldrb	r2, [r7, r2]
 801a8a0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a8a4:	4422      	add	r2, r4
 801a8a6:	4660      	mov	r0, ip
 801a8a8:	4666      	mov	r6, ip
 801a8aa:	e734      	b.n	801a716 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801a8ac:	4660      	mov	r0, ip
 801a8ae:	4662      	mov	r2, ip
 801a8b0:	e731      	b.n	801a716 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801a8b2:	4660      	mov	r0, ip
 801a8b4:	4662      	mov	r2, ip
 801a8b6:	e7f7      	b.n	801a8a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 801a8b8:	f110 0c01 	adds.w	ip, r0, #1
 801a8bc:	f53f af74 	bmi.w	801a7a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a8c0:	4562      	cmp	r2, ip
 801a8c2:	f6ff af71 	blt.w	801a7a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a8c6:	f116 0c01 	adds.w	ip, r6, #1
 801a8ca:	f53f af6d 	bmi.w	801a7a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a8ce:	4567      	cmp	r7, ip
 801a8d0:	f6ff af6a 	blt.w	801a7a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a8d4:	b23f      	sxth	r7, r7
 801a8d6:	b212      	sxth	r2, r2
 801a8d8:	e9cd 3104 	strd	r3, r1, [sp, #16]
 801a8dc:	e9cd 0602 	strd	r0, r6, [sp, #8]
 801a8e0:	9200      	str	r2, [sp, #0]
 801a8e2:	9701      	str	r7, [sp, #4]
 801a8e4:	4623      	mov	r3, r4
 801a8e6:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801a8ea:	980d      	ldr	r0, [sp, #52]	; 0x34
 801a8ec:	f7ff fde6 	bl	801a4bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 801a8f0:	e75a      	b.n	801a7a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a8f2:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801a8f4:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801a8f8:	ea4f 462b 	mov.w	r6, fp, asr #16
 801a8fc:	1428      	asrs	r0, r5, #16
 801a8fe:	fb02 6000 	mla	r0, r2, r0, r6
 801a902:	9e08      	ldr	r6, [sp, #32]
 801a904:	f816 8000 	ldrb.w	r8, [r6, r0]
 801a908:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801a90c:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801a910:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801a914:	1837      	adds	r7, r6, r0
 801a916:	eb04 0c08 	add.w	ip, r4, r8
 801a91a:	2b00      	cmp	r3, #0
 801a91c:	d060      	beq.n	801a9e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 801a91e:	787e      	ldrb	r6, [r7, #1]
 801a920:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801a924:	4426      	add	r6, r4
 801a926:	2900      	cmp	r1, #0
 801a928:	d062      	beq.n	801a9f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 801a92a:	18b8      	adds	r0, r7, r2
 801a92c:	5cba      	ldrb	r2, [r7, r2]
 801a92e:	7840      	ldrb	r0, [r0, #1]
 801a930:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a934:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801a938:	4422      	add	r2, r4
 801a93a:	4420      	add	r0, r4
 801a93c:	b29b      	uxth	r3, r3
 801a93e:	b289      	uxth	r1, r1
 801a940:	fb03 f901 	mul.w	r9, r3, r1
 801a944:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801a948:	011b      	lsls	r3, r3, #4
 801a94a:	b289      	uxth	r1, r1
 801a94c:	78b7      	ldrb	r7, [r6, #2]
 801a94e:	f89c a002 	ldrb.w	sl, [ip, #2]
 801a952:	f89c c001 	ldrb.w	ip, [ip, #1]
 801a956:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801a95a:	eba3 0309 	sub.w	r3, r3, r9
 801a95e:	b29b      	uxth	r3, r3
 801a960:	ebae 0e01 	sub.w	lr, lr, r1
 801a964:	fa1f fe8e 	uxth.w	lr, lr
 801a968:	435f      	muls	r7, r3
 801a96a:	fb0e 770a 	mla	r7, lr, sl, r7
 801a96e:	f892 a002 	ldrb.w	sl, [r2, #2]
 801a972:	fb01 770a 	mla	r7, r1, sl, r7
 801a976:	f890 a002 	ldrb.w	sl, [r0, #2]
 801a97a:	fb09 7a0a 	mla	sl, r9, sl, r7
 801a97e:	f814 7008 	ldrb.w	r7, [r4, r8]
 801a982:	f896 8000 	ldrb.w	r8, [r6]
 801a986:	7876      	ldrb	r6, [r6, #1]
 801a988:	fb03 f808 	mul.w	r8, r3, r8
 801a98c:	fb0e 8807 	mla	r8, lr, r7, r8
 801a990:	7817      	ldrb	r7, [r2, #0]
 801a992:	fb01 8807 	mla	r8, r1, r7, r8
 801a996:	7807      	ldrb	r7, [r0, #0]
 801a998:	fb09 8707 	mla	r7, r9, r7, r8
 801a99c:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801a9a0:	4373      	muls	r3, r6
 801a9a2:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801a9a6:	7856      	ldrb	r6, [r2, #1]
 801a9a8:	ea47 070a 	orr.w	r7, r7, sl
 801a9ac:	fb0e 330c 	mla	r3, lr, ip, r3
 801a9b0:	f890 a001 	ldrb.w	sl, [r0, #1]
 801a9b4:	fb01 3306 	mla	r3, r1, r6, r3
 801a9b8:	fb09 3a0a 	mla	sl, r9, sl, r3
 801a9bc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a9c0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a9c2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a9c6:	ea47 070a 	orr.w	r7, r7, sl
 801a9ca:	f823 7b02 	strh.w	r7, [r3], #2
 801a9ce:	930b      	str	r3, [sp, #44]	; 0x2c
 801a9d0:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801a9d2:	449b      	add	fp, r3
 801a9d4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801a9d6:	441d      	add	r5, r3
 801a9d8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a9da:	3b01      	subs	r3, #1
 801a9dc:	9309      	str	r3, [sp, #36]	; 0x24
 801a9de:	e714      	b.n	801a80a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801a9e0:	b149      	cbz	r1, 801a9f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801a9e2:	5cba      	ldrb	r2, [r7, r2]
 801a9e4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a9e8:	4422      	add	r2, r4
 801a9ea:	4660      	mov	r0, ip
 801a9ec:	4666      	mov	r6, ip
 801a9ee:	e7a5      	b.n	801a93c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801a9f0:	4660      	mov	r0, ip
 801a9f2:	4662      	mov	r2, ip
 801a9f4:	e7a2      	b.n	801a93c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801a9f6:	4660      	mov	r0, ip
 801a9f8:	4662      	mov	r2, ip
 801a9fa:	e7f7      	b.n	801a9ec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 801a9fc:	b00f      	add	sp, #60	; 0x3c
 801a9fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801aa02 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 801aa02:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801aa06:	b085      	sub	sp, #20
 801aa08:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
 801aa0c:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 801aa10:	9102      	str	r1, [sp, #8]
 801aa12:	2c00      	cmp	r4, #0
 801aa14:	fb04 710c 	mla	r1, r4, ip, r7
 801aa18:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 801aa1c:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 801aa20:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 801aa24:	eb02 0e01 	add.w	lr, r2, r1
 801aa28:	f2c0 8122 	blt.w	801ac70 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801aa2c:	45a0      	cmp	r8, r4
 801aa2e:	f340 811f 	ble.w	801ac70 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801aa32:	2f00      	cmp	r7, #0
 801aa34:	f2c0 811a 	blt.w	801ac6c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801aa38:	45bc      	cmp	ip, r7
 801aa3a:	f340 8117 	ble.w	801ac6c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801aa3e:	5c52      	ldrb	r2, [r2, r1]
 801aa40:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801aa44:	1c7a      	adds	r2, r7, #1
 801aa46:	f100 8116 	bmi.w	801ac76 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801aa4a:	4594      	cmp	ip, r2
 801aa4c:	f340 8113 	ble.w	801ac76 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801aa50:	2e00      	cmp	r6, #0
 801aa52:	f000 8112 	beq.w	801ac7a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 801aa56:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801aa5a:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801aa5e:	3401      	adds	r4, #1
 801aa60:	f100 810f 	bmi.w	801ac82 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801aa64:	45a0      	cmp	r8, r4
 801aa66:	f340 810c 	ble.w	801ac82 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801aa6a:	2800      	cmp	r0, #0
 801aa6c:	f000 810c 	beq.w	801ac88 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 801aa70:	2f00      	cmp	r7, #0
 801aa72:	f2c0 8104 	blt.w	801ac7e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801aa76:	45bc      	cmp	ip, r7
 801aa78:	f340 8101 	ble.w	801ac7e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801aa7c:	f81e 200c 	ldrb.w	r2, [lr, ip]
 801aa80:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 801aa84:	3701      	adds	r7, #1
 801aa86:	f100 8102 	bmi.w	801ac8e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801aa8a:	45bc      	cmp	ip, r7
 801aa8c:	f340 80ff 	ble.w	801ac8e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801aa90:	2e00      	cmp	r6, #0
 801aa92:	f000 80fe 	beq.w	801ac92 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 801aa96:	44f4      	add	ip, lr
 801aa98:	f89c 2001 	ldrb.w	r2, [ip, #1]
 801aa9c:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 801aaa0:	b2b6      	uxth	r6, r6
 801aaa2:	b280      	uxth	r0, r0
 801aaa4:	fb00 fe06 	mul.w	lr, r0, r6
 801aaa8:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801aaac:	0136      	lsls	r6, r6, #4
 801aaae:	eba6 070e 	sub.w	r7, r6, lr
 801aab2:	b280      	uxth	r0, r0
 801aab4:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801aab8:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801aabc:	b2bf      	uxth	r7, r7
 801aabe:	1a1b      	subs	r3, r3, r0
 801aac0:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801aac4:	b29b      	uxth	r3, r3
 801aac6:	fb0a f607 	mul.w	r6, sl, r7
 801aaca:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801aace:	fb0b 6603 	mla	r6, fp, r3, r6
 801aad2:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801aad6:	fb00 6609 	mla	r6, r0, r9, r6
 801aada:	fb0e 6608 	mla	r6, lr, r8, r6
 801aade:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801aae2:	9600      	str	r6, [sp, #0]
 801aae4:	2e00      	cmp	r6, #0
 801aae6:	f000 80be 	beq.w	801ac66 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 801aaea:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801aaee:	fb0b fc0c 	mul.w	ip, fp, ip
 801aaf2:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801aaf6:	fb0b f505 	mul.w	r5, fp, r5
 801aafa:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801aafe:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801ab02:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801ab06:	44dc      	add	ip, fp
 801ab08:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ab0c:	9501      	str	r5, [sp, #4]
 801ab0e:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801ab12:	9503      	str	r5, [sp, #12]
 801ab14:	9d01      	ldr	r5, [sp, #4]
 801ab16:	9e02      	ldr	r6, [sp, #8]
 801ab18:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801ab1c:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801ab20:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801ab24:	fb0a fc0c 	mul.w	ip, sl, ip
 801ab28:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801ab2c:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801ab30:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801ab34:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801ab38:	4465      	add	r5, ip
 801ab3a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801ab3e:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801ab42:	fb09 fc0c 	mul.w	ip, r9, ip
 801ab46:	fb09 f904 	mul.w	r9, r9, r4
 801ab4a:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801ab4e:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801ab52:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801ab56:	fb08 f404 	mul.w	r4, r8, r4
 801ab5a:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801ab5e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801ab62:	fb08 f802 	mul.w	r8, r8, r2
 801ab66:	fb0a fa01 	mul.w	sl, sl, r1
 801ab6a:	0a22      	lsrs	r2, r4, #8
 801ab6c:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801ab70:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801ab74:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801ab78:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801ab7c:	4414      	add	r4, r2
 801ab7e:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801ab82:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801ab86:	0a2d      	lsrs	r5, r5, #8
 801ab88:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801ab8c:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801ab90:	9a03      	ldr	r2, [sp, #12]
 801ab92:	8836      	ldrh	r6, [r6, #0]
 801ab94:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801ab98:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801ab9c:	437d      	muls	r5, r7
 801ab9e:	4461      	add	r1, ip
 801aba0:	0a24      	lsrs	r4, r4, #8
 801aba2:	fb02 5503 	mla	r5, r2, r3, r5
 801aba6:	0a09      	lsrs	r1, r1, #8
 801aba8:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801abac:	fb04 540e 	mla	r4, r4, lr, r5
 801abb0:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801abb4:	fb01 4100 	mla	r1, r1, r0, r4
 801abb8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801abbc:	0a09      	lsrs	r1, r1, #8
 801abbe:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801abc2:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801abc6:	fb07 f70a 	mul.w	r7, r7, sl
 801abca:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801abce:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801abd2:	fb03 7101 	mla	r1, r3, r1, r7
 801abd6:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801abda:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801abde:	fb0e 1e08 	mla	lr, lr, r8, r1
 801abe2:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801abe6:	fb00 e101 	mla	r1, r0, r1, lr
 801abea:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 801abee:	9a00      	ldr	r2, [sp, #0]
 801abf0:	b287      	uxth	r7, r0
 801abf2:	437a      	muls	r2, r7
 801abf4:	0a09      	lsrs	r1, r1, #8
 801abf6:	1c53      	adds	r3, r2, #1
 801abf8:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801abfc:	4321      	orrs	r1, r4
 801abfe:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801ac02:	1235      	asrs	r5, r6, #8
 801ac04:	0c0a      	lsrs	r2, r1, #16
 801ac06:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801ac0a:	b2db      	uxtb	r3, r3
 801ac0c:	fb12 f207 	smulbb	r2, r2, r7
 801ac10:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801ac14:	fb05 2503 	mla	r5, r5, r3, r2
 801ac18:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801ac1c:	10f2      	asrs	r2, r6, #3
 801ac1e:	b2c8      	uxtb	r0, r1
 801ac20:	00f6      	lsls	r6, r6, #3
 801ac22:	fb14 f407 	smulbb	r4, r4, r7
 801ac26:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801ac2a:	b2f6      	uxtb	r6, r6
 801ac2c:	fb10 f007 	smulbb	r0, r0, r7
 801ac30:	fb02 4203 	mla	r2, r2, r3, r4
 801ac34:	b2ad      	uxth	r5, r5
 801ac36:	fb06 0303 	mla	r3, r6, r3, r0
 801ac3a:	b299      	uxth	r1, r3
 801ac3c:	b294      	uxth	r4, r2
 801ac3e:	1c6b      	adds	r3, r5, #1
 801ac40:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801ac44:	1c62      	adds	r2, r4, #1
 801ac46:	1c4b      	adds	r3, r1, #1
 801ac48:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801ac4c:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801ac50:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801ac54:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801ac58:	0952      	lsrs	r2, r2, #5
 801ac5a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ac5e:	432b      	orrs	r3, r5
 801ac60:	4313      	orrs	r3, r2
 801ac62:	9a02      	ldr	r2, [sp, #8]
 801ac64:	8013      	strh	r3, [r2, #0]
 801ac66:	b005      	add	sp, #20
 801ac68:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ac6c:	2500      	movs	r5, #0
 801ac6e:	e6e9      	b.n	801aa44 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 801ac70:	2100      	movs	r1, #0
 801ac72:	460d      	mov	r5, r1
 801ac74:	e6f3      	b.n	801aa5e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801ac76:	2100      	movs	r1, #0
 801ac78:	e6f1      	b.n	801aa5e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801ac7a:	4631      	mov	r1, r6
 801ac7c:	e6ef      	b.n	801aa5e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801ac7e:	2400      	movs	r4, #0
 801ac80:	e700      	b.n	801aa84 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 801ac82:	2200      	movs	r2, #0
 801ac84:	4614      	mov	r4, r2
 801ac86:	e70b      	b.n	801aaa0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801ac88:	4602      	mov	r2, r0
 801ac8a:	4604      	mov	r4, r0
 801ac8c:	e708      	b.n	801aaa0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801ac8e:	2200      	movs	r2, #0
 801ac90:	e706      	b.n	801aaa0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801ac92:	4632      	mov	r2, r6
 801ac94:	e704      	b.n	801aaa0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

0801ac96 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ac96:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ac9a:	b09f      	sub	sp, #124	; 0x7c
 801ac9c:	921b      	str	r2, [sp, #108]	; 0x6c
 801ac9e:	9309      	str	r3, [sp, #36]	; 0x24
 801aca0:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801aca2:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 801aca6:	931c      	str	r3, [sp, #112]	; 0x70
 801aca8:	9119      	str	r1, [sp, #100]	; 0x64
 801acaa:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 801acae:	901d      	str	r0, [sp, #116]	; 0x74
 801acb0:	6850      	ldr	r0, [r2, #4]
 801acb2:	6812      	ldr	r2, [r2, #0]
 801acb4:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 801acb6:	fb00 1303 	mla	r3, r0, r3, r1
 801acba:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801acbe:	930c      	str	r3, [sp, #48]	; 0x30
 801acc0:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801acc2:	681b      	ldr	r3, [r3, #0]
 801acc4:	9312      	str	r3, [sp, #72]	; 0x48
 801acc6:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801acc8:	685e      	ldr	r6, [r3, #4]
 801acca:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 801acce:	930d      	str	r3, [sp, #52]	; 0x34
 801acd0:	3604      	adds	r6, #4
 801acd2:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801acd4:	2b00      	cmp	r3, #0
 801acd6:	dc03      	bgt.n	801ace0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801acd8:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801acda:	2b00      	cmp	r3, #0
 801acdc:	f340 8388 	ble.w	801b3f0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801ace0:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801ace2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ace6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801acea:	1e48      	subs	r0, r1, #1
 801acec:	1e57      	subs	r7, r2, #1
 801acee:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801acf0:	2b00      	cmp	r3, #0
 801acf2:	f340 8195 	ble.w	801b020 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801acf6:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801acf8:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801acfc:	ea4f 4325 	mov.w	r3, r5, asr #16
 801ad00:	d406      	bmi.n	801ad10 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801ad02:	4584      	cmp	ip, r0
 801ad04:	da04      	bge.n	801ad10 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801ad06:	2b00      	cmp	r3, #0
 801ad08:	db02      	blt.n	801ad10 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801ad0a:	42bb      	cmp	r3, r7
 801ad0c:	f2c0 8189 	blt.w	801b022 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 801ad10:	f11c 0c01 	adds.w	ip, ip, #1
 801ad14:	f100 8177 	bmi.w	801b006 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801ad18:	4561      	cmp	r1, ip
 801ad1a:	f2c0 8174 	blt.w	801b006 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801ad1e:	3301      	adds	r3, #1
 801ad20:	f100 8171 	bmi.w	801b006 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801ad24:	429a      	cmp	r2, r3
 801ad26:	f2c0 816e 	blt.w	801b006 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801ad2a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ad2c:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801ad2e:	931a      	str	r3, [sp, #104]	; 0x68
 801ad30:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801ad32:	2b00      	cmp	r3, #0
 801ad34:	f340 8193 	ble.w	801b05e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 801ad38:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801ad3a:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801ad3e:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801ad40:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 801ad44:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801ad46:	141b      	asrs	r3, r3, #16
 801ad48:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801ad4c:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801ad50:	f100 81d6 	bmi.w	801b100 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801ad54:	f100 38ff 	add.w	r8, r0, #4294967295
 801ad58:	4543      	cmp	r3, r8
 801ad5a:	f280 81d1 	bge.w	801b100 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801ad5e:	f1bc 0f00 	cmp.w	ip, #0
 801ad62:	f2c0 81cd 	blt.w	801b100 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801ad66:	f10e 38ff 	add.w	r8, lr, #4294967295
 801ad6a:	45c4      	cmp	ip, r8
 801ad6c:	f280 81c8 	bge.w	801b100 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801ad70:	b200      	sxth	r0, r0
 801ad72:	fb0c 3300 	mla	r3, ip, r0, r3
 801ad76:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801ad78:	eb04 0803 	add.w	r8, r4, r3
 801ad7c:	5ce3      	ldrb	r3, [r4, r3]
 801ad7e:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801ad82:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801ad86:	2a00      	cmp	r2, #0
 801ad88:	f000 81af 	beq.w	801b0ea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801ad8c:	f898 c001 	ldrb.w	ip, [r8, #1]
 801ad90:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801ad94:	940e      	str	r4, [sp, #56]	; 0x38
 801ad96:	0e24      	lsrs	r4, r4, #24
 801ad98:	9415      	str	r4, [sp, #84]	; 0x54
 801ad9a:	b179      	cbz	r1, 801adbc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801ad9c:	eb08 0c00 	add.w	ip, r8, r0
 801ada0:	f818 0000 	ldrb.w	r0, [r8, r0]
 801ada4:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801ada8:	900a      	str	r0, [sp, #40]	; 0x28
 801adaa:	0e00      	lsrs	r0, r0, #24
 801adac:	9013      	str	r0, [sp, #76]	; 0x4c
 801adae:	f89c 0001 	ldrb.w	r0, [ip, #1]
 801adb2:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801adb6:	900f      	str	r0, [sp, #60]	; 0x3c
 801adb8:	0e00      	lsrs	r0, r0, #24
 801adba:	9016      	str	r0, [sp, #88]	; 0x58
 801adbc:	b292      	uxth	r2, r2
 801adbe:	b289      	uxth	r1, r1
 801adc0:	fb02 f901 	mul.w	r9, r2, r1
 801adc4:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801adc8:	0112      	lsls	r2, r2, #4
 801adca:	eba2 0809 	sub.w	r8, r2, r9
 801adce:	b289      	uxth	r1, r1
 801add0:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801add4:	9815      	ldr	r0, [sp, #84]	; 0x54
 801add6:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801add8:	fa1f f888 	uxth.w	r8, r8
 801addc:	1a52      	subs	r2, r2, r1
 801adde:	b292      	uxth	r2, r2
 801ade0:	fb08 f000 	mul.w	r0, r8, r0
 801ade4:	fb02 000e 	mla	r0, r2, lr, r0
 801ade8:	fb01 0004 	mla	r0, r1, r4, r0
 801adec:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801adee:	fb09 0004 	mla	r0, r9, r4, r0
 801adf2:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801adf6:	2800      	cmp	r0, #0
 801adf8:	f000 80fa 	beq.w	801aff0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801adfc:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801ae00:	d01b      	beq.n	801ae3a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801ae02:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801ae06:	fb0e fa0a 	mul.w	sl, lr, sl
 801ae0a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801ae0e:	fb0e fe03 	mul.w	lr, lr, r3
 801ae12:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801ae16:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801ae1a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801ae1e:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801ae22:	4453      	add	r3, sl
 801ae24:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801ae28:	0a1b      	lsrs	r3, r3, #8
 801ae2a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ae2e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801ae32:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801ae36:	ea43 030c 	orr.w	r3, r3, ip
 801ae3a:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801ae3c:	2cff      	cmp	r4, #255	; 0xff
 801ae3e:	d021      	beq.n	801ae84 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801ae40:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801ae42:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801ae46:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801ae48:	fb04 fb0b 	mul.w	fp, r4, fp
 801ae4c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801ae4e:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801ae52:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801ae54:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ae58:	fb04 fa0a 	mul.w	sl, r4, sl
 801ae5c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ae60:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801ae64:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801ae68:	44de      	add	lr, fp
 801ae6a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801ae6e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ae72:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ae76:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ae7a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ae7e:	ea4e 040a 	orr.w	r4, lr, sl
 801ae82:	940e      	str	r4, [sp, #56]	; 0x38
 801ae84:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801ae86:	2cff      	cmp	r4, #255	; 0xff
 801ae88:	d021      	beq.n	801aece <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 801ae8a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801ae8c:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801ae90:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801ae92:	fb04 fb0b 	mul.w	fp, r4, fp
 801ae96:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801ae98:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801ae9c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801ae9e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801aea2:	fb04 fa0a 	mul.w	sl, r4, sl
 801aea6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801aeaa:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801aeae:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801aeb2:	44de      	add	lr, fp
 801aeb4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801aeb8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801aebc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801aec0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801aec4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801aec8:	ea4e 040a 	orr.w	r4, lr, sl
 801aecc:	940a      	str	r4, [sp, #40]	; 0x28
 801aece:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801aed0:	2cff      	cmp	r4, #255	; 0xff
 801aed2:	d021      	beq.n	801af18 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 801aed4:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801aed6:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801aeda:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801aedc:	fb04 fb0b 	mul.w	fp, r4, fp
 801aee0:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801aee2:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801aee6:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801aee8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801aeec:	fb04 fa0a 	mul.w	sl, r4, sl
 801aef0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801aef4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801aef8:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801aefc:	44de      	add	lr, fp
 801aefe:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801af02:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801af06:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801af0a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801af0e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801af12:	ea4e 040a 	orr.w	r4, lr, sl
 801af16:	940f      	str	r4, [sp, #60]	; 0x3c
 801af18:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801af1a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801af1e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801af20:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801af24:	fb08 fc0c 	mul.w	ip, r8, ip
 801af28:	fb02 cc0e 	mla	ip, r2, lr, ip
 801af2c:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801af30:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801af32:	fb01 cc0e 	mla	ip, r1, lr, ip
 801af36:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801af3a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801af3c:	fb09 cc0e 	mla	ip, r9, lr, ip
 801af40:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801af44:	fb08 f80e 	mul.w	r8, r8, lr
 801af48:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801af4c:	fb02 8303 	mla	r3, r2, r3, r8
 801af50:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801af52:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801af54:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801af58:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801af5a:	fb01 330a 	mla	r3, r1, sl, r3
 801af5e:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 801af62:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801af64:	fb09 3901 	mla	r9, r9, r1, r3
 801af68:	4342      	muls	r2, r0
 801af6a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801af6e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801af72:	883b      	ldrh	r3, [r7, #0]
 801af74:	1c50      	adds	r0, r2, #1
 801af76:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801af7a:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801af7e:	ea4c 0c09 	orr.w	ip, ip, r9
 801af82:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801af86:	1219      	asrs	r1, r3, #8
 801af88:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801af8c:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801af90:	b2c0      	uxtb	r0, r0
 801af92:	fb12 f204 	smulbb	r2, r2, r4
 801af96:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801af9a:	fb01 2100 	mla	r1, r1, r0, r2
 801af9e:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801afa2:	10da      	asrs	r2, r3, #3
 801afa4:	fa5f fc8c 	uxtb.w	ip, ip
 801afa8:	00db      	lsls	r3, r3, #3
 801afaa:	fb1c fc04 	smulbb	ip, ip, r4
 801afae:	b2db      	uxtb	r3, r3
 801afb0:	b289      	uxth	r1, r1
 801afb2:	fb03 c300 	mla	r3, r3, r0, ip
 801afb6:	fa1f fc83 	uxth.w	ip, r3
 801afba:	1c4b      	adds	r3, r1, #1
 801afbc:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801afc0:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801afc4:	fb1e fe04 	smulbb	lr, lr, r4
 801afc8:	f10c 0301 	add.w	r3, ip, #1
 801afcc:	fb02 e200 	mla	r2, r2, r0, lr
 801afd0:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801afd4:	b292      	uxth	r2, r2
 801afd6:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801afda:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801afde:	430b      	orrs	r3, r1
 801afe0:	1c51      	adds	r1, r2, #1
 801afe2:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801afe6:	0952      	lsrs	r2, r2, #5
 801afe8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801afec:	4313      	orrs	r3, r2
 801afee:	803b      	strh	r3, [r7, #0]
 801aff0:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801aff2:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801aff4:	441a      	add	r2, r3
 801aff6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801aff8:	9229      	str	r2, [sp, #164]	; 0xa4
 801affa:	441d      	add	r5, r3
 801affc:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801affe:	3b01      	subs	r3, #1
 801b000:	3702      	adds	r7, #2
 801b002:	931a      	str	r3, [sp, #104]	; 0x68
 801b004:	e694      	b.n	801ad30 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801b006:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801b008:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801b00a:	441c      	add	r4, r3
 801b00c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b00e:	9429      	str	r4, [sp, #164]	; 0xa4
 801b010:	441d      	add	r5, r3
 801b012:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b014:	3b01      	subs	r3, #1
 801b016:	9309      	str	r3, [sp, #36]	; 0x24
 801b018:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801b01a:	3302      	adds	r3, #2
 801b01c:	930c      	str	r3, [sp, #48]	; 0x30
 801b01e:	e666      	b.n	801acee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801b020:	d024      	beq.n	801b06c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 801b022:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b024:	982b      	ldr	r0, [sp, #172]	; 0xac
 801b026:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801b028:	3b01      	subs	r3, #1
 801b02a:	fb00 4003 	mla	r0, r0, r3, r4
 801b02e:	1400      	asrs	r0, r0, #16
 801b030:	f53f ae7b 	bmi.w	801ad2a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801b034:	3901      	subs	r1, #1
 801b036:	4288      	cmp	r0, r1
 801b038:	f6bf ae77 	bge.w	801ad2a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801b03c:	992c      	ldr	r1, [sp, #176]	; 0xb0
 801b03e:	fb01 5303 	mla	r3, r1, r3, r5
 801b042:	141b      	asrs	r3, r3, #16
 801b044:	f53f ae71 	bmi.w	801ad2a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801b048:	3a01      	subs	r2, #1
 801b04a:	4293      	cmp	r3, r2
 801b04c:	f6bf ae6d 	bge.w	801ad2a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801b050:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801b054:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 801b058:	f1bb 0f00 	cmp.w	fp, #0
 801b05c:	dc70      	bgt.n	801b140 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 801b05e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b060:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801b064:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801b066:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801b06a:	930c      	str	r3, [sp, #48]	; 0x30
 801b06c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801b06e:	2b00      	cmp	r3, #0
 801b070:	f340 81be 	ble.w	801b3f0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801b074:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b078:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801b07c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801b080:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b082:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b086:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b08a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b08e:	eef0 6a62 	vmov.f32	s13, s5
 801b092:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b096:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b09a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b09e:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 801b0a2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b0a6:	eef0 6a43 	vmov.f32	s13, s6
 801b0aa:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b0ae:	ee12 2a90 	vmov	r2, s5
 801b0b2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b0b6:	fb92 f3f3 	sdiv	r3, r2, r3
 801b0ba:	ee13 2a10 	vmov	r2, s6
 801b0be:	932b      	str	r3, [sp, #172]	; 0xac
 801b0c0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b0c2:	fb92 f3f3 	sdiv	r3, r2, r3
 801b0c6:	932c      	str	r3, [sp, #176]	; 0xb0
 801b0c8:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801b0ca:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 801b0cc:	3b01      	subs	r3, #1
 801b0ce:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b0d2:	9319      	str	r3, [sp, #100]	; 0x64
 801b0d4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b0d6:	bf08      	it	eq
 801b0d8:	4613      	moveq	r3, r2
 801b0da:	ee16 5a90 	vmov	r5, s13
 801b0de:	9309      	str	r3, [sp, #36]	; 0x24
 801b0e0:	eeb0 3a67 	vmov.f32	s6, s15
 801b0e4:	eef0 2a47 	vmov.f32	s5, s14
 801b0e8:	e5f3      	b.n	801acd2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801b0ea:	2900      	cmp	r1, #0
 801b0ec:	f43f ae66 	beq.w	801adbc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801b0f0:	f818 0000 	ldrb.w	r0, [r8, r0]
 801b0f4:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801b0f8:	900a      	str	r0, [sp, #40]	; 0x28
 801b0fa:	0e00      	lsrs	r0, r0, #24
 801b0fc:	9013      	str	r0, [sp, #76]	; 0x4c
 801b0fe:	e65d      	b.n	801adbc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801b100:	f113 0801 	adds.w	r8, r3, #1
 801b104:	f53f af74 	bmi.w	801aff0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b108:	4540      	cmp	r0, r8
 801b10a:	f6ff af71 	blt.w	801aff0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b10e:	f11c 0801 	adds.w	r8, ip, #1
 801b112:	f53f af6d 	bmi.w	801aff0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b116:	45c6      	cmp	lr, r8
 801b118:	f6ff af6a 	blt.w	801aff0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b11c:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 801b11e:	9302      	str	r3, [sp, #8]
 801b120:	b200      	sxth	r0, r0
 801b122:	fa0f f38e 	sxth.w	r3, lr
 801b126:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801b12a:	e9cd c203 	strd	ip, r2, [sp, #12]
 801b12e:	9301      	str	r3, [sp, #4]
 801b130:	9000      	str	r0, [sp, #0]
 801b132:	4633      	mov	r3, r6
 801b134:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801b136:	981d      	ldr	r0, [sp, #116]	; 0x74
 801b138:	4639      	mov	r1, r7
 801b13a:	f7ff fc62 	bl	801aa02 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 801b13e:	e757      	b.n	801aff0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b140:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801b142:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801b144:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801b148:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801b14a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b14e:	1427      	asrs	r7, r4, #16
 801b150:	142b      	asrs	r3, r5, #16
 801b152:	fb01 7303 	mla	r3, r1, r3, r7
 801b156:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801b158:	18e7      	adds	r7, r4, r3
 801b15a:	5ce3      	ldrb	r3, [r4, r3]
 801b15c:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801b160:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801b164:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801b168:	2a00      	cmp	r2, #0
 801b16a:	f000 8137 	beq.w	801b3dc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801b16e:	f897 e001 	ldrb.w	lr, [r7, #1]
 801b172:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801b176:	9410      	str	r4, [sp, #64]	; 0x40
 801b178:	0e24      	lsrs	r4, r4, #24
 801b17a:	9417      	str	r4, [sp, #92]	; 0x5c
 801b17c:	b170      	cbz	r0, 801b19c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801b17e:	eb07 0e01 	add.w	lr, r7, r1
 801b182:	5c79      	ldrb	r1, [r7, r1]
 801b184:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b188:	910b      	str	r1, [sp, #44]	; 0x2c
 801b18a:	0e09      	lsrs	r1, r1, #24
 801b18c:	9114      	str	r1, [sp, #80]	; 0x50
 801b18e:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801b192:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b196:	9111      	str	r1, [sp, #68]	; 0x44
 801b198:	0e09      	lsrs	r1, r1, #24
 801b19a:	9118      	str	r1, [sp, #96]	; 0x60
 801b19c:	b292      	uxth	r2, r2
 801b19e:	b280      	uxth	r0, r0
 801b1a0:	fb02 f800 	mul.w	r8, r2, r0
 801b1a4:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801b1a8:	0112      	lsls	r2, r2, #4
 801b1aa:	eba2 0e08 	sub.w	lr, r2, r8
 801b1ae:	b280      	uxth	r0, r0
 801b1b0:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801b1b4:	9917      	ldr	r1, [sp, #92]	; 0x5c
 801b1b6:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b1b8:	fa1f fe8e 	uxth.w	lr, lr
 801b1bc:	1a12      	subs	r2, r2, r0
 801b1be:	b292      	uxth	r2, r2
 801b1c0:	fb0e f101 	mul.w	r1, lr, r1
 801b1c4:	fb02 110c 	mla	r1, r2, ip, r1
 801b1c8:	fb00 1104 	mla	r1, r0, r4, r1
 801b1cc:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801b1ce:	fb08 1104 	mla	r1, r8, r4, r1
 801b1d2:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801b1d6:	2900      	cmp	r1, #0
 801b1d8:	f000 80f5 	beq.w	801b3c6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801b1dc:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801b1e0:	d019      	beq.n	801b216 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 801b1e2:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801b1e6:	fb0c fa0a 	mul.w	sl, ip, sl
 801b1ea:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b1ee:	fb0c fc03 	mul.w	ip, ip, r3
 801b1f2:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801b1f6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b1fa:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801b1fe:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801b202:	4453      	add	r3, sl
 801b204:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801b208:	0a1b      	lsrs	r3, r3, #8
 801b20a:	0a3f      	lsrs	r7, r7, #8
 801b20c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b210:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801b214:	433b      	orrs	r3, r7
 801b216:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801b218:	2cff      	cmp	r4, #255	; 0xff
 801b21a:	d020      	beq.n	801b25e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 801b21c:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b21e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801b222:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801b224:	4367      	muls	r7, r4
 801b226:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b228:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b22c:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801b22e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b232:	fb04 fa0a 	mul.w	sl, r4, sl
 801b236:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b23a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b23e:	44bc      	add	ip, r7
 801b240:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801b244:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b248:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b24c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b250:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b254:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b258:	ea4c 040a 	orr.w	r4, ip, sl
 801b25c:	9410      	str	r4, [sp, #64]	; 0x40
 801b25e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b260:	2cff      	cmp	r4, #255	; 0xff
 801b262:	d020      	beq.n	801b2a6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 801b264:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b266:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801b26a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b26c:	4367      	muls	r7, r4
 801b26e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b270:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b274:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b276:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b27a:	fb04 fa0a 	mul.w	sl, r4, sl
 801b27e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b282:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b286:	44bc      	add	ip, r7
 801b288:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801b28c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b290:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b294:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b298:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b29c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b2a0:	ea4c 040a 	orr.w	r4, ip, sl
 801b2a4:	940b      	str	r4, [sp, #44]	; 0x2c
 801b2a6:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801b2a8:	2cff      	cmp	r4, #255	; 0xff
 801b2aa:	d020      	beq.n	801b2ee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 801b2ac:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801b2ae:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801b2b2:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801b2b4:	4367      	muls	r7, r4
 801b2b6:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801b2b8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b2bc:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801b2be:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b2c2:	fb04 fa0a 	mul.w	sl, r4, sl
 801b2c6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b2ca:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b2ce:	44bc      	add	ip, r7
 801b2d0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801b2d4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b2d8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b2dc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b2e0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b2e4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b2e8:	ea4c 040a 	orr.w	r4, ip, sl
 801b2ec:	9411      	str	r4, [sp, #68]	; 0x44
 801b2ee:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b2f0:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801b2f4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b2f6:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801b2fa:	fb0e f707 	mul.w	r7, lr, r7
 801b2fe:	fb02 770c 	mla	r7, r2, ip, r7
 801b302:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801b306:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801b308:	fb00 770c 	mla	r7, r0, ip, r7
 801b30c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801b310:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b312:	fb08 770c 	mla	r7, r8, ip, r7
 801b316:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801b31a:	fb0e fe0c 	mul.w	lr, lr, ip
 801b31e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b322:	fb02 e303 	mla	r3, r2, r3, lr
 801b326:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801b328:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801b32a:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801b32e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801b330:	fb00 330a 	mla	r3, r0, sl, r3
 801b334:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801b338:	fb08 3c0c 	mla	ip, r8, ip, r3
 801b33c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801b33e:	f8b9 0000 	ldrh.w	r0, [r9]
 801b342:	434b      	muls	r3, r1
 801b344:	0a3f      	lsrs	r7, r7, #8
 801b346:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b34a:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801b34e:	1c59      	adds	r1, r3, #1
 801b350:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801b354:	ea47 070c 	orr.w	r7, r7, ip
 801b358:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801b35c:	1202      	asrs	r2, r0, #8
 801b35e:	0c3b      	lsrs	r3, r7, #16
 801b360:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801b364:	b2c9      	uxtb	r1, r1
 801b366:	fb13 f304 	smulbb	r3, r3, r4
 801b36a:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801b36e:	fb02 3201 	mla	r2, r2, r1, r3
 801b372:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801b376:	10c3      	asrs	r3, r0, #3
 801b378:	b2ff      	uxtb	r7, r7
 801b37a:	00c0      	lsls	r0, r0, #3
 801b37c:	b292      	uxth	r2, r2
 801b37e:	fb1c fc04 	smulbb	ip, ip, r4
 801b382:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801b386:	b2c0      	uxtb	r0, r0
 801b388:	fb17 f704 	smulbb	r7, r7, r4
 801b38c:	fb03 c301 	mla	r3, r3, r1, ip
 801b390:	fb00 7001 	mla	r0, r0, r1, r7
 801b394:	f102 0c01 	add.w	ip, r2, #1
 801b398:	b280      	uxth	r0, r0
 801b39a:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801b39e:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 801b3a2:	1c42      	adds	r2, r0, #1
 801b3a4:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801b3a8:	b29b      	uxth	r3, r3
 801b3aa:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801b3ae:	ea42 020c 	orr.w	r2, r2, ip
 801b3b2:	f103 0c01 	add.w	ip, r3, #1
 801b3b6:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801b3ba:	095b      	lsrs	r3, r3, #5
 801b3bc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b3c0:	431a      	orrs	r2, r3
 801b3c2:	f8a9 2000 	strh.w	r2, [r9]
 801b3c6:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801b3c8:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801b3ca:	441a      	add	r2, r3
 801b3cc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b3ce:	9229      	str	r2, [sp, #164]	; 0xa4
 801b3d0:	f109 0902 	add.w	r9, r9, #2
 801b3d4:	441d      	add	r5, r3
 801b3d6:	f10b 3bff 	add.w	fp, fp, #4294967295
 801b3da:	e63d      	b.n	801b058 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801b3dc:	2800      	cmp	r0, #0
 801b3de:	f43f aedd 	beq.w	801b19c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801b3e2:	5c79      	ldrb	r1, [r7, r1]
 801b3e4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b3e8:	910b      	str	r1, [sp, #44]	; 0x2c
 801b3ea:	0e09      	lsrs	r1, r1, #24
 801b3ec:	9114      	str	r1, [sp, #80]	; 0x50
 801b3ee:	e6d5      	b.n	801b19c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801b3f0:	b01f      	add	sp, #124	; 0x7c
 801b3f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b3f6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 801b3f6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b3fa:	b089      	sub	sp, #36	; 0x24
 801b3fc:	9101      	str	r1, [sp, #4]
 801b3fe:	9801      	ldr	r0, [sp, #4]
 801b400:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
 801b404:	8800      	ldrh	r0, [r0, #0]
 801b406:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
 801b40a:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 801b40e:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 801b412:	1206      	asrs	r6, r0, #8
 801b414:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
 801b418:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801b41c:	9602      	str	r6, [sp, #8]
 801b41e:	10c6      	asrs	r6, r0, #3
 801b420:	00c0      	lsls	r0, r0, #3
 801b422:	b2c0      	uxtb	r0, r0
 801b424:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801b428:	9004      	str	r0, [sp, #16]
 801b42a:	2f00      	cmp	r7, #0
 801b42c:	fb07 100c 	mla	r0, r7, ip, r1
 801b430:	9603      	str	r6, [sp, #12]
 801b432:	eb02 0e00 	add.w	lr, r2, r0
 801b436:	f2c0 810a 	blt.w	801b64e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801b43a:	45b8      	cmp	r8, r7
 801b43c:	f340 8107 	ble.w	801b64e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801b440:	2900      	cmp	r1, #0
 801b442:	f2c0 8102 	blt.w	801b64a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801b446:	458c      	cmp	ip, r1
 801b448:	f340 80ff 	ble.w	801b64a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801b44c:	5c12      	ldrb	r2, [r2, r0]
 801b44e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 801b452:	1c4a      	adds	r2, r1, #1
 801b454:	f100 80fe 	bmi.w	801b654 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801b458:	4594      	cmp	ip, r2
 801b45a:	f340 80fb 	ble.w	801b654 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801b45e:	2d00      	cmp	r5, #0
 801b460:	f000 80fa 	beq.w	801b658 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 801b464:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801b468:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 801b46c:	3701      	adds	r7, #1
 801b46e:	f100 80f7 	bmi.w	801b660 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801b472:	45b8      	cmp	r8, r7
 801b474:	f340 80f4 	ble.w	801b660 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801b478:	2c00      	cmp	r4, #0
 801b47a:	f000 80f4 	beq.w	801b666 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 801b47e:	2900      	cmp	r1, #0
 801b480:	eb0e 020c 	add.w	r2, lr, ip
 801b484:	f2c0 80ea 	blt.w	801b65c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801b488:	458c      	cmp	ip, r1
 801b48a:	f340 80e7 	ble.w	801b65c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801b48e:	f81e 700c 	ldrb.w	r7, [lr, ip]
 801b492:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 801b496:	3101      	adds	r1, #1
 801b498:	f100 80e8 	bmi.w	801b66c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801b49c:	458c      	cmp	ip, r1
 801b49e:	f340 80e5 	ble.w	801b66c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801b4a2:	2d00      	cmp	r5, #0
 801b4a4:	f000 80e4 	beq.w	801b670 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 801b4a8:	7852      	ldrb	r2, [r2, #1]
 801b4aa:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801b4ae:	0e0b      	lsrs	r3, r1, #24
 801b4b0:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 801b4b4:	9300      	str	r3, [sp, #0]
 801b4b6:	b2a4      	uxth	r4, r4
 801b4b8:	b2ab      	uxth	r3, r5
 801b4ba:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 801b4be:	fb03 f904 	mul.w	r9, r3, r4
 801b4c2:	fb0a f505 	mul.w	r5, sl, r5
 801b4c6:	011b      	lsls	r3, r3, #4
 801b4c8:	eba3 0e09 	sub.w	lr, r3, r9
 801b4cc:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
 801b4d0:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 801b4d4:	0a28      	lsrs	r0, r5, #8
 801b4d6:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801b4da:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 801b4de:	4405      	add	r5, r0
 801b4e0:	0a2d      	lsrs	r5, r5, #8
 801b4e2:	fb0a f303 	mul.w	r3, sl, r3
 801b4e6:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
 801b4ea:	9005      	str	r0, [sp, #20]
 801b4ec:	f503 7080 	add.w	r0, r3, #256	; 0x100
 801b4f0:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801b4f4:	0a1b      	lsrs	r3, r3, #8
 801b4f6:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 801b4fa:	9306      	str	r3, [sp, #24]
 801b4fc:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
 801b500:	fb0b f303 	mul.w	r3, fp, r3
 801b504:	0a1d      	lsrs	r5, r3, #8
 801b506:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801b50a:	ea4f 6817 	mov.w	r8, r7, lsr #24
 801b50e:	fb0b f606 	mul.w	r6, fp, r6
 801b512:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 801b516:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 801b51a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801b51e:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801b522:	fb08 f707 	mul.w	r7, r8, r7
 801b526:	441d      	add	r5, r3
 801b528:	f506 7380 	add.w	r3, r6, #256	; 0x100
 801b52c:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801b530:	f507 7380 	add.w	r3, r7, #256	; 0x100
 801b534:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 801b538:	fb08 fc0c 	mul.w	ip, r8, ip
 801b53c:	0a1b      	lsrs	r3, r3, #8
 801b53e:	9307      	str	r3, [sp, #28]
 801b540:	ea4f 201c 	mov.w	r0, ip, lsr #8
 801b544:	0e0b      	lsrs	r3, r1, #24
 801b546:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
 801b54a:	435f      	muls	r7, r3
 801b54c:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801b550:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801b554:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 801b558:	4460      	add	r0, ip
 801b55a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b55e:	b2a4      	uxth	r4, r4
 801b560:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b564:	0a2d      	lsrs	r5, r5, #8
 801b566:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801b56a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b56e:	fa1f fe8e 	uxth.w	lr, lr
 801b572:	4359      	muls	r1, r3
 801b574:	1b12      	subs	r2, r2, r4
 801b576:	9b05      	ldr	r3, [sp, #20]
 801b578:	44bc      	add	ip, r7
 801b57a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801b57e:	b292      	uxth	r2, r2
 801b580:	fb05 f50e 	mul.w	r5, r5, lr
 801b584:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b588:	fb03 5502 	mla	r5, r3, r2, r5
 801b58c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b590:	9b06      	ldr	r3, [sp, #24]
 801b592:	f501 7780 	add.w	r7, r1, #256	; 0x100
 801b596:	0a36      	lsrs	r6, r6, #8
 801b598:	0a00      	lsrs	r0, r0, #8
 801b59a:	fb0c 5509 	mla	r5, ip, r9, r5
 801b59e:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801b5a2:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801b5a6:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801b5aa:	fb00 5504 	mla	r5, r0, r4, r5
 801b5ae:	fb0e f606 	mul.w	r6, lr, r6
 801b5b2:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 801b5b6:	0a09      	lsrs	r1, r1, #8
 801b5b8:	9b07      	ldr	r3, [sp, #28]
 801b5ba:	fb02 6000 	mla	r0, r2, r0, r6
 801b5be:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801b5c2:	fb09 0001 	mla	r0, r9, r1, r0
 801b5c6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b5ca:	fb0e fe0b 	mul.w	lr, lr, fp
 801b5ce:	fb04 0003 	mla	r0, r4, r3, r0
 801b5d2:	fb02 e20a 	mla	r2, r2, sl, lr
 801b5d6:	9b00      	ldr	r3, [sp, #0]
 801b5d8:	fb04 2408 	mla	r4, r4, r8, r2
 801b5dc:	fb09 4903 	mla	r9, r9, r3, r4
 801b5e0:	ea6f 2929 	mvn.w	r9, r9, asr #8
 801b5e4:	9b02      	ldr	r3, [sp, #8]
 801b5e6:	9a04      	ldr	r2, [sp, #16]
 801b5e8:	fa5f f989 	uxtb.w	r9, r9
 801b5ec:	fb03 f109 	mul.w	r1, r3, r9
 801b5f0:	9b03      	ldr	r3, [sp, #12]
 801b5f2:	0a2d      	lsrs	r5, r5, #8
 801b5f4:	0a00      	lsrs	r0, r0, #8
 801b5f6:	fb03 f309 	mul.w	r3, r3, r9
 801b5fa:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801b5fe:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801b602:	4305      	orrs	r5, r0
 801b604:	fb02 f909 	mul.w	r9, r2, r9
 801b608:	1c58      	adds	r0, r3, #1
 801b60a:	1c4a      	adds	r2, r1, #1
 801b60c:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801b610:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801b614:	0a2b      	lsrs	r3, r5, #8
 801b616:	0c2a      	lsrs	r2, r5, #16
 801b618:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801b61c:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 801b620:	00db      	lsls	r3, r3, #3
 801b622:	0212      	lsls	r2, r2, #8
 801b624:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801b628:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b62c:	4313      	orrs	r3, r2
 801b62e:	f109 0201 	add.w	r2, r9, #1
 801b632:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 801b636:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 801b63a:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801b63e:	431d      	orrs	r5, r3
 801b640:	9b01      	ldr	r3, [sp, #4]
 801b642:	801d      	strh	r5, [r3, #0]
 801b644:	b009      	add	sp, #36	; 0x24
 801b646:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b64a:	2000      	movs	r0, #0
 801b64c:	e701      	b.n	801b452 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 801b64e:	2600      	movs	r6, #0
 801b650:	4630      	mov	r0, r6
 801b652:	e70b      	b.n	801b46c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801b654:	2600      	movs	r6, #0
 801b656:	e709      	b.n	801b46c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801b658:	462e      	mov	r6, r5
 801b65a:	e707      	b.n	801b46c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801b65c:	2700      	movs	r7, #0
 801b65e:	e71a      	b.n	801b496 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 801b660:	2100      	movs	r1, #0
 801b662:	460f      	mov	r7, r1
 801b664:	e723      	b.n	801b4ae <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801b666:	4621      	mov	r1, r4
 801b668:	4627      	mov	r7, r4
 801b66a:	e720      	b.n	801b4ae <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801b66c:	2100      	movs	r1, #0
 801b66e:	e71e      	b.n	801b4ae <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801b670:	4629      	mov	r1, r5
 801b672:	e71c      	b.n	801b4ae <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

0801b674 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b674:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b678:	b09b      	sub	sp, #108	; 0x6c
 801b67a:	9218      	str	r2, [sp, #96]	; 0x60
 801b67c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801b67e:	9116      	str	r1, [sp, #88]	; 0x58
 801b680:	9307      	str	r3, [sp, #28]
 801b682:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801b686:	9019      	str	r0, [sp, #100]	; 0x64
 801b688:	6850      	ldr	r0, [r2, #4]
 801b68a:	6812      	ldr	r2, [r2, #0]
 801b68c:	9d26      	ldr	r5, [sp, #152]	; 0x98
 801b68e:	fb00 1303 	mla	r3, r0, r3, r1
 801b692:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b696:	930a      	str	r3, [sp, #40]	; 0x28
 801b698:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b69a:	681b      	ldr	r3, [r3, #0]
 801b69c:	930f      	str	r3, [sp, #60]	; 0x3c
 801b69e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b6a0:	685e      	ldr	r6, [r3, #4]
 801b6a2:	3604      	adds	r6, #4
 801b6a4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801b6a6:	2b00      	cmp	r3, #0
 801b6a8:	dc03      	bgt.n	801b6b2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801b6aa:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801b6ac:	2b00      	cmp	r3, #0
 801b6ae:	f340 8373 	ble.w	801bd98 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801b6b2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b6b4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b6b8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801b6bc:	1e48      	subs	r0, r1, #1
 801b6be:	1e57      	subs	r7, r2, #1
 801b6c0:	9b07      	ldr	r3, [sp, #28]
 801b6c2:	2b00      	cmp	r3, #0
 801b6c4:	f340 8190 	ble.w	801b9e8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801b6c8:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801b6ca:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801b6ce:	ea4f 4325 	mov.w	r3, r5, asr #16
 801b6d2:	d406      	bmi.n	801b6e2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b6d4:	4584      	cmp	ip, r0
 801b6d6:	da04      	bge.n	801b6e2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b6d8:	2b00      	cmp	r3, #0
 801b6da:	db02      	blt.n	801b6e2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b6dc:	42bb      	cmp	r3, r7
 801b6de:	f2c0 8184 	blt.w	801b9ea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 801b6e2:	f11c 0c01 	adds.w	ip, ip, #1
 801b6e6:	f100 8172 	bmi.w	801b9ce <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b6ea:	4561      	cmp	r1, ip
 801b6ec:	f2c0 816f 	blt.w	801b9ce <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b6f0:	3301      	adds	r3, #1
 801b6f2:	f100 816c 	bmi.w	801b9ce <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b6f6:	429a      	cmp	r2, r3
 801b6f8:	f2c0 8169 	blt.w	801b9ce <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b6fc:	9b07      	ldr	r3, [sp, #28]
 801b6fe:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801b700:	9317      	str	r3, [sp, #92]	; 0x5c
 801b702:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801b704:	2b00      	cmp	r3, #0
 801b706:	f340 818e 	ble.w	801ba26 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 801b70a:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801b70c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801b710:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b712:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 801b716:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801b718:	141b      	asrs	r3, r3, #16
 801b71a:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801b71e:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801b722:	f100 81d1 	bmi.w	801bac8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801b726:	f101 38ff 	add.w	r8, r1, #4294967295
 801b72a:	4543      	cmp	r3, r8
 801b72c:	f280 81cc 	bge.w	801bac8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801b730:	f1bc 0f00 	cmp.w	ip, #0
 801b734:	f2c0 81c8 	blt.w	801bac8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801b738:	f10e 38ff 	add.w	r8, lr, #4294967295
 801b73c:	45c4      	cmp	ip, r8
 801b73e:	f280 81c3 	bge.w	801bac8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801b742:	b209      	sxth	r1, r1
 801b744:	fb0c 3301 	mla	r3, ip, r1, r3
 801b748:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801b74a:	eb04 0803 	add.w	r8, r4, r3
 801b74e:	5ce3      	ldrb	r3, [r4, r3]
 801b750:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801b754:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801b758:	2a00      	cmp	r2, #0
 801b75a:	f000 81aa 	beq.w	801bab2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 801b75e:	f898 c001 	ldrb.w	ip, [r8, #1]
 801b762:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801b766:	940b      	str	r4, [sp, #44]	; 0x2c
 801b768:	0e24      	lsrs	r4, r4, #24
 801b76a:	9412      	str	r4, [sp, #72]	; 0x48
 801b76c:	b178      	cbz	r0, 801b78e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801b76e:	eb08 0c01 	add.w	ip, r8, r1
 801b772:	f818 1001 	ldrb.w	r1, [r8, r1]
 801b776:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b77a:	9108      	str	r1, [sp, #32]
 801b77c:	0e09      	lsrs	r1, r1, #24
 801b77e:	9110      	str	r1, [sp, #64]	; 0x40
 801b780:	f89c 1001 	ldrb.w	r1, [ip, #1]
 801b784:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b788:	910c      	str	r1, [sp, #48]	; 0x30
 801b78a:	0e09      	lsrs	r1, r1, #24
 801b78c:	9113      	str	r1, [sp, #76]	; 0x4c
 801b78e:	b292      	uxth	r2, r2
 801b790:	b280      	uxth	r0, r0
 801b792:	fb02 f900 	mul.w	r9, r2, r0
 801b796:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801b79a:	0112      	lsls	r2, r2, #4
 801b79c:	eba2 0809 	sub.w	r8, r2, r9
 801b7a0:	b280      	uxth	r0, r0
 801b7a2:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801b7a6:	9912      	ldr	r1, [sp, #72]	; 0x48
 801b7a8:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b7aa:	fa1f f888 	uxth.w	r8, r8
 801b7ae:	1a12      	subs	r2, r2, r0
 801b7b0:	b292      	uxth	r2, r2
 801b7b2:	fb08 f101 	mul.w	r1, r8, r1
 801b7b6:	fb02 110e 	mla	r1, r2, lr, r1
 801b7ba:	fb00 1104 	mla	r1, r0, r4, r1
 801b7be:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b7c0:	fb09 1104 	mla	r1, r9, r4, r1
 801b7c4:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801b7c8:	2900      	cmp	r1, #0
 801b7ca:	f000 80f5 	beq.w	801b9b8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801b7ce:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801b7d2:	d01b      	beq.n	801b80c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b7d4:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801b7d8:	fb0e fa0a 	mul.w	sl, lr, sl
 801b7dc:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b7e0:	fb0e fe03 	mul.w	lr, lr, r3
 801b7e4:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801b7e8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b7ec:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801b7f0:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801b7f4:	4453      	add	r3, sl
 801b7f6:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801b7fa:	0a1b      	lsrs	r3, r3, #8
 801b7fc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b800:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b804:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801b808:	ea43 030c 	orr.w	r3, r3, ip
 801b80c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801b80e:	2cff      	cmp	r4, #255	; 0xff
 801b810:	d021      	beq.n	801b856 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 801b812:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b814:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801b818:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801b81a:	fb04 fb0b 	mul.w	fp, r4, fp
 801b81e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b820:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b824:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801b826:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b82a:	fb04 fa0a 	mul.w	sl, r4, sl
 801b82e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b832:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801b836:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801b83a:	44de      	add	lr, fp
 801b83c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b840:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b844:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b848:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b84c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b850:	ea4e 040a 	orr.w	r4, lr, sl
 801b854:	940b      	str	r4, [sp, #44]	; 0x2c
 801b856:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b858:	2cff      	cmp	r4, #255	; 0xff
 801b85a:	d021      	beq.n	801b8a0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 801b85c:	9c08      	ldr	r4, [sp, #32]
 801b85e:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801b862:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b864:	fb04 fb0b 	mul.w	fp, r4, fp
 801b868:	9c08      	ldr	r4, [sp, #32]
 801b86a:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b86e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b870:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b874:	fb04 fa0a 	mul.w	sl, r4, sl
 801b878:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b87c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801b880:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801b884:	44de      	add	lr, fp
 801b886:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b88a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b88e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b892:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b896:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b89a:	ea4e 040a 	orr.w	r4, lr, sl
 801b89e:	9408      	str	r4, [sp, #32]
 801b8a0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b8a2:	2cff      	cmp	r4, #255	; 0xff
 801b8a4:	d021      	beq.n	801b8ea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801b8a6:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801b8a8:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801b8ac:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b8ae:	fb04 fb0b 	mul.w	fp, r4, fp
 801b8b2:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801b8b4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b8b8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b8ba:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b8be:	fb04 fa0a 	mul.w	sl, r4, sl
 801b8c2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b8c6:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801b8ca:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801b8ce:	44de      	add	lr, fp
 801b8d0:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b8d4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b8d8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b8dc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b8e0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b8e4:	ea4e 040a 	orr.w	r4, lr, sl
 801b8e8:	940c      	str	r4, [sp, #48]	; 0x30
 801b8ea:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b8ec:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801b8f0:	9c08      	ldr	r4, [sp, #32]
 801b8f2:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801b8f6:	fb08 fc0c 	mul.w	ip, r8, ip
 801b8fa:	fb02 cc0e 	mla	ip, r2, lr, ip
 801b8fe:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801b902:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801b904:	fb00 cc0e 	mla	ip, r0, lr, ip
 801b908:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801b90c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b90e:	fb09 cc0e 	mla	ip, r9, lr, ip
 801b912:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801b916:	fb08 f80e 	mul.w	r8, r8, lr
 801b91a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b91e:	fb02 8303 	mla	r3, r2, r3, r8
 801b922:	9a08      	ldr	r2, [sp, #32]
 801b924:	f8b7 8000 	ldrh.w	r8, [r7]
 801b928:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801b92c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801b92e:	fb00 330a 	mla	r3, r0, sl, r3
 801b932:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 801b936:	fb09 3900 	mla	r9, r9, r0, r3
 801b93a:	43c9      	mvns	r1, r1
 801b93c:	ea4f 2228 	mov.w	r2, r8, asr #8
 801b940:	fa5f fe81 	uxtb.w	lr, r1
 801b944:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b948:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801b94c:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801b950:	fb02 f20e 	mul.w	r2, r2, lr
 801b954:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b958:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801b95c:	ea4c 0c09 	orr.w	ip, ip, r9
 801b960:	1c53      	adds	r3, r2, #1
 801b962:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 801b966:	ea4f 00e8 	mov.w	r0, r8, asr #3
 801b96a:	ea4f 431c 	mov.w	r3, ip, lsr #16
 801b96e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801b972:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801b976:	4a63      	ldr	r2, [pc, #396]	; (801bb04 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 801b978:	fb00 f00e 	mul.w	r0, r0, lr
 801b97c:	b2db      	uxtb	r3, r3
 801b97e:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 801b982:	1c43      	adds	r3, r0, #1
 801b984:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801b988:	ea4f 231c 	mov.w	r3, ip, lsr #8
 801b98c:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 801b990:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801b994:	b2c9      	uxtb	r1, r1
 801b996:	00db      	lsls	r3, r3, #3
 801b998:	fb01 f10e 	mul.w	r1, r1, lr
 801b99c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b9a0:	4313      	orrs	r3, r2
 801b9a2:	1c4a      	adds	r2, r1, #1
 801b9a4:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801b9a8:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801b9ac:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801b9b0:	ea4c 0c03 	orr.w	ip, ip, r3
 801b9b4:	f8a7 c000 	strh.w	ip, [r7]
 801b9b8:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801b9ba:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801b9bc:	441a      	add	r2, r3
 801b9be:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b9c0:	9225      	str	r2, [sp, #148]	; 0x94
 801b9c2:	441d      	add	r5, r3
 801b9c4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801b9c6:	3b01      	subs	r3, #1
 801b9c8:	3702      	adds	r7, #2
 801b9ca:	9317      	str	r3, [sp, #92]	; 0x5c
 801b9cc:	e699      	b.n	801b702 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801b9ce:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801b9d0:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801b9d2:	441c      	add	r4, r3
 801b9d4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b9d6:	9425      	str	r4, [sp, #148]	; 0x94
 801b9d8:	441d      	add	r5, r3
 801b9da:	9b07      	ldr	r3, [sp, #28]
 801b9dc:	3b01      	subs	r3, #1
 801b9de:	9307      	str	r3, [sp, #28]
 801b9e0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b9e2:	3302      	adds	r3, #2
 801b9e4:	930a      	str	r3, [sp, #40]	; 0x28
 801b9e6:	e66b      	b.n	801b6c0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801b9e8:	d024      	beq.n	801ba34 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 801b9ea:	9b07      	ldr	r3, [sp, #28]
 801b9ec:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801b9ee:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801b9f0:	3b01      	subs	r3, #1
 801b9f2:	fb00 4003 	mla	r0, r0, r3, r4
 801b9f6:	1400      	asrs	r0, r0, #16
 801b9f8:	f53f ae80 	bmi.w	801b6fc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801b9fc:	3901      	subs	r1, #1
 801b9fe:	4288      	cmp	r0, r1
 801ba00:	f6bf ae7c 	bge.w	801b6fc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801ba04:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801ba06:	fb01 5303 	mla	r3, r1, r3, r5
 801ba0a:	141b      	asrs	r3, r3, #16
 801ba0c:	f53f ae76 	bmi.w	801b6fc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801ba10:	3a01      	subs	r2, #1
 801ba12:	4293      	cmp	r3, r2
 801ba14:	f6bf ae72 	bge.w	801b6fc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801ba18:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801ba1c:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 801ba20:	f1bb 0f00 	cmp.w	fp, #0
 801ba24:	dc70      	bgt.n	801bb08 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801ba26:	9b07      	ldr	r3, [sp, #28]
 801ba28:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801ba2c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ba2e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801ba32:	930a      	str	r3, [sp, #40]	; 0x28
 801ba34:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801ba36:	2b00      	cmp	r3, #0
 801ba38:	f340 81ae 	ble.w	801bd98 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801ba3c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ba40:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801ba44:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ba48:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ba4a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ba4e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ba52:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ba56:	eef0 6a62 	vmov.f32	s13, s5
 801ba5a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ba5e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ba62:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ba66:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 801ba6a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ba6e:	eef0 6a43 	vmov.f32	s13, s6
 801ba72:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ba76:	ee12 2a90 	vmov	r2, s5
 801ba7a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ba7e:	fb92 f3f3 	sdiv	r3, r2, r3
 801ba82:	ee13 2a10 	vmov	r2, s6
 801ba86:	9327      	str	r3, [sp, #156]	; 0x9c
 801ba88:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ba8a:	fb92 f3f3 	sdiv	r3, r2, r3
 801ba8e:	9328      	str	r3, [sp, #160]	; 0xa0
 801ba90:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801ba92:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801ba94:	3b01      	subs	r3, #1
 801ba96:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ba9a:	9316      	str	r3, [sp, #88]	; 0x58
 801ba9c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ba9e:	bf08      	it	eq
 801baa0:	4613      	moveq	r3, r2
 801baa2:	ee16 5a90 	vmov	r5, s13
 801baa6:	9307      	str	r3, [sp, #28]
 801baa8:	eeb0 3a67 	vmov.f32	s6, s15
 801baac:	eef0 2a47 	vmov.f32	s5, s14
 801bab0:	e5f8      	b.n	801b6a4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801bab2:	2800      	cmp	r0, #0
 801bab4:	f43f ae6b 	beq.w	801b78e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801bab8:	f818 1001 	ldrb.w	r1, [r8, r1]
 801babc:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801bac0:	9108      	str	r1, [sp, #32]
 801bac2:	0e09      	lsrs	r1, r1, #24
 801bac4:	9110      	str	r1, [sp, #64]	; 0x40
 801bac6:	e662      	b.n	801b78e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801bac8:	f113 0801 	adds.w	r8, r3, #1
 801bacc:	f53f af74 	bmi.w	801b9b8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801bad0:	4541      	cmp	r1, r8
 801bad2:	f6ff af71 	blt.w	801b9b8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801bad6:	f11c 0801 	adds.w	r8, ip, #1
 801bada:	f53f af6d 	bmi.w	801b9b8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801bade:	45c6      	cmp	lr, r8
 801bae0:	f6ff af6a 	blt.w	801b9b8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801bae4:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 801bae8:	b209      	sxth	r1, r1
 801baea:	fa0f f38e 	sxth.w	r3, lr
 801baee:	e9cd 2004 	strd	r2, r0, [sp, #16]
 801baf2:	9301      	str	r3, [sp, #4]
 801baf4:	9100      	str	r1, [sp, #0]
 801baf6:	4633      	mov	r3, r6
 801baf8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801bafa:	9819      	ldr	r0, [sp, #100]	; 0x64
 801bafc:	4639      	mov	r1, r7
 801bafe:	f7ff fc7a 	bl	801b3f6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 801bb02:	e759      	b.n	801b9b8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801bb04:	fffff800 	.word	0xfffff800
 801bb08:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801bb0a:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801bb0c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801bb10:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801bb12:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801bb16:	1427      	asrs	r7, r4, #16
 801bb18:	142b      	asrs	r3, r5, #16
 801bb1a:	fb01 7303 	mla	r3, r1, r3, r7
 801bb1e:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801bb20:	18e7      	adds	r7, r4, r3
 801bb22:	5ce3      	ldrb	r3, [r4, r3]
 801bb24:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801bb28:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801bb2c:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801bb30:	2a00      	cmp	r2, #0
 801bb32:	f000 8127 	beq.w	801bd84 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801bb36:	f897 e001 	ldrb.w	lr, [r7, #1]
 801bb3a:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801bb3e:	940d      	str	r4, [sp, #52]	; 0x34
 801bb40:	0e24      	lsrs	r4, r4, #24
 801bb42:	9414      	str	r4, [sp, #80]	; 0x50
 801bb44:	b170      	cbz	r0, 801bb64 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801bb46:	eb07 0e01 	add.w	lr, r7, r1
 801bb4a:	5c79      	ldrb	r1, [r7, r1]
 801bb4c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801bb50:	9109      	str	r1, [sp, #36]	; 0x24
 801bb52:	0e09      	lsrs	r1, r1, #24
 801bb54:	9111      	str	r1, [sp, #68]	; 0x44
 801bb56:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801bb5a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801bb5e:	910e      	str	r1, [sp, #56]	; 0x38
 801bb60:	0e09      	lsrs	r1, r1, #24
 801bb62:	9115      	str	r1, [sp, #84]	; 0x54
 801bb64:	b292      	uxth	r2, r2
 801bb66:	b280      	uxth	r0, r0
 801bb68:	fb02 f800 	mul.w	r8, r2, r0
 801bb6c:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801bb70:	0112      	lsls	r2, r2, #4
 801bb72:	eba2 0e08 	sub.w	lr, r2, r8
 801bb76:	b280      	uxth	r0, r0
 801bb78:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801bb7c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801bb7e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801bb80:	fa1f fe8e 	uxth.w	lr, lr
 801bb84:	1a09      	subs	r1, r1, r0
 801bb86:	b289      	uxth	r1, r1
 801bb88:	fb0e f202 	mul.w	r2, lr, r2
 801bb8c:	fb01 220c 	mla	r2, r1, ip, r2
 801bb90:	fb00 2204 	mla	r2, r0, r4, r2
 801bb94:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801bb96:	fb08 2204 	mla	r2, r8, r4, r2
 801bb9a:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801bb9e:	2a00      	cmp	r2, #0
 801bba0:	f000 80e5 	beq.w	801bd6e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 801bba4:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801bba8:	d019      	beq.n	801bbde <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 801bbaa:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801bbae:	fb0c fa0a 	mul.w	sl, ip, sl
 801bbb2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801bbb6:	fb0c fc03 	mul.w	ip, ip, r3
 801bbba:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801bbbe:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801bbc2:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801bbc6:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801bbca:	4453      	add	r3, sl
 801bbcc:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801bbd0:	0a1b      	lsrs	r3, r3, #8
 801bbd2:	0a3f      	lsrs	r7, r7, #8
 801bbd4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801bbd8:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801bbdc:	433b      	orrs	r3, r7
 801bbde:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801bbe0:	2cff      	cmp	r4, #255	; 0xff
 801bbe2:	d020      	beq.n	801bc26 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 801bbe4:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801bbe6:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801bbea:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801bbec:	4367      	muls	r7, r4
 801bbee:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801bbf0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801bbf4:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801bbf6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801bbfa:	fb04 fa0a 	mul.w	sl, r4, sl
 801bbfe:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801bc02:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bc06:	44bc      	add	ip, r7
 801bc08:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801bc0c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801bc10:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bc14:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bc18:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bc1c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801bc20:	ea4c 040a 	orr.w	r4, ip, sl
 801bc24:	940d      	str	r4, [sp, #52]	; 0x34
 801bc26:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801bc28:	2cff      	cmp	r4, #255	; 0xff
 801bc2a:	d020      	beq.n	801bc6e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 801bc2c:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801bc2e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801bc32:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801bc34:	4367      	muls	r7, r4
 801bc36:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801bc38:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801bc3c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801bc3e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801bc42:	fb04 fa0a 	mul.w	sl, r4, sl
 801bc46:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801bc4a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bc4e:	44bc      	add	ip, r7
 801bc50:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801bc54:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801bc58:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bc5c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bc60:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bc64:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801bc68:	ea4c 040a 	orr.w	r4, ip, sl
 801bc6c:	9409      	str	r4, [sp, #36]	; 0x24
 801bc6e:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801bc70:	2cff      	cmp	r4, #255	; 0xff
 801bc72:	d020      	beq.n	801bcb6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 801bc74:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801bc76:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801bc7a:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801bc7c:	4367      	muls	r7, r4
 801bc7e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801bc80:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801bc84:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801bc86:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801bc8a:	fb04 fa0a 	mul.w	sl, r4, sl
 801bc8e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801bc92:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bc96:	44bc      	add	ip, r7
 801bc98:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801bc9c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801bca0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bca4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bca8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bcac:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801bcb0:	ea4c 040a 	orr.w	r4, ip, sl
 801bcb4:	940e      	str	r4, [sp, #56]	; 0x38
 801bcb6:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801bcb8:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801bcbc:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801bcbe:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801bcc2:	fb0e f707 	mul.w	r7, lr, r7
 801bcc6:	fb01 770c 	mla	r7, r1, ip, r7
 801bcca:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801bcce:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801bcd0:	fb00 770c 	mla	r7, r0, ip, r7
 801bcd4:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801bcd8:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801bcda:	fb08 770c 	mla	r7, r8, ip, r7
 801bcde:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801bce2:	fb0e fe0c 	mul.w	lr, lr, ip
 801bce6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801bcea:	fb01 e303 	mla	r3, r1, r3, lr
 801bcee:	9909      	ldr	r1, [sp, #36]	; 0x24
 801bcf0:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801bcf4:	990e      	ldr	r1, [sp, #56]	; 0x38
 801bcf6:	fb00 330a 	mla	r3, r0, sl, r3
 801bcfa:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801bcfe:	fb08 3c0c 	mla	ip, r8, ip, r3
 801bd02:	f8b9 3000 	ldrh.w	r3, [r9]
 801bd06:	43d2      	mvns	r2, r2
 801bd08:	1218      	asrs	r0, r3, #8
 801bd0a:	b2d2      	uxtb	r2, r2
 801bd0c:	10d9      	asrs	r1, r3, #3
 801bd0e:	0a3f      	lsrs	r7, r7, #8
 801bd10:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bd14:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801bd18:	00db      	lsls	r3, r3, #3
 801bd1a:	4350      	muls	r0, r2
 801bd1c:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801bd20:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801bd24:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801bd28:	b2db      	uxtb	r3, r3
 801bd2a:	ea47 070c 	orr.w	r7, r7, ip
 801bd2e:	4351      	muls	r1, r2
 801bd30:	4353      	muls	r3, r2
 801bd32:	1c42      	adds	r2, r0, #1
 801bd34:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801bd38:	0c3a      	lsrs	r2, r7, #16
 801bd3a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801bd3e:	4a18      	ldr	r2, [pc, #96]	; (801bda0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 801bd40:	b2c0      	uxtb	r0, r0
 801bd42:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 801bd46:	1c4a      	adds	r2, r1, #1
 801bd48:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801bd4c:	0a3a      	lsrs	r2, r7, #8
 801bd4e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801bd52:	00c9      	lsls	r1, r1, #3
 801bd54:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801bd58:	4301      	orrs	r1, r0
 801bd5a:	1c58      	adds	r0, r3, #1
 801bd5c:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801bd60:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801bd64:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 801bd68:	4308      	orrs	r0, r1
 801bd6a:	f8a9 0000 	strh.w	r0, [r9]
 801bd6e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801bd70:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801bd72:	441a      	add	r2, r3
 801bd74:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801bd76:	9225      	str	r2, [sp, #148]	; 0x94
 801bd78:	f109 0902 	add.w	r9, r9, #2
 801bd7c:	441d      	add	r5, r3
 801bd7e:	f10b 3bff 	add.w	fp, fp, #4294967295
 801bd82:	e64d      	b.n	801ba20 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 801bd84:	2800      	cmp	r0, #0
 801bd86:	f43f aeed 	beq.w	801bb64 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801bd8a:	5c79      	ldrb	r1, [r7, r1]
 801bd8c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801bd90:	9109      	str	r1, [sp, #36]	; 0x24
 801bd92:	0e09      	lsrs	r1, r1, #24
 801bd94:	9111      	str	r1, [sp, #68]	; 0x44
 801bd96:	e6e5      	b.n	801bb64 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801bd98:	b01b      	add	sp, #108	; 0x6c
 801bd9a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bd9e:	bf00      	nop
 801bda0:	fffff800 	.word	0xfffff800

0801bda4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 801bda4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bda8:	b085      	sub	sp, #20
 801bdaa:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 801bdae:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 801bdb2:	9103      	str	r1, [sp, #12]
 801bdb4:	fb00 7406 	mla	r4, r0, r6, r7
 801bdb8:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 801bdbc:	2800      	cmp	r0, #0
 801bdbe:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 801bdc2:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 801bdc6:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 801bdca:	9501      	str	r5, [sp, #4]
 801bdcc:	eb03 0904 	add.w	r9, r3, r4
 801bdd0:	f2c0 8150 	blt.w	801c074 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801bdd4:	4583      	cmp	fp, r0
 801bdd6:	f340 814d 	ble.w	801c074 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801bdda:	2f00      	cmp	r7, #0
 801bddc:	f2c0 8146 	blt.w	801c06c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801bde0:	42be      	cmp	r6, r7
 801bde2:	f340 8143 	ble.w	801c06c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801bde6:	f813 c004 	ldrb.w	ip, [r3, r4]
 801bdea:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 801bdee:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801bdf2:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 801bdf6:	4355      	muls	r5, r2
 801bdf8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801bdfc:	f64f 041f 	movw	r4, #63519	; 0xf81f
 801be00:	fb0c f203 	mul.w	r2, ip, r3
 801be04:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801be08:	f605 0501 	addw	r5, r5, #2049	; 0x801
 801be0c:	441d      	add	r5, r3
 801be0e:	f102 0320 	add.w	r3, r2, #32
 801be12:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801be16:	0a1b      	lsrs	r3, r3, #8
 801be18:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801be1c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801be20:	431c      	orrs	r4, r3
 801be22:	1c7b      	adds	r3, r7, #1
 801be24:	f100 812b 	bmi.w	801c07e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801be28:	429e      	cmp	r6, r3
 801be2a:	f340 8128 	ble.w	801c07e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801be2e:	2900      	cmp	r1, #0
 801be30:	f000 8128 	beq.w	801c084 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 801be34:	9a01      	ldr	r2, [sp, #4]
 801be36:	f899 3001 	ldrb.w	r3, [r9, #1]
 801be3a:	8855      	ldrh	r5, [r2, #2]
 801be3c:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801be40:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 801be44:	fb08 f802 	mul.w	r8, r8, r2
 801be48:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801be4c:	f64f 021f 	movw	r2, #63519	; 0xf81f
 801be50:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801be54:	435d      	muls	r5, r3
 801be56:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801be5a:	44d0      	add	r8, sl
 801be5c:	f105 0a20 	add.w	sl, r5, #32
 801be60:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801be64:	0a2d      	lsrs	r5, r5, #8
 801be66:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801be6a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801be6e:	432a      	orrs	r2, r5
 801be70:	3001      	adds	r0, #1
 801be72:	f100 810d 	bmi.w	801c090 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801be76:	4583      	cmp	fp, r0
 801be78:	f340 810a 	ble.w	801c090 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801be7c:	f1be 0f00 	cmp.w	lr, #0
 801be80:	f000 810b 	beq.w	801c09a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 801be84:	2f00      	cmp	r7, #0
 801be86:	f2c0 8100 	blt.w	801c08a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801be8a:	42be      	cmp	r6, r7
 801be8c:	f340 80fd 	ble.w	801c08a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801be90:	9801      	ldr	r0, [sp, #4]
 801be92:	f819 5006 	ldrb.w	r5, [r9, r6]
 801be96:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801be9a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801be9e:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 801bea2:	fb0a fa00 	mul.w	sl, sl, r0
 801bea6:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801beaa:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801beae:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801beb2:	fb05 f808 	mul.w	r8, r5, r8
 801beb6:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 801beba:	4482      	add	sl, r0
 801bebc:	f108 0020 	add.w	r0, r8, #32
 801bec0:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801bec4:	0a00      	lsrs	r0, r0, #8
 801bec6:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801beca:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801bece:	ea4b 0b00 	orr.w	fp, fp, r0
 801bed2:	3701      	adds	r7, #1
 801bed4:	f100 80e6 	bmi.w	801c0a4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801bed8:	42be      	cmp	r6, r7
 801beda:	f340 80e3 	ble.w	801c0a4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801bede:	2900      	cmp	r1, #0
 801bee0:	f000 80e3 	beq.w	801c0aa <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 801bee4:	3601      	adds	r6, #1
 801bee6:	9801      	ldr	r0, [sp, #4]
 801bee8:	f819 7006 	ldrb.w	r7, [r9, r6]
 801beec:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801bef0:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801bef4:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 801bef8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801befc:	fb09 f906 	mul.w	r9, r9, r6
 801bf00:	fb07 f800 	mul.w	r8, r7, r0
 801bf04:	f64f 001f 	movw	r0, #63519	; 0xf81f
 801bf08:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801bf0c:	f609 0901 	addw	r9, r9, #2049	; 0x801
 801bf10:	44d1      	add	r9, sl
 801bf12:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801bf16:	f108 0020 	add.w	r0, r8, #32
 801bf1a:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801bf1e:	0a00      	lsrs	r0, r0, #8
 801bf20:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801bf24:	4330      	orrs	r0, r6
 801bf26:	b28e      	uxth	r6, r1
 801bf28:	fa1f f98e 	uxth.w	r9, lr
 801bf2c:	fb06 f809 	mul.w	r8, r6, r9
 801bf30:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801bf34:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801bf38:	0136      	lsls	r6, r6, #4
 801bf3a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801bf3e:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801bf42:	9601      	str	r6, [sp, #4]
 801bf44:	ea4a 0404 	orr.w	r4, sl, r4
 801bf48:	fa1f f689 	uxth.w	r6, r9
 801bf4c:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801bf50:	fb11 f90e 	smulbb	r9, r1, lr
 801bf54:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801bf58:	9602      	str	r6, [sp, #8]
 801bf5a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801bf5e:	4626      	mov	r6, r4
 801bf60:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801bf64:	f1ce 0410 	rsb	r4, lr, #16
 801bf68:	1a64      	subs	r4, r4, r1
 801bf6a:	ea4a 0202 	orr.w	r2, sl, r2
 801bf6e:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801bf72:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801bf76:	434a      	muls	r2, r1
 801bf78:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801bf7c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801bf80:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801bf84:	fb04 2406 	mla	r4, r4, r6, r2
 801bf88:	ea4a 0000 	orr.w	r0, sl, r0
 801bf8c:	fb09 4200 	mla	r2, r9, r0, r4
 801bf90:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801bf94:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801bf98:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801bf9c:	ea44 0b0b 	orr.w	fp, r4, fp
 801bfa0:	9c01      	ldr	r4, [sp, #4]
 801bfa2:	9e02      	ldr	r6, [sp, #8]
 801bfa4:	9903      	ldr	r1, [sp, #12]
 801bfa6:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
 801bfaa:	1ba4      	subs	r4, r4, r6
 801bfac:	9e01      	ldr	r6, [sp, #4]
 801bfae:	8808      	ldrh	r0, [r1, #0]
 801bfb0:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
 801bfb4:	eba6 0608 	sub.w	r6, r6, r8
 801bfb8:	b2b6      	uxth	r6, r6
 801bfba:	b2a4      	uxth	r4, r4
 801bfbc:	4373      	muls	r3, r6
 801bfbe:	fb0c 3304 	mla	r3, ip, r4, r3
 801bfc2:	9c02      	ldr	r4, [sp, #8]
 801bfc4:	fb04 3505 	mla	r5, r4, r5, r3
 801bfc8:	fb08 5707 	mla	r7, r8, r7, r5
 801bfcc:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801bfd0:	b289      	uxth	r1, r1
 801bfd2:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801bfd6:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801bfda:	434f      	muls	r7, r1
 801bfdc:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801bfe0:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801bfe4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801bfe8:	1c7b      	adds	r3, r7, #1
 801bfea:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801bfee:	ea42 0e0e 	orr.w	lr, r2, lr
 801bff2:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801bff6:	fa1f f28e 	uxth.w	r2, lr
 801bffa:	1203      	asrs	r3, r0, #8
 801bffc:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 801c000:	b2ff      	uxtb	r7, r7
 801c002:	1215      	asrs	r5, r2, #8
 801c004:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801c008:	fb13 f307 	smulbb	r3, r3, r7
 801c00c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801c010:	fb05 3501 	mla	r5, r5, r1, r3
 801c014:	10c3      	asrs	r3, r0, #3
 801c016:	10d4      	asrs	r4, r2, #3
 801c018:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801c01c:	fb13 f307 	smulbb	r3, r3, r7
 801c020:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801c024:	fb04 3401 	mla	r4, r4, r1, r3
 801c028:	00c3      	lsls	r3, r0, #3
 801c02a:	00d2      	lsls	r2, r2, #3
 801c02c:	b2db      	uxtb	r3, r3
 801c02e:	fb13 f307 	smulbb	r3, r3, r7
 801c032:	b2d2      	uxtb	r2, r2
 801c034:	fb02 3101 	mla	r1, r2, r1, r3
 801c038:	b2ad      	uxth	r5, r5
 801c03a:	b289      	uxth	r1, r1
 801c03c:	b2a4      	uxth	r4, r4
 801c03e:	1c6b      	adds	r3, r5, #1
 801c040:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801c044:	1c62      	adds	r2, r4, #1
 801c046:	1c4b      	adds	r3, r1, #1
 801c048:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801c04c:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801c050:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801c054:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801c058:	0964      	lsrs	r4, r4, #5
 801c05a:	432b      	orrs	r3, r5
 801c05c:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801c060:	9a03      	ldr	r2, [sp, #12]
 801c062:	4323      	orrs	r3, r4
 801c064:	8013      	strh	r3, [r2, #0]
 801c066:	b005      	add	sp, #20
 801c068:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c06c:	f04f 0c00 	mov.w	ip, #0
 801c070:	4664      	mov	r4, ip
 801c072:	e6d6      	b.n	801be22 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 801c074:	2300      	movs	r3, #0
 801c076:	469c      	mov	ip, r3
 801c078:	461a      	mov	r2, r3
 801c07a:	461c      	mov	r4, r3
 801c07c:	e6f8      	b.n	801be70 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801c07e:	2300      	movs	r3, #0
 801c080:	461a      	mov	r2, r3
 801c082:	e6f5      	b.n	801be70 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801c084:	460b      	mov	r3, r1
 801c086:	460a      	mov	r2, r1
 801c088:	e6f2      	b.n	801be70 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801c08a:	2500      	movs	r5, #0
 801c08c:	46ab      	mov	fp, r5
 801c08e:	e720      	b.n	801bed2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 801c090:	2700      	movs	r7, #0
 801c092:	463d      	mov	r5, r7
 801c094:	4638      	mov	r0, r7
 801c096:	46bb      	mov	fp, r7
 801c098:	e745      	b.n	801bf26 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801c09a:	4677      	mov	r7, lr
 801c09c:	4675      	mov	r5, lr
 801c09e:	4670      	mov	r0, lr
 801c0a0:	46f3      	mov	fp, lr
 801c0a2:	e740      	b.n	801bf26 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801c0a4:	2700      	movs	r7, #0
 801c0a6:	4638      	mov	r0, r7
 801c0a8:	e73d      	b.n	801bf26 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801c0aa:	460f      	mov	r7, r1
 801c0ac:	4608      	mov	r0, r1
 801c0ae:	e73a      	b.n	801bf26 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

0801c0b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c0b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c0b4:	b097      	sub	sp, #92	; 0x5c
 801c0b6:	9214      	str	r2, [sp, #80]	; 0x50
 801c0b8:	9308      	str	r3, [sp, #32]
 801c0ba:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801c0bc:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801c0c0:	9312      	str	r3, [sp, #72]	; 0x48
 801c0c2:	9111      	str	r1, [sp, #68]	; 0x44
 801c0c4:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 801c0c8:	9015      	str	r0, [sp, #84]	; 0x54
 801c0ca:	6850      	ldr	r0, [r2, #4]
 801c0cc:	6812      	ldr	r2, [r2, #0]
 801c0ce:	fb00 1303 	mla	r3, r0, r3, r1
 801c0d2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801c0d6:	9309      	str	r3, [sp, #36]	; 0x24
 801c0d8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c0da:	681b      	ldr	r3, [r3, #0]
 801c0dc:	930b      	str	r3, [sp, #44]	; 0x2c
 801c0de:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c0e0:	685b      	ldr	r3, [r3, #4]
 801c0e2:	930c      	str	r3, [sp, #48]	; 0x30
 801c0e4:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 801c0e8:	930a      	str	r3, [sp, #40]	; 0x28
 801c0ea:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801c0ec:	2b00      	cmp	r3, #0
 801c0ee:	dc03      	bgt.n	801c0f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801c0f0:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801c0f2:	2b00      	cmp	r3, #0
 801c0f4:	f340 83cb 	ble.w	801c88e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 801c0f8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c0fa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c0fe:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801c102:	1e48      	subs	r0, r1, #1
 801c104:	1e55      	subs	r5, r2, #1
 801c106:	9b08      	ldr	r3, [sp, #32]
 801c108:	2b00      	cmp	r3, #0
 801c10a:	f340 81a3 	ble.w	801c454 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 801c10e:	9e21      	ldr	r6, [sp, #132]	; 0x84
 801c110:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801c112:	1436      	asrs	r6, r6, #16
 801c114:	ea4f 4323 	mov.w	r3, r3, asr #16
 801c118:	d406      	bmi.n	801c128 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801c11a:	4286      	cmp	r6, r0
 801c11c:	da04      	bge.n	801c128 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801c11e:	2b00      	cmp	r3, #0
 801c120:	db02      	blt.n	801c128 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801c122:	42ab      	cmp	r3, r5
 801c124:	f2c0 8197 	blt.w	801c456 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801c128:	3601      	adds	r6, #1
 801c12a:	f100 8184 	bmi.w	801c436 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801c12e:	42b1      	cmp	r1, r6
 801c130:	f2c0 8181 	blt.w	801c436 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801c134:	3301      	adds	r3, #1
 801c136:	f100 817e 	bmi.w	801c436 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801c13a:	429a      	cmp	r2, r3
 801c13c:	f2c0 817b 	blt.w	801c436 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801c140:	9b08      	ldr	r3, [sp, #32]
 801c142:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801c144:	9313      	str	r3, [sp, #76]	; 0x4c
 801c146:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801c14a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801c14c:	2b00      	cmp	r3, #0
 801c14e:	f340 81a4 	ble.w	801c49a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801c152:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801c154:	9d21      	ldr	r5, [sp, #132]	; 0x84
 801c156:	1418      	asrs	r0, r3, #16
 801c158:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801c15a:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801c15e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801c160:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801c164:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c166:	142d      	asrs	r5, r5, #16
 801c168:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801c16c:	f100 81f8 	bmi.w	801c560 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801c170:	f102 3eff 	add.w	lr, r2, #4294967295
 801c174:	4575      	cmp	r5, lr
 801c176:	f280 81f3 	bge.w	801c560 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801c17a:	2800      	cmp	r0, #0
 801c17c:	f2c0 81f0 	blt.w	801c560 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801c180:	f103 3eff 	add.w	lr, r3, #4294967295
 801c184:	4570      	cmp	r0, lr
 801c186:	f280 81eb 	bge.w	801c560 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801c18a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801c18c:	b212      	sxth	r2, r2
 801c18e:	fb00 5002 	mla	r0, r0, r2, r5
 801c192:	fa1f fe81 	uxth.w	lr, r1
 801c196:	eb03 0a00 	add.w	sl, r3, r0
 801c19a:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801c19e:	f813 9000 	ldrb.w	r9, [r3, r0]
 801c1a2:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801c1a6:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 801c1aa:	b29b      	uxth	r3, r3
 801c1ac:	f1bc 0f00 	cmp.w	ip, #0
 801c1b0:	f000 81b9 	beq.w	801c526 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 801c1b4:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801c1b8:	940d      	str	r4, [sp, #52]	; 0x34
 801c1ba:	eb0a 0b02 	add.w	fp, sl, r2
 801c1be:	fa1f fa8c 	uxth.w	sl, ip
 801c1c2:	fb0a fe0e 	mul.w	lr, sl, lr
 801c1c6:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801c1ca:	fa1f fa8a 	uxth.w	sl, sl
 801c1ce:	eba5 050e 	sub.w	r5, r5, lr
 801c1d2:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801c1d6:	940e      	str	r4, [sp, #56]	; 0x38
 801c1d8:	eba3 030a 	sub.w	r3, r3, sl
 801c1dc:	b2ad      	uxth	r5, r5
 801c1de:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801c1e0:	b29b      	uxth	r3, r3
 801c1e2:	fb08 f505 	mul.w	r5, r8, r5
 801c1e6:	fb09 5303 	mla	r3, r9, r3, r5
 801c1ea:	fb0a 3304 	mla	r3, sl, r4, r3
 801c1ee:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801c1f0:	fb0e 3304 	mla	r3, lr, r4, r3
 801c1f4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801c1f8:	2b00      	cmp	r3, #0
 801c1fa:	f000 810f 	beq.w	801c41c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c1fe:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801c200:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801c204:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801c208:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801c20c:	f000 8190 	beq.w	801c530 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 801c210:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801c214:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801c218:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c21c:	fb09 f000 	mul.w	r0, r9, r0
 801c220:	fb0a fe0e 	mul.w	lr, sl, lr
 801c224:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801c228:	f100 0b20 	add.w	fp, r0, #32
 801c22c:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801c230:	44ce      	add	lr, r9
 801c232:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801c236:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801c23a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801c23e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801c242:	ea4e 0909 	orr.w	r9, lr, r9
 801c246:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801c24a:	8868      	ldrh	r0, [r5, #2]
 801c24c:	d019      	beq.n	801c282 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801c24e:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801c252:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801c256:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c25a:	fb08 f800 	mul.w	r8, r8, r0
 801c25e:	fb0a fe0e 	mul.w	lr, sl, lr
 801c262:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801c266:	f108 0b20 	add.w	fp, r8, #32
 801c26a:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801c26e:	4486      	add	lr, r0
 801c270:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801c274:	0a00      	lsrs	r0, r0, #8
 801c276:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801c27a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c27e:	ea4e 0000 	orr.w	r0, lr, r0
 801c282:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801c286:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801c28a:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801c28e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801c292:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c296:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801c29a:	ea4e 0909 	orr.w	r9, lr, r9
 801c29e:	ea4a 0000 	orr.w	r0, sl, r0
 801c2a2:	f1bc 0f00 	cmp.w	ip, #0
 801c2a6:	f000 8145 	beq.w	801c534 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 801c2aa:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 801c2ae:	3a01      	subs	r2, #1
 801c2b0:	0052      	lsls	r2, r2, #1
 801c2b2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801c2b4:	3202      	adds	r2, #2
 801c2b6:	2cff      	cmp	r4, #255	; 0xff
 801c2b8:	eb05 0e02 	add.w	lr, r5, r2
 801c2bc:	5aaa      	ldrh	r2, [r5, r2]
 801c2be:	d018      	beq.n	801c2f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801c2c0:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 801c2c4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c2c8:	fb04 fa02 	mul.w	sl, r4, r2
 801c2cc:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801c2d0:	fb08 f805 	mul.w	r8, r8, r5
 801c2d4:	f10a 0520 	add.w	r5, sl, #32
 801c2d8:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801c2dc:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801c2e0:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801c2e4:	4442      	add	r2, r8
 801c2e6:	0a2d      	lsrs	r5, r5, #8
 801c2e8:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801c2ec:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c2f0:	432a      	orrs	r2, r5
 801c2f2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801c2f4:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801c2f8:	2cff      	cmp	r4, #255	; 0xff
 801c2fa:	d01a      	beq.n	801c332 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 801c2fc:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 801c300:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c304:	fb04 fa05 	mul.w	sl, r4, r5
 801c308:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801c30c:	fb08 f80e 	mul.w	r8, r8, lr
 801c310:	f10a 0e20 	add.w	lr, sl, #32
 801c314:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801c318:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801c31c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801c320:	4445      	add	r5, r8
 801c322:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c326:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801c32a:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 801c32e:	ea45 050e 	orr.w	r5, r5, lr
 801c332:	fb1c fe01 	smulbb	lr, ip, r1
 801c336:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801c33a:	f1cc 0810 	rsb	r8, ip, #16
 801c33e:	eba8 0801 	sub.w	r8, r8, r1
 801c342:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801c346:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801c34a:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801c34e:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801c352:	4341      	muls	r1, r0
 801c354:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c358:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801c35c:	ea4a 0202 	orr.w	r2, sl, r2
 801c360:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801c364:	fb09 1108 	mla	r1, r9, r8, r1
 801c368:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801c36c:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801c370:	fb0c 1102 	mla	r1, ip, r2, r1
 801c374:	ea4b 0505 	orr.w	r5, fp, r5
 801c378:	fb0e 1e05 	mla	lr, lr, r5, r1
 801c37c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801c380:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801c384:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c388:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801c38c:	ea42 0e0e 	orr.w	lr, r2, lr
 801c390:	fa1f f28e 	uxth.w	r2, lr
 801c394:	2bff      	cmp	r3, #255	; 0xff
 801c396:	d103      	bne.n	801c3a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801c398:	9912      	ldr	r1, [sp, #72]	; 0x48
 801c39a:	29ff      	cmp	r1, #255	; 0xff
 801c39c:	f000 80de 	beq.w	801c55c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 801c3a0:	990a      	ldr	r1, [sp, #40]	; 0x28
 801c3a2:	8838      	ldrh	r0, [r7, #0]
 801c3a4:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801c3a6:	434b      	muls	r3, r1
 801c3a8:	f103 0c01 	add.w	ip, r3, #1
 801c3ac:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 801c3b0:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801c3b4:	fa5f fc83 	uxtb.w	ip, r3
 801c3b8:	1203      	asrs	r3, r0, #8
 801c3ba:	1215      	asrs	r5, r2, #8
 801c3bc:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801c3c0:	fb13 f30c 	smulbb	r3, r3, ip
 801c3c4:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801c3c8:	fb05 3501 	mla	r5, r5, r1, r3
 801c3cc:	10c3      	asrs	r3, r0, #3
 801c3ce:	10d1      	asrs	r1, r2, #3
 801c3d0:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801c3d4:	fb13 f30c 	smulbb	r3, r3, ip
 801c3d8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801c3dc:	fb01 3104 	mla	r1, r1, r4, r3
 801c3e0:	00c3      	lsls	r3, r0, #3
 801c3e2:	00d2      	lsls	r2, r2, #3
 801c3e4:	b2db      	uxtb	r3, r3
 801c3e6:	b2d2      	uxtb	r2, r2
 801c3e8:	fb13 f30c 	smulbb	r3, r3, ip
 801c3ec:	b2ad      	uxth	r5, r5
 801c3ee:	fb02 3304 	mla	r3, r2, r4, r3
 801c3f2:	b29a      	uxth	r2, r3
 801c3f4:	1c6b      	adds	r3, r5, #1
 801c3f6:	b289      	uxth	r1, r1
 801c3f8:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801c3fc:	1c53      	adds	r3, r2, #1
 801c3fe:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801c402:	1c4a      	adds	r2, r1, #1
 801c404:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801c408:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801c40c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801c410:	0949      	lsrs	r1, r1, #5
 801c412:	432b      	orrs	r3, r5
 801c414:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801c418:	430b      	orrs	r3, r1
 801c41a:	803b      	strh	r3, [r7, #0]
 801c41c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801c41e:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801c420:	4413      	add	r3, r2
 801c422:	9321      	str	r3, [sp, #132]	; 0x84
 801c424:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801c426:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c428:	441a      	add	r2, r3
 801c42a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801c42c:	9222      	str	r2, [sp, #136]	; 0x88
 801c42e:	3b01      	subs	r3, #1
 801c430:	3702      	adds	r7, #2
 801c432:	9313      	str	r3, [sp, #76]	; 0x4c
 801c434:	e689      	b.n	801c14a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801c436:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801c438:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 801c43a:	9c22      	ldr	r4, [sp, #136]	; 0x88
 801c43c:	4433      	add	r3, r6
 801c43e:	9321      	str	r3, [sp, #132]	; 0x84
 801c440:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c442:	441c      	add	r4, r3
 801c444:	9b08      	ldr	r3, [sp, #32]
 801c446:	9422      	str	r4, [sp, #136]	; 0x88
 801c448:	3b01      	subs	r3, #1
 801c44a:	9308      	str	r3, [sp, #32]
 801c44c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c44e:	3302      	adds	r3, #2
 801c450:	9309      	str	r3, [sp, #36]	; 0x24
 801c452:	e658      	b.n	801c106 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 801c454:	d028      	beq.n	801c4a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801c456:	9b08      	ldr	r3, [sp, #32]
 801c458:	9823      	ldr	r0, [sp, #140]	; 0x8c
 801c45a:	9d21      	ldr	r5, [sp, #132]	; 0x84
 801c45c:	3b01      	subs	r3, #1
 801c45e:	fb00 5003 	mla	r0, r0, r3, r5
 801c462:	1400      	asrs	r0, r0, #16
 801c464:	f53f ae6c 	bmi.w	801c140 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c468:	3901      	subs	r1, #1
 801c46a:	4288      	cmp	r0, r1
 801c46c:	f6bf ae68 	bge.w	801c140 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c470:	9924      	ldr	r1, [sp, #144]	; 0x90
 801c472:	9822      	ldr	r0, [sp, #136]	; 0x88
 801c474:	fb01 0303 	mla	r3, r1, r3, r0
 801c478:	141b      	asrs	r3, r3, #16
 801c47a:	f53f ae61 	bmi.w	801c140 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c47e:	3a01      	subs	r2, #1
 801c480:	4293      	cmp	r3, r2
 801c482:	f6bf ae5d 	bge.w	801c140 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c486:	9b08      	ldr	r3, [sp, #32]
 801c488:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801c48c:	9313      	str	r3, [sp, #76]	; 0x4c
 801c48e:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801c492:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801c494:	2b00      	cmp	r3, #0
 801c496:	f300 8082 	bgt.w	801c59e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801c49a:	9b08      	ldr	r3, [sp, #32]
 801c49c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801c4a0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c4a2:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801c4a6:	9309      	str	r3, [sp, #36]	; 0x24
 801c4a8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801c4aa:	2b00      	cmp	r3, #0
 801c4ac:	f340 81ef 	ble.w	801c88e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 801c4b0:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c4b4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801c4b8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801c4bc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c4be:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c4c2:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c4c6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c4ca:	eef0 6a62 	vmov.f32	s13, s5
 801c4ce:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c4d2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c4d6:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c4da:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
 801c4de:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c4e2:	eef0 6a43 	vmov.f32	s13, s6
 801c4e6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c4ea:	ee12 2a90 	vmov	r2, s5
 801c4ee:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c4f2:	fb92 f3f3 	sdiv	r3, r2, r3
 801c4f6:	ee13 2a10 	vmov	r2, s6
 801c4fa:	9323      	str	r3, [sp, #140]	; 0x8c
 801c4fc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c4fe:	fb92 f3f3 	sdiv	r3, r2, r3
 801c502:	9324      	str	r3, [sp, #144]	; 0x90
 801c504:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801c506:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c508:	3b01      	subs	r3, #1
 801c50a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c50e:	9311      	str	r3, [sp, #68]	; 0x44
 801c510:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c512:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 801c516:	bf08      	it	eq
 801c518:	4613      	moveq	r3, r2
 801c51a:	9308      	str	r3, [sp, #32]
 801c51c:	eeb0 3a67 	vmov.f32	s6, s15
 801c520:	eef0 2a47 	vmov.f32	s5, s14
 801c524:	e5e1      	b.n	801c0ea <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801c526:	fb08 f505 	mul.w	r5, r8, r5
 801c52a:	fb09 5303 	mla	r3, r9, r3, r5
 801c52e:	e661      	b.n	801c1f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 801c530:	4681      	mov	r9, r0
 801c532:	e688      	b.n	801c246 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801c534:	f1c1 0210 	rsb	r2, r1, #16
 801c538:	4341      	muls	r1, r0
 801c53a:	fb09 1902 	mla	r9, r9, r2, r1
 801c53e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801c542:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801c546:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801c54a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c54e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801c552:	ea42 0909 	orr.w	r9, r2, r9
 801c556:	fa1f f289 	uxth.w	r2, r9
 801c55a:	e71b      	b.n	801c394 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801c55c:	803a      	strh	r2, [r7, #0]
 801c55e:	e75d      	b.n	801c41c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c560:	f115 0e01 	adds.w	lr, r5, #1
 801c564:	f53f af5a 	bmi.w	801c41c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c568:	4572      	cmp	r2, lr
 801c56a:	f6ff af57 	blt.w	801c41c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c56e:	f110 0e01 	adds.w	lr, r0, #1
 801c572:	f53f af53 	bmi.w	801c41c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c576:	4573      	cmp	r3, lr
 801c578:	f6ff af50 	blt.w	801c41c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c57c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801c57e:	9502      	str	r5, [sp, #8]
 801c580:	b21b      	sxth	r3, r3
 801c582:	b212      	sxth	r2, r2
 801c584:	e9cd 0103 	strd	r0, r1, [sp, #12]
 801c588:	9301      	str	r3, [sp, #4]
 801c58a:	9200      	str	r2, [sp, #0]
 801c58c:	e9cd c405 	strd	ip, r4, [sp, #20]
 801c590:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 801c594:	4639      	mov	r1, r7
 801c596:	9815      	ldr	r0, [sp, #84]	; 0x54
 801c598:	f7ff fc04 	bl	801bda4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 801c59c:	e73e      	b.n	801c41c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c59e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801c5a0:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801c5a4:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801c5a6:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801c5aa:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c5ac:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c5b0:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801c5b2:	141f      	asrs	r7, r3, #16
 801c5b4:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801c5b6:	141b      	asrs	r3, r3, #16
 801c5b8:	fb01 3707 	mla	r7, r1, r7, r3
 801c5bc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801c5be:	fa1f fc82 	uxth.w	ip, r2
 801c5c2:	eb03 0a07 	add.w	sl, r3, r7
 801c5c6:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801c5ca:	f813 9007 	ldrb.w	r9, [r3, r7]
 801c5ce:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801c5d2:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801c5d6:	b29b      	uxth	r3, r3
 801c5d8:	2d00      	cmp	r5, #0
 801c5da:	f000 813d 	beq.w	801c858 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 801c5de:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801c5e2:	940f      	str	r4, [sp, #60]	; 0x3c
 801c5e4:	eb0a 0b01 	add.w	fp, sl, r1
 801c5e8:	fa1f fa85 	uxth.w	sl, r5
 801c5ec:	fb0a fc0c 	mul.w	ip, sl, ip
 801c5f0:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801c5f4:	fa1f fa8a 	uxth.w	sl, sl
 801c5f8:	eba0 000c 	sub.w	r0, r0, ip
 801c5fc:	eba3 030a 	sub.w	r3, r3, sl
 801c600:	b280      	uxth	r0, r0
 801c602:	fb08 f000 	mul.w	r0, r8, r0
 801c606:	b29b      	uxth	r3, r3
 801c608:	fb09 0303 	mla	r3, r9, r3, r0
 801c60c:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801c60e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801c612:	9410      	str	r4, [sp, #64]	; 0x40
 801c614:	fb0a 3300 	mla	r3, sl, r0, r3
 801c618:	fb0c 3304 	mla	r3, ip, r4, r3
 801c61c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801c620:	2b00      	cmp	r3, #0
 801c622:	f000 810b 	beq.w	801c83c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 801c626:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801c628:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801c62a:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801c62e:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801c632:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801c636:	f000 8114 	beq.w	801c862 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 801c63a:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801c63e:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801c642:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801c646:	fb09 f707 	mul.w	r7, r9, r7
 801c64a:	fb0a fc0c 	mul.w	ip, sl, ip
 801c64e:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801c652:	f107 0b20 	add.w	fp, r7, #32
 801c656:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801c65a:	44cc      	add	ip, r9
 801c65c:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801c660:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801c664:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801c668:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801c66c:	ea4c 0909 	orr.w	r9, ip, r9
 801c670:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801c674:	8847      	ldrh	r7, [r0, #2]
 801c676:	d019      	beq.n	801c6ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 801c678:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801c67c:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801c680:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801c684:	fb08 f807 	mul.w	r8, r8, r7
 801c688:	fb0a fc0c 	mul.w	ip, sl, ip
 801c68c:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801c690:	f108 0b20 	add.w	fp, r8, #32
 801c694:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801c698:	44bc      	add	ip, r7
 801c69a:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801c69e:	0a3f      	lsrs	r7, r7, #8
 801c6a0:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801c6a4:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801c6a8:	ea4c 0707 	orr.w	r7, ip, r7
 801c6ac:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801c6b0:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801c6b4:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801c6b8:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801c6bc:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c6c0:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801c6c4:	ea4c 0909 	orr.w	r9, ip, r9
 801c6c8:	ea4a 0707 	orr.w	r7, sl, r7
 801c6cc:	2d00      	cmp	r5, #0
 801c6ce:	f000 80ca 	beq.w	801c866 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 801c6d2:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801c6d6:	3901      	subs	r1, #1
 801c6d8:	0049      	lsls	r1, r1, #1
 801c6da:	3102      	adds	r1, #2
 801c6dc:	eb00 0c01 	add.w	ip, r0, r1
 801c6e0:	5a41      	ldrh	r1, [r0, r1]
 801c6e2:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801c6e4:	28ff      	cmp	r0, #255	; 0xff
 801c6e6:	d019      	beq.n	801c71c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 801c6e8:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801c6ea:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 801c6ee:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801c6f2:	fb04 fa01 	mul.w	sl, r4, r1
 801c6f6:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801c6fa:	fb08 f800 	mul.w	r8, r8, r0
 801c6fe:	f10a 0020 	add.w	r0, sl, #32
 801c702:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801c706:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801c70a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801c70e:	4441      	add	r1, r8
 801c710:	0a00      	lsrs	r0, r0, #8
 801c712:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801c716:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c71a:	4301      	orrs	r1, r0
 801c71c:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801c71e:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801c722:	2cff      	cmp	r4, #255	; 0xff
 801c724:	d01a      	beq.n	801c75c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 801c726:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 801c72a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c72e:	fb04 fa00 	mul.w	sl, r4, r0
 801c732:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801c736:	fb08 f80c 	mul.w	r8, r8, ip
 801c73a:	f10a 0c20 	add.w	ip, sl, #32
 801c73e:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801c742:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801c746:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801c74a:	4440      	add	r0, r8
 801c74c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c750:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801c754:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801c758:	ea40 000c 	orr.w	r0, r0, ip
 801c75c:	fb15 fc02 	smulbb	ip, r5, r2
 801c760:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801c764:	f1c5 0810 	rsb	r8, r5, #16
 801c768:	eba8 0802 	sub.w	r8, r8, r2
 801c76c:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801c770:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801c774:	437a      	muls	r2, r7
 801c776:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801c77a:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801c77e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c782:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801c786:	fb09 2208 	mla	r2, r9, r8, r2
 801c78a:	ea4a 0101 	orr.w	r1, sl, r1
 801c78e:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801c792:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801c796:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801c79a:	fb05 2201 	mla	r2, r5, r1, r2
 801c79e:	ea4b 0000 	orr.w	r0, fp, r0
 801c7a2:	fb0c 2200 	mla	r2, ip, r0, r2
 801c7a6:	0d57      	lsrs	r7, r2, #21
 801c7a8:	0952      	lsrs	r2, r2, #5
 801c7aa:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801c7ae:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801c7b2:	433a      	orrs	r2, r7
 801c7b4:	2bff      	cmp	r3, #255	; 0xff
 801c7b6:	b292      	uxth	r2, r2
 801c7b8:	d102      	bne.n	801c7c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801c7ba:	9912      	ldr	r1, [sp, #72]	; 0x48
 801c7bc:	29ff      	cmp	r1, #255	; 0xff
 801c7be:	d063      	beq.n	801c888 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 801c7c0:	980a      	ldr	r0, [sp, #40]	; 0x28
 801c7c2:	f8be 1000 	ldrh.w	r1, [lr]
 801c7c6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801c7c8:	4343      	muls	r3, r0
 801c7ca:	1c58      	adds	r0, r3, #1
 801c7cc:	eb00 2323 	add.w	r3, r0, r3, asr #8
 801c7d0:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801c7d4:	1208      	asrs	r0, r1, #8
 801c7d6:	b2db      	uxtb	r3, r3
 801c7d8:	1215      	asrs	r5, r2, #8
 801c7da:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801c7de:	fb10 f003 	smulbb	r0, r0, r3
 801c7e2:	10cf      	asrs	r7, r1, #3
 801c7e4:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801c7e8:	00c9      	lsls	r1, r1, #3
 801c7ea:	fb05 0504 	mla	r5, r5, r4, r0
 801c7ee:	b2c9      	uxtb	r1, r1
 801c7f0:	10d0      	asrs	r0, r2, #3
 801c7f2:	00d2      	lsls	r2, r2, #3
 801c7f4:	fb11 f103 	smulbb	r1, r1, r3
 801c7f8:	b2d2      	uxtb	r2, r2
 801c7fa:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801c7fe:	fb02 1204 	mla	r2, r2, r4, r1
 801c802:	fb17 f703 	smulbb	r7, r7, r3
 801c806:	b2ad      	uxth	r5, r5
 801c808:	b292      	uxth	r2, r2
 801c80a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801c80e:	fb00 7004 	mla	r0, r0, r4, r7
 801c812:	1c6b      	adds	r3, r5, #1
 801c814:	1c57      	adds	r7, r2, #1
 801c816:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801c81a:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801c81e:	b280      	uxth	r0, r0
 801c820:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801c824:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801c828:	433d      	orrs	r5, r7
 801c82a:	1c47      	adds	r7, r0, #1
 801c82c:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801c830:	097f      	lsrs	r7, r7, #5
 801c832:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801c836:	433d      	orrs	r5, r7
 801c838:	f8ae 5000 	strh.w	r5, [lr]
 801c83c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801c83e:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801c840:	4413      	add	r3, r2
 801c842:	9321      	str	r3, [sp, #132]	; 0x84
 801c844:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801c846:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c848:	441a      	add	r2, r3
 801c84a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801c84c:	9222      	str	r2, [sp, #136]	; 0x88
 801c84e:	3b01      	subs	r3, #1
 801c850:	f10e 0e02 	add.w	lr, lr, #2
 801c854:	9313      	str	r3, [sp, #76]	; 0x4c
 801c856:	e61c      	b.n	801c492 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 801c858:	fb08 f000 	mul.w	r0, r8, r0
 801c85c:	fb09 0303 	mla	r3, r9, r3, r0
 801c860:	e6dc      	b.n	801c61c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 801c862:	46b9      	mov	r9, r7
 801c864:	e704      	b.n	801c670 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 801c866:	f1c2 0110 	rsb	r1, r2, #16
 801c86a:	437a      	muls	r2, r7
 801c86c:	fb09 2901 	mla	r9, r9, r1, r2
 801c870:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801c874:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801c878:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801c87c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c880:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801c884:	4302      	orrs	r2, r0
 801c886:	e795      	b.n	801c7b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 801c888:	f8ae 2000 	strh.w	r2, [lr]
 801c88c:	e7d6      	b.n	801c83c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 801c88e:	b017      	add	sp, #92	; 0x5c
 801c890:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801c894 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801c894:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c898:	b085      	sub	sp, #20
 801c89a:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 801c89e:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 801c8a2:	9103      	str	r1, [sp, #12]
 801c8a4:	fb00 7406 	mla	r4, r0, r6, r7
 801c8a8:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 801c8ac:	2800      	cmp	r0, #0
 801c8ae:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 801c8b2:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 801c8b6:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 801c8ba:	9501      	str	r5, [sp, #4]
 801c8bc:	eb02 0904 	add.w	r9, r2, r4
 801c8c0:	f2c0 8141 	blt.w	801cb46 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801c8c4:	4583      	cmp	fp, r0
 801c8c6:	f340 813e 	ble.w	801cb46 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801c8ca:	2f00      	cmp	r7, #0
 801c8cc:	f2c0 8137 	blt.w	801cb3e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801c8d0:	42be      	cmp	r6, r7
 801c8d2:	f340 8134 	ble.w	801cb3e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801c8d6:	f812 c004 	ldrb.w	ip, [r2, r4]
 801c8da:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 801c8de:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801c8e2:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 801c8e6:	4355      	muls	r5, r2
 801c8e8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c8ec:	f64f 041f 	movw	r4, #63519	; 0xf81f
 801c8f0:	fb0c f203 	mul.w	r2, ip, r3
 801c8f4:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801c8f8:	f605 0501 	addw	r5, r5, #2049	; 0x801
 801c8fc:	441d      	add	r5, r3
 801c8fe:	f102 0320 	add.w	r3, r2, #32
 801c902:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801c906:	0a1b      	lsrs	r3, r3, #8
 801c908:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801c90c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c910:	431c      	orrs	r4, r3
 801c912:	1c7b      	adds	r3, r7, #1
 801c914:	f100 811c 	bmi.w	801cb50 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801c918:	429e      	cmp	r6, r3
 801c91a:	f340 8119 	ble.w	801cb50 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801c91e:	2900      	cmp	r1, #0
 801c920:	f000 8119 	beq.w	801cb56 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 801c924:	9a01      	ldr	r2, [sp, #4]
 801c926:	f899 3001 	ldrb.w	r3, [r9, #1]
 801c92a:	8855      	ldrh	r5, [r2, #2]
 801c92c:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801c930:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 801c934:	fb08 f802 	mul.w	r8, r8, r2
 801c938:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c93c:	f64f 021f 	movw	r2, #63519	; 0xf81f
 801c940:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801c944:	435d      	muls	r5, r3
 801c946:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801c94a:	44d0      	add	r8, sl
 801c94c:	f105 0a20 	add.w	sl, r5, #32
 801c950:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801c954:	0a2d      	lsrs	r5, r5, #8
 801c956:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801c95a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c95e:	432a      	orrs	r2, r5
 801c960:	3001      	adds	r0, #1
 801c962:	f100 80fe 	bmi.w	801cb62 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801c966:	4583      	cmp	fp, r0
 801c968:	f340 80fb 	ble.w	801cb62 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801c96c:	f1be 0f00 	cmp.w	lr, #0
 801c970:	f000 80fc 	beq.w	801cb6c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 801c974:	2f00      	cmp	r7, #0
 801c976:	f2c0 80f1 	blt.w	801cb5c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801c97a:	42be      	cmp	r6, r7
 801c97c:	f340 80ee 	ble.w	801cb5c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801c980:	9801      	ldr	r0, [sp, #4]
 801c982:	f819 5006 	ldrb.w	r5, [r9, r6]
 801c986:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801c98a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801c98e:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 801c992:	fb0a fa00 	mul.w	sl, sl, r0
 801c996:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801c99a:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801c99e:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801c9a2:	fb05 f808 	mul.w	r8, r5, r8
 801c9a6:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 801c9aa:	4482      	add	sl, r0
 801c9ac:	f108 0020 	add.w	r0, r8, #32
 801c9b0:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801c9b4:	0a00      	lsrs	r0, r0, #8
 801c9b6:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801c9ba:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c9be:	ea4b 0b00 	orr.w	fp, fp, r0
 801c9c2:	3701      	adds	r7, #1
 801c9c4:	f100 80d7 	bmi.w	801cb76 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801c9c8:	42be      	cmp	r6, r7
 801c9ca:	f340 80d4 	ble.w	801cb76 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801c9ce:	2900      	cmp	r1, #0
 801c9d0:	f000 80d4 	beq.w	801cb7c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 801c9d4:	3601      	adds	r6, #1
 801c9d6:	9801      	ldr	r0, [sp, #4]
 801c9d8:	f819 7006 	ldrb.w	r7, [r9, r6]
 801c9dc:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801c9e0:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801c9e4:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 801c9e8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c9ec:	fb09 f906 	mul.w	r9, r9, r6
 801c9f0:	fb07 f800 	mul.w	r8, r7, r0
 801c9f4:	f64f 001f 	movw	r0, #63519	; 0xf81f
 801c9f8:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801c9fc:	f609 0901 	addw	r9, r9, #2049	; 0x801
 801ca00:	44d1      	add	r9, sl
 801ca02:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801ca06:	f108 0020 	add.w	r0, r8, #32
 801ca0a:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801ca0e:	0a00      	lsrs	r0, r0, #8
 801ca10:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ca14:	4330      	orrs	r0, r6
 801ca16:	b28e      	uxth	r6, r1
 801ca18:	fa1f f98e 	uxth.w	r9, lr
 801ca1c:	fb06 f809 	mul.w	r8, r6, r9
 801ca20:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801ca24:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801ca28:	0136      	lsls	r6, r6, #4
 801ca2a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801ca2e:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801ca32:	9601      	str	r6, [sp, #4]
 801ca34:	ea4a 0404 	orr.w	r4, sl, r4
 801ca38:	fa1f f689 	uxth.w	r6, r9
 801ca3c:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801ca40:	fb11 f90e 	smulbb	r9, r1, lr
 801ca44:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801ca48:	9602      	str	r6, [sp, #8]
 801ca4a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801ca4e:	4626      	mov	r6, r4
 801ca50:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801ca54:	f1ce 0410 	rsb	r4, lr, #16
 801ca58:	1a64      	subs	r4, r4, r1
 801ca5a:	ea4a 0202 	orr.w	r2, sl, r2
 801ca5e:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801ca62:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801ca66:	434a      	muls	r2, r1
 801ca68:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801ca6c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801ca70:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801ca74:	fb04 2406 	mla	r4, r4, r6, r2
 801ca78:	ea4a 0000 	orr.w	r0, sl, r0
 801ca7c:	fb09 4200 	mla	r2, r9, r0, r4
 801ca80:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801ca84:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801ca88:	9801      	ldr	r0, [sp, #4]
 801ca8a:	9903      	ldr	r1, [sp, #12]
 801ca8c:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801ca90:	ea44 0b0b 	orr.w	fp, r4, fp
 801ca94:	9c02      	ldr	r4, [sp, #8]
 801ca96:	8809      	ldrh	r1, [r1, #0]
 801ca98:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 801ca9c:	1b00      	subs	r0, r0, r4
 801ca9e:	9c01      	ldr	r4, [sp, #4]
 801caa0:	eba4 0608 	sub.w	r6, r4, r8
 801caa4:	b2b6      	uxth	r6, r6
 801caa6:	b280      	uxth	r0, r0
 801caa8:	4373      	muls	r3, r6
 801caaa:	fb0c 3300 	mla	r3, ip, r0, r3
 801caae:	9802      	ldr	r0, [sp, #8]
 801cab0:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801cab4:	fb00 3505 	mla	r5, r0, r5, r3
 801cab8:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801cabc:	fb08 5707 	mla	r7, r8, r7, r5
 801cac0:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801cac4:	120b      	asrs	r3, r1, #8
 801cac6:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801caca:	ea6f 2727 	mvn.w	r7, r7, asr #8
 801cace:	b2ff      	uxtb	r7, r7
 801cad0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801cad4:	10c8      	asrs	r0, r1, #3
 801cad6:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801cada:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801cade:	00c9      	lsls	r1, r1, #3
 801cae0:	437b      	muls	r3, r7
 801cae2:	ea42 0e0e 	orr.w	lr, r2, lr
 801cae6:	b2c9      	uxtb	r1, r1
 801cae8:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801caec:	fa1f f28e 	uxth.w	r2, lr
 801caf0:	4378      	muls	r0, r7
 801caf2:	434f      	muls	r7, r1
 801caf4:	1c59      	adds	r1, r3, #1
 801caf6:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801cafa:	1213      	asrs	r3, r2, #8
 801cafc:	f023 0307 	bic.w	r3, r3, #7
 801cb00:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801cb04:	1c41      	adds	r1, r0, #1
 801cb06:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801cb0a:	10d1      	asrs	r1, r2, #3
 801cb0c:	f021 0103 	bic.w	r1, r1, #3
 801cb10:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801cb14:	021b      	lsls	r3, r3, #8
 801cb16:	00c9      	lsls	r1, r1, #3
 801cb18:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801cb1c:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801cb20:	430b      	orrs	r3, r1
 801cb22:	1c79      	adds	r1, r7, #1
 801cb24:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 801cb28:	00d2      	lsls	r2, r2, #3
 801cb2a:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801cb2e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801cb32:	431a      	orrs	r2, r3
 801cb34:	9b03      	ldr	r3, [sp, #12]
 801cb36:	801a      	strh	r2, [r3, #0]
 801cb38:	b005      	add	sp, #20
 801cb3a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cb3e:	f04f 0c00 	mov.w	ip, #0
 801cb42:	4664      	mov	r4, ip
 801cb44:	e6e5      	b.n	801c912 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 801cb46:	2300      	movs	r3, #0
 801cb48:	469c      	mov	ip, r3
 801cb4a:	461a      	mov	r2, r3
 801cb4c:	461c      	mov	r4, r3
 801cb4e:	e707      	b.n	801c960 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801cb50:	2300      	movs	r3, #0
 801cb52:	461a      	mov	r2, r3
 801cb54:	e704      	b.n	801c960 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801cb56:	460b      	mov	r3, r1
 801cb58:	460a      	mov	r2, r1
 801cb5a:	e701      	b.n	801c960 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801cb5c:	2500      	movs	r5, #0
 801cb5e:	46ab      	mov	fp, r5
 801cb60:	e72f      	b.n	801c9c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 801cb62:	2700      	movs	r7, #0
 801cb64:	463d      	mov	r5, r7
 801cb66:	4638      	mov	r0, r7
 801cb68:	46bb      	mov	fp, r7
 801cb6a:	e754      	b.n	801ca16 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801cb6c:	4677      	mov	r7, lr
 801cb6e:	4675      	mov	r5, lr
 801cb70:	4670      	mov	r0, lr
 801cb72:	46f3      	mov	fp, lr
 801cb74:	e74f      	b.n	801ca16 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801cb76:	2700      	movs	r7, #0
 801cb78:	4638      	mov	r0, r7
 801cb7a:	e74c      	b.n	801ca16 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801cb7c:	460f      	mov	r7, r1
 801cb7e:	4608      	mov	r0, r1
 801cb80:	e749      	b.n	801ca16 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

0801cb84 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801cb84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cb88:	b093      	sub	sp, #76	; 0x4c
 801cb8a:	9210      	str	r2, [sp, #64]	; 0x40
 801cb8c:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801cb8e:	910e      	str	r1, [sp, #56]	; 0x38
 801cb90:	9306      	str	r3, [sp, #24]
 801cb92:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801cb96:	9011      	str	r0, [sp, #68]	; 0x44
 801cb98:	6850      	ldr	r0, [r2, #4]
 801cb9a:	6812      	ldr	r2, [r2, #0]
 801cb9c:	fb00 1303 	mla	r3, r0, r3, r1
 801cba0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801cba4:	9307      	str	r3, [sp, #28]
 801cba6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801cba8:	681b      	ldr	r3, [r3, #0]
 801cbaa:	9308      	str	r3, [sp, #32]
 801cbac:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801cbae:	685b      	ldr	r3, [r3, #4]
 801cbb0:	9309      	str	r3, [sp, #36]	; 0x24
 801cbb2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801cbb4:	2b00      	cmp	r3, #0
 801cbb6:	dc03      	bgt.n	801cbc0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801cbb8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801cbba:	2b00      	cmp	r3, #0
 801cbbc:	f340 83b4 	ble.w	801d328 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 801cbc0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801cbc2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801cbc6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801cbca:	1e48      	subs	r0, r1, #1
 801cbcc:	1e55      	subs	r5, r2, #1
 801cbce:	9b06      	ldr	r3, [sp, #24]
 801cbd0:	2b00      	cmp	r3, #0
 801cbd2:	f340 8163 	ble.w	801ce9c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801cbd6:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 801cbd8:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801cbda:	1436      	asrs	r6, r6, #16
 801cbdc:	ea4f 4323 	mov.w	r3, r3, asr #16
 801cbe0:	d406      	bmi.n	801cbf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801cbe2:	4286      	cmp	r6, r0
 801cbe4:	da04      	bge.n	801cbf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801cbe6:	2b00      	cmp	r3, #0
 801cbe8:	db02      	blt.n	801cbf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801cbea:	42ab      	cmp	r3, r5
 801cbec:	f2c0 8157 	blt.w	801ce9e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 801cbf0:	3601      	adds	r6, #1
 801cbf2:	f100 8144 	bmi.w	801ce7e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801cbf6:	42b1      	cmp	r1, r6
 801cbf8:	f2c0 8141 	blt.w	801ce7e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801cbfc:	3301      	adds	r3, #1
 801cbfe:	f100 813e 	bmi.w	801ce7e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801cc02:	429a      	cmp	r2, r3
 801cc04:	f2c0 813b 	blt.w	801ce7e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801cc08:	9b06      	ldr	r3, [sp, #24]
 801cc0a:	9f07      	ldr	r7, [sp, #28]
 801cc0c:	930f      	str	r3, [sp, #60]	; 0x3c
 801cc0e:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801cc12:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801cc14:	2b00      	cmp	r3, #0
 801cc16:	f340 8164 	ble.w	801cee2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 801cc1a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801cc1c:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 801cc1e:	1418      	asrs	r0, r3, #16
 801cc20:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801cc22:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801cc26:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801cc28:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801cc2c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801cc2e:	142d      	asrs	r5, r5, #16
 801cc30:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801cc34:	f100 81ee 	bmi.w	801d014 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801cc38:	f102 3eff 	add.w	lr, r2, #4294967295
 801cc3c:	4575      	cmp	r5, lr
 801cc3e:	f280 81e9 	bge.w	801d014 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801cc42:	2800      	cmp	r0, #0
 801cc44:	f2c0 81e6 	blt.w	801d014 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801cc48:	f103 3eff 	add.w	lr, r3, #4294967295
 801cc4c:	4570      	cmp	r0, lr
 801cc4e:	f280 81e1 	bge.w	801d014 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801cc52:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801cc54:	b212      	sxth	r2, r2
 801cc56:	fb00 5002 	mla	r0, r0, r2, r5
 801cc5a:	fa1f fe81 	uxth.w	lr, r1
 801cc5e:	eb03 0a00 	add.w	sl, r3, r0
 801cc62:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801cc66:	f813 9000 	ldrb.w	r9, [r3, r0]
 801cc6a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801cc6e:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 801cc72:	b29b      	uxth	r3, r3
 801cc74:	f1bc 0f00 	cmp.w	ip, #0
 801cc78:	f000 8179 	beq.w	801cf6e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801cc7c:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801cc80:	940a      	str	r4, [sp, #40]	; 0x28
 801cc82:	eb0a 0b02 	add.w	fp, sl, r2
 801cc86:	fa1f fa8c 	uxth.w	sl, ip
 801cc8a:	fb0a fe0e 	mul.w	lr, sl, lr
 801cc8e:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801cc92:	fa1f fa8a 	uxth.w	sl, sl
 801cc96:	eba5 050e 	sub.w	r5, r5, lr
 801cc9a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801cc9e:	940b      	str	r4, [sp, #44]	; 0x2c
 801cca0:	eba3 030a 	sub.w	r3, r3, sl
 801cca4:	b2ad      	uxth	r5, r5
 801cca6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801cca8:	b29b      	uxth	r3, r3
 801ccaa:	fb08 f505 	mul.w	r5, r8, r5
 801ccae:	fb09 5303 	mla	r3, r9, r3, r5
 801ccb2:	fb0a 3304 	mla	r3, sl, r4, r3
 801ccb6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801ccb8:	fb0e 3304 	mla	r3, lr, r4, r3
 801ccbc:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801ccc0:	2b00      	cmp	r3, #0
 801ccc2:	f000 80cf 	beq.w	801ce64 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801ccc6:	9c08      	ldr	r4, [sp, #32]
 801ccc8:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801cccc:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801ccd0:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801ccd4:	f000 8150 	beq.w	801cf78 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 801ccd8:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801ccdc:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801cce0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801cce4:	fb09 f000 	mul.w	r0, r9, r0
 801cce8:	fb0a fe0e 	mul.w	lr, sl, lr
 801ccec:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801ccf0:	f100 0b20 	add.w	fp, r0, #32
 801ccf4:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801ccf8:	44ce      	add	lr, r9
 801ccfa:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801ccfe:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801cd02:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801cd06:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801cd0a:	ea4e 0909 	orr.w	r9, lr, r9
 801cd0e:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801cd12:	8868      	ldrh	r0, [r5, #2]
 801cd14:	d019      	beq.n	801cd4a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801cd16:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801cd1a:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801cd1e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801cd22:	fb08 f800 	mul.w	r8, r8, r0
 801cd26:	fb0a fe0e 	mul.w	lr, sl, lr
 801cd2a:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801cd2e:	f108 0b20 	add.w	fp, r8, #32
 801cd32:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801cd36:	4486      	add	lr, r0
 801cd38:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801cd3c:	0a00      	lsrs	r0, r0, #8
 801cd3e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801cd42:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801cd46:	ea4e 0000 	orr.w	r0, lr, r0
 801cd4a:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801cd4e:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801cd52:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801cd56:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801cd5a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801cd5e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801cd62:	ea4e 0909 	orr.w	r9, lr, r9
 801cd66:	ea4a 0000 	orr.w	r0, sl, r0
 801cd6a:	f1bc 0f00 	cmp.w	ip, #0
 801cd6e:	f000 8105 	beq.w	801cf7c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801cd72:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 801cd76:	3a01      	subs	r2, #1
 801cd78:	0052      	lsls	r2, r2, #1
 801cd7a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801cd7c:	3202      	adds	r2, #2
 801cd7e:	2cff      	cmp	r4, #255	; 0xff
 801cd80:	eb05 0e02 	add.w	lr, r5, r2
 801cd84:	5aaa      	ldrh	r2, [r5, r2]
 801cd86:	d018      	beq.n	801cdba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801cd88:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 801cd8c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801cd90:	fb04 fa02 	mul.w	sl, r4, r2
 801cd94:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801cd98:	fb08 f805 	mul.w	r8, r8, r5
 801cd9c:	f10a 0520 	add.w	r5, sl, #32
 801cda0:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801cda4:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801cda8:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801cdac:	4442      	add	r2, r8
 801cdae:	0a2d      	lsrs	r5, r5, #8
 801cdb0:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801cdb4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801cdb8:	432a      	orrs	r2, r5
 801cdba:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801cdbc:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801cdc0:	2cff      	cmp	r4, #255	; 0xff
 801cdc2:	d01a      	beq.n	801cdfa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801cdc4:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 801cdc8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801cdcc:	fb04 fa05 	mul.w	sl, r4, r5
 801cdd0:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801cdd4:	fb08 f80e 	mul.w	r8, r8, lr
 801cdd8:	f10a 0e20 	add.w	lr, sl, #32
 801cddc:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801cde0:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801cde4:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801cde8:	4445      	add	r5, r8
 801cdea:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801cdee:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801cdf2:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 801cdf6:	ea45 050e 	orr.w	r5, r5, lr
 801cdfa:	fb1c fe01 	smulbb	lr, ip, r1
 801cdfe:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801ce02:	f1cc 0810 	rsb	r8, ip, #16
 801ce06:	eba8 0801 	sub.w	r8, r8, r1
 801ce0a:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801ce0e:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801ce12:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801ce16:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801ce1a:	4341      	muls	r1, r0
 801ce1c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801ce20:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801ce24:	ea4a 0202 	orr.w	r2, sl, r2
 801ce28:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801ce2c:	fb09 1108 	mla	r1, r9, r8, r1
 801ce30:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801ce34:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801ce38:	fb0c 1102 	mla	r1, ip, r2, r1
 801ce3c:	ea4b 0505 	orr.w	r5, fp, r5
 801ce40:	fb0e 1e05 	mla	lr, lr, r5, r1
 801ce44:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801ce48:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801ce4c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ce50:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801ce54:	ea42 0e0e 	orr.w	lr, r2, lr
 801ce58:	fa1f f28e 	uxth.w	r2, lr
 801ce5c:	2bff      	cmp	r3, #255	; 0xff
 801ce5e:	f040 80a1 	bne.w	801cfa4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 801ce62:	803a      	strh	r2, [r7, #0]
 801ce64:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801ce66:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 801ce68:	4413      	add	r3, r2
 801ce6a:	931d      	str	r3, [sp, #116]	; 0x74
 801ce6c:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 801ce6e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801ce70:	441a      	add	r2, r3
 801ce72:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801ce74:	921e      	str	r2, [sp, #120]	; 0x78
 801ce76:	3b01      	subs	r3, #1
 801ce78:	3702      	adds	r7, #2
 801ce7a:	930f      	str	r3, [sp, #60]	; 0x3c
 801ce7c:	e6c9      	b.n	801cc12 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801ce7e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801ce80:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 801ce82:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 801ce84:	4433      	add	r3, r6
 801ce86:	931d      	str	r3, [sp, #116]	; 0x74
 801ce88:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801ce8a:	441c      	add	r4, r3
 801ce8c:	9b06      	ldr	r3, [sp, #24]
 801ce8e:	941e      	str	r4, [sp, #120]	; 0x78
 801ce90:	3b01      	subs	r3, #1
 801ce92:	9306      	str	r3, [sp, #24]
 801ce94:	9b07      	ldr	r3, [sp, #28]
 801ce96:	3302      	adds	r3, #2
 801ce98:	9307      	str	r3, [sp, #28]
 801ce9a:	e698      	b.n	801cbce <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801ce9c:	d028      	beq.n	801cef0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801ce9e:	9b06      	ldr	r3, [sp, #24]
 801cea0:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801cea2:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 801cea4:	3b01      	subs	r3, #1
 801cea6:	fb00 5003 	mla	r0, r0, r3, r5
 801ceaa:	1400      	asrs	r0, r0, #16
 801ceac:	f53f aeac 	bmi.w	801cc08 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801ceb0:	3901      	subs	r1, #1
 801ceb2:	4288      	cmp	r0, r1
 801ceb4:	f6bf aea8 	bge.w	801cc08 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801ceb8:	9920      	ldr	r1, [sp, #128]	; 0x80
 801ceba:	981e      	ldr	r0, [sp, #120]	; 0x78
 801cebc:	fb01 0303 	mla	r3, r1, r3, r0
 801cec0:	141b      	asrs	r3, r3, #16
 801cec2:	f53f aea1 	bmi.w	801cc08 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801cec6:	3a01      	subs	r2, #1
 801cec8:	4293      	cmp	r3, r2
 801ceca:	f6bf ae9d 	bge.w	801cc08 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801cece:	9b06      	ldr	r3, [sp, #24]
 801ced0:	f8dd e01c 	ldr.w	lr, [sp, #28]
 801ced4:	930f      	str	r3, [sp, #60]	; 0x3c
 801ced6:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801ceda:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801cedc:	2b00      	cmp	r3, #0
 801cede:	f300 80b6 	bgt.w	801d04e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 801cee2:	9b06      	ldr	r3, [sp, #24]
 801cee4:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801cee8:	9b07      	ldr	r3, [sp, #28]
 801ceea:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801ceee:	9307      	str	r3, [sp, #28]
 801cef0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801cef2:	2b00      	cmp	r3, #0
 801cef4:	f340 8218 	ble.w	801d328 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 801cef8:	ee30 0a04 	vadd.f32	s0, s0, s8
 801cefc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801cf00:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801cf04:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801cf06:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801cf0a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801cf0e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801cf12:	eef0 6a62 	vmov.f32	s13, s5
 801cf16:	ee61 7a27 	vmul.f32	s15, s2, s15
 801cf1a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cf1e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801cf22:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 801cf26:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801cf2a:	eef0 6a43 	vmov.f32	s13, s6
 801cf2e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801cf32:	ee12 2a90 	vmov	r2, s5
 801cf36:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801cf3a:	fb92 f3f3 	sdiv	r3, r2, r3
 801cf3e:	ee13 2a10 	vmov	r2, s6
 801cf42:	931f      	str	r3, [sp, #124]	; 0x7c
 801cf44:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801cf46:	fb92 f3f3 	sdiv	r3, r2, r3
 801cf4a:	9320      	str	r3, [sp, #128]	; 0x80
 801cf4c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801cf4e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801cf50:	3b01      	subs	r3, #1
 801cf52:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cf56:	930e      	str	r3, [sp, #56]	; 0x38
 801cf58:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801cf5a:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 801cf5e:	bf08      	it	eq
 801cf60:	4613      	moveq	r3, r2
 801cf62:	9306      	str	r3, [sp, #24]
 801cf64:	eeb0 3a67 	vmov.f32	s6, s15
 801cf68:	eef0 2a47 	vmov.f32	s5, s14
 801cf6c:	e621      	b.n	801cbb2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801cf6e:	fb08 f505 	mul.w	r5, r8, r5
 801cf72:	fb09 5303 	mla	r3, r9, r3, r5
 801cf76:	e6a1      	b.n	801ccbc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 801cf78:	4681      	mov	r9, r0
 801cf7a:	e6c8      	b.n	801cd0e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 801cf7c:	f1c1 0210 	rsb	r2, r1, #16
 801cf80:	4341      	muls	r1, r0
 801cf82:	fb09 1902 	mla	r9, r9, r2, r1
 801cf86:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801cf8a:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801cf8e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801cf92:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801cf96:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801cf9a:	ea42 0909 	orr.w	r9, r2, r9
 801cf9e:	fa1f f289 	uxth.w	r2, r9
 801cfa2:	e75b      	b.n	801ce5c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801cfa4:	f8b7 c000 	ldrh.w	ip, [r7]
 801cfa8:	43db      	mvns	r3, r3
 801cfaa:	ea4f 202c 	mov.w	r0, ip, asr #8
 801cfae:	fa5f fe83 	uxtb.w	lr, r3
 801cfb2:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801cfb6:	fb00 f00e 	mul.w	r0, r0, lr
 801cfba:	1c41      	adds	r1, r0, #1
 801cfbc:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801cfc0:	1211      	asrs	r1, r2, #8
 801cfc2:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801cfc6:	f021 0107 	bic.w	r1, r1, #7
 801cfca:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801cfce:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801cfd2:	48d7      	ldr	r0, [pc, #860]	; (801d330 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 801cfd4:	fb05 f50e 	mul.w	r5, r5, lr
 801cfd8:	b2c9      	uxtb	r1, r1
 801cfda:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 801cfde:	1c69      	adds	r1, r5, #1
 801cfe0:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801cfe4:	10d1      	asrs	r1, r2, #3
 801cfe6:	f021 0103 	bic.w	r1, r1, #3
 801cfea:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 801cfee:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801cff2:	b2db      	uxtb	r3, r3
 801cff4:	00c9      	lsls	r1, r1, #3
 801cff6:	fb03 f30e 	mul.w	r3, r3, lr
 801cffa:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801cffe:	4301      	orrs	r1, r0
 801d000:	1c58      	adds	r0, r3, #1
 801d002:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801d006:	00d2      	lsls	r2, r2, #3
 801d008:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801d00c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801d010:	430a      	orrs	r2, r1
 801d012:	e726      	b.n	801ce62 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 801d014:	f115 0e01 	adds.w	lr, r5, #1
 801d018:	f53f af24 	bmi.w	801ce64 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801d01c:	4572      	cmp	r2, lr
 801d01e:	f6ff af21 	blt.w	801ce64 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801d022:	f110 0e01 	adds.w	lr, r0, #1
 801d026:	f53f af1d 	bmi.w	801ce64 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801d02a:	4573      	cmp	r3, lr
 801d02c:	f6ff af1a 	blt.w	801ce64 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801d030:	b21b      	sxth	r3, r3
 801d032:	b212      	sxth	r2, r2
 801d034:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 801d038:	e9cd 5002 	strd	r5, r0, [sp, #8]
 801d03c:	9301      	str	r3, [sp, #4]
 801d03e:	9200      	str	r2, [sp, #0]
 801d040:	4639      	mov	r1, r7
 801d042:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 801d046:	9811      	ldr	r0, [sp, #68]	; 0x44
 801d048:	f7ff fc24 	bl	801c894 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801d04c:	e70a      	b.n	801ce64 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801d04e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801d050:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801d054:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801d056:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801d05a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d05c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d060:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801d062:	141f      	asrs	r7, r3, #16
 801d064:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801d066:	141b      	asrs	r3, r3, #16
 801d068:	fb01 3707 	mla	r7, r1, r7, r3
 801d06c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d06e:	fa1f fc82 	uxth.w	ip, r2
 801d072:	eb03 0a07 	add.w	sl, r3, r7
 801d076:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801d07a:	f813 9007 	ldrb.w	r9, [r3, r7]
 801d07e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801d082:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801d086:	b29b      	uxth	r3, r3
 801d088:	2d00      	cmp	r5, #0
 801d08a:	f000 80fe 	beq.w	801d28a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 801d08e:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801d092:	940c      	str	r4, [sp, #48]	; 0x30
 801d094:	eb0a 0b01 	add.w	fp, sl, r1
 801d098:	fa1f fa85 	uxth.w	sl, r5
 801d09c:	fb0a fc0c 	mul.w	ip, sl, ip
 801d0a0:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801d0a4:	fa1f fa8a 	uxth.w	sl, sl
 801d0a8:	eba0 000c 	sub.w	r0, r0, ip
 801d0ac:	eba3 030a 	sub.w	r3, r3, sl
 801d0b0:	b280      	uxth	r0, r0
 801d0b2:	fb08 f000 	mul.w	r0, r8, r0
 801d0b6:	b29b      	uxth	r3, r3
 801d0b8:	fb09 0303 	mla	r3, r9, r3, r0
 801d0bc:	980c      	ldr	r0, [sp, #48]	; 0x30
 801d0be:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801d0c2:	940d      	str	r4, [sp, #52]	; 0x34
 801d0c4:	fb0a 3300 	mla	r3, sl, r0, r3
 801d0c8:	fb0c 3304 	mla	r3, ip, r4, r3
 801d0cc:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801d0d0:	2b00      	cmp	r3, #0
 801d0d2:	f000 80cc 	beq.w	801d26e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 801d0d6:	9808      	ldr	r0, [sp, #32]
 801d0d8:	9c08      	ldr	r4, [sp, #32]
 801d0da:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801d0de:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801d0e2:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801d0e6:	f000 80d5 	beq.w	801d294 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801d0ea:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801d0ee:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801d0f2:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801d0f6:	fb09 f707 	mul.w	r7, r9, r7
 801d0fa:	fb0a fc0c 	mul.w	ip, sl, ip
 801d0fe:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801d102:	f107 0b20 	add.w	fp, r7, #32
 801d106:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801d10a:	44cc      	add	ip, r9
 801d10c:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801d110:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801d114:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801d118:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801d11c:	ea4c 0909 	orr.w	r9, ip, r9
 801d120:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801d124:	8847      	ldrh	r7, [r0, #2]
 801d126:	d019      	beq.n	801d15c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 801d128:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801d12c:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801d130:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801d134:	fb08 f807 	mul.w	r8, r8, r7
 801d138:	fb0a fc0c 	mul.w	ip, sl, ip
 801d13c:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801d140:	f108 0b20 	add.w	fp, r8, #32
 801d144:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801d148:	44bc      	add	ip, r7
 801d14a:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801d14e:	0a3f      	lsrs	r7, r7, #8
 801d150:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801d154:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801d158:	ea4c 0707 	orr.w	r7, ip, r7
 801d15c:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801d160:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801d164:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801d168:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801d16c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801d170:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801d174:	ea4c 0909 	orr.w	r9, ip, r9
 801d178:	ea4a 0707 	orr.w	r7, sl, r7
 801d17c:	2d00      	cmp	r5, #0
 801d17e:	f000 808b 	beq.w	801d298 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 801d182:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801d186:	3901      	subs	r1, #1
 801d188:	0049      	lsls	r1, r1, #1
 801d18a:	3102      	adds	r1, #2
 801d18c:	eb00 0c01 	add.w	ip, r0, r1
 801d190:	5a41      	ldrh	r1, [r0, r1]
 801d192:	980c      	ldr	r0, [sp, #48]	; 0x30
 801d194:	28ff      	cmp	r0, #255	; 0xff
 801d196:	d019      	beq.n	801d1cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 801d198:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801d19a:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 801d19e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801d1a2:	fb04 fa01 	mul.w	sl, r4, r1
 801d1a6:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d1aa:	fb08 f800 	mul.w	r8, r8, r0
 801d1ae:	f10a 0020 	add.w	r0, sl, #32
 801d1b2:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801d1b6:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801d1ba:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801d1be:	4441      	add	r1, r8
 801d1c0:	0a00      	lsrs	r0, r0, #8
 801d1c2:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801d1c6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d1ca:	4301      	orrs	r1, r0
 801d1cc:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801d1ce:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801d1d2:	2cff      	cmp	r4, #255	; 0xff
 801d1d4:	d01a      	beq.n	801d20c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 801d1d6:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 801d1da:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d1de:	fb04 fa00 	mul.w	sl, r4, r0
 801d1e2:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d1e6:	fb08 f80c 	mul.w	r8, r8, ip
 801d1ea:	f10a 0c20 	add.w	ip, sl, #32
 801d1ee:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801d1f2:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801d1f6:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801d1fa:	4440      	add	r0, r8
 801d1fc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d200:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801d204:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801d208:	ea40 000c 	orr.w	r0, r0, ip
 801d20c:	fb15 fc02 	smulbb	ip, r5, r2
 801d210:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801d214:	f1c5 0810 	rsb	r8, r5, #16
 801d218:	eba8 0802 	sub.w	r8, r8, r2
 801d21c:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801d220:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801d224:	437a      	muls	r2, r7
 801d226:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801d22a:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801d22e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801d232:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801d236:	fb09 2208 	mla	r2, r9, r8, r2
 801d23a:	ea4a 0101 	orr.w	r1, sl, r1
 801d23e:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801d242:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801d246:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801d24a:	fb05 2201 	mla	r2, r5, r1, r2
 801d24e:	ea4b 0000 	orr.w	r0, fp, r0
 801d252:	fb0c 2200 	mla	r2, ip, r0, r2
 801d256:	0d57      	lsrs	r7, r2, #21
 801d258:	0952      	lsrs	r2, r2, #5
 801d25a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801d25e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d262:	433a      	orrs	r2, r7
 801d264:	2bff      	cmp	r3, #255	; 0xff
 801d266:	b292      	uxth	r2, r2
 801d268:	d127      	bne.n	801d2ba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 801d26a:	f8ae 2000 	strh.w	r2, [lr]
 801d26e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801d270:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 801d272:	4413      	add	r3, r2
 801d274:	931d      	str	r3, [sp, #116]	; 0x74
 801d276:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 801d278:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d27a:	441a      	add	r2, r3
 801d27c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801d27e:	921e      	str	r2, [sp, #120]	; 0x78
 801d280:	3b01      	subs	r3, #1
 801d282:	f10e 0e02 	add.w	lr, lr, #2
 801d286:	930f      	str	r3, [sp, #60]	; 0x3c
 801d288:	e627      	b.n	801ceda <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801d28a:	fb08 f000 	mul.w	r0, r8, r0
 801d28e:	fb09 0303 	mla	r3, r9, r3, r0
 801d292:	e71b      	b.n	801d0cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 801d294:	46b9      	mov	r9, r7
 801d296:	e743      	b.n	801d120 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 801d298:	f1c2 0110 	rsb	r1, r2, #16
 801d29c:	437a      	muls	r2, r7
 801d29e:	fb09 2901 	mla	r9, r9, r1, r2
 801d2a2:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801d2a6:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801d2aa:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801d2ae:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d2b2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d2b6:	4302      	orrs	r2, r0
 801d2b8:	e7d4      	b.n	801d264 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 801d2ba:	f8be 7000 	ldrh.w	r7, [lr]
 801d2be:	4c1c      	ldr	r4, [pc, #112]	; (801d330 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 801d2c0:	43db      	mvns	r3, r3
 801d2c2:	1238      	asrs	r0, r7, #8
 801d2c4:	fa5f fc83 	uxtb.w	ip, r3
 801d2c8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801d2cc:	10fd      	asrs	r5, r7, #3
 801d2ce:	fb00 f00c 	mul.w	r0, r0, ip
 801d2d2:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801d2d6:	fb05 f10c 	mul.w	r1, r5, ip
 801d2da:	1c45      	adds	r5, r0, #1
 801d2dc:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801d2e0:	1215      	asrs	r5, r2, #8
 801d2e2:	f025 0507 	bic.w	r5, r5, #7
 801d2e6:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801d2ea:	1c4d      	adds	r5, r1, #1
 801d2ec:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 801d2f0:	10d1      	asrs	r1, r2, #3
 801d2f2:	f021 0103 	bic.w	r1, r1, #3
 801d2f6:	00fb      	lsls	r3, r7, #3
 801d2f8:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801d2fc:	b2db      	uxtb	r3, r3
 801d2fe:	b2c0      	uxtb	r0, r0
 801d300:	00c9      	lsls	r1, r1, #3
 801d302:	fb03 f30c 	mul.w	r3, r3, ip
 801d306:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801d30a:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 801d30e:	4308      	orrs	r0, r1
 801d310:	1c59      	adds	r1, r3, #1
 801d312:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801d316:	00d2      	lsls	r2, r2, #3
 801d318:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801d31c:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 801d320:	4318      	orrs	r0, r3
 801d322:	f8ae 0000 	strh.w	r0, [lr]
 801d326:	e7a2      	b.n	801d26e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 801d328:	b013      	add	sp, #76	; 0x4c
 801d32a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d32e:	bf00      	nop
 801d330:	fffff800 	.word	0xfffff800

0801d334 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 801d334:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801d338:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
 801d33c:	fb05 4c03 	mla	ip, r5, r3, r4
 801d340:	2d00      	cmp	r5, #0
 801d342:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 801d346:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 801d34a:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 801d34e:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 801d352:	8808      	ldrh	r0, [r1, #0]
 801d354:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 801d358:	f2c0 80a7 	blt.w	801d4aa <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801d35c:	45aa      	cmp	sl, r5
 801d35e:	f340 80a4 	ble.w	801d4aa <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801d362:	2c00      	cmp	r4, #0
 801d364:	f2c0 809f 	blt.w	801d4a6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801d368:	42a3      	cmp	r3, r4
 801d36a:	f340 809c 	ble.w	801d4a6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801d36e:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 801d372:	1c62      	adds	r2, r4, #1
 801d374:	f100 809c 	bmi.w	801d4b0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801d378:	4293      	cmp	r3, r2
 801d37a:	f340 8099 	ble.w	801d4b0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801d37e:	f1b9 0f00 	cmp.w	r9, #0
 801d382:	f000 8095 	beq.w	801d4b0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801d386:	f8be c002 	ldrh.w	ip, [lr, #2]
 801d38a:	3501      	adds	r5, #1
 801d38c:	f100 8094 	bmi.w	801d4b8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801d390:	45aa      	cmp	sl, r5
 801d392:	f340 8091 	ble.w	801d4b8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801d396:	2f00      	cmp	r7, #0
 801d398:	f000 808e 	beq.w	801d4b8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801d39c:	2c00      	cmp	r4, #0
 801d39e:	f2c0 8089 	blt.w	801d4b4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801d3a2:	42a3      	cmp	r3, r4
 801d3a4:	f340 8086 	ble.w	801d4b4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801d3a8:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 801d3ac:	3401      	adds	r4, #1
 801d3ae:	f100 8086 	bmi.w	801d4be <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801d3b2:	42a3      	cmp	r3, r4
 801d3b4:	f340 8083 	ble.w	801d4be <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801d3b8:	f1b9 0f00 	cmp.w	r9, #0
 801d3bc:	d07f      	beq.n	801d4be <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801d3be:	3301      	adds	r3, #1
 801d3c0:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 801d3c4:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801d3c8:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801d3cc:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 801d3d0:	fb19 fe07 	smulbb	lr, r9, r7
 801d3d4:	ea44 0808 	orr.w	r8, r4, r8
 801d3d8:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801d3dc:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801d3e0:	f1c7 0210 	rsb	r2, r7, #16
 801d3e4:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801d3e8:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801d3ec:	ea44 0c0c 	orr.w	ip, r4, ip
 801d3f0:	eba2 0209 	sub.w	r2, r2, r9
 801d3f4:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801d3f8:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801d3fc:	fb04 f40c 	mul.w	r4, r4, ip
 801d400:	fb02 4808 	mla	r8, r2, r8, r4
 801d404:	041a      	lsls	r2, r3, #16
 801d406:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801d40a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801d40e:	4313      	orrs	r3, r2
 801d410:	042a      	lsls	r2, r5, #16
 801d412:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801d416:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801d41a:	fb0e 8303 	mla	r3, lr, r3, r8
 801d41e:	432a      	orrs	r2, r5
 801d420:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801d424:	fb07 3202 	mla	r2, r7, r2, r3
 801d428:	0d53      	lsrs	r3, r2, #21
 801d42a:	0952      	lsrs	r2, r2, #5
 801d42c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d430:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d434:	431a      	orrs	r2, r3
 801d436:	b293      	uxth	r3, r2
 801d438:	b2b4      	uxth	r4, r6
 801d43a:	1202      	asrs	r2, r0, #8
 801d43c:	43f6      	mvns	r6, r6
 801d43e:	b2f6      	uxtb	r6, r6
 801d440:	121d      	asrs	r5, r3, #8
 801d442:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801d446:	fb12 f206 	smulbb	r2, r2, r6
 801d44a:	10c7      	asrs	r7, r0, #3
 801d44c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801d450:	00c0      	lsls	r0, r0, #3
 801d452:	fb05 2504 	mla	r5, r5, r4, r2
 801d456:	b2c0      	uxtb	r0, r0
 801d458:	10da      	asrs	r2, r3, #3
 801d45a:	00db      	lsls	r3, r3, #3
 801d45c:	b2db      	uxtb	r3, r3
 801d45e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801d462:	fb10 f006 	smulbb	r0, r0, r6
 801d466:	b2ad      	uxth	r5, r5
 801d468:	fb03 0004 	mla	r0, r3, r4, r0
 801d46c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801d470:	fb17 f706 	smulbb	r7, r7, r6
 801d474:	b280      	uxth	r0, r0
 801d476:	1c6b      	adds	r3, r5, #1
 801d478:	fb02 7204 	mla	r2, r2, r4, r7
 801d47c:	b292      	uxth	r2, r2
 801d47e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801d482:	1c43      	adds	r3, r0, #1
 801d484:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801d488:	1c50      	adds	r0, r2, #1
 801d48a:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801d48e:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801d492:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801d496:	0952      	lsrs	r2, r2, #5
 801d498:	432b      	orrs	r3, r5
 801d49a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d49e:	4313      	orrs	r3, r2
 801d4a0:	800b      	strh	r3, [r1, #0]
 801d4a2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801d4a6:	4680      	mov	r8, r0
 801d4a8:	e763      	b.n	801d372 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 801d4aa:	4684      	mov	ip, r0
 801d4ac:	4680      	mov	r8, r0
 801d4ae:	e76c      	b.n	801d38a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801d4b0:	4684      	mov	ip, r0
 801d4b2:	e76a      	b.n	801d38a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801d4b4:	4605      	mov	r5, r0
 801d4b6:	e779      	b.n	801d3ac <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 801d4b8:	4603      	mov	r3, r0
 801d4ba:	4605      	mov	r5, r0
 801d4bc:	e782      	b.n	801d3c4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 801d4be:	4603      	mov	r3, r0
 801d4c0:	e780      	b.n	801d3c4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

0801d4c2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d4c2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d4c6:	b093      	sub	sp, #76	; 0x4c
 801d4c8:	461d      	mov	r5, r3
 801d4ca:	9210      	str	r2, [sp, #64]	; 0x40
 801d4cc:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801d4ce:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 801d4d2:	920b      	str	r2, [sp, #44]	; 0x2c
 801d4d4:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
 801d4d8:	910a      	str	r1, [sp, #40]	; 0x28
 801d4da:	6859      	ldr	r1, [r3, #4]
 801d4dc:	681b      	ldr	r3, [r3, #0]
 801d4de:	9011      	str	r0, [sp, #68]	; 0x44
 801d4e0:	fb01 2707 	mla	r7, r1, r7, r2
 801d4e4:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 801d4e8:	9307      	str	r3, [sp, #28]
 801d4ea:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d4ec:	681b      	ldr	r3, [r3, #0]
 801d4ee:	9309      	str	r3, [sp, #36]	; 0x24
 801d4f0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d4f2:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801d4f6:	43db      	mvns	r3, r3
 801d4f8:	b2db      	uxtb	r3, r3
 801d4fa:	9308      	str	r3, [sp, #32]
 801d4fc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d4fe:	2b00      	cmp	r3, #0
 801d500:	dc03      	bgt.n	801d50a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801d502:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d504:	2b00      	cmp	r3, #0
 801d506:	f340 8203 	ble.w	801d910 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801d50a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d50c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d510:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801d514:	1e48      	subs	r0, r1, #1
 801d516:	f102 3cff 	add.w	ip, r2, #4294967295
 801d51a:	2d00      	cmp	r5, #0
 801d51c:	f340 80da 	ble.w	801d6d4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801d520:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801d524:	ea4f 4326 	mov.w	r3, r6, asr #16
 801d528:	d406      	bmi.n	801d538 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801d52a:	4586      	cmp	lr, r0
 801d52c:	da04      	bge.n	801d538 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801d52e:	2b00      	cmp	r3, #0
 801d530:	db02      	blt.n	801d538 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801d532:	4563      	cmp	r3, ip
 801d534:	f2c0 80cf 	blt.w	801d6d6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801d538:	f11e 0e01 	adds.w	lr, lr, #1
 801d53c:	f100 80c1 	bmi.w	801d6c2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801d540:	4571      	cmp	r1, lr
 801d542:	f2c0 80be 	blt.w	801d6c2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801d546:	3301      	adds	r3, #1
 801d548:	f100 80bb 	bmi.w	801d6c2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801d54c:	429a      	cmp	r2, r3
 801d54e:	f2c0 80b8 	blt.w	801d6c2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801d552:	f8dd 801c 	ldr.w	r8, [sp, #28]
 801d556:	46a9      	mov	r9, r5
 801d558:	f1b9 0f00 	cmp.w	r9, #0
 801d55c:	f340 80d8 	ble.w	801d710 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 801d560:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d562:	1421      	asrs	r1, r4, #16
 801d564:	ea4f 4026 	mov.w	r0, r6, asr #16
 801d568:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801d56c:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801d570:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801d574:	f100 8111 	bmi.w	801d79a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801d578:	f10e 3aff 	add.w	sl, lr, #4294967295
 801d57c:	4551      	cmp	r1, sl
 801d57e:	f280 810c 	bge.w	801d79a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801d582:	2800      	cmp	r0, #0
 801d584:	f2c0 8109 	blt.w	801d79a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801d588:	f103 3aff 	add.w	sl, r3, #4294967295
 801d58c:	4550      	cmp	r0, sl
 801d58e:	f280 8104 	bge.w	801d79a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801d592:	fa0f f38e 	sxth.w	r3, lr
 801d596:	fb00 1103 	mla	r1, r0, r3, r1
 801d59a:	9809      	ldr	r0, [sp, #36]	; 0x24
 801d59c:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 801d5a0:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 801d5a4:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 801d5a8:	f1bc 0f00 	cmp.w	ip, #0
 801d5ac:	d007      	beq.n	801d5be <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 801d5ae:	005b      	lsls	r3, r3, #1
 801d5b0:	eb0a 0003 	add.w	r0, sl, r3
 801d5b4:	f83a 3003 	ldrh.w	r3, [sl, r3]
 801d5b8:	930c      	str	r3, [sp, #48]	; 0x30
 801d5ba:	8843      	ldrh	r3, [r0, #2]
 801d5bc:	930d      	str	r3, [sp, #52]	; 0x34
 801d5be:	ea4f 400e 	mov.w	r0, lr, lsl #16
 801d5c2:	fb12 f30c 	smulbb	r3, r2, ip
 801d5c6:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801d5ca:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801d5ce:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801d5d2:	10db      	asrs	r3, r3, #3
 801d5d4:	ea40 000e 	orr.w	r0, r0, lr
 801d5d8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801d5dc:	f1cc 0e10 	rsb	lr, ip, #16
 801d5e0:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801d5e4:	ebae 0e02 	sub.w	lr, lr, r2
 801d5e8:	ea4a 0101 	orr.w	r1, sl, r1
 801d5ec:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801d5f0:	4351      	muls	r1, r2
 801d5f2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801d5f4:	9f08      	ldr	r7, [sp, #32]
 801d5f6:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801d5fa:	fb0e 1e00 	mla	lr, lr, r0, r1
 801d5fe:	0410      	lsls	r0, r2, #16
 801d600:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801d604:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d608:	4310      	orrs	r0, r2
 801d60a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801d60c:	990c      	ldr	r1, [sp, #48]	; 0x30
 801d60e:	0412      	lsls	r2, r2, #16
 801d610:	fb03 e000 	mla	r0, r3, r0, lr
 801d614:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801d618:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 801d61c:	ea42 020e 	orr.w	r2, r2, lr
 801d620:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801d624:	fb03 0302 	mla	r3, r3, r2, r0
 801d628:	0d5a      	lsrs	r2, r3, #21
 801d62a:	095b      	lsrs	r3, r3, #5
 801d62c:	f8b8 0000 	ldrh.w	r0, [r8]
 801d630:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d634:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801d638:	4313      	orrs	r3, r2
 801d63a:	b29b      	uxth	r3, r3
 801d63c:	1201      	asrs	r1, r0, #8
 801d63e:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 801d642:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801d646:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801d64a:	fb11 f107 	smulbb	r1, r1, r7
 801d64e:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801d652:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d656:	00c0      	lsls	r0, r0, #3
 801d658:	fb0c 1c02 	mla	ip, ip, r2, r1
 801d65c:	b2c0      	uxtb	r0, r0
 801d65e:	10d9      	asrs	r1, r3, #3
 801d660:	00db      	lsls	r3, r3, #3
 801d662:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801d666:	b2db      	uxtb	r3, r3
 801d668:	fb10 f007 	smulbb	r0, r0, r7
 801d66c:	fa1f fc8c 	uxth.w	ip, ip
 801d670:	fb03 0302 	mla	r3, r3, r2, r0
 801d674:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801d678:	fb1e fe07 	smulbb	lr, lr, r7
 801d67c:	fb01 e102 	mla	r1, r1, r2, lr
 801d680:	b29a      	uxth	r2, r3
 801d682:	f10c 0301 	add.w	r3, ip, #1
 801d686:	b289      	uxth	r1, r1
 801d688:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801d68c:	1c53      	adds	r3, r2, #1
 801d68e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801d692:	1c4a      	adds	r2, r1, #1
 801d694:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801d698:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801d69c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801d6a0:	0949      	lsrs	r1, r1, #5
 801d6a2:	ea43 030c 	orr.w	r3, r3, ip
 801d6a6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801d6aa:	430b      	orrs	r3, r1
 801d6ac:	f8a8 3000 	strh.w	r3, [r8]
 801d6b0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801d6b2:	441c      	add	r4, r3
 801d6b4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d6b6:	f108 0802 	add.w	r8, r8, #2
 801d6ba:	441e      	add	r6, r3
 801d6bc:	f109 39ff 	add.w	r9, r9, #4294967295
 801d6c0:	e74a      	b.n	801d558 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801d6c2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801d6c4:	441c      	add	r4, r3
 801d6c6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d6c8:	441e      	add	r6, r3
 801d6ca:	9b07      	ldr	r3, [sp, #28]
 801d6cc:	3302      	adds	r3, #2
 801d6ce:	3d01      	subs	r5, #1
 801d6d0:	9307      	str	r3, [sp, #28]
 801d6d2:	e722      	b.n	801d51a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801d6d4:	d022      	beq.n	801d71c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 801d6d6:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801d6d8:	1e6b      	subs	r3, r5, #1
 801d6da:	fb00 4003 	mla	r0, r0, r3, r4
 801d6de:	1400      	asrs	r0, r0, #16
 801d6e0:	f53f af37 	bmi.w	801d552 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d6e4:	3901      	subs	r1, #1
 801d6e6:	4288      	cmp	r0, r1
 801d6e8:	f6bf af33 	bge.w	801d552 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d6ec:	9920      	ldr	r1, [sp, #128]	; 0x80
 801d6ee:	fb01 6303 	mla	r3, r1, r3, r6
 801d6f2:	141b      	asrs	r3, r3, #16
 801d6f4:	f53f af2d 	bmi.w	801d552 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d6f8:	3a01      	subs	r2, #1
 801d6fa:	4293      	cmp	r3, r2
 801d6fc:	f6bf af29 	bge.w	801d552 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d700:	f8dd 901c 	ldr.w	r9, [sp, #28]
 801d704:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 801d708:	46a8      	mov	r8, r5
 801d70a:	f1b8 0f00 	cmp.w	r8, #0
 801d70e:	dc5e      	bgt.n	801d7ce <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801d710:	9b07      	ldr	r3, [sp, #28]
 801d712:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801d716:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801d71a:	9307      	str	r3, [sp, #28]
 801d71c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d71e:	2b00      	cmp	r3, #0
 801d720:	f340 80f6 	ble.w	801d910 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801d724:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d728:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801d72c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801d730:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801d732:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d736:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d73a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d73e:	eef0 6a62 	vmov.f32	s13, s5
 801d742:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d746:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d74a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d74e:	ee16 4a90 	vmov	r4, s13
 801d752:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d756:	eef0 6a43 	vmov.f32	s13, s6
 801d75a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d75e:	ee12 2a90 	vmov	r2, s5
 801d762:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d766:	fb92 f3f3 	sdiv	r3, r2, r3
 801d76a:	ee13 2a10 	vmov	r2, s6
 801d76e:	931f      	str	r3, [sp, #124]	; 0x7c
 801d770:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801d772:	fb92 f3f3 	sdiv	r3, r2, r3
 801d776:	9320      	str	r3, [sp, #128]	; 0x80
 801d778:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d77a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801d77c:	3b01      	subs	r3, #1
 801d77e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d782:	930a      	str	r3, [sp, #40]	; 0x28
 801d784:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801d786:	ee16 6a90 	vmov	r6, s13
 801d78a:	bf14      	ite	ne
 801d78c:	461d      	movne	r5, r3
 801d78e:	4615      	moveq	r5, r2
 801d790:	eeb0 3a67 	vmov.f32	s6, s15
 801d794:	eef0 2a47 	vmov.f32	s5, s14
 801d798:	e6b0      	b.n	801d4fc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801d79a:	f111 0a01 	adds.w	sl, r1, #1
 801d79e:	d487      	bmi.n	801d6b0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801d7a0:	45d6      	cmp	lr, sl
 801d7a2:	db85      	blt.n	801d6b0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801d7a4:	f110 0a01 	adds.w	sl, r0, #1
 801d7a8:	d482      	bmi.n	801d6b0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801d7aa:	4553      	cmp	r3, sl
 801d7ac:	db80      	blt.n	801d6b0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801d7ae:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801d7b0:	9101      	str	r1, [sp, #4]
 801d7b2:	b21b      	sxth	r3, r3
 801d7b4:	e9cd 0202 	strd	r0, r2, [sp, #8]
 801d7b8:	9300      	str	r3, [sp, #0]
 801d7ba:	e9cd c704 	strd	ip, r7, [sp, #16]
 801d7be:	fa0f f38e 	sxth.w	r3, lr
 801d7c2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801d7c4:	9811      	ldr	r0, [sp, #68]	; 0x44
 801d7c6:	4641      	mov	r1, r8
 801d7c8:	f7ff fdb4 	bl	801d334 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 801d7cc:	e770      	b.n	801d6b0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801d7ce:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d7d0:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801d7d2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d7d6:	1430      	asrs	r0, r6, #16
 801d7d8:	1423      	asrs	r3, r4, #16
 801d7da:	fb01 3000 	mla	r0, r1, r0, r3
 801d7de:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d7e0:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 801d7e4:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 801d7e8:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801d7ec:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801d7f0:	8858      	ldrh	r0, [r3, #2]
 801d7f2:	f1be 0f00 	cmp.w	lr, #0
 801d7f6:	d00b      	beq.n	801d810 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 801d7f8:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801d7fc:	3901      	subs	r1, #1
 801d7fe:	0049      	lsls	r1, r1, #1
 801d800:	3102      	adds	r1, #2
 801d802:	eb03 0b01 	add.w	fp, r3, r1
 801d806:	5a5b      	ldrh	r3, [r3, r1]
 801d808:	930e      	str	r3, [sp, #56]	; 0x38
 801d80a:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801d80e:	930f      	str	r3, [sp, #60]	; 0x3c
 801d810:	ea4f 410c 	mov.w	r1, ip, lsl #16
 801d814:	fb12 f30e 	smulbb	r3, r2, lr
 801d818:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801d81c:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801d820:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 801d824:	10db      	asrs	r3, r3, #3
 801d826:	ea41 010c 	orr.w	r1, r1, ip
 801d82a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801d82e:	f1ce 0c10 	rsb	ip, lr, #16
 801d832:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801d836:	ebac 0c02 	sub.w	ip, ip, r2
 801d83a:	ea4b 0000 	orr.w	r0, fp, r0
 801d83e:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801d842:	4350      	muls	r0, r2
 801d844:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801d846:	9f08      	ldr	r7, [sp, #32]
 801d848:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801d84c:	fb0c 0c01 	mla	ip, ip, r1, r0
 801d850:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801d854:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 801d858:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801d85a:	980e      	ldr	r0, [sp, #56]	; 0x38
 801d85c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801d860:	0412      	lsls	r2, r2, #16
 801d862:	ea4b 0101 	orr.w	r1, fp, r1
 801d866:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801d86a:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801d86e:	fb03 c101 	mla	r1, r3, r1, ip
 801d872:	4302      	orrs	r2, r0
 801d874:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801d878:	fb03 1202 	mla	r2, r3, r2, r1
 801d87c:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 801d880:	0952      	lsrs	r2, r2, #5
 801d882:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 801d886:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801d88a:	f8b9 2000 	ldrh.w	r2, [r9]
 801d88e:	ea4b 0303 	orr.w	r3, fp, r3
 801d892:	b29b      	uxth	r3, r3
 801d894:	1211      	asrs	r1, r2, #8
 801d896:	1218      	asrs	r0, r3, #8
 801d898:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801d89c:	fb11 f107 	smulbb	r1, r1, r7
 801d8a0:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 801d8a4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801d8a8:	00d2      	lsls	r2, r2, #3
 801d8aa:	fb00 100a 	mla	r0, r0, sl, r1
 801d8ae:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801d8b2:	10d9      	asrs	r1, r3, #3
 801d8b4:	b2d2      	uxtb	r2, r2
 801d8b6:	00db      	lsls	r3, r3, #3
 801d8b8:	fb1c fc07 	smulbb	ip, ip, r7
 801d8bc:	fb12 f207 	smulbb	r2, r2, r7
 801d8c0:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801d8c4:	b2db      	uxtb	r3, r3
 801d8c6:	b280      	uxth	r0, r0
 801d8c8:	fb01 c10a 	mla	r1, r1, sl, ip
 801d8cc:	fb03 230a 	mla	r3, r3, sl, r2
 801d8d0:	b29b      	uxth	r3, r3
 801d8d2:	b289      	uxth	r1, r1
 801d8d4:	1c42      	adds	r2, r0, #1
 801d8d6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801d8da:	f101 0c01 	add.w	ip, r1, #1
 801d8de:	1c5a      	adds	r2, r3, #1
 801d8e0:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801d8e4:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801d8e8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801d8ea:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801d8ee:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801d8f2:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801d8f6:	4310      	orrs	r0, r2
 801d8f8:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801d8fc:	441c      	add	r4, r3
 801d8fe:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d900:	ea40 000c 	orr.w	r0, r0, ip
 801d904:	f829 0b02 	strh.w	r0, [r9], #2
 801d908:	441e      	add	r6, r3
 801d90a:	f108 38ff 	add.w	r8, r8, #4294967295
 801d90e:	e6fc      	b.n	801d70a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 801d910:	b013      	add	sp, #76	; 0x4c
 801d912:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801d916 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 801d916:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801d91a:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 801d91e:	fb0e 4703 	mla	r7, lr, r3, r4
 801d922:	f1be 0f00 	cmp.w	lr, #0
 801d926:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 801d92a:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
 801d92e:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
 801d932:	8808      	ldrh	r0, [r1, #0]
 801d934:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 801d938:	db60      	blt.n	801d9fc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801d93a:	45f1      	cmp	r9, lr
 801d93c:	dd5e      	ble.n	801d9fc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801d93e:	2c00      	cmp	r4, #0
 801d940:	db5a      	blt.n	801d9f8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801d942:	42a3      	cmp	r3, r4
 801d944:	dd58      	ble.n	801d9f8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801d946:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 801d94a:	1c62      	adds	r2, r4, #1
 801d94c:	d459      	bmi.n	801da02 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801d94e:	4293      	cmp	r3, r2
 801d950:	dd57      	ble.n	801da02 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801d952:	2d00      	cmp	r5, #0
 801d954:	d055      	beq.n	801da02 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801d956:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 801d95a:	f11e 0e01 	adds.w	lr, lr, #1
 801d95e:	d454      	bmi.n	801da0a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801d960:	45f1      	cmp	r9, lr
 801d962:	dd52      	ble.n	801da0a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801d964:	2e00      	cmp	r6, #0
 801d966:	d050      	beq.n	801da0a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801d968:	2c00      	cmp	r4, #0
 801d96a:	db4c      	blt.n	801da06 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801d96c:	42a3      	cmp	r3, r4
 801d96e:	dd4a      	ble.n	801da06 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801d970:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 801d974:	3401      	adds	r4, #1
 801d976:	d405      	bmi.n	801d984 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801d978:	42a3      	cmp	r3, r4
 801d97a:	dd03      	ble.n	801d984 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801d97c:	b115      	cbz	r5, 801d984 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801d97e:	3301      	adds	r3, #1
 801d980:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 801d984:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801d988:	fb15 f406 	smulbb	r4, r5, r6
 801d98c:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801d990:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801d994:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801d998:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801d99c:	ea43 0c0c 	orr.w	ip, r3, ip
 801d9a0:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801d9a4:	f1c6 0310 	rsb	r3, r6, #16
 801d9a8:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801d9ac:	1b5b      	subs	r3, r3, r5
 801d9ae:	ea4e 0707 	orr.w	r7, lr, r7
 801d9b2:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801d9b6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801d9ba:	437d      	muls	r5, r7
 801d9bc:	fb03 5c0c 	mla	ip, r3, ip, r5
 801d9c0:	0403      	lsls	r3, r0, #16
 801d9c2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801d9c6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801d9ca:	4318      	orrs	r0, r3
 801d9cc:	0413      	lsls	r3, r2, #16
 801d9ce:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801d9d2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d9d6:	4313      	orrs	r3, r2
 801d9d8:	fb04 c000 	mla	r0, r4, r0, ip
 801d9dc:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801d9e0:	fb06 0003 	mla	r0, r6, r3, r0
 801d9e4:	0d43      	lsrs	r3, r0, #21
 801d9e6:	0940      	lsrs	r0, r0, #5
 801d9e8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d9ec:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801d9f0:	4318      	orrs	r0, r3
 801d9f2:	8008      	strh	r0, [r1, #0]
 801d9f4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801d9f8:	4684      	mov	ip, r0
 801d9fa:	e7a6      	b.n	801d94a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 801d9fc:	4607      	mov	r7, r0
 801d9fe:	4684      	mov	ip, r0
 801da00:	e7ab      	b.n	801d95a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801da02:	4607      	mov	r7, r0
 801da04:	e7a9      	b.n	801d95a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801da06:	4602      	mov	r2, r0
 801da08:	e7b4      	b.n	801d974 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 801da0a:	4602      	mov	r2, r0
 801da0c:	e7ba      	b.n	801d984 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

0801da0e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801da0e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801da12:	b08f      	sub	sp, #60	; 0x3c
 801da14:	461d      	mov	r5, r3
 801da16:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801da18:	920c      	str	r2, [sp, #48]	; 0x30
 801da1a:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
 801da1e:	9107      	str	r1, [sp, #28]
 801da20:	6859      	ldr	r1, [r3, #4]
 801da22:	681b      	ldr	r3, [r3, #0]
 801da24:	900d      	str	r0, [sp, #52]	; 0x34
 801da26:	fb01 2707 	mla	r7, r1, r7, r2
 801da2a:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 801da2e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801da30:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
 801da34:	f8d3 8000 	ldr.w	r8, [r3]
 801da38:	9b07      	ldr	r3, [sp, #28]
 801da3a:	2b00      	cmp	r3, #0
 801da3c:	dc03      	bgt.n	801da46 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801da3e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801da40:	2b00      	cmp	r3, #0
 801da42:	f340 8181 	ble.w	801dd48 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 801da46:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801da48:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801da4c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801da50:	1e48      	subs	r0, r1, #1
 801da52:	f102 3cff 	add.w	ip, r2, #4294967295
 801da56:	2d00      	cmp	r5, #0
 801da58:	f340 809b 	ble.w	801db92 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 801da5c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801da60:	ea4f 4326 	mov.w	r3, r6, asr #16
 801da64:	d406      	bmi.n	801da74 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801da66:	4586      	cmp	lr, r0
 801da68:	da04      	bge.n	801da74 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801da6a:	2b00      	cmp	r3, #0
 801da6c:	db02      	blt.n	801da74 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801da6e:	4563      	cmp	r3, ip
 801da70:	f2c0 8090 	blt.w	801db94 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801da74:	f11e 0e01 	adds.w	lr, lr, #1
 801da78:	f100 8084 	bmi.w	801db84 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801da7c:	4571      	cmp	r1, lr
 801da7e:	f2c0 8081 	blt.w	801db84 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801da82:	3301      	adds	r3, #1
 801da84:	d47e      	bmi.n	801db84 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801da86:	429a      	cmp	r2, r3
 801da88:	db7c      	blt.n	801db84 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801da8a:	46aa      	mov	sl, r5
 801da8c:	46b9      	mov	r9, r7
 801da8e:	f1ba 0f00 	cmp.w	sl, #0
 801da92:	f340 8099 	ble.w	801dbc8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 801da96:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801da98:	1421      	asrs	r1, r4, #16
 801da9a:	ea4f 4026 	mov.w	r0, r6, asr #16
 801da9e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801daa2:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801daa6:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801daaa:	f100 80d0 	bmi.w	801dc4e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801daae:	f10e 3bff 	add.w	fp, lr, #4294967295
 801dab2:	4559      	cmp	r1, fp
 801dab4:	f280 80cb 	bge.w	801dc4e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801dab8:	2800      	cmp	r0, #0
 801daba:	f2c0 80c8 	blt.w	801dc4e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801dabe:	f103 3bff 	add.w	fp, r3, #4294967295
 801dac2:	4558      	cmp	r0, fp
 801dac4:	f280 80c3 	bge.w	801dc4e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801dac8:	fa0f fe8e 	sxth.w	lr, lr
 801dacc:	fb00 110e 	mla	r1, r0, lr, r1
 801dad0:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801dad4:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 801dad8:	8841      	ldrh	r1, [r0, #2]
 801dada:	f1bc 0f00 	cmp.w	ip, #0
 801dade:	d00b      	beq.n	801daf8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 801dae0:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 801dae4:	3b01      	subs	r3, #1
 801dae6:	005b      	lsls	r3, r3, #1
 801dae8:	3302      	adds	r3, #2
 801daea:	eb00 0e03 	add.w	lr, r0, r3
 801daee:	5ac3      	ldrh	r3, [r0, r3]
 801daf0:	9308      	str	r3, [sp, #32]
 801daf2:	f8be 3002 	ldrh.w	r3, [lr, #2]
 801daf6:	9309      	str	r3, [sp, #36]	; 0x24
 801daf8:	ea4f 400b 	mov.w	r0, fp, lsl #16
 801dafc:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801db00:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801db04:	ea40 000b 	orr.w	r0, r0, fp
 801db08:	fb12 f30c 	smulbb	r3, r2, ip
 801db0c:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801db10:	10db      	asrs	r3, r3, #3
 801db12:	f1cc 0e10 	rsb	lr, ip, #16
 801db16:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801db1a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801db1e:	ebae 0e02 	sub.w	lr, lr, r2
 801db22:	ea4b 0101 	orr.w	r1, fp, r1
 801db26:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801db2a:	4351      	muls	r1, r2
 801db2c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801db2e:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801db32:	fb0e 1e00 	mla	lr, lr, r0, r1
 801db36:	0410      	lsls	r0, r2, #16
 801db38:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801db3c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801db40:	4310      	orrs	r0, r2
 801db42:	9a08      	ldr	r2, [sp, #32]
 801db44:	9908      	ldr	r1, [sp, #32]
 801db46:	0412      	lsls	r2, r2, #16
 801db48:	fb03 e000 	mla	r0, r3, r0, lr
 801db4c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801db50:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 801db54:	ea42 020e 	orr.w	r2, r2, lr
 801db58:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801db5c:	fb03 0302 	mla	r3, r3, r2, r0
 801db60:	0d5a      	lsrs	r2, r3, #21
 801db62:	095b      	lsrs	r3, r3, #5
 801db64:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801db68:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801db6c:	4313      	orrs	r3, r2
 801db6e:	f8a9 3000 	strh.w	r3, [r9]
 801db72:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801db74:	441c      	add	r4, r3
 801db76:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801db78:	f109 0902 	add.w	r9, r9, #2
 801db7c:	441e      	add	r6, r3
 801db7e:	f10a 3aff 	add.w	sl, sl, #4294967295
 801db82:	e784      	b.n	801da8e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801db84:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801db86:	441c      	add	r4, r3
 801db88:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801db8a:	3d01      	subs	r5, #1
 801db8c:	441e      	add	r6, r3
 801db8e:	3702      	adds	r7, #2
 801db90:	e761      	b.n	801da56 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801db92:	d01d      	beq.n	801dbd0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801db94:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801db96:	1e6b      	subs	r3, r5, #1
 801db98:	fb00 4003 	mla	r0, r0, r3, r4
 801db9c:	1400      	asrs	r0, r0, #16
 801db9e:	f53f af74 	bmi.w	801da8a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801dba2:	3901      	subs	r1, #1
 801dba4:	4288      	cmp	r0, r1
 801dba6:	f6bf af70 	bge.w	801da8a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801dbaa:	991c      	ldr	r1, [sp, #112]	; 0x70
 801dbac:	fb01 6303 	mla	r3, r1, r3, r6
 801dbb0:	141b      	asrs	r3, r3, #16
 801dbb2:	f53f af6a 	bmi.w	801da8a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801dbb6:	3a01      	subs	r2, #1
 801dbb8:	4293      	cmp	r3, r2
 801dbba:	f6bf af66 	bge.w	801da8a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801dbbe:	46a9      	mov	r9, r5
 801dbc0:	46ba      	mov	sl, r7
 801dbc2:	f1b9 0f00 	cmp.w	r9, #0
 801dbc6:	dc5a      	bgt.n	801dc7e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 801dbc8:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801dbcc:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 801dbd0:	9b07      	ldr	r3, [sp, #28]
 801dbd2:	2b00      	cmp	r3, #0
 801dbd4:	f340 80b8 	ble.w	801dd48 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 801dbd8:	ee30 0a04 	vadd.f32	s0, s0, s8
 801dbdc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801dbe0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801dbe4:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801dbe6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801dbea:	ee31 1a05 	vadd.f32	s2, s2, s10
 801dbee:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801dbf2:	eef0 6a62 	vmov.f32	s13, s5
 801dbf6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801dbfa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801dbfe:	ee77 2a62 	vsub.f32	s5, s14, s5
 801dc02:	ee16 4a90 	vmov	r4, s13
 801dc06:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801dc0a:	eef0 6a43 	vmov.f32	s13, s6
 801dc0e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801dc12:	ee12 2a90 	vmov	r2, s5
 801dc16:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801dc1a:	fb92 f3f3 	sdiv	r3, r2, r3
 801dc1e:	ee13 2a10 	vmov	r2, s6
 801dc22:	931b      	str	r3, [sp, #108]	; 0x6c
 801dc24:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801dc26:	fb92 f3f3 	sdiv	r3, r2, r3
 801dc2a:	931c      	str	r3, [sp, #112]	; 0x70
 801dc2c:	9b07      	ldr	r3, [sp, #28]
 801dc2e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801dc30:	3b01      	subs	r3, #1
 801dc32:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801dc36:	9307      	str	r3, [sp, #28]
 801dc38:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801dc3a:	ee16 6a90 	vmov	r6, s13
 801dc3e:	bf14      	ite	ne
 801dc40:	461d      	movne	r5, r3
 801dc42:	4615      	moveq	r5, r2
 801dc44:	eeb0 3a67 	vmov.f32	s6, s15
 801dc48:	eef0 2a47 	vmov.f32	s5, s14
 801dc4c:	e6f4      	b.n	801da38 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801dc4e:	f111 0b01 	adds.w	fp, r1, #1
 801dc52:	d48e      	bmi.n	801db72 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801dc54:	45de      	cmp	lr, fp
 801dc56:	db8c      	blt.n	801db72 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801dc58:	f110 0b01 	adds.w	fp, r0, #1
 801dc5c:	d489      	bmi.n	801db72 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801dc5e:	455b      	cmp	r3, fp
 801dc60:	db87      	blt.n	801db72 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801dc62:	b21b      	sxth	r3, r3
 801dc64:	e9cd 1001 	strd	r1, r0, [sp, #4]
 801dc68:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 801dc6c:	9300      	str	r3, [sp, #0]
 801dc6e:	4642      	mov	r2, r8
 801dc70:	fa0f f38e 	sxth.w	r3, lr
 801dc74:	4649      	mov	r1, r9
 801dc76:	980d      	ldr	r0, [sp, #52]	; 0x34
 801dc78:	f7ff fe4d 	bl	801d916 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 801dc7c:	e779      	b.n	801db72 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801dc7e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801dc80:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801dc84:	1420      	asrs	r0, r4, #16
 801dc86:	1431      	asrs	r1, r6, #16
 801dc88:	fb03 0101 	mla	r1, r3, r1, r0
 801dc8c:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801dc90:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801dc94:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 801dc98:	8841      	ldrh	r1, [r0, #2]
 801dc9a:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801dc9e:	f1be 0f00 	cmp.w	lr, #0
 801dca2:	d00b      	beq.n	801dcbc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 801dca4:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 801dca8:	3b01      	subs	r3, #1
 801dcaa:	005b      	lsls	r3, r3, #1
 801dcac:	3302      	adds	r3, #2
 801dcae:	eb00 0b03 	add.w	fp, r0, r3
 801dcb2:	5ac3      	ldrh	r3, [r0, r3]
 801dcb4:	930a      	str	r3, [sp, #40]	; 0x28
 801dcb6:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801dcba:	930b      	str	r3, [sp, #44]	; 0x2c
 801dcbc:	ea4f 400c 	mov.w	r0, ip, lsl #16
 801dcc0:	fb12 f30e 	smulbb	r3, r2, lr
 801dcc4:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801dcc8:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801dccc:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801dcd0:	10db      	asrs	r3, r3, #3
 801dcd2:	ea40 000c 	orr.w	r0, r0, ip
 801dcd6:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801dcda:	f1ce 0c10 	rsb	ip, lr, #16
 801dcde:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801dce2:	ebac 0c02 	sub.w	ip, ip, r2
 801dce6:	ea4b 0101 	orr.w	r1, fp, r1
 801dcea:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801dcee:	4351      	muls	r1, r2
 801dcf0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801dcf2:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801dcf6:	fb0c 1c00 	mla	ip, ip, r0, r1
 801dcfa:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801dcfe:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 801dd02:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801dd04:	990a      	ldr	r1, [sp, #40]	; 0x28
 801dd06:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801dd0a:	0412      	lsls	r2, r2, #16
 801dd0c:	ea4b 0000 	orr.w	r0, fp, r0
 801dd10:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801dd14:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 801dd18:	fb03 c000 	mla	r0, r3, r0, ip
 801dd1c:	ea42 0b0b 	orr.w	fp, r2, fp
 801dd20:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801dd24:	fb03 000b 	mla	r0, r3, fp, r0
 801dd28:	0d43      	lsrs	r3, r0, #21
 801dd2a:	0940      	lsrs	r0, r0, #5
 801dd2c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801dd30:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801dd34:	4318      	orrs	r0, r3
 801dd36:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801dd38:	f82a 0b02 	strh.w	r0, [sl], #2
 801dd3c:	441c      	add	r4, r3
 801dd3e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801dd40:	f109 39ff 	add.w	r9, r9, #4294967295
 801dd44:	441e      	add	r6, r3
 801dd46:	e73c      	b.n	801dbc2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 801dd48:	b00f      	add	sp, #60	; 0x3c
 801dd4a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801dd4e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 801dd4e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dd52:	b085      	sub	sp, #20
 801dd54:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 801dd58:	9102      	str	r1, [sp, #8]
 801dd5a:	2c00      	cmp	r4, #0
 801dd5c:	fb04 7103 	mla	r1, r4, r3, r7
 801dd60:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 801dd64:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801dd68:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 801dd6c:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801dd70:	f2c0 811b 	blt.w	801dfaa <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801dd74:	45a6      	cmp	lr, r4
 801dd76:	f340 8118 	ble.w	801dfaa <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801dd7a:	2f00      	cmp	r7, #0
 801dd7c:	f2c0 8113 	blt.w	801dfa6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801dd80:	42bb      	cmp	r3, r7
 801dd82:	f340 8110 	ble.w	801dfa6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801dd86:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801dd8a:	1c7a      	adds	r2, r7, #1
 801dd8c:	f100 8110 	bmi.w	801dfb0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801dd90:	4293      	cmp	r3, r2
 801dd92:	f340 810d 	ble.w	801dfb0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801dd96:	2e00      	cmp	r6, #0
 801dd98:	f000 810c 	beq.w	801dfb4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 801dd9c:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801dda0:	3401      	adds	r4, #1
 801dda2:	f100 810b 	bmi.w	801dfbc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801dda6:	45a6      	cmp	lr, r4
 801dda8:	f340 8108 	ble.w	801dfbc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801ddac:	2800      	cmp	r0, #0
 801ddae:	f000 8108 	beq.w	801dfc2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 801ddb2:	2f00      	cmp	r7, #0
 801ddb4:	f2c0 8100 	blt.w	801dfb8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801ddb8:	42bb      	cmp	r3, r7
 801ddba:	f340 80fd 	ble.w	801dfb8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801ddbe:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801ddc2:	3701      	adds	r7, #1
 801ddc4:	f100 8100 	bmi.w	801dfc8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801ddc8:	42bb      	cmp	r3, r7
 801ddca:	f340 80fd 	ble.w	801dfc8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801ddce:	2e00      	cmp	r6, #0
 801ddd0:	f000 80fc 	beq.w	801dfcc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 801ddd4:	3301      	adds	r3, #1
 801ddd6:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 801ddda:	b2b6      	uxth	r6, r6
 801dddc:	b280      	uxth	r0, r0
 801ddde:	fb00 fe06 	mul.w	lr, r0, r6
 801dde2:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801dde6:	0136      	lsls	r6, r6, #4
 801dde8:	eba6 070e 	sub.w	r7, r6, lr
 801ddec:	b280      	uxth	r0, r0
 801ddee:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801ddf2:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801ddf6:	b2bf      	uxth	r7, r7
 801ddf8:	1a1b      	subs	r3, r3, r0
 801ddfa:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801ddfe:	b29b      	uxth	r3, r3
 801de00:	fb0a f607 	mul.w	r6, sl, r7
 801de04:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801de08:	fb0b 6603 	mla	r6, fp, r3, r6
 801de0c:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801de10:	fb00 6609 	mla	r6, r0, r9, r6
 801de14:	fb0e 6608 	mla	r6, lr, r8, r6
 801de18:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801de1c:	9600      	str	r6, [sp, #0]
 801de1e:	2e00      	cmp	r6, #0
 801de20:	f000 80be 	beq.w	801dfa0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 801de24:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801de28:	fb0b fc0c 	mul.w	ip, fp, ip
 801de2c:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801de30:	fb0b f505 	mul.w	r5, fp, r5
 801de34:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801de38:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801de3c:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801de40:	44dc      	add	ip, fp
 801de42:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801de46:	9501      	str	r5, [sp, #4]
 801de48:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801de4c:	9503      	str	r5, [sp, #12]
 801de4e:	9d01      	ldr	r5, [sp, #4]
 801de50:	9e02      	ldr	r6, [sp, #8]
 801de52:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801de56:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801de5a:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801de5e:	fb0a fc0c 	mul.w	ip, sl, ip
 801de62:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801de66:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801de6a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801de6e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801de72:	4465      	add	r5, ip
 801de74:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801de78:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801de7c:	fb09 fc0c 	mul.w	ip, r9, ip
 801de80:	fb09 f904 	mul.w	r9, r9, r4
 801de84:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801de88:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801de8c:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801de90:	fb08 f404 	mul.w	r4, r8, r4
 801de94:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801de98:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801de9c:	fb08 f802 	mul.w	r8, r8, r2
 801dea0:	fb0a fa01 	mul.w	sl, sl, r1
 801dea4:	0a22      	lsrs	r2, r4, #8
 801dea6:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801deaa:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801deae:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801deb2:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801deb6:	4414      	add	r4, r2
 801deb8:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801debc:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801dec0:	0a2d      	lsrs	r5, r5, #8
 801dec2:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801dec6:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801deca:	9a03      	ldr	r2, [sp, #12]
 801decc:	8836      	ldrh	r6, [r6, #0]
 801dece:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801ded2:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801ded6:	437d      	muls	r5, r7
 801ded8:	4461      	add	r1, ip
 801deda:	0a24      	lsrs	r4, r4, #8
 801dedc:	fb02 5503 	mla	r5, r2, r3, r5
 801dee0:	0a09      	lsrs	r1, r1, #8
 801dee2:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801dee6:	fb04 540e 	mla	r4, r4, lr, r5
 801deea:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801deee:	fb01 4100 	mla	r1, r1, r0, r4
 801def2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801def6:	0a09      	lsrs	r1, r1, #8
 801def8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801defc:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801df00:	fb07 f70a 	mul.w	r7, r7, sl
 801df04:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801df08:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801df0c:	fb03 7101 	mla	r1, r3, r1, r7
 801df10:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801df14:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801df18:	fb0e 1e08 	mla	lr, lr, r8, r1
 801df1c:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801df20:	fb00 e101 	mla	r1, r0, r1, lr
 801df24:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 801df28:	9a00      	ldr	r2, [sp, #0]
 801df2a:	b287      	uxth	r7, r0
 801df2c:	437a      	muls	r2, r7
 801df2e:	0a09      	lsrs	r1, r1, #8
 801df30:	1c53      	adds	r3, r2, #1
 801df32:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801df36:	4321      	orrs	r1, r4
 801df38:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801df3c:	1235      	asrs	r5, r6, #8
 801df3e:	0c0a      	lsrs	r2, r1, #16
 801df40:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801df44:	b2db      	uxtb	r3, r3
 801df46:	fb12 f207 	smulbb	r2, r2, r7
 801df4a:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801df4e:	fb05 2503 	mla	r5, r5, r3, r2
 801df52:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801df56:	10f2      	asrs	r2, r6, #3
 801df58:	b2c8      	uxtb	r0, r1
 801df5a:	00f6      	lsls	r6, r6, #3
 801df5c:	fb14 f407 	smulbb	r4, r4, r7
 801df60:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801df64:	b2f6      	uxtb	r6, r6
 801df66:	fb10 f007 	smulbb	r0, r0, r7
 801df6a:	fb02 4203 	mla	r2, r2, r3, r4
 801df6e:	b2ad      	uxth	r5, r5
 801df70:	fb06 0303 	mla	r3, r6, r3, r0
 801df74:	b299      	uxth	r1, r3
 801df76:	b294      	uxth	r4, r2
 801df78:	1c6b      	adds	r3, r5, #1
 801df7a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801df7e:	1c62      	adds	r2, r4, #1
 801df80:	1c4b      	adds	r3, r1, #1
 801df82:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801df86:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801df8a:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801df8e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801df92:	0952      	lsrs	r2, r2, #5
 801df94:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801df98:	432b      	orrs	r3, r5
 801df9a:	4313      	orrs	r3, r2
 801df9c:	9a02      	ldr	r2, [sp, #8]
 801df9e:	8013      	strh	r3, [r2, #0]
 801dfa0:	b005      	add	sp, #20
 801dfa2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801dfa6:	2500      	movs	r5, #0
 801dfa8:	e6ef      	b.n	801dd8a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 801dfaa:	2100      	movs	r1, #0
 801dfac:	460d      	mov	r5, r1
 801dfae:	e6f7      	b.n	801dda0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801dfb0:	2100      	movs	r1, #0
 801dfb2:	e6f5      	b.n	801dda0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801dfb4:	4631      	mov	r1, r6
 801dfb6:	e6f3      	b.n	801dda0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801dfb8:	2400      	movs	r4, #0
 801dfba:	e702      	b.n	801ddc2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 801dfbc:	2200      	movs	r2, #0
 801dfbe:	4614      	mov	r4, r2
 801dfc0:	e70b      	b.n	801ddda <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801dfc2:	4602      	mov	r2, r0
 801dfc4:	4604      	mov	r4, r0
 801dfc6:	e708      	b.n	801ddda <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801dfc8:	2200      	movs	r2, #0
 801dfca:	e706      	b.n	801ddda <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801dfcc:	4632      	mov	r2, r6
 801dfce:	e704      	b.n	801ddda <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

0801dfd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801dfd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dfd4:	b09d      	sub	sp, #116	; 0x74
 801dfd6:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 801dfda:	9219      	str	r2, [sp, #100]	; 0x64
 801dfdc:	9307      	str	r3, [sp, #28]
 801dfde:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801dfe0:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 801dfe4:	931a      	str	r3, [sp, #104]	; 0x68
 801dfe6:	9117      	str	r1, [sp, #92]	; 0x5c
 801dfe8:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 801dfec:	901b      	str	r0, [sp, #108]	; 0x6c
 801dfee:	6850      	ldr	r0, [r2, #4]
 801dff0:	6812      	ldr	r2, [r2, #0]
 801dff2:	fb00 1303 	mla	r3, r0, r3, r1
 801dff6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801dffa:	930a      	str	r3, [sp, #40]	; 0x28
 801dffc:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801dffe:	681b      	ldr	r3, [r3, #0]
 801e000:	9310      	str	r3, [sp, #64]	; 0x40
 801e002:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801e006:	930b      	str	r3, [sp, #44]	; 0x2c
 801e008:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801e00a:	2b00      	cmp	r3, #0
 801e00c:	dc03      	bgt.n	801e016 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801e00e:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801e010:	2b00      	cmp	r3, #0
 801e012:	f340 8375 	ble.w	801e700 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801e016:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801e018:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e01c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e020:	1e48      	subs	r0, r1, #1
 801e022:	1e57      	subs	r7, r2, #1
 801e024:	9b07      	ldr	r3, [sp, #28]
 801e026:	2b00      	cmp	r3, #0
 801e028:	f340 818e 	ble.w	801e348 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801e02c:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801e030:	ea4f 4326 	mov.w	r3, r6, asr #16
 801e034:	d406      	bmi.n	801e044 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801e036:	4584      	cmp	ip, r0
 801e038:	da04      	bge.n	801e044 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801e03a:	2b00      	cmp	r3, #0
 801e03c:	db02      	blt.n	801e044 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801e03e:	42bb      	cmp	r3, r7
 801e040:	f2c0 8183 	blt.w	801e34a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801e044:	f11c 0c01 	adds.w	ip, ip, #1
 801e048:	f100 8173 	bmi.w	801e332 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801e04c:	4561      	cmp	r1, ip
 801e04e:	f2c0 8170 	blt.w	801e332 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801e052:	3301      	adds	r3, #1
 801e054:	f100 816d 	bmi.w	801e332 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801e058:	429a      	cmp	r2, r3
 801e05a:	f2c0 816a 	blt.w	801e332 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801e05e:	9b07      	ldr	r3, [sp, #28]
 801e060:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801e062:	9318      	str	r3, [sp, #96]	; 0x60
 801e064:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801e066:	2b00      	cmp	r3, #0
 801e068:	f340 818c 	ble.w	801e384 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 801e06c:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 801e06e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801e070:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801e074:	689b      	ldr	r3, [r3, #8]
 801e076:	1422      	asrs	r2, r4, #16
 801e078:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801e07c:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801e080:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801e084:	f100 81cd 	bmi.w	801e422 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801e088:	f103 38ff 	add.w	r8, r3, #4294967295
 801e08c:	4542      	cmp	r2, r8
 801e08e:	f280 81c8 	bge.w	801e422 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801e092:	f1bc 0f00 	cmp.w	ip, #0
 801e096:	f2c0 81c4 	blt.w	801e422 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801e09a:	f10e 38ff 	add.w	r8, lr, #4294967295
 801e09e:	45c4      	cmp	ip, r8
 801e0a0:	f280 81bf 	bge.w	801e422 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801e0a4:	b21b      	sxth	r3, r3
 801e0a6:	fb0c 2203 	mla	r2, ip, r3, r2
 801e0aa:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801e0ac:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801e0b0:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801e0b4:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801e0b8:	2800      	cmp	r0, #0
 801e0ba:	f000 81a9 	beq.w	801e410 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 801e0be:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801e0c2:	950c      	str	r5, [sp, #48]	; 0x30
 801e0c4:	0e2d      	lsrs	r5, r5, #24
 801e0c6:	9513      	str	r5, [sp, #76]	; 0x4c
 801e0c8:	b181      	cbz	r1, 801e0ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801e0ca:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801e0ce:	3b01      	subs	r3, #1
 801e0d0:	009b      	lsls	r3, r3, #2
 801e0d2:	3304      	adds	r3, #4
 801e0d4:	eb08 0c03 	add.w	ip, r8, r3
 801e0d8:	f858 3003 	ldr.w	r3, [r8, r3]
 801e0dc:	9308      	str	r3, [sp, #32]
 801e0de:	0e1b      	lsrs	r3, r3, #24
 801e0e0:	9311      	str	r3, [sp, #68]	; 0x44
 801e0e2:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801e0e6:	930d      	str	r3, [sp, #52]	; 0x34
 801e0e8:	0e1b      	lsrs	r3, r3, #24
 801e0ea:	9314      	str	r3, [sp, #80]	; 0x50
 801e0ec:	b280      	uxth	r0, r0
 801e0ee:	b289      	uxth	r1, r1
 801e0f0:	fb00 f901 	mul.w	r9, r0, r1
 801e0f4:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801e0f8:	0100      	lsls	r0, r0, #4
 801e0fa:	eba0 0809 	sub.w	r8, r0, r9
 801e0fe:	b289      	uxth	r1, r1
 801e100:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801e104:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801e106:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801e108:	fa1f f888 	uxth.w	r8, r8
 801e10c:	1a5b      	subs	r3, r3, r1
 801e10e:	b29b      	uxth	r3, r3
 801e110:	fb08 f000 	mul.w	r0, r8, r0
 801e114:	fb03 000e 	mla	r0, r3, lr, r0
 801e118:	fb01 0005 	mla	r0, r1, r5, r0
 801e11c:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801e11e:	fb09 0005 	mla	r0, r9, r5, r0
 801e122:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801e126:	2800      	cmp	r0, #0
 801e128:	f000 80fa 	beq.w	801e320 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e12c:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801e130:	d01b      	beq.n	801e16a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801e132:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 801e136:	fb0e fa0a 	mul.w	sl, lr, sl
 801e13a:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801e13e:	fb0e fe02 	mul.w	lr, lr, r2
 801e142:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801e146:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801e14a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801e14e:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801e152:	4452      	add	r2, sl
 801e154:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801e158:	0a12      	lsrs	r2, r2, #8
 801e15a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e15e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801e162:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801e166:	ea42 020c 	orr.w	r2, r2, ip
 801e16a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801e16c:	2dff      	cmp	r5, #255	; 0xff
 801e16e:	d021      	beq.n	801e1b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801e170:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801e172:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801e176:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801e178:	fb05 fb0b 	mul.w	fp, r5, fp
 801e17c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801e17e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e182:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801e184:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e188:	fb05 fa0a 	mul.w	sl, r5, sl
 801e18c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e190:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801e194:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801e198:	44de      	add	lr, fp
 801e19a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e19e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e1a2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e1a6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e1aa:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e1ae:	ea4e 050a 	orr.w	r5, lr, sl
 801e1b2:	950c      	str	r5, [sp, #48]	; 0x30
 801e1b4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801e1b6:	2dff      	cmp	r5, #255	; 0xff
 801e1b8:	d021      	beq.n	801e1fe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 801e1ba:	9d08      	ldr	r5, [sp, #32]
 801e1bc:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801e1c0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801e1c2:	fb05 fb0b 	mul.w	fp, r5, fp
 801e1c6:	9d08      	ldr	r5, [sp, #32]
 801e1c8:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e1cc:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801e1ce:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e1d2:	fb05 fa0a 	mul.w	sl, r5, sl
 801e1d6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e1da:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801e1de:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801e1e2:	44de      	add	lr, fp
 801e1e4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e1e8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e1ec:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e1f0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e1f4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e1f8:	ea4e 050a 	orr.w	r5, lr, sl
 801e1fc:	9508      	str	r5, [sp, #32]
 801e1fe:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801e200:	2dff      	cmp	r5, #255	; 0xff
 801e202:	d021      	beq.n	801e248 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 801e204:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801e206:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801e20a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801e20c:	fb05 fb0b 	mul.w	fp, r5, fp
 801e210:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801e212:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e216:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801e218:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e21c:	fb05 fa0a 	mul.w	sl, r5, sl
 801e220:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e224:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801e228:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801e22c:	44de      	add	lr, fp
 801e22e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e232:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e236:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e23a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e23e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e242:	ea4e 050a 	orr.w	r5, lr, sl
 801e246:	950d      	str	r5, [sp, #52]	; 0x34
 801e248:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801e24a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801e24e:	9d08      	ldr	r5, [sp, #32]
 801e250:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 801e254:	fb08 fc0c 	mul.w	ip, r8, ip
 801e258:	fb03 cc0e 	mla	ip, r3, lr, ip
 801e25c:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801e260:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801e262:	fb01 cc0e 	mla	ip, r1, lr, ip
 801e266:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801e26a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801e26c:	fb09 cc0e 	mla	ip, r9, lr, ip
 801e270:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801e274:	fb08 f80e 	mul.w	r8, r8, lr
 801e278:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801e27c:	fb03 8202 	mla	r2, r3, r2, r8
 801e280:	9b08      	ldr	r3, [sp, #32]
 801e282:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801e284:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 801e288:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e28a:	fb01 220a 	mla	r2, r1, sl, r2
 801e28e:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 801e292:	fb09 2901 	mla	r9, r9, r1, r2
 801e296:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801e298:	883b      	ldrh	r3, [r7, #0]
 801e29a:	4342      	muls	r2, r0
 801e29c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e2a0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801e2a4:	1c50      	adds	r0, r2, #1
 801e2a6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e2aa:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801e2ae:	ea4c 0c09 	orr.w	ip, ip, r9
 801e2b2:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801e2b6:	1219      	asrs	r1, r3, #8
 801e2b8:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801e2bc:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801e2c0:	b2c0      	uxtb	r0, r0
 801e2c2:	fb12 f205 	smulbb	r2, r2, r5
 801e2c6:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801e2ca:	fb01 2100 	mla	r1, r1, r0, r2
 801e2ce:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801e2d2:	10da      	asrs	r2, r3, #3
 801e2d4:	fa5f fc8c 	uxtb.w	ip, ip
 801e2d8:	00db      	lsls	r3, r3, #3
 801e2da:	fb1c fc05 	smulbb	ip, ip, r5
 801e2de:	b2db      	uxtb	r3, r3
 801e2e0:	b289      	uxth	r1, r1
 801e2e2:	fb03 c300 	mla	r3, r3, r0, ip
 801e2e6:	fa1f fc83 	uxth.w	ip, r3
 801e2ea:	1c4b      	adds	r3, r1, #1
 801e2ec:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801e2f0:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801e2f4:	fb1e fe05 	smulbb	lr, lr, r5
 801e2f8:	f10c 0301 	add.w	r3, ip, #1
 801e2fc:	fb02 e200 	mla	r2, r2, r0, lr
 801e300:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801e304:	b292      	uxth	r2, r2
 801e306:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801e30a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e30e:	430b      	orrs	r3, r1
 801e310:	1c51      	adds	r1, r2, #1
 801e312:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801e316:	0952      	lsrs	r2, r2, #5
 801e318:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e31c:	4313      	orrs	r3, r2
 801e31e:	803b      	strh	r3, [r7, #0]
 801e320:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801e322:	441c      	add	r4, r3
 801e324:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e326:	441e      	add	r6, r3
 801e328:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801e32a:	3b01      	subs	r3, #1
 801e32c:	3702      	adds	r7, #2
 801e32e:	9318      	str	r3, [sp, #96]	; 0x60
 801e330:	e698      	b.n	801e064 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801e332:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801e334:	441c      	add	r4, r3
 801e336:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e338:	441e      	add	r6, r3
 801e33a:	9b07      	ldr	r3, [sp, #28]
 801e33c:	3b01      	subs	r3, #1
 801e33e:	9307      	str	r3, [sp, #28]
 801e340:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e342:	3302      	adds	r3, #2
 801e344:	930a      	str	r3, [sp, #40]	; 0x28
 801e346:	e66d      	b.n	801e024 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801e348:	d023      	beq.n	801e392 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801e34a:	9b07      	ldr	r3, [sp, #28]
 801e34c:	9829      	ldr	r0, [sp, #164]	; 0xa4
 801e34e:	3b01      	subs	r3, #1
 801e350:	fb00 4003 	mla	r0, r0, r3, r4
 801e354:	1400      	asrs	r0, r0, #16
 801e356:	f53f ae82 	bmi.w	801e05e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801e35a:	3901      	subs	r1, #1
 801e35c:	4288      	cmp	r0, r1
 801e35e:	f6bf ae7e 	bge.w	801e05e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801e362:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801e364:	fb01 6303 	mla	r3, r1, r3, r6
 801e368:	141b      	asrs	r3, r3, #16
 801e36a:	f53f ae78 	bmi.w	801e05e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801e36e:	3a01      	subs	r2, #1
 801e370:	4293      	cmp	r3, r2
 801e372:	f6bf ae74 	bge.w	801e05e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801e376:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801e37a:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 801e37e:	f1bb 0f00 	cmp.w	fp, #0
 801e382:	dc6c      	bgt.n	801e45e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801e384:	9b07      	ldr	r3, [sp, #28]
 801e386:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801e38a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e38c:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801e390:	930a      	str	r3, [sp, #40]	; 0x28
 801e392:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801e394:	2b00      	cmp	r3, #0
 801e396:	f340 81b3 	ble.w	801e700 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801e39a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e39e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801e3a2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801e3a6:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801e3a8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e3ac:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e3b0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e3b4:	eef0 6a62 	vmov.f32	s13, s5
 801e3b8:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e3bc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e3c0:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e3c4:	ee16 4a90 	vmov	r4, s13
 801e3c8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e3cc:	eef0 6a43 	vmov.f32	s13, s6
 801e3d0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e3d4:	ee12 2a90 	vmov	r2, s5
 801e3d8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e3dc:	fb92 f3f3 	sdiv	r3, r2, r3
 801e3e0:	ee13 2a10 	vmov	r2, s6
 801e3e4:	9329      	str	r3, [sp, #164]	; 0xa4
 801e3e6:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801e3e8:	fb92 f3f3 	sdiv	r3, r2, r3
 801e3ec:	932a      	str	r3, [sp, #168]	; 0xa8
 801e3ee:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801e3f0:	9a19      	ldr	r2, [sp, #100]	; 0x64
 801e3f2:	3b01      	subs	r3, #1
 801e3f4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e3f8:	9317      	str	r3, [sp, #92]	; 0x5c
 801e3fa:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801e3fc:	bf08      	it	eq
 801e3fe:	4613      	moveq	r3, r2
 801e400:	ee16 6a90 	vmov	r6, s13
 801e404:	9307      	str	r3, [sp, #28]
 801e406:	eeb0 3a67 	vmov.f32	s6, s15
 801e40a:	eef0 2a47 	vmov.f32	s5, s14
 801e40e:	e5fb      	b.n	801e008 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801e410:	2900      	cmp	r1, #0
 801e412:	f43f ae6b 	beq.w	801e0ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801e416:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801e41a:	9308      	str	r3, [sp, #32]
 801e41c:	0e1b      	lsrs	r3, r3, #24
 801e41e:	9311      	str	r3, [sp, #68]	; 0x44
 801e420:	e664      	b.n	801e0ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801e422:	f112 0801 	adds.w	r8, r2, #1
 801e426:	f53f af7b 	bmi.w	801e320 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e42a:	4543      	cmp	r3, r8
 801e42c:	f6ff af78 	blt.w	801e320 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e430:	f11c 0801 	adds.w	r8, ip, #1
 801e434:	f53f af74 	bmi.w	801e320 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e438:	45c6      	cmp	lr, r8
 801e43a:	f6ff af71 	blt.w	801e320 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e43e:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 801e440:	9201      	str	r2, [sp, #4]
 801e442:	fa0f f28e 	sxth.w	r2, lr
 801e446:	e9cd 1504 	strd	r1, r5, [sp, #16]
 801e44a:	e9cd c002 	strd	ip, r0, [sp, #8]
 801e44e:	9200      	str	r2, [sp, #0]
 801e450:	b21b      	sxth	r3, r3
 801e452:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801e454:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801e456:	4639      	mov	r1, r7
 801e458:	f7ff fc79 	bl	801dd4e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 801e45c:	e760      	b.n	801e320 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e45e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801e460:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801e462:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e466:	1427      	asrs	r7, r4, #16
 801e468:	1433      	asrs	r3, r6, #16
 801e46a:	fb01 7303 	mla	r3, r1, r3, r7
 801e46e:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 801e472:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801e476:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801e47a:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801e47e:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801e482:	2a00      	cmp	r2, #0
 801e484:	f000 8133 	beq.w	801e6ee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 801e488:	687d      	ldr	r5, [r7, #4]
 801e48a:	950e      	str	r5, [sp, #56]	; 0x38
 801e48c:	0e2d      	lsrs	r5, r5, #24
 801e48e:	9515      	str	r5, [sp, #84]	; 0x54
 801e490:	b178      	cbz	r0, 801e4b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801e492:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 801e496:	3901      	subs	r1, #1
 801e498:	0089      	lsls	r1, r1, #2
 801e49a:	3104      	adds	r1, #4
 801e49c:	eb07 0e01 	add.w	lr, r7, r1
 801e4a0:	5879      	ldr	r1, [r7, r1]
 801e4a2:	9109      	str	r1, [sp, #36]	; 0x24
 801e4a4:	0e09      	lsrs	r1, r1, #24
 801e4a6:	9112      	str	r1, [sp, #72]	; 0x48
 801e4a8:	f8de 1004 	ldr.w	r1, [lr, #4]
 801e4ac:	910f      	str	r1, [sp, #60]	; 0x3c
 801e4ae:	0e09      	lsrs	r1, r1, #24
 801e4b0:	9116      	str	r1, [sp, #88]	; 0x58
 801e4b2:	b292      	uxth	r2, r2
 801e4b4:	b280      	uxth	r0, r0
 801e4b6:	fb02 f800 	mul.w	r8, r2, r0
 801e4ba:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801e4be:	0112      	lsls	r2, r2, #4
 801e4c0:	eba2 0e08 	sub.w	lr, r2, r8
 801e4c4:	b280      	uxth	r0, r0
 801e4c6:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801e4ca:	9915      	ldr	r1, [sp, #84]	; 0x54
 801e4cc:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e4ce:	fa1f fe8e 	uxth.w	lr, lr
 801e4d2:	1a12      	subs	r2, r2, r0
 801e4d4:	b292      	uxth	r2, r2
 801e4d6:	fb0e f101 	mul.w	r1, lr, r1
 801e4da:	fb02 110c 	mla	r1, r2, ip, r1
 801e4de:	fb00 1105 	mla	r1, r0, r5, r1
 801e4e2:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801e4e4:	fb08 1105 	mla	r1, r8, r5, r1
 801e4e8:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801e4ec:	2900      	cmp	r1, #0
 801e4ee:	f000 80f5 	beq.w	801e6dc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 801e4f2:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801e4f6:	d019      	beq.n	801e52c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 801e4f8:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801e4fc:	fb0c fa0a 	mul.w	sl, ip, sl
 801e500:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801e504:	fb0c fc03 	mul.w	ip, ip, r3
 801e508:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801e50c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801e510:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801e514:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801e518:	4453      	add	r3, sl
 801e51a:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801e51e:	0a1b      	lsrs	r3, r3, #8
 801e520:	0a3f      	lsrs	r7, r7, #8
 801e522:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801e526:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801e52a:	433b      	orrs	r3, r7
 801e52c:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801e52e:	2dff      	cmp	r5, #255	; 0xff
 801e530:	d020      	beq.n	801e574 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 801e532:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801e534:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801e538:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801e53a:	436f      	muls	r7, r5
 801e53c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801e53e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e542:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801e544:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e548:	fb05 fa0a 	mul.w	sl, r5, sl
 801e54c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801e550:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e554:	44bc      	add	ip, r7
 801e556:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801e55a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801e55e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e562:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e566:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e56a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e56e:	ea4c 050a 	orr.w	r5, ip, sl
 801e572:	950e      	str	r5, [sp, #56]	; 0x38
 801e574:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e576:	2dff      	cmp	r5, #255	; 0xff
 801e578:	d020      	beq.n	801e5bc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 801e57a:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801e57c:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801e580:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e582:	436f      	muls	r7, r5
 801e584:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801e586:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e58a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e58c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e590:	fb05 fa0a 	mul.w	sl, r5, sl
 801e594:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801e598:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e59c:	44bc      	add	ip, r7
 801e59e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801e5a2:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801e5a6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e5aa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e5ae:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e5b2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e5b6:	ea4c 050a 	orr.w	r5, ip, sl
 801e5ba:	9509      	str	r5, [sp, #36]	; 0x24
 801e5bc:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801e5be:	2dff      	cmp	r5, #255	; 0xff
 801e5c0:	d020      	beq.n	801e604 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 801e5c2:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801e5c4:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801e5c8:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801e5ca:	436f      	muls	r7, r5
 801e5cc:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801e5ce:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e5d2:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801e5d4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e5d8:	fb05 fa0a 	mul.w	sl, r5, sl
 801e5dc:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801e5e0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e5e4:	44bc      	add	ip, r7
 801e5e6:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801e5ea:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801e5ee:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e5f2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e5f6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e5fa:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e5fe:	ea4c 050a 	orr.w	r5, ip, sl
 801e602:	950f      	str	r5, [sp, #60]	; 0x3c
 801e604:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801e606:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801e60a:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801e60c:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801e610:	fb0e f707 	mul.w	r7, lr, r7
 801e614:	fb02 770c 	mla	r7, r2, ip, r7
 801e618:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801e61c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801e61e:	fb00 770c 	mla	r7, r0, ip, r7
 801e622:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801e626:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801e628:	fb08 770c 	mla	r7, r8, ip, r7
 801e62c:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801e630:	fb0e fe0c 	mul.w	lr, lr, ip
 801e634:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801e638:	fb02 e303 	mla	r3, r2, r3, lr
 801e63c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801e63e:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801e640:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801e644:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801e646:	fb00 330a 	mla	r3, r0, sl, r3
 801e64a:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801e64e:	fb08 3c0c 	mla	ip, r8, ip, r3
 801e652:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e654:	f8b9 0000 	ldrh.w	r0, [r9]
 801e658:	4359      	muls	r1, r3
 801e65a:	0a3f      	lsrs	r7, r7, #8
 801e65c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e660:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801e664:	1c4b      	adds	r3, r1, #1
 801e666:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801e66a:	ea47 070c 	orr.w	r7, r7, ip
 801e66e:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801e672:	1202      	asrs	r2, r0, #8
 801e674:	0c3b      	lsrs	r3, r7, #16
 801e676:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801e67a:	b2c9      	uxtb	r1, r1
 801e67c:	fb13 f305 	smulbb	r3, r3, r5
 801e680:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801e684:	fb02 3201 	mla	r2, r2, r1, r3
 801e688:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801e68c:	10c3      	asrs	r3, r0, #3
 801e68e:	b2ff      	uxtb	r7, r7
 801e690:	00c0      	lsls	r0, r0, #3
 801e692:	b2c0      	uxtb	r0, r0
 801e694:	fb17 f705 	smulbb	r7, r7, r5
 801e698:	fb00 7001 	mla	r0, r0, r1, r7
 801e69c:	b292      	uxth	r2, r2
 801e69e:	fb1c fc05 	smulbb	ip, ip, r5
 801e6a2:	b280      	uxth	r0, r0
 801e6a4:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801e6a8:	fb03 c301 	mla	r3, r3, r1, ip
 801e6ac:	1c51      	adds	r1, r2, #1
 801e6ae:	f100 0c01 	add.w	ip, r0, #1
 801e6b2:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801e6b6:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 801e6ba:	b29b      	uxth	r3, r3
 801e6bc:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801e6c0:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801e6c4:	ea4c 0202 	orr.w	r2, ip, r2
 801e6c8:	f103 0c01 	add.w	ip, r3, #1
 801e6cc:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801e6d0:	095b      	lsrs	r3, r3, #5
 801e6d2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e6d6:	431a      	orrs	r2, r3
 801e6d8:	f8a9 2000 	strh.w	r2, [r9]
 801e6dc:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801e6de:	441c      	add	r4, r3
 801e6e0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e6e2:	f109 0902 	add.w	r9, r9, #2
 801e6e6:	441e      	add	r6, r3
 801e6e8:	f10b 3bff 	add.w	fp, fp, #4294967295
 801e6ec:	e647      	b.n	801e37e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 801e6ee:	2800      	cmp	r0, #0
 801e6f0:	f43f aedf 	beq.w	801e4b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801e6f4:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 801e6f8:	9109      	str	r1, [sp, #36]	; 0x24
 801e6fa:	0e09      	lsrs	r1, r1, #24
 801e6fc:	9112      	str	r1, [sp, #72]	; 0x48
 801e6fe:	e6d8      	b.n	801e4b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801e700:	b01d      	add	sp, #116	; 0x74
 801e702:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801e706 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 801e706:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e70a:	b085      	sub	sp, #20
 801e70c:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 801e710:	9102      	str	r1, [sp, #8]
 801e712:	2c00      	cmp	r4, #0
 801e714:	fb04 7103 	mla	r1, r4, r3, r7
 801e718:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 801e71c:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801e720:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 801e724:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801e728:	f2c0 810c 	blt.w	801e944 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801e72c:	45a6      	cmp	lr, r4
 801e72e:	f340 8109 	ble.w	801e944 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801e732:	2f00      	cmp	r7, #0
 801e734:	f2c0 8104 	blt.w	801e940 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801e738:	42bb      	cmp	r3, r7
 801e73a:	f340 8101 	ble.w	801e940 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801e73e:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801e742:	1c7a      	adds	r2, r7, #1
 801e744:	f100 8101 	bmi.w	801e94a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801e748:	4293      	cmp	r3, r2
 801e74a:	f340 80fe 	ble.w	801e94a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801e74e:	2e00      	cmp	r6, #0
 801e750:	f000 80fd 	beq.w	801e94e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 801e754:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801e758:	3401      	adds	r4, #1
 801e75a:	f100 80fc 	bmi.w	801e956 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801e75e:	45a6      	cmp	lr, r4
 801e760:	f340 80f9 	ble.w	801e956 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801e764:	2800      	cmp	r0, #0
 801e766:	f000 80f9 	beq.w	801e95c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 801e76a:	2f00      	cmp	r7, #0
 801e76c:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 801e770:	f2c0 80ef 	blt.w	801e952 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801e774:	42bb      	cmp	r3, r7
 801e776:	f340 80ec 	ble.w	801e952 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801e77a:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801e77e:	3701      	adds	r7, #1
 801e780:	f100 80ef 	bmi.w	801e962 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801e784:	42bb      	cmp	r3, r7
 801e786:	f340 80ec 	ble.w	801e962 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801e78a:	2e00      	cmp	r6, #0
 801e78c:	f000 80eb 	beq.w	801e966 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 801e790:	6852      	ldr	r2, [r2, #4]
 801e792:	b2b6      	uxth	r6, r6
 801e794:	b280      	uxth	r0, r0
 801e796:	fb00 fe06 	mul.w	lr, r0, r6
 801e79a:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801e79e:	0136      	lsls	r6, r6, #4
 801e7a0:	eba6 070e 	sub.w	r7, r6, lr
 801e7a4:	b280      	uxth	r0, r0
 801e7a6:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801e7aa:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801e7ae:	b2bf      	uxth	r7, r7
 801e7b0:	1a1b      	subs	r3, r3, r0
 801e7b2:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801e7b6:	b29b      	uxth	r3, r3
 801e7b8:	fb07 f60a 	mul.w	r6, r7, sl
 801e7bc:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801e7c0:	fb0b 6603 	mla	r6, fp, r3, r6
 801e7c4:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801e7c8:	fb00 6609 	mla	r6, r0, r9, r6
 801e7cc:	fb0e 6608 	mla	r6, lr, r8, r6
 801e7d0:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801e7d4:	9600      	str	r6, [sp, #0]
 801e7d6:	2e00      	cmp	r6, #0
 801e7d8:	f000 80af 	beq.w	801e93a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 801e7dc:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801e7e0:	fb0b fc0c 	mul.w	ip, fp, ip
 801e7e4:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801e7e8:	fb0b f505 	mul.w	r5, fp, r5
 801e7ec:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801e7f0:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801e7f4:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801e7f8:	44dc      	add	ip, fp
 801e7fa:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e7fe:	9501      	str	r5, [sp, #4]
 801e800:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801e804:	9503      	str	r5, [sp, #12]
 801e806:	9d01      	ldr	r5, [sp, #4]
 801e808:	9e02      	ldr	r6, [sp, #8]
 801e80a:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801e80e:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801e812:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801e816:	fb0a fc0c 	mul.w	ip, sl, ip
 801e81a:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801e81e:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801e822:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801e826:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801e82a:	4465      	add	r5, ip
 801e82c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801e830:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801e834:	fb09 fc0c 	mul.w	ip, r9, ip
 801e838:	fb09 f904 	mul.w	r9, r9, r4
 801e83c:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801e840:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801e844:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801e848:	fb08 f404 	mul.w	r4, r8, r4
 801e84c:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801e850:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801e854:	fb08 f802 	mul.w	r8, r8, r2
 801e858:	fb0a fa01 	mul.w	sl, sl, r1
 801e85c:	0a22      	lsrs	r2, r4, #8
 801e85e:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801e862:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801e866:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801e86a:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801e86e:	4414      	add	r4, r2
 801e870:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801e874:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801e878:	0a2d      	lsrs	r5, r5, #8
 801e87a:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801e87e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801e882:	9a03      	ldr	r2, [sp, #12]
 801e884:	8836      	ldrh	r6, [r6, #0]
 801e886:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801e88a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801e88e:	437d      	muls	r5, r7
 801e890:	4461      	add	r1, ip
 801e892:	0a24      	lsrs	r4, r4, #8
 801e894:	fb02 5503 	mla	r5, r2, r3, r5
 801e898:	0a09      	lsrs	r1, r1, #8
 801e89a:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801e89e:	fb04 540e 	mla	r4, r4, lr, r5
 801e8a2:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801e8a6:	fb01 4100 	mla	r1, r1, r0, r4
 801e8aa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e8ae:	0a09      	lsrs	r1, r1, #8
 801e8b0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e8b4:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801e8b8:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801e8bc:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801e8c0:	fb07 f70a 	mul.w	r7, r7, sl
 801e8c4:	fb03 7101 	mla	r1, r3, r1, r7
 801e8c8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801e8cc:	9b00      	ldr	r3, [sp, #0]
 801e8ce:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801e8d2:	fb0e 1e08 	mla	lr, lr, r8, r1
 801e8d6:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801e8da:	fb00 e101 	mla	r1, r0, r1, lr
 801e8de:	43da      	mvns	r2, r3
 801e8e0:	1233      	asrs	r3, r6, #8
 801e8e2:	b2d2      	uxtb	r2, r2
 801e8e4:	10f0      	asrs	r0, r6, #3
 801e8e6:	0a09      	lsrs	r1, r1, #8
 801e8e8:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801e8ec:	00f6      	lsls	r6, r6, #3
 801e8ee:	4353      	muls	r3, r2
 801e8f0:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801e8f4:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801e8f8:	b2f6      	uxtb	r6, r6
 801e8fa:	4321      	orrs	r1, r4
 801e8fc:	4350      	muls	r0, r2
 801e8fe:	4356      	muls	r6, r2
 801e900:	1c5a      	adds	r2, r3, #1
 801e902:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801e906:	0c0b      	lsrs	r3, r1, #16
 801e908:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801e90c:	1c42      	adds	r2, r0, #1
 801e90e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801e912:	0a0a      	lsrs	r2, r1, #8
 801e914:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801e918:	021b      	lsls	r3, r3, #8
 801e91a:	00d2      	lsls	r2, r2, #3
 801e91c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e920:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801e924:	4313      	orrs	r3, r2
 801e926:	1c72      	adds	r2, r6, #1
 801e928:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801e92c:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 801e930:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801e934:	4319      	orrs	r1, r3
 801e936:	9b02      	ldr	r3, [sp, #8]
 801e938:	8019      	strh	r1, [r3, #0]
 801e93a:	b005      	add	sp, #20
 801e93c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e940:	2500      	movs	r5, #0
 801e942:	e6fe      	b.n	801e742 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 801e944:	2100      	movs	r1, #0
 801e946:	460d      	mov	r5, r1
 801e948:	e706      	b.n	801e758 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801e94a:	2100      	movs	r1, #0
 801e94c:	e704      	b.n	801e758 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801e94e:	4631      	mov	r1, r6
 801e950:	e702      	b.n	801e758 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801e952:	2400      	movs	r4, #0
 801e954:	e713      	b.n	801e77e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 801e956:	2200      	movs	r2, #0
 801e958:	4614      	mov	r4, r2
 801e95a:	e71a      	b.n	801e792 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801e95c:	4602      	mov	r2, r0
 801e95e:	4604      	mov	r4, r0
 801e960:	e717      	b.n	801e792 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801e962:	2200      	movs	r2, #0
 801e964:	e715      	b.n	801e792 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801e966:	4632      	mov	r2, r6
 801e968:	e713      	b.n	801e792 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

0801e96c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e96c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e970:	b09b      	sub	sp, #108	; 0x6c
 801e972:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 801e976:	9218      	str	r2, [sp, #96]	; 0x60
 801e978:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801e97a:	9116      	str	r1, [sp, #88]	; 0x58
 801e97c:	9307      	str	r3, [sp, #28]
 801e97e:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801e982:	9019      	str	r0, [sp, #100]	; 0x64
 801e984:	6850      	ldr	r0, [r2, #4]
 801e986:	6812      	ldr	r2, [r2, #0]
 801e988:	fb00 1303 	mla	r3, r0, r3, r1
 801e98c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801e990:	930a      	str	r3, [sp, #40]	; 0x28
 801e992:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801e994:	681b      	ldr	r3, [r3, #0]
 801e996:	930f      	str	r3, [sp, #60]	; 0x3c
 801e998:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801e99a:	2b00      	cmp	r3, #0
 801e99c:	dc03      	bgt.n	801e9a6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801e99e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801e9a0:	2b00      	cmp	r3, #0
 801e9a2:	f340 8386 	ble.w	801f0b2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801e9a6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801e9a8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e9ac:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e9b0:	1e48      	subs	r0, r1, #1
 801e9b2:	1e57      	subs	r7, r2, #1
 801e9b4:	9b07      	ldr	r3, [sp, #28]
 801e9b6:	2b00      	cmp	r3, #0
 801e9b8:	f340 8166 	ble.w	801ec88 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801e9bc:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801e9c0:	ea4f 4326 	mov.w	r3, r6, asr #16
 801e9c4:	d406      	bmi.n	801e9d4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801e9c6:	4584      	cmp	ip, r0
 801e9c8:	da04      	bge.n	801e9d4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801e9ca:	2b00      	cmp	r3, #0
 801e9cc:	db02      	blt.n	801e9d4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801e9ce:	42bb      	cmp	r3, r7
 801e9d0:	f2c0 815b 	blt.w	801ec8a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801e9d4:	f11c 0c01 	adds.w	ip, ip, #1
 801e9d8:	f100 814b 	bmi.w	801ec72 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801e9dc:	4561      	cmp	r1, ip
 801e9de:	f2c0 8148 	blt.w	801ec72 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801e9e2:	3301      	adds	r3, #1
 801e9e4:	f100 8145 	bmi.w	801ec72 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801e9e8:	429a      	cmp	r2, r3
 801e9ea:	f2c0 8142 	blt.w	801ec72 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801e9ee:	9b07      	ldr	r3, [sp, #28]
 801e9f0:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801e9f2:	9317      	str	r3, [sp, #92]	; 0x5c
 801e9f4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801e9f6:	2b00      	cmp	r3, #0
 801e9f8:	f340 8165 	ble.w	801ecc6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801e9fc:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 801e9fe:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801ea00:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801ea04:	689b      	ldr	r3, [r3, #8]
 801ea06:	1422      	asrs	r2, r4, #16
 801ea08:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801ea0c:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801ea10:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801ea14:	f100 81d5 	bmi.w	801edc2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801ea18:	f103 38ff 	add.w	r8, r3, #4294967295
 801ea1c:	4542      	cmp	r2, r8
 801ea1e:	f280 81d0 	bge.w	801edc2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801ea22:	f1bc 0f00 	cmp.w	ip, #0
 801ea26:	f2c0 81cc 	blt.w	801edc2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801ea2a:	f10e 38ff 	add.w	r8, lr, #4294967295
 801ea2e:	45c4      	cmp	ip, r8
 801ea30:	f280 81c7 	bge.w	801edc2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801ea34:	b21b      	sxth	r3, r3
 801ea36:	fb0c 2203 	mla	r2, ip, r3, r2
 801ea3a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801ea3c:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801ea40:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801ea44:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801ea48:	2900      	cmp	r1, #0
 801ea4a:	f000 8182 	beq.w	801ed52 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801ea4e:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801ea52:	950b      	str	r5, [sp, #44]	; 0x2c
 801ea54:	0e2d      	lsrs	r5, r5, #24
 801ea56:	9512      	str	r5, [sp, #72]	; 0x48
 801ea58:	b180      	cbz	r0, 801ea7c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801ea5a:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801ea5e:	3b01      	subs	r3, #1
 801ea60:	009b      	lsls	r3, r3, #2
 801ea62:	3304      	adds	r3, #4
 801ea64:	eb08 0c03 	add.w	ip, r8, r3
 801ea68:	f858 3003 	ldr.w	r3, [r8, r3]
 801ea6c:	9308      	str	r3, [sp, #32]
 801ea6e:	0e1b      	lsrs	r3, r3, #24
 801ea70:	9310      	str	r3, [sp, #64]	; 0x40
 801ea72:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801ea76:	930c      	str	r3, [sp, #48]	; 0x30
 801ea78:	0e1b      	lsrs	r3, r3, #24
 801ea7a:	9313      	str	r3, [sp, #76]	; 0x4c
 801ea7c:	b289      	uxth	r1, r1
 801ea7e:	b280      	uxth	r0, r0
 801ea80:	fb01 f900 	mul.w	r9, r1, r0
 801ea84:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801ea88:	0109      	lsls	r1, r1, #4
 801ea8a:	eba1 0809 	sub.w	r8, r1, r9
 801ea8e:	b280      	uxth	r0, r0
 801ea90:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 801ea94:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801ea96:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801ea98:	fa1f f888 	uxth.w	r8, r8
 801ea9c:	1a09      	subs	r1, r1, r0
 801ea9e:	b289      	uxth	r1, r1
 801eaa0:	fb08 f303 	mul.w	r3, r8, r3
 801eaa4:	fb01 330e 	mla	r3, r1, lr, r3
 801eaa8:	fb00 3305 	mla	r3, r0, r5, r3
 801eaac:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801eaae:	fb09 3305 	mla	r3, r9, r5, r3
 801eab2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801eab6:	2b00      	cmp	r3, #0
 801eab8:	f000 80d2 	beq.w	801ec60 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801eabc:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801eac0:	d01b      	beq.n	801eafa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 801eac2:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 801eac6:	fb0e fa0a 	mul.w	sl, lr, sl
 801eaca:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801eace:	fb0e fe02 	mul.w	lr, lr, r2
 801ead2:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801ead6:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801eada:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801eade:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801eae2:	4452      	add	r2, sl
 801eae4:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801eae8:	0a12      	lsrs	r2, r2, #8
 801eaea:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801eaee:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801eaf2:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801eaf6:	ea42 020c 	orr.w	r2, r2, ip
 801eafa:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801eafc:	2dff      	cmp	r5, #255	; 0xff
 801eafe:	d021      	beq.n	801eb44 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 801eb00:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801eb02:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801eb06:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801eb08:	fb05 fb0b 	mul.w	fp, r5, fp
 801eb0c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801eb0e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801eb12:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801eb14:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801eb18:	fb05 fa0a 	mul.w	sl, r5, sl
 801eb1c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801eb20:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801eb24:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801eb28:	44de      	add	lr, fp
 801eb2a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801eb2e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801eb32:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801eb36:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801eb3a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801eb3e:	ea4e 050a 	orr.w	r5, lr, sl
 801eb42:	950b      	str	r5, [sp, #44]	; 0x2c
 801eb44:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801eb46:	2dff      	cmp	r5, #255	; 0xff
 801eb48:	d021      	beq.n	801eb8e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 801eb4a:	9d08      	ldr	r5, [sp, #32]
 801eb4c:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801eb50:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801eb52:	fb05 fb0b 	mul.w	fp, r5, fp
 801eb56:	9d08      	ldr	r5, [sp, #32]
 801eb58:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801eb5c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801eb5e:	fb05 fa0e 	mul.w	sl, r5, lr
 801eb62:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801eb66:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801eb6a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801eb6e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801eb72:	44de      	add	lr, fp
 801eb74:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801eb78:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801eb7c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801eb80:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801eb84:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801eb88:	ea4e 050a 	orr.w	r5, lr, sl
 801eb8c:	9508      	str	r5, [sp, #32]
 801eb8e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801eb90:	2dff      	cmp	r5, #255	; 0xff
 801eb92:	d021      	beq.n	801ebd8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 801eb94:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801eb96:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801eb9a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801eb9c:	fb05 fb0b 	mul.w	fp, r5, fp
 801eba0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801eba2:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801eba6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801eba8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ebac:	fb05 fa0a 	mul.w	sl, r5, sl
 801ebb0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ebb4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801ebb8:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801ebbc:	44de      	add	lr, fp
 801ebbe:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801ebc2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ebc6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ebca:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ebce:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ebd2:	ea4e 050a 	orr.w	r5, lr, sl
 801ebd6:	950c      	str	r5, [sp, #48]	; 0x30
 801ebd8:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801ebda:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801ebde:	9d08      	ldr	r5, [sp, #32]
 801ebe0:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 801ebe4:	fb08 fc0c 	mul.w	ip, r8, ip
 801ebe8:	fb01 cc0e 	mla	ip, r1, lr, ip
 801ebec:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801ebf0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801ebf2:	fb00 cc0e 	mla	ip, r0, lr, ip
 801ebf6:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801ebfa:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801ebfc:	fb09 cc0e 	mla	ip, r9, lr, ip
 801ec00:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801ec04:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801ec08:	fb08 f80e 	mul.w	r8, r8, lr
 801ec0c:	fb01 8202 	mla	r2, r1, r2, r8
 801ec10:	9908      	ldr	r1, [sp, #32]
 801ec12:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801ec16:	990c      	ldr	r1, [sp, #48]	; 0x30
 801ec18:	fb00 220a 	mla	r2, r0, sl, r2
 801ec1c:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 801ec20:	fb09 2900 	mla	r9, r9, r0, r2
 801ec24:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ec28:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801ec2c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ec30:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801ec34:	ea4c 0c09 	orr.w	ip, ip, r9
 801ec38:	2bff      	cmp	r3, #255	; 0xff
 801ec3a:	ea4f 221c 	mov.w	r2, ip, lsr #8
 801ec3e:	f040 8091 	bne.w	801ed64 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801ec42:	ea4f 135c 	mov.w	r3, ip, lsr #5
 801ec46:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 801ec4a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ec4e:	f022 0207 	bic.w	r2, r2, #7
 801ec52:	431a      	orrs	r2, r3
 801ec54:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801ec58:	ea4c 0c02 	orr.w	ip, ip, r2
 801ec5c:	f8a7 c000 	strh.w	ip, [r7]
 801ec60:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801ec62:	441c      	add	r4, r3
 801ec64:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ec66:	441e      	add	r6, r3
 801ec68:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801ec6a:	3b01      	subs	r3, #1
 801ec6c:	3702      	adds	r7, #2
 801ec6e:	9317      	str	r3, [sp, #92]	; 0x5c
 801ec70:	e6c0      	b.n	801e9f4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801ec72:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801ec74:	441c      	add	r4, r3
 801ec76:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ec78:	441e      	add	r6, r3
 801ec7a:	9b07      	ldr	r3, [sp, #28]
 801ec7c:	3b01      	subs	r3, #1
 801ec7e:	9307      	str	r3, [sp, #28]
 801ec80:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ec82:	3302      	adds	r3, #2
 801ec84:	930a      	str	r3, [sp, #40]	; 0x28
 801ec86:	e695      	b.n	801e9b4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801ec88:	d024      	beq.n	801ecd4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801ec8a:	9b07      	ldr	r3, [sp, #28]
 801ec8c:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801ec8e:	3b01      	subs	r3, #1
 801ec90:	fb00 4003 	mla	r0, r0, r3, r4
 801ec94:	1400      	asrs	r0, r0, #16
 801ec96:	f53f aeaa 	bmi.w	801e9ee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801ec9a:	3901      	subs	r1, #1
 801ec9c:	4288      	cmp	r0, r1
 801ec9e:	f6bf aea6 	bge.w	801e9ee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801eca2:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801eca4:	fb01 6303 	mla	r3, r1, r3, r6
 801eca8:	141b      	asrs	r3, r3, #16
 801ecaa:	f53f aea0 	bmi.w	801e9ee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801ecae:	3a01      	subs	r2, #1
 801ecb0:	4293      	cmp	r3, r2
 801ecb2:	f6bf ae9c 	bge.w	801e9ee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801ecb6:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801ecba:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 801ecbe:	f1bb 0f00 	cmp.w	fp, #0
 801ecc2:	f300 809a 	bgt.w	801edfa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801ecc6:	9b07      	ldr	r3, [sp, #28]
 801ecc8:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801eccc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ecce:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801ecd2:	930a      	str	r3, [sp, #40]	; 0x28
 801ecd4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801ecd6:	2b00      	cmp	r3, #0
 801ecd8:	f340 81eb 	ble.w	801f0b2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801ecdc:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ece0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801ece4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ece8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ecea:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ecee:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ecf2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ecf6:	eef0 6a62 	vmov.f32	s13, s5
 801ecfa:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ecfe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ed02:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ed06:	ee16 4a90 	vmov	r4, s13
 801ed0a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ed0e:	eef0 6a43 	vmov.f32	s13, s6
 801ed12:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ed16:	ee12 2a90 	vmov	r2, s5
 801ed1a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ed1e:	fb92 f3f3 	sdiv	r3, r2, r3
 801ed22:	ee13 2a10 	vmov	r2, s6
 801ed26:	9327      	str	r3, [sp, #156]	; 0x9c
 801ed28:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ed2a:	fb92 f3f3 	sdiv	r3, r2, r3
 801ed2e:	9328      	str	r3, [sp, #160]	; 0xa0
 801ed30:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801ed32:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801ed34:	3b01      	subs	r3, #1
 801ed36:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ed3a:	9316      	str	r3, [sp, #88]	; 0x58
 801ed3c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ed3e:	bf08      	it	eq
 801ed40:	4613      	moveq	r3, r2
 801ed42:	ee16 6a90 	vmov	r6, s13
 801ed46:	9307      	str	r3, [sp, #28]
 801ed48:	eeb0 3a67 	vmov.f32	s6, s15
 801ed4c:	eef0 2a47 	vmov.f32	s5, s14
 801ed50:	e622      	b.n	801e998 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 801ed52:	2800      	cmp	r0, #0
 801ed54:	f43f ae92 	beq.w	801ea7c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801ed58:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801ed5c:	9308      	str	r3, [sp, #32]
 801ed5e:	0e1b      	lsrs	r3, r3, #24
 801ed60:	9310      	str	r3, [sp, #64]	; 0x40
 801ed62:	e68b      	b.n	801ea7c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801ed64:	8839      	ldrh	r1, [r7, #0]
 801ed66:	4dd4      	ldr	r5, [pc, #848]	; (801f0b8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 801ed68:	43db      	mvns	r3, r3
 801ed6a:	ea4f 2e21 	mov.w	lr, r1, asr #8
 801ed6e:	fa5f f883 	uxtb.w	r8, r3
 801ed72:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801ed76:	fb0e fe08 	mul.w	lr, lr, r8
 801ed7a:	10c8      	asrs	r0, r1, #3
 801ed7c:	00cb      	lsls	r3, r1, #3
 801ed7e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801ed82:	f10e 0101 	add.w	r1, lr, #1
 801ed86:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 801ed8a:	fb00 f008 	mul.w	r0, r0, r8
 801ed8e:	ea4f 411c 	mov.w	r1, ip, lsr #16
 801ed92:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 801ed96:	f100 0e01 	add.w	lr, r0, #1
 801ed9a:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 801ed9e:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801eda2:	b2db      	uxtb	r3, r3
 801eda4:	b2c9      	uxtb	r1, r1
 801eda6:	00d2      	lsls	r2, r2, #3
 801eda8:	fb03 f308 	mul.w	r3, r3, r8
 801edac:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 801edb0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801edb4:	430a      	orrs	r2, r1
 801edb6:	1c59      	adds	r1, r3, #1
 801edb8:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801edbc:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801edc0:	e748      	b.n	801ec54 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 801edc2:	f112 0801 	adds.w	r8, r2, #1
 801edc6:	f53f af4b 	bmi.w	801ec60 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801edca:	4543      	cmp	r3, r8
 801edcc:	f6ff af48 	blt.w	801ec60 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801edd0:	f11c 0801 	adds.w	r8, ip, #1
 801edd4:	f53f af44 	bmi.w	801ec60 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801edd8:	45c6      	cmp	lr, r8
 801edda:	f6ff af41 	blt.w	801ec60 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801edde:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 801ede2:	fa0f f28e 	sxth.w	r2, lr
 801ede6:	e9cd 1003 	strd	r1, r0, [sp, #12]
 801edea:	9200      	str	r2, [sp, #0]
 801edec:	b21b      	sxth	r3, r3
 801edee:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801edf0:	9819      	ldr	r0, [sp, #100]	; 0x64
 801edf2:	4639      	mov	r1, r7
 801edf4:	f7ff fc87 	bl	801e706 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 801edf8:	e732      	b.n	801ec60 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801edfa:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801edfc:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801edfe:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 801ee02:	1421      	asrs	r1, r4, #16
 801ee04:	1433      	asrs	r3, r6, #16
 801ee06:	fb07 1303 	mla	r3, r7, r3, r1
 801ee0a:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801ee0c:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 801ee10:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801ee14:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801ee18:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801ee1c:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801ee20:	2a00      	cmp	r2, #0
 801ee22:	f000 8107 	beq.w	801f034 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 801ee26:	684d      	ldr	r5, [r1, #4]
 801ee28:	950d      	str	r5, [sp, #52]	; 0x34
 801ee2a:	0e2d      	lsrs	r5, r5, #24
 801ee2c:	9514      	str	r5, [sp, #80]	; 0x50
 801ee2e:	b178      	cbz	r0, 801ee50 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801ee30:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 801ee34:	3f01      	subs	r7, #1
 801ee36:	00bf      	lsls	r7, r7, #2
 801ee38:	3704      	adds	r7, #4
 801ee3a:	eb01 0e07 	add.w	lr, r1, r7
 801ee3e:	59c9      	ldr	r1, [r1, r7]
 801ee40:	9109      	str	r1, [sp, #36]	; 0x24
 801ee42:	0e09      	lsrs	r1, r1, #24
 801ee44:	9111      	str	r1, [sp, #68]	; 0x44
 801ee46:	f8de 1004 	ldr.w	r1, [lr, #4]
 801ee4a:	910e      	str	r1, [sp, #56]	; 0x38
 801ee4c:	0e09      	lsrs	r1, r1, #24
 801ee4e:	9115      	str	r1, [sp, #84]	; 0x54
 801ee50:	b292      	uxth	r2, r2
 801ee52:	b280      	uxth	r0, r0
 801ee54:	fb02 f900 	mul.w	r9, r2, r0
 801ee58:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801ee5c:	0112      	lsls	r2, r2, #4
 801ee5e:	eba2 0e09 	sub.w	lr, r2, r9
 801ee62:	b280      	uxth	r0, r0
 801ee64:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801ee68:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801ee6a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801ee6c:	fa1f fe8e 	uxth.w	lr, lr
 801ee70:	1a09      	subs	r1, r1, r0
 801ee72:	b289      	uxth	r1, r1
 801ee74:	fb0e f202 	mul.w	r2, lr, r2
 801ee78:	fb01 220c 	mla	r2, r1, ip, r2
 801ee7c:	fb00 2205 	mla	r2, r0, r5, r2
 801ee80:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801ee82:	fb09 2205 	mla	r2, r9, r5, r2
 801ee86:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801ee8a:	2a00      	cmp	r2, #0
 801ee8c:	f000 80c9 	beq.w	801f022 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 801ee90:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801ee94:	d019      	beq.n	801eeca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 801ee96:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801ee9a:	fb0c fa0a 	mul.w	sl, ip, sl
 801ee9e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801eea2:	fb0c fc03 	mul.w	ip, ip, r3
 801eea6:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801eeaa:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801eeae:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801eeb2:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801eeb6:	4453      	add	r3, sl
 801eeb8:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801eebc:	0a1b      	lsrs	r3, r3, #8
 801eebe:	0a3f      	lsrs	r7, r7, #8
 801eec0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801eec4:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801eec8:	433b      	orrs	r3, r7
 801eeca:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801eecc:	2dff      	cmp	r5, #255	; 0xff
 801eece:	d020      	beq.n	801ef12 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 801eed0:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801eed2:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801eed6:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801eed8:	436f      	muls	r7, r5
 801eeda:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801eedc:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801eee0:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801eee2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801eee6:	fb05 fa0a 	mul.w	sl, r5, sl
 801eeea:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801eeee:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801eef2:	44bc      	add	ip, r7
 801eef4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801eef8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801eefc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ef00:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ef04:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ef08:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ef0c:	ea4c 050a 	orr.w	r5, ip, sl
 801ef10:	950d      	str	r5, [sp, #52]	; 0x34
 801ef12:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801ef14:	2dff      	cmp	r5, #255	; 0xff
 801ef16:	d020      	beq.n	801ef5a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 801ef18:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801ef1a:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801ef1e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801ef20:	436f      	muls	r7, r5
 801ef22:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801ef24:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801ef28:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801ef2a:	fb05 fa0c 	mul.w	sl, r5, ip
 801ef2e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801ef32:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ef36:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801ef3a:	44bc      	add	ip, r7
 801ef3c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801ef40:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801ef44:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ef48:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ef4c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ef50:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ef54:	ea4c 050a 	orr.w	r5, ip, sl
 801ef58:	9509      	str	r5, [sp, #36]	; 0x24
 801ef5a:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801ef5c:	2dff      	cmp	r5, #255	; 0xff
 801ef5e:	d020      	beq.n	801efa2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 801ef60:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801ef62:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801ef66:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801ef68:	436f      	muls	r7, r5
 801ef6a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801ef6c:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801ef70:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801ef72:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801ef76:	fb05 fa0a 	mul.w	sl, r5, sl
 801ef7a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801ef7e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ef82:	44bc      	add	ip, r7
 801ef84:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801ef88:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801ef8c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ef90:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ef94:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ef98:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ef9c:	ea4c 050a 	orr.w	r5, ip, sl
 801efa0:	950e      	str	r5, [sp, #56]	; 0x38
 801efa2:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801efa4:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801efa8:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801efaa:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801efae:	fb0e f707 	mul.w	r7, lr, r7
 801efb2:	fb01 770c 	mla	r7, r1, ip, r7
 801efb6:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801efba:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801efbc:	fb00 770c 	mla	r7, r0, ip, r7
 801efc0:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801efc4:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801efc6:	fb09 770c 	mla	r7, r9, ip, r7
 801efca:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801efce:	fb0e fe0c 	mul.w	lr, lr, ip
 801efd2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801efd6:	fb01 e303 	mla	r3, r1, r3, lr
 801efda:	9909      	ldr	r1, [sp, #36]	; 0x24
 801efdc:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801efe0:	990e      	ldr	r1, [sp, #56]	; 0x38
 801efe2:	fb00 330a 	mla	r3, r0, sl, r3
 801efe6:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801efea:	fb09 3c0c 	mla	ip, r9, ip, r3
 801efee:	0a3f      	lsrs	r7, r7, #8
 801eff0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801eff4:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801eff8:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801effc:	ea47 070c 	orr.w	r7, r7, ip
 801f000:	2aff      	cmp	r2, #255	; 0xff
 801f002:	ea4f 2317 	mov.w	r3, r7, lsr #8
 801f006:	d11e      	bne.n	801f046 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 801f008:	097a      	lsrs	r2, r7, #5
 801f00a:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 801f00e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801f012:	f023 0307 	bic.w	r3, r3, #7
 801f016:	4313      	orrs	r3, r2
 801f018:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801f01c:	431f      	orrs	r7, r3
 801f01e:	f8a8 7000 	strh.w	r7, [r8]
 801f022:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801f024:	441c      	add	r4, r3
 801f026:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f028:	f108 0802 	add.w	r8, r8, #2
 801f02c:	441e      	add	r6, r3
 801f02e:	f10b 3bff 	add.w	fp, fp, #4294967295
 801f032:	e644      	b.n	801ecbe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 801f034:	2800      	cmp	r0, #0
 801f036:	f43f af0b 	beq.w	801ee50 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801f03a:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 801f03e:	9109      	str	r1, [sp, #36]	; 0x24
 801f040:	0e09      	lsrs	r1, r1, #24
 801f042:	9111      	str	r1, [sp, #68]	; 0x44
 801f044:	e704      	b.n	801ee50 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801f046:	f8b8 1000 	ldrh.w	r1, [r8]
 801f04a:	43d2      	mvns	r2, r2
 801f04c:	ea4f 2c21 	mov.w	ip, r1, asr #8
 801f050:	fa5f fe82 	uxtb.w	lr, r2
 801f054:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801f058:	fb0c fc0e 	mul.w	ip, ip, lr
 801f05c:	10c8      	asrs	r0, r1, #3
 801f05e:	00ca      	lsls	r2, r1, #3
 801f060:	f10c 0101 	add.w	r1, ip, #1
 801f064:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801f068:	0c39      	lsrs	r1, r7, #16
 801f06a:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801f06e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801f072:	4911      	ldr	r1, [pc, #68]	; (801f0b8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 801f074:	fb00 f00e 	mul.w	r0, r0, lr
 801f078:	fa5f fc8c 	uxtb.w	ip, ip
 801f07c:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 801f080:	b2d2      	uxtb	r2, r2
 801f082:	1c41      	adds	r1, r0, #1
 801f084:	fb02 f20e 	mul.w	r2, r2, lr
 801f088:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801f08c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801f090:	1c51      	adds	r1, r2, #1
 801f092:	00c0      	lsls	r0, r0, #3
 801f094:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801f098:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801f09c:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801f0a0:	ea4c 0c00 	orr.w	ip, ip, r0
 801f0a4:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801f0a8:	ea47 0c0c 	orr.w	ip, r7, ip
 801f0ac:	f8a8 c000 	strh.w	ip, [r8]
 801f0b0:	e7b7      	b.n	801f022 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 801f0b2:	b01b      	add	sp, #108	; 0x6c
 801f0b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f0b8:	fffff800 	.word	0xfffff800

0801f0bc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 801f0bc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801f0c0:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 801f0c4:	2d00      	cmp	r5, #0
 801f0c6:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801f0ca:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801f0ce:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 801f0d2:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 801f0d6:	fb05 0e03 	mla	lr, r5, r3, r0
 801f0da:	f2c0 808c 	blt.w	801f1f6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 801f0de:	45a9      	cmp	r9, r5
 801f0e0:	f340 8089 	ble.w	801f1f6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 801f0e4:	2800      	cmp	r0, #0
 801f0e6:	f2c0 8084 	blt.w	801f1f2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 801f0ea:	4580      	cmp	r8, r0
 801f0ec:	f340 8081 	ble.w	801f1f2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 801f0f0:	ea4f 045e 	mov.w	r4, lr, lsr #1
 801f0f4:	f01e 0f01 	tst.w	lr, #1
 801f0f8:	5d16      	ldrb	r6, [r2, r4]
 801f0fa:	bf0c      	ite	eq
 801f0fc:	f006 060f 	andeq.w	r6, r6, #15
 801f100:	1136      	asrne	r6, r6, #4
 801f102:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801f106:	b2f6      	uxtb	r6, r6
 801f108:	1c44      	adds	r4, r0, #1
 801f10a:	d477      	bmi.n	801f1fc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801f10c:	45a0      	cmp	r8, r4
 801f10e:	dd75      	ble.n	801f1fc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801f110:	2f00      	cmp	r7, #0
 801f112:	d075      	beq.n	801f200 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 801f114:	f10e 0a01 	add.w	sl, lr, #1
 801f118:	ea4f 045a 	mov.w	r4, sl, lsr #1
 801f11c:	f01a 0f01 	tst.w	sl, #1
 801f120:	5d14      	ldrb	r4, [r2, r4]
 801f122:	bf0c      	ite	eq
 801f124:	f004 040f 	andeq.w	r4, r4, #15
 801f128:	1124      	asrne	r4, r4, #4
 801f12a:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801f12e:	b2e4      	uxtb	r4, r4
 801f130:	3501      	adds	r5, #1
 801f132:	d469      	bmi.n	801f208 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801f134:	45a9      	cmp	r9, r5
 801f136:	dd67      	ble.n	801f208 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801f138:	f1bc 0f00 	cmp.w	ip, #0
 801f13c:	d067      	beq.n	801f20e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 801f13e:	2800      	cmp	r0, #0
 801f140:	db60      	blt.n	801f204 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801f142:	4580      	cmp	r8, r0
 801f144:	dd5e      	ble.n	801f204 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801f146:	eb03 090e 	add.w	r9, r3, lr
 801f14a:	ea4f 0559 	mov.w	r5, r9, lsr #1
 801f14e:	f019 0f01 	tst.w	r9, #1
 801f152:	5d55      	ldrb	r5, [r2, r5]
 801f154:	bf0c      	ite	eq
 801f156:	f005 050f 	andeq.w	r5, r5, #15
 801f15a:	112d      	asrne	r5, r5, #4
 801f15c:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 801f160:	b2ed      	uxtb	r5, r5
 801f162:	3001      	adds	r0, #1
 801f164:	d456      	bmi.n	801f214 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801f166:	4580      	cmp	r8, r0
 801f168:	dd54      	ble.n	801f214 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801f16a:	2f00      	cmp	r7, #0
 801f16c:	d054      	beq.n	801f218 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 801f16e:	3301      	adds	r3, #1
 801f170:	449e      	add	lr, r3
 801f172:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801f176:	f01e 0f01 	tst.w	lr, #1
 801f17a:	5cd0      	ldrb	r0, [r2, r3]
 801f17c:	bf0c      	ite	eq
 801f17e:	f000 000f 	andeq.w	r0, r0, #15
 801f182:	1100      	asrne	r0, r0, #4
 801f184:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801f188:	b2c3      	uxtb	r3, r0
 801f18a:	b2ba      	uxth	r2, r7
 801f18c:	fa1f fc8c 	uxth.w	ip, ip
 801f190:	fb02 f00c 	mul.w	r0, r2, ip
 801f194:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 801f198:	0112      	lsls	r2, r2, #4
 801f19a:	fa1f fc8c 	uxth.w	ip, ip
 801f19e:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 801f1a2:	1a12      	subs	r2, r2, r0
 801f1a4:	eba7 070c 	sub.w	r7, r7, ip
 801f1a8:	b292      	uxth	r2, r2
 801f1aa:	b2bf      	uxth	r7, r7
 801f1ac:	4362      	muls	r2, r4
 801f1ae:	fb06 2207 	mla	r2, r6, r7, r2
 801f1b2:	fb0c 2505 	mla	r5, ip, r5, r2
 801f1b6:	fb00 5303 	mla	r3, r0, r3, r5
 801f1ba:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f1be:	b1b3      	cbz	r3, 801f1ee <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 801f1c0:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 801f1c4:	435a      	muls	r2, r3
 801f1c6:	1c53      	adds	r3, r2, #1
 801f1c8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f1cc:	4a2d      	ldr	r2, [pc, #180]	; (801f284 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 801f1ce:	121b      	asrs	r3, r3, #8
 801f1d0:	6812      	ldr	r2, [r2, #0]
 801f1d2:	2bff      	cmp	r3, #255	; 0xff
 801f1d4:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801f1d8:	d120      	bne.n	801f21c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 801f1da:	4b2b      	ldr	r3, [pc, #172]	; (801f288 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 801f1dc:	0950      	lsrs	r0, r2, #5
 801f1de:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801f1e2:	4033      	ands	r3, r6
 801f1e4:	4318      	orrs	r0, r3
 801f1e6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801f1ea:	4302      	orrs	r2, r0
 801f1ec:	800a      	strh	r2, [r1, #0]
 801f1ee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801f1f2:	2600      	movs	r6, #0
 801f1f4:	e788      	b.n	801f108 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 801f1f6:	2400      	movs	r4, #0
 801f1f8:	4626      	mov	r6, r4
 801f1fa:	e799      	b.n	801f130 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801f1fc:	2400      	movs	r4, #0
 801f1fe:	e797      	b.n	801f130 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801f200:	463c      	mov	r4, r7
 801f202:	e795      	b.n	801f130 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801f204:	2500      	movs	r5, #0
 801f206:	e7ac      	b.n	801f162 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 801f208:	2300      	movs	r3, #0
 801f20a:	461d      	mov	r5, r3
 801f20c:	e7bd      	b.n	801f18a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801f20e:	4663      	mov	r3, ip
 801f210:	4665      	mov	r5, ip
 801f212:	e7ba      	b.n	801f18a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801f214:	2300      	movs	r3, #0
 801f216:	e7b8      	b.n	801f18a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801f218:	463b      	mov	r3, r7
 801f21a:	e7b6      	b.n	801f18a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801f21c:	880d      	ldrh	r5, [r1, #0]
 801f21e:	b29f      	uxth	r7, r3
 801f220:	122c      	asrs	r4, r5, #8
 801f222:	f3c2 4007 	ubfx	r0, r2, #16, #8
 801f226:	43db      	mvns	r3, r3
 801f228:	b2db      	uxtb	r3, r3
 801f22a:	fb10 f007 	smulbb	r0, r0, r7
 801f22e:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801f232:	fb04 0403 	mla	r4, r4, r3, r0
 801f236:	b2f6      	uxtb	r6, r6
 801f238:	10e8      	asrs	r0, r5, #3
 801f23a:	b2d2      	uxtb	r2, r2
 801f23c:	00ed      	lsls	r5, r5, #3
 801f23e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801f242:	fb12 f207 	smulbb	r2, r2, r7
 801f246:	fb16 f607 	smulbb	r6, r6, r7
 801f24a:	b2ed      	uxtb	r5, r5
 801f24c:	b2a4      	uxth	r4, r4
 801f24e:	fb00 6603 	mla	r6, r0, r3, r6
 801f252:	fb05 2303 	mla	r3, r5, r3, r2
 801f256:	b29a      	uxth	r2, r3
 801f258:	1c63      	adds	r3, r4, #1
 801f25a:	b2b0      	uxth	r0, r6
 801f25c:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801f260:	1c53      	adds	r3, r2, #1
 801f262:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f266:	1c42      	adds	r2, r0, #1
 801f268:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801f26c:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801f270:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801f274:	0940      	lsrs	r0, r0, #5
 801f276:	4323      	orrs	r3, r4
 801f278:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801f27c:	4303      	orrs	r3, r0
 801f27e:	800b      	strh	r3, [r1, #0]
 801f280:	e7b5      	b.n	801f1ee <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 801f282:	bf00      	nop
 801f284:	200155c8 	.word	0x200155c8
 801f288:	00fff800 	.word	0x00fff800

0801f28c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f28c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f290:	b097      	sub	sp, #92	; 0x5c
 801f292:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 801f296:	9214      	str	r2, [sp, #80]	; 0x50
 801f298:	9309      	str	r3, [sp, #36]	; 0x24
 801f29a:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801f29c:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801f2a0:	910d      	str	r1, [sp, #52]	; 0x34
 801f2a2:	930f      	str	r3, [sp, #60]	; 0x3c
 801f2a4:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 801f2a8:	9015      	str	r0, [sp, #84]	; 0x54
 801f2aa:	6850      	ldr	r0, [r2, #4]
 801f2ac:	6812      	ldr	r2, [r2, #0]
 801f2ae:	fb00 1303 	mla	r3, r0, r3, r1
 801f2b2:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801f2b6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f2b8:	689b      	ldr	r3, [r3, #8]
 801f2ba:	3301      	adds	r3, #1
 801f2bc:	f023 0301 	bic.w	r3, r3, #1
 801f2c0:	930a      	str	r3, [sp, #40]	; 0x28
 801f2c2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f2c4:	681f      	ldr	r7, [r3, #0]
 801f2c6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f2c8:	2b00      	cmp	r3, #0
 801f2ca:	dc03      	bgt.n	801f2d4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801f2cc:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801f2ce:	2b00      	cmp	r3, #0
 801f2d0:	f340 8287 	ble.w	801f7e2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 801f2d4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f2d6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f2da:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f2de:	1e48      	subs	r0, r1, #1
 801f2e0:	f102 3cff 	add.w	ip, r2, #4294967295
 801f2e4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f2e6:	2b00      	cmp	r3, #0
 801f2e8:	f340 80c4 	ble.w	801f474 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801f2ec:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801f2f0:	ea4f 4326 	mov.w	r3, r6, asr #16
 801f2f4:	d406      	bmi.n	801f304 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801f2f6:	4586      	cmp	lr, r0
 801f2f8:	da04      	bge.n	801f304 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801f2fa:	2b00      	cmp	r3, #0
 801f2fc:	db02      	blt.n	801f304 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801f2fe:	4563      	cmp	r3, ip
 801f300:	f2c0 80b9 	blt.w	801f476 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 801f304:	f11e 0e01 	adds.w	lr, lr, #1
 801f308:	f100 80aa 	bmi.w	801f460 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801f30c:	4571      	cmp	r1, lr
 801f30e:	f2c0 80a7 	blt.w	801f460 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801f312:	3301      	adds	r3, #1
 801f314:	f100 80a4 	bmi.w	801f460 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801f318:	429a      	cmp	r2, r3
 801f31a:	f2c0 80a1 	blt.w	801f460 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801f31e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f320:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 801f324:	930e      	str	r3, [sp, #56]	; 0x38
 801f326:	46c8      	mov	r8, r9
 801f328:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f32a:	2b00      	cmp	r3, #0
 801f32c:	f340 80c3 	ble.w	801f4b6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801f330:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f332:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801f336:	1423      	asrs	r3, r4, #16
 801f338:	ea4f 4026 	mov.w	r0, r6, asr #16
 801f33c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801f340:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801f344:	f100 814d 	bmi.w	801f5e2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801f348:	f10c 3bff 	add.w	fp, ip, #4294967295
 801f34c:	455b      	cmp	r3, fp
 801f34e:	f280 8148 	bge.w	801f5e2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801f352:	2800      	cmp	r0, #0
 801f354:	f2c0 8145 	blt.w	801f5e2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801f358:	f10e 3bff 	add.w	fp, lr, #4294967295
 801f35c:	4558      	cmp	r0, fp
 801f35e:	f280 8140 	bge.w	801f5e2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801f362:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801f364:	fb00 3305 	mla	r3, r0, r5, r3
 801f368:	0858      	lsrs	r0, r3, #1
 801f36a:	07dd      	lsls	r5, r3, #31
 801f36c:	f817 c000 	ldrb.w	ip, [r7, r0]
 801f370:	bf54      	ite	pl
 801f372:	f00c 0c0f 	andpl.w	ip, ip, #15
 801f376:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801f37a:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801f37e:	fa5f fc8c 	uxtb.w	ip, ip
 801f382:	2a00      	cmp	r2, #0
 801f384:	f000 80db 	beq.w	801f53e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 801f388:	1c58      	adds	r0, r3, #1
 801f38a:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801f38e:	07c0      	lsls	r0, r0, #31
 801f390:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801f394:	bf54      	ite	pl
 801f396:	f00e 0e0f 	andpl.w	lr, lr, #15
 801f39a:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801f39e:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801f3a2:	fa5f f08e 	uxtb.w	r0, lr
 801f3a6:	9010      	str	r0, [sp, #64]	; 0x40
 801f3a8:	b1c9      	cbz	r1, 801f3de <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801f3aa:	4453      	add	r3, sl
 801f3ac:	0858      	lsrs	r0, r3, #1
 801f3ae:	07dd      	lsls	r5, r3, #31
 801f3b0:	5c38      	ldrb	r0, [r7, r0]
 801f3b2:	bf54      	ite	pl
 801f3b4:	f000 000f 	andpl.w	r0, r0, #15
 801f3b8:	1100      	asrmi	r0, r0, #4
 801f3ba:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801f3be:	3301      	adds	r3, #1
 801f3c0:	b2c0      	uxtb	r0, r0
 801f3c2:	900b      	str	r0, [sp, #44]	; 0x2c
 801f3c4:	0858      	lsrs	r0, r3, #1
 801f3c6:	07dd      	lsls	r5, r3, #31
 801f3c8:	f817 e000 	ldrb.w	lr, [r7, r0]
 801f3cc:	bf54      	ite	pl
 801f3ce:	f00e 030f 	andpl.w	r3, lr, #15
 801f3d2:	ea4f 132e 	movmi.w	r3, lr, asr #4
 801f3d6:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801f3da:	b2db      	uxtb	r3, r3
 801f3dc:	9311      	str	r3, [sp, #68]	; 0x44
 801f3de:	b292      	uxth	r2, r2
 801f3e0:	b289      	uxth	r1, r1
 801f3e2:	fb02 f301 	mul.w	r3, r2, r1
 801f3e6:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801f3ea:	0112      	lsls	r2, r2, #4
 801f3ec:	b289      	uxth	r1, r1
 801f3ee:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801f3f2:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801f3f4:	1ad2      	subs	r2, r2, r3
 801f3f6:	1a40      	subs	r0, r0, r1
 801f3f8:	b292      	uxth	r2, r2
 801f3fa:	436a      	muls	r2, r5
 801f3fc:	b280      	uxth	r0, r0
 801f3fe:	fb0c 2c00 	mla	ip, ip, r0, r2
 801f402:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801f404:	fb01 c102 	mla	r1, r1, r2, ip
 801f408:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801f40a:	fb03 1302 	mla	r3, r3, r2, r1
 801f40e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f412:	b1db      	cbz	r3, 801f44c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801f414:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801f416:	4353      	muls	r3, r2
 801f418:	1c5a      	adds	r2, r3, #1
 801f41a:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801f41e:	4ac6      	ldr	r2, [pc, #792]	; (801f738 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 801f420:	121b      	asrs	r3, r3, #8
 801f422:	6812      	ldr	r2, [r2, #0]
 801f424:	2bff      	cmp	r3, #255	; 0xff
 801f426:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801f42a:	f040 8099 	bne.w	801f560 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 801f42e:	0953      	lsrs	r3, r2, #5
 801f430:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801f434:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f438:	f02c 0c07 	bic.w	ip, ip, #7
 801f43c:	ea43 0c0c 	orr.w	ip, r3, ip
 801f440:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801f444:	ea4c 0202 	orr.w	r2, ip, r2
 801f448:	f8a8 2000 	strh.w	r2, [r8]
 801f44c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801f44e:	441c      	add	r4, r3
 801f450:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f452:	441e      	add	r6, r3
 801f454:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f456:	3b01      	subs	r3, #1
 801f458:	f108 0802 	add.w	r8, r8, #2
 801f45c:	930e      	str	r3, [sp, #56]	; 0x38
 801f45e:	e763      	b.n	801f328 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801f460:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801f462:	441c      	add	r4, r3
 801f464:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f466:	441e      	add	r6, r3
 801f468:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f46a:	3b01      	subs	r3, #1
 801f46c:	9309      	str	r3, [sp, #36]	; 0x24
 801f46e:	f109 0902 	add.w	r9, r9, #2
 801f472:	e737      	b.n	801f2e4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801f474:	d024      	beq.n	801f4c0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801f476:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f478:	9823      	ldr	r0, [sp, #140]	; 0x8c
 801f47a:	3b01      	subs	r3, #1
 801f47c:	fb00 4003 	mla	r0, r0, r3, r4
 801f480:	1400      	asrs	r0, r0, #16
 801f482:	f53f af4c 	bmi.w	801f31e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f486:	3901      	subs	r1, #1
 801f488:	4288      	cmp	r0, r1
 801f48a:	f6bf af48 	bge.w	801f31e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f48e:	9924      	ldr	r1, [sp, #144]	; 0x90
 801f490:	fb01 6303 	mla	r3, r1, r3, r6
 801f494:	141b      	asrs	r3, r3, #16
 801f496:	f53f af42 	bmi.w	801f31e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f49a:	3a01      	subs	r2, #1
 801f49c:	4293      	cmp	r3, r2
 801f49e:	f6bf af3e 	bge.w	801f31e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f4a2:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801f4a6:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801f4aa:	930e      	str	r3, [sp, #56]	; 0x38
 801f4ac:	46c8      	mov	r8, r9
 801f4ae:	f1bb 0f00 	cmp.w	fp, #0
 801f4b2:	f300 80b7 	bgt.w	801f624 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801f4b6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f4b8:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801f4bc:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801f4c0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f4c2:	2b00      	cmp	r3, #0
 801f4c4:	f340 818d 	ble.w	801f7e2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 801f4c8:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f4cc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801f4d0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f4d4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f4d6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f4da:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f4de:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f4e2:	eef0 6a62 	vmov.f32	s13, s5
 801f4e6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f4ea:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f4ee:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f4f2:	ee16 4a90 	vmov	r4, s13
 801f4f6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f4fa:	eef0 6a43 	vmov.f32	s13, s6
 801f4fe:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f502:	ee12 2a90 	vmov	r2, s5
 801f506:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f50a:	fb92 f3f3 	sdiv	r3, r2, r3
 801f50e:	ee13 2a10 	vmov	r2, s6
 801f512:	9323      	str	r3, [sp, #140]	; 0x8c
 801f514:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f516:	fb92 f3f3 	sdiv	r3, r2, r3
 801f51a:	9324      	str	r3, [sp, #144]	; 0x90
 801f51c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f51e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801f520:	3b01      	subs	r3, #1
 801f522:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f526:	930d      	str	r3, [sp, #52]	; 0x34
 801f528:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f52a:	bf08      	it	eq
 801f52c:	4613      	moveq	r3, r2
 801f52e:	ee16 6a90 	vmov	r6, s13
 801f532:	9309      	str	r3, [sp, #36]	; 0x24
 801f534:	eeb0 3a67 	vmov.f32	s6, s15
 801f538:	eef0 2a47 	vmov.f32	s5, s14
 801f53c:	e6c3      	b.n	801f2c6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801f53e:	2900      	cmp	r1, #0
 801f540:	f43f af4d 	beq.w	801f3de <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801f544:	eb0a 0003 	add.w	r0, sl, r3
 801f548:	0843      	lsrs	r3, r0, #1
 801f54a:	07c0      	lsls	r0, r0, #31
 801f54c:	5cfb      	ldrb	r3, [r7, r3]
 801f54e:	bf54      	ite	pl
 801f550:	f003 030f 	andpl.w	r3, r3, #15
 801f554:	111b      	asrmi	r3, r3, #4
 801f556:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801f55a:	b2db      	uxtb	r3, r3
 801f55c:	930b      	str	r3, [sp, #44]	; 0x2c
 801f55e:	e73e      	b.n	801f3de <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801f560:	f8b8 e000 	ldrh.w	lr, [r8]
 801f564:	fa1f fb83 	uxth.w	fp, r3
 801f568:	ea4f 202e 	mov.w	r0, lr, asr #8
 801f56c:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801f570:	43db      	mvns	r3, r3
 801f572:	b2db      	uxtb	r3, r3
 801f574:	fb11 f10b 	smulbb	r1, r1, fp
 801f578:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801f57c:	fb00 1003 	mla	r0, r0, r3, r1
 801f580:	fa5f fc8c 	uxtb.w	ip, ip
 801f584:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801f588:	b2d2      	uxtb	r2, r2
 801f58a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801f58e:	b280      	uxth	r0, r0
 801f590:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801f594:	fb1c fc0b 	smulbb	ip, ip, fp
 801f598:	fa5f fe8e 	uxtb.w	lr, lr
 801f59c:	fb12 fb0b 	smulbb	fp, r2, fp
 801f5a0:	fb01 cc03 	mla	ip, r1, r3, ip
 801f5a4:	fb0e bb03 	mla	fp, lr, r3, fp
 801f5a8:	1c43      	adds	r3, r0, #1
 801f5aa:	fa1f fc8c 	uxth.w	ip, ip
 801f5ae:	fa1f fb8b 	uxth.w	fp, fp
 801f5b2:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801f5b6:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 801f5ba:	f10c 0101 	add.w	r1, ip, #1
 801f5be:	f10b 0001 	add.w	r0, fp, #1
 801f5c2:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801f5c6:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801f5ca:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801f5ce:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801f5d2:	4318      	orrs	r0, r3
 801f5d4:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801f5d8:	ea40 000c 	orr.w	r0, r0, ip
 801f5dc:	f8a8 0000 	strh.w	r0, [r8]
 801f5e0:	e734      	b.n	801f44c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801f5e2:	f113 0b01 	adds.w	fp, r3, #1
 801f5e6:	f53f af31 	bmi.w	801f44c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801f5ea:	45dc      	cmp	ip, fp
 801f5ec:	f6ff af2e 	blt.w	801f44c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801f5f0:	f110 0b01 	adds.w	fp, r0, #1
 801f5f4:	f53f af2a 	bmi.w	801f44c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801f5f8:	45de      	cmp	lr, fp
 801f5fa:	f6ff af27 	blt.w	801f44c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801f5fe:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801f600:	9302      	str	r3, [sp, #8]
 801f602:	fa0f f38e 	sxth.w	r3, lr
 801f606:	9301      	str	r3, [sp, #4]
 801f608:	fa0f f38c 	sxth.w	r3, ip
 801f60c:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801f610:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801f614:	9300      	str	r3, [sp, #0]
 801f616:	463a      	mov	r2, r7
 801f618:	4653      	mov	r3, sl
 801f61a:	4641      	mov	r1, r8
 801f61c:	9815      	ldr	r0, [sp, #84]	; 0x54
 801f61e:	f7ff fd4d 	bl	801f0bc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 801f622:	e713      	b.n	801f44c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801f624:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801f626:	1422      	asrs	r2, r4, #16
 801f628:	1433      	asrs	r3, r6, #16
 801f62a:	fb05 2303 	mla	r3, r5, r3, r2
 801f62e:	085a      	lsrs	r2, r3, #1
 801f630:	07dd      	lsls	r5, r3, #31
 801f632:	5cba      	ldrb	r2, [r7, r2]
 801f634:	bf54      	ite	pl
 801f636:	f002 020f 	andpl.w	r2, r2, #15
 801f63a:	1112      	asrmi	r2, r2, #4
 801f63c:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801f640:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801f644:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801f648:	b2d2      	uxtb	r2, r2
 801f64a:	2900      	cmp	r1, #0
 801f64c:	d076      	beq.n	801f73c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801f64e:	f103 0e01 	add.w	lr, r3, #1
 801f652:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 801f656:	f01e 0f01 	tst.w	lr, #1
 801f65a:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801f65e:	bf0c      	ite	eq
 801f660:	f00c 0c0f 	andeq.w	ip, ip, #15
 801f664:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 801f668:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801f66c:	fa5f f58c 	uxtb.w	r5, ip
 801f670:	9512      	str	r5, [sp, #72]	; 0x48
 801f672:	b300      	cbz	r0, 801f6b6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801f674:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801f676:	442b      	add	r3, r5
 801f678:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801f67c:	07dd      	lsls	r5, r3, #31
 801f67e:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801f682:	bf54      	ite	pl
 801f684:	f00c 0c0f 	andpl.w	ip, ip, #15
 801f688:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801f68c:	3301      	adds	r3, #1
 801f68e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801f692:	fa5f f58c 	uxtb.w	r5, ip
 801f696:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801f69a:	950c      	str	r5, [sp, #48]	; 0x30
 801f69c:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801f6a0:	07dd      	lsls	r5, r3, #31
 801f6a2:	bf54      	ite	pl
 801f6a4:	f00c 0c0f 	andpl.w	ip, ip, #15
 801f6a8:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801f6ac:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801f6b0:	fa5f f38c 	uxtb.w	r3, ip
 801f6b4:	9313      	str	r3, [sp, #76]	; 0x4c
 801f6b6:	b289      	uxth	r1, r1
 801f6b8:	b280      	uxth	r0, r0
 801f6ba:	fb01 f300 	mul.w	r3, r1, r0
 801f6be:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 801f6c2:	0109      	lsls	r1, r1, #4
 801f6c4:	b280      	uxth	r0, r0
 801f6c6:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 801f6ca:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801f6cc:	1ac9      	subs	r1, r1, r3
 801f6ce:	ebac 0c00 	sub.w	ip, ip, r0
 801f6d2:	b289      	uxth	r1, r1
 801f6d4:	4369      	muls	r1, r5
 801f6d6:	fa1f fc8c 	uxth.w	ip, ip
 801f6da:	fb02 120c 	mla	r2, r2, ip, r1
 801f6de:	990c      	ldr	r1, [sp, #48]	; 0x30
 801f6e0:	fb00 2001 	mla	r0, r0, r1, r2
 801f6e4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801f6e6:	fb03 0302 	mla	r3, r3, r2, r0
 801f6ea:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f6ee:	b1d3      	cbz	r3, 801f726 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 801f6f0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801f6f2:	4353      	muls	r3, r2
 801f6f4:	1c5a      	adds	r2, r3, #1
 801f6f6:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801f6fa:	4a0f      	ldr	r2, [pc, #60]	; (801f738 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 801f6fc:	121b      	asrs	r3, r3, #8
 801f6fe:	6812      	ldr	r2, [r2, #0]
 801f700:	2bff      	cmp	r3, #255	; 0xff
 801f702:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801f706:	d12d      	bne.n	801f764 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801f708:	0953      	lsrs	r3, r2, #5
 801f70a:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801f70e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f712:	f02c 0c07 	bic.w	ip, ip, #7
 801f716:	ea43 0c0c 	orr.w	ip, r3, ip
 801f71a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801f71e:	ea4c 0202 	orr.w	r2, ip, r2
 801f722:	f8a8 2000 	strh.w	r2, [r8]
 801f726:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801f728:	441c      	add	r4, r3
 801f72a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f72c:	f108 0802 	add.w	r8, r8, #2
 801f730:	441e      	add	r6, r3
 801f732:	f10b 3bff 	add.w	fp, fp, #4294967295
 801f736:	e6ba      	b.n	801f4ae <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 801f738:	200155c8 	.word	0x200155c8
 801f73c:	2800      	cmp	r0, #0
 801f73e:	d0ba      	beq.n	801f6b6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801f740:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801f742:	442b      	add	r3, r5
 801f744:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801f748:	07db      	lsls	r3, r3, #31
 801f74a:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801f74e:	bf54      	ite	pl
 801f750:	f00c 0c0f 	andpl.w	ip, ip, #15
 801f754:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801f758:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801f75c:	fa5f f38c 	uxtb.w	r3, ip
 801f760:	930c      	str	r3, [sp, #48]	; 0x30
 801f762:	e7a8      	b.n	801f6b6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801f764:	f8b8 e000 	ldrh.w	lr, [r8]
 801f768:	fa1f fa83 	uxth.w	sl, r3
 801f76c:	ea4f 202e 	mov.w	r0, lr, asr #8
 801f770:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801f774:	43db      	mvns	r3, r3
 801f776:	b2db      	uxtb	r3, r3
 801f778:	fb11 f10a 	smulbb	r1, r1, sl
 801f77c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801f780:	fb00 1003 	mla	r0, r0, r3, r1
 801f784:	b2d2      	uxtb	r2, r2
 801f786:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801f78a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801f78e:	fa5f fe8e 	uxtb.w	lr, lr
 801f792:	fb12 f20a 	smulbb	r2, r2, sl
 801f796:	fb0e 2203 	mla	r2, lr, r3, r2
 801f79a:	fa5f fc8c 	uxtb.w	ip, ip
 801f79e:	b280      	uxth	r0, r0
 801f7a0:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801f7a4:	b292      	uxth	r2, r2
 801f7a6:	fb1c fc0a 	smulbb	ip, ip, sl
 801f7aa:	fb01 cc03 	mla	ip, r1, r3, ip
 801f7ae:	1c43      	adds	r3, r0, #1
 801f7b0:	1c51      	adds	r1, r2, #1
 801f7b2:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801f7b6:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 801f7ba:	fa1f fc8c 	uxth.w	ip, ip
 801f7be:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801f7c2:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801f7c6:	4308      	orrs	r0, r1
 801f7c8:	f10c 0101 	add.w	r1, ip, #1
 801f7cc:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801f7d0:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801f7d4:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801f7d8:	ea40 000c 	orr.w	r0, r0, ip
 801f7dc:	f8a8 0000 	strh.w	r0, [r8]
 801f7e0:	e7a1      	b.n	801f726 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 801f7e2:	b017      	add	sp, #92	; 0x5c
 801f7e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f7e8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 801f7e8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801f7ec:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 801f7f0:	2d00      	cmp	r5, #0
 801f7f2:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801f7f6:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801f7fa:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 801f7fe:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 801f802:	fb05 0e03 	mla	lr, r5, r3, r0
 801f806:	f2c0 80b0 	blt.w	801f96a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 801f80a:	45a9      	cmp	r9, r5
 801f80c:	f340 80ad 	ble.w	801f96a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 801f810:	2800      	cmp	r0, #0
 801f812:	f2c0 80a8 	blt.w	801f966 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 801f816:	4580      	cmp	r8, r0
 801f818:	f340 80a5 	ble.w	801f966 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 801f81c:	ea4f 045e 	mov.w	r4, lr, lsr #1
 801f820:	f01e 0f01 	tst.w	lr, #1
 801f824:	5d16      	ldrb	r6, [r2, r4]
 801f826:	bf0c      	ite	eq
 801f828:	f006 060f 	andeq.w	r6, r6, #15
 801f82c:	1136      	asrne	r6, r6, #4
 801f82e:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801f832:	b2f6      	uxtb	r6, r6
 801f834:	1c44      	adds	r4, r0, #1
 801f836:	f100 809b 	bmi.w	801f970 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 801f83a:	45a0      	cmp	r8, r4
 801f83c:	f340 8098 	ble.w	801f970 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 801f840:	2f00      	cmp	r7, #0
 801f842:	f000 8097 	beq.w	801f974 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 801f846:	f10e 0a01 	add.w	sl, lr, #1
 801f84a:	ea4f 045a 	mov.w	r4, sl, lsr #1
 801f84e:	f01a 0f01 	tst.w	sl, #1
 801f852:	5d14      	ldrb	r4, [r2, r4]
 801f854:	bf0c      	ite	eq
 801f856:	f004 040f 	andeq.w	r4, r4, #15
 801f85a:	1124      	asrne	r4, r4, #4
 801f85c:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801f860:	b2e4      	uxtb	r4, r4
 801f862:	3501      	adds	r5, #1
 801f864:	f100 808a 	bmi.w	801f97c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 801f868:	45a9      	cmp	r9, r5
 801f86a:	f340 8087 	ble.w	801f97c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 801f86e:	f1bc 0f00 	cmp.w	ip, #0
 801f872:	f000 8086 	beq.w	801f982 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 801f876:	2800      	cmp	r0, #0
 801f878:	db7e      	blt.n	801f978 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 801f87a:	4580      	cmp	r8, r0
 801f87c:	dd7c      	ble.n	801f978 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 801f87e:	eb03 090e 	add.w	r9, r3, lr
 801f882:	ea4f 0559 	mov.w	r5, r9, lsr #1
 801f886:	f019 0f01 	tst.w	r9, #1
 801f88a:	5d55      	ldrb	r5, [r2, r5]
 801f88c:	bf0c      	ite	eq
 801f88e:	f005 050f 	andeq.w	r5, r5, #15
 801f892:	112d      	asrne	r5, r5, #4
 801f894:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 801f898:	b2ed      	uxtb	r5, r5
 801f89a:	3001      	adds	r0, #1
 801f89c:	d474      	bmi.n	801f988 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801f89e:	4580      	cmp	r8, r0
 801f8a0:	dd72      	ble.n	801f988 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801f8a2:	2f00      	cmp	r7, #0
 801f8a4:	d072      	beq.n	801f98c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 801f8a6:	3301      	adds	r3, #1
 801f8a8:	449e      	add	lr, r3
 801f8aa:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801f8ae:	f01e 0f01 	tst.w	lr, #1
 801f8b2:	5cd0      	ldrb	r0, [r2, r3]
 801f8b4:	bf0c      	ite	eq
 801f8b6:	f000 000f 	andeq.w	r0, r0, #15
 801f8ba:	1100      	asrne	r0, r0, #4
 801f8bc:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801f8c0:	b2c3      	uxtb	r3, r0
 801f8c2:	b2ba      	uxth	r2, r7
 801f8c4:	fa1f fc8c 	uxth.w	ip, ip
 801f8c8:	fb02 f00c 	mul.w	r0, r2, ip
 801f8cc:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 801f8d0:	0112      	lsls	r2, r2, #4
 801f8d2:	fa1f fc8c 	uxth.w	ip, ip
 801f8d6:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 801f8da:	1a12      	subs	r2, r2, r0
 801f8dc:	eba7 070c 	sub.w	r7, r7, ip
 801f8e0:	b292      	uxth	r2, r2
 801f8e2:	b2bf      	uxth	r7, r7
 801f8e4:	4362      	muls	r2, r4
 801f8e6:	fb06 2207 	mla	r2, r6, r7, r2
 801f8ea:	fb0c 2505 	mla	r5, ip, r5, r2
 801f8ee:	fb00 5303 	mla	r3, r0, r3, r5
 801f8f2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f8f6:	b3a3      	cbz	r3, 801f962 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 801f8f8:	4a25      	ldr	r2, [pc, #148]	; (801f990 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 801f8fa:	880e      	ldrh	r6, [r1, #0]
 801f8fc:	6815      	ldr	r5, [r2, #0]
 801f8fe:	1234      	asrs	r4, r6, #8
 801f900:	b29a      	uxth	r2, r3
 801f902:	f3c5 4007 	ubfx	r0, r5, #16, #8
 801f906:	43db      	mvns	r3, r3
 801f908:	b2db      	uxtb	r3, r3
 801f90a:	fb10 f002 	smulbb	r0, r0, r2
 801f90e:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801f912:	fb04 0403 	mla	r4, r4, r3, r0
 801f916:	f3c5 2707 	ubfx	r7, r5, #8, #8
 801f91a:	10f0      	asrs	r0, r6, #3
 801f91c:	b2ed      	uxtb	r5, r5
 801f91e:	00f6      	lsls	r6, r6, #3
 801f920:	fb17 f702 	smulbb	r7, r7, r2
 801f924:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801f928:	fb15 f202 	smulbb	r2, r5, r2
 801f92c:	b2f6      	uxtb	r6, r6
 801f92e:	b2a4      	uxth	r4, r4
 801f930:	fb00 7003 	mla	r0, r0, r3, r7
 801f934:	fb06 2303 	mla	r3, r6, r3, r2
 801f938:	b29a      	uxth	r2, r3
 801f93a:	1c63      	adds	r3, r4, #1
 801f93c:	b280      	uxth	r0, r0
 801f93e:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801f942:	1c53      	adds	r3, r2, #1
 801f944:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f948:	1c42      	adds	r2, r0, #1
 801f94a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801f94e:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801f952:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801f956:	0940      	lsrs	r0, r0, #5
 801f958:	4323      	orrs	r3, r4
 801f95a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801f95e:	4303      	orrs	r3, r0
 801f960:	800b      	strh	r3, [r1, #0]
 801f962:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801f966:	2600      	movs	r6, #0
 801f968:	e764      	b.n	801f834 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 801f96a:	2400      	movs	r4, #0
 801f96c:	4626      	mov	r6, r4
 801f96e:	e778      	b.n	801f862 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801f970:	2400      	movs	r4, #0
 801f972:	e776      	b.n	801f862 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801f974:	463c      	mov	r4, r7
 801f976:	e774      	b.n	801f862 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801f978:	2500      	movs	r5, #0
 801f97a:	e78e      	b.n	801f89a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 801f97c:	2300      	movs	r3, #0
 801f97e:	461d      	mov	r5, r3
 801f980:	e79f      	b.n	801f8c2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801f982:	4663      	mov	r3, ip
 801f984:	4665      	mov	r5, ip
 801f986:	e79c      	b.n	801f8c2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801f988:	2300      	movs	r3, #0
 801f98a:	e79a      	b.n	801f8c2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801f98c:	463b      	mov	r3, r7
 801f98e:	e798      	b.n	801f8c2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801f990:	200155c8 	.word	0x200155c8

0801f994 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f994:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f998:	b093      	sub	sp, #76	; 0x4c
 801f99a:	461d      	mov	r5, r3
 801f99c:	920c      	str	r2, [sp, #48]	; 0x30
 801f99e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801f9a0:	9107      	str	r1, [sp, #28]
 801f9a2:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801f9a6:	9011      	str	r0, [sp, #68]	; 0x44
 801f9a8:	6850      	ldr	r0, [r2, #4]
 801f9aa:	6812      	ldr	r2, [r2, #0]
 801f9ac:	fb00 1303 	mla	r3, r0, r3, r1
 801f9b0:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801f9b4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f9b6:	689b      	ldr	r3, [r3, #8]
 801f9b8:	3301      	adds	r3, #1
 801f9ba:	f023 0301 	bic.w	r3, r3, #1
 801f9be:	9306      	str	r3, [sp, #24]
 801f9c0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f9c2:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801f9c6:	681f      	ldr	r7, [r3, #0]
 801f9c8:	9b07      	ldr	r3, [sp, #28]
 801f9ca:	2b00      	cmp	r3, #0
 801f9cc:	dc03      	bgt.n	801f9d6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801f9ce:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f9d0:	2b00      	cmp	r3, #0
 801f9d2:	f340 8267 	ble.w	801fea4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 801f9d6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f9d8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f9dc:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f9e0:	1e48      	subs	r0, r1, #1
 801f9e2:	f102 3cff 	add.w	ip, r2, #4294967295
 801f9e6:	2d00      	cmp	r5, #0
 801f9e8:	f340 80b8 	ble.w	801fb5c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801f9ec:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801f9f0:	ea4f 4326 	mov.w	r3, r6, asr #16
 801f9f4:	d406      	bmi.n	801fa04 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801f9f6:	4586      	cmp	lr, r0
 801f9f8:	da04      	bge.n	801fa04 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801f9fa:	2b00      	cmp	r3, #0
 801f9fc:	db02      	blt.n	801fa04 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801f9fe:	4563      	cmp	r3, ip
 801fa00:	f2c0 80ad 	blt.w	801fb5e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 801fa04:	f11e 0e01 	adds.w	lr, lr, #1
 801fa08:	f100 80a0 	bmi.w	801fb4c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801fa0c:	4571      	cmp	r1, lr
 801fa0e:	f2c0 809d 	blt.w	801fb4c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801fa12:	3301      	adds	r3, #1
 801fa14:	f100 809a 	bmi.w	801fb4c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801fa18:	429a      	cmp	r2, r3
 801fa1a:	f2c0 8097 	blt.w	801fb4c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801fa1e:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 801fa22:	9509      	str	r5, [sp, #36]	; 0x24
 801fa24:	46c8      	mov	r8, r9
 801fa26:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fa28:	2b00      	cmp	r3, #0
 801fa2a:	f340 80b6 	ble.w	801fb9a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 801fa2e:	f3c4 3303 	ubfx	r3, r4, #12, #4
 801fa32:	9308      	str	r3, [sp, #32]
 801fa34:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801fa36:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801fa3a:	1423      	asrs	r3, r4, #16
 801fa3c:	ea4f 4026 	mov.w	r0, r6, asr #16
 801fa40:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801fa44:	f100 813e 	bmi.w	801fcc4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801fa48:	f10c 3bff 	add.w	fp, ip, #4294967295
 801fa4c:	455b      	cmp	r3, fp
 801fa4e:	f280 8139 	bge.w	801fcc4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801fa52:	2800      	cmp	r0, #0
 801fa54:	f2c0 8136 	blt.w	801fcc4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801fa58:	f10e 3bff 	add.w	fp, lr, #4294967295
 801fa5c:	4558      	cmp	r0, fp
 801fa5e:	f280 8131 	bge.w	801fcc4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801fa62:	9a06      	ldr	r2, [sp, #24]
 801fa64:	fb00 3302 	mla	r3, r0, r2, r3
 801fa68:	0858      	lsrs	r0, r3, #1
 801fa6a:	07da      	lsls	r2, r3, #31
 801fa6c:	f817 c000 	ldrb.w	ip, [r7, r0]
 801fa70:	9a08      	ldr	r2, [sp, #32]
 801fa72:	bf54      	ite	pl
 801fa74:	f00c 0c0f 	andpl.w	ip, ip, #15
 801fa78:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801fa7c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801fa80:	fa5f fc8c 	uxtb.w	ip, ip
 801fa84:	2a00      	cmp	r2, #0
 801fa86:	f000 80cb 	beq.w	801fc20 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801fa8a:	1c58      	adds	r0, r3, #1
 801fa8c:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801fa90:	07c0      	lsls	r0, r0, #31
 801fa92:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801fa96:	bf54      	ite	pl
 801fa98:	f00e 0e0f 	andpl.w	lr, lr, #15
 801fa9c:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801faa0:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801faa4:	fa5f fe8e 	uxtb.w	lr, lr
 801faa8:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 801faac:	b1b9      	cbz	r1, 801fade <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801faae:	4453      	add	r3, sl
 801fab0:	0858      	lsrs	r0, r3, #1
 801fab2:	07da      	lsls	r2, r3, #31
 801fab4:	5c38      	ldrb	r0, [r7, r0]
 801fab6:	bf54      	ite	pl
 801fab8:	f000 000f 	andpl.w	r0, r0, #15
 801fabc:	1100      	asrmi	r0, r0, #4
 801fabe:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801fac2:	b2c0      	uxtb	r0, r0
 801fac4:	900a      	str	r0, [sp, #40]	; 0x28
 801fac6:	1c58      	adds	r0, r3, #1
 801fac8:	0843      	lsrs	r3, r0, #1
 801faca:	07c2      	lsls	r2, r0, #31
 801facc:	5cfb      	ldrb	r3, [r7, r3]
 801face:	bf54      	ite	pl
 801fad0:	f003 030f 	andpl.w	r3, r3, #15
 801fad4:	111b      	asrmi	r3, r3, #4
 801fad6:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801fada:	b2db      	uxtb	r3, r3
 801fadc:	930e      	str	r3, [sp, #56]	; 0x38
 801fade:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801fae2:	b289      	uxth	r1, r1
 801fae4:	fb02 f301 	mul.w	r3, r2, r1
 801fae8:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801faec:	0112      	lsls	r2, r2, #4
 801faee:	b289      	uxth	r1, r1
 801faf0:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801faf4:	1a40      	subs	r0, r0, r1
 801faf6:	fa1f fe80 	uxth.w	lr, r0
 801fafa:	1ad2      	subs	r2, r2, r3
 801fafc:	980d      	ldr	r0, [sp, #52]	; 0x34
 801fafe:	b292      	uxth	r2, r2
 801fb00:	4342      	muls	r2, r0
 801fb02:	fb0c 2c0e 	mla	ip, ip, lr, r2
 801fb06:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801fb08:	fb01 c102 	mla	r1, r1, r2, ip
 801fb0c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801fb0e:	fb03 1302 	mla	r3, r3, r2, r1
 801fb12:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801fb16:	2bff      	cmp	r3, #255	; 0xff
 801fb18:	f040 8093 	bne.w	801fc42 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 801fb1c:	4bbe      	ldr	r3, [pc, #760]	; (801fe18 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801fb1e:	681a      	ldr	r2, [r3, #0]
 801fb20:	4bbe      	ldr	r3, [pc, #760]	; (801fe1c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 801fb22:	0951      	lsrs	r1, r2, #5
 801fb24:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 801fb28:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801fb2c:	430b      	orrs	r3, r1
 801fb2e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801fb32:	4313      	orrs	r3, r2
 801fb34:	f8a8 3000 	strh.w	r3, [r8]
 801fb38:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801fb3a:	441c      	add	r4, r3
 801fb3c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801fb3e:	441e      	add	r6, r3
 801fb40:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fb42:	3b01      	subs	r3, #1
 801fb44:	f108 0802 	add.w	r8, r8, #2
 801fb48:	9309      	str	r3, [sp, #36]	; 0x24
 801fb4a:	e76c      	b.n	801fa26 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801fb4c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801fb4e:	441c      	add	r4, r3
 801fb50:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801fb52:	3d01      	subs	r5, #1
 801fb54:	441e      	add	r6, r3
 801fb56:	f109 0902 	add.w	r9, r9, #2
 801fb5a:	e744      	b.n	801f9e6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801fb5c:	d021      	beq.n	801fba2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801fb5e:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801fb60:	1e6b      	subs	r3, r5, #1
 801fb62:	fb00 4003 	mla	r0, r0, r3, r4
 801fb66:	1400      	asrs	r0, r0, #16
 801fb68:	f53f af59 	bmi.w	801fa1e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801fb6c:	3901      	subs	r1, #1
 801fb6e:	4288      	cmp	r0, r1
 801fb70:	f6bf af55 	bge.w	801fa1e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801fb74:	9920      	ldr	r1, [sp, #128]	; 0x80
 801fb76:	fb01 6303 	mla	r3, r1, r3, r6
 801fb7a:	141b      	asrs	r3, r3, #16
 801fb7c:	f53f af4f 	bmi.w	801fa1e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801fb80:	3a01      	subs	r2, #1
 801fb82:	4293      	cmp	r3, r2
 801fb84:	f6bf af4b 	bge.w	801fa1e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801fb88:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801fb8c:	9308      	str	r3, [sp, #32]
 801fb8e:	46a8      	mov	r8, r5
 801fb90:	46ce      	mov	lr, r9
 801fb92:	f1b8 0f00 	cmp.w	r8, #0
 801fb96:	f300 80b5 	bgt.w	801fd04 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801fb9a:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801fb9e:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801fba2:	9b07      	ldr	r3, [sp, #28]
 801fba4:	2b00      	cmp	r3, #0
 801fba6:	f340 817d 	ble.w	801fea4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 801fbaa:	ee30 0a04 	vadd.f32	s0, s0, s8
 801fbae:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801fbb2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801fbb6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801fbb8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801fbbc:	ee31 1a05 	vadd.f32	s2, s2, s10
 801fbc0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801fbc4:	eef0 6a62 	vmov.f32	s13, s5
 801fbc8:	ee61 7a27 	vmul.f32	s15, s2, s15
 801fbcc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fbd0:	ee77 2a62 	vsub.f32	s5, s14, s5
 801fbd4:	ee16 4a90 	vmov	r4, s13
 801fbd8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801fbdc:	eef0 6a43 	vmov.f32	s13, s6
 801fbe0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801fbe4:	ee12 2a90 	vmov	r2, s5
 801fbe8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801fbec:	fb92 f3f3 	sdiv	r3, r2, r3
 801fbf0:	ee13 2a10 	vmov	r2, s6
 801fbf4:	931f      	str	r3, [sp, #124]	; 0x7c
 801fbf6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801fbf8:	fb92 f3f3 	sdiv	r3, r2, r3
 801fbfc:	9320      	str	r3, [sp, #128]	; 0x80
 801fbfe:	9b07      	ldr	r3, [sp, #28]
 801fc00:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801fc02:	3b01      	subs	r3, #1
 801fc04:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fc08:	9307      	str	r3, [sp, #28]
 801fc0a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801fc0c:	ee16 6a90 	vmov	r6, s13
 801fc10:	bf14      	ite	ne
 801fc12:	461d      	movne	r5, r3
 801fc14:	4615      	moveq	r5, r2
 801fc16:	eeb0 3a67 	vmov.f32	s6, s15
 801fc1a:	eef0 2a47 	vmov.f32	s5, s14
 801fc1e:	e6d3      	b.n	801f9c8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801fc20:	2900      	cmp	r1, #0
 801fc22:	f43f af5c 	beq.w	801fade <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801fc26:	eb0a 0003 	add.w	r0, sl, r3
 801fc2a:	0843      	lsrs	r3, r0, #1
 801fc2c:	07c0      	lsls	r0, r0, #31
 801fc2e:	5cfb      	ldrb	r3, [r7, r3]
 801fc30:	bf54      	ite	pl
 801fc32:	f003 030f 	andpl.w	r3, r3, #15
 801fc36:	111b      	asrmi	r3, r3, #4
 801fc38:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801fc3c:	b2db      	uxtb	r3, r3
 801fc3e:	930a      	str	r3, [sp, #40]	; 0x28
 801fc40:	e74d      	b.n	801fade <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801fc42:	2b00      	cmp	r3, #0
 801fc44:	f43f af78 	beq.w	801fb38 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801fc48:	4a73      	ldr	r2, [pc, #460]	; (801fe18 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801fc4a:	f8b8 c000 	ldrh.w	ip, [r8]
 801fc4e:	6810      	ldr	r0, [r2, #0]
 801fc50:	fa1f fe83 	uxth.w	lr, r3
 801fc54:	ea4f 212c 	mov.w	r1, ip, asr #8
 801fc58:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801fc5c:	43db      	mvns	r3, r3
 801fc5e:	b2db      	uxtb	r3, r3
 801fc60:	fb12 f20e 	smulbb	r2, r2, lr
 801fc64:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801fc68:	fb01 2103 	mla	r1, r1, r3, r2
 801fc6c:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 801fc70:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801fc74:	b2c0      	uxtb	r0, r0
 801fc76:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801fc7a:	fb1b fb0e 	smulbb	fp, fp, lr
 801fc7e:	b289      	uxth	r1, r1
 801fc80:	fb10 fe0e 	smulbb	lr, r0, lr
 801fc84:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801fc88:	fa5f fc8c 	uxtb.w	ip, ip
 801fc8c:	fb02 b203 	mla	r2, r2, r3, fp
 801fc90:	1c48      	adds	r0, r1, #1
 801fc92:	fb0c e303 	mla	r3, ip, r3, lr
 801fc96:	b292      	uxth	r2, r2
 801fc98:	b29b      	uxth	r3, r3
 801fc9a:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 801fc9e:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 801fca2:	f102 0b01 	add.w	fp, r2, #1
 801fca6:	1c59      	adds	r1, r3, #1
 801fca8:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801fcac:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801fcb0:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801fcb4:	0952      	lsrs	r2, r2, #5
 801fcb6:	4301      	orrs	r1, r0
 801fcb8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801fcbc:	4311      	orrs	r1, r2
 801fcbe:	f8a8 1000 	strh.w	r1, [r8]
 801fcc2:	e739      	b.n	801fb38 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801fcc4:	f113 0b01 	adds.w	fp, r3, #1
 801fcc8:	f53f af36 	bmi.w	801fb38 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801fccc:	45dc      	cmp	ip, fp
 801fcce:	f6ff af33 	blt.w	801fb38 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801fcd2:	f110 0b01 	adds.w	fp, r0, #1
 801fcd6:	f53f af2f 	bmi.w	801fb38 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801fcda:	45de      	cmp	lr, fp
 801fcdc:	f6ff af2c 	blt.w	801fb38 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801fce0:	9a08      	ldr	r2, [sp, #32]
 801fce2:	9302      	str	r3, [sp, #8]
 801fce4:	fa0f f38e 	sxth.w	r3, lr
 801fce8:	9301      	str	r3, [sp, #4]
 801fcea:	fa0f f38c 	sxth.w	r3, ip
 801fcee:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801fcf2:	9105      	str	r1, [sp, #20]
 801fcf4:	9300      	str	r3, [sp, #0]
 801fcf6:	463a      	mov	r2, r7
 801fcf8:	4653      	mov	r3, sl
 801fcfa:	4641      	mov	r1, r8
 801fcfc:	9811      	ldr	r0, [sp, #68]	; 0x44
 801fcfe:	f7ff fd73 	bl	801f7e8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 801fd02:	e719      	b.n	801fb38 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801fd04:	9906      	ldr	r1, [sp, #24]
 801fd06:	1422      	asrs	r2, r4, #16
 801fd08:	1433      	asrs	r3, r6, #16
 801fd0a:	fb01 2303 	mla	r3, r1, r3, r2
 801fd0e:	085a      	lsrs	r2, r3, #1
 801fd10:	07d9      	lsls	r1, r3, #31
 801fd12:	5cba      	ldrb	r2, [r7, r2]
 801fd14:	bf54      	ite	pl
 801fd16:	f002 020f 	andpl.w	r2, r2, #15
 801fd1a:	1112      	asrmi	r2, r2, #4
 801fd1c:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801fd20:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801fd24:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801fd28:	b2d2      	uxtb	r2, r2
 801fd2a:	2800      	cmp	r0, #0
 801fd2c:	d062      	beq.n	801fdf4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 801fd2e:	f103 0a01 	add.w	sl, r3, #1
 801fd32:	ea4f 015a 	mov.w	r1, sl, lsr #1
 801fd36:	f01a 0f01 	tst.w	sl, #1
 801fd3a:	5c79      	ldrb	r1, [r7, r1]
 801fd3c:	bf0c      	ite	eq
 801fd3e:	f001 010f 	andeq.w	r1, r1, #15
 801fd42:	1109      	asrne	r1, r1, #4
 801fd44:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801fd48:	b2c9      	uxtb	r1, r1
 801fd4a:	910f      	str	r1, [sp, #60]	; 0x3c
 801fd4c:	f1bc 0f00 	cmp.w	ip, #0
 801fd50:	d019      	beq.n	801fd86 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 801fd52:	9908      	ldr	r1, [sp, #32]
 801fd54:	440b      	add	r3, r1
 801fd56:	0859      	lsrs	r1, r3, #1
 801fd58:	f013 0f01 	tst.w	r3, #1
 801fd5c:	5c79      	ldrb	r1, [r7, r1]
 801fd5e:	bf0c      	ite	eq
 801fd60:	f001 010f 	andeq.w	r1, r1, #15
 801fd64:	1109      	asrne	r1, r1, #4
 801fd66:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801fd6a:	b2c9      	uxtb	r1, r1
 801fd6c:	3301      	adds	r3, #1
 801fd6e:	910b      	str	r1, [sp, #44]	; 0x2c
 801fd70:	0859      	lsrs	r1, r3, #1
 801fd72:	07db      	lsls	r3, r3, #31
 801fd74:	5c79      	ldrb	r1, [r7, r1]
 801fd76:	bf54      	ite	pl
 801fd78:	f001 010f 	andpl.w	r1, r1, #15
 801fd7c:	1109      	asrmi	r1, r1, #4
 801fd7e:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801fd82:	b2c9      	uxtb	r1, r1
 801fd84:	9110      	str	r1, [sp, #64]	; 0x40
 801fd86:	b280      	uxth	r0, r0
 801fd88:	fa1f fc8c 	uxth.w	ip, ip
 801fd8c:	fb00 f30c 	mul.w	r3, r0, ip
 801fd90:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 801fd94:	0100      	lsls	r0, r0, #4
 801fd96:	fa1f fc8c 	uxth.w	ip, ip
 801fd9a:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 801fd9e:	eba1 010c 	sub.w	r1, r1, ip
 801fda2:	fa1f fa81 	uxth.w	sl, r1
 801fda6:	1ac0      	subs	r0, r0, r3
 801fda8:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801fdaa:	b280      	uxth	r0, r0
 801fdac:	4348      	muls	r0, r1
 801fdae:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801fdb0:	fb02 020a 	mla	r2, r2, sl, r0
 801fdb4:	fb0c 2c01 	mla	ip, ip, r1, r2
 801fdb8:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801fdba:	fb03 c302 	mla	r3, r3, r2, ip
 801fdbe:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801fdc2:	2bff      	cmp	r3, #255	; 0xff
 801fdc4:	d12c      	bne.n	801fe20 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 801fdc6:	4b14      	ldr	r3, [pc, #80]	; (801fe18 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801fdc8:	681a      	ldr	r2, [r3, #0]
 801fdca:	4b14      	ldr	r3, [pc, #80]	; (801fe1c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 801fdcc:	0951      	lsrs	r1, r2, #5
 801fdce:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 801fdd2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801fdd6:	430b      	orrs	r3, r1
 801fdd8:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801fddc:	4313      	orrs	r3, r2
 801fdde:	f8ae 3000 	strh.w	r3, [lr]
 801fde2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801fde4:	441c      	add	r4, r3
 801fde6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801fde8:	f10e 0e02 	add.w	lr, lr, #2
 801fdec:	441e      	add	r6, r3
 801fdee:	f108 38ff 	add.w	r8, r8, #4294967295
 801fdf2:	e6ce      	b.n	801fb92 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801fdf4:	f1bc 0f00 	cmp.w	ip, #0
 801fdf8:	d0c5      	beq.n	801fd86 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 801fdfa:	9908      	ldr	r1, [sp, #32]
 801fdfc:	440b      	add	r3, r1
 801fdfe:	0859      	lsrs	r1, r3, #1
 801fe00:	07db      	lsls	r3, r3, #31
 801fe02:	5c79      	ldrb	r1, [r7, r1]
 801fe04:	bf54      	ite	pl
 801fe06:	f001 010f 	andpl.w	r1, r1, #15
 801fe0a:	1109      	asrmi	r1, r1, #4
 801fe0c:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801fe10:	b2c9      	uxtb	r1, r1
 801fe12:	910b      	str	r1, [sp, #44]	; 0x2c
 801fe14:	e7b7      	b.n	801fd86 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 801fe16:	bf00      	nop
 801fe18:	200155c8 	.word	0x200155c8
 801fe1c:	fffff800 	.word	0xfffff800
 801fe20:	2b00      	cmp	r3, #0
 801fe22:	d0de      	beq.n	801fde2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801fe24:	4a21      	ldr	r2, [pc, #132]	; (801feac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 801fe26:	f8be c000 	ldrh.w	ip, [lr]
 801fe2a:	6810      	ldr	r0, [r2, #0]
 801fe2c:	fa1f fa83 	uxth.w	sl, r3
 801fe30:	ea4f 212c 	mov.w	r1, ip, asr #8
 801fe34:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801fe38:	43db      	mvns	r3, r3
 801fe3a:	b2db      	uxtb	r3, r3
 801fe3c:	fb12 f20a 	smulbb	r2, r2, sl
 801fe40:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801fe44:	fb01 2103 	mla	r1, r1, r3, r2
 801fe48:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 801fe4c:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801fe50:	b2c0      	uxtb	r0, r0
 801fe52:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801fe56:	fa5f fc8c 	uxtb.w	ip, ip
 801fe5a:	fb10 f00a 	smulbb	r0, r0, sl
 801fe5e:	fb0c 0003 	mla	r0, ip, r3, r0
 801fe62:	b289      	uxth	r1, r1
 801fe64:	fb1b fb0a 	smulbb	fp, fp, sl
 801fe68:	b280      	uxth	r0, r0
 801fe6a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801fe6e:	fb02 b203 	mla	r2, r2, r3, fp
 801fe72:	1c4b      	adds	r3, r1, #1
 801fe74:	f100 0b01 	add.w	fp, r0, #1
 801fe78:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801fe7c:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 801fe80:	b292      	uxth	r2, r2
 801fe82:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 801fe86:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801fe8a:	ea4b 0101 	orr.w	r1, fp, r1
 801fe8e:	f102 0b01 	add.w	fp, r2, #1
 801fe92:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801fe96:	0952      	lsrs	r2, r2, #5
 801fe98:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801fe9c:	4311      	orrs	r1, r2
 801fe9e:	f8ae 1000 	strh.w	r1, [lr]
 801fea2:	e79e      	b.n	801fde2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801fea4:	b013      	add	sp, #76	; 0x4c
 801fea6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801feaa:	bf00      	nop
 801feac:	200155c8 	.word	0x200155c8

0801feb0 <CRC_Lock>:
 801feb0:	b530      	push	{r4, r5, lr}
 801feb2:	4a20      	ldr	r2, [pc, #128]	; (801ff34 <CRC_Lock+0x84>)
 801feb4:	6813      	ldr	r3, [r2, #0]
 801feb6:	f023 0301 	bic.w	r3, r3, #1
 801feba:	6013      	str	r3, [r2, #0]
 801febc:	4b1e      	ldr	r3, [pc, #120]	; (801ff38 <CRC_Lock+0x88>)
 801febe:	681a      	ldr	r2, [r3, #0]
 801fec0:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 801fec4:	4022      	ands	r2, r4
 801fec6:	f24c 2540 	movw	r5, #49728	; 0xc240
 801feca:	42aa      	cmp	r2, r5
 801fecc:	d005      	beq.n	801feda <CRC_Lock+0x2a>
 801fece:	681b      	ldr	r3, [r3, #0]
 801fed0:	f24c 2270 	movw	r2, #49776	; 0xc270
 801fed4:	4023      	ands	r3, r4
 801fed6:	4293      	cmp	r3, r2
 801fed8:	d124      	bne.n	801ff24 <CRC_Lock+0x74>
 801feda:	4b18      	ldr	r3, [pc, #96]	; (801ff3c <CRC_Lock+0x8c>)
 801fedc:	681b      	ldr	r3, [r3, #0]
 801fede:	bb0b      	cbnz	r3, 801ff24 <CRC_Lock+0x74>
 801fee0:	4b17      	ldr	r3, [pc, #92]	; (801ff40 <CRC_Lock+0x90>)
 801fee2:	681a      	ldr	r2, [r3, #0]
 801fee4:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801fee8:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 801feec:	d00d      	beq.n	801ff0a <CRC_Lock+0x5a>
 801feee:	681a      	ldr	r2, [r3, #0]
 801fef0:	f240 4483 	movw	r4, #1155	; 0x483
 801fef4:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801fef8:	42a2      	cmp	r2, r4
 801fefa:	d006      	beq.n	801ff0a <CRC_Lock+0x5a>
 801fefc:	681b      	ldr	r3, [r3, #0]
 801fefe:	f240 4285 	movw	r2, #1157	; 0x485
 801ff02:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801ff06:	4293      	cmp	r3, r2
 801ff08:	d10c      	bne.n	801ff24 <CRC_Lock+0x74>
 801ff0a:	4b0e      	ldr	r3, [pc, #56]	; (801ff44 <CRC_Lock+0x94>)
 801ff0c:	2201      	movs	r2, #1
 801ff0e:	601a      	str	r2, [r3, #0]
 801ff10:	681a      	ldr	r2, [r3, #0]
 801ff12:	2a00      	cmp	r2, #0
 801ff14:	d1fc      	bne.n	801ff10 <CRC_Lock+0x60>
 801ff16:	4b0c      	ldr	r3, [pc, #48]	; (801ff48 <CRC_Lock+0x98>)
 801ff18:	6018      	str	r0, [r3, #0]
 801ff1a:	6818      	ldr	r0, [r3, #0]
 801ff1c:	1a43      	subs	r3, r0, r1
 801ff1e:	4258      	negs	r0, r3
 801ff20:	4158      	adcs	r0, r3
 801ff22:	bd30      	pop	{r4, r5, pc}
 801ff24:	4b09      	ldr	r3, [pc, #36]	; (801ff4c <CRC_Lock+0x9c>)
 801ff26:	2201      	movs	r2, #1
 801ff28:	601a      	str	r2, [r3, #0]
 801ff2a:	681a      	ldr	r2, [r3, #0]
 801ff2c:	2a00      	cmp	r2, #0
 801ff2e:	d1fc      	bne.n	801ff2a <CRC_Lock+0x7a>
 801ff30:	4b07      	ldr	r3, [pc, #28]	; (801ff50 <CRC_Lock+0xa0>)
 801ff32:	e7f1      	b.n	801ff18 <CRC_Lock+0x68>
 801ff34:	e0002000 	.word	0xe0002000
 801ff38:	e000ed00 	.word	0xe000ed00
 801ff3c:	e0042000 	.word	0xe0042000
 801ff40:	5c001000 	.word	0x5c001000
 801ff44:	58024c08 	.word	0x58024c08
 801ff48:	58024c00 	.word	0x58024c00
 801ff4c:	40023008 	.word	0x40023008
 801ff50:	40023000 	.word	0x40023000

0801ff54 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 801ff54:	6101      	str	r1, [r0, #16]
 801ff56:	4770      	bx	lr

0801ff58 <_ZN8touchgfx8Gestures4tickEv>:
 801ff58:	7b83      	ldrb	r3, [r0, #14]
 801ff5a:	b14b      	cbz	r3, 801ff70 <_ZN8touchgfx8Gestures4tickEv+0x18>
 801ff5c:	8903      	ldrh	r3, [r0, #8]
 801ff5e:	3301      	adds	r3, #1
 801ff60:	b29b      	uxth	r3, r3
 801ff62:	2b07      	cmp	r3, #7
 801ff64:	8103      	strh	r3, [r0, #8]
 801ff66:	bf81      	itttt	hi
 801ff68:	2300      	movhi	r3, #0
 801ff6a:	8143      	strhhi	r3, [r0, #10]
 801ff6c:	8183      	strhhi	r3, [r0, #12]
 801ff6e:	7383      	strbhi	r3, [r0, #14]
 801ff70:	4770      	bx	lr
	...

0801ff74 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 801ff74:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801ff78:	4698      	mov	r8, r3
 801ff7a:	8883      	ldrh	r3, [r0, #4]
 801ff7c:	f8ad 3006 	strh.w	r3, [sp, #6]
 801ff80:	eba8 0303 	sub.w	r3, r8, r3
 801ff84:	b21b      	sxth	r3, r3
 801ff86:	4604      	mov	r4, r0
 801ff88:	2b00      	cmp	r3, #0
 801ff8a:	4617      	mov	r7, r2
 801ff8c:	4a18      	ldr	r2, [pc, #96]	; (801fff0 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 801ff8e:	9200      	str	r2, [sp, #0]
 801ff90:	bfb8      	it	lt
 801ff92:	425b      	neglt	r3, r3
 801ff94:	8aa2      	ldrh	r2, [r4, #20]
 801ff96:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 801ff9a:	f8ad 800a 	strh.w	r8, [sp, #10]
 801ff9e:	b21b      	sxth	r3, r3
 801ffa0:	460e      	mov	r6, r1
 801ffa2:	4293      	cmp	r3, r2
 801ffa4:	88c1      	ldrh	r1, [r0, #6]
 801ffa6:	f8ad 1008 	strh.w	r1, [sp, #8]
 801ffaa:	f04f 0000 	mov.w	r0, #0
 801ffae:	f88d 0004 	strb.w	r0, [sp, #4]
 801ffb2:	f8ad 500c 	strh.w	r5, [sp, #12]
 801ffb6:	dc07      	bgt.n	801ffc8 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 801ffb8:	1a69      	subs	r1, r5, r1
 801ffba:	b209      	sxth	r1, r1
 801ffbc:	2900      	cmp	r1, #0
 801ffbe:	bfb8      	it	lt
 801ffc0:	4249      	neglt	r1, r1
 801ffc2:	b209      	sxth	r1, r1
 801ffc4:	428a      	cmp	r2, r1
 801ffc6:	da10      	bge.n	801ffea <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 801ffc8:	6920      	ldr	r0, [r4, #16]
 801ffca:	6803      	ldr	r3, [r0, #0]
 801ffcc:	4669      	mov	r1, sp
 801ffce:	685b      	ldr	r3, [r3, #4]
 801ffd0:	4798      	blx	r3
 801ffd2:	eba8 0606 	sub.w	r6, r8, r6
 801ffd6:	2300      	movs	r3, #0
 801ffd8:	1bef      	subs	r7, r5, r7
 801ffda:	2001      	movs	r0, #1
 801ffdc:	8123      	strh	r3, [r4, #8]
 801ffde:	8166      	strh	r6, [r4, #10]
 801ffe0:	81a7      	strh	r7, [r4, #12]
 801ffe2:	f8a4 8004 	strh.w	r8, [r4, #4]
 801ffe6:	80e5      	strh	r5, [r4, #6]
 801ffe8:	73a0      	strb	r0, [r4, #14]
 801ffea:	b004      	add	sp, #16
 801ffec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801fff0:	080243c0 	.word	0x080243c0

0801fff4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 801fff4:	b5f0      	push	{r4, r5, r6, r7, lr}
 801fff6:	461e      	mov	r6, r3
 801fff8:	1e4b      	subs	r3, r1, #1
 801fffa:	2b01      	cmp	r3, #1
 801fffc:	b085      	sub	sp, #20
 801fffe:	4604      	mov	r4, r0
 8020000:	460d      	mov	r5, r1
 8020002:	4617      	mov	r7, r2
 8020004:	d84b      	bhi.n	802009e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 8020006:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 802000a:	1cd3      	adds	r3, r2, #3
 802000c:	b29b      	uxth	r3, r3
 802000e:	2b06      	cmp	r3, #6
 8020010:	d916      	bls.n	8020040 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 8020012:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 80200b4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8020016:	f8cd c004 	str.w	ip, [sp, #4]
 802001a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 802001e:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8020022:	6900      	ldr	r0, [r0, #16]
 8020024:	f8ad 100c 	strh.w	r1, [sp, #12]
 8020028:	f04f 0c00 	mov.w	ip, #0
 802002c:	f88d c008 	strb.w	ip, [sp, #8]
 8020030:	f8ad 200a 	strh.w	r2, [sp, #10]
 8020034:	f8ad 300e 	strh.w	r3, [sp, #14]
 8020038:	6803      	ldr	r3, [r0, #0]
 802003a:	a901      	add	r1, sp, #4
 802003c:	689b      	ldr	r3, [r3, #8]
 802003e:	4798      	blx	r3
 8020040:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8020044:	1cd3      	adds	r3, r2, #3
 8020046:	b29b      	uxth	r3, r3
 8020048:	2b06      	cmp	r3, #6
 802004a:	d916      	bls.n	802007a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 802004c:	f8df c064 	ldr.w	ip, [pc, #100]	; 80200b4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8020050:	f8cd c004 	str.w	ip, [sp, #4]
 8020054:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8020058:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 802005c:	6920      	ldr	r0, [r4, #16]
 802005e:	f8ad 100c 	strh.w	r1, [sp, #12]
 8020062:	f04f 0c01 	mov.w	ip, #1
 8020066:	f88d c008 	strb.w	ip, [sp, #8]
 802006a:	f8ad 200a 	strh.w	r2, [sp, #10]
 802006e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8020072:	6803      	ldr	r3, [r0, #0]
 8020074:	a901      	add	r1, sp, #4
 8020076:	689b      	ldr	r3, [r3, #8]
 8020078:	4798      	blx	r3
 802007a:	4b0d      	ldr	r3, [pc, #52]	; (80200b0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 802007c:	9301      	str	r3, [sp, #4]
 802007e:	6920      	ldr	r0, [r4, #16]
 8020080:	f88d 5008 	strb.w	r5, [sp, #8]
 8020084:	2300      	movs	r3, #0
 8020086:	f8ad 700a 	strh.w	r7, [sp, #10]
 802008a:	f8ad 600c 	strh.w	r6, [sp, #12]
 802008e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8020092:	6803      	ldr	r3, [r0, #0]
 8020094:	a901      	add	r1, sp, #4
 8020096:	681b      	ldr	r3, [r3, #0]
 8020098:	4798      	blx	r3
 802009a:	b005      	add	sp, #20
 802009c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802009e:	2900      	cmp	r1, #0
 80200a0:	d1eb      	bne.n	802007a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80200a2:	80a2      	strh	r2, [r4, #4]
 80200a4:	80c6      	strh	r6, [r0, #6]
 80200a6:	60a1      	str	r1, [r4, #8]
 80200a8:	81a1      	strh	r1, [r4, #12]
 80200aa:	73a1      	strb	r1, [r4, #14]
 80200ac:	e7e5      	b.n	802007a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80200ae:	bf00      	nop
 80200b0:	080243ac 	.word	0x080243ac
 80200b4:	080243d4 	.word	0x080243d4

080200b8 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>:
 80200b8:	10c9      	asrs	r1, r1, #3
 80200ba:	2900      	cmp	r1, #0
 80200bc:	bfb8      	it	lt
 80200be:	4249      	neglt	r1, r1
 80200c0:	2801      	cmp	r0, #1
 80200c2:	d108      	bne.n	80200d6 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 80200c4:	f3c1 0008 	ubfx	r0, r1, #0, #9
 80200c8:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 80200cc:	4601      	mov	r1, r0
 80200ce:	dd02      	ble.n	80200d6 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 80200d0:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
 80200d4:	4770      	bx	lr
 80200d6:	29ff      	cmp	r1, #255	; 0xff
 80200d8:	bfa8      	it	ge
 80200da:	21ff      	movge	r1, #255	; 0xff
 80200dc:	4608      	mov	r0, r1
 80200de:	4770      	bx	lr

080200e0 <_ZN8touchgfx10Rasterizer6lineToEii>:
 80200e0:	b410      	push	{r4}
 80200e2:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 80200e6:	429c      	cmp	r4, r3
 80200e8:	d803      	bhi.n	80200f2 <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 80200ea:	f85d 4b04 	ldr.w	r4, [sp], #4
 80200ee:	f7ef b97d 	b.w	800f3ec <_ZN8touchgfx7Outline6lineToEii>
 80200f2:	f85d 4b04 	ldr.w	r4, [sp], #4
 80200f6:	4770      	bx	lr

080200f8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 80200f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80200fc:	b08b      	sub	sp, #44	; 0x2c
 80200fe:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8020102:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8020106:	9308      	str	r3, [sp, #32]
 8020108:	4606      	mov	r6, r0
 802010a:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 802010e:	9309      	str	r3, [sp, #36]	; 0x24
 8020110:	468a      	mov	sl, r1
 8020112:	f7ef fad8 	bl	800f6c6 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 8020116:	68b5      	ldr	r5, [r6, #8]
 8020118:	4604      	mov	r4, r0
 802011a:	2d00      	cmp	r5, #0
 802011c:	d044      	beq.n	80201a8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 802011e:	6873      	ldr	r3, [r6, #4]
 8020120:	42ab      	cmp	r3, r5
 8020122:	d33d      	bcc.n	80201a0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 8020124:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8020128:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	; 0x34
 802012c:	eb02 0b03 	add.w	fp, r2, r3
 8020130:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 8020134:	fb02 1203 	mla	r2, r2, r3, r1
 8020138:	9205      	str	r2, [sp, #20]
 802013a:	1e6a      	subs	r2, r5, #1
 802013c:	9204      	str	r2, [sp, #16]
 802013e:	f04f 0800 	mov.w	r8, #0
 8020142:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 8020146:	f9b4 7000 	ldrsh.w	r7, [r4]
 802014a:	454b      	cmp	r3, r9
 802014c:	463a      	mov	r2, r7
 802014e:	d008      	beq.n	8020162 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 8020150:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	; 0x34
 8020154:	eb03 0b09 	add.w	fp, r3, r9
 8020158:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 802015c:	fb03 1309 	mla	r3, r3, r9, r1
 8020160:	9305      	str	r3, [sp, #20]
 8020162:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8020166:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 802016a:	4498      	add	r8, r3
 802016c:	9b04      	ldr	r3, [sp, #16]
 802016e:	3b01      	subs	r3, #1
 8020170:	9304      	str	r3, [sp, #16]
 8020172:	9b04      	ldr	r3, [sp, #16]
 8020174:	3301      	adds	r3, #1
 8020176:	d015      	beq.n	80201a4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 8020178:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 802017c:	42bb      	cmp	r3, r7
 802017e:	d117      	bne.n	80201b0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 8020180:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 8020184:	9b04      	ldr	r3, [sp, #16]
 8020186:	4548      	cmp	r0, r9
 8020188:	f103 33ff 	add.w	r3, r3, #4294967295
 802018c:	d17f      	bne.n	802028e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 802018e:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 8020192:	4401      	add	r1, r0
 8020194:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8020198:	4480      	add	r8, r0
 802019a:	e7e9      	b.n	8020170 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 802019c:	461f      	mov	r7, r3
 802019e:	e044      	b.n	802022a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 80201a0:	2000      	movs	r0, #0
 80201a2:	e002      	b.n	80201aa <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 80201a4:	2900      	cmp	r1, #0
 80201a6:	d16f      	bne.n	8020288 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 80201a8:	2001      	movs	r0, #1
 80201aa:	b00b      	add	sp, #44	; 0x2c
 80201ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80201b0:	2900      	cmp	r1, #0
 80201b2:	d030      	beq.n	8020216 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 80201b4:	2f00      	cmp	r7, #0
 80201b6:	db29      	blt.n	802020c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 80201b8:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 80201bc:	42bb      	cmp	r3, r7
 80201be:	dd25      	ble.n	802020c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 80201c0:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 80201c4:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 80201c8:	f7ff ff76 	bl	80200b8 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 80201cc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80201ce:	fb10 f003 	smulbb	r0, r0, r3
 80201d2:	b280      	uxth	r0, r0
 80201d4:	1c41      	adds	r1, r0, #1
 80201d6:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 80201da:	1209      	asrs	r1, r1, #8
 80201dc:	f011 0fff 	tst.w	r1, #255	; 0xff
 80201e0:	d014      	beq.n	802020c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 80201e2:	9808      	ldr	r0, [sp, #32]
 80201e4:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 80201e6:	b2c9      	uxtb	r1, r1
 80201e8:	b2ba      	uxth	r2, r7
 80201ea:	9102      	str	r1, [sp, #8]
 80201ec:	2101      	movs	r1, #1
 80201ee:	4413      	add	r3, r2
 80201f0:	9101      	str	r1, [sp, #4]
 80201f2:	4402      	add	r2, r0
 80201f4:	fa0f f18b 	sxth.w	r1, fp
 80201f8:	f8da 0000 	ldr.w	r0, [sl]
 80201fc:	9100      	str	r1, [sp, #0]
 80201fe:	6941      	ldr	r1, [r0, #20]
 8020200:	b21b      	sxth	r3, r3
 8020202:	460d      	mov	r5, r1
 8020204:	b212      	sxth	r2, r2
 8020206:	9905      	ldr	r1, [sp, #20]
 8020208:	4650      	mov	r0, sl
 802020a:	47a8      	blx	r5
 802020c:	9b04      	ldr	r3, [sp, #16]
 802020e:	3301      	adds	r3, #1
 8020210:	f107 0201 	add.w	r2, r7, #1
 8020214:	d0c8      	beq.n	80201a8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8020216:	f9b4 7000 	ldrsh.w	r7, [r4]
 802021a:	1abb      	subs	r3, r7, r2
 802021c:	2b00      	cmp	r3, #0
 802021e:	dd31      	ble.n	8020284 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8020220:	2a00      	cmp	r2, #0
 8020222:	dabb      	bge.n	802019c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 8020224:	2f00      	cmp	r7, #0
 8020226:	dd2d      	ble.n	8020284 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8020228:	2200      	movs	r2, #0
 802022a:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 802022e:	19d1      	adds	r1, r2, r7
 8020230:	4299      	cmp	r1, r3
 8020232:	db02      	blt.n	802023a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 8020234:	1a9f      	subs	r7, r3, r2
 8020236:	2f00      	cmp	r7, #0
 8020238:	dd24      	ble.n	8020284 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 802023a:	ea4f 1188 	mov.w	r1, r8, lsl #6
 802023e:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8020242:	f7ff ff39 	bl	80200b8 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 8020246:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020248:	fb10 f003 	smulbb	r0, r0, r3
 802024c:	b280      	uxth	r0, r0
 802024e:	1c41      	adds	r1, r0, #1
 8020250:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8020254:	1209      	asrs	r1, r1, #8
 8020256:	f011 0fff 	tst.w	r1, #255	; 0xff
 802025a:	d013      	beq.n	8020284 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 802025c:	9808      	ldr	r0, [sp, #32]
 802025e:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8020260:	b292      	uxth	r2, r2
 8020262:	b2c9      	uxtb	r1, r1
 8020264:	4413      	add	r3, r2
 8020266:	9102      	str	r1, [sp, #8]
 8020268:	4402      	add	r2, r0
 802026a:	b23f      	sxth	r7, r7
 802026c:	f8da 0000 	ldr.w	r0, [sl]
 8020270:	9701      	str	r7, [sp, #4]
 8020272:	fa0f f18b 	sxth.w	r1, fp
 8020276:	9100      	str	r1, [sp, #0]
 8020278:	6947      	ldr	r7, [r0, #20]
 802027a:	9905      	ldr	r1, [sp, #20]
 802027c:	b21b      	sxth	r3, r3
 802027e:	b212      	sxth	r2, r2
 8020280:	4650      	mov	r0, sl
 8020282:	47b8      	blx	r7
 8020284:	464b      	mov	r3, r9
 8020286:	e75c      	b.n	8020142 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 8020288:	2f00      	cmp	r7, #0
 802028a:	da95      	bge.n	80201b8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 802028c:	e78c      	b.n	80201a8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 802028e:	2900      	cmp	r1, #0
 8020290:	d0f8      	beq.n	8020284 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8020292:	e78f      	b.n	80201b4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

08020294 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
 8020294:	4b4c      	ldr	r3, [pc, #304]	; (80203c8 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x134>)
 8020296:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 802029a:	2500      	movs	r5, #0
 802029c:	f100 0620 	add.w	r6, r0, #32
 80202a0:	4604      	mov	r4, r0
 80202a2:	e9c0 3100 	strd	r3, r1, [r0]
 80202a6:	e9c0 5502 	strd	r5, r5, [r0, #8]
 80202aa:	e9c0 5504 	strd	r5, r5, [r0, #16]
 80202ae:	e9c0 5506 	strd	r5, r5, [r0, #24]
 80202b2:	f100 0718 	add.w	r7, r0, #24
 80202b6:	4630      	mov	r0, r6
 80202b8:	4690      	mov	r8, r2
 80202ba:	f7ee fbcf 	bl	800ea5c <_ZN8touchgfx7OutlineC1Ev>
 80202be:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
 80202c2:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 80202c6:	2301      	movs	r3, #1
 80202c8:	f884 5050 	strb.w	r5, [r4, #80]	; 0x50
 80202cc:	f8a4 5052 	strh.w	r5, [r4, #82]	; 0x52
 80202d0:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 80202d4:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 80202d8:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 80202dc:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
 80202e0:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 80202e4:	f9b8 2000 	ldrsh.w	r2, [r8]
 80202e8:	f8b8 0004 	ldrh.w	r0, [r8, #4]
 80202ec:	f8d4 c004 	ldr.w	ip, [r4, #4]
 80202f0:	9500      	str	r5, [sp, #0]
 80202f2:	4410      	add	r0, r2
 80202f4:	b280      	uxth	r0, r0
 80202f6:	fa0f fa80 	sxth.w	sl, r0
 80202fa:	45aa      	cmp	sl, r5
 80202fc:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
 8020300:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
 8020304:	dd5c      	ble.n	80203c0 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12c>
 8020306:	4591      	cmp	r9, r2
 8020308:	dd5a      	ble.n	80203c0 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12c>
 802030a:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
 802030e:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8020312:	440b      	add	r3, r1
 8020314:	b29b      	uxth	r3, r3
 8020316:	b21d      	sxth	r5, r3
 8020318:	2d00      	cmp	r5, #0
 802031a:	dd51      	ble.n	80203c0 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12c>
 802031c:	458e      	cmp	lr, r1
 802031e:	dd4f      	ble.n	80203c0 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12c>
 8020320:	45d1      	cmp	r9, sl
 8020322:	bfb8      	it	lt
 8020324:	fa1f f089 	uxthlt.w	r0, r9
 8020328:	45ae      	cmp	lr, r5
 802032a:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 802032e:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 8020332:	bfb8      	it	lt
 8020334:	fa1f f38e 	uxthlt.w	r3, lr
 8020338:	1a80      	subs	r0, r0, r2
 802033a:	1a5b      	subs	r3, r3, r1
 802033c:	f8ad 0004 	strh.w	r0, [sp, #4]
 8020340:	f8ad 3006 	strh.w	r3, [sp, #6]
 8020344:	f8ad 2000 	strh.w	r2, [sp]
 8020348:	f8ad 1002 	strh.w	r1, [sp, #2]
 802034c:	466d      	mov	r5, sp
 802034e:	e895 0003 	ldmia.w	r5, {r0, r1}
 8020352:	e887 0003 	stmia.w	r7, {r0, r1}
 8020356:	f8dc 3000 	ldr.w	r3, [ip]
 802035a:	4660      	mov	r0, ip
 802035c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802035e:	4639      	mov	r1, r7
 8020360:	4798      	blx	r3
 8020362:	6861      	ldr	r1, [r4, #4]
 8020364:	4628      	mov	r0, r5
 8020366:	3104      	adds	r1, #4
 8020368:	f7f0 fd0c 	bl	8010d84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802036c:	4638      	mov	r0, r7
 802036e:	f7f0 fce1 	bl	8010d34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020372:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8020376:	f8bd 2000 	ldrh.w	r2, [sp]
 802037a:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 802037e:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
 8020382:	4630      	mov	r0, r6
 8020384:	f7ee fb4e 	bl	800ea24 <_ZN8touchgfx7Outline5resetEv>
 8020388:	f9bd 3000 	ldrsh.w	r3, [sp]
 802038c:	f9b4 201e 	ldrsh.w	r2, [r4, #30]
 8020390:	015b      	lsls	r3, r3, #5
 8020392:	60a3      	str	r3, [r4, #8]
 8020394:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8020398:	015b      	lsls	r3, r3, #5
 802039a:	60e3      	str	r3, [r4, #12]
 802039c:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 80203a0:	015b      	lsls	r3, r3, #5
 80203a2:	6123      	str	r3, [r4, #16]
 80203a4:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 80203a8:	015b      	lsls	r3, r3, #5
 80203aa:	6163      	str	r3, [r4, #20]
 80203ac:	f9b4 301c 	ldrsh.w	r3, [r4, #28]
 80203b0:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 80203b4:	4620      	mov	r0, r4
 80203b6:	e9c4 3212 	strd	r3, r2, [r4, #72]	; 0x48
 80203ba:	b002      	add	sp, #8
 80203bc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80203c0:	2300      	movs	r3, #0
 80203c2:	9301      	str	r3, [sp, #4]
 80203c4:	e7c2      	b.n	802034c <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xb8>
 80203c6:	bf00      	nop
 80203c8:	08023bd4 	.word	0x08023bd4

080203cc <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 80203cc:	b510      	push	{r4, lr}
 80203ce:	4b07      	ldr	r3, [pc, #28]	; (80203ec <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
 80203d0:	781b      	ldrb	r3, [r3, #0]
 80203d2:	2b01      	cmp	r3, #1
 80203d4:	d108      	bne.n	80203e8 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
 80203d6:	6843      	ldr	r3, [r0, #4]
 80203d8:	6814      	ldr	r4, [r2, #0]
 80203da:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 80203de:	680b      	ldr	r3, [r1, #0]
 80203e0:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 80203e4:	6013      	str	r3, [r2, #0]
 80203e6:	600c      	str	r4, [r1, #0]
 80203e8:	bd10      	pop	{r4, pc}
 80203ea:	bf00      	nop
 80203ec:	200155b0 	.word	0x200155b0

080203f0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 80203f0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80203f2:	ab02      	add	r3, sp, #8
 80203f4:	4604      	mov	r4, r0
 80203f6:	f843 2d08 	str.w	r2, [r3, #-8]!
 80203fa:	9101      	str	r1, [sp, #4]
 80203fc:	461a      	mov	r2, r3
 80203fe:	a901      	add	r1, sp, #4
 8020400:	f7ff ffe4 	bl	80203cc <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8020404:	68a3      	ldr	r3, [r4, #8]
 8020406:	9901      	ldr	r1, [sp, #4]
 8020408:	9a00      	ldr	r2, [sp, #0]
 802040a:	1ac9      	subs	r1, r1, r3
 802040c:	68e3      	ldr	r3, [r4, #12]
 802040e:	9101      	str	r1, [sp, #4]
 8020410:	1ad2      	subs	r2, r2, r3
 8020412:	2a00      	cmp	r2, #0
 8020414:	9200      	str	r2, [sp, #0]
 8020416:	db1c      	blt.n	8020452 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 8020418:	6963      	ldr	r3, [r4, #20]
 802041a:	429a      	cmp	r2, r3
 802041c:	bfac      	ite	ge
 802041e:	2002      	movge	r0, #2
 8020420:	2000      	movlt	r0, #0
 8020422:	2900      	cmp	r1, #0
 8020424:	db17      	blt.n	8020456 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 8020426:	6923      	ldr	r3, [r4, #16]
 8020428:	4299      	cmp	r1, r3
 802042a:	bfac      	ite	ge
 802042c:	2308      	movge	r3, #8
 802042e:	2300      	movlt	r3, #0
 8020430:	4303      	orrs	r3, r0
 8020432:	f894 0064 	ldrb.w	r0, [r4, #100]	; 0x64
 8020436:	b2dd      	uxtb	r5, r3
 8020438:	b978      	cbnz	r0, 802045a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 802043a:	f104 0020 	add.w	r0, r4, #32
 802043e:	f7ff fe4f 	bl	80200e0 <_ZN8touchgfx10Rasterizer6lineToEii>
 8020442:	9b01      	ldr	r3, [sp, #4]
 8020444:	65e3      	str	r3, [r4, #92]	; 0x5c
 8020446:	9b00      	ldr	r3, [sp, #0]
 8020448:	6623      	str	r3, [r4, #96]	; 0x60
 802044a:	f884 5064 	strb.w	r5, [r4, #100]	; 0x64
 802044e:	b002      	add	sp, #8
 8020450:	bd70      	pop	{r4, r5, r6, pc}
 8020452:	2001      	movs	r0, #1
 8020454:	e7e5      	b.n	8020422 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 8020456:	2304      	movs	r3, #4
 8020458:	e7ea      	b.n	8020430 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 802045a:	b113      	cbz	r3, 8020462 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 802045c:	ea10 0305 	ands.w	r3, r0, r5
 8020460:	d11d      	bne.n	802049e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xae>
 8020462:	f894 3058 	ldrb.w	r3, [r4, #88]	; 0x58
 8020466:	f104 0620 	add.w	r6, r4, #32
 802046a:	e9d4 1217 	ldrd	r1, r2, [r4, #92]	; 0x5c
 802046e:	b193      	cbz	r3, 8020496 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa6>
 8020470:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 8020474:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 8020478:	4298      	cmp	r0, r3
 802047a:	d802      	bhi.n	8020482 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 802047c:	4630      	mov	r0, r6
 802047e:	f7ee ffcf 	bl	800f420 <_ZN8touchgfx7Outline6moveToEii>
 8020482:	2300      	movs	r3, #0
 8020484:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8020488:	2301      	movs	r3, #1
 802048a:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 802048e:	e9dd 2100 	ldrd	r2, r1, [sp]
 8020492:	4630      	mov	r0, r6
 8020494:	e7d3      	b.n	802043e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 8020496:	4630      	mov	r0, r6
 8020498:	f7ff fe22 	bl	80200e0 <_ZN8touchgfx10Rasterizer6lineToEii>
 802049c:	e7f7      	b.n	802048e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9e>
 802049e:	461d      	mov	r5, r3
 80204a0:	e7cf      	b.n	8020442 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>

080204a2 <_ZN8touchgfx6Canvas5closeEv>:
 80204a2:	b538      	push	{r3, r4, r5, lr}
 80204a4:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 80204a8:	4604      	mov	r4, r0
 80204aa:	b993      	cbnz	r3, 80204d2 <_ZN8touchgfx6Canvas5closeEv+0x30>
 80204ac:	f890 3064 	ldrb.w	r3, [r0, #100]	; 0x64
 80204b0:	f890 2065 	ldrb.w	r2, [r0, #101]	; 0x65
 80204b4:	4213      	tst	r3, r2
 80204b6:	d10c      	bne.n	80204d2 <_ZN8touchgfx6Canvas5closeEv+0x30>
 80204b8:	f100 0520 	add.w	r5, r0, #32
 80204bc:	b123      	cbz	r3, 80204c8 <_ZN8touchgfx6Canvas5closeEv+0x26>
 80204be:	e9d0 1217 	ldrd	r1, r2, [r0, #92]	; 0x5c
 80204c2:	4628      	mov	r0, r5
 80204c4:	f7ff fe0c 	bl	80200e0 <_ZN8touchgfx10Rasterizer6lineToEii>
 80204c8:	e9d4 121a 	ldrd	r1, r2, [r4, #104]	; 0x68
 80204cc:	4628      	mov	r0, r5
 80204ce:	f7ff fe07 	bl	80200e0 <_ZN8touchgfx10Rasterizer6lineToEii>
 80204d2:	2300      	movs	r3, #0
 80204d4:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 80204d8:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
 80204dc:	4298      	cmp	r0, r3
 80204de:	bf34      	ite	cc
 80204e0:	2000      	movcc	r0, #0
 80204e2:	2001      	movcs	r0, #1
 80204e4:	bd38      	pop	{r3, r4, r5, pc}
	...

080204e8 <_ZN8touchgfx6Canvas6renderEh>:
 80204e8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80204ec:	4604      	mov	r4, r0
 80204ee:	6840      	ldr	r0, [r0, #4]
 80204f0:	6803      	ldr	r3, [r0, #0]
 80204f2:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80204f4:	460d      	mov	r5, r1
 80204f6:	4798      	blx	r3
 80204f8:	fb10 f105 	smulbb	r1, r0, r5
 80204fc:	b289      	uxth	r1, r1
 80204fe:	1c4d      	adds	r5, r1, #1
 8020500:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8020504:	122d      	asrs	r5, r5, #8
 8020506:	f000 8098 	beq.w	802063a <_ZN8touchgfx6Canvas6renderEh+0x152>
 802050a:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
 802050e:	2b00      	cmp	r3, #0
 8020510:	f000 8093 	beq.w	802063a <_ZN8touchgfx6Canvas6renderEh+0x152>
 8020514:	4620      	mov	r0, r4
 8020516:	f7ff ffc4 	bl	80204a2 <_ZN8touchgfx6Canvas5closeEv>
 802051a:	4607      	mov	r7, r0
 802051c:	2800      	cmp	r0, #0
 802051e:	d043      	beq.n	80205a8 <_ZN8touchgfx6Canvas6renderEh+0xc0>
 8020520:	6863      	ldr	r3, [r4, #4]
 8020522:	4e47      	ldr	r6, [pc, #284]	; (8020640 <_ZN8touchgfx6Canvas6renderEh+0x158>)
 8020524:	6a98      	ldr	r0, [r3, #40]	; 0x28
 8020526:	6837      	ldr	r7, [r6, #0]
 8020528:	6803      	ldr	r3, [r0, #0]
 802052a:	689b      	ldr	r3, [r3, #8]
 802052c:	4798      	blx	r3
 802052e:	4601      	mov	r1, r0
 8020530:	4638      	mov	r0, r7
 8020532:	f7eb fb11 	bl	800bb58 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 8020536:	4607      	mov	r7, r0
 8020538:	f7e2 f8ea 	bl	8002710 <_ZN8touchgfx3HAL3lcdEv>
 802053c:	6803      	ldr	r3, [r0, #0]
 802053e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8020540:	4798      	blx	r3
 8020542:	4680      	mov	r8, r0
 8020544:	f7e2 f8e4 	bl	8002710 <_ZN8touchgfx3HAL3lcdEv>
 8020548:	6803      	ldr	r3, [r0, #0]
 802054a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802054c:	4798      	blx	r3
 802054e:	280b      	cmp	r0, #11
 8020550:	d858      	bhi.n	8020604 <_ZN8touchgfx6Canvas6renderEh+0x11c>
 8020552:	e8df f000 	tbb	[pc, r0]
 8020556:	594e      	.short	0x594e
 8020558:	2d570669 	.word	0x2d570669
 802055c:	6262623d 	.word	0x6262623d
 8020560:	6262      	.short	0x6262
 8020562:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8020566:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 802056a:	2208      	movs	r2, #8
 802056c:	fb91 f2f2 	sdiv	r2, r1, r2
 8020570:	fb08 2303 	mla	r3, r8, r3, r2
 8020574:	441f      	add	r7, r3
 8020576:	424b      	negs	r3, r1
 8020578:	f003 0307 	and.w	r3, r3, #7
 802057c:	f001 0107 	and.w	r1, r1, #7
 8020580:	bf58      	it	pl
 8020582:	4259      	negpl	r1, r3
 8020584:	b2c9      	uxtb	r1, r1
 8020586:	b2ed      	uxtb	r5, r5
 8020588:	e9cd 1500 	strd	r1, r5, [sp]
 802058c:	6860      	ldr	r0, [r4, #4]
 802058e:	fa0f f388 	sxth.w	r3, r8
 8020592:	463a      	mov	r2, r7
 8020594:	6a81      	ldr	r1, [r0, #40]	; 0x28
 8020596:	f104 0020 	add.w	r0, r4, #32
 802059a:	f7ff fdad 	bl	80200f8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 802059e:	4607      	mov	r7, r0
 80205a0:	6830      	ldr	r0, [r6, #0]
 80205a2:	6803      	ldr	r3, [r0, #0]
 80205a4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80205a6:	4798      	blx	r3
 80205a8:	4638      	mov	r0, r7
 80205aa:	b002      	add	sp, #8
 80205ac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80205b0:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80205b4:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 80205b8:	2204      	movs	r2, #4
 80205ba:	fb91 f2f2 	sdiv	r2, r1, r2
 80205be:	fb08 2303 	mla	r3, r8, r3, r2
 80205c2:	441f      	add	r7, r3
 80205c4:	424b      	negs	r3, r1
 80205c6:	f003 0303 	and.w	r3, r3, #3
 80205ca:	f001 0103 	and.w	r1, r1, #3
 80205ce:	e7d7      	b.n	8020580 <_ZN8touchgfx6Canvas6renderEh+0x98>
 80205d0:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 80205d4:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80205d8:	2900      	cmp	r1, #0
 80205da:	f04f 0202 	mov.w	r2, #2
 80205de:	fb91 f2f2 	sdiv	r2, r1, r2
 80205e2:	f001 0101 	and.w	r1, r1, #1
 80205e6:	fb08 2303 	mla	r3, r8, r3, r2
 80205ea:	441f      	add	r7, r3
 80205ec:	bfb8      	it	lt
 80205ee:	4249      	neglt	r1, r1
 80205f0:	e7c8      	b.n	8020584 <_ZN8touchgfx6Canvas6renderEh+0x9c>
 80205f2:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80205f6:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 80205fa:	fb08 f303 	mul.w	r3, r8, r3
 80205fe:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8020602:	441f      	add	r7, r3
 8020604:	2100      	movs	r1, #0
 8020606:	e7be      	b.n	8020586 <_ZN8touchgfx6Canvas6renderEh+0x9e>
 8020608:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802060c:	fb08 f203 	mul.w	r2, r8, r3
 8020610:	8b23      	ldrh	r3, [r4, #24]
 8020612:	2103      	movs	r1, #3
 8020614:	fb13 2301 	smlabb	r3, r3, r1, r2
 8020618:	e7f3      	b.n	8020602 <_ZN8touchgfx6Canvas6renderEh+0x11a>
 802061a:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802061e:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8020622:	fb08 2303 	mla	r3, r8, r3, r2
 8020626:	e7ec      	b.n	8020602 <_ZN8touchgfx6Canvas6renderEh+0x11a>
 8020628:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802062c:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8020630:	fb08 f303 	mul.w	r3, r8, r3
 8020634:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8020638:	e7e3      	b.n	8020602 <_ZN8touchgfx6Canvas6renderEh+0x11a>
 802063a:	2701      	movs	r7, #1
 802063c:	e7b4      	b.n	80205a8 <_ZN8touchgfx6Canvas6renderEh+0xc0>
 802063e:	bf00      	nop
 8020640:	200155b8 	.word	0x200155b8

08020644 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 8020644:	b513      	push	{r0, r1, r4, lr}
 8020646:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 802064a:	4604      	mov	r4, r0
 802064c:	e9cd 2100 	strd	r2, r1, [sp]
 8020650:	b1a3      	cbz	r3, 802067c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 8020652:	466a      	mov	r2, sp
 8020654:	a901      	add	r1, sp, #4
 8020656:	4620      	mov	r0, r4
 8020658:	f7ff feb8 	bl	80203cc <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 802065c:	68a3      	ldr	r3, [r4, #8]
 802065e:	9901      	ldr	r1, [sp, #4]
 8020660:	9a00      	ldr	r2, [sp, #0]
 8020662:	1ac9      	subs	r1, r1, r3
 8020664:	68e3      	ldr	r3, [r4, #12]
 8020666:	9101      	str	r1, [sp, #4]
 8020668:	1ad2      	subs	r2, r2, r3
 802066a:	2a00      	cmp	r2, #0
 802066c:	9200      	str	r2, [sp, #0]
 802066e:	da0b      	bge.n	8020688 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 8020670:	2301      	movs	r3, #1
 8020672:	2900      	cmp	r1, #0
 8020674:	da0e      	bge.n	8020694 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 8020676:	f043 0304 	orr.w	r3, r3, #4
 802067a:	e013      	b.n	80206a4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 802067c:	f7ff ff11 	bl	80204a2 <_ZN8touchgfx6Canvas5closeEv>
 8020680:	2800      	cmp	r0, #0
 8020682:	d1e6      	bne.n	8020652 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 8020684:	b002      	add	sp, #8
 8020686:	bd10      	pop	{r4, pc}
 8020688:	6963      	ldr	r3, [r4, #20]
 802068a:	429a      	cmp	r2, r3
 802068c:	bfac      	ite	ge
 802068e:	2302      	movge	r3, #2
 8020690:	2300      	movlt	r3, #0
 8020692:	e7ee      	b.n	8020672 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 8020694:	6920      	ldr	r0, [r4, #16]
 8020696:	4281      	cmp	r1, r0
 8020698:	bfac      	ite	ge
 802069a:	2008      	movge	r0, #8
 802069c:	2000      	movlt	r0, #0
 802069e:	4318      	orrs	r0, r3
 80206a0:	b2c3      	uxtb	r3, r0
 80206a2:	b158      	cbz	r0, 80206bc <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 80206a4:	2201      	movs	r2, #1
 80206a6:	f884 2058 	strb.w	r2, [r4, #88]	; 0x58
 80206aa:	9901      	ldr	r1, [sp, #4]
 80206ac:	9a00      	ldr	r2, [sp, #0]
 80206ae:	66a1      	str	r1, [r4, #104]	; 0x68
 80206b0:	66e2      	str	r2, [r4, #108]	; 0x6c
 80206b2:	e9c4 1217 	strd	r1, r2, [r4, #92]	; 0x5c
 80206b6:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 80206ba:	e7e3      	b.n	8020684 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 80206bc:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 80206c0:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 80206c4:	4298      	cmp	r0, r3
 80206c6:	d803      	bhi.n	80206d0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 80206c8:	f104 0020 	add.w	r0, r4, #32
 80206cc:	f7ee fea8 	bl	800f420 <_ZN8touchgfx7Outline6moveToEii>
 80206d0:	2300      	movs	r3, #0
 80206d2:	2201      	movs	r2, #1
 80206d4:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 80206d8:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 80206dc:	e7e5      	b.n	80206aa <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

080206de <__aeabi_atexit>:
 80206de:	460b      	mov	r3, r1
 80206e0:	4601      	mov	r1, r0
 80206e2:	4618      	mov	r0, r3
 80206e4:	f000 b8d8 	b.w	8020898 <__cxa_atexit>

080206e8 <_ZdlPvj>:
 80206e8:	f000 b812 	b.w	8020710 <_ZdlPv>

080206ec <__cxa_guard_acquire>:
 80206ec:	6803      	ldr	r3, [r0, #0]
 80206ee:	07db      	lsls	r3, r3, #31
 80206f0:	d406      	bmi.n	8020700 <__cxa_guard_acquire+0x14>
 80206f2:	7843      	ldrb	r3, [r0, #1]
 80206f4:	b103      	cbz	r3, 80206f8 <__cxa_guard_acquire+0xc>
 80206f6:	deff      	udf	#255	; 0xff
 80206f8:	2301      	movs	r3, #1
 80206fa:	7043      	strb	r3, [r0, #1]
 80206fc:	4618      	mov	r0, r3
 80206fe:	4770      	bx	lr
 8020700:	2000      	movs	r0, #0
 8020702:	4770      	bx	lr

08020704 <__cxa_guard_release>:
 8020704:	2301      	movs	r3, #1
 8020706:	6003      	str	r3, [r0, #0]
 8020708:	4770      	bx	lr

0802070a <__cxa_pure_virtual>:
 802070a:	b508      	push	{r3, lr}
 802070c:	f000 f80e 	bl	802072c <_ZSt9terminatev>

08020710 <_ZdlPv>:
 8020710:	f000 ba0e 	b.w	8020b30 <free>

08020714 <_ZN10__cxxabiv111__terminateEPFvvE>:
 8020714:	b508      	push	{r3, lr}
 8020716:	4780      	blx	r0
 8020718:	f000 f892 	bl	8020840 <abort>

0802071c <_ZSt13get_terminatev>:
 802071c:	4b02      	ldr	r3, [pc, #8]	; (8020728 <_ZSt13get_terminatev+0xc>)
 802071e:	6818      	ldr	r0, [r3, #0]
 8020720:	f3bf 8f5b 	dmb	ish
 8020724:	4770      	bx	lr
 8020726:	bf00      	nop
 8020728:	20000100 	.word	0x20000100

0802072c <_ZSt9terminatev>:
 802072c:	b508      	push	{r3, lr}
 802072e:	f7ff fff5 	bl	802071c <_ZSt13get_terminatev>
 8020732:	f7ff ffef 	bl	8020714 <_ZN10__cxxabiv111__terminateEPFvvE>
	...

08020738 <ceilf>:
 8020738:	ee10 3a10 	vmov	r3, s0
 802073c:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8020740:	3a7f      	subs	r2, #127	; 0x7f
 8020742:	2a16      	cmp	r2, #22
 8020744:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 8020748:	dc2a      	bgt.n	80207a0 <ceilf+0x68>
 802074a:	2a00      	cmp	r2, #0
 802074c:	da11      	bge.n	8020772 <ceilf+0x3a>
 802074e:	eddf 7a19 	vldr	s15, [pc, #100]	; 80207b4 <ceilf+0x7c>
 8020752:	ee30 0a27 	vadd.f32	s0, s0, s15
 8020756:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802075a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802075e:	dd05      	ble.n	802076c <ceilf+0x34>
 8020760:	2b00      	cmp	r3, #0
 8020762:	db23      	blt.n	80207ac <ceilf+0x74>
 8020764:	2900      	cmp	r1, #0
 8020766:	bf18      	it	ne
 8020768:	f04f 537e 	movne.w	r3, #1065353216	; 0x3f800000
 802076c:	ee00 3a10 	vmov	s0, r3
 8020770:	4770      	bx	lr
 8020772:	4911      	ldr	r1, [pc, #68]	; (80207b8 <ceilf+0x80>)
 8020774:	4111      	asrs	r1, r2
 8020776:	420b      	tst	r3, r1
 8020778:	d0fa      	beq.n	8020770 <ceilf+0x38>
 802077a:	eddf 7a0e 	vldr	s15, [pc, #56]	; 80207b4 <ceilf+0x7c>
 802077e:	ee30 0a27 	vadd.f32	s0, s0, s15
 8020782:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8020786:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802078a:	ddef      	ble.n	802076c <ceilf+0x34>
 802078c:	2b00      	cmp	r3, #0
 802078e:	bfc2      	ittt	gt
 8020790:	f44f 0000 	movgt.w	r0, #8388608	; 0x800000
 8020794:	fa40 f202 	asrgt.w	r2, r0, r2
 8020798:	189b      	addgt	r3, r3, r2
 802079a:	ea23 0301 	bic.w	r3, r3, r1
 802079e:	e7e5      	b.n	802076c <ceilf+0x34>
 80207a0:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 80207a4:	d3e4      	bcc.n	8020770 <ceilf+0x38>
 80207a6:	ee30 0a00 	vadd.f32	s0, s0, s0
 80207aa:	4770      	bx	lr
 80207ac:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 80207b0:	e7dc      	b.n	802076c <ceilf+0x34>
 80207b2:	bf00      	nop
 80207b4:	7149f2ca 	.word	0x7149f2ca
 80207b8:	007fffff 	.word	0x007fffff

080207bc <floorf>:
 80207bc:	ee10 3a10 	vmov	r3, s0
 80207c0:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 80207c4:	3a7f      	subs	r2, #127	; 0x7f
 80207c6:	2a16      	cmp	r2, #22
 80207c8:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 80207cc:	dc2a      	bgt.n	8020824 <floorf+0x68>
 80207ce:	2a00      	cmp	r2, #0
 80207d0:	da11      	bge.n	80207f6 <floorf+0x3a>
 80207d2:	eddf 7a18 	vldr	s15, [pc, #96]	; 8020834 <floorf+0x78>
 80207d6:	ee30 0a27 	vadd.f32	s0, s0, s15
 80207da:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80207de:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80207e2:	dd05      	ble.n	80207f0 <floorf+0x34>
 80207e4:	2b00      	cmp	r3, #0
 80207e6:	da23      	bge.n	8020830 <floorf+0x74>
 80207e8:	4a13      	ldr	r2, [pc, #76]	; (8020838 <floorf+0x7c>)
 80207ea:	2900      	cmp	r1, #0
 80207ec:	bf18      	it	ne
 80207ee:	4613      	movne	r3, r2
 80207f0:	ee00 3a10 	vmov	s0, r3
 80207f4:	4770      	bx	lr
 80207f6:	4911      	ldr	r1, [pc, #68]	; (802083c <floorf+0x80>)
 80207f8:	4111      	asrs	r1, r2
 80207fa:	420b      	tst	r3, r1
 80207fc:	d0fa      	beq.n	80207f4 <floorf+0x38>
 80207fe:	eddf 7a0d 	vldr	s15, [pc, #52]	; 8020834 <floorf+0x78>
 8020802:	ee30 0a27 	vadd.f32	s0, s0, s15
 8020806:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802080a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802080e:	ddef      	ble.n	80207f0 <floorf+0x34>
 8020810:	2b00      	cmp	r3, #0
 8020812:	bfbe      	ittt	lt
 8020814:	f44f 0000 	movlt.w	r0, #8388608	; 0x800000
 8020818:	fa40 f202 	asrlt.w	r2, r0, r2
 802081c:	189b      	addlt	r3, r3, r2
 802081e:	ea23 0301 	bic.w	r3, r3, r1
 8020822:	e7e5      	b.n	80207f0 <floorf+0x34>
 8020824:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 8020828:	d3e4      	bcc.n	80207f4 <floorf+0x38>
 802082a:	ee30 0a00 	vadd.f32	s0, s0, s0
 802082e:	4770      	bx	lr
 8020830:	2300      	movs	r3, #0
 8020832:	e7dd      	b.n	80207f0 <floorf+0x34>
 8020834:	7149f2ca 	.word	0x7149f2ca
 8020838:	bf800000 	.word	0xbf800000
 802083c:	007fffff 	.word	0x007fffff

08020840 <abort>:
 8020840:	b508      	push	{r3, lr}
 8020842:	2006      	movs	r0, #6
 8020844:	f000 fe02 	bl	802144c <raise>
 8020848:	2001      	movs	r0, #1
 802084a:	f7e1 fc89 	bl	8002160 <_exit>
	...

08020850 <__assert_func>:
 8020850:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8020852:	4614      	mov	r4, r2
 8020854:	461a      	mov	r2, r3
 8020856:	4b09      	ldr	r3, [pc, #36]	; (802087c <__assert_func+0x2c>)
 8020858:	681b      	ldr	r3, [r3, #0]
 802085a:	4605      	mov	r5, r0
 802085c:	68d8      	ldr	r0, [r3, #12]
 802085e:	b14c      	cbz	r4, 8020874 <__assert_func+0x24>
 8020860:	4b07      	ldr	r3, [pc, #28]	; (8020880 <__assert_func+0x30>)
 8020862:	9100      	str	r1, [sp, #0]
 8020864:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8020868:	4906      	ldr	r1, [pc, #24]	; (8020884 <__assert_func+0x34>)
 802086a:	462b      	mov	r3, r5
 802086c:	f000 f8fe 	bl	8020a6c <fiprintf>
 8020870:	f7ff ffe6 	bl	8020840 <abort>
 8020874:	4b04      	ldr	r3, [pc, #16]	; (8020888 <__assert_func+0x38>)
 8020876:	461c      	mov	r4, r3
 8020878:	e7f3      	b.n	8020862 <__assert_func+0x12>
 802087a:	bf00      	nop
 802087c:	20000104 	.word	0x20000104
 8020880:	0802469c 	.word	0x0802469c
 8020884:	080246a9 	.word	0x080246a9
 8020888:	0802361f 	.word	0x0802361f

0802088c <atexit>:
 802088c:	2300      	movs	r3, #0
 802088e:	4601      	mov	r1, r0
 8020890:	461a      	mov	r2, r3
 8020892:	4618      	mov	r0, r3
 8020894:	f000 bf0c 	b.w	80216b0 <__register_exitproc>

08020898 <__cxa_atexit>:
 8020898:	b510      	push	{r4, lr}
 802089a:	4c05      	ldr	r4, [pc, #20]	; (80208b0 <__cxa_atexit+0x18>)
 802089c:	4613      	mov	r3, r2
 802089e:	b12c      	cbz	r4, 80208ac <__cxa_atexit+0x14>
 80208a0:	460a      	mov	r2, r1
 80208a2:	4601      	mov	r1, r0
 80208a4:	2002      	movs	r0, #2
 80208a6:	f000 ff03 	bl	80216b0 <__register_exitproc>
 80208aa:	bd10      	pop	{r4, pc}
 80208ac:	4620      	mov	r0, r4
 80208ae:	e7fc      	b.n	80208aa <__cxa_atexit+0x12>
 80208b0:	080216b1 	.word	0x080216b1

080208b4 <__errno>:
 80208b4:	4b01      	ldr	r3, [pc, #4]	; (80208bc <__errno+0x8>)
 80208b6:	6818      	ldr	r0, [r3, #0]
 80208b8:	4770      	bx	lr
 80208ba:	bf00      	nop
 80208bc:	20000104 	.word	0x20000104

080208c0 <std>:
 80208c0:	2300      	movs	r3, #0
 80208c2:	b510      	push	{r4, lr}
 80208c4:	4604      	mov	r4, r0
 80208c6:	e9c0 3300 	strd	r3, r3, [r0]
 80208ca:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80208ce:	6083      	str	r3, [r0, #8]
 80208d0:	8181      	strh	r1, [r0, #12]
 80208d2:	6643      	str	r3, [r0, #100]	; 0x64
 80208d4:	81c2      	strh	r2, [r0, #14]
 80208d6:	6183      	str	r3, [r0, #24]
 80208d8:	4619      	mov	r1, r3
 80208da:	2208      	movs	r2, #8
 80208dc:	305c      	adds	r0, #92	; 0x5c
 80208de:	f000 f93d 	bl	8020b5c <memset>
 80208e2:	4b05      	ldr	r3, [pc, #20]	; (80208f8 <std+0x38>)
 80208e4:	6263      	str	r3, [r4, #36]	; 0x24
 80208e6:	4b05      	ldr	r3, [pc, #20]	; (80208fc <std+0x3c>)
 80208e8:	62a3      	str	r3, [r4, #40]	; 0x28
 80208ea:	4b05      	ldr	r3, [pc, #20]	; (8020900 <std+0x40>)
 80208ec:	62e3      	str	r3, [r4, #44]	; 0x2c
 80208ee:	4b05      	ldr	r3, [pc, #20]	; (8020904 <std+0x44>)
 80208f0:	6224      	str	r4, [r4, #32]
 80208f2:	6323      	str	r3, [r4, #48]	; 0x30
 80208f4:	bd10      	pop	{r4, pc}
 80208f6:	bf00      	nop
 80208f8:	08021485 	.word	0x08021485
 80208fc:	080214a7 	.word	0x080214a7
 8020900:	080214df 	.word	0x080214df
 8020904:	08021503 	.word	0x08021503

08020908 <_cleanup_r>:
 8020908:	4901      	ldr	r1, [pc, #4]	; (8020910 <_cleanup_r+0x8>)
 802090a:	f000 b8c1 	b.w	8020a90 <_fwalk_reent>
 802090e:	bf00      	nop
 8020910:	080218a1 	.word	0x080218a1

08020914 <__sfmoreglue>:
 8020914:	b570      	push	{r4, r5, r6, lr}
 8020916:	2268      	movs	r2, #104	; 0x68
 8020918:	1e4d      	subs	r5, r1, #1
 802091a:	4355      	muls	r5, r2
 802091c:	460e      	mov	r6, r1
 802091e:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8020922:	f000 f98f 	bl	8020c44 <_malloc_r>
 8020926:	4604      	mov	r4, r0
 8020928:	b140      	cbz	r0, 802093c <__sfmoreglue+0x28>
 802092a:	2100      	movs	r1, #0
 802092c:	e9c0 1600 	strd	r1, r6, [r0]
 8020930:	300c      	adds	r0, #12
 8020932:	60a0      	str	r0, [r4, #8]
 8020934:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8020938:	f000 f910 	bl	8020b5c <memset>
 802093c:	4620      	mov	r0, r4
 802093e:	bd70      	pop	{r4, r5, r6, pc}

08020940 <__sfp_lock_acquire>:
 8020940:	4801      	ldr	r0, [pc, #4]	; (8020948 <__sfp_lock_acquire+0x8>)
 8020942:	f000 b8ea 	b.w	8020b1a <__retarget_lock_acquire_recursive>
 8020946:	bf00      	nop
 8020948:	200156be 	.word	0x200156be

0802094c <__sfp_lock_release>:
 802094c:	4801      	ldr	r0, [pc, #4]	; (8020954 <__sfp_lock_release+0x8>)
 802094e:	f000 b8e6 	b.w	8020b1e <__retarget_lock_release_recursive>
 8020952:	bf00      	nop
 8020954:	200156be 	.word	0x200156be

08020958 <__sinit_lock_acquire>:
 8020958:	4801      	ldr	r0, [pc, #4]	; (8020960 <__sinit_lock_acquire+0x8>)
 802095a:	f000 b8de 	b.w	8020b1a <__retarget_lock_acquire_recursive>
 802095e:	bf00      	nop
 8020960:	200156bf 	.word	0x200156bf

08020964 <__sinit_lock_release>:
 8020964:	4801      	ldr	r0, [pc, #4]	; (802096c <__sinit_lock_release+0x8>)
 8020966:	f000 b8da 	b.w	8020b1e <__retarget_lock_release_recursive>
 802096a:	bf00      	nop
 802096c:	200156bf 	.word	0x200156bf

08020970 <__sinit>:
 8020970:	b510      	push	{r4, lr}
 8020972:	4604      	mov	r4, r0
 8020974:	f7ff fff0 	bl	8020958 <__sinit_lock_acquire>
 8020978:	69a3      	ldr	r3, [r4, #24]
 802097a:	b11b      	cbz	r3, 8020984 <__sinit+0x14>
 802097c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8020980:	f7ff bff0 	b.w	8020964 <__sinit_lock_release>
 8020984:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8020988:	6523      	str	r3, [r4, #80]	; 0x50
 802098a:	4b13      	ldr	r3, [pc, #76]	; (80209d8 <__sinit+0x68>)
 802098c:	4a13      	ldr	r2, [pc, #76]	; (80209dc <__sinit+0x6c>)
 802098e:	681b      	ldr	r3, [r3, #0]
 8020990:	62a2      	str	r2, [r4, #40]	; 0x28
 8020992:	42a3      	cmp	r3, r4
 8020994:	bf04      	itt	eq
 8020996:	2301      	moveq	r3, #1
 8020998:	61a3      	streq	r3, [r4, #24]
 802099a:	4620      	mov	r0, r4
 802099c:	f000 f820 	bl	80209e0 <__sfp>
 80209a0:	6060      	str	r0, [r4, #4]
 80209a2:	4620      	mov	r0, r4
 80209a4:	f000 f81c 	bl	80209e0 <__sfp>
 80209a8:	60a0      	str	r0, [r4, #8]
 80209aa:	4620      	mov	r0, r4
 80209ac:	f000 f818 	bl	80209e0 <__sfp>
 80209b0:	2200      	movs	r2, #0
 80209b2:	60e0      	str	r0, [r4, #12]
 80209b4:	2104      	movs	r1, #4
 80209b6:	6860      	ldr	r0, [r4, #4]
 80209b8:	f7ff ff82 	bl	80208c0 <std>
 80209bc:	68a0      	ldr	r0, [r4, #8]
 80209be:	2201      	movs	r2, #1
 80209c0:	2109      	movs	r1, #9
 80209c2:	f7ff ff7d 	bl	80208c0 <std>
 80209c6:	68e0      	ldr	r0, [r4, #12]
 80209c8:	2202      	movs	r2, #2
 80209ca:	2112      	movs	r1, #18
 80209cc:	f7ff ff78 	bl	80208c0 <std>
 80209d0:	2301      	movs	r3, #1
 80209d2:	61a3      	str	r3, [r4, #24]
 80209d4:	e7d2      	b.n	802097c <__sinit+0xc>
 80209d6:	bf00      	nop
 80209d8:	08024738 	.word	0x08024738
 80209dc:	08020909 	.word	0x08020909

080209e0 <__sfp>:
 80209e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80209e2:	4607      	mov	r7, r0
 80209e4:	f7ff ffac 	bl	8020940 <__sfp_lock_acquire>
 80209e8:	4b1e      	ldr	r3, [pc, #120]	; (8020a64 <__sfp+0x84>)
 80209ea:	681e      	ldr	r6, [r3, #0]
 80209ec:	69b3      	ldr	r3, [r6, #24]
 80209ee:	b913      	cbnz	r3, 80209f6 <__sfp+0x16>
 80209f0:	4630      	mov	r0, r6
 80209f2:	f7ff ffbd 	bl	8020970 <__sinit>
 80209f6:	3648      	adds	r6, #72	; 0x48
 80209f8:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 80209fc:	3b01      	subs	r3, #1
 80209fe:	d503      	bpl.n	8020a08 <__sfp+0x28>
 8020a00:	6833      	ldr	r3, [r6, #0]
 8020a02:	b30b      	cbz	r3, 8020a48 <__sfp+0x68>
 8020a04:	6836      	ldr	r6, [r6, #0]
 8020a06:	e7f7      	b.n	80209f8 <__sfp+0x18>
 8020a08:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8020a0c:	b9d5      	cbnz	r5, 8020a44 <__sfp+0x64>
 8020a0e:	4b16      	ldr	r3, [pc, #88]	; (8020a68 <__sfp+0x88>)
 8020a10:	60e3      	str	r3, [r4, #12]
 8020a12:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8020a16:	6665      	str	r5, [r4, #100]	; 0x64
 8020a18:	f000 f87e 	bl	8020b18 <__retarget_lock_init_recursive>
 8020a1c:	f7ff ff96 	bl	802094c <__sfp_lock_release>
 8020a20:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8020a24:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8020a28:	6025      	str	r5, [r4, #0]
 8020a2a:	61a5      	str	r5, [r4, #24]
 8020a2c:	2208      	movs	r2, #8
 8020a2e:	4629      	mov	r1, r5
 8020a30:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8020a34:	f000 f892 	bl	8020b5c <memset>
 8020a38:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8020a3c:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8020a40:	4620      	mov	r0, r4
 8020a42:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8020a44:	3468      	adds	r4, #104	; 0x68
 8020a46:	e7d9      	b.n	80209fc <__sfp+0x1c>
 8020a48:	2104      	movs	r1, #4
 8020a4a:	4638      	mov	r0, r7
 8020a4c:	f7ff ff62 	bl	8020914 <__sfmoreglue>
 8020a50:	4604      	mov	r4, r0
 8020a52:	6030      	str	r0, [r6, #0]
 8020a54:	2800      	cmp	r0, #0
 8020a56:	d1d5      	bne.n	8020a04 <__sfp+0x24>
 8020a58:	f7ff ff78 	bl	802094c <__sfp_lock_release>
 8020a5c:	230c      	movs	r3, #12
 8020a5e:	603b      	str	r3, [r7, #0]
 8020a60:	e7ee      	b.n	8020a40 <__sfp+0x60>
 8020a62:	bf00      	nop
 8020a64:	08024738 	.word	0x08024738
 8020a68:	ffff0001 	.word	0xffff0001

08020a6c <fiprintf>:
 8020a6c:	b40e      	push	{r1, r2, r3}
 8020a6e:	b503      	push	{r0, r1, lr}
 8020a70:	4601      	mov	r1, r0
 8020a72:	ab03      	add	r3, sp, #12
 8020a74:	4805      	ldr	r0, [pc, #20]	; (8020a8c <fiprintf+0x20>)
 8020a76:	f853 2b04 	ldr.w	r2, [r3], #4
 8020a7a:	6800      	ldr	r0, [r0, #0]
 8020a7c:	9301      	str	r3, [sp, #4]
 8020a7e:	f000 f97f 	bl	8020d80 <_vfiprintf_r>
 8020a82:	b002      	add	sp, #8
 8020a84:	f85d eb04 	ldr.w	lr, [sp], #4
 8020a88:	b003      	add	sp, #12
 8020a8a:	4770      	bx	lr
 8020a8c:	20000104 	.word	0x20000104

08020a90 <_fwalk_reent>:
 8020a90:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8020a94:	4606      	mov	r6, r0
 8020a96:	4688      	mov	r8, r1
 8020a98:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8020a9c:	2700      	movs	r7, #0
 8020a9e:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8020aa2:	f1b9 0901 	subs.w	r9, r9, #1
 8020aa6:	d505      	bpl.n	8020ab4 <_fwalk_reent+0x24>
 8020aa8:	6824      	ldr	r4, [r4, #0]
 8020aaa:	2c00      	cmp	r4, #0
 8020aac:	d1f7      	bne.n	8020a9e <_fwalk_reent+0xe>
 8020aae:	4638      	mov	r0, r7
 8020ab0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8020ab4:	89ab      	ldrh	r3, [r5, #12]
 8020ab6:	2b01      	cmp	r3, #1
 8020ab8:	d907      	bls.n	8020aca <_fwalk_reent+0x3a>
 8020aba:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8020abe:	3301      	adds	r3, #1
 8020ac0:	d003      	beq.n	8020aca <_fwalk_reent+0x3a>
 8020ac2:	4629      	mov	r1, r5
 8020ac4:	4630      	mov	r0, r6
 8020ac6:	47c0      	blx	r8
 8020ac8:	4307      	orrs	r7, r0
 8020aca:	3568      	adds	r5, #104	; 0x68
 8020acc:	e7e9      	b.n	8020aa2 <_fwalk_reent+0x12>
	...

08020ad0 <__libc_init_array>:
 8020ad0:	b570      	push	{r4, r5, r6, lr}
 8020ad2:	4d0d      	ldr	r5, [pc, #52]	; (8020b08 <__libc_init_array+0x38>)
 8020ad4:	4c0d      	ldr	r4, [pc, #52]	; (8020b0c <__libc_init_array+0x3c>)
 8020ad6:	1b64      	subs	r4, r4, r5
 8020ad8:	10a4      	asrs	r4, r4, #2
 8020ada:	2600      	movs	r6, #0
 8020adc:	42a6      	cmp	r6, r4
 8020ade:	d109      	bne.n	8020af4 <__libc_init_array+0x24>
 8020ae0:	4d0b      	ldr	r5, [pc, #44]	; (8020b10 <__libc_init_array+0x40>)
 8020ae2:	4c0c      	ldr	r4, [pc, #48]	; (8020b14 <__libc_init_array+0x44>)
 8020ae4:	f000 ffd0 	bl	8021a88 <_init>
 8020ae8:	1b64      	subs	r4, r4, r5
 8020aea:	10a4      	asrs	r4, r4, #2
 8020aec:	2600      	movs	r6, #0
 8020aee:	42a6      	cmp	r6, r4
 8020af0:	d105      	bne.n	8020afe <__libc_init_array+0x2e>
 8020af2:	bd70      	pop	{r4, r5, r6, pc}
 8020af4:	f855 3b04 	ldr.w	r3, [r5], #4
 8020af8:	4798      	blx	r3
 8020afa:	3601      	adds	r6, #1
 8020afc:	e7ee      	b.n	8020adc <__libc_init_array+0xc>
 8020afe:	f855 3b04 	ldr.w	r3, [r5], #4
 8020b02:	4798      	blx	r3
 8020b04:	3601      	adds	r6, #1
 8020b06:	e7f2      	b.n	8020aee <__libc_init_array+0x1e>
 8020b08:	080c330c 	.word	0x080c330c
 8020b0c:	080c330c 	.word	0x080c330c
 8020b10:	080c330c 	.word	0x080c330c
 8020b14:	080c3320 	.word	0x080c3320

08020b18 <__retarget_lock_init_recursive>:
 8020b18:	4770      	bx	lr

08020b1a <__retarget_lock_acquire_recursive>:
 8020b1a:	4770      	bx	lr

08020b1c <__retarget_lock_release>:
 8020b1c:	4770      	bx	lr

08020b1e <__retarget_lock_release_recursive>:
 8020b1e:	4770      	bx	lr

08020b20 <malloc>:
 8020b20:	4b02      	ldr	r3, [pc, #8]	; (8020b2c <malloc+0xc>)
 8020b22:	4601      	mov	r1, r0
 8020b24:	6818      	ldr	r0, [r3, #0]
 8020b26:	f000 b88d 	b.w	8020c44 <_malloc_r>
 8020b2a:	bf00      	nop
 8020b2c:	20000104 	.word	0x20000104

08020b30 <free>:
 8020b30:	4b02      	ldr	r3, [pc, #8]	; (8020b3c <free+0xc>)
 8020b32:	4601      	mov	r1, r0
 8020b34:	6818      	ldr	r0, [r3, #0]
 8020b36:	f000 b819 	b.w	8020b6c <_free_r>
 8020b3a:	bf00      	nop
 8020b3c:	20000104 	.word	0x20000104

08020b40 <memcpy>:
 8020b40:	440a      	add	r2, r1
 8020b42:	4291      	cmp	r1, r2
 8020b44:	f100 33ff 	add.w	r3, r0, #4294967295
 8020b48:	d100      	bne.n	8020b4c <memcpy+0xc>
 8020b4a:	4770      	bx	lr
 8020b4c:	b510      	push	{r4, lr}
 8020b4e:	f811 4b01 	ldrb.w	r4, [r1], #1
 8020b52:	f803 4f01 	strb.w	r4, [r3, #1]!
 8020b56:	4291      	cmp	r1, r2
 8020b58:	d1f9      	bne.n	8020b4e <memcpy+0xe>
 8020b5a:	bd10      	pop	{r4, pc}

08020b5c <memset>:
 8020b5c:	4402      	add	r2, r0
 8020b5e:	4603      	mov	r3, r0
 8020b60:	4293      	cmp	r3, r2
 8020b62:	d100      	bne.n	8020b66 <memset+0xa>
 8020b64:	4770      	bx	lr
 8020b66:	f803 1b01 	strb.w	r1, [r3], #1
 8020b6a:	e7f9      	b.n	8020b60 <memset+0x4>

08020b6c <_free_r>:
 8020b6c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8020b6e:	2900      	cmp	r1, #0
 8020b70:	d044      	beq.n	8020bfc <_free_r+0x90>
 8020b72:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8020b76:	9001      	str	r0, [sp, #4]
 8020b78:	2b00      	cmp	r3, #0
 8020b7a:	f1a1 0404 	sub.w	r4, r1, #4
 8020b7e:	bfb8      	it	lt
 8020b80:	18e4      	addlt	r4, r4, r3
 8020b82:	f000 ff41 	bl	8021a08 <__malloc_lock>
 8020b86:	4a1e      	ldr	r2, [pc, #120]	; (8020c00 <_free_r+0x94>)
 8020b88:	9801      	ldr	r0, [sp, #4]
 8020b8a:	6813      	ldr	r3, [r2, #0]
 8020b8c:	b933      	cbnz	r3, 8020b9c <_free_r+0x30>
 8020b8e:	6063      	str	r3, [r4, #4]
 8020b90:	6014      	str	r4, [r2, #0]
 8020b92:	b003      	add	sp, #12
 8020b94:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8020b98:	f000 bf3c 	b.w	8021a14 <__malloc_unlock>
 8020b9c:	42a3      	cmp	r3, r4
 8020b9e:	d908      	bls.n	8020bb2 <_free_r+0x46>
 8020ba0:	6825      	ldr	r5, [r4, #0]
 8020ba2:	1961      	adds	r1, r4, r5
 8020ba4:	428b      	cmp	r3, r1
 8020ba6:	bf01      	itttt	eq
 8020ba8:	6819      	ldreq	r1, [r3, #0]
 8020baa:	685b      	ldreq	r3, [r3, #4]
 8020bac:	1949      	addeq	r1, r1, r5
 8020bae:	6021      	streq	r1, [r4, #0]
 8020bb0:	e7ed      	b.n	8020b8e <_free_r+0x22>
 8020bb2:	461a      	mov	r2, r3
 8020bb4:	685b      	ldr	r3, [r3, #4]
 8020bb6:	b10b      	cbz	r3, 8020bbc <_free_r+0x50>
 8020bb8:	42a3      	cmp	r3, r4
 8020bba:	d9fa      	bls.n	8020bb2 <_free_r+0x46>
 8020bbc:	6811      	ldr	r1, [r2, #0]
 8020bbe:	1855      	adds	r5, r2, r1
 8020bc0:	42a5      	cmp	r5, r4
 8020bc2:	d10b      	bne.n	8020bdc <_free_r+0x70>
 8020bc4:	6824      	ldr	r4, [r4, #0]
 8020bc6:	4421      	add	r1, r4
 8020bc8:	1854      	adds	r4, r2, r1
 8020bca:	42a3      	cmp	r3, r4
 8020bcc:	6011      	str	r1, [r2, #0]
 8020bce:	d1e0      	bne.n	8020b92 <_free_r+0x26>
 8020bd0:	681c      	ldr	r4, [r3, #0]
 8020bd2:	685b      	ldr	r3, [r3, #4]
 8020bd4:	6053      	str	r3, [r2, #4]
 8020bd6:	4421      	add	r1, r4
 8020bd8:	6011      	str	r1, [r2, #0]
 8020bda:	e7da      	b.n	8020b92 <_free_r+0x26>
 8020bdc:	d902      	bls.n	8020be4 <_free_r+0x78>
 8020bde:	230c      	movs	r3, #12
 8020be0:	6003      	str	r3, [r0, #0]
 8020be2:	e7d6      	b.n	8020b92 <_free_r+0x26>
 8020be4:	6825      	ldr	r5, [r4, #0]
 8020be6:	1961      	adds	r1, r4, r5
 8020be8:	428b      	cmp	r3, r1
 8020bea:	bf04      	itt	eq
 8020bec:	6819      	ldreq	r1, [r3, #0]
 8020bee:	685b      	ldreq	r3, [r3, #4]
 8020bf0:	6063      	str	r3, [r4, #4]
 8020bf2:	bf04      	itt	eq
 8020bf4:	1949      	addeq	r1, r1, r5
 8020bf6:	6021      	streq	r1, [r4, #0]
 8020bf8:	6054      	str	r4, [r2, #4]
 8020bfa:	e7ca      	b.n	8020b92 <_free_r+0x26>
 8020bfc:	b003      	add	sp, #12
 8020bfe:	bd30      	pop	{r4, r5, pc}
 8020c00:	200156c0 	.word	0x200156c0

08020c04 <sbrk_aligned>:
 8020c04:	b570      	push	{r4, r5, r6, lr}
 8020c06:	4e0e      	ldr	r6, [pc, #56]	; (8020c40 <sbrk_aligned+0x3c>)
 8020c08:	460c      	mov	r4, r1
 8020c0a:	6831      	ldr	r1, [r6, #0]
 8020c0c:	4605      	mov	r5, r0
 8020c0e:	b911      	cbnz	r1, 8020c16 <sbrk_aligned+0x12>
 8020c10:	f000 fbe4 	bl	80213dc <_sbrk_r>
 8020c14:	6030      	str	r0, [r6, #0]
 8020c16:	4621      	mov	r1, r4
 8020c18:	4628      	mov	r0, r5
 8020c1a:	f000 fbdf 	bl	80213dc <_sbrk_r>
 8020c1e:	1c43      	adds	r3, r0, #1
 8020c20:	d00a      	beq.n	8020c38 <sbrk_aligned+0x34>
 8020c22:	1cc4      	adds	r4, r0, #3
 8020c24:	f024 0403 	bic.w	r4, r4, #3
 8020c28:	42a0      	cmp	r0, r4
 8020c2a:	d007      	beq.n	8020c3c <sbrk_aligned+0x38>
 8020c2c:	1a21      	subs	r1, r4, r0
 8020c2e:	4628      	mov	r0, r5
 8020c30:	f000 fbd4 	bl	80213dc <_sbrk_r>
 8020c34:	3001      	adds	r0, #1
 8020c36:	d101      	bne.n	8020c3c <sbrk_aligned+0x38>
 8020c38:	f04f 34ff 	mov.w	r4, #4294967295
 8020c3c:	4620      	mov	r0, r4
 8020c3e:	bd70      	pop	{r4, r5, r6, pc}
 8020c40:	200156c4 	.word	0x200156c4

08020c44 <_malloc_r>:
 8020c44:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8020c48:	1ccd      	adds	r5, r1, #3
 8020c4a:	f025 0503 	bic.w	r5, r5, #3
 8020c4e:	3508      	adds	r5, #8
 8020c50:	2d0c      	cmp	r5, #12
 8020c52:	bf38      	it	cc
 8020c54:	250c      	movcc	r5, #12
 8020c56:	2d00      	cmp	r5, #0
 8020c58:	4607      	mov	r7, r0
 8020c5a:	db01      	blt.n	8020c60 <_malloc_r+0x1c>
 8020c5c:	42a9      	cmp	r1, r5
 8020c5e:	d905      	bls.n	8020c6c <_malloc_r+0x28>
 8020c60:	230c      	movs	r3, #12
 8020c62:	603b      	str	r3, [r7, #0]
 8020c64:	2600      	movs	r6, #0
 8020c66:	4630      	mov	r0, r6
 8020c68:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8020c6c:	4e2e      	ldr	r6, [pc, #184]	; (8020d28 <_malloc_r+0xe4>)
 8020c6e:	f000 fecb 	bl	8021a08 <__malloc_lock>
 8020c72:	6833      	ldr	r3, [r6, #0]
 8020c74:	461c      	mov	r4, r3
 8020c76:	bb34      	cbnz	r4, 8020cc6 <_malloc_r+0x82>
 8020c78:	4629      	mov	r1, r5
 8020c7a:	4638      	mov	r0, r7
 8020c7c:	f7ff ffc2 	bl	8020c04 <sbrk_aligned>
 8020c80:	1c43      	adds	r3, r0, #1
 8020c82:	4604      	mov	r4, r0
 8020c84:	d14d      	bne.n	8020d22 <_malloc_r+0xde>
 8020c86:	6834      	ldr	r4, [r6, #0]
 8020c88:	4626      	mov	r6, r4
 8020c8a:	2e00      	cmp	r6, #0
 8020c8c:	d140      	bne.n	8020d10 <_malloc_r+0xcc>
 8020c8e:	6823      	ldr	r3, [r4, #0]
 8020c90:	4631      	mov	r1, r6
 8020c92:	4638      	mov	r0, r7
 8020c94:	eb04 0803 	add.w	r8, r4, r3
 8020c98:	f000 fba0 	bl	80213dc <_sbrk_r>
 8020c9c:	4580      	cmp	r8, r0
 8020c9e:	d13a      	bne.n	8020d16 <_malloc_r+0xd2>
 8020ca0:	6821      	ldr	r1, [r4, #0]
 8020ca2:	3503      	adds	r5, #3
 8020ca4:	1a6d      	subs	r5, r5, r1
 8020ca6:	f025 0503 	bic.w	r5, r5, #3
 8020caa:	3508      	adds	r5, #8
 8020cac:	2d0c      	cmp	r5, #12
 8020cae:	bf38      	it	cc
 8020cb0:	250c      	movcc	r5, #12
 8020cb2:	4629      	mov	r1, r5
 8020cb4:	4638      	mov	r0, r7
 8020cb6:	f7ff ffa5 	bl	8020c04 <sbrk_aligned>
 8020cba:	3001      	adds	r0, #1
 8020cbc:	d02b      	beq.n	8020d16 <_malloc_r+0xd2>
 8020cbe:	6823      	ldr	r3, [r4, #0]
 8020cc0:	442b      	add	r3, r5
 8020cc2:	6023      	str	r3, [r4, #0]
 8020cc4:	e00e      	b.n	8020ce4 <_malloc_r+0xa0>
 8020cc6:	6822      	ldr	r2, [r4, #0]
 8020cc8:	1b52      	subs	r2, r2, r5
 8020cca:	d41e      	bmi.n	8020d0a <_malloc_r+0xc6>
 8020ccc:	2a0b      	cmp	r2, #11
 8020cce:	d916      	bls.n	8020cfe <_malloc_r+0xba>
 8020cd0:	1961      	adds	r1, r4, r5
 8020cd2:	42a3      	cmp	r3, r4
 8020cd4:	6025      	str	r5, [r4, #0]
 8020cd6:	bf18      	it	ne
 8020cd8:	6059      	strne	r1, [r3, #4]
 8020cda:	6863      	ldr	r3, [r4, #4]
 8020cdc:	bf08      	it	eq
 8020cde:	6031      	streq	r1, [r6, #0]
 8020ce0:	5162      	str	r2, [r4, r5]
 8020ce2:	604b      	str	r3, [r1, #4]
 8020ce4:	4638      	mov	r0, r7
 8020ce6:	f104 060b 	add.w	r6, r4, #11
 8020cea:	f000 fe93 	bl	8021a14 <__malloc_unlock>
 8020cee:	f026 0607 	bic.w	r6, r6, #7
 8020cf2:	1d23      	adds	r3, r4, #4
 8020cf4:	1af2      	subs	r2, r6, r3
 8020cf6:	d0b6      	beq.n	8020c66 <_malloc_r+0x22>
 8020cf8:	1b9b      	subs	r3, r3, r6
 8020cfa:	50a3      	str	r3, [r4, r2]
 8020cfc:	e7b3      	b.n	8020c66 <_malloc_r+0x22>
 8020cfe:	6862      	ldr	r2, [r4, #4]
 8020d00:	42a3      	cmp	r3, r4
 8020d02:	bf0c      	ite	eq
 8020d04:	6032      	streq	r2, [r6, #0]
 8020d06:	605a      	strne	r2, [r3, #4]
 8020d08:	e7ec      	b.n	8020ce4 <_malloc_r+0xa0>
 8020d0a:	4623      	mov	r3, r4
 8020d0c:	6864      	ldr	r4, [r4, #4]
 8020d0e:	e7b2      	b.n	8020c76 <_malloc_r+0x32>
 8020d10:	4634      	mov	r4, r6
 8020d12:	6876      	ldr	r6, [r6, #4]
 8020d14:	e7b9      	b.n	8020c8a <_malloc_r+0x46>
 8020d16:	230c      	movs	r3, #12
 8020d18:	603b      	str	r3, [r7, #0]
 8020d1a:	4638      	mov	r0, r7
 8020d1c:	f000 fe7a 	bl	8021a14 <__malloc_unlock>
 8020d20:	e7a1      	b.n	8020c66 <_malloc_r+0x22>
 8020d22:	6025      	str	r5, [r4, #0]
 8020d24:	e7de      	b.n	8020ce4 <_malloc_r+0xa0>
 8020d26:	bf00      	nop
 8020d28:	200156c0 	.word	0x200156c0

08020d2c <__sfputc_r>:
 8020d2c:	6893      	ldr	r3, [r2, #8]
 8020d2e:	3b01      	subs	r3, #1
 8020d30:	2b00      	cmp	r3, #0
 8020d32:	b410      	push	{r4}
 8020d34:	6093      	str	r3, [r2, #8]
 8020d36:	da08      	bge.n	8020d4a <__sfputc_r+0x1e>
 8020d38:	6994      	ldr	r4, [r2, #24]
 8020d3a:	42a3      	cmp	r3, r4
 8020d3c:	db01      	blt.n	8020d42 <__sfputc_r+0x16>
 8020d3e:	290a      	cmp	r1, #10
 8020d40:	d103      	bne.n	8020d4a <__sfputc_r+0x1e>
 8020d42:	f85d 4b04 	ldr.w	r4, [sp], #4
 8020d46:	f000 bbe1 	b.w	802150c <__swbuf_r>
 8020d4a:	6813      	ldr	r3, [r2, #0]
 8020d4c:	1c58      	adds	r0, r3, #1
 8020d4e:	6010      	str	r0, [r2, #0]
 8020d50:	7019      	strb	r1, [r3, #0]
 8020d52:	4608      	mov	r0, r1
 8020d54:	f85d 4b04 	ldr.w	r4, [sp], #4
 8020d58:	4770      	bx	lr

08020d5a <__sfputs_r>:
 8020d5a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8020d5c:	4606      	mov	r6, r0
 8020d5e:	460f      	mov	r7, r1
 8020d60:	4614      	mov	r4, r2
 8020d62:	18d5      	adds	r5, r2, r3
 8020d64:	42ac      	cmp	r4, r5
 8020d66:	d101      	bne.n	8020d6c <__sfputs_r+0x12>
 8020d68:	2000      	movs	r0, #0
 8020d6a:	e007      	b.n	8020d7c <__sfputs_r+0x22>
 8020d6c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8020d70:	463a      	mov	r2, r7
 8020d72:	4630      	mov	r0, r6
 8020d74:	f7ff ffda 	bl	8020d2c <__sfputc_r>
 8020d78:	1c43      	adds	r3, r0, #1
 8020d7a:	d1f3      	bne.n	8020d64 <__sfputs_r+0xa>
 8020d7c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08020d80 <_vfiprintf_r>:
 8020d80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020d84:	460d      	mov	r5, r1
 8020d86:	b09d      	sub	sp, #116	; 0x74
 8020d88:	4614      	mov	r4, r2
 8020d8a:	4698      	mov	r8, r3
 8020d8c:	4606      	mov	r6, r0
 8020d8e:	b118      	cbz	r0, 8020d98 <_vfiprintf_r+0x18>
 8020d90:	6983      	ldr	r3, [r0, #24]
 8020d92:	b90b      	cbnz	r3, 8020d98 <_vfiprintf_r+0x18>
 8020d94:	f7ff fdec 	bl	8020970 <__sinit>
 8020d98:	4b89      	ldr	r3, [pc, #548]	; (8020fc0 <_vfiprintf_r+0x240>)
 8020d9a:	429d      	cmp	r5, r3
 8020d9c:	d11b      	bne.n	8020dd6 <_vfiprintf_r+0x56>
 8020d9e:	6875      	ldr	r5, [r6, #4]
 8020da0:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8020da2:	07d9      	lsls	r1, r3, #31
 8020da4:	d405      	bmi.n	8020db2 <_vfiprintf_r+0x32>
 8020da6:	89ab      	ldrh	r3, [r5, #12]
 8020da8:	059a      	lsls	r2, r3, #22
 8020daa:	d402      	bmi.n	8020db2 <_vfiprintf_r+0x32>
 8020dac:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8020dae:	f7ff feb4 	bl	8020b1a <__retarget_lock_acquire_recursive>
 8020db2:	89ab      	ldrh	r3, [r5, #12]
 8020db4:	071b      	lsls	r3, r3, #28
 8020db6:	d501      	bpl.n	8020dbc <_vfiprintf_r+0x3c>
 8020db8:	692b      	ldr	r3, [r5, #16]
 8020dba:	b9eb      	cbnz	r3, 8020df8 <_vfiprintf_r+0x78>
 8020dbc:	4629      	mov	r1, r5
 8020dbe:	4630      	mov	r0, r6
 8020dc0:	f000 fc08 	bl	80215d4 <__swsetup_r>
 8020dc4:	b1c0      	cbz	r0, 8020df8 <_vfiprintf_r+0x78>
 8020dc6:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8020dc8:	07dc      	lsls	r4, r3, #31
 8020dca:	d50e      	bpl.n	8020dea <_vfiprintf_r+0x6a>
 8020dcc:	f04f 30ff 	mov.w	r0, #4294967295
 8020dd0:	b01d      	add	sp, #116	; 0x74
 8020dd2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020dd6:	4b7b      	ldr	r3, [pc, #492]	; (8020fc4 <_vfiprintf_r+0x244>)
 8020dd8:	429d      	cmp	r5, r3
 8020dda:	d101      	bne.n	8020de0 <_vfiprintf_r+0x60>
 8020ddc:	68b5      	ldr	r5, [r6, #8]
 8020dde:	e7df      	b.n	8020da0 <_vfiprintf_r+0x20>
 8020de0:	4b79      	ldr	r3, [pc, #484]	; (8020fc8 <_vfiprintf_r+0x248>)
 8020de2:	429d      	cmp	r5, r3
 8020de4:	bf08      	it	eq
 8020de6:	68f5      	ldreq	r5, [r6, #12]
 8020de8:	e7da      	b.n	8020da0 <_vfiprintf_r+0x20>
 8020dea:	89ab      	ldrh	r3, [r5, #12]
 8020dec:	0598      	lsls	r0, r3, #22
 8020dee:	d4ed      	bmi.n	8020dcc <_vfiprintf_r+0x4c>
 8020df0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8020df2:	f7ff fe94 	bl	8020b1e <__retarget_lock_release_recursive>
 8020df6:	e7e9      	b.n	8020dcc <_vfiprintf_r+0x4c>
 8020df8:	2300      	movs	r3, #0
 8020dfa:	9309      	str	r3, [sp, #36]	; 0x24
 8020dfc:	2320      	movs	r3, #32
 8020dfe:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8020e02:	f8cd 800c 	str.w	r8, [sp, #12]
 8020e06:	2330      	movs	r3, #48	; 0x30
 8020e08:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8020fcc <_vfiprintf_r+0x24c>
 8020e0c:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8020e10:	f04f 0901 	mov.w	r9, #1
 8020e14:	4623      	mov	r3, r4
 8020e16:	469a      	mov	sl, r3
 8020e18:	f813 2b01 	ldrb.w	r2, [r3], #1
 8020e1c:	b10a      	cbz	r2, 8020e22 <_vfiprintf_r+0xa2>
 8020e1e:	2a25      	cmp	r2, #37	; 0x25
 8020e20:	d1f9      	bne.n	8020e16 <_vfiprintf_r+0x96>
 8020e22:	ebba 0b04 	subs.w	fp, sl, r4
 8020e26:	d00b      	beq.n	8020e40 <_vfiprintf_r+0xc0>
 8020e28:	465b      	mov	r3, fp
 8020e2a:	4622      	mov	r2, r4
 8020e2c:	4629      	mov	r1, r5
 8020e2e:	4630      	mov	r0, r6
 8020e30:	f7ff ff93 	bl	8020d5a <__sfputs_r>
 8020e34:	3001      	adds	r0, #1
 8020e36:	f000 80aa 	beq.w	8020f8e <_vfiprintf_r+0x20e>
 8020e3a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8020e3c:	445a      	add	r2, fp
 8020e3e:	9209      	str	r2, [sp, #36]	; 0x24
 8020e40:	f89a 3000 	ldrb.w	r3, [sl]
 8020e44:	2b00      	cmp	r3, #0
 8020e46:	f000 80a2 	beq.w	8020f8e <_vfiprintf_r+0x20e>
 8020e4a:	2300      	movs	r3, #0
 8020e4c:	f04f 32ff 	mov.w	r2, #4294967295
 8020e50:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8020e54:	f10a 0a01 	add.w	sl, sl, #1
 8020e58:	9304      	str	r3, [sp, #16]
 8020e5a:	9307      	str	r3, [sp, #28]
 8020e5c:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8020e60:	931a      	str	r3, [sp, #104]	; 0x68
 8020e62:	4654      	mov	r4, sl
 8020e64:	2205      	movs	r2, #5
 8020e66:	f814 1b01 	ldrb.w	r1, [r4], #1
 8020e6a:	4858      	ldr	r0, [pc, #352]	; (8020fcc <_vfiprintf_r+0x24c>)
 8020e6c:	f7df f9c0 	bl	80001f0 <memchr>
 8020e70:	9a04      	ldr	r2, [sp, #16]
 8020e72:	b9d8      	cbnz	r0, 8020eac <_vfiprintf_r+0x12c>
 8020e74:	06d1      	lsls	r1, r2, #27
 8020e76:	bf44      	itt	mi
 8020e78:	2320      	movmi	r3, #32
 8020e7a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8020e7e:	0713      	lsls	r3, r2, #28
 8020e80:	bf44      	itt	mi
 8020e82:	232b      	movmi	r3, #43	; 0x2b
 8020e84:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8020e88:	f89a 3000 	ldrb.w	r3, [sl]
 8020e8c:	2b2a      	cmp	r3, #42	; 0x2a
 8020e8e:	d015      	beq.n	8020ebc <_vfiprintf_r+0x13c>
 8020e90:	9a07      	ldr	r2, [sp, #28]
 8020e92:	4654      	mov	r4, sl
 8020e94:	2000      	movs	r0, #0
 8020e96:	f04f 0c0a 	mov.w	ip, #10
 8020e9a:	4621      	mov	r1, r4
 8020e9c:	f811 3b01 	ldrb.w	r3, [r1], #1
 8020ea0:	3b30      	subs	r3, #48	; 0x30
 8020ea2:	2b09      	cmp	r3, #9
 8020ea4:	d94e      	bls.n	8020f44 <_vfiprintf_r+0x1c4>
 8020ea6:	b1b0      	cbz	r0, 8020ed6 <_vfiprintf_r+0x156>
 8020ea8:	9207      	str	r2, [sp, #28]
 8020eaa:	e014      	b.n	8020ed6 <_vfiprintf_r+0x156>
 8020eac:	eba0 0308 	sub.w	r3, r0, r8
 8020eb0:	fa09 f303 	lsl.w	r3, r9, r3
 8020eb4:	4313      	orrs	r3, r2
 8020eb6:	9304      	str	r3, [sp, #16]
 8020eb8:	46a2      	mov	sl, r4
 8020eba:	e7d2      	b.n	8020e62 <_vfiprintf_r+0xe2>
 8020ebc:	9b03      	ldr	r3, [sp, #12]
 8020ebe:	1d19      	adds	r1, r3, #4
 8020ec0:	681b      	ldr	r3, [r3, #0]
 8020ec2:	9103      	str	r1, [sp, #12]
 8020ec4:	2b00      	cmp	r3, #0
 8020ec6:	bfbb      	ittet	lt
 8020ec8:	425b      	neglt	r3, r3
 8020eca:	f042 0202 	orrlt.w	r2, r2, #2
 8020ece:	9307      	strge	r3, [sp, #28]
 8020ed0:	9307      	strlt	r3, [sp, #28]
 8020ed2:	bfb8      	it	lt
 8020ed4:	9204      	strlt	r2, [sp, #16]
 8020ed6:	7823      	ldrb	r3, [r4, #0]
 8020ed8:	2b2e      	cmp	r3, #46	; 0x2e
 8020eda:	d10c      	bne.n	8020ef6 <_vfiprintf_r+0x176>
 8020edc:	7863      	ldrb	r3, [r4, #1]
 8020ede:	2b2a      	cmp	r3, #42	; 0x2a
 8020ee0:	d135      	bne.n	8020f4e <_vfiprintf_r+0x1ce>
 8020ee2:	9b03      	ldr	r3, [sp, #12]
 8020ee4:	1d1a      	adds	r2, r3, #4
 8020ee6:	681b      	ldr	r3, [r3, #0]
 8020ee8:	9203      	str	r2, [sp, #12]
 8020eea:	2b00      	cmp	r3, #0
 8020eec:	bfb8      	it	lt
 8020eee:	f04f 33ff 	movlt.w	r3, #4294967295
 8020ef2:	3402      	adds	r4, #2
 8020ef4:	9305      	str	r3, [sp, #20]
 8020ef6:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8020fdc <_vfiprintf_r+0x25c>
 8020efa:	7821      	ldrb	r1, [r4, #0]
 8020efc:	2203      	movs	r2, #3
 8020efe:	4650      	mov	r0, sl
 8020f00:	f7df f976 	bl	80001f0 <memchr>
 8020f04:	b140      	cbz	r0, 8020f18 <_vfiprintf_r+0x198>
 8020f06:	2340      	movs	r3, #64	; 0x40
 8020f08:	eba0 000a 	sub.w	r0, r0, sl
 8020f0c:	fa03 f000 	lsl.w	r0, r3, r0
 8020f10:	9b04      	ldr	r3, [sp, #16]
 8020f12:	4303      	orrs	r3, r0
 8020f14:	3401      	adds	r4, #1
 8020f16:	9304      	str	r3, [sp, #16]
 8020f18:	f814 1b01 	ldrb.w	r1, [r4], #1
 8020f1c:	482c      	ldr	r0, [pc, #176]	; (8020fd0 <_vfiprintf_r+0x250>)
 8020f1e:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8020f22:	2206      	movs	r2, #6
 8020f24:	f7df f964 	bl	80001f0 <memchr>
 8020f28:	2800      	cmp	r0, #0
 8020f2a:	d03f      	beq.n	8020fac <_vfiprintf_r+0x22c>
 8020f2c:	4b29      	ldr	r3, [pc, #164]	; (8020fd4 <_vfiprintf_r+0x254>)
 8020f2e:	bb1b      	cbnz	r3, 8020f78 <_vfiprintf_r+0x1f8>
 8020f30:	9b03      	ldr	r3, [sp, #12]
 8020f32:	3307      	adds	r3, #7
 8020f34:	f023 0307 	bic.w	r3, r3, #7
 8020f38:	3308      	adds	r3, #8
 8020f3a:	9303      	str	r3, [sp, #12]
 8020f3c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020f3e:	443b      	add	r3, r7
 8020f40:	9309      	str	r3, [sp, #36]	; 0x24
 8020f42:	e767      	b.n	8020e14 <_vfiprintf_r+0x94>
 8020f44:	fb0c 3202 	mla	r2, ip, r2, r3
 8020f48:	460c      	mov	r4, r1
 8020f4a:	2001      	movs	r0, #1
 8020f4c:	e7a5      	b.n	8020e9a <_vfiprintf_r+0x11a>
 8020f4e:	2300      	movs	r3, #0
 8020f50:	3401      	adds	r4, #1
 8020f52:	9305      	str	r3, [sp, #20]
 8020f54:	4619      	mov	r1, r3
 8020f56:	f04f 0c0a 	mov.w	ip, #10
 8020f5a:	4620      	mov	r0, r4
 8020f5c:	f810 2b01 	ldrb.w	r2, [r0], #1
 8020f60:	3a30      	subs	r2, #48	; 0x30
 8020f62:	2a09      	cmp	r2, #9
 8020f64:	d903      	bls.n	8020f6e <_vfiprintf_r+0x1ee>
 8020f66:	2b00      	cmp	r3, #0
 8020f68:	d0c5      	beq.n	8020ef6 <_vfiprintf_r+0x176>
 8020f6a:	9105      	str	r1, [sp, #20]
 8020f6c:	e7c3      	b.n	8020ef6 <_vfiprintf_r+0x176>
 8020f6e:	fb0c 2101 	mla	r1, ip, r1, r2
 8020f72:	4604      	mov	r4, r0
 8020f74:	2301      	movs	r3, #1
 8020f76:	e7f0      	b.n	8020f5a <_vfiprintf_r+0x1da>
 8020f78:	ab03      	add	r3, sp, #12
 8020f7a:	9300      	str	r3, [sp, #0]
 8020f7c:	462a      	mov	r2, r5
 8020f7e:	4b16      	ldr	r3, [pc, #88]	; (8020fd8 <_vfiprintf_r+0x258>)
 8020f80:	a904      	add	r1, sp, #16
 8020f82:	4630      	mov	r0, r6
 8020f84:	f3af 8000 	nop.w
 8020f88:	4607      	mov	r7, r0
 8020f8a:	1c78      	adds	r0, r7, #1
 8020f8c:	d1d6      	bne.n	8020f3c <_vfiprintf_r+0x1bc>
 8020f8e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8020f90:	07d9      	lsls	r1, r3, #31
 8020f92:	d405      	bmi.n	8020fa0 <_vfiprintf_r+0x220>
 8020f94:	89ab      	ldrh	r3, [r5, #12]
 8020f96:	059a      	lsls	r2, r3, #22
 8020f98:	d402      	bmi.n	8020fa0 <_vfiprintf_r+0x220>
 8020f9a:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8020f9c:	f7ff fdbf 	bl	8020b1e <__retarget_lock_release_recursive>
 8020fa0:	89ab      	ldrh	r3, [r5, #12]
 8020fa2:	065b      	lsls	r3, r3, #25
 8020fa4:	f53f af12 	bmi.w	8020dcc <_vfiprintf_r+0x4c>
 8020fa8:	9809      	ldr	r0, [sp, #36]	; 0x24
 8020faa:	e711      	b.n	8020dd0 <_vfiprintf_r+0x50>
 8020fac:	ab03      	add	r3, sp, #12
 8020fae:	9300      	str	r3, [sp, #0]
 8020fb0:	462a      	mov	r2, r5
 8020fb2:	4b09      	ldr	r3, [pc, #36]	; (8020fd8 <_vfiprintf_r+0x258>)
 8020fb4:	a904      	add	r1, sp, #16
 8020fb6:	4630      	mov	r0, r6
 8020fb8:	f000 f880 	bl	80210bc <_printf_i>
 8020fbc:	e7e4      	b.n	8020f88 <_vfiprintf_r+0x208>
 8020fbe:	bf00      	nop
 8020fc0:	080246f8 	.word	0x080246f8
 8020fc4:	08024718 	.word	0x08024718
 8020fc8:	080246d8 	.word	0x080246d8
 8020fcc:	0802473c 	.word	0x0802473c
 8020fd0:	08024746 	.word	0x08024746
 8020fd4:	00000000 	.word	0x00000000
 8020fd8:	08020d5b 	.word	0x08020d5b
 8020fdc:	08024742 	.word	0x08024742

08020fe0 <_printf_common>:
 8020fe0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8020fe4:	4616      	mov	r6, r2
 8020fe6:	4699      	mov	r9, r3
 8020fe8:	688a      	ldr	r2, [r1, #8]
 8020fea:	690b      	ldr	r3, [r1, #16]
 8020fec:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8020ff0:	4293      	cmp	r3, r2
 8020ff2:	bfb8      	it	lt
 8020ff4:	4613      	movlt	r3, r2
 8020ff6:	6033      	str	r3, [r6, #0]
 8020ff8:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8020ffc:	4607      	mov	r7, r0
 8020ffe:	460c      	mov	r4, r1
 8021000:	b10a      	cbz	r2, 8021006 <_printf_common+0x26>
 8021002:	3301      	adds	r3, #1
 8021004:	6033      	str	r3, [r6, #0]
 8021006:	6823      	ldr	r3, [r4, #0]
 8021008:	0699      	lsls	r1, r3, #26
 802100a:	bf42      	ittt	mi
 802100c:	6833      	ldrmi	r3, [r6, #0]
 802100e:	3302      	addmi	r3, #2
 8021010:	6033      	strmi	r3, [r6, #0]
 8021012:	6825      	ldr	r5, [r4, #0]
 8021014:	f015 0506 	ands.w	r5, r5, #6
 8021018:	d106      	bne.n	8021028 <_printf_common+0x48>
 802101a:	f104 0a19 	add.w	sl, r4, #25
 802101e:	68e3      	ldr	r3, [r4, #12]
 8021020:	6832      	ldr	r2, [r6, #0]
 8021022:	1a9b      	subs	r3, r3, r2
 8021024:	42ab      	cmp	r3, r5
 8021026:	dc26      	bgt.n	8021076 <_printf_common+0x96>
 8021028:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 802102c:	1e13      	subs	r3, r2, #0
 802102e:	6822      	ldr	r2, [r4, #0]
 8021030:	bf18      	it	ne
 8021032:	2301      	movne	r3, #1
 8021034:	0692      	lsls	r2, r2, #26
 8021036:	d42b      	bmi.n	8021090 <_printf_common+0xb0>
 8021038:	f104 0243 	add.w	r2, r4, #67	; 0x43
 802103c:	4649      	mov	r1, r9
 802103e:	4638      	mov	r0, r7
 8021040:	47c0      	blx	r8
 8021042:	3001      	adds	r0, #1
 8021044:	d01e      	beq.n	8021084 <_printf_common+0xa4>
 8021046:	6823      	ldr	r3, [r4, #0]
 8021048:	68e5      	ldr	r5, [r4, #12]
 802104a:	6832      	ldr	r2, [r6, #0]
 802104c:	f003 0306 	and.w	r3, r3, #6
 8021050:	2b04      	cmp	r3, #4
 8021052:	bf08      	it	eq
 8021054:	1aad      	subeq	r5, r5, r2
 8021056:	68a3      	ldr	r3, [r4, #8]
 8021058:	6922      	ldr	r2, [r4, #16]
 802105a:	bf0c      	ite	eq
 802105c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8021060:	2500      	movne	r5, #0
 8021062:	4293      	cmp	r3, r2
 8021064:	bfc4      	itt	gt
 8021066:	1a9b      	subgt	r3, r3, r2
 8021068:	18ed      	addgt	r5, r5, r3
 802106a:	2600      	movs	r6, #0
 802106c:	341a      	adds	r4, #26
 802106e:	42b5      	cmp	r5, r6
 8021070:	d11a      	bne.n	80210a8 <_printf_common+0xc8>
 8021072:	2000      	movs	r0, #0
 8021074:	e008      	b.n	8021088 <_printf_common+0xa8>
 8021076:	2301      	movs	r3, #1
 8021078:	4652      	mov	r2, sl
 802107a:	4649      	mov	r1, r9
 802107c:	4638      	mov	r0, r7
 802107e:	47c0      	blx	r8
 8021080:	3001      	adds	r0, #1
 8021082:	d103      	bne.n	802108c <_printf_common+0xac>
 8021084:	f04f 30ff 	mov.w	r0, #4294967295
 8021088:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802108c:	3501      	adds	r5, #1
 802108e:	e7c6      	b.n	802101e <_printf_common+0x3e>
 8021090:	18e1      	adds	r1, r4, r3
 8021092:	1c5a      	adds	r2, r3, #1
 8021094:	2030      	movs	r0, #48	; 0x30
 8021096:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 802109a:	4422      	add	r2, r4
 802109c:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 80210a0:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 80210a4:	3302      	adds	r3, #2
 80210a6:	e7c7      	b.n	8021038 <_printf_common+0x58>
 80210a8:	2301      	movs	r3, #1
 80210aa:	4622      	mov	r2, r4
 80210ac:	4649      	mov	r1, r9
 80210ae:	4638      	mov	r0, r7
 80210b0:	47c0      	blx	r8
 80210b2:	3001      	adds	r0, #1
 80210b4:	d0e6      	beq.n	8021084 <_printf_common+0xa4>
 80210b6:	3601      	adds	r6, #1
 80210b8:	e7d9      	b.n	802106e <_printf_common+0x8e>
	...

080210bc <_printf_i>:
 80210bc:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80210c0:	7e0f      	ldrb	r7, [r1, #24]
 80210c2:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80210c4:	2f78      	cmp	r7, #120	; 0x78
 80210c6:	4691      	mov	r9, r2
 80210c8:	4680      	mov	r8, r0
 80210ca:	460c      	mov	r4, r1
 80210cc:	469a      	mov	sl, r3
 80210ce:	f101 0243 	add.w	r2, r1, #67	; 0x43
 80210d2:	d807      	bhi.n	80210e4 <_printf_i+0x28>
 80210d4:	2f62      	cmp	r7, #98	; 0x62
 80210d6:	d80a      	bhi.n	80210ee <_printf_i+0x32>
 80210d8:	2f00      	cmp	r7, #0
 80210da:	f000 80d8 	beq.w	802128e <_printf_i+0x1d2>
 80210de:	2f58      	cmp	r7, #88	; 0x58
 80210e0:	f000 80a3 	beq.w	802122a <_printf_i+0x16e>
 80210e4:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80210e8:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 80210ec:	e03a      	b.n	8021164 <_printf_i+0xa8>
 80210ee:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 80210f2:	2b15      	cmp	r3, #21
 80210f4:	d8f6      	bhi.n	80210e4 <_printf_i+0x28>
 80210f6:	a101      	add	r1, pc, #4	; (adr r1, 80210fc <_printf_i+0x40>)
 80210f8:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 80210fc:	08021155 	.word	0x08021155
 8021100:	08021169 	.word	0x08021169
 8021104:	080210e5 	.word	0x080210e5
 8021108:	080210e5 	.word	0x080210e5
 802110c:	080210e5 	.word	0x080210e5
 8021110:	080210e5 	.word	0x080210e5
 8021114:	08021169 	.word	0x08021169
 8021118:	080210e5 	.word	0x080210e5
 802111c:	080210e5 	.word	0x080210e5
 8021120:	080210e5 	.word	0x080210e5
 8021124:	080210e5 	.word	0x080210e5
 8021128:	08021275 	.word	0x08021275
 802112c:	08021199 	.word	0x08021199
 8021130:	08021257 	.word	0x08021257
 8021134:	080210e5 	.word	0x080210e5
 8021138:	080210e5 	.word	0x080210e5
 802113c:	08021297 	.word	0x08021297
 8021140:	080210e5 	.word	0x080210e5
 8021144:	08021199 	.word	0x08021199
 8021148:	080210e5 	.word	0x080210e5
 802114c:	080210e5 	.word	0x080210e5
 8021150:	0802125f 	.word	0x0802125f
 8021154:	682b      	ldr	r3, [r5, #0]
 8021156:	1d1a      	adds	r2, r3, #4
 8021158:	681b      	ldr	r3, [r3, #0]
 802115a:	602a      	str	r2, [r5, #0]
 802115c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8021160:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8021164:	2301      	movs	r3, #1
 8021166:	e0a3      	b.n	80212b0 <_printf_i+0x1f4>
 8021168:	6820      	ldr	r0, [r4, #0]
 802116a:	6829      	ldr	r1, [r5, #0]
 802116c:	0606      	lsls	r6, r0, #24
 802116e:	f101 0304 	add.w	r3, r1, #4
 8021172:	d50a      	bpl.n	802118a <_printf_i+0xce>
 8021174:	680e      	ldr	r6, [r1, #0]
 8021176:	602b      	str	r3, [r5, #0]
 8021178:	2e00      	cmp	r6, #0
 802117a:	da03      	bge.n	8021184 <_printf_i+0xc8>
 802117c:	232d      	movs	r3, #45	; 0x2d
 802117e:	4276      	negs	r6, r6
 8021180:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8021184:	485e      	ldr	r0, [pc, #376]	; (8021300 <_printf_i+0x244>)
 8021186:	230a      	movs	r3, #10
 8021188:	e019      	b.n	80211be <_printf_i+0x102>
 802118a:	680e      	ldr	r6, [r1, #0]
 802118c:	602b      	str	r3, [r5, #0]
 802118e:	f010 0f40 	tst.w	r0, #64	; 0x40
 8021192:	bf18      	it	ne
 8021194:	b236      	sxthne	r6, r6
 8021196:	e7ef      	b.n	8021178 <_printf_i+0xbc>
 8021198:	682b      	ldr	r3, [r5, #0]
 802119a:	6820      	ldr	r0, [r4, #0]
 802119c:	1d19      	adds	r1, r3, #4
 802119e:	6029      	str	r1, [r5, #0]
 80211a0:	0601      	lsls	r1, r0, #24
 80211a2:	d501      	bpl.n	80211a8 <_printf_i+0xec>
 80211a4:	681e      	ldr	r6, [r3, #0]
 80211a6:	e002      	b.n	80211ae <_printf_i+0xf2>
 80211a8:	0646      	lsls	r6, r0, #25
 80211aa:	d5fb      	bpl.n	80211a4 <_printf_i+0xe8>
 80211ac:	881e      	ldrh	r6, [r3, #0]
 80211ae:	4854      	ldr	r0, [pc, #336]	; (8021300 <_printf_i+0x244>)
 80211b0:	2f6f      	cmp	r7, #111	; 0x6f
 80211b2:	bf0c      	ite	eq
 80211b4:	2308      	moveq	r3, #8
 80211b6:	230a      	movne	r3, #10
 80211b8:	2100      	movs	r1, #0
 80211ba:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 80211be:	6865      	ldr	r5, [r4, #4]
 80211c0:	60a5      	str	r5, [r4, #8]
 80211c2:	2d00      	cmp	r5, #0
 80211c4:	bfa2      	ittt	ge
 80211c6:	6821      	ldrge	r1, [r4, #0]
 80211c8:	f021 0104 	bicge.w	r1, r1, #4
 80211cc:	6021      	strge	r1, [r4, #0]
 80211ce:	b90e      	cbnz	r6, 80211d4 <_printf_i+0x118>
 80211d0:	2d00      	cmp	r5, #0
 80211d2:	d04d      	beq.n	8021270 <_printf_i+0x1b4>
 80211d4:	4615      	mov	r5, r2
 80211d6:	fbb6 f1f3 	udiv	r1, r6, r3
 80211da:	fb03 6711 	mls	r7, r3, r1, r6
 80211de:	5dc7      	ldrb	r7, [r0, r7]
 80211e0:	f805 7d01 	strb.w	r7, [r5, #-1]!
 80211e4:	4637      	mov	r7, r6
 80211e6:	42bb      	cmp	r3, r7
 80211e8:	460e      	mov	r6, r1
 80211ea:	d9f4      	bls.n	80211d6 <_printf_i+0x11a>
 80211ec:	2b08      	cmp	r3, #8
 80211ee:	d10b      	bne.n	8021208 <_printf_i+0x14c>
 80211f0:	6823      	ldr	r3, [r4, #0]
 80211f2:	07de      	lsls	r6, r3, #31
 80211f4:	d508      	bpl.n	8021208 <_printf_i+0x14c>
 80211f6:	6923      	ldr	r3, [r4, #16]
 80211f8:	6861      	ldr	r1, [r4, #4]
 80211fa:	4299      	cmp	r1, r3
 80211fc:	bfde      	ittt	le
 80211fe:	2330      	movle	r3, #48	; 0x30
 8021200:	f805 3c01 	strble.w	r3, [r5, #-1]
 8021204:	f105 35ff 	addle.w	r5, r5, #4294967295
 8021208:	1b52      	subs	r2, r2, r5
 802120a:	6122      	str	r2, [r4, #16]
 802120c:	f8cd a000 	str.w	sl, [sp]
 8021210:	464b      	mov	r3, r9
 8021212:	aa03      	add	r2, sp, #12
 8021214:	4621      	mov	r1, r4
 8021216:	4640      	mov	r0, r8
 8021218:	f7ff fee2 	bl	8020fe0 <_printf_common>
 802121c:	3001      	adds	r0, #1
 802121e:	d14c      	bne.n	80212ba <_printf_i+0x1fe>
 8021220:	f04f 30ff 	mov.w	r0, #4294967295
 8021224:	b004      	add	sp, #16
 8021226:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802122a:	4835      	ldr	r0, [pc, #212]	; (8021300 <_printf_i+0x244>)
 802122c:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 8021230:	6829      	ldr	r1, [r5, #0]
 8021232:	6823      	ldr	r3, [r4, #0]
 8021234:	f851 6b04 	ldr.w	r6, [r1], #4
 8021238:	6029      	str	r1, [r5, #0]
 802123a:	061d      	lsls	r5, r3, #24
 802123c:	d514      	bpl.n	8021268 <_printf_i+0x1ac>
 802123e:	07df      	lsls	r7, r3, #31
 8021240:	bf44      	itt	mi
 8021242:	f043 0320 	orrmi.w	r3, r3, #32
 8021246:	6023      	strmi	r3, [r4, #0]
 8021248:	b91e      	cbnz	r6, 8021252 <_printf_i+0x196>
 802124a:	6823      	ldr	r3, [r4, #0]
 802124c:	f023 0320 	bic.w	r3, r3, #32
 8021250:	6023      	str	r3, [r4, #0]
 8021252:	2310      	movs	r3, #16
 8021254:	e7b0      	b.n	80211b8 <_printf_i+0xfc>
 8021256:	6823      	ldr	r3, [r4, #0]
 8021258:	f043 0320 	orr.w	r3, r3, #32
 802125c:	6023      	str	r3, [r4, #0]
 802125e:	2378      	movs	r3, #120	; 0x78
 8021260:	4828      	ldr	r0, [pc, #160]	; (8021304 <_printf_i+0x248>)
 8021262:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8021266:	e7e3      	b.n	8021230 <_printf_i+0x174>
 8021268:	0659      	lsls	r1, r3, #25
 802126a:	bf48      	it	mi
 802126c:	b2b6      	uxthmi	r6, r6
 802126e:	e7e6      	b.n	802123e <_printf_i+0x182>
 8021270:	4615      	mov	r5, r2
 8021272:	e7bb      	b.n	80211ec <_printf_i+0x130>
 8021274:	682b      	ldr	r3, [r5, #0]
 8021276:	6826      	ldr	r6, [r4, #0]
 8021278:	6961      	ldr	r1, [r4, #20]
 802127a:	1d18      	adds	r0, r3, #4
 802127c:	6028      	str	r0, [r5, #0]
 802127e:	0635      	lsls	r5, r6, #24
 8021280:	681b      	ldr	r3, [r3, #0]
 8021282:	d501      	bpl.n	8021288 <_printf_i+0x1cc>
 8021284:	6019      	str	r1, [r3, #0]
 8021286:	e002      	b.n	802128e <_printf_i+0x1d2>
 8021288:	0670      	lsls	r0, r6, #25
 802128a:	d5fb      	bpl.n	8021284 <_printf_i+0x1c8>
 802128c:	8019      	strh	r1, [r3, #0]
 802128e:	2300      	movs	r3, #0
 8021290:	6123      	str	r3, [r4, #16]
 8021292:	4615      	mov	r5, r2
 8021294:	e7ba      	b.n	802120c <_printf_i+0x150>
 8021296:	682b      	ldr	r3, [r5, #0]
 8021298:	1d1a      	adds	r2, r3, #4
 802129a:	602a      	str	r2, [r5, #0]
 802129c:	681d      	ldr	r5, [r3, #0]
 802129e:	6862      	ldr	r2, [r4, #4]
 80212a0:	2100      	movs	r1, #0
 80212a2:	4628      	mov	r0, r5
 80212a4:	f7de ffa4 	bl	80001f0 <memchr>
 80212a8:	b108      	cbz	r0, 80212ae <_printf_i+0x1f2>
 80212aa:	1b40      	subs	r0, r0, r5
 80212ac:	6060      	str	r0, [r4, #4]
 80212ae:	6863      	ldr	r3, [r4, #4]
 80212b0:	6123      	str	r3, [r4, #16]
 80212b2:	2300      	movs	r3, #0
 80212b4:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80212b8:	e7a8      	b.n	802120c <_printf_i+0x150>
 80212ba:	6923      	ldr	r3, [r4, #16]
 80212bc:	462a      	mov	r2, r5
 80212be:	4649      	mov	r1, r9
 80212c0:	4640      	mov	r0, r8
 80212c2:	47d0      	blx	sl
 80212c4:	3001      	adds	r0, #1
 80212c6:	d0ab      	beq.n	8021220 <_printf_i+0x164>
 80212c8:	6823      	ldr	r3, [r4, #0]
 80212ca:	079b      	lsls	r3, r3, #30
 80212cc:	d413      	bmi.n	80212f6 <_printf_i+0x23a>
 80212ce:	68e0      	ldr	r0, [r4, #12]
 80212d0:	9b03      	ldr	r3, [sp, #12]
 80212d2:	4298      	cmp	r0, r3
 80212d4:	bfb8      	it	lt
 80212d6:	4618      	movlt	r0, r3
 80212d8:	e7a4      	b.n	8021224 <_printf_i+0x168>
 80212da:	2301      	movs	r3, #1
 80212dc:	4632      	mov	r2, r6
 80212de:	4649      	mov	r1, r9
 80212e0:	4640      	mov	r0, r8
 80212e2:	47d0      	blx	sl
 80212e4:	3001      	adds	r0, #1
 80212e6:	d09b      	beq.n	8021220 <_printf_i+0x164>
 80212e8:	3501      	adds	r5, #1
 80212ea:	68e3      	ldr	r3, [r4, #12]
 80212ec:	9903      	ldr	r1, [sp, #12]
 80212ee:	1a5b      	subs	r3, r3, r1
 80212f0:	42ab      	cmp	r3, r5
 80212f2:	dcf2      	bgt.n	80212da <_printf_i+0x21e>
 80212f4:	e7eb      	b.n	80212ce <_printf_i+0x212>
 80212f6:	2500      	movs	r5, #0
 80212f8:	f104 0619 	add.w	r6, r4, #25
 80212fc:	e7f5      	b.n	80212ea <_printf_i+0x22e>
 80212fe:	bf00      	nop
 8021300:	0802474d 	.word	0x0802474d
 8021304:	0802475e 	.word	0x0802475e

08021308 <cleanup_glue>:
 8021308:	b538      	push	{r3, r4, r5, lr}
 802130a:	460c      	mov	r4, r1
 802130c:	6809      	ldr	r1, [r1, #0]
 802130e:	4605      	mov	r5, r0
 8021310:	b109      	cbz	r1, 8021316 <cleanup_glue+0xe>
 8021312:	f7ff fff9 	bl	8021308 <cleanup_glue>
 8021316:	4621      	mov	r1, r4
 8021318:	4628      	mov	r0, r5
 802131a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802131e:	f7ff bc25 	b.w	8020b6c <_free_r>
	...

08021324 <_reclaim_reent>:
 8021324:	4b2c      	ldr	r3, [pc, #176]	; (80213d8 <_reclaim_reent+0xb4>)
 8021326:	681b      	ldr	r3, [r3, #0]
 8021328:	4283      	cmp	r3, r0
 802132a:	b570      	push	{r4, r5, r6, lr}
 802132c:	4604      	mov	r4, r0
 802132e:	d051      	beq.n	80213d4 <_reclaim_reent+0xb0>
 8021330:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8021332:	b143      	cbz	r3, 8021346 <_reclaim_reent+0x22>
 8021334:	68db      	ldr	r3, [r3, #12]
 8021336:	2b00      	cmp	r3, #0
 8021338:	d14a      	bne.n	80213d0 <_reclaim_reent+0xac>
 802133a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 802133c:	6819      	ldr	r1, [r3, #0]
 802133e:	b111      	cbz	r1, 8021346 <_reclaim_reent+0x22>
 8021340:	4620      	mov	r0, r4
 8021342:	f7ff fc13 	bl	8020b6c <_free_r>
 8021346:	6961      	ldr	r1, [r4, #20]
 8021348:	b111      	cbz	r1, 8021350 <_reclaim_reent+0x2c>
 802134a:	4620      	mov	r0, r4
 802134c:	f7ff fc0e 	bl	8020b6c <_free_r>
 8021350:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8021352:	b111      	cbz	r1, 802135a <_reclaim_reent+0x36>
 8021354:	4620      	mov	r0, r4
 8021356:	f7ff fc09 	bl	8020b6c <_free_r>
 802135a:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 802135c:	b111      	cbz	r1, 8021364 <_reclaim_reent+0x40>
 802135e:	4620      	mov	r0, r4
 8021360:	f7ff fc04 	bl	8020b6c <_free_r>
 8021364:	6be1      	ldr	r1, [r4, #60]	; 0x3c
 8021366:	b111      	cbz	r1, 802136e <_reclaim_reent+0x4a>
 8021368:	4620      	mov	r0, r4
 802136a:	f7ff fbff 	bl	8020b6c <_free_r>
 802136e:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8021370:	b111      	cbz	r1, 8021378 <_reclaim_reent+0x54>
 8021372:	4620      	mov	r0, r4
 8021374:	f7ff fbfa 	bl	8020b6c <_free_r>
 8021378:	6de1      	ldr	r1, [r4, #92]	; 0x5c
 802137a:	b111      	cbz	r1, 8021382 <_reclaim_reent+0x5e>
 802137c:	4620      	mov	r0, r4
 802137e:	f7ff fbf5 	bl	8020b6c <_free_r>
 8021382:	6da1      	ldr	r1, [r4, #88]	; 0x58
 8021384:	b111      	cbz	r1, 802138c <_reclaim_reent+0x68>
 8021386:	4620      	mov	r0, r4
 8021388:	f7ff fbf0 	bl	8020b6c <_free_r>
 802138c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802138e:	b111      	cbz	r1, 8021396 <_reclaim_reent+0x72>
 8021390:	4620      	mov	r0, r4
 8021392:	f7ff fbeb 	bl	8020b6c <_free_r>
 8021396:	69a3      	ldr	r3, [r4, #24]
 8021398:	b1e3      	cbz	r3, 80213d4 <_reclaim_reent+0xb0>
 802139a:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 802139c:	4620      	mov	r0, r4
 802139e:	4798      	blx	r3
 80213a0:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 80213a2:	b1b9      	cbz	r1, 80213d4 <_reclaim_reent+0xb0>
 80213a4:	4620      	mov	r0, r4
 80213a6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80213aa:	f7ff bfad 	b.w	8021308 <cleanup_glue>
 80213ae:	5949      	ldr	r1, [r1, r5]
 80213b0:	b941      	cbnz	r1, 80213c4 <_reclaim_reent+0xa0>
 80213b2:	3504      	adds	r5, #4
 80213b4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80213b6:	2d80      	cmp	r5, #128	; 0x80
 80213b8:	68d9      	ldr	r1, [r3, #12]
 80213ba:	d1f8      	bne.n	80213ae <_reclaim_reent+0x8a>
 80213bc:	4620      	mov	r0, r4
 80213be:	f7ff fbd5 	bl	8020b6c <_free_r>
 80213c2:	e7ba      	b.n	802133a <_reclaim_reent+0x16>
 80213c4:	680e      	ldr	r6, [r1, #0]
 80213c6:	4620      	mov	r0, r4
 80213c8:	f7ff fbd0 	bl	8020b6c <_free_r>
 80213cc:	4631      	mov	r1, r6
 80213ce:	e7ef      	b.n	80213b0 <_reclaim_reent+0x8c>
 80213d0:	2500      	movs	r5, #0
 80213d2:	e7ef      	b.n	80213b4 <_reclaim_reent+0x90>
 80213d4:	bd70      	pop	{r4, r5, r6, pc}
 80213d6:	bf00      	nop
 80213d8:	20000104 	.word	0x20000104

080213dc <_sbrk_r>:
 80213dc:	b538      	push	{r3, r4, r5, lr}
 80213de:	4d06      	ldr	r5, [pc, #24]	; (80213f8 <_sbrk_r+0x1c>)
 80213e0:	2300      	movs	r3, #0
 80213e2:	4604      	mov	r4, r0
 80213e4:	4608      	mov	r0, r1
 80213e6:	602b      	str	r3, [r5, #0]
 80213e8:	f7e0 fee8 	bl	80021bc <_sbrk>
 80213ec:	1c43      	adds	r3, r0, #1
 80213ee:	d102      	bne.n	80213f6 <_sbrk_r+0x1a>
 80213f0:	682b      	ldr	r3, [r5, #0]
 80213f2:	b103      	cbz	r3, 80213f6 <_sbrk_r+0x1a>
 80213f4:	6023      	str	r3, [r4, #0]
 80213f6:	bd38      	pop	{r3, r4, r5, pc}
 80213f8:	200157d0 	.word	0x200157d0

080213fc <_raise_r>:
 80213fc:	291f      	cmp	r1, #31
 80213fe:	b538      	push	{r3, r4, r5, lr}
 8021400:	4604      	mov	r4, r0
 8021402:	460d      	mov	r5, r1
 8021404:	d904      	bls.n	8021410 <_raise_r+0x14>
 8021406:	2316      	movs	r3, #22
 8021408:	6003      	str	r3, [r0, #0]
 802140a:	f04f 30ff 	mov.w	r0, #4294967295
 802140e:	bd38      	pop	{r3, r4, r5, pc}
 8021410:	6c42      	ldr	r2, [r0, #68]	; 0x44
 8021412:	b112      	cbz	r2, 802141a <_raise_r+0x1e>
 8021414:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8021418:	b94b      	cbnz	r3, 802142e <_raise_r+0x32>
 802141a:	4620      	mov	r0, r4
 802141c:	f000 f830 	bl	8021480 <_getpid_r>
 8021420:	462a      	mov	r2, r5
 8021422:	4601      	mov	r1, r0
 8021424:	4620      	mov	r0, r4
 8021426:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802142a:	f000 b817 	b.w	802145c <_kill_r>
 802142e:	2b01      	cmp	r3, #1
 8021430:	d00a      	beq.n	8021448 <_raise_r+0x4c>
 8021432:	1c59      	adds	r1, r3, #1
 8021434:	d103      	bne.n	802143e <_raise_r+0x42>
 8021436:	2316      	movs	r3, #22
 8021438:	6003      	str	r3, [r0, #0]
 802143a:	2001      	movs	r0, #1
 802143c:	e7e7      	b.n	802140e <_raise_r+0x12>
 802143e:	2400      	movs	r4, #0
 8021440:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8021444:	4628      	mov	r0, r5
 8021446:	4798      	blx	r3
 8021448:	2000      	movs	r0, #0
 802144a:	e7e0      	b.n	802140e <_raise_r+0x12>

0802144c <raise>:
 802144c:	4b02      	ldr	r3, [pc, #8]	; (8021458 <raise+0xc>)
 802144e:	4601      	mov	r1, r0
 8021450:	6818      	ldr	r0, [r3, #0]
 8021452:	f7ff bfd3 	b.w	80213fc <_raise_r>
 8021456:	bf00      	nop
 8021458:	20000104 	.word	0x20000104

0802145c <_kill_r>:
 802145c:	b538      	push	{r3, r4, r5, lr}
 802145e:	4d07      	ldr	r5, [pc, #28]	; (802147c <_kill_r+0x20>)
 8021460:	2300      	movs	r3, #0
 8021462:	4604      	mov	r4, r0
 8021464:	4608      	mov	r0, r1
 8021466:	4611      	mov	r1, r2
 8021468:	602b      	str	r3, [r5, #0]
 802146a:	f7e0 fe71 	bl	8002150 <_kill>
 802146e:	1c43      	adds	r3, r0, #1
 8021470:	d102      	bne.n	8021478 <_kill_r+0x1c>
 8021472:	682b      	ldr	r3, [r5, #0]
 8021474:	b103      	cbz	r3, 8021478 <_kill_r+0x1c>
 8021476:	6023      	str	r3, [r4, #0]
 8021478:	bd38      	pop	{r3, r4, r5, pc}
 802147a:	bf00      	nop
 802147c:	200157d0 	.word	0x200157d0

08021480 <_getpid_r>:
 8021480:	f7e0 be64 	b.w	800214c <_getpid>

08021484 <__sread>:
 8021484:	b510      	push	{r4, lr}
 8021486:	460c      	mov	r4, r1
 8021488:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802148c:	f000 fac8 	bl	8021a20 <_read_r>
 8021490:	2800      	cmp	r0, #0
 8021492:	bfab      	itete	ge
 8021494:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8021496:	89a3      	ldrhlt	r3, [r4, #12]
 8021498:	181b      	addge	r3, r3, r0
 802149a:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 802149e:	bfac      	ite	ge
 80214a0:	6563      	strge	r3, [r4, #84]	; 0x54
 80214a2:	81a3      	strhlt	r3, [r4, #12]
 80214a4:	bd10      	pop	{r4, pc}

080214a6 <__swrite>:
 80214a6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80214aa:	461f      	mov	r7, r3
 80214ac:	898b      	ldrh	r3, [r1, #12]
 80214ae:	05db      	lsls	r3, r3, #23
 80214b0:	4605      	mov	r5, r0
 80214b2:	460c      	mov	r4, r1
 80214b4:	4616      	mov	r6, r2
 80214b6:	d505      	bpl.n	80214c4 <__swrite+0x1e>
 80214b8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80214bc:	2302      	movs	r3, #2
 80214be:	2200      	movs	r2, #0
 80214c0:	f000 fa2a 	bl	8021918 <_lseek_r>
 80214c4:	89a3      	ldrh	r3, [r4, #12]
 80214c6:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80214ca:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80214ce:	81a3      	strh	r3, [r4, #12]
 80214d0:	4632      	mov	r2, r6
 80214d2:	463b      	mov	r3, r7
 80214d4:	4628      	mov	r0, r5
 80214d6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80214da:	f000 b869 	b.w	80215b0 <_write_r>

080214de <__sseek>:
 80214de:	b510      	push	{r4, lr}
 80214e0:	460c      	mov	r4, r1
 80214e2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80214e6:	f000 fa17 	bl	8021918 <_lseek_r>
 80214ea:	1c43      	adds	r3, r0, #1
 80214ec:	89a3      	ldrh	r3, [r4, #12]
 80214ee:	bf15      	itete	ne
 80214f0:	6560      	strne	r0, [r4, #84]	; 0x54
 80214f2:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80214f6:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80214fa:	81a3      	strheq	r3, [r4, #12]
 80214fc:	bf18      	it	ne
 80214fe:	81a3      	strhne	r3, [r4, #12]
 8021500:	bd10      	pop	{r4, pc}

08021502 <__sclose>:
 8021502:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8021506:	f000 b935 	b.w	8021774 <_close_r>
	...

0802150c <__swbuf_r>:
 802150c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802150e:	460e      	mov	r6, r1
 8021510:	4614      	mov	r4, r2
 8021512:	4605      	mov	r5, r0
 8021514:	b118      	cbz	r0, 802151e <__swbuf_r+0x12>
 8021516:	6983      	ldr	r3, [r0, #24]
 8021518:	b90b      	cbnz	r3, 802151e <__swbuf_r+0x12>
 802151a:	f7ff fa29 	bl	8020970 <__sinit>
 802151e:	4b21      	ldr	r3, [pc, #132]	; (80215a4 <__swbuf_r+0x98>)
 8021520:	429c      	cmp	r4, r3
 8021522:	d12b      	bne.n	802157c <__swbuf_r+0x70>
 8021524:	686c      	ldr	r4, [r5, #4]
 8021526:	69a3      	ldr	r3, [r4, #24]
 8021528:	60a3      	str	r3, [r4, #8]
 802152a:	89a3      	ldrh	r3, [r4, #12]
 802152c:	071a      	lsls	r2, r3, #28
 802152e:	d52f      	bpl.n	8021590 <__swbuf_r+0x84>
 8021530:	6923      	ldr	r3, [r4, #16]
 8021532:	b36b      	cbz	r3, 8021590 <__swbuf_r+0x84>
 8021534:	6923      	ldr	r3, [r4, #16]
 8021536:	6820      	ldr	r0, [r4, #0]
 8021538:	1ac0      	subs	r0, r0, r3
 802153a:	6963      	ldr	r3, [r4, #20]
 802153c:	b2f6      	uxtb	r6, r6
 802153e:	4283      	cmp	r3, r0
 8021540:	4637      	mov	r7, r6
 8021542:	dc04      	bgt.n	802154e <__swbuf_r+0x42>
 8021544:	4621      	mov	r1, r4
 8021546:	4628      	mov	r0, r5
 8021548:	f000 f9aa 	bl	80218a0 <_fflush_r>
 802154c:	bb30      	cbnz	r0, 802159c <__swbuf_r+0x90>
 802154e:	68a3      	ldr	r3, [r4, #8]
 8021550:	3b01      	subs	r3, #1
 8021552:	60a3      	str	r3, [r4, #8]
 8021554:	6823      	ldr	r3, [r4, #0]
 8021556:	1c5a      	adds	r2, r3, #1
 8021558:	6022      	str	r2, [r4, #0]
 802155a:	701e      	strb	r6, [r3, #0]
 802155c:	6963      	ldr	r3, [r4, #20]
 802155e:	3001      	adds	r0, #1
 8021560:	4283      	cmp	r3, r0
 8021562:	d004      	beq.n	802156e <__swbuf_r+0x62>
 8021564:	89a3      	ldrh	r3, [r4, #12]
 8021566:	07db      	lsls	r3, r3, #31
 8021568:	d506      	bpl.n	8021578 <__swbuf_r+0x6c>
 802156a:	2e0a      	cmp	r6, #10
 802156c:	d104      	bne.n	8021578 <__swbuf_r+0x6c>
 802156e:	4621      	mov	r1, r4
 8021570:	4628      	mov	r0, r5
 8021572:	f000 f995 	bl	80218a0 <_fflush_r>
 8021576:	b988      	cbnz	r0, 802159c <__swbuf_r+0x90>
 8021578:	4638      	mov	r0, r7
 802157a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802157c:	4b0a      	ldr	r3, [pc, #40]	; (80215a8 <__swbuf_r+0x9c>)
 802157e:	429c      	cmp	r4, r3
 8021580:	d101      	bne.n	8021586 <__swbuf_r+0x7a>
 8021582:	68ac      	ldr	r4, [r5, #8]
 8021584:	e7cf      	b.n	8021526 <__swbuf_r+0x1a>
 8021586:	4b09      	ldr	r3, [pc, #36]	; (80215ac <__swbuf_r+0xa0>)
 8021588:	429c      	cmp	r4, r3
 802158a:	bf08      	it	eq
 802158c:	68ec      	ldreq	r4, [r5, #12]
 802158e:	e7ca      	b.n	8021526 <__swbuf_r+0x1a>
 8021590:	4621      	mov	r1, r4
 8021592:	4628      	mov	r0, r5
 8021594:	f000 f81e 	bl	80215d4 <__swsetup_r>
 8021598:	2800      	cmp	r0, #0
 802159a:	d0cb      	beq.n	8021534 <__swbuf_r+0x28>
 802159c:	f04f 37ff 	mov.w	r7, #4294967295
 80215a0:	e7ea      	b.n	8021578 <__swbuf_r+0x6c>
 80215a2:	bf00      	nop
 80215a4:	080246f8 	.word	0x080246f8
 80215a8:	08024718 	.word	0x08024718
 80215ac:	080246d8 	.word	0x080246d8

080215b0 <_write_r>:
 80215b0:	b538      	push	{r3, r4, r5, lr}
 80215b2:	4d07      	ldr	r5, [pc, #28]	; (80215d0 <_write_r+0x20>)
 80215b4:	4604      	mov	r4, r0
 80215b6:	4608      	mov	r0, r1
 80215b8:	4611      	mov	r1, r2
 80215ba:	2200      	movs	r2, #0
 80215bc:	602a      	str	r2, [r5, #0]
 80215be:	461a      	mov	r2, r3
 80215c0:	f7e0 fde2 	bl	8002188 <_write>
 80215c4:	1c43      	adds	r3, r0, #1
 80215c6:	d102      	bne.n	80215ce <_write_r+0x1e>
 80215c8:	682b      	ldr	r3, [r5, #0]
 80215ca:	b103      	cbz	r3, 80215ce <_write_r+0x1e>
 80215cc:	6023      	str	r3, [r4, #0]
 80215ce:	bd38      	pop	{r3, r4, r5, pc}
 80215d0:	200157d0 	.word	0x200157d0

080215d4 <__swsetup_r>:
 80215d4:	4b32      	ldr	r3, [pc, #200]	; (80216a0 <__swsetup_r+0xcc>)
 80215d6:	b570      	push	{r4, r5, r6, lr}
 80215d8:	681d      	ldr	r5, [r3, #0]
 80215da:	4606      	mov	r6, r0
 80215dc:	460c      	mov	r4, r1
 80215de:	b125      	cbz	r5, 80215ea <__swsetup_r+0x16>
 80215e0:	69ab      	ldr	r3, [r5, #24]
 80215e2:	b913      	cbnz	r3, 80215ea <__swsetup_r+0x16>
 80215e4:	4628      	mov	r0, r5
 80215e6:	f7ff f9c3 	bl	8020970 <__sinit>
 80215ea:	4b2e      	ldr	r3, [pc, #184]	; (80216a4 <__swsetup_r+0xd0>)
 80215ec:	429c      	cmp	r4, r3
 80215ee:	d10f      	bne.n	8021610 <__swsetup_r+0x3c>
 80215f0:	686c      	ldr	r4, [r5, #4]
 80215f2:	89a3      	ldrh	r3, [r4, #12]
 80215f4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80215f8:	0719      	lsls	r1, r3, #28
 80215fa:	d42c      	bmi.n	8021656 <__swsetup_r+0x82>
 80215fc:	06dd      	lsls	r5, r3, #27
 80215fe:	d411      	bmi.n	8021624 <__swsetup_r+0x50>
 8021600:	2309      	movs	r3, #9
 8021602:	6033      	str	r3, [r6, #0]
 8021604:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8021608:	81a3      	strh	r3, [r4, #12]
 802160a:	f04f 30ff 	mov.w	r0, #4294967295
 802160e:	e03e      	b.n	802168e <__swsetup_r+0xba>
 8021610:	4b25      	ldr	r3, [pc, #148]	; (80216a8 <__swsetup_r+0xd4>)
 8021612:	429c      	cmp	r4, r3
 8021614:	d101      	bne.n	802161a <__swsetup_r+0x46>
 8021616:	68ac      	ldr	r4, [r5, #8]
 8021618:	e7eb      	b.n	80215f2 <__swsetup_r+0x1e>
 802161a:	4b24      	ldr	r3, [pc, #144]	; (80216ac <__swsetup_r+0xd8>)
 802161c:	429c      	cmp	r4, r3
 802161e:	bf08      	it	eq
 8021620:	68ec      	ldreq	r4, [r5, #12]
 8021622:	e7e6      	b.n	80215f2 <__swsetup_r+0x1e>
 8021624:	0758      	lsls	r0, r3, #29
 8021626:	d512      	bpl.n	802164e <__swsetup_r+0x7a>
 8021628:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802162a:	b141      	cbz	r1, 802163e <__swsetup_r+0x6a>
 802162c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8021630:	4299      	cmp	r1, r3
 8021632:	d002      	beq.n	802163a <__swsetup_r+0x66>
 8021634:	4630      	mov	r0, r6
 8021636:	f7ff fa99 	bl	8020b6c <_free_r>
 802163a:	2300      	movs	r3, #0
 802163c:	6363      	str	r3, [r4, #52]	; 0x34
 802163e:	89a3      	ldrh	r3, [r4, #12]
 8021640:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8021644:	81a3      	strh	r3, [r4, #12]
 8021646:	2300      	movs	r3, #0
 8021648:	6063      	str	r3, [r4, #4]
 802164a:	6923      	ldr	r3, [r4, #16]
 802164c:	6023      	str	r3, [r4, #0]
 802164e:	89a3      	ldrh	r3, [r4, #12]
 8021650:	f043 0308 	orr.w	r3, r3, #8
 8021654:	81a3      	strh	r3, [r4, #12]
 8021656:	6923      	ldr	r3, [r4, #16]
 8021658:	b94b      	cbnz	r3, 802166e <__swsetup_r+0x9a>
 802165a:	89a3      	ldrh	r3, [r4, #12]
 802165c:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8021660:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8021664:	d003      	beq.n	802166e <__swsetup_r+0x9a>
 8021666:	4621      	mov	r1, r4
 8021668:	4630      	mov	r0, r6
 802166a:	f000 f98d 	bl	8021988 <__smakebuf_r>
 802166e:	89a0      	ldrh	r0, [r4, #12]
 8021670:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8021674:	f010 0301 	ands.w	r3, r0, #1
 8021678:	d00a      	beq.n	8021690 <__swsetup_r+0xbc>
 802167a:	2300      	movs	r3, #0
 802167c:	60a3      	str	r3, [r4, #8]
 802167e:	6963      	ldr	r3, [r4, #20]
 8021680:	425b      	negs	r3, r3
 8021682:	61a3      	str	r3, [r4, #24]
 8021684:	6923      	ldr	r3, [r4, #16]
 8021686:	b943      	cbnz	r3, 802169a <__swsetup_r+0xc6>
 8021688:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 802168c:	d1ba      	bne.n	8021604 <__swsetup_r+0x30>
 802168e:	bd70      	pop	{r4, r5, r6, pc}
 8021690:	0781      	lsls	r1, r0, #30
 8021692:	bf58      	it	pl
 8021694:	6963      	ldrpl	r3, [r4, #20]
 8021696:	60a3      	str	r3, [r4, #8]
 8021698:	e7f4      	b.n	8021684 <__swsetup_r+0xb0>
 802169a:	2000      	movs	r0, #0
 802169c:	e7f7      	b.n	802168e <__swsetup_r+0xba>
 802169e:	bf00      	nop
 80216a0:	20000104 	.word	0x20000104
 80216a4:	080246f8 	.word	0x080246f8
 80216a8:	08024718 	.word	0x08024718
 80216ac:	080246d8 	.word	0x080246d8

080216b0 <__register_exitproc>:
 80216b0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80216b4:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 8021770 <__register_exitproc+0xc0>
 80216b8:	4606      	mov	r6, r0
 80216ba:	f8d8 0000 	ldr.w	r0, [r8]
 80216be:	461f      	mov	r7, r3
 80216c0:	460d      	mov	r5, r1
 80216c2:	4691      	mov	r9, r2
 80216c4:	f7ff fa29 	bl	8020b1a <__retarget_lock_acquire_recursive>
 80216c8:	4b25      	ldr	r3, [pc, #148]	; (8021760 <__register_exitproc+0xb0>)
 80216ca:	681c      	ldr	r4, [r3, #0]
 80216cc:	b934      	cbnz	r4, 80216dc <__register_exitproc+0x2c>
 80216ce:	4c25      	ldr	r4, [pc, #148]	; (8021764 <__register_exitproc+0xb4>)
 80216d0:	601c      	str	r4, [r3, #0]
 80216d2:	4b25      	ldr	r3, [pc, #148]	; (8021768 <__register_exitproc+0xb8>)
 80216d4:	b113      	cbz	r3, 80216dc <__register_exitproc+0x2c>
 80216d6:	681b      	ldr	r3, [r3, #0]
 80216d8:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 80216dc:	6863      	ldr	r3, [r4, #4]
 80216de:	2b1f      	cmp	r3, #31
 80216e0:	dd07      	ble.n	80216f2 <__register_exitproc+0x42>
 80216e2:	f8d8 0000 	ldr.w	r0, [r8]
 80216e6:	f7ff fa1a 	bl	8020b1e <__retarget_lock_release_recursive>
 80216ea:	f04f 30ff 	mov.w	r0, #4294967295
 80216ee:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80216f2:	b34e      	cbz	r6, 8021748 <__register_exitproc+0x98>
 80216f4:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 80216f8:	b988      	cbnz	r0, 802171e <__register_exitproc+0x6e>
 80216fa:	4b1c      	ldr	r3, [pc, #112]	; (802176c <__register_exitproc+0xbc>)
 80216fc:	b923      	cbnz	r3, 8021708 <__register_exitproc+0x58>
 80216fe:	f8d8 0000 	ldr.w	r0, [r8]
 8021702:	f7ff fa0b 	bl	8020b1c <__retarget_lock_release>
 8021706:	e7f0      	b.n	80216ea <__register_exitproc+0x3a>
 8021708:	f44f 7084 	mov.w	r0, #264	; 0x108
 802170c:	f7ff fa08 	bl	8020b20 <malloc>
 8021710:	2800      	cmp	r0, #0
 8021712:	d0f4      	beq.n	80216fe <__register_exitproc+0x4e>
 8021714:	2300      	movs	r3, #0
 8021716:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 802171a:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 802171e:	6863      	ldr	r3, [r4, #4]
 8021720:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 8021724:	2201      	movs	r2, #1
 8021726:	409a      	lsls	r2, r3
 8021728:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 802172c:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 8021730:	4313      	orrs	r3, r2
 8021732:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 8021736:	2e02      	cmp	r6, #2
 8021738:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 802173c:	bf02      	ittt	eq
 802173e:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 8021742:	4313      	orreq	r3, r2
 8021744:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 8021748:	6863      	ldr	r3, [r4, #4]
 802174a:	f8d8 0000 	ldr.w	r0, [r8]
 802174e:	1c5a      	adds	r2, r3, #1
 8021750:	3302      	adds	r3, #2
 8021752:	6062      	str	r2, [r4, #4]
 8021754:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 8021758:	f7ff f9e1 	bl	8020b1e <__retarget_lock_release_recursive>
 802175c:	2000      	movs	r0, #0
 802175e:	e7c6      	b.n	80216ee <__register_exitproc+0x3e>
 8021760:	20015860 	.word	0x20015860
 8021764:	200157d4 	.word	0x200157d4
 8021768:	08024770 	.word	0x08024770
 802176c:	08020b21 	.word	0x08020b21
 8021770:	20000168 	.word	0x20000168

08021774 <_close_r>:
 8021774:	b538      	push	{r3, r4, r5, lr}
 8021776:	4d06      	ldr	r5, [pc, #24]	; (8021790 <_close_r+0x1c>)
 8021778:	2300      	movs	r3, #0
 802177a:	4604      	mov	r4, r0
 802177c:	4608      	mov	r0, r1
 802177e:	602b      	str	r3, [r5, #0]
 8021780:	f7e0 fd10 	bl	80021a4 <_close>
 8021784:	1c43      	adds	r3, r0, #1
 8021786:	d102      	bne.n	802178e <_close_r+0x1a>
 8021788:	682b      	ldr	r3, [r5, #0]
 802178a:	b103      	cbz	r3, 802178e <_close_r+0x1a>
 802178c:	6023      	str	r3, [r4, #0]
 802178e:	bd38      	pop	{r3, r4, r5, pc}
 8021790:	200157d0 	.word	0x200157d0

08021794 <__sflush_r>:
 8021794:	898a      	ldrh	r2, [r1, #12]
 8021796:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802179a:	4605      	mov	r5, r0
 802179c:	0710      	lsls	r0, r2, #28
 802179e:	460c      	mov	r4, r1
 80217a0:	d458      	bmi.n	8021854 <__sflush_r+0xc0>
 80217a2:	684b      	ldr	r3, [r1, #4]
 80217a4:	2b00      	cmp	r3, #0
 80217a6:	dc05      	bgt.n	80217b4 <__sflush_r+0x20>
 80217a8:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 80217aa:	2b00      	cmp	r3, #0
 80217ac:	dc02      	bgt.n	80217b4 <__sflush_r+0x20>
 80217ae:	2000      	movs	r0, #0
 80217b0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80217b4:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80217b6:	2e00      	cmp	r6, #0
 80217b8:	d0f9      	beq.n	80217ae <__sflush_r+0x1a>
 80217ba:	2300      	movs	r3, #0
 80217bc:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80217c0:	682f      	ldr	r7, [r5, #0]
 80217c2:	602b      	str	r3, [r5, #0]
 80217c4:	d032      	beq.n	802182c <__sflush_r+0x98>
 80217c6:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80217c8:	89a3      	ldrh	r3, [r4, #12]
 80217ca:	075a      	lsls	r2, r3, #29
 80217cc:	d505      	bpl.n	80217da <__sflush_r+0x46>
 80217ce:	6863      	ldr	r3, [r4, #4]
 80217d0:	1ac0      	subs	r0, r0, r3
 80217d2:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80217d4:	b10b      	cbz	r3, 80217da <__sflush_r+0x46>
 80217d6:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80217d8:	1ac0      	subs	r0, r0, r3
 80217da:	2300      	movs	r3, #0
 80217dc:	4602      	mov	r2, r0
 80217de:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80217e0:	6a21      	ldr	r1, [r4, #32]
 80217e2:	4628      	mov	r0, r5
 80217e4:	47b0      	blx	r6
 80217e6:	1c43      	adds	r3, r0, #1
 80217e8:	89a3      	ldrh	r3, [r4, #12]
 80217ea:	d106      	bne.n	80217fa <__sflush_r+0x66>
 80217ec:	6829      	ldr	r1, [r5, #0]
 80217ee:	291d      	cmp	r1, #29
 80217f0:	d82c      	bhi.n	802184c <__sflush_r+0xb8>
 80217f2:	4a2a      	ldr	r2, [pc, #168]	; (802189c <__sflush_r+0x108>)
 80217f4:	40ca      	lsrs	r2, r1
 80217f6:	07d6      	lsls	r6, r2, #31
 80217f8:	d528      	bpl.n	802184c <__sflush_r+0xb8>
 80217fa:	2200      	movs	r2, #0
 80217fc:	6062      	str	r2, [r4, #4]
 80217fe:	04d9      	lsls	r1, r3, #19
 8021800:	6922      	ldr	r2, [r4, #16]
 8021802:	6022      	str	r2, [r4, #0]
 8021804:	d504      	bpl.n	8021810 <__sflush_r+0x7c>
 8021806:	1c42      	adds	r2, r0, #1
 8021808:	d101      	bne.n	802180e <__sflush_r+0x7a>
 802180a:	682b      	ldr	r3, [r5, #0]
 802180c:	b903      	cbnz	r3, 8021810 <__sflush_r+0x7c>
 802180e:	6560      	str	r0, [r4, #84]	; 0x54
 8021810:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8021812:	602f      	str	r7, [r5, #0]
 8021814:	2900      	cmp	r1, #0
 8021816:	d0ca      	beq.n	80217ae <__sflush_r+0x1a>
 8021818:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802181c:	4299      	cmp	r1, r3
 802181e:	d002      	beq.n	8021826 <__sflush_r+0x92>
 8021820:	4628      	mov	r0, r5
 8021822:	f7ff f9a3 	bl	8020b6c <_free_r>
 8021826:	2000      	movs	r0, #0
 8021828:	6360      	str	r0, [r4, #52]	; 0x34
 802182a:	e7c1      	b.n	80217b0 <__sflush_r+0x1c>
 802182c:	6a21      	ldr	r1, [r4, #32]
 802182e:	2301      	movs	r3, #1
 8021830:	4628      	mov	r0, r5
 8021832:	47b0      	blx	r6
 8021834:	1c41      	adds	r1, r0, #1
 8021836:	d1c7      	bne.n	80217c8 <__sflush_r+0x34>
 8021838:	682b      	ldr	r3, [r5, #0]
 802183a:	2b00      	cmp	r3, #0
 802183c:	d0c4      	beq.n	80217c8 <__sflush_r+0x34>
 802183e:	2b1d      	cmp	r3, #29
 8021840:	d001      	beq.n	8021846 <__sflush_r+0xb2>
 8021842:	2b16      	cmp	r3, #22
 8021844:	d101      	bne.n	802184a <__sflush_r+0xb6>
 8021846:	602f      	str	r7, [r5, #0]
 8021848:	e7b1      	b.n	80217ae <__sflush_r+0x1a>
 802184a:	89a3      	ldrh	r3, [r4, #12]
 802184c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8021850:	81a3      	strh	r3, [r4, #12]
 8021852:	e7ad      	b.n	80217b0 <__sflush_r+0x1c>
 8021854:	690f      	ldr	r7, [r1, #16]
 8021856:	2f00      	cmp	r7, #0
 8021858:	d0a9      	beq.n	80217ae <__sflush_r+0x1a>
 802185a:	0793      	lsls	r3, r2, #30
 802185c:	680e      	ldr	r6, [r1, #0]
 802185e:	bf08      	it	eq
 8021860:	694b      	ldreq	r3, [r1, #20]
 8021862:	600f      	str	r7, [r1, #0]
 8021864:	bf18      	it	ne
 8021866:	2300      	movne	r3, #0
 8021868:	eba6 0807 	sub.w	r8, r6, r7
 802186c:	608b      	str	r3, [r1, #8]
 802186e:	f1b8 0f00 	cmp.w	r8, #0
 8021872:	dd9c      	ble.n	80217ae <__sflush_r+0x1a>
 8021874:	6a21      	ldr	r1, [r4, #32]
 8021876:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8021878:	4643      	mov	r3, r8
 802187a:	463a      	mov	r2, r7
 802187c:	4628      	mov	r0, r5
 802187e:	47b0      	blx	r6
 8021880:	2800      	cmp	r0, #0
 8021882:	dc06      	bgt.n	8021892 <__sflush_r+0xfe>
 8021884:	89a3      	ldrh	r3, [r4, #12]
 8021886:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802188a:	81a3      	strh	r3, [r4, #12]
 802188c:	f04f 30ff 	mov.w	r0, #4294967295
 8021890:	e78e      	b.n	80217b0 <__sflush_r+0x1c>
 8021892:	4407      	add	r7, r0
 8021894:	eba8 0800 	sub.w	r8, r8, r0
 8021898:	e7e9      	b.n	802186e <__sflush_r+0xda>
 802189a:	bf00      	nop
 802189c:	20400001 	.word	0x20400001

080218a0 <_fflush_r>:
 80218a0:	b538      	push	{r3, r4, r5, lr}
 80218a2:	690b      	ldr	r3, [r1, #16]
 80218a4:	4605      	mov	r5, r0
 80218a6:	460c      	mov	r4, r1
 80218a8:	b913      	cbnz	r3, 80218b0 <_fflush_r+0x10>
 80218aa:	2500      	movs	r5, #0
 80218ac:	4628      	mov	r0, r5
 80218ae:	bd38      	pop	{r3, r4, r5, pc}
 80218b0:	b118      	cbz	r0, 80218ba <_fflush_r+0x1a>
 80218b2:	6983      	ldr	r3, [r0, #24]
 80218b4:	b90b      	cbnz	r3, 80218ba <_fflush_r+0x1a>
 80218b6:	f7ff f85b 	bl	8020970 <__sinit>
 80218ba:	4b14      	ldr	r3, [pc, #80]	; (802190c <_fflush_r+0x6c>)
 80218bc:	429c      	cmp	r4, r3
 80218be:	d11b      	bne.n	80218f8 <_fflush_r+0x58>
 80218c0:	686c      	ldr	r4, [r5, #4]
 80218c2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80218c6:	2b00      	cmp	r3, #0
 80218c8:	d0ef      	beq.n	80218aa <_fflush_r+0xa>
 80218ca:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80218cc:	07d0      	lsls	r0, r2, #31
 80218ce:	d404      	bmi.n	80218da <_fflush_r+0x3a>
 80218d0:	0599      	lsls	r1, r3, #22
 80218d2:	d402      	bmi.n	80218da <_fflush_r+0x3a>
 80218d4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80218d6:	f7ff f920 	bl	8020b1a <__retarget_lock_acquire_recursive>
 80218da:	4628      	mov	r0, r5
 80218dc:	4621      	mov	r1, r4
 80218de:	f7ff ff59 	bl	8021794 <__sflush_r>
 80218e2:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80218e4:	07da      	lsls	r2, r3, #31
 80218e6:	4605      	mov	r5, r0
 80218e8:	d4e0      	bmi.n	80218ac <_fflush_r+0xc>
 80218ea:	89a3      	ldrh	r3, [r4, #12]
 80218ec:	059b      	lsls	r3, r3, #22
 80218ee:	d4dd      	bmi.n	80218ac <_fflush_r+0xc>
 80218f0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80218f2:	f7ff f914 	bl	8020b1e <__retarget_lock_release_recursive>
 80218f6:	e7d9      	b.n	80218ac <_fflush_r+0xc>
 80218f8:	4b05      	ldr	r3, [pc, #20]	; (8021910 <_fflush_r+0x70>)
 80218fa:	429c      	cmp	r4, r3
 80218fc:	d101      	bne.n	8021902 <_fflush_r+0x62>
 80218fe:	68ac      	ldr	r4, [r5, #8]
 8021900:	e7df      	b.n	80218c2 <_fflush_r+0x22>
 8021902:	4b04      	ldr	r3, [pc, #16]	; (8021914 <_fflush_r+0x74>)
 8021904:	429c      	cmp	r4, r3
 8021906:	bf08      	it	eq
 8021908:	68ec      	ldreq	r4, [r5, #12]
 802190a:	e7da      	b.n	80218c2 <_fflush_r+0x22>
 802190c:	080246f8 	.word	0x080246f8
 8021910:	08024718 	.word	0x08024718
 8021914:	080246d8 	.word	0x080246d8

08021918 <_lseek_r>:
 8021918:	b538      	push	{r3, r4, r5, lr}
 802191a:	4d07      	ldr	r5, [pc, #28]	; (8021938 <_lseek_r+0x20>)
 802191c:	4604      	mov	r4, r0
 802191e:	4608      	mov	r0, r1
 8021920:	4611      	mov	r1, r2
 8021922:	2200      	movs	r2, #0
 8021924:	602a      	str	r2, [r5, #0]
 8021926:	461a      	mov	r2, r3
 8021928:	f7e0 fc46 	bl	80021b8 <_lseek>
 802192c:	1c43      	adds	r3, r0, #1
 802192e:	d102      	bne.n	8021936 <_lseek_r+0x1e>
 8021930:	682b      	ldr	r3, [r5, #0]
 8021932:	b103      	cbz	r3, 8021936 <_lseek_r+0x1e>
 8021934:	6023      	str	r3, [r4, #0]
 8021936:	bd38      	pop	{r3, r4, r5, pc}
 8021938:	200157d0 	.word	0x200157d0

0802193c <__swhatbuf_r>:
 802193c:	b570      	push	{r4, r5, r6, lr}
 802193e:	460e      	mov	r6, r1
 8021940:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8021944:	2900      	cmp	r1, #0
 8021946:	b096      	sub	sp, #88	; 0x58
 8021948:	4614      	mov	r4, r2
 802194a:	461d      	mov	r5, r3
 802194c:	da08      	bge.n	8021960 <__swhatbuf_r+0x24>
 802194e:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 8021952:	2200      	movs	r2, #0
 8021954:	602a      	str	r2, [r5, #0]
 8021956:	061a      	lsls	r2, r3, #24
 8021958:	d410      	bmi.n	802197c <__swhatbuf_r+0x40>
 802195a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 802195e:	e00e      	b.n	802197e <__swhatbuf_r+0x42>
 8021960:	466a      	mov	r2, sp
 8021962:	f000 f86f 	bl	8021a44 <_fstat_r>
 8021966:	2800      	cmp	r0, #0
 8021968:	dbf1      	blt.n	802194e <__swhatbuf_r+0x12>
 802196a:	9a01      	ldr	r2, [sp, #4]
 802196c:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8021970:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8021974:	425a      	negs	r2, r3
 8021976:	415a      	adcs	r2, r3
 8021978:	602a      	str	r2, [r5, #0]
 802197a:	e7ee      	b.n	802195a <__swhatbuf_r+0x1e>
 802197c:	2340      	movs	r3, #64	; 0x40
 802197e:	2000      	movs	r0, #0
 8021980:	6023      	str	r3, [r4, #0]
 8021982:	b016      	add	sp, #88	; 0x58
 8021984:	bd70      	pop	{r4, r5, r6, pc}
	...

08021988 <__smakebuf_r>:
 8021988:	898b      	ldrh	r3, [r1, #12]
 802198a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 802198c:	079d      	lsls	r5, r3, #30
 802198e:	4606      	mov	r6, r0
 8021990:	460c      	mov	r4, r1
 8021992:	d507      	bpl.n	80219a4 <__smakebuf_r+0x1c>
 8021994:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8021998:	6023      	str	r3, [r4, #0]
 802199a:	6123      	str	r3, [r4, #16]
 802199c:	2301      	movs	r3, #1
 802199e:	6163      	str	r3, [r4, #20]
 80219a0:	b002      	add	sp, #8
 80219a2:	bd70      	pop	{r4, r5, r6, pc}
 80219a4:	ab01      	add	r3, sp, #4
 80219a6:	466a      	mov	r2, sp
 80219a8:	f7ff ffc8 	bl	802193c <__swhatbuf_r>
 80219ac:	9900      	ldr	r1, [sp, #0]
 80219ae:	4605      	mov	r5, r0
 80219b0:	4630      	mov	r0, r6
 80219b2:	f7ff f947 	bl	8020c44 <_malloc_r>
 80219b6:	b948      	cbnz	r0, 80219cc <__smakebuf_r+0x44>
 80219b8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80219bc:	059a      	lsls	r2, r3, #22
 80219be:	d4ef      	bmi.n	80219a0 <__smakebuf_r+0x18>
 80219c0:	f023 0303 	bic.w	r3, r3, #3
 80219c4:	f043 0302 	orr.w	r3, r3, #2
 80219c8:	81a3      	strh	r3, [r4, #12]
 80219ca:	e7e3      	b.n	8021994 <__smakebuf_r+0xc>
 80219cc:	4b0d      	ldr	r3, [pc, #52]	; (8021a04 <__smakebuf_r+0x7c>)
 80219ce:	62b3      	str	r3, [r6, #40]	; 0x28
 80219d0:	89a3      	ldrh	r3, [r4, #12]
 80219d2:	6020      	str	r0, [r4, #0]
 80219d4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80219d8:	81a3      	strh	r3, [r4, #12]
 80219da:	9b00      	ldr	r3, [sp, #0]
 80219dc:	6163      	str	r3, [r4, #20]
 80219de:	9b01      	ldr	r3, [sp, #4]
 80219e0:	6120      	str	r0, [r4, #16]
 80219e2:	b15b      	cbz	r3, 80219fc <__smakebuf_r+0x74>
 80219e4:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80219e8:	4630      	mov	r0, r6
 80219ea:	f000 f83d 	bl	8021a68 <_isatty_r>
 80219ee:	b128      	cbz	r0, 80219fc <__smakebuf_r+0x74>
 80219f0:	89a3      	ldrh	r3, [r4, #12]
 80219f2:	f023 0303 	bic.w	r3, r3, #3
 80219f6:	f043 0301 	orr.w	r3, r3, #1
 80219fa:	81a3      	strh	r3, [r4, #12]
 80219fc:	89a0      	ldrh	r0, [r4, #12]
 80219fe:	4305      	orrs	r5, r0
 8021a00:	81a5      	strh	r5, [r4, #12]
 8021a02:	e7cd      	b.n	80219a0 <__smakebuf_r+0x18>
 8021a04:	08020909 	.word	0x08020909

08021a08 <__malloc_lock>:
 8021a08:	4801      	ldr	r0, [pc, #4]	; (8021a10 <__malloc_lock+0x8>)
 8021a0a:	f7ff b886 	b.w	8020b1a <__retarget_lock_acquire_recursive>
 8021a0e:	bf00      	nop
 8021a10:	200156bd 	.word	0x200156bd

08021a14 <__malloc_unlock>:
 8021a14:	4801      	ldr	r0, [pc, #4]	; (8021a1c <__malloc_unlock+0x8>)
 8021a16:	f7ff b882 	b.w	8020b1e <__retarget_lock_release_recursive>
 8021a1a:	bf00      	nop
 8021a1c:	200156bd 	.word	0x200156bd

08021a20 <_read_r>:
 8021a20:	b538      	push	{r3, r4, r5, lr}
 8021a22:	4d07      	ldr	r5, [pc, #28]	; (8021a40 <_read_r+0x20>)
 8021a24:	4604      	mov	r4, r0
 8021a26:	4608      	mov	r0, r1
 8021a28:	4611      	mov	r1, r2
 8021a2a:	2200      	movs	r2, #0
 8021a2c:	602a      	str	r2, [r5, #0]
 8021a2e:	461a      	mov	r2, r3
 8021a30:	f7e0 fb9c 	bl	800216c <_read>
 8021a34:	1c43      	adds	r3, r0, #1
 8021a36:	d102      	bne.n	8021a3e <_read_r+0x1e>
 8021a38:	682b      	ldr	r3, [r5, #0]
 8021a3a:	b103      	cbz	r3, 8021a3e <_read_r+0x1e>
 8021a3c:	6023      	str	r3, [r4, #0]
 8021a3e:	bd38      	pop	{r3, r4, r5, pc}
 8021a40:	200157d0 	.word	0x200157d0

08021a44 <_fstat_r>:
 8021a44:	b538      	push	{r3, r4, r5, lr}
 8021a46:	4d07      	ldr	r5, [pc, #28]	; (8021a64 <_fstat_r+0x20>)
 8021a48:	2300      	movs	r3, #0
 8021a4a:	4604      	mov	r4, r0
 8021a4c:	4608      	mov	r0, r1
 8021a4e:	4611      	mov	r1, r2
 8021a50:	602b      	str	r3, [r5, #0]
 8021a52:	f7e0 fbaa 	bl	80021aa <_fstat>
 8021a56:	1c43      	adds	r3, r0, #1
 8021a58:	d102      	bne.n	8021a60 <_fstat_r+0x1c>
 8021a5a:	682b      	ldr	r3, [r5, #0]
 8021a5c:	b103      	cbz	r3, 8021a60 <_fstat_r+0x1c>
 8021a5e:	6023      	str	r3, [r4, #0]
 8021a60:	bd38      	pop	{r3, r4, r5, pc}
 8021a62:	bf00      	nop
 8021a64:	200157d0 	.word	0x200157d0

08021a68 <_isatty_r>:
 8021a68:	b538      	push	{r3, r4, r5, lr}
 8021a6a:	4d06      	ldr	r5, [pc, #24]	; (8021a84 <_isatty_r+0x1c>)
 8021a6c:	2300      	movs	r3, #0
 8021a6e:	4604      	mov	r4, r0
 8021a70:	4608      	mov	r0, r1
 8021a72:	602b      	str	r3, [r5, #0]
 8021a74:	f7e0 fb9e 	bl	80021b4 <_isatty>
 8021a78:	1c43      	adds	r3, r0, #1
 8021a7a:	d102      	bne.n	8021a82 <_isatty_r+0x1a>
 8021a7c:	682b      	ldr	r3, [r5, #0]
 8021a7e:	b103      	cbz	r3, 8021a82 <_isatty_r+0x1a>
 8021a80:	6023      	str	r3, [r4, #0]
 8021a82:	bd38      	pop	{r3, r4, r5, pc}
 8021a84:	200157d0 	.word	0x200157d0

08021a88 <_init>:
 8021a88:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8021a8a:	bf00      	nop
 8021a8c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8021a8e:	bc08      	pop	{r3}
 8021a90:	469e      	mov	lr, r3
 8021a92:	4770      	bx	lr

08021a94 <_fini>:
 8021a94:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8021a96:	bf00      	nop
 8021a98:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8021a9a:	bc08      	pop	{r3}
 8021a9c:	469e      	mov	lr, r3
 8021a9e:	4770      	bx	lr
