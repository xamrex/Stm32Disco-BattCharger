
STM32F429I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00020dc0  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00002c3c  08020f70  08020f70  00030f70  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 00001552  08023bac  08023bac  00033bac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 0000004c  08025100  08025100  00035100  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 0000019c  0802514c  0802514c  0003514c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 000833f8  080252e8  080252e8  000352e8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  080a86e0  080a86e0  000c0168  2**0
                  CONTENTS
  8 .ARM          00000008  080a86e0  080a86e0  000b86e0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  080a86e8  080a86e8  000c0168  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  080a86e8  080a86e8  000b86e8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000008  080a86fc  080a86fc  000b86fc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         00000168  20000000  080a8704  000c0000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          000154a0  20000168  080a886c  000c0168  2**2
                  ALLOC
 14 ._user_heap_stack 00001400  20015608  080a886c  000c5608  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  000c0168  2**0
                  CONTENTS, READONLY
 16 TouchGFX_Framebuffer 0004b000  d0000000  d0000000  000d0000  2**2
                  ALLOC
 17 .debug_line   0004f2d3  00000000  00000000  000c0198  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_info   000e74c8  00000000  00000000  0010f46b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_abbrev 00014e90  00000000  00000000  001f6933  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_aranges 00002fe0  00000000  00000000  0020b7c8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_str    0011844a  00000000  00000000  0020e7a8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_ranges 00006960  00000000  00000000  00326bf8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_loc    000323c2  00000000  00000000  0032d558  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_macro  000304f9  00000000  00000000  0035f91a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .comment      000000cf  00000000  00000000  0038fe13  2**0
                  CONTENTS, READONLY
 26 .debug_frame  00008c90  00000000  00000000  0038fee4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000168 	.word	0x20000168
 80001cc:	00000000 	.word	0x00000000
 80001d0:	08020f58 	.word	0x08020f58

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	2000016c 	.word	0x2000016c
 80001ec:	08020f58 	.word	0x08020f58

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <__aeabi_uldivmod>:
 8000290:	b953      	cbnz	r3, 80002a8 <__aeabi_uldivmod+0x18>
 8000292:	b94a      	cbnz	r2, 80002a8 <__aeabi_uldivmod+0x18>
 8000294:	2900      	cmp	r1, #0
 8000296:	bf08      	it	eq
 8000298:	2800      	cmpeq	r0, #0
 800029a:	bf1c      	itt	ne
 800029c:	f04f 31ff 	movne.w	r1, #4294967295
 80002a0:	f04f 30ff 	movne.w	r0, #4294967295
 80002a4:	f000 b974 	b.w	8000590 <__aeabi_idiv0>
 80002a8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002ac:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002b0:	f000 f806 	bl	80002c0 <__udivmoddi4>
 80002b4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002b8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002bc:	b004      	add	sp, #16
 80002be:	4770      	bx	lr

080002c0 <__udivmoddi4>:
 80002c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002c4:	9d08      	ldr	r5, [sp, #32]
 80002c6:	4604      	mov	r4, r0
 80002c8:	468e      	mov	lr, r1
 80002ca:	2b00      	cmp	r3, #0
 80002cc:	d14d      	bne.n	800036a <__udivmoddi4+0xaa>
 80002ce:	428a      	cmp	r2, r1
 80002d0:	4694      	mov	ip, r2
 80002d2:	d969      	bls.n	80003a8 <__udivmoddi4+0xe8>
 80002d4:	fab2 f282 	clz	r2, r2
 80002d8:	b152      	cbz	r2, 80002f0 <__udivmoddi4+0x30>
 80002da:	fa01 f302 	lsl.w	r3, r1, r2
 80002de:	f1c2 0120 	rsb	r1, r2, #32
 80002e2:	fa20 f101 	lsr.w	r1, r0, r1
 80002e6:	fa0c fc02 	lsl.w	ip, ip, r2
 80002ea:	ea41 0e03 	orr.w	lr, r1, r3
 80002ee:	4094      	lsls	r4, r2
 80002f0:	ea4f 481c 	mov.w	r8, ip, lsr #16
 80002f4:	0c21      	lsrs	r1, r4, #16
 80002f6:	fbbe f6f8 	udiv	r6, lr, r8
 80002fa:	fa1f f78c 	uxth.w	r7, ip
 80002fe:	fb08 e316 	mls	r3, r8, r6, lr
 8000302:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8000306:	fb06 f107 	mul.w	r1, r6, r7
 800030a:	4299      	cmp	r1, r3
 800030c:	d90a      	bls.n	8000324 <__udivmoddi4+0x64>
 800030e:	eb1c 0303 	adds.w	r3, ip, r3
 8000312:	f106 30ff 	add.w	r0, r6, #4294967295
 8000316:	f080 811f 	bcs.w	8000558 <__udivmoddi4+0x298>
 800031a:	4299      	cmp	r1, r3
 800031c:	f240 811c 	bls.w	8000558 <__udivmoddi4+0x298>
 8000320:	3e02      	subs	r6, #2
 8000322:	4463      	add	r3, ip
 8000324:	1a5b      	subs	r3, r3, r1
 8000326:	b2a4      	uxth	r4, r4
 8000328:	fbb3 f0f8 	udiv	r0, r3, r8
 800032c:	fb08 3310 	mls	r3, r8, r0, r3
 8000330:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000334:	fb00 f707 	mul.w	r7, r0, r7
 8000338:	42a7      	cmp	r7, r4
 800033a:	d90a      	bls.n	8000352 <__udivmoddi4+0x92>
 800033c:	eb1c 0404 	adds.w	r4, ip, r4
 8000340:	f100 33ff 	add.w	r3, r0, #4294967295
 8000344:	f080 810a 	bcs.w	800055c <__udivmoddi4+0x29c>
 8000348:	42a7      	cmp	r7, r4
 800034a:	f240 8107 	bls.w	800055c <__udivmoddi4+0x29c>
 800034e:	4464      	add	r4, ip
 8000350:	3802      	subs	r0, #2
 8000352:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000356:	1be4      	subs	r4, r4, r7
 8000358:	2600      	movs	r6, #0
 800035a:	b11d      	cbz	r5, 8000364 <__udivmoddi4+0xa4>
 800035c:	40d4      	lsrs	r4, r2
 800035e:	2300      	movs	r3, #0
 8000360:	e9c5 4300 	strd	r4, r3, [r5]
 8000364:	4631      	mov	r1, r6
 8000366:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800036a:	428b      	cmp	r3, r1
 800036c:	d909      	bls.n	8000382 <__udivmoddi4+0xc2>
 800036e:	2d00      	cmp	r5, #0
 8000370:	f000 80ef 	beq.w	8000552 <__udivmoddi4+0x292>
 8000374:	2600      	movs	r6, #0
 8000376:	e9c5 0100 	strd	r0, r1, [r5]
 800037a:	4630      	mov	r0, r6
 800037c:	4631      	mov	r1, r6
 800037e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000382:	fab3 f683 	clz	r6, r3
 8000386:	2e00      	cmp	r6, #0
 8000388:	d14a      	bne.n	8000420 <__udivmoddi4+0x160>
 800038a:	428b      	cmp	r3, r1
 800038c:	d302      	bcc.n	8000394 <__udivmoddi4+0xd4>
 800038e:	4282      	cmp	r2, r0
 8000390:	f200 80f9 	bhi.w	8000586 <__udivmoddi4+0x2c6>
 8000394:	1a84      	subs	r4, r0, r2
 8000396:	eb61 0303 	sbc.w	r3, r1, r3
 800039a:	2001      	movs	r0, #1
 800039c:	469e      	mov	lr, r3
 800039e:	2d00      	cmp	r5, #0
 80003a0:	d0e0      	beq.n	8000364 <__udivmoddi4+0xa4>
 80003a2:	e9c5 4e00 	strd	r4, lr, [r5]
 80003a6:	e7dd      	b.n	8000364 <__udivmoddi4+0xa4>
 80003a8:	b902      	cbnz	r2, 80003ac <__udivmoddi4+0xec>
 80003aa:	deff      	udf	#255	; 0xff
 80003ac:	fab2 f282 	clz	r2, r2
 80003b0:	2a00      	cmp	r2, #0
 80003b2:	f040 8092 	bne.w	80004da <__udivmoddi4+0x21a>
 80003b6:	eba1 010c 	sub.w	r1, r1, ip
 80003ba:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80003be:	fa1f fe8c 	uxth.w	lr, ip
 80003c2:	2601      	movs	r6, #1
 80003c4:	0c20      	lsrs	r0, r4, #16
 80003c6:	fbb1 f3f7 	udiv	r3, r1, r7
 80003ca:	fb07 1113 	mls	r1, r7, r3, r1
 80003ce:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 80003d2:	fb0e f003 	mul.w	r0, lr, r3
 80003d6:	4288      	cmp	r0, r1
 80003d8:	d908      	bls.n	80003ec <__udivmoddi4+0x12c>
 80003da:	eb1c 0101 	adds.w	r1, ip, r1
 80003de:	f103 38ff 	add.w	r8, r3, #4294967295
 80003e2:	d202      	bcs.n	80003ea <__udivmoddi4+0x12a>
 80003e4:	4288      	cmp	r0, r1
 80003e6:	f200 80cb 	bhi.w	8000580 <__udivmoddi4+0x2c0>
 80003ea:	4643      	mov	r3, r8
 80003ec:	1a09      	subs	r1, r1, r0
 80003ee:	b2a4      	uxth	r4, r4
 80003f0:	fbb1 f0f7 	udiv	r0, r1, r7
 80003f4:	fb07 1110 	mls	r1, r7, r0, r1
 80003f8:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 80003fc:	fb0e fe00 	mul.w	lr, lr, r0
 8000400:	45a6      	cmp	lr, r4
 8000402:	d908      	bls.n	8000416 <__udivmoddi4+0x156>
 8000404:	eb1c 0404 	adds.w	r4, ip, r4
 8000408:	f100 31ff 	add.w	r1, r0, #4294967295
 800040c:	d202      	bcs.n	8000414 <__udivmoddi4+0x154>
 800040e:	45a6      	cmp	lr, r4
 8000410:	f200 80bb 	bhi.w	800058a <__udivmoddi4+0x2ca>
 8000414:	4608      	mov	r0, r1
 8000416:	eba4 040e 	sub.w	r4, r4, lr
 800041a:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 800041e:	e79c      	b.n	800035a <__udivmoddi4+0x9a>
 8000420:	f1c6 0720 	rsb	r7, r6, #32
 8000424:	40b3      	lsls	r3, r6
 8000426:	fa22 fc07 	lsr.w	ip, r2, r7
 800042a:	ea4c 0c03 	orr.w	ip, ip, r3
 800042e:	fa20 f407 	lsr.w	r4, r0, r7
 8000432:	fa01 f306 	lsl.w	r3, r1, r6
 8000436:	431c      	orrs	r4, r3
 8000438:	40f9      	lsrs	r1, r7
 800043a:	ea4f 491c 	mov.w	r9, ip, lsr #16
 800043e:	fa00 f306 	lsl.w	r3, r0, r6
 8000442:	fbb1 f8f9 	udiv	r8, r1, r9
 8000446:	0c20      	lsrs	r0, r4, #16
 8000448:	fa1f fe8c 	uxth.w	lr, ip
 800044c:	fb09 1118 	mls	r1, r9, r8, r1
 8000450:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000454:	fb08 f00e 	mul.w	r0, r8, lr
 8000458:	4288      	cmp	r0, r1
 800045a:	fa02 f206 	lsl.w	r2, r2, r6
 800045e:	d90b      	bls.n	8000478 <__udivmoddi4+0x1b8>
 8000460:	eb1c 0101 	adds.w	r1, ip, r1
 8000464:	f108 3aff 	add.w	sl, r8, #4294967295
 8000468:	f080 8088 	bcs.w	800057c <__udivmoddi4+0x2bc>
 800046c:	4288      	cmp	r0, r1
 800046e:	f240 8085 	bls.w	800057c <__udivmoddi4+0x2bc>
 8000472:	f1a8 0802 	sub.w	r8, r8, #2
 8000476:	4461      	add	r1, ip
 8000478:	1a09      	subs	r1, r1, r0
 800047a:	b2a4      	uxth	r4, r4
 800047c:	fbb1 f0f9 	udiv	r0, r1, r9
 8000480:	fb09 1110 	mls	r1, r9, r0, r1
 8000484:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 8000488:	fb00 fe0e 	mul.w	lr, r0, lr
 800048c:	458e      	cmp	lr, r1
 800048e:	d908      	bls.n	80004a2 <__udivmoddi4+0x1e2>
 8000490:	eb1c 0101 	adds.w	r1, ip, r1
 8000494:	f100 34ff 	add.w	r4, r0, #4294967295
 8000498:	d26c      	bcs.n	8000574 <__udivmoddi4+0x2b4>
 800049a:	458e      	cmp	lr, r1
 800049c:	d96a      	bls.n	8000574 <__udivmoddi4+0x2b4>
 800049e:	3802      	subs	r0, #2
 80004a0:	4461      	add	r1, ip
 80004a2:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 80004a6:	fba0 9402 	umull	r9, r4, r0, r2
 80004aa:	eba1 010e 	sub.w	r1, r1, lr
 80004ae:	42a1      	cmp	r1, r4
 80004b0:	46c8      	mov	r8, r9
 80004b2:	46a6      	mov	lr, r4
 80004b4:	d356      	bcc.n	8000564 <__udivmoddi4+0x2a4>
 80004b6:	d053      	beq.n	8000560 <__udivmoddi4+0x2a0>
 80004b8:	b15d      	cbz	r5, 80004d2 <__udivmoddi4+0x212>
 80004ba:	ebb3 0208 	subs.w	r2, r3, r8
 80004be:	eb61 010e 	sbc.w	r1, r1, lr
 80004c2:	fa01 f707 	lsl.w	r7, r1, r7
 80004c6:	fa22 f306 	lsr.w	r3, r2, r6
 80004ca:	40f1      	lsrs	r1, r6
 80004cc:	431f      	orrs	r7, r3
 80004ce:	e9c5 7100 	strd	r7, r1, [r5]
 80004d2:	2600      	movs	r6, #0
 80004d4:	4631      	mov	r1, r6
 80004d6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80004da:	f1c2 0320 	rsb	r3, r2, #32
 80004de:	40d8      	lsrs	r0, r3
 80004e0:	fa0c fc02 	lsl.w	ip, ip, r2
 80004e4:	fa21 f303 	lsr.w	r3, r1, r3
 80004e8:	4091      	lsls	r1, r2
 80004ea:	4301      	orrs	r1, r0
 80004ec:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80004f0:	fa1f fe8c 	uxth.w	lr, ip
 80004f4:	fbb3 f0f7 	udiv	r0, r3, r7
 80004f8:	fb07 3610 	mls	r6, r7, r0, r3
 80004fc:	0c0b      	lsrs	r3, r1, #16
 80004fe:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 8000502:	fb00 f60e 	mul.w	r6, r0, lr
 8000506:	429e      	cmp	r6, r3
 8000508:	fa04 f402 	lsl.w	r4, r4, r2
 800050c:	d908      	bls.n	8000520 <__udivmoddi4+0x260>
 800050e:	eb1c 0303 	adds.w	r3, ip, r3
 8000512:	f100 38ff 	add.w	r8, r0, #4294967295
 8000516:	d22f      	bcs.n	8000578 <__udivmoddi4+0x2b8>
 8000518:	429e      	cmp	r6, r3
 800051a:	d92d      	bls.n	8000578 <__udivmoddi4+0x2b8>
 800051c:	3802      	subs	r0, #2
 800051e:	4463      	add	r3, ip
 8000520:	1b9b      	subs	r3, r3, r6
 8000522:	b289      	uxth	r1, r1
 8000524:	fbb3 f6f7 	udiv	r6, r3, r7
 8000528:	fb07 3316 	mls	r3, r7, r6, r3
 800052c:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000530:	fb06 f30e 	mul.w	r3, r6, lr
 8000534:	428b      	cmp	r3, r1
 8000536:	d908      	bls.n	800054a <__udivmoddi4+0x28a>
 8000538:	eb1c 0101 	adds.w	r1, ip, r1
 800053c:	f106 38ff 	add.w	r8, r6, #4294967295
 8000540:	d216      	bcs.n	8000570 <__udivmoddi4+0x2b0>
 8000542:	428b      	cmp	r3, r1
 8000544:	d914      	bls.n	8000570 <__udivmoddi4+0x2b0>
 8000546:	3e02      	subs	r6, #2
 8000548:	4461      	add	r1, ip
 800054a:	1ac9      	subs	r1, r1, r3
 800054c:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 8000550:	e738      	b.n	80003c4 <__udivmoddi4+0x104>
 8000552:	462e      	mov	r6, r5
 8000554:	4628      	mov	r0, r5
 8000556:	e705      	b.n	8000364 <__udivmoddi4+0xa4>
 8000558:	4606      	mov	r6, r0
 800055a:	e6e3      	b.n	8000324 <__udivmoddi4+0x64>
 800055c:	4618      	mov	r0, r3
 800055e:	e6f8      	b.n	8000352 <__udivmoddi4+0x92>
 8000560:	454b      	cmp	r3, r9
 8000562:	d2a9      	bcs.n	80004b8 <__udivmoddi4+0x1f8>
 8000564:	ebb9 0802 	subs.w	r8, r9, r2
 8000568:	eb64 0e0c 	sbc.w	lr, r4, ip
 800056c:	3801      	subs	r0, #1
 800056e:	e7a3      	b.n	80004b8 <__udivmoddi4+0x1f8>
 8000570:	4646      	mov	r6, r8
 8000572:	e7ea      	b.n	800054a <__udivmoddi4+0x28a>
 8000574:	4620      	mov	r0, r4
 8000576:	e794      	b.n	80004a2 <__udivmoddi4+0x1e2>
 8000578:	4640      	mov	r0, r8
 800057a:	e7d1      	b.n	8000520 <__udivmoddi4+0x260>
 800057c:	46d0      	mov	r8, sl
 800057e:	e77b      	b.n	8000478 <__udivmoddi4+0x1b8>
 8000580:	3b02      	subs	r3, #2
 8000582:	4461      	add	r1, ip
 8000584:	e732      	b.n	80003ec <__udivmoddi4+0x12c>
 8000586:	4630      	mov	r0, r6
 8000588:	e709      	b.n	800039e <__udivmoddi4+0xde>
 800058a:	4464      	add	r4, ip
 800058c:	3802      	subs	r0, #2
 800058e:	e742      	b.n	8000416 <__udivmoddi4+0x156>

08000590 <__aeabi_idiv0>:
 8000590:	4770      	bx	lr
 8000592:	bf00      	nop

08000594 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 8000594:	f8df d034 	ldr.w	sp, [pc, #52]	; 80005cc <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000598:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 800059a:	e003      	b.n	80005a4 <LoopCopyDataInit>

0800059c <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 800059c:	4b0c      	ldr	r3, [pc, #48]	; (80005d0 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 800059e:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 80005a0:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 80005a2:	3104      	adds	r1, #4

080005a4 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 80005a4:	480b      	ldr	r0, [pc, #44]	; (80005d4 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 80005a6:	4b0c      	ldr	r3, [pc, #48]	; (80005d8 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 80005a8:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 80005aa:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 80005ac:	d3f6      	bcc.n	800059c <CopyDataInit>
  ldr  r2, =_sbss
 80005ae:	4a0b      	ldr	r2, [pc, #44]	; (80005dc <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 80005b0:	e002      	b.n	80005b8 <LoopFillZerobss>

080005b2 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 80005b2:	2300      	movs	r3, #0
  str  r3, [r2], #4
 80005b4:	f842 3b04 	str.w	r3, [r2], #4

080005b8 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 80005b8:	4b09      	ldr	r3, [pc, #36]	; (80005e0 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 80005ba:	429a      	cmp	r2, r3
  bcc  FillZerobss
 80005bc:	d3f9      	bcc.n	80005b2 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 80005be:	f004 ff27 	bl	8005410 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80005c2:	f01f fced 	bl	801ffa0 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80005c6:	f000 fefd 	bl	80013c4 <main>
  bx  lr    
 80005ca:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 80005cc:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 80005d0:	080a8704 	.word	0x080a8704
  ldr  r0, =_sdata
 80005d4:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 80005d8:	20000168 	.word	0x20000168
  ldr  r2, =_sbss
 80005dc:	20000168 	.word	0x20000168
  ldr  r3, = _ebss
 80005e0:	20015608 	.word	0x20015608

080005e4 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80005e4:	e7fe      	b.n	80005e4 <ADC_IRQHandler>

080005e6 <MX_TouchGFX_Init>:
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_init();
 80005e6:	f000 bc39 	b.w	8000e5c <touchgfx_init>

080005ea <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 80005ea:	f000 bcab 	b.w	8000f44 <touchgfx_taskEntry>

080005ee <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 80005ee:	4770      	bx	lr

080005f0 <_ZN20STM32TouchControllerD0Ev>:
 80005f0:	b510      	push	{r4, lr}
 80005f2:	2104      	movs	r1, #4
 80005f4:	4604      	mov	r4, r0
 80005f6:	f01f fb65 	bl	801fcc4 <_ZdlPvj>
 80005fa:	4620      	mov	r0, r4
 80005fc:	bd10      	pop	{r4, pc}
	...

08000600 <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 8000600:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 8000602:	4b0c      	ldr	r3, [pc, #48]	; (8000634 <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000604:	4c0c      	ldr	r4, [pc, #48]	; (8000638 <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 8000606:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 8000608:	4b0c      	ldr	r3, [pc, #48]	; (800063c <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 800060a:	2082      	movs	r0, #130	; 0x82
    TsYBoundary = YSize;
 800060c:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 800060e:	6863      	ldr	r3, [r4, #4]
 8000610:	4798      	blx	r3
 8000612:	f640 0311 	movw	r3, #2065	; 0x811
 8000616:	4298      	cmp	r0, r3
 8000618:	d10a      	bne.n	8000630 <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 800061a:	4d09      	ldr	r5, [pc, #36]	; (8000640 <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 800061c:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 800061e:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 8000620:	2082      	movs	r0, #130	; 0x82
 8000622:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 8000624:	682b      	ldr	r3, [r5, #0]
 8000626:	2082      	movs	r0, #130	; 0x82
 8000628:	68db      	ldr	r3, [r3, #12]
 800062a:	4798      	blx	r3
 800062c:	2000      	movs	r0, #0
    }

    return ret;
}
 800062e:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 8000630:	2001      	movs	r0, #1
 8000632:	e7fc      	b.n	800062e <_Z11BSP_TS_Inittt+0x2e>
 8000634:	20000184 	.word	0x20000184
 8000638:	20000050 	.word	0x20000050
 800063c:	20000186 	.word	0x20000186
 8000640:	20000188 	.word	0x20000188

08000644 <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 8000644:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8000648:	20f0      	movs	r0, #240	; 0xf0
 800064a:	f7ff bfd9 	b.w	8000600 <_Z11BSP_TS_Inittt>
	...

08000650 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 8000650:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000652:	4d2d      	ldr	r5, [pc, #180]	; (8000708 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb8>)
 8000654:	682b      	ldr	r3, [r5, #0]
{
 8000656:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000658:	691b      	ldr	r3, [r3, #16]
 800065a:	2082      	movs	r0, #130	; 0x82
 800065c:	4798      	blx	r3
 800065e:	b280      	uxth	r0, r0
 8000660:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 8000662:	2800      	cmp	r0, #0
 8000664:	d043      	beq.n	80006ee <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x9e>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 8000666:	682b      	ldr	r3, [r5, #0]
 8000668:	f10d 0206 	add.w	r2, sp, #6
 800066c:	695b      	ldr	r3, [r3, #20]
 800066e:	a901      	add	r1, sp, #4
 8000670:	2082      	movs	r0, #130	; 0x82
 8000672:	4798      	blx	r3

        /* Y value first correction */
        y -= 360;
 8000674:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8000678:	f5a2 72b4 	sub.w	r2, r2, #360	; 0x168
 800067c:	b292      	uxth	r2, r2

        /* Y value second correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 800067e:	2a0a      	cmp	r2, #10
 8000680:	d937      	bls.n	80006f2 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xa2>
        yr = y / 11;
 8000682:	230b      	movs	r3, #11
 8000684:	fbb2 f2f3 	udiv	r2, r2, r3
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 8000688:	4b20      	ldr	r3, [pc, #128]	; (800070c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xbc>)
 800068a:	881b      	ldrh	r3, [r3, #0]
 800068c:	429a      	cmp	r2, r3
 800068e:	d901      	bls.n	8000694 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x44>
        {
            yr = TsYBoundary - 1;
 8000690:	3b01      	subs	r3, #1
 8000692:	b29a      	uxth	r2, r3
        else
        {}
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 8000694:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8000698:	f640 31b8 	movw	r1, #3000	; 0xbb8
 800069c:	428b      	cmp	r3, r1
 800069e:	d82a      	bhi.n	80006f6 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xa6>
        {
            x = 3870 - x;
 80006a0:	f5c3 6371 	rsb	r3, r3, #3856	; 0xf10
 80006a4:	330e      	adds	r3, #14
 80006a6:	b29b      	uxth	r3, r3
        {
            x = 3800 - x;
        }

        /* X value second correction */
        xr = x / 15;
 80006a8:	210f      	movs	r1, #15
 80006aa:	fbb3 f3f1 	udiv	r3, r3, r1
        /* Return X position value */
        if (xr <= 0)
        {
            xr = 0;
        }
        else if (xr > TsXBoundary)
 80006ae:	4918      	ldr	r1, [pc, #96]	; (8000710 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc0>)
 80006b0:	8809      	ldrh	r1, [r1, #0]
 80006b2:	428b      	cmp	r3, r1
 80006b4:	d901      	bls.n	80006ba <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x6a>
        {
            xr = TsXBoundary - 1;
 80006b6:	1e4b      	subs	r3, r1, #1
 80006b8:	b29b      	uxth	r3, r3
        }
        else
        {}

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006ba:	4e16      	ldr	r6, [pc, #88]	; (8000714 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc4>)
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006bc:	4d16      	ldr	r5, [pc, #88]	; (8000718 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc8>)
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006be:	6830      	ldr	r0, [r6, #0]
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006c0:	682f      	ldr	r7, [r5, #0]
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006c2:	4283      	cmp	r3, r0
 80006c4:	b281      	uxth	r1, r0
 80006c6:	bf8c      	ite	hi
 80006c8:	1a59      	subhi	r1, r3, r1
 80006ca:	1ac9      	subls	r1, r1, r3
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006cc:	b2b8      	uxth	r0, r7
 80006ce:	42ba      	cmp	r2, r7
 80006d0:	bf8c      	ite	hi
 80006d2:	1a10      	subhi	r0, r2, r0
 80006d4:	1a80      	subls	r0, r0, r2
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006d6:	b289      	uxth	r1, r1
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006d8:	b280      	uxth	r0, r0

        if (xDiff + yDiff > 5)
 80006da:	4401      	add	r1, r0
 80006dc:	2905      	cmp	r1, #5
        {
            _x = x;
 80006de:	bfc8      	it	gt
 80006e0:	6033      	strgt	r3, [r6, #0]
            _y = y;
        }

        /* Update the X position */
        TsState->X = _x;
 80006e2:	6833      	ldr	r3, [r6, #0]
            _y = y;
 80006e4:	bfc8      	it	gt
 80006e6:	602a      	strgt	r2, [r5, #0]
        TsState->X = _x;
 80006e8:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 80006ea:	682b      	ldr	r3, [r5, #0]
 80006ec:	80a3      	strh	r3, [r4, #4]
    }
}
 80006ee:	b003      	add	sp, #12
 80006f0:	bdf0      	pop	{r4, r5, r6, r7, pc}
            yr = 0;
 80006f2:	2200      	movs	r2, #0
 80006f4:	e7ce      	b.n	8000694 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x44>
            x = 3800 - x;
 80006f6:	f5c3 636d 	rsb	r3, r3, #3792	; 0xed0
 80006fa:	3308      	adds	r3, #8
 80006fc:	b29b      	uxth	r3, r3
        if (xr <= 0)
 80006fe:	2b0e      	cmp	r3, #14
 8000700:	d8d2      	bhi.n	80006a8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x58>
            xr = 0;
 8000702:	2300      	movs	r3, #0
 8000704:	e7d9      	b.n	80006ba <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x6a>
 8000706:	bf00      	nop
 8000708:	20000188 	.word	0x20000188
 800070c:	20000186 	.word	0x20000186
 8000710:	20000184 	.word	0x20000184
 8000714:	2000018c 	.word	0x2000018c
 8000718:	20000190 	.word	0x20000190

0800071c <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 800071c:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 800071e:	4668      	mov	r0, sp
{
 8000720:	460d      	mov	r5, r1
 8000722:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 8000724:	f7ff ff94 	bl	8000650 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8000728:	f8bd 0000 	ldrh.w	r0, [sp]
 800072c:	b130      	cbz	r0, 800073c <_ZN20STM32TouchController11sampleTouchERlS0_+0x20>
        x = state.X;
 800072e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8000732:	602b      	str	r3, [r5, #0]
        y = state.Y;
 8000734:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8000738:	6023      	str	r3, [r4, #0]
        return true;
 800073a:	2001      	movs	r0, #1
}
 800073c:	b003      	add	sp, #12
 800073e:	bd30      	pop	{r4, r5, pc}

08000740 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{

}
 8000740:	4770      	bx	lr

08000742 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
 8000742:	4770      	bx	lr

08000744 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
 8000744:	4770      	bx	lr

08000746 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8000746:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8000748:	f880 1074 	strb.w	r1, [r0, #116]	; 0x74
        displayOrientationChangeRequested = true;
 800074c:	f880 3075 	strb.w	r3, [r0, #117]	; 0x75
    }
 8000750:	4770      	bx	lr

08000752 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 8000752:	2000      	movs	r0, #0
 8000754:	4770      	bx	lr
	...

08000758 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000758:	4b03      	ldr	r3, [pc, #12]	; (8000768 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 800075a:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 800075c:	3900      	subs	r1, #0
 800075e:	bf18      	it	ne
 8000760:	2101      	movne	r1, #1
 8000762:	7019      	strb	r1, [r3, #0]
    }
 8000764:	4770      	bx	lr
 8000766:	bf00      	nop
 8000768:	2001535b 	.word	0x2001535b

0800076c <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 800076c:	2000      	movs	r0, #0
 800076e:	4770      	bx	lr

08000770 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8000770:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8000772:	b10b      	cbz	r3, 8000778 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8000774:	4608      	mov	r0, r1
 8000776:	4718      	bx	r3
        }
    }
 8000778:	4770      	bx	lr

0800077a <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 800077a:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800077e:	4770      	bx	lr

08000780 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8000780:	6840      	ldr	r0, [r0, #4]
 8000782:	6803      	ldr	r3, [r0, #0]
 8000784:	699b      	ldr	r3, [r3, #24]
 8000786:	4718      	bx	r3

08000788 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8000788:	4770      	bx	lr

0800078a <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 800078a:	4770      	bx	lr

0800078c <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 800078c:	4770      	bx	lr

0800078e <_ZN11TouchGFXHAL10initializeEv>:
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 800078e:	f000 bc79 	b.w	8001084 <_ZN20TouchGFXGeneratedHAL10initializeEv>

08000792 <_ZN11TouchGFXHAL9taskEntryEv>:
}

void TouchGFXHAL::taskEntry()
{
 8000792:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 8000794:	6803      	ldr	r3, [r0, #0]
{
 8000796:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 8000798:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800079c:	4798      	blx	r3
    enableInterrupts();
 800079e:	6823      	ldr	r3, [r4, #0]
 80007a0:	4620      	mov	r0, r4
 80007a2:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80007a4:	4798      	blx	r3

    OSWrappers::waitForVSync();
 80007a6:	f000 f8eb 	bl	8000980 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 80007aa:	6823      	ldr	r3, [r4, #0]
 80007ac:	4620      	mov	r0, r4
 80007ae:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80007b0:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 80007b2:	2029      	movs	r0, #41	; 0x29
 80007b4:	f001 f8a6 	bl	8001904 <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 80007b8:	f000 f8e2 	bl	8000980 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 80007bc:	6823      	ldr	r3, [r4, #0]
 80007be:	4620      	mov	r0, r4
 80007c0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80007c2:	4798      	blx	r3
    for (;;)
 80007c4:	e7f8      	b.n	80007b8 <_ZN11TouchGFXHAL9taskEntryEv+0x26>

080007c6 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 80007c6:	b510      	push	{r4, lr}
 80007c8:	4604      	mov	r4, r0
        swapFrameBuffers();
 80007ca:	f00a fc5b 	bl	800b084 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 80007ce:	6823      	ldr	r3, [r4, #0]
 80007d0:	4620      	mov	r0, r4
 80007d2:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
 80007d6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 80007da:	4718      	bx	r3

080007dc <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 80007dc:	f000 bc44 	b.w	8001068 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

080007e0 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 80007e0:	f000 bc48 	b.w	8001074 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

080007e4 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 80007e4:	f000 bc74 	b.w	80010d0 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

080007e8 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 80007e8:	f000 bc1a 	b.w	8001020 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

080007ec <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 80007ec:	f000 bc74 	b.w	80010d8 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

080007f0 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 80007f0:	f000 bc7c 	b.w	80010ec <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

080007f4 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 80007f4:	f000 bc1e 	b.w	8001034 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

080007f8 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 80007f8:	f009 beb8 	b.w	800a56c <_ZN8touchgfx3HAL16flushFrameBufferEv>

080007fc <_ZN11TouchGFXHALD0Ev>:
 80007fc:	b510      	push	{r4, lr}
 80007fe:	217c      	movs	r1, #124	; 0x7c
 8000800:	4604      	mov	r4, r0
 8000802:	f01f fa5f 	bl	801fcc4 <_ZdlPvj>
 8000806:	4620      	mov	r0, r4
 8000808:	bd10      	pop	{r4, pc}

0800080a <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 800080a:	f890 3077 	ldrb.w	r3, [r0, #119]	; 0x77
 800080e:	b11b      	cbz	r3, 8000818 <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 8000810:	6840      	ldr	r0, [r0, #4]
 8000812:	6803      	ldr	r3, [r0, #0]
 8000814:	681b      	ldr	r3, [r3, #0]
 8000816:	4718      	bx	r3
    }
 8000818:	4618      	mov	r0, r3
 800081a:	4770      	bx	lr

0800081c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 800081c:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 800081e:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 8000822:	f890 4074 	ldrb.w	r4, [r0, #116]	; 0x74
            if (DISPLAY_ROTATION == rotate0)
 8000826:	4b0c      	ldr	r3, [pc, #48]	; (8000858 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 8000828:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 800082a:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 800082c:	d009      	beq.n	8000842 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 800082e:	b93a      	cbnz	r2, 8000840 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000830:	4a0a      	ldr	r2, [pc, #40]	; (800085c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 8000832:	490b      	ldr	r1, [pc, #44]	; (8000860 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000834:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 8000836:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 8000838:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800083a:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 800083c:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 800083e:	701a      	strb	r2, [r3, #0]
    }
 8000840:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 8000842:	2a00      	cmp	r2, #0
 8000844:	d0fc      	beq.n	8000840 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000846:	4a05      	ldr	r2, [pc, #20]	; (800085c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 8000848:	4905      	ldr	r1, [pc, #20]	; (8000860 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800084a:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 800084c:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 800084e:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000850:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 8000852:	2200      	movs	r2, #0
 8000854:	e7f3      	b.n	800083e <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 8000856:	bf00      	nop
 8000858:	20015354 	.word	0x20015354
 800085c:	20015350 	.word	0x20015350
 8000860:	20015352 	.word	0x20015352

08000864 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8000864:	b570      	push	{r4, r5, r6, lr}
 8000866:	460d      	mov	r5, r1
 8000868:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 800086a:	b935      	cbnz	r5, 800087a <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 800086c:	4b09      	ldr	r3, [pc, #36]	; (8000894 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 800086e:	4a0a      	ldr	r2, [pc, #40]	; (8000898 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 8000870:	480a      	ldr	r0, [pc, #40]	; (800089c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 8000872:	f240 21d2 	movw	r1, #722	; 0x2d2
 8000876:	f01f fa53 	bl	801fd20 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 800087a:	e9c0 520f 	strd	r5, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 800087e:	4b08      	ldr	r3, [pc, #32]	; (80008a0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 8000880:	3a00      	subs	r2, #0
 8000882:	bf18      	it	ne
 8000884:	2201      	movne	r2, #1
 8000886:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8000888:	6803      	ldr	r3, [r0, #0]
    }
 800088a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 800088e:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8000892:	4718      	bx	r3
 8000894:	08020fc8 	.word	0x08020fc8
 8000898:	08021000 	.word	0x08021000
 800089c:	0802104e 	.word	0x0802104e
 80008a0:	2001535a 	.word	0x2001535a

080008a4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 80008a4:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 80008a6:	4b09      	ldr	r3, [pc, #36]	; (80008cc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 80008a8:	881b      	ldrh	r3, [r3, #0]
 80008aa:	428b      	cmp	r3, r1
 80008ac:	d803      	bhi.n	80008b6 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 80008ae:	4b08      	ldr	r3, [pc, #32]	; (80008d0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 80008b0:	881b      	ldrh	r3, [r3, #0]
 80008b2:	4293      	cmp	r3, r2
 80008b4:	d905      	bls.n	80008c2 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 80008b6:	4b07      	ldr	r3, [pc, #28]	; (80008d4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 80008b8:	4a07      	ldr	r2, [pc, #28]	; (80008d8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 80008ba:	4808      	ldr	r0, [pc, #32]	; (80008dc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 80008bc:	219e      	movs	r1, #158	; 0x9e
 80008be:	f01f fa2f 	bl	801fd20 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 80008c2:	4b07      	ldr	r3, [pc, #28]	; (80008e0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 80008c4:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 80008c6:	4b07      	ldr	r3, [pc, #28]	; (80008e4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 80008c8:	801a      	strh	r2, [r3, #0]
    }
 80008ca:	bd08      	pop	{r3, pc}
 80008cc:	20015350 	.word	0x20015350
 80008d0:	20015352 	.word	0x20015352
 80008d4:	08021093 	.word	0x08021093
 80008d8:	080210f6 	.word	0x080210f6
 80008dc:	0802104e 	.word	0x0802104e
 80008e0:	20015356 	.word	0x20015356
 80008e4:	20015358 	.word	0x20015358

080008e8 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 80008e8:	2101      	movs	r1, #1
{
 80008ea:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 80008ec:	2200      	movs	r2, #0
 80008ee:	4608      	mov	r0, r1
 80008f0:	f007 fa8e 	bl	8007e10 <osSemaphoreNew>
 80008f4:	4b0a      	ldr	r3, [pc, #40]	; (8000920 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 80008f6:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 80008f8:	b928      	cbnz	r0, 8000906 <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 80008fa:	4b0a      	ldr	r3, [pc, #40]	; (8000924 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 80008fc:	4a0a      	ldr	r2, [pc, #40]	; (8000928 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 80008fe:	2129      	movs	r1, #41	; 0x29

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000900:	480a      	ldr	r0, [pc, #40]	; (800092c <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8000902:	f01f fa0d 	bl	801fd20 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8000906:	2200      	movs	r2, #0
 8000908:	2104      	movs	r1, #4
 800090a:	2001      	movs	r0, #1
 800090c:	f007 fb46 	bl	8007f9c <osMessageQueueNew>
 8000910:	4b07      	ldr	r3, [pc, #28]	; (8000930 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8000912:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000914:	b918      	cbnz	r0, 800091e <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8000916:	4b07      	ldr	r3, [pc, #28]	; (8000934 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8000918:	4a03      	ldr	r2, [pc, #12]	; (8000928 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 800091a:	212d      	movs	r1, #45	; 0x2d
 800091c:	e7f0      	b.n	8000900 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 800091e:	bd08      	pop	{r3, pc}
 8000920:	20000198 	.word	0x20000198
 8000924:	08021214 	.word	0x08021214
 8000928:	0802125d 	.word	0x0802125d
 800092c:	0802128c 	.word	0x0802128c
 8000930:	20000194 	.word	0x20000194
 8000934:	080212da 	.word	0x080212da

08000938 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8000938:	4b02      	ldr	r3, [pc, #8]	; (8000944 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 800093a:	f04f 31ff 	mov.w	r1, #4294967295
 800093e:	6818      	ldr	r0, [r3, #0]
 8000940:	f007 babc 	b.w	8007ebc <osSemaphoreAcquire>
 8000944:	20000198 	.word	0x20000198

08000948 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8000948:	4b01      	ldr	r3, [pc, #4]	; (8000950 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 800094a:	6818      	ldr	r0, [r3, #0]
 800094c:	f007 baf0 	b.w	8007f30 <osSemaphoreRelease>
 8000950:	20000198 	.word	0x20000198

08000954 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8000954:	4b02      	ldr	r3, [pc, #8]	; (8000960 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8000956:	2100      	movs	r1, #0
 8000958:	6818      	ldr	r0, [r3, #0]
 800095a:	f007 baaf 	b.w	8007ebc <osSemaphoreAcquire>
 800095e:	bf00      	nop
 8000960:	20000198 	.word	0x20000198

08000964 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 8000964:	f7ff bff0 	b.w	8000948 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08000968 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8000968:	4803      	ldr	r0, [pc, #12]	; (8000978 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 800096a:	4904      	ldr	r1, [pc, #16]	; (800097c <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 800096c:	6800      	ldr	r0, [r0, #0]
 800096e:	2300      	movs	r3, #0
 8000970:	461a      	mov	r2, r3
 8000972:	f007 bb59 	b.w	8008028 <osMessageQueuePut>
 8000976:	bf00      	nop
 8000978:	20000194 	.word	0x20000194
 800097c:	20000004 	.word	0x20000004

08000980 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8000980:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8000982:	4c08      	ldr	r4, [pc, #32]	; (80009a4 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8000984:	2300      	movs	r3, #0
 8000986:	461a      	mov	r2, r3
 8000988:	a901      	add	r1, sp, #4
 800098a:	6820      	ldr	r0, [r4, #0]
 800098c:	f007 fb8e 	bl	80080ac <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8000990:	6820      	ldr	r0, [r4, #0]
 8000992:	f04f 33ff 	mov.w	r3, #4294967295
 8000996:	2200      	movs	r2, #0
 8000998:	a901      	add	r1, sp, #4
 800099a:	f007 fb87 	bl	80080ac <osMessageQueueGet>
}
 800099e:	b002      	add	sp, #8
 80009a0:	bd10      	pop	{r4, pc}
 80009a2:	bf00      	nop
 80009a4:	20000194 	.word	0x20000194

080009a8 <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 80009a8:	6803      	ldr	r3, [r0, #0]
 80009aa:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80009ac:	4718      	bx	r3

080009ae <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 80009ae:	2001      	movs	r0, #1
 80009b0:	4770      	bx	lr

080009b2 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 80009b2:	6803      	ldr	r3, [r0, #0]
 80009b4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80009b6:	4718      	bx	r3

080009b8 <_ZN8STM32DMA10initializeEv>:
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}

void STM32DMA::initialize()
{
 80009b8:	b082      	sub	sp, #8
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 80009ba:	2300      	movs	r3, #0
 80009bc:	9301      	str	r3, [sp, #4]
 80009be:	4b0d      	ldr	r3, [pc, #52]	; (80009f4 <_ZN8STM32DMA10initializeEv+0x3c>)
 80009c0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80009c2:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 80009c6:	631a      	str	r2, [r3, #48]	; 0x30
 80009c8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80009ca:	f402 0200 	and.w	r2, r2, #8388608	; 0x800000
 80009ce:	9201      	str	r2, [sp, #4]
 80009d0:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 80009d2:	691a      	ldr	r2, [r3, #16]
 80009d4:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 80009d8:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 80009da:	691a      	ldr	r2, [r3, #16]
 80009dc:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 80009e0:	611a      	str	r2, [r3, #16]

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 80009e2:	4b05      	ldr	r3, [pc, #20]	; (80009f8 <_ZN8STM32DMA10initializeEv+0x40>)
 80009e4:	4a05      	ldr	r2, [pc, #20]	; (80009fc <_ZN8STM32DMA10initializeEv+0x44>)
 80009e6:	611a      	str	r2, [r3, #16]
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80009e8:	4b05      	ldr	r3, [pc, #20]	; (8000a00 <_ZN8STM32DMA10initializeEv+0x48>)
 80009ea:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80009ee:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 80009f0:	b002      	add	sp, #8
 80009f2:	4770      	bx	lr
 80009f4:	40023800 	.word	0x40023800
 80009f8:	200037c8 	.word	0x200037c8
 80009fc:	08000a45 	.word	0x08000a45
 8000a00:	e000e100 	.word	0xe000e100

08000a04 <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8000a04:	f240 30ef 	movw	r0, #1007	; 0x3ef
 8000a08:	4770      	bx	lr
	...

08000a0c <_ZN8STM32DMAD1Ev>:
STM32DMA::~STM32DMA()
 8000a0c:	4b05      	ldr	r3, [pc, #20]	; (8000a24 <_ZN8STM32DMAD1Ev+0x18>)
 8000a0e:	6003      	str	r3, [r0, #0]
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000a10:	4b05      	ldr	r3, [pc, #20]	; (8000a28 <_ZN8STM32DMAD1Ev+0x1c>)
 8000a12:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8000a16:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8000a1a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8000a1e:	f3bf 8f6f 	isb	sy
}
 8000a22:	4770      	bx	lr
 8000a24:	08021478 	.word	0x08021478
 8000a28:	e000e100 	.word	0xe000e100

08000a2c <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 8000a2c:	b510      	push	{r4, lr}
 8000a2e:	4604      	mov	r4, r0
}
 8000a30:	f44f 615a 	mov.w	r1, #3488	; 0xda0
 8000a34:	f7ff ffea 	bl	8000a0c <_ZN8STM32DMAD1Ev>
 8000a38:	4620      	mov	r0, r4
 8000a3a:	f01f f943 	bl	801fcc4 <_ZdlPvj>
 8000a3e:	4620      	mov	r0, r4
 8000a40:	bd10      	pop	{r4, pc}
	...

08000a44 <DMA2D_XferCpltCallback>:
        return instance;
 8000a44:	4b02      	ldr	r3, [pc, #8]	; (8000a50 <DMA2D_XferCpltCallback+0xc>)
 8000a46:	681b      	ldr	r3, [r3, #0]
 8000a48:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8000a4a:	6803      	ldr	r3, [r0, #0]
 8000a4c:	695b      	ldr	r3, [r3, #20]
 8000a4e:	4718      	bx	r3
 8000a50:	2001535c 	.word	0x2001535c

08000a54 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8000a54:	b570      	push	{r4, r5, r6, lr}
 8000a56:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8000a58:	4625      	mov	r5, r4
 8000a5a:	4b0a      	ldr	r3, [pc, #40]	; (8000a84 <_ZN8STM32DMAC1Ev+0x30>)
 8000a5c:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8000a5e:	2600      	movs	r6, #0
 8000a60:	6060      	str	r0, [r4, #4]
 8000a62:	7226      	strb	r6, [r4, #8]
 8000a64:	7266      	strb	r6, [r4, #9]
 8000a66:	f845 3b20 	str.w	r3, [r5], #32
 8000a6a:	2260      	movs	r2, #96	; 0x60
 8000a6c:	4629      	mov	r1, r5
 8000a6e:	f00a fc5f 	bl	800b330 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 8000a72:	f504 635a 	add.w	r3, r4, #3488	; 0xda0
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 8000a76:	60ee      	str	r6, [r5, #12]
 8000a78:	3524      	adds	r5, #36	; 0x24
 8000a7a:	42ab      	cmp	r3, r5
 8000a7c:	d1fb      	bne.n	8000a76 <_ZN8STM32DMAC1Ev+0x22>
}
 8000a7e:	4620      	mov	r0, r4
 8000a80:	bd70      	pop	{r4, r5, r6, pc}
 8000a82:	bf00      	nop
 8000a84:	08021478 	.word	0x08021478

08000a88 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 8000a88:	b508      	push	{r3, lr}
    switch (format)
 8000a8a:	290b      	cmp	r1, #11
 8000a8c:	d80b      	bhi.n	8000aa6 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1e>
 8000a8e:	e8df f001 	tbb	[pc, r1]
 8000a92:	0612      	.short	0x0612
 8000a94:	0a0a0a10 	.word	0x0a0a0a10
 8000a98:	0808080a 	.word	0x0808080a
 8000a9c:	0808      	.short	0x0808
 8000a9e:	2001      	movs	r0, #1
}
 8000aa0:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 8000aa2:	2005      	movs	r0, #5
        break;
 8000aa4:	e7fc      	b.n	8000aa0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        assert(0 && "Unsupported Format!");
 8000aa6:	4b05      	ldr	r3, [pc, #20]	; (8000abc <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8000aa8:	4a05      	ldr	r2, [pc, #20]	; (8000ac0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8000aaa:	4806      	ldr	r0, [pc, #24]	; (8000ac4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x3c>)
 8000aac:	2167      	movs	r1, #103	; 0x67
 8000aae:	f01f f937 	bl	801fd20 <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 8000ab2:	2000      	movs	r0, #0
 8000ab4:	e7f4      	b.n	8000aa0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8000ab6:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000ab8:	e7f2      	b.n	8000aa0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 8000aba:	bf00      	nop
 8000abc:	0802131c 	.word	0x0802131c
 8000ac0:	08021337 	.word	0x08021337
 8000ac4:	08021381 	.word	0x08021381

08000ac8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 8000ac8:	b508      	push	{r3, lr}
    switch (format)
 8000aca:	290a      	cmp	r1, #10
 8000acc:	d809      	bhi.n	8000ae2 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1a>
 8000ace:	e8df f001 	tbb	[pc, r1]
 8000ad2:	0610      	.short	0x0610
 8000ad4:	0808080e 	.word	0x0808080e
 8000ad8:	06060608 	.word	0x06060608
 8000adc:	06          	.byte	0x06
 8000add:	00          	.byte	0x00
 8000ade:	2001      	movs	r0, #1
}
 8000ae0:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 8000ae2:	4b05      	ldr	r3, [pc, #20]	; (8000af8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x30>)
 8000ae4:	4a05      	ldr	r2, [pc, #20]	; (8000afc <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8000ae6:	4806      	ldr	r0, [pc, #24]	; (8000b00 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8000ae8:	2188      	movs	r1, #136	; 0x88
 8000aea:	f01f f919 	bl	801fd20 <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8000aee:	2000      	movs	r0, #0
 8000af0:	e7f6      	b.n	8000ae0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 8000af2:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000af4:	e7f4      	b.n	8000ae0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 8000af6:	bf00      	nop
 8000af8:	0802131c 	.word	0x0802131c
 8000afc:	080213cd 	.word	0x080213cd
 8000b00:	08021381 	.word	0x08021381

08000b04 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
 * BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 * BLIT_OP_COPY_A4
 * BLIT_OP_COPY_A8
 */
void STM32DMA::setupDataCopy(const BlitOp& blitOp)
{
 8000b04:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000b08:	7f4f      	ldrb	r7, [r1, #29]
{
 8000b0a:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000b0c:	4639      	mov	r1, r7
{
 8000b0e:	4681      	mov	r9, r0
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000b10:	f7ff ffba 	bl	8000a88 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b14:	f894 801e 	ldrb.w	r8, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000b18:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b1a:	4641      	mov	r1, r8
 8000b1c:	4648      	mov	r0, r9
 8000b1e:	f7ff ffb3 	bl	8000a88 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b22:	4641      	mov	r1, r8
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b24:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b26:	4648      	mov	r0, r9
 8000b28:	f7ff ffce 	bl	8000ac8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000b2c:	8aa1      	ldrh	r1, [r4, #20]
 8000b2e:	8b62      	ldrh	r2, [r4, #26]
 8000b30:	4b42      	ldr	r3, [pc, #264]	; (8000c3c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000b32:	1a52      	subs	r2, r2, r1
 8000b34:	641a      	str	r2, [r3, #64]	; 0x40

    /* DMA2D BGOR register configuration */
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000b36:	619a      	str	r2, [r3, #24]

    /* DMA2D FGOR register configuration */
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8000b38:	8b22      	ldrh	r2, [r4, #24]
 8000b3a:	1a52      	subs	r2, r2, r1
 8000b3c:	611a      	str	r2, [r3, #16]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000b3e:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000b40:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000b42:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000b46:	645a      	str	r2, [r3, #68]	; 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000b48:	6920      	ldr	r0, [r4, #16]

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000b4a:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000b4c:	63d8      	str	r0, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000b4e:	60da      	str	r2, [r3, #12]

    switch (blitOp.operation)
 8000b50:	6821      	ldr	r1, [r4, #0]
    {
    case BLIT_OP_COPY_A4:
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b52:	f894 c01c 	ldrb.w	ip, [r4, #28]
    switch (blitOp.operation)
 8000b56:	2980      	cmp	r1, #128	; 0x80
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b58:	ea4f 620c 	mov.w	r2, ip, lsl #24
    switch (blitOp.operation)
 8000b5c:	d026      	beq.n	8000bac <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa8>
 8000b5e:	d810      	bhi.n	8000b82 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x7e>
 8000b60:	2920      	cmp	r1, #32
 8000b62:	ea45 0402 	orr.w	r4, r5, r2
 8000b66:	d061      	beq.n	8000c2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 8000b68:	2940      	cmp	r1, #64	; 0x40
 8000b6a:	d05f      	beq.n	8000c2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 8000b6c:	2904      	cmp	r1, #4
 8000b6e:	d05d      	beq.n	8000c2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
        break;
    default: /* BLIT_OP_COPY */
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b70:	4b32      	ldr	r3, [pc, #200]	; (8000c3c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000b72:	432a      	orrs	r2, r5
 8000b74:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000

        /* Perform pixel-format-conversion (PFC) If Bitmap format is not same format as framebuffer format */
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000b78:	4547      	cmp	r7, r8
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b7a:	61da      	str	r2, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000b7c:	d05a      	beq.n	8000c34 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x130>
        {
            /* Start DMA2D : PFC Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8000b7e:	4a30      	ldr	r2, [pc, #192]	; (8000c40 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8000b80:	e040      	b.n	8000c04 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
    switch (blitOp.operation)
 8000b82:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
 8000b86:	d007      	beq.n	8000b98 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x94>
 8000b88:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 8000b8c:	d1f0      	bne.n	8000b70 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x6c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b8e:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000b92:	f042 0209 	orr.w	r2, r2, #9
 8000b96:	e003      	b.n	8000ba0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b98:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000b9c:	f042 020a 	orr.w	r2, r2, #10
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000ba0:	61da      	str	r2, [r3, #28]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
 8000ba2:	68e2      	ldr	r2, [r4, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000ba4:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000ba6:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000ba8:	6158      	str	r0, [r3, #20]
 8000baa:	e02a      	b.n	8000c02 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfe>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8000bac:	68a4      	ldr	r4, [r4, #8]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000bae:	432a      	orrs	r2, r5
 8000bb0:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8000bb4:	1d21      	adds	r1, r4, #4
 8000bb6:	62d9      	str	r1, [r3, #44]	; 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000bb8:	61da      	str	r2, [r3, #28]
            switch ((Bitmap::ClutFormat)palette->format)
 8000bba:	7822      	ldrb	r2, [r4, #0]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000bbc:	625e      	str	r6, [r3, #36]	; 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000bbe:	6158      	str	r0, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 8000bc0:	b142      	cbz	r2, 8000bd4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd0>
 8000bc2:	2a01      	cmp	r2, #1
 8000bc4:	d021      	beq.n	8000c0a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x106>
                assert(0 && "Unsupported format");
 8000bc6:	4b1f      	ldr	r3, [pc, #124]	; (8000c44 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>)
 8000bc8:	4a1f      	ldr	r2, [pc, #124]	; (8000c48 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
 8000bca:	4820      	ldr	r0, [pc, #128]	; (8000c4c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>)
 8000bcc:	f44f 7189 	mov.w	r1, #274	; 0x112
 8000bd0:	f01f f8a6 	bl	801fd20 <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000bd4:	69da      	ldr	r2, [r3, #28]
 8000bd6:	8861      	ldrh	r1, [r4, #2]
 8000bd8:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 8000bdc:	3901      	subs	r1, #1
 8000bde:	f022 0210 	bic.w	r2, r2, #16
 8000be2:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8000be6:	61da      	str	r2, [r3, #28]
            bool blend = true;
 8000be8:	2001      	movs	r0, #1
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 8000bea:	4b14      	ldr	r3, [pc, #80]	; (8000c3c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000bec:	69da      	ldr	r2, [r3, #28]
 8000bee:	f042 0220 	orr.w	r2, r2, #32
 8000bf2:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8000bf4:	69da      	ldr	r2, [r3, #28]
 8000bf6:	0692      	lsls	r2, r2, #26
 8000bf8:	d4fc      	bmi.n	8000bf4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf0>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 8000bfa:	2210      	movs	r2, #16
 8000bfc:	609a      	str	r2, [r3, #8]
            if(blend)
 8000bfe:	2800      	cmp	r0, #0
 8000c00:	d0bd      	beq.n	8000b7e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x7a>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8000c02:	4a13      	ldr	r2, [pc, #76]	; (8000c50 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>)
        }
        else
        {
            /* Start DMA2D : M2M Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000c04:	601a      	str	r2, [r3, #0]
        }
        break;
    }
}
 8000c06:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000c0a:	8862      	ldrh	r2, [r4, #2]
 8000c0c:	69d9      	ldr	r1, [r3, #28]
 8000c0e:	1e54      	subs	r4, r2, #1
 8000c10:	f421 427f 	bic.w	r2, r1, #65280	; 0xff00
 8000c14:	f022 0210 	bic.w	r2, r2, #16
 8000c18:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
                if(blitOp.alpha == 255)
 8000c1c:	f1bc 00ff 	subs.w	r0, ip, #255	; 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000c20:	f042 0210 	orr.w	r2, r2, #16
                if(blitOp.alpha == 255)
 8000c24:	bf18      	it	ne
 8000c26:	2001      	movne	r0, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000c28:	61da      	str	r2, [r3, #28]
                break;
 8000c2a:	e7de      	b.n	8000bea <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe6>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000c2c:	f444 3400 	orr.w	r4, r4, #131072	; 0x20000
 8000c30:	61dc      	str	r4, [r3, #28]
 8000c32:	e7b8      	b.n	8000ba6 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa2>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000c34:	f240 2201 	movw	r2, #513	; 0x201
 8000c38:	e7e4      	b.n	8000c04 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
 8000c3a:	bf00      	nop
 8000c3c:	4002b000 	.word	0x4002b000
 8000c40:	00010201 	.word	0x00010201
 8000c44:	08021418 	.word	0x08021418
 8000c48:	08021432 	.word	0x08021432
 8000c4c:	08021381 	.word	0x08021381
 8000c50:	00020201 	.word	0x00020201

08000c54 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 8000c54:	b570      	push	{r4, r5, r6, lr}
 8000c56:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000c58:	7f89      	ldrb	r1, [r1, #30]
 8000c5a:	f7ff ff35 	bl	8000ac8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000c5e:	8aa6      	ldrh	r6, [r4, #20]
 8000c60:	8ae1      	ldrh	r1, [r4, #22]

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c62:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000c64:	4b15      	ldr	r3, [pc, #84]	; (8000cbc <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>)
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c66:	6925      	ldr	r5, [r4, #16]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000c68:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000c6a:	ea41 4106 	orr.w	r1, r1, r6, lsl #16
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c6e:	1b92      	subs	r2, r2, r6
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000c70:	6459      	str	r1, [r3, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c72:	63dd      	str	r5, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c74:	641a      	str	r2, [r3, #64]	; 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 8000c76:	6826      	ldr	r6, [r4, #0]
 8000c78:	68e1      	ldr	r1, [r4, #12]
 8000c7a:	2e08      	cmp	r6, #8
 8000c7c:	d10d      	bne.n	8000c9a <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration */
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c7e:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c80:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000c82:	6258      	str	r0, [r3, #36]	; 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000c84:	7f20      	ldrb	r0, [r4, #28]
 8000c86:	4a0e      	ldr	r2, [pc, #56]	; (8000cc0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6c>)
 8000c88:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8000c8c:	61da      	str	r2, [r3, #28]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
 8000c8e:	4a0d      	ldr	r2, [pc, #52]	; (8000cc4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>)
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000c90:	6219      	str	r1, [r3, #32]
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c92:	615d      	str	r5, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c94:	60dd      	str	r5, [r3, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8000c96:	601a      	str	r2, [r3, #0]
    }
}
 8000c98:	bd70      	pop	{r4, r5, r6, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 8000c9a:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8000c9c:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 8000c9e:	611a      	str	r2, [r3, #16]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 8000ca0:	0948      	lsrs	r0, r1, #5
 8000ca2:	0a0a      	lsrs	r2, r1, #8
 8000ca4:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8000ca8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8000cac:	4302      	orrs	r2, r0
 8000cae:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8000cb2:	430a      	orrs	r2, r1
 8000cb4:	639a      	str	r2, [r3, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8000cb6:	4a04      	ldr	r2, [pc, #16]	; (8000cc8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x74>)
 8000cb8:	e7ed      	b.n	8000c96 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 8000cba:	bf00      	nop
 8000cbc:	4002b000 	.word	0x4002b000
 8000cc0:	00010009 	.word	0x00010009
 8000cc4:	00020201 	.word	0x00020201
 8000cc8:	00030201 	.word	0x00030201

08000ccc <_ZN8touchgfx5paint6rgb5658tearDownEv>:
    * @brief Waits until previous DMA drawing operation has finished
    */
    void tearDown()
    {
        /* Wait for DMA2D to finish last run */
        while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000ccc:	4b03      	ldr	r3, [pc, #12]	; (8000cdc <_ZN8touchgfx5paint6rgb5658tearDownEv+0x10>)
 8000cce:	681a      	ldr	r2, [r3, #0]
 8000cd0:	07d2      	lsls	r2, r2, #31
 8000cd2:	d4fc      	bmi.n	8000cce <_ZN8touchgfx5paint6rgb5658tearDownEv+0x2>

        /* Clear transfer flags */
        WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC|DMA2D_FLAG_CE|DMA2D_FLAG_TE);
 8000cd4:	2223      	movs	r2, #35	; 0x23
 8000cd6:	609a      	str	r2, [r3, #8]
    }
 8000cd8:	4770      	bx	lr
 8000cda:	bf00      	nop
 8000cdc:	4002b000 	.word	0x4002b000

08000ce0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
    *
    * @brief Renders Canvas Widget chunks using DMA.
    * This functions will not generate an interrupt, and will not affect the DMA queue.
    */
    void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
    {
 8000ce0:	b530      	push	{r4, r5, lr}
        /* Wait for DMA2D to finish last run */
        while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000ce2:	4c0f      	ldr	r4, [pc, #60]	; (8000d20 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x40>)
 8000ce4:	6825      	ldr	r5, [r4, #0]
 8000ce6:	07ed      	lsls	r5, r5, #31
 8000ce8:	d4fc      	bmi.n	8000ce4 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4>

        /* Clear transfer flags */
        WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC|DMA2D_FLAG_CE|DMA2D_FLAG_TE);
 8000cea:	2523      	movs	r5, #35	; 0x23

        /* DMA2D OPFCCR register configuration */
        WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

        /* Configure DMA2D data size */
        WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000cec:	0409      	lsls	r1, r1, #16
        WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC|DMA2D_FLAG_CE|DMA2D_FLAG_TE);
 8000cee:	60a5      	str	r5, [r4, #8]
        WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000cf0:	f041 0101 	orr.w	r1, r1, #1
        WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000cf4:	2502      	movs	r5, #2

        /* Configure DMA2D destination address */
        WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

        if (alpha < 0xFF)
 8000cf6:	2bff      	cmp	r3, #255	; 0xff
        WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000cf8:	6365      	str	r5, [r4, #52]	; 0x34
        WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000cfa:	6461      	str	r1, [r4, #68]	; 0x44
        WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 8000cfc:	63e0      	str	r0, [r4, #60]	; 0x3c
        if (alpha < 0xFF)
 8000cfe:	d00a      	beq.n	8000d16 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x36>
        {
            /* Write DMA2D BGPFCCR register */
            WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));

            /* Write DMA2D FGPFCCR register */
            WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000d00:	4908      	ldr	r1, [pc, #32]	; (8000d24 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x44>)
            WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000d02:	6265      	str	r5, [r4, #36]	; 0x24
            WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000d04:	ea41 6303 	orr.w	r3, r1, r3, lsl #24
 8000d08:	61e3      	str	r3, [r4, #28]

            /* Configure DMA2D source address */
            WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);

            /* Enable the Peripheral and Enable the transfer complete interrupt */
            WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
 8000d0a:	4b07      	ldr	r3, [pc, #28]	; (8000d28 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x48>)
            WRITE_REG(DMA2D->FGCOLR, color);
 8000d0c:	6222      	str	r2, [r4, #32]
            WRITE_REG(DMA2D->BGMAR, (uint32_t)ptr);
 8000d0e:	6160      	str	r0, [r4, #20]
            WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);
 8000d10:	60e0      	str	r0, [r4, #12]

            /* Set color */
            WRITE_REG(DMA2D->OCOLR, color565);

            /* Enable the Peripheral and Enable the transfer complete interrupt */
            WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8000d12:	6023      	str	r3, [r4, #0]
        }
    }
 8000d14:	bd30      	pop	{r4, r5, pc}
            WRITE_REG(DMA2D->FGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8000d16:	61e5      	str	r5, [r4, #28]
            WRITE_REG(DMA2D->OCOLR, color565);
 8000d18:	9b03      	ldr	r3, [sp, #12]
 8000d1a:	63a3      	str	r3, [r4, #56]	; 0x38
            WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8000d1c:	4b03      	ldr	r3, [pc, #12]	; (8000d2c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4c>)
 8000d1e:	e7f8      	b.n	8000d12 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x32>
 8000d20:	4002b000 	.word	0x4002b000
 8000d24:	00010009 	.word	0x00010009
 8000d28:	00020001 	.word	0x00020001
 8000d2c:	00030001 	.word	0x00030001

08000d30 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8000d30:	2001      	movs	r0, #1
 8000d32:	4770      	bx	lr

08000d34 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8000d34:	2038      	movs	r0, #56	; 0x38
 8000d36:	4770      	bx	lr

08000d38 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8000d38:	2338      	movs	r3, #56	; 0x38
 8000d3a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000d3e:	3008      	adds	r0, #8
 8000d40:	4770      	bx	lr

08000d42 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8000d42:	2338      	movs	r3, #56	; 0x38
 8000d44:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000d48:	3008      	adds	r0, #8
 8000d4a:	4770      	bx	lr

08000d4c <_ZNK8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000d4c:	2001      	movs	r0, #1
 8000d4e:	4770      	bx	lr

08000d50 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000d50:	f242 5044 	movw	r0, #9540	; 0x2544
 8000d54:	4770      	bx	lr

08000d56 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d56:	f242 5344 	movw	r3, #9540	; 0x2544
 8000d5a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000d5e:	3008      	adds	r0, #8
 8000d60:	4770      	bx	lr

08000d62 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d62:	f242 5344 	movw	r3, #9540	; 0x2544
 8000d66:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000d6a:	3008      	adds	r0, #8
 8000d6c:	4770      	bx	lr

08000d6e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000d6e:	2001      	movs	r0, #1
 8000d70:	4770      	bx	lr

08000d72 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000d72:	2010      	movs	r0, #16
 8000d74:	4770      	bx	lr

08000d76 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d76:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000d7a:	3008      	adds	r0, #8
 8000d7c:	4770      	bx	lr

08000d7e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d7e:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000d82:	3008      	adds	r0, #8
 8000d84:	4770      	bx	lr

08000d86 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoScreen1ScreenNoTransition();
 8000d86:	4608      	mov	r0, r1
 8000d88:	f001 bbd8 	b.w	800253c <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>

08000d8c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8000d8c:	b510      	push	{r4, lr}
 8000d8e:	4b03      	ldr	r3, [pc, #12]	; (8000d9c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 8000d90:	6003      	str	r3, [r0, #0]
 8000d92:	4604      	mov	r4, r0
 8000d94:	f009 f937 	bl	800a006 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000d98:	4620      	mov	r0, r4
 8000d9a:	bd10      	pop	{r4, pc}
 8000d9c:	08021530 	.word	0x08021530

08000da0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 8000da0:	b510      	push	{r4, lr}
 8000da2:	4604      	mov	r4, r0
 8000da4:	f7ff fff2 	bl	8000d8c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8000da8:	4620      	mov	r0, r4
 8000daa:	2140      	movs	r1, #64	; 0x40
 8000dac:	f01e ff8a 	bl	801fcc4 <_ZdlPvj>
 8000db0:	4620      	mov	r0, r4
 8000db2:	bd10      	pop	{r4, pc}

08000db4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000db4:	b510      	push	{r4, lr}
 8000db6:	4b03      	ldr	r3, [pc, #12]	; (8000dc4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000db8:	6003      	str	r3, [r0, #0]
 8000dba:	4604      	mov	r4, r0
 8000dbc:	f009 f923 	bl	800a006 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000dc0:	4620      	mov	r0, r4
 8000dc2:	bd10      	pop	{r4, pc}
 8000dc4:	080214fc 	.word	0x080214fc

08000dc8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000dc8:	b510      	push	{r4, lr}
 8000dca:	4604      	mov	r4, r0
 8000dcc:	f7ff fff2 	bl	8000db4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000dd0:	4620      	mov	r0, r4
 8000dd2:	f242 514c 	movw	r1, #9548	; 0x254c
 8000dd6:	f01e ff75 	bl	801fcc4 <_ZdlPvj>
 8000dda:	4620      	mov	r0, r4
 8000ddc:	bd10      	pop	{r4, pc}
	...

08000de0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000de0:	b510      	push	{r4, lr}
 8000de2:	4b03      	ldr	r3, [pc, #12]	; (8000df0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000de4:	6003      	str	r3, [r0, #0]
 8000de6:	4604      	mov	r4, r0
 8000de8:	f009 f90d 	bl	800a006 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000dec:	4620      	mov	r0, r4
 8000dee:	bd10      	pop	{r4, pc}
 8000df0:	080214c8 	.word	0x080214c8

08000df4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000df4:	b510      	push	{r4, lr}
 8000df6:	4604      	mov	r4, r0
 8000df8:	f7ff fff2 	bl	8000de0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000dfc:	4620      	mov	r0, r4
 8000dfe:	2118      	movs	r1, #24
 8000e00:	f01e ff60 	bl	801fcc4 <_ZdlPvj>
 8000e04:	4620      	mov	r0, r4
 8000e06:	bd10      	pop	{r4, pc}

08000e08 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8000e08:	b510      	push	{r4, lr}
 8000e0a:	4b09      	ldr	r3, [pc, #36]	; (8000e30 <_ZN12FrontendHeapD1Ev+0x28>)
 8000e0c:	6003      	str	r3, [r0, #0]
 8000e0e:	4604      	mov	r4, r0
 8000e10:	f500 5015 	add.w	r0, r0, #9536	; 0x2540
 8000e14:	3038      	adds	r0, #56	; 0x38
 8000e16:	f7ff ffb9 	bl	8000d8c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8000e1a:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8000e1e:	f7ff ffc9 	bl	8000db4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000e22:	f104 0014 	add.w	r0, r4, #20
 8000e26:	f7ff ffdb 	bl	8000de0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000e2a:	4620      	mov	r0, r4
 8000e2c:	bd10      	pop	{r4, pc}
 8000e2e:	bf00      	nop
 8000e30:	08021564 	.word	0x08021564

08000e34 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8000e34:	b508      	push	{r3, lr}
 8000e36:	4802      	ldr	r0, [pc, #8]	; (8000e40 <__tcf_0+0xc>)
 8000e38:	f7ff ffe6 	bl	8000e08 <_ZN12FrontendHeapD1Ev>
 8000e3c:	bd08      	pop	{r3, pc}
 8000e3e:	bf00      	nop
 8000e40:	200001a0 	.word	0x200001a0

08000e44 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8000e44:	b510      	push	{r4, lr}
 8000e46:	4604      	mov	r4, r0
 8000e48:	f7ff ffde 	bl	8000e08 <_ZN12FrontendHeapD1Ev>
 8000e4c:	4620      	mov	r0, r4
 8000e4e:	f242 7114 	movw	r1, #10004	; 0x2714
 8000e52:	f01e ff37 	bl	801fcc4 <_ZdlPvj>
 8000e56:	4620      	mov	r0, r4
 8000e58:	bd10      	pop	{r4, pc}
	...

08000e5c <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 8000e5c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8000e60:	f001 f926 	bl	80020b0 <_ZN14BitmapDatabase11getInstanceEv>
 8000e64:	4605      	mov	r5, r0
 8000e66:	f001 f927 	bl	80020b8 <_ZN14BitmapDatabase15getInstanceSizeEv>
 8000e6a:	2400      	movs	r4, #0
 8000e6c:	4601      	mov	r1, r0
 8000e6e:	4623      	mov	r3, r4
 8000e70:	4628      	mov	r0, r5
 8000e72:	4622      	mov	r2, r4
 8000e74:	9400      	str	r4, [sp, #0]
 8000e76:	f012 fe25 	bl	8013ac4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8000e7a:	4b26      	ldr	r3, [pc, #152]	; (8000f14 <touchgfx_init+0xb8>)
 8000e7c:	4a26      	ldr	r2, [pc, #152]	; (8000f18 <touchgfx_init+0xbc>)
        static FrontendHeap instance;
 8000e7e:	4d27      	ldr	r5, [pc, #156]	; (8000f1c <touchgfx_init+0xc0>)
 8000e80:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8000e82:	4620      	mov	r0, r4
 8000e84:	f003 fd20 	bl	80048c8 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8000e88:	4825      	ldr	r0, [pc, #148]	; (8000f20 <touchgfx_init+0xc4>)
 8000e8a:	f012 fd83 	bl	8013994 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8000e8e:	782b      	ldrb	r3, [r5, #0]
 8000e90:	f3bf 8f5b 	dmb	ish
 8000e94:	07db      	lsls	r3, r3, #31
 8000e96:	d436      	bmi.n	8000f06 <touchgfx_init+0xaa>
 8000e98:	4628      	mov	r0, r5
 8000e9a:	f01e ff15 	bl	801fcc8 <__cxa_guard_acquire>
 8000e9e:	b390      	cbz	r0, 8000f06 <touchgfx_init+0xaa>
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 8000ea0:	4c20      	ldr	r4, [pc, #128]	; (8000f24 <touchgfx_init+0xc8>)
 8000ea2:	4f21      	ldr	r7, [pc, #132]	; (8000f28 <touchgfx_init+0xcc>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8000ea4:	4b21      	ldr	r3, [pc, #132]	; (8000f2c <touchgfx_init+0xd0>)
 8000ea6:	6023      	str	r3, [r4, #0]
 8000ea8:	f107 0644 	add.w	r6, r7, #68	; 0x44
 8000eac:	f104 0014 	add.w	r0, r4, #20
 8000eb0:	f104 082c 	add.w	r8, r4, #44	; 0x2c
 8000eb4:	6060      	str	r0, [r4, #4]
 8000eb6:	f8c4 8008 	str.w	r8, [r4, #8]
 8000eba:	60e7      	str	r7, [r4, #12]
 8000ebc:	6126      	str	r6, [r4, #16]
 8000ebe:	f009 f8a3 	bl	800a008 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000ec2:	4b1b      	ldr	r3, [pc, #108]	; (8000f30 <touchgfx_init+0xd4>)
 8000ec4:	6163      	str	r3, [r4, #20]
 8000ec6:	4640      	mov	r0, r8
 8000ec8:	f009 f89e 	bl	800a008 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000ecc:	4b19      	ldr	r3, [pc, #100]	; (8000f34 <touchgfx_init+0xd8>)
 8000ece:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000ed0:	4638      	mov	r0, r7
 8000ed2:	f009 f899 	bl	800a008 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000ed6:	f504 5300 	add.w	r3, r4, #8192	; 0x2000
 8000eda:	4a17      	ldr	r2, [pc, #92]	; (8000f38 <touchgfx_init+0xdc>)
 8000edc:	f8c3 2578 	str.w	r2, [r3, #1400]	; 0x578
 8000ee0:	f503 60b7 	add.w	r0, r3, #1464	; 0x5b8
 8000ee4:	f003 fd6c 	bl	80049c0 <_ZN5ModelC1Ev>
 8000ee8:	4622      	mov	r2, r4
 8000eea:	f107 0140 	add.w	r1, r7, #64	; 0x40
 8000eee:	4630      	mov	r0, r6
 8000ef0:	f003 fd5c 	bl	80049ac <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8000ef4:	4630      	mov	r0, r6
 8000ef6:	f001 fb21 	bl	800253c <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
        static FrontendHeap instance;
 8000efa:	4810      	ldr	r0, [pc, #64]	; (8000f3c <touchgfx_init+0xe0>)
 8000efc:	f01e ff2e 	bl	801fd5c <atexit>
 8000f00:	4628      	mov	r0, r5
 8000f02:	f01e feed 	bl	801fce0 <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8000f06:	480e      	ldr	r0, [pc, #56]	; (8000f40 <touchgfx_init+0xe4>)
}
 8000f08:	b002      	add	sp, #8
 8000f0a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8000f0e:	f7ff bc3e 	b.w	800078e <_ZN11TouchGFXHAL10initializeEv>
 8000f12:	bf00      	nop
 8000f14:	200153c0 	.word	0x200153c0
 8000f18:	200036d4 	.word	0x200036d4
 8000f1c:	2000019c 	.word	0x2000019c
 8000f20:	20000008 	.word	0x20000008
 8000f24:	200001a0 	.word	0x200001a0
 8000f28:	20002718 	.word	0x20002718
 8000f2c:	08021564 	.word	0x08021564
 8000f30:	080214c8 	.word	0x080214c8
 8000f34:	080214fc 	.word	0x080214fc
 8000f38:	08021530 	.word	0x08021530
 8000f3c:	08000e35 	.word	0x08000e35
 8000f40:	20003658 	.word	0x20003658

08000f44 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8000f44:	4801      	ldr	r0, [pc, #4]	; (8000f4c <touchgfx_taskEntry+0x8>)
 8000f46:	f7ff bc24 	b.w	8000792 <_ZN11TouchGFXHAL9taskEntryEv>
 8000f4a:	bf00      	nop
 8000f4c:	20003658 	.word	0x20003658

08000f50 <_GLOBAL__sub_I_touchgfx_init>:
}
 8000f50:	b570      	push	{r4, r5, r6, lr}
{
public:

    STM32TouchController() {}
 8000f52:	4c23      	ldr	r4, [pc, #140]	; (8000fe0 <_GLOBAL__sub_I_touchgfx_init+0x90>)
static STM32DMA dma;
 8000f54:	4e23      	ldr	r6, [pc, #140]	; (8000fe4 <_GLOBAL__sub_I_touchgfx_init+0x94>)
 8000f56:	4b24      	ldr	r3, [pc, #144]	; (8000fe8 <_GLOBAL__sub_I_touchgfx_init+0x98>)
static LCD16bpp display;
 8000f58:	4d24      	ldr	r5, [pc, #144]	; (8000fec <_GLOBAL__sub_I_touchgfx_init+0x9c>)
 8000f5a:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8000f5c:	4630      	mov	r0, r6
 8000f5e:	f7ff fd79 	bl	8000a54 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 8000f62:	4628      	mov	r0, r5
 8000f64:	f015 feb8 	bl	8016cd8 <_ZN8touchgfx8LCD16bppC1Ev>
          lastRenderMethod(HARDWARE)
 8000f68:	4b21      	ldr	r3, [pc, #132]	; (8000ff0 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
        instance = this;
 8000f6a:	4822      	ldr	r0, [pc, #136]	; (8000ff4 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
          lastRenderMethod(HARDWARE)
 8000f6c:	60dc      	str	r4, [r3, #12]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f6e:	4c22      	ldr	r4, [pc, #136]	; (8000ff8 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
        instance = this;
 8000f70:	6003      	str	r3, [r0, #0]
          lastRenderMethod(HARDWARE)
 8000f72:	2200      	movs	r2, #0
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f74:	20f0      	movs	r0, #240	; 0xf0
          lastRenderMethod(HARDWARE)
 8000f76:	f44f 7180 	mov.w	r1, #256	; 0x100
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f7a:	8020      	strh	r0, [r4, #0]
          lastRenderMethod(HARDWARE)
 8000f7c:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f80:	4c1e      	ldr	r4, [pc, #120]	; (8000ffc <_GLOBAL__sub_I_touchgfx_init+0xac>)
          lastRenderMethod(HARDWARE)
 8000f82:	491f      	ldr	r1, [pc, #124]	; (8001000 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f84:	8020      	strh	r0, [r4, #0]
          lastRenderMethod(HARDWARE)
 8000f86:	e9c3 1219 	strd	r1, r2, [r3, #100]	; 0x64
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000f8a:	4c1e      	ldr	r4, [pc, #120]	; (8001004 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8000f8c:	861a      	strh	r2, [r3, #48]	; 0x30
          lastRenderMethod(HARDWARE)
 8000f8e:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000f92:	f44f 70a0 	mov.w	r0, #320	; 0x140
          lastRenderMethod(HARDWARE)
 8000f96:	6759      	str	r1, [r3, #116]	; 0x74
 8000f98:	2101      	movs	r1, #1
 8000f9a:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8000f9e:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8000fa2:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8000fa6:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
 8000faa:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
 8000fae:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 8000fb2:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
 8000fb6:	e9c3 2216 	strd	r2, r2, [r3, #88]	; 0x58
 8000fba:	661a      	str	r2, [r3, #96]	; 0x60
 8000fbc:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
 8000fc0:	671a      	str	r2, [r3, #112]	; 0x70
 8000fc2:	e9c3 6501 	strd	r6, r5, [r3, #4]
 8000fc6:	f883 1078 	strb.w	r1, [r3, #120]	; 0x78
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000fca:	8020      	strh	r0, [r4, #0]
 8000fcc:	4c0e      	ldr	r4, [pc, #56]	; (8001008 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8000fce:	f883 1034 	strb.w	r1, [r3, #52]	; 0x34
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000fd2:	8020      	strh	r0, [r4, #0]
        DISPLAY_ROTATION = rotate0;
 8000fd4:	480d      	ldr	r0, [pc, #52]	; (800100c <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 8000fd6:	7002      	strb	r2, [r0, #0]
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 8000fd8:	4a0d      	ldr	r2, [pc, #52]	; (8001010 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 8000fda:	601a      	str	r2, [r3, #0]
}
 8000fdc:	bd70      	pop	{r4, r5, r6, pc}
 8000fde:	bf00      	nop
 8000fe0:	200028b4 	.word	0x200028b4
 8000fe4:	200028b8 	.word	0x200028b8
 8000fe8:	08020fb8 	.word	0x08020fb8
 8000fec:	200036d8 	.word	0x200036d8
 8000ff0:	20003658 	.word	0x20003658
 8000ff4:	2001535c 	.word	0x2001535c
 8000ff8:	20015350 	.word	0x20015350
 8000ffc:	20015356 	.word	0x20015356
 8001000:	01000001 	.word	0x01000001
 8001004:	20015352 	.word	0x20015352
 8001008:	20015358 	.word	0x20015358
 800100c:	20015354 	.word	0x20015354
 8001010:	08021144 	.word	0x08021144

08001014 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 8001014:	4801      	ldr	r0, [pc, #4]	; (800101c <_GLOBAL__sub_D_touchgfx_init+0x8>)
 8001016:	f7ff bcf9 	b.w	8000a0c <_ZN8STM32DMAD1Ev>
 800101a:	bf00      	nop
 800101c:	200028b8 	.word	0x200028b8

08001020 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001020:	4b03      	ldr	r3, [pc, #12]	; (8001030 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
 8001022:	2290      	movs	r2, #144	; 0x90
 8001024:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
 8001028:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 800102c:	4770      	bx	lr
 800102e:	bf00      	nop
 8001030:	e000e100 	.word	0xe000e100

08001034 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8001034:	4a09      	ldr	r2, [pc, #36]	; (800105c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 8001036:	490a      	ldr	r1, [pc, #40]	; (8001060 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 8001038:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 800103a:	480a      	ldr	r0, [pc, #40]	; (8001064 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 800103c:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8001040:	3b01      	subs	r3, #1
 8001042:	b29b      	uxth	r3, r3
 8001044:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8001046:	6911      	ldr	r1, [r2, #16]
 8001048:	f3c1 010a 	ubfx	r1, r1, #0, #11
 800104c:	3901      	subs	r1, #1
 800104e:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 8001050:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 8001052:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8001054:	f043 0301 	orr.w	r3, r3, #1
 8001058:	6353      	str	r3, [r2, #52]	; 0x34
}
 800105a:	4770      	bx	lr
 800105c:	40016800 	.word	0x40016800
 8001060:	20003754 	.word	0x20003754
 8001064:	20003752 	.word	0x20003752

08001068 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 8001068:	4b01      	ldr	r3, [pc, #4]	; (8001070 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 800106a:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
}
 800106e:	4770      	bx	lr
 8001070:	40016800 	.word	0x40016800

08001074 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001074:	4b02      	ldr	r3, [pc, #8]	; (8001080 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001076:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001078:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 800107c:	625a      	str	r2, [r3, #36]	; 0x24
}
 800107e:	4770      	bx	lr
 8001080:	40016800 	.word	0x40016800

08001084 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8001084:	b570      	push	{r4, r5, r6, lr}
 8001086:	4604      	mov	r4, r0
    HAL::initialize();
 8001088:	f009 fac5 	bl	800a616 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 800108c:	6823      	ldr	r3, [r4, #0]
 800108e:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 8001090:	f00f fafc 	bl	801068c <_ZN8touchgfx11Application11getInstanceEv>
 8001094:	4601      	mov	r1, r0
 8001096:	4620      	mov	r0, r4
 8001098:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 800109a:	6823      	ldr	r3, [r4, #0]
 800109c:	4a05      	ldr	r2, [pc, #20]	; (80010b4 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 800109e:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 80010a2:	4620      	mov	r0, r4
 80010a4:	46ac      	mov	ip, r5
 80010a6:	2300      	movs	r3, #0
}
 80010a8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 80010ac:	f5a2 3116 	sub.w	r1, r2, #153600	; 0x25800
 80010b0:	4760      	bx	ip
 80010b2:	bf00      	nop
 80010b4:	d0025800 	.word	0xd0025800

080010b8 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 80010b8:	f009 ba94 	b.w	800a5e4 <_ZN8touchgfx3HAL10beginFrameEv>

080010bc <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    if (frameBufferUpdatedThisFrame)
 80010bc:	f890 304b 	ldrb.w	r3, [r0, #75]	; 0x4b
 80010c0:	b113      	cbz	r3, 80010c8 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0xc>
        refreshRequested = true;
 80010c2:	4b02      	ldr	r3, [pc, #8]	; (80010cc <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x10>)
 80010c4:	2201      	movs	r2, #1
 80010c6:	701a      	strb	r2, [r3, #0]
    HAL::endFrame();
 80010c8:	f009 ba98 	b.w	800a5fc <_ZN8touchgfx3HAL8endFrameEv>
 80010cc:	20003750 	.word	0x20003750

080010d0 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 80010d0:	f009 ba52 	b.w	800a578 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

080010d4 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 80010d4:	f009 bbab 	b.w	800a82e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

080010d8 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80010d8:	4b03      	ldr	r3, [pc, #12]	; (80010e8 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
 80010da:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80010de:	609a      	str	r2, [r3, #8]
 80010e0:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 80010e4:	609a      	str	r2, [r3, #8]
}
 80010e6:	4770      	bx	lr
 80010e8:	e000e100 	.word	0xe000e100

080010ec <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80010ec:	4b08      	ldr	r3, [pc, #32]	; (8001110 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
 80010ee:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80010f2:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80010f6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80010fa:	f3bf 8f6f 	isb	sy
 80010fe:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8001102:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8001106:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800110a:	f3bf 8f6f 	isb	sy
}
 800110e:	4770      	bx	lr
 8001110:	e000e100 	.word	0xe000e100

08001114 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 8001114:	b510      	push	{r4, lr}
        return instance;
 8001116:	4c14      	ldr	r4, [pc, #80]	; (8001168 <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 8001118:	6823      	ldr	r3, [r4, #0]
 800111a:	b323      	cbz	r3, 8001166 <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 800111c:	4b13      	ldr	r3, [pc, #76]	; (800116c <HAL_LTDC_LineEventCallback+0x58>)
 800111e:	4a14      	ldr	r2, [pc, #80]	; (8001170 <HAL_LTDC_LineEventCallback+0x5c>)
 8001120:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001122:	8811      	ldrh	r1, [r2, #0]
 8001124:	428b      	cmp	r3, r1
 8001126:	d113      	bne.n	8001150 <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 8001128:	4b12      	ldr	r3, [pc, #72]	; (8001174 <HAL_LTDC_LineEventCallback+0x60>)
 800112a:	8819      	ldrh	r1, [r3, #0]
 800112c:	f005 fc5e 	bl	80069ec <HAL_LTDC_ProgramLineEvent>
 8001130:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 8001132:	f892 3066 	ldrb.w	r3, [r2, #102]	; 0x66
 8001136:	3301      	adds	r3, #1
 8001138:	f882 3066 	strb.w	r3, [r2, #102]	; 0x66
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 800113c:	f7ff fc14 	bl	8000968 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 8001140:	6820      	ldr	r0, [r4, #0]
 8001142:	f009 ff9f 	bl	800b084 <_ZN8touchgfx3HAL16swapFrameBuffersEv>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8001146:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 800114a:	2000      	movs	r0, #0
 800114c:	f7ff baf8 	b.w	8000740 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 8001150:	f005 fc4c 	bl	80069ec <HAL_LTDC_ProgramLineEvent>
        return instance;
 8001154:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 8001156:	6803      	ldr	r3, [r0, #0]
 8001158:	6a1b      	ldr	r3, [r3, #32]
 800115a:	4798      	blx	r3
    }
 800115c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8001160:	2000      	movs	r0, #0
 8001162:	f7ff baee 	b.w	8000742 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 8001166:	bd10      	pop	{r4, pc}
 8001168:	2001535c 	.word	0x2001535c
 800116c:	40016800 	.word	0x40016800
 8001170:	20003754 	.word	0x20003754
 8001174:	20003752 	.word	0x20003752

08001178 <SPI5_Write>:
/**
  * @brief  Writes a byte to device.
  * @param  Value: value to be written
  */
static void SPI5_Write(uint16_t Value)
{
 8001178:	b507      	push	{r0, r1, r2, lr}
  HAL_StatusTypeDef status = HAL_OK;
  
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 800117a:	4b06      	ldr	r3, [pc, #24]	; (8001194 <SPI5_Write+0x1c>)
{
 800117c:	f8ad 0006 	strh.w	r0, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001180:	681b      	ldr	r3, [r3, #0]
 8001182:	4805      	ldr	r0, [pc, #20]	; (8001198 <SPI5_Write+0x20>)
 8001184:	2201      	movs	r2, #1
 8001186:	f10d 0106 	add.w	r1, sp, #6
 800118a:	f006 f940 	bl	800740e <HAL_SPI_Transmit>
  if(status != HAL_OK)
  {
    /* Re-Initialize the BUS */
    SPI5_Error();
  }
}
 800118e:	b003      	add	sp, #12
 8001190:	f85d fb04 	ldr.w	pc, [sp], #4
 8001194:	20000010 	.word	0x20000010
 8001198:	20003938 	.word	0x20003938

0800119c <CountAvgFrom60sec>:
			result+=ladowarka.PomiaryCoSec[i];
 800119c:	490c      	ldr	r1, [pc, #48]	; (80011d0 <CountAvgFrom60sec+0x34>)
float CountAvgFrom60sec(){
 800119e:	b082      	sub	sp, #8
 80011a0:	2300      	movs	r3, #0
			result+=ladowarka.PomiaryCoSec[i];
 80011a2:	f503 7217 	add.w	r2, r3, #604	; 0x25c
 80011a6:	eb01 0282 	add.w	r2, r1, r2, lsl #2
 80011aa:	ed92 7a01 	vldr	s14, [r2, #4]
 80011ae:	eddd 7a01 	vldr	s15, [sp, #4]
		for (uint8_t i=0;i<60;i++)
 80011b2:	3301      	adds	r3, #1
			result+=ladowarka.PomiaryCoSec[i];
 80011b4:	ee77 7a87 	vadd.f32	s15, s15, s14
		for (uint8_t i=0;i<60;i++)
 80011b8:	2b3c      	cmp	r3, #60	; 0x3c
			result+=ladowarka.PomiaryCoSec[i];
 80011ba:	edcd 7a01 	vstr	s15, [sp, #4]
		for (uint8_t i=0;i<60;i++)
 80011be:	d1f0      	bne.n	80011a2 <CountAvgFrom60sec+0x6>
	return result/60;
 80011c0:	ed9d 0a01 	vldr	s0, [sp, #4]
}
 80011c4:	eddf 7a03 	vldr	s15, [pc, #12]	; 80011d4 <CountAvgFrom60sec+0x38>
 80011c8:	ee80 0a27 	vdiv.f32	s0, s0, s15
 80011cc:	b002      	add	sp, #8
 80011ce:	4770      	bx	lr
 80011d0:	200039d0 	.word	0x200039d0
 80011d4:	42700000 	.word	0x42700000

080011d8 <ZadanieDwa>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_ZadanieDwa */
__weak void ZadanieDwa(void *argument)
{
 80011d8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	  static int liczbaPomiarow=0; // number of adc measurements. if 10 then clear
	  static volatile uint32_t value=0; //actual value of adc measurement

	  static int sec0to59=0;

		if(ladowarka.Minelo100ms){ //jesli zostalo wykryte przerwanie z liniczka7
 80011dc:	4c43      	ldr	r4, [pc, #268]	; (80012ec <ZadanieDwa+0x114>)
			ladowarka.Minelo100ms=0; //kasuj flage

					//pomiar napiecia
					HAL_ADC_Start(&hadc1);
 80011de:	4d44      	ldr	r5, [pc, #272]	; (80012f0 <ZadanieDwa+0x118>)
		if(ladowarka.Minelo100ms){ //jesli zostalo wykryte przerwanie z liniczka7
 80011e0:	f8d4 3a68 	ldr.w	r3, [r4, #2664]	; 0xa68
 80011e4:	2b00      	cmp	r3, #0
 80011e6:	d071      	beq.n	80012cc <ZadanieDwa+0xf4>
			ladowarka.Minelo100ms=0; //kasuj flage
 80011e8:	2300      	movs	r3, #0
					HAL_ADC_Start(&hadc1);
 80011ea:	4628      	mov	r0, r5
			ladowarka.Minelo100ms=0; //kasuj flage
 80011ec:	f8c4 3a68 	str.w	r3, [r4, #2664]	; 0xa68
					HAL_ADC_PollForConversion(&hadc1, HAL_MAX_DELAY);
					value += HAL_ADC_GetValue(&hadc1);
					liczbaPomiarow++;
 80011f0:	4f40      	ldr	r7, [pc, #256]	; (80012f4 <ZadanieDwa+0x11c>)
					value += HAL_ADC_GetValue(&hadc1);
 80011f2:	4e41      	ldr	r6, [pc, #260]	; (80012f8 <ZadanieDwa+0x120>)
					HAL_ADC_Start(&hadc1);
 80011f4:	f004 fa00 	bl	80055f8 <HAL_ADC_Start>
					HAL_ADC_PollForConversion(&hadc1, HAL_MAX_DELAY);
 80011f8:	f04f 31ff 	mov.w	r1, #4294967295
 80011fc:	4628      	mov	r0, r5
 80011fe:	f004 fa6f 	bl	80056e0 <HAL_ADC_PollForConversion>
					value += HAL_ADC_GetValue(&hadc1);
 8001202:	4628      	mov	r0, r5
 8001204:	f004 fabb 	bl	800577e <HAL_ADC_GetValue>
					liczbaPomiarow++;
 8001208:	683a      	ldr	r2, [r7, #0]
					value += HAL_ADC_GetValue(&hadc1);
 800120a:	6833      	ldr	r3, [r6, #0]
					liczbaPomiarow++;
 800120c:	3201      	adds	r2, #1
 800120e:	210a      	movs	r1, #10
					value += HAL_ADC_GetValue(&hadc1);
 8001210:	4418      	add	r0, r3
					liczbaPomiarow++;
 8001212:	603a      	str	r2, [r7, #0]
 8001214:	fb92 f3f1 	sdiv	r3, r2, r1
 8001218:	fb01 2213 	mls	r2, r1, r3, r2
					value += HAL_ADC_GetValue(&hadc1);
 800121c:	6030      	str	r0, [r6, #0]

					/****** jesli minela sekunda ->10tickow co 100ms********/

					if(liczbaPomiarow%10==0){ //jesli minela sekunda
 800121e:	2a00      	cmp	r2, #0
 8001220:	d154      	bne.n	80012cc <ZadanieDwa+0xf4>
						ladowarka.BatteryVoltage=(value/10) * 3.3f / 4096.0f;
 8001222:	6833      	ldr	r3, [r6, #0]
 8001224:	fbb3 f3f1 	udiv	r3, r3, r1
 8001228:	ee07 3a90 	vmov	s15, r3
 800122c:	ed9f 7a33 	vldr	s14, [pc, #204]	; 80012fc <ZadanieDwa+0x124>
 8001230:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001234:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001238:	ed9f 7a31 	vldr	s14, [pc, #196]	; 8001300 <ZadanieDwa+0x128>
 800123c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001240:	edc4 7a00 	vstr	s15, [r4]

						if (ladowarka.ChargeStarted){ //jesli zaczeto ladwowac
 8001244:	68e3      	ldr	r3, [r4, #12]
 8001246:	2b00      	cmp	r3, #0
 8001248:	d03d      	beq.n	80012c6 <ZadanieDwa+0xee>
							if (ladowarka.CzsasLadowaniaWSec<1) {ladowarka.NapiecieBaterii[0]=ladowarka.BatteryVoltage;ladowarka.narysujPunktNaWykresieMin=1; }//dla 0 pomiaru dodaj od razy do tablicy oraz wyplotuj na obu wykreasch.
 800124a:	f8d4 3a74 	ldr.w	r3, [r4, #2676]	; 0xa74
							ladowarka.CzsasLadowaniaWSec++; //jesli zaczal sie proces ladowana ziwekszja wartosc czas ladowania w sec
							ladowarka.narysujPunktNaWykresie=1; //zezwol na narysowanie danej na wykresie


							/********* dodawanie co 1 sek wartosc pomiaru do tabeli********/
							ladowarka.PomiaryCoSec[sec0to59++]=ladowarka.BatteryVoltage;
 800124e:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 8001308 <ZadanieDwa+0x130>
							if (ladowarka.CzsasLadowaniaWSec<1) {ladowarka.NapiecieBaterii[0]=ladowarka.BatteryVoltage;ladowarka.narysujPunktNaWykresieMin=1; }//dla 0 pomiaru dodaj od razy do tablicy oraz wyplotuj na obu wykreasch.
 8001252:	2b00      	cmp	r3, #0
 8001254:	bfdf      	itttt	le
 8001256:	6823      	ldrle	r3, [r4, #0]
 8001258:	6163      	strle	r3, [r4, #20]
 800125a:	2301      	movle	r3, #1
 800125c:	f8c4 3a70 	strle.w	r3, [r4, #2672]	; 0xa70
							if (ladowarka.BatteryVoltage>ladowarka.MaxBatteryVoltage) ladowarka.MaxBatteryVoltage=ladowarka.BatteryVoltage; //uaktualnij max wartosc.
 8001260:	ed94 7a00 	vldr	s14, [r4]
 8001264:	edd4 7a01 	vldr	s15, [r4, #4]
 8001268:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800126c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001270:	bfc4      	itt	gt
 8001272:	6823      	ldrgt	r3, [r4, #0]
 8001274:	6063      	strgt	r3, [r4, #4]
							ladowarka.CzsasLadowaniaWSec++; //jesli zaczal sie proces ladowana ziwekszja wartosc czas ladowania w sec
 8001276:	f8d4 3a74 	ldr.w	r3, [r4, #2676]	; 0xa74
 800127a:	3301      	adds	r3, #1
 800127c:	f8c4 3a74 	str.w	r3, [r4, #2676]	; 0xa74
							ladowarka.PomiaryCoSec[sec0to59++]=ladowarka.BatteryVoltage;
 8001280:	f8d8 3000 	ldr.w	r3, [r8]
							ladowarka.narysujPunktNaWykresie=1; //zezwol na narysowanie danej na wykresie
 8001284:	f04f 0901 	mov.w	r9, #1
							ladowarka.PomiaryCoSec[sec0to59++]=ladowarka.BatteryVoltage;
 8001288:	eb03 0209 	add.w	r2, r3, r9
 800128c:	f503 7317 	add.w	r3, r3, #604	; 0x25c
							ladowarka.narysujPunktNaWykresie=1; //zezwol na narysowanie danej na wykresie
 8001290:	f8c4 9a6c 	str.w	r9, [r4, #2668]	; 0xa6c
							ladowarka.PomiaryCoSec[sec0to59++]=ladowarka.BatteryVoltage;
 8001294:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8001298:	6821      	ldr	r1, [r4, #0]
 800129a:	f8c8 2000 	str.w	r2, [r8]
							if (sec0to59>59) {	//jesli mamy 10 elementow w tabeli (minelo 10sec) usrednij i dodaj wartosc do NapiecieBaterii
 800129e:	2a3b      	cmp	r2, #59	; 0x3b
							ladowarka.PomiaryCoSec[sec0to59++]=ladowarka.BatteryVoltage;
 80012a0:	6059      	str	r1, [r3, #4]
							if (sec0to59>59) {	//jesli mamy 10 elementow w tabeli (minelo 10sec) usrednij i dodaj wartosc do NapiecieBaterii
 80012a2:	dd10      	ble.n	80012c6 <ZadanieDwa+0xee>
								ladowarka.NapiecieBaterii[ladowarka.CzsasLadowaniaWSec/60]=CountAvgFrom60sec(); // TO DO srednia z 10 pomiarow
 80012a4:	233c      	movs	r3, #60	; 0x3c
 80012a6:	f8d4 0a74 	ldr.w	r0, [r4, #2676]	; 0xa74
 80012aa:	fb90 f0f3 	sdiv	r0, r0, r3
 80012ae:	f7ff ff75 	bl	800119c <CountAvgFrom60sec>
 80012b2:	3004      	adds	r0, #4
 80012b4:	eb04 0080 	add.w	r0, r4, r0, lsl #2
								sec0to59=0;
 80012b8:	2300      	movs	r3, #0
								ladowarka.NapiecieBaterii[ladowarka.CzsasLadowaniaWSec/60]=CountAvgFrom60sec(); // TO DO srednia z 10 pomiarow
 80012ba:	ed80 0a01 	vstr	s0, [r0, #4]
								sec0to59=0;
 80012be:	f8c8 3000 	str.w	r3, [r8]

								ladowarka.narysujPunktNaWykresieMin=1;//zezwol na narysowanie na wykresie minut.
 80012c2:	f8c4 9a70 	str.w	r9, [r4, #2672]	; 0xa70
							}

						}
						liczbaPomiarow=0; //po 1 sek ustaw to na 0
 80012c6:	2300      	movs	r3, #0
 80012c8:	603b      	str	r3, [r7, #0]
						value=0;
 80012ca:	6033      	str	r3, [r6, #0]


					}

					/*************** generowanie napiecia ***************************/
					if(ladowarka.ChargeStarted==1 && ladowarka.UstawioneNapiecieNaopAmpie==0 ) { //jesli kliknieto przycik na GUI START   i nie ustawiono jeszce napiecia na op ampie
 80012cc:	68e6      	ldr	r6, [r4, #12]
 80012ce:	2e01      	cmp	r6, #1
 80012d0:	d108      	bne.n	80012e4 <ZadanieDwa+0x10c>
 80012d2:	6922      	ldr	r2, [r4, #16]
 80012d4:	b932      	cbnz	r2, 80012e4 <ZadanieDwa+0x10c>
							HAL_DAC_SetValue(&hdac, DAC_CHANNEL_2, DAC_ALIGN_12B_R, 1365);  //ustaw poprawne napiece tutaj (3V)
 80012d6:	480b      	ldr	r0, [pc, #44]	; (8001304 <ZadanieDwa+0x12c>)
 80012d8:	f240 5355 	movw	r3, #1365	; 0x555
 80012dc:	2110      	movs	r1, #16
 80012de:	f004 fbb0 	bl	8005a42 <HAL_DAC_SetValue>
							ladowarka.UstawioneNapiecieNaopAmpie=1;
 80012e2:	6126      	str	r6, [r4, #16]
					}



    osDelay(1); //to chyba ma zostac?
 80012e4:	2001      	movs	r0, #1
 80012e6:	f006 fd79 	bl	8007ddc <osDelay>
  {
 80012ea:	e779      	b.n	80011e0 <ZadanieDwa+0x8>
 80012ec:	200039d0 	.word	0x200039d0
 80012f0:	20003764 	.word	0x20003764
 80012f4:	20004448 	.word	0x20004448
 80012f8:	20004450 	.word	0x20004450
 80012fc:	40533333 	.word	0x40533333
 8001300:	39800000 	.word	0x39800000
 8001304:	200037b4 	.word	0x200037b4
 8001308:	2000444c 	.word	0x2000444c

0800130c <SystemClock_Config>:
{
 800130c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800130e:	b0a1      	sub	sp, #132	; 0x84
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001310:	2210      	movs	r2, #16
 8001312:	2100      	movs	r1, #0
 8001314:	a80a      	add	r0, sp, #40	; 0x28
 8001316:	f01e fe89 	bl	802002c <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800131a:	2214      	movs	r2, #20
 800131c:	2100      	movs	r1, #0
 800131e:	a803      	add	r0, sp, #12
 8001320:	f01e fe84 	bl	802002c <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001324:	2100      	movs	r1, #0
 8001326:	2230      	movs	r2, #48	; 0x30
 8001328:	a814      	add	r0, sp, #80	; 0x50
 800132a:	f01e fe7f 	bl	802002c <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 800132e:	2400      	movs	r4, #0
 8001330:	4b22      	ldr	r3, [pc, #136]	; (80013bc <SystemClock_Config+0xb0>)
 8001332:	9401      	str	r4, [sp, #4]
 8001334:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001336:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800133a:	641a      	str	r2, [r3, #64]	; 0x40
 800133c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800133e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001342:	9301      	str	r3, [sp, #4]
 8001344:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001346:	4b1e      	ldr	r3, [pc, #120]	; (80013c0 <SystemClock_Config+0xb4>)
 8001348:	9402      	str	r4, [sp, #8]
 800134a:	681a      	ldr	r2, [r3, #0]
 800134c:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 8001350:	601a      	str	r2, [r3, #0]
 8001352:	681b      	ldr	r3, [r3, #0]
 8001354:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8001358:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 800135a:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 800135c:	9b02      	ldr	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 800135e:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8001362:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001366:	2502      	movs	r5, #2
 8001368:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 800136c:	e9cd 530e 	strd	r5, r3, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLN = 336;
 8001370:	2708      	movs	r7, #8
 8001372:	f44f 73a8 	mov.w	r3, #336	; 0x150
  RCC_OscInitStruct.PLL.PLLQ = 4;
 8001376:	2604      	movs	r6, #4
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001378:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLN = 336;
 800137a:	e9cd 7310 	strd	r7, r3, [sp, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 800137e:	9512      	str	r5, [sp, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLQ = 4;
 8001380:	9613      	str	r6, [sp, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001382:	f005 fb51 	bl	8006a28 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001386:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001388:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 800138c:	f44f 51a0 	mov.w	r1, #5120	; 0x1400
 8001390:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001394:	e9cd 1306 	strd	r1, r3, [sp, #24]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001398:	a803      	add	r0, sp, #12
 800139a:	2105      	movs	r1, #5
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 800139c:	9405      	str	r4, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 800139e:	f005 fd1b 	bl	8006dd8 <HAL_RCC_ClockConfig>
  PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 80013a2:	23c0      	movs	r3, #192	; 0xc0
 80013a4:	9318      	str	r3, [sp, #96]	; 0x60
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80013a6:	a814      	add	r0, sp, #80	; 0x50
  PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 80013a8:	f44f 3300 	mov.w	r3, #131072	; 0x20000
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 80013ac:	9714      	str	r7, [sp, #80]	; 0x50
  PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 80013ae:	961a      	str	r6, [sp, #104]	; 0x68
  PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 80013b0:	931d      	str	r3, [sp, #116]	; 0x74
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80013b2:	f005 fdeb 	bl	8006f8c <HAL_RCCEx_PeriphCLKConfig>
}
 80013b6:	b021      	add	sp, #132	; 0x84
 80013b8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80013ba:	bf00      	nop
 80013bc:	40023800 	.word	0x40023800
 80013c0:	40007000 	.word	0x40007000

080013c4 <main>:
{
 80013c4:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 80013c8:	b09b      	sub	sp, #108	; 0x6c
  HAL_Init();
 80013ca:	f004 f82f 	bl	800542c <HAL_Init>
  SystemClock_Config();
 80013ce:	f7ff ff9d 	bl	800130c <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80013d2:	2214      	movs	r2, #20
 80013d4:	2100      	movs	r1, #0
 80013d6:	a80d      	add	r0, sp, #52	; 0x34
  __HAL_RCC_GPIOF_CLK_ENABLE();
 80013d8:	2400      	movs	r4, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80013da:	f01e fe27 	bl	802002c <memset>
  __HAL_RCC_GPIOF_CLK_ENABLE();
 80013de:	4bc4      	ldr	r3, [pc, #784]	; (80016f0 <main+0x32c>)
 80013e0:	9400      	str	r4, [sp, #0]
 80013e2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80013e4:	48c3      	ldr	r0, [pc, #780]	; (80016f4 <main+0x330>)
  hi2c3.Instance = I2C3;
 80013e6:	4dc4      	ldr	r5, [pc, #784]	; (80016f8 <main+0x334>)
  __HAL_RCC_GPIOF_CLK_ENABLE();
 80013e8:	f042 0220 	orr.w	r2, r2, #32
 80013ec:	631a      	str	r2, [r3, #48]	; 0x30
 80013ee:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80013f0:	f002 0220 	and.w	r2, r2, #32
 80013f4:	9200      	str	r2, [sp, #0]
 80013f6:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 80013f8:	9401      	str	r4, [sp, #4]
 80013fa:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80013fc:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8001400:	631a      	str	r2, [r3, #48]	; 0x30
 8001402:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001404:	f002 0280 	and.w	r2, r2, #128	; 0x80
 8001408:	9201      	str	r2, [sp, #4]
 800140a:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 800140c:	9402      	str	r4, [sp, #8]
 800140e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001410:	f042 0204 	orr.w	r2, r2, #4
 8001414:	631a      	str	r2, [r3, #48]	; 0x30
 8001416:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001418:	f002 0204 	and.w	r2, r2, #4
 800141c:	9202      	str	r2, [sp, #8]
 800141e:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001420:	9403      	str	r4, [sp, #12]
 8001422:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001424:	f042 0201 	orr.w	r2, r2, #1
 8001428:	631a      	str	r2, [r3, #48]	; 0x30
 800142a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800142c:	f002 0201 	and.w	r2, r2, #1
 8001430:	9203      	str	r2, [sp, #12]
 8001432:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001434:	9404      	str	r4, [sp, #16]
 8001436:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001438:	f042 0202 	orr.w	r2, r2, #2
 800143c:	631a      	str	r2, [r3, #48]	; 0x30
 800143e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001440:	f002 0202 	and.w	r2, r2, #2
 8001444:	9204      	str	r2, [sp, #16]
 8001446:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8001448:	9405      	str	r4, [sp, #20]
 800144a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800144c:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8001450:	631a      	str	r2, [r3, #48]	; 0x30
 8001452:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001454:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8001458:	9205      	str	r2, [sp, #20]
 800145a:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOE_CLK_ENABLE();
 800145c:	9406      	str	r4, [sp, #24]
 800145e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001460:	f042 0210 	orr.w	r2, r2, #16
 8001464:	631a      	str	r2, [r3, #48]	; 0x30
 8001466:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001468:	f002 0210 	and.w	r2, r2, #16
 800146c:	9206      	str	r2, [sp, #24]
 800146e:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001470:	9407      	str	r4, [sp, #28]
 8001472:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001474:	f042 0208 	orr.w	r2, r2, #8
 8001478:	631a      	str	r2, [r3, #48]	; 0x30
 800147a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800147c:	f003 0308 	and.w	r3, r3, #8
 8001480:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001482:	4622      	mov	r2, r4
 8001484:	2104      	movs	r1, #4
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001486:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001488:	f004 fcd2 	bl	8005e30 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_12, GPIO_PIN_RESET);
 800148c:	489b      	ldr	r0, [pc, #620]	; (80016fc <main+0x338>)
 800148e:	4622      	mov	r2, r4
 8001490:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001494:	f004 fccc 	bl	8005e30 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 8001498:	4622      	mov	r2, r4
 800149a:	4899      	ldr	r0, [pc, #612]	; (8001700 <main+0x33c>)
 800149c:	f44f 5140 	mov.w	r1, #12288	; 0x3000
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80014a0:	2601      	movs	r6, #1
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 80014a2:	f004 fcc5 	bl	8005e30 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80014a6:	2702      	movs	r7, #2
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80014a8:	f04f 0b04 	mov.w	fp, #4
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80014ac:	4891      	ldr	r0, [pc, #580]	; (80016f4 <main+0x330>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80014ae:	940f      	str	r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80014b0:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80014b2:	e9cd b60d 	strd	fp, r6, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80014b6:	9710      	str	r7, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80014b8:	f004 fbd2 	bl	8005c60 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12;
 80014bc:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80014c0:	488e      	ldr	r0, [pc, #568]	; (80016fc <main+0x338>)
 80014c2:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80014c4:	e9cd 260d 	strd	r2, r6, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80014c8:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80014cc:	f004 fbc8 	bl	8005c60 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80014d0:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 80014d2:	f44f 5240 	mov.w	r2, #12288	; 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80014d6:	488a      	ldr	r0, [pc, #552]	; (8001700 <main+0x33c>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80014d8:	e9cd 260d 	strd	r2, r6, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80014dc:	e9cd 470f 	strd	r4, r7, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80014e0:	f004 fbbe 	bl	8005c60 <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 80014e4:	4887      	ldr	r0, [pc, #540]	; (8001704 <main+0x340>)
 80014e6:	4a88      	ldr	r2, [pc, #544]	; (8001708 <main+0x344>)
 80014e8:	6002      	str	r2, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 80014ea:	f004 fa39 	bl	8005960 <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 80014ee:	4b87      	ldr	r3, [pc, #540]	; (800170c <main+0x348>)
 80014f0:	4a87      	ldr	r2, [pc, #540]	; (8001710 <main+0x34c>)
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 80014f2:	622c      	str	r4, [r5, #32]
  hi2c3.Init.ClockSpeed = 100000;
 80014f4:	e9c5 3200 	strd	r3, r2, [r5]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 80014f8:	4628      	mov	r0, r5
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 80014fa:	f44f 4280 	mov.w	r2, #16384	; 0x4000
  hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 80014fe:	e9c5 2404 	strd	r2, r4, [r5, #16]
  hi2c3.Init.OwnAddress1 = 0;
 8001502:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8001506:	e9c5 4406 	strd	r4, r4, [r5, #24]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 800150a:	f004 fe73 	bl	80061f4 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 800150e:	2110      	movs	r1, #16
 8001510:	4628      	mov	r0, r5
 8001512:	f005 f8af 	bl	8006674 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8001516:	4621      	mov	r1, r4
 8001518:	4628      	mov	r0, r5
 800151a:	f005 f8ca 	bl	80066b2 <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Instance = SPI5;
 800151e:	487d      	ldr	r0, [pc, #500]	; (8001714 <main+0x350>)
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001520:	497d      	ldr	r1, [pc, #500]	; (8001718 <main+0x354>)
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8001522:	6284      	str	r4, [r0, #40]	; 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001524:	f44f 7282 	mov.w	r2, #260	; 0x104
 8001528:	e9c0 1200 	strd	r1, r2, [r0]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 800152c:	f44f 7500 	mov.w	r5, #512	; 0x200
 8001530:	2218      	movs	r2, #24
 8001532:	e9c0 5206 	strd	r5, r2, [r0, #24]
  hspi5.Init.CRCPolynomial = 10;
 8001536:	220a      	movs	r2, #10
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001538:	4d78      	ldr	r5, [pc, #480]	; (800171c <main+0x358>)
  hspi5.Init.CRCPolynomial = 10;
 800153a:	62c2      	str	r2, [r0, #44]	; 0x2c
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 800153c:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 8001540:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 8001544:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8001548:	f005 ff24 	bl	8007394 <HAL_SPI_Init>
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 800154c:	4a74      	ldr	r2, [pc, #464]	; (8001720 <main+0x35c>)
  SdramTiming.LoadToActiveDelay = 2;
 800154e:	970d      	str	r7, [sp, #52]	; 0x34
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8001550:	f04f 0810 	mov.w	r8, #16
  hsdram1.Init.SDBank = FMC_SDRAM_BANK2;
 8001554:	e9c5 2600 	strd	r2, r6, [r5]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8001558:	2240      	movs	r2, #64	; 0x40
 800155a:	e9c5 8204 	strd	r8, r2, [r5, #16]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 800155e:	f44f 72c0 	mov.w	r2, #384	; 0x180
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8001562:	e9c5 2406 	strd	r2, r4, [r5, #24]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 8001566:	f44f 6200 	mov.w	r2, #2048	; 0x800
  SdramTiming.WriteRecoveryTime = 3;
 800156a:	2303      	movs	r3, #3
  SdramTiming.ExitSelfRefreshDelay = 7;
 800156c:	f04f 0907 	mov.w	r9, #7
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 8001570:	e9c5 2408 	strd	r2, r4, [r5, #32]
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001574:	a90d      	add	r1, sp, #52	; 0x34
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8001576:	f44f 5200 	mov.w	r2, #8192	; 0x2000
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 800157a:	4628      	mov	r0, r5
  SdramTiming.RPDelay = 2;
 800157c:	e9cd 3711 	strd	r3, r7, [sp, #68]	; 0x44
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001580:	f04f 0a08 	mov.w	sl, #8
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 8001584:	e9c5 4b02 	strd	r4, fp, [r5, #8]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8001588:	62aa      	str	r2, [r5, #40]	; 0x28
  SdramTiming.SelfRefreshTime = 4;
 800158a:	e9cd 9b0e 	strd	r9, fp, [sp, #56]	; 0x38
  SdramTiming.RowCycleDelay = 7;
 800158e:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
  SdramTiming.RCDDelay = 2;
 8001592:	9713      	str	r7, [sp, #76]	; 0x4c
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001594:	f005 fe24 	bl	80071e0 <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001598:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800159c:	a909      	add	r1, sp, #36	; 0x24
 800159e:	4628      	mov	r0, r5
  Command->AutoRefreshNumber       = 1;
 80015a0:	e9cd a60a 	strd	sl, r6, [sp, #40]	; 0x28
  Command->CommandMode             = FMC_SDRAM_CMD_CLK_ENABLE;
 80015a4:	9609      	str	r6, [sp, #36]	; 0x24
 __IO uint32_t tmpmrd =0;
 80015a6:	9408      	str	r4, [sp, #32]
  Command->ModeRegisterDefinition  = 0;
 80015a8:	940c      	str	r4, [sp, #48]	; 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80015aa:	f005 fe39 	bl	8007220 <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 80015ae:	4630      	mov	r0, r6
 80015b0:	f003 ff68 	bl	8005484 <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);  
 80015b4:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80015b8:	a909      	add	r1, sp, #36	; 0x24
 80015ba:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80015bc:	e9cd 7a09 	strd	r7, sl, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 80015c0:	e9cd 640b 	strd	r6, r4, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);  
 80015c4:	f005 fe2c 	bl	8007220 <HAL_SDRAM_SendCommand>
  Command->CommandMode             = FMC_SDRAM_CMD_AUTOREFRESH_MODE;
 80015c8:	2303      	movs	r3, #3
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80015ca:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80015ce:	a909      	add	r1, sp, #36	; 0x24
 80015d0:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80015d2:	e9cd 3a09 	strd	r3, sl, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 80015d6:	e9cd b40b 	strd	fp, r4, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80015da:	f005 fe21 	bl	8007220 <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 80015de:	f44f 720c 	mov.w	r2, #560	; 0x230
 80015e2:	9208      	str	r2, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 80015e4:	9b08      	ldr	r3, [sp, #32]
 80015e6:	930c      	str	r3, [sp, #48]	; 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80015e8:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80015ec:	a909      	add	r1, sp, #36	; 0x24
 80015ee:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80015f0:	e9cd ba09 	strd	fp, sl, [sp, #36]	; 0x24
  Command->AutoRefreshNumber       = 1;
 80015f4:	960b      	str	r6, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80015f6:	f005 fe13 	bl	8007220 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT); 
 80015fa:	f240 516a 	movw	r1, #1386	; 0x56a
 80015fe:	4628      	mov	r0, r5
 8001600:	f005 fe25 	bl	800724e <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8001604:	2234      	movs	r2, #52	; 0x34
 8001606:	4621      	mov	r1, r4
 8001608:	eb0d 0002 	add.w	r0, sp, r2
 800160c:	f01e fd0e 	bl	802002c <memset>
  hltdc.Instance = LTDC;
 8001610:	4d44      	ldr	r5, [pc, #272]	; (8001724 <main+0x360>)
 8001612:	4b45      	ldr	r3, [pc, #276]	; (8001728 <main+0x364>)
  hltdc.Init.Backcolor.Blue = 0;
 8001614:	86ac      	strh	r4, [r5, #52]	; 0x34
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 8001616:	e9c5 3400 	strd	r3, r4, [r5]
  hltdc.Init.HorizontalSync = 9;
 800161a:	2309      	movs	r3, #9
  hltdc.Init.AccumulatedVBP = 3;
 800161c:	f04f 0c1d 	mov.w	ip, #29
  hltdc.Init.VerticalSync = 1;
 8001620:	e9c5 3605 	strd	r3, r6, [r5, #20]
  hltdc.Init.AccumulatedVBP = 3;
 8001624:	2303      	movs	r3, #3
 8001626:	e9c5 c307 	strd	ip, r3, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 800162a:	f240 1e0d 	movw	lr, #269	; 0x10d
 800162e:	f240 1343 	movw	r3, #323	; 0x143
 8001632:	e9c5 e309 	strd	lr, r3, [r5, #36]	; 0x24
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001636:	4628      	mov	r0, r5
  hltdc.Init.TotalHeigh = 327;
 8001638:	f240 1347 	movw	r3, #327	; 0x147
 800163c:	f240 1a17 	movw	sl, #279	; 0x117
 8001640:	e9c5 a30b 	strd	sl, r3, [r5, #44]	; 0x2c
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 8001644:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 8001648:	612c      	str	r4, [r5, #16]
  hltdc.Init.Backcolor.Red = 0;
 800164a:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 800164e:	f005 f8d5 	bl	80067fc <HAL_LTDC_Init>
  pLayerCfg.Alpha = 255;
 8001652:	21ff      	movs	r1, #255	; 0xff
  pLayerCfg.WindowX1 = 240;
 8001654:	22f0      	movs	r2, #240	; 0xf0
  pLayerCfg.Alpha0 = 0;
 8001656:	e9cd 1412 	strd	r1, r4, [sp, #72]	; 0x48
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 800165a:	f44f 6b80 	mov.w	fp, #1024	; 0x400
 800165e:	2105      	movs	r1, #5
  pLayerCfg.WindowY1 = 320;
 8001660:	f44f 73a0 	mov.w	r3, #320	; 0x140
  pLayerCfg.WindowY0 = 0;
 8001664:	e9cd 240e 	strd	r2, r4, [sp, #56]	; 0x38
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8001668:	e9cd b114 	strd	fp, r1, [sp, #80]	; 0x50
  pLayerCfg.ImageWidth = 240;
 800166c:	e9cd 4216 	strd	r4, r2, [sp, #88]	; 0x58
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001670:	a90d      	add	r1, sp, #52	; 0x34
 8001672:	4622      	mov	r2, r4
 8001674:	4628      	mov	r0, r5
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8001676:	e9cd 3710 	strd	r3, r7, [sp, #64]	; 0x40
  LcdDrv = &ili9341_drv;
 800167a:	4d2c      	ldr	r5, [pc, #176]	; (800172c <main+0x368>)
  pLayerCfg.ImageHeight = 320;
 800167c:	9318      	str	r3, [sp, #96]	; 0x60
  pLayerCfg.WindowX0 = 0;
 800167e:	940d      	str	r4, [sp, #52]	; 0x34
  pLayerCfg.Backcolor.Blue = 0;
 8001680:	f8ad 4064 	strh.w	r4, [sp, #100]	; 0x64
  pLayerCfg.Backcolor.Red = 0;
 8001684:	f88d 4066 	strb.w	r4, [sp, #102]	; 0x66
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001688:	f005 f983 	bl	8006992 <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 800168c:	4b28      	ldr	r3, [pc, #160]	; (8001730 <main+0x36c>)
 800168e:	602b      	str	r3, [r5, #0]
  LcdDrv->Init();
 8001690:	681b      	ldr	r3, [r3, #0]
 8001692:	4798      	blx	r3
  LcdDrv->DisplayOff();
 8001694:	682b      	ldr	r3, [r5, #0]
  hdma2d.Instance = DMA2D;
 8001696:	4d27      	ldr	r5, [pc, #156]	; (8001734 <main+0x370>)
  LcdDrv->DisplayOff();
 8001698:	68db      	ldr	r3, [r3, #12]
 800169a:	4798      	blx	r3
  hdma2d.Instance = DMA2D;
 800169c:	4b26      	ldr	r3, [pc, #152]	; (8001738 <main+0x374>)
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
 800169e:	e9c5 470a 	strd	r4, r7, [r5, #40]	; 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 80016a2:	e9c5 440c 	strd	r4, r4, [r5, #48]	; 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 80016a6:	4628      	mov	r0, r5
  hdma2d.Init.Mode = DMA2D_M2M;
 80016a8:	e9c5 3400 	strd	r3, r4, [r5]
  hdma2d.Init.OutputOffset = 0;
 80016ac:	e9c5 7402 	strd	r7, r4, [r5, #8]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 80016b0:	f004 f9d9 	bl	8005a66 <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 80016b4:	4631      	mov	r1, r6
 80016b6:	4628      	mov	r0, r5
 80016b8:	f004 fa8e 	bl	8005bd8 <HAL_DMA2D_ConfigLayer>
  ADC_ChannelConfTypeDef sConfig = {0};
 80016bc:	4621      	mov	r1, r4
 80016be:	4642      	mov	r2, r8
 80016c0:	a80d      	add	r0, sp, #52	; 0x34
 80016c2:	f01e fcb3 	bl	802002c <memset>
  hadc1.Instance = ADC1;
 80016c6:	4d1d      	ldr	r5, [pc, #116]	; (800173c <main+0x378>)
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 80016c8:	4a1d      	ldr	r2, [pc, #116]	; (8001740 <main+0x37c>)
  hadc1.Init.NbrOfConversion = 1;
 80016ca:	61ee      	str	r6, [r5, #28]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 80016cc:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80016d0:	e9c5 2300 	strd	r2, r3, [r5]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 80016d4:	4628      	mov	r0, r5
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 80016d6:	4b1b      	ldr	r3, [pc, #108]	; (8001744 <main+0x380>)
 80016d8:	62ab      	str	r3, [r5, #40]	; 0x28
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 80016da:	616e      	str	r6, [r5, #20]
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 80016dc:	60ac      	str	r4, [r5, #8]
  hadc1.Init.ScanConvMode = DISABLE;
 80016de:	612c      	str	r4, [r5, #16]
  hadc1.Init.ContinuousConvMode = DISABLE;
 80016e0:	762c      	strb	r4, [r5, #24]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 80016e2:	f885 4020 	strb.w	r4, [r5, #32]
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 80016e6:	62ec      	str	r4, [r5, #44]	; 0x2c
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 80016e8:	60ec      	str	r4, [r5, #12]
  hadc1.Init.DMAContinuousRequests = DISABLE;
 80016ea:	f885 4030 	strb.w	r4, [r5, #48]	; 0x30
 80016ee:	e02b      	b.n	8001748 <main+0x384>
 80016f0:	40023800 	.word	0x40023800
 80016f4:	40020800 	.word	0x40020800
 80016f8:	20003808 	.word	0x20003808
 80016fc:	40020400 	.word	0x40020400
 8001700:	40020c00 	.word	0x40020c00
 8001704:	200037ac 	.word	0x200037ac
 8001708:	40023000 	.word	0x40023000
 800170c:	40005c00 	.word	0x40005c00
 8001710:	000186a0 	.word	0x000186a0
 8001714:	20003938 	.word	0x20003938
 8001718:	40015000 	.word	0x40015000
 800171c:	20003904 	.word	0x20003904
 8001720:	a0000140 	.word	0xa0000140
 8001724:	2000385c 	.word	0x2000385c
 8001728:	40016800 	.word	0x40016800
 800172c:	2000375c 	.word	0x2000375c
 8001730:	20000018 	.word	0x20000018
 8001734:	200037c8 	.word	0x200037c8
 8001738:	4002b000 	.word	0x4002b000
 800173c:	20003764 	.word	0x20003764
 8001740:	40012000 	.word	0x40012000
 8001744:	0f000001 	.word	0x0f000001
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 8001748:	f003 feb0 	bl	80054ac <HAL_ADC_Init>
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 800174c:	a90d      	add	r1, sp, #52	; 0x34
 800174e:	4628      	mov	r0, r5
  sConfig.Rank = 1;
 8001750:	e9cd 960d 	strd	r9, r6, [sp, #52]	; 0x34
  htim7.Instance = TIM7;
 8001754:	4d25      	ldr	r5, [pc, #148]	; (80017ec <main+0x428>)
  sConfig.SamplingTime = ADC_SAMPLETIME_480CYCLES;
 8001756:	f8cd 903c 	str.w	r9, [sp, #60]	; 0x3c
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 800175a:	f004 f813 	bl	8005784 <HAL_ADC_ConfigChannel>
  htim7.Init.Prescaler = 8400-1;
 800175e:	4924      	ldr	r1, [pc, #144]	; (80017f0 <main+0x42c>)
  hdac.Instance = DAC;
 8001760:	4e24      	ldr	r6, [pc, #144]	; (80017f4 <main+0x430>)
  htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001762:	60ac      	str	r4, [r5, #8]
  htim7.Init.Prescaler = 8400-1;
 8001764:	f242 03cf 	movw	r3, #8399	; 0x20cf
 8001768:	e9c5 1300 	strd	r1, r3, [r5]
  if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 800176c:	4628      	mov	r0, r5
  htim7.Init.Period = 1000-1;
 800176e:	f240 33e7 	movw	r3, #999	; 0x3e7
 8001772:	60eb      	str	r3, [r5, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001774:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001778:	61ac      	str	r4, [r5, #24]
  if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 800177a:	f006 f9a5 	bl	8007ac8 <HAL_TIM_Base_Init>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 800177e:	a90d      	add	r1, sp, #52	; 0x34
 8001780:	4628      	mov	r0, r5
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001782:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 8001786:	f006 f9b9 	bl	8007afc <HAL_TIMEx_MasterConfigSynchronization>
  hdac.Instance = DAC;
 800178a:	4b1b      	ldr	r3, [pc, #108]	; (80017f8 <main+0x434>)
 800178c:	6033      	str	r3, [r6, #0]
  if (HAL_DAC_Init(&hdac) != HAL_OK)
 800178e:	4630      	mov	r0, r6
  DAC_ChannelConfTypeDef sConfig = {0};
 8001790:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  if (HAL_DAC_Init(&hdac) != HAL_OK)
 8001794:	f004 f8f4 	bl	8005980 <HAL_DAC_Init>
  if (HAL_DAC_ConfigChannel(&hdac, &sConfig, DAC_CHANNEL_2) != HAL_OK)
 8001798:	4642      	mov	r2, r8
 800179a:	a90d      	add	r1, sp, #52	; 0x34
 800179c:	4630      	mov	r0, r6
  sConfig.DAC_OutputBuffer = DAC_OUTPUTBUFFER_ENABLE;
 800179e:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  if (HAL_DAC_ConfigChannel(&hdac, &sConfig, DAC_CHANNEL_2) != HAL_OK)
 80017a2:	f004 f92d 	bl	8005a00 <HAL_DAC_ConfigChannel>
  MX_TouchGFX_Init();
 80017a6:	f7fe ff1e 	bl	80005e6 <MX_TouchGFX_Init>
HAL_TIM_Base_Start_IT(&htim7); //uruchomienie timera 7 (przerwanie co 1 sek)
 80017aa:	4628      	mov	r0, r5
 80017ac:	f006 f86f 	bl	800788e <HAL_TIM_Base_Start_IT>
HAL_DAC_Start(&hdac, DAC_CHANNEL_2);
 80017b0:	4641      	mov	r1, r8
 80017b2:	4630      	mov	r0, r6
 80017b4:	f004 f8f7 	bl	80059a6 <HAL_DAC_Start>
HAL_DAC_SetValue(&hdac, DAC_CHANNEL_2, DAC_ALIGN_12B_R, 1365); //ustaw max napiecie na ADC, zeby nie plynal zaden prad !ZMIENIC
 80017b8:	f240 5355 	movw	r3, #1365	; 0x555
 80017bc:	4622      	mov	r2, r4
 80017be:	4641      	mov	r1, r8
 80017c0:	4630      	mov	r0, r6
 80017c2:	f004 f93e 	bl	8005a42 <HAL_DAC_SetValue>
  osKernelInitialize();
 80017c6:	f006 fa79 	bl	8007cbc <osKernelInitialize>
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 80017ca:	4a0c      	ldr	r2, [pc, #48]	; (80017fc <main+0x438>)
 80017cc:	480c      	ldr	r0, [pc, #48]	; (8001800 <main+0x43c>)
 80017ce:	4621      	mov	r1, r4
 80017d0:	f006 faae 	bl	8007d30 <osThreadNew>
 80017d4:	4b0b      	ldr	r3, [pc, #44]	; (8001804 <main+0x440>)
  TaskDwaHandle = osThreadNew(ZadanieDwa, NULL, &TaskDwa_attributes);
 80017d6:	4a0c      	ldr	r2, [pc, #48]	; (8001808 <main+0x444>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 80017d8:	6018      	str	r0, [r3, #0]
  TaskDwaHandle = osThreadNew(ZadanieDwa, NULL, &TaskDwa_attributes);
 80017da:	4621      	mov	r1, r4
 80017dc:	480b      	ldr	r0, [pc, #44]	; (800180c <main+0x448>)
 80017de:	f006 faa7 	bl	8007d30 <osThreadNew>
 80017e2:	4b0b      	ldr	r3, [pc, #44]	; (8001810 <main+0x44c>)
 80017e4:	6018      	str	r0, [r3, #0]
  osKernelStart();
 80017e6:	f006 fa83 	bl	8007cf0 <osKernelStart>
  while (1)
 80017ea:	e7fe      	b.n	80017ea <main+0x426>
 80017ec:	20003990 	.word	0x20003990
 80017f0:	40001400 	.word	0x40001400
 80017f4:	200037b4 	.word	0x200037b4
 80017f8:	40007400 	.word	0x40007400
 80017fc:	08021584 	.word	0x08021584
 8001800:	080005eb 	.word	0x080005eb
 8001804:	20003758 	.word	0x20003758
 8001808:	080215a8 	.word	0x080215a8
 800180c:	080011d9 	.word	0x080011d9
 8001810:	20003760 	.word	0x20003760

08001814 <IOE_Init>:
 8001814:	4770      	bx	lr

08001816 <IOE_ITConfig>:
 8001816:	4770      	bx	lr

08001818 <IOE_Write>:
{
 8001818:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout); 
 800181a:	4b09      	ldr	r3, [pc, #36]	; (8001840 <IOE_Write+0x28>)
 800181c:	f88d 2017 	strb.w	r2, [sp, #23]
 8001820:	681b      	ldr	r3, [r3, #0]
 8001822:	9302      	str	r3, [sp, #8]
 8001824:	f10d 0217 	add.w	r2, sp, #23
 8001828:	2301      	movs	r3, #1
 800182a:	9200      	str	r2, [sp, #0]
 800182c:	9301      	str	r3, [sp, #4]
 800182e:	460a      	mov	r2, r1
 8001830:	4601      	mov	r1, r0
 8001832:	4804      	ldr	r0, [pc, #16]	; (8001844 <IOE_Write+0x2c>)
 8001834:	f004 fd86 	bl	8006344 <HAL_I2C_Mem_Write>
}
 8001838:	b007      	add	sp, #28
 800183a:	f85d fb04 	ldr.w	pc, [sp], #4
 800183e:	bf00      	nop
 8001840:	2000000c 	.word	0x2000000c
 8001844:	20003808 	.word	0x20003808

08001848 <IOE_Read>:
{
 8001848:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  uint8_t value = 0;
 800184a:	2300      	movs	r3, #0
 800184c:	f88d 3017 	strb.w	r3, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001850:	4b08      	ldr	r3, [pc, #32]	; (8001874 <IOE_Read+0x2c>)
 8001852:	681b      	ldr	r3, [r3, #0]
 8001854:	9302      	str	r3, [sp, #8]
{
 8001856:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001858:	2301      	movs	r3, #1
 800185a:	f10d 0117 	add.w	r1, sp, #23
 800185e:	9100      	str	r1, [sp, #0]
 8001860:	9301      	str	r3, [sp, #4]
 8001862:	4601      	mov	r1, r0
 8001864:	4804      	ldr	r0, [pc, #16]	; (8001878 <IOE_Read+0x30>)
 8001866:	f004 fdfd 	bl	8006464 <HAL_I2C_Mem_Read>
}
 800186a:	f89d 0017 	ldrb.w	r0, [sp, #23]
 800186e:	b007      	add	sp, #28
 8001870:	f85d fb04 	ldr.w	pc, [sp], #4
 8001874:	2000000c 	.word	0x2000000c
 8001878:	20003808 	.word	0x20003808

0800187c <IOE_ReadMultiple>:
{
 800187c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 800187e:	4c08      	ldr	r4, [pc, #32]	; (80018a0 <IOE_ReadMultiple+0x24>)
 8001880:	6824      	ldr	r4, [r4, #0]
 8001882:	9200      	str	r2, [sp, #0]
 8001884:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8001888:	460a      	mov	r2, r1
 800188a:	2301      	movs	r3, #1
 800188c:	4601      	mov	r1, r0
 800188e:	4805      	ldr	r0, [pc, #20]	; (80018a4 <IOE_ReadMultiple+0x28>)
 8001890:	f004 fde8 	bl	8006464 <HAL_I2C_Mem_Read>
}
 8001894:	3800      	subs	r0, #0
 8001896:	bf18      	it	ne
 8001898:	2001      	movne	r0, #1
 800189a:	b004      	add	sp, #16
 800189c:	bd10      	pop	{r4, pc}
 800189e:	bf00      	nop
 80018a0:	2000000c 	.word	0x2000000c
 80018a4:	20003808 	.word	0x20003808

080018a8 <IOE_Delay>:
 80018a8:	f003 bdec 	b.w	8005484 <HAL_Delay>

080018ac <LCD_IO_Init>:
{
 80018ac:	b508      	push	{r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80018ae:	4806      	ldr	r0, [pc, #24]	; (80018c8 <LCD_IO_Init+0x1c>)
 80018b0:	2200      	movs	r2, #0
 80018b2:	2104      	movs	r1, #4
 80018b4:	f004 fabc 	bl	8005e30 <HAL_GPIO_WritePin>
}
 80018b8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80018bc:	4802      	ldr	r0, [pc, #8]	; (80018c8 <LCD_IO_Init+0x1c>)
 80018be:	2201      	movs	r2, #1
 80018c0:	2104      	movs	r1, #4
 80018c2:	f004 bab5 	b.w	8005e30 <HAL_GPIO_WritePin>
 80018c6:	bf00      	nop
 80018c8:	40020800 	.word	0x40020800

080018cc <LCD_IO_WriteData>:
{
 80018cc:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80018ce:	4d0b      	ldr	r5, [pc, #44]	; (80018fc <LCD_IO_WriteData+0x30>)
{
 80018d0:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 80018d2:	2201      	movs	r2, #1
 80018d4:	480a      	ldr	r0, [pc, #40]	; (8001900 <LCD_IO_WriteData+0x34>)
 80018d6:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80018da:	f004 faa9 	bl	8005e30 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80018de:	2200      	movs	r2, #0
 80018e0:	2104      	movs	r1, #4
 80018e2:	4628      	mov	r0, r5
 80018e4:	f004 faa4 	bl	8005e30 <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 80018e8:	4620      	mov	r0, r4
 80018ea:	f7ff fc45 	bl	8001178 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80018ee:	4628      	mov	r0, r5
 80018f0:	2201      	movs	r2, #1
}
 80018f2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80018f6:	2104      	movs	r1, #4
 80018f8:	f004 ba9a 	b.w	8005e30 <HAL_GPIO_WritePin>
 80018fc:	40020800 	.word	0x40020800
 8001900:	40020c00 	.word	0x40020c00

08001904 <LCD_IO_WriteReg>:
{
 8001904:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001906:	4d0b      	ldr	r5, [pc, #44]	; (8001934 <LCD_IO_WriteReg+0x30>)
{
 8001908:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 800190a:	2200      	movs	r2, #0
 800190c:	480a      	ldr	r0, [pc, #40]	; (8001938 <LCD_IO_WriteReg+0x34>)
 800190e:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001912:	f004 fa8d 	bl	8005e30 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001916:	2200      	movs	r2, #0
 8001918:	2104      	movs	r1, #4
 800191a:	4628      	mov	r0, r5
 800191c:	f004 fa88 	bl	8005e30 <HAL_GPIO_WritePin>
  SPI5_Write(Reg);
 8001920:	4620      	mov	r0, r4
 8001922:	f7ff fc29 	bl	8001178 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001926:	4628      	mov	r0, r5
 8001928:	2201      	movs	r2, #1
}
 800192a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800192e:	2104      	movs	r1, #4
 8001930:	f004 ba7e 	b.w	8005e30 <HAL_GPIO_WritePin>
 8001934:	40020800 	.word	0x40020800
 8001938:	40020c00 	.word	0x40020c00

0800193c <LCD_IO_ReadData>:
{
 800193c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800193e:	4e14      	ldr	r6, [pc, #80]	; (8001990 <LCD_IO_ReadData+0x54>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001940:	4f14      	ldr	r7, [pc, #80]	; (8001994 <LCD_IO_ReadData+0x58>)
{
 8001942:	4605      	mov	r5, r0
 8001944:	460c      	mov	r4, r1
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001946:	4630      	mov	r0, r6
 8001948:	2200      	movs	r2, #0
 800194a:	2104      	movs	r1, #4
 800194c:	f004 fa70 	bl	8005e30 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001950:	2200      	movs	r2, #0
 8001952:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001956:	4638      	mov	r0, r7
 8001958:	f004 fa6a 	bl	8005e30 <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 800195c:	4628      	mov	r0, r5
 800195e:	f7ff fc0b 	bl	8001178 <SPI5_Write>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 8001962:	4b0d      	ldr	r3, [pc, #52]	; (8001998 <LCD_IO_ReadData+0x5c>)
 8001964:	480d      	ldr	r0, [pc, #52]	; (800199c <LCD_IO_ReadData+0x60>)
 8001966:	681b      	ldr	r3, [r3, #0]
 8001968:	4622      	mov	r2, r4
 800196a:	a901      	add	r1, sp, #4
 800196c:	f005 feed 	bl	800774a <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001970:	4638      	mov	r0, r7
 8001972:	2201      	movs	r2, #1
 8001974:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  return readvalue;
 8001978:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 800197a:	f004 fa59 	bl	8005e30 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800197e:	4630      	mov	r0, r6
 8001980:	2201      	movs	r2, #1
 8001982:	2104      	movs	r1, #4
 8001984:	f004 fa54 	bl	8005e30 <HAL_GPIO_WritePin>
}
 8001988:	4620      	mov	r0, r4
 800198a:	b003      	add	sp, #12
 800198c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800198e:	bf00      	nop
 8001990:	40020800 	.word	0x40020800
 8001994:	40020c00 	.word	0x40020c00
 8001998:	20000010 	.word	0x20000010
 800199c:	20003938 	.word	0x20003938

080019a0 <LCD_Delay>:
  HAL_Delay(Delay);
 80019a0:	f003 bd70 	b.w	8005484 <HAL_Delay>

080019a4 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM8) {
 80019a4:	6802      	ldr	r2, [r0, #0]
 80019a6:	4b08      	ldr	r3, [pc, #32]	; (80019c8 <HAL_TIM_PeriodElapsedCallback+0x24>)
 80019a8:	429a      	cmp	r2, r3
{
 80019aa:	b510      	push	{r4, lr}
 80019ac:	4604      	mov	r4, r0
  if (htim->Instance == TIM8) {
 80019ae:	d101      	bne.n	80019b4 <HAL_TIM_PeriodElapsedCallback+0x10>
    HAL_IncTick();
 80019b0:	f003 fd56 	bl	8005460 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */
  if (htim->Instance == TIM7){ //timer co 100ms
 80019b4:	6822      	ldr	r2, [r4, #0]
 80019b6:	4b05      	ldr	r3, [pc, #20]	; (80019cc <HAL_TIM_PeriodElapsedCallback+0x28>)
 80019b8:	429a      	cmp	r2, r3
	  ladowarka.Minelo100ms=1;
 80019ba:	bf02      	ittt	eq
 80019bc:	4b04      	ldreq	r3, [pc, #16]	; (80019d0 <HAL_TIM_PeriodElapsedCallback+0x2c>)
 80019be:	2201      	moveq	r2, #1
 80019c0:	f8c3 2a68 	streq.w	r2, [r3, #2664]	; 0xa68
  }

  /* USER CODE END Callback 1 */
}
 80019c4:	bd10      	pop	{r4, pc}
 80019c6:	bf00      	nop
 80019c8:	40010400 	.word	0x40010400
 80019cc:	40001400 	.word	0x40001400
 80019d0:	200039d0 	.word	0x200039d0

080019d4 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 80019d4:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80019d6:	4b0e      	ldr	r3, [pc, #56]	; (8001a10 <HAL_MspInit+0x3c>)
 80019d8:	2200      	movs	r2, #0
 80019da:	9200      	str	r2, [sp, #0]
 80019dc:	6c59      	ldr	r1, [r3, #68]	; 0x44
 80019de:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 80019e2:	6459      	str	r1, [r3, #68]	; 0x44
 80019e4:	6c59      	ldr	r1, [r3, #68]	; 0x44
 80019e6:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 80019ea:	9100      	str	r1, [sp, #0]
 80019ec:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 80019ee:	9201      	str	r2, [sp, #4]
 80019f0:	6c19      	ldr	r1, [r3, #64]	; 0x40
 80019f2:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 80019f6:	6419      	str	r1, [r3, #64]	; 0x40
 80019f8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80019fa:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80019fe:	9301      	str	r3, [sp, #4]
 8001a00:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001a02:	210f      	movs	r1, #15
 8001a04:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001a08:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001a0a:	f003 bf69 	b.w	80058e0 <HAL_NVIC_SetPriority>
 8001a0e:	bf00      	nop
 8001a10:	40023800 	.word	0x40023800

08001a14 <HAL_ADC_MspInit>:
* This function configures the hardware resources used in this example
* @param hadc: ADC handle pointer
* @retval None
*/
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 8001a14:	b510      	push	{r4, lr}
 8001a16:	4604      	mov	r4, r0
 8001a18:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001a1a:	2214      	movs	r2, #20
 8001a1c:	2100      	movs	r1, #0
 8001a1e:	a803      	add	r0, sp, #12
 8001a20:	f01e fb04 	bl	802002c <memset>
  if(hadc->Instance==ADC1)
 8001a24:	6822      	ldr	r2, [r4, #0]
 8001a26:	4b12      	ldr	r3, [pc, #72]	; (8001a70 <HAL_ADC_MspInit+0x5c>)
 8001a28:	429a      	cmp	r2, r3
 8001a2a:	d11e      	bne.n	8001a6a <HAL_ADC_MspInit+0x56>
  {
  /* USER CODE BEGIN ADC1_MspInit 0 */

  /* USER CODE END ADC1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_ADC1_CLK_ENABLE();
 8001a2c:	f503 338c 	add.w	r3, r3, #71680	; 0x11800
 8001a30:	2100      	movs	r1, #0
 8001a32:	9101      	str	r1, [sp, #4]
 8001a34:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    PA7     ------> ADC1_IN7
    */
    GPIO_InitStruct.Pin = GPIO_PIN_7;
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001a36:	480f      	ldr	r0, [pc, #60]	; (8001a74 <HAL_ADC_MspInit+0x60>)
    __HAL_RCC_ADC1_CLK_ENABLE();
 8001a38:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8001a3c:	645a      	str	r2, [r3, #68]	; 0x44
 8001a3e:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001a40:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8001a44:	9201      	str	r2, [sp, #4]
 8001a46:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001a48:	9102      	str	r1, [sp, #8]
 8001a4a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001a4c:	f042 0201 	orr.w	r2, r2, #1
 8001a50:	631a      	str	r2, [r3, #48]	; 0x30
 8001a52:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a54:	f003 0301 	and.w	r3, r3, #1
 8001a58:	9302      	str	r3, [sp, #8]
 8001a5a:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001a5c:	2280      	movs	r2, #128	; 0x80
 8001a5e:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001a60:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001a62:	e9cd 2303 	strd	r2, r3, [sp, #12]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001a66:	f004 f8fb 	bl	8005c60 <HAL_GPIO_Init>
  /* USER CODE BEGIN ADC1_MspInit 1 */

  /* USER CODE END ADC1_MspInit 1 */
  }

}
 8001a6a:	b008      	add	sp, #32
 8001a6c:	bd10      	pop	{r4, pc}
 8001a6e:	bf00      	nop
 8001a70:	40012000 	.word	0x40012000
 8001a74:	40020000 	.word	0x40020000

08001a78 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8001a78:	6802      	ldr	r2, [r0, #0]
 8001a7a:	4b09      	ldr	r3, [pc, #36]	; (8001aa0 <HAL_CRC_MspInit+0x28>)
 8001a7c:	429a      	cmp	r2, r3
{
 8001a7e:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 8001a80:	d10b      	bne.n	8001a9a <HAL_CRC_MspInit+0x22>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8001a82:	2300      	movs	r3, #0
 8001a84:	9301      	str	r3, [sp, #4]
 8001a86:	4b07      	ldr	r3, [pc, #28]	; (8001aa4 <HAL_CRC_MspInit+0x2c>)
 8001a88:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001a8a:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8001a8e:	631a      	str	r2, [r3, #48]	; 0x30
 8001a90:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a92:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001a96:	9301      	str	r3, [sp, #4]
 8001a98:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8001a9a:	b002      	add	sp, #8
 8001a9c:	4770      	bx	lr
 8001a9e:	bf00      	nop
 8001aa0:	40023000 	.word	0x40023000
 8001aa4:	40023800 	.word	0x40023800

08001aa8 <HAL_DAC_MspInit>:
* This function configures the hardware resources used in this example
* @param hdac: DAC handle pointer
* @retval None
*/
void HAL_DAC_MspInit(DAC_HandleTypeDef* hdac)
{
 8001aa8:	b510      	push	{r4, lr}
 8001aaa:	4604      	mov	r4, r0
 8001aac:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001aae:	2214      	movs	r2, #20
 8001ab0:	2100      	movs	r1, #0
 8001ab2:	a803      	add	r0, sp, #12
 8001ab4:	f01e faba 	bl	802002c <memset>
  if(hdac->Instance==DAC)
 8001ab8:	6822      	ldr	r2, [r4, #0]
 8001aba:	4b12      	ldr	r3, [pc, #72]	; (8001b04 <HAL_DAC_MspInit+0x5c>)
 8001abc:	429a      	cmp	r2, r3
 8001abe:	d11e      	bne.n	8001afe <HAL_DAC_MspInit+0x56>
  {
  /* USER CODE BEGIN DAC_MspInit 0 */

  /* USER CODE END DAC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DAC_CLK_ENABLE();
 8001ac0:	f503 33e2 	add.w	r3, r3, #115712	; 0x1c400
 8001ac4:	2100      	movs	r1, #0
 8001ac6:	9101      	str	r1, [sp, #4]
 8001ac8:	6c1a      	ldr	r2, [r3, #64]	; 0x40
    PA5     ------> DAC_OUT2
    */
    GPIO_InitStruct.Pin = GPIO_PIN_5;
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001aca:	480f      	ldr	r0, [pc, #60]	; (8001b08 <HAL_DAC_MspInit+0x60>)
    __HAL_RCC_DAC_CLK_ENABLE();
 8001acc:	f042 5200 	orr.w	r2, r2, #536870912	; 0x20000000
 8001ad0:	641a      	str	r2, [r3, #64]	; 0x40
 8001ad2:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001ad4:	f002 5200 	and.w	r2, r2, #536870912	; 0x20000000
 8001ad8:	9201      	str	r2, [sp, #4]
 8001ada:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001adc:	9102      	str	r1, [sp, #8]
 8001ade:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001ae0:	f042 0201 	orr.w	r2, r2, #1
 8001ae4:	631a      	str	r2, [r3, #48]	; 0x30
 8001ae6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001ae8:	f003 0301 	and.w	r3, r3, #1
 8001aec:	9302      	str	r3, [sp, #8]
 8001aee:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001af0:	2220      	movs	r2, #32
 8001af2:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001af4:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001af6:	e9cd 2303 	strd	r2, r3, [sp, #12]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001afa:	f004 f8b1 	bl	8005c60 <HAL_GPIO_Init>
  /* USER CODE BEGIN DAC_MspInit 1 */

  /* USER CODE END DAC_MspInit 1 */
  }

}
 8001afe:	b008      	add	sp, #32
 8001b00:	bd10      	pop	{r4, pc}
 8001b02:	bf00      	nop
 8001b04:	40007400 	.word	0x40007400
 8001b08:	40020000 	.word	0x40020000

08001b0c <HAL_DMA2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 8001b0c:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 8001b0e:	4b0f      	ldr	r3, [pc, #60]	; (8001b4c <HAL_DMA2D_MspInit+0x40>)
 8001b10:	6802      	ldr	r2, [r0, #0]
 8001b12:	429a      	cmp	r2, r3
 8001b14:	d116      	bne.n	8001b44 <HAL_DMA2D_MspInit+0x38>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001b16:	2200      	movs	r2, #0
 8001b18:	f5a3 43f0 	sub.w	r3, r3, #30720	; 0x7800
 8001b1c:	9201      	str	r2, [sp, #4]
 8001b1e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001b20:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8001b24:	6319      	str	r1, [r3, #48]	; 0x30
 8001b26:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001b28:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001b2c:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001b2e:	2105      	movs	r1, #5
 8001b30:	205a      	movs	r0, #90	; 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001b32:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001b34:	f003 fed4 	bl	80058e0 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001b38:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 8001b3a:	b003      	add	sp, #12
 8001b3c:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001b40:	f003 bf00 	b.w	8005944 <HAL_NVIC_EnableIRQ>
}
 8001b44:	b003      	add	sp, #12
 8001b46:	f85d fb04 	ldr.w	pc, [sp], #4
 8001b4a:	bf00      	nop
 8001b4c:	4002b000 	.word	0x4002b000

08001b50 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001b50:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001b54:	4604      	mov	r4, r0
 8001b56:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001b58:	2214      	movs	r2, #20
 8001b5a:	2100      	movs	r1, #0
 8001b5c:	a803      	add	r0, sp, #12
 8001b5e:	f01e fa65 	bl	802002c <memset>
  if(hi2c->Instance==I2C3)
 8001b62:	6822      	ldr	r2, [r4, #0]
 8001b64:	4b24      	ldr	r3, [pc, #144]	; (8001bf8 <HAL_I2C_MspInit+0xa8>)
 8001b66:	429a      	cmp	r2, r3
 8001b68:	d143      	bne.n	8001bf2 <HAL_I2C_MspInit+0xa2>
  {
  /* USER CODE BEGIN I2C3_MspInit 0 */

  /* USER CODE END I2C3_MspInit 0 */

    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001b6a:	4c24      	ldr	r4, [pc, #144]	; (8001bfc <HAL_I2C_MspInit+0xac>)
    GPIO_InitStruct.Pin = GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001b6c:	4824      	ldr	r0, [pc, #144]	; (8001c00 <HAL_I2C_MspInit+0xb0>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001b6e:	2500      	movs	r5, #0
 8001b70:	9500      	str	r5, [sp, #0]
 8001b72:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001b74:	f043 0304 	orr.w	r3, r3, #4
 8001b78:	6323      	str	r3, [r4, #48]	; 0x30
 8001b7a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001b7c:	f003 0304 	and.w	r3, r3, #4
 8001b80:	9300      	str	r3, [sp, #0]
 8001b82:	9b00      	ldr	r3, [sp, #0]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001b84:	9501      	str	r5, [sp, #4]
 8001b86:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001b88:	f043 0301 	orr.w	r3, r3, #1
 8001b8c:	6323      	str	r3, [r4, #48]	; 0x30
 8001b8e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001b90:	f003 0301 	and.w	r3, r3, #1
 8001b94:	9301      	str	r3, [sp, #4]
 8001b96:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001b98:	f04f 0912 	mov.w	r9, #18
 8001b9c:	f44f 7300 	mov.w	r3, #512	; 0x200
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001ba0:	f04f 0801 	mov.w	r8, #1
 8001ba4:	2703      	movs	r7, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001ba6:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001ba8:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001baa:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001bae:	e9cd 8705 	strd	r8, r7, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001bb2:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001bb4:	f004 f854 	bl	8005c60 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001bb8:	f44f 7380 	mov.w	r3, #256	; 0x100
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001bbc:	4811      	ldr	r0, [pc, #68]	; (8001c04 <HAL_I2C_MspInit+0xb4>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001bbe:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001bc0:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001bc2:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001bc6:	e9cd 8705 	strd	r8, r7, [sp, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001bca:	f004 f849 	bl	8005c60 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001bce:	9502      	str	r5, [sp, #8]
 8001bd0:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001bd2:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001bd6:	6423      	str	r3, [r4, #64]	; 0x40
 8001bd8:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001bda:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001bde:	9302      	str	r3, [sp, #8]
 8001be0:	9b02      	ldr	r3, [sp, #8]
  /* USER CODE BEGIN I2C3_MspInit 1 */
  /* Force the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_FORCE_RESET();
 8001be2:	6a23      	ldr	r3, [r4, #32]
 8001be4:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001be8:	6223      	str	r3, [r4, #32]
      
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 8001bea:	6a23      	ldr	r3, [r4, #32]
 8001bec:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8001bf0:	6223      	str	r3, [r4, #32]
  /* USER CODE END I2C3_MspInit 1 */
  }

}
 8001bf2:	b009      	add	sp, #36	; 0x24
 8001bf4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001bf8:	40005c00 	.word	0x40005c00
 8001bfc:	40023800 	.word	0x40023800
 8001c00:	40020800 	.word	0x40020800
 8001c04:	40020000 	.word	0x40020000

08001c08 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8001c08:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001c0a:	4604      	mov	r4, r0
 8001c0c:	b08d      	sub	sp, #52	; 0x34
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001c0e:	2214      	movs	r2, #20
 8001c10:	2100      	movs	r1, #0
 8001c12:	a807      	add	r0, sp, #28
 8001c14:	f01e fa0a 	bl	802002c <memset>
  if(hltdc->Instance==LTDC)
 8001c18:	6822      	ldr	r2, [r4, #0]
 8001c1a:	4b57      	ldr	r3, [pc, #348]	; (8001d78 <HAL_LTDC_MspInit+0x170>)
 8001c1c:	429a      	cmp	r2, r3
 8001c1e:	f040 80a8 	bne.w	8001d72 <HAL_LTDC_MspInit+0x16a>
  {
  /* USER CODE BEGIN LTDC_MspInit 0 */

  /* USER CODE END LTDC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001c22:	f503 4350 	add.w	r3, r3, #53248	; 0xd000
 8001c26:	2500      	movs	r5, #0
 8001c28:	9500      	str	r5, [sp, #0]
 8001c2a:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_10;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001c2c:	4853      	ldr	r0, [pc, #332]	; (8001d7c <HAL_LTDC_MspInit+0x174>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001c2e:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8001c32:	645a      	str	r2, [r3, #68]	; 0x44
 8001c34:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001c36:	f002 6280 	and.w	r2, r2, #67108864	; 0x4000000
 8001c3a:	9200      	str	r2, [sp, #0]
 8001c3c:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001c3e:	9501      	str	r5, [sp, #4]
 8001c40:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c42:	f042 0220 	orr.w	r2, r2, #32
 8001c46:	631a      	str	r2, [r3, #48]	; 0x30
 8001c48:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c4a:	f002 0220 	and.w	r2, r2, #32
 8001c4e:	9201      	str	r2, [sp, #4]
 8001c50:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001c52:	9502      	str	r5, [sp, #8]
 8001c54:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c56:	f042 0201 	orr.w	r2, r2, #1
 8001c5a:	631a      	str	r2, [r3, #48]	; 0x30
 8001c5c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c5e:	f002 0201 	and.w	r2, r2, #1
 8001c62:	9202      	str	r2, [sp, #8]
 8001c64:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001c66:	9503      	str	r5, [sp, #12]
 8001c68:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c6a:	f042 0202 	orr.w	r2, r2, #2
 8001c6e:	631a      	str	r2, [r3, #48]	; 0x30
 8001c70:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c72:	f002 0202 	and.w	r2, r2, #2
 8001c76:	9203      	str	r2, [sp, #12]
 8001c78:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8001c7a:	9504      	str	r5, [sp, #16]
 8001c7c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c7e:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8001c82:	631a      	str	r2, [r3, #48]	; 0x30
 8001c84:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c86:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8001c8a:	9204      	str	r2, [sp, #16]
 8001c8c:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001c8e:	9505      	str	r5, [sp, #20]
 8001c90:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c92:	f042 0204 	orr.w	r2, r2, #4
 8001c96:	631a      	str	r2, [r3, #48]	; 0x30
 8001c98:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c9a:	f002 0204 	and.w	r2, r2, #4
 8001c9e:	9205      	str	r2, [sp, #20]
 8001ca0:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001ca2:	9506      	str	r5, [sp, #24]
 8001ca4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001ca6:	f042 0208 	orr.w	r2, r2, #8
 8001caa:	631a      	str	r2, [r3, #48]	; 0x30
 8001cac:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001cae:	f003 0308 	and.w	r3, r3, #8
 8001cb2:	9306      	str	r3, [sp, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cb4:	2402      	movs	r4, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001cb6:	260e      	movs	r6, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001cb8:	9b06      	ldr	r3, [sp, #24]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001cba:	940a      	str	r4, [sp, #40]	; 0x28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cbc:	f44f 6380 	mov.w	r3, #1024	; 0x400
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001cc0:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cc2:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001cc6:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001cc8:	f003 ffca 	bl	8005c60 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8001ccc:	f641 0358 	movw	r3, #6232	; 0x1858
                          |GPIO_PIN_12;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001cd0:	482b      	ldr	r0, [pc, #172]	; (8001d80 <HAL_LTDC_MspInit+0x178>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001cd2:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001cd4:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cd6:	e9cd 3407 	strd	r3, r4, [sp, #28]

    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001cda:	2709      	movs	r7, #9
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001cdc:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001ce0:	f003 ffbe 	bl	8005c60 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8001ce4:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001ce6:	4827      	ldr	r0, [pc, #156]	; (8001d84 <HAL_LTDC_MspInit+0x17c>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001ce8:	970b      	str	r7, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001cea:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cec:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001cf0:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001cf4:	f003 ffb4 	bl	8005c60 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8001cf8:	f44f 6370 	mov.w	r3, #3840	; 0xf00
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001cfc:	4821      	ldr	r0, [pc, #132]	; (8001d84 <HAL_LTDC_MspInit+0x17c>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001cfe:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001d00:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d02:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001d06:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001d0a:	f003 ffa9 	bl	8005c60 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8001d0e:	f44f 630c 	mov.w	r3, #2240	; 0x8c0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d12:	481d      	ldr	r0, [pc, #116]	; (8001d88 <HAL_LTDC_MspInit+0x180>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001d14:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d16:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d18:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001d1c:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d20:	f003 ff9e 	bl	8005c60 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8001d24:	23c0      	movs	r3, #192	; 0xc0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001d26:	4819      	ldr	r0, [pc, #100]	; (8001d8c <HAL_LTDC_MspInit+0x184>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001d28:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001d2a:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d2c:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001d30:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001d34:	f003 ff94 	bl	8005c60 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8001d38:	2308      	movs	r3, #8
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001d3a:	4815      	ldr	r0, [pc, #84]	; (8001d90 <HAL_LTDC_MspInit+0x188>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001d3c:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001d3e:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d40:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001d44:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001d48:	f003 ff8a 	bl	8005c60 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8001d4c:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d50:	480d      	ldr	r0, [pc, #52]	; (8001d88 <HAL_LTDC_MspInit+0x180>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001d52:	970b      	str	r7, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d54:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d56:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001d5a:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d5e:	f003 ff7f 	bl	8005c60 <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001d62:	2058      	movs	r0, #88	; 0x58
 8001d64:	462a      	mov	r2, r5
 8001d66:	2105      	movs	r1, #5
 8001d68:	f003 fdba 	bl	80058e0 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8001d6c:	2058      	movs	r0, #88	; 0x58
 8001d6e:	f003 fde9 	bl	8005944 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8001d72:	b00d      	add	sp, #52	; 0x34
 8001d74:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001d76:	bf00      	nop
 8001d78:	40016800 	.word	0x40016800
 8001d7c:	40021400 	.word	0x40021400
 8001d80:	40020000 	.word	0x40020000
 8001d84:	40020400 	.word	0x40020400
 8001d88:	40021800 	.word	0x40021800
 8001d8c:	40020800 	.word	0x40020800
 8001d90:	40020c00 	.word	0x40020c00

08001d94 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8001d94:	b510      	push	{r4, lr}
 8001d96:	4604      	mov	r4, r0
 8001d98:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001d9a:	2214      	movs	r2, #20
 8001d9c:	2100      	movs	r1, #0
 8001d9e:	a803      	add	r0, sp, #12
 8001da0:	f01e f944 	bl	802002c <memset>
  if(hspi->Instance==SPI5)
 8001da4:	6822      	ldr	r2, [r4, #0]
 8001da6:	4b14      	ldr	r3, [pc, #80]	; (8001df8 <HAL_SPI_MspInit+0x64>)
 8001da8:	429a      	cmp	r2, r3
 8001daa:	d123      	bne.n	8001df4 <HAL_SPI_MspInit+0x60>
  {
  /* USER CODE BEGIN SPI5_MspInit 0 */

  /* USER CODE END SPI5_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI5_CLK_ENABLE();
 8001dac:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 8001db0:	2100      	movs	r1, #0
 8001db2:	9101      	str	r1, [sp, #4]
 8001db4:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001db6:	4811      	ldr	r0, [pc, #68]	; (8001dfc <HAL_SPI_MspInit+0x68>)
    __HAL_RCC_SPI5_CLK_ENABLE();
 8001db8:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8001dbc:	645a      	str	r2, [r3, #68]	; 0x44
 8001dbe:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001dc0:	f402 1280 	and.w	r2, r2, #1048576	; 0x100000
 8001dc4:	9201      	str	r2, [sp, #4]
 8001dc6:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001dc8:	9102      	str	r1, [sp, #8]
 8001dca:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001dcc:	f042 0220 	orr.w	r2, r2, #32
 8001dd0:	631a      	str	r2, [r3, #48]	; 0x30
 8001dd2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001dd4:	f003 0320 	and.w	r3, r3, #32
 8001dd8:	9302      	str	r3, [sp, #8]
 8001dda:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001ddc:	f44f 7260 	mov.w	r2, #896	; 0x380
 8001de0:	2302      	movs	r3, #2
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8001de2:	2103      	movs	r1, #3
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001de4:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8001de8:	2305      	movs	r3, #5
 8001dea:	e9cd 1306 	strd	r1, r3, [sp, #24]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001dee:	a903      	add	r1, sp, #12
 8001df0:	f003 ff36 	bl	8005c60 <HAL_GPIO_Init>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 8001df4:	b008      	add	sp, #32
 8001df6:	bd10      	pop	{r4, pc}
 8001df8:	40015000 	.word	0x40015000
 8001dfc:	40021400 	.word	0x40021400

08001e00 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8001e00:	b507      	push	{r0, r1, r2, lr}
  if(htim_base->Instance==TIM7)
 8001e02:	4b0f      	ldr	r3, [pc, #60]	; (8001e40 <HAL_TIM_Base_MspInit+0x40>)
 8001e04:	6802      	ldr	r2, [r0, #0]
 8001e06:	429a      	cmp	r2, r3
 8001e08:	d116      	bne.n	8001e38 <HAL_TIM_Base_MspInit+0x38>
  {
  /* USER CODE BEGIN TIM7_MspInit 0 */

  /* USER CODE END TIM7_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM7_CLK_ENABLE();
 8001e0a:	2200      	movs	r2, #0
 8001e0c:	f503 3309 	add.w	r3, r3, #140288	; 0x22400
 8001e10:	9201      	str	r2, [sp, #4]
 8001e12:	6c19      	ldr	r1, [r3, #64]	; 0x40
 8001e14:	f041 0120 	orr.w	r1, r1, #32
 8001e18:	6419      	str	r1, [r3, #64]	; 0x40
 8001e1a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001e1c:	f003 0320 	and.w	r3, r3, #32
 8001e20:	9301      	str	r3, [sp, #4]
    /* TIM7 interrupt Init */
    HAL_NVIC_SetPriority(TIM7_IRQn, 5, 0);
 8001e22:	2105      	movs	r1, #5
 8001e24:	2037      	movs	r0, #55	; 0x37
    __HAL_RCC_TIM7_CLK_ENABLE();
 8001e26:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(TIM7_IRQn, 5, 0);
 8001e28:	f003 fd5a 	bl	80058e0 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM7_IRQn);
 8001e2c:	2037      	movs	r0, #55	; 0x37
  /* USER CODE BEGIN TIM7_MspInit 1 */

  /* USER CODE END TIM7_MspInit 1 */
  }

}
 8001e2e:	b003      	add	sp, #12
 8001e30:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(TIM7_IRQn);
 8001e34:	f003 bd86 	b.w	8005944 <HAL_NVIC_EnableIRQ>
}
 8001e38:	b003      	add	sp, #12
 8001e3a:	f85d fb04 	ldr.w	pc, [sp], #4
 8001e3e:	bf00      	nop
 8001e40:	40001400 	.word	0x40001400

08001e44 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001e44:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001e48:	b086      	sub	sp, #24
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8001e4a:	2300      	movs	r3, #0
 8001e4c:	9303      	str	r3, [sp, #12]
  if (FMC_Initialized) {
 8001e4e:	4b2b      	ldr	r3, [pc, #172]	; (8001efc <HAL_SDRAM_MspInit+0xb8>)
 8001e50:	681c      	ldr	r4, [r3, #0]
 8001e52:	2c00      	cmp	r4, #0
 8001e54:	d14f      	bne.n	8001ef6 <HAL_SDRAM_MspInit+0xb2>
  FMC_Initialized = 1;
 8001e56:	f04f 0801 	mov.w	r8, #1
 8001e5a:	f8c3 8000 	str.w	r8, [r3]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001e5e:	4b28      	ldr	r3, [pc, #160]	; (8001f00 <HAL_SDRAM_MspInit+0xbc>)
 8001e60:	9400      	str	r4, [sp, #0]
 8001e62:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001e64:	4827      	ldr	r0, [pc, #156]	; (8001f04 <HAL_SDRAM_MspInit+0xc0>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8001e66:	ea42 0208 	orr.w	r2, r2, r8
 8001e6a:	639a      	str	r2, [r3, #56]	; 0x38
 8001e6c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8001e6e:	ea03 0308 	and.w	r3, r3, r8
 8001e72:	9300      	str	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e74:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001e76:	2603      	movs	r6, #3
 8001e78:	250c      	movs	r5, #12
  __HAL_RCC_FMC_CLK_ENABLE();
 8001e7a:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001e7c:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e7e:	f64f 033f 	movw	r3, #63551	; 0xf83f
 8001e82:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001e86:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001e8a:	f003 fee9 	bl	8005c60 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e8e:	481e      	ldr	r0, [pc, #120]	; (8001f08 <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001e90:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e92:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e94:	e9cd 8701 	strd	r8, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001e98:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e9c:	f003 fee0 	bl	8005c60 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 8001ea0:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001ea4:	4819      	ldr	r0, [pc, #100]	; (8001f0c <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001ea6:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001ea8:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001eaa:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001eae:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001eb2:	f003 fed5 	bl	8005c60 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 8001eb6:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001eba:	4815      	ldr	r0, [pc, #84]	; (8001f10 <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001ebc:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001ebe:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001ec0:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001ec4:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001ec8:	f003 feca 	bl	8005c60 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8001ecc:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001ed0:	4810      	ldr	r0, [pc, #64]	; (8001f14 <HAL_SDRAM_MspInit+0xd0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001ed2:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001ed4:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001ed6:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001eda:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001ede:	f003 febf 	bl	8005c60 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8001ee2:	2360      	movs	r3, #96	; 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001ee4:	480c      	ldr	r0, [pc, #48]	; (8001f18 <HAL_SDRAM_MspInit+0xd4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001ee6:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001ee8:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001eea:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001eee:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001ef2:	f003 feb5 	bl	8005c60 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8001ef6:	b006      	add	sp, #24
 8001ef8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001efc:	20004454 	.word	0x20004454
 8001f00:	40023800 	.word	0x40023800
 8001f04:	40021400 	.word	0x40021400
 8001f08:	40020800 	.word	0x40020800
 8001f0c:	40021800 	.word	0x40021800
 8001f10:	40021000 	.word	0x40021000
 8001f14:	40020c00 	.word	0x40020c00
 8001f18:	40020400 	.word	0x40020400

08001f1c <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8001f1c:	b530      	push	{r4, r5, lr}
 8001f1e:	4601      	mov	r1, r0
 8001f20:	b089      	sub	sp, #36	; 0x24
  uint32_t              uwTimclock = 0;
  uint32_t              uwPrescalerValue = 0;
  uint32_t              pFLatency;

  /*Configure the TIM8 IRQ priority */
  HAL_NVIC_SetPriority(TIM8_UP_TIM13_IRQn, TickPriority ,0);
 8001f22:	2200      	movs	r2, #0
 8001f24:	202c      	movs	r0, #44	; 0x2c
 8001f26:	f003 fcdb 	bl	80058e0 <HAL_NVIC_SetPriority>

  /* Enable the TIM8 global Interrupt */
  HAL_NVIC_EnableIRQ(TIM8_UP_TIM13_IRQn);
 8001f2a:	202c      	movs	r0, #44	; 0x2c
 8001f2c:	f003 fd0a 	bl	8005944 <HAL_NVIC_EnableIRQ>

  /* Enable TIM8 clock */
  __HAL_RCC_TIM8_CLK_ENABLE();
 8001f30:	2500      	movs	r5, #0
 8001f32:	4b15      	ldr	r3, [pc, #84]	; (8001f88 <HAL_InitTick+0x6c>)
 8001f34:	9502      	str	r5, [sp, #8]
 8001f36:	6c5a      	ldr	r2, [r3, #68]	; 0x44

  /* Compute the prescaler value to have TIM8 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000) - 1);

  /* Initialize TIM8 */
  htim8.Instance = TIM8;
 8001f38:	4c14      	ldr	r4, [pc, #80]	; (8001f8c <HAL_InitTick+0x70>)
  __HAL_RCC_TIM8_CLK_ENABLE();
 8001f3a:	f042 0202 	orr.w	r2, r2, #2
 8001f3e:	645a      	str	r2, [r3, #68]	; 0x44
 8001f40:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001f42:	f003 0302 	and.w	r3, r3, #2
 8001f46:	9302      	str	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001f48:	a901      	add	r1, sp, #4
 8001f4a:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM8_CLK_ENABLE();
 8001f4c:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001f4e:	f004 ffff 	bl	8006f50 <HAL_RCC_GetClockConfig>
  uwTimclock = 2*HAL_RCC_GetPCLK2Freq();
 8001f52:	f004 ffed 	bl	8006f30 <HAL_RCC_GetPCLK2Freq>
  htim8.Instance = TIM8;
 8001f56:	4b0e      	ldr	r3, [pc, #56]	; (8001f90 <HAL_InitTick+0x74>)
 8001f58:	6023      	str	r3, [r4, #0]
  + Period = [(TIM8CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim8.Init.Period = (1000000 / 1000) - 1;
 8001f5a:	f240 33e7 	movw	r3, #999	; 0x3e7
 8001f5e:	60e3      	str	r3, [r4, #12]
  uwTimclock = 2*HAL_RCC_GetPCLK2Freq();
 8001f60:	0040      	lsls	r0, r0, #1
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000) - 1);
 8001f62:	4b0c      	ldr	r3, [pc, #48]	; (8001f94 <HAL_InitTick+0x78>)
 8001f64:	fbb0 f0f3 	udiv	r0, r0, r3
 8001f68:	3801      	subs	r0, #1
  htim8.Init.Prescaler = uwPrescalerValue;
 8001f6a:	6060      	str	r0, [r4, #4]
  htim8.Init.ClockDivision = 0;
  htim8.Init.CounterMode = TIM_COUNTERMODE_UP;
  if(HAL_TIM_Base_Init(&htim8) == HAL_OK)
 8001f6c:	4620      	mov	r0, r4
  htim8.Init.ClockDivision = 0;
 8001f6e:	6125      	str	r5, [r4, #16]
  htim8.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001f70:	60a5      	str	r5, [r4, #8]
  if(HAL_TIM_Base_Init(&htim8) == HAL_OK)
 8001f72:	f005 fda9 	bl	8007ac8 <HAL_TIM_Base_Init>
 8001f76:	b920      	cbnz	r0, 8001f82 <HAL_InitTick+0x66>
  {
    /* Start the TIM time Base generation in interrupt mode */
    return HAL_TIM_Base_Start_IT(&htim8);
 8001f78:	4620      	mov	r0, r4
 8001f7a:	f005 fc88 	bl	800788e <HAL_TIM_Base_Start_IT>
  }

  /* Return function status */
  return HAL_ERROR;
}
 8001f7e:	b009      	add	sp, #36	; 0x24
 8001f80:	bd30      	pop	{r4, r5, pc}
  return HAL_ERROR;
 8001f82:	2001      	movs	r0, #1
 8001f84:	e7fb      	b.n	8001f7e <HAL_InitTick+0x62>
 8001f86:	bf00      	nop
 8001f88:	40023800 	.word	0x40023800
 8001f8c:	20004458 	.word	0x20004458
 8001f90:	40010400 	.word	0x40010400
 8001f94:	000f4240 	.word	0x000f4240

08001f98 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8001f98:	4770      	bx	lr

08001f9a <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001f9a:	e7fe      	b.n	8001f9a <HardFault_Handler>

08001f9c <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001f9c:	e7fe      	b.n	8001f9c <MemManage_Handler>

08001f9e <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001f9e:	e7fe      	b.n	8001f9e <BusFault_Handler>

08001fa0 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001fa0:	e7fe      	b.n	8001fa0 <UsageFault_Handler>

08001fa2 <DebugMon_Handler>:
 8001fa2:	4770      	bx	lr

08001fa4 <TIM8_UP_TIM13_IRQHandler>:
void TIM8_UP_TIM13_IRQHandler(void)
{
  /* USER CODE BEGIN TIM8_UP_TIM13_IRQn 0 */

  /* USER CODE END TIM8_UP_TIM13_IRQn 0 */
  HAL_TIM_IRQHandler(&htim8);
 8001fa4:	4801      	ldr	r0, [pc, #4]	; (8001fac <TIM8_UP_TIM13_IRQHandler+0x8>)
 8001fa6:	f005 bc86 	b.w	80078b6 <HAL_TIM_IRQHandler>
 8001faa:	bf00      	nop
 8001fac:	20004458 	.word	0x20004458

08001fb0 <TIM7_IRQHandler>:
void TIM7_IRQHandler(void)
{
  /* USER CODE BEGIN TIM7_IRQn 0 */

  /* USER CODE END TIM7_IRQn 0 */
  HAL_TIM_IRQHandler(&htim7);
 8001fb0:	4801      	ldr	r0, [pc, #4]	; (8001fb8 <TIM7_IRQHandler+0x8>)
 8001fb2:	f005 bc80 	b.w	80078b6 <HAL_TIM_IRQHandler>
 8001fb6:	bf00      	nop
 8001fb8:	20003990 	.word	0x20003990

08001fbc <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8001fbc:	4801      	ldr	r0, [pc, #4]	; (8001fc4 <LTDC_IRQHandler+0x8>)
 8001fbe:	f004 bc8b 	b.w	80068d8 <HAL_LTDC_IRQHandler>
 8001fc2:	bf00      	nop
 8001fc4:	2000385c 	.word	0x2000385c

08001fc8 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 8001fc8:	4801      	ldr	r0, [pc, #4]	; (8001fd0 <DMA2D_IRQHandler+0x8>)
 8001fca:	f003 bd7a 	b.w	8005ac2 <HAL_DMA2D_IRQHandler>
 8001fce:	bf00      	nop
 8001fd0:	200037c8 	.word	0x200037c8

08001fd4 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8001fd4:	2001      	movs	r0, #1
 8001fd6:	4770      	bx	lr

08001fd8 <_kill>:

int _kill(int pid, int sig)
{
 8001fd8:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001fda:	f01d fed3 	bl	801fd84 <__errno>
 8001fde:	2316      	movs	r3, #22
 8001fe0:	6003      	str	r3, [r0, #0]
	return -1;
}
 8001fe2:	f04f 30ff 	mov.w	r0, #4294967295
 8001fe6:	bd08      	pop	{r3, pc}

08001fe8 <_exit>:

void _exit (int status)
{
 8001fe8:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001fea:	f01d fecb 	bl	801fd84 <__errno>
 8001fee:	2316      	movs	r3, #22
 8001ff0:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 8001ff2:	e7fe      	b.n	8001ff2 <_exit+0xa>

08001ff4 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001ff4:	b570      	push	{r4, r5, r6, lr}
 8001ff6:	460d      	mov	r5, r1
 8001ff8:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001ffa:	460e      	mov	r6, r1
 8001ffc:	1b73      	subs	r3, r6, r5
 8001ffe:	429c      	cmp	r4, r3
 8002000:	dc01      	bgt.n	8002006 <_read+0x12>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 8002002:	4620      	mov	r0, r4
 8002004:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 8002006:	f3af 8000 	nop.w
 800200a:	f806 0b01 	strb.w	r0, [r6], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800200e:	e7f5      	b.n	8001ffc <_read+0x8>

08002010 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8002010:	b570      	push	{r4, r5, r6, lr}
 8002012:	460d      	mov	r5, r1
 8002014:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002016:	460e      	mov	r6, r1
 8002018:	1b73      	subs	r3, r6, r5
 800201a:	429c      	cmp	r4, r3
 800201c:	dc01      	bgt.n	8002022 <_write+0x12>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 800201e:	4620      	mov	r0, r4
 8002020:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 8002022:	f816 0b01 	ldrb.w	r0, [r6], #1
 8002026:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800202a:	e7f5      	b.n	8002018 <_write+0x8>

0800202c <_close>:

int _close(int file)
{
	return -1;
}
 800202c:	f04f 30ff 	mov.w	r0, #4294967295
 8002030:	4770      	bx	lr

08002032 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8002032:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8002036:	604b      	str	r3, [r1, #4]
	return 0;
}
 8002038:	2000      	movs	r0, #0
 800203a:	4770      	bx	lr

0800203c <_isatty>:

int _isatty(int file)
{
	return 1;
}
 800203c:	2001      	movs	r0, #1
 800203e:	4770      	bx	lr

08002040 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8002040:	2000      	movs	r0, #0
 8002042:	4770      	bx	lr

08002044 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8002044:	4a0a      	ldr	r2, [pc, #40]	; (8002070 <_sbrk+0x2c>)
 8002046:	6811      	ldr	r1, [r2, #0]
{
 8002048:	b508      	push	{r3, lr}
 800204a:	4603      	mov	r3, r0
	if (heap_end == 0)
 800204c:	b909      	cbnz	r1, 8002052 <_sbrk+0xe>
		heap_end = &end;
 800204e:	4909      	ldr	r1, [pc, #36]	; (8002074 <_sbrk+0x30>)
 8002050:	6011      	str	r1, [r2, #0]

	prev_heap_end = heap_end;
 8002052:	6810      	ldr	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 8002054:	4669      	mov	r1, sp
 8002056:	4403      	add	r3, r0
 8002058:	428b      	cmp	r3, r1
 800205a:	d906      	bls.n	800206a <_sbrk+0x26>
	{
		errno = ENOMEM;
 800205c:	f01d fe92 	bl	801fd84 <__errno>
 8002060:	230c      	movs	r3, #12
 8002062:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 8002064:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 8002068:	bd08      	pop	{r3, pc}
	heap_end += incr;
 800206a:	6013      	str	r3, [r2, #0]
	return (caddr_t) prev_heap_end;
 800206c:	e7fc      	b.n	8002068 <_sbrk+0x24>
 800206e:	bf00      	nop
 8002070:	20004498 	.word	0x20004498
 8002074:	20015608 	.word	0x20015608

08002078 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8002078:	4770      	bx	lr

0800207a <_ZN23ApplicationFontProviderD0Ev>:
 800207a:	b510      	push	{r4, lr}
 800207c:	2104      	movs	r1, #4
 800207e:	4604      	mov	r4, r0
 8002080:	f01d fe20 	bl	801fcc4 <_ZdlPvj>
 8002084:	4620      	mov	r0, r4
 8002086:	bd10      	pop	{r4, pc}

08002088 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
    switch (typography)
 8002088:	2901      	cmp	r1, #1
{
 800208a:	b508      	push	{r3, lr}
    switch (typography)
 800208c:	d006      	beq.n	800209c <_ZN23ApplicationFontProvider7getFontEt+0x14>
 800208e:	2902      	cmp	r1, #2
 8002090:	d008      	beq.n	80020a4 <_ZN23ApplicationFontProvider7getFontEt+0x1c>
 8002092:	b959      	cbnz	r1, 80020ac <_ZN23ApplicationFontProvider7getFontEt+0x24>
    {
    case Typography::DEFAULT:
        // verdana_15_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8002094:	f002 fc64 	bl	8004960 <_ZN17TypedTextDatabase8getFontsEv>
 8002098:	6800      	ldr	r0, [r0, #0]
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
    }
}
 800209a:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 800209c:	f002 fc60 	bl	8004960 <_ZN17TypedTextDatabase8getFontsEv>
 80020a0:	6840      	ldr	r0, [r0, #4]
 80020a2:	e7fa      	b.n	800209a <_ZN23ApplicationFontProvider7getFontEt+0x12>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 80020a4:	f002 fc5c 	bl	8004960 <_ZN17TypedTextDatabase8getFontsEv>
 80020a8:	6880      	ldr	r0, [r0, #8]
 80020aa:	e7f6      	b.n	800209a <_ZN23ApplicationFontProvider7getFontEt+0x12>
    switch (typography)
 80020ac:	2000      	movs	r0, #0
 80020ae:	e7f4      	b.n	800209a <_ZN23ApplicationFontProvider7getFontEt+0x12>

080020b0 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 80020b0:	4800      	ldr	r0, [pc, #0]	; (80020b4 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 80020b2:	4770      	bx	lr
 80020b4:	080215e0 	.word	0x080215e0

080020b8 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 80020b8:	2009      	movs	r0, #9
 80020ba:	4770      	bx	lr

080020bc <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 80020bc:	b513      	push	{r0, r1, r4, lr}
 80020be:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 80020c0:	b151      	cbz	r1, 80020d8 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 80020c2:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 80020c4:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 80020c6:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 80020ca:	aa01      	add	r2, sp, #4
 80020cc:	689c      	ldr	r4, [r3, #8]
 80020ce:	f10d 0303 	add.w	r3, sp, #3
 80020d2:	47a0      	blx	r4
        return glyph;
    }
 80020d4:	b002      	add	sp, #8
 80020d6:	bd10      	pop	{r4, pc}
            return 0;
 80020d8:	4608      	mov	r0, r1
 80020da:	e7fb      	b.n	80020d4 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

080020dc <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 80020dc:	8940      	ldrh	r0, [r0, #10]
 80020de:	4770      	bx	lr

080020e0 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 80020e0:	8980      	ldrh	r0, [r0, #12]
 80020e2:	4770      	bx	lr

080020e4 <_ZNK8touchgfx4Font13getFontHeightEv>:
     *       getMinimumTextHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getFontHeight() const
    {
        return fontHeight;
    }
 80020e4:	8880      	ldrh	r0, [r0, #4]
 80020e6:	4770      	bx	lr

080020e8 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
     *
     * @return The minimum height needed for a text field that uses this font.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getMinimumTextHeight() const
    {
        return fontHeight + pixelsBelowBaseline;
 80020e8:	7983      	ldrb	r3, [r0, #6]
 80020ea:	8880      	ldrh	r0, [r0, #4]
 80020ec:	4418      	add	r0, r3
    }
 80020ee:	b280      	uxth	r0, r0
 80020f0:	4770      	bx	lr

080020f2 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 80020f2:	79c0      	ldrb	r0, [r0, #7]
    }
 80020f4:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 80020f8:	4770      	bx	lr

080020fa <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 80020fa:	79c0      	ldrb	r0, [r0, #7]
    }
 80020fc:	09c0      	lsrs	r0, r0, #7
 80020fe:	4770      	bx	lr

08002100 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 8002100:	4770      	bx	lr

08002102 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 8002102:	b510      	push	{r4, lr}
    }
 8002104:	2108      	movs	r1, #8
    virtual ~TypedText()
 8002106:	4604      	mov	r4, r0
    }
 8002108:	f01d fddc 	bl	801fcc4 <_ZdlPvj>
 800210c:	4620      	mov	r0, r4
 800210e:	bd10      	pop	{r4, pc}

08002110 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 8002110:	4770      	bx	lr

08002112 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 8002112:	4770      	bx	lr

08002114 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 8002114:	f500 7396 	add.w	r3, r0, #300	; 0x12c
 8002118:	6808      	ldr	r0, [r1, #0]
 800211a:	6849      	ldr	r1, [r1, #4]
 800211c:	c303      	stmia	r3!, {r0, r1}
    }
 800211e:	4770      	bx	lr

08002120 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8002120:	2000      	movs	r0, #0
 8002122:	4770      	bx	lr

08002124 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8002124:	8081      	strh	r1, [r0, #4]
    }
 8002126:	4770      	bx	lr

08002128 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8002128:	80c1      	strh	r1, [r0, #6]
    }
 800212a:	4770      	bx	lr

0800212c <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 800212c:	8101      	strh	r1, [r0, #8]
    }
 800212e:	4770      	bx	lr

08002130 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8002130:	8141      	strh	r1, [r0, #10]
    }
 8002132:	4770      	bx	lr

08002134 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8002134:	4770      	bx	lr

08002136 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 8002136:	4770      	bx	lr

08002138 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 8002138:	4770      	bx	lr

0800213a <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 800213a:	4770      	bx	lr

0800213c <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 800213c:	4770      	bx	lr

0800213e <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 800213e:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8002140:	88c4      	ldrh	r4, [r0, #6]
 8002142:	6803      	ldr	r3, [r0, #0]
 8002144:	1b12      	subs	r2, r2, r4
 8002146:	8884      	ldrh	r4, [r0, #4]
 8002148:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800214a:	1b09      	subs	r1, r1, r4
 800214c:	b212      	sxth	r2, r2
    }
 800214e:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 8002152:	b209      	sxth	r1, r1
 8002154:	4718      	bx	r3

08002156 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8002156:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800215a:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 800215c:	f04f 33ff 	mov.w	r3, #4294967295
 8002160:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 8002162:	6813      	ldr	r3, [r2, #0]
 8002164:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 8002166:	6010      	str	r0, [r2, #0]
    }
 8002168:	4770      	bx	lr

0800216a <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 800216a:	4770      	bx	lr

0800216c <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 800216c:	4770      	bx	lr

0800216e <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 800216e:	6041      	str	r1, [r0, #4]
    }
 8002170:	4770      	bx	lr

08002172 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8002172:	4770      	bx	lr

08002174 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002174:	4b06      	ldr	r3, [pc, #24]	; (8002190 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 8002176:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 800217a:	2300      	movs	r3, #0
 800217c:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
// Screen1

void FrontendApplicationBase::gotoScreen1ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreen1ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8002180:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8002184:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8002188:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c

    virtual void changeToStartScreen()
    {
        gotoScreen1ScreenNoTransition();
    }
 800218c:	4770      	bx	lr
 800218e:	bf00      	nop
 8002190:	080022a5 	.word	0x080022a5

08002194 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8002194:	2301      	movs	r3, #1
 8002196:	7203      	strb	r3, [r0, #8]
    }
 8002198:	4770      	bx	lr

0800219a <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 800219a:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800219e:	b11a      	cbz	r2, 80021a8 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 80021a0:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 80021a4:	b102      	cbz	r2, 80021a8 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 80021a6:	6018      	str	r0, [r3, #0]
        }
    }
 80021a8:	4770      	bx	lr

080021aa <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectD1Ev>:
{
public:
    /**
     * A Widget that reports solid and but does not draw anything.
     */
    class FullSolidRect : public Widget
 80021aa:	4770      	bx	lr

080021ac <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED1Ev>:
class WipeTransition : public Transition
 80021ac:	4770      	bx	lr

080021ae <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 80021ae:	4770      	bx	lr

080021b0 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 80021b0:	4770      	bx	lr

080021b2 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE8tearDownEv>:
            // Copy rect from tft to client framebuffer
            HAL::getInstance()->lcd().blitCopy((const uint16_t*)tftFb, source, rect, 255, false);
        }
    }

    virtual void tearDown()
 80021b2:	4601      	mov	r1, r0
    {
        screenContainer->remove(solid);
 80021b4:	6840      	ldr	r0, [r0, #4]
 80021b6:	6803      	ldr	r3, [r0, #0]
 80021b8:	3110      	adds	r1, #16
 80021ba:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80021bc:	4718      	bx	r3

080021be <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE4initEv>:
    }

    virtual void init()
 80021be:	4601      	mov	r1, r0
    {
        Transition::init();
        // Add the solid (and not-drawing-anything) widget on top to cover the other widgets
        screenContainer->add(solid);
 80021c0:	6840      	ldr	r0, [r0, #4]
 80021c2:	6803      	ldr	r3, [r0, #0]
 80021c4:	3110      	adds	r1, #16
 80021c6:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80021c8:	4718      	bx	r3

080021ca <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE10invalidateEv>:
     * Wipe transition does not require an invalidation. Invalidation
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
    {
    }
 80021ca:	4770      	bx	lr

080021cc <_ZNK8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRect4drawERKNS_4RectE>:
        }
 80021cc:	4770      	bx	lr

080021ce <_ZNK8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRect12getSolidRectEv>:
        virtual Rect getSolidRect() const
 80021ce:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80021d0:	2200      	movs	r2, #0
            return Rect(0U, 0U, rect.width, rect.height);
 80021d2:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 80021d6:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 80021da:	8002      	strh	r2, [r0, #0]
 80021dc:	8042      	strh	r2, [r0, #2]
 80021de:	8084      	strh	r4, [r0, #4]
 80021e0:	80c1      	strh	r1, [r0, #6]
        }
 80021e2:	bd10      	pop	{r4, pc}

080021e4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 80021e4:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 80021e6:	68c2      	ldr	r2, [r0, #12]
 80021e8:	6841      	ldr	r1, [r0, #4]
 80021ea:	1054      	asrs	r4, r2, #1
    virtual void execute()
 80021ec:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 80021ee:	eb01 0062 	add.w	r0, r1, r2, asr #1
 80021f2:	07d2      	lsls	r2, r2, #31
 80021f4:	bf48      	it	mi
 80021f6:	590a      	ldrmi	r2, [r1, r4]
 80021f8:	689b      	ldr	r3, [r3, #8]
    }
 80021fa:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 80021fe:	bf48      	it	mi
 8002200:	58d3      	ldrmi	r3, [r2, r3]
 8002202:	4718      	bx	r3

08002204 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 8002204:	6843      	ldr	r3, [r0, #4]
 8002206:	b12b      	cbz	r3, 8002214 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 8002208:	6883      	ldr	r3, [r0, #8]
 800220a:	b92b      	cbnz	r3, 8002218 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 800220c:	68c0      	ldr	r0, [r0, #12]
 800220e:	f000 0001 	and.w	r0, r0, #1
 8002212:	4770      	bx	lr
 8002214:	4618      	mov	r0, r3
 8002216:	4770      	bx	lr
 8002218:	2001      	movs	r0, #1
    }
 800221a:	4770      	bx	lr

0800221c <_ZN8touchgfx12NoTransitionD0Ev>:
 800221c:	b510      	push	{r4, lr}
 800221e:	210c      	movs	r1, #12
 8002220:	4604      	mov	r4, r0
 8002222:	f01d fd4f 	bl	801fcc4 <_ZdlPvj>
 8002226:	4620      	mov	r0, r4
 8002228:	bd10      	pop	{r4, pc}

0800222a <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800222a:	b510      	push	{r4, lr}
 800222c:	2110      	movs	r1, #16
 800222e:	4604      	mov	r4, r0
 8002230:	f01d fd48 	bl	801fcc4 <_ZdlPvj>
 8002234:	4620      	mov	r0, r4
 8002236:	bd10      	pop	{r4, pc}

08002238 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 8002238:	b510      	push	{r4, lr}
 800223a:	f44f 71ac 	mov.w	r1, #344	; 0x158
 800223e:	4604      	mov	r4, r0
 8002240:	f01d fd40 	bl	801fcc4 <_ZdlPvj>
 8002244:	4620      	mov	r0, r4
 8002246:	bd10      	pop	{r4, pc}

08002248 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED0Ev>:
class WipeTransition : public Transition
 8002248:	b510      	push	{r4, lr}
 800224a:	2138      	movs	r1, #56	; 0x38
 800224c:	4604      	mov	r4, r0
 800224e:	f01d fd39 	bl	801fcc4 <_ZdlPvj>
 8002252:	4620      	mov	r0, r4
 8002254:	bd10      	pop	{r4, pc}

08002256 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectD0Ev>:
    class FullSolidRect : public Widget
 8002256:	b510      	push	{r4, lr}
 8002258:	2128      	movs	r1, #40	; 0x28
 800225a:	4604      	mov	r4, r0
 800225c:	f01d fd32 	bl	801fcc4 <_ZdlPvj>
 8002260:	4620      	mov	r0, r4
 8002262:	bd10      	pop	{r4, pc}

08002264 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 8002264:	b508      	push	{r3, lr}
        Application::getInstance()->invalidate();
 8002266:	f00e fa11 	bl	801068c <_ZN8touchgfx11Application11getInstanceEv>
    }
 800226a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        Application::getInstance()->invalidate();
 800226e:	f00e bdb1 	b.w	8010dd4 <_ZN8touchgfx11Application10invalidateEv>

08002272 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 8002272:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8002276:	b112      	cbz	r2, 800227e <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 8002278:	6803      	ldr	r3, [r0, #0]
 800227a:	695b      	ldr	r3, [r3, #20]
 800227c:	4718      	bx	r3
    }
 800227e:	4770      	bx	lr

08002280 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 8002280:	b510      	push	{r4, lr}
 8002282:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8002284:	f8d0 013c 	ldr.w	r0, [r0, #316]	; 0x13c
 8002288:	b158      	cbz	r0, 80022a2 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 800228a:	6803      	ldr	r3, [r0, #0]
 800228c:	68db      	ldr	r3, [r3, #12]
 800228e:	4798      	blx	r3
 8002290:	b138      	cbz	r0, 80022a2 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 8002292:	f8d4 013c 	ldr.w	r0, [r4, #316]	; 0x13c
 8002296:	6803      	ldr	r3, [r0, #0]
 8002298:	689b      	ldr	r3, [r3, #8]
 800229a:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 800229c:	2300      	movs	r3, #0
 800229e:	f8c4 313c 	str.w	r3, [r4, #316]	; 0x13c
    }
 80022a2:	bd10      	pop	{r4, pc}

080022a4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv>:
}

void FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl()
{
 80022a4:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80022a8:	e9d0 5a54 	ldrd	r5, sl, [r0, #336]	; 0x150
{
 80022ac:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80022ae:	68a8      	ldr	r0, [r5, #8]
 80022b0:	6803      	ldr	r3, [r0, #0]
 80022b2:	6a1b      	ldr	r3, [r3, #32]
 80022b4:	4798      	blx	r3
 80022b6:	f5b0 7f7e 	cmp.w	r0, #1016	; 0x3f8
 80022ba:	d205      	bcs.n	80022c8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x24>
 80022bc:	4b45      	ldr	r3, [pc, #276]	; (80023d4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x130>)
 80022be:	4a46      	ldr	r2, [pc, #280]	; (80023d8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 80022c0:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80022c2:	4846      	ldr	r0, [pc, #280]	; (80023dc <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x138>)
 80022c4:	f01d fd2c 	bl	801fd20 <__assert_func>
 80022c8:	6868      	ldr	r0, [r5, #4]
 80022ca:	6803      	ldr	r3, [r0, #0]
 80022cc:	6a1b      	ldr	r3, [r3, #32]
 80022ce:	4798      	blx	r3
 80022d0:	280f      	cmp	r0, #15
 80022d2:	d803      	bhi.n	80022dc <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x38>
 80022d4:	4b42      	ldr	r3, [pc, #264]	; (80023e0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x13c>)
 80022d6:	4a40      	ldr	r2, [pc, #256]	; (80023d8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 80022d8:	21a4      	movs	r1, #164	; 0xa4
 80022da:	e7f2      	b.n	80022c2 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80022dc:	68e8      	ldr	r0, [r5, #12]
 80022de:	6803      	ldr	r3, [r0, #0]
 80022e0:	6a1b      	ldr	r3, [r3, #32]
 80022e2:	4798      	blx	r3
 80022e4:	280b      	cmp	r0, #11
 80022e6:	d803      	bhi.n	80022f0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x4c>
 80022e8:	4b3e      	ldr	r3, [pc, #248]	; (80023e4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x140>)
 80022ea:	4a3b      	ldr	r2, [pc, #236]	; (80023d8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 80022ec:	21a5      	movs	r1, #165	; 0xa5
 80022ee:	e7e8      	b.n	80022c2 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x1e>
    if (*currentTrans)
 80022f0:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 80023ec <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x148>
    Application::getInstance()->clearAllTimerWidgets();
 80022f4:	f00e f9ca 	bl	801068c <_ZN8touchgfx11Application11getInstanceEv>
 80022f8:	f00e f9ce 	bl	8010698 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 80022fc:	f8d9 0000 	ldr.w	r0, [r9]
 8002300:	b110      	cbz	r0, 8002308 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 8002302:	6803      	ldr	r3, [r0, #0]
 8002304:	68db      	ldr	r3, [r3, #12]
 8002306:	4798      	blx	r3
    if (*currentTrans)
 8002308:	f8d9 0000 	ldr.w	r0, [r9]
 800230c:	b110      	cbz	r0, 8002314 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 800230e:	6803      	ldr	r3, [r0, #0]
 8002310:	681b      	ldr	r3, [r3, #0]
 8002312:	4798      	blx	r3
    if (*currentScreen)
 8002314:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 80023f0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x14c>
 8002318:	f8d8 0000 	ldr.w	r0, [r8]
 800231c:	b110      	cbz	r0, 8002324 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 800231e:	6803      	ldr	r3, [r0, #0]
 8002320:	695b      	ldr	r3, [r3, #20]
 8002322:	4798      	blx	r3
    if (*currentPresenter)
 8002324:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8002328:	b110      	cbz	r0, 8002330 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 800232a:	6803      	ldr	r3, [r0, #0]
 800232c:	685b      	ldr	r3, [r3, #4]
 800232e:	4798      	blx	r3
    if (*currentScreen)
 8002330:	f8d8 0000 	ldr.w	r0, [r8]
 8002334:	b110      	cbz	r0, 800233c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 8002336:	6803      	ldr	r3, [r0, #0]
 8002338:	681b      	ldr	r3, [r3, #0]
 800233a:	4798      	blx	r3
    if (*currentPresenter)
 800233c:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8002340:	b110      	cbz	r0, 8002348 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 8002342:	6803      	ldr	r3, [r0, #0]
 8002344:	689b      	ldr	r3, [r3, #8]
 8002346:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002348:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 800234a:	6803      	ldr	r3, [r0, #0]
 800234c:	2100      	movs	r1, #0
 800234e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002350:	4798      	blx	r3
        : screenContainer(0), done(false)
 8002352:	f04f 0b00 	mov.w	fp, #0
 8002356:	4b24      	ldr	r3, [pc, #144]	; (80023e8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x144>)
 8002358:	6003      	str	r3, [r0, #0]
 800235a:	4604      	mov	r4, r0
 800235c:	f8c0 b004 	str.w	fp, [r0, #4]
 8002360:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002364:	68a8      	ldr	r0, [r5, #8]
 8002366:	6803      	ldr	r3, [r0, #0]
 8002368:	4659      	mov	r1, fp
 800236a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800236c:	4798      	blx	r3
 800236e:	4606      	mov	r6, r0
 8002370:	f002 fbe8 	bl	8004b44 <_ZN11Screen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002374:	6868      	ldr	r0, [r5, #4]
 8002376:	6803      	ldr	r3, [r0, #0]
 8002378:	4659      	mov	r1, fp
 800237a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800237c:	4798      	blx	r3
 800237e:	4631      	mov	r1, r6
 8002380:	4605      	mov	r5, r0
 8002382:	f002 fb6b 	bl	8004a5c <_ZN16Screen1PresenterC1ER11Screen1View>
    *currentTrans = newTransition;
 8002386:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 800238a:	f8c7 5138 	str.w	r5, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 800238e:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8002392:	b1e5      	cbz	r5, 80023ce <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x12a>
 8002394:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 8002396:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800239a:	6833      	ldr	r3, [r6, #0]
    virtual void DisplayLastAndMaxVlt() {} ;
    virtual void DisplayRunningTime() {} ;

    void bind(Model* m)
    {
        model = m;
 800239c:	f8c5 a008 	str.w	sl, [r5, #8]
 80023a0:	4630      	mov	r0, r6
 80023a2:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 80023a4:	63f5      	str	r5, [r6, #60]	; 0x3c
 80023a6:	4798      	blx	r3
    newPresenter->activate();
 80023a8:	682b      	ldr	r3, [r5, #0]
 80023aa:	4628      	mov	r0, r5
 80023ac:	681b      	ldr	r3, [r3, #0]
 80023ae:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80023b0:	4621      	mov	r1, r4
 80023b2:	4630      	mov	r0, r6
 80023b4:	f00f fe18 	bl	8011fe8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80023b8:	6823      	ldr	r3, [r4, #0]
 80023ba:	4620      	mov	r0, r4
 80023bc:	691b      	ldr	r3, [r3, #16]
 80023be:	4798      	blx	r3
    newTransition->invalidate();
 80023c0:	6823      	ldr	r3, [r4, #0]
 80023c2:	695b      	ldr	r3, [r3, #20]
 80023c4:	4620      	mov	r0, r4
}
 80023c6:	b001      	add	sp, #4
 80023c8:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80023cc:	4718      	bx	r3
    model->bind(newPresenter);
 80023ce:	462b      	mov	r3, r5
 80023d0:	e7e1      	b.n	8002396 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0xf2>
 80023d2:	bf00      	nop
 80023d4:	080216a4 	.word	0x080216a4
 80023d8:	08021732 	.word	0x08021732
 80023dc:	08021836 	.word	0x08021836
 80023e0:	0802187d 	.word	0x0802187d
 80023e4:	08021920 	.word	0x08021920
 80023e8:	08021c64 	.word	0x08021c64
 80023ec:	200153a4 	.word	0x200153a4
 80023f0:	200153a0 	.word	0x200153a0

080023f4 <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80023f4:	4b04      	ldr	r3, [pc, #16]	; (8002408 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 80023f6:	681b      	ldr	r3, [r3, #0]
 80023f8:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 80023fc:	b10a      	cbz	r2, 8002402 <_ZN8touchgfx3HAL3lcdEv+0xe>
 80023fe:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8002400:	b900      	cbnz	r0, 8002404 <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 8002402:	6898      	ldr	r0, [r3, #8]
    }
 8002404:	4770      	bx	lr
 8002406:	bf00      	nop
 8002408:	2001535c 	.word	0x2001535c

0800240c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
 800240c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800240e:	4604      	mov	r4, r0
        animationCounter++;
 8002410:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter <= (animationSteps))
 8002412:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 8002414:	3001      	adds	r0, #1
 8002416:	b2c0      	uxtb	r0, r0
        if (animationCounter <= (animationSteps))
 8002418:	4298      	cmp	r0, r3
    virtual void handleTickEvent()
 800241a:	b089      	sub	sp, #36	; 0x24
        animationCounter++;
 800241c:	72a0      	strb	r0, [r4, #10]
        if (animationCounter <= (animationSteps))
 800241e:	d850      	bhi.n	80024c2 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xb6>
            calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8002420:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8002424:	2100      	movs	r1, #0
 8002426:	f00f fde5 	bl	8011ff4 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
            if (calculatedValue % 2)
 800242a:	f010 0201 	ands.w	r2, r0, #1
 800242e:	b283      	uxth	r3, r0
 8002430:	d04d      	beq.n	80024ce <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xc2>
                calculatedValue += (calculatedValue > 0 ? 1 : -1);
 8002432:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8002436:	2800      	cmp	r0, #0
 8002438:	bfd8      	it	le
 800243a:	460a      	movle	r2, r1
 800243c:	4413      	add	r3, r2
 800243e:	81e3      	strh	r3, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8002440:	4e24      	ldr	r6, [pc, #144]	; (80024d4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xc8>)
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 8002442:	4f25      	ldr	r7, [pc, #148]	; (80024d8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xcc>)
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8002444:	8831      	ldrh	r1, [r6, #0]
                const uint16_t prevSolidWidth = solid.getWidth();
 8002446:	f8b4 c018 	ldrh.w	ip, [r4, #24]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800244a:	89e3      	ldrh	r3, [r4, #14]
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 800244c:	f9b7 0000 	ldrsh.w	r0, [r7]
 8002450:	f8ad 001e 	strh.w	r0, [sp, #30]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8002454:	1aca      	subs	r2, r1, r3
                screenContainer->invalidateRect(r);
 8002456:	6860      	ldr	r0, [r4, #4]
                const uint16_t delta = prevSolidWidth - solid.getWidth();
 8002458:	4463      	add	r3, ip
 800245a:	1a5b      	subs	r3, r3, r1
 800245c:	f8ad 301c 	strh.w	r3, [sp, #28]
                screenContainer->invalidateRect(r);
 8002460:	6803      	ldr	r3, [r0, #0]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8002462:	b212      	sxth	r2, r2
 8002464:	2500      	movs	r5, #0
                screenContainer->invalidateRect(r);
 8002466:	691b      	ldr	r3, [r3, #16]
        rect.width = width;
 8002468:	8322      	strh	r2, [r4, #24]
 800246a:	f8ad 2018 	strh.w	r2, [sp, #24]
 800246e:	f8ad 501a 	strh.w	r5, [sp, #26]
 8002472:	a906      	add	r1, sp, #24
 8002474:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 8002476:	7aa3      	ldrb	r3, [r4, #10]
 8002478:	2b01      	cmp	r3, #1
 800247a:	d126      	bne.n	80024ca <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xbe>
 800247c:	4b17      	ldr	r3, [pc, #92]	; (80024dc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xd0>)
 800247e:	781b      	ldrb	r3, [r3, #0]
 8002480:	b31b      	cbz	r3, 80024ca <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xbe>
            Rect rect = solid.getRect(); // Part to copy between buffers
 8002482:	69a1      	ldr	r1, [r4, #24]
 8002484:	6960      	ldr	r0, [r4, #20]
 8002486:	ab04      	add	r3, sp, #16
 8002488:	c303      	stmia	r3!, {r0, r1}
        return instance;
 800248a:	4b15      	ldr	r3, [pc, #84]	; (80024e0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xd4>)
 800248c:	6818      	ldr	r0, [r3, #0]
            uint16_t* tftFb = HAL::getInstance()->getTFTFrameBuffer();
 800248e:	6803      	ldr	r3, [r0, #0]
 8002490:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002492:	4798      	blx	r3
            source.width = HAL::DISPLAY_WIDTH;
 8002494:	8833      	ldrh	r3, [r6, #0]
 8002496:	f8ad 301c 	strh.w	r3, [sp, #28]
            source.height = HAL::DISPLAY_HEIGHT;
 800249a:	883b      	ldrh	r3, [r7, #0]
 800249c:	f8ad 301e 	strh.w	r3, [sp, #30]
            uint16_t* tftFb = HAL::getInstance()->getTFTFrameBuffer();
 80024a0:	9003      	str	r0, [sp, #12]
        : x(0), y(0), width(0), height(0)
 80024a2:	f8ad 5018 	strh.w	r5, [sp, #24]
 80024a6:	f8ad 501a 	strh.w	r5, [sp, #26]
            HAL::getInstance()->lcd().blitCopy((const uint16_t*)tftFb, source, rect, 255, false);
 80024aa:	f7ff ffa3 	bl	80023f4 <_ZN8touchgfx3HAL3lcdEv>
 80024ae:	22ff      	movs	r2, #255	; 0xff
 80024b0:	6803      	ldr	r3, [r0, #0]
 80024b2:	9200      	str	r2, [sp, #0]
 80024b4:	9501      	str	r5, [sp, #4]
 80024b6:	68dc      	ldr	r4, [r3, #12]
 80024b8:	9903      	ldr	r1, [sp, #12]
 80024ba:	ab04      	add	r3, sp, #16
 80024bc:	aa06      	add	r2, sp, #24
 80024be:	47a0      	blx	r4
 80024c0:	e003      	b.n	80024ca <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xbe>
            done = true;
 80024c2:	2301      	movs	r3, #1
 80024c4:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 80024c6:	2300      	movs	r3, #0
 80024c8:	72a3      	strb	r3, [r4, #10]
    }
 80024ca:	b009      	add	sp, #36	; 0x24
 80024cc:	bdf0      	pop	{r4, r5, r6, r7, pc}
            calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 80024ce:	81e0      	strh	r0, [r4, #14]
 80024d0:	e7b6      	b.n	8002440 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x34>
 80024d2:	bf00      	nop
 80024d4:	20015350 	.word	0x20015350
 80024d8:	20015352 	.word	0x20015352
 80024dc:	2001535a 	.word	0x2001535a
 80024e0:	2001535c 	.word	0x2001535c

080024e4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 80024e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80024e6:	4604      	mov	r4, r0
 80024e8:	4617      	mov	r7, r2
 80024ea:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 80024ec:	f00e f8ee 	bl	80106cc <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 80024f0:	4b0e      	ldr	r3, [pc, #56]	; (800252c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x48>)
 80024f2:	601c      	str	r4, [r3, #0]
      model(m)
 80024f4:	4b0e      	ldr	r3, [pc, #56]	; (8002530 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x4c>)
 80024f6:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 80024f8:	4b0e      	ldr	r3, [pc, #56]	; (8002534 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
          pendingScreenTransitionCallback(0)
 80024fa:	2500      	movs	r5, #0
 80024fc:	e9c4 3550 	strd	r3, r5, [r4, #320]	; 0x140
 8002500:	4b0d      	ldr	r3, [pc, #52]	; (8002538 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 8002502:	e9c4 5552 	strd	r5, r5, [r4, #328]	; 0x148
 8002506:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 8002508:	6803      	ldr	r3, [r0, #0]
 800250a:	4629      	mov	r1, r5
 800250c:	689b      	ldr	r3, [r3, #8]
 800250e:	e9c4 554e 	strd	r5, r5, [r4, #312]	; 0x138
      model(m)
 8002512:	e9c4 7654 	strd	r7, r6, [r4, #336]	; 0x150
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 8002516:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 8002518:	4628      	mov	r0, r5
 800251a:	f002 f9d5 	bl	80048c8 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 800251e:	f7ff ff69 	bl	80023f4 <_ZN8touchgfx3HAL3lcdEv>
 8002522:	f016 f9c0 	bl	80188a6 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
}
 8002526:	4620      	mov	r0, r4
 8002528:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800252a:	bf00      	nop
 800252c:	200153b0 	.word	0x200153b0
 8002530:	08021c18 	.word	0x08021c18
 8002534:	08021c00 	.word	0x08021c00
 8002538:	2001535c 	.word	0x2001535c

0800253c <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800253c:	4b06      	ldr	r3, [pc, #24]	; (8002558 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv+0x1c>)
 800253e:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8002542:	2300      	movs	r3, #0
 8002544:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
    pendingScreenTransitionCallback = &transitionCallback;
 8002548:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 800254c:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8002550:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8002554:	4770      	bx	lr
 8002556:	bf00      	nop
 8002558:	080022a5 	.word	0x080022a5

0800255c <_ZN23FrontendApplicationBase35gotoScreen1ScreenWipeTransitionEastEv>:
 800255c:	4b06      	ldr	r3, [pc, #24]	; (8002578 <_ZN23FrontendApplicationBase35gotoScreen1ScreenWipeTransitionEastEv+0x1c>)
 800255e:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8002562:	2300      	movs	r3, #0
 8002564:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c

void FrontendApplicationBase::gotoScreen1ScreenWipeTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreen1ScreenWipeTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8002568:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 800256c:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8002570:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8002574:	4770      	bx	lr
 8002576:	bf00      	nop
 8002578:	08002741 	.word	0x08002741

0800257c <_ZN23FrontendApplicationBase39gotoScreenGraphScreenWipeTransitionEastEv>:
 800257c:	4b06      	ldr	r3, [pc, #24]	; (8002598 <_ZN23FrontendApplicationBase39gotoScreenGraphScreenWipeTransitionEastEv+0x1c>)
 800257e:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8002582:	2300      	movs	r3, #0
 8002584:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
// ScreenGraph

void FrontendApplicationBase::gotoScreenGraphScreenWipeTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreenGraphScreenWipeTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8002588:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 800258c:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8002590:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8002594:	4770      	bx	lr
 8002596:	bf00      	nop
 8002598:	08002601 	.word	0x08002601

0800259c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>:
    WipeTransition(const uint8_t transitionSteps = 20)
 800259c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800259e:	4604      	mov	r4, r0
 80025a0:	2300      	movs	r3, #0
          solid()
 80025a2:	4a13      	ldr	r2, [pc, #76]	; (80025f0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x54>)
 80025a4:	6002      	str	r2, [r0, #0]
 80025a6:	6043      	str	r3, [r0, #4]
 80025a8:	7203      	strb	r3, [r0, #8]
 80025aa:	7241      	strb	r1, [r0, #9]
 80025ac:	7283      	strb	r3, [r0, #10]
 80025ae:	e9c4 3305 	strd	r3, r3, [r4, #20]
 80025b2:	e9c4 3307 	strd	r3, r3, [r4, #28]
 80025b6:	e9c4 3309 	strd	r3, r3, [r4, #36]	; 0x24
 80025ba:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 80025be:	81e3      	strh	r3, [r4, #14]
 80025c0:	f44f 7380 	mov.w	r3, #256	; 0x100
 80025c4:	6363      	str	r3, [r4, #52]	; 0x34
    class FullSolidRect : public Widget
 80025c6:	4b0b      	ldr	r3, [pc, #44]	; (80025f4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x58>)
 80025c8:	6123      	str	r3, [r4, #16]
            targetValue = HAL::DISPLAY_WIDTH;
 80025ca:	4b0b      	ldr	r3, [pc, #44]	; (80025f8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x5c>)
 80025cc:	f9b3 1000 	ldrsh.w	r1, [r3]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 80025d0:	4b0a      	ldr	r3, [pc, #40]	; (80025fc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x60>)
            targetValue = HAL::DISPLAY_WIDTH;
 80025d2:	81a1      	strh	r1, [r4, #12]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 80025d4:	f9b3 5000 	ldrsh.w	r5, [r3]
          solid()
 80025d8:	3010      	adds	r0, #16
        setWidth(width);
 80025da:	9001      	str	r0, [sp, #4]
 80025dc:	f7ff fda6 	bl	800212c <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 80025e0:	9801      	ldr	r0, [sp, #4]
 80025e2:	4629      	mov	r1, r5
 80025e4:	f7ff fda4 	bl	8002130 <_ZN8touchgfx8Drawable9setHeightEs>
    }
 80025e8:	4620      	mov	r0, r4
 80025ea:	b003      	add	sp, #12
 80025ec:	bd30      	pop	{r4, r5, pc}
 80025ee:	bf00      	nop
 80025f0:	08021cf0 	.word	0x08021cf0
 80025f4:	08021c88 	.word	0x08021c88
 80025f8:	20015350 	.word	0x20015350
 80025fc:	20015352 	.word	0x20015352

08002600 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv>:

void FrontendApplicationBase::gotoScreenGraphScreenWipeTransitionEastImpl()
{
 8002600:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<ScreenGraphView, ScreenGraphPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002604:	e9d0 4a54 	ldrd	r4, sl, [r0, #336]	; 0x150
{
 8002608:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800260a:	68a0      	ldr	r0, [r4, #8]
 800260c:	6803      	ldr	r3, [r0, #0]
 800260e:	6a1b      	ldr	r3, [r3, #32]
 8002610:	4798      	blx	r3
 8002612:	f242 5343 	movw	r3, #9539	; 0x2543
 8002616:	4298      	cmp	r0, r3
 8002618:	d805      	bhi.n	8002626 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x26>
 800261a:	4b42      	ldr	r3, [pc, #264]	; (8002724 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x124>)
 800261c:	4a42      	ldr	r2, [pc, #264]	; (8002728 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x128>)
 800261e:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002620:	4842      	ldr	r0, [pc, #264]	; (800272c <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x12c>)
 8002622:	f01d fb7d 	bl	801fd20 <__assert_func>
 8002626:	6860      	ldr	r0, [r4, #4]
 8002628:	6803      	ldr	r3, [r0, #0]
 800262a:	6a1b      	ldr	r3, [r3, #32]
 800262c:	4798      	blx	r3
 800262e:	280f      	cmp	r0, #15
 8002630:	d803      	bhi.n	800263a <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x3a>
 8002632:	4b3f      	ldr	r3, [pc, #252]	; (8002730 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x130>)
 8002634:	4a3c      	ldr	r2, [pc, #240]	; (8002728 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x128>)
 8002636:	21a4      	movs	r1, #164	; 0xa4
 8002638:	e7f2      	b.n	8002620 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800263a:	68e0      	ldr	r0, [r4, #12]
 800263c:	6803      	ldr	r3, [r0, #0]
 800263e:	6a1b      	ldr	r3, [r3, #32]
 8002640:	4798      	blx	r3
 8002642:	2837      	cmp	r0, #55	; 0x37
 8002644:	d803      	bhi.n	800264e <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x4e>
 8002646:	4b3b      	ldr	r3, [pc, #236]	; (8002734 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x134>)
 8002648:	4a37      	ldr	r2, [pc, #220]	; (8002728 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x128>)
 800264a:	21a5      	movs	r1, #165	; 0xa5
 800264c:	e7e8      	b.n	8002620 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x20>
    if (*currentTrans)
 800264e:	f8df 90e8 	ldr.w	r9, [pc, #232]	; 8002738 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x138>
    Application::getInstance()->clearAllTimerWidgets();
 8002652:	f00e f81b 	bl	801068c <_ZN8touchgfx11Application11getInstanceEv>
 8002656:	f00e f81f 	bl	8010698 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 800265a:	f8d9 0000 	ldr.w	r0, [r9]
 800265e:	b110      	cbz	r0, 8002666 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8002660:	6803      	ldr	r3, [r0, #0]
 8002662:	68db      	ldr	r3, [r3, #12]
 8002664:	4798      	blx	r3
    if (*currentTrans)
 8002666:	f8d9 0000 	ldr.w	r0, [r9]
 800266a:	b110      	cbz	r0, 8002672 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 800266c:	6803      	ldr	r3, [r0, #0]
 800266e:	681b      	ldr	r3, [r3, #0]
 8002670:	4798      	blx	r3
    if (*currentScreen)
 8002672:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 800273c <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x13c>
 8002676:	f8d8 0000 	ldr.w	r0, [r8]
 800267a:	b110      	cbz	r0, 8002682 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 800267c:	6803      	ldr	r3, [r0, #0]
 800267e:	695b      	ldr	r3, [r3, #20]
 8002680:	4798      	blx	r3
    if (*currentPresenter)
 8002682:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8002686:	b110      	cbz	r0, 800268e <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8002688:	6803      	ldr	r3, [r0, #0]
 800268a:	685b      	ldr	r3, [r3, #4]
 800268c:	4798      	blx	r3
    if (*currentScreen)
 800268e:	f8d8 0000 	ldr.w	r0, [r8]
 8002692:	b110      	cbz	r0, 800269a <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8002694:	6803      	ldr	r3, [r0, #0]
 8002696:	681b      	ldr	r3, [r3, #0]
 8002698:	4798      	blx	r3
    if (*currentPresenter)
 800269a:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 800269e:	b110      	cbz	r0, 80026a6 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 80026a0:	6803      	ldr	r3, [r0, #0]
 80026a2:	689b      	ldr	r3, [r3, #8]
 80026a4:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80026a6:	68e0      	ldr	r0, [r4, #12]
 80026a8:	6803      	ldr	r3, [r0, #0]
 80026aa:	2100      	movs	r1, #0
 80026ac:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80026ae:	4798      	blx	r3
 80026b0:	2114      	movs	r1, #20
 80026b2:	4605      	mov	r5, r0
 80026b4:	f7ff ff72 	bl	800259c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80026b8:	68a0      	ldr	r0, [r4, #8]
 80026ba:	6803      	ldr	r3, [r0, #0]
 80026bc:	2100      	movs	r1, #0
 80026be:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80026c0:	4798      	blx	r3
 80026c2:	4606      	mov	r6, r0
 80026c4:	f002 fbfa 	bl	8004ebc <_ZN15ScreenGraphViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80026c8:	6860      	ldr	r0, [r4, #4]
 80026ca:	6803      	ldr	r3, [r0, #0]
 80026cc:	2100      	movs	r1, #0
 80026ce:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80026d0:	4798      	blx	r3
 80026d2:	4631      	mov	r1, r6
 80026d4:	4604      	mov	r4, r0
 80026d6:	f002 fa7f 	bl	8004bd8 <_ZN20ScreenGraphPresenterC1ER15ScreenGraphView>
    *currentTrans = newTransition;
 80026da:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80026de:	f8c7 4138 	str.w	r4, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 80026e2:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80026e6:	b1dc      	cbz	r4, 8002720 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x120>
 80026e8:	1d23      	adds	r3, r4, #4
 80026ea:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80026ee:	6833      	ldr	r3, [r6, #0]
 80026f0:	f8c4 a008 	str.w	sl, [r4, #8]
 80026f4:	4630      	mov	r0, r6
 80026f6:	68db      	ldr	r3, [r3, #12]
 80026f8:	63f4      	str	r4, [r6, #60]	; 0x3c
 80026fa:	4798      	blx	r3
    newPresenter->activate();
 80026fc:	6823      	ldr	r3, [r4, #0]
 80026fe:	4620      	mov	r0, r4
 8002700:	681b      	ldr	r3, [r3, #0]
 8002702:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002704:	4629      	mov	r1, r5
 8002706:	4630      	mov	r0, r6
 8002708:	f00f fc6e 	bl	8011fe8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800270c:	682b      	ldr	r3, [r5, #0]
 800270e:	4628      	mov	r0, r5
 8002710:	691b      	ldr	r3, [r3, #16]
 8002712:	4798      	blx	r3
    newTransition->invalidate();
 8002714:	682b      	ldr	r3, [r5, #0]
 8002716:	4628      	mov	r0, r5
 8002718:	695b      	ldr	r3, [r3, #20]
}
 800271a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800271e:	4718      	bx	r3
    model->bind(newPresenter);
 8002720:	4623      	mov	r3, r4
 8002722:	e7e2      	b.n	80026ea <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0xea>
 8002724:	080216a4 	.word	0x080216a4
 8002728:	080219c3 	.word	0x080219c3
 800272c:	08021836 	.word	0x08021836
 8002730:	0802187d 	.word	0x0802187d
 8002734:	08021920 	.word	0x08021920
 8002738:	200153a4 	.word	0x200153a4
 800273c:	200153a0 	.word	0x200153a0

08002740 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv>:
{
 8002740:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002744:	e9d0 4a54 	ldrd	r4, sl, [r0, #336]	; 0x150
{
 8002748:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800274a:	68a0      	ldr	r0, [r4, #8]
 800274c:	6803      	ldr	r3, [r0, #0]
 800274e:	6a1b      	ldr	r3, [r3, #32]
 8002750:	4798      	blx	r3
 8002752:	f5b0 7f7e 	cmp.w	r0, #1016	; 0x3f8
 8002756:	d205      	bcs.n	8002764 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x24>
 8002758:	4b42      	ldr	r3, [pc, #264]	; (8002864 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x124>)
 800275a:	4a43      	ldr	r2, [pc, #268]	; (8002868 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x128>)
 800275c:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800275e:	4843      	ldr	r0, [pc, #268]	; (800286c <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x12c>)
 8002760:	f01d fade 	bl	801fd20 <__assert_func>
 8002764:	6860      	ldr	r0, [r4, #4]
 8002766:	6803      	ldr	r3, [r0, #0]
 8002768:	6a1b      	ldr	r3, [r3, #32]
 800276a:	4798      	blx	r3
 800276c:	280f      	cmp	r0, #15
 800276e:	d803      	bhi.n	8002778 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x38>
 8002770:	4b3f      	ldr	r3, [pc, #252]	; (8002870 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x130>)
 8002772:	4a3d      	ldr	r2, [pc, #244]	; (8002868 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x128>)
 8002774:	21a4      	movs	r1, #164	; 0xa4
 8002776:	e7f2      	b.n	800275e <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002778:	68e0      	ldr	r0, [r4, #12]
 800277a:	6803      	ldr	r3, [r0, #0]
 800277c:	6a1b      	ldr	r3, [r3, #32]
 800277e:	4798      	blx	r3
 8002780:	2837      	cmp	r0, #55	; 0x37
 8002782:	d803      	bhi.n	800278c <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x4c>
 8002784:	4b3b      	ldr	r3, [pc, #236]	; (8002874 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x134>)
 8002786:	4a38      	ldr	r2, [pc, #224]	; (8002868 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x128>)
 8002788:	21a5      	movs	r1, #165	; 0xa5
 800278a:	e7e8      	b.n	800275e <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x1e>
    if (*currentTrans)
 800278c:	f8df 90e8 	ldr.w	r9, [pc, #232]	; 8002878 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x138>
    Application::getInstance()->clearAllTimerWidgets();
 8002790:	f00d ff7c 	bl	801068c <_ZN8touchgfx11Application11getInstanceEv>
 8002794:	f00d ff80 	bl	8010698 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8002798:	f8d9 0000 	ldr.w	r0, [r9]
 800279c:	b110      	cbz	r0, 80027a4 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x64>
        (*currentTrans)->tearDown();
 800279e:	6803      	ldr	r3, [r0, #0]
 80027a0:	68db      	ldr	r3, [r3, #12]
 80027a2:	4798      	blx	r3
    if (*currentTrans)
 80027a4:	f8d9 0000 	ldr.w	r0, [r9]
 80027a8:	b110      	cbz	r0, 80027b0 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x70>
        (*currentTrans)->~Transition();
 80027aa:	6803      	ldr	r3, [r0, #0]
 80027ac:	681b      	ldr	r3, [r3, #0]
 80027ae:	4798      	blx	r3
    if (*currentScreen)
 80027b0:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 800287c <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x13c>
 80027b4:	f8d8 0000 	ldr.w	r0, [r8]
 80027b8:	b110      	cbz	r0, 80027c0 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 80027ba:	6803      	ldr	r3, [r0, #0]
 80027bc:	695b      	ldr	r3, [r3, #20]
 80027be:	4798      	blx	r3
    if (*currentPresenter)
 80027c0:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 80027c4:	b110      	cbz	r0, 80027cc <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x8c>
        (*currentPresenter)->deactivate();
 80027c6:	6803      	ldr	r3, [r0, #0]
 80027c8:	685b      	ldr	r3, [r3, #4]
 80027ca:	4798      	blx	r3
    if (*currentScreen)
 80027cc:	f8d8 0000 	ldr.w	r0, [r8]
 80027d0:	b110      	cbz	r0, 80027d8 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x98>
        (*currentScreen)->~Screen();
 80027d2:	6803      	ldr	r3, [r0, #0]
 80027d4:	681b      	ldr	r3, [r3, #0]
 80027d6:	4798      	blx	r3
    if (*currentPresenter)
 80027d8:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 80027dc:	b110      	cbz	r0, 80027e4 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 80027de:	6803      	ldr	r3, [r0, #0]
 80027e0:	689b      	ldr	r3, [r3, #8]
 80027e2:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80027e4:	68e0      	ldr	r0, [r4, #12]
 80027e6:	6803      	ldr	r3, [r0, #0]
 80027e8:	2100      	movs	r1, #0
 80027ea:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80027ec:	4798      	blx	r3
 80027ee:	2114      	movs	r1, #20
 80027f0:	4605      	mov	r5, r0
 80027f2:	f7ff fed3 	bl	800259c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80027f6:	68a0      	ldr	r0, [r4, #8]
 80027f8:	6803      	ldr	r3, [r0, #0]
 80027fa:	2100      	movs	r1, #0
 80027fc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80027fe:	4798      	blx	r3
 8002800:	4606      	mov	r6, r0
 8002802:	f002 f99f 	bl	8004b44 <_ZN11Screen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002806:	6860      	ldr	r0, [r4, #4]
 8002808:	6803      	ldr	r3, [r0, #0]
 800280a:	2100      	movs	r1, #0
 800280c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800280e:	4798      	blx	r3
 8002810:	4631      	mov	r1, r6
 8002812:	4604      	mov	r4, r0
 8002814:	f002 f922 	bl	8004a5c <_ZN16Screen1PresenterC1ER11Screen1View>
    *currentTrans = newTransition;
 8002818:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800281c:	f8c7 4138 	str.w	r4, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 8002820:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8002824:	b1dc      	cbz	r4, 800285e <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x11e>
 8002826:	1d23      	adds	r3, r4, #4
 8002828:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800282c:	6833      	ldr	r3, [r6, #0]
 800282e:	f8c4 a008 	str.w	sl, [r4, #8]
 8002832:	4630      	mov	r0, r6
 8002834:	68db      	ldr	r3, [r3, #12]
 8002836:	63f4      	str	r4, [r6, #60]	; 0x3c
 8002838:	4798      	blx	r3
    newPresenter->activate();
 800283a:	6823      	ldr	r3, [r4, #0]
 800283c:	4620      	mov	r0, r4
 800283e:	681b      	ldr	r3, [r3, #0]
 8002840:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002842:	4629      	mov	r1, r5
 8002844:	4630      	mov	r0, r6
 8002846:	f00f fbcf 	bl	8011fe8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800284a:	682b      	ldr	r3, [r5, #0]
 800284c:	4628      	mov	r0, r5
 800284e:	691b      	ldr	r3, [r3, #16]
 8002850:	4798      	blx	r3
    newTransition->invalidate();
 8002852:	682b      	ldr	r3, [r5, #0]
 8002854:	4628      	mov	r0, r5
 8002856:	695b      	ldr	r3, [r3, #20]
}
 8002858:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800285c:	4718      	bx	r3
    model->bind(newPresenter);
 800285e:	4623      	mov	r3, r4
 8002860:	e7e2      	b.n	8002828 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0xe8>
 8002862:	bf00      	nop
 8002864:	080216a4 	.word	0x080216a4
 8002868:	08021ae1 	.word	0x08021ae1
 800286c:	08021836 	.word	0x08021836
 8002870:	0802187d 	.word	0x0802187d
 8002874:	08021920 	.word	0x08021920
 8002878:	200153a4 	.word	0x200153a4
 800287c:	200153a0 	.word	0x200153a0

08002880 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8002880:	6a00      	ldr	r0, [r0, #32]
 8002882:	4770      	bx	lr

08002884 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8002884:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8002886:	4770      	bx	lr

08002888 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8002888:	4770      	bx	lr

0800288a <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 800288a:	888b      	ldrh	r3, [r1, #4]
 800288c:	6980      	ldr	r0, [r0, #24]
 800288e:	680a      	ldr	r2, [r1, #0]
 8002890:	0adb      	lsrs	r3, r3, #11
 8002892:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 8002896:	4410      	add	r0, r2
 8002898:	4770      	bx	lr

0800289a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 800289a:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 800289c:	b1c2      	cbz	r2, 80028d0 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 800289e:	7b13      	ldrb	r3, [r2, #12]
 80028a0:	b1b3      	cbz	r3, 80028d0 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 80028a2:	7b54      	ldrb	r4, [r2, #13]
 80028a4:	7ad2      	ldrb	r2, [r2, #11]
 80028a6:	0224      	lsls	r4, r4, #8
 80028a8:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 80028ac:	4314      	orrs	r4, r2
 80028ae:	69c2      	ldr	r2, [r0, #28]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 80028b0:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 80028b2:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 80028b6:	8813      	ldrh	r3, [r2, #0]
 80028b8:	428b      	cmp	r3, r1
 80028ba:	d102      	bne.n	80028c2 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 80028bc:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 80028c0:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 80028c2:	d805      	bhi.n	80028d0 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 80028c4:	3801      	subs	r0, #1
 80028c6:	b280      	uxth	r0, r0
 80028c8:	3204      	adds	r2, #4
 80028ca:	2800      	cmp	r0, #0
 80028cc:	d1f3      	bne.n	80028b6 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 80028ce:	e7f7      	b.n	80028c0 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 80028d0:	2000      	movs	r0, #0
 80028d2:	e7f5      	b.n	80028c0 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

080028d4 <_ZN8touchgfx13GeneratedFontD0Ev>:
 80028d4:	b510      	push	{r4, lr}
 80028d6:	2128      	movs	r1, #40	; 0x28
 80028d8:	4604      	mov	r4, r0
 80028da:	f01d f9f3 	bl	801fcc4 <_ZdlPvj>
 80028de:	4620      	mov	r0, r4
 80028e0:	bd10      	pop	{r4, pc}
	...

080028e4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* list, uint16_t size, uint16_t height, uint8_t pixBelowBase, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 80028e4:	b530      	push	{r4, r5, lr}
 80028e6:	b089      	sub	sp, #36	; 0x24
 80028e8:	4604      	mov	r4, r0
      arabicTable(formsTable)
 80028ea:	f8bd 5050 	ldrh.w	r5, [sp, #80]	; 0x50
 80028ee:	9506      	str	r5, [sp, #24]
 80028f0:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 80028f4:	9505      	str	r5, [sp, #20]
 80028f6:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 80028fa:	9504      	str	r5, [sp, #16]
 80028fc:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 8002900:	9503      	str	r5, [sp, #12]
 8002902:	f89d 5038 	ldrb.w	r5, [sp, #56]	; 0x38
 8002906:	9502      	str	r5, [sp, #8]
 8002908:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 800290c:	9501      	str	r5, [sp, #4]
 800290e:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 8002912:	9500      	str	r5, [sp, #0]
 8002914:	f00e fefe 	bl	8011714 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>
 8002918:	4b06      	ldr	r3, [pc, #24]	; (8002934 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x50>)
 800291a:	6023      	str	r3, [r4, #0]
 800291c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800291e:	61a3      	str	r3, [r4, #24]
 8002920:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8002922:	61e3      	str	r3, [r4, #28]
 8002924:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8002926:	6223      	str	r3, [r4, #32]
 8002928:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800292a:	6263      	str	r3, [r4, #36]	; 0x24
}
 800292c:	4620      	mov	r0, r4
 800292e:	b009      	add	sp, #36	; 0x24
 8002930:	bd30      	pop	{r4, r5, pc}
 8002932:	bf00      	nop
 8002934:	08021d14 	.word	0x08021d14

08002938 <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 8002938:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800293a:	4770      	bx	lr

0800293c <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 800293c:	4770      	bx	lr

0800293e <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 800293e:	4770      	bx	lr

08002940 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 8002940:	4770      	bx	lr

08002942 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 8002942:	4770      	bx	lr

08002944 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 8002944:	4770      	bx	lr

08002946 <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
 8002946:	b530      	push	{r4, r5, lr}
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
 8002948:	6803      	ldr	r3, [r0, #0]
        rect.width = width;
 800294a:	8101      	strh	r1, [r0, #8]
    virtual void setWidth(int16_t width)
 800294c:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 800294e:	466d      	mov	r5, sp
 8002950:	4601      	mov	r1, r0
 8002952:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setWidth(int16_t width)
 8002956:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8002958:	4628      	mov	r0, r5
 800295a:	4798      	blx	r3
 800295c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002960:	343c      	adds	r4, #60	; 0x3c
 8002962:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 8002966:	b005      	add	sp, #20
 8002968:	bd30      	pop	{r4, r5, pc}

0800296a <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 800296a:	b530      	push	{r4, r5, lr}
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
 800296c:	6803      	ldr	r3, [r0, #0]
        rect.height = height;
 800296e:	8141      	strh	r1, [r0, #10]
    virtual void setHeight(int16_t height)
 8002970:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 8002972:	466d      	mov	r5, sp
 8002974:	4601      	mov	r1, r0
 8002976:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setHeight(int16_t height)
 800297a:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 800297c:	4628      	mov	r0, r5
 800297e:	4798      	blx	r3
 8002980:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002984:	343c      	adds	r4, #60	; 0x3c
 8002986:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 800298a:	b005      	add	sp, #20
 800298c:	bd30      	pop	{r4, r5, pc}

0800298e <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 800298e:	2200      	movs	r2, #0
 8002990:	8002      	strh	r2, [r0, #0]
 8002992:	8042      	strh	r2, [r0, #2]
 8002994:	8082      	strh	r2, [r0, #4]
 8002996:	80c2      	strh	r2, [r0, #6]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8002998:	4770      	bx	lr

0800299a <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 800299a:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
    }
 800299e:	4770      	bx	lr

080029a0 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80029a0:	b570      	push	{r4, r5, r6, lr}
    {
        setX(x);
 80029a2:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80029a4:	4604      	mov	r4, r0
        setX(x);
 80029a6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80029a8:	4615      	mov	r5, r2
        setX(x);
 80029aa:	4798      	blx	r3
        setBaselineY(baselineY);
 80029ac:	6823      	ldr	r3, [r4, #0]
 80029ae:	4629      	mov	r1, r5
 80029b0:	4620      	mov	r0, r4
 80029b2:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    }
 80029b4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 80029b8:	4718      	bx	r3

080029ba <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
 80029ba:	2000      	movs	r0, #0
 80029bc:	4770      	bx	lr

080029be <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 80029be:	6c80      	ldr	r0, [r0, #72]	; 0x48
 80029c0:	4770      	bx	lr

080029c2 <_ZN15Screen1ViewBaseD1Ev>:

class Screen1ViewBase : public touchgfx::View<Screen1Presenter>
{
public:
    Screen1ViewBase();
    virtual ~Screen1ViewBase() {}
 80029c2:	4770      	bx	lr

080029c4 <_ZN15Screen1ViewBase17ButtonDownClickedEv>:
     * Virtual Action Handlers
     */
    virtual void ButtonDownClicked()
    {
        // Override and implement this function in Screen1
    }
 80029c4:	4770      	bx	lr

080029c6 <_ZN15Screen1ViewBase15ButtonUpClickedEv>:

    virtual void ButtonUpClicked()
    {
        // Override and implement this function in Screen1
    }
 80029c6:	4770      	bx	lr

080029c8 <_ZN15Screen1ViewBase18ButtonStartClickedEv>:

    virtual void ButtonStartClicked()
    {
        // Override and implement this function in Screen1
    }
 80029c8:	4770      	bx	lr

080029ca <_ZN15Screen1ViewBase11setupScreenEv>:
}

void Screen1ViewBase::setupScreen()
{

}
 80029ca:	4770      	bx	lr

080029cc <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>:
 * @tparam T Generic type parameter. Typically a AbstractButtonContainer subclass.
 *
 * @see AbstractButtonContainer, BoxWithBorder
 */
template <class T>
class BoxWithBorderButtonStyle : public T
 80029cc:	4770      	bx	lr

080029ce <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>:
     *
     * @see setPressed
     */
    bool getPressed()
    {
        return pressed;
 80029ce:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
    colortype borderDown;    ///< The border down

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
    {
        borderBox.setColor(T::getPressed() ? down : up);
 80029d2:	b14b      	cbz	r3, 80029e8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x1a>
 80029d4:	f100 026c 	add.w	r2, r0, #108	; 0x6c
 80029d8:	6812      	ldr	r2, [r2, #0]
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 80029da:	65c2      	str	r2, [r0, #92]	; 0x5c
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 80029dc:	b13b      	cbz	r3, 80029ee <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x20>
 80029de:	f100 0374 	add.w	r3, r0, #116	; 0x74
 80029e2:	681b      	ldr	r3, [r3, #0]
     *
     * @see setColor, getBorderColor, Color::getColorFromRGB
     */
    void setBorderColor(colortype colorBorder)
    {
        borderColor = colorBorder;
 80029e4:	6603      	str	r3, [r0, #96]	; 0x60
        T::handlePressedUpdated();
    }
 80029e6:	4770      	bx	lr
        borderBox.setColor(T::getPressed() ? down : up);
 80029e8:	f100 0268 	add.w	r2, r0, #104	; 0x68
 80029ec:	e7f4      	b.n	80029d8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0xa>
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 80029ee:	f100 0370 	add.w	r3, r0, #112	; 0x70
 80029f2:	e7f6      	b.n	80029e2 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x14>

080029f4 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80029f4:	4770      	bx	lr

080029f6 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
 80029f6:	4770      	bx	lr

080029f8 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED1Ev>:
 * The position of the icon can be adjusted with setIconXY.
 *
 * @see AbstractButtonContainer
 */
template <class T>
class IconButtonStyle : public T
 80029f8:	4770      	bx	lr

080029fa <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 80029fa:	4770      	bx	lr

080029fc <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80029fc:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80029fe:	68c2      	ldr	r2, [r0, #12]
 8002a00:	6844      	ldr	r4, [r0, #4]
 8002a02:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002a04:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002a06:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002a0a:	07d2      	lsls	r2, r2, #31
 8002a0c:	bf48      	it	mi
 8002a0e:	5962      	ldrmi	r2, [r4, r5]
 8002a10:	689b      	ldr	r3, [r3, #8]
    }
 8002a12:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002a14:	bf48      	it	mi
 8002a16:	58d3      	ldrmi	r3, [r2, r3]
 8002a18:	4718      	bx	r3

08002a1a <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8002a1a:	6843      	ldr	r3, [r0, #4]
 8002a1c:	b12b      	cbz	r3, 8002a2a <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x10>
 8002a1e:	6883      	ldr	r3, [r0, #8]
 8002a20:	b92b      	cbnz	r3, 8002a2e <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 8002a22:	68c0      	ldr	r0, [r0, #12]
 8002a24:	f000 0001 	and.w	r0, r0, #1
 8002a28:	4770      	bx	lr
 8002a2a:	4618      	mov	r0, r3
 8002a2c:	4770      	bx	lr
 8002a2e:	2001      	movs	r0, #1
    }
 8002a30:	4770      	bx	lr

08002a32 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8002a32:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002a34:	68c2      	ldr	r2, [r0, #12]
 8002a36:	6844      	ldr	r4, [r0, #4]
 8002a38:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002a3a:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002a3c:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002a40:	07d2      	lsls	r2, r2, #31
 8002a42:	bf48      	it	mi
 8002a44:	5962      	ldrmi	r2, [r4, r5]
 8002a46:	689b      	ldr	r3, [r3, #8]
    }
 8002a48:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002a4a:	bf48      	it	mi
 8002a4c:	58d3      	ldrmi	r3, [r2, r3]
 8002a4e:	4718      	bx	r3

08002a50 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8002a50:	6843      	ldr	r3, [r0, #4]
 8002a52:	b12b      	cbz	r3, 8002a60 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8002a54:	6883      	ldr	r3, [r0, #8]
 8002a56:	b92b      	cbnz	r3, 8002a64 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8002a58:	68c0      	ldr	r0, [r0, #12]
 8002a5a:	f000 0001 	and.w	r0, r0, #1
 8002a5e:	4770      	bx	lr
 8002a60:	4618      	mov	r0, r3
 8002a62:	4770      	bx	lr
 8002a64:	2001      	movs	r0, #1
    }
 8002a66:	4770      	bx	lr

08002a68 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE18handleAlphaUpdatedEv>:
    }

    /** @copydoc Image::getAlpha() */
    uint8_t getAlpha() const
    {
        return alpha;
 8002a68:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
     *
     * @note The user code must call invalidate() in order to update the display.
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002a6c:	f880 30a4 	strb.w	r3, [r0, #164]	; 0xa4
    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002a70:	f880 305a 	strb.w	r3, [r0, #90]	; 0x5a
    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        iconImage.setAlpha(T::getAlpha());
        T::handleAlphaUpdated();
    }
 8002a74:	4770      	bx	lr

08002a76 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE18handleAlphaUpdatedEv>:
 8002a76:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
 8002a7a:	f880 305a 	strb.w	r3, [r0, #90]	; 0x5a
    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        borderBox.setAlpha(T::getAlpha());
        T::handleAlphaUpdated();
    }
 8002a7e:	4770      	bx	lr

08002a80 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>:
    virtual void handlePressedUpdated()
 8002a80:	b510      	push	{r4, lr}
 8002a82:	4604      	mov	r4, r0
        iconImage.setBitmap(T::getPressed() ? iconPressed : iconReleased);
 8002a84:	307c      	adds	r0, #124	; 0x7c
 8002a86:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 8002a8a:	b13b      	cbz	r3, 8002a9c <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0x1c>
 8002a8c:	f104 017a 	add.w	r1, r4, #122	; 0x7a
 8002a90:	f00b f94e 	bl	800dd30 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        T::handlePressedUpdated();
 8002a94:	4620      	mov	r0, r4
 8002a96:	f7ff ff9a 	bl	80029ce <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
    }
 8002a9a:	bd10      	pop	{r4, pc}
        iconImage.setBitmap(T::getPressed() ? iconPressed : iconReleased);
 8002a9c:	f104 0178 	add.w	r1, r4, #120	; 0x78
 8002aa0:	e7f6      	b.n	8002a90 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0x10>

08002aa2 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 8002aa2:	b510      	push	{r4, lr}
 8002aa4:	214c      	movs	r1, #76	; 0x4c
 8002aa6:	4604      	mov	r4, r0
 8002aa8:	f01d f90c 	bl	801fcc4 <_ZdlPvj>
 8002aac:	4620      	mov	r0, r4
 8002aae:	bd10      	pop	{r4, pc}

08002ab0 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED0Ev>:
class BoxWithBorderButtonStyle : public T
 8002ab0:	b510      	push	{r4, lr}
 8002ab2:	2178      	movs	r1, #120	; 0x78
 8002ab4:	4604      	mov	r4, r0
 8002ab6:	f01d f905 	bl	801fcc4 <_ZdlPvj>
 8002aba:	4620      	mov	r0, r4
 8002abc:	bd10      	pop	{r4, pc}

08002abe <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED0Ev>:
class IconButtonStyle : public T
 8002abe:	b510      	push	{r4, lr}
 8002ac0:	21a8      	movs	r1, #168	; 0xa8
 8002ac2:	4604      	mov	r4, r0
 8002ac4:	f01d f8fe 	bl	801fcc4 <_ZdlPvj>
 8002ac8:	4620      	mov	r0, r4
 8002aca:	bd10      	pop	{r4, pc}

08002acc <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002acc:	b510      	push	{r4, lr}
 8002ace:	2110      	movs	r1, #16
 8002ad0:	4604      	mov	r4, r0
 8002ad2:	f01d f8f7 	bl	801fcc4 <_ZdlPvj>
 8002ad6:	4620      	mov	r0, r4
 8002ad8:	bd10      	pop	{r4, pc}

08002ada <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
 8002ada:	b510      	push	{r4, lr}
 8002adc:	2110      	movs	r1, #16
 8002ade:	4604      	mov	r4, r0
 8002ae0:	f01d f8f0 	bl	801fcc4 <_ZdlPvj>
 8002ae4:	4620      	mov	r0, r4
 8002ae6:	bd10      	pop	{r4, pc}

08002ae8 <_ZN15Screen1ViewBaseD0Ev>:
    virtual ~Screen1ViewBase() {}
 8002ae8:	b510      	push	{r4, lr}
 8002aea:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
 8002aee:	4604      	mov	r4, r0
 8002af0:	f01d f8e8 	bl	801fcc4 <_ZdlPvj>
 8002af4:	4620      	mov	r0, r4
 8002af6:	bd10      	pop	{r4, pc}

08002af8 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv>:
    /**
     * Executes the previously set action.
     *
     * @see setAction
     */
    virtual void executeAction()
 8002af8:	b510      	push	{r4, lr}
 8002afa:	4604      	mov	r4, r0
    {
        if (action && action->isValid())
 8002afc:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8002afe:	b150      	cbz	r0, 8002b16 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1e>
 8002b00:	6803      	ldr	r3, [r0, #0]
 8002b02:	68db      	ldr	r3, [r3, #12]
 8002b04:	4798      	blx	r3
 8002b06:	b130      	cbz	r0, 8002b16 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1e>
        {
            action->execute(*this);
 8002b08:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8002b0a:	6803      	ldr	r3, [r0, #0]
 8002b0c:	4621      	mov	r1, r4
 8002b0e:	689b      	ldr	r3, [r3, #8]
        }
    }
 8002b10:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            action->execute(*this);
 8002b14:	4718      	bx	r3
    }
 8002b16:	bd10      	pop	{r4, pc}

08002b18 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:
    }
}

void Screen1ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &ButtonDown)
 8002b18:	f100 02c4 	add.w	r2, r0, #196	; 0xc4
 8002b1c:	4291      	cmp	r1, r2
 8002b1e:	d102      	bne.n	8002b26 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xe>
    {
        //ButtonUpInteraction
        //When ButtonDown clicked call virtual function
        //Call ButtonDownClicked
        ButtonDownClicked();
 8002b20:	6803      	ldr	r3, [r0, #0]
 8002b22:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    else if (&src == &ButtonUp)
    {
        //ButtownDownInteraction
        //When ButtonUp clicked call virtual function
        //Call ButtonUpClicked
        ButtonUpClicked();
 8002b24:	4718      	bx	r3
    else if (&src == &ButtonUp)
 8002b26:	f500 72b6 	add.w	r2, r0, #364	; 0x16c
 8002b2a:	4291      	cmp	r1, r2
 8002b2c:	d102      	bne.n	8002b34 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1c>
        ButtonUpClicked();
 8002b2e:	6803      	ldr	r3, [r0, #0]
 8002b30:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002b32:	e7f7      	b.n	8002b24 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xc>
    }
}
 8002b34:	4770      	bx	lr

08002b36 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE>:
     *
     * @return The click type of this event.
     */
    ClickEventType getType() const
    {
        return clickEventType;
 8002b36:	790b      	ldrb	r3, [r1, #4]
     *
     * @param  event The click event.
     *
     * @see setAction, setPressed, getPressed
     */
    virtual void handleClickEvent(const ClickEvent& event)
 8002b38:	b570      	push	{r4, r5, r6, lr}
        return pressed;
 8002b3a:	f890 602c 	ldrb.w	r6, [r0, #44]	; 0x2c
 8002b3e:	4604      	mov	r4, r0
 8002b40:	460d      	mov	r5, r1
    {
        bool wasPressed = getPressed();
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 8002b42:	b99b      	cbnz	r3, 8002b6c <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x36>
 8002b44:	b98e      	cbnz	r6, 8002b6a <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
 8002b46:	fab3 f383 	clz	r3, r3
 8002b4a:	095b      	lsrs	r3, r3, #5
 8002b4c:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
        handlePressedUpdated();
 8002b50:	6823      	ldr	r3, [r4, #0]
 8002b52:	4620      	mov	r0, r4
 8002b54:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8002b58:	4798      	blx	r3
        {
            setPressed(newPressedValue);
            invalidate();
 8002b5a:	6823      	ldr	r3, [r4, #0]
 8002b5c:	4620      	mov	r0, r4
 8002b5e:	695b      	ldr	r3, [r3, #20]
 8002b60:	4798      	blx	r3
        }
        if (wasPressed && (event.getType() == ClickEvent::RELEASED))
 8002b62:	b116      	cbz	r6, 8002b6a <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
 8002b64:	792b      	ldrb	r3, [r5, #4]
 8002b66:	2b01      	cmp	r3, #1
 8002b68:	d003      	beq.n	8002b72 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x3c>
        {
            executeAction();
        }
    }
 8002b6a:	bd70      	pop	{r4, r5, r6, pc}
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 8002b6c:	2e00      	cmp	r6, #0
 8002b6e:	d0fc      	beq.n	8002b6a <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
 8002b70:	e7e9      	b.n	8002b46 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x10>
            executeAction();
 8002b72:	6823      	ldr	r3, [r4, #0]
 8002b74:	4620      	mov	r0, r4
 8002b76:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
    }
 8002b7a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            executeAction();
 8002b7e:	4718      	bx	r3

08002b80 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8002b80:	6803      	ldr	r3, [r0, #0]
    virtual void setBaselineY(int16_t baselineY)
 8002b82:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8002b84:	6b5e      	ldr	r6, [r3, #52]	; 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002b86:	4b12      	ldr	r3, [pc, #72]	; (8002bd0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 8002b88:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
 8002b8a:	4604      	mov	r4, r0
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8002b8c:	b28d      	uxth	r5, r1
 8002b8e:	b92b      	cbnz	r3, 8002b9c <_ZN8touchgfx8TextArea12setBaselineYEs+0x1c>
 8002b90:	4b10      	ldr	r3, [pc, #64]	; (8002bd4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 8002b92:	4a11      	ldr	r2, [pc, #68]	; (8002bd8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8002b94:	216c      	movs	r1, #108	; 0x6c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002b96:	4811      	ldr	r0, [pc, #68]	; (8002bdc <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 8002b98:	f01d f8c2 	bl	801fd20 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8002b9c:	4910      	ldr	r1, [pc, #64]	; (8002be0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 8002b9e:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002ba0:	8809      	ldrh	r1, [r1, #0]
 8002ba2:	4291      	cmp	r1, r2
 8002ba4:	d803      	bhi.n	8002bae <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 8002ba6:	4b0f      	ldr	r3, [pc, #60]	; (8002be4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 8002ba8:	4a0b      	ldr	r2, [pc, #44]	; (8002bd8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8002baa:	216d      	movs	r1, #109	; 0x6d
 8002bac:	e7f3      	b.n	8002b96 <_ZN8touchgfx8TextArea12setBaselineYEs+0x16>
        return fonts[typedTexts[typedTextId].fontIdx];
 8002bae:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8002bb2:	4b0d      	ldr	r3, [pc, #52]	; (8002be8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 8002bb4:	681b      	ldr	r3, [r3, #0]
 8002bb6:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8002bba:	6803      	ldr	r3, [r0, #0]
 8002bbc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002bbe:	4798      	blx	r3
 8002bc0:	1a28      	subs	r0, r5, r0
 8002bc2:	b201      	sxth	r1, r0
 8002bc4:	4633      	mov	r3, r6
 8002bc6:	4620      	mov	r0, r4
    }
 8002bc8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8002bcc:	4718      	bx	r3
 8002bce:	bf00      	nop
 8002bd0:	200153b4 	.word	0x200153b4
 8002bd4:	08021d64 	.word	0x08021d64
 8002bd8:	08021da6 	.word	0x08021da6
 8002bdc:	08021de1 	.word	0x08021de1
 8002be0:	200153b8 	.word	0x200153b8
 8002be4:	08021e28 	.word	0x08021e28
 8002be8:	200153bc 	.word	0x200153bc

08002bec <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    if (&src == &buttonStart)
 8002bec:	f500 732a 	add.w	r3, r0, #680	; 0x2a8
 8002bf0:	428b      	cmp	r3, r1
{
 8002bf2:	b510      	push	{r4, lr}
 8002bf4:	4604      	mov	r4, r0
    if (&src == &buttonStart)
 8002bf6:	d109      	bne.n	8002c0c <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x20>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8002bf8:	f00d fd48 	bl	801068c <_ZN8touchgfx11Application11getInstanceEv>
        application().gotoScreenGraphScreenWipeTransitionEast();
 8002bfc:	f7ff fcbe 	bl	800257c <_ZN23FrontendApplicationBase39gotoScreenGraphScreenWipeTransitionEastEv>
        ButtonStartClicked();
 8002c00:	6823      	ldr	r3, [r4, #0]
 8002c02:	4620      	mov	r0, r4
 8002c04:	6b5b      	ldr	r3, [r3, #52]	; 0x34
}
 8002c06:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        ButtonStartClicked();
 8002c0a:	4718      	bx	r3
}
 8002c0c:	bd10      	pop	{r4, pc}

08002c0e <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 8002c0e:	2200      	movs	r2, #0
 8002c10:	f04f 31ff 	mov.w	r1, #4294967295
 8002c14:	e9c0 2100 	strd	r2, r1, [r0]
              text(0)
 8002c18:	6082      	str	r2, [r0, #8]
    }
 8002c1a:	4770      	bx	lr

08002c1c <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 8002c1c:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 8002c1e:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 8002c20:	4604      	mov	r4, r0
        setX(x);
 8002c22:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setXY(int16_t x, int16_t y)
 8002c24:	4615      	mov	r5, r2
        setX(x);
 8002c26:	4798      	blx	r3
        setY(y);
 8002c28:	6823      	ldr	r3, [r4, #0]
 8002c2a:	4629      	mov	r1, r5
 8002c2c:	4620      	mov	r0, r4
 8002c2e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    }
 8002c30:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 8002c34:	4718      	bx	r3

08002c36 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>:
        iconReleased = newIconReleased;
 8002c36:	880b      	ldrh	r3, [r1, #0]
    virtual void setIconBitmaps(const Bitmap& newIconReleased, const Bitmap& newIconPressed)
 8002c38:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
        iconReleased = newIconReleased;
 8002c3c:	f8a0 3078 	strh.w	r3, [r0, #120]	; 0x78
        iconPressed = newIconPressed;
 8002c40:	8813      	ldrh	r3, [r2, #0]
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
 8002c42:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
        iconPressed = newIconPressed;
 8002c46:	f8a0 307a 	strh.w	r3, [r0, #122]	; 0x7a
    virtual void setIconBitmaps(const Bitmap& newIconReleased, const Bitmap& newIconPressed)
 8002c4a:	4604      	mov	r4, r0
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
 8002c4c:	4610      	mov	r0, r2
    virtual void setIconBitmaps(const Bitmap& newIconReleased, const Bitmap& newIconPressed)
 8002c4e:	4690      	mov	r8, r2
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
 8002c50:	f010 ff4c 	bl	8013aec <_ZNK8touchgfx6Bitmap8getWidthEv>
 8002c54:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8002c58:	4607      	mov	r7, r0
 8002c5a:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8002c5e:	4640      	mov	r0, r8
 8002c60:	f3c3 064f 	ubfx	r6, r3, #1, #16
 8002c64:	f010 ff76 	bl	8013b54 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8002c68:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8002c6c:	f3c5 054f 	ubfx	r5, r5, #1, #16
 8002c70:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8002c74:	eb07 77d7 	add.w	r7, r7, r7, lsr #31
 8002c78:	eba6 0260 	sub.w	r2, r6, r0, asr #1
 8002c7c:	eba5 0767 	sub.w	r7, r5, r7, asr #1
 8002c80:	f104 007c 	add.w	r0, r4, #124	; 0x7c
 8002c84:	b239      	sxth	r1, r7
 8002c86:	b212      	sxth	r2, r2
 8002c88:	f7ff ffc8 	bl	8002c1c <_ZN8touchgfx8Drawable5setXYEss>
        handlePressedUpdated();
 8002c8c:	6823      	ldr	r3, [r4, #0]
 8002c8e:	4620      	mov	r0, r4
 8002c90:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
    }
 8002c94:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
        handlePressedUpdated();
 8002c98:	4718      	bx	r3

08002c9a <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8002c9a:	b570      	push	{r4, r5, r6, lr}
 8002c9c:	4604      	mov	r4, r0
 8002c9e:	461d      	mov	r5, r3
 8002ca0:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 8002ca4:	f7ff ffba 	bl	8002c1c <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8002ca8:	6823      	ldr	r3, [r4, #0]
 8002caa:	4629      	mov	r1, r5
 8002cac:	4620      	mov	r0, r4
 8002cae:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002cb0:	4798      	blx	r3
        setHeight(height);
 8002cb2:	6823      	ldr	r3, [r4, #0]
 8002cb4:	4631      	mov	r1, r6
 8002cb6:	4620      	mov	r0, r4
 8002cb8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 8002cba:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 8002cbe:	4718      	bx	r3

08002cc0 <_ZN8touchgfx6WidgetC1Ev>:
 8002cc0:	2200      	movs	r2, #0
 8002cc2:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8002cc6:	e9c0 2203 	strd	r2, r2, [r0, #12]
          visible(true)
 8002cca:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8002cce:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8002cd2:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002cd6:	8482      	strh	r2, [r0, #36]	; 0x24
class Widget : public Drawable
 8002cd8:	4a01      	ldr	r2, [pc, #4]	; (8002ce0 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 8002cda:	6002      	str	r2, [r0, #0]
 8002cdc:	4770      	bx	lr
 8002cde:	bf00      	nop
 8002ce0:	08021e70 	.word	0x08021e70

08002ce4 <_ZN8touchgfx3BoxC1Ev>:
    Box()
 8002ce4:	b510      	push	{r4, lr}
        : Widget(), alpha(255), color(0)
 8002ce6:	2226      	movs	r2, #38	; 0x26
    Box()
 8002ce8:	4604      	mov	r4, r0
        : Widget(), alpha(255), color(0)
 8002cea:	2100      	movs	r1, #0
 8002cec:	f01d f99e 	bl	802002c <memset>
 8002cf0:	4620      	mov	r0, r4
 8002cf2:	f7ff ffe5 	bl	8002cc0 <_ZN8touchgfx6WidgetC1Ev>
 8002cf6:	4b04      	ldr	r3, [pc, #16]	; (8002d08 <_ZN8touchgfx3BoxC1Ev+0x24>)
 8002cf8:	6023      	str	r3, [r4, #0]
 8002cfa:	23ff      	movs	r3, #255	; 0xff
 8002cfc:	f884 3026 	strb.w	r3, [r4, #38]	; 0x26
        : color(col)
 8002d00:	2300      	movs	r3, #0
 8002d02:	62a3      	str	r3, [r4, #40]	; 0x28
    }
 8002d04:	4620      	mov	r0, r4
 8002d06:	bd10      	pop	{r4, pc}
 8002d08:	0802350c 	.word	0x0802350c

08002d0c <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
    Image(const Bitmap& bmp = Bitmap())
 8002d0c:	b538      	push	{r3, r4, r5, lr}
        : Widget(), bitmap(bmp), alpha(255)
 8002d0e:	2226      	movs	r2, #38	; 0x26
    Image(const Bitmap& bmp = Bitmap())
 8002d10:	4604      	mov	r4, r0
 8002d12:	460d      	mov	r5, r1
        : Widget(), bitmap(bmp), alpha(255)
 8002d14:	2100      	movs	r1, #0
 8002d16:	f01d f989 	bl	802002c <memset>
 8002d1a:	4620      	mov	r0, r4
 8002d1c:	f7ff ffd0 	bl	8002cc0 <_ZN8touchgfx6WidgetC1Ev>
 8002d20:	4b06      	ldr	r3, [pc, #24]	; (8002d3c <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x30>)
 8002d22:	6023      	str	r3, [r4, #0]
 8002d24:	882b      	ldrh	r3, [r5, #0]
 8002d26:	84e3      	strh	r3, [r4, #38]	; 0x26
 8002d28:	23ff      	movs	r3, #255	; 0xff
        Image::setBitmap(bmp);
 8002d2a:	4620      	mov	r0, r4
        : Widget(), bitmap(bmp), alpha(255)
 8002d2c:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
        Image::setBitmap(bmp);
 8002d30:	4629      	mov	r1, r5
 8002d32:	f00a fffd 	bl	800dd30 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    }
 8002d36:	4620      	mov	r0, r4
 8002d38:	bd38      	pop	{r3, r4, r5, pc}
 8002d3a:	bf00      	nop
 8002d3c:	08023650 	.word	0x08023650

08002d40 <_ZN8touchgfx8TextAreaC1Ev>:
    TextArea()
 8002d40:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002d42:	2226      	movs	r2, #38	; 0x26
    TextArea()
 8002d44:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002d46:	2100      	movs	r1, #0
 8002d48:	f01d f970 	bl	802002c <memset>
 8002d4c:	4620      	mov	r0, r4
 8002d4e:	f7ff ffb7 	bl	8002cc0 <_ZN8touchgfx6WidgetC1Ev>
 8002d52:	4b0a      	ldr	r3, [pc, #40]	; (8002d7c <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 8002d54:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 8002d56:	4b0a      	ldr	r3, [pc, #40]	; (8002d80 <_ZN8touchgfx8TextAreaC1Ev+0x40>)
 8002d58:	62a3      	str	r3, [r4, #40]	; 0x28
 8002d5a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002d5e:	85a3      	strh	r3, [r4, #44]	; 0x2c
 8002d60:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 8002d64:	2300      	movs	r3, #0
 8002d66:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8002d6a:	f04f 32ff 	mov.w	r2, #4294967295
              text(0)
 8002d6e:	e9c4 2310 	strd	r2, r3, [r4, #64]	; 0x40
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002d72:	8723      	strh	r3, [r4, #56]	; 0x38
 8002d74:	63e3      	str	r3, [r4, #60]	; 0x3c
    }
 8002d76:	4620      	mov	r0, r4
 8002d78:	bd10      	pop	{r4, pc}
 8002d7a:	bf00      	nop
 8002d7c:	0802347c 	.word	0x0802347c
 8002d80:	0802169c 	.word	0x0802169c

08002d84 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
        return typedTextId < numberOfTypedTexts;
 8002d84:	4b1b      	ldr	r3, [pc, #108]	; (8002df4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x70>)
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 8002d86:	b573      	push	{r0, r1, r4, r5, r6, lr}
    {
        if (typedText.hasValidId())
 8002d88:	881b      	ldrh	r3, [r3, #0]
 8002d8a:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 8002d8c:	428b      	cmp	r3, r1
    void updateTextPosition()
 8002d8e:	4606      	mov	r6, r0
        if (typedText.hasValidId())
 8002d90:	d92b      	bls.n	8002dea <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x66>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002d92:	4b19      	ldr	r3, [pc, #100]	; (8002df8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x74>)
 8002d94:	681b      	ldr	r3, [r3, #0]
 8002d96:	b92b      	cbnz	r3, 8002da4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 8002d98:	4b18      	ldr	r3, [pc, #96]	; (8002dfc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x78>)
 8002d9a:	4a19      	ldr	r2, [pc, #100]	; (8002e00 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x7c>)
 8002d9c:	4819      	ldr	r0, [pc, #100]	; (8002e04 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 8002d9e:	216c      	movs	r1, #108	; 0x6c
 8002da0:	f01c ffbe 	bl	801fd20 <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 8002da4:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8002da8:	4b17      	ldr	r3, [pc, #92]	; (8002e08 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x84>)
 8002daa:	681b      	ldr	r3, [r3, #0]
 8002dac:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 8002db0:	4b16      	ldr	r3, [pc, #88]	; (8002e0c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x88>)
 8002db2:	6818      	ldr	r0, [r3, #0]
 8002db4:	f001 fdc4 	bl	8004940 <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8002db8:	682b      	ldr	r3, [r5, #0]
 8002dba:	9001      	str	r0, [sp, #4]
 8002dbc:	4601      	mov	r1, r0
 8002dbe:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002dc0:	4628      	mov	r0, r5
 8002dc2:	4798      	blx	r3
 8002dc4:	682b      	ldr	r3, [r5, #0]
 8002dc6:	9901      	ldr	r1, [sp, #4]
 8002dc8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002dca:	4604      	mov	r4, r0
 8002dcc:	4628      	mov	r0, r5
 8002dce:	4798      	blx	r3
 8002dd0:	682b      	ldr	r3, [r5, #0]
 8002dd2:	9901      	ldr	r1, [sp, #4]
 8002dd4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002dd6:	fb14 f400 	smulbb	r4, r4, r0
 8002dda:	4628      	mov	r0, r5
 8002ddc:	4798      	blx	r3
 8002dde:	b2e4      	uxtb	r4, r4
 8002de0:	4404      	add	r4, r0
 8002de2:	f886 4045 	strb.w	r4, [r6, #69]	; 0x45
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 8002de6:	b002      	add	sp, #8
 8002de8:	bd70      	pop	{r4, r5, r6, pc}
            textHeightIncludingSpacing = 0;
 8002dea:	2300      	movs	r3, #0
 8002dec:	f880 3045 	strb.w	r3, [r0, #69]	; 0x45
    }
 8002df0:	e7f9      	b.n	8002de6 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x62>
 8002df2:	bf00      	nop
 8002df4:	200153b8 	.word	0x200153b8
 8002df8:	200153b4 	.word	0x200153b4
 8002dfc:	08021d64 	.word	0x08021d64
 8002e00:	08021da6 	.word	0x08021da6
 8002e04:	08021de1 	.word	0x08021de1
 8002e08:	200153bc 	.word	0x200153bc
 8002e0c:	200153c0 	.word	0x200153c0

08002e10 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>:
        : pressed(false), alpha(255), action(0)
 8002e10:	f44f 437f 	mov.w	r3, #65280	; 0xff00
    IconButtonStyle()
 8002e14:	b573      	push	{r0, r1, r4, r5, r6, lr}
        : T(), up(), down()
 8002e16:	4606      	mov	r6, r0
 8002e18:	8583      	strh	r3, [r0, #44]	; 0x2c
        touchable = touch;
 8002e1a:	f240 1301 	movw	r3, #257	; 0x101
          firstChild(0)
 8002e1e:	2500      	movs	r5, #0
 8002e20:	8483      	strh	r3, [r0, #36]	; 0x24
 8002e22:	4b1d      	ldr	r3, [pc, #116]	; (8002e98 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0x88>)
 8002e24:	6285      	str	r5, [r0, #40]	; 0x28
        : x(0), y(0), width(0), height(0)
 8002e26:	e9c0 5501 	strd	r5, r5, [r0, #4]
 8002e2a:	e9c0 5503 	strd	r5, r5, [r0, #12]
          visible(true)
 8002e2e:	e9c0 5505 	strd	r5, r5, [r0, #20]
 8002e32:	e9c0 5507 	strd	r5, r5, [r0, #28]
 8002e36:	6305      	str	r5, [r0, #48]	; 0x30
 8002e38:	f846 3b34 	str.w	r3, [r6], #52
 8002e3c:	4604      	mov	r4, r0
        : Box(), borderColor(0), borderSize(0)
 8002e3e:	4630      	mov	r0, r6
 8002e40:	f7ff ff50 	bl	8002ce4 <_ZN8touchgfx3BoxC1Ev>
 8002e44:	4b15      	ldr	r3, [pc, #84]	; (8002e9c <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0x8c>)
 8002e46:	6363      	str	r3, [r4, #52]	; 0x34
        borderBox.setXY(0, 0);
 8002e48:	462a      	mov	r2, r5
        : color(0)
 8002e4a:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 8002e4e:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
        : color(col)
 8002e52:	6625      	str	r5, [r4, #96]	; 0x60
 8002e54:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 8002e58:	4629      	mov	r1, r5
 8002e5a:	4630      	mov	r0, r6
 8002e5c:	f7ff fede 	bl	8002c1c <_ZN8touchgfx8Drawable5setXYEss>
        T::add(borderBox);
 8002e60:	4631      	mov	r1, r6
 8002e62:	4620      	mov	r0, r4
 8002e64:	f007 f8e2 	bl	800a02c <_ZN8touchgfx9Container3addERNS_8DrawableE>
        : T()
 8002e68:	4b0d      	ldr	r3, [pc, #52]	; (8002ea0 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0x90>)
 8002e6a:	6023      	str	r3, [r4, #0]
 8002e6c:	f104 057c 	add.w	r5, r4, #124	; 0x7c
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 8002e70:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002e74:	f8a4 3078 	strh.w	r3, [r4, #120]	; 0x78
 8002e78:	f8a4 307a 	strh.w	r3, [r4, #122]	; 0x7a
 8002e7c:	a901      	add	r1, sp, #4
 8002e7e:	4628      	mov	r0, r5
 8002e80:	f8ad 3004 	strh.w	r3, [sp, #4]
 8002e84:	f7ff ff42 	bl	8002d0c <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
        T::add(iconImage);
 8002e88:	4620      	mov	r0, r4
 8002e8a:	4629      	mov	r1, r5
 8002e8c:	f007 f8ce 	bl	800a02c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 8002e90:	4620      	mov	r0, r4
 8002e92:	b002      	add	sp, #8
 8002e94:	bd70      	pop	{r4, r5, r6, pc}
 8002e96:	bf00      	nop
 8002e98:	08021f68 	.word	0x08021f68
 8002e9c:	080235e8 	.word	0x080235e8
 8002ea0:	08022004 	.word	0x08022004

08002ea4 <_ZN15Screen1ViewBaseC1Ev>:
Screen1ViewBase::Screen1ViewBase() :
 8002ea4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002ea8:	ed2d 8b08 	vpush	{d8-d11}
 8002eac:	4604      	mov	r4, r0
 8002eae:	b08d      	sub	sp, #52	; 0x34
        : presenter(0)
 8002eb0:	f00e feee 	bl	8011c90 <_ZN8touchgfx6ScreenC1Ev>
    flexButtonCallback(this, &Screen1ViewBase::flexButtonCallbackHandler)
 8002eb4:	4622      	mov	r2, r4
 8002eb6:	2500      	movs	r5, #0
 8002eb8:	4be4      	ldr	r3, [pc, #912]	; (800324c <_ZN15Screen1ViewBaseC1Ev+0x3a8>)
 8002eba:	63e5      	str	r5, [r4, #60]	; 0x3c
 8002ebc:	f842 3b40 	str.w	r3, [r2], #64
 8002ec0:	4610      	mov	r0, r2
 8002ec2:	ee08 2a10 	vmov	s16, r2
 8002ec6:	f7ff ff0d 	bl	8002ce4 <_ZN8touchgfx3BoxC1Ev>
 8002eca:	f104 036c 	add.w	r3, r4, #108	; 0x6c
 8002ece:	f64f 76ff 	movw	r6, #65535	; 0xffff
 8002ed2:	a90a      	add	r1, sp, #40	; 0x28
 8002ed4:	4618      	mov	r0, r3
 8002ed6:	ee0a 3a10 	vmov	s20, r3
 8002eda:	f8ad 6028 	strh.w	r6, [sp, #40]	; 0x28
 8002ede:	f7ff ff15 	bl	8002d0c <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002ee2:	f104 0398 	add.w	r3, r4, #152	; 0x98
 8002ee6:	a90a      	add	r1, sp, #40	; 0x28
 8002ee8:	4618      	mov	r0, r3
 8002eea:	ee0a 3a90 	vmov	s21, r3
 8002eee:	f8ad 6028 	strh.w	r6, [sp, #40]	; 0x28
 8002ef2:	f7ff ff0b 	bl	8002d0c <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002ef6:	f104 03c4 	add.w	r3, r4, #196	; 0xc4
 8002efa:	4618      	mov	r0, r3
 8002efc:	ee08 3a90 	vmov	s17, r3
 8002f00:	f7ff ff86 	bl	8002e10 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8002f04:	f504 73b6 	add.w	r3, r4, #364	; 0x16c
 8002f08:	4618      	mov	r0, r3
 8002f0a:	ee09 3a10 	vmov	s18, r3
 8002f0e:	f7ff ff7f 	bl	8002e10 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8002f12:	f504 7305 	add.w	r3, r4, #532	; 0x214
 8002f16:	f504 7917 	add.w	r9, r4, #604	; 0x25c
 8002f1a:	4618      	mov	r0, r3
 8002f1c:	ee09 3a90 	vmov	s19, r3
 8002f20:	f504 782a 	add.w	r8, r4, #680	; 0x2a8
 8002f24:	f7ff ff0c 	bl	8002d40 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8002f28:	4fc9      	ldr	r7, [pc, #804]	; (8003250 <_ZN15Screen1ViewBaseC1Ev+0x3ac>)
        : TextArea()
 8002f2a:	4648      	mov	r0, r9
 8002f2c:	f7ff ff08 	bl	8002d40 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8002f30:	f8c4 725c 	str.w	r7, [r4, #604]	; 0x25c
 8002f34:	f8c4 52a4 	str.w	r5, [r4, #676]	; 0x2a4
 8002f38:	4640      	mov	r0, r8
 8002f3a:	f00b f82b 	bl	800df94 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8002f3e:	f504 733c 	add.w	r3, r4, #752	; 0x2f0
 8002f42:	f504 7b47 	add.w	fp, r4, #796	; 0x31c
 8002f46:	a90a      	add	r1, sp, #40	; 0x28
 8002f48:	4618      	mov	r0, r3
 8002f4a:	ee0b 3a10 	vmov	s22, r3
 8002f4e:	f504 7a59 	add.w	sl, r4, #868	; 0x364
 8002f52:	f8ad 6028 	strh.w	r6, [sp, #40]	; 0x28
 8002f56:	f7ff fed9 	bl	8002d0c <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002f5a:	4658      	mov	r0, fp
 8002f5c:	f7ff fef0 	bl	8002d40 <_ZN8touchgfx8TextAreaC1Ev>
        : TextArea()
 8002f60:	4650      	mov	r0, sl
 8002f62:	f7ff feed 	bl	8002d40 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8002f66:	4bbb      	ldr	r3, [pc, #748]	; (8003254 <_ZN15Screen1ViewBaseC1Ev+0x3b0>)
        : TextAreaWithWildcardBase(), wc1(0)
 8002f68:	f8c4 7364 	str.w	r7, [r4, #868]	; 0x364
 8002f6c:	e9c4 34f6 	strd	r3, r4, [r4, #984]	; 0x3d8
 8002f70:	4bb9      	ldr	r3, [pc, #740]	; (8003258 <_ZN15Screen1ViewBaseC1Ev+0x3b4>)
 8002f72:	f8c4 53ac 	str.w	r5, [r4, #940]	; 0x3ac
 8002f76:	e9c4 35f8 	strd	r3, r5, [r4, #992]	; 0x3e0
 8002f7a:	4bb8      	ldr	r3, [pc, #736]	; (800325c <_ZN15Screen1ViewBaseC1Ev+0x3b8>)
 8002f7c:	e9c4 34fa 	strd	r3, r4, [r4, #1000]	; 0x3e8
 8002f80:	4bb7      	ldr	r3, [pc, #732]	; (8003260 <_ZN15Screen1ViewBaseC1Ev+0x3bc>)
 8002f82:	e9c4 35fc 	strd	r3, r5, [r4, #1008]	; 0x3f0
    __background.setPosition(0, 0, 320, 240);
 8002f86:	23f0      	movs	r3, #240	; 0xf0
 8002f88:	ee18 0a10 	vmov	r0, s16
 8002f8c:	9300      	str	r3, [sp, #0]
 8002f8e:	462a      	mov	r2, r5
 8002f90:	4629      	mov	r1, r5
 8002f92:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8002f96:	f7ff fe80 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8002f9a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8002f9e:	66a3      	str	r3, [r4, #104]	; 0x68
    image2.setXY(0, 0);
 8002fa0:	462a      	mov	r2, r5
 8002fa2:	ee1a 0a10 	vmov	r0, s20
 8002fa6:	4629      	mov	r1, r5
 8002fa8:	f7ff fe38 	bl	8002c1c <_ZN8touchgfx8Drawable5setXYEss>
    image2.setBitmap(touchgfx::Bitmap(BITMAP_BG_ID));
 8002fac:	ee1a 0a10 	vmov	r0, s20
 8002fb0:	a90a      	add	r1, sp, #40	; 0x28
 8002fb2:	f8ad 5028 	strh.w	r5, [sp, #40]	; 0x28
 8002fb6:	f00a febb 	bl	800dd30 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    image3.setXY(118, 25);
 8002fba:	ee1a 0a90 	vmov	r0, s21
 8002fbe:	2219      	movs	r2, #25
 8002fc0:	2176      	movs	r1, #118	; 0x76
 8002fc2:	f7ff fe2b 	bl	8002c1c <_ZN8touchgfx8Drawable5setXYEss>
        borderBox.setPosition(x, y, width, height);
 8002fc6:	2717      	movs	r7, #23
    image3.setBitmap(touchgfx::Bitmap(BITMAP_COUNTER_BOX_ID));
 8002fc8:	ee1a 0a90 	vmov	r0, s21
 8002fcc:	f04f 0303 	mov.w	r3, #3
 8002fd0:	a90a      	add	r1, sp, #40	; 0x28
 8002fd2:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8002fd6:	f00a feab 	bl	800dd30 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002fda:	9700      	str	r7, [sp, #0]
 8002fdc:	462a      	mov	r2, r5
 8002fde:	4629      	mov	r1, r5
 8002fe0:	f104 00f8 	add.w	r0, r4, #248	; 0xf8
 8002fe4:	232b      	movs	r3, #43	; 0x2b
 8002fe6:	f7ff fe58 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
        down = colorPressed;
 8002fea:	4a9e      	ldr	r2, [pc, #632]	; (8003264 <_ZN15Screen1ViewBaseC1Ev+0x3c0>)
 8002fec:	4b9e      	ldr	r3, [pc, #632]	; (8003268 <_ZN15Screen1ViewBaseC1Ev+0x3c4>)
        borderDown = borderColorPressed;
 8002fee:	499f      	ldr	r1, [pc, #636]	; (800326c <_ZN15Screen1ViewBaseC1Ev+0x3c8>)
 8002ff0:	489f      	ldr	r0, [pc, #636]	; (8003270 <_ZN15Screen1ViewBaseC1Ev+0x3cc>)
        down = colorPressed;
 8002ff2:	e9c4 324b 	strd	r3, r2, [r4, #300]	; 0x12c
        handlePressedUpdated();
 8002ff6:	f8d4 30c4 	ldr.w	r3, [r4, #196]	; 0xc4
     *
     * @see getBorderSize
     */
    void setBorderSize(uint16_t size)
    {
        borderSize = size;
 8002ffa:	2605      	movs	r6, #5
        borderDown = borderColorPressed;
 8002ffc:	e9c4 104d 	strd	r1, r0, [r4, #308]	; 0x134
        handlePressedUpdated();
 8003000:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8003004:	f8a4 6128 	strh.w	r6, [r4, #296]	; 0x128
 8003008:	ee18 0a90 	vmov	r0, s17
 800300c:	4798      	blx	r3
    ButtonDown.setIconBitmaps(Bitmap(BITMAP_DARK_ICONS_DOWN_ARROW_32_ID), Bitmap(BITMAP_DARK_ICONS_DOWN_ARROW_32_ID));
 800300e:	f10d 0c28 	add.w	ip, sp, #40	; 0x28
 8003012:	4662      	mov	r2, ip
 8003014:	f10d 0c24 	add.w	ip, sp, #36	; 0x24
 8003018:	4661      	mov	r1, ip
 800301a:	ee18 0a90 	vmov	r0, s17
 800301e:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 8003022:	f8ad 6028 	strh.w	r6, [sp, #40]	; 0x28
 8003026:	f7ff fe06 	bl	8002c36 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
    ButtonDown.setPosition(273, 49, 43, 23);
 800302a:	ee18 0a90 	vmov	r0, s17
        rect.x = x;
 800302e:	f8c4 6144 	str.w	r6, [r4, #324]	; 0x144
 8003032:	9700      	str	r7, [sp, #0]
 8003034:	232b      	movs	r3, #43	; 0x2b
 8003036:	2231      	movs	r2, #49	; 0x31
 8003038:	f240 1111 	movw	r1, #273	; 0x111
 800303c:	f7ff fe2d 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
    ButtonDown.setAction(flexButtonCallback);
 8003040:	f504 7c7a 	add.w	ip, r4, #1000	; 0x3e8
        action = &callback;
 8003044:	f8c4 c0f4 	str.w	ip, [r4, #244]	; 0xf4
        borderBox.setPosition(x, y, width, height);
 8003048:	9700      	str	r7, [sp, #0]
 800304a:	462a      	mov	r2, r5
 800304c:	4629      	mov	r1, r5
 800304e:	f504 70d0 	add.w	r0, r4, #416	; 0x1a0
 8003052:	232b      	movs	r3, #43	; 0x2b
 8003054:	f8cd c00c 	str.w	ip, [sp, #12]
 8003058:	f7ff fe1f 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
        down = colorPressed;
 800305c:	4a81      	ldr	r2, [pc, #516]	; (8003264 <_ZN15Screen1ViewBaseC1Ev+0x3c0>)
 800305e:	4b82      	ldr	r3, [pc, #520]	; (8003268 <_ZN15Screen1ViewBaseC1Ev+0x3c4>)
        borderDown = borderColorPressed;
 8003060:	4982      	ldr	r1, [pc, #520]	; (800326c <_ZN15Screen1ViewBaseC1Ev+0x3c8>)
 8003062:	4883      	ldr	r0, [pc, #524]	; (8003270 <_ZN15Screen1ViewBaseC1Ev+0x3cc>)
 8003064:	f8a4 61d0 	strh.w	r6, [r4, #464]	; 0x1d0
        down = colorPressed;
 8003068:	e9c4 3275 	strd	r3, r2, [r4, #468]	; 0x1d4
        handlePressedUpdated();
 800306c:	f8d4 316c 	ldr.w	r3, [r4, #364]	; 0x16c
        borderDown = borderColorPressed;
 8003070:	e9c4 1077 	strd	r1, r0, [r4, #476]	; 0x1dc
        handlePressedUpdated();
 8003074:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8003078:	ee19 0a10 	vmov	r0, s18
 800307c:	4798      	blx	r3
 800307e:	2606      	movs	r6, #6
    ButtonUp.setIconBitmaps(Bitmap(BITMAP_DARK_ICONS_UP_ARROW_32_ID), Bitmap(BITMAP_DARK_ICONS_UP_ARROW_32_ID));
 8003080:	ee19 0a10 	vmov	r0, s18
 8003084:	aa0a      	add	r2, sp, #40	; 0x28
 8003086:	a909      	add	r1, sp, #36	; 0x24
 8003088:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 800308c:	f8ad 6028 	strh.w	r6, [sp, #40]	; 0x28
 8003090:	f7ff fdd1 	bl	8002c36 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
    ButtonUp.setPosition(273, 25, 43, 23);
 8003094:	ee19 0a10 	vmov	r0, s18
 8003098:	f8c4 61ec 	str.w	r6, [r4, #492]	; 0x1ec
 800309c:	9700      	str	r7, [sp, #0]
 800309e:	232b      	movs	r3, #43	; 0x2b
 80030a0:	2219      	movs	r2, #25
 80030a2:	f240 1111 	movw	r1, #273	; 0x111
 80030a6:	f7ff fdf8 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
 80030aa:	9b03      	ldr	r3, [sp, #12]
 80030ac:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 80030b0:	ae04      	add	r6, sp, #16
        color = newColor;
 80030b2:	f04f 37ff 	mov.w	r7, #4294967295
    LabelPradLadowania.setXY(25, 28);
 80030b6:	ee19 0a90 	vmov	r0, s19
 80030ba:	221c      	movs	r2, #28
 80030bc:	2119      	movs	r1, #25
 80030be:	f7ff fdad 	bl	8002c1c <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80030c2:	ee19 1a90 	vmov	r1, s19
        linespace = space;
 80030c6:	f8a4 5248 	strh.w	r5, [r4, #584]	; 0x248
        boundingArea = calculateBoundingArea();
 80030ca:	4630      	mov	r0, r6
        color = newColor;
 80030cc:	f8c4 7244 	str.w	r7, [r4, #580]	; 0x244
        boundingArea = calculateBoundingArea();
 80030d0:	f00a f920 	bl	800d314 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80030d4:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80030d8:	f504 7314 	add.w	r3, r4, #592	; 0x250
 80030dc:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80030e0:	4b64      	ldr	r3, [pc, #400]	; (8003274 <_ZN15Screen1ViewBaseC1Ev+0x3d0>)
 80030e2:	930a      	str	r3, [sp, #40]	; 0x28
    LabelPradLadowania.setTypedText(touchgfx::TypedText(T___SINGLEUSE_OQ6C));
 80030e4:	ee19 0a90 	vmov	r0, s19
 80030e8:	230e      	movs	r3, #14
 80030ea:	a90a      	add	r1, sp, #40	; 0x28
 80030ec:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80030f0:	f00a fba0 	bl	800d834 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    txtPradLadowania.setPosition(143, 36, 124, 24);
 80030f4:	2218      	movs	r2, #24
 80030f6:	9200      	str	r2, [sp, #0]
 80030f8:	4648      	mov	r0, r9
 80030fa:	2224      	movs	r2, #36	; 0x24
 80030fc:	237c      	movs	r3, #124	; 0x7c
 80030fe:	218f      	movs	r1, #143	; 0x8f
 8003100:	f7ff fdcb 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
 8003104:	f8d4 325c 	ldr.w	r3, [r4, #604]	; 0x25c
        linespace = space;
 8003108:	f8a4 5290 	strh.w	r5, [r4, #656]	; 0x290
        boundingArea = calculateBoundingArea();
 800310c:	4649      	mov	r1, r9
 800310e:	4630      	mov	r0, r6
 8003110:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8003114:	f8c4 728c 	str.w	r7, [r4, #652]	; 0x28c
        boundingArea = calculateBoundingArea();
 8003118:	4798      	blx	r3
 800311a:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 800311e:	f504 7326 	add.w	r3, r4, #664	; 0x298
 8003122:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    txtPradLadowania.setWildcard(txtPradLadowaniaBuffer);
 8003126:	f504 736c 	add.w	r3, r4, #944	; 0x3b0
        wc1 = value;
 800312a:	f8c4 32a4 	str.w	r3, [r4, #676]	; 0x2a4
 800312e:	4b51      	ldr	r3, [pc, #324]	; (8003274 <_ZN15Screen1ViewBaseC1Ev+0x3d0>)
    txtPradLadowaniaBuffer[0] = 0;
 8003130:	f8a4 53b0 	strh.w	r5, [r4, #944]	; 0x3b0
 8003134:	930a      	str	r3, [sp, #40]	; 0x28
    txtPradLadowania.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9VFQ));
 8003136:	a90a      	add	r1, sp, #40	; 0x28
 8003138:	230d      	movs	r3, #13
 800313a:	4648      	mov	r0, r9
 800313c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003140:	f00a fb78 	bl	800d834 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    buttonStart.setXY(78, 180);
 8003144:	4640      	mov	r0, r8
 8003146:	22b4      	movs	r2, #180	; 0xb4
 8003148:	214e      	movs	r1, #78	; 0x4e
 800314a:	f7ff fd67 	bl	8002c1c <_ZN8touchgfx8Drawable5setXYEss>
 800314e:	2301      	movs	r3, #1
    buttonStart.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
 8003150:	aa0a      	add	r2, sp, #40	; 0x28
 8003152:	a909      	add	r1, sp, #36	; 0x24
 8003154:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8003158:	4640      	mov	r0, r8
 800315a:	2302      	movs	r3, #2
 800315c:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8003160:	f00a fbc3 	bl	800d8ea <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8003164:	230c      	movs	r3, #12
 8003166:	f8a4 32e0 	strh.w	r3, [r4, #736]	; 0x2e0
        updateTextPosition();
 800316a:	4640      	mov	r0, r8
 800316c:	f7ff fe0a 	bl	8002d84 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonStart.setAction(buttonCallback);
 8003170:	f504 7376 	add.w	r3, r4, #984	; 0x3d8
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 8003174:	f8c4 32d0 	str.w	r3, [r4, #720]	; 0x2d0
    image3_1.setXY(118, 79);
 8003178:	ee1b 0a10 	vmov	r0, s22
        colorPressed = col;
 800317c:	e9c4 77b9 	strd	r7, r7, [r4, #740]	; 0x2e4
 8003180:	224f      	movs	r2, #79	; 0x4f
 8003182:	2176      	movs	r1, #118	; 0x76
 8003184:	f7ff fd4a 	bl	8002c1c <_ZN8touchgfx8Drawable5setXYEss>
    image3_1.setBitmap(touchgfx::Bitmap(BITMAP_COUNTER_BOX_ID));
 8003188:	ee1b 0a10 	vmov	r0, s22
 800318c:	f04f 0203 	mov.w	r2, #3
 8003190:	a90a      	add	r1, sp, #40	; 0x28
 8003192:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8003196:	f00a fdcb 	bl	800dd30 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    LabelNapiecieBaterii.setXY(41, 82);
 800319a:	2252      	movs	r2, #82	; 0x52
 800319c:	4658      	mov	r0, fp
 800319e:	2129      	movs	r1, #41	; 0x29
 80031a0:	f7ff fd3c 	bl	8002c1c <_ZN8touchgfx8Drawable5setXYEss>
        linespace = space;
 80031a4:	f8a4 5350 	strh.w	r5, [r4, #848]	; 0x350
        boundingArea = calculateBoundingArea();
 80031a8:	4659      	mov	r1, fp
 80031aa:	4630      	mov	r0, r6
        color = newColor;
 80031ac:	f8c4 734c 	str.w	r7, [r4, #844]	; 0x34c
        boundingArea = calculateBoundingArea();
 80031b0:	f00a f8b0 	bl	800d314 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80031b4:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80031b8:	f504 7356 	add.w	r3, r4, #856	; 0x358
 80031bc:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80031c0:	4b2c      	ldr	r3, [pc, #176]	; (8003274 <_ZN15Screen1ViewBaseC1Ev+0x3d0>)
 80031c2:	930a      	str	r3, [sp, #40]	; 0x28
    LabelNapiecieBaterii.setTypedText(touchgfx::TypedText(T___SINGLEUSE_O6MQ));
 80031c4:	a90a      	add	r1, sp, #40	; 0x28
 80031c6:	230b      	movs	r3, #11
 80031c8:	4658      	mov	r0, fp
 80031ca:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80031ce:	f00a fb31 	bl	800d834 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    txtNapiecieBaterii.setPosition(143, 88, 124, 24);
 80031d2:	2218      	movs	r2, #24
 80031d4:	9200      	str	r2, [sp, #0]
 80031d6:	4650      	mov	r0, sl
 80031d8:	2258      	movs	r2, #88	; 0x58
 80031da:	237c      	movs	r3, #124	; 0x7c
 80031dc:	218f      	movs	r1, #143	; 0x8f
 80031de:	f7ff fd5c 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
 80031e2:	f8d4 3364 	ldr.w	r3, [r4, #868]	; 0x364
        linespace = space;
 80031e6:	f8a4 5398 	strh.w	r5, [r4, #920]	; 0x398
        boundingArea = calculateBoundingArea();
 80031ea:	4651      	mov	r1, sl
 80031ec:	4630      	mov	r0, r6
 80031ee:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 80031f2:	f8c4 7394 	str.w	r7, [r4, #916]	; 0x394
        boundingArea = calculateBoundingArea();
 80031f6:	4798      	blx	r3
 80031f8:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80031fc:	f504 7368 	add.w	r3, r4, #928	; 0x3a0
 8003200:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    txtNapiecieBaterii.setWildcard(txtNapiecieBateriiBuffer);
 8003204:	f504 7371 	add.w	r3, r4, #964	; 0x3c4
 8003208:	f8c4 33ac 	str.w	r3, [r4, #940]	; 0x3ac
 800320c:	4b19      	ldr	r3, [pc, #100]	; (8003274 <_ZN15Screen1ViewBaseC1Ev+0x3d0>)
    txtNapiecieBateriiBuffer[0] = 0;
 800320e:	f8a4 53c4 	strh.w	r5, [r4, #964]	; 0x3c4
 8003212:	930a      	str	r3, [sp, #40]	; 0x28
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 8003214:	1d25      	adds	r5, r4, #4
 8003216:	230a      	movs	r3, #10
    txtNapiecieBaterii.setTypedText(touchgfx::TypedText(T___SINGLEUSE_JY89));
 8003218:	a90a      	add	r1, sp, #40	; 0x28
 800321a:	4650      	mov	r0, sl
 800321c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003220:	f00a fb08 	bl	800d834 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003224:	ee18 1a10 	vmov	r1, s16
 8003228:	4628      	mov	r0, r5
 800322a:	f006 feff 	bl	800a02c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800322e:	ee1a 1a10 	vmov	r1, s20
 8003232:	4628      	mov	r0, r5
 8003234:	f006 fefa 	bl	800a02c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003238:	ee1a 1a90 	vmov	r1, s21
 800323c:	4628      	mov	r0, r5
 800323e:	f006 fef5 	bl	800a02c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003242:	ee18 1a90 	vmov	r1, s17
 8003246:	4628      	mov	r0, r5
 8003248:	e016      	b.n	8003278 <_ZN15Screen1ViewBaseC1Ev+0x3d4>
 800324a:	bf00      	nop
 800324c:	080220d4 	.word	0x080220d4
 8003250:	08021ed8 	.word	0x08021ed8
 8003254:	080220a4 	.word	0x080220a4
 8003258:	08002bed 	.word	0x08002bed
 800325c:	080220bc 	.word	0x080220bc
 8003260:	08002b19 	.word	0x08002b19
 8003264:	ff0099cc 	.word	0xff0099cc
 8003268:	ff006699 	.word	0xff006699
 800326c:	ff003366 	.word	0xff003366
 8003270:	ff336699 	.word	0xff336699
 8003274:	0802169c 	.word	0x0802169c
 8003278:	f006 fed8 	bl	800a02c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800327c:	ee19 1a10 	vmov	r1, s18
 8003280:	4628      	mov	r0, r5
 8003282:	f006 fed3 	bl	800a02c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003286:	ee19 1a90 	vmov	r1, s19
 800328a:	4628      	mov	r0, r5
 800328c:	f006 fece 	bl	800a02c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003290:	4649      	mov	r1, r9
 8003292:	4628      	mov	r0, r5
 8003294:	f006 feca 	bl	800a02c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003298:	4641      	mov	r1, r8
 800329a:	4628      	mov	r0, r5
 800329c:	f006 fec6 	bl	800a02c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80032a0:	ee1b 1a10 	vmov	r1, s22
 80032a4:	4628      	mov	r0, r5
 80032a6:	f006 fec1 	bl	800a02c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80032aa:	4659      	mov	r1, fp
 80032ac:	4628      	mov	r0, r5
 80032ae:	f006 febd 	bl	800a02c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80032b2:	4628      	mov	r0, r5
 80032b4:	4651      	mov	r1, sl
 80032b6:	f006 feb9 	bl	800a02c <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80032ba:	4620      	mov	r0, r4
 80032bc:	b00d      	add	sp, #52	; 0x34
 80032be:	ecbd 8b08 	vpop	{d8-d11}
 80032c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80032c6:	bf00      	nop

080032c8 <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 80032c8:	2000      	movs	r0, #0
 80032ca:	4770      	bx	lr

080032cc <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 80032cc:	888b      	ldrh	r3, [r1, #4]
 80032ce:	8083      	strh	r3, [r0, #4]
        return true;
    }
 80032d0:	2001      	movs	r0, #1
 80032d2:	4770      	bx	lr

080032d4 <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 80032d4:	4770      	bx	lr

080032d6 <_ZN8touchgfx17AbstractDataGraph8setAlphaEh>:
     *
     * @note All graph elements have to take this alpha into consideration.
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 80032d6:	f880 102c 	strb.w	r1, [r0, #44]	; 0x2c
    }
 80032da:	4770      	bx	lr

080032dc <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>:
     * @param  min The minimum x value.
     * @param  max The maximum x value.
     *
     * @note The graph as well as the area above and below are automatically redrawn (invalidated).
     */
    virtual void setGraphRangeX(int min, int max)
 80032dc:	b410      	push	{r4}
    {
        setGraphRangeXScaled(int2scaledX(min), int2scaledX(max));
 80032de:	6803      	ldr	r3, [r0, #0]
     *
     * @note For internal use.
     */
    FORCE_INLINE_FUNCTION int int2scaledX(int i) const
    {
        return int2scaled(i, xScale);
 80032e0:	6b04      	ldr	r4, [r0, #48]	; 0x30
        setGraphRangeXScaled(int2scaledX(min), int2scaledX(max));
 80032e2:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 80032e6:	4362      	muls	r2, r4
 80032e8:	4361      	muls	r1, r4
    }
 80032ea:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeXScaled(int2scaledX(min), int2scaledX(max));
 80032ee:	4718      	bx	r3

080032f0 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff>:
     *
     * @return The product of the two numbers, rounded to nearest integer value.
     */
    FORCE_INLINE_FUNCTION static int float2scaled(float f, int scale)
    {
        const float fs = f * (float)scale;
 80032f0:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
        setGraphRangeXScaled(float2scaledX(min), float2scaledX(max));
 80032f4:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 80032f6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setGraphRangeXScaled(float2scaledX(min), float2scaledX(max));
 80032fa:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
        const float fs = f * (float)scale;
 80032fe:	ee20 0a27 	vmul.f32	s0, s0, s15
        if (fs >= 0)
 8003302:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8003306:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800330a:	db17      	blt.n	800333c <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x4c>
        {
            return (int)(fs + 0.5f);
 800330c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8003310:	ee30 0a07 	vadd.f32	s0, s0, s14
 8003314:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 8003318:	ee17 1a10 	vmov	r1, s14
        const float fs = f * (float)scale;
 800331c:	ee60 0aa7 	vmul.f32	s1, s1, s15
        if (fs >= 0)
 8003320:	eef5 0ac0 	vcmpe.f32	s1, #0.0
 8003324:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003328:	db1c      	blt.n	8003364 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x74>
            return (int)(fs + 0.5f);
 800332a:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 800332e:	ee70 0aa7 	vadd.f32	s1, s1, s15
 8003332:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 8003336:	ee17 2a90 	vmov	r2, s15
        setGraphRangeXScaled(float2scaledX(min), float2scaledX(max));
 800333a:	4718      	bx	r3
        }
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 800333c:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 8003340:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8003344:	ee17 2a10 	vmov	r2, s14
 8003348:	ee30 0a66 	vsub.f32	s0, s0, s13
 800334c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8003350:	ee30 0a26 	vadd.f32	s0, s0, s13
 8003354:	1e51      	subs	r1, r2, #1
 8003356:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 800335a:	ee10 2a10 	vmov	r2, s0
 800335e:	440a      	add	r2, r1
 8003360:	4611      	mov	r1, r2
 8003362:	e7db      	b.n	800331c <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x2c>
 8003364:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 8003368:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800336c:	ee17 2a90 	vmov	r2, s15
 8003370:	ee70 0ac7 	vsub.f32	s1, s1, s14
 8003374:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 8003378:	ee70 0a87 	vadd.f32	s1, s1, s14
 800337c:	3a01      	subs	r2, #1
 800337e:	eefd 0ae0 	vcvt.s32.f32	s1, s1
 8003382:	ee10 ca90 	vmov	ip, s1
 8003386:	4494      	add	ip, r2
 8003388:	4662      	mov	r2, ip
 800338a:	e7d6      	b.n	800333a <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x4a>

0800338c <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbi>:
    virtual void setGraphRangeXAuto(bool showYaxis = true, int margin = 0)
 800338c:	b410      	push	{r4}
        setGraphRangeXAutoScaled(showYaxis, int2scaledX(margin));
 800338e:	6803      	ldr	r3, [r0, #0]
        return i * scale;
 8003390:	6b04      	ldr	r4, [r0, #48]	; 0x30
        setGraphRangeXAutoScaled(showYaxis, int2scaledX(margin));
 8003392:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8003396:	4362      	muls	r2, r4
    }
 8003398:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeXAutoScaled(showYaxis, int2scaledX(margin));
 800339c:	4718      	bx	r3

0800339e <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbf>:
        const float fs = f * (float)scale;
 800339e:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
        setGraphRangeXAutoScaled(showYaxis, float2scaledX(margin));
 80033a2:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 80033a4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setGraphRangeXAutoScaled(showYaxis, float2scaledX(margin));
 80033a8:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
        const float fs = f * (float)scale;
 80033ac:	ee27 0a80 	vmul.f32	s0, s15, s0
        if (fs >= 0)
 80033b0:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80033b4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80033b8:	db08      	blt.n	80033cc <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbf+0x2e>
            return (int)(fs + 0.5f);
 80033ba:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 80033be:	ee30 0a27 	vadd.f32	s0, s0, s15
 80033c2:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 80033c6:	ee17 2a90 	vmov	r2, s15
        setGraphRangeXAutoScaled(showYaxis, float2scaledX(margin));
 80033ca:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80033cc:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 80033d0:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80033d4:	ee17 2a90 	vmov	r2, s15
 80033d8:	ee30 0a47 	vsub.f32	s0, s0, s14
 80033dc:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 80033e0:	ee30 0a07 	vadd.f32	s0, s0, s14
 80033e4:	3a01      	subs	r2, #1
 80033e6:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 80033ea:	ee10 ca10 	vmov	ip, s0
 80033ee:	4494      	add	ip, r2
 80033f0:	4662      	mov	r2, ip
 80033f2:	e7ea      	b.n	80033ca <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbf+0x2c>

080033f4 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEii>:
    virtual void setGraphRangeY(int min, int max)
 80033f4:	b410      	push	{r4}
        setGraphRangeYScaled(int2scaledY(min), int2scaledY(max));
 80033f6:	6803      	ldr	r3, [r0, #0]
        return int2scaled(i, yScale);
 80033f8:	6b44      	ldr	r4, [r0, #52]	; 0x34
        setGraphRangeYScaled(int2scaledY(min), int2scaledY(max));
 80033fa:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 80033fe:	4362      	muls	r2, r4
 8003400:	4361      	muls	r1, r4
    }
 8003402:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeYScaled(int2scaledY(min), int2scaledY(max));
 8003406:	4718      	bx	r3

08003408 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff>:
        const float fs = f * (float)scale;
 8003408:	edd0 7a0d 	vldr	s15, [r0, #52]	; 0x34
        setGraphRangeYScaled(float2scaledY(min), float2scaledY(max));
 800340c:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 800340e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setGraphRangeYScaled(float2scaledY(min), float2scaledY(max));
 8003412:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
        const float fs = f * (float)scale;
 8003416:	ee20 0a27 	vmul.f32	s0, s0, s15
        if (fs >= 0)
 800341a:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 800341e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003422:	db17      	blt.n	8003454 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x4c>
            return (int)(fs + 0.5f);
 8003424:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8003428:	ee30 0a07 	vadd.f32	s0, s0, s14
 800342c:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 8003430:	ee17 1a10 	vmov	r1, s14
        const float fs = f * (float)scale;
 8003434:	ee60 0aa7 	vmul.f32	s1, s1, s15
        if (fs >= 0)
 8003438:	eef5 0ac0 	vcmpe.f32	s1, #0.0
 800343c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003440:	db1c      	blt.n	800347c <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x74>
            return (int)(fs + 0.5f);
 8003442:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8003446:	ee70 0aa7 	vadd.f32	s1, s1, s15
 800344a:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 800344e:	ee17 2a90 	vmov	r2, s15
        setGraphRangeYScaled(float2scaledY(min), float2scaledY(max));
 8003452:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8003454:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 8003458:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800345c:	ee17 2a10 	vmov	r2, s14
 8003460:	ee30 0a66 	vsub.f32	s0, s0, s13
 8003464:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8003468:	ee30 0a26 	vadd.f32	s0, s0, s13
 800346c:	1e51      	subs	r1, r2, #1
 800346e:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8003472:	ee10 2a10 	vmov	r2, s0
 8003476:	440a      	add	r2, r1
 8003478:	4611      	mov	r1, r2
 800347a:	e7db      	b.n	8003434 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x2c>
 800347c:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 8003480:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8003484:	ee17 2a90 	vmov	r2, s15
 8003488:	ee70 0ac7 	vsub.f32	s1, s1, s14
 800348c:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 8003490:	ee70 0a87 	vadd.f32	s1, s1, s14
 8003494:	3a01      	subs	r2, #1
 8003496:	eefd 0ae0 	vcvt.s32.f32	s1, s1
 800349a:	ee10 ca90 	vmov	ip, s1
 800349e:	4494      	add	ip, r2
 80034a0:	4662      	mov	r2, ip
 80034a2:	e7d6      	b.n	8003452 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x4a>

080034a4 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbi>:
    virtual void setGraphRangeYAuto(bool showXaxis = true, int margin = 0)
 80034a4:	b410      	push	{r4}
        setGraphRangeYAutoScaled(showXaxis, int2scaledY(margin));
 80034a6:	6803      	ldr	r3, [r0, #0]
        return i * scale;
 80034a8:	6b44      	ldr	r4, [r0, #52]	; 0x34
        setGraphRangeYAutoScaled(showXaxis, int2scaledY(margin));
 80034aa:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 80034ae:	4362      	muls	r2, r4
    }
 80034b0:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeYAutoScaled(showXaxis, int2scaledY(margin));
 80034b4:	4718      	bx	r3

080034b6 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbf>:
        const float fs = f * (float)scale;
 80034b6:	edd0 7a0d 	vldr	s15, [r0, #52]	; 0x34
        setGraphRangeYAutoScaled(showXaxis, float2scaledY(margin));
 80034ba:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 80034bc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setGraphRangeYAutoScaled(showXaxis, float2scaledY(margin));
 80034c0:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
        const float fs = f * (float)scale;
 80034c4:	ee27 0a80 	vmul.f32	s0, s15, s0
        if (fs >= 0)
 80034c8:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80034cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80034d0:	db08      	blt.n	80034e4 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbf+0x2e>
            return (int)(fs + 0.5f);
 80034d2:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 80034d6:	ee30 0a27 	vadd.f32	s0, s0, s15
 80034da:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 80034de:	ee17 2a90 	vmov	r2, s15
        setGraphRangeYAutoScaled(showXaxis, float2scaledY(margin));
 80034e2:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80034e4:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 80034e8:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80034ec:	ee17 2a90 	vmov	r2, s15
 80034f0:	ee30 0a47 	vsub.f32	s0, s0, s14
 80034f4:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 80034f8:	ee30 0a07 	vadd.f32	s0, s0, s14
 80034fc:	3a01      	subs	r2, #1
 80034fe:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8003502:	ee10 ca10 	vmov	ip, s0
 8003506:	4494      	add	ip, r2
 8003508:	4662      	mov	r2, ip
 800350a:	e7ea      	b.n	80034e2 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbf+0x2c>

0800350c <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMinAsIntEv>:
        return scaled2intX(graphRangeMinX);
 800350c:	f8d0 312c 	ldr.w	r3, [r0, #300]	; 0x12c
     *
     * @note For internal use.
     */
    FORCE_INLINE_FUNCTION int scaled2intX(int i) const
    {
        return scaled2int(i, xScale);
 8003510:	6b02      	ldr	r2, [r0, #48]	; 0x30
        if (i >= 0)
 8003512:	2b00      	cmp	r3, #0
 8003514:	db07      	blt.n	8003526 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMinAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 8003516:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 800351a:	fb93 f0f2 	sdiv	r0, r3, r2
 800351e:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003522:	1040      	asrs	r0, r0, #1
 8003524:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8003526:	f06f 0001 	mvn.w	r0, #1
 800352a:	fb00 2003 	mla	r0, r0, r3, r2
 800352e:	3801      	subs	r0, #1
 8003530:	fb90 f0f2 	sdiv	r0, r0, r2
 8003534:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003538:	1040      	asrs	r0, r0, #1
 800353a:	4240      	negs	r0, r0
    }
 800353c:	4770      	bx	lr

0800353e <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeXMinAsFloatEv>:
     *
     * @return The number divided by the scale.
     */
    FORCE_INLINE_FUNCTION static float scaled2float(int i, int scale)
    {
        return (float)i / (float)scale;
 800353e:	edd0 7a4b 	vldr	s15, [r0, #300]	; 0x12c
 8003542:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8003546:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
 800354a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 800354e:	ee80 0a27 	vdiv.f32	s0, s0, s15
 8003552:	4770      	bx	lr

08003554 <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeXMinScaledEv>:
    }
 8003554:	f8d0 012c 	ldr.w	r0, [r0, #300]	; 0x12c
 8003558:	4770      	bx	lr

0800355a <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMaxAsIntEv>:
        return scaled2intX(graphRangeMaxX);
 800355a:	f8d0 3130 	ldr.w	r3, [r0, #304]	; 0x130
        return scaled2int(i, xScale);
 800355e:	6b02      	ldr	r2, [r0, #48]	; 0x30
        if (i >= 0)
 8003560:	2b00      	cmp	r3, #0
 8003562:	db07      	blt.n	8003574 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMaxAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 8003564:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8003568:	fb93 f0f2 	sdiv	r0, r3, r2
 800356c:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003570:	1040      	asrs	r0, r0, #1
 8003572:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8003574:	f06f 0001 	mvn.w	r0, #1
 8003578:	fb00 2003 	mla	r0, r0, r3, r2
 800357c:	3801      	subs	r0, #1
 800357e:	fb90 f0f2 	sdiv	r0, r0, r2
 8003582:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003586:	1040      	asrs	r0, r0, #1
 8003588:	4240      	negs	r0, r0
    }
 800358a:	4770      	bx	lr

0800358c <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeXMaxAsFloatEv>:
        return (float)i / (float)scale;
 800358c:	edd0 7a4c 	vldr	s15, [r0, #304]	; 0x130
 8003590:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8003594:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
 8003598:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 800359c:	ee80 0a27 	vdiv.f32	s0, s0, s15
 80035a0:	4770      	bx	lr

080035a2 <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeXMaxScaledEv>:
    }
 80035a2:	f8d0 0130 	ldr.w	r0, [r0, #304]	; 0x130
 80035a6:	4770      	bx	lr

080035a8 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMinAsIntEv>:
        return scaled2intY(graphRangeMinY);
 80035a8:	f8d0 3134 	ldr.w	r3, [r0, #308]	; 0x134
        return scaled2int(i, yScale);
 80035ac:	6b42      	ldr	r2, [r0, #52]	; 0x34
        if (i >= 0)
 80035ae:	2b00      	cmp	r3, #0
 80035b0:	db07      	blt.n	80035c2 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMinAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 80035b2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80035b6:	fb93 f0f2 	sdiv	r0, r3, r2
 80035ba:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80035be:	1040      	asrs	r0, r0, #1
 80035c0:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 80035c2:	f06f 0001 	mvn.w	r0, #1
 80035c6:	fb00 2003 	mla	r0, r0, r3, r2
 80035ca:	3801      	subs	r0, #1
 80035cc:	fb90 f0f2 	sdiv	r0, r0, r2
 80035d0:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80035d4:	1040      	asrs	r0, r0, #1
 80035d6:	4240      	negs	r0, r0
    }
 80035d8:	4770      	bx	lr

080035da <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeYMinAsFloatEv>:
        return (float)i / (float)scale;
 80035da:	edd0 7a4d 	vldr	s15, [r0, #308]	; 0x134
 80035de:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 80035e2:	edd0 7a0d 	vldr	s15, [r0, #52]	; 0x34
 80035e6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 80035ea:	ee80 0a27 	vdiv.f32	s0, s0, s15
 80035ee:	4770      	bx	lr

080035f0 <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeYMinScaledEv>:
    }
 80035f0:	f8d0 0134 	ldr.w	r0, [r0, #308]	; 0x134
 80035f4:	4770      	bx	lr

080035f6 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMaxAsIntEv>:
        return scaled2intY(graphRangeMaxY);
 80035f6:	f8d0 3138 	ldr.w	r3, [r0, #312]	; 0x138
        return scaled2int(i, yScale);
 80035fa:	6b42      	ldr	r2, [r0, #52]	; 0x34
        if (i >= 0)
 80035fc:	2b00      	cmp	r3, #0
 80035fe:	db07      	blt.n	8003610 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMaxAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 8003600:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8003604:	fb93 f0f2 	sdiv	r0, r3, r2
 8003608:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 800360c:	1040      	asrs	r0, r0, #1
 800360e:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8003610:	f06f 0001 	mvn.w	r0, #1
 8003614:	fb00 2003 	mla	r0, r0, r3, r2
 8003618:	3801      	subs	r0, #1
 800361a:	fb90 f0f2 	sdiv	r0, r0, r2
 800361e:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003622:	1040      	asrs	r0, r0, #1
 8003624:	4240      	negs	r0, r0
    }
 8003626:	4770      	bx	lr

08003628 <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeYMaxAsFloatEv>:
        return (float)i / (float)scale;
 8003628:	edd0 7a4e 	vldr	s15, [r0, #312]	; 0x138
 800362c:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8003630:	edd0 7a0d 	vldr	s15, [r0, #52]	; 0x34
 8003634:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 8003638:	ee80 0a27 	vdiv.f32	s0, s0, s15
 800363c:	4770      	bx	lr

0800363e <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeYMaxScaledEv>:
    }
 800363e:	f8d0 0138 	ldr.w	r0, [r0, #312]	; 0x138
 8003642:	4770      	bx	lr

08003644 <_ZN8touchgfx16DynamicDataGraph8setScaleEib>:
     * @see getScale
     *
     * @note The current xAxisFactor, xAxisOffet and xGraphRange values are updated to reflect the
     *       new scale being set.
     */
    virtual void setScale(int scale, bool updateData = false)
 8003644:	b570      	push	{r4, r5, r6, lr}
    {
        setScaleX(scale, updateData);
 8003646:	6803      	ldr	r3, [r0, #0]
    virtual void setScale(int scale, bool updateData = false)
 8003648:	4604      	mov	r4, r0
        setScaleX(scale, updateData);
 800364a:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
    virtual void setScale(int scale, bool updateData = false)
 800364e:	460d      	mov	r5, r1
 8003650:	4616      	mov	r6, r2
        setScaleX(scale, updateData);
 8003652:	4798      	blx	r3
        setScaleY(scale, updateData);
 8003654:	6823      	ldr	r3, [r4, #0]
 8003656:	4632      	mov	r2, r6
 8003658:	4629      	mov	r1, r5
 800365a:	4620      	mov	r0, r4
 800365c:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
    }
 8003660:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setScaleY(scale, updateData);
 8003664:	4718      	bx	r3

08003666 <_ZNK8touchgfx16DynamicDataGraph8getScaleEv>:
     *
     * @see setScale
     */
    virtual int getScale() const
    {
        return getScaleY();
 8003666:	6803      	ldr	r3, [r0, #0]
 8003668:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800366c:	4718      	bx	r3

0800366e <_ZNK8touchgfx16DynamicDataGraph17getGraphRangeXMinEv>:
     *
     * @return The minimum x coordinate .
     */
    virtual int getGraphRangeXMin() const
    {
        return getGraphRangeXMinScaled();
 800366e:	6803      	ldr	r3, [r0, #0]
 8003670:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 8003674:	4718      	bx	r3

08003676 <_ZNK8touchgfx16DynamicDataGraph17getGraphRangeXMaxEv>:
     *
     * @return The maximum x coordinate .
     */
    virtual int getGraphRangeXMax() const
    {
        return getGraphRangeXMaxScaled();
 8003676:	6803      	ldr	r3, [r0, #0]
 8003678:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 800367c:	4718      	bx	r3

0800367e <_ZN8touchgfx16DynamicDataGraph24setGraphRangeXAutoScaledEbi>:

    virtual void setGraphRangeYAutoScaled(bool showXaxis, int margin);

    virtual void setGraphRangeXAutoScaled(bool /*showYaxis*/, int margin)
    {
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 800367e:	6803      	ldr	r3, [r0, #0]
        if (i >= 0)
 8003680:	2a00      	cmp	r2, #0
    virtual void setGraphRangeXAutoScaled(bool /*showYaxis*/, int margin)
 8003682:	b410      	push	{r4}
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 8003684:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
        return scaled2int(i, xScale);
 8003688:	6b04      	ldr	r4, [r0, #48]	; 0x30
        if (i >= 0)
 800368a:	db0e      	blt.n	80036aa <_ZN8touchgfx16DynamicDataGraph24setGraphRangeXAutoScaledEbi+0x2c>
            return ((i * 2 + scale) / scale) / 2;
 800368c:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8003690:	fb92 f1f4 	sdiv	r1, r2, r4
 8003694:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8003698:	1049      	asrs	r1, r1, #1
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 800369a:	f9b0 211e 	ldrsh.w	r2, [r0, #286]	; 0x11e
    }
 800369e:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 80036a2:	3a01      	subs	r2, #1
 80036a4:	440a      	add	r2, r1
 80036a6:	4249      	negs	r1, r1
 80036a8:	4718      	bx	r3
        return -(((-i * 2 + scale - 1) / scale) / 2);
 80036aa:	f06f 0101 	mvn.w	r1, #1
 80036ae:	fb01 4102 	mla	r1, r1, r2, r4
 80036b2:	3901      	subs	r1, #1
 80036b4:	fb91 f1f4 	sdiv	r1, r1, r4
 80036b8:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 80036bc:	1049      	asrs	r1, r1, #1
 80036be:	4249      	negs	r1, r1
 80036c0:	e7eb      	b.n	800369a <_ZN8touchgfx16DynamicDataGraph24setGraphRangeXAutoScaledEbi+0x1c>

080036c2 <_ZN8touchgfx16DynamicDataGraph13setXAxisScaleEi>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use setXAxisFactor()", virtual void setXAxisScale(int scale))
    {
        setXAxisFactor(scale);
 80036c2:	6803      	ldr	r3, [r0, #0]
 80036c4:	f8d3 313c 	ldr.w	r3, [r3, #316]	; 0x13c
 80036c8:	4718      	bx	r3

080036ca <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEi>:
        return i * scale;
 80036ca:	6b02      	ldr	r2, [r0, #48]	; 0x30
     *
     * @param  factor The x axis factor.
     */
    virtual void setXAxisFactor(int factor)
    {
        setXAxisFactorScaled(int2scaledX(factor));
 80036cc:	6803      	ldr	r3, [r0, #0]
 80036ce:	4351      	muls	r1, r2
 80036d0:	f8d3 3148 	ldr.w	r3, [r3, #328]	; 0x148
 80036d4:	4718      	bx	r3

080036d6 <_ZN8touchgfx16DynamicDataGraph13setXAxisScaleEf>:
    }

    /// @cond
    TOUCHGFX_DEPRECATED("Please use setXAxisFactor()", virtual void setXAxisScale(float scale))
    {
        setXAxisFactor(scale);
 80036d6:	6803      	ldr	r3, [r0, #0]
 80036d8:	f8d3 3144 	ldr.w	r3, [r3, #324]	; 0x144
 80036dc:	4718      	bx	r3

080036de <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEf>:
        const float fs = f * (float)scale;
 80036de:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
    /// @endcond

    /** @copydoc setXAxisFactor(int) */
    virtual void setXAxisFactor(float factor)
    {
        setXAxisFactorScaled(float2scaledX(factor));
 80036e2:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 80036e4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setXAxisFactorScaled(float2scaledX(factor));
 80036e8:	f8d3 3148 	ldr.w	r3, [r3, #328]	; 0x148
        const float fs = f * (float)scale;
 80036ec:	ee27 0a80 	vmul.f32	s0, s15, s0
        if (fs >= 0)
 80036f0:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80036f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80036f8:	db08      	blt.n	800370c <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEf+0x2e>
            return (int)(fs + 0.5f);
 80036fa:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 80036fe:	ee30 0a27 	vadd.f32	s0, s0, s15
 8003702:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8003706:	ee17 1a90 	vmov	r1, s15
        setXAxisFactorScaled(float2scaledX(factor));
 800370a:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 800370c:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8003710:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8003714:	ee17 2a90 	vmov	r2, s15
 8003718:	ee30 0a47 	vsub.f32	s0, s0, s14
 800371c:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 8003720:	ee30 0a07 	vadd.f32	s0, s0, s14
 8003724:	1e51      	subs	r1, r2, #1
 8003726:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 800372a:	ee10 2a10 	vmov	r2, s0
 800372e:	440a      	add	r2, r1
 8003730:	4611      	mov	r1, r2
 8003732:	e7ea      	b.n	800370a <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEf+0x2c>

08003734 <_ZN8touchgfx16DynamicDataGraph20setXAxisFactorScaledEi>:
     *
     * @see setXAxisFactorScaled,setXAxisFactor
     */
    virtual void setXAxisFactorScaled(int factor)
    {
        xAxisFactor = factor;
 8003734:	f8c0 113c 	str.w	r1, [r0, #316]	; 0x13c
    }
 8003738:	4770      	bx	lr

0800373a <_ZNK8touchgfx16DynamicDataGraph18getXAxisScaleAsIntEv>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use getXAxisFactorAsInt()", virtual int getXAxisScaleAsInt() const)
    {
        return getXAxisFactorAsInt();
 800373a:	6803      	ldr	r3, [r0, #0]
 800373c:	f8d3 3150 	ldr.w	r3, [r3, #336]	; 0x150
 8003740:	4718      	bx	r3

08003742 <_ZNK8touchgfx16DynamicDataGraph19getXAxisFactorAsIntEv>:
     *
     * @return The x axis factor.
     */
    virtual int getXAxisFactorAsInt() const
    {
        return scaled2intX(getXAxisFactorScaled());
 8003742:	6803      	ldr	r3, [r0, #0]
    virtual int getXAxisFactorAsInt() const
 8003744:	b510      	push	{r4, lr}
        return scaled2intX(getXAxisFactorScaled());
 8003746:	f8d3 315c 	ldr.w	r3, [r3, #348]	; 0x15c
    virtual int getXAxisFactorAsInt() const
 800374a:	4604      	mov	r4, r0
        return scaled2intX(getXAxisFactorScaled());
 800374c:	4798      	blx	r3
        if (i >= 0)
 800374e:	2800      	cmp	r0, #0
        return scaled2int(i, xScale);
 8003750:	6b23      	ldr	r3, [r4, #48]	; 0x30
        if (i >= 0)
 8003752:	db07      	blt.n	8003764 <_ZNK8touchgfx16DynamicDataGraph19getXAxisFactorAsIntEv+0x22>
            return ((i * 2 + scale) / scale) / 2;
 8003754:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8003758:	fb90 f0f3 	sdiv	r0, r0, r3
 800375c:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003760:	1040      	asrs	r0, r0, #1
    }
 8003762:	bd10      	pop	{r4, pc}
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8003764:	f06f 0201 	mvn.w	r2, #1
 8003768:	fb02 3000 	mla	r0, r2, r0, r3
 800376c:	3801      	subs	r0, #1
 800376e:	fb90 f0f3 	sdiv	r0, r0, r3
 8003772:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003776:	1040      	asrs	r0, r0, #1
 8003778:	4240      	negs	r0, r0
        return scaled2intX(getXAxisFactorScaled());
 800377a:	e7f2      	b.n	8003762 <_ZNK8touchgfx16DynamicDataGraph19getXAxisFactorAsIntEv+0x20>

0800377c <_ZNK8touchgfx16DynamicDataGraph20getXAxisScaleAsFloatEv>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use getXAxisFactorAsFloat()", virtual float getXAxisScaleAsFloat() const)
    {
        return getXAxisFactorAsFloat();
 800377c:	6803      	ldr	r3, [r0, #0]
 800377e:	f8d3 3158 	ldr.w	r3, [r3, #344]	; 0x158
 8003782:	4718      	bx	r3

08003784 <_ZNK8touchgfx16DynamicDataGraph21getXAxisFactorAsFloatEv>:
    /// @endcond

    /** @copydoc getXAxisFactorAsInt() */
    virtual float getXAxisFactorAsFloat() const
    {
        return scaled2floatX(getXAxisFactorScaled());
 8003784:	6803      	ldr	r3, [r0, #0]
    virtual float getXAxisFactorAsFloat() const
 8003786:	b510      	push	{r4, lr}
        return scaled2floatX(getXAxisFactorScaled());
 8003788:	f8d3 315c 	ldr.w	r3, [r3, #348]	; 0x15c
    virtual float getXAxisFactorAsFloat() const
 800378c:	4604      	mov	r4, r0
        return scaled2floatX(getXAxisFactorScaled());
 800378e:	4798      	blx	r3
        return (float)i / (float)scale;
 8003790:	ee07 0a90 	vmov	s15, r0
 8003794:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8003798:	edd4 7a0c 	vldr	s15, [r4, #48]	; 0x30
 800379c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 80037a0:	ee80 0a27 	vdiv.f32	s0, s0, s15
 80037a4:	bd10      	pop	{r4, pc}

080037a6 <_ZNK8touchgfx16DynamicDataGraph20getXAxisFactorScaledEv>:
     * @see getXAxisFactorAsInt, getXAxisFactorAsFloat, setXAxisFactor
     */
    virtual int getXAxisFactorScaled() const
    {
        return xAxisFactor;
    }
 80037a6:	f8d0 013c 	ldr.w	r0, [r0, #316]	; 0x13c
 80037aa:	4770      	bx	lr

080037ac <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEi>:
        return i * scale;
 80037ac:	6b02      	ldr	r2, [r0, #48]	; 0x30
     *
     * @param  offset The x axis offset.
     */
    virtual void setXAxisOffset(int offset)
    {
        setXAxisOffsetScaled(int2scaledX(offset));
 80037ae:	6803      	ldr	r3, [r0, #0]
 80037b0:	4351      	muls	r1, r2
 80037b2:	f8d3 3168 	ldr.w	r3, [r3, #360]	; 0x168
 80037b6:	4718      	bx	r3

080037b8 <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEf>:
        const float fs = f * (float)scale;
 80037b8:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
    }

    /** @copydoc setXAxisOffset(int) */
    virtual void setXAxisOffset(float offset)
    {
        setXAxisOffsetScaled(float2scaledX(offset));
 80037bc:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 80037be:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setXAxisOffsetScaled(float2scaledX(offset));
 80037c2:	f8d3 3168 	ldr.w	r3, [r3, #360]	; 0x168
        const float fs = f * (float)scale;
 80037c6:	ee27 0a80 	vmul.f32	s0, s15, s0
        if (fs >= 0)
 80037ca:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80037ce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80037d2:	db08      	blt.n	80037e6 <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEf+0x2e>
            return (int)(fs + 0.5f);
 80037d4:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 80037d8:	ee30 0a27 	vadd.f32	s0, s0, s15
 80037dc:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 80037e0:	ee17 1a90 	vmov	r1, s15
        setXAxisOffsetScaled(float2scaledX(offset));
 80037e4:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80037e6:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 80037ea:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80037ee:	ee17 2a90 	vmov	r2, s15
 80037f2:	ee30 0a47 	vsub.f32	s0, s0, s14
 80037f6:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 80037fa:	ee30 0a07 	vadd.f32	s0, s0, s14
 80037fe:	1e51      	subs	r1, r2, #1
 8003800:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8003804:	ee10 2a10 	vmov	r2, s0
 8003808:	440a      	add	r2, r1
 800380a:	4611      	mov	r1, r2
 800380c:	e7ea      	b.n	80037e4 <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEf+0x2c>

0800380e <_ZN8touchgfx16DynamicDataGraph20setXAxisOffsetScaledEi>:
     *
     * @see setXAxisOffset, getXAxisOffsetScaled
     */
    virtual void setXAxisOffsetScaled(int offset)
    {
        xAxisOffset = offset;
 800380e:	f8c0 1140 	str.w	r1, [r0, #320]	; 0x140
    }
 8003812:	4770      	bx	lr

08003814 <_ZNK8touchgfx16DynamicDataGraph19getXAxisOffsetAsIntEv>:
     *
     * @return The x axis offset.
     */
    virtual int getXAxisOffsetAsInt() const
    {
        return scaled2intX(getXAxisOffsetScaled());
 8003814:	6803      	ldr	r3, [r0, #0]
    virtual int getXAxisOffsetAsInt() const
 8003816:	b510      	push	{r4, lr}
        return scaled2intX(getXAxisOffsetScaled());
 8003818:	f8d3 3174 	ldr.w	r3, [r3, #372]	; 0x174
    virtual int getXAxisOffsetAsInt() const
 800381c:	4604      	mov	r4, r0
        return scaled2intX(getXAxisOffsetScaled());
 800381e:	4798      	blx	r3
        if (i >= 0)
 8003820:	2800      	cmp	r0, #0
        return scaled2int(i, xScale);
 8003822:	6b23      	ldr	r3, [r4, #48]	; 0x30
        if (i >= 0)
 8003824:	db07      	blt.n	8003836 <_ZNK8touchgfx16DynamicDataGraph19getXAxisOffsetAsIntEv+0x22>
            return ((i * 2 + scale) / scale) / 2;
 8003826:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 800382a:	fb90 f0f3 	sdiv	r0, r0, r3
 800382e:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003832:	1040      	asrs	r0, r0, #1
    }
 8003834:	bd10      	pop	{r4, pc}
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8003836:	f06f 0201 	mvn.w	r2, #1
 800383a:	fb02 3000 	mla	r0, r2, r0, r3
 800383e:	3801      	subs	r0, #1
 8003840:	fb90 f0f3 	sdiv	r0, r0, r3
 8003844:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003848:	1040      	asrs	r0, r0, #1
 800384a:	4240      	negs	r0, r0
        return scaled2intX(getXAxisOffsetScaled());
 800384c:	e7f2      	b.n	8003834 <_ZNK8touchgfx16DynamicDataGraph19getXAxisOffsetAsIntEv+0x20>

0800384e <_ZNK8touchgfx16DynamicDataGraph21getXAxisOffsetAsFloatEv>:

    /** @copydoc getXAxisOffsetAsInt() */
    virtual float getXAxisOffsetAsFloat() const
    {
        return scaled2floatX(getXAxisOffsetScaled());
 800384e:	6803      	ldr	r3, [r0, #0]
    virtual float getXAxisOffsetAsFloat() const
 8003850:	b510      	push	{r4, lr}
        return scaled2floatX(getXAxisOffsetScaled());
 8003852:	f8d3 3174 	ldr.w	r3, [r3, #372]	; 0x174
    virtual float getXAxisOffsetAsFloat() const
 8003856:	4604      	mov	r4, r0
        return scaled2floatX(getXAxisOffsetScaled());
 8003858:	4798      	blx	r3
        return (float)i / (float)scale;
 800385a:	ee07 0a90 	vmov	s15, r0
 800385e:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8003862:	edd4 7a0c 	vldr	s15, [r4, #48]	; 0x30
 8003866:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 800386a:	ee80 0a27 	vdiv.f32	s0, s0, s15
 800386e:	bd10      	pop	{r4, pc}

08003870 <_ZNK8touchgfx16DynamicDataGraph20getXAxisOffsetScaledEv>:
     * @see getXAxisOffsetAsInt, getXAxisOffsetAsFloat, setXAxisOffsetScaled, setXAxisOffset
     */
    virtual int getXAxisOffsetScaled() const
    {
        return xAxisOffset;
    }
 8003870:	f8d0 0140 	ldr.w	r0, [r0, #320]	; 0x140
 8003874:	4770      	bx	lr

08003876 <_ZNK8touchgfx16DynamicDataGraph12indexToXAxisEii>:
    }

    virtual int indexToXAxis(const int valueScaled, const int /*labelScaled*/) const
    {
        // Value is also index for these types of graphs.
        return (indexToGlobalIndex(scaled2intX(valueScaled)) * xAxisFactor) + xAxisOffset;
 8003876:	6803      	ldr	r3, [r0, #0]
        return scaled2int(i, xScale);
 8003878:	6b02      	ldr	r2, [r0, #48]	; 0x30
        return (indexToGlobalIndex(scaled2intX(valueScaled)) * xAxisFactor) + xAxisOffset;
 800387a:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
        if (i >= 0)
 800387e:	2900      	cmp	r1, #0
    virtual int indexToXAxis(const int valueScaled, const int /*labelScaled*/) const
 8003880:	b510      	push	{r4, lr}
 8003882:	4604      	mov	r4, r0
        if (i >= 0)
 8003884:	db0e      	blt.n	80038a4 <_ZNK8touchgfx16DynamicDataGraph12indexToXAxisEii+0x2e>
            return ((i * 2 + scale) / scale) / 2;
 8003886:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 800388a:	fb91 f1f2 	sdiv	r1, r1, r2
 800388e:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8003892:	1049      	asrs	r1, r1, #1
        return (indexToGlobalIndex(scaled2intX(valueScaled)) * xAxisFactor) + xAxisOffset;
 8003894:	b209      	sxth	r1, r1
 8003896:	4620      	mov	r0, r4
 8003898:	4798      	blx	r3
 800389a:	e9d4 234f 	ldrd	r2, r3, [r4, #316]	; 0x13c
    }
 800389e:	fb02 3000 	mla	r0, r2, r0, r3
 80038a2:	bd10      	pop	{r4, pc}
        return -(((-i * 2 + scale - 1) / scale) / 2);
 80038a4:	f06f 0001 	mvn.w	r0, #1
 80038a8:	fb00 2101 	mla	r1, r0, r1, r2
 80038ac:	3901      	subs	r1, #1
 80038ae:	fb91 f1f2 	sdiv	r1, r1, r2
 80038b2:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 80038b6:	1049      	asrs	r1, r1, #1
 80038b8:	4249      	negs	r1, r1
 80038ba:	e7eb      	b.n	8003894 <_ZNK8touchgfx16DynamicDataGraph12indexToXAxisEii+0x1e>

080038bc <_ZNK8touchgfx16DynamicDataGraph9getScaleXEv>:
    virtual void setScaleX(int scale, bool updateData = false);

    virtual int getScaleX() const
    {
        return AbstractDataGraph::getScaleX();
    }
 80038bc:	6b00      	ldr	r0, [r0, #48]	; 0x30
 80038be:	4770      	bx	lr

080038c0 <_ZNK8touchgfx16DynamicDataGraph9getScaleYEv>:
    virtual void setScaleY(int scale, bool updateData = false);

    virtual int getScaleY() const
    {
        return AbstractDataGraph::getScaleY();
    }
 80038c0:	6b40      	ldr	r0, [r0, #52]	; 0x34
 80038c2:	4770      	bx	lr

080038c4 <_ZN8touchgfx16DynamicDataGraph19setXAxisScaleScaledEi>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use setXAxisFactorScaled()", virtual void setXAxisScaleScaled(int scale))
    {
        setXAxisFactorScaled(scale);
 80038c4:	6803      	ldr	r3, [r0, #0]
 80038c6:	f8d3 3148 	ldr.w	r3, [r3, #328]	; 0x148
 80038ca:	4718      	bx	r3

080038cc <_ZNK8touchgfx16DynamicDataGraph19getXAxisScaleScaledEv>:
    /// @endcond

    /// @cond
    TOUCHGFX_DEPRECATED("Please use getXAxisFactorScaled()", virtual int getXAxisScaleScaled() const)
    {
        return getXAxisFactorScaled();
 80038cc:	6803      	ldr	r3, [r0, #0]
 80038ce:	f8d3 315c 	ldr.w	r3, [r3, #348]	; 0x15c
 80038d2:	4718      	bx	r3

080038d4 <_ZNK8touchgfx16DynamicDataGraph16indexToScreenXQ5Es>:
        return i * scale;
 80038d4:	6b02      	ldr	r2, [r0, #48]	; 0x30
    }
    /// @endcond

    virtual CWRUtil::Q5 indexToScreenXQ5(int16_t index) const
    {
        return valueToScreenXQ5(int2scaledX(index));
 80038d6:	6803      	ldr	r3, [r0, #0]
 80038d8:	4351      	muls	r1, r2
 80038da:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 80038de:	4718      	bx	r3

080038e0 <_ZNK8touchgfx16DynamicDataGraph16indexToScreenYQ5Es>:
    }

    virtual CWRUtil::Q5 indexToScreenYQ5(int16_t index) const
    {
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 80038e0:	6803      	ldr	r3, [r0, #0]
    virtual CWRUtil::Q5 indexToScreenYQ5(int16_t index) const
 80038e2:	b570      	push	{r4, r5, r6, lr}
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 80038e4:	f8d3 5118 	ldr.w	r5, [r3, #280]	; 0x118
 80038e8:	f8d3 3180 	ldr.w	r3, [r3, #384]	; 0x180
 80038ec:	f8d0 6144 	ldr.w	r6, [r0, #324]	; 0x144
    virtual CWRUtil::Q5 indexToScreenYQ5(int16_t index) const
 80038f0:	4604      	mov	r4, r0
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 80038f2:	4798      	blx	r3
 80038f4:	462b      	mov	r3, r5
 80038f6:	f856 1020 	ldr.w	r1, [r6, r0, lsl #2]
 80038fa:	4620      	mov	r0, r4
    }
 80038fc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 8003900:	4718      	bx	r3

08003902 <_ZNK8touchgfx15GraphScrollData9dataIndexEs>:

    virtual int16_t addValue(int value);

    virtual int16_t dataIndex(int16_t screenIndex) const
    {
        return usedCapacity < maxCapacity ? screenIndex : (screenIndex + current) % maxCapacity;
 8003902:	f9b0 211c 	ldrsh.w	r2, [r0, #284]	; 0x11c
 8003906:	f9b0 311e 	ldrsh.w	r3, [r0, #286]	; 0x11e
 800390a:	4293      	cmp	r3, r2
 800390c:	db07      	blt.n	800391e <_ZNK8touchgfx15GraphScrollData9dataIndexEs+0x1c>
 800390e:	f9b0 314c 	ldrsh.w	r3, [r0, #332]	; 0x14c
 8003912:	4419      	add	r1, r3
 8003914:	fb91 f0f2 	sdiv	r0, r1, r2
 8003918:	fb02 1110 	mls	r1, r2, r0, r1
 800391c:	b209      	sxth	r1, r1
    }
 800391e:	4608      	mov	r0, r1
 8003920:	4770      	bx	lr

08003922 <_ZNK8touchgfx15GraphScrollData10indexToXQ5Es>:

private:
    virtual CWRUtil::Q5 indexToXQ5(int16_t index) const
    {
        return CWRUtil::toQ5(index);
    }
 8003922:	0148      	lsls	r0, r1, #5
 8003924:	4770      	bx	lr

08003926 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8003926:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
    }
 800392a:	4770      	bx	lr

0800392c <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 800392c:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
 8003930:	4770      	bx	lr

08003932 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 8003932:	b510      	push	{r4, lr}
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8003934:	2200      	movs	r2, #0
        return rect.width;
 8003936:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 800393a:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 800393e:	8002      	strh	r2, [r0, #0]
 8003940:	8042      	strh	r2, [r0, #2]
 8003942:	8084      	strh	r4, [r0, #4]
 8003944:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 8003946:	bd10      	pop	{r4, pc}

08003948 <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 8003948:	2200      	movs	r2, #0
 800394a:	8002      	strh	r2, [r0, #0]
 800394c:	8042      	strh	r2, [r0, #2]
 800394e:	8082      	strh	r2, [r0, #4]
 8003950:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8003952:	4770      	bx	lr

08003954 <_ZN8touchgfx25AbstractGraphElementNoCWR8setColorENS_9colortypeE>:
     *
     * @see getColor
     */
    virtual void setColor(colortype newColor)
    {
        color = newColor;
 8003954:	62c1      	str	r1, [r0, #44]	; 0x2c
    }
 8003956:	4770      	bx	lr

08003958 <_ZNK8touchgfx25AbstractGraphElementNoCWR8getColorEv>:
     * @see setColor
     */
    virtual colortype getColor() const
    {
        return color;
    }
 8003958:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 800395a:	4770      	bx	lr

0800395c <_ZNK8touchgfx25AbstractGraphElementNoCWR16drawCanvasWidgetERKNS_4RectE>:

    virtual bool drawCanvasWidget(const Rect&) const
    {
        return true;
    }
 800395c:	2001      	movs	r0, #1
 800395e:	4770      	bx	lr

08003960 <_ZN8touchgfx25AbstractGraphElementNoCWR10setPainterERNS_15AbstractPainterE>:
    void normalizeRect(Rect& r) const;

private:
    virtual void setPainter(AbstractPainter& /*painter*/)
    {
    }
 8003960:	4770      	bx	lr

08003962 <_ZN8touchgfx20GraphElementGridBase22invalidateGraphPointAtEs>:
        return lineWidth;
    }

    virtual void invalidateGraphPointAt(int16_t)
    {
    }
 8003962:	4770      	bx	lr

08003964 <_ZNK8touchgfx20GraphElementGridBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE>:
     *
     * @return The correctly scaled major interval.
     */
    virtual int getCorrectlyScaledMajorInterval(const AbstractDataGraph* graph) const
    {
        return majorGrid == 0 ? 0 : majorGrid->getCorrectlyScaledGridInterval(graph);
 8003964:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8003966:	b118      	cbz	r0, 8003970 <_ZNK8touchgfx20GraphElementGridBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE+0xc>
 8003968:	6803      	ldr	r3, [r0, #0]
 800396a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800396e:	4718      	bx	r3
    }
 8003970:	4770      	bx	lr

08003972 <_ZNK8touchgfx17GraphElementGridX13enclosingAreaEPKNS_17AbstractDataGraphE>:
    {
        return convertToGraphScaleX(graph, gridInterval, dataScale);
    }

protected:
    virtual Rect enclosingArea(const AbstractDataGraph* graph) const
 8003972:	b530      	push	{r4, r5, lr}
        return graphArea.getHeight() - (topPadding + bottomPadding);
 8003974:	f8b2 111a 	ldrh.w	r1, [r2, #282]	; 0x11a
        return topPadding;
 8003978:	f9b2 4114 	ldrsh.w	r4, [r2, #276]	; 0x114
        return rect.width;
 800397c:	f9b2 5040 	ldrsh.w	r5, [r2, #64]	; 0x40
        return graphArea.getHeight() - (topPadding + bottomPadding);
 8003980:	f8b2 2042 	ldrh.w	r2, [r2, #66]	; 0x42
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8003984:	8044      	strh	r4, [r0, #2]
 8003986:	4421      	add	r1, r4
 8003988:	1a52      	subs	r2, r2, r1
 800398a:	2100      	movs	r1, #0
 800398c:	8001      	strh	r1, [r0, #0]
 800398e:	8085      	strh	r5, [r0, #4]
 8003990:	80c2      	strh	r2, [r0, #6]
    {
        return Rect(0, graph->getGraphAreaPaddingTop(), graph->getGraphAreaWidthIncludingPadding(), graph->getGraphAreaHeight());
    }
 8003992:	bd30      	pop	{r4, r5, pc}

08003994 <_ZNK8touchgfx17GraphElementGridX8lineRectEssss>:

    virtual Rect lineRect(int16_t start, int16_t length, int16_t pos, int16_t width) const
 8003994:	b510      	push	{r4, lr}
 8003996:	8042      	strh	r2, [r0, #2]
 8003998:	f9bd 4008 	ldrsh.w	r4, [sp, #8]
 800399c:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 80039a0:	8004      	strh	r4, [r0, #0]
 80039a2:	8082      	strh	r2, [r0, #4]
 80039a4:	80c3      	strh	r3, [r0, #6]
    {
        return Rect(pos, start, width, length);
    }
 80039a6:	bd10      	pop	{r4, pc}

080039a8 <_ZNK8touchgfx17GraphElementGridX22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:

    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeXMinScaled();
 80039a8:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
 80039aa:	4608      	mov	r0, r1
        return graph->getGraphRangeXMinScaled();
 80039ac:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 80039b0:	4718      	bx	r3

080039b2 <_ZNK8touchgfx17GraphElementGridX22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeXMaxScaled();
 80039b2:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
 80039b4:	4608      	mov	r0, r1
        return graph->getGraphRangeXMaxScaled();
 80039b6:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 80039ba:	4718      	bx	r3

080039bc <_ZNK8touchgfx17GraphElementGridX17getGraphAreaStartEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphAreaStart(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingTop();
    }
 80039bc:	f9b1 0114 	ldrsh.w	r0, [r1, #276]	; 0x114
 80039c0:	4770      	bx	lr

080039c2 <_ZNK8touchgfx17GraphElementGridX18getGraphAreaLengthEPKNS_17AbstractDataGraphE>:
 80039c2:	f8b1 0114 	ldrh.w	r0, [r1, #276]	; 0x114
 80039c6:	f8b1 311a 	ldrh.w	r3, [r1, #282]	; 0x11a
 80039ca:	4403      	add	r3, r0
 80039cc:	f8b1 0042 	ldrh.w	r0, [r1, #66]	; 0x42
 80039d0:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaLength(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaHeight();
    }
 80039d2:	b200      	sxth	r0, r0
 80039d4:	4770      	bx	lr

080039d6 <_ZNK8touchgfx17GraphElementGridX20getGraphAreaStartPosEPKNS_17AbstractDataGraphE>:

    virtual int getGraphAreaStartPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingLeft();
    }
 80039d6:	f9b1 0116 	ldrsh.w	r0, [r1, #278]	; 0x116
 80039da:	4770      	bx	lr

080039dc <_ZNK8touchgfx17GraphElementGridX18getGraphAreaEndPosEPKNS_17AbstractDataGraphE>:
        return graphArea.getWidth() - (leftPadding + rightPadding);
 80039dc:	f8b1 0116 	ldrh.w	r0, [r1, #278]	; 0x116
 80039e0:	f8b1 3118 	ldrh.w	r3, [r1, #280]	; 0x118
 80039e4:	4403      	add	r3, r0
 80039e6:	f8b1 0040 	ldrh.w	r0, [r1, #64]	; 0x40
 80039ea:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaEndPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaWidth();
    }
 80039ec:	b200      	sxth	r0, r0
 80039ee:	4770      	bx	lr

080039f0 <_ZNK8touchgfx17GraphElementGridX15valueToScreenQ5EPKNS_17AbstractDataGraphEi>:
        return graph->valueToScreenXQ5(x);
 80039f0:	680b      	ldr	r3, [r1, #0]

    virtual CWRUtil::Q5 valueToScreenQ5(const AbstractDataGraph* graph, int value) const
 80039f2:	4608      	mov	r0, r1
        return graph->valueToScreenXQ5(x);
 80039f4:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 80039f8:	4611      	mov	r1, r2
 80039fa:	4718      	bx	r3

080039fc <_ZNK8touchgfx17GraphElementGridY13enclosingAreaEPKNS_17AbstractDataGraphE>:
 80039fc:	f8b2 1118 	ldrh.w	r1, [r2, #280]	; 0x118
    {
        return convertToGraphScaleY(graph, gridInterval, dataScale);
    }

protected:
    virtual Rect enclosingArea(const AbstractDataGraph* graph) const
 8003a00:	b530      	push	{r4, r5, lr}
        return leftPadding;
 8003a02:	f9b2 5116 	ldrsh.w	r5, [r2, #278]	; 0x116
 8003a06:	8005      	strh	r5, [r0, #0]
        return graphArea.getWidth() - (leftPadding + rightPadding);
 8003a08:	186c      	adds	r4, r5, r1
 8003a0a:	f8b2 1040 	ldrh.w	r1, [r2, #64]	; 0x40
        return rect.height;
 8003a0e:	f9b2 2042 	ldrsh.w	r2, [r2, #66]	; 0x42
 8003a12:	80c2      	strh	r2, [r0, #6]
 8003a14:	1b09      	subs	r1, r1, r4
 8003a16:	2400      	movs	r4, #0
 8003a18:	8044      	strh	r4, [r0, #2]
 8003a1a:	8081      	strh	r1, [r0, #4]
    {
        return Rect(graph->getGraphAreaPaddingLeft(), 0, graph->getGraphAreaWidth(), graph->getGraphAreaHeightIncludingPadding());
    }
 8003a1c:	bd30      	pop	{r4, r5, pc}

08003a1e <_ZNK8touchgfx17GraphElementGridY8lineRectEssss>:
 8003a1e:	8002      	strh	r2, [r0, #0]
 8003a20:	8083      	strh	r3, [r0, #4]
 8003a22:	f9bd 2000 	ldrsh.w	r2, [sp]
 8003a26:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8003a2a:	8042      	strh	r2, [r0, #2]
 8003a2c:	80c3      	strh	r3, [r0, #6]

    virtual Rect lineRect(int16_t start, int16_t length, int16_t pos, int16_t width) const
    {
        return Rect(start, pos, length, width);
    }
 8003a2e:	4770      	bx	lr

08003a30 <_ZNK8touchgfx17GraphElementGridY22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:

    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeYMinScaled();
 8003a30:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
 8003a32:	4608      	mov	r0, r1
        return graph->getGraphRangeYMinScaled();
 8003a34:	f8d3 30ec 	ldr.w	r3, [r3, #236]	; 0xec
 8003a38:	4718      	bx	r3

08003a3a <_ZNK8touchgfx17GraphElementGridY22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeYMaxScaled();
 8003a3a:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
 8003a3c:	4608      	mov	r0, r1
        return graph->getGraphRangeYMaxScaled();
 8003a3e:	f8d3 30f8 	ldr.w	r3, [r3, #248]	; 0xf8
 8003a42:	4718      	bx	r3

08003a44 <_ZNK8touchgfx17GraphElementGridY17getGraphAreaStartEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphAreaStart(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingLeft();
    }
 8003a44:	f9b1 0116 	ldrsh.w	r0, [r1, #278]	; 0x116
 8003a48:	4770      	bx	lr

08003a4a <_ZNK8touchgfx17GraphElementGridY18getGraphAreaLengthEPKNS_17AbstractDataGraphE>:
 8003a4a:	f8b1 0116 	ldrh.w	r0, [r1, #278]	; 0x116
 8003a4e:	f8b1 3118 	ldrh.w	r3, [r1, #280]	; 0x118
 8003a52:	4403      	add	r3, r0
 8003a54:	f8b1 0040 	ldrh.w	r0, [r1, #64]	; 0x40
 8003a58:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaLength(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaWidth();
    }
 8003a5a:	b200      	sxth	r0, r0
 8003a5c:	4770      	bx	lr

08003a5e <_ZNK8touchgfx17GraphElementGridY20getGraphAreaStartPosEPKNS_17AbstractDataGraphE>:

    virtual int getGraphAreaStartPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingTop();
    }
 8003a5e:	f9b1 0114 	ldrsh.w	r0, [r1, #276]	; 0x114
 8003a62:	4770      	bx	lr

08003a64 <_ZNK8touchgfx17GraphElementGridY18getGraphAreaEndPosEPKNS_17AbstractDataGraphE>:
        return graphArea.getHeight() - (topPadding + bottomPadding);
 8003a64:	f8b1 0114 	ldrh.w	r0, [r1, #276]	; 0x114
 8003a68:	f8b1 311a 	ldrh.w	r3, [r1, #282]	; 0x11a
 8003a6c:	4403      	add	r3, r0
 8003a6e:	f8b1 0042 	ldrh.w	r0, [r1, #66]	; 0x42
 8003a72:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaEndPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaHeight();
    }
 8003a74:	b200      	sxth	r0, r0
 8003a76:	4770      	bx	lr

08003a78 <_ZNK8touchgfx17GraphElementGridY15valueToScreenQ5EPKNS_17AbstractDataGraphEi>:
        return graph->valueToScreenYQ5(y);
 8003a78:	680b      	ldr	r3, [r1, #0]

    virtual CWRUtil::Q5 valueToScreenQ5(const AbstractDataGraph* graph, int value) const
 8003a7a:	4608      	mov	r0, r1
        return graph->valueToScreenYQ5(y);
 8003a7c:	f8d3 3118 	ldr.w	r3, [r3, #280]	; 0x118
 8003a80:	4611      	mov	r1, r2
 8003a82:	4718      	bx	r3

08003a84 <_ZN19ScreenGraphViewBaseD1Ev>:

class ScreenGraphViewBase : public touchgfx::View<ScreenGraphPresenter>
{
public:
    ScreenGraphViewBase();
    virtual ~ScreenGraphViewBase() {}
 8003a84:	4770      	bx	lr

08003a86 <_ZN19ScreenGraphViewBase11setupScreenEv>:
}

void ScreenGraphViewBase::setupScreen()
{

}
 8003a86:	4770      	bx	lr

08003a88 <_ZN8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003a88:	4770      	bx	lr

08003a8a <_ZN8touchgfx11GraphScrollILs60EED1Ev>:
 * the new values added to the graph.
 *
 * @tparam CAPACITY The maximum number of data points on the graph.
 */
template <int16_t CAPACITY>
class GraphScroll : public GraphScrollData
 8003a8a:	4770      	bx	lr

08003a8c <_ZN8touchgfx11GraphScrollILs600EED1Ev>:
 8003a8c:	4770      	bx	lr

08003a8e <_ZN8touchgfx17GraphElementGridYD1Ev>:
class GraphElementGridY : public GraphElementGridBase
 8003a8e:	4770      	bx	lr

08003a90 <_ZN8touchgfx17GraphElementGridXD1Ev>:
class GraphElementGridX : public GraphElementGridBase
 8003a90:	4770      	bx	lr

08003a92 <_ZN8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8003a92:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003a94:	68c2      	ldr	r2, [r0, #12]
 8003a96:	6844      	ldr	r4, [r0, #4]
 8003a98:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8003a9a:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8003a9c:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8003aa0:	07d2      	lsls	r2, r2, #31
 8003aa2:	bf48      	it	mi
 8003aa4:	5962      	ldrmi	r2, [r4, r5]
 8003aa6:	689b      	ldr	r3, [r3, #8]
    }
 8003aa8:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003aaa:	bf48      	it	mi
 8003aac:	58d3      	ldrmi	r3, [r2, r3]
 8003aae:	4718      	bx	r3

08003ab0 <_ZNK8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8003ab0:	6843      	ldr	r3, [r0, #4]
 8003ab2:	b12b      	cbz	r3, 8003ac0 <_ZNK8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8003ab4:	6883      	ldr	r3, [r0, #8]
 8003ab6:	b92b      	cbnz	r3, 8003ac4 <_ZNK8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8003ab8:	68c0      	ldr	r0, [r0, #12]
 8003aba:	f000 0001 	and.w	r0, r0, #1
 8003abe:	4770      	bx	lr
 8003ac0:	4618      	mov	r0, r3
 8003ac2:	4770      	bx	lr
 8003ac4:	2001      	movs	r0, #1
    }
 8003ac6:	4770      	bx	lr

08003ac8 <_ZN8touchgfx17GraphElementGridXD0Ev>:
 8003ac8:	b510      	push	{r4, lr}
 8003aca:	2140      	movs	r1, #64	; 0x40
 8003acc:	4604      	mov	r4, r0
 8003ace:	f01c f8f9 	bl	801fcc4 <_ZdlPvj>
 8003ad2:	4620      	mov	r0, r4
 8003ad4:	bd10      	pop	{r4, pc}

08003ad6 <_ZN8touchgfx17GraphElementGridYD0Ev>:
class GraphElementGridY : public GraphElementGridBase
 8003ad6:	b510      	push	{r4, lr}
 8003ad8:	2140      	movs	r1, #64	; 0x40
 8003ada:	4604      	mov	r4, r0
 8003adc:	f01c f8f2 	bl	801fcc4 <_ZdlPvj>
 8003ae0:	4620      	mov	r0, r4
 8003ae2:	bd10      	pop	{r4, pc}

08003ae4 <_ZN8touchgfx11GraphScrollILs600EED0Ev>:
 8003ae4:	b510      	push	{r4, lr}
 8003ae6:	f44f 612b 	mov.w	r1, #2736	; 0xab0
 8003aea:	4604      	mov	r4, r0
 8003aec:	f01c f8ea 	bl	801fcc4 <_ZdlPvj>
 8003af0:	4620      	mov	r0, r4
 8003af2:	bd10      	pop	{r4, pc}

08003af4 <_ZN8touchgfx11GraphScrollILs60EED0Ev>:
 8003af4:	b510      	push	{r4, lr}
 8003af6:	f44f 7110 	mov.w	r1, #576	; 0x240
 8003afa:	4604      	mov	r4, r0
 8003afc:	f01c f8e2 	bl	801fcc4 <_ZdlPvj>
 8003b00:	4620      	mov	r0, r4
 8003b02:	bd10      	pop	{r4, pc}

08003b04 <_ZN8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003b04:	b510      	push	{r4, lr}
 8003b06:	2110      	movs	r1, #16
 8003b08:	4604      	mov	r4, r0
 8003b0a:	f01c f8db 	bl	801fcc4 <_ZdlPvj>
 8003b0e:	4620      	mov	r0, r4
 8003b10:	bd10      	pop	{r4, pc}

08003b12 <_ZN19ScreenGraphViewBaseD0Ev>:
 8003b12:	b510      	push	{r4, lr}
 8003b14:	f242 5144 	movw	r1, #9540	; 0x2544
 8003b18:	4604      	mov	r4, r0
 8003b1a:	f01c f8d3 	bl	801fcc4 <_ZdlPvj>
 8003b1e:	4620      	mov	r0, r4
 8003b20:	bd10      	pop	{r4, pc}

08003b22 <_ZNK8touchgfx17AbstractDataGraph17invalidateContentEv>:
        if (alpha > 0)
 8003b22:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8003b26:	b10b      	cbz	r3, 8003b2c <_ZNK8touchgfx17AbstractDataGraph17invalidateContentEv+0xa>
            Container::invalidateContent();
 8003b28:	f006 bab9 	b.w	800a09e <_ZNK8touchgfx9Container17invalidateContentEv>
    }
 8003b2c:	4770      	bx	lr

08003b2e <_ZNK8touchgfx17GraphElementGridX30getCorrectlyScaledGridIntervalEPKNS_17AbstractDataGraphE>:
    virtual int getCorrectlyScaledGridInterval(const AbstractDataGraph* graph) const
 8003b2e:	b513      	push	{r0, r1, r4, lr}
 8003b30:	4603      	mov	r3, r0
 8003b32:	4608      	mov	r0, r1
        return convertToGraphScaleX(graph, gridInterval, dataScale);
 8003b34:	e9d3 140c 	ldrd	r1, r4, [r3, #48]	; 0x30
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleX());
 8003b38:	6803      	ldr	r3, [r0, #0]
        return convertToGraphScaleX(graph, gridInterval, dataScale);
 8003b3a:	9101      	str	r1, [sp, #4]
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleX());
 8003b3c:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8003b40:	4798      	blx	r3
 8003b42:	9901      	ldr	r1, [sp, #4]
 8003b44:	4602      	mov	r2, r0
 8003b46:	4620      	mov	r0, r4
    }
 8003b48:	b002      	add	sp, #8
 8003b4a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleX());
 8003b4e:	f008 b8ef 	b.w	800bd30 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>

08003b52 <_ZNK8touchgfx17GraphElementGridY30getCorrectlyScaledGridIntervalEPKNS_17AbstractDataGraphE>:
    virtual int getCorrectlyScaledGridInterval(const AbstractDataGraph* graph) const
 8003b52:	b513      	push	{r0, r1, r4, lr}
 8003b54:	4603      	mov	r3, r0
 8003b56:	4608      	mov	r0, r1
        return convertToGraphScaleY(graph, gridInterval, dataScale);
 8003b58:	e9d3 140c 	ldrd	r1, r4, [r3, #48]	; 0x30
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleY());
 8003b5c:	6803      	ldr	r3, [r0, #0]
        return convertToGraphScaleY(graph, gridInterval, dataScale);
 8003b5e:	9101      	str	r1, [sp, #4]
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleY());
 8003b60:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8003b64:	4798      	blx	r3
 8003b66:	9901      	ldr	r1, [sp, #4]
 8003b68:	4602      	mov	r2, r0
 8003b6a:	4620      	mov	r0, r4
    }
 8003b6c:	b002      	add	sp, #8
 8003b6e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleY());
 8003b72:	f008 b8dd 	b.w	800bd30 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
	...

08003b78 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs>:
        assert(index >= 0 && index < usedCapacity);
 8003b78:	1e0a      	subs	r2, r1, #0
    virtual int indexToDataPointYScaled(int16_t index) const
 8003b7a:	b510      	push	{r4, lr}
        assert(index >= 0 && index < usedCapacity);
 8003b7c:	db03      	blt.n	8003b86 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0xe>
 8003b7e:	f9b0 411e 	ldrsh.w	r4, [r0, #286]	; 0x11e
 8003b82:	4294      	cmp	r4, r2
 8003b84:	dc06      	bgt.n	8003b94 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x1c>
 8003b86:	4b08      	ldr	r3, [pc, #32]	; (8003ba8 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x30>)
 8003b88:	4a08      	ldr	r2, [pc, #32]	; (8003bac <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x34>)
 8003b8a:	4809      	ldr	r0, [pc, #36]	; (8003bb0 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x38>)
 8003b8c:	f240 6133 	movw	r1, #1587	; 0x633
 8003b90:	f01c f8c6 	bl	801fd20 <__assert_func>
        return yValues[dataIndex(index)];
 8003b94:	6803      	ldr	r3, [r0, #0]
 8003b96:	f8d0 4144 	ldr.w	r4, [r0, #324]	; 0x144
 8003b9a:	f8d3 3180 	ldr.w	r3, [r3, #384]	; 0x180
 8003b9e:	4798      	blx	r3
    }
 8003ba0:	f854 0020 	ldr.w	r0, [r4, r0, lsl #2]
 8003ba4:	bd10      	pop	{r4, pc}
 8003ba6:	bf00      	nop
 8003ba8:	0802210c 	.word	0x0802210c
 8003bac:	0802212f 	.word	0x0802212f
 8003bb0:	0802217e 	.word	0x0802217e

08003bb4 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs>:
        assert(index >= 0 && index < usedCapacity);
 8003bb4:	1e0b      	subs	r3, r1, #0
    virtual int indexToDataPointXScaled(int16_t index) const
 8003bb6:	b510      	push	{r4, lr}
 8003bb8:	4604      	mov	r4, r0
        assert(index >= 0 && index < usedCapacity);
 8003bba:	db03      	blt.n	8003bc4 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x10>
 8003bbc:	f9b0 211e 	ldrsh.w	r2, [r0, #286]	; 0x11e
 8003bc0:	429a      	cmp	r2, r3
 8003bc2:	dc06      	bgt.n	8003bd2 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x1e>
 8003bc4:	4b07      	ldr	r3, [pc, #28]	; (8003be4 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x30>)
 8003bc6:	4a08      	ldr	r2, [pc, #32]	; (8003be8 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x34>)
 8003bc8:	4808      	ldr	r0, [pc, #32]	; (8003bec <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x38>)
 8003bca:	f240 612d 	movw	r1, #1581	; 0x62d
 8003bce:	f01c f8a7 	bl	801fd20 <__assert_func>
        return (indexToGlobalIndex(index) * xAxisFactor) + xAxisOffset;
 8003bd2:	6803      	ldr	r3, [r0, #0]
 8003bd4:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
 8003bd8:	4798      	blx	r3
 8003bda:	e9d4 234f 	ldrd	r2, r3, [r4, #316]	; 0x13c
    }
 8003bde:	fb02 3000 	mla	r0, r2, r0, r3
 8003be2:	bd10      	pop	{r4, pc}
 8003be4:	0802210c 	.word	0x0802210c
 8003be8:	080221db 	.word	0x080221db
 8003bec:	0802217e 	.word	0x0802217e

08003bf0 <_ZN19ScreenGraphViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

}

void ScreenGraphViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &button1)
 8003bf0:	f100 03cc 	add.w	r3, r0, #204	; 0xcc
 8003bf4:	4299      	cmp	r1, r3
{
 8003bf6:	b510      	push	{r4, lr}
 8003bf8:	4604      	mov	r4, r0
    if (&src == &button1)
 8003bfa:	d105      	bne.n	8003c08 <_ZN19ScreenGraphViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x18>
     */
    virtual void action1();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8003bfc:	f00c fd46 	bl	801068c <_ZN8touchgfx11Application11getInstanceEv>
        dynamicGraph1.setVisible(!dynamicGraph1.isVisible());
        dynamicGraph2.setVisible(!dynamicGraph2.isVisible());
        dynamicGraph1.invalidate();
        dynamicGraph2.invalidate();
    }
}
 8003c00:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        application().gotoScreen1ScreenWipeTransitionEast();
 8003c04:	f7fe bcaa 	b.w	800255c <_ZN23FrontendApplicationBase35gotoScreen1ScreenWipeTransitionEastEv>
    else if (&src == &toggleButton1)
 8003c08:	f500 5386 	add.w	r3, r0, #4288	; 0x10c0
 8003c0c:	331c      	adds	r3, #28
 8003c0e:	4299      	cmp	r1, r3
 8003c10:	d115      	bne.n	8003c3e <_ZN19ScreenGraphViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x4e>
        dynamicGraph1.setVisible(!dynamicGraph1.isVisible());
 8003c12:	f890 3d31 	ldrb.w	r3, [r0, #3377]	; 0xd31
 8003c16:	f083 0301 	eor.w	r3, r3, #1
        visible = vis;
 8003c1a:	f880 3d31 	strb.w	r3, [r0, #3377]	; 0xd31
        dynamicGraph2.setVisible(!dynamicGraph2.isVisible());
 8003c1e:	f890 3125 	ldrb.w	r3, [r0, #293]	; 0x125
 8003c22:	f083 0301 	eor.w	r3, r3, #1
 8003c26:	f880 3125 	strb.w	r3, [r0, #293]	; 0x125
        dynamicGraph1.invalidate();
 8003c2a:	f600 500c 	addw	r0, r0, #3340	; 0xd0c
 8003c2e:	f00d fcc4 	bl	80115ba <_ZNK8touchgfx8Drawable10invalidateEv>
        dynamicGraph2.invalidate();
 8003c32:	f504 7080 	add.w	r0, r4, #256	; 0x100
}
 8003c36:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        dynamicGraph2.invalidate();
 8003c3a:	f00d bcbe 	b.w	80115ba <_ZNK8touchgfx8Drawable10invalidateEv>
}
 8003c3e:	bd10      	pop	{r4, pc}

08003c40 <_ZN8touchgfx14AbstractButtonC1Ev>:
    AbstractButton()
 8003c40:	b510      	push	{r4, lr}
        : Widget(), action(), pressed(false)
 8003c42:	2226      	movs	r2, #38	; 0x26
    AbstractButton()
 8003c44:	4604      	mov	r4, r0
        : Widget(), action(), pressed(false)
 8003c46:	2100      	movs	r1, #0
 8003c48:	f01c f9f0 	bl	802002c <memset>
 8003c4c:	4620      	mov	r0, r4
 8003c4e:	f7ff f837 	bl	8002cc0 <_ZN8touchgfx6WidgetC1Ev>
 8003c52:	4b05      	ldr	r3, [pc, #20]	; (8003c68 <_ZN8touchgfx14AbstractButtonC1Ev+0x28>)
 8003c54:	6023      	str	r3, [r4, #0]
 8003c56:	2300      	movs	r3, #0
 8003c58:	62a3      	str	r3, [r4, #40]	; 0x28
 8003c5a:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
        touchable = touch;
 8003c5e:	2301      	movs	r3, #1
 8003c60:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
    }
 8003c64:	4620      	mov	r0, r4
 8003c66:	bd10      	pop	{r4, pc}
 8003c68:	08023398 	.word	0x08023398

08003c6c <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll>:
     * @param  factor2 The second factor.
     * @param  divisor The divisor.
     *
     * @return factor1 * factor2 / divisor as a Q5
     */
    static Q5 muldiv_toQ5(int32_t factor1, int32_t factor2, int32_t divisor)
 8003c6c:	b537      	push	{r0, r1, r2, r4, r5, lr}
    {
        int32_t remainder;
        int32_t result = muldiv(factor1, factor2, divisor, remainder);
 8003c6e:	ab01      	add	r3, sp, #4
    static Q5 muldiv_toQ5(int32_t factor1, int32_t factor2, int32_t divisor)
 8003c70:	4615      	mov	r5, r2
        int32_t result = muldiv(factor1, factor2, divisor, remainder);
 8003c72:	f00d fe44 	bl	80118fe <_ZN8touchgfx6muldivElllRl>
        if (result >= 0)
 8003c76:	2800      	cmp	r0, #0
 8003c78:	ea4f 1440 	mov.w	r4, r0, lsl #5
        return Q5(muldiv((int)factor1, (int)factor2, (int)divisor));
 8003c7c:	9901      	ldr	r1, [sp, #4]
 8003c7e:	462a      	mov	r2, r5
 8003c80:	f04f 0020 	mov.w	r0, #32
        if (result >= 0)
 8003c84:	db04      	blt.n	8003c90 <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll+0x24>
        return Q5(muldiv((int)factor1, (int)factor2, (int)divisor));
 8003c86:	f00d fe59 	bl	801193c <_ZN8touchgfx6muldivElll>
            return Q5(v + q5.v);
 8003c8a:	4420      	add	r0, r4
        {
            return toQ5(result) + muldivQ5(Q5(Rasterizer::POLY_BASE_SIZE), Q5(remainder), Q5(divisor));
        }
        return toQ5(result) - muldivQ5(Q5(Rasterizer::POLY_BASE_SIZE), Q5(remainder), Q5(divisor));
    }
 8003c8c:	b003      	add	sp, #12
 8003c8e:	bd30      	pop	{r4, r5, pc}
        return Q5(muldiv((int)factor1, (int)factor2, (int)divisor));
 8003c90:	f00d fe54 	bl	801193c <_ZN8touchgfx6muldivElll>
            return Q5(v - q5.v);
 8003c94:	1a20      	subs	r0, r4, r0
 8003c96:	e7f9      	b.n	8003c8c <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll+0x20>

08003c98 <_ZNK8touchgfx17AbstractDataGraph16valueToScreenYQ5Ei>:
    virtual CWRUtil::Q5 valueToScreenYQ5(int y) const
 8003c98:	b570      	push	{r4, r5, r6, lr}
        return graphArea.getHeight() - (topPadding + bottomPadding);
 8003c9a:	f9b0 4114 	ldrsh.w	r4, [r0, #276]	; 0x114
 8003c9e:	f8b0 511a 	ldrh.w	r5, [r0, #282]	; 0x11a
 8003ca2:	1963      	adds	r3, r4, r5
 8003ca4:	f8b0 5042 	ldrh.w	r5, [r0, #66]	; 0x42
 8003ca8:	1aed      	subs	r5, r5, r3
        return CWRUtil::toQ5(graphAreaHeight + topPadding - 1) - CWRUtil::muldiv_toQ5(y - graphRangeMinY, graphAreaHeight - 1, graphRangeMaxY - graphRangeMinY);
 8003caa:	e9d0 324d 	ldrd	r3, r2, [r0, #308]	; 0x134
    virtual CWRUtil::Q5 valueToScreenYQ5(int y) const
 8003cae:	460e      	mov	r6, r1
        return CWRUtil::toQ5(graphAreaHeight + topPadding - 1) - CWRUtil::muldiv_toQ5(y - graphRangeMinY, graphAreaHeight - 1, graphRangeMaxY - graphRangeMinY);
 8003cb0:	b22d      	sxth	r5, r5
 8003cb2:	1ad2      	subs	r2, r2, r3
 8003cb4:	1e69      	subs	r1, r5, #1
 8003cb6:	1af0      	subs	r0, r6, r3
 8003cb8:	f7ff ffd8 	bl	8003c6c <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll>
 8003cbc:	442c      	add	r4, r5
 8003cbe:	3c01      	subs	r4, #1
    }
 8003cc0:	ebc0 1044 	rsb	r0, r0, r4, lsl #5
 8003cc4:	bd70      	pop	{r4, r5, r6, pc}

08003cc6 <_ZNK8touchgfx17AbstractDataGraph16valueToScreenXQ5Ei>:
    virtual CWRUtil::Q5 valueToScreenXQ5(int x) const
 8003cc6:	b538      	push	{r3, r4, r5, lr}
 8003cc8:	4604      	mov	r4, r0
 8003cca:	4608      	mov	r0, r1
        return graphArea.getWidth() - (leftPadding + rightPadding);
 8003ccc:	f8b4 3118 	ldrh.w	r3, [r4, #280]	; 0x118
 8003cd0:	f8b4 1116 	ldrh.w	r1, [r4, #278]	; 0x116
 8003cd4:	440b      	add	r3, r1
 8003cd6:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
        return CWRUtil::muldiv_toQ5(x - graphRangeMinX, getGraphAreaWidth() - 1, graphRangeMaxX - graphRangeMinX) + CWRUtil::toQ5(leftPadding);
 8003cda:	e9d4 524b 	ldrd	r5, r2, [r4, #300]	; 0x12c
        return graphArea.getWidth() - (leftPadding + rightPadding);
 8003cde:	1ac9      	subs	r1, r1, r3
        return CWRUtil::muldiv_toQ5(x - graphRangeMinX, getGraphAreaWidth() - 1, graphRangeMaxX - graphRangeMinX) + CWRUtil::toQ5(leftPadding);
 8003ce0:	b209      	sxth	r1, r1
 8003ce2:	1b52      	subs	r2, r2, r5
 8003ce4:	3901      	subs	r1, #1
 8003ce6:	1b40      	subs	r0, r0, r5
 8003ce8:	f7ff ffc0 	bl	8003c6c <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll>
            return Q5(v + q5.v);
 8003cec:	f9b4 3116 	ldrsh.w	r3, [r4, #278]	; 0x116
    }
 8003cf0:	eb00 1043 	add.w	r0, r0, r3, lsl #5
 8003cf4:	bd38      	pop	{r3, r4, r5, pc}
	...

08003cf8 <_ZN8touchgfx20GraphElementGridBaseC1Ev>:
    GraphElementGridBase()
 8003cf8:	b510      	push	{r4, lr}
 8003cfa:	4604      	mov	r4, r0
        : CanvasWidget()
 8003cfc:	f007 fc00 	bl	800b500 <_ZN8touchgfx12CanvasWidgetC1Ev>
        : dataScale(1), gridInterval(10), lineWidth(1), majorGrid(0)
 8003d00:	4a06      	ldr	r2, [pc, #24]	; (8003d1c <_ZN8touchgfx20GraphElementGridBaseC1Ev+0x24>)
 8003d02:	6022      	str	r2, [r4, #0]
        : color(col)
 8003d04:	2300      	movs	r3, #0
 8003d06:	2201      	movs	r2, #1
 8003d08:	210a      	movs	r1, #10
 8003d0a:	e9c4 210c 	strd	r2, r1, [r4, #48]	; 0x30
 8003d0e:	62e3      	str	r3, [r4, #44]	; 0x2c
 8003d10:	f884 2038 	strb.w	r2, [r4, #56]	; 0x38
 8003d14:	63e3      	str	r3, [r4, #60]	; 0x3c
    }
 8003d16:	4620      	mov	r0, r4
 8003d18:	bd10      	pop	{r4, pc}
 8003d1a:	bf00      	nop
 8003d1c:	08023100 	.word	0x08023100

08003d20 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 8003d20:	b570      	push	{r4, r5, r6, lr}
        : widgetWidth(0)
 8003d22:	2300      	movs	r3, #0
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8003d24:	4e12      	ldr	r6, [pc, #72]	; (8003d70 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 8003d26:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 8003d28:	4b12      	ldr	r3, [pc, #72]	; (8003d74 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 8003d2a:	6003      	str	r3, [r0, #0]
 8003d2c:	6833      	ldr	r3, [r6, #0]
 8003d2e:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
    AbstractPainterRGB565()
 8003d32:	4605      	mov	r5, r0
 8003d34:	b10a      	cbz	r2, 8003d3a <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
 8003d36:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8003d38:	b900      	cbnz	r0, 8003d3c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
 8003d3a:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 8003d3c:	6803      	ldr	r3, [r0, #0]
 8003d3e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003d40:	4798      	blx	r3
        return auxiliaryLCD;
 8003d42:	6833      	ldr	r3, [r6, #0]
 8003d44:	fab0 f480 	clz	r4, r0
 8003d48:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8003d4a:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 8003d4c:	b130      	cbz	r0, 8003d5c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 8003d4e:	6803      	ldr	r3, [r0, #0]
 8003d50:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003d52:	4798      	blx	r3
 8003d54:	2800      	cmp	r0, #0
 8003d56:	bf08      	it	eq
 8003d58:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 8003d5c:	b92c      	cbnz	r4, 8003d6a <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 8003d5e:	4b06      	ldr	r3, [pc, #24]	; (8003d78 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 8003d60:	4a06      	ldr	r2, [pc, #24]	; (8003d7c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 8003d62:	4807      	ldr	r0, [pc, #28]	; (8003d80 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 8003d64:	212c      	movs	r1, #44	; 0x2c
 8003d66:	f01b ffdb 	bl	801fd20 <__assert_func>
    }
 8003d6a:	4628      	mov	r0, r5
 8003d6c:	bd70      	pop	{r4, r5, r6, pc}
 8003d6e:	bf00      	nop
 8003d70:	2001535c 	.word	0x2001535c
 8003d74:	080224d8 	.word	0x080224d8
 8003d78:	0802222a 	.word	0x0802222a
 8003d7c:	08022288 	.word	0x08022288
 8003d80:	080222c1 	.word	0x080222c1

08003d84 <_ZN8touchgfx15GraphLabelsBaseC1Ev>:
 * @see GraphLabelsX, GraphLabelsY
 */
class GraphLabelsBase : public AbstractGraphDecoration
{
public:
    GraphLabelsBase()
 8003d84:	b510      	push	{r4, lr}
 8003d86:	4604      	mov	r4, r0
        : CanvasWidget()
 8003d88:	f007 fbba 	bl	800b500 <_ZN8touchgfx12CanvasWidgetC1Ev>
        : AbstractGraphDecoration(),
          dataScale(1), labelInterval(0), labelTypedText(TYPED_TEXT_INVALID), labelRotation(TEXT_ROTATE_0), labelDecimals(0), labelDecimalPoint('.'), majorLabel(0)
 8003d8c:	4a0a      	ldr	r2, [pc, #40]	; (8003db8 <_ZN8touchgfx15GraphLabelsBaseC1Ev+0x34>)
 8003d8e:	6022      	str	r2, [r4, #0]
 8003d90:	2300      	movs	r3, #0
 8003d92:	2201      	movs	r2, #1
 8003d94:	e9c4 230c 	strd	r2, r3, [r4, #48]	; 0x30
 8003d98:	4a08      	ldr	r2, [pc, #32]	; (8003dbc <_ZN8touchgfx15GraphLabelsBaseC1Ev+0x38>)
 8003d9a:	63a2      	str	r2, [r4, #56]	; 0x38
 8003d9c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8003da0:	87a2      	strh	r2, [r4, #60]	; 0x3c
 8003da2:	222e      	movs	r2, #46	; 0x2e
 8003da4:	62e3      	str	r3, [r4, #44]	; 0x2c
 8003da6:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 8003daa:	f8a4 3042 	strh.w	r3, [r4, #66]	; 0x42
 8003dae:	f8a4 2044 	strh.w	r2, [r4, #68]	; 0x44
 8003db2:	64a3      	str	r3, [r4, #72]	; 0x48
    {
    }
 8003db4:	4620      	mov	r0, r4
 8003db6:	bd10      	pop	{r4, pc}
 8003db8:	080232f8 	.word	0x080232f8
 8003dbc:	0802169c 	.word	0x0802169c

08003dc0 <_ZN19ScreenGraphViewBaseC1Ev>:
ScreenGraphViewBase::ScreenGraphViewBase() :
 8003dc0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003dc4:	ed2d 8b10 	vpush	{d8-d15}
 8003dc8:	4604      	mov	r4, r0
 8003dca:	b091      	sub	sp, #68	; 0x44
 8003dcc:	f00d ff60 	bl	8011c90 <_ZN8touchgfx6ScreenC1Ev>
    buttonCallback(this, &ScreenGraphViewBase::buttonCallbackHandler)
 8003dd0:	4622      	mov	r2, r4
 8003dd2:	2500      	movs	r5, #0
 8003dd4:	4bec      	ldr	r3, [pc, #944]	; (8004188 <_ZN19ScreenGraphViewBaseC1Ev+0x3c8>)
 8003dd6:	63e5      	str	r5, [r4, #60]	; 0x3c
 8003dd8:	f842 3b40 	str.w	r3, [r2], #64
 8003ddc:	4610      	mov	r0, r2
 8003dde:	ee0a 2a90 	vmov	s21, r2
 8003de2:	f7fe ff7f 	bl	8002ce4 <_ZN8touchgfx3BoxC1Ev>
 8003de6:	f104 036c 	add.w	r3, r4, #108	; 0x6c
 8003dea:	ee09 3a90 	vmov	s19, r3
 8003dee:	f64f 77ff 	movw	r7, #65535	; 0xffff
        : Widget(), bitmap(bmp), alpha(255)
 8003df2:	2226      	movs	r2, #38	; 0x26
 8003df4:	4629      	mov	r1, r5
 8003df6:	4618      	mov	r0, r3
 8003df8:	f8ad 7038 	strh.w	r7, [sp, #56]	; 0x38
 8003dfc:	f01c f916 	bl	802002c <memset>
 8003e00:	ee19 0a90 	vmov	r0, s19
 8003e04:	f7fe ff5c 	bl	8002cc0 <_ZN8touchgfx6WidgetC1Ev>
 8003e08:	4be0      	ldr	r3, [pc, #896]	; (800418c <_ZN19ScreenGraphViewBaseC1Ev+0x3cc>)
 8003e0a:	66e3      	str	r3, [r4, #108]	; 0x6c
 8003e0c:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8003e10:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8003e14:	a90e      	add	r1, sp, #56	; 0x38
 8003e16:	ee19 0a90 	vmov	r0, s19
        : Widget(), bitmap(bmp), alpha(255)
 8003e1a:	f884 7094 	strb.w	r7, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8003e1e:	f009 ff87 	bl	800dd30 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003e22:	f104 0398 	add.w	r3, r4, #152	; 0x98
        : Box(), borderColor(0), borderSize(0)
 8003e26:	4618      	mov	r0, r3
 8003e28:	ee0b 3a90 	vmov	s23, r3
 8003e2c:	f7fe ff5a 	bl	8002ce4 <_ZN8touchgfx3BoxC1Ev>
 8003e30:	4bd7      	ldr	r3, [pc, #860]	; (8004190 <_ZN19ScreenGraphViewBaseC1Ev+0x3d0>)
 8003e32:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8003e36:	f104 03cc 	add.w	r3, r4, #204	; 0xcc
 */
class Button : public AbstractButton
{
public:
    Button()
        : AbstractButton(), up(), down(), alpha(255)
 8003e3a:	4618      	mov	r0, r3
 8003e3c:	f8c4 50c4 	str.w	r5, [r4, #196]	; 0xc4
 8003e40:	f8a4 50c8 	strh.w	r5, [r4, #200]	; 0xc8
 8003e44:	f504 7b80 	add.w	fp, r4, #256	; 0x100
 8003e48:	ee0b 3a10 	vmov	s22, r3
 8003e4c:	f7ff fef8 	bl	8003c40 <_ZN8touchgfx14AbstractButtonC1Ev>
 8003e50:	4bd0      	ldr	r3, [pc, #832]	; (8004194 <_ZN19ScreenGraphViewBaseC1Ev+0x3d4>)
 8003e52:	f8c4 30cc 	str.w	r3, [r4, #204]	; 0xcc
 8003e56:	f8a4 70fa 	strh.w	r7, [r4, #250]	; 0xfa
 8003e5a:	f8a4 70fc 	strh.w	r7, [r4, #252]	; 0xfc
 8003e5e:	f884 70fe 	strb.w	r7, [r4, #254]	; 0xfe
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 8003e62:	f44f 7116 	mov.w	r1, #600	; 0x258
 8003e66:	4658      	mov	r0, fp
 8003e68:	f007 fefe 	bl	800bc68 <_ZN8touchgfx17AbstractDataGraphC1Es>
 8003e6c:	4bca      	ldr	r3, [pc, #808]	; (8004198 <_ZN19ScreenGraphViewBaseC1Ev+0x3d8>)
 8003e6e:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
{
public:
    GraphScroll()
        : GraphScrollData(CAPACITY, y)
 8003e72:	f504 7214 	add.w	r2, r4, #592	; 0x250
 8003e76:	2301      	movs	r3, #1
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 8003e78:	4629      	mov	r1, r5
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 8003e7a:	e9c4 358f 	strd	r3, r5, [r4, #572]	; 0x23c
 8003e7e:	e9c4 2591 	strd	r2, r5, [r4, #580]	; 0x244
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 8003e82:	4658      	mov	r0, fp
 8003e84:	f240 2257 	movw	r2, #599	; 0x257
 8003e88:	f7ff fa28 	bl	80032dc <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>
 8003e8c:	f504 633b 	add.w	r3, r4, #2992	; 0xbb0
 8003e90:	4ac2      	ldr	r2, [pc, #776]	; (800419c <_ZN19ScreenGraphViewBaseC1Ev+0x3dc>)
 8003e92:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8003e96:	4618      	mov	r0, r3
        : DynamicDataGraph(capacity, values), current(0)
 8003e98:	f8a4 524c 	strh.w	r5, [r4, #588]	; 0x24c
 8003e9c:	ee0c 3a90 	vmov	s25, r3
 8003ea0:	f007 fb2e 	bl	800b500 <_ZN8touchgfx12CanvasWidgetC1Ev>
 */
class GraphElementLine : public AbstractGraphElement
{
public:
    GraphElementLine()
        : lineWidth(2)
 8003ea4:	f04f 0202 	mov.w	r2, #2
 8003ea8:	4bbd      	ldr	r3, [pc, #756]	; (80041a0 <_ZN19ScreenGraphViewBaseC1Ev+0x3e0>)
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8003eaa:	f8df 9314 	ldr.w	r9, [pc, #788]	; 80041c0 <_ZN19ScreenGraphViewBaseC1Ev+0x400>
 8003eae:	f884 2bdc 	strb.w	r2, [r4, #3036]	; 0xbdc
 8003eb2:	f504 623e 	add.w	r2, r4, #3040	; 0xbe0
 8003eb6:	f8c4 3bb0 	str.w	r3, [r4, #2992]	; 0xbb0
 8003eba:	4610      	mov	r0, r2
 8003ebc:	f109 0a24 	add.w	sl, r9, #36	; 0x24
 8003ec0:	9206      	str	r2, [sp, #24]
 8003ec2:	f7ff ff2d 	bl	8003d20 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8003ec6:	f604 32f4 	addw	r2, r4, #3060	; 0xbf4
 8003eca:	f8c4 9be0 	str.w	r9, [r4, #3040]	; 0xbe0
 8003ece:	f8c4 abe8 	str.w	sl, [r4, #3048]	; 0xbe8
class GraphElementGridX : public GraphElementGridBase
 8003ed2:	4610      	mov	r0, r2
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
 8003ed4:	f8c4 5bec 	str.w	r5, [r4, #3052]	; 0xbec
 8003ed8:	f8df 82e8 	ldr.w	r8, [pc, #744]	; 80041c4 <_ZN19ScreenGraphViewBaseC1Ev+0x404>
 8003edc:	ee0d 2a10 	vmov	s26, r2
 8003ee0:	f7ff ff0a 	bl	8003cf8 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 8003ee4:	f604 4234 	addw	r2, r4, #3124	; 0xc34
 8003ee8:	f8c4 8bf4 	str.w	r8, [r4, #3060]	; 0xbf4
 8003eec:	4610      	mov	r0, r2
 8003eee:	ee0c 2a10 	vmov	s24, r2
 8003ef2:	f7ff ff01 	bl	8003cf8 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 8003ef6:	f604 4274 	addw	r2, r4, #3188	; 0xc74
 8003efa:	f8c4 8c34 	str.w	r8, [r4, #3124]	; 0xc34

/**
 * GraphLabelsX will draw labels along the X axis at given intervals. By combining two
 * GraphLabelsX it is possible to have different appearance for major and minor y offsets.
 */
class GraphLabelsX : public GraphLabelsBase
 8003efe:	4610      	mov	r0, r2
 8003f00:	ee0d 2a90 	vmov	s27, r2
 8003f04:	f7ff ff3e 	bl	8003d84 <_ZN8touchgfx15GraphLabelsBaseC1Ev>
 8003f08:	4aa6      	ldr	r2, [pc, #664]	; (80041a4 <_ZN19ScreenGraphViewBaseC1Ev+0x3e4>)
 8003f0a:	f8c4 2c74 	str.w	r2, [r4, #3188]	; 0xc74
 8003f0e:	f504 624c 	add.w	r2, r4, #3264	; 0xcc0

/**
 * GraphLabelsY will draw labels along the Y axis at given intervals. By combining two
 * GraphLabelsY it is possible to have different appearance for major and minor y offsets.
 */
class GraphLabelsY : public GraphLabelsBase
 8003f12:	4610      	mov	r0, r2
 8003f14:	f604 560c 	addw	r6, r4, #3340	; 0xd0c
 8003f18:	ee0e 2a10 	vmov	s28, r2
 8003f1c:	f7ff ff32 	bl	8003d84 <_ZN8touchgfx15GraphLabelsBaseC1Ev>
 8003f20:	4aa1      	ldr	r2, [pc, #644]	; (80041a8 <_ZN19ScreenGraphViewBaseC1Ev+0x3e8>)
 8003f22:	f8c4 2cc0 	str.w	r2, [r4, #3264]	; 0xcc0
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 8003f26:	213c      	movs	r1, #60	; 0x3c
 8003f28:	4630      	mov	r0, r6
 8003f2a:	f007 fe9d 	bl	800bc68 <_ZN8touchgfx17AbstractDataGraphC1Es>
 8003f2e:	4b9a      	ldr	r3, [pc, #616]	; (8004198 <_ZN19ScreenGraphViewBaseC1Ev+0x3d8>)
 8003f30:	f8c4 3d0c 	str.w	r3, [r4, #3340]	; 0xd0c
 8003f34:	2101      	movs	r1, #1
        : GraphScrollData(CAPACITY, y)
 8003f36:	f604 635c 	addw	r3, r4, #3676	; 0xe5c
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 8003f3a:	223b      	movs	r2, #59	; 0x3b
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 8003f3c:	f8c4 1e48 	str.w	r1, [r4, #3656]	; 0xe48
 8003f40:	f8c4 3e50 	str.w	r3, [r4, #3664]	; 0xe50
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 8003f44:	4629      	mov	r1, r5
 8003f46:	4630      	mov	r0, r6
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 8003f48:	f8c4 5e4c 	str.w	r5, [r4, #3660]	; 0xe4c
 8003f4c:	f8c4 5e54 	str.w	r5, [r4, #3668]	; 0xe54
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 8003f50:	f7ff f9c4 	bl	80032dc <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>
 8003f54:	f604 714c 	addw	r1, r4, #3916	; 0xf4c
 8003f58:	4b94      	ldr	r3, [pc, #592]	; (80041ac <_ZN19ScreenGraphViewBaseC1Ev+0x3ec>)
 8003f5a:	f8c4 3d0c 	str.w	r3, [r4, #3340]	; 0xd0c
        : CanvasWidget()
 8003f5e:	4608      	mov	r0, r1
        : DynamicDataGraph(capacity, values), current(0)
 8003f60:	f8a4 5e58 	strh.w	r5, [r4, #3672]	; 0xe58
 8003f64:	ee0e 1a90 	vmov	s29, r1
 8003f68:	f007 faca 	bl	800b500 <_ZN8touchgfx12CanvasWidgetC1Ev>
        : lineWidth(2)
 8003f6c:	4b8c      	ldr	r3, [pc, #560]	; (80041a0 <_ZN19ScreenGraphViewBaseC1Ev+0x3e0>)
 8003f6e:	f8c4 3f4c 	str.w	r3, [r4, #3916]	; 0xf4c
 8003f72:	f04f 0302 	mov.w	r3, #2
 8003f76:	f884 3f78 	strb.w	r3, [r4, #3960]	; 0xf78
 8003f7a:	f604 737c 	addw	r3, r4, #3964	; 0xf7c
 8003f7e:	4618      	mov	r0, r3
 8003f80:	9307      	str	r3, [sp, #28]
 8003f82:	f7ff fecd 	bl	8003d20 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8003f86:	f504 6379 	add.w	r3, r4, #3984	; 0xf90
 8003f8a:	f8c4 9f7c 	str.w	r9, [r4, #3964]	; 0xf7c
 8003f8e:	f8c4 af84 	str.w	sl, [r4, #3972]	; 0xf84
class GraphElementGridX : public GraphElementGridBase
 8003f92:	4618      	mov	r0, r3
 8003f94:	f8c4 5f88 	str.w	r5, [r4, #3976]	; 0xf88
 8003f98:	ee0f 3a10 	vmov	s30, r3
 8003f9c:	f7ff feac 	bl	8003cf8 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 8003fa0:	f504 637d 	add.w	r3, r4, #4048	; 0xfd0
 8003fa4:	f8c4 8f90 	str.w	r8, [r4, #3984]	; 0xf90
class GraphElementGridY : public GraphElementGridBase
 8003fa8:	4618      	mov	r0, r3
 8003faa:	ee0f 3a90 	vmov	s31, r3
 8003fae:	f7ff fea3 	bl	8003cf8 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 8003fb2:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8003fb6:	3310      	adds	r3, #16
 8003fb8:	f8df a20c 	ldr.w	sl, [pc, #524]	; 80041c8 <_ZN19ScreenGraphViewBaseC1Ev+0x408>
 8003fbc:	f8c4 afd0 	str.w	sl, [r4, #4048]	; 0xfd0
class GraphElementGridX : public GraphElementGridBase
 8003fc0:	4618      	mov	r0, r3
 8003fc2:	f504 5980 	add.w	r9, r4, #4096	; 0x1000
 8003fc6:	9302      	str	r3, [sp, #8]
 8003fc8:	f7ff fe96 	bl	8003cf8 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 8003fcc:	f504 5382 	add.w	r3, r4, #4160	; 0x1040
 8003fd0:	3310      	adds	r3, #16
 8003fd2:	f8c9 8010 	str.w	r8, [r9, #16]
class GraphElementGridY : public GraphElementGridBase
 8003fd6:	4618      	mov	r0, r3
 8003fd8:	9303      	str	r3, [sp, #12]
 8003fda:	f7ff fe8d 	bl	8003cf8 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 8003fde:	f504 5384 	add.w	r3, r4, #4224	; 0x1080
 8003fe2:	3310      	adds	r3, #16
 8003fe4:	f8c9 a050 	str.w	sl, [r9, #80]	; 0x50
 8003fe8:	4618      	mov	r0, r3
 8003fea:	9304      	str	r3, [sp, #16]
 8003fec:	f7ff feca 	bl	8003d84 <_ZN8touchgfx15GraphLabelsBaseC1Ev>
 8003ff0:	f504 5386 	add.w	r3, r4, #4288	; 0x10c0
 8003ff4:	4a6c      	ldr	r2, [pc, #432]	; (80041a8 <_ZN19ScreenGraphViewBaseC1Ev+0x3e8>)
 8003ff6:	f8c9 2090 	str.w	r2, [r9, #144]	; 0x90
 8003ffa:	331c      	adds	r3, #28
 8003ffc:	4618      	mov	r0, r3
 8003ffe:	ee0a 3a10 	vmov	s20, r3
 8004002:	f7ff fe1d 	bl	8003c40 <_ZN8touchgfx14AbstractButtonC1Ev>
 * A ToggleButton is a Button specialization that swaps the two bitmaps when clicked, such that
 * the previous "pressed" bitmap, now becomes the one displayed when button is not
 * pressed. This can by used to give the effect of a button that can be pressed in and
 * when it is subsequently pressed, it will pop back out.
 */
class ToggleButton : public Button
 8004006:	4b6a      	ldr	r3, [pc, #424]	; (80041b0 <_ZN19ScreenGraphViewBaseC1Ev+0x3f0>)
 8004008:	f8c9 30dc 	str.w	r3, [r9, #220]	; 0xdc
 800400c:	f504 5388 	add.w	r3, r4, #4352	; 0x1100
 8004010:	3314      	adds	r3, #20
 8004012:	f504 5a8a 	add.w	sl, r4, #4416	; 0x1140
 8004016:	f10a 0a1c 	add.w	sl, sl, #28
 800401a:	4618      	mov	r0, r3
 800401c:	f8a9 710a 	strh.w	r7, [r9, #266]	; 0x10a
 8004020:	f8a9 710c 	strh.w	r7, [r9, #268]	; 0x10c
 8004024:	f889 710e 	strb.w	r7, [r9, #270]	; 0x10e
 8004028:	f8a9 7110 	strh.w	r7, [r9, #272]	; 0x110
 800402c:	ee08 3a10 	vmov	s16, r3
 8004030:	f7fe fe86 	bl	8002d40 <_ZN8touchgfx8TextAreaC1Ev>
        : TextArea()
 8004034:	4650      	mov	r0, sl
 8004036:	f7fe fe83 	bl	8002d40 <_ZN8touchgfx8TextAreaC1Ev>
 800403a:	f504 538d 	add.w	r3, r4, #4512	; 0x11a0
        : TextAreaWithWildcardBase(), wc1(0)
 800403e:	4f5d      	ldr	r7, [pc, #372]	; (80041b4 <_ZN19ScreenGraphViewBaseC1Ev+0x3f4>)
 8004040:	f8c9 715c 	str.w	r7, [r9, #348]	; 0x15c
 8004044:	3308      	adds	r3, #8
        : TextArea()
 8004046:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8004048:	f8c9 51a4 	str.w	r5, [r9, #420]	; 0x1a4
 800404c:	ee08 3a90 	vmov	s17, r3
        : TextArea()
 8004050:	f7fe fe76 	bl	8002d40 <_ZN8touchgfx8TextAreaC1Ev>
 8004054:	f504 538f 	add.w	r3, r4, #4576	; 0x11e0
 8004058:	3314      	adds	r3, #20
        : TextAreaWithWildcardBase(), wc1(0)
 800405a:	f8c9 71a8 	str.w	r7, [r9, #424]	; 0x1a8
        : TextArea()
 800405e:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8004060:	f8c9 51f0 	str.w	r5, [r9, #496]	; 0x1f0
 8004064:	ee09 3a10 	vmov	s18, r3
        : TextArea()
 8004068:	f7fe fe6a 	bl	8002d40 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800406c:	4b52      	ldr	r3, [pc, #328]	; (80041b8 <_ZN19ScreenGraphViewBaseC1Ev+0x3f8>)
        : TextAreaWithWildcardBase(), wc1(0)
 800406e:	f8c9 71f4 	str.w	r7, [r9, #500]	; 0x1f4
 8004072:	e9c9 349d 	strd	r3, r4, [r9, #628]	; 0x274
 8004076:	4b51      	ldr	r3, [pc, #324]	; (80041bc <_ZN19ScreenGraphViewBaseC1Ev+0x3fc>)
 8004078:	f8c9 523c 	str.w	r5, [r9, #572]	; 0x23c
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800407c:	f504 5094 	add.w	r0, r4, #4736	; 0x1280
 8004080:	e9c9 359f 	strd	r3, r5, [r9, #636]	; 0x27c
 8004084:	f44f 5196 	mov.w	r1, #4800	; 0x12c0
 8004088:	3004      	adds	r0, #4
 800408a:	f00a fe3f 	bl	800ed0c <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 320, 240);
 800408e:	23f0      	movs	r3, #240	; 0xf0
 8004090:	ee1a 0a90 	vmov	r0, s21
 8004094:	9300      	str	r3, [sp, #0]
 8004096:	462a      	mov	r2, r5
 8004098:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800409c:	4629      	mov	r1, r5
 800409e:	f7fe fdfc 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
 80040a2:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
    Background.setXY(-109, -23);
 80040a6:	f06f 0216 	mvn.w	r2, #22
 80040aa:	ee19 0a90 	vmov	r0, s19
 80040ae:	66a3      	str	r3, [r4, #104]	; 0x68
 80040b0:	f06f 016c 	mvn.w	r1, #108	; 0x6c
 80040b4:	f7fe fdb2 	bl	8002c1c <_ZN8touchgfx8Drawable5setXYEss>
 80040b8:	f04f 0304 	mov.w	r3, #4
    Background.setBitmap(touchgfx::Bitmap(BITMAP_DARK_BACKGROUNDS_MAIN_BG_TEXTURE_480X272PX_ID));
 80040bc:	ee19 0a90 	vmov	r0, s19
 80040c0:	a90e      	add	r1, sp, #56	; 0x38
 80040c2:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 80040c6:	f009 fe33 	bl	800dd30 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    boxWithBorder1.setPosition(0, 0, 320, 166);
 80040ca:	23a6      	movs	r3, #166	; 0xa6
 80040cc:	ee1b 0a90 	vmov	r0, s23
 80040d0:	9300      	str	r3, [sp, #0]
 80040d2:	462a      	mov	r2, r5
 80040d4:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80040d8:	4629      	mov	r1, r5
 80040da:	f7fe fdde 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
        borderColor = colorBorder;
 80040de:	f04f 32ff 	mov.w	r2, #4294967295
 80040e2:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80040e6:	e9c4 2330 	strd	r2, r3, [r4, #192]	; 0xc0
        borderSize = size;
 80040ea:	f04f 0301 	mov.w	r3, #1
    button1.setXY(187, 189);
 80040ee:	ee1b 0a10 	vmov	r0, s22
 80040f2:	f8a4 30c8 	strh.w	r3, [r4, #200]	; 0xc8
 80040f6:	22bd      	movs	r2, #189	; 0xbd
 80040f8:	21bb      	movs	r1, #187	; 0xbb
 80040fa:	461f      	mov	r7, r3
 80040fc:	f7fe fd8e 	bl	8002c1c <_ZN8touchgfx8Drawable5setXYEss>
 8004100:	f04f 0302 	mov.w	r3, #2
    button1.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
 8004104:	ee1b 0a10 	vmov	r0, s22
 8004108:	aa0e      	add	r2, sp, #56	; 0x38
 800410a:	a90d      	add	r1, sp, #52	; 0x34
 800410c:	f8ad 7034 	strh.w	r7, [sp, #52]	; 0x34
 8004110:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8004114:	f009 fbe9 	bl	800d8ea <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
    button1.setAction(buttonCallback);
 8004118:	f504 5393 	add.w	r3, r4, #4704	; 0x1260
 800411c:	3314      	adds	r3, #20
        action = &callback;
 800411e:	f8c4 30f4 	str.w	r3, [r4, #244]	; 0xf4
    dynamicGraph2.setScale(1000);
 8004122:	462a      	mov	r2, r5
 8004124:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8004128:	4658      	mov	r0, fp
    button1.setAction(buttonCallback);
 800412a:	9305      	str	r3, [sp, #20]
    dynamicGraph2.setScale(1000);
 800412c:	f7ff fa8a 	bl	8003644 <_ZN8touchgfx16DynamicDataGraph8setScaleEib>
    dynamicGraph2.setPosition(0, 0, 320, 166);
 8004130:	23a6      	movs	r3, #166	; 0xa6
 8004132:	9300      	str	r3, [sp, #0]
 8004134:	462a      	mov	r2, r5
 8004136:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800413a:	4629      	mov	r1, r5
 800413c:	4658      	mov	r0, fp
 800413e:	f7fe fdac 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
    dynamicGraph2.setGraphAreaMargin(6, 20, 0, 15);
 8004142:	230f      	movs	r3, #15
 8004144:	9300      	str	r3, [sp, #0]
 8004146:	2214      	movs	r2, #20
 8004148:	462b      	mov	r3, r5
 800414a:	2106      	movs	r1, #6
 800414c:	4658      	mov	r0, fp
 800414e:	f007 fd3d 	bl	800bbcc <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>
    dynamicGraph2.setGraphAreaPadding(0, 0, 0, 0);
 8004152:	462b      	mov	r3, r5
 8004154:	462a      	mov	r2, r5
 8004156:	4629      	mov	r1, r5
 8004158:	4658      	mov	r0, fp
 800415a:	9500      	str	r5, [sp, #0]
 800415c:	f007 fc39 	bl	800b9d2 <_ZN8touchgfx17AbstractDataGraph19setGraphAreaPaddingEssss>
    dynamicGraph2.setGraphRangeY(1.0f, 1.5f);
 8004160:	eef7 0a08 	vmov.f32	s1, #120	; 0x3fc00000  1.5
 8004164:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 8004168:	4658      	mov	r0, fp
 800416a:	f7ff f94d 	bl	8003408 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 800416e:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8004172:	f8d4 1c24 	ldr.w	r1, [r4, #3108]	; 0xc24
 8004176:	f8d4 0c28 	ldr.w	r0, [r4, #3112]	; 0xc28
        visible = vis;
 800417a:	f884 5125 	strb.w	r5, [r4, #293]	; 0x125
 800417e:	f007 fdd7 	bl	800bd30 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        gridInterval = abs(interval);
 8004182:	f247 5330 	movw	r3, #30000	; 0x7530
 8004186:	e021      	b.n	80041cc <_ZN19ScreenGraphViewBaseC1Ev+0x40c>
 8004188:	08022848 	.word	0x08022848
 800418c:	08023650 	.word	0x08023650
 8004190:	080235e8 	.word	0x080235e8
 8004194:	08023574 	.word	0x08023574
 8004198:	08022dac 	.word	0x08022dac
 800419c:	080224f8 	.word	0x080224f8
 80041a0:	08023084 	.word	0x08023084
 80041a4:	080231b8 	.word	0x080231b8
 80041a8:	08023258 	.word	0x08023258
 80041ac:	08022694 	.word	0x08022694
 80041b0:	08023408 	.word	0x08023408
 80041b4:	08021ed8 	.word	0x08021ed8
 80041b8:	08022830 	.word	0x08022830
 80041bc:	08003bf1 	.word	0x08003bf1
 80041c0:	08022cfc 	.word	0x08022cfc
 80041c4:	08022368 	.word	0x08022368
 80041c8:	08022420 	.word	0x08022420
 80041cc:	f8c4 3c28 	str.w	r3, [r4, #3112]	; 0xc28
        lineWidth = width;
 80041d0:	f04f 0301 	mov.w	r3, #1
 80041d4:	f884 3c2c 	strb.w	r3, [r4, #3116]	; 0xc2c
        majorGrid = &major;
 80041d8:	ee1c 3a10 	vmov	r3, s24
        dataScale = scale;
 80041dc:	f44f 777a 	mov.w	r7, #1000	; 0x3e8
        color = newColor;
 80041e0:	f8df 8490 	ldr.w	r8, [pc, #1168]	; 8004674 <_ZN19ScreenGraphViewBaseC1Ev+0x8b4>
        majorGrid = &major;
 80041e4:	f8c4 3c30 	str.w	r3, [r4, #3120]	; 0xc30
    dynamicGraph2.addGraphElement(dynamicGraph2MinorXAxisGrid);
 80041e8:	ee1d 1a10 	vmov	r1, s26
        dataScale = scale;
 80041ec:	f8c4 7c24 	str.w	r7, [r4, #3108]	; 0xc24
        color = newColor;
 80041f0:	f8c4 8c20 	str.w	r8, [r4, #3104]	; 0xc20
 80041f4:	4658      	mov	r0, fp
 80041f6:	f007 fbf7 	bl	800b9e8 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 80041fa:	463a      	mov	r2, r7
 80041fc:	f8d4 1c64 	ldr.w	r1, [r4, #3172]	; 0xc64
 8004200:	f8d4 0c68 	ldr.w	r0, [r4, #3176]	; 0xc68
 8004204:	f007 fd94 	bl	800bd30 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        gridInterval = abs(interval);
 8004208:	f64e 2360 	movw	r3, #60000	; 0xea60
 800420c:	f8c4 3c68 	str.w	r3, [r4, #3176]	; 0xc68
        lineWidth = width;
 8004210:	f04f 0302 	mov.w	r3, #2
 8004214:	f884 3c6c 	strb.w	r3, [r4, #3180]	; 0xc6c
    dynamicGraph2.addGraphElement(dynamicGraph2MajorXAxisGrid);
 8004218:	ee1c 1a10 	vmov	r1, s24
        dataScale = scale;
 800421c:	f8c4 7c64 	str.w	r7, [r4, #3172]	; 0xc64
        color = newColor;
 8004220:	f8c4 8c60 	str.w	r8, [r4, #3168]	; 0xc60
 8004224:	4658      	mov	r0, fp
 8004226:	f007 fbdf 	bl	800b9e8 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        labelInterval = AbstractDataGraph::convertToNewScale(labelInterval, dataScale, scale);
 800422a:	463a      	mov	r2, r7
 800422c:	f8d4 1ca4 	ldr.w	r1, [r4, #3236]	; 0xca4
 8004230:	f8d4 0ca8 	ldr.w	r0, [r4, #3240]	; 0xca8
 8004234:	f007 fd7c 	bl	800bd30 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        labelInterval = abs(interval);
 8004238:	f64e 2360 	movw	r3, #60000	; 0xea60
class TypedText
 800423c:	f04f 0201 	mov.w	r2, #1
 8004240:	f8c4 3ca8 	str.w	r3, [r4, #3240]	; 0xca8
    dynamicGraph2.addBottomElement(dynamicGraph2MajorXAxisLabel);
 8004244:	ee1d 1a90 	vmov	r1, s27
        dataScale = scale;
 8004248:	f8c4 7ca4 	str.w	r7, [r4, #3236]	; 0xca4
 800424c:	f8a4 2cb0 	strh.w	r2, [r4, #3248]	; 0xcb0
 8004250:	f8c4 8ca0 	str.w	r8, [r4, #3232]	; 0xca0
 8004254:	4658      	mov	r0, fp
 8004256:	f007 fbeb 	bl	800ba30 <_ZN8touchgfx17AbstractDataGraph16addBottomElementERNS_23AbstractGraphDecorationE>
        labelInterval = AbstractDataGraph::convertToNewScale(labelInterval, dataScale, scale);
 800425a:	463a      	mov	r2, r7
 800425c:	f8d4 1cf0 	ldr.w	r1, [r4, #3312]	; 0xcf0
 8004260:	f8d4 0cf4 	ldr.w	r0, [r4, #3316]	; 0xcf4
 8004264:	f007 fd64 	bl	800bd30 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        labelDecimals = decimals;
 8004268:	f04f 0201 	mov.w	r2, #1
        labelInterval = abs(interval);
 800426c:	2196      	movs	r1, #150	; 0x96
        dataScale = scale;
 800426e:	f8c4 7cf0 	str.w	r7, [r4, #3312]	; 0xcf0
        labelInterval = abs(interval);
 8004272:	f8c4 1cf4 	str.w	r1, [r4, #3316]	; 0xcf4
        labelDecimals = decimals;
 8004276:	f8a4 2d02 	strh.w	r2, [r4, #3330]	; 0xd02
    dynamicGraph2.addLeftElement(dynamicGraph2MajorYAxisLabel);
 800427a:	ee1e 1a10 	vmov	r1, s28
 800427e:	f8c4 8cec 	str.w	r8, [r4, #3308]	; 0xcec
 8004282:	4658      	mov	r0, fp
 8004284:	f8a4 5cfc 	strh.w	r5, [r4, #3324]	; 0xcfc
 8004288:	f007 fbc0 	bl	800ba0c <_ZN8touchgfx17AbstractDataGraph14addLeftElementERNS_23AbstractGraphDecorationE>
        canvasPainter = &painter;
 800428c:	9b06      	ldr	r3, [sp, #24]
 800428e:	f8c4 3bd8 	str.w	r3, [r4, #3032]	; 0xbd8
 8004292:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
     *
     * @see getLineWidth
     */
    FORCE_INLINE_FUNCTION void setLineWidth(uint8_t width)
    {
        lineWidth = width;
 8004296:	f04f 0302 	mov.w	r3, #2
 800429a:	f884 3bdc 	strb.w	r3, [r4, #3036]	; 0xbdc
    dynamicGraph2.addGraphElement(dynamicGraph2Line1);
 800429e:	ee1c 1a90 	vmov	r1, s25
 80042a2:	f8c4 2bec 	str.w	r2, [r4, #3052]	; 0xbec
 80042a6:	4658      	mov	r0, fp
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
 80042a8:	f8a4 5bf0 	strh.w	r5, [r4, #3056]	; 0xbf0
 80042ac:	f007 fb9c 	bl	800b9e8 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
    dynamicGraph1.setScale(1000);
 80042b0:	4639      	mov	r1, r7
 80042b2:	462a      	mov	r2, r5
 80042b4:	4630      	mov	r0, r6
 80042b6:	f7ff f9c5 	bl	8003644 <_ZN8touchgfx16DynamicDataGraph8setScaleEib>
    dynamicGraph1.setPosition(0, 0, 320, 166);
 80042ba:	22a6      	movs	r2, #166	; 0xa6
 80042bc:	9200      	str	r2, [sp, #0]
 80042be:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80042c2:	462a      	mov	r2, r5
 80042c4:	4629      	mov	r1, r5
 80042c6:	4630      	mov	r0, r6
 80042c8:	f7fe fce7 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
    dynamicGraph1.setGraphAreaMargin(6, 20, 0, 15);
 80042cc:	220f      	movs	r2, #15
 80042ce:	9200      	str	r2, [sp, #0]
 80042d0:	462b      	mov	r3, r5
 80042d2:	2214      	movs	r2, #20
 80042d4:	2106      	movs	r1, #6
 80042d6:	4630      	mov	r0, r6
 80042d8:	f007 fc78 	bl	800bbcc <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>
    dynamicGraph1.setGraphAreaPadding(0, 0, 0, 0);
 80042dc:	462b      	mov	r3, r5
 80042de:	462a      	mov	r2, r5
 80042e0:	4629      	mov	r1, r5
 80042e2:	4630      	mov	r0, r6
 80042e4:	9500      	str	r5, [sp, #0]
 80042e6:	f007 fb74 	bl	800b9d2 <_ZN8touchgfx17AbstractDataGraph19setGraphAreaPaddingEssss>
    dynamicGraph1.setGraphRangeY(1.0f, 1.5f);
 80042ea:	eef7 0a08 	vmov.f32	s1, #120	; 0x3fc00000  1.5
 80042ee:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 80042f2:	4630      	mov	r0, r6
 80042f4:	f7ff f888 	bl	8003408 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 80042f8:	463a      	mov	r2, r7
 80042fa:	f8d4 1fc0 	ldr.w	r1, [r4, #4032]	; 0xfc0
 80042fe:	f8d4 0fc4 	ldr.w	r0, [r4, #4036]	; 0xfc4
 8004302:	f007 fd15 	bl	800bd30 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        gridInterval = abs(interval);
 8004306:	f241 3388 	movw	r3, #5000	; 0x1388
        lineWidth = width;
 800430a:	f04f 0201 	mov.w	r2, #1
        gridInterval = abs(interval);
 800430e:	f8c4 3fc4 	str.w	r3, [r4, #4036]	; 0xfc4
        majorGrid = &major;
 8004312:	9b02      	ldr	r3, [sp, #8]
 8004314:	f8c4 3fcc 	str.w	r3, [r4, #4044]	; 0xfcc
    dynamicGraph1.addGraphElement(dynamicGraph1MinorXAxisGrid);
 8004318:	ee1f 1a10 	vmov	r1, s30
        dataScale = scale;
 800431c:	f8c4 7fc0 	str.w	r7, [r4, #4032]	; 0xfc0
        color = newColor;
 8004320:	f8c4 8fbc 	str.w	r8, [r4, #4028]	; 0xfbc
        lineWidth = width;
 8004324:	f884 2fc8 	strb.w	r2, [r4, #4040]	; 0xfc8
 8004328:	4630      	mov	r0, r6
 800432a:	f007 fb5d 	bl	800b9e8 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 800432e:	463a      	mov	r2, r7
 8004330:	e9d9 1000 	ldrd	r1, r0, [r9]
 8004334:	f007 fcfc 	bl	800bd30 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        gridInterval = abs(interval);
 8004338:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
        dataScale = scale;
 800433c:	f8c9 7000 	str.w	r7, [r9]
        lineWidth = width;
 8004340:	f04f 0201 	mov.w	r2, #1
        color = newColor;
 8004344:	f8c4 8ffc 	str.w	r8, [r4, #4092]	; 0xffc
        gridInterval = abs(interval);
 8004348:	f8c9 3004 	str.w	r3, [r9, #4]
        majorGrid = &major;
 800434c:	9b03      	ldr	r3, [sp, #12]
 800434e:	f8c9 300c 	str.w	r3, [r9, #12]
    dynamicGraph1.addGraphElement(dynamicGraph1MinorYAxisGrid);
 8004352:	ee1f 1a90 	vmov	r1, s31
        lineWidth = width;
 8004356:	f889 2008 	strb.w	r2, [r9, #8]
 800435a:	4630      	mov	r0, r6
 800435c:	f007 fb44 	bl	800b9e8 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 8004360:	463a      	mov	r2, r7
 8004362:	e9d9 1010 	ldrd	r1, r0, [r9, #64]	; 0x40
 8004366:	f007 fce3 	bl	800bd30 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        gridInterval = abs(interval);
 800436a:	f242 7310 	movw	r3, #10000	; 0x2710
 800436e:	f8c9 3044 	str.w	r3, [r9, #68]	; 0x44
        lineWidth = width;
 8004372:	f04f 0302 	mov.w	r3, #2
        color = newColor;
 8004376:	e9c9 870f 	strd	r8, r7, [r9, #60]	; 0x3c
        lineWidth = width;
 800437a:	f889 3048 	strb.w	r3, [r9, #72]	; 0x48
    dynamicGraph1.addGraphElement(dynamicGraph1MajorXAxisGrid);
 800437e:	9902      	ldr	r1, [sp, #8]
 8004380:	4630      	mov	r0, r6
 8004382:	f007 fb31 	bl	800b9e8 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 8004386:	463a      	mov	r2, r7
 8004388:	e9d9 1020 	ldrd	r1, r0, [r9, #128]	; 0x80
 800438c:	f007 fcd0 	bl	800bd30 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        lineWidth = width;
 8004390:	f04f 0302 	mov.w	r3, #2
        color = newColor;
 8004394:	e9c9 871f 	strd	r8, r7, [r9, #124]	; 0x7c
        lineWidth = width;
 8004398:	f889 3088 	strb.w	r3, [r9, #136]	; 0x88
    dynamicGraph1.addGraphElement(dynamicGraph1MajorYAxisGrid);
 800439c:	9903      	ldr	r1, [sp, #12]
        gridInterval = abs(interval);
 800439e:	f8c9 7084 	str.w	r7, [r9, #132]	; 0x84
 80043a2:	4630      	mov	r0, r6
 80043a4:	f007 fb20 	bl	800b9e8 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        labelInterval = AbstractDataGraph::convertToNewScale(labelInterval, dataScale, scale);
 80043a8:	463a      	mov	r2, r7
 80043aa:	e9d9 1030 	ldrd	r1, r0, [r9, #192]	; 0xc0
 80043ae:	f007 fcbf 	bl	800bd30 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        labelInterval = abs(interval);
 80043b2:	2296      	movs	r2, #150	; 0x96
 80043b4:	2309      	movs	r3, #9
 80043b6:	f8c9 20c4 	str.w	r2, [r9, #196]	; 0xc4
        labelDecimals = decimals;
 80043ba:	f04f 0201 	mov.w	r2, #1
    dynamicGraph1.addLeftElement(dynamicGraph1MajorYAxisLabel);
 80043be:	9904      	ldr	r1, [sp, #16]
        dataScale = scale;
 80043c0:	f8c9 70c0 	str.w	r7, [r9, #192]	; 0xc0
 80043c4:	f8a9 30cc 	strh.w	r3, [r9, #204]	; 0xcc
        labelDecimals = decimals;
 80043c8:	f8a9 20d2 	strh.w	r2, [r9, #210]	; 0xd2
        color = newColor;
 80043cc:	f8c9 80bc 	str.w	r8, [r9, #188]	; 0xbc
 80043d0:	4630      	mov	r0, r6
 80043d2:	f007 fb1b 	bl	800ba0c <_ZN8touchgfx17AbstractDataGraph14addLeftElementERNS_23AbstractGraphDecorationE>
 80043d6:	9b07      	ldr	r3, [sp, #28]
 80043d8:	f8c4 3f74 	str.w	r3, [r4, #3956]	; 0xf74
 80043dc:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
        lineWidth = width;
 80043e0:	f04f 0302 	mov.w	r3, #2
 80043e4:	f884 3f78 	strb.w	r3, [r4, #3960]	; 0xf78
    dynamicGraph1.addGraphElement(dynamicGraph1Line1);
 80043e8:	ee1e 1a90 	vmov	r1, s29
 80043ec:	f8c4 2f88 	str.w	r2, [r4, #3976]	; 0xf88
 80043f0:	4630      	mov	r0, r6
 80043f2:	f8a4 5f8c 	strh.w	r5, [r4, #3980]	; 0xf8c
 80043f6:	f007 faf7 	bl	800b9e8 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
 80043fa:	2708      	movs	r7, #8
    toggleButton1.setXY(85, 211);
 80043fc:	ee1a 0a10 	vmov	r0, s20
 8004400:	22d3      	movs	r2, #211	; 0xd3
 8004402:	2155      	movs	r1, #85	; 0x55
 8004404:	f7fe fc0a 	bl	8002c1c <_ZN8touchgfx8Drawable5setXYEss>
 8004408:	f04f 0307 	mov.w	r3, #7
{
public:
    virtual void setBitmaps(const Bitmap& bitmapReleased, const Bitmap& bitmapPressed)
    {
        originalPressed = bitmapPressed;
        Button::setBitmaps(bitmapReleased, bitmapPressed);
 800440c:	ee1a 0a10 	vmov	r0, s20
 8004410:	aa0e      	add	r2, sp, #56	; 0x38
 8004412:	a90d      	add	r1, sp, #52	; 0x34
        originalPressed = bitmapPressed;
 8004414:	f8a9 7110 	strh.w	r7, [r9, #272]	; 0x110
 8004418:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 800441c:	f8ad 7038 	strh.w	r7, [sp, #56]	; 0x38
        Button::setBitmaps(bitmapReleased, bitmapPressed);
 8004420:	f009 fa63 	bl	800d8ea <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8004424:	9b05      	ldr	r3, [sp, #20]
 8004426:	f8c9 3104 	str.w	r3, [r9, #260]	; 0x104
    txtShowWholeGraph.setXY(2, 218);
 800442a:	22da      	movs	r2, #218	; 0xda
 800442c:	ee18 0a10 	vmov	r0, s16
 8004430:	2102      	movs	r1, #2
 8004432:	f7fe fbf3 	bl	8002c1c <_ZN8touchgfx8Drawable5setXYEss>
 8004436:	f10d 0820 	add.w	r8, sp, #32
        color = newColor;
 800443a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        boundingArea = calculateBoundingArea();
 800443e:	4640      	mov	r0, r8
 8004440:	ee18 1a10 	vmov	r1, s16
        color = newColor;
 8004444:	f8c9 3144 	str.w	r3, [r9, #324]	; 0x144
        linespace = space;
 8004448:	f8a9 5148 	strh.w	r5, [r9, #328]	; 0x148
        boundingArea = calculateBoundingArea();
 800444c:	f008 ff62 	bl	800d314 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004450:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8004454:	ee18 3a10 	vmov	r3, s16
 8004458:	333c      	adds	r3, #60	; 0x3c
 800445a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 800445e:	4b7c      	ldr	r3, [pc, #496]	; (8004650 <_ZN19ScreenGraphViewBaseC1Ev+0x890>)
 8004460:	930e      	str	r3, [sp, #56]	; 0x38
    txtShowWholeGraph.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DO01));
 8004462:	ee18 0a10 	vmov	r0, s16
 8004466:	a90e      	add	r1, sp, #56	; 0x38
 8004468:	f8ad 703c 	strh.w	r7, [sp, #60]	; 0x3c
 800446c:	f009 f9e2 	bl	800d834 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    txtLastValue.setXY(2, 168);
 8004470:	22a8      	movs	r2, #168	; 0xa8
 8004472:	2102      	movs	r1, #2
 8004474:	4650      	mov	r0, sl
 8004476:	f7fe fbd1 	bl	8002c1c <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800447a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800447e:	f8c9 318c 	str.w	r3, [r9, #396]	; 0x18c
        boundingArea = calculateBoundingArea();
 8004482:	f8d9 315c 	ldr.w	r3, [r9, #348]	; 0x15c
        linespace = space;
 8004486:	f8a9 5190 	strh.w	r5, [r9, #400]	; 0x190
        boundingArea = calculateBoundingArea();
 800448a:	4640      	mov	r0, r8
 800448c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8004490:	4651      	mov	r1, sl
 8004492:	4798      	blx	r3
 8004494:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8004498:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 800449c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80044a0:	4b6c      	ldr	r3, [pc, #432]	; (8004654 <_ZN19ScreenGraphViewBaseC1Ev+0x894>)
 80044a2:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(txtLastValueBuffer, TXTLASTVALUE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_SQ4H).getText());
 80044a4:	f504 5892 	add.w	r8, r4, #4672	; 0x1240
 80044a8:	b92b      	cbnz	r3, 80044b6 <_ZN19ScreenGraphViewBaseC1Ev+0x6f6>
 80044aa:	4b6b      	ldr	r3, [pc, #428]	; (8004658 <_ZN19ScreenGraphViewBaseC1Ev+0x898>)
 80044ac:	4a6b      	ldr	r2, [pc, #428]	; (800465c <_ZN19ScreenGraphViewBaseC1Ev+0x89c>)
 80044ae:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80044b0:	486b      	ldr	r0, [pc, #428]	; (8004660 <_ZN19ScreenGraphViewBaseC1Ev+0x8a0>)
 80044b2:	f01b fc35 	bl	801fd20 <__assert_func>
 80044b6:	4b6b      	ldr	r3, [pc, #428]	; (8004664 <_ZN19ScreenGraphViewBaseC1Ev+0x8a4>)
 80044b8:	881b      	ldrh	r3, [r3, #0]
 80044ba:	2b05      	cmp	r3, #5
 80044bc:	d803      	bhi.n	80044c6 <_ZN19ScreenGraphViewBaseC1Ev+0x706>
 80044be:	4b6a      	ldr	r3, [pc, #424]	; (8004668 <_ZN19ScreenGraphViewBaseC1Ev+0x8a8>)
 80044c0:	4a66      	ldr	r2, [pc, #408]	; (800465c <_ZN19ScreenGraphViewBaseC1Ev+0x89c>)
 80044c2:	2161      	movs	r1, #97	; 0x61
 80044c4:	e7f4      	b.n	80044b0 <_ZN19ScreenGraphViewBaseC1Ev+0x6f0>
        return texts->getText(typedTextId);
 80044c6:	4b69      	ldr	r3, [pc, #420]	; (800466c <_ZN19ScreenGraphViewBaseC1Ev+0x8ac>)
 80044c8:	2105      	movs	r1, #5
 80044ca:	6818      	ldr	r0, [r3, #0]
 80044cc:	f000 fa38 	bl	8004940 <_ZNK8touchgfx5Texts7getTextEt>
 80044d0:	4a67      	ldr	r2, [pc, #412]	; (8004670 <_ZN19ScreenGraphViewBaseC1Ev+0x8b0>)
 80044d2:	4603      	mov	r3, r0
 80044d4:	4639      	mov	r1, r7
 80044d6:	4640      	mov	r0, r8
 80044d8:	f00f f896 	bl	8013608 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 80044dc:	f8c9 81a4 	str.w	r8, [r9, #420]	; 0x1a4
    txtLastValue.resizeToCurrentText();
 80044e0:	4650      	mov	r0, sl
 80044e2:	f009 f987 	bl	800d7f4 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80044e6:	f04f 0107 	mov.w	r1, #7
 80044ea:	4a59      	ldr	r2, [pc, #356]	; (8004650 <_ZN19ScreenGraphViewBaseC1Ev+0x890>)
 80044ec:	f8ad 103c 	strh.w	r1, [sp, #60]	; 0x3c
    txtLastValue.setTypedText(touchgfx::TypedText(T___SINGLEUSE_POMN));
 80044f0:	4650      	mov	r0, sl
 80044f2:	a90e      	add	r1, sp, #56	; 0x38
 80044f4:	920e      	str	r2, [sp, #56]	; 0x38
 80044f6:	f009 f99d 	bl	800d834 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    txtMaxValue.setXY(2, 183);
 80044fa:	2102      	movs	r1, #2
 80044fc:	ee18 0a90 	vmov	r0, s17
 8004500:	22b7      	movs	r2, #183	; 0xb7
 8004502:	f7fe fb8b 	bl	8002c1c <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004506:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
 800450a:	f8c9 11d8 	str.w	r1, [r9, #472]	; 0x1d8
        boundingArea = calculateBoundingArea();
 800450e:	f04f 31ff 	mov.w	r1, #4294967295
 8004512:	e9c9 157a 	strd	r1, r5, [r9, #488]	; 0x1e8
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004516:	494f      	ldr	r1, [pc, #316]	; (8004654 <_ZN19ScreenGraphViewBaseC1Ev+0x894>)
        linespace = space;
 8004518:	f8a9 51dc 	strh.w	r5, [r9, #476]	; 0x1dc
 800451c:	680b      	ldr	r3, [r1, #0]
        boundingArea = calculateBoundingArea();
 800451e:	f8c9 51e4 	str.w	r5, [r9, #484]	; 0x1e4
    Unicode::snprintf(txtMaxValueBuffer, TXTMAXVALUE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_JAK9).getText());
 8004522:	f504 5892 	add.w	r8, r4, #4672	; 0x1240
 8004526:	f108 0810 	add.w	r8, r8, #16
 800452a:	2b00      	cmp	r3, #0
 800452c:	d0bd      	beq.n	80044aa <_ZN19ScreenGraphViewBaseC1Ev+0x6ea>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800452e:	484d      	ldr	r0, [pc, #308]	; (8004664 <_ZN19ScreenGraphViewBaseC1Ev+0x8a4>)
 8004530:	8803      	ldrh	r3, [r0, #0]
 8004532:	2b04      	cmp	r3, #4
 8004534:	d9c3      	bls.n	80044be <_ZN19ScreenGraphViewBaseC1Ev+0x6fe>
        return texts->getText(typedTextId);
 8004536:	4b4d      	ldr	r3, [pc, #308]	; (800466c <_ZN19ScreenGraphViewBaseC1Ev+0x8ac>)
 8004538:	2104      	movs	r1, #4
 800453a:	6818      	ldr	r0, [r3, #0]
 800453c:	f000 fa00 	bl	8004940 <_ZNK8touchgfx5Texts7getTextEt>
 8004540:	4639      	mov	r1, r7
 8004542:	4603      	mov	r3, r0
 8004544:	4a4a      	ldr	r2, [pc, #296]	; (8004670 <_ZN19ScreenGraphViewBaseC1Ev+0x8b0>)
        : typedTextId(id)
 8004546:	4f42      	ldr	r7, [pc, #264]	; (8004650 <_ZN19ScreenGraphViewBaseC1Ev+0x890>)
 8004548:	4640      	mov	r0, r8
 800454a:	f00f f85d 	bl	8013608 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    txtMaxValue.resizeToCurrentText();
 800454e:	ee18 0a90 	vmov	r0, s17
 8004552:	f8c9 81f0 	str.w	r8, [r9, #496]	; 0x1f0
 8004556:	f009 f94d 	bl	800d7f4 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
    txtMaxValue.setTypedText(touchgfx::TypedText(T___SINGLEUSE_5RGF));
 800455a:	aa0e      	add	r2, sp, #56	; 0x38
 800455c:	2306      	movs	r3, #6
 800455e:	4611      	mov	r1, r2
 8004560:	ee18 0a90 	vmov	r0, s17
 8004564:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
 8004568:	970e      	str	r7, [sp, #56]	; 0x38
 800456a:	f009 f963 	bl	800d834 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textChargingTme.setXY(2, 198);
 800456e:	22c6      	movs	r2, #198	; 0xc6
 8004570:	2102      	movs	r1, #2
 8004572:	ee19 0a10 	vmov	r0, s18
 8004576:	f7fe fb51 	bl	8002c1c <_ZN8touchgfx8Drawable5setXYEss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800457a:	4936      	ldr	r1, [pc, #216]	; (8004654 <_ZN19ScreenGraphViewBaseC1Ev+0x894>)
        linespace = space;
 800457c:	f8a9 5228 	strh.w	r5, [r9, #552]	; 0x228
        color = newColor;
 8004580:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
 8004584:	680b      	ldr	r3, [r1, #0]
 8004586:	f8c9 2224 	str.w	r2, [r9, #548]	; 0x224
        boundingArea = calculateBoundingArea();
 800458a:	f04f 32ff 	mov.w	r2, #4294967295
 800458e:	e9c9 258d 	strd	r2, r5, [r9, #564]	; 0x234
 8004592:	f8c9 5230 	str.w	r5, [r9, #560]	; 0x230
    Unicode::snprintf(textChargingTmeBuffer, TEXTCHARGINGTME_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_E1C6).getText());
 8004596:	f504 5593 	add.w	r5, r4, #4704	; 0x1260
 800459a:	2b00      	cmp	r3, #0
 800459c:	d085      	beq.n	80044aa <_ZN19ScreenGraphViewBaseC1Ev+0x6ea>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800459e:	4831      	ldr	r0, [pc, #196]	; (8004664 <_ZN19ScreenGraphViewBaseC1Ev+0x8a4>)
 80045a0:	8803      	ldrh	r3, [r0, #0]
 80045a2:	2b02      	cmp	r3, #2
 80045a4:	d98b      	bls.n	80044be <_ZN19ScreenGraphViewBaseC1Ev+0x6fe>
        return texts->getText(typedTextId);
 80045a6:	4b31      	ldr	r3, [pc, #196]	; (800466c <_ZN19ScreenGraphViewBaseC1Ev+0x8ac>)
 80045a8:	2102      	movs	r1, #2
 80045aa:	6818      	ldr	r0, [r3, #0]
 80045ac:	f000 f9c8 	bl	8004940 <_ZNK8touchgfx5Texts7getTextEt>
 80045b0:	4a2f      	ldr	r2, [pc, #188]	; (8004670 <_ZN19ScreenGraphViewBaseC1Ev+0x8b0>)
 80045b2:	4603      	mov	r3, r0
 80045b4:	210a      	movs	r1, #10
 80045b6:	4628      	mov	r0, r5
 80045b8:	f00f f826 	bl	8013608 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textChargingTme.resizeToCurrentText();
 80045bc:	ee19 0a10 	vmov	r0, s18
 80045c0:	f8c9 523c 	str.w	r5, [r9, #572]	; 0x23c
 80045c4:	f009 f916 	bl	800d7f4 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 80045c8:	1d25      	adds	r5, r4, #4
        : typedTextId(id)
 80045ca:	2303      	movs	r3, #3
    textChargingTme.setTypedText(touchgfx::TypedText(T___SINGLEUSE_U9Q3));
 80045cc:	ee19 0a10 	vmov	r0, s18
 80045d0:	a90e      	add	r1, sp, #56	; 0x38
 80045d2:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
 80045d6:	970e      	str	r7, [sp, #56]	; 0x38
 80045d8:	f009 f92c 	bl	800d834 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80045dc:	ee1a 1a90 	vmov	r1, s21
 80045e0:	4628      	mov	r0, r5
 80045e2:	f005 fd23 	bl	800a02c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80045e6:	ee19 1a90 	vmov	r1, s19
 80045ea:	4628      	mov	r0, r5
 80045ec:	f005 fd1e 	bl	800a02c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80045f0:	ee1b 1a90 	vmov	r1, s23
 80045f4:	4628      	mov	r0, r5
 80045f6:	f005 fd19 	bl	800a02c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80045fa:	ee1b 1a10 	vmov	r1, s22
 80045fe:	4628      	mov	r0, r5
 8004600:	f005 fd14 	bl	800a02c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004604:	4659      	mov	r1, fp
 8004606:	4628      	mov	r0, r5
 8004608:	f005 fd10 	bl	800a02c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800460c:	4631      	mov	r1, r6
 800460e:	4628      	mov	r0, r5
 8004610:	f005 fd0c 	bl	800a02c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004614:	ee1a 1a10 	vmov	r1, s20
 8004618:	4628      	mov	r0, r5
 800461a:	f005 fd07 	bl	800a02c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800461e:	ee18 1a10 	vmov	r1, s16
 8004622:	4628      	mov	r0, r5
 8004624:	f005 fd02 	bl	800a02c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004628:	4651      	mov	r1, sl
 800462a:	4628      	mov	r0, r5
 800462c:	f005 fcfe 	bl	800a02c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004630:	ee18 1a90 	vmov	r1, s17
 8004634:	4628      	mov	r0, r5
 8004636:	f005 fcf9 	bl	800a02c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800463a:	4628      	mov	r0, r5
 800463c:	ee19 1a10 	vmov	r1, s18
 8004640:	f005 fcf4 	bl	800a02c <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8004644:	4620      	mov	r0, r4
 8004646:	b011      	add	sp, #68	; 0x44
 8004648:	ecbd 8b10 	vpop	{d8-d15}
 800464c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004650:	0802169c 	.word	0x0802169c
 8004654:	200153b4 	.word	0x200153b4
 8004658:	08021d64 	.word	0x08021d64
 800465c:	08022323 	.word	0x08022323
 8004660:	08021de1 	.word	0x08021de1
 8004664:	200153b8 	.word	0x200153b8
 8004668:	08021e28 	.word	0x08021e28
 800466c:	200153c0 	.word	0x200153c0
 8004670:	0802235b 	.word	0x0802235b
 8004674:	ff1497c5 	.word	0xff1497c5

08004678 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 40, 10, 2, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8004678:	4770      	bx	lr
	...

0800467c <_Z23getFont_verdana_10_4bppv>:
{
 800467c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 40, 10, 2, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 800467e:	4d16      	ldr	r5, [pc, #88]	; (80046d8 <_Z23getFont_verdana_10_4bppv+0x5c>)
 8004680:	782c      	ldrb	r4, [r5, #0]
 8004682:	f3bf 8f5b 	dmb	ish
 8004686:	f014 0401 	ands.w	r4, r4, #1
{
 800468a:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 40, 10, 2, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 800468c:	d120      	bne.n	80046d0 <_Z23getFont_verdana_10_4bppv+0x54>
 800468e:	4628      	mov	r0, r5
 8004690:	f01b fb1a 	bl	801fcc8 <__cxa_guard_acquire>
 8004694:	b1e0      	cbz	r0, 80046d0 <_Z23getFont_verdana_10_4bppv+0x54>
 8004696:	233f      	movs	r3, #63	; 0x3f
 8004698:	9307      	str	r3, [sp, #28]
 800469a:	4b10      	ldr	r3, [pc, #64]	; (80046dc <_Z23getFont_verdana_10_4bppv+0x60>)
 800469c:	9306      	str	r3, [sp, #24]
 800469e:	4b10      	ldr	r3, [pc, #64]	; (80046e0 <_Z23getFont_verdana_10_4bppv+0x64>)
 80046a0:	9305      	str	r3, [sp, #20]
 80046a2:	2301      	movs	r3, #1
 80046a4:	e9cd 3303 	strd	r3, r3, [sp, #12]
 80046a8:	9302      	str	r3, [sp, #8]
 80046aa:	2204      	movs	r2, #4
 80046ac:	2302      	movs	r3, #2
 80046ae:	e9cd 3200 	strd	r3, r2, [sp]
 80046b2:	490c      	ldr	r1, [pc, #48]	; (80046e4 <_Z23getFont_verdana_10_4bppv+0x68>)
 80046b4:	480c      	ldr	r0, [pc, #48]	; (80046e8 <_Z23getFont_verdana_10_4bppv+0x6c>)
 80046b6:	9408      	str	r4, [sp, #32]
 80046b8:	230a      	movs	r3, #10
 80046ba:	2228      	movs	r2, #40	; 0x28
 80046bc:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 80046c0:	f7fe f910 	bl	80028e4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 80046c4:	4809      	ldr	r0, [pc, #36]	; (80046ec <_Z23getFont_verdana_10_4bppv+0x70>)
 80046c6:	f01b fb49 	bl	801fd5c <atexit>
 80046ca:	4628      	mov	r0, r5
 80046cc:	f01b fb08 	bl	801fce0 <__cxa_guard_release>
    return verdana_10_4bpp;
}
 80046d0:	4805      	ldr	r0, [pc, #20]	; (80046e8 <_Z23getFont_verdana_10_4bppv+0x6c>)
 80046d2:	b00d      	add	sp, #52	; 0x34
 80046d4:	bd30      	pop	{r4, r5, pc}
 80046d6:	bf00      	nop
 80046d8:	2000449c 	.word	0x2000449c
 80046dc:	08025100 	.word	0x08025100
 80046e0:	08025140 	.word	0x08025140
 80046e4:	08024c80 	.word	0x08024c80
 80046e8:	200044a0 	.word	0x200044a0
 80046ec:	08004679 	.word	0x08004679

080046f0 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_15_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_15_4bpp();

touchgfx::GeneratedFont& getFont_verdana_15_4bpp()
{
    static touchgfx::GeneratedFont verdana_15_4bpp(glyphs_verdana_15_4bpp, 37, 15, 3, 4, 1, 0, 1, unicodes_verdana_15_4bpp, kerning_verdana_15_4bpp, 63, 0, 0, 0);
 80046f0:	4770      	bx	lr
	...

080046f4 <_Z23getFont_verdana_15_4bppv>:
{
 80046f4:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_15_4bpp(glyphs_verdana_15_4bpp, 37, 15, 3, 4, 1, 0, 1, unicodes_verdana_15_4bpp, kerning_verdana_15_4bpp, 63, 0, 0, 0);
 80046f6:	4d16      	ldr	r5, [pc, #88]	; (8004750 <_Z23getFont_verdana_15_4bppv+0x5c>)
 80046f8:	782c      	ldrb	r4, [r5, #0]
 80046fa:	f3bf 8f5b 	dmb	ish
 80046fe:	f014 0401 	ands.w	r4, r4, #1
{
 8004702:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_15_4bpp(glyphs_verdana_15_4bpp, 37, 15, 3, 4, 1, 0, 1, unicodes_verdana_15_4bpp, kerning_verdana_15_4bpp, 63, 0, 0, 0);
 8004704:	d120      	bne.n	8004748 <_Z23getFont_verdana_15_4bppv+0x54>
 8004706:	4628      	mov	r0, r5
 8004708:	f01b fade 	bl	801fcc8 <__cxa_guard_acquire>
 800470c:	b1e0      	cbz	r0, 8004748 <_Z23getFont_verdana_15_4bppv+0x54>
 800470e:	233f      	movs	r3, #63	; 0x3f
 8004710:	9307      	str	r3, [sp, #28]
 8004712:	4b10      	ldr	r3, [pc, #64]	; (8004754 <_Z23getFont_verdana_15_4bppv+0x60>)
 8004714:	9306      	str	r3, [sp, #24]
 8004716:	4b10      	ldr	r3, [pc, #64]	; (8004758 <_Z23getFont_verdana_15_4bppv+0x64>)
 8004718:	9305      	str	r3, [sp, #20]
 800471a:	2301      	movs	r3, #1
 800471c:	e9cd 4303 	strd	r4, r3, [sp, #12]
 8004720:	9302      	str	r3, [sp, #8]
 8004722:	2204      	movs	r2, #4
 8004724:	2303      	movs	r3, #3
 8004726:	e9cd 3200 	strd	r3, r2, [sp]
 800472a:	490c      	ldr	r1, [pc, #48]	; (800475c <_Z23getFont_verdana_15_4bppv+0x68>)
 800472c:	480c      	ldr	r0, [pc, #48]	; (8004760 <_Z23getFont_verdana_15_4bppv+0x6c>)
 800472e:	9408      	str	r4, [sp, #32]
 8004730:	230f      	movs	r3, #15
 8004732:	2225      	movs	r2, #37	; 0x25
 8004734:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 8004738:	f7fe f8d4 	bl	80028e4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800473c:	4809      	ldr	r0, [pc, #36]	; (8004764 <_Z23getFont_verdana_15_4bppv+0x70>)
 800473e:	f01b fb0d 	bl	801fd5c <atexit>
 8004742:	4628      	mov	r0, r5
 8004744:	f01b facc 	bl	801fce0 <__cxa_guard_release>
    return verdana_15_4bpp;
}
 8004748:	4805      	ldr	r0, [pc, #20]	; (8004760 <_Z23getFont_verdana_15_4bppv+0x6c>)
 800474a:	b00d      	add	sp, #52	; 0x34
 800474c:	bd30      	pop	{r4, r5, pc}
 800474e:	bf00      	nop
 8004750:	200044c8 	.word	0x200044c8
 8004754:	08025118 	.word	0x08025118
 8004758:	08025144 	.word	0x08025144
 800475c:	08024eb0 	.word	0x08024eb0
 8004760:	200044cc 	.word	0x200044cc
 8004764:	080046f1 	.word	0x080046f1

08004768 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 5, 40, 1, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8004768:	4770      	bx	lr
	...

0800476c <_Z23getFont_verdana_40_4bppv>:
{
 800476c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 5, 40, 1, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 800476e:	4d15      	ldr	r5, [pc, #84]	; (80047c4 <_Z23getFont_verdana_40_4bppv+0x58>)
 8004770:	782c      	ldrb	r4, [r5, #0]
 8004772:	f3bf 8f5b 	dmb	ish
 8004776:	f014 0401 	ands.w	r4, r4, #1
{
 800477a:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 5, 40, 1, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 800477c:	d11f      	bne.n	80047be <_Z23getFont_verdana_40_4bppv+0x52>
 800477e:	4628      	mov	r0, r5
 8004780:	f01b faa2 	bl	801fcc8 <__cxa_guard_acquire>
 8004784:	b1d8      	cbz	r0, 80047be <_Z23getFont_verdana_40_4bppv+0x52>
 8004786:	233f      	movs	r3, #63	; 0x3f
 8004788:	9307      	str	r3, [sp, #28]
 800478a:	4b0f      	ldr	r3, [pc, #60]	; (80047c8 <_Z23getFont_verdana_40_4bppv+0x5c>)
 800478c:	9306      	str	r3, [sp, #24]
 800478e:	4b0f      	ldr	r3, [pc, #60]	; (80047cc <_Z23getFont_verdana_40_4bppv+0x60>)
 8004790:	490f      	ldr	r1, [pc, #60]	; (80047d0 <_Z23getFont_verdana_40_4bppv+0x64>)
 8004792:	4810      	ldr	r0, [pc, #64]	; (80047d4 <_Z23getFont_verdana_40_4bppv+0x68>)
 8004794:	9408      	str	r4, [sp, #32]
 8004796:	e9cd 4304 	strd	r4, r3, [sp, #16]
 800479a:	2204      	movs	r2, #4
 800479c:	2301      	movs	r3, #1
 800479e:	e9cd 2301 	strd	r2, r3, [sp, #4]
 80047a2:	9300      	str	r3, [sp, #0]
 80047a4:	2205      	movs	r2, #5
 80047a6:	2328      	movs	r3, #40	; 0x28
 80047a8:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 80047ac:	9403      	str	r4, [sp, #12]
 80047ae:	f7fe f899 	bl	80028e4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 80047b2:	4809      	ldr	r0, [pc, #36]	; (80047d8 <_Z23getFont_verdana_40_4bppv+0x6c>)
 80047b4:	f01b fad2 	bl	801fd5c <atexit>
 80047b8:	4628      	mov	r0, r5
 80047ba:	f01b fa91 	bl	801fce0 <__cxa_guard_release>
    return verdana_40_4bpp;
}
 80047be:	4805      	ldr	r0, [pc, #20]	; (80047d4 <_Z23getFont_verdana_40_4bppv+0x68>)
 80047c0:	b00d      	add	sp, #52	; 0x34
 80047c2:	bd30      	pop	{r4, r5, pc}
 80047c4:	200044f4 	.word	0x200044f4
 80047c8:	0802512c 	.word	0x0802512c
 80047cc:	08025148 	.word	0x08025148
 80047d0:	080250b8 	.word	0x080250b8
 80047d4:	200044f8 	.word	0x200044f8
 80047d8:	08004769 	.word	0x08004769

080047dc <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 80047dc:	2000      	movs	r0, #0
 80047de:	4770      	bx	lr

080047e0 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 80047e0:	2000      	movs	r0, #0
 80047e2:	4770      	bx	lr

080047e4 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 80047e4:	b40e      	push	{r1, r2, r3}
 80047e6:	b503      	push	{r0, r1, lr}
 80047e8:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 80047ea:	2100      	movs	r1, #0
{
 80047ec:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 80047f0:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 80047f2:	f00c fdc1 	bl	8011378 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 80047f6:	b002      	add	sp, #8
 80047f8:	f85d eb04 	ldr.w	lr, [sp], #4
 80047fc:	b003      	add	sp, #12
 80047fe:	4770      	bx	lr

08004800 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8004800:	b40c      	push	{r2, r3}
 8004802:	b507      	push	{r0, r1, r2, lr}
 8004804:	ab04      	add	r3, sp, #16
 8004806:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 800480a:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 800480c:	f00c fdb4 	bl	8011378 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8004810:	b003      	add	sp, #12
 8004812:	f85d eb04 	ldr.w	lr, [sp], #4
 8004816:	b002      	add	sp, #8
 8004818:	4770      	bx	lr
	...

0800481c <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 800481c:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 800481e:	b510      	push	{r4, lr}
 8004820:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 8004822:	b373      	cbz	r3, 8004882 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        {
            return used == size;
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8004824:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 8004826:	b92b      	cbnz	r3, 8004834 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8004828:	4b18      	ldr	r3, [pc, #96]	; (800488c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 800482a:	4a19      	ldr	r2, [pc, #100]	; (8004890 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 800482c:	21c0      	movs	r1, #192	; 0xc0
            return buffer[pos];
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 800482e:	4819      	ldr	r0, [pc, #100]	; (8004894 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8004830:	f01b fa76 	bl	801fd20 <__assert_func>
            return buffer[pos];
 8004834:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8004836:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800483a:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 800483c:	b30b      	cbz	r3, 8004882 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 800483e:	f00e f934 	bl	8012aaa <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 8004842:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8004844:	2b01      	cmp	r3, #1
 8004846:	d803      	bhi.n	8004850 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8004848:	4b13      	ldr	r3, [pc, #76]	; (8004898 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 800484a:	4a14      	ldr	r2, [pc, #80]	; (800489c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 800484c:	21c5      	movs	r1, #197	; 0xc5
 800484e:	e7ee      	b.n	800482e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 8004850:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8004852:	1c53      	adds	r3, r2, #1
 8004854:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 8004856:	2b09      	cmp	r3, #9
 8004858:	4619      	mov	r1, r3
 800485a:	bf88      	it	hi
 800485c:	f1a3 010a 	subhi.w	r1, r3, #10
 8004860:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 8004864:	f640 103f 	movw	r0, #2367	; 0x93f
 8004868:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 800486a:	4281      	cmp	r1, r0
 800486c:	d109      	bne.n	8004882 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 800486e:	2b0a      	cmp	r3, #10
 8004870:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8004874:	bf28      	it	cs
 8004876:	2300      	movcs	r3, #0
        }
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8004878:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 800487c:	8c50      	ldrh	r0, [r2, #34]	; 0x22
            buffer[index < size ? index : 0] = newChar;
 800487e:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 8004880:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 8004882:	4620      	mov	r0, r4
}
 8004884:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8004888:	f00e b812 	b.w	80128b0 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800488c:	08022878 	.word	0x08022878
 8004890:	08022881 	.word	0x08022881
 8004894:	0802292c 	.word	0x0802292c
 8004898:	08022976 	.word	0x08022976
 800489c:	08022984 	.word	0x08022984

080048a0 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 80048a0:	f00d bfcd 	b.w	801283e <_ZN8touchgfx12TextProvider15fillInputBufferEv>

080048a4 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 80048a4:	b510      	push	{r4, lr}
 80048a6:	b086      	sub	sp, #24
 80048a8:	ac02      	add	r4, sp, #8
 80048aa:	e884 0006 	stmia.w	r4, {r1, r2}
 80048ae:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 80048b0:	ab0a      	add	r3, sp, #40	; 0x28
 80048b2:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 80048b4:	9301      	str	r3, [sp, #4]
 80048b6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80048b8:	9300      	str	r3, [sp, #0]
 80048ba:	4621      	mov	r1, r4
 80048bc:	9b08      	ldr	r3, [sp, #32]
 80048be:	f00b fa60 	bl	800fd82 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 80048c2:	b006      	add	sp, #24
 80048c4:	bd10      	pop	{r4, pc}
	...

080048c8 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 80048c8:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 80048ca:	bb18      	cbnz	r0, 8004914 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 80048cc:	4b12      	ldr	r3, [pc, #72]	; (8004918 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 80048ce:	4813      	ldr	r0, [pc, #76]	; (800491c <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 80048d0:	681b      	ldr	r3, [r3, #0]
 80048d2:	4913      	ldr	r1, [pc, #76]	; (8004920 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 80048d4:	b1b3      	cbz	r3, 8004904 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 80048d6:	681a      	ldr	r2, [r3, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 80048d8:	689c      	ldr	r4, [r3, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 80048da:	441a      	add	r2, r3
 80048dc:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 80048de:	685a      	ldr	r2, [r3, #4]
 80048e0:	441a      	add	r2, r3
 80048e2:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 80048e4:	441c      	add	r4, r3
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 80048e6:	4b0f      	ldr	r3, [pc, #60]	; (8004924 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 80048e8:	2200      	movs	r2, #0
 80048ea:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 80048ec:	f000 f838 	bl	8004960 <_ZN17TypedTextDatabase8getFontsEv>
 80048f0:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 80048f2:	f000 f833 	bl	800495c <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 80048f6:	4b0c      	ldr	r3, [pc, #48]	; (8004928 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 80048f8:	601c      	str	r4, [r3, #0]
        fonts = f;
 80048fa:	4b0c      	ldr	r3, [pc, #48]	; (800492c <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 80048fc:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 80048fe:	4b0c      	ldr	r3, [pc, #48]	; (8004930 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8004900:	8018      	strh	r0, [r3, #0]
    }
}
 8004902:	e007      	b.n	8004914 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 8004904:	4b0b      	ldr	r3, [pc, #44]	; (8004934 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 8004906:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8004908:	4b0b      	ldr	r3, [pc, #44]	; (8004938 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 800490a:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 800490c:	4b0b      	ldr	r3, [pc, #44]	; (800493c <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 800490e:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8004910:	2c00      	cmp	r4, #0
 8004912:	d1e8      	bne.n	80048e6 <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8004914:	bd38      	pop	{r3, r4, r5, pc}
 8004916:	bf00      	nop
 8004918:	20004520 	.word	0x20004520
 800491c:	20004524 	.word	0x20004524
 8004920:	20004528 	.word	0x20004528
 8004924:	2000452c 	.word	0x2000452c
 8004928:	200153b4 	.word	0x200153b4
 800492c:	200153bc 	.word	0x200153bc
 8004930:	200153b8 	.word	0x200153b8
 8004934:	08025188 	.word	0x08025188
 8004938:	0802514c 	.word	0x0802514c
 800493c:	080252e4 	.word	0x080252e4

08004940 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8004940:	4b04      	ldr	r3, [pc, #16]	; (8004954 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 8004942:	681b      	ldr	r3, [r3, #0]
 8004944:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8004948:	4b03      	ldr	r3, [pc, #12]	; (8004958 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 800494a:	681b      	ldr	r3, [r3, #0]
}
 800494c:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8004950:	4770      	bx	lr
 8004952:	bf00      	nop
 8004954:	20004528 	.word	0x20004528
 8004958:	20004524 	.word	0x20004524

0800495c <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 800495c:	200f      	movs	r0, #15
 800495e:	4770      	bx	lr

08004960 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8004960:	4800      	ldr	r0, [pc, #0]	; (8004964 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 8004962:	4770      	bx	lr
 8004964:	20004530 	.word	0x20004530

08004968 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8004968:	b510      	push	{r4, lr}
    &(getFont_verdana_15_4bpp()),
 800496a:	f7ff fec3 	bl	80046f4 <_Z23getFont_verdana_15_4bppv>
};
 800496e:	4c04      	ldr	r4, [pc, #16]	; (8004980 <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
 8004970:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 8004972:	f7ff fefb 	bl	800476c <_Z23getFont_verdana_40_4bppv>
};
 8004976:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp())
 8004978:	f7ff fe80 	bl	800467c <_Z23getFont_verdana_10_4bppv>
};
 800497c:	60a0      	str	r0, [r4, #8]
} // namespace TypedTextDatabase
 800497e:	bd10      	pop	{r4, pc}
 8004980:	20004530 	.word	0x20004530

08004984 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8004984:	4770      	bx	lr

08004986 <_ZN19FrontendApplicationD0Ev>:
 8004986:	b510      	push	{r4, lr}
 8004988:	f44f 71ac 	mov.w	r1, #344	; 0x158
 800498c:	4604      	mov	r4, r0
 800498e:	f01b f999 	bl	801fcc4 <_ZdlPvj>
 8004992:	4620      	mov	r0, r4
 8004994:	bd10      	pop	{r4, pc}

08004996 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8004996:	b510      	push	{r4, lr}
 8004998:	4604      	mov	r4, r0
    {
        model.tick();
 800499a:	f8d0 0154 	ldr.w	r0, [r0, #340]	; 0x154
 800499e:	f000 f813 	bl	80049c8 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 80049a2:	4620      	mov	r0, r4
    }
 80049a4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 80049a8:	f00b bd64 	b.w	8010474 <_ZN8touchgfx11Application15handleTickEventEv>

080049ac <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 80049ac:	b510      	push	{r4, lr}
 80049ae:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 80049b0:	f7fd fd98 	bl	80024e4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 80049b4:	4b01      	ldr	r3, [pc, #4]	; (80049bc <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 80049b6:	6023      	str	r3, [r4, #0]
{

}
 80049b8:	4620      	mov	r0, r4
 80049ba:	bd10      	pop	{r4, pc}
 80049bc:	08022a60 	.word	0x08022a60

080049c0 <_ZN5ModelC1Ev>:
#include "Charger.h"
extern LadowarkaStruct ladowarka;
#endif
int PradLadowania=400; //ustawienie na sztywno pradu ladowania
int licznik;
Model::Model() : modelListener(0)
 80049c0:	2200      	movs	r2, #0
 80049c2:	6002      	str	r2, [r0, #0]
{

}
 80049c4:	4770      	bx	lr
	...

080049c8 <_ZN5Model4tickEv>:

void Model::tick()
{
 80049c8:	b570      	push	{r4, r5, r6, lr}
 80049ca:	4604      	mov	r4, r0
//	if (licznik>1000 )licznik =0;
//
//	if (licznik%100) modelListener->UpdateBatteryVoltage();

/************* UPDATE BATT VOLTAGE ON GRAPH *********************/
modelListener->UpdateBatteryVoltage();
 80049cc:	6800      	ldr	r0, [r0, #0]

#ifndef SIMULATOR

if(ladowarka.narysujPunktNaWykresie){
 80049ce:	4d15      	ldr	r5, [pc, #84]	; (8004a24 <_ZN5Model4tickEv+0x5c>)
modelListener->UpdateBatteryVoltage();
 80049d0:	6803      	ldr	r3, [r0, #0]
 80049d2:	689b      	ldr	r3, [r3, #8]
 80049d4:	4798      	blx	r3
if(ladowarka.narysujPunktNaWykresie){
 80049d6:	f8d5 3a6c 	ldr.w	r3, [r5, #2668]	; 0xa6c
 80049da:	b173      	cbz	r3, 80049fa <_ZN5Model4tickEv+0x32>
	if (ladowarka.CzsasLadowaniaWSec==1)	modelListener->DrawPoint(); //dodanie jednego extra punktu bo zaczynamy od 0
 80049dc:	f8d5 3a74 	ldr.w	r3, [r5, #2676]	; 0xa74
 80049e0:	2b01      	cmp	r3, #1
 80049e2:	d103      	bne.n	80049ec <_ZN5Model4tickEv+0x24>
 80049e4:	6820      	ldr	r0, [r4, #0]
 80049e6:	6803      	ldr	r3, [r0, #0]
 80049e8:	68db      	ldr	r3, [r3, #12]
 80049ea:	4798      	blx	r3
	modelListener->DrawPoint();
 80049ec:	6820      	ldr	r0, [r4, #0]
 80049ee:	6803      	ldr	r3, [r0, #0]
 80049f0:	68db      	ldr	r3, [r3, #12]
 80049f2:	4798      	blx	r3
	ladowarka.narysujPunktNaWykresie=0;
 80049f4:	2300      	movs	r3, #0
 80049f6:	f8c5 3a6c 	str.w	r3, [r5, #2668]	; 0xa6c
}

if (ladowarka.narysujPunktNaWykresieMin){
 80049fa:	f8d5 3a70 	ldr.w	r3, [r5, #2672]	; 0xa70
 80049fe:	b133      	cbz	r3, 8004a0e <_ZN5Model4tickEv+0x46>
	modelListener->DrawPointMin();
 8004a00:	6820      	ldr	r0, [r4, #0]
 8004a02:	6803      	ldr	r3, [r0, #0]
 8004a04:	691b      	ldr	r3, [r3, #16]
 8004a06:	4798      	blx	r3
	ladowarka.narysujPunktNaWykresieMin=0;
 8004a08:	2300      	movs	r3, #0
 8004a0a:	f8c5 3a70 	str.w	r3, [r5, #2672]	; 0xa70
#endif



/*************** Update min/max value **************************/
modelListener->DisplayLastAndMaxVlt();
 8004a0e:	6820      	ldr	r0, [r4, #0]
 8004a10:	6803      	ldr	r3, [r0, #0]
 8004a12:	695b      	ldr	r3, [r3, #20]
 8004a14:	4798      	blx	r3
/*************** Update Runningn Time value **************************/
modelListener->DisplayRunningTime();
 8004a16:	6820      	ldr	r0, [r4, #0]
 8004a18:	6803      	ldr	r3, [r0, #0]
}
 8004a1a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
modelListener->DisplayRunningTime();
 8004a1e:	699b      	ldr	r3, [r3, #24]
 8004a20:	4718      	bx	r3
 8004a22:	bf00      	nop
 8004a24:	200039d0 	.word	0x200039d0

08004a28 <_ZN13ModelListener9DrawPointEv>:
    virtual void DrawPoint () {};
 8004a28:	4770      	bx	lr

08004a2a <_ZN13ModelListener12DrawPointMinEv>:
    virtual void DrawPointMin () {};
 8004a2a:	4770      	bx	lr

08004a2c <_ZN13ModelListener20DisplayLastAndMaxVltEv>:
    virtual void DisplayLastAndMaxVlt() {} ;
 8004a2c:	4770      	bx	lr

08004a2e <_ZN13ModelListener18DisplayRunningTimeEv>:
    virtual void DisplayRunningTime() {} ;
 8004a2e:	4770      	bx	lr

08004a30 <_ZN16Screen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen1Presenter() {};
 8004a30:	4770      	bx	lr

08004a32 <_ZThn4_N16Screen1PresenterD1Ev>:
 8004a32:	3804      	subs	r0, #4
 8004a34:	4770      	bx	lr

08004a36 <_ZN16Screen1Presenter10deactivateEv>:
}

void Screen1Presenter::activate()
{

}
 8004a36:	4770      	bx	lr

08004a38 <_ZN16Screen1Presenter20UpdateBatteryVoltageEv>:
{

}

void Screen1Presenter:: UpdateBatteryVoltage(){
view.DisplayBatteryVoltage();
 8004a38:	68c0      	ldr	r0, [r0, #12]
 8004a3a:	6803      	ldr	r3, [r0, #0]
 8004a3c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004a3e:	4718      	bx	r3

08004a40 <_ZThn4_N16Screen1Presenter20UpdateBatteryVoltageEv>:
    virtual void UpdateBatteryVoltage();
 8004a40:	f1a0 0004 	sub.w	r0, r0, #4
 8004a44:	f7ff bff8 	b.w	8004a38 <_ZN16Screen1Presenter20UpdateBatteryVoltageEv>

08004a48 <_ZN16Screen1PresenterD0Ev>:
    virtual ~Screen1Presenter() {};
 8004a48:	b510      	push	{r4, lr}
 8004a4a:	2110      	movs	r1, #16
 8004a4c:	4604      	mov	r4, r0
 8004a4e:	f01b f939 	bl	801fcc4 <_ZdlPvj>
 8004a52:	4620      	mov	r0, r4
 8004a54:	bd10      	pop	{r4, pc}

08004a56 <_ZThn4_N16Screen1PresenterD0Ev>:
 8004a56:	f1a0 0004 	sub.w	r0, r0, #4
 8004a5a:	e7f5      	b.n	8004a48 <_ZN16Screen1PresenterD0Ev>

08004a5c <_ZN16Screen1PresenterC1ER11Screen1View>:
Screen1Presenter::Screen1Presenter(Screen1View& v)
 8004a5c:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 8004a5e:	2200      	movs	r2, #0
 8004a60:	6082      	str	r2, [r0, #8]
    : view(v)
 8004a62:	4a04      	ldr	r2, [pc, #16]	; (8004a74 <_ZN16Screen1PresenterC1ER11Screen1View+0x18>)
 8004a64:	60c1      	str	r1, [r0, #12]
 8004a66:	f102 0408 	add.w	r4, r2, #8
 8004a6a:	3224      	adds	r2, #36	; 0x24
 8004a6c:	6004      	str	r4, [r0, #0]
 8004a6e:	6042      	str	r2, [r0, #4]
}
 8004a70:	bd10      	pop	{r4, pc}
 8004a72:	bf00      	nop
 8004a74:	08022aa4 	.word	0x08022aa4

08004a78 <_ZN11Screen1ViewD1Ev>:
#include <gui/screen1_screen/Screen1Presenter.hpp>
class Screen1View : public Screen1ViewBase
{
public:
    Screen1View();
    virtual ~Screen1View() {}
 8004a78:	4770      	bx	lr

08004a7a <_ZN11Screen1View14tearDownScreenEv>:
}

void Screen1View::tearDownScreen()
{
    Screen1ViewBase::tearDownScreen();
}
 8004a7a:	4770      	bx	lr

08004a7c <_ZN11Screen1View18ButtonStartClickedEv>:
}

void Screen1View::ButtonStartClicked()
{
#ifndef SIMULATOR
 ladowarka.LoadingCurrent=PradLadowania;
 8004a7c:	4b03      	ldr	r3, [pc, #12]	; (8004a8c <_ZN11Screen1View18ButtonStartClickedEv+0x10>)
 8004a7e:	681a      	ldr	r2, [r3, #0]
 8004a80:	4b03      	ldr	r3, [pc, #12]	; (8004a90 <_ZN11Screen1View18ButtonStartClickedEv+0x14>)
 8004a82:	609a      	str	r2, [r3, #8]
 ladowarka.ChargeStarted=1;
 8004a84:	2201      	movs	r2, #1
 8004a86:	60da      	str	r2, [r3, #12]
#endif
}
 8004a88:	4770      	bx	lr
 8004a8a:	bf00      	nop
 8004a8c:	20000014 	.word	0x20000014
 8004a90:	200039d0 	.word	0x200039d0

08004a94 <_ZN11Screen1View15ButtonUpClickedEv>:
	PradLadowania=PradLadowania+10;
 8004a94:	4b0b      	ldr	r3, [pc, #44]	; (8004ac4 <_ZN11Screen1View15ButtonUpClickedEv+0x30>)
 8004a96:	681a      	ldr	r2, [r3, #0]
{
 8004a98:	b510      	push	{r4, lr}
	PradLadowania=PradLadowania+10;
 8004a9a:	320a      	adds	r2, #10
	if (PradLadowania >400){
 8004a9c:	f5b2 7fc8 	cmp.w	r2, #400	; 0x190
	PradLadowania=400;}
 8004aa0:	bfc8      	it	gt
 8004aa2:	f44f 72c8 	movgt.w	r2, #400	; 0x190
 8004aa6:	601a      	str	r2, [r3, #0]
{
 8004aa8:	4604      	mov	r4, r0
	Unicode::snprintf(txtPradLadowaniaBuffer,TXTPRADLADOWANIA_SIZE,"%d",PradLadowania);
 8004aaa:	681b      	ldr	r3, [r3, #0]
 8004aac:	4a06      	ldr	r2, [pc, #24]	; (8004ac8 <_ZN11Screen1View15ButtonUpClickedEv+0x34>)
 8004aae:	210a      	movs	r1, #10
 8004ab0:	f500 706c 	add.w	r0, r0, #944	; 0x3b0
 8004ab4:	f00e fda8 	bl	8013608 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	txtPradLadowania.invalidate();
 8004ab8:	f504 7017 	add.w	r0, r4, #604	; 0x25c
}
 8004abc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	txtPradLadowania.invalidate();
 8004ac0:	f00c bd7b 	b.w	80115ba <_ZNK8touchgfx8Drawable10invalidateEv>
 8004ac4:	20000014 	.word	0x20000014
 8004ac8:	08022ae4 	.word	0x08022ae4

08004acc <_ZN11Screen1View17ButtonDownClickedEv>:
	PradLadowania=PradLadowania-10;
 8004acc:	4b0a      	ldr	r3, [pc, #40]	; (8004af8 <_ZN11Screen1View17ButtonDownClickedEv+0x2c>)
 8004ace:	681a      	ldr	r2, [r3, #0]
{
 8004ad0:	b510      	push	{r4, lr}
	PradLadowania=PradLadowania-10;
 8004ad2:	3a0a      	subs	r2, #10
    if (PradLadowania <10){
 8004ad4:	2a09      	cmp	r2, #9
	PradLadowania=10;}
 8004ad6:	bfd8      	it	le
 8004ad8:	220a      	movle	r2, #10
 8004ada:	601a      	str	r2, [r3, #0]
{
 8004adc:	4604      	mov	r4, r0
	Unicode::snprintf(txtPradLadowaniaBuffer,TXTPRADLADOWANIA_SIZE,"%d",PradLadowania);
 8004ade:	681b      	ldr	r3, [r3, #0]
 8004ae0:	4a06      	ldr	r2, [pc, #24]	; (8004afc <_ZN11Screen1View17ButtonDownClickedEv+0x30>)
 8004ae2:	210a      	movs	r1, #10
 8004ae4:	f500 706c 	add.w	r0, r0, #944	; 0x3b0
 8004ae8:	f00e fd8e 	bl	8013608 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	txtPradLadowania.invalidate();
 8004aec:	f504 7017 	add.w	r0, r4, #604	; 0x25c
}
 8004af0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	txtPradLadowania.invalidate();
 8004af4:	f00c bd61 	b.w	80115ba <_ZNK8touchgfx8Drawable10invalidateEv>
 8004af8:	20000014 	.word	0x20000014
 8004afc:	08022ae4 	.word	0x08022ae4

08004b00 <_ZN11Screen1View11setupScreenEv>:
    Screen1ViewBase::setupScreen();
 8004b00:	f7fd bf63 	b.w	80029ca <_ZN15Screen1ViewBase11setupScreenEv>

08004b04 <_ZN11Screen1View21DisplayBatteryVoltageEv>:
void Screen1View::DisplayBatteryVoltage(){
 8004b04:	b513      	push	{r0, r1, r4, lr}
	Unicode::snprintfFloat(txtNapiecieBateriiBuffer,TXTNAPIECIEBATERII_SIZE,"%.3f",ladowarka.BatteryVoltage);
 8004b06:	4b09      	ldr	r3, [pc, #36]	; (8004b2c <_ZN11Screen1View21DisplayBatteryVoltageEv+0x28>)
     *
     * @see snprintf, snprintfFloats
     */
    static UnicodeChar* snprintfFloat(UnicodeChar* dst, uint16_t dstSize, const char* format, const float value)
    {
        return snprintfFloats(dst, dstSize, format, &value);
 8004b08:	4a09      	ldr	r2, [pc, #36]	; (8004b30 <_ZN11Screen1View21DisplayBatteryVoltageEv+0x2c>)
 8004b0a:	681b      	ldr	r3, [r3, #0]
 8004b0c:	9301      	str	r3, [sp, #4]
void Screen1View::DisplayBatteryVoltage(){
 8004b0e:	4604      	mov	r4, r0
 8004b10:	ab01      	add	r3, sp, #4
 8004b12:	210a      	movs	r1, #10
 8004b14:	f500 7071 	add.w	r0, r0, #964	; 0x3c4
 8004b18:	f00e ff32 	bl	8013980 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	txtNapiecieBaterii.invalidate();
 8004b1c:	f504 7059 	add.w	r0, r4, #868	; 0x364
}
 8004b20:	b002      	add	sp, #8
 8004b22:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	txtNapiecieBaterii.invalidate();
 8004b26:	f00c bd48 	b.w	80115ba <_ZNK8touchgfx8Drawable10invalidateEv>
 8004b2a:	bf00      	nop
 8004b2c:	200039d0 	.word	0x200039d0
 8004b30:	08022ae7 	.word	0x08022ae7

08004b34 <_ZN11Screen1ViewD0Ev>:
 8004b34:	b510      	push	{r4, lr}
 8004b36:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
 8004b3a:	4604      	mov	r4, r0
 8004b3c:	f01b f8c2 	bl	801fcc4 <_ZdlPvj>
 8004b40:	4620      	mov	r0, r4
 8004b42:	bd10      	pop	{r4, pc}

08004b44 <_ZN11Screen1ViewC1Ev>:
Screen1View::Screen1View()
 8004b44:	b510      	push	{r4, lr}
 8004b46:	4604      	mov	r4, r0
 8004b48:	f7fe f9ac 	bl	8002ea4 <_ZN15Screen1ViewBaseC1Ev>
 8004b4c:	4b07      	ldr	r3, [pc, #28]	; (8004b6c <_ZN11Screen1ViewC1Ev+0x28>)
 8004b4e:	6023      	str	r3, [r4, #0]
Unicode::snprintf(txtPradLadowaniaBuffer,TXTPRADLADOWANIA_SIZE,"%d",PradLadowania);
 8004b50:	4b07      	ldr	r3, [pc, #28]	; (8004b70 <_ZN11Screen1ViewC1Ev+0x2c>)
 8004b52:	4a08      	ldr	r2, [pc, #32]	; (8004b74 <_ZN11Screen1ViewC1Ev+0x30>)
 8004b54:	681b      	ldr	r3, [r3, #0]
 8004b56:	210a      	movs	r1, #10
 8004b58:	f504 706c 	add.w	r0, r4, #944	; 0x3b0
 8004b5c:	f00e fd54 	bl	8013608 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	txtPradLadowania.invalidate();
 8004b60:	f504 7017 	add.w	r0, r4, #604	; 0x25c
 8004b64:	f00c fd29 	bl	80115ba <_ZNK8touchgfx8Drawable10invalidateEv>
}
 8004b68:	4620      	mov	r0, r4
 8004b6a:	bd10      	pop	{r4, pc}
 8004b6c:	08022af4 	.word	0x08022af4
 8004b70:	20000014 	.word	0x20000014
 8004b74:	08022ae4 	.word	0x08022ae4

08004b78 <_ZN13ModelListener20UpdateBatteryVoltageEv>:
    virtual void UpdateBatteryVoltage () {};
 8004b78:	4770      	bx	lr

08004b7a <_ZN20ScreenGraphPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~ScreenGraphPresenter() {};
 8004b7a:	4770      	bx	lr

08004b7c <_ZThn4_N20ScreenGraphPresenterD1Ev>:
 8004b7c:	3804      	subs	r0, #4
 8004b7e:	4770      	bx	lr

08004b80 <_ZN20ScreenGraphPresenter10deactivateEv>:
}

void ScreenGraphPresenter::activate()
{

}
 8004b80:	4770      	bx	lr

08004b82 <_ZN20ScreenGraphPresenter9DrawPointEv>:
{

}
void ScreenGraphPresenter::DrawPoint()
{
	view.DrawPoint2();
 8004b82:	68c0      	ldr	r0, [r0, #12]
 8004b84:	6803      	ldr	r3, [r0, #0]
 8004b86:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004b88:	4718      	bx	r3

08004b8a <_ZThn4_N20ScreenGraphPresenter9DrawPointEv>:
    virtual void DrawPoint();
 8004b8a:	f1a0 0004 	sub.w	r0, r0, #4
 8004b8e:	f7ff bff8 	b.w	8004b82 <_ZN20ScreenGraphPresenter9DrawPointEv>

08004b92 <_ZN20ScreenGraphPresenter12DrawPointMinEv>:
}
void ScreenGraphPresenter::DrawPointMin()
{
	view.DrawPoint2Min();
 8004b92:	68c0      	ldr	r0, [r0, #12]
 8004b94:	6803      	ldr	r3, [r0, #0]
 8004b96:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8004b98:	4718      	bx	r3

08004b9a <_ZThn4_N20ScreenGraphPresenter12DrawPointMinEv>:
    virtual void DrawPointMin();
 8004b9a:	f1a0 0004 	sub.w	r0, r0, #4
 8004b9e:	f7ff bff8 	b.w	8004b92 <_ZN20ScreenGraphPresenter12DrawPointMinEv>

08004ba2 <_ZN20ScreenGraphPresenter20DisplayLastAndMaxVltEv>:
}
void ScreenGraphPresenter::DisplayLastAndMaxVlt()
{
	view.DisplayLastAndMaxVlt2();
 8004ba2:	68c0      	ldr	r0, [r0, #12]
 8004ba4:	6803      	ldr	r3, [r0, #0]
 8004ba6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004ba8:	4718      	bx	r3

08004baa <_ZThn4_N20ScreenGraphPresenter20DisplayLastAndMaxVltEv>:
    virtual void DisplayLastAndMaxVlt();
 8004baa:	f1a0 0004 	sub.w	r0, r0, #4
 8004bae:	f7ff bff8 	b.w	8004ba2 <_ZN20ScreenGraphPresenter20DisplayLastAndMaxVltEv>

08004bb2 <_ZN20ScreenGraphPresenter18DisplayRunningTimeEv>:
}
void ScreenGraphPresenter::DisplayRunningTime()
{
	view.DisplayRunningTime2();
 8004bb2:	68c0      	ldr	r0, [r0, #12]
 8004bb4:	6803      	ldr	r3, [r0, #0]
 8004bb6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004bb8:	4718      	bx	r3

08004bba <_ZThn4_N20ScreenGraphPresenter18DisplayRunningTimeEv>:
    virtual void DisplayRunningTime();
 8004bba:	f1a0 0004 	sub.w	r0, r0, #4
 8004bbe:	f7ff bff8 	b.w	8004bb2 <_ZN20ScreenGraphPresenter18DisplayRunningTimeEv>

08004bc2 <_ZN20ScreenGraphPresenterD0Ev>:
    virtual ~ScreenGraphPresenter() {};
 8004bc2:	b510      	push	{r4, lr}
 8004bc4:	2110      	movs	r1, #16
 8004bc6:	4604      	mov	r4, r0
 8004bc8:	f01b f87c 	bl	801fcc4 <_ZdlPvj>
 8004bcc:	4620      	mov	r0, r4
 8004bce:	bd10      	pop	{r4, pc}

08004bd0 <_ZThn4_N20ScreenGraphPresenterD0Ev>:
 8004bd0:	f1a0 0004 	sub.w	r0, r0, #4
 8004bd4:	e7f5      	b.n	8004bc2 <_ZN20ScreenGraphPresenterD0Ev>
	...

08004bd8 <_ZN20ScreenGraphPresenterC1ER15ScreenGraphView>:
ScreenGraphPresenter::ScreenGraphPresenter(ScreenGraphView& v)
 8004bd8:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 8004bda:	2200      	movs	r2, #0
 8004bdc:	6082      	str	r2, [r0, #8]
    : view(v)
 8004bde:	4a04      	ldr	r2, [pc, #16]	; (8004bf0 <_ZN20ScreenGraphPresenterC1ER15ScreenGraphView+0x18>)
 8004be0:	60c1      	str	r1, [r0, #12]
 8004be2:	f102 0408 	add.w	r4, r2, #8
 8004be6:	3230      	adds	r2, #48	; 0x30
 8004be8:	6004      	str	r4, [r0, #0]
 8004bea:	6042      	str	r2, [r0, #4]
}
 8004bec:	bd10      	pop	{r4, pc}
 8004bee:	bf00      	nop
 8004bf0:	08022b30 	.word	0x08022b30

08004bf4 <_ZN15ScreenGraphViewD1Ev>:

class ScreenGraphView : public ScreenGraphViewBase
{
public:
    ScreenGraphView();
    virtual ~ScreenGraphView() {}
 8004bf4:	4770      	bx	lr

08004bf6 <_ZN15ScreenGraphView14tearDownScreenEv>:
}

void ScreenGraphView::tearDownScreen()
{
    ScreenGraphViewBase::tearDownScreen();
}
 8004bf6:	4770      	bx	lr

08004bf8 <_ZN15ScreenGraphView10DrawPoint2Ev>:

void ScreenGraphView::DrawPoint2(){
 8004bf8:	4603      	mov	r3, r0
        const float fs = f * (float)scale;
 8004bfa:	f503 6354 	add.w	r3, r3, #3392	; 0xd40
#ifndef SIMULATOR
	dynamicGraph1.addDataPoint(ladowarka.BatteryVoltage);
 8004bfe:	4a17      	ldr	r2, [pc, #92]	; (8004c5c <_ZN15ScreenGraphView10DrawPoint2Ev+0x64>)
 8004c00:	edd3 7a00 	vldr	s15, [r3]
 8004c04:	ed92 7a00 	vldr	s14, [r2]
 8004c08:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004c0c:	f600 500c 	addw	r0, r0, #3340	; 0xd0c
 8004c10:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004c14:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004c18:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004c1c:	db09      	blt.n	8004c32 <_ZN15ScreenGraphView10DrawPoint2Ev+0x3a>
            return (int)(fs + 0.5f);
 8004c1e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004c22:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004c26:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004c2a:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004c2e:	f007 b8d9 	b.w	800bde4 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8004c32:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8004c36:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8004c3a:	ee17 3a10 	vmov	r3, s14
 8004c3e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8004c42:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8004c46:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8004c4a:	1e59      	subs	r1, r3, #1
 8004c4c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004c50:	ee17 3a90 	vmov	r3, s15
 8004c54:	440b      	add	r3, r1
 8004c56:	4619      	mov	r1, r3
 8004c58:	e7e9      	b.n	8004c2e <_ZN15ScreenGraphView10DrawPoint2Ev+0x36>
 8004c5a:	bf00      	nop
 8004c5c:	200039d0 	.word	0x200039d0

08004c60 <_ZN15ScreenGraphView13DrawPoint2MinEv>:

#endif
}
void ScreenGraphView::DrawPoint2Min(){
#ifndef SIMULATOR
	dynamicGraph2.addDataPoint(ladowarka.NapiecieBaterii[ladowarka.CzsasLadowaniaWSec/60]);
 8004c60:	491c      	ldr	r1, [pc, #112]	; (8004cd4 <_ZN15ScreenGraphView13DrawPoint2MinEv+0x74>)
void ScreenGraphView::DrawPoint2Min(){
 8004c62:	4602      	mov	r2, r0
	dynamicGraph2.addDataPoint(ladowarka.NapiecieBaterii[ladowarka.CzsasLadowaniaWSec/60]);
 8004c64:	f8d1 3a74 	ldr.w	r3, [r1, #2676]	; 0xa74
        const float fs = f * (float)scale;
 8004c68:	edd2 7a4d 	vldr	s15, [r2, #308]	; 0x134
void ScreenGraphView::DrawPoint2Min(){
 8004c6c:	b410      	push	{r4}
	dynamicGraph2.addDataPoint(ladowarka.NapiecieBaterii[ladowarka.CzsasLadowaniaWSec/60]);
 8004c6e:	243c      	movs	r4, #60	; 0x3c
 8004c70:	fb93 f3f4 	sdiv	r3, r3, r4
 8004c74:	3304      	adds	r3, #4
 8004c76:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8004c7a:	ed93 7a01 	vldr	s14, [r3, #4]
 8004c7e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004c82:	f500 7080 	add.w	r0, r0, #256	; 0x100
 8004c86:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004c8a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004c8e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004c92:	db0b      	blt.n	8004cac <_ZN15ScreenGraphView13DrawPoint2MinEv+0x4c>
            return (int)(fs + 0.5f);
 8004c94:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004c98:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004c9c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004ca0:	ee17 1a90 	vmov	r1, s15

#endif
}
 8004ca4:	f85d 4b04 	ldr.w	r4, [sp], #4
        return addDataPointScaled(float2scaledY(y));
 8004ca8:	f007 b89c 	b.w	800bde4 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8004cac:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8004cb0:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8004cb4:	ee17 3a10 	vmov	r3, s14
 8004cb8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8004cbc:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8004cc0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8004cc4:	1e59      	subs	r1, r3, #1
 8004cc6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004cca:	ee17 3a90 	vmov	r3, s15
 8004cce:	440b      	add	r3, r1
 8004cd0:	4619      	mov	r1, r3
 8004cd2:	e7e7      	b.n	8004ca4 <_ZN15ScreenGraphView13DrawPoint2MinEv+0x44>
 8004cd4:	200039d0 	.word	0x200039d0

08004cd8 <_ZN15ScreenGraphView19DisplayRunningTime2Ev>:
}

void ScreenGraphView::DisplayRunningTime2(){
#ifndef SIMULATOR
	int sec, h, m, s;
	sec=ladowarka.CzsasLadowaniaWSec;
 8004cd8:	4b11      	ldr	r3, [pc, #68]	; (8004d20 <_ZN15ScreenGraphView19DisplayRunningTime2Ev+0x48>)
void ScreenGraphView::DisplayRunningTime2(){
 8004cda:	b513      	push	{r0, r1, r4, lr}
	sec=ladowarka.CzsasLadowaniaWSec;
 8004cdc:	f8d3 2a74 	ldr.w	r2, [r3, #2676]	; 0xa74
	h = (sec/3600);
	m = (sec -(3600*h))/60;
 8004ce0:	4910      	ldr	r1, [pc, #64]	; (8004d24 <_ZN15ScreenGraphView19DisplayRunningTime2Ev+0x4c>)
void ScreenGraphView::DisplayRunningTime2(){
 8004ce2:	4604      	mov	r4, r0
	h = (sec/3600);
 8004ce4:	f44f 6361 	mov.w	r3, #3600	; 0xe10
	s = (sec -(3600*h)-(m*60));
 8004ce8:	f06f 003b 	mvn.w	r0, #59	; 0x3b
	h = (sec/3600);
 8004cec:	fb92 f3f3 	sdiv	r3, r2, r3
	m = (sec -(3600*h))/60;
 8004cf0:	fb01 2203 	mla	r2, r1, r3, r2
 8004cf4:	213c      	movs	r1, #60	; 0x3c
 8004cf6:	fb92 f1f1 	sdiv	r1, r2, r1
	s = (sec -(3600*h)-(m*60));
 8004cfa:	fb00 2201 	mla	r2, r0, r1, r2

	Unicode::snprintf(textChargingTmeBuffer,TEXTCHARGINGTME_SIZE,"%02d:%02d:%02d\n",h,m,s);
 8004cfe:	e9cd 1200 	strd	r1, r2, [sp]
 8004d02:	f504 5093 	add.w	r0, r4, #4704	; 0x1260
 8004d06:	4a08      	ldr	r2, [pc, #32]	; (8004d28 <_ZN15ScreenGraphView19DisplayRunningTime2Ev+0x50>)
 8004d08:	210a      	movs	r1, #10
 8004d0a:	f00e fc7d 	bl	8013608 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textChargingTme.invalidate();
 8004d0e:	f504 508f 	add.w	r0, r4, #4576	; 0x11e0
 8004d12:	3014      	adds	r0, #20
#endif
}
 8004d14:	b002      	add	sp, #8
 8004d16:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	textChargingTme.invalidate();
 8004d1a:	f00c bc4e 	b.w	80115ba <_ZNK8touchgfx8Drawable10invalidateEv>
 8004d1e:	bf00      	nop
 8004d20:	200039d0 	.word	0x200039d0
 8004d24:	fffff1f0 	.word	0xfffff1f0
 8004d28:	08022b7c 	.word	0x08022b7c

08004d2c <_ZN15ScreenGraphViewD0Ev>:
 8004d2c:	b510      	push	{r4, lr}
 8004d2e:	f242 5144 	movw	r1, #9540	; 0x2544
 8004d32:	4604      	mov	r4, r0
 8004d34:	f01a ffc6 	bl	801fcc4 <_ZdlPvj>
 8004d38:	4620      	mov	r0, r4
 8004d3a:	bd10      	pop	{r4, pc}

08004d3c <_ZN15ScreenGraphView11setupScreenEv>:
{
 8004d3c:	b510      	push	{r4, lr}
 8004d3e:	4604      	mov	r4, r0
    ScreenGraphViewBase::setupScreen();
 8004d40:	f7fe fea1 	bl	8003a86 <_ZN19ScreenGraphViewBase11setupScreenEv>
        setIntervalScaled(AbstractDataGraph::float2scaled(interval, dataScale));
 8004d44:	f504 5280 	add.w	r2, r4, #4096	; 0x1000
        const float fs = f * (float)scale;
 8004d48:	edd2 7a30 	vldr	s15, [r2, #192]	; 0xc0
 8004d4c:	ed9f 6a45 	vldr	s12, [pc, #276]	; 8004e64 <_ZN15ScreenGraphView11setupScreenEv+0x128>
 8004d50:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8004d54:	ee27 7a06 	vmul.f32	s14, s14, s12
        if (fs >= 0)
 8004d58:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8004d5c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004d60:	db43      	blt.n	8004dea <_ZN15ScreenGraphView11setupScreenEv+0xae>
            return (int)(fs + 0.5f);
 8004d62:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8004d66:	ee37 7a27 	vadd.f32	s14, s14, s15
 8004d6a:	eefd 7ac7 	vcvt.s32.f32	s15, s14
 8004d6e:	ee17 3a90 	vmov	r3, s15
        const float fs = f * (float)scale;
 8004d72:	edd2 7a20 	vldr	s15, [r2, #128]	; 0x80
 8004d76:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 * @return The absolute (non-negative) value of d.
 */
template <typename T>
T abs(T d)
{
    return (d < 0) ? -d : d;
 8004d7a:	2b00      	cmp	r3, #0
 8004d7c:	ee67 7a86 	vmul.f32	s15, s15, s12
 8004d80:	bfb8      	it	lt
 8004d82:	425b      	neglt	r3, r3
        if (fs >= 0)
 8004d84:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004d88:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
        labelInterval = abs(interval);
 8004d8c:	f8c2 30c4 	str.w	r3, [r2, #196]	; 0xc4
 8004d90:	db3f      	blt.n	8004e12 <_ZN15ScreenGraphView11setupScreenEv+0xd6>
            return (int)(fs + 0.5f);
 8004d92:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004d96:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004d9a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004d9e:	ee17 3a90 	vmov	r3, s15
        const float fs = f * (float)scale;
 8004da2:	edd2 7a00 	vldr	s15, [r2]
 8004da6:	ed9f 7a30 	vldr	s14, [pc, #192]	; 8004e68 <_ZN15ScreenGraphView11setupScreenEv+0x12c>
 8004daa:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004dae:	2b00      	cmp	r3, #0
 8004db0:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004db4:	bfb8      	it	lt
 8004db6:	425b      	neglt	r3, r3
        if (fs >= 0)
 8004db8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004dbc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
        gridInterval = abs(interval);
 8004dc0:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
 8004dc4:	db39      	blt.n	8004e3a <_ZN15ScreenGraphView11setupScreenEv+0xfe>
            return (int)(fs + 0.5f);
 8004dc6:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004dca:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004dce:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004dd2:	ee17 3a90 	vmov	r3, s15
 8004dd6:	2b00      	cmp	r3, #0
 8004dd8:	bfb8      	it	lt
 8004dda:	425b      	neglt	r3, r3
     dynamicGraph1.invalidate();
 8004ddc:	f604 500c 	addw	r0, r4, #3340	; 0xd0c
 8004de0:	6053      	str	r3, [r2, #4]
}
 8004de2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
     dynamicGraph1.invalidate();
 8004de6:	f00c bbe8 	b.w	80115ba <_ZNK8touchgfx8Drawable10invalidateEv>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8004dea:	eefd 6ac7 	vcvt.s32.f32	s13, s14
 8004dee:	eef8 7ae6 	vcvt.f32.s32	s15, s13
 8004df2:	ee16 3a90 	vmov	r3, s13
 8004df6:	ee37 7a67 	vsub.f32	s14, s14, s15
 8004dfa:	eef7 7a08 	vmov.f32	s15, #120	; 0x3fc00000  1.5
 8004dfe:	ee37 7a27 	vadd.f32	s14, s14, s15
 8004e02:	3b01      	subs	r3, #1
 8004e04:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 8004e08:	ee17 1a10 	vmov	r1, s14
 8004e0c:	4419      	add	r1, r3
 8004e0e:	460b      	mov	r3, r1
 8004e10:	e7af      	b.n	8004d72 <_ZN15ScreenGraphView11setupScreenEv+0x36>
 8004e12:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8004e16:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8004e1a:	ee17 3a10 	vmov	r3, s14
 8004e1e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8004e22:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8004e26:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8004e2a:	3b01      	subs	r3, #1
 8004e2c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004e30:	ee17 1a90 	vmov	r1, s15
 8004e34:	4419      	add	r1, r3
 8004e36:	460b      	mov	r3, r1
 8004e38:	e7b3      	b.n	8004da2 <_ZN15ScreenGraphView11setupScreenEv+0x66>
 8004e3a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8004e3e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8004e42:	ee17 3a10 	vmov	r3, s14
 8004e46:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8004e4a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8004e4e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8004e52:	3b01      	subs	r3, #1
 8004e54:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004e58:	ee17 1a90 	vmov	r1, s15
 8004e5c:	4419      	add	r1, r3
 8004e5e:	460b      	mov	r3, r1
 8004e60:	e7b9      	b.n	8004dd6 <_ZN15ScreenGraphView11setupScreenEv+0x9a>
 8004e62:	bf00      	nop
 8004e64:	3dcccccd 	.word	0x3dcccccd
 8004e68:	3d4ccccd 	.word	0x3d4ccccd

08004e6c <_ZN15ScreenGraphView21DisplayLastAndMaxVlt2Ev>:
void ScreenGraphView::DisplayLastAndMaxVlt2(){
 8004e6c:	b537      	push	{r0, r1, r2, r4, r5, lr}
	Unicode::snprintfFloat(txtLastValueBuffer,TXTLASTVALUE_SIZE,"%.3f",ladowarka.BatteryVoltage);
 8004e6e:	4d11      	ldr	r5, [pc, #68]	; (8004eb4 <_ZN15ScreenGraphView21DisplayLastAndMaxVlt2Ev+0x48>)
 8004e70:	4a11      	ldr	r2, [pc, #68]	; (8004eb8 <_ZN15ScreenGraphView21DisplayLastAndMaxVlt2Ev+0x4c>)
 8004e72:	682b      	ldr	r3, [r5, #0]
 8004e74:	9301      	str	r3, [sp, #4]
void ScreenGraphView::DisplayLastAndMaxVlt2(){
 8004e76:	4604      	mov	r4, r0
 8004e78:	ab01      	add	r3, sp, #4
 8004e7a:	2108      	movs	r1, #8
 8004e7c:	f500 5092 	add.w	r0, r0, #4672	; 0x1240
 8004e80:	f00e fd7e 	bl	8013980 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	Unicode::snprintfFloat(txtMaxValueBuffer,TXTMAXVALUE_SIZE,"%.3f",ladowarka.MaxBatteryVoltage);
 8004e84:	686b      	ldr	r3, [r5, #4]
 8004e86:	4a0c      	ldr	r2, [pc, #48]	; (8004eb8 <_ZN15ScreenGraphView21DisplayLastAndMaxVlt2Ev+0x4c>)
 8004e88:	9301      	str	r3, [sp, #4]
 8004e8a:	f504 5092 	add.w	r0, r4, #4672	; 0x1240
 8004e8e:	ab01      	add	r3, sp, #4
 8004e90:	2108      	movs	r1, #8
 8004e92:	3010      	adds	r0, #16
 8004e94:	f00e fd74 	bl	8013980 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	txtMaxValue.invalidate();
 8004e98:	f504 508d 	add.w	r0, r4, #4512	; 0x11a0
 8004e9c:	3008      	adds	r0, #8
 8004e9e:	f00c fb8c 	bl	80115ba <_ZNK8touchgfx8Drawable10invalidateEv>
	txtLastValue.invalidate();
 8004ea2:	f504 508a 	add.w	r0, r4, #4416	; 0x1140
 8004ea6:	301c      	adds	r0, #28
}
 8004ea8:	b003      	add	sp, #12
 8004eaa:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
	txtLastValue.invalidate();
 8004eae:	f00c bb84 	b.w	80115ba <_ZNK8touchgfx8Drawable10invalidateEv>
 8004eb2:	bf00      	nop
 8004eb4:	200039d0 	.word	0x200039d0
 8004eb8:	08022ae7 	.word	0x08022ae7

08004ebc <_ZN15ScreenGraphViewC1Ev>:
ScreenGraphView::ScreenGraphView()
 8004ebc:	b510      	push	{r4, lr}
 8004ebe:	4604      	mov	r4, r0
 8004ec0:	f7fe ff7e 	bl	8003dc0 <_ZN19ScreenGraphViewBaseC1Ev>
 8004ec4:	4b01      	ldr	r3, [pc, #4]	; (8004ecc <_ZN15ScreenGraphViewC1Ev+0x10>)
 8004ec6:	6023      	str	r3, [r4, #0]
}
 8004ec8:	4620      	mov	r0, r4
 8004eca:	bd10      	pop	{r4, pc}
 8004ecc:	08022b94 	.word	0x08022b94

08004ed0 <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 8004ed0:	20f0      	movs	r0, #240	; 0xf0
 8004ed2:	4770      	bx	lr

08004ed4 <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 8004ed4:	f44f 70a0 	mov.w	r0, #320	; 0x140
 8004ed8:	4770      	bx	lr

08004eda <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 8004eda:	2029      	movs	r0, #41	; 0x29
 8004edc:	f7fc bd12 	b.w	8001904 <LCD_IO_WriteReg>

08004ee0 <ili9341_DisplayOff>:
 8004ee0:	2028      	movs	r0, #40	; 0x28
 8004ee2:	f7fc bd0f 	b.w	8001904 <LCD_IO_WriteReg>

08004ee6 <ili9341_Init>:
{
 8004ee6:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8004ee8:	f7fc fce0 	bl	80018ac <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 8004eec:	20ca      	movs	r0, #202	; 0xca
 8004eee:	f7fc fd09 	bl	8001904 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004ef2:	20c3      	movs	r0, #195	; 0xc3
 8004ef4:	f7fc fcea 	bl	80018cc <LCD_IO_WriteData>
 8004ef8:	2008      	movs	r0, #8
 8004efa:	f7fc fce7 	bl	80018cc <LCD_IO_WriteData>
 8004efe:	2050      	movs	r0, #80	; 0x50
 8004f00:	f7fc fce4 	bl	80018cc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004f04:	20cf      	movs	r0, #207	; 0xcf
 8004f06:	f7fc fcfd 	bl	8001904 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004f0a:	2000      	movs	r0, #0
 8004f0c:	f7fc fcde 	bl	80018cc <LCD_IO_WriteData>
 8004f10:	20c1      	movs	r0, #193	; 0xc1
 8004f12:	f7fc fcdb 	bl	80018cc <LCD_IO_WriteData>
 8004f16:	2030      	movs	r0, #48	; 0x30
 8004f18:	f7fc fcd8 	bl	80018cc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004f1c:	20ed      	movs	r0, #237	; 0xed
 8004f1e:	f7fc fcf1 	bl	8001904 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004f22:	2064      	movs	r0, #100	; 0x64
 8004f24:	f7fc fcd2 	bl	80018cc <LCD_IO_WriteData>
 8004f28:	2003      	movs	r0, #3
 8004f2a:	f7fc fccf 	bl	80018cc <LCD_IO_WriteData>
 8004f2e:	2012      	movs	r0, #18
 8004f30:	f7fc fccc 	bl	80018cc <LCD_IO_WriteData>
 8004f34:	2081      	movs	r0, #129	; 0x81
 8004f36:	f7fc fcc9 	bl	80018cc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004f3a:	20e8      	movs	r0, #232	; 0xe8
 8004f3c:	f7fc fce2 	bl	8001904 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004f40:	2085      	movs	r0, #133	; 0x85
 8004f42:	f7fc fcc3 	bl	80018cc <LCD_IO_WriteData>
 8004f46:	2000      	movs	r0, #0
 8004f48:	f7fc fcc0 	bl	80018cc <LCD_IO_WriteData>
 8004f4c:	2078      	movs	r0, #120	; 0x78
 8004f4e:	f7fc fcbd 	bl	80018cc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004f52:	20cb      	movs	r0, #203	; 0xcb
 8004f54:	f7fc fcd6 	bl	8001904 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004f58:	2039      	movs	r0, #57	; 0x39
 8004f5a:	f7fc fcb7 	bl	80018cc <LCD_IO_WriteData>
 8004f5e:	202c      	movs	r0, #44	; 0x2c
 8004f60:	f7fc fcb4 	bl	80018cc <LCD_IO_WriteData>
 8004f64:	2000      	movs	r0, #0
 8004f66:	f7fc fcb1 	bl	80018cc <LCD_IO_WriteData>
 8004f6a:	2034      	movs	r0, #52	; 0x34
 8004f6c:	f7fc fcae 	bl	80018cc <LCD_IO_WriteData>
 8004f70:	2002      	movs	r0, #2
 8004f72:	f7fc fcab 	bl	80018cc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004f76:	20f7      	movs	r0, #247	; 0xf7
 8004f78:	f7fc fcc4 	bl	8001904 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004f7c:	2020      	movs	r0, #32
 8004f7e:	f7fc fca5 	bl	80018cc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004f82:	20ea      	movs	r0, #234	; 0xea
 8004f84:	f7fc fcbe 	bl	8001904 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004f88:	2000      	movs	r0, #0
 8004f8a:	f7fc fc9f 	bl	80018cc <LCD_IO_WriteData>
 8004f8e:	2000      	movs	r0, #0
 8004f90:	f7fc fc9c 	bl	80018cc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004f94:	20b1      	movs	r0, #177	; 0xb1
 8004f96:	f7fc fcb5 	bl	8001904 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004f9a:	2000      	movs	r0, #0
 8004f9c:	f7fc fc96 	bl	80018cc <LCD_IO_WriteData>
 8004fa0:	201b      	movs	r0, #27
 8004fa2:	f7fc fc93 	bl	80018cc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004fa6:	20b6      	movs	r0, #182	; 0xb6
 8004fa8:	f7fc fcac 	bl	8001904 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004fac:	200a      	movs	r0, #10
 8004fae:	f7fc fc8d 	bl	80018cc <LCD_IO_WriteData>
 8004fb2:	20a2      	movs	r0, #162	; 0xa2
 8004fb4:	f7fc fc8a 	bl	80018cc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004fb8:	20c0      	movs	r0, #192	; 0xc0
 8004fba:	f7fc fca3 	bl	8001904 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004fbe:	2010      	movs	r0, #16
 8004fc0:	f7fc fc84 	bl	80018cc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004fc4:	20c1      	movs	r0, #193	; 0xc1
 8004fc6:	f7fc fc9d 	bl	8001904 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004fca:	2010      	movs	r0, #16
 8004fcc:	f7fc fc7e 	bl	80018cc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004fd0:	20c5      	movs	r0, #197	; 0xc5
 8004fd2:	f7fc fc97 	bl	8001904 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004fd6:	2045      	movs	r0, #69	; 0x45
 8004fd8:	f7fc fc78 	bl	80018cc <LCD_IO_WriteData>
 8004fdc:	2015      	movs	r0, #21
 8004fde:	f7fc fc75 	bl	80018cc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004fe2:	20c7      	movs	r0, #199	; 0xc7
 8004fe4:	f7fc fc8e 	bl	8001904 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004fe8:	2090      	movs	r0, #144	; 0x90
 8004fea:	f7fc fc6f 	bl	80018cc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004fee:	2036      	movs	r0, #54	; 0x36
 8004ff0:	f7fc fc88 	bl	8001904 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004ff4:	20c8      	movs	r0, #200	; 0xc8
 8004ff6:	f7fc fc69 	bl	80018cc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004ffa:	20f2      	movs	r0, #242	; 0xf2
 8004ffc:	f7fc fc82 	bl	8001904 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005000:	2000      	movs	r0, #0
 8005002:	f7fc fc63 	bl	80018cc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005006:	20b0      	movs	r0, #176	; 0xb0
 8005008:	f7fc fc7c 	bl	8001904 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800500c:	20c2      	movs	r0, #194	; 0xc2
 800500e:	f7fc fc5d 	bl	80018cc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005012:	20b6      	movs	r0, #182	; 0xb6
 8005014:	f7fc fc76 	bl	8001904 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005018:	200a      	movs	r0, #10
 800501a:	f7fc fc57 	bl	80018cc <LCD_IO_WriteData>
 800501e:	20a7      	movs	r0, #167	; 0xa7
 8005020:	f7fc fc54 	bl	80018cc <LCD_IO_WriteData>
 8005024:	2027      	movs	r0, #39	; 0x27
 8005026:	f7fc fc51 	bl	80018cc <LCD_IO_WriteData>
 800502a:	2004      	movs	r0, #4
 800502c:	f7fc fc4e 	bl	80018cc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005030:	202a      	movs	r0, #42	; 0x2a
 8005032:	f7fc fc67 	bl	8001904 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005036:	2000      	movs	r0, #0
 8005038:	f7fc fc48 	bl	80018cc <LCD_IO_WriteData>
 800503c:	2000      	movs	r0, #0
 800503e:	f7fc fc45 	bl	80018cc <LCD_IO_WriteData>
 8005042:	2000      	movs	r0, #0
 8005044:	f7fc fc42 	bl	80018cc <LCD_IO_WriteData>
 8005048:	20ef      	movs	r0, #239	; 0xef
 800504a:	f7fc fc3f 	bl	80018cc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800504e:	202b      	movs	r0, #43	; 0x2b
 8005050:	f7fc fc58 	bl	8001904 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005054:	2000      	movs	r0, #0
 8005056:	f7fc fc39 	bl	80018cc <LCD_IO_WriteData>
 800505a:	2000      	movs	r0, #0
 800505c:	f7fc fc36 	bl	80018cc <LCD_IO_WriteData>
 8005060:	2001      	movs	r0, #1
 8005062:	f7fc fc33 	bl	80018cc <LCD_IO_WriteData>
 8005066:	203f      	movs	r0, #63	; 0x3f
 8005068:	f7fc fc30 	bl	80018cc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800506c:	20f6      	movs	r0, #246	; 0xf6
 800506e:	f7fc fc49 	bl	8001904 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005072:	2001      	movs	r0, #1
 8005074:	f7fc fc2a 	bl	80018cc <LCD_IO_WriteData>
 8005078:	2000      	movs	r0, #0
 800507a:	f7fc fc27 	bl	80018cc <LCD_IO_WriteData>
 800507e:	2006      	movs	r0, #6
 8005080:	f7fc fc24 	bl	80018cc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005084:	202c      	movs	r0, #44	; 0x2c
 8005086:	f7fc fc3d 	bl	8001904 <LCD_IO_WriteReg>
  LCD_Delay(200);
 800508a:	20c8      	movs	r0, #200	; 0xc8
 800508c:	f7fc fc88 	bl	80019a0 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8005090:	2026      	movs	r0, #38	; 0x26
 8005092:	f7fc fc37 	bl	8001904 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005096:	2001      	movs	r0, #1
 8005098:	f7fc fc18 	bl	80018cc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800509c:	20e0      	movs	r0, #224	; 0xe0
 800509e:	f7fc fc31 	bl	8001904 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80050a2:	200f      	movs	r0, #15
 80050a4:	f7fc fc12 	bl	80018cc <LCD_IO_WriteData>
 80050a8:	2029      	movs	r0, #41	; 0x29
 80050aa:	f7fc fc0f 	bl	80018cc <LCD_IO_WriteData>
 80050ae:	2024      	movs	r0, #36	; 0x24
 80050b0:	f7fc fc0c 	bl	80018cc <LCD_IO_WriteData>
 80050b4:	200c      	movs	r0, #12
 80050b6:	f7fc fc09 	bl	80018cc <LCD_IO_WriteData>
 80050ba:	200e      	movs	r0, #14
 80050bc:	f7fc fc06 	bl	80018cc <LCD_IO_WriteData>
 80050c0:	2009      	movs	r0, #9
 80050c2:	f7fc fc03 	bl	80018cc <LCD_IO_WriteData>
 80050c6:	204e      	movs	r0, #78	; 0x4e
 80050c8:	f7fc fc00 	bl	80018cc <LCD_IO_WriteData>
 80050cc:	2078      	movs	r0, #120	; 0x78
 80050ce:	f7fc fbfd 	bl	80018cc <LCD_IO_WriteData>
 80050d2:	203c      	movs	r0, #60	; 0x3c
 80050d4:	f7fc fbfa 	bl	80018cc <LCD_IO_WriteData>
 80050d8:	2009      	movs	r0, #9
 80050da:	f7fc fbf7 	bl	80018cc <LCD_IO_WriteData>
 80050de:	2013      	movs	r0, #19
 80050e0:	f7fc fbf4 	bl	80018cc <LCD_IO_WriteData>
 80050e4:	2005      	movs	r0, #5
 80050e6:	f7fc fbf1 	bl	80018cc <LCD_IO_WriteData>
 80050ea:	2017      	movs	r0, #23
 80050ec:	f7fc fbee 	bl	80018cc <LCD_IO_WriteData>
 80050f0:	2011      	movs	r0, #17
 80050f2:	f7fc fbeb 	bl	80018cc <LCD_IO_WriteData>
 80050f6:	2000      	movs	r0, #0
 80050f8:	f7fc fbe8 	bl	80018cc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80050fc:	20e1      	movs	r0, #225	; 0xe1
 80050fe:	f7fc fc01 	bl	8001904 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005102:	2000      	movs	r0, #0
 8005104:	f7fc fbe2 	bl	80018cc <LCD_IO_WriteData>
 8005108:	2016      	movs	r0, #22
 800510a:	f7fc fbdf 	bl	80018cc <LCD_IO_WriteData>
 800510e:	201b      	movs	r0, #27
 8005110:	f7fc fbdc 	bl	80018cc <LCD_IO_WriteData>
 8005114:	2004      	movs	r0, #4
 8005116:	f7fc fbd9 	bl	80018cc <LCD_IO_WriteData>
 800511a:	2011      	movs	r0, #17
 800511c:	f7fc fbd6 	bl	80018cc <LCD_IO_WriteData>
 8005120:	2007      	movs	r0, #7
 8005122:	f7fc fbd3 	bl	80018cc <LCD_IO_WriteData>
 8005126:	2031      	movs	r0, #49	; 0x31
 8005128:	f7fc fbd0 	bl	80018cc <LCD_IO_WriteData>
 800512c:	2033      	movs	r0, #51	; 0x33
 800512e:	f7fc fbcd 	bl	80018cc <LCD_IO_WriteData>
 8005132:	2042      	movs	r0, #66	; 0x42
 8005134:	f7fc fbca 	bl	80018cc <LCD_IO_WriteData>
 8005138:	2005      	movs	r0, #5
 800513a:	f7fc fbc7 	bl	80018cc <LCD_IO_WriteData>
 800513e:	200c      	movs	r0, #12
 8005140:	f7fc fbc4 	bl	80018cc <LCD_IO_WriteData>
 8005144:	200a      	movs	r0, #10
 8005146:	f7fc fbc1 	bl	80018cc <LCD_IO_WriteData>
 800514a:	2028      	movs	r0, #40	; 0x28
 800514c:	f7fc fbbe 	bl	80018cc <LCD_IO_WriteData>
 8005150:	202f      	movs	r0, #47	; 0x2f
 8005152:	f7fc fbbb 	bl	80018cc <LCD_IO_WriteData>
 8005156:	200f      	movs	r0, #15
 8005158:	f7fc fbb8 	bl	80018cc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800515c:	2011      	movs	r0, #17
 800515e:	f7fc fbd1 	bl	8001904 <LCD_IO_WriteReg>
  LCD_Delay(200);
 8005162:	20c8      	movs	r0, #200	; 0xc8
 8005164:	f7fc fc1c 	bl	80019a0 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8005168:	2029      	movs	r0, #41	; 0x29
 800516a:	f7fc fbcb 	bl	8001904 <LCD_IO_WriteReg>
}
 800516e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 8005172:	202c      	movs	r0, #44	; 0x2c
 8005174:	f7fc bbc6 	b.w	8001904 <LCD_IO_WriteReg>

08005178 <ili9341_ReadID>:
{
 8005178:	b508      	push	{r3, lr}
  LCD_IO_Init();
 800517a:	f7fc fb97 	bl	80018ac <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 800517e:	2103      	movs	r1, #3
 8005180:	20d3      	movs	r0, #211	; 0xd3
 8005182:	f7fc fbdb 	bl	800193c <LCD_IO_ReadData>
}
 8005186:	b280      	uxth	r0, r0
 8005188:	bd08      	pop	{r3, pc}

0800518a <stmpe811_Reset>:
  * @brief  Reset the stmpe811 by Software.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval None
  */
void stmpe811_Reset(uint16_t DeviceAddr)
{
 800518a:	b510      	push	{r4, lr}
  /* Power Down the stmpe811 */  
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 800518c:	b2c4      	uxtb	r4, r0
 800518e:	2202      	movs	r2, #2
 8005190:	2103      	movs	r1, #3
 8005192:	4620      	mov	r0, r4
 8005194:	f7fc fb40 	bl	8001818 <IOE_Write>

  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(10); 
 8005198:	200a      	movs	r0, #10
 800519a:	f7fc fb85 	bl	80018a8 <IOE_Delay>
  
  /* Power On the Codec after the power off => all registers are reinitialized */
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 800519e:	4620      	mov	r0, r4
 80051a0:	2200      	movs	r2, #0
 80051a2:	2103      	movs	r1, #3
 80051a4:	f7fc fb38 	bl	8001818 <IOE_Write>
  
  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(2); 
}
 80051a8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 80051ac:	2002      	movs	r0, #2
 80051ae:	f7fc bb7b 	b.w	80018a8 <IOE_Delay>

080051b2 <stmpe811_ReadID>:
  * @brief  Read the stmpe811 IO Expander device ID.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval The Device ID (two bytes).
  */
uint16_t stmpe811_ReadID(uint16_t DeviceAddr)
{
 80051b2:	b538      	push	{r3, r4, r5, lr}
 80051b4:	4604      	mov	r4, r0
  /* Initialize IO BUS layer */
  IOE_Init(); 
  
  /* Return the device ID value */
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 80051b6:	b2e4      	uxtb	r4, r4
  IOE_Init(); 
 80051b8:	f7fc fb2c 	bl	8001814 <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 80051bc:	2100      	movs	r1, #0
 80051be:	4620      	mov	r0, r4
 80051c0:	f7fc fb42 	bl	8001848 <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 80051c4:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 80051c6:	4605      	mov	r5, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 80051c8:	4620      	mov	r0, r4
 80051ca:	f7fc fb3d 	bl	8001848 <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 80051ce:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
}
 80051d2:	b280      	uxth	r0, r0
 80051d4:	bd38      	pop	{r3, r4, r5, pc}

080051d6 <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 80051d6:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 80051d8:	b2c4      	uxtb	r4, r0
 80051da:	2140      	movs	r1, #64	; 0x40
 80051dc:	4620      	mov	r0, r4
 80051de:	f7fc fb33 	bl	8001848 <IOE_Read>
  
  if(state > 0)
 80051e2:	0603      	lsls	r3, r0, #24
 80051e4:	d507      	bpl.n	80051f6 <stmpe811_TS_DetectTouch+0x20>
  {
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 80051e6:	214c      	movs	r1, #76	; 0x4c
 80051e8:	4620      	mov	r0, r4
 80051ea:	f7fc fb2d 	bl	8001848 <IOE_Read>
    {
      ret = 1;
 80051ee:	3800      	subs	r0, #0
 80051f0:	bf18      	it	ne
 80051f2:	2001      	movne	r0, #1
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
  }
  
  return ret;
}
 80051f4:	bd10      	pop	{r4, pc}
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 80051f6:	2201      	movs	r2, #1
 80051f8:	214b      	movs	r1, #75	; 0x4b
 80051fa:	4620      	mov	r0, r4
 80051fc:	f7fc fb0c 	bl	8001818 <IOE_Write>
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8005200:	4620      	mov	r0, r4
 8005202:	2200      	movs	r2, #0
 8005204:	214b      	movs	r1, #75	; 0x4b
 8005206:	f7fc fb07 	bl	8001818 <IOE_Write>
  uint8_t ret = 0;
 800520a:	2000      	movs	r0, #0
 800520c:	e7f2      	b.n	80051f4 <stmpe811_TS_DetectTouch+0x1e>

0800520e <stmpe811_TS_GetXY>:
  * @param  X: Pointer to X position value
  * @param  Y: Pointer to Y position value   
  * @retval None.
  */
void stmpe811_TS_GetXY(uint16_t DeviceAddr, uint16_t *X, uint16_t *Y)
{
 800520e:	b573      	push	{r0, r1, r4, r5, r6, lr}
  uint8_t  dataXYZ[4];
  uint32_t uldataXYZ;
  
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8005210:	2304      	movs	r3, #4
 8005212:	b2c4      	uxtb	r4, r0
{
 8005214:	460e      	mov	r6, r1
 8005216:	4615      	mov	r5, r2
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8005218:	21d7      	movs	r1, #215	; 0xd7
 800521a:	eb0d 0203 	add.w	r2, sp, r3
 800521e:	4620      	mov	r0, r4
 8005220:	f7fc fb2c 	bl	800187c <IOE_ReadMultiple>
  
  /* Calculate positions values */
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 8005224:	9b01      	ldr	r3, [sp, #4]
 8005226:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8005228:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 800522a:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 800522e:	8032      	strh	r2, [r6, #0]
  
  /* Reset FIFO */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8005230:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8005232:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8005234:	2201      	movs	r2, #1
 8005236:	214b      	movs	r1, #75	; 0x4b
 8005238:	f7fc faee 	bl	8001818 <IOE_Write>
  /* Enable the FIFO again */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 800523c:	2200      	movs	r2, #0
 800523e:	214b      	movs	r1, #75	; 0x4b
 8005240:	4620      	mov	r0, r4
 8005242:	f7fc fae9 	bl	8001818 <IOE_Write>
}
 8005246:	b002      	add	sp, #8
 8005248:	bd70      	pop	{r4, r5, r6, pc}
	...

0800524c <stmpe811_Init>:
{
 800524c:	b510      	push	{r4, lr}
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 800524e:	4b0a      	ldr	r3, [pc, #40]	; (8005278 <stmpe811_Init+0x2c>)
 8005250:	781a      	ldrb	r2, [r3, #0]
 8005252:	4290      	cmp	r0, r2
{
 8005254:	4604      	mov	r4, r0
    if(stmpe811[idx] == DeviceAddr)
 8005256:	d00d      	beq.n	8005274 <stmpe811_Init+0x28>
 8005258:	7859      	ldrb	r1, [r3, #1]
 800525a:	4288      	cmp	r0, r1
 800525c:	d00a      	beq.n	8005274 <stmpe811_Init+0x28>
 800525e:	b10a      	cbz	r2, 8005264 <stmpe811_Init+0x18>
 8005260:	b941      	cbnz	r1, 8005274 <stmpe811_Init+0x28>
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
 8005262:	2201      	movs	r2, #1
      stmpe811[empty] = DeviceAddr;
 8005264:	549c      	strb	r4, [r3, r2]
      IOE_Init(); 
 8005266:	f7fc fad5 	bl	8001814 <IOE_Init>
      stmpe811_Reset(DeviceAddr);
 800526a:	4620      	mov	r0, r4
}
 800526c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      stmpe811_Reset(DeviceAddr);
 8005270:	f7ff bf8b 	b.w	800518a <stmpe811_Reset>
}
 8005274:	bd10      	pop	{r4, pc}
 8005276:	bf00      	nop
 8005278:	2000453c 	.word	0x2000453c

0800527c <stmpe811_EnableGlobalIT>:
{
 800527c:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 800527e:	b2c4      	uxtb	r4, r0
 8005280:	2109      	movs	r1, #9
 8005282:	4620      	mov	r0, r4
 8005284:	f7fc fae0 	bl	8001848 <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 8005288:	f040 0001 	orr.w	r0, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 800528c:	b2c2      	uxtb	r2, r0
 800528e:	2109      	movs	r1, #9
 8005290:	4620      	mov	r0, r4
}
 8005292:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8005296:	f7fc babf 	b.w	8001818 <IOE_Write>

0800529a <stmpe811_DisableGlobalIT>:
{
 800529a:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 800529c:	b2c4      	uxtb	r4, r0
 800529e:	2109      	movs	r1, #9
 80052a0:	4620      	mov	r0, r4
 80052a2:	f7fc fad1 	bl	8001848 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 80052a6:	2109      	movs	r1, #9
 80052a8:	f000 02fe 	and.w	r2, r0, #254	; 0xfe
 80052ac:	4620      	mov	r0, r4
}
 80052ae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 80052b2:	f7fc bab1 	b.w	8001818 <IOE_Write>

080052b6 <stmpe811_EnableITSource>:
{
 80052b6:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 80052b8:	b2c4      	uxtb	r4, r0
{
 80052ba:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 80052bc:	4620      	mov	r0, r4
 80052be:	210a      	movs	r1, #10
 80052c0:	f7fc fac2 	bl	8001848 <IOE_Read>
  tmp |= Source; 
 80052c4:	4328      	orrs	r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 80052c6:	b2c2      	uxtb	r2, r0
 80052c8:	210a      	movs	r1, #10
 80052ca:	4620      	mov	r0, r4
}
 80052cc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 80052d0:	f7fc baa2 	b.w	8001818 <IOE_Write>

080052d4 <stmpe811_TS_EnableIT>:
{
 80052d4:	b507      	push	{r0, r1, r2, lr}
 80052d6:	9001      	str	r0, [sp, #4]
  IOE_ITConfig();
 80052d8:	f7fc fa9d 	bl	8001816 <IOE_ITConfig>
  stmpe811_EnableITSource(DeviceAddr, STMPE811_TS_IT); 
 80052dc:	9801      	ldr	r0, [sp, #4]
 80052de:	211f      	movs	r1, #31
 80052e0:	f7ff ffe9 	bl	80052b6 <stmpe811_EnableITSource>
  stmpe811_EnableGlobalIT(DeviceAddr);
 80052e4:	9801      	ldr	r0, [sp, #4]
}
 80052e6:	b003      	add	sp, #12
 80052e8:	f85d eb04 	ldr.w	lr, [sp], #4
  stmpe811_EnableGlobalIT(DeviceAddr);
 80052ec:	f7ff bfc6 	b.w	800527c <stmpe811_EnableGlobalIT>

080052f0 <stmpe811_DisableITSource>:
{
 80052f0:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 80052f2:	b2c4      	uxtb	r4, r0
{
 80052f4:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 80052f6:	4620      	mov	r0, r4
 80052f8:	210a      	movs	r1, #10
 80052fa:	f7fc faa5 	bl	8001848 <IOE_Read>
  tmp &= ~Source; 
 80052fe:	ea20 0005 	bic.w	r0, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8005302:	b2c2      	uxtb	r2, r0
 8005304:	210a      	movs	r1, #10
 8005306:	4620      	mov	r0, r4
}
 8005308:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 800530c:	f7fc ba84 	b.w	8001818 <IOE_Write>

08005310 <stmpe811_TS_DisableIT>:
{
 8005310:	b510      	push	{r4, lr}
 8005312:	4604      	mov	r4, r0
  stmpe811_DisableGlobalIT(DeviceAddr);
 8005314:	f7ff ffc1 	bl	800529a <stmpe811_DisableGlobalIT>
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 8005318:	4620      	mov	r0, r4
 800531a:	211f      	movs	r1, #31
}
 800531c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 8005320:	f7ff bfe6 	b.w	80052f0 <stmpe811_DisableITSource>

08005324 <stmpe811_ReadGITStatus>:
{
 8005324:	b510      	push	{r4, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8005326:	b2c0      	uxtb	r0, r0
{
 8005328:	460c      	mov	r4, r1
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 800532a:	210b      	movs	r1, #11
 800532c:	f7fc fa8c 	bl	8001848 <IOE_Read>
}
 8005330:	4020      	ands	r0, r4
 8005332:	bd10      	pop	{r4, pc}

08005334 <stmpe811_TS_ITStatus>:
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
 8005334:	211f      	movs	r1, #31
 8005336:	f7ff bff5 	b.w	8005324 <stmpe811_ReadGITStatus>

0800533a <stmpe811_ClearGlobalIT>:
{
 800533a:	460a      	mov	r2, r1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 800533c:	b2c0      	uxtb	r0, r0
 800533e:	210b      	movs	r1, #11
 8005340:	f7fc ba6a 	b.w	8001818 <IOE_Write>

08005344 <stmpe811_TS_ClearIT>:
  stmpe811_ClearGlobalIT(DeviceAddr, STMPE811_TS_IT);
 8005344:	211f      	movs	r1, #31
 8005346:	f7ff bff8 	b.w	800533a <stmpe811_ClearGlobalIT>

0800534a <stmpe811_IO_EnableAF>:
{
 800534a:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 800534c:	b2c4      	uxtb	r4, r0
{
 800534e:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8005350:	4620      	mov	r0, r4
 8005352:	2117      	movs	r1, #23
 8005354:	f7fc fa78 	bl	8001848 <IOE_Read>
  tmp &= ~(uint8_t)IO_Pin;   
 8005358:	ea20 0005 	bic.w	r0, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 800535c:	b2c2      	uxtb	r2, r0
 800535e:	2117      	movs	r1, #23
 8005360:	4620      	mov	r0, r4
}
 8005362:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8005366:	f7fc ba57 	b.w	8001818 <IOE_Write>

0800536a <stmpe811_TS_Start>:
{
 800536a:	b570      	push	{r4, r5, r6, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 800536c:	b2c4      	uxtb	r4, r0
{
 800536e:	4606      	mov	r6, r0
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8005370:	2104      	movs	r1, #4
 8005372:	4620      	mov	r0, r4
 8005374:	f7fc fa68 	bl	8001848 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8005378:	2104      	movs	r1, #4
 800537a:	f000 02fb 	and.w	r2, r0, #251	; 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 800537e:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8005380:	4620      	mov	r0, r4
 8005382:	f7fc fa49 	bl	8001818 <IOE_Write>
  stmpe811_IO_EnableAF(DeviceAddr, STMPE811_TOUCH_IO_ALL);
 8005386:	4630      	mov	r0, r6
 8005388:	21f0      	movs	r1, #240	; 0xf0
 800538a:	f7ff ffde 	bl	800534a <stmpe811_IO_EnableAF>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 800538e:	f005 02f8 	and.w	r2, r5, #248	; 0xf8
 8005392:	4620      	mov	r0, r4
 8005394:	2104      	movs	r1, #4
 8005396:	f7fc fa3f 	bl	8001818 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 800539a:	2249      	movs	r2, #73	; 0x49
 800539c:	2120      	movs	r1, #32
 800539e:	4620      	mov	r0, r4
 80053a0:	f7fc fa3a 	bl	8001818 <IOE_Write>
  IOE_Delay(2); 
 80053a4:	2002      	movs	r0, #2
 80053a6:	f7fc fa7f 	bl	80018a8 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 80053aa:	4620      	mov	r0, r4
 80053ac:	2201      	movs	r2, #1
 80053ae:	2121      	movs	r1, #33	; 0x21
 80053b0:	f7fc fa32 	bl	8001818 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 80053b4:	4620      	mov	r0, r4
 80053b6:	229a      	movs	r2, #154	; 0x9a
 80053b8:	2141      	movs	r1, #65	; 0x41
 80053ba:	f7fc fa2d 	bl	8001818 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 80053be:	4620      	mov	r0, r4
 80053c0:	2201      	movs	r2, #1
 80053c2:	214a      	movs	r1, #74	; 0x4a
 80053c4:	f7fc fa28 	bl	8001818 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 80053c8:	4620      	mov	r0, r4
 80053ca:	2201      	movs	r2, #1
 80053cc:	214b      	movs	r1, #75	; 0x4b
 80053ce:	f7fc fa23 	bl	8001818 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 80053d2:	4620      	mov	r0, r4
 80053d4:	2200      	movs	r2, #0
 80053d6:	214b      	movs	r1, #75	; 0x4b
 80053d8:	f7fc fa1e 	bl	8001818 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 80053dc:	4620      	mov	r0, r4
 80053de:	2201      	movs	r2, #1
 80053e0:	2156      	movs	r1, #86	; 0x56
 80053e2:	f7fc fa19 	bl	8001818 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 80053e6:	4620      	mov	r0, r4
 80053e8:	2201      	movs	r2, #1
 80053ea:	2158      	movs	r1, #88	; 0x58
 80053ec:	f7fc fa14 	bl	8001818 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 80053f0:	4620      	mov	r0, r4
 80053f2:	2201      	movs	r2, #1
 80053f4:	2140      	movs	r1, #64	; 0x40
 80053f6:	f7fc fa0f 	bl	8001818 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 80053fa:	4620      	mov	r0, r4
 80053fc:	22ff      	movs	r2, #255	; 0xff
 80053fe:	210b      	movs	r1, #11
 8005400:	f7fc fa0a 	bl	8001818 <IOE_Write>
}
 8005404:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  IOE_Delay(2); 
 8005408:	2002      	movs	r0, #2
 800540a:	f7fc ba4d 	b.w	80018a8 <IOE_Delay>
	...

08005410 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8005410:	4b05      	ldr	r3, [pc, #20]	; (8005428 <SystemInit+0x18>)
 8005412:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 8005416:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 800541a:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 800541e:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8005422:	609a      	str	r2, [r3, #8]
#endif
}
 8005424:	4770      	bx	lr
 8005426:	bf00      	nop
 8005428:	e000ed00 	.word	0xe000ed00

0800542c <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 800542c:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 800542e:	4b0b      	ldr	r3, [pc, #44]	; (800545c <HAL_Init+0x30>)
 8005430:	681a      	ldr	r2, [r3, #0]
 8005432:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005436:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8005438:	681a      	ldr	r2, [r3, #0]
 800543a:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800543e:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8005440:	681a      	ldr	r2, [r3, #0]
 8005442:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8005446:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8005448:	2003      	movs	r0, #3
 800544a:	f000 fa37 	bl	80058bc <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 800544e:	2000      	movs	r0, #0
 8005450:	f7fc fd64 	bl	8001f1c <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8005454:	f7fc fabe 	bl	80019d4 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8005458:	2000      	movs	r0, #0
 800545a:	bd08      	pop	{r3, pc}
 800545c:	40023c00 	.word	0x40023c00

08005460 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8005460:	4a03      	ldr	r2, [pc, #12]	; (8005470 <HAL_IncTick+0x10>)
 8005462:	4b04      	ldr	r3, [pc, #16]	; (8005474 <HAL_IncTick+0x14>)
 8005464:	6811      	ldr	r1, [r2, #0]
 8005466:	781b      	ldrb	r3, [r3, #0]
 8005468:	440b      	add	r3, r1
 800546a:	6013      	str	r3, [r2, #0]
}
 800546c:	4770      	bx	lr
 800546e:	bf00      	nop
 8005470:	20004540 	.word	0x20004540
 8005474:	2000007c 	.word	0x2000007c

08005478 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8005478:	4b01      	ldr	r3, [pc, #4]	; (8005480 <HAL_GetTick+0x8>)
 800547a:	6818      	ldr	r0, [r3, #0]
}
 800547c:	4770      	bx	lr
 800547e:	bf00      	nop
 8005480:	20004540 	.word	0x20004540

08005484 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8005484:	b538      	push	{r3, r4, r5, lr}
 8005486:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8005488:	f7ff fff6 	bl	8005478 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 800548c:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 800548e:	bf1c      	itt	ne
 8005490:	4b05      	ldrne	r3, [pc, #20]	; (80054a8 <HAL_Delay+0x24>)
 8005492:	781b      	ldrbne	r3, [r3, #0]
  uint32_t tickstart = HAL_GetTick();
 8005494:	4605      	mov	r5, r0
    wait += (uint32_t)(uwTickFreq);
 8005496:	bf18      	it	ne
 8005498:	18e4      	addne	r4, r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 800549a:	f7ff ffed 	bl	8005478 <HAL_GetTick>
 800549e:	1b43      	subs	r3, r0, r5
 80054a0:	42a3      	cmp	r3, r4
 80054a2:	d3fa      	bcc.n	800549a <HAL_Delay+0x16>
  {
  }
}
 80054a4:	bd38      	pop	{r3, r4, r5, pc}
 80054a6:	bf00      	nop
 80054a8:	2000007c 	.word	0x2000007c

080054ac <HAL_ADC_Init>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef* hadc)
{
 80054ac:	b538      	push	{r3, r4, r5, lr}
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;
  
  /* Check ADC handle */
  if(hadc == NULL)
 80054ae:	4604      	mov	r4, r0
 80054b0:	2800      	cmp	r0, #0
 80054b2:	f000 809b 	beq.w	80055ec <HAL_ADC_Init+0x140>
  if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
  {
    assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
  }
  
  if(hadc->State == HAL_ADC_STATE_RESET)
 80054b6:	6c05      	ldr	r5, [r0, #64]	; 0x40
 80054b8:	b925      	cbnz	r5, 80054c4 <HAL_ADC_Init+0x18>

    /* Init the low level hardware */
    hadc->MspInitCallback(hadc);
#else
    /* Init the low level hardware */
    HAL_ADC_MspInit(hadc);
 80054ba:	f7fc faab 	bl	8001a14 <HAL_ADC_MspInit>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */

    /* Initialize ADC error code */
    ADC_CLEAR_ERRORCODE(hadc);
 80054be:	6465      	str	r5, [r4, #68]	; 0x44
    
    /* Allocate lock resource and initialize it */
    hadc->Lock = HAL_UNLOCKED;
 80054c0:	f884 503c 	strb.w	r5, [r4, #60]	; 0x3c
  }
  
  /* Configuration of ADC parameters if previous preliminary actions are      */ 
  /* correctly completed.                                                     */
  if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 80054c4:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80054c6:	06db      	lsls	r3, r3, #27
 80054c8:	f100 808e 	bmi.w	80055e8 <HAL_ADC_Init+0x13c>
  {
    /* Set ADC state */
    ADC_STATE_CLR_SET(hadc->State,
 80054cc:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80054ce:	f423 5388 	bic.w	r3, r3, #4352	; 0x1100
 80054d2:	f023 0302 	bic.w	r3, r3, #2
 80054d6:	f043 0302 	orr.w	r3, r3, #2
 80054da:	6423      	str	r3, [r4, #64]	; 0x40
  /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
  /* control register)                                                    */
  tmpADC_Common = ADC_COMMON_REGISTER(hadc);
  
  /* Set the ADC clock prescaler */
  tmpADC_Common->CCR &= ~(ADC_CCR_ADCPRE);
 80054dc:	4b44      	ldr	r3, [pc, #272]	; (80055f0 <HAL_ADC_Init+0x144>)
 80054de:	685a      	ldr	r2, [r3, #4]
 80054e0:	f422 3240 	bic.w	r2, r2, #196608	; 0x30000
 80054e4:	605a      	str	r2, [r3, #4]
  tmpADC_Common->CCR |=  hadc->Init.ClockPrescaler;
 80054e6:	685a      	ldr	r2, [r3, #4]
 80054e8:	6861      	ldr	r1, [r4, #4]
 80054ea:	430a      	orrs	r2, r1
 80054ec:	605a      	str	r2, [r3, #4]
  
  /* Set ADC scan mode */
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 80054ee:	6823      	ldr	r3, [r4, #0]
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 80054f0:	6921      	ldr	r1, [r4, #16]
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 80054f2:	685a      	ldr	r2, [r3, #4]
 80054f4:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 80054f8:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 80054fa:	685a      	ldr	r2, [r3, #4]
 80054fc:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8005500:	605a      	str	r2, [r3, #4]
  
  /* Set ADC resolution */
  hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 8005502:	685a      	ldr	r2, [r3, #4]
  hadc->Instance->CR1 |=  hadc->Init.Resolution;
 8005504:	68a1      	ldr	r1, [r4, #8]
  hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 8005506:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 800550a:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  hadc->Init.Resolution;
 800550c:	685a      	ldr	r2, [r3, #4]
 800550e:	430a      	orrs	r2, r1
 8005510:	605a      	str	r2, [r3, #4]
  
  /* Set ADC data alignment */
  hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 8005512:	689a      	ldr	r2, [r3, #8]
  hadc->Instance->CR2 |= hadc->Init.DataAlign;
 8005514:	68e1      	ldr	r1, [r4, #12]
  hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 8005516:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800551a:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= hadc->Init.DataAlign;
 800551c:	689a      	ldr	r2, [r3, #8]
 800551e:	430a      	orrs	r2, r1
 8005520:	609a      	str	r2, [r3, #8]
  /* Enable external trigger if trigger selection is different of software  */
  /* start.                                                                 */
  /* Note: This configuration keeps the hardware feature of parameter       */
  /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
  /*       software start.                                                  */
  if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 8005522:	4934      	ldr	r1, [pc, #208]	; (80055f4 <HAL_ADC_Init+0x148>)
 8005524:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8005526:	428a      	cmp	r2, r1
 8005528:	d052      	beq.n	80055d0 <HAL_ADC_Init+0x124>
  {
    /* Select external trigger to start conversion */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 800552a:	6899      	ldr	r1, [r3, #8]
 800552c:	f021 6170 	bic.w	r1, r1, #251658240	; 0xf000000
 8005530:	6099      	str	r1, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConv;
 8005532:	6899      	ldr	r1, [r3, #8]
 8005534:	430a      	orrs	r2, r1
 8005536:	609a      	str	r2, [r3, #8]
    
    /* Select external trigger polarity */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8005538:	689a      	ldr	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 800553a:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 800553c:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8005540:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 8005542:	689a      	ldr	r2, [r3, #8]
 8005544:	430a      	orrs	r2, r1
  }
  else
  {
    /* Reset the external trigger */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8005546:	609a      	str	r2, [r3, #8]
  }
  
  /* Enable or disable ADC continuous conversion mode */
  hadc->Instance->CR2 &= ~(ADC_CR2_CONT);
 8005548:	689a      	ldr	r2, [r3, #8]
 800554a:	f022 0202 	bic.w	r2, r2, #2
 800554e:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode);
 8005550:	689a      	ldr	r2, [r3, #8]
 8005552:	7e21      	ldrb	r1, [r4, #24]
 8005554:	ea42 0241 	orr.w	r2, r2, r1, lsl #1
 8005558:	609a      	str	r2, [r3, #8]
  
  if(hadc->Init.DiscontinuousConvMode != DISABLE)
 800555a:	f894 2020 	ldrb.w	r2, [r4, #32]
 800555e:	2a00      	cmp	r2, #0
 8005560:	d03e      	beq.n	80055e0 <HAL_ADC_Init+0x134>
  {
    assert_param(IS_ADC_REGULAR_DISC_NUMBER(hadc->Init.NbrOfDiscConversion));
  
    /* Enable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 8005562:	685a      	ldr	r2, [r3, #4]
    
    /* Set the number of channels to be converted in discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
    hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 8005564:	6a61      	ldr	r1, [r4, #36]	; 0x24
    hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 8005566:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800556a:	605a      	str	r2, [r3, #4]
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
 800556c:	685a      	ldr	r2, [r3, #4]
 800556e:	f422 4260 	bic.w	r2, r2, #57344	; 0xe000
 8005572:	605a      	str	r2, [r3, #4]
    hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 8005574:	685a      	ldr	r2, [r3, #4]
 8005576:	3901      	subs	r1, #1
 8005578:	ea42 3241 	orr.w	r2, r2, r1, lsl #13
  }
  else
  {
    /* Disable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 800557c:	605a      	str	r2, [r3, #4]
  }
  
  /* Set ADC number of conversion */
  hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 800557e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 8005580:	69e1      	ldr	r1, [r4, #28]
  hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 8005582:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 8005586:	62da      	str	r2, [r3, #44]	; 0x2c
  hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 8005588:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800558a:	3901      	subs	r1, #1
 800558c:	ea42 5201 	orr.w	r2, r2, r1, lsl #20
 8005590:	62da      	str	r2, [r3, #44]	; 0x2c
  
  /* Enable or disable ADC DMA continuous request */
  hadc->Instance->CR2 &= ~(ADC_CR2_DDS);
 8005592:	689a      	ldr	r2, [r3, #8]
 8005594:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8005598:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_DMAContReq((uint32_t)hadc->Init.DMAContinuousRequests);
 800559a:	689a      	ldr	r2, [r3, #8]
 800559c:	f894 1030 	ldrb.w	r1, [r4, #48]	; 0x30
 80055a0:	ea42 2241 	orr.w	r2, r2, r1, lsl #9
 80055a4:	609a      	str	r2, [r3, #8]
  
  /* Enable or disable ADC end of conversion selection */
  hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 80055a6:	689a      	ldr	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 80055a8:	6961      	ldr	r1, [r4, #20]
  hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 80055aa:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80055ae:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 80055b0:	689a      	ldr	r2, [r3, #8]
    ADC_CLEAR_ERRORCODE(hadc);
 80055b2:	2000      	movs	r0, #0
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 80055b4:	ea42 2281 	orr.w	r2, r2, r1, lsl #10
 80055b8:	609a      	str	r2, [r3, #8]
    ADC_CLEAR_ERRORCODE(hadc);
 80055ba:	6460      	str	r0, [r4, #68]	; 0x44
    ADC_STATE_CLR_SET(hadc->State,
 80055bc:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80055be:	f023 0303 	bic.w	r3, r3, #3
 80055c2:	f043 0301 	orr.w	r3, r3, #1
 80055c6:	6423      	str	r3, [r4, #64]	; 0x40
  __HAL_UNLOCK(hadc);
 80055c8:	2300      	movs	r3, #0
 80055ca:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
}
 80055ce:	bd38      	pop	{r3, r4, r5, pc}
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 80055d0:	689a      	ldr	r2, [r3, #8]
 80055d2:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 80055d6:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 80055d8:	689a      	ldr	r2, [r3, #8]
 80055da:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 80055de:	e7b2      	b.n	8005546 <HAL_ADC_Init+0x9a>
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 80055e0:	685a      	ldr	r2, [r3, #4]
 80055e2:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 80055e6:	e7c9      	b.n	800557c <HAL_ADC_Init+0xd0>
    tmp_hal_status = HAL_ERROR;
 80055e8:	2001      	movs	r0, #1
 80055ea:	e7ed      	b.n	80055c8 <HAL_ADC_Init+0x11c>
    return HAL_ERROR;
 80055ec:	2001      	movs	r0, #1
 80055ee:	e7ee      	b.n	80055ce <HAL_ADC_Init+0x122>
 80055f0:	40012300 	.word	0x40012300
 80055f4:	0f000001 	.word	0x0f000001

080055f8 <HAL_ADC_Start>:
{
 80055f8:	b082      	sub	sp, #8
  __IO uint32_t counter = 0U;
 80055fa:	2300      	movs	r3, #0
 80055fc:	9301      	str	r3, [sp, #4]
  __HAL_LOCK(hadc);
 80055fe:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 8005602:	2b01      	cmp	r3, #1
 8005604:	d060      	beq.n	80056c8 <HAL_ADC_Start+0xd0>
 8005606:	2301      	movs	r3, #1
 8005608:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  if((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 800560c:	6803      	ldr	r3, [r0, #0]
 800560e:	689a      	ldr	r2, [r3, #8]
 8005610:	07d2      	lsls	r2, r2, #31
 8005612:	d505      	bpl.n	8005620 <HAL_ADC_Start+0x28>
  if(HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_ADON))
 8005614:	689a      	ldr	r2, [r3, #8]
 8005616:	07d1      	lsls	r1, r2, #31
 8005618:	d414      	bmi.n	8005644 <HAL_ADC_Start+0x4c>
  return HAL_OK;
 800561a:	2000      	movs	r0, #0
}
 800561c:	b002      	add	sp, #8
 800561e:	4770      	bx	lr
    __HAL_ADC_ENABLE(hadc);
 8005620:	689a      	ldr	r2, [r3, #8]
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 8005622:	492a      	ldr	r1, [pc, #168]	; (80056cc <HAL_ADC_Start+0xd4>)
    __HAL_ADC_ENABLE(hadc);
 8005624:	f042 0201 	orr.w	r2, r2, #1
 8005628:	609a      	str	r2, [r3, #8]
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 800562a:	4a29      	ldr	r2, [pc, #164]	; (80056d0 <HAL_ADC_Start+0xd8>)
 800562c:	6812      	ldr	r2, [r2, #0]
 800562e:	fbb2 f2f1 	udiv	r2, r2, r1
 8005632:	eb02 0242 	add.w	r2, r2, r2, lsl #1
      counter--;
 8005636:	9201      	str	r2, [sp, #4]
    while(counter != 0U)
 8005638:	9a01      	ldr	r2, [sp, #4]
 800563a:	2a00      	cmp	r2, #0
 800563c:	d0ea      	beq.n	8005614 <HAL_ADC_Start+0x1c>
      counter--;
 800563e:	9a01      	ldr	r2, [sp, #4]
 8005640:	3a01      	subs	r2, #1
 8005642:	e7f8      	b.n	8005636 <HAL_ADC_Start+0x3e>
    ADC_STATE_CLR_SET(hadc->State,
 8005644:	6c02      	ldr	r2, [r0, #64]	; 0x40
 8005646:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800564a:	f022 0201 	bic.w	r2, r2, #1
 800564e:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8005652:	6402      	str	r2, [r0, #64]	; 0x40
    if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
 8005654:	685a      	ldr	r2, [r3, #4]
 8005656:	0552      	lsls	r2, r2, #21
      ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
 8005658:	bf41      	itttt	mi
 800565a:	6c02      	ldrmi	r2, [r0, #64]	; 0x40
 800565c:	f422 5240 	bicmi.w	r2, r2, #12288	; 0x3000
 8005660:	f442 5280 	orrmi.w	r2, r2, #4096	; 0x1000
 8005664:	6402      	strmi	r2, [r0, #64]	; 0x40
    if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 8005666:	6c02      	ldr	r2, [r0, #64]	; 0x40
 8005668:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
      CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
 800566c:	bf1c      	itt	ne
 800566e:	6c42      	ldrne	r2, [r0, #68]	; 0x44
 8005670:	f022 0206 	bicne.w	r2, r2, #6
      ADC_CLEAR_ERRORCODE(hadc);
 8005674:	6442      	str	r2, [r0, #68]	; 0x44
    __HAL_UNLOCK(hadc);
 8005676:	2200      	movs	r2, #0
 8005678:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC | ADC_FLAG_OVR);
 800567c:	f06f 0222 	mvn.w	r2, #34	; 0x22
 8005680:	601a      	str	r2, [r3, #0]
    if(HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_MULTI))
 8005682:	4a14      	ldr	r2, [pc, #80]	; (80056d4 <HAL_ADC_Start+0xdc>)
 8005684:	6851      	ldr	r1, [r2, #4]
 8005686:	f011 0f1f 	tst.w	r1, #31
 800568a:	4913      	ldr	r1, [pc, #76]	; (80056d8 <HAL_ADC_Start+0xe0>)
 800568c:	d119      	bne.n	80056c2 <HAL_ADC_Start+0xca>
      if((hadc->Instance == ADC1) || ((hadc->Instance == ADC2) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_0)) \
 800568e:	428b      	cmp	r3, r1
 8005690:	d007      	beq.n	80056a2 <HAL_ADC_Start+0xaa>
 8005692:	f501 7180 	add.w	r1, r1, #256	; 0x100
 8005696:	428b      	cmp	r3, r1
 8005698:	d10c      	bne.n	80056b4 <HAL_ADC_Start+0xbc>
 800569a:	6852      	ldr	r2, [r2, #4]
 800569c:	f012 0f1f 	tst.w	r2, #31
                                  || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
 80056a0:	d1bb      	bne.n	800561a <HAL_ADC_Start+0x22>
      if((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 80056a2:	6898      	ldr	r0, [r3, #8]
 80056a4:	f010 5040 	ands.w	r0, r0, #805306368	; 0x30000000
 80056a8:	d1b7      	bne.n	800561a <HAL_ADC_Start+0x22>
          hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 80056aa:	689a      	ldr	r2, [r3, #8]
 80056ac:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 80056b0:	609a      	str	r2, [r3, #8]
 80056b2:	e7b3      	b.n	800561c <HAL_ADC_Start+0x24>
                                  || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
 80056b4:	4909      	ldr	r1, [pc, #36]	; (80056dc <HAL_ADC_Start+0xe4>)
 80056b6:	428b      	cmp	r3, r1
 80056b8:	d1af      	bne.n	800561a <HAL_ADC_Start+0x22>
 80056ba:	6852      	ldr	r2, [r2, #4]
 80056bc:	f012 0f10 	tst.w	r2, #16
 80056c0:	e7ee      	b.n	80056a0 <HAL_ADC_Start+0xa8>
      if((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 80056c2:	428b      	cmp	r3, r1
 80056c4:	d1a9      	bne.n	800561a <HAL_ADC_Start+0x22>
 80056c6:	e7ec      	b.n	80056a2 <HAL_ADC_Start+0xaa>
  __HAL_LOCK(hadc);
 80056c8:	2002      	movs	r0, #2
 80056ca:	e7a7      	b.n	800561c <HAL_ADC_Start+0x24>
 80056cc:	000f4240 	.word	0x000f4240
 80056d0:	20000078 	.word	0x20000078
 80056d4:	40012300 	.word	0x40012300
 80056d8:	40012000 	.word	0x40012000
 80056dc:	40012200 	.word	0x40012200

080056e0 <HAL_ADC_PollForConversion>:
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 80056e0:	6803      	ldr	r3, [r0, #0]
 80056e2:	689a      	ldr	r2, [r3, #8]
 80056e4:	0552      	lsls	r2, r2, #21
{
 80056e6:	b570      	push	{r4, r5, r6, lr}
 80056e8:	4604      	mov	r4, r0
 80056ea:	460d      	mov	r5, r1
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 80056ec:	d50b      	bpl.n	8005706 <HAL_ADC_PollForConversion+0x26>
      HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_DMA)    )
 80056ee:	689b      	ldr	r3, [r3, #8]
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 80056f0:	05de      	lsls	r6, r3, #23
 80056f2:	d508      	bpl.n	8005706 <HAL_ADC_PollForConversion+0x26>
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 80056f4:	6c03      	ldr	r3, [r0, #64]	; 0x40
 80056f6:	f043 0320 	orr.w	r3, r3, #32
 80056fa:	6403      	str	r3, [r0, #64]	; 0x40
    __HAL_UNLOCK(hadc);
 80056fc:	2300      	movs	r3, #0
 80056fe:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
    return HAL_ERROR;
 8005702:	2001      	movs	r0, #1
}
 8005704:	bd70      	pop	{r4, r5, r6, pc}
  tickstart = HAL_GetTick();
 8005706:	f7ff feb7 	bl	8005478 <HAL_GetTick>
 800570a:	4606      	mov	r6, r0
  while(!(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOC)))
 800570c:	6823      	ldr	r3, [r4, #0]
 800570e:	681a      	ldr	r2, [r3, #0]
 8005710:	0791      	lsls	r1, r2, #30
 8005712:	d50c      	bpl.n	800572e <HAL_ADC_PollForConversion+0x4e>
  __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_STRT | ADC_FLAG_EOC);
 8005714:	f06f 0212 	mvn.w	r2, #18
 8005718:	601a      	str	r2, [r3, #0]
  SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 800571a:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800571c:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005720:	6422      	str	r2, [r4, #64]	; 0x40
  if(ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 8005722:	689a      	ldr	r2, [r3, #8]
 8005724:	f012 5f40 	tst.w	r2, #805306368	; 0x30000000
 8005728:	d013      	beq.n	8005752 <HAL_ADC_PollForConversion+0x72>
  return HAL_OK;
 800572a:	2000      	movs	r0, #0
 800572c:	e7ea      	b.n	8005704 <HAL_ADC_PollForConversion+0x24>
    if(Timeout != HAL_MAX_DELAY)
 800572e:	1c68      	adds	r0, r5, #1
 8005730:	d0ed      	beq.n	800570e <HAL_ADC_PollForConversion+0x2e>
      if((Timeout == 0U) || ((HAL_GetTick() - tickstart ) > Timeout))
 8005732:	b945      	cbnz	r5, 8005746 <HAL_ADC_PollForConversion+0x66>
        SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 8005734:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005736:	f043 0304 	orr.w	r3, r3, #4
 800573a:	6423      	str	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hadc);
 800573c:	2300      	movs	r3, #0
 800573e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        return HAL_TIMEOUT;
 8005742:	2003      	movs	r0, #3
 8005744:	e7de      	b.n	8005704 <HAL_ADC_PollForConversion+0x24>
      if((Timeout == 0U) || ((HAL_GetTick() - tickstart ) > Timeout))
 8005746:	f7ff fe97 	bl	8005478 <HAL_GetTick>
 800574a:	1b80      	subs	r0, r0, r6
 800574c:	42a8      	cmp	r0, r5
 800574e:	d9dd      	bls.n	800570c <HAL_ADC_PollForConversion+0x2c>
 8005750:	e7f0      	b.n	8005734 <HAL_ADC_PollForConversion+0x54>
     (hadc->Init.ContinuousConvMode == DISABLE)            &&
 8005752:	7e20      	ldrb	r0, [r4, #24]
  if(ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 8005754:	2800      	cmp	r0, #0
 8005756:	d1e8      	bne.n	800572a <HAL_ADC_PollForConversion+0x4a>
     (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 8005758:	6ada      	ldr	r2, [r3, #44]	; 0x2c
     (hadc->Init.ContinuousConvMode == DISABLE)            &&
 800575a:	f412 0f70 	tst.w	r2, #15728640	; 0xf00000
 800575e:	d002      	beq.n	8005766 <HAL_ADC_PollForConversion+0x86>
      HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)  )   )
 8005760:	689b      	ldr	r3, [r3, #8]
     (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 8005762:	055a      	lsls	r2, r3, #21
 8005764:	d4e1      	bmi.n	800572a <HAL_ADC_PollForConversion+0x4a>
    CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);   
 8005766:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005768:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800576c:	6423      	str	r3, [r4, #64]	; 0x40
    if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 800576e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005770:	04db      	lsls	r3, r3, #19
 8005772:	d4da      	bmi.n	800572a <HAL_ADC_PollForConversion+0x4a>
      SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 8005774:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005776:	f043 0301 	orr.w	r3, r3, #1
 800577a:	6423      	str	r3, [r4, #64]	; 0x40
 800577c:	e7c2      	b.n	8005704 <HAL_ADC_PollForConversion+0x24>

0800577e <HAL_ADC_GetValue>:
  return hadc->Instance->DR;
 800577e:	6803      	ldr	r3, [r0, #0]
 8005780:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
}
 8005782:	4770      	bx	lr

08005784 <HAL_ADC_ConfigChannel>:
{
 8005784:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  __IO uint32_t counter = 0U;
 8005786:	2300      	movs	r3, #0
 8005788:	9301      	str	r3, [sp, #4]
  __HAL_LOCK(hadc);
 800578a:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800578e:	2b01      	cmp	r3, #1
 8005790:	d069      	beq.n	8005866 <HAL_ADC_ConfigChannel+0xe2>
 8005792:	2301      	movs	r3, #1
 8005794:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  if (sConfig->Channel > ADC_CHANNEL_9)
 8005798:	680d      	ldr	r5, [r1, #0]
    hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 800579a:	6803      	ldr	r3, [r0, #0]
    hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
 800579c:	688e      	ldr	r6, [r1, #8]
  if (sConfig->Channel > ADC_CHANNEL_9)
 800579e:	2d09      	cmp	r5, #9
 80057a0:	b2ac      	uxth	r4, r5
 80057a2:	d934      	bls.n	800580e <HAL_ADC_ConfigChannel+0x8a>
    hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 80057a4:	eb04 0244 	add.w	r2, r4, r4, lsl #1
 80057a8:	68df      	ldr	r7, [r3, #12]
 80057aa:	3a1e      	subs	r2, #30
 80057ac:	f04f 0c07 	mov.w	ip, #7
 80057b0:	fa0c fc02 	lsl.w	ip, ip, r2
 80057b4:	ea27 070c 	bic.w	r7, r7, ip
 80057b8:	60df      	str	r7, [r3, #12]
    hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
 80057ba:	68df      	ldr	r7, [r3, #12]
 80057bc:	fa06 f202 	lsl.w	r2, r6, r2
 80057c0:	433a      	orrs	r2, r7
 80057c2:	60da      	str	r2, [r3, #12]
  if (sConfig->Rank < 7U)
 80057c4:	6849      	ldr	r1, [r1, #4]
 80057c6:	2906      	cmp	r1, #6
    hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 80057c8:	eb01 0281 	add.w	r2, r1, r1, lsl #2
  if (sConfig->Rank < 7U)
 80057cc:	d82f      	bhi.n	800582e <HAL_ADC_ConfigChannel+0xaa>
    hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 80057ce:	6b59      	ldr	r1, [r3, #52]	; 0x34
 80057d0:	3a05      	subs	r2, #5
 80057d2:	261f      	movs	r6, #31
 80057d4:	4096      	lsls	r6, r2
 80057d6:	ea21 0106 	bic.w	r1, r1, r6
 80057da:	6359      	str	r1, [r3, #52]	; 0x34
    hadc->Instance->SQR3 |= ADC_SQR3_RK(sConfig->Channel, sConfig->Rank);
 80057dc:	6b59      	ldr	r1, [r3, #52]	; 0x34
 80057de:	fa04 f202 	lsl.w	r2, r4, r2
 80057e2:	430a      	orrs	r2, r1
 80057e4:	635a      	str	r2, [r3, #52]	; 0x34
  if ((hadc->Instance == ADC1) && (sConfig->Channel == ADC_CHANNEL_VBAT))
 80057e6:	4a30      	ldr	r2, [pc, #192]	; (80058a8 <HAL_ADC_ConfigChannel+0x124>)
 80057e8:	4293      	cmp	r3, r2
 80057ea:	d10a      	bne.n	8005802 <HAL_ADC_ConfigChannel+0x7e>
 80057ec:	2d12      	cmp	r5, #18
 80057ee:	d13c      	bne.n	800586a <HAL_ADC_ConfigChannel+0xe6>
      tmpADC_Common->CCR &= ~ADC_CCR_TSVREFE;
 80057f0:	4b2e      	ldr	r3, [pc, #184]	; (80058ac <HAL_ADC_ConfigChannel+0x128>)
 80057f2:	685a      	ldr	r2, [r3, #4]
 80057f4:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 80057f8:	605a      	str	r2, [r3, #4]
    tmpADC_Common->CCR |= ADC_CCR_VBATE;
 80057fa:	685a      	ldr	r2, [r3, #4]
 80057fc:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 8005800:	605a      	str	r2, [r3, #4]
  __HAL_UNLOCK(hadc);
 8005802:	2300      	movs	r3, #0
 8005804:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  return HAL_OK;
 8005808:	4618      	mov	r0, r3
}
 800580a:	b003      	add	sp, #12
 800580c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    hadc->Instance->SMPR2 &= ~ADC_SMPR2(ADC_SMPR2_SMP0, sConfig->Channel);
 800580e:	691f      	ldr	r7, [r3, #16]
 8005810:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 8005814:	f04f 0c07 	mov.w	ip, #7
 8005818:	fa0c fc02 	lsl.w	ip, ip, r2
 800581c:	ea27 070c 	bic.w	r7, r7, ip
 8005820:	611f      	str	r7, [r3, #16]
    hadc->Instance->SMPR2 |= ADC_SMPR2(sConfig->SamplingTime, sConfig->Channel);
 8005822:	691f      	ldr	r7, [r3, #16]
 8005824:	fa06 f202 	lsl.w	r2, r6, r2
 8005828:	433a      	orrs	r2, r7
 800582a:	611a      	str	r2, [r3, #16]
 800582c:	e7ca      	b.n	80057c4 <HAL_ADC_ConfigChannel+0x40>
  else if (sConfig->Rank < 13U)
 800582e:	290c      	cmp	r1, #12
 8005830:	f04f 011f 	mov.w	r1, #31
 8005834:	d80b      	bhi.n	800584e <HAL_ADC_ConfigChannel+0xca>
    hadc->Instance->SQR2 &= ~ADC_SQR2_RK(ADC_SQR2_SQ7, sConfig->Rank);
 8005836:	6b1e      	ldr	r6, [r3, #48]	; 0x30
 8005838:	3a23      	subs	r2, #35	; 0x23
 800583a:	4091      	lsls	r1, r2
 800583c:	ea26 0101 	bic.w	r1, r6, r1
 8005840:	6319      	str	r1, [r3, #48]	; 0x30
    hadc->Instance->SQR2 |= ADC_SQR2_RK(sConfig->Channel, sConfig->Rank);
 8005842:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8005844:	fa04 f202 	lsl.w	r2, r4, r2
 8005848:	430a      	orrs	r2, r1
 800584a:	631a      	str	r2, [r3, #48]	; 0x30
 800584c:	e7cb      	b.n	80057e6 <HAL_ADC_ConfigChannel+0x62>
    hadc->Instance->SQR1 &= ~ADC_SQR1_RK(ADC_SQR1_SQ13, sConfig->Rank);
 800584e:	6ade      	ldr	r6, [r3, #44]	; 0x2c
 8005850:	3a41      	subs	r2, #65	; 0x41
 8005852:	4091      	lsls	r1, r2
 8005854:	ea26 0101 	bic.w	r1, r6, r1
 8005858:	62d9      	str	r1, [r3, #44]	; 0x2c
    hadc->Instance->SQR1 |= ADC_SQR1_RK(sConfig->Channel, sConfig->Rank);
 800585a:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 800585c:	fa04 f202 	lsl.w	r2, r4, r2
 8005860:	430a      	orrs	r2, r1
 8005862:	62da      	str	r2, [r3, #44]	; 0x2c
 8005864:	e7bf      	b.n	80057e6 <HAL_ADC_ConfigChannel+0x62>
  __HAL_LOCK(hadc);
 8005866:	2002      	movs	r0, #2
 8005868:	e7cf      	b.n	800580a <HAL_ADC_ConfigChannel+0x86>
  if ((hadc->Instance == ADC1) && ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) || (sConfig->Channel == ADC_CHANNEL_VREFINT)))
 800586a:	4b11      	ldr	r3, [pc, #68]	; (80058b0 <HAL_ADC_ConfigChannel+0x12c>)
 800586c:	429d      	cmp	r5, r3
 800586e:	d001      	beq.n	8005874 <HAL_ADC_ConfigChannel+0xf0>
 8005870:	2d11      	cmp	r5, #17
 8005872:	d1c6      	bne.n	8005802 <HAL_ADC_ConfigChannel+0x7e>
      tmpADC_Common->CCR &= ~ADC_CCR_VBATE;
 8005874:	4b0d      	ldr	r3, [pc, #52]	; (80058ac <HAL_ADC_ConfigChannel+0x128>)
 8005876:	685a      	ldr	r2, [r3, #4]
 8005878:	f422 0280 	bic.w	r2, r2, #4194304	; 0x400000
 800587c:	605a      	str	r2, [r3, #4]
    tmpADC_Common->CCR |= ADC_CCR_TSVREFE;
 800587e:	685a      	ldr	r2, [r3, #4]
 8005880:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8005884:	605a      	str	r2, [r3, #4]
    if((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR))
 8005886:	4b0a      	ldr	r3, [pc, #40]	; (80058b0 <HAL_ADC_ConfigChannel+0x12c>)
 8005888:	429d      	cmp	r5, r3
 800588a:	d1ba      	bne.n	8005802 <HAL_ADC_ConfigChannel+0x7e>
      counter = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000U));
 800588c:	4b09      	ldr	r3, [pc, #36]	; (80058b4 <HAL_ADC_ConfigChannel+0x130>)
 800588e:	4a0a      	ldr	r2, [pc, #40]	; (80058b8 <HAL_ADC_ConfigChannel+0x134>)
 8005890:	681b      	ldr	r3, [r3, #0]
 8005892:	fbb3 f3f2 	udiv	r3, r3, r2
 8005896:	220a      	movs	r2, #10
 8005898:	4353      	muls	r3, r2
        counter--;
 800589a:	9301      	str	r3, [sp, #4]
      while(counter != 0U)
 800589c:	9b01      	ldr	r3, [sp, #4]
 800589e:	2b00      	cmp	r3, #0
 80058a0:	d0af      	beq.n	8005802 <HAL_ADC_ConfigChannel+0x7e>
        counter--;
 80058a2:	9b01      	ldr	r3, [sp, #4]
 80058a4:	3b01      	subs	r3, #1
 80058a6:	e7f8      	b.n	800589a <HAL_ADC_ConfigChannel+0x116>
 80058a8:	40012000 	.word	0x40012000
 80058ac:	40012300 	.word	0x40012300
 80058b0:	10000012 	.word	0x10000012
 80058b4:	20000078 	.word	0x20000078
 80058b8:	000f4240 	.word	0x000f4240

080058bc <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 80058bc:	4907      	ldr	r1, [pc, #28]	; (80058dc <HAL_NVIC_SetPriorityGrouping+0x20>)
 80058be:	68ca      	ldr	r2, [r1, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80058c0:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80058c4:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80058c6:	0412      	lsls	r2, r2, #16
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80058c8:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80058cc:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 80058ce:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 80058d0:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80058d4:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 80058d8:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 80058da:	4770      	bx	lr
 80058dc:	e000ed00 	.word	0xe000ed00

080058e0 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 80058e0:	4b16      	ldr	r3, [pc, #88]	; (800593c <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 80058e2:	b530      	push	{r4, r5, lr}
 80058e4:	68dc      	ldr	r4, [r3, #12]
 80058e6:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80058ea:	f1c4 0507 	rsb	r5, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80058ee:	1d23      	adds	r3, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80058f0:	2d04      	cmp	r5, #4
 80058f2:	bf28      	it	cs
 80058f4:	2504      	movcs	r5, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80058f6:	2b06      	cmp	r3, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80058f8:	f04f 33ff 	mov.w	r3, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80058fc:	bf8c      	ite	hi
 80058fe:	3c03      	subhi	r4, #3
 8005900:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8005902:	fa03 f505 	lsl.w	r5, r3, r5
 8005906:	ea21 0105 	bic.w	r1, r1, r5
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 800590a:	40a3      	lsls	r3, r4
 800590c:	ea22 0203 	bic.w	r2, r2, r3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8005910:	40a1      	lsls	r1, r4
  if ((int32_t)(IRQn) >= 0)
 8005912:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8005914:	ea41 0302 	orr.w	r3, r1, r2
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8005918:	bfac      	ite	ge
 800591a:	f100 4060 	addge.w	r0, r0, #3758096384	; 0xe0000000
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800591e:	4a08      	ldrlt	r2, [pc, #32]	; (8005940 <HAL_NVIC_SetPriority+0x60>)
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8005920:	ea4f 1303 	mov.w	r3, r3, lsl #4
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8005924:	bfb8      	it	lt
 8005926:	f000 000f 	andlt.w	r0, r0, #15
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800592a:	b2db      	uxtb	r3, r3
 800592c:	bfaa      	itet	ge
 800592e:	f500 4061 	addge.w	r0, r0, #57600	; 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8005932:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8005934:	f880 3300 	strbge.w	r3, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8005938:	bd30      	pop	{r4, r5, pc}
 800593a:	bf00      	nop
 800593c:	e000ed00 	.word	0xe000ed00
 8005940:	e000ed14 	.word	0xe000ed14

08005944 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8005944:	2800      	cmp	r0, #0
 8005946:	db08      	blt.n	800595a <HAL_NVIC_EnableIRQ+0x16>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8005948:	0942      	lsrs	r2, r0, #5
 800594a:	2301      	movs	r3, #1
 800594c:	f000 001f 	and.w	r0, r0, #31
 8005950:	fa03 f000 	lsl.w	r0, r3, r0
 8005954:	4b01      	ldr	r3, [pc, #4]	; (800595c <HAL_NVIC_EnableIRQ+0x18>)
 8005956:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 800595a:	4770      	bx	lr
 800595c:	e000e100 	.word	0xe000e100

08005960 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8005960:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8005962:	4604      	mov	r4, r0
 8005964:	b150      	cbz	r0, 800597c <HAL_CRC_Init+0x1c>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8005966:	7943      	ldrb	r3, [r0, #5]
 8005968:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800596c:	b913      	cbnz	r3, 8005974 <HAL_CRC_Init+0x14>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 800596e:	7102      	strb	r2, [r0, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8005970:	f7fc f882 	bl	8001a78 <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8005974:	2301      	movs	r3, #1
 8005976:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 8005978:	2000      	movs	r0, #0
}
 800597a:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800597c:	2001      	movs	r0, #1
 800597e:	e7fc      	b.n	800597a <HAL_CRC_Init+0x1a>

08005980 <HAL_DAC_Init>:
  * @param  hdac pointer to a DAC_HandleTypeDef structure that contains
  *         the configuration information for the specified DAC.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DAC_Init(DAC_HandleTypeDef* hdac)
{ 
 8005980:	b510      	push	{r4, lr}
  /* Check DAC handle */
  if(hdac == NULL)
 8005982:	4604      	mov	r4, r0
 8005984:	b168      	cbz	r0, 80059a2 <HAL_DAC_Init+0x22>
     return HAL_ERROR;
  }
  /* Check the parameters */
  assert_param(IS_DAC_ALL_INSTANCE(hdac->Instance));
  
  if(hdac->State == HAL_DAC_STATE_RESET)
 8005986:	7903      	ldrb	r3, [r0, #4]
 8005988:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800598c:	b913      	cbnz	r3, 8005994 <HAL_DAC_Init+0x14>
    {
      hdac->MspInitCallback               = HAL_DAC_MspInit;
    }
#endif /* USE_HAL_DAC_REGISTER_CALLBACKS */
    /* Allocate lock resource and initialize it */
    hdac->Lock = HAL_UNLOCKED;
 800598e:	7142      	strb	r2, [r0, #5]
#if (USE_HAL_DAC_REGISTER_CALLBACKS == 1)
    /* Init the low level hardware */
    hdac->MspInitCallback(hdac);
#else
    /* Init the low level hardware */
    HAL_DAC_MspInit(hdac);
 8005990:	f7fc f88a 	bl	8001aa8 <HAL_DAC_MspInit>
#endif /* USE_HAL_DAC_REGISTER_CALLBACKS */
  }
  
  /* Initialize the DAC state*/
  hdac->State = HAL_DAC_STATE_BUSY;
 8005994:	2302      	movs	r3, #2
 8005996:	7123      	strb	r3, [r4, #4]
  
  /* Set DAC error code to none */
  hdac->ErrorCode = HAL_DAC_ERROR_NONE;
 8005998:	2000      	movs	r0, #0
  
  /* Initialize the DAC state*/
  hdac->State = HAL_DAC_STATE_READY;
 800599a:	2301      	movs	r3, #1
  hdac->ErrorCode = HAL_DAC_ERROR_NONE;
 800599c:	6120      	str	r0, [r4, #16]
  hdac->State = HAL_DAC_STATE_READY;
 800599e:	7123      	strb	r3, [r4, #4]
  
  /* Return function status */
  return HAL_OK;
}
 80059a0:	bd10      	pop	{r4, pc}
     return HAL_ERROR;
 80059a2:	2001      	movs	r0, #1
 80059a4:	e7fc      	b.n	80059a0 <HAL_DAC_Init+0x20>

080059a6 <HAL_DAC_Start>:
  *            @arg DAC_CHANNEL_1: DAC Channel1 selected
  *            @arg DAC_CHANNEL_2: DAC Channel2 selected
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DAC_Start(DAC_HandleTypeDef* hdac, uint32_t Channel)
{
 80059a6:	b510      	push	{r4, lr}
  
  /* Check the parameters */
  assert_param(IS_DAC_CHANNEL(Channel));
  
  /* Process locked */
  __HAL_LOCK(hdac);
 80059a8:	7943      	ldrb	r3, [r0, #5]
 80059aa:	2b01      	cmp	r3, #1
 80059ac:	f04f 0302 	mov.w	r3, #2
 80059b0:	d017      	beq.n	80059e2 <HAL_DAC_Start+0x3c>
  
  /* Change DAC state */
  hdac->State = HAL_DAC_STATE_BUSY;
 80059b2:	7103      	strb	r3, [r0, #4]
  
  /* Enable the Peripheral */
  __HAL_DAC_ENABLE(hdac, Channel);
 80059b4:	6803      	ldr	r3, [r0, #0]
 80059b6:	2201      	movs	r2, #1
 80059b8:	681c      	ldr	r4, [r3, #0]
 80059ba:	408a      	lsls	r2, r1
 80059bc:	4322      	orrs	r2, r4
 80059be:	601a      	str	r2, [r3, #0]
  
  if(Channel == DAC_CHANNEL_1)
 80059c0:	b989      	cbnz	r1, 80059e6 <HAL_DAC_Start+0x40>
  {
    tmp1 = hdac->Instance->CR & DAC_CR_TEN1;
 80059c2:	6819      	ldr	r1, [r3, #0]
    tmp2 = hdac->Instance->CR & DAC_CR_TSEL1;
 80059c4:	681a      	ldr	r2, [r3, #0]
    /* Check if software trigger enabled */
    if((tmp1 ==  DAC_CR_TEN1) && (tmp2 ==  DAC_CR_TSEL1))
 80059c6:	074c      	lsls	r4, r1, #29
 80059c8:	d507      	bpl.n	80059da <HAL_DAC_Start+0x34>
    tmp2 = hdac->Instance->CR & DAC_CR_TSEL1;
 80059ca:	f002 0238 	and.w	r2, r2, #56	; 0x38
    if((tmp1 ==  DAC_CR_TEN1) && (tmp2 ==  DAC_CR_TSEL1))
 80059ce:	2a38      	cmp	r2, #56	; 0x38
 80059d0:	d103      	bne.n	80059da <HAL_DAC_Start+0x34>
    {
      /* Enable the selected DAC software conversion */
      hdac->Instance->SWTRIGR |= (uint32_t)DAC_SWTRIGR_SWTRIG1;
 80059d2:	685a      	ldr	r2, [r3, #4]
 80059d4:	f042 0201 	orr.w	r2, r2, #1
    tmp2 = hdac->Instance->CR & DAC_CR_TSEL2;    
    /* Check if software trigger enabled */
    if((tmp1 == DAC_CR_TEN2) && (tmp2 == DAC_CR_TSEL2))
    {
      /* Enable the selected DAC software conversion*/
      hdac->Instance->SWTRIGR |= (uint32_t)DAC_SWTRIGR_SWTRIG2;
 80059d8:	605a      	str	r2, [r3, #4]
    }
  }
  
  /* Change DAC state */
  hdac->State = HAL_DAC_STATE_READY;
 80059da:	2301      	movs	r3, #1
 80059dc:	7103      	strb	r3, [r0, #4]
  
  /* Process unlocked */
  __HAL_UNLOCK(hdac);
 80059de:	2300      	movs	r3, #0
 80059e0:	7143      	strb	r3, [r0, #5]
  __HAL_LOCK(hdac);
 80059e2:	4618      	mov	r0, r3
    
  /* Return function status */
  return HAL_OK;
}
 80059e4:	bd10      	pop	{r4, pc}
    tmp1 = hdac->Instance->CR & DAC_CR_TEN2;
 80059e6:	6819      	ldr	r1, [r3, #0]
    tmp2 = hdac->Instance->CR & DAC_CR_TSEL2;    
 80059e8:	681a      	ldr	r2, [r3, #0]
    if((tmp1 == DAC_CR_TEN2) && (tmp2 == DAC_CR_TSEL2))
 80059ea:	0349      	lsls	r1, r1, #13
 80059ec:	d5f5      	bpl.n	80059da <HAL_DAC_Start+0x34>
    tmp2 = hdac->Instance->CR & DAC_CR_TSEL2;    
 80059ee:	f402 1260 	and.w	r2, r2, #3670016	; 0x380000
    if((tmp1 == DAC_CR_TEN2) && (tmp2 == DAC_CR_TSEL2))
 80059f2:	f5b2 1f60 	cmp.w	r2, #3670016	; 0x380000
 80059f6:	d1f0      	bne.n	80059da <HAL_DAC_Start+0x34>
      hdac->Instance->SWTRIGR |= (uint32_t)DAC_SWTRIGR_SWTRIG2;
 80059f8:	685a      	ldr	r2, [r3, #4]
 80059fa:	f042 0202 	orr.w	r2, r2, #2
 80059fe:	e7eb      	b.n	80059d8 <HAL_DAC_Start+0x32>

08005a00 <HAL_DAC_ConfigChannel>:
  *            @arg DAC_CHANNEL_1: DAC Channel1 selected
  *            @arg DAC_CHANNEL_2: DAC Channel2 selected
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DAC_ConfigChannel(DAC_HandleTypeDef* hdac, DAC_ChannelConfTypeDef* sConfig, uint32_t Channel)
{
 8005a00:	b530      	push	{r4, r5, lr}
  assert_param(IS_DAC_TRIGGER(sConfig->DAC_Trigger));
  assert_param(IS_DAC_OUTPUT_BUFFER_STATE(sConfig->DAC_OutputBuffer));
  assert_param(IS_DAC_CHANNEL(Channel));
  
  /* Process locked */
  __HAL_LOCK(hdac);
 8005a02:	7943      	ldrb	r3, [r0, #5]
 8005a04:	2b01      	cmp	r3, #1
 8005a06:	f04f 0302 	mov.w	r3, #2
 8005a0a:	d018      	beq.n	8005a3e <HAL_DAC_ConfigChannel+0x3e>
  
  /* Change DAC state */
  hdac->State = HAL_DAC_STATE_BUSY;
  
  /* Get the DAC CR value */
  tmpreg1 = hdac->Instance->CR;
 8005a0c:	6804      	ldr	r4, [r0, #0]
  hdac->State = HAL_DAC_STATE_BUSY;
 8005a0e:	7103      	strb	r3, [r0, #4]
  tmpreg1 = hdac->Instance->CR;
 8005a10:	6823      	ldr	r3, [r4, #0]
  /* Clear BOFFx, TENx, TSELx, WAVEx and MAMPx bits */
  tmpreg1 &= ~(((uint32_t)(DAC_CR_MAMP1 | DAC_CR_WAVE1 | DAC_CR_TSEL1 | DAC_CR_TEN1 | DAC_CR_BOFF1)) << Channel);
 8005a12:	f640 75fe 	movw	r5, #4094	; 0xffe
 8005a16:	4095      	lsls	r5, r2
 8005a18:	ea23 0505 	bic.w	r5, r3, r5
  /* Configure for the selected DAC channel: buffer output, trigger */
  /* Set TSELx and TENx bits according to DAC_Trigger value */
  /* Set BOFFx bit according to DAC_OutputBuffer value */   
  tmpreg2 = (sConfig->DAC_Trigger | sConfig->DAC_OutputBuffer);
 8005a1c:	e9d1 3100 	ldrd	r3, r1, [r1]
 8005a20:	430b      	orrs	r3, r1
  /* Calculate CR register value depending on DAC_Channel */
  tmpreg1 |= tmpreg2 << Channel;
 8005a22:	4093      	lsls	r3, r2
 8005a24:	432b      	orrs	r3, r5
  /* Write to DAC CR */
  hdac->Instance->CR = tmpreg1;
 8005a26:	6023      	str	r3, [r4, #0]
  /* Disable wave generation */
  hdac->Instance->CR &= ~(DAC_CR_WAVE1 << Channel);
 8005a28:	6823      	ldr	r3, [r4, #0]
 8005a2a:	21c0      	movs	r1, #192	; 0xc0
 8005a2c:	fa01 f202 	lsl.w	r2, r1, r2
 8005a30:	ea23 0202 	bic.w	r2, r3, r2
  
  /* Change DAC state */
  hdac->State = HAL_DAC_STATE_READY;
 8005a34:	2301      	movs	r3, #1
  hdac->Instance->CR &= ~(DAC_CR_WAVE1 << Channel);
 8005a36:	6022      	str	r2, [r4, #0]
  hdac->State = HAL_DAC_STATE_READY;
 8005a38:	7103      	strb	r3, [r0, #4]
  
  /* Process unlocked */
  __HAL_UNLOCK(hdac);
 8005a3a:	2300      	movs	r3, #0
 8005a3c:	7143      	strb	r3, [r0, #5]
  __HAL_LOCK(hdac);
 8005a3e:	4618      	mov	r0, r3
  
  /* Return function status */
  return HAL_OK;
}
 8005a40:	bd30      	pop	{r4, r5, pc}

08005a42 <HAL_DAC_SetValue>:
  *            @arg DAC_ALIGN_12B_R: 12bit right data alignment selected
  * @param  Data Data to be loaded in the selected data holding register.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DAC_SetValue(DAC_HandleTypeDef* hdac, uint32_t Channel, uint32_t Alignment, uint32_t Data)
{  
 8005a42:	b513      	push	{r0, r1, r4, lr}
  /* Check the parameters */
  assert_param(IS_DAC_CHANNEL(Channel));
  assert_param(IS_DAC_ALIGN(Alignment));
  assert_param(IS_DAC_DATA(Data));
  
  tmp = (uint32_t)hdac->Instance; 
 8005a44:	6800      	ldr	r0, [r0, #0]
  __IO uint32_t tmp = 0U;
 8005a46:	2400      	movs	r4, #0
 8005a48:	9401      	str	r4, [sp, #4]
  tmp = (uint32_t)hdac->Instance; 
 8005a4a:	9001      	str	r0, [sp, #4]
  if(Channel == DAC_CHANNEL_1)
 8005a4c:	b941      	cbnz	r1, 8005a60 <HAL_DAC_SetValue+0x1e>
  {
    tmp += DAC_DHR12R1_ALIGNMENT(Alignment);
 8005a4e:	9901      	ldr	r1, [sp, #4]
 8005a50:	3108      	adds	r1, #8
  }
  else
  {
    tmp += DAC_DHR12R2_ALIGNMENT(Alignment);
 8005a52:	440a      	add	r2, r1
 8005a54:	9201      	str	r2, [sp, #4]
  }

  /* Set the DAC channel1 selected data holding register */
  *(__IO uint32_t *) tmp = Data;
 8005a56:	9a01      	ldr	r2, [sp, #4]
  
  /* Return function status */
  return HAL_OK;
}
 8005a58:	2000      	movs	r0, #0
  *(__IO uint32_t *) tmp = Data;
 8005a5a:	6013      	str	r3, [r2, #0]
}
 8005a5c:	b002      	add	sp, #8
 8005a5e:	bd10      	pop	{r4, pc}
    tmp += DAC_DHR12R2_ALIGNMENT(Alignment);
 8005a60:	9901      	ldr	r1, [sp, #4]
 8005a62:	3114      	adds	r1, #20
 8005a64:	e7f5      	b.n	8005a52 <HAL_DAC_SetValue+0x10>

08005a66 <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 8005a66:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if(hdma2d == NULL)
 8005a68:	4604      	mov	r4, r0
 8005a6a:	b330      	cbz	r0, 8005aba <HAL_DMA2D_Init+0x54>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if(hdma2d->State == HAL_DMA2D_STATE_RESET)
 8005a6c:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8005a70:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8005a74:	b91b      	cbnz	r3, 8005a7e <HAL_DMA2D_Init+0x18>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 8005a76:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 8005a7a:	f7fc f847 	bl	8001b0c <HAL_DMA2D_MspInit>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8005a7e:	6822      	ldr	r2, [r4, #0]
 8005a80:	6861      	ldr	r1, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8005a82:	2302      	movs	r3, #2
 8005a84:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8005a88:	6813      	ldr	r3, [r2, #0]
 8005a8a:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8005a8e:	430b      	orrs	r3, r1
 8005a90:	6013      	str	r3, [r2, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 8005a92:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8005a94:	68a1      	ldr	r1, [r4, #8]
 8005a96:	f023 0307 	bic.w	r3, r3, #7
 8005a9a:	430b      	orrs	r3, r1
 8005a9c:	6353      	str	r3, [r2, #52]	; 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 8005a9e:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8005aa0:	68e1      	ldr	r1, [r4, #12]
 8005aa2:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 8005aa6:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8005aaa:	430b      	orrs	r3, r1
 8005aac:	6413      	str	r3, [r2, #64]	; 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8005aae:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8005ab0:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8005ab2:	63e0      	str	r0, [r4, #60]	; 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8005ab4:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

  return HAL_OK;
}
 8005ab8:	bd10      	pop	{r4, pc}
     return HAL_ERROR;
 8005aba:	2001      	movs	r0, #1
 8005abc:	e7fc      	b.n	8005ab8 <HAL_DMA2D_Init+0x52>

08005abe <HAL_DMA2D_LineEventCallback>:
 8005abe:	4770      	bx	lr

08005ac0 <HAL_DMA2D_CLUTLoadingCpltCallback>:
 8005ac0:	4770      	bx	lr

08005ac2 <HAL_DMA2D_IRQHandler>:
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8005ac2:	6803      	ldr	r3, [r0, #0]
{
 8005ac4:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8005ac6:	685e      	ldr	r6, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 8005ac8:	681d      	ldr	r5, [r3, #0]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8005aca:	07f2      	lsls	r2, r6, #31
{
 8005acc:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8005ace:	d514      	bpl.n	8005afa <HAL_DMA2D_IRQHandler+0x38>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
 8005ad0:	05e9      	lsls	r1, r5, #23
 8005ad2:	d512      	bpl.n	8005afa <HAL_DMA2D_IRQHandler+0x38>
    {
      /* Disable the transfer Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 8005ad4:	681a      	ldr	r2, [r3, #0]
 8005ad6:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8005ada:	601a      	str	r2, [r3, #0]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 8005adc:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 8005ade:	f042 0201 	orr.w	r2, r2, #1
 8005ae2:	63c2      	str	r2, [r0, #60]	; 0x3c

      /* Clear the transfer error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 8005ae4:	2201      	movs	r2, #1
 8005ae6:	609a      	str	r2, [r3, #8]

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8005ae8:	2304      	movs	r3, #4
 8005aea:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8005aee:	2300      	movs	r3, #0
 8005af0:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38

      if(hdma2d->XferErrorCallback != NULL)
 8005af4:	6943      	ldr	r3, [r0, #20]
 8005af6:	b103      	cbz	r3, 8005afa <HAL_DMA2D_IRQHandler+0x38>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8005af8:	4798      	blx	r3
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 8005afa:	06b2      	lsls	r2, r6, #26
 8005afc:	d516      	bpl.n	8005b2c <HAL_DMA2D_IRQHandler+0x6a>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
 8005afe:	04ab      	lsls	r3, r5, #18
 8005b00:	d514      	bpl.n	8005b2c <HAL_DMA2D_IRQHandler+0x6a>
    {
      /* Disable the Configuration Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 8005b02:	6823      	ldr	r3, [r4, #0]
 8005b04:	681a      	ldr	r2, [r3, #0]
 8005b06:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8005b0a:	601a      	str	r2, [r3, #0]

      /* Clear the Configuration error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 8005b0c:	2220      	movs	r2, #32
 8005b0e:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 8005b10:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8005b12:	f043 0302 	orr.w	r3, r3, #2
 8005b16:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8005b18:	2304      	movs	r3, #4
 8005b1a:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8005b1e:	2300      	movs	r3, #0
 8005b20:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if(hdma2d->XferErrorCallback != NULL)
 8005b24:	6963      	ldr	r3, [r4, #20]
 8005b26:	b10b      	cbz	r3, 8005b2c <HAL_DMA2D_IRQHandler+0x6a>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8005b28:	4620      	mov	r0, r4
 8005b2a:	4798      	blx	r3
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 8005b2c:	0730      	lsls	r0, r6, #28
 8005b2e:	d516      	bpl.n	8005b5e <HAL_DMA2D_IRQHandler+0x9c>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
 8005b30:	0529      	lsls	r1, r5, #20
 8005b32:	d514      	bpl.n	8005b5e <HAL_DMA2D_IRQHandler+0x9c>
    {
      /* Disable the CLUT access error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 8005b34:	6823      	ldr	r3, [r4, #0]
 8005b36:	681a      	ldr	r2, [r3, #0]
 8005b38:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8005b3c:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT access error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 8005b3e:	2208      	movs	r2, #8
 8005b40:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 8005b42:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8005b44:	f043 0304 	orr.w	r3, r3, #4
 8005b48:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8005b4a:	2304      	movs	r3, #4
 8005b4c:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8005b50:	2300      	movs	r3, #0
 8005b52:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if(hdma2d->XferErrorCallback != NULL)
 8005b56:	6963      	ldr	r3, [r4, #20]
 8005b58:	b10b      	cbz	r3, 8005b5e <HAL_DMA2D_IRQHandler+0x9c>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8005b5a:	4620      	mov	r0, r4
 8005b5c:	4798      	blx	r3
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 8005b5e:	0772      	lsls	r2, r6, #29
 8005b60:	d50b      	bpl.n	8005b7a <HAL_DMA2D_IRQHandler+0xb8>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
 8005b62:	056b      	lsls	r3, r5, #21
 8005b64:	d509      	bpl.n	8005b7a <HAL_DMA2D_IRQHandler+0xb8>
    {
      /* Disable the transfer watermark interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 8005b66:	6823      	ldr	r3, [r4, #0]
 8005b68:	681a      	ldr	r2, [r3, #0]
 8005b6a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005b6e:	601a      	str	r2, [r3, #0]

      /* Clear the transfer watermark flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 8005b70:	2204      	movs	r2, #4
 8005b72:	609a      	str	r2, [r3, #8]

      /* Transfer watermark Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->LineEventCallback(hdma2d);
#else
      HAL_DMA2D_LineEventCallback(hdma2d);
 8005b74:	4620      	mov	r0, r4
 8005b76:	f7ff ffa2 	bl	8005abe <HAL_DMA2D_LineEventCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 8005b7a:	07b0      	lsls	r0, r6, #30
 8005b7c:	d514      	bpl.n	8005ba8 <HAL_DMA2D_IRQHandler+0xe6>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
 8005b7e:	05a9      	lsls	r1, r5, #22
 8005b80:	d512      	bpl.n	8005ba8 <HAL_DMA2D_IRQHandler+0xe6>
    {
      /* Disable the transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 8005b82:	6823      	ldr	r3, [r4, #0]
 8005b84:	681a      	ldr	r2, [r3, #0]
 8005b86:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8005b8a:	601a      	str	r2, [r3, #0]

      /* Clear the transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 8005b8c:	2202      	movs	r2, #2
 8005b8e:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8005b90:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8005b92:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8005b94:	2301      	movs	r3, #1
 8005b96:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8005b9a:	2300      	movs	r3, #0
 8005b9c:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if(hdma2d->XferCpltCallback != NULL)
 8005ba0:	6923      	ldr	r3, [r4, #16]
 8005ba2:	b10b      	cbz	r3, 8005ba8 <HAL_DMA2D_IRQHandler+0xe6>
      {
        /* Transfer complete Callback */
        hdma2d->XferCpltCallback(hdma2d);
 8005ba4:	4620      	mov	r0, r4
 8005ba6:	4798      	blx	r3
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 8005ba8:	06f2      	lsls	r2, r6, #27
 8005baa:	d513      	bpl.n	8005bd4 <HAL_DMA2D_IRQHandler+0x112>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
 8005bac:	04eb      	lsls	r3, r5, #19
 8005bae:	d511      	bpl.n	8005bd4 <HAL_DMA2D_IRQHandler+0x112>
    {
      /* Disable the CLUT transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 8005bb0:	6823      	ldr	r3, [r4, #0]
 8005bb2:	681a      	ldr	r2, [r3, #0]
 8005bb4:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8005bb8:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 8005bba:	2210      	movs	r2, #16
 8005bbc:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8005bbe:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8005bc0:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8005bc2:	2301      	movs	r3, #1
 8005bc4:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8005bc8:	2300      	movs	r3, #0
 8005bca:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      /* CLUT Transfer complete Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->CLUTLoadingCpltCallback(hdma2d);
#else
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 8005bce:	4620      	mov	r0, r4
 8005bd0:	f7ff ff76 	bl	8005ac0 <HAL_DMA2D_CLUTLoadingCpltCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
 8005bd4:	bd70      	pop	{r4, r5, r6, pc}
	...

08005bd8 <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 8005bd8:	b5f0      	push	{r4, r5, r6, r7, lr}
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 8005bda:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 8005bde:	2b01      	cmp	r3, #1
 8005be0:	f04f 0302 	mov.w	r3, #2
 8005be4:	d02b      	beq.n	8005c3e <HAL_DMA2D_ConfigLayer+0x66>
 8005be6:	2201      	movs	r2, #1

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8005be8:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  __HAL_LOCK(hdma2d);
 8005bec:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8005bf0:	eb00 1301 	add.w	r3, r0, r1, lsl #4
 8005bf4:	e9d3 4207 	ldrd	r4, r2, [r3, #28]
 8005bf8:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 8005bfa:	4f18      	ldr	r7, [pc, #96]	; (8005c5c <HAL_DMA2D_ConfigLayer+0x84>)
 8005bfc:	ea44 4202 	orr.w	r2, r4, r2, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8005c00:	3c09      	subs	r4, #9
 8005c02:	2c01      	cmp	r4, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 8005c04:	bf9c      	itt	ls
 8005c06:	f005 437f 	andls.w	r3, r5, #4278190080	; 0xff000000
 8005c0a:	431a      	orrls	r2, r3
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8005c0c:	ea4f 1601 	mov.w	r6, r1, lsl #4

  /* Configure the background DMA2D layer */
  if(LayerIdx == DMA2D_BACKGROUND_LAYER)
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8005c10:	6803      	ldr	r3, [r0, #0]
    regValue |=  (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 8005c12:	bf88      	it	hi
 8005c14:	ea42 6205 	orrhi.w	r2, r2, r5, lsl #24
  if(LayerIdx == DMA2D_BACKGROUND_LAYER)
 8005c18:	b999      	cbnz	r1, 8005c42 <HAL_DMA2D_ConfigLayer+0x6a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8005c1a:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8005c1c:	4039      	ands	r1, r7
 8005c1e:	430a      	orrs	r2, r1
 8005c20:	625a      	str	r2, [r3, #36]	; 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8005c22:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8005c24:	6982      	ldr	r2, [r0, #24]
 8005c26:	619a      	str	r2, [r3, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8005c28:	d803      	bhi.n	8005c32 <HAL_DMA2D_ConfigLayer+0x5a>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE|DMA2D_BGCOLR_GREEN|DMA2D_BGCOLR_RED));
 8005c2a:	6a42      	ldr	r2, [r0, #36]	; 0x24
 8005c2c:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 8005c30:	629a      	str	r2, [r3, #40]	; 0x28
    {
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE|DMA2D_FGCOLR_GREEN|DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8005c32:	2301      	movs	r3, #1
 8005c34:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 8005c38:	2300      	movs	r3, #0
 8005c3a:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
  __HAL_LOCK(hdma2d);
 8005c3e:	4618      	mov	r0, r3

  return HAL_OK;
}
 8005c40:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8005c42:	69d9      	ldr	r1, [r3, #28]
 8005c44:	4039      	ands	r1, r7
 8005c46:	430a      	orrs	r2, r1
 8005c48:	61da      	str	r2, [r3, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8005c4a:	1982      	adds	r2, r0, r6
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8005c4c:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8005c4e:	6992      	ldr	r2, [r2, #24]
 8005c50:	611a      	str	r2, [r3, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE|DMA2D_FGCOLR_GREEN|DMA2D_FGCOLR_RED));
 8005c52:	bf9c      	itt	ls
 8005c54:	f025 457f 	bicls.w	r5, r5, #4278190080	; 0xff000000
 8005c58:	621d      	strls	r5, [r3, #32]
 8005c5a:	e7ea      	b.n	8005c32 <HAL_DMA2D_ConfigLayer+0x5a>
 8005c5c:	00fcfff0 	.word	0x00fcfff0

08005c60 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8005c60:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8005c64:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8005e28 <HAL_GPIO_Init+0x1c8>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8005c68:	4a6d      	ldr	r2, [pc, #436]	; (8005e20 <HAL_GPIO_Init+0x1c0>)
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8005c6a:	f8df 91c0 	ldr.w	r9, [pc, #448]	; 8005e2c <HAL_GPIO_Init+0x1cc>
  for(position = 0U; position < GPIO_NUMBER; position++)
 8005c6e:	2300      	movs	r3, #0
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8005c70:	680d      	ldr	r5, [r1, #0]
    ioposition = 0x01U << position;
 8005c72:	2401      	movs	r4, #1
 8005c74:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8005c76:	ea04 0605 	and.w	r6, r4, r5
    if(iocurrent == ioposition)
 8005c7a:	43ac      	bics	r4, r5
 8005c7c:	f040 80b7 	bne.w	8005dee <HAL_GPIO_Init+0x18e>
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8005c80:	684c      	ldr	r4, [r1, #4]
 8005c82:	f024 0c10 	bic.w	ip, r4, #16
 8005c86:	ea4f 0e43 	mov.w	lr, r3, lsl #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8005c8a:	2503      	movs	r5, #3
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8005c8c:	f10c 37ff 	add.w	r7, ip, #4294967295
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8005c90:	fa05 f50e 	lsl.w	r5, r5, lr
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8005c94:	2f01      	cmp	r7, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8005c96:	ea6f 0505 	mvn.w	r5, r5
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8005c9a:	d811      	bhi.n	8005cc0 <HAL_GPIO_Init+0x60>
        temp = GPIOx->OSPEEDR; 
 8005c9c:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8005c9e:	ea07 0a05 	and.w	sl, r7, r5
        temp |= (GPIO_Init->Speed << (position * 2U));
 8005ca2:	68cf      	ldr	r7, [r1, #12]
 8005ca4:	fa07 f70e 	lsl.w	r7, r7, lr
 8005ca8:	ea47 070a 	orr.w	r7, r7, sl
        GPIOx->OSPEEDR = temp;
 8005cac:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 8005cae:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8005cb0:	ea27 0a06 	bic.w	sl, r7, r6
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 8005cb4:	f3c4 1700 	ubfx	r7, r4, #4, #1
 8005cb8:	409f      	lsls	r7, r3
 8005cba:	ea47 070a 	orr.w	r7, r7, sl
        GPIOx->OTYPER = temp;
 8005cbe:	6047      	str	r7, [r0, #4]
      temp = GPIOx->PUPDR;
 8005cc0:	68c7      	ldr	r7, [r0, #12]
      temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8005cc2:	ea07 0a05 	and.w	sl, r7, r5
      temp |= ((GPIO_Init->Pull) << (position * 2U));
 8005cc6:	688f      	ldr	r7, [r1, #8]
 8005cc8:	fa07 f70e 	lsl.w	r7, r7, lr
 8005ccc:	ea47 070a 	orr.w	r7, r7, sl
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8005cd0:	f1bc 0f02 	cmp.w	ip, #2
      GPIOx->PUPDR = temp;
 8005cd4:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8005cd6:	d116      	bne.n	8005d06 <HAL_GPIO_Init+0xa6>
        temp = GPIOx->AFR[position >> 3U];
 8005cd8:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
 8005cdc:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8005ce0:	f003 0b07 	and.w	fp, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 8005ce4:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8005ce8:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 8005cec:	f04f 0c0f 	mov.w	ip, #15
 8005cf0:	fa0c fc0b 	lsl.w	ip, ip, fp
 8005cf4:	ea27 0c0c 	bic.w	ip, r7, ip
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8005cf8:	690f      	ldr	r7, [r1, #16]
 8005cfa:	fa07 f70b 	lsl.w	r7, r7, fp
 8005cfe:	ea47 070c 	orr.w	r7, r7, ip
        GPIOx->AFR[position >> 3U] = temp;
 8005d02:	f8ca 7020 	str.w	r7, [sl, #32]
      temp = GPIOx->MODER;
 8005d06:	6807      	ldr	r7, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8005d08:	403d      	ands	r5, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8005d0a:	f004 0703 	and.w	r7, r4, #3
 8005d0e:	fa07 f70e 	lsl.w	r7, r7, lr
 8005d12:	433d      	orrs	r5, r7
      GPIOx->MODER = temp;
 8005d14:	6005      	str	r5, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 8005d16:	00e5      	lsls	r5, r4, #3
 8005d18:	d569      	bpl.n	8005dee <HAL_GPIO_Init+0x18e>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8005d1a:	f04f 0b00 	mov.w	fp, #0
 8005d1e:	f8cd b004 	str.w	fp, [sp, #4]
 8005d22:	f8d8 7044 	ldr.w	r7, [r8, #68]	; 0x44
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8005d26:	4d3f      	ldr	r5, [pc, #252]	; (8005e24 <HAL_GPIO_Init+0x1c4>)
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8005d28:	f447 4780 	orr.w	r7, r7, #16384	; 0x4000
 8005d2c:	f8c8 7044 	str.w	r7, [r8, #68]	; 0x44
 8005d30:	f8d8 7044 	ldr.w	r7, [r8, #68]	; 0x44
 8005d34:	f407 4780 	and.w	r7, r7, #16384	; 0x4000
 8005d38:	9701      	str	r7, [sp, #4]
 8005d3a:	9f01      	ldr	r7, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
 8005d3c:	f023 0703 	bic.w	r7, r3, #3
 8005d40:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 8005d44:	f507 379c 	add.w	r7, r7, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8005d48:	f003 0e03 	and.w	lr, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 8005d4c:	f8d7 a008 	ldr.w	sl, [r7, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8005d50:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 8005d54:	f04f 0c0f 	mov.w	ip, #15
 8005d58:	fa0c fc0e 	lsl.w	ip, ip, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8005d5c:	42a8      	cmp	r0, r5
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8005d5e:	ea2a 0c0c 	bic.w	ip, sl, ip
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8005d62:	d04b      	beq.n	8005dfc <HAL_GPIO_Init+0x19c>
 8005d64:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8005d68:	42a8      	cmp	r0, r5
 8005d6a:	d049      	beq.n	8005e00 <HAL_GPIO_Init+0x1a0>
 8005d6c:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8005d70:	42a8      	cmp	r0, r5
 8005d72:	d047      	beq.n	8005e04 <HAL_GPIO_Init+0x1a4>
 8005d74:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8005d78:	42a8      	cmp	r0, r5
 8005d7a:	d045      	beq.n	8005e08 <HAL_GPIO_Init+0x1a8>
 8005d7c:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8005d80:	42a8      	cmp	r0, r5
 8005d82:	d043      	beq.n	8005e0c <HAL_GPIO_Init+0x1ac>
 8005d84:	4548      	cmp	r0, r9
 8005d86:	d043      	beq.n	8005e10 <HAL_GPIO_Init+0x1b0>
 8005d88:	f505 6500 	add.w	r5, r5, #2048	; 0x800
 8005d8c:	42a8      	cmp	r0, r5
 8005d8e:	d041      	beq.n	8005e14 <HAL_GPIO_Init+0x1b4>
 8005d90:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8005d94:	42a8      	cmp	r0, r5
 8005d96:	d03f      	beq.n	8005e18 <HAL_GPIO_Init+0x1b8>
 8005d98:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8005d9c:	42a8      	cmp	r0, r5
 8005d9e:	d03d      	beq.n	8005e1c <HAL_GPIO_Init+0x1bc>
 8005da0:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8005da4:	42a8      	cmp	r0, r5
 8005da6:	bf0c      	ite	eq
 8005da8:	2509      	moveq	r5, #9
 8005daa:	250a      	movne	r5, #10
 8005dac:	fa05 f50e 	lsl.w	r5, r5, lr
 8005db0:	ea45 050c 	orr.w	r5, r5, ip
        SYSCFG->EXTICR[position >> 2U] = temp;
 8005db4:	60bd      	str	r5, [r7, #8]
        temp = EXTI->IMR;
 8005db6:	6815      	ldr	r5, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
 8005db8:	43f7      	mvns	r7, r6
        if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 8005dba:	f414 3f80 	tst.w	r4, #65536	; 0x10000
        temp &= ~((uint32_t)iocurrent);
 8005dbe:	bf0c      	ite	eq
 8005dc0:	403d      	andeq	r5, r7
        {
          temp |= iocurrent;
 8005dc2:	4335      	orrne	r5, r6
        }
        EXTI->IMR = temp;
 8005dc4:	6015      	str	r5, [r2, #0]

        temp = EXTI->EMR;
 8005dc6:	6855      	ldr	r5, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 8005dc8:	f414 3f00 	tst.w	r4, #131072	; 0x20000
        temp &= ~((uint32_t)iocurrent);
 8005dcc:	bf0c      	ite	eq
 8005dce:	403d      	andeq	r5, r7
        {
          temp |= iocurrent;
 8005dd0:	4335      	orrne	r5, r6
        }
        EXTI->EMR = temp;
 8005dd2:	6055      	str	r5, [r2, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8005dd4:	6895      	ldr	r5, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 8005dd6:	f414 1f80 	tst.w	r4, #1048576	; 0x100000
        temp &= ~((uint32_t)iocurrent);
 8005dda:	bf0c      	ite	eq
 8005ddc:	403d      	andeq	r5, r7
        {
          temp |= iocurrent;
 8005dde:	4335      	orrne	r5, r6
        }
        EXTI->RTSR = temp;
 8005de0:	6095      	str	r5, [r2, #8]

        temp = EXTI->FTSR;
 8005de2:	68d5      	ldr	r5, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 8005de4:	02a4      	lsls	r4, r4, #10
        temp &= ~((uint32_t)iocurrent);
 8005de6:	bf54      	ite	pl
 8005de8:	403d      	andpl	r5, r7
        {
          temp |= iocurrent;
 8005dea:	4335      	orrmi	r5, r6
        }
        EXTI->FTSR = temp;
 8005dec:	60d5      	str	r5, [r2, #12]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8005dee:	3301      	adds	r3, #1
 8005df0:	2b10      	cmp	r3, #16
 8005df2:	f47f af3d 	bne.w	8005c70 <HAL_GPIO_Init+0x10>
      }
    }
  }
}
 8005df6:	b003      	add	sp, #12
 8005df8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8005dfc:	465d      	mov	r5, fp
 8005dfe:	e7d5      	b.n	8005dac <HAL_GPIO_Init+0x14c>
 8005e00:	2501      	movs	r5, #1
 8005e02:	e7d3      	b.n	8005dac <HAL_GPIO_Init+0x14c>
 8005e04:	2502      	movs	r5, #2
 8005e06:	e7d1      	b.n	8005dac <HAL_GPIO_Init+0x14c>
 8005e08:	2503      	movs	r5, #3
 8005e0a:	e7cf      	b.n	8005dac <HAL_GPIO_Init+0x14c>
 8005e0c:	2504      	movs	r5, #4
 8005e0e:	e7cd      	b.n	8005dac <HAL_GPIO_Init+0x14c>
 8005e10:	2505      	movs	r5, #5
 8005e12:	e7cb      	b.n	8005dac <HAL_GPIO_Init+0x14c>
 8005e14:	2506      	movs	r5, #6
 8005e16:	e7c9      	b.n	8005dac <HAL_GPIO_Init+0x14c>
 8005e18:	2507      	movs	r5, #7
 8005e1a:	e7c7      	b.n	8005dac <HAL_GPIO_Init+0x14c>
 8005e1c:	2508      	movs	r5, #8
 8005e1e:	e7c5      	b.n	8005dac <HAL_GPIO_Init+0x14c>
 8005e20:	40013c00 	.word	0x40013c00
 8005e24:	40020000 	.word	0x40020000
 8005e28:	40023800 	.word	0x40023800
 8005e2c:	40021400 	.word	0x40021400

08005e30 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8005e30:	b10a      	cbz	r2, 8005e36 <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8005e32:	6181      	str	r1, [r0, #24]
  }
}
 8005e34:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8005e36:	0409      	lsls	r1, r1, #16
 8005e38:	e7fb      	b.n	8005e32 <HAL_GPIO_WritePin+0x2>

08005e3a <I2C_IsAcknowledgeFailed>:
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8005e3a:	6801      	ldr	r1, [r0, #0]
 8005e3c:	694b      	ldr	r3, [r1, #20]
 8005e3e:	f413 6380 	ands.w	r3, r3, #1024	; 0x400
 8005e42:	f04f 0200 	mov.w	r2, #0
 8005e46:	d010      	beq.n	8005e6a <I2C_IsAcknowledgeFailed+0x30>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8005e48:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 8005e4c:	614b      	str	r3, [r1, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
    hi2c->State               = HAL_I2C_STATE_READY;
 8005e4e:	2320      	movs	r3, #32
    hi2c->PreviousState       = I2C_STATE_NONE;
 8005e50:	6302      	str	r2, [r0, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8005e52:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8005e56:	f880 203e 	strb.w	r2, [r0, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8005e5a:	6c03      	ldr	r3, [r0, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8005e5c:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8005e60:	f043 0304 	orr.w	r3, r3, #4
 8005e64:	6403      	str	r3, [r0, #64]	; 0x40

    return HAL_ERROR;
 8005e66:	2001      	movs	r0, #1
 8005e68:	4770      	bx	lr
  }
  return HAL_OK;
 8005e6a:	4618      	mov	r0, r3
}
 8005e6c:	4770      	bx	lr

08005e6e <I2C_WaitOnFlagUntilTimeout>:
{
 8005e6e:	e92d 46f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r9, sl, lr}
 8005e72:	4606      	mov	r6, r0
 8005e74:	460f      	mov	r7, r1
 8005e76:	4691      	mov	r9, r2
 8005e78:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8005e7a:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 8005e7e:	6833      	ldr	r3, [r6, #0]
 8005e80:	f1ba 0f01 	cmp.w	sl, #1
 8005e84:	bf0c      	ite	eq
 8005e86:	695c      	ldreq	r4, [r3, #20]
 8005e88:	699c      	ldrne	r4, [r3, #24]
 8005e8a:	ea27 0404 	bic.w	r4, r7, r4
 8005e8e:	b2a4      	uxth	r4, r4
 8005e90:	fab4 f484 	clz	r4, r4
 8005e94:	0964      	lsrs	r4, r4, #5
 8005e96:	45a1      	cmp	r9, r4
 8005e98:	d001      	beq.n	8005e9e <I2C_WaitOnFlagUntilTimeout+0x30>
  return HAL_OK;
 8005e9a:	2000      	movs	r0, #0
 8005e9c:	e017      	b.n	8005ece <I2C_WaitOnFlagUntilTimeout+0x60>
    if (Timeout != HAL_MAX_DELAY)
 8005e9e:	1c6a      	adds	r2, r5, #1
 8005ea0:	d0ee      	beq.n	8005e80 <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8005ea2:	f7ff fae9 	bl	8005478 <HAL_GetTick>
 8005ea6:	9b08      	ldr	r3, [sp, #32]
 8005ea8:	1ac0      	subs	r0, r0, r3
 8005eaa:	42a8      	cmp	r0, r5
 8005eac:	d801      	bhi.n	8005eb2 <I2C_WaitOnFlagUntilTimeout+0x44>
 8005eae:	2d00      	cmp	r5, #0
 8005eb0:	d1e5      	bne.n	8005e7e <I2C_WaitOnFlagUntilTimeout+0x10>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8005eb2:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8005eb4:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8005eb6:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8005eb8:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8005ebc:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8005ec0:	6c32      	ldr	r2, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8005ec2:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8005ec6:	f042 0220 	orr.w	r2, r2, #32
 8005eca:	6432      	str	r2, [r6, #64]	; 0x40
        return HAL_ERROR;
 8005ecc:	2001      	movs	r0, #1
}
 8005ece:	e8bd 86f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r9, sl, pc}

08005ed2 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
{
 8005ed2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005ed6:	4604      	mov	r4, r0
 8005ed8:	460f      	mov	r7, r1
 8005eda:	4616      	mov	r6, r2
 8005edc:	4698      	mov	r8, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8005ede:	6825      	ldr	r5, [r4, #0]
 8005ee0:	6968      	ldr	r0, [r5, #20]
 8005ee2:	ea27 0000 	bic.w	r0, r7, r0
 8005ee6:	b280      	uxth	r0, r0
 8005ee8:	b1b8      	cbz	r0, 8005f1a <I2C_WaitOnMasterAddressFlagUntilTimeout+0x48>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8005eea:	696b      	ldr	r3, [r5, #20]
 8005eec:	055a      	lsls	r2, r3, #21
 8005eee:	d516      	bpl.n	8005f1e <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4c>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005ef0:	682b      	ldr	r3, [r5, #0]
 8005ef2:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8005ef6:	602b      	str	r3, [r5, #0]
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8005ef8:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 8005efc:	616b      	str	r3, [r5, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8005efe:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8005f00:	2300      	movs	r3, #0
 8005f02:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8005f04:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8005f08:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8005f0c:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8005f0e:	f042 0204 	orr.w	r2, r2, #4
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8005f12:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8005f14:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        return HAL_ERROR;
 8005f18:	2001      	movs	r0, #1
}
 8005f1a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (Timeout != HAL_MAX_DELAY)
 8005f1e:	1c73      	adds	r3, r6, #1
 8005f20:	d0de      	beq.n	8005ee0 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8005f22:	f7ff faa9 	bl	8005478 <HAL_GetTick>
 8005f26:	eba0 0008 	sub.w	r0, r0, r8
 8005f2a:	42b0      	cmp	r0, r6
 8005f2c:	d801      	bhi.n	8005f32 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x60>
 8005f2e:	2e00      	cmp	r6, #0
 8005f30:	d1d5      	bne.n	8005ede <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8005f32:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8005f34:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8005f36:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8005f38:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8005f3c:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8005f40:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8005f42:	f042 0220 	orr.w	r2, r2, #32
 8005f46:	e7e4      	b.n	8005f12 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x40>

08005f48 <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 8005f48:	b570      	push	{r4, r5, r6, lr}
 8005f4a:	4604      	mov	r4, r0
 8005f4c:	460d      	mov	r5, r1
 8005f4e:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8005f50:	6821      	ldr	r1, [r4, #0]
 8005f52:	694b      	ldr	r3, [r1, #20]
 8005f54:	f013 0340 	ands.w	r3, r3, #64	; 0x40
 8005f58:	d001      	beq.n	8005f5e <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
  return HAL_OK;
 8005f5a:	2000      	movs	r0, #0
 8005f5c:	e010      	b.n	8005f80 <I2C_WaitOnRXNEFlagUntilTimeout+0x38>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8005f5e:	694a      	ldr	r2, [r1, #20]
 8005f60:	06d2      	lsls	r2, r2, #27
 8005f62:	d50e      	bpl.n	8005f82 <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8005f64:	f06f 0210 	mvn.w	r2, #16
 8005f68:	614a      	str	r2, [r1, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8005f6a:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8005f6c:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8005f6e:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8005f72:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 8005f76:	6c22      	ldr	r2, [r4, #64]	; 0x40
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8005f78:	6422      	str	r2, [r4, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 8005f7a:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
      return HAL_ERROR;
 8005f7e:	2001      	movs	r0, #1
}
 8005f80:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8005f82:	f7ff fa79 	bl	8005478 <HAL_GetTick>
 8005f86:	1b80      	subs	r0, r0, r6
 8005f88:	42a8      	cmp	r0, r5
 8005f8a:	d801      	bhi.n	8005f90 <I2C_WaitOnRXNEFlagUntilTimeout+0x48>
 8005f8c:	2d00      	cmp	r5, #0
 8005f8e:	d1df      	bne.n	8005f50 <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
      hi2c->PreviousState       = I2C_STATE_NONE;
 8005f90:	2300      	movs	r3, #0
      hi2c->State               = HAL_I2C_STATE_READY;
 8005f92:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8005f94:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8005f96:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8005f9a:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8005f9e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8005fa0:	f042 0220 	orr.w	r2, r2, #32
 8005fa4:	e7e8      	b.n	8005f78 <I2C_WaitOnRXNEFlagUntilTimeout+0x30>

08005fa6 <I2C_WaitOnBTFFlagUntilTimeout>:
{
 8005fa6:	b570      	push	{r4, r5, r6, lr}
 8005fa8:	4604      	mov	r4, r0
 8005faa:	460d      	mov	r5, r1
 8005fac:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8005fae:	6823      	ldr	r3, [r4, #0]
 8005fb0:	695b      	ldr	r3, [r3, #20]
 8005fb2:	075b      	lsls	r3, r3, #29
 8005fb4:	d501      	bpl.n	8005fba <I2C_WaitOnBTFFlagUntilTimeout+0x14>
  return HAL_OK;
 8005fb6:	2000      	movs	r0, #0
}
 8005fb8:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8005fba:	4620      	mov	r0, r4
 8005fbc:	f7ff ff3d 	bl	8005e3a <I2C_IsAcknowledgeFailed>
 8005fc0:	b9a8      	cbnz	r0, 8005fee <I2C_WaitOnBTFFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 8005fc2:	1c6a      	adds	r2, r5, #1
 8005fc4:	d0f3      	beq.n	8005fae <I2C_WaitOnBTFFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8005fc6:	f7ff fa57 	bl	8005478 <HAL_GetTick>
 8005fca:	1b80      	subs	r0, r0, r6
 8005fcc:	42a8      	cmp	r0, r5
 8005fce:	d801      	bhi.n	8005fd4 <I2C_WaitOnBTFFlagUntilTimeout+0x2e>
 8005fd0:	2d00      	cmp	r5, #0
 8005fd2:	d1ec      	bne.n	8005fae <I2C_WaitOnBTFFlagUntilTimeout+0x8>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8005fd4:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8005fd6:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8005fd8:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8005fda:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8005fde:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8005fe2:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8005fe4:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8005fe8:	f042 0220 	orr.w	r2, r2, #32
 8005fec:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 8005fee:	2001      	movs	r0, #1
 8005ff0:	e7e2      	b.n	8005fb8 <I2C_WaitOnBTFFlagUntilTimeout+0x12>

08005ff2 <I2C_WaitOnTXEFlagUntilTimeout>:
{
 8005ff2:	b570      	push	{r4, r5, r6, lr}
 8005ff4:	4604      	mov	r4, r0
 8005ff6:	460d      	mov	r5, r1
 8005ff8:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8005ffa:	6823      	ldr	r3, [r4, #0]
 8005ffc:	695b      	ldr	r3, [r3, #20]
 8005ffe:	061b      	lsls	r3, r3, #24
 8006000:	d501      	bpl.n	8006006 <I2C_WaitOnTXEFlagUntilTimeout+0x14>
  return HAL_OK;
 8006002:	2000      	movs	r0, #0
}
 8006004:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8006006:	4620      	mov	r0, r4
 8006008:	f7ff ff17 	bl	8005e3a <I2C_IsAcknowledgeFailed>
 800600c:	b9a8      	cbnz	r0, 800603a <I2C_WaitOnTXEFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 800600e:	1c6a      	adds	r2, r5, #1
 8006010:	d0f3      	beq.n	8005ffa <I2C_WaitOnTXEFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8006012:	f7ff fa31 	bl	8005478 <HAL_GetTick>
 8006016:	1b80      	subs	r0, r0, r6
 8006018:	42a8      	cmp	r0, r5
 800601a:	d801      	bhi.n	8006020 <I2C_WaitOnTXEFlagUntilTimeout+0x2e>
 800601c:	2d00      	cmp	r5, #0
 800601e:	d1ec      	bne.n	8005ffa <I2C_WaitOnTXEFlagUntilTimeout+0x8>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8006020:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8006022:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8006024:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8006026:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800602a:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800602e:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8006030:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8006034:	f042 0220 	orr.w	r2, r2, #32
 8006038:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 800603a:	2001      	movs	r0, #1
 800603c:	e7e2      	b.n	8006004 <I2C_WaitOnTXEFlagUntilTimeout+0x12>
	...

08006040 <I2C_RequestMemoryWrite>:
{
 8006040:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8006044:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8006046:	6802      	ldr	r2, [r0, #0]
{
 8006048:	b085      	sub	sp, #20
 800604a:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
 800604e:	4699      	mov	r9, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8006050:	6813      	ldr	r3, [r2, #0]
 8006052:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8006056:	6013      	str	r3, [r2, #0]
{
 8006058:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800605a:	463b      	mov	r3, r7
 800605c:	f8cd 8000 	str.w	r8, [sp]
 8006060:	2200      	movs	r2, #0
 8006062:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 8006066:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8006068:	f7ff ff01 	bl	8005e6e <I2C_WaitOnFlagUntilTimeout>
 800606c:	6823      	ldr	r3, [r4, #0]
 800606e:	b138      	cbz	r0, 8006080 <I2C_RequestMemoryWrite+0x40>
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 8006070:	681b      	ldr	r3, [r3, #0]
 8006072:	05db      	lsls	r3, r3, #23
 8006074:	d502      	bpl.n	800607c <I2C_RequestMemoryWrite+0x3c>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8006076:	f44f 7300 	mov.w	r3, #512	; 0x200
 800607a:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 800607c:	2003      	movs	r0, #3
 800607e:	e00a      	b.n	8006096 <I2C_RequestMemoryWrite+0x56>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8006080:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 8006084:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8006086:	4919      	ldr	r1, [pc, #100]	; (80060ec <I2C_RequestMemoryWrite+0xac>)
 8006088:	4643      	mov	r3, r8
 800608a:	463a      	mov	r2, r7
 800608c:	4620      	mov	r0, r4
 800608e:	f7ff ff20 	bl	8005ed2 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8006092:	b118      	cbz	r0, 800609c <I2C_RequestMemoryWrite+0x5c>
      return HAL_ERROR;
 8006094:	2001      	movs	r0, #1
}
 8006096:	b005      	add	sp, #20
 8006098:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800609c:	6823      	ldr	r3, [r4, #0]
 800609e:	9003      	str	r0, [sp, #12]
 80060a0:	695a      	ldr	r2, [r3, #20]
 80060a2:	9203      	str	r2, [sp, #12]
 80060a4:	699b      	ldr	r3, [r3, #24]
 80060a6:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80060a8:	4642      	mov	r2, r8
 80060aa:	4639      	mov	r1, r7
 80060ac:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80060ae:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80060b0:	f7ff ff9f 	bl	8005ff2 <I2C_WaitOnTXEFlagUntilTimeout>
 80060b4:	b140      	cbz	r0, 80060c8 <I2C_RequestMemoryWrite+0x88>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80060b6:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80060b8:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80060ba:	bf01      	itttt	eq
 80060bc:	6822      	ldreq	r2, [r4, #0]
 80060be:	6813      	ldreq	r3, [r2, #0]
 80060c0:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 80060c4:	6013      	streq	r3, [r2, #0]
 80060c6:	e7e5      	b.n	8006094 <I2C_RequestMemoryWrite+0x54>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80060c8:	f1b9 0f01 	cmp.w	r9, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80060cc:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80060ce:	d102      	bne.n	80060d6 <I2C_RequestMemoryWrite+0x96>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80060d0:	b2ed      	uxtb	r5, r5
 80060d2:	611d      	str	r5, [r3, #16]
 80060d4:	e7df      	b.n	8006096 <I2C_RequestMemoryWrite+0x56>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 80060d6:	0a2a      	lsrs	r2, r5, #8
 80060d8:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80060da:	4639      	mov	r1, r7
 80060dc:	4642      	mov	r2, r8
 80060de:	4620      	mov	r0, r4
 80060e0:	f7ff ff87 	bl	8005ff2 <I2C_WaitOnTXEFlagUntilTimeout>
 80060e4:	2800      	cmp	r0, #0
 80060e6:	d1e6      	bne.n	80060b6 <I2C_RequestMemoryWrite+0x76>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80060e8:	6823      	ldr	r3, [r4, #0]
 80060ea:	e7f1      	b.n	80060d0 <I2C_RequestMemoryWrite+0x90>
 80060ec:	00010002 	.word	0x00010002

080060f0 <I2C_RequestMemoryRead>:
{
 80060f0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80060f4:	469a      	mov	sl, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80060f6:	6803      	ldr	r3, [r0, #0]
{
 80060f8:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80060fa:	681a      	ldr	r2, [r3, #0]
 80060fc:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8006100:	601a      	str	r2, [r3, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8006102:	681a      	ldr	r2, [r3, #0]
{
 8006104:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8006108:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800610c:	601a      	str	r2, [r3, #0]
{
 800610e:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8006110:	463b      	mov	r3, r7
 8006112:	f8cd 8000 	str.w	r8, [sp]
 8006116:	2200      	movs	r2, #0
 8006118:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 800611c:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800611e:	f7ff fea6 	bl	8005e6e <I2C_WaitOnFlagUntilTimeout>
 8006122:	6823      	ldr	r3, [r4, #0]
 8006124:	b148      	cbz	r0, 800613a <I2C_RequestMemoryRead+0x4a>
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 8006126:	681b      	ldr	r3, [r3, #0]
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 8006128:	05db      	lsls	r3, r3, #23
 800612a:	d502      	bpl.n	8006132 <I2C_RequestMemoryRead+0x42>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800612c:	f44f 7300 	mov.w	r3, #512	; 0x200
 8006130:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 8006132:	2003      	movs	r0, #3
}
 8006134:	b004      	add	sp, #16
 8006136:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800613a:	fa5f f986 	uxtb.w	r9, r6
 800613e:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 8006142:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8006144:	492a      	ldr	r1, [pc, #168]	; (80061f0 <I2C_RequestMemoryRead+0x100>)
 8006146:	4643      	mov	r3, r8
 8006148:	463a      	mov	r2, r7
 800614a:	4620      	mov	r0, r4
 800614c:	f7ff fec1 	bl	8005ed2 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8006150:	b108      	cbz	r0, 8006156 <I2C_RequestMemoryRead+0x66>
    return HAL_ERROR;
 8006152:	2001      	movs	r0, #1
 8006154:	e7ee      	b.n	8006134 <I2C_RequestMemoryRead+0x44>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006156:	6823      	ldr	r3, [r4, #0]
 8006158:	9003      	str	r0, [sp, #12]
 800615a:	695a      	ldr	r2, [r3, #20]
 800615c:	9203      	str	r2, [sp, #12]
 800615e:	699b      	ldr	r3, [r3, #24]
 8006160:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006162:	4642      	mov	r2, r8
 8006164:	4639      	mov	r1, r7
 8006166:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006168:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800616a:	f7ff ff42 	bl	8005ff2 <I2C_WaitOnTXEFlagUntilTimeout>
 800616e:	b140      	cbz	r0, 8006182 <I2C_RequestMemoryRead+0x92>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8006170:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8006172:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006174:	bf01      	itttt	eq
 8006176:	6822      	ldreq	r2, [r4, #0]
 8006178:	6813      	ldreq	r3, [r2, #0]
 800617a:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 800617e:	6013      	streq	r3, [r2, #0]
 8006180:	e7e7      	b.n	8006152 <I2C_RequestMemoryRead+0x62>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8006182:	f1ba 0f01 	cmp.w	sl, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006186:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8006188:	d11a      	bne.n	80061c0 <I2C_RequestMemoryRead+0xd0>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800618a:	b2ed      	uxtb	r5, r5
 800618c:	611d      	str	r5, [r3, #16]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800618e:	4642      	mov	r2, r8
 8006190:	4639      	mov	r1, r7
 8006192:	4620      	mov	r0, r4
 8006194:	f7ff ff2d 	bl	8005ff2 <I2C_WaitOnTXEFlagUntilTimeout>
 8006198:	2800      	cmp	r0, #0
 800619a:	d1e9      	bne.n	8006170 <I2C_RequestMemoryRead+0x80>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800619c:	6822      	ldr	r2, [r4, #0]
 800619e:	6813      	ldr	r3, [r2, #0]
 80061a0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80061a4:	6013      	str	r3, [r2, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80061a6:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 80061aa:	4602      	mov	r2, r0
 80061ac:	f8cd 8000 	str.w	r8, [sp]
 80061b0:	463b      	mov	r3, r7
 80061b2:	4620      	mov	r0, r4
 80061b4:	f7ff fe5b 	bl	8005e6e <I2C_WaitOnFlagUntilTimeout>
 80061b8:	6822      	ldr	r2, [r4, #0]
 80061ba:	b160      	cbz	r0, 80061d6 <I2C_RequestMemoryRead+0xe6>
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 80061bc:	6813      	ldr	r3, [r2, #0]
 80061be:	e7b3      	b.n	8006128 <I2C_RequestMemoryRead+0x38>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 80061c0:	0a2a      	lsrs	r2, r5, #8
 80061c2:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80061c4:	4639      	mov	r1, r7
 80061c6:	4642      	mov	r2, r8
 80061c8:	4620      	mov	r0, r4
 80061ca:	f7ff ff12 	bl	8005ff2 <I2C_WaitOnTXEFlagUntilTimeout>
 80061ce:	2800      	cmp	r0, #0
 80061d0:	d1ce      	bne.n	8006170 <I2C_RequestMemoryRead+0x80>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80061d2:	6823      	ldr	r3, [r4, #0]
 80061d4:	e7d9      	b.n	800618a <I2C_RequestMemoryRead+0x9a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 80061d6:	f049 0301 	orr.w	r3, r9, #1
 80061da:	6113      	str	r3, [r2, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 80061dc:	4904      	ldr	r1, [pc, #16]	; (80061f0 <I2C_RequestMemoryRead+0x100>)
 80061de:	4643      	mov	r3, r8
 80061e0:	463a      	mov	r2, r7
 80061e2:	4620      	mov	r0, r4
 80061e4:	f7ff fe75 	bl	8005ed2 <I2C_WaitOnMasterAddressFlagUntilTimeout>
    return HAL_TIMEOUT;
 80061e8:	3800      	subs	r0, #0
 80061ea:	bf18      	it	ne
 80061ec:	2001      	movne	r0, #1
 80061ee:	e7a1      	b.n	8006134 <I2C_RequestMemoryRead+0x44>
 80061f0:	00010002 	.word	0x00010002

080061f4 <HAL_I2C_Init>:
{
 80061f4:	b570      	push	{r4, r5, r6, lr}
  if (hi2c == NULL)
 80061f6:	4604      	mov	r4, r0
 80061f8:	b908      	cbnz	r0, 80061fe <HAL_I2C_Init+0xa>
    return HAL_ERROR;
 80061fa:	2001      	movs	r0, #1
}
 80061fc:	bd70      	pop	{r4, r5, r6, pc}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 80061fe:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8006202:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006206:	b91b      	cbnz	r3, 8006210 <HAL_I2C_Init+0x1c>
    hi2c->Lock = HAL_UNLOCKED;
 8006208:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 800620c:	f7fb fca0 	bl	8001b50 <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 8006210:	2324      	movs	r3, #36	; 0x24
 8006212:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 8006216:	6823      	ldr	r3, [r4, #0]
 8006218:	681a      	ldr	r2, [r3, #0]
 800621a:	f022 0201 	bic.w	r2, r2, #1
 800621e:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 8006220:	681a      	ldr	r2, [r3, #0]
 8006222:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8006226:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 8006228:	681a      	ldr	r2, [r3, #0]
 800622a:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800622e:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 8006230:	f000 fe6e 	bl	8006f10 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8006234:	4b3f      	ldr	r3, [pc, #252]	; (8006334 <HAL_I2C_Init+0x140>)
 8006236:	6865      	ldr	r5, [r4, #4]
 8006238:	429d      	cmp	r5, r3
 800623a:	bf94      	ite	ls
 800623c:	4b3e      	ldrls	r3, [pc, #248]	; (8006338 <HAL_I2C_Init+0x144>)
 800623e:	4b3f      	ldrhi	r3, [pc, #252]	; (800633c <HAL_I2C_Init+0x148>)
 8006240:	4298      	cmp	r0, r3
 8006242:	bf8c      	ite	hi
 8006244:	2300      	movhi	r3, #0
 8006246:	2301      	movls	r3, #1
 8006248:	2b00      	cmp	r3, #0
 800624a:	d1d6      	bne.n	80061fa <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800624c:	6822      	ldr	r2, [r4, #0]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800624e:	4e39      	ldr	r6, [pc, #228]	; (8006334 <HAL_I2C_Init+0x140>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8006250:	6853      	ldr	r3, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 8006252:	493b      	ldr	r1, [pc, #236]	; (8006340 <HAL_I2C_Init+0x14c>)
 8006254:	fbb0 f1f1 	udiv	r1, r0, r1
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8006258:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 800625c:	430b      	orrs	r3, r1
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800625e:	42b5      	cmp	r5, r6
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8006260:	6053      	str	r3, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8006262:	bf88      	it	hi
 8006264:	f44f 7696 	movhi.w	r6, #300	; 0x12c
 8006268:	6a13      	ldr	r3, [r2, #32]
 800626a:	bf88      	it	hi
 800626c:	4371      	mulhi	r1, r6
 800626e:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8006272:	bf84      	itt	hi
 8006274:	f44f 767a 	movhi.w	r6, #1000	; 0x3e8
 8006278:	fbb1 f1f6 	udivhi	r1, r1, r6
 800627c:	3101      	adds	r1, #1
 800627e:	4319      	orrs	r1, r3
 8006280:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8006282:	69d1      	ldr	r1, [r2, #28]
 8006284:	1e43      	subs	r3, r0, #1
 8006286:	482b      	ldr	r0, [pc, #172]	; (8006334 <HAL_I2C_Init+0x140>)
 8006288:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 800628c:	4285      	cmp	r5, r0
 800628e:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8006292:	d832      	bhi.n	80062fa <HAL_I2C_Init+0x106>
 8006294:	006d      	lsls	r5, r5, #1
 8006296:	f640 70fc 	movw	r0, #4092	; 0xffc
 800629a:	fbb3 f3f5 	udiv	r3, r3, r5
 800629e:	3301      	adds	r3, #1
 80062a0:	4203      	tst	r3, r0
 80062a2:	d042      	beq.n	800632a <HAL_I2C_Init+0x136>
 80062a4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80062a8:	430b      	orrs	r3, r1
 80062aa:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 80062ac:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 80062b0:	6811      	ldr	r1, [r2, #0]
 80062b2:	4303      	orrs	r3, r0
 80062b4:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 80062b8:	430b      	orrs	r3, r1
 80062ba:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 80062bc:	6891      	ldr	r1, [r2, #8]
 80062be:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 80062c2:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 80062c6:	4303      	orrs	r3, r0
 80062c8:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 80062cc:	430b      	orrs	r3, r1
 80062ce:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 80062d0:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 80062d4:	68d1      	ldr	r1, [r2, #12]
 80062d6:	4303      	orrs	r3, r0
 80062d8:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 80062dc:	430b      	orrs	r3, r1
 80062de:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 80062e0:	6813      	ldr	r3, [r2, #0]
 80062e2:	f043 0301 	orr.w	r3, r3, #1
 80062e6:	6013      	str	r3, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80062e8:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 80062ea:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80062ec:	6420      	str	r0, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 80062ee:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 80062f2:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 80062f4:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
  return HAL_OK;
 80062f8:	e780      	b.n	80061fc <HAL_I2C_Init+0x8>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 80062fa:	68a0      	ldr	r0, [r4, #8]
 80062fc:	b950      	cbnz	r0, 8006314 <HAL_I2C_Init+0x120>
 80062fe:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8006302:	fbb3 f3f5 	udiv	r3, r3, r5
 8006306:	3301      	adds	r3, #1
 8006308:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800630c:	b17b      	cbz	r3, 800632e <HAL_I2C_Init+0x13a>
 800630e:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8006312:	e7c9      	b.n	80062a8 <HAL_I2C_Init+0xb4>
 8006314:	2019      	movs	r0, #25
 8006316:	4345      	muls	r5, r0
 8006318:	fbb3 f3f5 	udiv	r3, r3, r5
 800631c:	3301      	adds	r3, #1
 800631e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8006322:	b123      	cbz	r3, 800632e <HAL_I2C_Init+0x13a>
 8006324:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8006328:	e7be      	b.n	80062a8 <HAL_I2C_Init+0xb4>
 800632a:	2304      	movs	r3, #4
 800632c:	e7bc      	b.n	80062a8 <HAL_I2C_Init+0xb4>
 800632e:	2301      	movs	r3, #1
 8006330:	e7ba      	b.n	80062a8 <HAL_I2C_Init+0xb4>
 8006332:	bf00      	nop
 8006334:	000186a0 	.word	0x000186a0
 8006338:	001e847f 	.word	0x001e847f
 800633c:	003d08ff 	.word	0x003d08ff
 8006340:	000f4240 	.word	0x000f4240

08006344 <HAL_I2C_Mem_Write>:
{
 8006344:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8006348:	4604      	mov	r4, r0
 800634a:	4699      	mov	r9, r3
 800634c:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 800634e:	460f      	mov	r7, r1
 8006350:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8006352:	f7ff f891 	bl	8005478 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8006356:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800635a:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 800635c:	4605      	mov	r5, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800635e:	d003      	beq.n	8006368 <HAL_I2C_Mem_Write+0x24>
    return HAL_BUSY;
 8006360:	2002      	movs	r0, #2
}
 8006362:	b003      	add	sp, #12
 8006364:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8006368:	9000      	str	r0, [sp, #0]
 800636a:	493c      	ldr	r1, [pc, #240]	; (800645c <HAL_I2C_Mem_Write+0x118>)
 800636c:	2319      	movs	r3, #25
 800636e:	2201      	movs	r2, #1
 8006370:	4620      	mov	r0, r4
 8006372:	f7ff fd7c 	bl	8005e6e <I2C_WaitOnFlagUntilTimeout>
 8006376:	2800      	cmp	r0, #0
 8006378:	d1f2      	bne.n	8006360 <HAL_I2C_Mem_Write+0x1c>
    __HAL_LOCK(hi2c);
 800637a:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800637e:	2b01      	cmp	r3, #1
 8006380:	d0ee      	beq.n	8006360 <HAL_I2C_Mem_Write+0x1c>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8006382:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8006384:	2301      	movs	r3, #1
 8006386:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800638a:	6803      	ldr	r3, [r0, #0]
 800638c:	07d9      	lsls	r1, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 800638e:	bf5e      	ittt	pl
 8006390:	6803      	ldrpl	r3, [r0, #0]
 8006392:	f043 0301 	orrpl.w	r3, r3, #1
 8006396:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8006398:	6803      	ldr	r3, [r0, #0]
 800639a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800639e:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 80063a0:	2321      	movs	r3, #33	; 0x21
 80063a2:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 80063a6:	2340      	movs	r3, #64	; 0x40
 80063a8:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80063ac:	2300      	movs	r3, #0
 80063ae:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 80063b0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80063b2:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 80063b4:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 80063b8:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 80063ba:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80063bc:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 80063be:	4b28      	ldr	r3, [pc, #160]	; (8006460 <HAL_I2C_Mem_Write+0x11c>)
 80063c0:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 80063c2:	e9cd 6500 	strd	r6, r5, [sp]
 80063c6:	464b      	mov	r3, r9
 80063c8:	4642      	mov	r2, r8
 80063ca:	4639      	mov	r1, r7
 80063cc:	4620      	mov	r0, r4
 80063ce:	f7ff fe37 	bl	8006040 <I2C_RequestMemoryWrite>
 80063d2:	2800      	cmp	r0, #0
 80063d4:	d02a      	beq.n	800642c <HAL_I2C_Mem_Write+0xe8>
      return HAL_ERROR;
 80063d6:	2001      	movs	r0, #1
 80063d8:	e7c3      	b.n	8006362 <HAL_I2C_Mem_Write+0x1e>
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80063da:	f7ff fe0a 	bl	8005ff2 <I2C_WaitOnTXEFlagUntilTimeout>
 80063de:	b140      	cbz	r0, 80063f2 <HAL_I2C_Mem_Write+0xae>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80063e0:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80063e2:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80063e4:	bf01      	itttt	eq
 80063e6:	6822      	ldreq	r2, [r4, #0]
 80063e8:	6813      	ldreq	r3, [r2, #0]
 80063ea:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 80063ee:	6013      	streq	r3, [r2, #0]
 80063f0:	e7f1      	b.n	80063d6 <HAL_I2C_Mem_Write+0x92>
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 80063f2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80063f4:	6827      	ldr	r7, [r4, #0]
 80063f6:	461a      	mov	r2, r3
 80063f8:	f812 1b01 	ldrb.w	r1, [r2], #1
 80063fc:	6139      	str	r1, [r7, #16]
      hi2c->pBuffPtr++;
 80063fe:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 8006400:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 8006402:	8d21      	ldrh	r1, [r4, #40]	; 0x28
      hi2c->XferCount--;
 8006404:	3a01      	subs	r2, #1
 8006406:	b292      	uxth	r2, r2
 8006408:	8562      	strh	r2, [r4, #42]	; 0x2a
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800640a:	697a      	ldr	r2, [r7, #20]
      hi2c->XferSize--;
 800640c:	1e48      	subs	r0, r1, #1
 800640e:	b280      	uxth	r0, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8006410:	0752      	lsls	r2, r2, #29
      hi2c->XferSize--;
 8006412:	8520      	strh	r0, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8006414:	d50a      	bpl.n	800642c <HAL_I2C_Mem_Write+0xe8>
 8006416:	b148      	cbz	r0, 800642c <HAL_I2C_Mem_Write+0xe8>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 8006418:	785a      	ldrb	r2, [r3, #1]
 800641a:	613a      	str	r2, [r7, #16]
        hi2c->pBuffPtr++;
 800641c:	3302      	adds	r3, #2
 800641e:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferCount--;
 8006420:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006422:	3b01      	subs	r3, #1
        hi2c->XferSize--;
 8006424:	3902      	subs	r1, #2
        hi2c->XferCount--;
 8006426:	b29b      	uxth	r3, r3
        hi2c->XferSize--;
 8006428:	8521      	strh	r1, [r4, #40]	; 0x28
        hi2c->XferCount--;
 800642a:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 800642c:	8d23      	ldrh	r3, [r4, #40]	; 0x28
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800642e:	462a      	mov	r2, r5
 8006430:	4631      	mov	r1, r6
 8006432:	4620      	mov	r0, r4
    while (hi2c->XferSize > 0U)
 8006434:	2b00      	cmp	r3, #0
 8006436:	d1d0      	bne.n	80063da <HAL_I2C_Mem_Write+0x96>
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8006438:	f7ff fdb5 	bl	8005fa6 <I2C_WaitOnBTFFlagUntilTimeout>
 800643c:	2800      	cmp	r0, #0
 800643e:	d1cf      	bne.n	80063e0 <HAL_I2C_Mem_Write+0x9c>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006440:	6822      	ldr	r2, [r4, #0]
 8006442:	6813      	ldr	r3, [r2, #0]
 8006444:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8006448:	6013      	str	r3, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800644a:	2320      	movs	r3, #32
 800644c:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8006450:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8006454:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    return HAL_OK;
 8006458:	e783      	b.n	8006362 <HAL_I2C_Mem_Write+0x1e>
 800645a:	bf00      	nop
 800645c:	00100002 	.word	0x00100002
 8006460:	ffff0000 	.word	0xffff0000

08006464 <HAL_I2C_Mem_Read>:
{
 8006464:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8006468:	4604      	mov	r4, r0
 800646a:	b087      	sub	sp, #28
 800646c:	4699      	mov	r9, r3
 800646e:	9f10      	ldr	r7, [sp, #64]	; 0x40
 8006470:	460d      	mov	r5, r1
 8006472:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8006474:	f7ff f800 	bl	8005478 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8006478:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800647c:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 800647e:	4606      	mov	r6, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8006480:	d004      	beq.n	800648c <HAL_I2C_Mem_Read+0x28>
    return HAL_BUSY;
 8006482:	2502      	movs	r5, #2
}
 8006484:	4628      	mov	r0, r5
 8006486:	b007      	add	sp, #28
 8006488:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 800648c:	9000      	str	r0, [sp, #0]
 800648e:	4976      	ldr	r1, [pc, #472]	; (8006668 <HAL_I2C_Mem_Read+0x204>)
 8006490:	2319      	movs	r3, #25
 8006492:	2201      	movs	r2, #1
 8006494:	4620      	mov	r0, r4
 8006496:	f7ff fcea 	bl	8005e6e <I2C_WaitOnFlagUntilTimeout>
 800649a:	2800      	cmp	r0, #0
 800649c:	d1f1      	bne.n	8006482 <HAL_I2C_Mem_Read+0x1e>
    __HAL_LOCK(hi2c);
 800649e:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 80064a2:	2b01      	cmp	r3, #1
 80064a4:	d0ed      	beq.n	8006482 <HAL_I2C_Mem_Read+0x1e>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 80064a6:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 80064a8:	2301      	movs	r3, #1
 80064aa:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 80064ae:	6803      	ldr	r3, [r0, #0]
 80064b0:	07db      	lsls	r3, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 80064b2:	bf5e      	ittt	pl
 80064b4:	6803      	ldrpl	r3, [r0, #0]
 80064b6:	f043 0301 	orrpl.w	r3, r3, #1
 80064ba:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 80064bc:	6803      	ldr	r3, [r0, #0]
 80064be:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80064c2:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 80064c4:	2322      	movs	r3, #34	; 0x22
 80064c6:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 80064ca:	2340      	movs	r3, #64	; 0x40
 80064cc:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80064d0:	2300      	movs	r3, #0
 80064d2:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 80064d4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80064d6:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 80064d8:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 80064dc:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 80064de:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80064e0:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 80064e2:	4b62      	ldr	r3, [pc, #392]	; (800666c <HAL_I2C_Mem_Read+0x208>)
 80064e4:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 80064e6:	4629      	mov	r1, r5
 80064e8:	e9cd 7600 	strd	r7, r6, [sp]
 80064ec:	464b      	mov	r3, r9
 80064ee:	4642      	mov	r2, r8
 80064f0:	4620      	mov	r0, r4
 80064f2:	f7ff fdfd 	bl	80060f0 <I2C_RequestMemoryRead>
 80064f6:	4605      	mov	r5, r0
 80064f8:	b108      	cbz	r0, 80064fe <HAL_I2C_Mem_Read+0x9a>
      return HAL_ERROR;
 80064fa:	2501      	movs	r5, #1
 80064fc:	e7c2      	b.n	8006484 <HAL_I2C_Mem_Read+0x20>
    if (hi2c->XferSize == 0U)
 80064fe:	8d22      	ldrh	r2, [r4, #40]	; 0x28
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006500:	6823      	ldr	r3, [r4, #0]
    if (hi2c->XferSize == 0U)
 8006502:	b9b2      	cbnz	r2, 8006532 <HAL_I2C_Mem_Read+0xce>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006504:	9002      	str	r0, [sp, #8]
 8006506:	695a      	ldr	r2, [r3, #20]
 8006508:	9202      	str	r2, [sp, #8]
 800650a:	699a      	ldr	r2, [r3, #24]
 800650c:	9202      	str	r2, [sp, #8]
 800650e:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006510:	681a      	ldr	r2, [r3, #0]
 8006512:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8006516:	601a      	str	r2, [r3, #0]
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8006518:	f8df 8154 	ldr.w	r8, [pc, #340]	; 8006670 <HAL_I2C_Mem_Read+0x20c>
    while (hi2c->XferSize > 0U)
 800651c:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800651e:	2b00      	cmp	r3, #0
 8006520:	d12c      	bne.n	800657c <HAL_I2C_Mem_Read+0x118>
    hi2c->State = HAL_I2C_STATE_READY;
 8006522:	2220      	movs	r2, #32
 8006524:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8006528:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800652c:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 8006530:	e7a8      	b.n	8006484 <HAL_I2C_Mem_Read+0x20>
    else if (hi2c->XferSize == 1U)
 8006532:	2a01      	cmp	r2, #1
 8006534:	d10a      	bne.n	800654c <HAL_I2C_Mem_Read+0xe8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8006536:	681a      	ldr	r2, [r3, #0]
 8006538:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800653c:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800653e:	9003      	str	r0, [sp, #12]
 8006540:	695a      	ldr	r2, [r3, #20]
 8006542:	9203      	str	r2, [sp, #12]
 8006544:	699a      	ldr	r2, [r3, #24]
 8006546:	9203      	str	r2, [sp, #12]
 8006548:	9a03      	ldr	r2, [sp, #12]
 800654a:	e7e1      	b.n	8006510 <HAL_I2C_Mem_Read+0xac>
    else if (hi2c->XferSize == 2U)
 800654c:	2a02      	cmp	r2, #2
 800654e:	d10e      	bne.n	800656e <HAL_I2C_Mem_Read+0x10a>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8006550:	681a      	ldr	r2, [r3, #0]
 8006552:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006556:	601a      	str	r2, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8006558:	681a      	ldr	r2, [r3, #0]
 800655a:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800655e:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006560:	9004      	str	r0, [sp, #16]
 8006562:	695a      	ldr	r2, [r3, #20]
 8006564:	9204      	str	r2, [sp, #16]
 8006566:	699b      	ldr	r3, [r3, #24]
 8006568:	9304      	str	r3, [sp, #16]
 800656a:	9b04      	ldr	r3, [sp, #16]
 800656c:	e7d4      	b.n	8006518 <HAL_I2C_Mem_Read+0xb4>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800656e:	9005      	str	r0, [sp, #20]
 8006570:	695a      	ldr	r2, [r3, #20]
 8006572:	9205      	str	r2, [sp, #20]
 8006574:	699b      	ldr	r3, [r3, #24]
 8006576:	9305      	str	r3, [sp, #20]
 8006578:	9b05      	ldr	r3, [sp, #20]
 800657a:	e7cd      	b.n	8006518 <HAL_I2C_Mem_Read+0xb4>
      if (hi2c->XferSize <= 3U)
 800657c:	2b03      	cmp	r3, #3
 800657e:	d856      	bhi.n	800662e <HAL_I2C_Mem_Read+0x1ca>
        if (hi2c->XferSize == 1U)
 8006580:	2b01      	cmp	r3, #1
 8006582:	d115      	bne.n	80065b0 <HAL_I2C_Mem_Read+0x14c>
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8006584:	4632      	mov	r2, r6
 8006586:	4639      	mov	r1, r7
 8006588:	4620      	mov	r0, r4
 800658a:	f7ff fcdd 	bl	8005f48 <I2C_WaitOnRXNEFlagUntilTimeout>
 800658e:	2800      	cmp	r0, #0
 8006590:	d1b3      	bne.n	80064fa <HAL_I2C_Mem_Read+0x96>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8006592:	6823      	ldr	r3, [r4, #0]
 8006594:	691a      	ldr	r2, [r3, #16]
 8006596:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006598:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800659a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800659c:	3301      	adds	r3, #1
 800659e:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 80065a0:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 80065a2:	3b01      	subs	r3, #1
 80065a4:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 80065a6:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80065a8:	3b01      	subs	r3, #1
 80065aa:	b29b      	uxth	r3, r3
 80065ac:	8563      	strh	r3, [r4, #42]	; 0x2a
 80065ae:	e7b5      	b.n	800651c <HAL_I2C_Mem_Read+0xb8>
        else if (hi2c->XferSize == 2U)
 80065b0:	2b02      	cmp	r3, #2
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80065b2:	9600      	str	r6, [sp, #0]
 80065b4:	463b      	mov	r3, r7
 80065b6:	f04f 0200 	mov.w	r2, #0
 80065ba:	4641      	mov	r1, r8
 80065bc:	4620      	mov	r0, r4
        else if (hi2c->XferSize == 2U)
 80065be:	d119      	bne.n	80065f4 <HAL_I2C_Mem_Read+0x190>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80065c0:	f7ff fc55 	bl	8005e6e <I2C_WaitOnFlagUntilTimeout>
 80065c4:	2800      	cmp	r0, #0
 80065c6:	d198      	bne.n	80064fa <HAL_I2C_Mem_Read+0x96>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80065c8:	6823      	ldr	r3, [r4, #0]
 80065ca:	681a      	ldr	r2, [r3, #0]
 80065cc:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80065d0:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80065d2:	691a      	ldr	r2, [r3, #16]
 80065d4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80065d6:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 80065d8:	6a62      	ldr	r2, [r4, #36]	; 0x24
 80065da:	1c53      	adds	r3, r2, #1
 80065dc:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 80065de:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 80065e0:	3b01      	subs	r3, #1
 80065e2:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 80065e4:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80065e6:	3b01      	subs	r3, #1
 80065e8:	b29b      	uxth	r3, r3
 80065ea:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80065ec:	6823      	ldr	r3, [r4, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80065ee:	691b      	ldr	r3, [r3, #16]
 80065f0:	7053      	strb	r3, [r2, #1]
 80065f2:	e7d2      	b.n	800659a <HAL_I2C_Mem_Read+0x136>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80065f4:	f7ff fc3b 	bl	8005e6e <I2C_WaitOnFlagUntilTimeout>
 80065f8:	2800      	cmp	r0, #0
 80065fa:	f47f af7e 	bne.w	80064fa <HAL_I2C_Mem_Read+0x96>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80065fe:	6823      	ldr	r3, [r4, #0]
 8006600:	681a      	ldr	r2, [r3, #0]
 8006602:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006606:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8006608:	691a      	ldr	r2, [r3, #16]
 800660a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800660c:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800660e:	6a63      	ldr	r3, [r4, #36]	; 0x24
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8006610:	9600      	str	r6, [sp, #0]
          hi2c->pBuffPtr++;
 8006612:	3301      	adds	r3, #1
 8006614:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8006616:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8006618:	3b01      	subs	r3, #1
 800661a:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800661c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800661e:	3b01      	subs	r3, #1
 8006620:	b29b      	uxth	r3, r3
 8006622:	8563      	strh	r3, [r4, #42]	; 0x2a
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8006624:	4602      	mov	r2, r0
 8006626:	463b      	mov	r3, r7
 8006628:	4641      	mov	r1, r8
 800662a:	4620      	mov	r0, r4
 800662c:	e7c8      	b.n	80065c0 <HAL_I2C_Mem_Read+0x15c>
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800662e:	4632      	mov	r2, r6
 8006630:	4639      	mov	r1, r7
 8006632:	4620      	mov	r0, r4
 8006634:	f7ff fc88 	bl	8005f48 <I2C_WaitOnRXNEFlagUntilTimeout>
 8006638:	2800      	cmp	r0, #0
 800663a:	f47f af5e 	bne.w	80064fa <HAL_I2C_Mem_Read+0x96>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800663e:	6823      	ldr	r3, [r4, #0]
 8006640:	691a      	ldr	r2, [r3, #16]
 8006642:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006644:	701a      	strb	r2, [r3, #0]
        hi2c->pBuffPtr++;
 8006646:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8006648:	1c53      	adds	r3, r2, #1
 800664a:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferSize--;
 800664c:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800664e:	3b01      	subs	r3, #1
 8006650:	8523      	strh	r3, [r4, #40]	; 0x28
        hi2c->XferCount--;
 8006652:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006654:	3b01      	subs	r3, #1
 8006656:	b29b      	uxth	r3, r3
 8006658:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800665a:	6823      	ldr	r3, [r4, #0]
 800665c:	6959      	ldr	r1, [r3, #20]
 800665e:	0749      	lsls	r1, r1, #29
 8006660:	f57f af5c 	bpl.w	800651c <HAL_I2C_Mem_Read+0xb8>
 8006664:	e7c3      	b.n	80065ee <HAL_I2C_Mem_Read+0x18a>
 8006666:	bf00      	nop
 8006668:	00100002 	.word	0x00100002
 800666c:	ffff0000 	.word	0xffff0000
 8006670:	00010004 	.word	0x00010004

08006674 <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter new state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 8006674:	b510      	push	{r4, lr}
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8006676:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800667a:	2b20      	cmp	r3, #32
 800667c:	b2dc      	uxtb	r4, r3
 800667e:	d116      	bne.n	80066ae <HAL_I2CEx_ConfigAnalogFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;
 8006680:	2324      	movs	r3, #36	; 0x24
 8006682:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8006686:	6803      	ldr	r3, [r0, #0]
 8006688:	681a      	ldr	r2, [r3, #0]
 800668a:	f022 0201 	bic.w	r2, r2, #1
 800668e:	601a      	str	r2, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 8006690:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8006692:	f022 0210 	bic.w	r2, r2, #16
 8006696:	625a      	str	r2, [r3, #36]	; 0x24

    /* Disable the analog filter */
    hi2c->Instance->FLTR |= AnalogFilter;
 8006698:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800669a:	4311      	orrs	r1, r2
 800669c:	6259      	str	r1, [r3, #36]	; 0x24

    __HAL_I2C_ENABLE(hi2c);
 800669e:	681a      	ldr	r2, [r3, #0]
 80066a0:	f042 0201 	orr.w	r2, r2, #1
 80066a4:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 80066a6:	f880 403d 	strb.w	r4, [r0, #61]	; 0x3d

    return HAL_OK;
 80066aa:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 80066ac:	bd10      	pop	{r4, pc}
    return HAL_BUSY;
 80066ae:	2002      	movs	r0, #2
 80066b0:	e7fc      	b.n	80066ac <HAL_I2CEx_ConfigAnalogFilter+0x38>

080066b2 <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between 0x00 and 0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 80066b2:	b530      	push	{r4, r5, lr}

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 80066b4:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 80066b8:	2b20      	cmp	r3, #32
 80066ba:	b2dc      	uxtb	r4, r3
 80066bc:	d116      	bne.n	80066ec <HAL_I2CEx_ConfigDigitalFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 80066be:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 80066c0:	2324      	movs	r3, #36	; 0x24
 80066c2:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 80066c6:	6813      	ldr	r3, [r2, #0]
 80066c8:	f023 0301 	bic.w	r3, r3, #1
 80066cc:	6013      	str	r3, [r2, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->FLTR;
 80066ce:	6a55      	ldr	r5, [r2, #36]	; 0x24

    /* Reset I2Cx DNF bit [3:0] */
    tmpreg &= ~(I2C_FLTR_DNF);
 80066d0:	f64f 73f0 	movw	r3, #65520	; 0xfff0
 80066d4:	402b      	ands	r3, r5

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter;
 80066d6:	430b      	orrs	r3, r1

    /* Store the new register value */
    hi2c->Instance->FLTR = tmpreg;
 80066d8:	b29b      	uxth	r3, r3
 80066da:	6253      	str	r3, [r2, #36]	; 0x24

    __HAL_I2C_ENABLE(hi2c);
 80066dc:	6813      	ldr	r3, [r2, #0]
 80066de:	f043 0301 	orr.w	r3, r3, #1
 80066e2:	6013      	str	r3, [r2, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 80066e4:	f880 403d 	strb.w	r4, [r0, #61]	; 0x3d

    return HAL_OK;
 80066e8:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 80066ea:	bd30      	pop	{r4, r5, pc}
    return HAL_BUSY;
 80066ec:	2002      	movs	r0, #2
 80066ee:	e7fc      	b.n	80066ea <HAL_I2CEx_ConfigDigitalFilter+0x38>

080066f0 <LTDC_SetConfig>:
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 80066f0:	6800      	ldr	r0, [r0, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 80066f2:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 80066f6:	01d2      	lsls	r2, r2, #7
 80066f8:	3284      	adds	r2, #132	; 0x84
 80066fa:	1883      	adds	r3, r0, r2
{
 80066fc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8006700:	68c6      	ldr	r6, [r0, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8006702:	685d      	ldr	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8006704:	684c      	ldr	r4, [r1, #4]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 8006706:	f8d1 9018 	ldr.w	r9, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800670a:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 800670e:	605d      	str	r5, [r3, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8006710:	68c5      	ldr	r5, [r0, #12]
 8006712:	f10c 0701 	add.w	r7, ip, #1
 8006716:	f3c5 450b 	ubfx	r5, r5, #16, #12
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800671a:	f3c6 460b 	ubfx	r6, r6, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800671e:	443d      	add	r5, r7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8006720:	4426      	add	r6, r4
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8006722:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 8006726:	605d      	str	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 8006728:	68c5      	ldr	r5, [r0, #12]
 800672a:	68ce      	ldr	r6, [r1, #12]
 800672c:	f3c5 050a 	ubfx	r5, r5, #0, #11
 8006730:	442e      	add	r6, r5
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 8006732:	689d      	ldr	r5, [r3, #8]
 8006734:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 8006738:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800673a:	68c7      	ldr	r7, [r0, #12]
 800673c:	688d      	ldr	r5, [r1, #8]
 800673e:	f3c7 070a 	ubfx	r7, r7, #0, #11
 8006742:	3501      	adds	r5, #1
 8006744:	443d      	add	r5, r7
 8006746:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 800674a:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800674c:	691d      	ldr	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800674e:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8006750:	f025 0507 	bic.w	r5, r5, #7
 8006754:	611d      	str	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 8006756:	f04f 0e00 	mov.w	lr, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800675a:	611e      	str	r6, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 800675c:	699d      	ldr	r5, [r3, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 800675e:	f891 7032 	ldrb.w	r7, [r1, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 8006762:	f891 8031 	ldrb.w	r8, [r1, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 8006766:	f8c3 e018 	str.w	lr, [r3, #24]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 800676a:	f891 5030 	ldrb.w	r5, [r1, #48]	; 0x30
 800676e:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 8006772:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 8006776:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 800677a:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 800677c:	695d      	ldr	r5, [r3, #20]
 800677e:	f025 05ff 	bic.w	r5, r5, #255	; 0xff
 8006782:	615d      	str	r5, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 8006784:	694d      	ldr	r5, [r1, #20]
 8006786:	615d      	str	r5, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 8006788:	69dd      	ldr	r5, [r3, #28]
 800678a:	f425 65e0 	bic.w	r5, r5, #1792	; 0x700
 800678e:	f025 0507 	bic.w	r5, r5, #7
 8006792:	61dd      	str	r5, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 8006794:	e9d1 5707 	ldrd	r5, r7, [r1, #28]
 8006798:	433d      	orrs	r5, r7
 800679a:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800679c:	6a9d      	ldr	r5, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800679e:	6a4d      	ldr	r5, [r1, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 80067a0:	f8c3 e028 	str.w	lr, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 80067a4:	629d      	str	r5, [r3, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 80067a6:	b31e      	cbz	r6, 80067f0 <LTDC_SetConfig+0x100>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 80067a8:	2e01      	cmp	r6, #1
 80067aa:	d023      	beq.n	80067f4 <LTDC_SetConfig+0x104>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 80067ac:	1eb5      	subs	r5, r6, #2
 80067ae:	2d02      	cmp	r5, #2
 80067b0:	d922      	bls.n	80067f8 <LTDC_SetConfig+0x108>
  {
    tmp = 2U;
  }
  else
  {
    tmp = 1U;
 80067b2:	2e07      	cmp	r6, #7
 80067b4:	bf0c      	ite	eq
 80067b6:	2502      	moveq	r5, #2
 80067b8:	2501      	movne	r5, #1
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 80067ba:	6ade      	ldr	r6, [r3, #44]	; 0x2c
 80067bc:	f006 26e0 	and.w	r6, r6, #3758153728	; 0xe000e000
 80067c0:	62de      	str	r6, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 80067c2:	eba4 040c 	sub.w	r4, r4, ip
 80067c6:	6a8e      	ldr	r6, [r1, #40]	; 0x28
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 80067c8:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 80067ca:	436c      	muls	r4, r5
 80067cc:	436e      	muls	r6, r5
 80067ce:	3403      	adds	r4, #3
 80067d0:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
 80067d4:	62dc      	str	r4, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 80067d6:	6b1c      	ldr	r4, [r3, #48]	; 0x30
 80067d8:	f424 64ff 	bic.w	r4, r4, #2040	; 0x7f8
 80067dc:	f024 0407 	bic.w	r4, r4, #7
 80067e0:	631c      	str	r4, [r3, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 80067e2:	6319      	str	r1, [r3, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 80067e4:	5883      	ldr	r3, [r0, r2]
 80067e6:	f043 0301 	orr.w	r3, r3, #1
 80067ea:	5083      	str	r3, [r0, r2]
}
 80067ec:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    tmp = 4U;
 80067f0:	2504      	movs	r5, #4
 80067f2:	e7e2      	b.n	80067ba <LTDC_SetConfig+0xca>
    tmp = 3U;
 80067f4:	2503      	movs	r5, #3
 80067f6:	e7e0      	b.n	80067ba <LTDC_SetConfig+0xca>
    tmp = 2U;
 80067f8:	2502      	movs	r5, #2
 80067fa:	e7de      	b.n	80067ba <LTDC_SetConfig+0xca>

080067fc <HAL_LTDC_Init>:
{
 80067fc:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 80067fe:	4604      	mov	r4, r0
 8006800:	2800      	cmp	r0, #0
 8006802:	d063      	beq.n	80068cc <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 8006804:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 8006808:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800680c:	b91b      	cbnz	r3, 8006816 <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 800680e:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 8006812:	f7fb f9f9 	bl	8001c08 <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8006816:	2302      	movs	r3, #2
 8006818:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800681c:	6823      	ldr	r3, [r4, #0]
 800681e:	699a      	ldr	r2, [r3, #24]
 8006820:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 8006824:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8006826:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 800682a:	4302      	orrs	r2, r0
 800682c:	68e0      	ldr	r0, [r4, #12]
 800682e:	6999      	ldr	r1, [r3, #24]
 8006830:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 8006832:	6920      	ldr	r0, [r4, #16]
 8006834:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8006836:	430a      	orrs	r2, r1
 8006838:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800683a:	689a      	ldr	r2, [r3, #8]
 800683c:	4924      	ldr	r1, [pc, #144]	; (80068d0 <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 800683e:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8006840:	400a      	ands	r2, r1
 8006842:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 8006844:	689a      	ldr	r2, [r3, #8]
 8006846:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800684a:	69a0      	ldr	r0, [r4, #24]
 800684c:	4302      	orrs	r2, r0
 800684e:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8006850:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 8006852:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8006854:	400a      	ands	r2, r1
 8006856:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 8006858:	68da      	ldr	r2, [r3, #12]
 800685a:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800685e:	6a20      	ldr	r0, [r4, #32]
 8006860:	4302      	orrs	r2, r0
 8006862:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8006864:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 8006866:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8006868:	400a      	ands	r2, r1
 800686a:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 800686c:	691a      	ldr	r2, [r3, #16]
 800686e:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8006872:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8006874:	4302      	orrs	r2, r0
 8006876:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 8006878:	695a      	ldr	r2, [r3, #20]
 800687a:	4011      	ands	r1, r2
 800687c:	6159      	str	r1, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800687e:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 8006880:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8006882:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8006886:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8006888:	430a      	orrs	r2, r1
 800688a:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800688c:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 800688e:	f894 0036 	ldrb.w	r0, [r4, #54]	; 0x36
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 8006892:	f894 5035 	ldrb.w	r5, [r4, #53]	; 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8006896:	f001 417f 	and.w	r1, r1, #4278190080	; 0xff000000
 800689a:	62d9      	str	r1, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 800689c:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 800689e:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 80068a2:	430a      	orrs	r2, r1
 80068a4:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 80068a8:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80068ac:	62da      	str	r2, [r3, #44]	; 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 80068ae:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80068b0:	f042 0206 	orr.w	r2, r2, #6
 80068b4:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE(hltdc);
 80068b6:	699a      	ldr	r2, [r3, #24]
 80068b8:	f042 0201 	orr.w	r2, r2, #1
 80068bc:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 80068be:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 80068c0:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 80068c2:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 80068c6:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
}
 80068ca:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 80068cc:	2001      	movs	r0, #1
 80068ce:	e7fc      	b.n	80068ca <HAL_LTDC_Init+0xce>
 80068d0:	f000f800 	.word	0xf000f800

080068d4 <HAL_LTDC_ErrorCallback>:
 80068d4:	4770      	bx	lr

080068d6 <HAL_LTDC_ReloadEventCallback>:
 80068d6:	4770      	bx	lr

080068d8 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 80068d8:	6803      	ldr	r3, [r0, #0]
{
 80068da:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 80068dc:	6b9e      	ldr	r6, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 80068de:	6b5d      	ldr	r5, [r3, #52]	; 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 80068e0:	0772      	lsls	r2, r6, #29
{
 80068e2:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 80068e4:	d514      	bpl.n	8006910 <HAL_LTDC_IRQHandler+0x38>
 80068e6:	0769      	lsls	r1, r5, #29
 80068e8:	d512      	bpl.n	8006910 <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 80068ea:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80068ec:	f022 0204 	bic.w	r2, r2, #4
 80068f0:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 80068f2:	2204      	movs	r2, #4
 80068f4:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 80068f6:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 80068fa:	f043 0301 	orr.w	r3, r3, #1
 80068fe:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 8006902:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8006904:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8006908:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800690c:	f7ff ffe2 	bl	80068d4 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 8006910:	07b2      	lsls	r2, r6, #30
 8006912:	d516      	bpl.n	8006942 <HAL_LTDC_IRQHandler+0x6a>
 8006914:	07ab      	lsls	r3, r5, #30
 8006916:	d514      	bpl.n	8006942 <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 8006918:	6823      	ldr	r3, [r4, #0]
 800691a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800691c:	f022 0202 	bic.w	r2, r2, #2
 8006920:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 8006922:	2202      	movs	r2, #2
 8006924:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 8006926:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 800692a:	4313      	orrs	r3, r2
 800692c:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8006930:	2304      	movs	r3, #4
 8006932:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8006936:	2300      	movs	r3, #0
 8006938:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800693c:	4620      	mov	r0, r4
 800693e:	f7ff ffc9 	bl	80068d4 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 8006942:	07f0      	lsls	r0, r6, #31
 8006944:	d510      	bpl.n	8006968 <HAL_LTDC_IRQHandler+0x90>
 8006946:	07e9      	lsls	r1, r5, #31
 8006948:	d50e      	bpl.n	8006968 <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800694a:	6823      	ldr	r3, [r4, #0]
 800694c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800694e:	f022 0201 	bic.w	r2, r2, #1
 8006952:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 8006954:	2201      	movs	r2, #1
 8006956:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 8006958:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800695a:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800695e:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 8006962:	4620      	mov	r0, r4
 8006964:	f7fa fbd6 	bl	8001114 <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 8006968:	0732      	lsls	r2, r6, #28
 800696a:	d511      	bpl.n	8006990 <HAL_LTDC_IRQHandler+0xb8>
 800696c:	072b      	lsls	r3, r5, #28
 800696e:	d50f      	bpl.n	8006990 <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 8006970:	6823      	ldr	r3, [r4, #0]
 8006972:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8006974:	f022 0208 	bic.w	r2, r2, #8
 8006978:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800697a:	2208      	movs	r2, #8
 800697c:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 800697e:	2301      	movs	r3, #1
 8006980:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8006984:	2300      	movs	r3, #0
 8006986:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 800698a:	4620      	mov	r0, r4
 800698c:	f7ff ffa3 	bl	80068d6 <HAL_LTDC_ReloadEventCallback>
}
 8006990:	bd70      	pop	{r4, r5, r6, pc}

08006992 <HAL_LTDC_ConfigLayer>:
{
 8006992:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 8006996:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800699a:	2b01      	cmp	r3, #1
{
 800699c:	4606      	mov	r6, r0
 800699e:	460f      	mov	r7, r1
 80069a0:	4694      	mov	ip, r2
 80069a2:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 80069a6:	d01f      	beq.n	80069e8 <HAL_LTDC_ConfigLayer+0x56>
 80069a8:	f04f 0801 	mov.w	r8, #1
 80069ac:	f886 80a0 	strb.w	r8, [r6, #160]	; 0xa0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 80069b0:	f886 00a1 	strb.w	r0, [r6, #161]	; 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 80069b4:	2434      	movs	r4, #52	; 0x34
 80069b6:	460d      	mov	r5, r1
 80069b8:	fb04 6402 	mla	r4, r4, r2, r6
 80069bc:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80069be:	3438      	adds	r4, #56	; 0x38
 80069c0:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80069c2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80069c4:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80069c6:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80069c8:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80069ca:	682b      	ldr	r3, [r5, #0]
 80069cc:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 80069ce:	4630      	mov	r0, r6
 80069d0:	4662      	mov	r2, ip
 80069d2:	4639      	mov	r1, r7
 80069d4:	f7ff fe8c 	bl	80066f0 <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 80069d8:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 80069da:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 80069dc:	f8c3 8024 	str.w	r8, [r3, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 80069e0:	f886 80a1 	strb.w	r8, [r6, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 80069e4:	f886 00a0 	strb.w	r0, [r6, #160]	; 0xa0
}
 80069e8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080069ec <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 80069ec:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 80069f0:	2b01      	cmp	r3, #1
 80069f2:	f04f 0302 	mov.w	r3, #2
 80069f6:	d012      	beq.n	8006a1e <HAL_LTDC_ProgramLineEvent+0x32>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 80069f8:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 80069fc:	6803      	ldr	r3, [r0, #0]
 80069fe:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8006a00:	f022 0201 	bic.w	r2, r2, #1
 8006a04:	635a      	str	r2, [r3, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 8006a06:	4a07      	ldr	r2, [pc, #28]	; (8006a24 <HAL_LTDC_ProgramLineEvent+0x38>)
 8006a08:	6411      	str	r1, [r2, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 8006a0a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8006a0c:	f042 0201 	orr.w	r2, r2, #1
 8006a10:	635a      	str	r2, [r3, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 8006a12:	2301      	movs	r3, #1
 8006a14:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 8006a18:	2300      	movs	r3, #0
 8006a1a:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
  __HAL_LOCK(hltdc);
 8006a1e:	4618      	mov	r0, r3
}
 8006a20:	4770      	bx	lr
 8006a22:	bf00      	nop
 8006a24:	40016800 	.word	0x40016800

08006a28 <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8006a28:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 8006a2c:	4604      	mov	r4, r0
 8006a2e:	b340      	cbz	r0, 8006a82 <HAL_RCC_OscConfig+0x5a>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8006a30:	6803      	ldr	r3, [r0, #0]
 8006a32:	07dd      	lsls	r5, r3, #31
 8006a34:	d410      	bmi.n	8006a58 <HAL_RCC_OscConfig+0x30>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8006a36:	6823      	ldr	r3, [r4, #0]
 8006a38:	0798      	lsls	r0, r3, #30
 8006a3a:	d45e      	bmi.n	8006afa <HAL_RCC_OscConfig+0xd2>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8006a3c:	6823      	ldr	r3, [r4, #0]
 8006a3e:	071a      	lsls	r2, r3, #28
 8006a40:	f100 80a0 	bmi.w	8006b84 <HAL_RCC_OscConfig+0x15c>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8006a44:	6823      	ldr	r3, [r4, #0]
 8006a46:	075b      	lsls	r3, r3, #29
 8006a48:	f100 80c0 	bmi.w	8006bcc <HAL_RCC_OscConfig+0x1a4>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8006a4c:	69a0      	ldr	r0, [r4, #24]
 8006a4e:	2800      	cmp	r0, #0
 8006a50:	f040 8128 	bne.w	8006ca4 <HAL_RCC_OscConfig+0x27c>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 8006a54:	2000      	movs	r0, #0
 8006a56:	e02b      	b.n	8006ab0 <HAL_RCC_OscConfig+0x88>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8006a58:	4b8f      	ldr	r3, [pc, #572]	; (8006c98 <HAL_RCC_OscConfig+0x270>)
 8006a5a:	689a      	ldr	r2, [r3, #8]
 8006a5c:	f002 020c 	and.w	r2, r2, #12
 8006a60:	2a04      	cmp	r2, #4
 8006a62:	d007      	beq.n	8006a74 <HAL_RCC_OscConfig+0x4c>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8006a64:	689a      	ldr	r2, [r3, #8]
 8006a66:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8006a6a:	2a08      	cmp	r2, #8
 8006a6c:	d10b      	bne.n	8006a86 <HAL_RCC_OscConfig+0x5e>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8006a6e:	685a      	ldr	r2, [r3, #4]
 8006a70:	0251      	lsls	r1, r2, #9
 8006a72:	d508      	bpl.n	8006a86 <HAL_RCC_OscConfig+0x5e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8006a74:	4b88      	ldr	r3, [pc, #544]	; (8006c98 <HAL_RCC_OscConfig+0x270>)
 8006a76:	681b      	ldr	r3, [r3, #0]
 8006a78:	039a      	lsls	r2, r3, #14
 8006a7a:	d5dc      	bpl.n	8006a36 <HAL_RCC_OscConfig+0xe>
 8006a7c:	6863      	ldr	r3, [r4, #4]
 8006a7e:	2b00      	cmp	r3, #0
 8006a80:	d1d9      	bne.n	8006a36 <HAL_RCC_OscConfig+0xe>
          return HAL_ERROR;
 8006a82:	2001      	movs	r0, #1
 8006a84:	e014      	b.n	8006ab0 <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8006a86:	6862      	ldr	r2, [r4, #4]
 8006a88:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 8006a8c:	d113      	bne.n	8006ab6 <HAL_RCC_OscConfig+0x8e>
 8006a8e:	681a      	ldr	r2, [r3, #0]
 8006a90:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8006a94:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8006a96:	f7fe fcef 	bl	8005478 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8006a9a:	4e7f      	ldr	r6, [pc, #508]	; (8006c98 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 8006a9c:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8006a9e:	6833      	ldr	r3, [r6, #0]
 8006aa0:	039b      	lsls	r3, r3, #14
 8006aa2:	d4c8      	bmi.n	8006a36 <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8006aa4:	f7fe fce8 	bl	8005478 <HAL_GetTick>
 8006aa8:	1b40      	subs	r0, r0, r5
 8006aaa:	2864      	cmp	r0, #100	; 0x64
 8006aac:	d9f7      	bls.n	8006a9e <HAL_RCC_OscConfig+0x76>
            return HAL_TIMEOUT;
 8006aae:	2003      	movs	r0, #3
}
 8006ab0:	b002      	add	sp, #8
 8006ab2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8006ab6:	4d78      	ldr	r5, [pc, #480]	; (8006c98 <HAL_RCC_OscConfig+0x270>)
 8006ab8:	f5b2 2fa0 	cmp.w	r2, #327680	; 0x50000
 8006abc:	682b      	ldr	r3, [r5, #0]
 8006abe:	d107      	bne.n	8006ad0 <HAL_RCC_OscConfig+0xa8>
 8006ac0:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8006ac4:	602b      	str	r3, [r5, #0]
 8006ac6:	682b      	ldr	r3, [r5, #0]
 8006ac8:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8006acc:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8006ace:	e7e2      	b.n	8006a96 <HAL_RCC_OscConfig+0x6e>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8006ad0:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8006ad4:	602b      	str	r3, [r5, #0]
 8006ad6:	682b      	ldr	r3, [r5, #0]
 8006ad8:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8006adc:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8006ade:	2a00      	cmp	r2, #0
 8006ae0:	d1d9      	bne.n	8006a96 <HAL_RCC_OscConfig+0x6e>
        tickstart = HAL_GetTick();
 8006ae2:	f7fe fcc9 	bl	8005478 <HAL_GetTick>
 8006ae6:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8006ae8:	682b      	ldr	r3, [r5, #0]
 8006aea:	039f      	lsls	r7, r3, #14
 8006aec:	d5a3      	bpl.n	8006a36 <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8006aee:	f7fe fcc3 	bl	8005478 <HAL_GetTick>
 8006af2:	1b80      	subs	r0, r0, r6
 8006af4:	2864      	cmp	r0, #100	; 0x64
 8006af6:	d9f7      	bls.n	8006ae8 <HAL_RCC_OscConfig+0xc0>
 8006af8:	e7d9      	b.n	8006aae <HAL_RCC_OscConfig+0x86>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 8006afa:	4b67      	ldr	r3, [pc, #412]	; (8006c98 <HAL_RCC_OscConfig+0x270>)
 8006afc:	689a      	ldr	r2, [r3, #8]
 8006afe:	f012 0f0c 	tst.w	r2, #12
 8006b02:	d007      	beq.n	8006b14 <HAL_RCC_OscConfig+0xec>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8006b04:	689a      	ldr	r2, [r3, #8]
 8006b06:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 8006b0a:	2a08      	cmp	r2, #8
 8006b0c:	d111      	bne.n	8006b32 <HAL_RCC_OscConfig+0x10a>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8006b0e:	685b      	ldr	r3, [r3, #4]
 8006b10:	025e      	lsls	r6, r3, #9
 8006b12:	d40e      	bmi.n	8006b32 <HAL_RCC_OscConfig+0x10a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8006b14:	4a60      	ldr	r2, [pc, #384]	; (8006c98 <HAL_RCC_OscConfig+0x270>)
 8006b16:	6813      	ldr	r3, [r2, #0]
 8006b18:	079d      	lsls	r5, r3, #30
 8006b1a:	d502      	bpl.n	8006b22 <HAL_RCC_OscConfig+0xfa>
 8006b1c:	68e3      	ldr	r3, [r4, #12]
 8006b1e:	2b01      	cmp	r3, #1
 8006b20:	d1af      	bne.n	8006a82 <HAL_RCC_OscConfig+0x5a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8006b22:	6813      	ldr	r3, [r2, #0]
 8006b24:	6921      	ldr	r1, [r4, #16]
 8006b26:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8006b2a:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8006b2e:	6013      	str	r3, [r2, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8006b30:	e784      	b.n	8006a3c <HAL_RCC_OscConfig+0x14>
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 8006b32:	68e2      	ldr	r2, [r4, #12]
 8006b34:	4b59      	ldr	r3, [pc, #356]	; (8006c9c <HAL_RCC_OscConfig+0x274>)
 8006b36:	b1b2      	cbz	r2, 8006b66 <HAL_RCC_OscConfig+0x13e>
        __HAL_RCC_HSI_ENABLE();
 8006b38:	2201      	movs	r2, #1
 8006b3a:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8006b3c:	f7fe fc9c 	bl	8005478 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8006b40:	4d55      	ldr	r5, [pc, #340]	; (8006c98 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 8006b42:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8006b44:	682b      	ldr	r3, [r5, #0]
 8006b46:	0798      	lsls	r0, r3, #30
 8006b48:	d507      	bpl.n	8006b5a <HAL_RCC_OscConfig+0x132>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8006b4a:	682b      	ldr	r3, [r5, #0]
 8006b4c:	6922      	ldr	r2, [r4, #16]
 8006b4e:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8006b52:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8006b56:	602b      	str	r3, [r5, #0]
 8006b58:	e770      	b.n	8006a3c <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8006b5a:	f7fe fc8d 	bl	8005478 <HAL_GetTick>
 8006b5e:	1b80      	subs	r0, r0, r6
 8006b60:	2802      	cmp	r0, #2
 8006b62:	d9ef      	bls.n	8006b44 <HAL_RCC_OscConfig+0x11c>
 8006b64:	e7a3      	b.n	8006aae <HAL_RCC_OscConfig+0x86>
        __HAL_RCC_HSI_DISABLE();
 8006b66:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8006b68:	f7fe fc86 	bl	8005478 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8006b6c:	4e4a      	ldr	r6, [pc, #296]	; (8006c98 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 8006b6e:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8006b70:	6833      	ldr	r3, [r6, #0]
 8006b72:	0799      	lsls	r1, r3, #30
 8006b74:	f57f af62 	bpl.w	8006a3c <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8006b78:	f7fe fc7e 	bl	8005478 <HAL_GetTick>
 8006b7c:	1b40      	subs	r0, r0, r5
 8006b7e:	2802      	cmp	r0, #2
 8006b80:	d9f6      	bls.n	8006b70 <HAL_RCC_OscConfig+0x148>
 8006b82:	e794      	b.n	8006aae <HAL_RCC_OscConfig+0x86>
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 8006b84:	6962      	ldr	r2, [r4, #20]
 8006b86:	4b45      	ldr	r3, [pc, #276]	; (8006c9c <HAL_RCC_OscConfig+0x274>)
 8006b88:	b182      	cbz	r2, 8006bac <HAL_RCC_OscConfig+0x184>
      __HAL_RCC_LSI_ENABLE();
 8006b8a:	2201      	movs	r2, #1
 8006b8c:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 8006b90:	f7fe fc72 	bl	8005478 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8006b94:	4e40      	ldr	r6, [pc, #256]	; (8006c98 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 8006b96:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8006b98:	6f73      	ldr	r3, [r6, #116]	; 0x74
 8006b9a:	079f      	lsls	r7, r3, #30
 8006b9c:	f53f af52 	bmi.w	8006a44 <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8006ba0:	f7fe fc6a 	bl	8005478 <HAL_GetTick>
 8006ba4:	1b40      	subs	r0, r0, r5
 8006ba6:	2802      	cmp	r0, #2
 8006ba8:	d9f6      	bls.n	8006b98 <HAL_RCC_OscConfig+0x170>
 8006baa:	e780      	b.n	8006aae <HAL_RCC_OscConfig+0x86>
      __HAL_RCC_LSI_DISABLE();
 8006bac:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 8006bb0:	f7fe fc62 	bl	8005478 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8006bb4:	4e38      	ldr	r6, [pc, #224]	; (8006c98 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 8006bb6:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8006bb8:	6f73      	ldr	r3, [r6, #116]	; 0x74
 8006bba:	0798      	lsls	r0, r3, #30
 8006bbc:	f57f af42 	bpl.w	8006a44 <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8006bc0:	f7fe fc5a 	bl	8005478 <HAL_GetTick>
 8006bc4:	1b40      	subs	r0, r0, r5
 8006bc6:	2802      	cmp	r0, #2
 8006bc8:	d9f6      	bls.n	8006bb8 <HAL_RCC_OscConfig+0x190>
 8006bca:	e770      	b.n	8006aae <HAL_RCC_OscConfig+0x86>
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8006bcc:	4b32      	ldr	r3, [pc, #200]	; (8006c98 <HAL_RCC_OscConfig+0x270>)
 8006bce:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8006bd0:	f012 5280 	ands.w	r2, r2, #268435456	; 0x10000000
 8006bd4:	d128      	bne.n	8006c28 <HAL_RCC_OscConfig+0x200>
      __HAL_RCC_PWR_CLK_ENABLE();
 8006bd6:	9201      	str	r2, [sp, #4]
 8006bd8:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8006bda:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8006bde:	641a      	str	r2, [r3, #64]	; 0x40
 8006be0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006be2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8006be6:	9301      	str	r3, [sp, #4]
 8006be8:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 8006bea:	2701      	movs	r7, #1
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8006bec:	4d2c      	ldr	r5, [pc, #176]	; (8006ca0 <HAL_RCC_OscConfig+0x278>)
 8006bee:	682b      	ldr	r3, [r5, #0]
 8006bf0:	05d9      	lsls	r1, r3, #23
 8006bf2:	d51b      	bpl.n	8006c2c <HAL_RCC_OscConfig+0x204>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8006bf4:	68a3      	ldr	r3, [r4, #8]
 8006bf6:	4d28      	ldr	r5, [pc, #160]	; (8006c98 <HAL_RCC_OscConfig+0x270>)
 8006bf8:	2b01      	cmp	r3, #1
 8006bfa:	d127      	bne.n	8006c4c <HAL_RCC_OscConfig+0x224>
 8006bfc:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8006bfe:	f043 0301 	orr.w	r3, r3, #1
 8006c02:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();
 8006c04:	f7fe fc38 	bl	8005478 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8006c08:	4e23      	ldr	r6, [pc, #140]	; (8006c98 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 8006c0a:	4605      	mov	r5, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8006c0c:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8006c10:	6f33      	ldr	r3, [r6, #112]	; 0x70
 8006c12:	079b      	lsls	r3, r3, #30
 8006c14:	d539      	bpl.n	8006c8a <HAL_RCC_OscConfig+0x262>
    if(pwrclkchanged == SET)
 8006c16:	2f00      	cmp	r7, #0
 8006c18:	f43f af18 	beq.w	8006a4c <HAL_RCC_OscConfig+0x24>
      __HAL_RCC_PWR_CLK_DISABLE();
 8006c1c:	4a1e      	ldr	r2, [pc, #120]	; (8006c98 <HAL_RCC_OscConfig+0x270>)
 8006c1e:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8006c20:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8006c24:	6413      	str	r3, [r2, #64]	; 0x40
 8006c26:	e711      	b.n	8006a4c <HAL_RCC_OscConfig+0x24>
    FlagStatus       pwrclkchanged = RESET;
 8006c28:	2700      	movs	r7, #0
 8006c2a:	e7df      	b.n	8006bec <HAL_RCC_OscConfig+0x1c4>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8006c2c:	682b      	ldr	r3, [r5, #0]
 8006c2e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8006c32:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 8006c34:	f7fe fc20 	bl	8005478 <HAL_GetTick>
 8006c38:	4606      	mov	r6, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8006c3a:	682b      	ldr	r3, [r5, #0]
 8006c3c:	05da      	lsls	r2, r3, #23
 8006c3e:	d4d9      	bmi.n	8006bf4 <HAL_RCC_OscConfig+0x1cc>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8006c40:	f7fe fc1a 	bl	8005478 <HAL_GetTick>
 8006c44:	1b80      	subs	r0, r0, r6
 8006c46:	2802      	cmp	r0, #2
 8006c48:	d9f7      	bls.n	8006c3a <HAL_RCC_OscConfig+0x212>
 8006c4a:	e730      	b.n	8006aae <HAL_RCC_OscConfig+0x86>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8006c4c:	2b05      	cmp	r3, #5
 8006c4e:	d104      	bne.n	8006c5a <HAL_RCC_OscConfig+0x232>
 8006c50:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8006c52:	f043 0304 	orr.w	r3, r3, #4
 8006c56:	672b      	str	r3, [r5, #112]	; 0x70
 8006c58:	e7d0      	b.n	8006bfc <HAL_RCC_OscConfig+0x1d4>
 8006c5a:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 8006c5c:	f022 0201 	bic.w	r2, r2, #1
 8006c60:	672a      	str	r2, [r5, #112]	; 0x70
 8006c62:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 8006c64:	f022 0204 	bic.w	r2, r2, #4
 8006c68:	672a      	str	r2, [r5, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 8006c6a:	2b00      	cmp	r3, #0
 8006c6c:	d1ca      	bne.n	8006c04 <HAL_RCC_OscConfig+0x1dc>
      tickstart = HAL_GetTick();
 8006c6e:	f7fe fc03 	bl	8005478 <HAL_GetTick>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8006c72:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 8006c76:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8006c78:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8006c7a:	0798      	lsls	r0, r3, #30
 8006c7c:	d5cb      	bpl.n	8006c16 <HAL_RCC_OscConfig+0x1ee>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8006c7e:	f7fe fbfb 	bl	8005478 <HAL_GetTick>
 8006c82:	1b80      	subs	r0, r0, r6
 8006c84:	4540      	cmp	r0, r8
 8006c86:	d9f7      	bls.n	8006c78 <HAL_RCC_OscConfig+0x250>
 8006c88:	e711      	b.n	8006aae <HAL_RCC_OscConfig+0x86>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8006c8a:	f7fe fbf5 	bl	8005478 <HAL_GetTick>
 8006c8e:	1b40      	subs	r0, r0, r5
 8006c90:	4540      	cmp	r0, r8
 8006c92:	d9bd      	bls.n	8006c10 <HAL_RCC_OscConfig+0x1e8>
 8006c94:	e70b      	b.n	8006aae <HAL_RCC_OscConfig+0x86>
 8006c96:	bf00      	nop
 8006c98:	40023800 	.word	0x40023800
 8006c9c:	42470000 	.word	0x42470000
 8006ca0:	40007000 	.word	0x40007000
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 8006ca4:	4d33      	ldr	r5, [pc, #204]	; (8006d74 <HAL_RCC_OscConfig+0x34c>)
 8006ca6:	68ab      	ldr	r3, [r5, #8]
 8006ca8:	f003 030c 	and.w	r3, r3, #12
 8006cac:	2b08      	cmp	r3, #8
 8006cae:	d03d      	beq.n	8006d2c <HAL_RCC_OscConfig+0x304>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8006cb0:	4b31      	ldr	r3, [pc, #196]	; (8006d78 <HAL_RCC_OscConfig+0x350>)
 8006cb2:	2200      	movs	r2, #0
 8006cb4:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 8006cb6:	661a      	str	r2, [r3, #96]	; 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8006cb8:	d12b      	bne.n	8006d12 <HAL_RCC_OscConfig+0x2ea>
        tickstart = HAL_GetTick();
 8006cba:	f7fe fbdd 	bl	8005478 <HAL_GetTick>
 8006cbe:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8006cc0:	682b      	ldr	r3, [r5, #0]
 8006cc2:	0199      	lsls	r1, r3, #6
 8006cc4:	d41f      	bmi.n	8006d06 <HAL_RCC_OscConfig+0x2de>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 8006cc6:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 8006cca:	4313      	orrs	r3, r2
 8006ccc:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8006cce:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8006cd2:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8006cd4:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8006cd8:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8006cda:	0852      	lsrs	r2, r2, #1
 8006cdc:	3a01      	subs	r2, #1
 8006cde:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8006ce2:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 8006ce4:	4b24      	ldr	r3, [pc, #144]	; (8006d78 <HAL_RCC_OscConfig+0x350>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8006ce6:	4d23      	ldr	r5, [pc, #140]	; (8006d74 <HAL_RCC_OscConfig+0x34c>)
        __HAL_RCC_PLL_ENABLE();
 8006ce8:	2201      	movs	r2, #1
 8006cea:	661a      	str	r2, [r3, #96]	; 0x60
        tickstart = HAL_GetTick();
 8006cec:	f7fe fbc4 	bl	8005478 <HAL_GetTick>
 8006cf0:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8006cf2:	682b      	ldr	r3, [r5, #0]
 8006cf4:	019a      	lsls	r2, r3, #6
 8006cf6:	f53f aead 	bmi.w	8006a54 <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8006cfa:	f7fe fbbd 	bl	8005478 <HAL_GetTick>
 8006cfe:	1b00      	subs	r0, r0, r4
 8006d00:	2802      	cmp	r0, #2
 8006d02:	d9f6      	bls.n	8006cf2 <HAL_RCC_OscConfig+0x2ca>
 8006d04:	e6d3      	b.n	8006aae <HAL_RCC_OscConfig+0x86>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8006d06:	f7fe fbb7 	bl	8005478 <HAL_GetTick>
 8006d0a:	1b80      	subs	r0, r0, r6
 8006d0c:	2802      	cmp	r0, #2
 8006d0e:	d9d7      	bls.n	8006cc0 <HAL_RCC_OscConfig+0x298>
 8006d10:	e6cd      	b.n	8006aae <HAL_RCC_OscConfig+0x86>
        tickstart = HAL_GetTick();
 8006d12:	f7fe fbb1 	bl	8005478 <HAL_GetTick>
 8006d16:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8006d18:	682b      	ldr	r3, [r5, #0]
 8006d1a:	019b      	lsls	r3, r3, #6
 8006d1c:	f57f ae9a 	bpl.w	8006a54 <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8006d20:	f7fe fbaa 	bl	8005478 <HAL_GetTick>
 8006d24:	1b00      	subs	r0, r0, r4
 8006d26:	2802      	cmp	r0, #2
 8006d28:	d9f6      	bls.n	8006d18 <HAL_RCC_OscConfig+0x2f0>
 8006d2a:	e6c0      	b.n	8006aae <HAL_RCC_OscConfig+0x86>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8006d2c:	2801      	cmp	r0, #1
 8006d2e:	f43f aebf 	beq.w	8006ab0 <HAL_RCC_OscConfig+0x88>
        pll_config = RCC->PLLCFGR;
 8006d32:	686b      	ldr	r3, [r5, #4]
        if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8006d34:	69e2      	ldr	r2, [r4, #28]
 8006d36:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
 8006d3a:	4291      	cmp	r1, r2
 8006d3c:	f47f aea1 	bne.w	8006a82 <HAL_RCC_OscConfig+0x5a>
 8006d40:	6a21      	ldr	r1, [r4, #32]
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8006d42:	f003 023f 	and.w	r2, r3, #63	; 0x3f
        if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8006d46:	428a      	cmp	r2, r1
 8006d48:	f47f ae9b 	bne.w	8006a82 <HAL_RCC_OscConfig+0x5a>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8006d4c:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8006d4e:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 8006d52:	401a      	ands	r2, r3
 8006d54:	428a      	cmp	r2, r1
 8006d56:	f47f ae94 	bne.w	8006a82 <HAL_RCC_OscConfig+0x5a>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 8006d5a:	6aa1      	ldr	r1, [r4, #40]	; 0x28
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 8006d5c:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 8006d60:	428a      	cmp	r2, r1
 8006d62:	f47f ae8e 	bne.w	8006a82 <HAL_RCC_OscConfig+0x5a>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 8006d66:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != RCC_OscInitStruct->PLL.PLLQ))
 8006d68:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 8006d6c:	4293      	cmp	r3, r2
 8006d6e:	f43f ae71 	beq.w	8006a54 <HAL_RCC_OscConfig+0x2c>
 8006d72:	e686      	b.n	8006a82 <HAL_RCC_OscConfig+0x5a>
 8006d74:	40023800 	.word	0x40023800
 8006d78:	42470000 	.word	0x42470000

08006d7c <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8006d7c:	4913      	ldr	r1, [pc, #76]	; (8006dcc <HAL_RCC_GetSysClockFreq+0x50>)
{
 8006d7e:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8006d80:	688b      	ldr	r3, [r1, #8]
 8006d82:	f003 030c 	and.w	r3, r3, #12
 8006d86:	2b04      	cmp	r3, #4
 8006d88:	d01c      	beq.n	8006dc4 <HAL_RCC_GetSysClockFreq+0x48>
 8006d8a:	2b08      	cmp	r3, #8
 8006d8c:	d11c      	bne.n	8006dc8 <HAL_RCC_GetSysClockFreq+0x4c>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8006d8e:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8006d90:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8006d92:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8006d94:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8006d98:	bf14      	ite	ne
 8006d9a:	480d      	ldrne	r0, [pc, #52]	; (8006dd0 <HAL_RCC_GetSysClockFreq+0x54>)
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8006d9c:	480d      	ldreq	r0, [pc, #52]	; (8006dd4 <HAL_RCC_GetSysClockFreq+0x58>)
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8006d9e:	f3c1 1188 	ubfx	r1, r1, #6, #9
 8006da2:	bf18      	it	ne
 8006da4:	2300      	movne	r3, #0
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8006da6:	f002 023f 	and.w	r2, r2, #63	; 0x3f
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8006daa:	fba1 0100 	umull	r0, r1, r1, r0
 8006dae:	f7f9 fa6f 	bl	8000290 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 8006db2:	4b06      	ldr	r3, [pc, #24]	; (8006dcc <HAL_RCC_GetSysClockFreq+0x50>)
 8006db4:	685b      	ldr	r3, [r3, #4]
 8006db6:	f3c3 4301 	ubfx	r3, r3, #16, #2
 8006dba:	3301      	adds	r3, #1
 8006dbc:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 8006dbe:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 8006dc2:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8006dc4:	4802      	ldr	r0, [pc, #8]	; (8006dd0 <HAL_RCC_GetSysClockFreq+0x54>)
 8006dc6:	e7fc      	b.n	8006dc2 <HAL_RCC_GetSysClockFreq+0x46>
      sysclockfreq = HSI_VALUE;
 8006dc8:	4802      	ldr	r0, [pc, #8]	; (8006dd4 <HAL_RCC_GetSysClockFreq+0x58>)
  return sysclockfreq;
 8006dca:	e7fa      	b.n	8006dc2 <HAL_RCC_GetSysClockFreq+0x46>
 8006dcc:	40023800 	.word	0x40023800
 8006dd0:	007a1200 	.word	0x007a1200
 8006dd4:	00f42400 	.word	0x00f42400

08006dd8 <HAL_RCC_ClockConfig>:
{
 8006dd8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006ddc:	460d      	mov	r5, r1
  if(RCC_ClkInitStruct == NULL)
 8006dde:	4604      	mov	r4, r0
 8006de0:	b910      	cbnz	r0, 8006de8 <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 8006de2:	2001      	movs	r0, #1
}
 8006de4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8006de8:	4b44      	ldr	r3, [pc, #272]	; (8006efc <HAL_RCC_ClockConfig+0x124>)
 8006dea:	681a      	ldr	r2, [r3, #0]
 8006dec:	f002 020f 	and.w	r2, r2, #15
 8006df0:	428a      	cmp	r2, r1
 8006df2:	d328      	bcc.n	8006e46 <HAL_RCC_ClockConfig+0x6e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8006df4:	6822      	ldr	r2, [r4, #0]
 8006df6:	0797      	lsls	r7, r2, #30
 8006df8:	d42d      	bmi.n	8006e56 <HAL_RCC_ClockConfig+0x7e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8006dfa:	07d0      	lsls	r0, r2, #31
 8006dfc:	d441      	bmi.n	8006e82 <HAL_RCC_ClockConfig+0xaa>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 8006dfe:	4b3f      	ldr	r3, [pc, #252]	; (8006efc <HAL_RCC_ClockConfig+0x124>)
 8006e00:	681a      	ldr	r2, [r3, #0]
 8006e02:	f002 020f 	and.w	r2, r2, #15
 8006e06:	42aa      	cmp	r2, r5
 8006e08:	d866      	bhi.n	8006ed8 <HAL_RCC_ClockConfig+0x100>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8006e0a:	6822      	ldr	r2, [r4, #0]
 8006e0c:	0751      	lsls	r1, r2, #29
 8006e0e:	d46c      	bmi.n	8006eea <HAL_RCC_ClockConfig+0x112>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8006e10:	0713      	lsls	r3, r2, #28
 8006e12:	d507      	bpl.n	8006e24 <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 8006e14:	4a3a      	ldr	r2, [pc, #232]	; (8006f00 <HAL_RCC_ClockConfig+0x128>)
 8006e16:	6921      	ldr	r1, [r4, #16]
 8006e18:	6893      	ldr	r3, [r2, #8]
 8006e1a:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 8006e1e:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8006e22:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 8006e24:	f7ff ffaa 	bl	8006d7c <HAL_RCC_GetSysClockFreq>
 8006e28:	4b35      	ldr	r3, [pc, #212]	; (8006f00 <HAL_RCC_ClockConfig+0x128>)
 8006e2a:	4a36      	ldr	r2, [pc, #216]	; (8006f04 <HAL_RCC_ClockConfig+0x12c>)
 8006e2c:	689b      	ldr	r3, [r3, #8]
 8006e2e:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8006e32:	5cd3      	ldrb	r3, [r2, r3]
 8006e34:	40d8      	lsrs	r0, r3
 8006e36:	4b34      	ldr	r3, [pc, #208]	; (8006f08 <HAL_RCC_ClockConfig+0x130>)
 8006e38:	6018      	str	r0, [r3, #0]
  HAL_InitTick (uwTickPrio);
 8006e3a:	4b34      	ldr	r3, [pc, #208]	; (8006f0c <HAL_RCC_ClockConfig+0x134>)
 8006e3c:	6818      	ldr	r0, [r3, #0]
 8006e3e:	f7fb f86d 	bl	8001f1c <HAL_InitTick>
  return HAL_OK;
 8006e42:	2000      	movs	r0, #0
 8006e44:	e7ce      	b.n	8006de4 <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8006e46:	b2ca      	uxtb	r2, r1
 8006e48:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8006e4a:	681b      	ldr	r3, [r3, #0]
 8006e4c:	f003 030f 	and.w	r3, r3, #15
 8006e50:	428b      	cmp	r3, r1
 8006e52:	d1c6      	bne.n	8006de2 <HAL_RCC_ClockConfig+0xa>
 8006e54:	e7ce      	b.n	8006df4 <HAL_RCC_ClockConfig+0x1c>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8006e56:	4b2a      	ldr	r3, [pc, #168]	; (8006f00 <HAL_RCC_ClockConfig+0x128>)
 8006e58:	f012 0f04 	tst.w	r2, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8006e5c:	bf1e      	ittt	ne
 8006e5e:	6899      	ldrne	r1, [r3, #8]
 8006e60:	f441 51e0 	orrne.w	r1, r1, #7168	; 0x1c00
 8006e64:	6099      	strne	r1, [r3, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8006e66:	0716      	lsls	r6, r2, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8006e68:	bf42      	ittt	mi
 8006e6a:	6899      	ldrmi	r1, [r3, #8]
 8006e6c:	f441 4160 	orrmi.w	r1, r1, #57344	; 0xe000
 8006e70:	6099      	strmi	r1, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8006e72:	4923      	ldr	r1, [pc, #140]	; (8006f00 <HAL_RCC_ClockConfig+0x128>)
 8006e74:	68a0      	ldr	r0, [r4, #8]
 8006e76:	688b      	ldr	r3, [r1, #8]
 8006e78:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8006e7c:	4303      	orrs	r3, r0
 8006e7e:	608b      	str	r3, [r1, #8]
 8006e80:	e7bb      	b.n	8006dfa <HAL_RCC_ClockConfig+0x22>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8006e82:	6862      	ldr	r2, [r4, #4]
 8006e84:	4b1e      	ldr	r3, [pc, #120]	; (8006f00 <HAL_RCC_ClockConfig+0x128>)
 8006e86:	2a01      	cmp	r2, #1
 8006e88:	d11c      	bne.n	8006ec4 <HAL_RCC_ClockConfig+0xec>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8006e8a:	681b      	ldr	r3, [r3, #0]
 8006e8c:	f413 3f00 	tst.w	r3, #131072	; 0x20000
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8006e90:	d0a7      	beq.n	8006de2 <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8006e92:	4e1b      	ldr	r6, [pc, #108]	; (8006f00 <HAL_RCC_ClockConfig+0x128>)
 8006e94:	68b3      	ldr	r3, [r6, #8]
 8006e96:	f023 0303 	bic.w	r3, r3, #3
 8006e9a:	4313      	orrs	r3, r2
 8006e9c:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 8006e9e:	f7fe faeb 	bl	8005478 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8006ea2:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 8006ea6:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8006ea8:	68b3      	ldr	r3, [r6, #8]
 8006eaa:	6862      	ldr	r2, [r4, #4]
 8006eac:	f003 030c 	and.w	r3, r3, #12
 8006eb0:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 8006eb4:	d0a3      	beq.n	8006dfe <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8006eb6:	f7fe fadf 	bl	8005478 <HAL_GetTick>
 8006eba:	1bc0      	subs	r0, r0, r7
 8006ebc:	4540      	cmp	r0, r8
 8006ebe:	d9f3      	bls.n	8006ea8 <HAL_RCC_ClockConfig+0xd0>
        return HAL_TIMEOUT;
 8006ec0:	2003      	movs	r0, #3
 8006ec2:	e78f      	b.n	8006de4 <HAL_RCC_ClockConfig+0xc>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8006ec4:	1e91      	subs	r1, r2, #2
 8006ec6:	2901      	cmp	r1, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8006ec8:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8006eca:	d802      	bhi.n	8006ed2 <HAL_RCC_ClockConfig+0xfa>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8006ecc:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 8006ed0:	e7de      	b.n	8006e90 <HAL_RCC_ClockConfig+0xb8>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8006ed2:	f013 0f02 	tst.w	r3, #2
 8006ed6:	e7db      	b.n	8006e90 <HAL_RCC_ClockConfig+0xb8>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8006ed8:	b2ea      	uxtb	r2, r5
 8006eda:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8006edc:	681b      	ldr	r3, [r3, #0]
 8006ede:	f003 030f 	and.w	r3, r3, #15
 8006ee2:	42ab      	cmp	r3, r5
 8006ee4:	f47f af7d 	bne.w	8006de2 <HAL_RCC_ClockConfig+0xa>
 8006ee8:	e78f      	b.n	8006e0a <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8006eea:	4905      	ldr	r1, [pc, #20]	; (8006f00 <HAL_RCC_ClockConfig+0x128>)
 8006eec:	68e0      	ldr	r0, [r4, #12]
 8006eee:	688b      	ldr	r3, [r1, #8]
 8006ef0:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 8006ef4:	4303      	orrs	r3, r0
 8006ef6:	608b      	str	r3, [r1, #8]
 8006ef8:	e78a      	b.n	8006e10 <HAL_RCC_ClockConfig+0x38>
 8006efa:	bf00      	nop
 8006efc:	40023c00 	.word	0x40023c00
 8006f00:	40023800 	.word	0x40023800
 8006f04:	08022bd4 	.word	0x08022bd4
 8006f08:	20000078 	.word	0x20000078
 8006f0c:	20000080 	.word	0x20000080

08006f10 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 8006f10:	4b04      	ldr	r3, [pc, #16]	; (8006f24 <HAL_RCC_GetPCLK1Freq+0x14>)
 8006f12:	4a05      	ldr	r2, [pc, #20]	; (8006f28 <HAL_RCC_GetPCLK1Freq+0x18>)
 8006f14:	689b      	ldr	r3, [r3, #8]
 8006f16:	f3c3 2382 	ubfx	r3, r3, #10, #3
 8006f1a:	5cd3      	ldrb	r3, [r2, r3]
 8006f1c:	4a03      	ldr	r2, [pc, #12]	; (8006f2c <HAL_RCC_GetPCLK1Freq+0x1c>)
 8006f1e:	6810      	ldr	r0, [r2, #0]
}
 8006f20:	40d8      	lsrs	r0, r3
 8006f22:	4770      	bx	lr
 8006f24:	40023800 	.word	0x40023800
 8006f28:	08022be4 	.word	0x08022be4
 8006f2c:	20000078 	.word	0x20000078

08006f30 <HAL_RCC_GetPCLK2Freq>:
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2)>> RCC_CFGR_PPRE2_Pos]);
 8006f30:	4b04      	ldr	r3, [pc, #16]	; (8006f44 <HAL_RCC_GetPCLK2Freq+0x14>)
 8006f32:	4a05      	ldr	r2, [pc, #20]	; (8006f48 <HAL_RCC_GetPCLK2Freq+0x18>)
 8006f34:	689b      	ldr	r3, [r3, #8]
 8006f36:	f3c3 3342 	ubfx	r3, r3, #13, #3
 8006f3a:	5cd3      	ldrb	r3, [r2, r3]
 8006f3c:	4a03      	ldr	r2, [pc, #12]	; (8006f4c <HAL_RCC_GetPCLK2Freq+0x1c>)
 8006f3e:	6810      	ldr	r0, [r2, #0]
}
 8006f40:	40d8      	lsrs	r0, r3
 8006f42:	4770      	bx	lr
 8006f44:	40023800 	.word	0x40023800
 8006f48:	08022be4 	.word	0x08022be4
 8006f4c:	20000078 	.word	0x20000078

08006f50 <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 8006f50:	230f      	movs	r3, #15
 8006f52:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 8006f54:	4b0b      	ldr	r3, [pc, #44]	; (8006f84 <HAL_RCC_GetClockConfig+0x34>)
 8006f56:	689a      	ldr	r2, [r3, #8]
 8006f58:	f002 0203 	and.w	r2, r2, #3
 8006f5c:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 8006f5e:	689a      	ldr	r2, [r3, #8]
 8006f60:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 8006f64:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 8006f66:	689a      	ldr	r2, [r3, #8]
 8006f68:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 8006f6c:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 8006f6e:	689b      	ldr	r3, [r3, #8]
 8006f70:	08db      	lsrs	r3, r3, #3
 8006f72:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 8006f76:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 8006f78:	4b03      	ldr	r3, [pc, #12]	; (8006f88 <HAL_RCC_GetClockConfig+0x38>)
 8006f7a:	681b      	ldr	r3, [r3, #0]
 8006f7c:	f003 030f 	and.w	r3, r3, #15
 8006f80:	600b      	str	r3, [r1, #0]
}
 8006f82:	4770      	bx	lr
 8006f84:	40023800 	.word	0x40023800
 8006f88:	40023c00 	.word	0x40023c00

08006f8c <HAL_RCCEx_PeriphCLKConfig>:
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 8006f8c:	6803      	ldr	r3, [r0, #0]
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8006f8e:	f013 0f43 	tst.w	r3, #67	; 0x43
{
 8006f92:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006f94:	4604      	mov	r4, r0
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8006f96:	f040 808c 	bne.w	80070b2 <HAL_RCCEx_PeriphCLKConfig+0x126>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 8006f9a:	6823      	ldr	r3, [r4, #0]
 8006f9c:	f013 0f0c 	tst.w	r3, #12
 8006fa0:	d045      	beq.n	800702e <HAL_RCCEx_PeriphCLKConfig+0xa2>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 8006fa2:	4b8b      	ldr	r3, [pc, #556]	; (80071d0 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8006fa4:	4d8b      	ldr	r5, [pc, #556]	; (80071d4 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLSAI_DISABLE();
 8006fa6:	2200      	movs	r2, #0
 8006fa8:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 8006faa:	f7fe fa65 	bl	8005478 <HAL_GetTick>
 8006fae:	4606      	mov	r6, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8006fb0:	682b      	ldr	r3, [r5, #0]
 8006fb2:	009f      	lsls	r7, r3, #2
 8006fb4:	f100 80cf 	bmi.w	8007156 <HAL_RCCEx_PeriphCLKConfig+0x1ca>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 8006fb8:	6821      	ldr	r1, [r4, #0]
 8006fba:	074e      	lsls	r6, r1, #29
 8006fbc:	d515      	bpl.n	8006fea <HAL_RCCEx_PeriphCLKConfig+0x5e>
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 8006fbe:	e9d4 0304 	ldrd	r0, r3, [r4, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 8006fc2:	f8d5 2088 	ldr.w	r2, [r5, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 8006fc6:	061b      	lsls	r3, r3, #24
 8006fc8:	f002 42e0 	and.w	r2, r2, #1879048192	; 0x70000000
 8006fcc:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8006fd0:	4313      	orrs	r3, r2
 8006fd2:	f8c5 3088 	str.w	r3, [r5, #136]	; 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 8006fd6:	f8d5 308c 	ldr.w	r3, [r5, #140]	; 0x8c
 8006fda:	6a22      	ldr	r2, [r4, #32]
 8006fdc:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 8006fe0:	3a01      	subs	r2, #1
 8006fe2:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8006fe6:	f8c5 308c 	str.w	r3, [r5, #140]	; 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 8006fea:	070d      	lsls	r5, r1, #28
 8006fec:	d514      	bpl.n	8007018 <HAL_RCCEx_PeriphCLKConfig+0x8c>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8006fee:	4a79      	ldr	r2, [pc, #484]	; (80071d4 <HAL_RCCEx_PeriphCLKConfig+0x248>)
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 8006ff0:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8006ff2:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 8006ff6:	6920      	ldr	r0, [r4, #16]
 8006ff8:	071b      	lsls	r3, r3, #28
 8006ffa:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 8006ffe:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8007002:	430b      	orrs	r3, r1
 8007004:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 8007008:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 800700c:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800700e:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8007012:	430b      	orrs	r3, r1
 8007014:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    }
    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 8007018:	4b6d      	ldr	r3, [pc, #436]	; (80071d0 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800701a:	4e6e      	ldr	r6, [pc, #440]	; (80071d4 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLSAI_ENABLE();
 800701c:	2201      	movs	r2, #1
 800701e:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 8007020:	f7fe fa2a 	bl	8005478 <HAL_GetTick>
 8007024:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8007026:	6833      	ldr	r3, [r6, #0]
 8007028:	0098      	lsls	r0, r3, #2
 800702a:	f140 809b 	bpl.w	8007164 <HAL_RCCEx_PeriphCLKConfig+0x1d8>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800702e:	6823      	ldr	r3, [r4, #0]
 8007030:	069b      	lsls	r3, r3, #26
 8007032:	d533      	bpl.n	800709c <HAL_RCCEx_PeriphCLKConfig+0x110>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 8007034:	2300      	movs	r3, #0
 8007036:	9301      	str	r3, [sp, #4]
 8007038:	4b66      	ldr	r3, [pc, #408]	; (80071d4 <HAL_RCCEx_PeriphCLKConfig+0x248>)

    /* Enable write access to Backup domain */
    PWR->CR |= PWR_CR_DBP;
 800703a:	4d67      	ldr	r5, [pc, #412]	; (80071d8 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PWR_CLK_ENABLE();
 800703c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800703e:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8007042:	641a      	str	r2, [r3, #64]	; 0x40
 8007044:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007046:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800704a:	9301      	str	r3, [sp, #4]
 800704c:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 800704e:	682b      	ldr	r3, [r5, #0]
 8007050:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8007054:	602b      	str	r3, [r5, #0]

    /* Get tick */
    tickstart = HAL_GetTick();
 8007056:	f7fe fa0f 	bl	8005478 <HAL_GetTick>
 800705a:	4606      	mov	r6, r0

    while((PWR->CR & PWR_CR_DBP) == RESET)
 800705c:	682b      	ldr	r3, [r5, #0]
 800705e:	05d9      	lsls	r1, r3, #23
 8007060:	f140 8087 	bpl.w	8007172 <HAL_RCCEx_PeriphCLKConfig+0x1e6>
      {
        return HAL_TIMEOUT;
      }
    }
    /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value */
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 8007064:	4d5b      	ldr	r5, [pc, #364]	; (80071d4 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 8007066:	6f2b      	ldr	r3, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8007068:	f413 7340 	ands.w	r3, r3, #768	; 0x300
 800706c:	f040 8088 	bne.w	8007180 <HAL_RCCEx_PeriphCLKConfig+0x1f4>
            return HAL_TIMEOUT;
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8007070:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8007072:	f403 7240 	and.w	r2, r3, #768	; 0x300
 8007076:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 800707a:	4a56      	ldr	r2, [pc, #344]	; (80071d4 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 800707c:	f040 80a4 	bne.w	80071c8 <HAL_RCCEx_PeriphCLKConfig+0x23c>
 8007080:	6891      	ldr	r1, [r2, #8]
 8007082:	f023 4070 	bic.w	r0, r3, #4026531840	; 0xf0000000
 8007086:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 800708a:	f420 7040 	bic.w	r0, r0, #768	; 0x300
 800708e:	4301      	orrs	r1, r0
 8007090:	6091      	str	r1, [r2, #8]
 8007092:	6f11      	ldr	r1, [r2, #112]	; 0x70
 8007094:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8007098:	430b      	orrs	r3, r1
 800709a:	6713      	str	r3, [r2, #112]	; 0x70
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800709c:	6820      	ldr	r0, [r4, #0]
 800709e:	f010 0010 	ands.w	r0, r0, #16
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 80070a2:	bf1f      	itttt	ne
 80070a4:	4b4d      	ldrne	r3, [pc, #308]	; (80071dc <HAL_RCCEx_PeriphCLKConfig+0x250>)
 80070a6:	f894 202c 	ldrbne.w	r2, [r4, #44]	; 0x2c
 80070aa:	f8c3 21e0 	strne.w	r2, [r3, #480]	; 0x1e0
  }
  return HAL_OK;
 80070ae:	2000      	movne	r0, #0
 80070b0:	e04f      	b.n	8007152 <HAL_RCCEx_PeriphCLKConfig+0x1c6>
    __HAL_RCC_PLLI2S_DISABLE();
 80070b2:	4b47      	ldr	r3, [pc, #284]	; (80071d0 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 80070b4:	4e47      	ldr	r6, [pc, #284]	; (80071d4 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLI2S_DISABLE();
 80070b6:	2200      	movs	r2, #0
 80070b8:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 80070ba:	f7fe f9dd 	bl	8005478 <HAL_GetTick>
 80070be:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 80070c0:	6833      	ldr	r3, [r6, #0]
 80070c2:	011f      	lsls	r7, r3, #4
 80070c4:	d43f      	bmi.n	8007146 <HAL_RCCEx_PeriphCLKConfig+0x1ba>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 80070c6:	6821      	ldr	r1, [r4, #0]
 80070c8:	07cd      	lsls	r5, r1, #31
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 80070ca:	bf41      	itttt	mi
 80070cc:	e9d4 2301 	ldrdmi	r2, r3, [r4, #4]
 80070d0:	071b      	lslmi	r3, r3, #28
 80070d2:	ea43 1382 	orrmi.w	r3, r3, r2, lsl #6
 80070d6:	f8c6 3084 	strmi.w	r3, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 80070da:	0788      	lsls	r0, r1, #30
 80070dc:	d515      	bpl.n	800710a <HAL_RCCEx_PeriphCLKConfig+0x17e>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 80070de:	4a3d      	ldr	r2, [pc, #244]	; (80071d4 <HAL_RCCEx_PeriphCLKConfig+0x248>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 80070e0:	68e3      	ldr	r3, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 80070e2:	f8d2 0084 	ldr.w	r0, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 80070e6:	6865      	ldr	r5, [r4, #4]
 80070e8:	061b      	lsls	r3, r3, #24
 80070ea:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 80070ee:	ea43 1385 	orr.w	r3, r3, r5, lsl #6
 80070f2:	4303      	orrs	r3, r0
 80070f4:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 80070f8:	f8d2 008c 	ldr.w	r0, [r2, #140]	; 0x8c
 80070fc:	69e3      	ldr	r3, [r4, #28]
 80070fe:	f020 001f 	bic.w	r0, r0, #31
 8007102:	3b01      	subs	r3, #1
 8007104:	4303      	orrs	r3, r0
 8007106:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 800710a:	0649      	lsls	r1, r1, #25
 800710c:	d50a      	bpl.n	8007124 <HAL_RCCEx_PeriphCLKConfig+0x198>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 800710e:	68e3      	ldr	r3, [r4, #12]
 8007110:	6862      	ldr	r2, [r4, #4]
 8007112:	061b      	lsls	r3, r3, #24
 8007114:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8007118:	68a2      	ldr	r2, [r4, #8]
 800711a:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 800711e:	4a2d      	ldr	r2, [pc, #180]	; (80071d4 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 8007120:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 8007124:	4b2a      	ldr	r3, [pc, #168]	; (80071d0 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8007126:	4e2b      	ldr	r6, [pc, #172]	; (80071d4 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLI2S_ENABLE();
 8007128:	2201      	movs	r2, #1
 800712a:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800712c:	f7fe f9a4 	bl	8005478 <HAL_GetTick>
 8007130:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8007132:	6833      	ldr	r3, [r6, #0]
 8007134:	011a      	lsls	r2, r3, #4
 8007136:	f53f af30 	bmi.w	8006f9a <HAL_RCCEx_PeriphCLKConfig+0xe>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800713a:	f7fe f99d 	bl	8005478 <HAL_GetTick>
 800713e:	1b40      	subs	r0, r0, r5
 8007140:	2802      	cmp	r0, #2
 8007142:	d9f6      	bls.n	8007132 <HAL_RCCEx_PeriphCLKConfig+0x1a6>
 8007144:	e004      	b.n	8007150 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 8007146:	f7fe f997 	bl	8005478 <HAL_GetTick>
 800714a:	1b40      	subs	r0, r0, r5
 800714c:	2802      	cmp	r0, #2
 800714e:	d9b7      	bls.n	80070c0 <HAL_RCCEx_PeriphCLKConfig+0x134>
        return HAL_TIMEOUT;
 8007150:	2003      	movs	r0, #3
}
 8007152:	b003      	add	sp, #12
 8007154:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 8007156:	f7fe f98f 	bl	8005478 <HAL_GetTick>
 800715a:	1b80      	subs	r0, r0, r6
 800715c:	2802      	cmp	r0, #2
 800715e:	f67f af27 	bls.w	8006fb0 <HAL_RCCEx_PeriphCLKConfig+0x24>
 8007162:	e7f5      	b.n	8007150 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 8007164:	f7fe f988 	bl	8005478 <HAL_GetTick>
 8007168:	1b40      	subs	r0, r0, r5
 800716a:	2802      	cmp	r0, #2
 800716c:	f67f af5b 	bls.w	8007026 <HAL_RCCEx_PeriphCLKConfig+0x9a>
 8007170:	e7ee      	b.n	8007150 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 8007172:	f7fe f981 	bl	8005478 <HAL_GetTick>
 8007176:	1b80      	subs	r0, r0, r6
 8007178:	2802      	cmp	r0, #2
 800717a:	f67f af6f 	bls.w	800705c <HAL_RCCEx_PeriphCLKConfig+0xd0>
 800717e:	e7e7      	b.n	8007150 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8007180:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8007182:	f402 7240 	and.w	r2, r2, #768	; 0x300
 8007186:	4293      	cmp	r3, r2
 8007188:	f43f af72 	beq.w	8007070 <HAL_RCCEx_PeriphCLKConfig+0xe4>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800718c:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 800718e:	4a10      	ldr	r2, [pc, #64]	; (80071d0 <HAL_RCCEx_PeriphCLKConfig+0x244>)
 8007190:	2101      	movs	r1, #1
 8007192:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8007196:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 800719a:	2100      	movs	r1, #0
 800719c:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      RCC->BDCR = tmpreg1;
 80071a0:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 80071a2:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 80071a4:	07da      	lsls	r2, r3, #31
 80071a6:	f57f af63 	bpl.w	8007070 <HAL_RCCEx_PeriphCLKConfig+0xe4>
        tickstart = HAL_GetTick();
 80071aa:	f7fe f965 	bl	8005478 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80071ae:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 80071b2:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80071b4:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 80071b6:	079b      	lsls	r3, r3, #30
 80071b8:	f53f af5a 	bmi.w	8007070 <HAL_RCCEx_PeriphCLKConfig+0xe4>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80071bc:	f7fe f95c 	bl	8005478 <HAL_GetTick>
 80071c0:	1b80      	subs	r0, r0, r6
 80071c2:	42b8      	cmp	r0, r7
 80071c4:	d9f6      	bls.n	80071b4 <HAL_RCCEx_PeriphCLKConfig+0x228>
 80071c6:	e7c3      	b.n	8007150 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 80071c8:	6891      	ldr	r1, [r2, #8]
 80071ca:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 80071ce:	e75f      	b.n	8007090 <HAL_RCCEx_PeriphCLKConfig+0x104>
 80071d0:	42470000 	.word	0x42470000
 80071d4:	40023800 	.word	0x40023800
 80071d8:	40007000 	.word	0x40007000
 80071dc:	42471000 	.word	0x42471000

080071e0 <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure 
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{   
 80071e0:	b538      	push	{r3, r4, r5, lr}
 80071e2:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if(hsdram == NULL)
 80071e4:	4604      	mov	r4, r0
 80071e6:	b1c8      	cbz	r0, 800721c <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }
  
  if(hsdram->State == HAL_SDRAM_STATE_RESET)
 80071e8:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80071ec:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80071f0:	b91b      	cbnz	r3, 80071fa <HAL_SDRAM_Init+0x1a>
  {  
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 80071f2:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 80071f6:	f7fa fe25 	bl	8001e44 <HAL_SDRAM_MspInit>
#endif
  }
  
  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 80071fa:	2302      	movs	r3, #2
 80071fc:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Initialize SDRAM control Interface */
  FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 8007200:	1d21      	adds	r1, r4, #4
 8007202:	6820      	ldr	r0, [r4, #0]
 8007204:	f000 fcba 	bl	8007b7c <FMC_SDRAM_Init>
  
  /* Initialize SDRAM timing Interface */
  FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank); 
 8007208:	6862      	ldr	r2, [r4, #4]
 800720a:	6820      	ldr	r0, [r4, #0]
 800720c:	4629      	mov	r1, r5
 800720e:	f000 fceb 	bl	8007be8 <FMC_SDRAM_Timing_Init>
  
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 8007212:	2301      	movs	r3, #1
 8007214:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;
 8007218:	2000      	movs	r0, #0
}
 800721a:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 800721c:	2001      	movs	r0, #1
 800721e:	e7fc      	b.n	800721a <HAL_SDRAM_Init+0x3a>

08007220 <HAL_SDRAM_SendCommand>:
  * @param  Command SDRAM command structure
  * @param  Timeout Timeout duration
  * @retval HAL status
  */  
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 8007220:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8007222:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8007226:	2b02      	cmp	r3, #2
{
 8007228:	4604      	mov	r4, r0
 800722a:	460d      	mov	r5, r1
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 800722c:	b2d8      	uxtb	r0, r3
 800722e:	d00d      	beq.n	800724c <HAL_SDRAM_SendCommand+0x2c>
  {
    return HAL_BUSY;
  }
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8007230:	2302      	movs	r3, #2
 8007232:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Send SDRAM command */
  FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 8007236:	6820      	ldr	r0, [r4, #0]
 8007238:	f000 fd12 	bl	8007c60 <FMC_SDRAM_SendCommand>
  
  /* Update the SDRAM controller state */
  if(Command->CommandMode == FMC_SDRAM_CMD_PALL)
 800723c:	682b      	ldr	r3, [r5, #0]
 800723e:	2b02      	cmp	r3, #2
  {
    hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 8007240:	bf0c      	ite	eq
 8007242:	2305      	moveq	r3, #5
  }
  else
  {
    hsdram->State = HAL_SDRAM_STATE_READY;
 8007244:	2301      	movne	r3, #1
 8007246:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  }
  
  return HAL_OK;  
 800724a:	2000      	movs	r0, #0
}
 800724c:	bd38      	pop	{r3, r4, r5, pc}

0800724e <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.  
  * @param  RefreshRate The SDRAM refresh rate value       
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 800724e:	b510      	push	{r4, lr}
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8007250:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8007254:	2b02      	cmp	r3, #2
{
 8007256:	4604      	mov	r4, r0
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8007258:	b2d8      	uxtb	r0, r3
 800725a:	d009      	beq.n	8007270 <HAL_SDRAM_ProgramRefreshRate+0x22>
  {
    return HAL_BUSY;
  } 
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800725c:	2302      	movs	r3, #2
 800725e:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Program the refresh rate */
  FMC_SDRAM_ProgramRefreshRate(hsdram->Instance ,RefreshRate);
 8007262:	6820      	ldr	r0, [r4, #0]
 8007264:	f000 fd23 	bl	8007cae <FMC_SDRAM_ProgramRefreshRate>
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 8007268:	2301      	movs	r3, #1
 800726a:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;   
 800726e:	2000      	movs	r0, #0
}
 8007270:	bd10      	pop	{r4, pc}

08007272 <SPI_WaitFlagStateUntilTimeout.constprop.0>:
  * @param  State flag state to check
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
 8007272:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007274:	4604      	mov	r4, r0
 8007276:	460e      	mov	r6, r1
 8007278:	4615      	mov	r5, r2
 800727a:	461f      	mov	r7, r3
                                                       uint32_t Timeout, uint32_t Tickstart)
{
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800727c:	6822      	ldr	r2, [r4, #0]
 800727e:	6893      	ldr	r3, [r2, #8]
 8007280:	ea36 0303 	bics.w	r3, r6, r3
 8007284:	d001      	beq.n	800728a <SPI_WaitFlagStateUntilTimeout.constprop.0+0x18>
        return HAL_TIMEOUT;
      }
    }
  }

  return HAL_OK;
 8007286:	2000      	movs	r0, #0
 8007288:	e02d      	b.n	80072e6 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x74>
    if (Timeout != HAL_MAX_DELAY)
 800728a:	1c6b      	adds	r3, r5, #1
 800728c:	d0f7      	beq.n	800727e <SPI_WaitFlagStateUntilTimeout.constprop.0+0xc>
      if (((HAL_GetTick() - Tickstart) >= Timeout) || (Timeout == 0U))
 800728e:	f7fe f8f3 	bl	8005478 <HAL_GetTick>
 8007292:	1bc0      	subs	r0, r0, r7
 8007294:	4285      	cmp	r5, r0
 8007296:	d8f1      	bhi.n	800727c <SPI_WaitFlagStateUntilTimeout.constprop.0+0xa>
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 8007298:	6823      	ldr	r3, [r4, #0]
 800729a:	685a      	ldr	r2, [r3, #4]
 800729c:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 80072a0:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80072a2:	6862      	ldr	r2, [r4, #4]
 80072a4:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 80072a8:	d10a      	bne.n	80072c0 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x4e>
 80072aa:	68a2      	ldr	r2, [r4, #8]
 80072ac:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 80072b0:	d002      	beq.n	80072b8 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x46>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 80072b2:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 80072b6:	d103      	bne.n	80072c0 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x4e>
          __HAL_SPI_DISABLE(hspi);
 80072b8:	681a      	ldr	r2, [r3, #0]
 80072ba:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80072be:	601a      	str	r2, [r3, #0]
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 80072c0:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80072c2:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 80072c6:	d107      	bne.n	80072d8 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x66>
          SPI_RESET_CRC(hspi);
 80072c8:	681a      	ldr	r2, [r3, #0]
 80072ca:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 80072ce:	601a      	str	r2, [r3, #0]
 80072d0:	681a      	ldr	r2, [r3, #0]
 80072d2:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 80072d6:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 80072d8:	2301      	movs	r3, #1
 80072da:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
        __HAL_UNLOCK(hspi);
 80072de:	2300      	movs	r3, #0
 80072e0:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
 80072e4:	2003      	movs	r0, #3
}
 80072e6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080072e8 <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 80072e8:	b538      	push	{r3, r4, r5, lr}
 80072ea:	4613      	mov	r3, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80072ec:	6842      	ldr	r2, [r0, #4]
 80072ee:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 80072f2:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80072f4:	d11f      	bne.n	8007336 <SPI_EndRxTransaction+0x4e>
 80072f6:	6882      	ldr	r2, [r0, #8]
 80072f8:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 80072fc:	d002      	beq.n	8007304 <SPI_EndRxTransaction+0x1c>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 80072fe:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 8007302:	d107      	bne.n	8007314 <SPI_EndRxTransaction+0x2c>
  {
    /* Disable SPI peripheral */
    __HAL_SPI_DISABLE(hspi);
 8007304:	6825      	ldr	r5, [r4, #0]
 8007306:	6828      	ldr	r0, [r5, #0]
  }

  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
  {
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 8007308:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
    __HAL_SPI_DISABLE(hspi);
 800730c:	f020 0040 	bic.w	r0, r0, #64	; 0x40
 8007310:	6028      	str	r0, [r5, #0]
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 8007312:	d007      	beq.n	8007324 <SPI_EndRxTransaction+0x3c>
    {
      /* Control the BSY flag */
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8007314:	460a      	mov	r2, r1
 8007316:	2180      	movs	r1, #128	; 0x80
 8007318:	4620      	mov	r0, r4
 800731a:	f7ff ffaa 	bl	8007272 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800731e:	b920      	cbnz	r0, 800732a <SPI_EndRxTransaction+0x42>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 8007320:	2000      	movs	r0, #0
}
 8007322:	bd38      	pop	{r3, r4, r5, pc}
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8007324:	460a      	mov	r2, r1
 8007326:	2101      	movs	r1, #1
 8007328:	e7f6      	b.n	8007318 <SPI_EndRxTransaction+0x30>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800732a:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800732c:	f043 0320 	orr.w	r3, r3, #32
 8007330:	6563      	str	r3, [r4, #84]	; 0x54
      return HAL_TIMEOUT;
 8007332:	2003      	movs	r0, #3
 8007334:	e7f5      	b.n	8007322 <SPI_EndRxTransaction+0x3a>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8007336:	460a      	mov	r2, r1
 8007338:	2101      	movs	r1, #1
 800733a:	e7ee      	b.n	800731a <SPI_EndRxTransaction+0x32>

0800733c <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 800733c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800733e:	4613      	mov	r3, r2
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8007340:	4a12      	ldr	r2, [pc, #72]	; (800738c <SPI_EndRxTxTransaction+0x50>)
 8007342:	6815      	ldr	r5, [r2, #0]
 8007344:	4a12      	ldr	r2, [pc, #72]	; (8007390 <SPI_EndRxTxTransaction+0x54>)
 8007346:	fbb5 f5f2 	udiv	r5, r5, r2
 800734a:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800734e:	4355      	muls	r5, r2
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8007350:	6842      	ldr	r2, [r0, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8007352:	9501      	str	r5, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8007354:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 8007358:	4604      	mov	r4, r0
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800735a:	d10b      	bne.n	8007374 <SPI_EndRxTxTransaction+0x38>
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800735c:	460a      	mov	r2, r1
 800735e:	2180      	movs	r1, #128	; 0x80
 8007360:	f7ff ff87 	bl	8007272 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 8007364:	b178      	cbz	r0, 8007386 <SPI_EndRxTxTransaction+0x4a>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8007366:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8007368:	f043 0320 	orr.w	r3, r3, #32
 800736c:	6563      	str	r3, [r4, #84]	; 0x54
      return HAL_TIMEOUT;
 800736e:	2003      	movs	r0, #3
      count--;
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
  }

  return HAL_OK;
}
 8007370:	b003      	add	sp, #12
 8007372:	bd30      	pop	{r4, r5, pc}
      if (count == 0U)
 8007374:	9b01      	ldr	r3, [sp, #4]
 8007376:	b133      	cbz	r3, 8007386 <SPI_EndRxTxTransaction+0x4a>
      count--;
 8007378:	9b01      	ldr	r3, [sp, #4]
 800737a:	3b01      	subs	r3, #1
 800737c:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800737e:	6823      	ldr	r3, [r4, #0]
 8007380:	689b      	ldr	r3, [r3, #8]
 8007382:	061b      	lsls	r3, r3, #24
 8007384:	d4f6      	bmi.n	8007374 <SPI_EndRxTxTransaction+0x38>
  return HAL_OK;
 8007386:	2000      	movs	r0, #0
 8007388:	e7f2      	b.n	8007370 <SPI_EndRxTxTransaction+0x34>
 800738a:	bf00      	nop
 800738c:	20000078 	.word	0x20000078
 8007390:	016e3600 	.word	0x016e3600

08007394 <HAL_SPI_Init>:
{
 8007394:	b510      	push	{r4, lr}
  if (hspi == NULL)
 8007396:	4604      	mov	r4, r0
 8007398:	2800      	cmp	r0, #0
 800739a:	d036      	beq.n	800740a <HAL_SPI_Init+0x76>
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800739c:	2300      	movs	r3, #0
 800739e:	6283      	str	r3, [r0, #40]	; 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 80073a0:	f890 3051 	ldrb.w	r3, [r0, #81]	; 0x51
 80073a4:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80073a8:	b91b      	cbnz	r3, 80073b2 <HAL_SPI_Init+0x1e>
    hspi->Lock = HAL_UNLOCKED;
 80073aa:	f880 2050 	strb.w	r2, [r0, #80]	; 0x50
    HAL_SPI_MspInit(hspi);
 80073ae:	f7fa fcf1 	bl	8001d94 <HAL_SPI_MspInit>
  __HAL_SPI_DISABLE(hspi);
 80073b2:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, (hspi->Init.Mode | hspi->Init.Direction | hspi->Init.DataSize |
 80073b4:	69a2      	ldr	r2, [r4, #24]
  hspi->State = HAL_SPI_STATE_BUSY;
 80073b6:	2302      	movs	r3, #2
 80073b8:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_SPI_DISABLE(hspi);
 80073bc:	680b      	ldr	r3, [r1, #0]
 80073be:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80073c2:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, (hspi->Init.Mode | hspi->Init.Direction | hspi->Init.DataSize |
 80073c4:	e9d4 3001 	ldrd	r3, r0, [r4, #4]
 80073c8:	4303      	orrs	r3, r0
 80073ca:	68e0      	ldr	r0, [r4, #12]
 80073cc:	4303      	orrs	r3, r0
 80073ce:	6920      	ldr	r0, [r4, #16]
 80073d0:	4303      	orrs	r3, r0
 80073d2:	6960      	ldr	r0, [r4, #20]
 80073d4:	4303      	orrs	r3, r0
 80073d6:	69e0      	ldr	r0, [r4, #28]
 80073d8:	4303      	orrs	r3, r0
 80073da:	6a20      	ldr	r0, [r4, #32]
 80073dc:	4303      	orrs	r3, r0
 80073de:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 80073e0:	4303      	orrs	r3, r0
 80073e2:	f402 7000 	and.w	r0, r2, #512	; 0x200
 80073e6:	4303      	orrs	r3, r0
 80073e8:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | hspi->Init.TIMode));
 80073ea:	0c12      	lsrs	r2, r2, #16
 80073ec:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80073ee:	f002 0204 	and.w	r2, r2, #4
 80073f2:	431a      	orrs	r2, r3
 80073f4:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 80073f6:	69cb      	ldr	r3, [r1, #28]
 80073f8:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80073fc:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 80073fe:	2000      	movs	r0, #0
  hspi->State     = HAL_SPI_STATE_READY;
 8007400:	2301      	movs	r3, #1
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8007402:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 8007404:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
}
 8007408:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800740a:	2001      	movs	r0, #1
 800740c:	e7fc      	b.n	8007408 <HAL_SPI_Init+0x74>

0800740e <HAL_SPI_Transmit>:
{
 800740e:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8007412:	461e      	mov	r6, r3
  __HAL_LOCK(hspi);
 8007414:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
 8007418:	2b01      	cmp	r3, #1
{
 800741a:	4604      	mov	r4, r0
 800741c:	460d      	mov	r5, r1
 800741e:	4617      	mov	r7, r2
  __HAL_LOCK(hspi);
 8007420:	f000 809d 	beq.w	800755e <HAL_SPI_Transmit+0x150>
 8007424:	2301      	movs	r3, #1
 8007426:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
  tickstart = HAL_GetTick();
 800742a:	f7fe f825 	bl	8005478 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800742e:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 8007432:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 8007434:	4680      	mov	r8, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 8007436:	b2d8      	uxtb	r0, r3
 8007438:	f040 808f 	bne.w	800755a <HAL_SPI_Transmit+0x14c>
  if ((pData == NULL) || (Size == 0U))
 800743c:	2d00      	cmp	r5, #0
 800743e:	d05a      	beq.n	80074f6 <HAL_SPI_Transmit+0xe8>
 8007440:	2f00      	cmp	r7, #0
 8007442:	d058      	beq.n	80074f6 <HAL_SPI_Transmit+0xe8>
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 8007444:	2303      	movs	r3, #3
 8007446:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800744a:	68a2      	ldr	r2, [r4, #8]
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 800744c:	6325      	str	r5, [r4, #48]	; 0x30
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800744e:	2300      	movs	r3, #0
 8007450:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->RxISR       = NULL;
 8007452:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->TxXferCount = Size;
 8007456:	86e7      	strh	r7, [r4, #54]	; 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 8007458:	63a3      	str	r3, [r4, #56]	; 0x38
  hspi->RxXferCount = 0U;
 800745a:	87e3      	strh	r3, [r4, #62]	; 0x3e
  hspi->RxXferSize  = 0U;
 800745c:	87a3      	strh	r3, [r4, #60]	; 0x3c
    SPI_1LINE_TX(hspi);
 800745e:	6823      	ldr	r3, [r4, #0]
  hspi->TxXferSize  = Size;
 8007460:	86a7      	strh	r7, [r4, #52]	; 0x34
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007462:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
    SPI_1LINE_TX(hspi);
 8007466:	bf08      	it	eq
 8007468:	681a      	ldreq	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800746a:	68e1      	ldr	r1, [r4, #12]
    SPI_1LINE_TX(hspi);
 800746c:	bf04      	itt	eq
 800746e:	f442 4280 	orreq.w	r2, r2, #16384	; 0x4000
 8007472:	601a      	streq	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8007474:	681a      	ldr	r2, [r3, #0]
 8007476:	0652      	lsls	r2, r2, #25
    __HAL_SPI_ENABLE(hspi);
 8007478:	bf5e      	ittt	pl
 800747a:	681a      	ldrpl	r2, [r3, #0]
 800747c:	f042 0240 	orrpl.w	r2, r2, #64	; 0x40
 8007480:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8007482:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8007486:	6862      	ldr	r2, [r4, #4]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8007488:	d141      	bne.n	800750e <HAL_SPI_Transmit+0x100>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800748a:	b10a      	cbz	r2, 8007490 <HAL_SPI_Transmit+0x82>
 800748c:	2f01      	cmp	r7, #1
 800748e:	d107      	bne.n	80074a0 <HAL_SPI_Transmit+0x92>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8007490:	f835 2b02 	ldrh.w	r2, [r5], #2
 8007494:	60da      	str	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8007496:	6325      	str	r5, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8007498:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800749a:	3b01      	subs	r3, #1
 800749c:	b29b      	uxth	r3, r3
 800749e:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 80074a0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80074a2:	b29b      	uxth	r3, r3
 80074a4:	b9a3      	cbnz	r3, 80074d0 <HAL_SPI_Transmit+0xc2>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 80074a6:	4642      	mov	r2, r8
 80074a8:	4631      	mov	r1, r6
 80074aa:	4620      	mov	r0, r4
 80074ac:	f7ff ff46 	bl	800733c <SPI_EndRxTxTransaction>
 80074b0:	2800      	cmp	r0, #0
 80074b2:	d14f      	bne.n	8007554 <HAL_SPI_Transmit+0x146>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 80074b4:	68a3      	ldr	r3, [r4, #8]
 80074b6:	b933      	cbnz	r3, 80074c6 <HAL_SPI_Transmit+0xb8>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 80074b8:	9301      	str	r3, [sp, #4]
 80074ba:	6823      	ldr	r3, [r4, #0]
 80074bc:	68da      	ldr	r2, [r3, #12]
 80074be:	9201      	str	r2, [sp, #4]
 80074c0:	689b      	ldr	r3, [r3, #8]
 80074c2:	9301      	str	r3, [sp, #4]
 80074c4:	9b01      	ldr	r3, [sp, #4]
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 80074c6:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 80074c8:	3800      	subs	r0, #0
 80074ca:	bf18      	it	ne
 80074cc:	2001      	movne	r0, #1
error:
 80074ce:	e012      	b.n	80074f6 <HAL_SPI_Transmit+0xe8>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 80074d0:	6822      	ldr	r2, [r4, #0]
 80074d2:	6893      	ldr	r3, [r2, #8]
 80074d4:	0798      	lsls	r0, r3, #30
 80074d6:	d505      	bpl.n	80074e4 <HAL_SPI_Transmit+0xd6>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 80074d8:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80074da:	f833 1b02 	ldrh.w	r1, [r3], #2
 80074de:	60d1      	str	r1, [r2, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 80074e0:	6323      	str	r3, [r4, #48]	; 0x30
 80074e2:	e7d9      	b.n	8007498 <HAL_SPI_Transmit+0x8a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 80074e4:	f7fd ffc8 	bl	8005478 <HAL_GetTick>
 80074e8:	eba0 0008 	sub.w	r0, r0, r8
 80074ec:	42b0      	cmp	r0, r6
 80074ee:	d30b      	bcc.n	8007508 <HAL_SPI_Transmit+0xfa>
 80074f0:	1c71      	adds	r1, r6, #1
 80074f2:	d0d5      	beq.n	80074a0 <HAL_SPI_Transmit+0x92>
          errorcode = HAL_TIMEOUT;
 80074f4:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 80074f6:	2301      	movs	r3, #1
 80074f8:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 80074fc:	2300      	movs	r3, #0
 80074fe:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 8007502:	b002      	add	sp, #8
 8007504:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8007508:	2e00      	cmp	r6, #0
 800750a:	d1c9      	bne.n	80074a0 <HAL_SPI_Transmit+0x92>
 800750c:	e7f2      	b.n	80074f4 <HAL_SPI_Transmit+0xe6>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800750e:	b10a      	cbz	r2, 8007514 <HAL_SPI_Transmit+0x106>
 8007510:	2f01      	cmp	r7, #1
 8007512:	d108      	bne.n	8007526 <HAL_SPI_Transmit+0x118>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8007514:	782a      	ldrb	r2, [r5, #0]
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8007516:	731a      	strb	r2, [r3, #12]
        hspi->pTxBuffPtr += sizeof(uint8_t);
 8007518:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800751a:	3301      	adds	r3, #1
 800751c:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800751e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007520:	3b01      	subs	r3, #1
 8007522:	b29b      	uxth	r3, r3
 8007524:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 8007526:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007528:	b29b      	uxth	r3, r3
 800752a:	2b00      	cmp	r3, #0
 800752c:	d0bb      	beq.n	80074a6 <HAL_SPI_Transmit+0x98>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800752e:	6823      	ldr	r3, [r4, #0]
 8007530:	689a      	ldr	r2, [r3, #8]
 8007532:	0792      	lsls	r2, r2, #30
 8007534:	d502      	bpl.n	800753c <HAL_SPI_Transmit+0x12e>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8007536:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8007538:	7812      	ldrb	r2, [r2, #0]
 800753a:	e7ec      	b.n	8007516 <HAL_SPI_Transmit+0x108>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800753c:	f7fd ff9c 	bl	8005478 <HAL_GetTick>
 8007540:	eba0 0008 	sub.w	r0, r0, r8
 8007544:	42b0      	cmp	r0, r6
 8007546:	d302      	bcc.n	800754e <HAL_SPI_Transmit+0x140>
 8007548:	1c73      	adds	r3, r6, #1
 800754a:	d0ec      	beq.n	8007526 <HAL_SPI_Transmit+0x118>
 800754c:	e7d2      	b.n	80074f4 <HAL_SPI_Transmit+0xe6>
 800754e:	2e00      	cmp	r6, #0
 8007550:	d1e9      	bne.n	8007526 <HAL_SPI_Transmit+0x118>
 8007552:	e7cf      	b.n	80074f4 <HAL_SPI_Transmit+0xe6>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8007554:	2320      	movs	r3, #32
 8007556:	6563      	str	r3, [r4, #84]	; 0x54
 8007558:	e7ac      	b.n	80074b4 <HAL_SPI_Transmit+0xa6>
    errorcode = HAL_BUSY;
 800755a:	2002      	movs	r0, #2
 800755c:	e7cb      	b.n	80074f6 <HAL_SPI_Transmit+0xe8>
  __HAL_LOCK(hspi);
 800755e:	2002      	movs	r0, #2
 8007560:	e7cf      	b.n	8007502 <HAL_SPI_Transmit+0xf4>

08007562 <HAL_SPI_TransmitReceive>:
{
 8007562:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8007566:	461e      	mov	r6, r3
  __HAL_LOCK(hspi);
 8007568:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
{
 800756c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  __HAL_LOCK(hspi);
 800756e:	2b01      	cmp	r3, #1
{
 8007570:	4604      	mov	r4, r0
 8007572:	460d      	mov	r5, r1
 8007574:	4691      	mov	r9, r2
  __HAL_LOCK(hspi);
 8007576:	f000 80e6 	beq.w	8007746 <HAL_SPI_TransmitReceive+0x1e4>
 800757a:	2301      	movs	r3, #1
 800757c:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
  tickstart = HAL_GetTick();
 8007580:	f7fd ff7a 	bl	8005478 <HAL_GetTick>
  tmp_state           = hspi->State;
 8007584:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  tmp_mode            = hspi->Init.Mode;
 8007588:	6862      	ldr	r2, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800758a:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 800758c:	4680      	mov	r8, r0
  tmp_state           = hspi->State;
 800758e:	b2d9      	uxtb	r1, r3
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 8007590:	d00a      	beq.n	80075a8 <HAL_SPI_TransmitReceive+0x46>
 8007592:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 8007596:	f040 80d4 	bne.w	8007742 <HAL_SPI_TransmitReceive+0x1e0>
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 800759a:	68a3      	ldr	r3, [r4, #8]
 800759c:	2b00      	cmp	r3, #0
 800759e:	f040 80d0 	bne.w	8007742 <HAL_SPI_TransmitReceive+0x1e0>
 80075a2:	2904      	cmp	r1, #4
 80075a4:	f040 80cd 	bne.w	8007742 <HAL_SPI_TransmitReceive+0x1e0>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 80075a8:	2d00      	cmp	r5, #0
 80075aa:	d040      	beq.n	800762e <HAL_SPI_TransmitReceive+0xcc>
 80075ac:	f1b9 0f00 	cmp.w	r9, #0
 80075b0:	d03d      	beq.n	800762e <HAL_SPI_TransmitReceive+0xcc>
 80075b2:	2e00      	cmp	r6, #0
 80075b4:	d03b      	beq.n	800762e <HAL_SPI_TransmitReceive+0xcc>
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 80075b6:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 80075ba:	f8c4 9038 	str.w	r9, [r4, #56]	; 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 80075be:	2b04      	cmp	r3, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 80075c0:	bf1c      	itt	ne
 80075c2:	2305      	movne	r3, #5
 80075c4:	f884 3051 	strbne.w	r3, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 80075c8:	2300      	movs	r3, #0
 80075ca:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->TxISR       = NULL;
 80075cc:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 80075d0:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 80075d2:	87e6      	strh	r6, [r4, #62]	; 0x3e
  hspi->TxXferCount = Size;
 80075d4:	86e6      	strh	r6, [r4, #54]	; 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 80075d6:	6819      	ldr	r1, [r3, #0]
  hspi->RxXferSize  = Size;
 80075d8:	87a6      	strh	r6, [r4, #60]	; 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 80075da:	0649      	lsls	r1, r1, #25
    __HAL_SPI_ENABLE(hspi);
 80075dc:	bf58      	it	pl
 80075de:	6819      	ldrpl	r1, [r3, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 80075e0:	6325      	str	r5, [r4, #48]	; 0x30
    __HAL_SPI_ENABLE(hspi);
 80075e2:	bf58      	it	pl
 80075e4:	f041 0140 	orrpl.w	r1, r1, #64	; 0x40
  hspi->TxXferSize  = Size;
 80075e8:	86a6      	strh	r6, [r4, #52]	; 0x34
    __HAL_SPI_ENABLE(hspi);
 80075ea:	bf58      	it	pl
 80075ec:	6019      	strpl	r1, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 80075ee:	68e1      	ldr	r1, [r4, #12]
 80075f0:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
 80075f4:	d152      	bne.n	800769c <HAL_SPI_TransmitReceive+0x13a>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 80075f6:	b10a      	cbz	r2, 80075fc <HAL_SPI_TransmitReceive+0x9a>
 80075f8:	2e01      	cmp	r6, #1
 80075fa:	d107      	bne.n	800760c <HAL_SPI_TransmitReceive+0xaa>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 80075fc:	f835 2b02 	ldrh.w	r2, [r5], #2
 8007600:	60da      	str	r2, [r3, #12]
      hspi->TxXferCount--;
 8007602:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8007604:	6325      	str	r5, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 8007606:	3b01      	subs	r3, #1
 8007608:	b29b      	uxth	r3, r3
 800760a:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 1U;
 800760c:	2501      	movs	r5, #1
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800760e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007610:	b29b      	uxth	r3, r3
 8007612:	b973      	cbnz	r3, 8007632 <HAL_SPI_TransmitReceive+0xd0>
 8007614:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007616:	b29b      	uxth	r3, r3
 8007618:	b95b      	cbnz	r3, 8007632 <HAL_SPI_TransmitReceive+0xd0>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800761a:	4642      	mov	r2, r8
 800761c:	4639      	mov	r1, r7
 800761e:	4620      	mov	r0, r4
 8007620:	f7ff fe8c 	bl	800733c <SPI_EndRxTxTransaction>
 8007624:	2800      	cmp	r0, #0
 8007626:	f000 8081 	beq.w	800772c <HAL_SPI_TransmitReceive+0x1ca>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800762a:	2320      	movs	r3, #32
 800762c:	6563      	str	r3, [r4, #84]	; 0x54
    errorcode = HAL_ERROR;
 800762e:	2001      	movs	r0, #1
 8007630:	e02b      	b.n	800768a <HAL_SPI_TransmitReceive+0x128>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8007632:	6821      	ldr	r1, [r4, #0]
 8007634:	688b      	ldr	r3, [r1, #8]
 8007636:	079e      	lsls	r6, r3, #30
 8007638:	d50d      	bpl.n	8007656 <HAL_SPI_TransmitReceive+0xf4>
 800763a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800763c:	b29b      	uxth	r3, r3
 800763e:	b153      	cbz	r3, 8007656 <HAL_SPI_TransmitReceive+0xf4>
 8007640:	b14d      	cbz	r5, 8007656 <HAL_SPI_TransmitReceive+0xf4>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8007642:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8007644:	f833 2b02 	ldrh.w	r2, [r3], #2
 8007648:	60ca      	str	r2, [r1, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800764a:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800764c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800764e:	3b01      	subs	r3, #1
 8007650:	b29b      	uxth	r3, r3
 8007652:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 8007654:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8007656:	688a      	ldr	r2, [r1, #8]
 8007658:	f012 0201 	ands.w	r2, r2, #1
 800765c:	d00c      	beq.n	8007678 <HAL_SPI_TransmitReceive+0x116>
 800765e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007660:	b29b      	uxth	r3, r3
 8007662:	b14b      	cbz	r3, 8007678 <HAL_SPI_TransmitReceive+0x116>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8007664:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8007666:	68c9      	ldr	r1, [r1, #12]
 8007668:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800766c:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800766e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007670:	3b01      	subs	r3, #1
 8007672:	b29b      	uxth	r3, r3
 8007674:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 8007676:	4615      	mov	r5, r2
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 8007678:	f7fd fefe 	bl	8005478 <HAL_GetTick>
 800767c:	eba0 0008 	sub.w	r0, r0, r8
 8007680:	42b8      	cmp	r0, r7
 8007682:	d3c4      	bcc.n	800760e <HAL_SPI_TransmitReceive+0xac>
 8007684:	1c78      	adds	r0, r7, #1
 8007686:	d0c2      	beq.n	800760e <HAL_SPI_TransmitReceive+0xac>
        errorcode = HAL_TIMEOUT;
 8007688:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 800768a:	2301      	movs	r3, #1
 800768c:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 8007690:	2300      	movs	r3, #0
 8007692:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 8007696:	b003      	add	sp, #12
 8007698:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800769c:	b10a      	cbz	r2, 80076a2 <HAL_SPI_TransmitReceive+0x140>
 800769e:	2e01      	cmp	r6, #1
 80076a0:	d108      	bne.n	80076b4 <HAL_SPI_TransmitReceive+0x152>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 80076a2:	782a      	ldrb	r2, [r5, #0]
 80076a4:	731a      	strb	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 80076a6:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80076a8:	3301      	adds	r3, #1
 80076aa:	6323      	str	r3, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 80076ac:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80076ae:	3b01      	subs	r3, #1
 80076b0:	b29b      	uxth	r3, r3
 80076b2:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 1U;
 80076b4:	2501      	movs	r5, #1
 80076b6:	e02d      	b.n	8007714 <HAL_SPI_TransmitReceive+0x1b2>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 80076b8:	6822      	ldr	r2, [r4, #0]
 80076ba:	6893      	ldr	r3, [r2, #8]
 80076bc:	0799      	lsls	r1, r3, #30
 80076be:	d50e      	bpl.n	80076de <HAL_SPI_TransmitReceive+0x17c>
 80076c0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80076c2:	b29b      	uxth	r3, r3
 80076c4:	b15b      	cbz	r3, 80076de <HAL_SPI_TransmitReceive+0x17c>
 80076c6:	b155      	cbz	r5, 80076de <HAL_SPI_TransmitReceive+0x17c>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 80076c8:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80076ca:	781b      	ldrb	r3, [r3, #0]
 80076cc:	7313      	strb	r3, [r2, #12]
        hspi->pTxBuffPtr++;
 80076ce:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80076d0:	3301      	adds	r3, #1
 80076d2:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 80076d4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80076d6:	3b01      	subs	r3, #1
 80076d8:	b29b      	uxth	r3, r3
 80076da:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 80076dc:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 80076de:	6822      	ldr	r2, [r4, #0]
 80076e0:	6891      	ldr	r1, [r2, #8]
 80076e2:	f011 0101 	ands.w	r1, r1, #1
 80076e6:	d00d      	beq.n	8007704 <HAL_SPI_TransmitReceive+0x1a2>
 80076e8:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80076ea:	b29b      	uxth	r3, r3
 80076ec:	b153      	cbz	r3, 8007704 <HAL_SPI_TransmitReceive+0x1a2>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 80076ee:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80076f0:	68d2      	ldr	r2, [r2, #12]
 80076f2:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr++;
 80076f4:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80076f6:	3301      	adds	r3, #1
 80076f8:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 80076fa:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80076fc:	3b01      	subs	r3, #1
 80076fe:	b29b      	uxth	r3, r3
 8007700:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 8007702:	460d      	mov	r5, r1
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 8007704:	f7fd feb8 	bl	8005478 <HAL_GetTick>
 8007708:	eba0 0008 	sub.w	r0, r0, r8
 800770c:	42b8      	cmp	r0, r7
 800770e:	d30a      	bcc.n	8007726 <HAL_SPI_TransmitReceive+0x1c4>
 8007710:	1c7b      	adds	r3, r7, #1
 8007712:	d1b9      	bne.n	8007688 <HAL_SPI_TransmitReceive+0x126>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8007714:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007716:	b29b      	uxth	r3, r3
 8007718:	2b00      	cmp	r3, #0
 800771a:	d1cd      	bne.n	80076b8 <HAL_SPI_TransmitReceive+0x156>
 800771c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800771e:	b29b      	uxth	r3, r3
 8007720:	2b00      	cmp	r3, #0
 8007722:	d1c9      	bne.n	80076b8 <HAL_SPI_TransmitReceive+0x156>
 8007724:	e779      	b.n	800761a <HAL_SPI_TransmitReceive+0xb8>
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 8007726:	2f00      	cmp	r7, #0
 8007728:	d1f4      	bne.n	8007714 <HAL_SPI_TransmitReceive+0x1b2>
 800772a:	e7ad      	b.n	8007688 <HAL_SPI_TransmitReceive+0x126>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800772c:	68a3      	ldr	r3, [r4, #8]
 800772e:	2b00      	cmp	r3, #0
 8007730:	d1ab      	bne.n	800768a <HAL_SPI_TransmitReceive+0x128>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8007732:	6823      	ldr	r3, [r4, #0]
 8007734:	9001      	str	r0, [sp, #4]
 8007736:	68da      	ldr	r2, [r3, #12]
 8007738:	9201      	str	r2, [sp, #4]
 800773a:	689b      	ldr	r3, [r3, #8]
 800773c:	9301      	str	r3, [sp, #4]
 800773e:	9b01      	ldr	r3, [sp, #4]
 8007740:	e7a3      	b.n	800768a <HAL_SPI_TransmitReceive+0x128>
    errorcode = HAL_BUSY;
 8007742:	2002      	movs	r0, #2
 8007744:	e7a1      	b.n	800768a <HAL_SPI_TransmitReceive+0x128>
  __HAL_LOCK(hspi);
 8007746:	2002      	movs	r0, #2
 8007748:	e7a5      	b.n	8007696 <HAL_SPI_TransmitReceive+0x134>

0800774a <HAL_SPI_Receive>:
{
 800774a:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800774e:	461d      	mov	r5, r3
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 8007750:	6843      	ldr	r3, [r0, #4]
 8007752:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
{
 8007756:	4604      	mov	r4, r0
 8007758:	4689      	mov	r9, r1
 800775a:	4617      	mov	r7, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800775c:	d10c      	bne.n	8007778 <HAL_SPI_Receive+0x2e>
 800775e:	6883      	ldr	r3, [r0, #8]
 8007760:	b953      	cbnz	r3, 8007778 <HAL_SPI_Receive+0x2e>
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 8007762:	2304      	movs	r3, #4
 8007764:	f880 3051 	strb.w	r3, [r0, #81]	; 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 8007768:	4613      	mov	r3, r2
 800776a:	9500      	str	r5, [sp, #0]
 800776c:	460a      	mov	r2, r1
 800776e:	f7ff fef8 	bl	8007562 <HAL_SPI_TransmitReceive>
}
 8007772:	b003      	add	sp, #12
 8007774:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  __HAL_LOCK(hspi);
 8007778:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 800777c:	2b01      	cmp	r3, #1
 800777e:	f000 8084 	beq.w	800788a <HAL_SPI_Receive+0x140>
 8007782:	2301      	movs	r3, #1
 8007784:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 8007788:	f7fd fe76 	bl	8005478 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800778c:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 8007790:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 8007792:	4680      	mov	r8, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 8007794:	b2d8      	uxtb	r0, r3
 8007796:	d176      	bne.n	8007886 <HAL_SPI_Receive+0x13c>
  if ((pData == NULL) || (Size == 0U))
 8007798:	f1b9 0f00 	cmp.w	r9, #0
 800779c:	d05a      	beq.n	8007854 <HAL_SPI_Receive+0x10a>
 800779e:	2f00      	cmp	r7, #0
 80077a0:	d058      	beq.n	8007854 <HAL_SPI_Receive+0x10a>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80077a2:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 80077a4:	f8c4 9038 	str.w	r9, [r4, #56]	; 0x38
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 80077a8:	2304      	movs	r3, #4
 80077aa:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 80077ae:	2600      	movs	r6, #0
    SPI_1LINE_RX(hspi);
 80077b0:	6823      	ldr	r3, [r4, #0]
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 80077b2:	6566      	str	r6, [r4, #84]	; 0x54
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80077b4:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
  hspi->RxXferCount = Size;
 80077b8:	87e7      	strh	r7, [r4, #62]	; 0x3e
  hspi->TxXferCount = 0U;
 80077ba:	86e6      	strh	r6, [r4, #54]	; 0x36
    SPI_1LINE_RX(hspi);
 80077bc:	bf08      	it	eq
 80077be:	681a      	ldreq	r2, [r3, #0]
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 80077c0:	6326      	str	r6, [r4, #48]	; 0x30
    SPI_1LINE_RX(hspi);
 80077c2:	bf08      	it	eq
 80077c4:	f422 4280 	biceq.w	r2, r2, #16384	; 0x4000
  hspi->TxISR       = NULL;
 80077c8:	e9c4 6610 	strd	r6, r6, [r4, #64]	; 0x40
  hspi->TxXferSize  = 0U;
 80077cc:	86a6      	strh	r6, [r4, #52]	; 0x34
  hspi->RxXferSize  = Size;
 80077ce:	87a7      	strh	r7, [r4, #60]	; 0x3c
    SPI_1LINE_RX(hspi);
 80077d0:	bf08      	it	eq
 80077d2:	601a      	streq	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 80077d4:	681a      	ldr	r2, [r3, #0]
 80077d6:	0656      	lsls	r6, r2, #25
    __HAL_SPI_ENABLE(hspi);
 80077d8:	bf5e      	ittt	pl
 80077da:	681a      	ldrpl	r2, [r3, #0]
 80077dc:	f042 0240 	orrpl.w	r2, r2, #64	; 0x40
 80077e0:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 80077e2:	68e3      	ldr	r3, [r4, #12]
 80077e4:	b1f3      	cbz	r3, 8007824 <HAL_SPI_Receive+0xda>
    while (hspi->RxXferCount > 0U)
 80077e6:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80077e8:	b29b      	uxth	r3, r3
 80077ea:	b1fb      	cbz	r3, 800782c <HAL_SPI_Receive+0xe2>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 80077ec:	6823      	ldr	r3, [r4, #0]
 80077ee:	689a      	ldr	r2, [r3, #8]
 80077f0:	07d2      	lsls	r2, r2, #31
 80077f2:	d539      	bpl.n	8007868 <HAL_SPI_Receive+0x11e>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 80077f4:	68da      	ldr	r2, [r3, #12]
 80077f6:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80077f8:	f823 2b02 	strh.w	r2, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 80077fc:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 80077fe:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007800:	3b01      	subs	r3, #1
 8007802:	b29b      	uxth	r3, r3
 8007804:	87e3      	strh	r3, [r4, #62]	; 0x3e
 8007806:	e7ee      	b.n	80077e6 <HAL_SPI_Receive+0x9c>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 8007808:	6823      	ldr	r3, [r4, #0]
 800780a:	689a      	ldr	r2, [r3, #8]
 800780c:	07d0      	lsls	r0, r2, #31
 800780e:	d518      	bpl.n	8007842 <HAL_SPI_Receive+0xf8>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 8007810:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8007812:	7b1b      	ldrb	r3, [r3, #12]
 8007814:	7013      	strb	r3, [r2, #0]
        hspi->pRxBuffPtr += sizeof(uint8_t);
 8007816:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8007818:	3301      	adds	r3, #1
 800781a:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800781c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800781e:	3b01      	subs	r3, #1
 8007820:	b29b      	uxth	r3, r3
 8007822:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 8007824:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007826:	b29b      	uxth	r3, r3
 8007828:	2b00      	cmp	r3, #0
 800782a:	d1ed      	bne.n	8007808 <HAL_SPI_Receive+0xbe>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800782c:	4642      	mov	r2, r8
 800782e:	4629      	mov	r1, r5
 8007830:	4620      	mov	r0, r4
 8007832:	f7ff fd59 	bl	80072e8 <SPI_EndRxTransaction>
 8007836:	bb18      	cbnz	r0, 8007880 <HAL_SPI_Receive+0x136>
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8007838:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800783a:	3800      	subs	r0, #0
 800783c:	bf18      	it	ne
 800783e:	2001      	movne	r0, #1
error :
 8007840:	e008      	b.n	8007854 <HAL_SPI_Receive+0x10a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8007842:	f7fd fe19 	bl	8005478 <HAL_GetTick>
 8007846:	eba0 0008 	sub.w	r0, r0, r8
 800784a:	42a8      	cmp	r0, r5
 800784c:	d309      	bcc.n	8007862 <HAL_SPI_Receive+0x118>
 800784e:	1c69      	adds	r1, r5, #1
 8007850:	d0e8      	beq.n	8007824 <HAL_SPI_Receive+0xda>
          errorcode = HAL_TIMEOUT;
 8007852:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 8007854:	2301      	movs	r3, #1
 8007856:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800785a:	2300      	movs	r3, #0
 800785c:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  return errorcode;
 8007860:	e787      	b.n	8007772 <HAL_SPI_Receive+0x28>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8007862:	2d00      	cmp	r5, #0
 8007864:	d1de      	bne.n	8007824 <HAL_SPI_Receive+0xda>
 8007866:	e7f4      	b.n	8007852 <HAL_SPI_Receive+0x108>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8007868:	f7fd fe06 	bl	8005478 <HAL_GetTick>
 800786c:	eba0 0008 	sub.w	r0, r0, r8
 8007870:	42a8      	cmp	r0, r5
 8007872:	d302      	bcc.n	800787a <HAL_SPI_Receive+0x130>
 8007874:	1c6b      	adds	r3, r5, #1
 8007876:	d0b6      	beq.n	80077e6 <HAL_SPI_Receive+0x9c>
 8007878:	e7eb      	b.n	8007852 <HAL_SPI_Receive+0x108>
 800787a:	2d00      	cmp	r5, #0
 800787c:	d1b3      	bne.n	80077e6 <HAL_SPI_Receive+0x9c>
 800787e:	e7e8      	b.n	8007852 <HAL_SPI_Receive+0x108>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8007880:	2320      	movs	r3, #32
 8007882:	6563      	str	r3, [r4, #84]	; 0x54
 8007884:	e7d8      	b.n	8007838 <HAL_SPI_Receive+0xee>
    errorcode = HAL_BUSY;
 8007886:	2002      	movs	r0, #2
 8007888:	e7e4      	b.n	8007854 <HAL_SPI_Receive+0x10a>
  __HAL_LOCK(hspi);
 800788a:	2002      	movs	r0, #2
 800788c:	e771      	b.n	8007772 <HAL_SPI_Receive+0x28>

0800788e <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800788e:	6803      	ldr	r3, [r0, #0]
 8007890:	68da      	ldr	r2, [r3, #12]
 8007892:	f042 0201 	orr.w	r2, r2, #1
 8007896:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8007898:	689a      	ldr	r2, [r3, #8]
 800789a:	f002 0207 	and.w	r2, r2, #7
  if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800789e:	2a06      	cmp	r2, #6
  {
    __HAL_TIM_ENABLE(htim);
 80078a0:	bf1e      	ittt	ne
 80078a2:	681a      	ldrne	r2, [r3, #0]
 80078a4:	f042 0201 	orrne.w	r2, r2, #1
 80078a8:	601a      	strne	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
}
 80078aa:	2000      	movs	r0, #0
 80078ac:	4770      	bx	lr

080078ae <HAL_TIM_OC_DelayElapsedCallback>:
 80078ae:	4770      	bx	lr

080078b0 <HAL_TIM_IC_CaptureCallback>:
 80078b0:	4770      	bx	lr

080078b2 <HAL_TIM_PWM_PulseFinishedCallback>:
 80078b2:	4770      	bx	lr

080078b4 <HAL_TIM_TriggerCallback>:
 80078b4:	4770      	bx	lr

080078b6 <HAL_TIM_IRQHandler>:
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
  /* Capture compare 1 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 80078b6:	6803      	ldr	r3, [r0, #0]
 80078b8:	691a      	ldr	r2, [r3, #16]
 80078ba:	0791      	lsls	r1, r2, #30
{
 80078bc:	b510      	push	{r4, lr}
 80078be:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 80078c0:	d50e      	bpl.n	80078e0 <HAL_TIM_IRQHandler+0x2a>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 80078c2:	68da      	ldr	r2, [r3, #12]
 80078c4:	0792      	lsls	r2, r2, #30
 80078c6:	d50b      	bpl.n	80078e0 <HAL_TIM_IRQHandler+0x2a>
    {
      {
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 80078c8:	f06f 0202 	mvn.w	r2, #2
 80078cc:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 80078ce:	2201      	movs	r2, #1
 80078d0:	7702      	strb	r2, [r0, #28]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 80078d2:	699b      	ldr	r3, [r3, #24]
 80078d4:	079b      	lsls	r3, r3, #30
 80078d6:	d077      	beq.n	80079c8 <HAL_TIM_IRQHandler+0x112>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 80078d8:	f7ff ffea 	bl	80078b0 <HAL_TIM_IC_CaptureCallback>
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
          HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80078dc:	2300      	movs	r3, #0
 80078de:	7723      	strb	r3, [r4, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 80078e0:	6823      	ldr	r3, [r4, #0]
 80078e2:	691a      	ldr	r2, [r3, #16]
 80078e4:	0750      	lsls	r0, r2, #29
 80078e6:	d510      	bpl.n	800790a <HAL_TIM_IRQHandler+0x54>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 80078e8:	68da      	ldr	r2, [r3, #12]
 80078ea:	0751      	lsls	r1, r2, #29
 80078ec:	d50d      	bpl.n	800790a <HAL_TIM_IRQHandler+0x54>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 80078ee:	f06f 0204 	mvn.w	r2, #4
 80078f2:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 80078f4:	2202      	movs	r2, #2
 80078f6:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 80078f8:	699b      	ldr	r3, [r3, #24]
 80078fa:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 80078fe:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8007900:	d068      	beq.n	80079d4 <HAL_TIM_IRQHandler+0x11e>
        HAL_TIM_IC_CaptureCallback(htim);
 8007902:	f7ff ffd5 	bl	80078b0 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8007906:	2300      	movs	r3, #0
 8007908:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 3 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800790a:	6823      	ldr	r3, [r4, #0]
 800790c:	691a      	ldr	r2, [r3, #16]
 800790e:	0712      	lsls	r2, r2, #28
 8007910:	d50f      	bpl.n	8007932 <HAL_TIM_IRQHandler+0x7c>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 8007912:	68da      	ldr	r2, [r3, #12]
 8007914:	0710      	lsls	r0, r2, #28
 8007916:	d50c      	bpl.n	8007932 <HAL_TIM_IRQHandler+0x7c>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 8007918:	f06f 0208 	mvn.w	r2, #8
 800791c:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800791e:	2204      	movs	r2, #4
 8007920:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8007922:	69db      	ldr	r3, [r3, #28]
 8007924:	0799      	lsls	r1, r3, #30
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8007926:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8007928:	d05a      	beq.n	80079e0 <HAL_TIM_IRQHandler+0x12a>
        HAL_TIM_IC_CaptureCallback(htim);
 800792a:	f7ff ffc1 	bl	80078b0 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800792e:	2300      	movs	r3, #0
 8007930:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 4 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 8007932:	6823      	ldr	r3, [r4, #0]
 8007934:	691a      	ldr	r2, [r3, #16]
 8007936:	06d2      	lsls	r2, r2, #27
 8007938:	d510      	bpl.n	800795c <HAL_TIM_IRQHandler+0xa6>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 800793a:	68da      	ldr	r2, [r3, #12]
 800793c:	06d0      	lsls	r0, r2, #27
 800793e:	d50d      	bpl.n	800795c <HAL_TIM_IRQHandler+0xa6>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 8007940:	f06f 0210 	mvn.w	r2, #16
 8007944:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 8007946:	2208      	movs	r2, #8
 8007948:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800794a:	69db      	ldr	r3, [r3, #28]
 800794c:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8007950:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8007952:	d04b      	beq.n	80079ec <HAL_TIM_IRQHandler+0x136>
        HAL_TIM_IC_CaptureCallback(htim);
 8007954:	f7ff ffac 	bl	80078b0 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8007958:	2300      	movs	r3, #0
 800795a:	7723      	strb	r3, [r4, #28]
    }
  }
  /* TIM Update event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800795c:	6823      	ldr	r3, [r4, #0]
 800795e:	691a      	ldr	r2, [r3, #16]
 8007960:	07d1      	lsls	r1, r2, #31
 8007962:	d508      	bpl.n	8007976 <HAL_TIM_IRQHandler+0xc0>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 8007964:	68da      	ldr	r2, [r3, #12]
 8007966:	07d2      	lsls	r2, r2, #31
 8007968:	d505      	bpl.n	8007976 <HAL_TIM_IRQHandler+0xc0>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 800796a:	f06f 0201 	mvn.w	r2, #1
 800796e:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 8007970:	4620      	mov	r0, r4
 8007972:	f7fa f817 	bl	80019a4 <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 8007976:	6823      	ldr	r3, [r4, #0]
 8007978:	691a      	ldr	r2, [r3, #16]
 800797a:	0610      	lsls	r0, r2, #24
 800797c:	d508      	bpl.n	8007990 <HAL_TIM_IRQHandler+0xda>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 800797e:	68da      	ldr	r2, [r3, #12]
 8007980:	0611      	lsls	r1, r2, #24
 8007982:	d505      	bpl.n	8007990 <HAL_TIM_IRQHandler+0xda>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 8007984:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8007988:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
 800798a:	4620      	mov	r0, r4
 800798c:	f000 f8f5 	bl	8007b7a <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 8007990:	6823      	ldr	r3, [r4, #0]
 8007992:	691a      	ldr	r2, [r3, #16]
 8007994:	0652      	lsls	r2, r2, #25
 8007996:	d508      	bpl.n	80079aa <HAL_TIM_IRQHandler+0xf4>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 8007998:	68da      	ldr	r2, [r3, #12]
 800799a:	0650      	lsls	r0, r2, #25
 800799c:	d505      	bpl.n	80079aa <HAL_TIM_IRQHandler+0xf4>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 800799e:	f06f 0240 	mvn.w	r2, #64	; 0x40
 80079a2:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 80079a4:	4620      	mov	r0, r4
 80079a6:	f7ff ff85 	bl	80078b4 <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 80079aa:	6823      	ldr	r3, [r4, #0]
 80079ac:	691a      	ldr	r2, [r3, #16]
 80079ae:	0691      	lsls	r1, r2, #26
 80079b0:	d522      	bpl.n	80079f8 <HAL_TIM_IRQHandler+0x142>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 80079b2:	68da      	ldr	r2, [r3, #12]
 80079b4:	0692      	lsls	r2, r2, #26
 80079b6:	d51f      	bpl.n	80079f8 <HAL_TIM_IRQHandler+0x142>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 80079b8:	f06f 0220 	mvn.w	r2, #32
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
 80079bc:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 80079be:	611a      	str	r2, [r3, #16]
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 80079c0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 80079c4:	f000 b8d8 	b.w	8007b78 <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 80079c8:	f7ff ff71 	bl	80078ae <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 80079cc:	4620      	mov	r0, r4
 80079ce:	f7ff ff70 	bl	80078b2 <HAL_TIM_PWM_PulseFinishedCallback>
 80079d2:	e783      	b.n	80078dc <HAL_TIM_IRQHandler+0x26>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80079d4:	f7ff ff6b 	bl	80078ae <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80079d8:	4620      	mov	r0, r4
 80079da:	f7ff ff6a 	bl	80078b2 <HAL_TIM_PWM_PulseFinishedCallback>
 80079de:	e792      	b.n	8007906 <HAL_TIM_IRQHandler+0x50>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80079e0:	f7ff ff65 	bl	80078ae <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80079e4:	4620      	mov	r0, r4
 80079e6:	f7ff ff64 	bl	80078b2 <HAL_TIM_PWM_PulseFinishedCallback>
 80079ea:	e7a0      	b.n	800792e <HAL_TIM_IRQHandler+0x78>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80079ec:	f7ff ff5f 	bl	80078ae <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80079f0:	4620      	mov	r0, r4
 80079f2:	f7ff ff5e 	bl	80078b2 <HAL_TIM_PWM_PulseFinishedCallback>
 80079f6:	e7af      	b.n	8007958 <HAL_TIM_IRQHandler+0xa2>
}
 80079f8:	bd10      	pop	{r4, pc}
	...

080079fc <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80079fc:	4a30      	ldr	r2, [pc, #192]	; (8007ac0 <TIM_Base_SetConfig+0xc4>)
  tmpcr1 = TIMx->CR1;
 80079fe:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8007a00:	4290      	cmp	r0, r2
 8007a02:	d012      	beq.n	8007a2a <TIM_Base_SetConfig+0x2e>
 8007a04:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8007a08:	d00f      	beq.n	8007a2a <TIM_Base_SetConfig+0x2e>
 8007a0a:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 8007a0e:	4290      	cmp	r0, r2
 8007a10:	d00b      	beq.n	8007a2a <TIM_Base_SetConfig+0x2e>
 8007a12:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8007a16:	4290      	cmp	r0, r2
 8007a18:	d007      	beq.n	8007a2a <TIM_Base_SetConfig+0x2e>
 8007a1a:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8007a1e:	4290      	cmp	r0, r2
 8007a20:	d003      	beq.n	8007a2a <TIM_Base_SetConfig+0x2e>
 8007a22:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 8007a26:	4290      	cmp	r0, r2
 8007a28:	d119      	bne.n	8007a5e <TIM_Base_SetConfig+0x62>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 8007a2a:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8007a2c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 8007a30:	4313      	orrs	r3, r2
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 8007a32:	4a23      	ldr	r2, [pc, #140]	; (8007ac0 <TIM_Base_SetConfig+0xc4>)
 8007a34:	4290      	cmp	r0, r2
 8007a36:	d029      	beq.n	8007a8c <TIM_Base_SetConfig+0x90>
 8007a38:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8007a3c:	d026      	beq.n	8007a8c <TIM_Base_SetConfig+0x90>
 8007a3e:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 8007a42:	4290      	cmp	r0, r2
 8007a44:	d022      	beq.n	8007a8c <TIM_Base_SetConfig+0x90>
 8007a46:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8007a4a:	4290      	cmp	r0, r2
 8007a4c:	d01e      	beq.n	8007a8c <TIM_Base_SetConfig+0x90>
 8007a4e:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8007a52:	4290      	cmp	r0, r2
 8007a54:	d01a      	beq.n	8007a8c <TIM_Base_SetConfig+0x90>
 8007a56:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 8007a5a:	4290      	cmp	r0, r2
 8007a5c:	d016      	beq.n	8007a8c <TIM_Base_SetConfig+0x90>
 8007a5e:	4a19      	ldr	r2, [pc, #100]	; (8007ac4 <TIM_Base_SetConfig+0xc8>)
 8007a60:	4290      	cmp	r0, r2
 8007a62:	d013      	beq.n	8007a8c <TIM_Base_SetConfig+0x90>
 8007a64:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8007a68:	4290      	cmp	r0, r2
 8007a6a:	d00f      	beq.n	8007a8c <TIM_Base_SetConfig+0x90>
 8007a6c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8007a70:	4290      	cmp	r0, r2
 8007a72:	d00b      	beq.n	8007a8c <TIM_Base_SetConfig+0x90>
 8007a74:	f5a2 3298 	sub.w	r2, r2, #77824	; 0x13000
 8007a78:	4290      	cmp	r0, r2
 8007a7a:	d007      	beq.n	8007a8c <TIM_Base_SetConfig+0x90>
 8007a7c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8007a80:	4290      	cmp	r0, r2
 8007a82:	d003      	beq.n	8007a8c <TIM_Base_SetConfig+0x90>
 8007a84:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8007a88:	4290      	cmp	r0, r2
 8007a8a:	d103      	bne.n	8007a94 <TIM_Base_SetConfig+0x98>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8007a8c:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 8007a8e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8007a92:	4313      	orrs	r3, r2
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8007a94:	694a      	ldr	r2, [r1, #20]
 8007a96:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8007a9a:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 8007a9c:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 8007a9e:	688b      	ldr	r3, [r1, #8]
 8007aa0:	62c3      	str	r3, [r0, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 8007aa2:	680b      	ldr	r3, [r1, #0]
 8007aa4:	6283      	str	r3, [r0, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 8007aa6:	4b06      	ldr	r3, [pc, #24]	; (8007ac0 <TIM_Base_SetConfig+0xc4>)
 8007aa8:	4298      	cmp	r0, r3
 8007aaa:	d003      	beq.n	8007ab4 <TIM_Base_SetConfig+0xb8>
 8007aac:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8007ab0:	4298      	cmp	r0, r3
 8007ab2:	d101      	bne.n	8007ab8 <TIM_Base_SetConfig+0xbc>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 8007ab4:	690b      	ldr	r3, [r1, #16]
 8007ab6:	6303      	str	r3, [r0, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 8007ab8:	2301      	movs	r3, #1
 8007aba:	6143      	str	r3, [r0, #20]
}
 8007abc:	4770      	bx	lr
 8007abe:	bf00      	nop
 8007ac0:	40010000 	.word	0x40010000
 8007ac4:	40014000 	.word	0x40014000

08007ac8 <HAL_TIM_Base_Init>:
{
 8007ac8:	b510      	push	{r4, lr}
  if (htim == NULL)
 8007aca:	4604      	mov	r4, r0
 8007acc:	b1a0      	cbz	r0, 8007af8 <HAL_TIM_Base_Init+0x30>
  if (htim->State == HAL_TIM_STATE_RESET)
 8007ace:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8007ad2:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8007ad6:	b91b      	cbnz	r3, 8007ae0 <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 8007ad8:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 8007adc:	f7fa f990 	bl	8001e00 <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 8007ae0:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8007ae2:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 8007ae4:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8007ae8:	1d21      	adds	r1, r4, #4
 8007aea:	f7ff ff87 	bl	80079fc <TIM_Base_SetConfig>
  htim->State = HAL_TIM_STATE_READY;
 8007aee:	2301      	movs	r3, #1
 8007af0:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 8007af4:	2000      	movs	r0, #0
}
 8007af6:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8007af8:	2001      	movs	r0, #1
 8007afa:	e7fc      	b.n	8007af6 <HAL_TIM_Base_Init+0x2e>

08007afc <HAL_TIMEx_MasterConfigSynchronization>:
  *         mode.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIMEx_MasterConfigSynchronization(TIM_HandleTypeDef *htim,
                                                        TIM_MasterConfigTypeDef *sMasterConfig)
{
 8007afc:	b530      	push	{r4, r5, lr}
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 8007afe:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 8007b02:	2b01      	cmp	r3, #1
 8007b04:	f04f 0302 	mov.w	r3, #2
 8007b08:	d032      	beq.n	8007b70 <HAL_TIMEx_MasterConfigSynchronization+0x74>

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;
 8007b0a:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 8007b0e:	6803      	ldr	r3, [r0, #0]
  tmpsmcr = htim->Instance->SMCR;

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 8007b10:	680d      	ldr	r5, [r1, #0]
  tmpcr2 = htim->Instance->CR2;
 8007b12:	685c      	ldr	r4, [r3, #4]
  tmpsmcr = htim->Instance->SMCR;
 8007b14:	689a      	ldr	r2, [r3, #8]
  tmpcr2 &= ~TIM_CR2_MMS;
 8007b16:	f024 0470 	bic.w	r4, r4, #112	; 0x70
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 8007b1a:	432c      	orrs	r4, r5

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 8007b1c:	605c      	str	r4, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8007b1e:	4c15      	ldr	r4, [pc, #84]	; (8007b74 <HAL_TIMEx_MasterConfigSynchronization+0x78>)
 8007b20:	42a3      	cmp	r3, r4
 8007b22:	d01a      	beq.n	8007b5a <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8007b24:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8007b28:	d017      	beq.n	8007b5a <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8007b2a:	f5a4 447c 	sub.w	r4, r4, #64512	; 0xfc00
 8007b2e:	42a3      	cmp	r3, r4
 8007b30:	d013      	beq.n	8007b5a <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8007b32:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8007b36:	42a3      	cmp	r3, r4
 8007b38:	d00f      	beq.n	8007b5a <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8007b3a:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8007b3e:	42a3      	cmp	r3, r4
 8007b40:	d00b      	beq.n	8007b5a <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8007b42:	f504 4478 	add.w	r4, r4, #63488	; 0xf800
 8007b46:	42a3      	cmp	r3, r4
 8007b48:	d007      	beq.n	8007b5a <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8007b4a:	f504 5470 	add.w	r4, r4, #15360	; 0x3c00
 8007b4e:	42a3      	cmp	r3, r4
 8007b50:	d003      	beq.n	8007b5a <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8007b52:	f5a4 3494 	sub.w	r4, r4, #75776	; 0x12800
 8007b56:	42a3      	cmp	r3, r4
 8007b58:	d104      	bne.n	8007b64 <HAL_TIMEx_MasterConfigSynchronization+0x68>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 8007b5a:	6849      	ldr	r1, [r1, #4]
    tmpsmcr &= ~TIM_SMCR_MSM;
 8007b5c:	f022 0280 	bic.w	r2, r2, #128	; 0x80
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 8007b60:	430a      	orrs	r2, r1

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 8007b62:	609a      	str	r2, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;
 8007b64:	2301      	movs	r3, #1
 8007b66:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  __HAL_UNLOCK(htim);
 8007b6a:	2300      	movs	r3, #0
 8007b6c:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  __HAL_LOCK(htim);
 8007b70:	4618      	mov	r0, r3

  return HAL_OK;
}
 8007b72:	bd30      	pop	{r4, r5, pc}
 8007b74:	40010000 	.word	0x40010000

08007b78 <HAL_TIMEx_CommutCallback>:
 8007b78:	4770      	bx	lr

08007b7a <HAL_TIMEx_BreakCallback>:
 8007b7a:	4770      	bx	lr

08007b7c <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure   
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 8007b7c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
                                               Init->InternalBankNumber |\
                                               Init->CASLatency         |\
                                               Init->WriteProtection    |\
                                               Init->SDClockPeriod      |\
                                               Init->ReadBurst          |\
                                               Init->ReadPipeDelay
 8007b80:	6a4a      	ldr	r2, [r1, #36]	; 0x24
                                               Init->ReadBurst          |\
 8007b82:	e9d1 4307 	ldrd	r4, r3, [r1, #28]
                                               Init->RowBitsNumber      |\
 8007b86:	e9d1 5801 	ldrd	r5, r8, [r1, #4]
                                               Init->InternalBankNumber |\
 8007b8a:	e9d1 ec03 	ldrd	lr, ip, [r1, #12]
                                               Init->WriteProtection    |\
 8007b8e:	e9d1 7605 	ldrd	r7, r6, [r1, #20]
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 8007b92:	6809      	ldr	r1, [r1, #0]
 8007b94:	2901      	cmp	r1, #1
 8007b96:	ea43 0304 	orr.w	r3, r3, r4
 8007b9a:	4912      	ldr	r1, [pc, #72]	; (8007be4 <FMC_SDRAM_Init+0x68>)
    tmpr1 = Device->SDCR[FMC_SDRAM_BANK1];
 8007b9c:	6804      	ldr	r4, [r0, #0]
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 8007b9e:	d00f      	beq.n	8007bc0 <FMC_SDRAM_Init+0x44>
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8007ba0:	431a      	orrs	r2, r3
 8007ba2:	432a      	orrs	r2, r5
 8007ba4:	ea42 0308 	orr.w	r3, r2, r8
 8007ba8:	ea43 030e 	orr.w	r3, r3, lr
 8007bac:	ea43 030c 	orr.w	r3, r3, ip
 8007bb0:	433b      	orrs	r3, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 8007bb2:	4021      	ands	r1, r4
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8007bb4:	4333      	orrs	r3, r6
 8007bb6:	430b      	orrs	r3, r1
                                               );
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 8007bb8:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
  }  
  
  return HAL_OK;
}
 8007bba:	2000      	movs	r0, #0
 8007bbc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 8007bc0:	4313      	orrs	r3, r2
    tmpr2 = Device->SDCR[FMC_SDRAM_BANK2];
 8007bc2:	6842      	ldr	r2, [r0, #4]
    tmpr2 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 8007bc4:	4011      	ands	r1, r2
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8007bc6:	ea45 0208 	orr.w	r2, r5, r8
 8007bca:	ea42 020e 	orr.w	r2, r2, lr
 8007bce:	ea42 020c 	orr.w	r2, r2, ip
 8007bd2:	433a      	orrs	r2, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));
 8007bd4:	f424 44f8 	bic.w	r4, r4, #31744	; 0x7c00
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8007bd8:	4332      	orrs	r2, r6
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 8007bda:	4323      	orrs	r3, r4
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8007bdc:	430a      	orrs	r2, r1
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 8007bde:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
 8007be0:	6042      	str	r2, [r0, #4]
 8007be2:	e7ea      	b.n	8007bba <FMC_SDRAM_Init+0x3e>
 8007be4:	ffff8000 	.word	0xffff8000

08007be8 <FMC_SDRAM_Timing_Init>:
                          FMC_SDTR1_TRCD));
    
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
                       (((Timing->RowCycleDelay)-1U) << 12U)       |\
 8007be8:	68cb      	ldr	r3, [r1, #12]
{
 8007bea:	b5f0      	push	{r4, r5, r6, r7, lr}
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 8007bec:	680c      	ldr	r4, [r1, #0]
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
 8007bee:	688e      	ldr	r6, [r1, #8]
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
 8007bf0:	690d      	ldr	r5, [r1, #16]
                       (((Timing->RowCycleDelay)-1U) << 12U)       |\
 8007bf2:	1e5f      	subs	r7, r3, #1
                       (((Timing->RPDelay)-1U) << 20U)             |\
 8007bf4:	694b      	ldr	r3, [r1, #20]
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 8007bf6:	f104 3cff 	add.w	ip, r4, #4294967295
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
 8007bfa:	684c      	ldr	r4, [r1, #4]
                       (((Timing->RCDDelay)-1U) << 24U));
 8007bfc:	6989      	ldr	r1, [r1, #24]
                       (((Timing->RPDelay)-1U) << 20U)             |\
 8007bfe:	3b01      	subs	r3, #1
 8007c00:	051b      	lsls	r3, r3, #20
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
 8007c02:	3c01      	subs	r4, #1
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
 8007c04:	3e01      	subs	r6, #1
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
 8007c06:	3d01      	subs	r5, #1
                       (((Timing->RCDDelay)-1U) << 24U));
 8007c08:	3901      	subs	r1, #1
  if (Bank != FMC_SDRAM_BANK2) 
 8007c0a:	2a01      	cmp	r2, #1
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
 8007c0c:	ea4f 1404 	mov.w	r4, r4, lsl #4
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
 8007c10:	ea4f 2606 	mov.w	r6, r6, lsl #8
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
 8007c14:	ea4f 4505 	mov.w	r5, r5, lsl #16
                       (((Timing->RCDDelay)-1U) << 24U));
 8007c18:	ea4f 6101 	mov.w	r1, r1, lsl #24
 8007c1c:	ea43 3307 	orr.w	r3, r3, r7, lsl #12
  if (Bank != FMC_SDRAM_BANK2) 
 8007c20:	d00c      	beq.n	8007c3c <FMC_SDRAM_Timing_Init+0x54>
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 8007c22:	ea43 030c 	orr.w	r3, r3, ip
 8007c26:	4323      	orrs	r3, r4
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 8007c28:	6882      	ldr	r2, [r0, #8]
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 8007c2a:	4333      	orrs	r3, r6
 8007c2c:	432b      	orrs	r3, r5
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 8007c2e:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 8007c32:	430b      	orrs	r3, r1
 8007c34:	4313      	orrs	r3, r2
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 8007c36:	6083      	str	r3, [r0, #8]

    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
  }
  return HAL_OK;
}
 8007c38:	2000      	movs	r0, #0
 8007c3a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 8007c3c:	6887      	ldr	r7, [r0, #8]
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TRC | FMC_SDTR1_TRP));
 8007c3e:	f427 0770 	bic.w	r7, r7, #15728640	; 0xf00000
 8007c42:	f427 4770 	bic.w	r7, r7, #61440	; 0xf000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8007c46:	4334      	orrs	r4, r6
    tmpr1 |= (uint32_t)((((Timing->RowCycleDelay)-1U) << 12U)       |\
 8007c48:	433b      	orrs	r3, r7
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8007c4a:	ea44 020c 	orr.w	r2, r4, ip
    tmpr2 = Device->SDTR[FMC_SDRAM_BANK2];
 8007c4e:	68c7      	ldr	r7, [r0, #12]
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 8007c50:	6083      	str	r3, [r0, #8]
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8007c52:	432a      	orrs	r2, r5
    tmpr2 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 8007c54:	f007 4770 	and.w	r7, r7, #4026531840	; 0xf0000000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8007c58:	430a      	orrs	r2, r1
 8007c5a:	433a      	orrs	r2, r7
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
 8007c5c:	60c2      	str	r2, [r0, #12]
 8007c5e:	e7eb      	b.n	8007c38 <FMC_SDRAM_Timing_Init+0x50>

08007c60 <FMC_SDRAM_SendCommand>:
  * @param  Timing Pointer to SDRAM Timing structure
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */  
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 8007c60:	b573      	push	{r0, r1, r4, r5, r6, lr}
  __IO uint32_t tmpr = 0U;
 8007c62:	2300      	movs	r3, #0
 8007c64:	9301      	str	r3, [sp, #4]
{
 8007c66:	4615      	mov	r5, r2
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));  

  /* Set command register */
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8007c68:	e9d1 3200 	ldrd	r3, r2, [r1]
 8007c6c:	4313      	orrs	r3, r2
                    (Command->CommandTarget)                |\
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
                    ((Command->ModeRegisterDefinition) << 9U)
 8007c6e:	68ca      	ldr	r2, [r1, #12]
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8007c70:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
 8007c74:	688a      	ldr	r2, [r1, #8]
 8007c76:	3a01      	subs	r2, #1
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8007c78:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 8007c7c:	9301      	str	r3, [sp, #4]
                    );
    
  Device->SDCMR = tmpr;
 8007c7e:	9b01      	ldr	r3, [sp, #4]
 8007c80:	6103      	str	r3, [r0, #16]
{
 8007c82:	4604      	mov	r4, r0

  /* Get tick */ 
  tickstart = HAL_GetTick();
 8007c84:	f7fd fbf8 	bl	8005478 <HAL_GetTick>
 8007c88:	4606      	mov	r6, r0

  /* Wait until command is send */
  while(HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 8007c8a:	69a3      	ldr	r3, [r4, #24]
 8007c8c:	f013 0320 	ands.w	r3, r3, #32
 8007c90:	d101      	bne.n	8007c96 <FMC_SDRAM_SendCommand+0x36>
        return HAL_TIMEOUT;
      }
    }
  }

  return HAL_OK;
 8007c92:	4618      	mov	r0, r3
 8007c94:	e003      	b.n	8007c9e <FMC_SDRAM_SendCommand+0x3e>
    if(Timeout != HAL_MAX_DELAY)
 8007c96:	1c6b      	adds	r3, r5, #1
 8007c98:	d0f7      	beq.n	8007c8a <FMC_SDRAM_SendCommand+0x2a>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8007c9a:	b915      	cbnz	r5, 8007ca2 <FMC_SDRAM_SendCommand+0x42>
        return HAL_TIMEOUT;
 8007c9c:	2003      	movs	r0, #3
}
 8007c9e:	b002      	add	sp, #8
 8007ca0:	bd70      	pop	{r4, r5, r6, pc}
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8007ca2:	f7fd fbe9 	bl	8005478 <HAL_GetTick>
 8007ca6:	1b80      	subs	r0, r0, r6
 8007ca8:	42a8      	cmp	r0, r5
 8007caa:	d9ee      	bls.n	8007c8a <FMC_SDRAM_SendCommand+0x2a>
 8007cac:	e7f6      	b.n	8007c9c <FMC_SDRAM_SendCommand+0x3c>

08007cae <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));
  
  /* Set the refresh rate in command register */
  Device->SDRTR |= (RefreshRate<<1U);
 8007cae:	6943      	ldr	r3, [r0, #20]
 8007cb0:	ea43 0141 	orr.w	r1, r3, r1, lsl #1
 8007cb4:	6141      	str	r1, [r0, #20]
  
  return HAL_OK;   
}
 8007cb6:	2000      	movs	r0, #0
 8007cb8:	4770      	bx	lr
	...

08007cbc <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007cbc:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 8007cc0:	b113      	cbz	r3, 8007cc8 <osKernelInitialize+0xc>
    stat = osErrorISR;
 8007cc2:	f06f 0005 	mvn.w	r0, #5
 8007cc6:	4770      	bx	lr
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8007cc8:	f3ef 8210 	mrs	r2, PRIMASK
  return(result);
 8007ccc:	4b07      	ldr	r3, [pc, #28]	; (8007cec <osKernelInitialize+0x30>)
  if (IS_IRQ()) {
 8007cce:	b912      	cbnz	r2, 8007cd6 <osKernelInitialize+0x1a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8007cd0:	f3ef 8211 	mrs	r2, BASEPRI
 8007cd4:	b112      	cbz	r2, 8007cdc <osKernelInitialize+0x20>
 8007cd6:	681a      	ldr	r2, [r3, #0]
 8007cd8:	2a02      	cmp	r2, #2
 8007cda:	d0f2      	beq.n	8007cc2 <osKernelInitialize+0x6>
  }
  else {
    if (KernelState == osKernelInactive) {
 8007cdc:	6818      	ldr	r0, [r3, #0]
 8007cde:	b910      	cbnz	r0, 8007ce6 <osKernelInitialize+0x2a>
      #if defined(USE_FREERTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 8007ce0:	2201      	movs	r2, #1
 8007ce2:	601a      	str	r2, [r3, #0]
      stat = osOK;
 8007ce4:	4770      	bx	lr
    } else {
      stat = osError;
 8007ce6:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 8007cea:	4770      	bx	lr
 8007cec:	20004804 	.word	0x20004804

08007cf0 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 8007cf0:	b508      	push	{r3, lr}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007cf2:	f3ef 8305 	mrs	r3, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 8007cf6:	b113      	cbz	r3, 8007cfe <osKernelStart+0xe>
    stat = osErrorISR;
 8007cf8:	f06f 0005 	mvn.w	r0, #5
      stat = osError;
    }
  }

  return (stat);
}
 8007cfc:	bd08      	pop	{r3, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8007cfe:	f3ef 8210 	mrs	r2, PRIMASK
  return(result);
 8007d02:	4b0a      	ldr	r3, [pc, #40]	; (8007d2c <osKernelStart+0x3c>)
  if (IS_IRQ()) {
 8007d04:	b912      	cbnz	r2, 8007d0c <osKernelStart+0x1c>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8007d06:	f3ef 8211 	mrs	r2, BASEPRI
 8007d0a:	b112      	cbz	r2, 8007d12 <osKernelStart+0x22>
 8007d0c:	681a      	ldr	r2, [r3, #0]
 8007d0e:	2a02      	cmp	r2, #2
 8007d10:	d0f2      	beq.n	8007cf8 <osKernelStart+0x8>
    if (KernelState == osKernelReady) {
 8007d12:	681a      	ldr	r2, [r3, #0]
 8007d14:	2a01      	cmp	r2, #1
 8007d16:	d105      	bne.n	8007d24 <osKernelStart+0x34>
      KernelState = osKernelRunning;
 8007d18:	2202      	movs	r2, #2
 8007d1a:	601a      	str	r2, [r3, #0]
      vTaskStartScheduler();
 8007d1c:	f001 fbda 	bl	80094d4 <vTaskStartScheduler>
      stat = osOK;
 8007d20:	2000      	movs	r0, #0
 8007d22:	e7eb      	b.n	8007cfc <osKernelStart+0xc>
      stat = osError;
 8007d24:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 8007d28:	e7e8      	b.n	8007cfc <osKernelStart+0xc>
 8007d2a:	bf00      	nop
 8007d2c:	20004804 	.word	0x20004804

08007d30 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8007d30:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007d32:	b087      	sub	sp, #28
 8007d34:	4614      	mov	r4, r2
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 8007d36:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8007d38:	460b      	mov	r3, r1
  hTask = NULL;
 8007d3a:	9205      	str	r2, [sp, #20]
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007d3c:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 8007d40:	bb22      	cbnz	r2, 8007d8c <osThreadNew+0x5c>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8007d42:	f3ef 8210 	mrs	r2, PRIMASK
 8007d46:	b912      	cbnz	r2, 8007d4e <osThreadNew+0x1e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8007d48:	f3ef 8211 	mrs	r2, BASEPRI
 8007d4c:	b11a      	cbz	r2, 8007d56 <osThreadNew+0x26>
 8007d4e:	4a22      	ldr	r2, [pc, #136]	; (8007dd8 <osThreadNew+0xa8>)
 8007d50:	6812      	ldr	r2, [r2, #0]
 8007d52:	2a02      	cmp	r2, #2
 8007d54:	d01a      	beq.n	8007d8c <osThreadNew+0x5c>
 8007d56:	b1c8      	cbz	r0, 8007d8c <osThreadNew+0x5c>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 8007d58:	2c00      	cmp	r4, #0
 8007d5a:	d02f      	beq.n	8007dbc <osThreadNew+0x8c>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 8007d5c:	69a5      	ldr	r5, [r4, #24]
 8007d5e:	2d00      	cmp	r5, #0
 8007d60:	bf08      	it	eq
 8007d62:	2518      	moveq	r5, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 8007d64:	1e6a      	subs	r2, r5, #1
 8007d66:	2a37      	cmp	r2, #55	; 0x37
 8007d68:	46ac      	mov	ip, r5
 8007d6a:	d82b      	bhi.n	8007dc4 <osThreadNew+0x94>
 8007d6c:	6862      	ldr	r2, [r4, #4]
 8007d6e:	07d2      	lsls	r2, r2, #31
 8007d70:	d428      	bmi.n	8007dc4 <osThreadNew+0x94>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 8007d72:	6966      	ldr	r6, [r4, #20]
 8007d74:	b16e      	cbz	r6, 8007d92 <osThreadNew+0x62>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 8007d76:	08b2      	lsrs	r2, r6, #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8007d78:	e9d4 7e02 	ldrd	r7, lr, [r4, #8]
      if (attr->name != NULL) {
 8007d7c:	6821      	ldr	r1, [r4, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8007d7e:	b157      	cbz	r7, 8007d96 <osThreadNew+0x66>
 8007d80:	f1be 0fbf 	cmp.w	lr, #191	; 0xbf
 8007d84:	d902      	bls.n	8007d8c <osThreadNew+0x5c>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8007d86:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8007d88:	b104      	cbz	r4, 8007d8c <osThreadNew+0x5c>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8007d8a:	b9ee      	cbnz	r6, 8007dc8 <osThreadNew+0x98>
        }
      }
    }
  }

  return ((osThreadId_t)hTask);
 8007d8c:	9805      	ldr	r0, [sp, #20]
}
 8007d8e:	b007      	add	sp, #28
 8007d90:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 8007d92:	2280      	movs	r2, #128	; 0x80
 8007d94:	e7f0      	b.n	8007d78 <osThreadNew+0x48>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 8007d96:	f1be 0f00 	cmp.w	lr, #0
 8007d9a:	d1f7      	bne.n	8007d8c <osThreadNew+0x5c>
      if (mem == 0) {
 8007d9c:	6924      	ldr	r4, [r4, #16]
 8007d9e:	2c00      	cmp	r4, #0
 8007da0:	d1f4      	bne.n	8007d8c <osThreadNew+0x5c>
 8007da2:	460c      	mov	r4, r1
        if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 8007da4:	a905      	add	r1, sp, #20
 8007da6:	e9cd c100 	strd	ip, r1, [sp]
 8007daa:	b292      	uxth	r2, r2
 8007dac:	4621      	mov	r1, r4
 8007dae:	f001 fb63 	bl	8009478 <xTaskCreate>
 8007db2:	2801      	cmp	r0, #1
          hTask = NULL;
 8007db4:	bf1c      	itt	ne
 8007db6:	2300      	movne	r3, #0
 8007db8:	9305      	strne	r3, [sp, #20]
 8007dba:	e7e7      	b.n	8007d8c <osThreadNew+0x5c>
    prio  = (UBaseType_t)osPriorityNormal;
 8007dbc:	f04f 0c18 	mov.w	ip, #24
    stack = configMINIMAL_STACK_SIZE;
 8007dc0:	2280      	movs	r2, #128	; 0x80
 8007dc2:	e7ef      	b.n	8007da4 <osThreadNew+0x74>
        return (NULL);
 8007dc4:	2000      	movs	r0, #0
 8007dc6:	e7e2      	b.n	8007d8e <osThreadNew+0x5e>
      hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 8007dc8:	e9cd 4701 	strd	r4, r7, [sp, #4]
 8007dcc:	9500      	str	r5, [sp, #0]
 8007dce:	f001 fb1b 	bl	8009408 <xTaskCreateStatic>
 8007dd2:	9005      	str	r0, [sp, #20]
 8007dd4:	e7da      	b.n	8007d8c <osThreadNew+0x5c>
 8007dd6:	bf00      	nop
 8007dd8:	20004804 	.word	0x20004804

08007ddc <osDelay>:

  /* Return flags before clearing */
  return (rflags);
}

osStatus_t osDelay (uint32_t ticks) {
 8007ddc:	b508      	push	{r3, lr}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007dde:	f3ef 8305 	mrs	r3, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 8007de2:	b113      	cbz	r3, 8007dea <osDelay+0xe>
    stat = osErrorISR;
 8007de4:	f06f 0005 	mvn.w	r0, #5
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
 8007de8:	bd08      	pop	{r3, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8007dea:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 8007dee:	b913      	cbnz	r3, 8007df6 <osDelay+0x1a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8007df0:	f3ef 8311 	mrs	r3, BASEPRI
 8007df4:	b11b      	cbz	r3, 8007dfe <osDelay+0x22>
 8007df6:	4b05      	ldr	r3, [pc, #20]	; (8007e0c <osDelay+0x30>)
 8007df8:	681b      	ldr	r3, [r3, #0]
 8007dfa:	2b02      	cmp	r3, #2
 8007dfc:	d0f2      	beq.n	8007de4 <osDelay+0x8>
    if (ticks != 0U) {
 8007dfe:	2800      	cmp	r0, #0
 8007e00:	d0f2      	beq.n	8007de8 <osDelay+0xc>
      vTaskDelay(ticks);
 8007e02:	f001 fccf 	bl	80097a4 <vTaskDelay>
    stat = osOK;
 8007e06:	2000      	movs	r0, #0
 8007e08:	e7ee      	b.n	8007de8 <osDelay+0xc>
 8007e0a:	bf00      	nop
 8007e0c:	20004804 	.word	0x20004804

08007e10 <osSemaphoreNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 8007e10:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8007e12:	460e      	mov	r6, r1
 8007e14:	4615      	mov	r5, r2
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007e16:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 8007e1a:	b11b      	cbz	r3, 8007e24 <osSemaphoreNew+0x14>
        }

        if ((hSemaphore != NULL) && (initial_count != 0U)) {
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
            vSemaphoreDelete (hSemaphore);
            hSemaphore = NULL;
 8007e1c:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 8007e1e:	4620      	mov	r0, r4
 8007e20:	b002      	add	sp, #8
 8007e22:	bd70      	pop	{r4, r5, r6, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8007e24:	f3ef 8310 	mrs	r3, PRIMASK
  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 8007e28:	b913      	cbnz	r3, 8007e30 <osSemaphoreNew+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8007e2a:	f3ef 8311 	mrs	r3, BASEPRI
 8007e2e:	b11b      	cbz	r3, 8007e38 <osSemaphoreNew+0x28>
 8007e30:	4b21      	ldr	r3, [pc, #132]	; (8007eb8 <osSemaphoreNew+0xa8>)
 8007e32:	681b      	ldr	r3, [r3, #0]
 8007e34:	2b02      	cmp	r3, #2
 8007e36:	d0f1      	beq.n	8007e1c <osSemaphoreNew+0xc>
 8007e38:	2800      	cmp	r0, #0
 8007e3a:	d0ef      	beq.n	8007e1c <osSemaphoreNew+0xc>
 8007e3c:	42b0      	cmp	r0, r6
 8007e3e:	d3ed      	bcc.n	8007e1c <osSemaphoreNew+0xc>
    if (attr != NULL) {
 8007e40:	b1ed      	cbz	r5, 8007e7e <osSemaphoreNew+0x6e>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 8007e42:	e9d5 3202 	ldrd	r3, r2, [r5, #8]
 8007e46:	b1c3      	cbz	r3, 8007e7a <osSemaphoreNew+0x6a>
 8007e48:	2a4f      	cmp	r2, #79	; 0x4f
 8007e4a:	d9e7      	bls.n	8007e1c <osSemaphoreNew+0xc>
      if (max_count == 1U) {
 8007e4c:	2801      	cmp	r0, #1
 8007e4e:	d129      	bne.n	8007ea4 <osSemaphoreNew+0x94>
          hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 8007e50:	2203      	movs	r2, #3
 8007e52:	9200      	str	r2, [sp, #0]
 8007e54:	2200      	movs	r2, #0
 8007e56:	4611      	mov	r1, r2
 8007e58:	f000 fd2d 	bl	80088b6 <xQueueGenericCreateStatic>
          hSemaphore = xSemaphoreCreateBinary();
 8007e5c:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 8007e5e:	2800      	cmp	r0, #0
 8007e60:	d0dc      	beq.n	8007e1c <osSemaphoreNew+0xc>
 8007e62:	b1ce      	cbz	r6, 8007e98 <osSemaphoreNew+0x88>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8007e64:	2300      	movs	r3, #0
 8007e66:	461a      	mov	r2, r3
 8007e68:	4619      	mov	r1, r3
 8007e6a:	f000 fdd9 	bl	8008a20 <xQueueGenericSend>
 8007e6e:	2801      	cmp	r0, #1
 8007e70:	d012      	beq.n	8007e98 <osSemaphoreNew+0x88>
            vSemaphoreDelete (hSemaphore);
 8007e72:	4620      	mov	r0, r4
 8007e74:	f001 f914 	bl	80090a0 <vQueueDelete>
 8007e78:	e7d0      	b.n	8007e1c <osSemaphoreNew+0xc>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 8007e7a:	2a00      	cmp	r2, #0
 8007e7c:	d1ce      	bne.n	8007e1c <osSemaphoreNew+0xc>
      if (max_count == 1U) {
 8007e7e:	2801      	cmp	r0, #1
 8007e80:	d104      	bne.n	8007e8c <osSemaphoreNew+0x7c>
          hSemaphore = xSemaphoreCreateBinary();
 8007e82:	2203      	movs	r2, #3
 8007e84:	2100      	movs	r1, #0
 8007e86:	f000 fd64 	bl	8008952 <xQueueGenericCreate>
 8007e8a:	e7e7      	b.n	8007e5c <osSemaphoreNew+0x4c>
          hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 8007e8c:	4631      	mov	r1, r6
 8007e8e:	f000 fda9 	bl	80089e4 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 8007e92:	4604      	mov	r4, r0
 8007e94:	2800      	cmp	r0, #0
 8007e96:	d0c1      	beq.n	8007e1c <osSemaphoreNew+0xc>
        if (attr != NULL) {
 8007e98:	b95d      	cbnz	r5, 8007eb2 <osSemaphoreNew+0xa2>
        vQueueAddToRegistry (hSemaphore, name);
 8007e9a:	4629      	mov	r1, r5
 8007e9c:	4620      	mov	r0, r4
 8007e9e:	f001 f8d9 	bl	8009054 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 8007ea2:	e7bc      	b.n	8007e1e <osSemaphoreNew+0xe>
          hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 8007ea4:	461a      	mov	r2, r3
 8007ea6:	4631      	mov	r1, r6
 8007ea8:	f000 fd7a 	bl	80089a0 <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 8007eac:	4604      	mov	r4, r0
 8007eae:	2800      	cmp	r0, #0
 8007eb0:	d0b4      	beq.n	8007e1c <osSemaphoreNew+0xc>
          name = attr->name;
 8007eb2:	682d      	ldr	r5, [r5, #0]
 8007eb4:	e7f1      	b.n	8007e9a <osSemaphoreNew+0x8a>
 8007eb6:	bf00      	nop
 8007eb8:	20004804 	.word	0x20004804

08007ebc <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 8007ebc:	b513      	push	{r0, r1, r4, lr}
 8007ebe:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8007ec0:	b918      	cbnz	r0, 8007eca <osSemaphoreAcquire+0xe>
    stat = osErrorParameter;
 8007ec2:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 8007ec6:	b002      	add	sp, #8
 8007ec8:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007eca:	f3ef 8305 	mrs	r3, IPSR
  else if (IS_IRQ()) {
 8007ece:	b163      	cbz	r3, 8007eea <osSemaphoreAcquire+0x2e>
    if (timeout != 0U) {
 8007ed0:	2c00      	cmp	r4, #0
 8007ed2:	d1f6      	bne.n	8007ec2 <osSemaphoreAcquire+0x6>
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8007ed4:	aa01      	add	r2, sp, #4
 8007ed6:	4621      	mov	r1, r4
      yield = pdFALSE;
 8007ed8:	9401      	str	r4, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8007eda:	f001 f86b 	bl	8008fb4 <xQueueReceiveFromISR>
 8007ede:	2801      	cmp	r0, #1
 8007ee0:	d113      	bne.n	8007f0a <osSemaphoreAcquire+0x4e>
        portYIELD_FROM_ISR (yield);
 8007ee2:	9b01      	ldr	r3, [sp, #4]
 8007ee4:	b9a3      	cbnz	r3, 8007f10 <osSemaphoreAcquire+0x54>
  stat = osOK;
 8007ee6:	2000      	movs	r0, #0
 8007ee8:	e7ed      	b.n	8007ec6 <osSemaphoreAcquire+0xa>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8007eea:	f3ef 8310 	mrs	r3, PRIMASK
  else if (IS_IRQ()) {
 8007eee:	b913      	cbnz	r3, 8007ef6 <osSemaphoreAcquire+0x3a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8007ef0:	f3ef 8311 	mrs	r3, BASEPRI
 8007ef4:	b11b      	cbz	r3, 8007efe <osSemaphoreAcquire+0x42>
 8007ef6:	4b0d      	ldr	r3, [pc, #52]	; (8007f2c <osSemaphoreAcquire+0x70>)
 8007ef8:	681b      	ldr	r3, [r3, #0]
 8007efa:	2b02      	cmp	r3, #2
 8007efc:	d0e8      	beq.n	8007ed0 <osSemaphoreAcquire+0x14>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 8007efe:	4621      	mov	r1, r4
 8007f00:	f000 ff95 	bl	8008e2e <xQueueSemaphoreTake>
 8007f04:	2801      	cmp	r0, #1
 8007f06:	d0ee      	beq.n	8007ee6 <osSemaphoreAcquire+0x2a>
      if (timeout != 0U) {
 8007f08:	b96c      	cbnz	r4, 8007f26 <osSemaphoreAcquire+0x6a>
        stat = osErrorResource;
 8007f0a:	f06f 0002 	mvn.w	r0, #2
 8007f0e:	e7da      	b.n	8007ec6 <osSemaphoreAcquire+0xa>
        portYIELD_FROM_ISR (yield);
 8007f10:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8007f14:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007f18:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8007f1c:	f3bf 8f4f 	dsb	sy
 8007f20:	f3bf 8f6f 	isb	sy
 8007f24:	e7df      	b.n	8007ee6 <osSemaphoreAcquire+0x2a>
        stat = osErrorTimeout;
 8007f26:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8007f2a:	e7cc      	b.n	8007ec6 <osSemaphoreAcquire+0xa>
 8007f2c:	20004804 	.word	0x20004804

08007f30 <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 8007f30:	b513      	push	{r0, r1, r4, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8007f32:	b370      	cbz	r0, 8007f92 <osSemaphoreRelease+0x62>
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007f34:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 8007f38:	b14b      	cbz	r3, 8007f4e <osSemaphoreRelease+0x1e>
    yield = pdFALSE;
 8007f3a:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8007f3c:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 8007f3e:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8007f40:	f000 fe82 	bl	8008c48 <xQueueGiveFromISR>
 8007f44:	2801      	cmp	r0, #1
 8007f46:	d014      	beq.n	8007f72 <osSemaphoreRelease+0x42>
      portYIELD_FROM_ISR (yield);
    }
  }
  else {
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
      stat = osErrorResource;
 8007f48:	f06f 0002 	mvn.w	r0, #2
 8007f4c:	e014      	b.n	8007f78 <osSemaphoreRelease+0x48>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8007f4e:	f3ef 8310 	mrs	r3, PRIMASK
  else if (IS_IRQ()) {
 8007f52:	b913      	cbnz	r3, 8007f5a <osSemaphoreRelease+0x2a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8007f54:	f3ef 8311 	mrs	r3, BASEPRI
 8007f58:	b11b      	cbz	r3, 8007f62 <osSemaphoreRelease+0x32>
 8007f5a:	4b0f      	ldr	r3, [pc, #60]	; (8007f98 <osSemaphoreRelease+0x68>)
 8007f5c:	681b      	ldr	r3, [r3, #0]
 8007f5e:	2b02      	cmp	r3, #2
 8007f60:	d0eb      	beq.n	8007f3a <osSemaphoreRelease+0xa>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8007f62:	2300      	movs	r3, #0
 8007f64:	461a      	mov	r2, r3
 8007f66:	4619      	mov	r1, r3
 8007f68:	f000 fd5a 	bl	8008a20 <xQueueGenericSend>
 8007f6c:	2801      	cmp	r0, #1
 8007f6e:	d002      	beq.n	8007f76 <osSemaphoreRelease+0x46>
 8007f70:	e7ea      	b.n	8007f48 <osSemaphoreRelease+0x18>
      portYIELD_FROM_ISR (yield);
 8007f72:	9b01      	ldr	r3, [sp, #4]
 8007f74:	b913      	cbnz	r3, 8007f7c <osSemaphoreRelease+0x4c>
  stat = osOK;
 8007f76:	2000      	movs	r0, #0
    }
  }

  return (stat);
}
 8007f78:	b002      	add	sp, #8
 8007f7a:	bd10      	pop	{r4, pc}
      portYIELD_FROM_ISR (yield);
 8007f7c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8007f80:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007f84:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8007f88:	f3bf 8f4f 	dsb	sy
 8007f8c:	f3bf 8f6f 	isb	sy
 8007f90:	e7f1      	b.n	8007f76 <osSemaphoreRelease+0x46>
    stat = osErrorParameter;
 8007f92:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8007f96:	e7ef      	b.n	8007f78 <osSemaphoreRelease+0x48>
 8007f98:	20004804 	.word	0x20004804

08007f9c <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 8007f9c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8007f9e:	4614      	mov	r4, r2
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007fa0:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8007fa4:	b11b      	cbz	r3, 8007fae <osMessageQueueNew+0x12>
  hQueue = NULL;
 8007fa6:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 8007fa8:	4628      	mov	r0, r5
 8007faa:	b002      	add	sp, #8
 8007fac:	bd70      	pop	{r4, r5, r6, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8007fae:	f3ef 8310 	mrs	r3, PRIMASK
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8007fb2:	b913      	cbnz	r3, 8007fba <osMessageQueueNew+0x1e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8007fb4:	f3ef 8311 	mrs	r3, BASEPRI
 8007fb8:	b11b      	cbz	r3, 8007fc2 <osMessageQueueNew+0x26>
 8007fba:	4b1a      	ldr	r3, [pc, #104]	; (8008024 <osMessageQueueNew+0x88>)
 8007fbc:	681b      	ldr	r3, [r3, #0]
 8007fbe:	2b02      	cmp	r3, #2
 8007fc0:	d0f1      	beq.n	8007fa6 <osMessageQueueNew+0xa>
 8007fc2:	2800      	cmp	r0, #0
 8007fc4:	d0ef      	beq.n	8007fa6 <osMessageQueueNew+0xa>
 8007fc6:	2900      	cmp	r1, #0
 8007fc8:	d0ed      	beq.n	8007fa6 <osMessageQueueNew+0xa>
    if (attr != NULL) {
 8007fca:	b1ec      	cbz	r4, 8008008 <osMessageQueueNew+0x6c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8007fcc:	e9d4 3202 	ldrd	r3, r2, [r4, #8]
 8007fd0:	b193      	cbz	r3, 8007ff8 <osMessageQueueNew+0x5c>
 8007fd2:	2a4f      	cmp	r2, #79	; 0x4f
 8007fd4:	d9e7      	bls.n	8007fa6 <osMessageQueueNew+0xa>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8007fd6:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8007fd8:	2a00      	cmp	r2, #0
 8007fda:	d0e4      	beq.n	8007fa6 <osMessageQueueNew+0xa>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8007fdc:	6966      	ldr	r6, [r4, #20]
 8007fde:	fb01 f500 	mul.w	r5, r1, r0
 8007fe2:	42ae      	cmp	r6, r5
 8007fe4:	d3df      	bcc.n	8007fa6 <osMessageQueueNew+0xa>
      hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 8007fe6:	2500      	movs	r5, #0
 8007fe8:	9500      	str	r5, [sp, #0]
 8007fea:	f000 fc64 	bl	80088b6 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 8007fee:	4605      	mov	r5, r0
 8007ff0:	2800      	cmp	r0, #0
 8007ff2:	d0d8      	beq.n	8007fa6 <osMessageQueueNew+0xa>
        name = attr->name;
 8007ff4:	6824      	ldr	r4, [r4, #0]
 8007ff6:	e00f      	b.n	8008018 <osMessageQueueNew+0x7c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 8007ff8:	2a00      	cmp	r2, #0
 8007ffa:	d1d4      	bne.n	8007fa6 <osMessageQueueNew+0xa>
 8007ffc:	6923      	ldr	r3, [r4, #16]
 8007ffe:	2b00      	cmp	r3, #0
 8008000:	d1d1      	bne.n	8007fa6 <osMessageQueueNew+0xa>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 8008002:	6963      	ldr	r3, [r4, #20]
 8008004:	2b00      	cmp	r3, #0
 8008006:	d1ce      	bne.n	8007fa6 <osMessageQueueNew+0xa>
        hQueue = xQueueCreate (msg_count, msg_size);
 8008008:	2200      	movs	r2, #0
 800800a:	f000 fca2 	bl	8008952 <xQueueGenericCreate>
    if (hQueue != NULL) {
 800800e:	4605      	mov	r5, r0
 8008010:	2800      	cmp	r0, #0
 8008012:	d0c8      	beq.n	8007fa6 <osMessageQueueNew+0xa>
      if (attr != NULL) {
 8008014:	2c00      	cmp	r4, #0
 8008016:	d1ed      	bne.n	8007ff4 <osMessageQueueNew+0x58>
      vQueueAddToRegistry (hQueue, name);
 8008018:	4621      	mov	r1, r4
 800801a:	4628      	mov	r0, r5
 800801c:	f001 f81a 	bl	8009054 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 8008020:	e7c2      	b.n	8007fa8 <osMessageQueueNew+0xc>
 8008022:	bf00      	nop
 8008024:	20004804 	.word	0x20004804

08008028 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 8008028:	b513      	push	{r0, r1, r4, lr}
 800802a:	461c      	mov	r4, r3
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800802c:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8008030:	b123      	cbz	r3, 800803c <osMessageQueuePut+0x14>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8008032:	b9d8      	cbnz	r0, 800806c <osMessageQueuePut+0x44>
      stat = osErrorParameter;
 8008034:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 8008038:	b002      	add	sp, #8
 800803a:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800803c:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 8008040:	b913      	cbnz	r3, 8008048 <osMessageQueuePut+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8008042:	f3ef 8311 	mrs	r3, BASEPRI
 8008046:	b11b      	cbz	r3, 8008050 <osMessageQueuePut+0x28>
 8008048:	4b17      	ldr	r3, [pc, #92]	; (80080a8 <osMessageQueuePut+0x80>)
 800804a:	681b      	ldr	r3, [r3, #0]
 800804c:	2b02      	cmp	r3, #2
 800804e:	d0f0      	beq.n	8008032 <osMessageQueuePut+0xa>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8008050:	2800      	cmp	r0, #0
 8008052:	d0ef      	beq.n	8008034 <osMessageQueuePut+0xc>
 8008054:	2900      	cmp	r1, #0
 8008056:	d0ed      	beq.n	8008034 <osMessageQueuePut+0xc>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8008058:	2300      	movs	r3, #0
 800805a:	4622      	mov	r2, r4
 800805c:	f000 fce0 	bl	8008a20 <xQueueGenericSend>
 8008060:	2801      	cmp	r0, #1
 8008062:	d010      	beq.n	8008086 <osMessageQueuePut+0x5e>
        if (timeout != 0U) {
 8008064:	b9e4      	cbnz	r4, 80080a0 <osMessageQueuePut+0x78>
          stat = osErrorResource;
 8008066:	f06f 0002 	mvn.w	r0, #2
 800806a:	e7e5      	b.n	8008038 <osMessageQueuePut+0x10>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800806c:	2900      	cmp	r1, #0
 800806e:	d0e1      	beq.n	8008034 <osMessageQueuePut+0xc>
 8008070:	2c00      	cmp	r4, #0
 8008072:	d1df      	bne.n	8008034 <osMessageQueuePut+0xc>
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8008074:	4623      	mov	r3, r4
 8008076:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8008078:	9401      	str	r4, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800807a:	f000 fd84 	bl	8008b86 <xQueueGenericSendFromISR>
 800807e:	2801      	cmp	r0, #1
 8008080:	d1f1      	bne.n	8008066 <osMessageQueuePut+0x3e>
        portYIELD_FROM_ISR (yield);
 8008082:	9b01      	ldr	r3, [sp, #4]
 8008084:	b90b      	cbnz	r3, 800808a <osMessageQueuePut+0x62>
  stat = osOK;
 8008086:	2000      	movs	r0, #0
 8008088:	e7d6      	b.n	8008038 <osMessageQueuePut+0x10>
        portYIELD_FROM_ISR (yield);
 800808a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800808e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008092:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008096:	f3bf 8f4f 	dsb	sy
 800809a:	f3bf 8f6f 	isb	sy
 800809e:	e7f2      	b.n	8008086 <osMessageQueuePut+0x5e>
          stat = osErrorTimeout;
 80080a0:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 80080a4:	e7c8      	b.n	8008038 <osMessageQueuePut+0x10>
 80080a6:	bf00      	nop
 80080a8:	20004804 	.word	0x20004804

080080ac <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 80080ac:	b513      	push	{r0, r1, r4, lr}
 80080ae:	461c      	mov	r4, r3
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80080b0:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 80080b4:	b123      	cbz	r3, 80080c0 <osMessageQueueGet+0x14>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 80080b6:	b9d0      	cbnz	r0, 80080ee <osMessageQueueGet+0x42>
      stat = osErrorParameter;
 80080b8:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 80080bc:	b002      	add	sp, #8
 80080be:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80080c0:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 80080c4:	b913      	cbnz	r3, 80080cc <osMessageQueueGet+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80080c6:	f3ef 8311 	mrs	r3, BASEPRI
 80080ca:	b11b      	cbz	r3, 80080d4 <osMessageQueueGet+0x28>
 80080cc:	4b16      	ldr	r3, [pc, #88]	; (8008128 <osMessageQueueGet+0x7c>)
 80080ce:	681b      	ldr	r3, [r3, #0]
 80080d0:	2b02      	cmp	r3, #2
 80080d2:	d0f0      	beq.n	80080b6 <osMessageQueueGet+0xa>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 80080d4:	2800      	cmp	r0, #0
 80080d6:	d0ef      	beq.n	80080b8 <osMessageQueueGet+0xc>
 80080d8:	2900      	cmp	r1, #0
 80080da:	d0ed      	beq.n	80080b8 <osMessageQueueGet+0xc>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 80080dc:	4622      	mov	r2, r4
 80080de:	f000 fe07 	bl	8008cf0 <xQueueReceive>
 80080e2:	2801      	cmp	r0, #1
 80080e4:	d00f      	beq.n	8008106 <osMessageQueueGet+0x5a>
        if (timeout != 0U) {
 80080e6:	b9dc      	cbnz	r4, 8008120 <osMessageQueueGet+0x74>
          stat = osErrorResource;
 80080e8:	f06f 0002 	mvn.w	r0, #2
 80080ec:	e7e6      	b.n	80080bc <osMessageQueueGet+0x10>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 80080ee:	2900      	cmp	r1, #0
 80080f0:	d0e2      	beq.n	80080b8 <osMessageQueueGet+0xc>
 80080f2:	2c00      	cmp	r4, #0
 80080f4:	d1e0      	bne.n	80080b8 <osMessageQueueGet+0xc>
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 80080f6:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 80080f8:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 80080fa:	f000 ff5b 	bl	8008fb4 <xQueueReceiveFromISR>
 80080fe:	2801      	cmp	r0, #1
 8008100:	d1f2      	bne.n	80080e8 <osMessageQueueGet+0x3c>
        portYIELD_FROM_ISR (yield);
 8008102:	9b01      	ldr	r3, [sp, #4]
 8008104:	b90b      	cbnz	r3, 800810a <osMessageQueueGet+0x5e>
  stat = osOK;
 8008106:	2000      	movs	r0, #0
 8008108:	e7d8      	b.n	80080bc <osMessageQueueGet+0x10>
        portYIELD_FROM_ISR (yield);
 800810a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800810e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008112:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008116:	f3bf 8f4f 	dsb	sy
 800811a:	f3bf 8f6f 	isb	sy
 800811e:	e7f2      	b.n	8008106 <osMessageQueueGet+0x5a>
          stat = osErrorTimeout;
 8008120:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8008124:	e7ca      	b.n	80080bc <osMessageQueueGet+0x10>
 8008126:	bf00      	nop
 8008128:	20004804 	.word	0x20004804

0800812c <vApplicationGetIdleTaskMemory>:
/*
  vApplicationGetIdleTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 800812c:	4b03      	ldr	r3, [pc, #12]	; (800813c <vApplicationGetIdleTaskMemory+0x10>)
 800812e:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 8008130:	4b03      	ldr	r3, [pc, #12]	; (8008140 <vApplicationGetIdleTaskMemory+0x14>)
 8008132:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 8008134:	2380      	movs	r3, #128	; 0x80
 8008136:	6013      	str	r3, [r2, #0]
}
 8008138:	4770      	bx	lr
 800813a:	bf00      	nop
 800813c:	20004744 	.word	0x20004744
 8008140:	20004544 	.word	0x20004544

08008144 <vApplicationGetTimerTaskMemory>:
/*
  vApplicationGetTimerTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 8008144:	4b03      	ldr	r3, [pc, #12]	; (8008154 <vApplicationGetTimerTaskMemory+0x10>)
 8008146:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 8008148:	4b03      	ldr	r3, [pc, #12]	; (8008158 <vApplicationGetTimerTaskMemory+0x14>)
 800814a:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800814c:	f44f 7380 	mov.w	r3, #256	; 0x100
 8008150:	6013      	str	r3, [r2, #0]
}
 8008152:	4770      	bx	lr
 8008154:	20004c08 	.word	0x20004c08
 8008158:	20004808 	.word	0x20004808

0800815c <prvInsertBlockIntoFreeList>:
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
{
 800815c:	b510      	push	{r4, lr}
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800815e:	4b0f      	ldr	r3, [pc, #60]	; (800819c <prvInsertBlockIntoFreeList+0x40>)
 8008160:	461a      	mov	r2, r3
 8008162:	681b      	ldr	r3, [r3, #0]
 8008164:	4283      	cmp	r3, r0
 8008166:	d3fb      	bcc.n	8008160 <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 8008168:	6854      	ldr	r4, [r2, #4]
 800816a:	1911      	adds	r1, r2, r4
 800816c:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800816e:	bf01      	itttt	eq
 8008170:	6841      	ldreq	r1, [r0, #4]
 8008172:	4610      	moveq	r0, r2
 8008174:	1909      	addeq	r1, r1, r4
 8008176:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 8008178:	6844      	ldr	r4, [r0, #4]
 800817a:	1901      	adds	r1, r0, r4
 800817c:	428b      	cmp	r3, r1
 800817e:	d107      	bne.n	8008190 <prvInsertBlockIntoFreeList+0x34>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 8008180:	4907      	ldr	r1, [pc, #28]	; (80081a0 <prvInsertBlockIntoFreeList+0x44>)
 8008182:	6809      	ldr	r1, [r1, #0]
 8008184:	428b      	cmp	r3, r1
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 8008186:	bf1f      	itttt	ne
 8008188:	6859      	ldrne	r1, [r3, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800818a:	681b      	ldrne	r3, [r3, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800818c:	1909      	addne	r1, r1, r4
 800818e:	6041      	strne	r1, [r0, #4]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 8008190:	4290      	cmp	r0, r2
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
 8008192:	6003      	str	r3, [r0, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 8008194:	bf18      	it	ne
 8008196:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 8008198:	bd10      	pop	{r4, pc}
 800819a:	bf00      	nop
 800819c:	20014cd8 	.word	0x20014cd8
 80081a0:	20004cc8 	.word	0x20004cc8

080081a4 <pvPortMalloc>:
{
 80081a4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80081a8:	4604      	mov	r4, r0
	vTaskSuspendAll();
 80081aa:	f001 f9e3 	bl	8009574 <vTaskSuspendAll>
		if( pxEnd == NULL )
 80081ae:	4840      	ldr	r0, [pc, #256]	; (80082b0 <pvPortMalloc+0x10c>)
 80081b0:	4d40      	ldr	r5, [pc, #256]	; (80082b4 <pvPortMalloc+0x110>)
 80081b2:	6803      	ldr	r3, [r0, #0]
 80081b4:	bb0b      	cbnz	r3, 80081fa <pvPortMalloc+0x56>
	uxAddress = ( size_t ) ucHeap;
 80081b6:	4940      	ldr	r1, [pc, #256]	; (80082b8 <pvPortMalloc+0x114>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 80081b8:	074e      	lsls	r6, r1, #29
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 80081ba:	bf1f      	itttt	ne
 80081bc:	1dcb      	addne	r3, r1, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 80081be:	f023 0307 	bicne.w	r3, r3, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 80081c2:	f501 3280 	addne.w	r2, r1, #65536	; 0x10000
 80081c6:	1ad2      	subne	r2, r2, r3
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 80081c8:	bf14      	ite	ne
 80081ca:	4619      	movne	r1, r3
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 80081cc:	f44f 3280 	moveq.w	r2, #65536	; 0x10000
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 80081d0:	440a      	add	r2, r1
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 80081d2:	4e3a      	ldr	r6, [pc, #232]	; (80082bc <pvPortMalloc+0x118>)
	uxAddress -= xHeapStructSize;
 80081d4:	3a08      	subs	r2, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 80081d6:	f022 0207 	bic.w	r2, r2, #7
	xStart.xBlockSize = ( size_t ) 0;
 80081da:	2300      	movs	r3, #0
 80081dc:	6073      	str	r3, [r6, #4]
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 80081de:	6031      	str	r1, [r6, #0]
	pxEnd->pxNextFreeBlock = NULL;
 80081e0:	e9c2 3300 	strd	r3, r3, [r2]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 80081e4:	1a53      	subs	r3, r2, r1
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 80081e6:	e9c1 2300 	strd	r2, r3, [r1]
	pxEnd = ( void * ) uxAddress;
 80081ea:	6002      	str	r2, [r0, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 80081ec:	4a34      	ldr	r2, [pc, #208]	; (80082c0 <pvPortMalloc+0x11c>)
 80081ee:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 80081f0:	4a34      	ldr	r2, [pc, #208]	; (80082c4 <pvPortMalloc+0x120>)
 80081f2:	6013      	str	r3, [r2, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 80081f4:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 80081f8:	602b      	str	r3, [r5, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 80081fa:	682f      	ldr	r7, [r5, #0]
 80081fc:	4227      	tst	r7, r4
 80081fe:	d151      	bne.n	80082a4 <pvPortMalloc+0x100>
			if( xWantedSize > 0 )
 8008200:	2c00      	cmp	r4, #0
 8008202:	d042      	beq.n	800828a <pvPortMalloc+0xe6>
				xWantedSize += xHeapStructSize;
 8008204:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 8008208:	0761      	lsls	r1, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 800820a:	bf1c      	itt	ne
 800820c:	f023 0307 	bicne.w	r3, r3, #7
 8008210:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 8008212:	2b00      	cmp	r3, #0
 8008214:	d046      	beq.n	80082a4 <pvPortMalloc+0x100>
 8008216:	4c2b      	ldr	r4, [pc, #172]	; (80082c4 <pvPortMalloc+0x120>)
 8008218:	6826      	ldr	r6, [r4, #0]
 800821a:	429e      	cmp	r6, r3
 800821c:	d342      	bcc.n	80082a4 <pvPortMalloc+0x100>
				pxBlock = xStart.pxNextFreeBlock;
 800821e:	4a27      	ldr	r2, [pc, #156]	; (80082bc <pvPortMalloc+0x118>)
 8008220:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 8008222:	6869      	ldr	r1, [r5, #4]
 8008224:	4299      	cmp	r1, r3
 8008226:	d204      	bcs.n	8008232 <pvPortMalloc+0x8e>
 8008228:	f8d5 c000 	ldr.w	ip, [r5]
 800822c:	f1bc 0f00 	cmp.w	ip, #0
 8008230:	d115      	bne.n	800825e <pvPortMalloc+0xba>
				if( pxBlock != pxEnd )
 8008232:	6800      	ldr	r0, [r0, #0]
 8008234:	42a8      	cmp	r0, r5
 8008236:	d035      	beq.n	80082a4 <pvPortMalloc+0x100>
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 8008238:	1ac9      	subs	r1, r1, r3
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800823a:	6828      	ldr	r0, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800823c:	f8d2 8000 	ldr.w	r8, [r2]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8008240:	6010      	str	r0, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 8008242:	2910      	cmp	r1, #16
 8008244:	d912      	bls.n	800826c <pvPortMalloc+0xc8>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 8008246:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 8008248:	0742      	lsls	r2, r0, #29
 800824a:	d00b      	beq.n	8008264 <pvPortMalloc+0xc0>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 800824c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008250:	f383 8811 	msr	BASEPRI, r3
 8008254:	f3bf 8f6f 	isb	sy
 8008258:	f3bf 8f4f 	dsb	sy
 800825c:	e7fe      	b.n	800825c <pvPortMalloc+0xb8>
 800825e:	462a      	mov	r2, r5
 8008260:	4665      	mov	r5, ip
 8008262:	e7de      	b.n	8008222 <pvPortMalloc+0x7e>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 8008264:	6041      	str	r1, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 8008266:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 8008268:	f7ff ff78 	bl	800815c <prvInsertBlockIntoFreeList>
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800826c:	4914      	ldr	r1, [pc, #80]	; (80082c0 <pvPortMalloc+0x11c>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800826e:	686b      	ldr	r3, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8008270:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8008272:	1af6      	subs	r6, r6, r3
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8008274:	431f      	orrs	r7, r3
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8008276:	4286      	cmp	r6, r0
					pxBlock->pxNextFreeBlock = NULL;
 8008278:	f04f 0300 	mov.w	r3, #0
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800827c:	6026      	str	r6, [r4, #0]
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 800827e:	bf38      	it	cc
 8008280:	600e      	strcc	r6, [r1, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8008282:	f108 0408 	add.w	r4, r8, #8
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8008286:	606f      	str	r7, [r5, #4]
					pxBlock->pxNextFreeBlock = NULL;
 8008288:	602b      	str	r3, [r5, #0]
	( void ) xTaskResumeAll();
 800828a:	f001 fa17 	bl	80096bc <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 800828e:	0763      	lsls	r3, r4, #29
 8008290:	d00a      	beq.n	80082a8 <pvPortMalloc+0x104>
 8008292:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008296:	f383 8811 	msr	BASEPRI, r3
 800829a:	f3bf 8f6f 	isb	sy
 800829e:	f3bf 8f4f 	dsb	sy
 80082a2:	e7fe      	b.n	80082a2 <pvPortMalloc+0xfe>
void *pvReturn = NULL;
 80082a4:	2400      	movs	r4, #0
 80082a6:	e7f0      	b.n	800828a <pvPortMalloc+0xe6>
}
 80082a8:	4620      	mov	r0, r4
 80082aa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80082ae:	bf00      	nop
 80082b0:	20004cc8 	.word	0x20004cc8
 80082b4:	20014ccc 	.word	0x20014ccc
 80082b8:	20004ccc 	.word	0x20004ccc
 80082bc:	20014cd8 	.word	0x20014cd8
 80082c0:	20014cd4 	.word	0x20014cd4
 80082c4:	20014cd0 	.word	0x20014cd0

080082c8 <vPortFree>:
{
 80082c8:	b510      	push	{r4, lr}
	if( pv != NULL )
 80082ca:	4604      	mov	r4, r0
 80082cc:	b370      	cbz	r0, 800832c <vPortFree+0x64>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 80082ce:	4a18      	ldr	r2, [pc, #96]	; (8008330 <vPortFree+0x68>)
 80082d0:	f850 3c04 	ldr.w	r3, [r0, #-4]
 80082d4:	6812      	ldr	r2, [r2, #0]
 80082d6:	4213      	tst	r3, r2
 80082d8:	d108      	bne.n	80082ec <vPortFree+0x24>
 80082da:	f04f 0350 	mov.w	r3, #80	; 0x50
 80082de:	f383 8811 	msr	BASEPRI, r3
 80082e2:	f3bf 8f6f 	isb	sy
 80082e6:	f3bf 8f4f 	dsb	sy
 80082ea:	e7fe      	b.n	80082ea <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 80082ec:	f850 1c08 	ldr.w	r1, [r0, #-8]
 80082f0:	b141      	cbz	r1, 8008304 <vPortFree+0x3c>
 80082f2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80082f6:	f383 8811 	msr	BASEPRI, r3
 80082fa:	f3bf 8f6f 	isb	sy
 80082fe:	f3bf 8f4f 	dsb	sy
 8008302:	e7fe      	b.n	8008302 <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 8008304:	ea23 0302 	bic.w	r3, r3, r2
 8008308:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 800830c:	f001 f932 	bl	8009574 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 8008310:	4a08      	ldr	r2, [pc, #32]	; (8008334 <vPortFree+0x6c>)
 8008312:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8008316:	6811      	ldr	r1, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8008318:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 800831c:	440b      	add	r3, r1
 800831e:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8008320:	f7ff ff1c 	bl	800815c <prvInsertBlockIntoFreeList>
}
 8008324:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				( void ) xTaskResumeAll();
 8008328:	f001 b9c8 	b.w	80096bc <xTaskResumeAll>
}
 800832c:	bd10      	pop	{r4, pc}
 800832e:	bf00      	nop
 8008330:	20014ccc 	.word	0x20014ccc
 8008334:	20014cd0 	.word	0x20014cd0

08008338 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008338:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800833c:	f04f 32ff 	mov.w	r2, #4294967295

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008340:	e9c0 2302 	strd	r2, r3, [r0, #8]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008344:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008346:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 8008348:	2300      	movs	r3, #0
 800834a:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 800834c:	4770      	bx	lr

0800834e <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 800834e:	2300      	movs	r3, #0
 8008350:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 8008352:	4770      	bx	lr

08008354 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 8008354:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 8008356:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 8008358:	689a      	ldr	r2, [r3, #8]
 800835a:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800835c:	689a      	ldr	r2, [r3, #8]
 800835e:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 8008360:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8008362:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8008364:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8008366:	3301      	adds	r3, #1
 8008368:	6003      	str	r3, [r0, #0]
}
 800836a:	4770      	bx	lr

0800836c <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 800836c:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 800836e:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 8008370:	1c63      	adds	r3, r4, #1
 8008372:	d10a      	bne.n	800838a <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 8008374:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 8008376:	685a      	ldr	r2, [r3, #4]
 8008378:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 800837a:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 800837c:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 800837e:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8008380:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8008382:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8008384:	3301      	adds	r3, #1
 8008386:	6003      	str	r3, [r0, #0]
}
 8008388:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 800838a:	f100 0208 	add.w	r2, r0, #8
 800838e:	4613      	mov	r3, r2
 8008390:	6852      	ldr	r2, [r2, #4]
 8008392:	6815      	ldr	r5, [r2, #0]
 8008394:	42a5      	cmp	r5, r4
 8008396:	d9fa      	bls.n	800838e <vListInsert+0x22>
 8008398:	e7ed      	b.n	8008376 <vListInsert+0xa>

0800839a <uxListRemove>:
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800839a:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
List_t * const pxList = pxItemToRemove->pxContainer;
 800839e:	6903      	ldr	r3, [r0, #16]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 80083a0:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 80083a2:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 80083a4:	6859      	ldr	r1, [r3, #4]
 80083a6:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 80083a8:	bf08      	it	eq
 80083aa:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 80083ac:	2200      	movs	r2, #0
 80083ae:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 80083b0:	681a      	ldr	r2, [r3, #0]
 80083b2:	3a01      	subs	r2, #1
 80083b4:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 80083b6:	6818      	ldr	r0, [r3, #0]
}
 80083b8:	4770      	bx	lr
	...

080083bc <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 80083bc:	4808      	ldr	r0, [pc, #32]	; (80083e0 <prvPortStartFirstTask+0x24>)
 80083be:	6800      	ldr	r0, [r0, #0]
 80083c0:	6800      	ldr	r0, [r0, #0]
 80083c2:	f380 8808 	msr	MSP, r0
 80083c6:	f04f 0000 	mov.w	r0, #0
 80083ca:	f380 8814 	msr	CONTROL, r0
 80083ce:	b662      	cpsie	i
 80083d0:	b661      	cpsie	f
 80083d2:	f3bf 8f4f 	dsb	sy
 80083d6:	f3bf 8f6f 	isb	sy
 80083da:	df00      	svc	0
 80083dc:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 80083de:	0000      	.short	0x0000
 80083e0:	e000ed08 	.word	0xe000ed08

080083e4 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 80083e4:	f8df 000c 	ldr.w	r0, [pc, #12]	; 80083f4 <vPortEnableVFP+0x10>
 80083e8:	6801      	ldr	r1, [r0, #0]
 80083ea:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80083ee:	6001      	str	r1, [r0, #0]
 80083f0:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 80083f2:	0000      	.short	0x0000
 80083f4:	e000ed88 	.word	0xe000ed88

080083f8 <prvTaskExitError>:
{
 80083f8:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 80083fa:	2300      	movs	r3, #0
 80083fc:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 80083fe:	4b0d      	ldr	r3, [pc, #52]	; (8008434 <prvTaskExitError+0x3c>)
 8008400:	681b      	ldr	r3, [r3, #0]
 8008402:	3301      	adds	r3, #1
 8008404:	d008      	beq.n	8008418 <prvTaskExitError+0x20>
 8008406:	f04f 0350 	mov.w	r3, #80	; 0x50
 800840a:	f383 8811 	msr	BASEPRI, r3
 800840e:	f3bf 8f6f 	isb	sy
 8008412:	f3bf 8f4f 	dsb	sy
 8008416:	e7fe      	b.n	8008416 <prvTaskExitError+0x1e>
 8008418:	f04f 0350 	mov.w	r3, #80	; 0x50
 800841c:	f383 8811 	msr	BASEPRI, r3
 8008420:	f3bf 8f6f 	isb	sy
 8008424:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 8008428:	9b01      	ldr	r3, [sp, #4]
 800842a:	2b00      	cmp	r3, #0
 800842c:	d0fc      	beq.n	8008428 <prvTaskExitError+0x30>
}
 800842e:	b002      	add	sp, #8
 8008430:	4770      	bx	lr
 8008432:	bf00      	nop
 8008434:	20000084 	.word	0x20000084

08008438 <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 8008438:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 800843c:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 8008440:	4b07      	ldr	r3, [pc, #28]	; (8008460 <pxPortInitialiseStack+0x28>)
 8008442:	f840 3c0c 	str.w	r3, [r0, #-12]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8008446:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800844a:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800844e:	f840 1c08 	str.w	r1, [r0, #-8]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 8008452:	f840 2c20 	str.w	r2, [r0, #-32]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 8008456:	f840 3c24 	str.w	r3, [r0, #-36]
}
 800845a:	3844      	subs	r0, #68	; 0x44
 800845c:	4770      	bx	lr
 800845e:	bf00      	nop
 8008460:	080083f9 	.word	0x080083f9
	...

08008470 <SVC_Handler>:
	__asm volatile (
 8008470:	4b07      	ldr	r3, [pc, #28]	; (8008490 <pxCurrentTCBConst2>)
 8008472:	6819      	ldr	r1, [r3, #0]
 8008474:	6808      	ldr	r0, [r1, #0]
 8008476:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800847a:	f380 8809 	msr	PSP, r0
 800847e:	f3bf 8f6f 	isb	sy
 8008482:	f04f 0000 	mov.w	r0, #0
 8008486:	f380 8811 	msr	BASEPRI, r0
 800848a:	4770      	bx	lr
 800848c:	f3af 8000 	nop.w

08008490 <pxCurrentTCBConst2>:
 8008490:	20014d28 	.word	0x20014d28

08008494 <vPortEnterCritical>:
 8008494:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008498:	f383 8811 	msr	BASEPRI, r3
 800849c:	f3bf 8f6f 	isb	sy
 80084a0:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 80084a4:	4a0a      	ldr	r2, [pc, #40]	; (80084d0 <vPortEnterCritical+0x3c>)
 80084a6:	6813      	ldr	r3, [r2, #0]
 80084a8:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 80084aa:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 80084ac:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 80084ae:	d10e      	bne.n	80084ce <vPortEnterCritical+0x3a>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 80084b0:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80084b4:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 80084b8:	b2db      	uxtb	r3, r3
 80084ba:	b143      	cbz	r3, 80084ce <vPortEnterCritical+0x3a>
 80084bc:	f04f 0350 	mov.w	r3, #80	; 0x50
 80084c0:	f383 8811 	msr	BASEPRI, r3
 80084c4:	f3bf 8f6f 	isb	sy
 80084c8:	f3bf 8f4f 	dsb	sy
 80084cc:	e7fe      	b.n	80084cc <vPortEnterCritical+0x38>
}
 80084ce:	4770      	bx	lr
 80084d0:	20000084 	.word	0x20000084

080084d4 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 80084d4:	4a08      	ldr	r2, [pc, #32]	; (80084f8 <vPortExitCritical+0x24>)
 80084d6:	6813      	ldr	r3, [r2, #0]
 80084d8:	b943      	cbnz	r3, 80084ec <vPortExitCritical+0x18>
 80084da:	f04f 0350 	mov.w	r3, #80	; 0x50
 80084de:	f383 8811 	msr	BASEPRI, r3
 80084e2:	f3bf 8f6f 	isb	sy
 80084e6:	f3bf 8f4f 	dsb	sy
 80084ea:	e7fe      	b.n	80084ea <vPortExitCritical+0x16>
	uxCriticalNesting--;
 80084ec:	3b01      	subs	r3, #1
 80084ee:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 80084f0:	b90b      	cbnz	r3, 80084f6 <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 80084f2:	f383 8811 	msr	BASEPRI, r3
}
 80084f6:	4770      	bx	lr
 80084f8:	20000084 	.word	0x20000084
 80084fc:	00000000 	.word	0x00000000

08008500 <PendSV_Handler>:
	__asm volatile
 8008500:	f3ef 8009 	mrs	r0, PSP
 8008504:	f3bf 8f6f 	isb	sy
 8008508:	4b15      	ldr	r3, [pc, #84]	; (8008560 <pxCurrentTCBConst>)
 800850a:	681a      	ldr	r2, [r3, #0]
 800850c:	f01e 0f10 	tst.w	lr, #16
 8008510:	bf08      	it	eq
 8008512:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 8008516:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800851a:	6010      	str	r0, [r2, #0]
 800851c:	e92d 0009 	stmdb	sp!, {r0, r3}
 8008520:	f04f 0050 	mov.w	r0, #80	; 0x50
 8008524:	f380 8811 	msr	BASEPRI, r0
 8008528:	f3bf 8f4f 	dsb	sy
 800852c:	f3bf 8f6f 	isb	sy
 8008530:	f001 f95c 	bl	80097ec <vTaskSwitchContext>
 8008534:	f04f 0000 	mov.w	r0, #0
 8008538:	f380 8811 	msr	BASEPRI, r0
 800853c:	bc09      	pop	{r0, r3}
 800853e:	6819      	ldr	r1, [r3, #0]
 8008540:	6808      	ldr	r0, [r1, #0]
 8008542:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008546:	f01e 0f10 	tst.w	lr, #16
 800854a:	bf08      	it	eq
 800854c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 8008550:	f380 8809 	msr	PSP, r0
 8008554:	f3bf 8f6f 	isb	sy
 8008558:	4770      	bx	lr
 800855a:	bf00      	nop
 800855c:	f3af 8000 	nop.w

08008560 <pxCurrentTCBConst>:
 8008560:	20014d28 	.word	0x20014d28

08008564 <SysTick_Handler>:
{
 8008564:	b508      	push	{r3, lr}
	__asm volatile
 8008566:	f04f 0350 	mov.w	r3, #80	; 0x50
 800856a:	f383 8811 	msr	BASEPRI, r3
 800856e:	f3bf 8f6f 	isb	sy
 8008572:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 8008576:	f001 f80b 	bl	8009590 <xTaskIncrementTick>
 800857a:	b128      	cbz	r0, 8008588 <SysTick_Handler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 800857c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008580:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008584:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 8008588:	2300      	movs	r3, #0
 800858a:	f383 8811 	msr	BASEPRI, r3
}
 800858e:	bd08      	pop	{r3, pc}

08008590 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 8008590:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 8008594:	2300      	movs	r3, #0
 8008596:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 8008598:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800859a:	4b05      	ldr	r3, [pc, #20]	; (80085b0 <vPortSetupTimerInterrupt+0x20>)
 800859c:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 80085a0:	681b      	ldr	r3, [r3, #0]
 80085a2:	fbb3 f3f1 	udiv	r3, r3, r1
 80085a6:	3b01      	subs	r3, #1
 80085a8:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 80085aa:	2307      	movs	r3, #7
 80085ac:	6113      	str	r3, [r2, #16]
}
 80085ae:	4770      	bx	lr
 80085b0:	20000078 	.word	0x20000078

080085b4 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 80085b4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
{
 80085b8:	b537      	push	{r0, r1, r2, r4, r5, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 80085ba:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 80085be:	4a3a      	ldr	r2, [pc, #232]	; (80086a8 <xPortStartScheduler+0xf4>)
 80085c0:	4291      	cmp	r1, r2
 80085c2:	d108      	bne.n	80085d6 <xPortStartScheduler+0x22>
	__asm volatile
 80085c4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80085c8:	f383 8811 	msr	BASEPRI, r3
 80085cc:	f3bf 8f6f 	isb	sy
 80085d0:	f3bf 8f4f 	dsb	sy
 80085d4:	e7fe      	b.n	80085d4 <xPortStartScheduler+0x20>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 80085d6:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 80085da:	4b34      	ldr	r3, [pc, #208]	; (80086ac <xPortStartScheduler+0xf8>)
 80085dc:	429a      	cmp	r2, r3
 80085de:	d108      	bne.n	80085f2 <xPortStartScheduler+0x3e>
 80085e0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80085e4:	f383 8811 	msr	BASEPRI, r3
 80085e8:	f3bf 8f6f 	isb	sy
 80085ec:	f3bf 8f4f 	dsb	sy
 80085f0:	e7fe      	b.n	80085f0 <xPortStartScheduler+0x3c>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 80085f2:	4b2f      	ldr	r3, [pc, #188]	; (80086b0 <xPortStartScheduler+0xfc>)
 80085f4:	781a      	ldrb	r2, [r3, #0]
 80085f6:	b2d2      	uxtb	r2, r2
 80085f8:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 80085fa:	22ff      	movs	r2, #255	; 0xff
 80085fc:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 80085fe:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8008600:	4a2c      	ldr	r2, [pc, #176]	; (80086b4 <xPortStartScheduler+0x100>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8008602:	b2db      	uxtb	r3, r3
 8008604:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8008608:	f89d 3003 	ldrb.w	r3, [sp, #3]
 800860c:	f003 0350 	and.w	r3, r3, #80	; 0x50
 8008610:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 8008612:	4a29      	ldr	r2, [pc, #164]	; (80086b8 <xPortStartScheduler+0x104>)
 8008614:	2307      	movs	r3, #7
 8008616:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8008618:	2100      	movs	r1, #0
 800861a:	f89d 0003 	ldrb.w	r0, [sp, #3]
 800861e:	0600      	lsls	r0, r0, #24
 8008620:	f103 34ff 	add.w	r4, r3, #4294967295
 8008624:	d40c      	bmi.n	8008640 <xPortStartScheduler+0x8c>
 8008626:	b111      	cbz	r1, 800862e <xPortStartScheduler+0x7a>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 8008628:	2b03      	cmp	r3, #3
 800862a:	6013      	str	r3, [r2, #0]
 800862c:	d011      	beq.n	8008652 <xPortStartScheduler+0x9e>
 800862e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008632:	f383 8811 	msr	BASEPRI, r3
 8008636:	f3bf 8f6f 	isb	sy
 800863a:	f3bf 8f4f 	dsb	sy
 800863e:	e7fe      	b.n	800863e <xPortStartScheduler+0x8a>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 8008640:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8008644:	005b      	lsls	r3, r3, #1
 8008646:	b2db      	uxtb	r3, r3
 8008648:	f88d 3003 	strb.w	r3, [sp, #3]
 800864c:	2101      	movs	r1, #1
 800864e:	4623      	mov	r3, r4
 8008650:	e7e3      	b.n	800861a <xPortStartScheduler+0x66>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 8008652:	f44f 7340 	mov.w	r3, #768	; 0x300
 8008656:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8008658:	9b01      	ldr	r3, [sp, #4]
 800865a:	4a15      	ldr	r2, [pc, #84]	; (80086b0 <xPortStartScheduler+0xfc>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800865c:	f04f 24e0 	mov.w	r4, #3758153728	; 0xe000e000
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8008660:	b2db      	uxtb	r3, r3
 8008662:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8008664:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 8008668:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800866c:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 8008670:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 8008674:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 8008678:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	vPortSetupTimerInterrupt();
 800867c:	f7ff ff88 	bl	8008590 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 8008680:	4b0e      	ldr	r3, [pc, #56]	; (80086bc <xPortStartScheduler+0x108>)
 8008682:	2500      	movs	r5, #0
 8008684:	601d      	str	r5, [r3, #0]
	vPortEnableVFP();
 8008686:	f7ff fead 	bl	80083e4 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 800868a:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	; 0xf34
 800868e:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 8008692:	f8c4 3f34 	str.w	r3, [r4, #3892]	; 0xf34
	prvPortStartFirstTask();
 8008696:	f7ff fe91 	bl	80083bc <prvPortStartFirstTask>
	vTaskSwitchContext();
 800869a:	f001 f8a7 	bl	80097ec <vTaskSwitchContext>
	prvTaskExitError();
 800869e:	f7ff feab 	bl	80083f8 <prvTaskExitError>
}
 80086a2:	4628      	mov	r0, r5
 80086a4:	b003      	add	sp, #12
 80086a6:	bd30      	pop	{r4, r5, pc}
 80086a8:	410fc271 	.word	0x410fc271
 80086ac:	410fc270 	.word	0x410fc270
 80086b0:	e000e400 	.word	0xe000e400
 80086b4:	20014ce0 	.word	0x20014ce0
 80086b8:	20014ce4 	.word	0x20014ce4
 80086bc:	20000084 	.word	0x20000084

080086c0 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 80086c0:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 80086c4:	2b0f      	cmp	r3, #15
 80086c6:	d90e      	bls.n	80086e6 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 80086c8:	4a11      	ldr	r2, [pc, #68]	; (8008710 <vPortValidateInterruptPriority+0x50>)
 80086ca:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 80086cc:	4a11      	ldr	r2, [pc, #68]	; (8008714 <vPortValidateInterruptPriority+0x54>)
 80086ce:	7812      	ldrb	r2, [r2, #0]
 80086d0:	429a      	cmp	r2, r3
 80086d2:	d908      	bls.n	80086e6 <vPortValidateInterruptPriority+0x26>
 80086d4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80086d8:	f383 8811 	msr	BASEPRI, r3
 80086dc:	f3bf 8f6f 	isb	sy
 80086e0:	f3bf 8f4f 	dsb	sy
 80086e4:	e7fe      	b.n	80086e4 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 80086e6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80086ea:	4a0b      	ldr	r2, [pc, #44]	; (8008718 <vPortValidateInterruptPriority+0x58>)
 80086ec:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 80086f0:	6812      	ldr	r2, [r2, #0]
 80086f2:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 80086f6:	4293      	cmp	r3, r2
 80086f8:	d908      	bls.n	800870c <vPortValidateInterruptPriority+0x4c>
 80086fa:	f04f 0350 	mov.w	r3, #80	; 0x50
 80086fe:	f383 8811 	msr	BASEPRI, r3
 8008702:	f3bf 8f6f 	isb	sy
 8008706:	f3bf 8f4f 	dsb	sy
 800870a:	e7fe      	b.n	800870a <vPortValidateInterruptPriority+0x4a>
	}
 800870c:	4770      	bx	lr
 800870e:	bf00      	nop
 8008710:	e000e3f0 	.word	0xe000e3f0
 8008714:	20014ce0 	.word	0x20014ce0
 8008718:	20014ce4 	.word	0x20014ce4

0800871c <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 800871c:	b510      	push	{r4, lr}
 800871e:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8008720:	f7ff feb8 	bl	8008494 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 8008724:	6ba4      	ldr	r4, [r4, #56]	; 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8008726:	f7ff fed5 	bl	80084d4 <vPortExitCritical>

	return xReturn;
}
 800872a:	fab4 f084 	clz	r0, r4
 800872e:	0940      	lsrs	r0, r0, #5
 8008730:	bd10      	pop	{r4, pc}

08008732 <prvCopyDataToQueue>:
{
 8008732:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008734:	4615      	mov	r5, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8008736:	6c02      	ldr	r2, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8008738:	6b86      	ldr	r6, [r0, #56]	; 0x38
{
 800873a:	4604      	mov	r4, r0
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800873c:	b952      	cbnz	r2, 8008754 <prvCopyDataToQueue+0x22>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800873e:	6807      	ldr	r7, [r0, #0]
 8008740:	bb47      	cbnz	r7, 8008794 <prvCopyDataToQueue+0x62>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 8008742:	6880      	ldr	r0, [r0, #8]
 8008744:	f001 f9ae 	bl	8009aa4 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 8008748:	60a7      	str	r7, [r4, #8]
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800874a:	4605      	mov	r5, r0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800874c:	3601      	adds	r6, #1
 800874e:	63a6      	str	r6, [r4, #56]	; 0x38
}
 8008750:	4628      	mov	r0, r5
 8008752:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	else if( xPosition == queueSEND_TO_BACK )
 8008754:	b965      	cbnz	r5, 8008770 <prvCopyDataToQueue+0x3e>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8008756:	6840      	ldr	r0, [r0, #4]
 8008758:	f017 fc5a 	bl	8020010 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800875c:	6863      	ldr	r3, [r4, #4]
 800875e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8008760:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8008762:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008764:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8008766:	4293      	cmp	r3, r2
 8008768:	d3f0      	bcc.n	800874c <prvCopyDataToQueue+0x1a>
			pxQueue->pcWriteTo = pxQueue->pcHead;
 800876a:	6823      	ldr	r3, [r4, #0]
 800876c:	6063      	str	r3, [r4, #4]
 800876e:	e7ed      	b.n	800874c <prvCopyDataToQueue+0x1a>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 8008770:	68c0      	ldr	r0, [r0, #12]
 8008772:	f017 fc4d 	bl	8020010 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8008776:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8008778:	68e3      	ldr	r3, [r4, #12]
 800877a:	4251      	negs	r1, r2
 800877c:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800877e:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8008780:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8008782:	4293      	cmp	r3, r2
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 8008784:	bf3e      	ittt	cc
 8008786:	68a3      	ldrcc	r3, [r4, #8]
 8008788:	185b      	addcc	r3, r3, r1
 800878a:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 800878c:	2d02      	cmp	r5, #2
 800878e:	d101      	bne.n	8008794 <prvCopyDataToQueue+0x62>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8008790:	b116      	cbz	r6, 8008798 <prvCopyDataToQueue+0x66>
				--uxMessagesWaiting;
 8008792:	3e01      	subs	r6, #1
BaseType_t xReturn = pdFALSE;
 8008794:	2500      	movs	r5, #0
 8008796:	e7d9      	b.n	800874c <prvCopyDataToQueue+0x1a>
 8008798:	4635      	mov	r5, r6
 800879a:	e7d7      	b.n	800874c <prvCopyDataToQueue+0x1a>

0800879c <prvCopyDataFromQueue>:
{
 800879c:	4603      	mov	r3, r0
 800879e:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 80087a0:	6c1a      	ldr	r2, [r3, #64]	; 0x40
{
 80087a2:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 80087a4:	b16a      	cbz	r2, 80087c2 <prvCopyDataFromQueue+0x26>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80087a6:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 80087a8:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80087aa:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 80087ac:	428c      	cmp	r4, r1
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 80087ae:	bf28      	it	cs
 80087b0:	6819      	ldrcs	r1, [r3, #0]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80087b2:	60dc      	str	r4, [r3, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 80087b4:	bf28      	it	cs
 80087b6:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 80087b8:	68d9      	ldr	r1, [r3, #12]
}
 80087ba:	f85d 4b04 	ldr.w	r4, [sp], #4
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 80087be:	f017 bc27 	b.w	8020010 <memcpy>
}
 80087c2:	f85d 4b04 	ldr.w	r4, [sp], #4
 80087c6:	4770      	bx	lr

080087c8 <prvUnlockQueue>:
{
 80087c8:	b570      	push	{r4, r5, r6, lr}
 80087ca:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 80087cc:	f7ff fe62 	bl	8008494 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 80087d0:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80087d4:	f104 0624 	add.w	r6, r4, #36	; 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 80087d8:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 80087da:	2d00      	cmp	r5, #0
 80087dc:	dc14      	bgt.n	8008808 <prvUnlockQueue+0x40>
		pxQueue->cTxLock = queueUNLOCKED;
 80087de:	23ff      	movs	r3, #255	; 0xff
 80087e0:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 80087e4:	f7ff fe76 	bl	80084d4 <vPortExitCritical>
	taskENTER_CRITICAL();
 80087e8:	f7ff fe54 	bl	8008494 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 80087ec:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80087f0:	f104 0610 	add.w	r6, r4, #16
		int8_t cRxLock = pxQueue->cRxLock;
 80087f4:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 80087f6:	2d00      	cmp	r5, #0
 80087f8:	dc12      	bgt.n	8008820 <prvUnlockQueue+0x58>
		pxQueue->cRxLock = queueUNLOCKED;
 80087fa:	23ff      	movs	r3, #255	; 0xff
 80087fc:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
}
 8008800:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 8008804:	f7ff be66 	b.w	80084d4 <vPortExitCritical>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008808:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800880a:	2b00      	cmp	r3, #0
 800880c:	d0e7      	beq.n	80087de <prvUnlockQueue+0x16>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800880e:	4630      	mov	r0, r6
 8008810:	f001 f864 	bl	80098dc <xTaskRemoveFromEventList>
 8008814:	b108      	cbz	r0, 800881a <prvUnlockQueue+0x52>
						vTaskMissedYield();
 8008816:	f001 f8ed 	bl	80099f4 <vTaskMissedYield>
			--cTxLock;
 800881a:	3d01      	subs	r5, #1
 800881c:	b26d      	sxtb	r5, r5
 800881e:	e7dc      	b.n	80087da <prvUnlockQueue+0x12>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8008820:	6923      	ldr	r3, [r4, #16]
 8008822:	2b00      	cmp	r3, #0
 8008824:	d0e9      	beq.n	80087fa <prvUnlockQueue+0x32>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008826:	4630      	mov	r0, r6
 8008828:	f001 f858 	bl	80098dc <xTaskRemoveFromEventList>
 800882c:	b108      	cbz	r0, 8008832 <prvUnlockQueue+0x6a>
					vTaskMissedYield();
 800882e:	f001 f8e1 	bl	80099f4 <vTaskMissedYield>
				--cRxLock;
 8008832:	3d01      	subs	r5, #1
 8008834:	b26d      	sxtb	r5, r5
 8008836:	e7de      	b.n	80087f6 <prvUnlockQueue+0x2e>

08008838 <xQueueGenericReset>:
{
 8008838:	b538      	push	{r3, r4, r5, lr}
 800883a:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800883c:	4604      	mov	r4, r0
 800883e:	b940      	cbnz	r0, 8008852 <xQueueGenericReset+0x1a>
 8008840:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008844:	f383 8811 	msr	BASEPRI, r3
 8008848:	f3bf 8f6f 	isb	sy
 800884c:	f3bf 8f4f 	dsb	sy
 8008850:	e7fe      	b.n	8008850 <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 8008852:	f7ff fe1f 	bl	8008494 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008856:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	; 0x3c
 800885a:	6822      	ldr	r2, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800885c:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800885e:	434b      	muls	r3, r1
 8008860:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008862:	1a5b      	subs	r3, r3, r1
 8008864:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008866:	60a0      	str	r0, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008868:	60e3      	str	r3, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800886a:	2000      	movs	r0, #0
		pxQueue->cRxLock = queueUNLOCKED;
 800886c:	23ff      	movs	r3, #255	; 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800886e:	63a0      	str	r0, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 8008870:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 8008874:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
		if( xNewQueue == pdFALSE )
 8008878:	b9a5      	cbnz	r5, 80088a4 <xQueueGenericReset+0x6c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800887a:	6923      	ldr	r3, [r4, #16]
 800887c:	b173      	cbz	r3, 800889c <xQueueGenericReset+0x64>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800887e:	f104 0010 	add.w	r0, r4, #16
 8008882:	f001 f82b 	bl	80098dc <xTaskRemoveFromEventList>
 8008886:	b148      	cbz	r0, 800889c <xQueueGenericReset+0x64>
					queueYIELD_IF_USING_PREEMPTION();
 8008888:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800888c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008890:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008894:	f3bf 8f4f 	dsb	sy
 8008898:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 800889c:	f7ff fe1a 	bl	80084d4 <vPortExitCritical>
}
 80088a0:	2001      	movs	r0, #1
 80088a2:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 80088a4:	f104 0010 	add.w	r0, r4, #16
 80088a8:	f7ff fd46 	bl	8008338 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 80088ac:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80088b0:	f7ff fd42 	bl	8008338 <vListInitialise>
 80088b4:	e7f2      	b.n	800889c <xQueueGenericReset+0x64>

080088b6 <xQueueGenericCreateStatic>:
	{
 80088b6:	b513      	push	{r0, r1, r4, lr}
 80088b8:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 80088ba:	b940      	cbnz	r0, 80088ce <xQueueGenericCreateStatic+0x18>
 80088bc:	f04f 0350 	mov.w	r3, #80	; 0x50
 80088c0:	f383 8811 	msr	BASEPRI, r3
 80088c4:	f3bf 8f6f 	isb	sy
 80088c8:	f3bf 8f4f 	dsb	sy
 80088cc:	e7fe      	b.n	80088cc <xQueueGenericCreateStatic+0x16>
		configASSERT( pxStaticQueue != NULL );
 80088ce:	b943      	cbnz	r3, 80088e2 <xQueueGenericCreateStatic+0x2c>
 80088d0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80088d4:	f383 8811 	msr	BASEPRI, r3
 80088d8:	f3bf 8f6f 	isb	sy
 80088dc:	f3bf 8f4f 	dsb	sy
 80088e0:	e7fe      	b.n	80088e0 <xQueueGenericCreateStatic+0x2a>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 80088e2:	b14a      	cbz	r2, 80088f8 <xQueueGenericCreateStatic+0x42>
 80088e4:	b991      	cbnz	r1, 800890c <xQueueGenericCreateStatic+0x56>
 80088e6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80088ea:	f383 8811 	msr	BASEPRI, r3
 80088ee:	f3bf 8f6f 	isb	sy
 80088f2:	f3bf 8f4f 	dsb	sy
 80088f6:	e7fe      	b.n	80088f6 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 80088f8:	b141      	cbz	r1, 800890c <xQueueGenericCreateStatic+0x56>
 80088fa:	f04f 0350 	mov.w	r3, #80	; 0x50
 80088fe:	f383 8811 	msr	BASEPRI, r3
 8008902:	f3bf 8f6f 	isb	sy
 8008906:	f3bf 8f4f 	dsb	sy
 800890a:	e7fe      	b.n	800890a <xQueueGenericCreateStatic+0x54>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800890c:	2350      	movs	r3, #80	; 0x50
 800890e:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 8008910:	9b01      	ldr	r3, [sp, #4]
 8008912:	2b50      	cmp	r3, #80	; 0x50
 8008914:	d008      	beq.n	8008928 <xQueueGenericCreateStatic+0x72>
 8008916:	f04f 0350 	mov.w	r3, #80	; 0x50
 800891a:	f383 8811 	msr	BASEPRI, r3
 800891e:	f3bf 8f6f 	isb	sy
 8008922:	f3bf 8f4f 	dsb	sy
 8008926:	e7fe      	b.n	8008926 <xQueueGenericCreateStatic+0x70>
	if( uxItemSize == ( UBaseType_t ) 0 )
 8008928:	2900      	cmp	r1, #0
 800892a:	bf08      	it	eq
 800892c:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800892e:	9b01      	ldr	r3, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8008930:	6022      	str	r2, [r4, #0]
 8008932:	2301      	movs	r3, #1
	pxNewQueue->uxItemSize = uxItemSize;
 8008934:	e9c4 010f 	strd	r0, r1, [r4, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8008938:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800893c:	4619      	mov	r1, r3
 800893e:	4620      	mov	r0, r4
 8008940:	f7ff ff7a 	bl	8008838 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8008944:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8008948:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
	}
 800894c:	4620      	mov	r0, r4
 800894e:	b002      	add	sp, #8
 8008950:	bd10      	pop	{r4, pc}

08008952 <xQueueGenericCreate>:
	{
 8008952:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008954:	460d      	mov	r5, r1
 8008956:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8008958:	4606      	mov	r6, r0
 800895a:	b940      	cbnz	r0, 800896e <xQueueGenericCreate+0x1c>
 800895c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008960:	f383 8811 	msr	BASEPRI, r3
 8008964:	f3bf 8f6f 	isb	sy
 8008968:	f3bf 8f4f 	dsb	sy
 800896c:	e7fe      	b.n	800896c <xQueueGenericCreate+0x1a>
			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800896e:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 8008970:	3050      	adds	r0, #80	; 0x50
 8008972:	f7ff fc17 	bl	80081a4 <pvPortMalloc>
		if( pxNewQueue != NULL )
 8008976:	4604      	mov	r4, r0
 8008978:	b170      	cbz	r0, 8008998 <xQueueGenericCreate+0x46>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800897a:	2300      	movs	r3, #0
 800897c:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 8008980:	b165      	cbz	r5, 800899c <xQueueGenericCreate+0x4a>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008982:	f100 0350 	add.w	r3, r0, #80	; 0x50
	pxNewQueue->uxItemSize = uxItemSize;
 8008986:	e9c4 650f 	strd	r6, r5, [r4, #60]	; 0x3c
 800898a:	6023      	str	r3, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800898c:	2101      	movs	r1, #1
 800898e:	4620      	mov	r0, r4
 8008990:	f7ff ff52 	bl	8008838 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8008994:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 8008998:	4620      	mov	r0, r4
 800899a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800899c:	4603      	mov	r3, r0
 800899e:	e7f2      	b.n	8008986 <xQueueGenericCreate+0x34>

080089a0 <xQueueCreateCountingSemaphoreStatic>:
	{
 80089a0:	b513      	push	{r0, r1, r4, lr}
 80089a2:	4613      	mov	r3, r2
 80089a4:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 80089a6:	b940      	cbnz	r0, 80089ba <xQueueCreateCountingSemaphoreStatic+0x1a>
 80089a8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80089ac:	f383 8811 	msr	BASEPRI, r3
 80089b0:	f3bf 8f6f 	isb	sy
 80089b4:	f3bf 8f4f 	dsb	sy
 80089b8:	e7fe      	b.n	80089b8 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 80089ba:	4288      	cmp	r0, r1
 80089bc:	d208      	bcs.n	80089d0 <xQueueCreateCountingSemaphoreStatic+0x30>
 80089be:	f04f 0350 	mov.w	r3, #80	; 0x50
 80089c2:	f383 8811 	msr	BASEPRI, r3
 80089c6:	f3bf 8f6f 	isb	sy
 80089ca:	f3bf 8f4f 	dsb	sy
 80089ce:	e7fe      	b.n	80089ce <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 80089d0:	2202      	movs	r2, #2
 80089d2:	9200      	str	r2, [sp, #0]
 80089d4:	2200      	movs	r2, #0
 80089d6:	4611      	mov	r1, r2
 80089d8:	f7ff ff6d 	bl	80088b6 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 80089dc:	b100      	cbz	r0, 80089e0 <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 80089de:	6384      	str	r4, [r0, #56]	; 0x38
	}
 80089e0:	b002      	add	sp, #8
 80089e2:	bd10      	pop	{r4, pc}

080089e4 <xQueueCreateCountingSemaphore>:
	{
 80089e4:	b510      	push	{r4, lr}
 80089e6:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 80089e8:	b940      	cbnz	r0, 80089fc <xQueueCreateCountingSemaphore+0x18>
 80089ea:	f04f 0350 	mov.w	r3, #80	; 0x50
 80089ee:	f383 8811 	msr	BASEPRI, r3
 80089f2:	f3bf 8f6f 	isb	sy
 80089f6:	f3bf 8f4f 	dsb	sy
 80089fa:	e7fe      	b.n	80089fa <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 80089fc:	4288      	cmp	r0, r1
 80089fe:	d208      	bcs.n	8008a12 <xQueueCreateCountingSemaphore+0x2e>
 8008a00:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008a04:	f383 8811 	msr	BASEPRI, r3
 8008a08:	f3bf 8f6f 	isb	sy
 8008a0c:	f3bf 8f4f 	dsb	sy
 8008a10:	e7fe      	b.n	8008a10 <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8008a12:	2202      	movs	r2, #2
 8008a14:	2100      	movs	r1, #0
 8008a16:	f7ff ff9c 	bl	8008952 <xQueueGenericCreate>
		if( xHandle != NULL )
 8008a1a:	b100      	cbz	r0, 8008a1e <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 8008a1c:	6384      	str	r4, [r0, #56]	; 0x38
	}
 8008a1e:	bd10      	pop	{r4, pc}

08008a20 <xQueueGenericSend>:
{
 8008a20:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8008a24:	b085      	sub	sp, #20
 8008a26:	4688      	mov	r8, r1
 8008a28:	9201      	str	r2, [sp, #4]
 8008a2a:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 8008a2c:	4604      	mov	r4, r0
 8008a2e:	b940      	cbnz	r0, 8008a42 <xQueueGenericSend+0x22>
 8008a30:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008a34:	f383 8811 	msr	BASEPRI, r3
 8008a38:	f3bf 8f6f 	isb	sy
 8008a3c:	f3bf 8f4f 	dsb	sy
 8008a40:	e7fe      	b.n	8008a40 <xQueueGenericSend+0x20>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8008a42:	b951      	cbnz	r1, 8008a5a <xQueueGenericSend+0x3a>
 8008a44:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8008a46:	b143      	cbz	r3, 8008a5a <xQueueGenericSend+0x3a>
 8008a48:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008a4c:	f383 8811 	msr	BASEPRI, r3
 8008a50:	f3bf 8f6f 	isb	sy
 8008a54:	f3bf 8f4f 	dsb	sy
 8008a58:	e7fe      	b.n	8008a58 <xQueueGenericSend+0x38>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 8008a5a:	2f02      	cmp	r7, #2
 8008a5c:	d10b      	bne.n	8008a76 <xQueueGenericSend+0x56>
 8008a5e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8008a60:	2b01      	cmp	r3, #1
 8008a62:	d008      	beq.n	8008a76 <xQueueGenericSend+0x56>
 8008a64:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008a68:	f383 8811 	msr	BASEPRI, r3
 8008a6c:	f3bf 8f6f 	isb	sy
 8008a70:	f3bf 8f4f 	dsb	sy
 8008a74:	e7fe      	b.n	8008a74 <xQueueGenericSend+0x54>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8008a76:	f000 ffc3 	bl	8009a00 <xTaskGetSchedulerState>
 8008a7a:	4606      	mov	r6, r0
 8008a7c:	b950      	cbnz	r0, 8008a94 <xQueueGenericSend+0x74>
 8008a7e:	9b01      	ldr	r3, [sp, #4]
 8008a80:	b14b      	cbz	r3, 8008a96 <xQueueGenericSend+0x76>
 8008a82:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008a86:	f383 8811 	msr	BASEPRI, r3
 8008a8a:	f3bf 8f6f 	isb	sy
 8008a8e:	f3bf 8f4f 	dsb	sy
 8008a92:	e7fe      	b.n	8008a92 <xQueueGenericSend+0x72>
 8008a94:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 8008a96:	f04f 0900 	mov.w	r9, #0
 8008a9a:	e037      	b.n	8008b0c <xQueueGenericSend+0xec>
				if( xTicksToWait == ( TickType_t ) 0 )
 8008a9c:	9d01      	ldr	r5, [sp, #4]
 8008a9e:	b91d      	cbnz	r5, 8008aa8 <xQueueGenericSend+0x88>
					taskEXIT_CRITICAL();
 8008aa0:	f7ff fd18 	bl	80084d4 <vPortExitCritical>
			return errQUEUE_FULL;
 8008aa4:	2000      	movs	r0, #0
 8008aa6:	e052      	b.n	8008b4e <xQueueGenericSend+0x12e>
				else if( xEntryTimeSet == pdFALSE )
 8008aa8:	b916      	cbnz	r6, 8008ab0 <xQueueGenericSend+0x90>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8008aaa:	a802      	add	r0, sp, #8
 8008aac:	f000 ff5a 	bl	8009964 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8008ab0:	f7ff fd10 	bl	80084d4 <vPortExitCritical>
		vTaskSuspendAll();
 8008ab4:	f000 fd5e 	bl	8009574 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8008ab8:	f7ff fcec 	bl	8008494 <vPortEnterCritical>
 8008abc:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8008ac0:	2bff      	cmp	r3, #255	; 0xff
 8008ac2:	bf08      	it	eq
 8008ac4:	f884 9044 	strbeq.w	r9, [r4, #68]	; 0x44
 8008ac8:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8008acc:	2bff      	cmp	r3, #255	; 0xff
 8008ace:	bf08      	it	eq
 8008ad0:	f884 9045 	strbeq.w	r9, [r4, #69]	; 0x45
 8008ad4:	f7ff fcfe 	bl	80084d4 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8008ad8:	a901      	add	r1, sp, #4
 8008ada:	a802      	add	r0, sp, #8
 8008adc:	f000 ff4e 	bl	800997c <xTaskCheckForTimeOut>
 8008ae0:	2800      	cmp	r0, #0
 8008ae2:	d14a      	bne.n	8008b7a <xQueueGenericSend+0x15a>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8008ae4:	f7ff fcd6 	bl	8008494 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 8008ae8:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8008aea:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8008aec:	429a      	cmp	r2, r3
 8008aee:	d131      	bne.n	8008b54 <xQueueGenericSend+0x134>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8008af0:	f7ff fcf0 	bl	80084d4 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 8008af4:	9901      	ldr	r1, [sp, #4]
 8008af6:	f104 0010 	add.w	r0, r4, #16
 8008afa:	f000 feb7 	bl	800986c <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8008afe:	4620      	mov	r0, r4
 8008b00:	f7ff fe62 	bl	80087c8 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8008b04:	f000 fdda 	bl	80096bc <xTaskResumeAll>
 8008b08:	b360      	cbz	r0, 8008b64 <xQueueGenericSend+0x144>
 8008b0a:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 8008b0c:	f7ff fcc2 	bl	8008494 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8008b10:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8008b12:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8008b14:	429a      	cmp	r2, r3
 8008b16:	d301      	bcc.n	8008b1c <xQueueGenericSend+0xfc>
 8008b18:	2f02      	cmp	r7, #2
 8008b1a:	d1bf      	bne.n	8008a9c <xQueueGenericSend+0x7c>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8008b1c:	463a      	mov	r2, r7
 8008b1e:	4641      	mov	r1, r8
 8008b20:	4620      	mov	r0, r4
 8008b22:	f7ff fe06 	bl	8008732 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008b26:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8008b28:	b11b      	cbz	r3, 8008b32 <xQueueGenericSend+0x112>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8008b2a:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8008b2e:	f000 fed5 	bl	80098dc <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 8008b32:	b148      	cbz	r0, 8008b48 <xQueueGenericSend+0x128>
						queueYIELD_IF_USING_PREEMPTION();
 8008b34:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008b38:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008b3c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008b40:	f3bf 8f4f 	dsb	sy
 8008b44:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8008b48:	f7ff fcc4 	bl	80084d4 <vPortExitCritical>
				return pdPASS;
 8008b4c:	2001      	movs	r0, #1
}
 8008b4e:	b005      	add	sp, #20
 8008b50:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 8008b54:	f7ff fcbe 	bl	80084d4 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 8008b58:	4620      	mov	r0, r4
 8008b5a:	f7ff fe35 	bl	80087c8 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8008b5e:	f000 fdad 	bl	80096bc <xTaskResumeAll>
 8008b62:	e7d2      	b.n	8008b0a <xQueueGenericSend+0xea>
					portYIELD_WITHIN_API();
 8008b64:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008b68:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008b6c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008b70:	f3bf 8f4f 	dsb	sy
 8008b74:	f3bf 8f6f 	isb	sy
 8008b78:	e7c7      	b.n	8008b0a <xQueueGenericSend+0xea>
			prvUnlockQueue( pxQueue );
 8008b7a:	4620      	mov	r0, r4
 8008b7c:	f7ff fe24 	bl	80087c8 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8008b80:	f000 fd9c 	bl	80096bc <xTaskResumeAll>
 8008b84:	e78e      	b.n	8008aa4 <xQueueGenericSend+0x84>

08008b86 <xQueueGenericSendFromISR>:
{
 8008b86:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8008b8a:	4689      	mov	r9, r1
 8008b8c:	4690      	mov	r8, r2
 8008b8e:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 8008b90:	4604      	mov	r4, r0
 8008b92:	b940      	cbnz	r0, 8008ba6 <xQueueGenericSendFromISR+0x20>
 8008b94:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008b98:	f383 8811 	msr	BASEPRI, r3
 8008b9c:	f3bf 8f6f 	isb	sy
 8008ba0:	f3bf 8f4f 	dsb	sy
 8008ba4:	e7fe      	b.n	8008ba4 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8008ba6:	b951      	cbnz	r1, 8008bbe <xQueueGenericSendFromISR+0x38>
 8008ba8:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8008baa:	b143      	cbz	r3, 8008bbe <xQueueGenericSendFromISR+0x38>
 8008bac:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008bb0:	f383 8811 	msr	BASEPRI, r3
 8008bb4:	f3bf 8f6f 	isb	sy
 8008bb8:	f3bf 8f4f 	dsb	sy
 8008bbc:	e7fe      	b.n	8008bbc <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 8008bbe:	2f02      	cmp	r7, #2
 8008bc0:	d10b      	bne.n	8008bda <xQueueGenericSendFromISR+0x54>
 8008bc2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8008bc4:	2b01      	cmp	r3, #1
 8008bc6:	d008      	beq.n	8008bda <xQueueGenericSendFromISR+0x54>
 8008bc8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008bcc:	f383 8811 	msr	BASEPRI, r3
 8008bd0:	f3bf 8f6f 	isb	sy
 8008bd4:	f3bf 8f4f 	dsb	sy
 8008bd8:	e7fe      	b.n	8008bd8 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8008bda:	f7ff fd71 	bl	80086c0 <vPortValidateInterruptPriority>
	__asm volatile
 8008bde:	f3ef 8611 	mrs	r6, BASEPRI
 8008be2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008be6:	f383 8811 	msr	BASEPRI, r3
 8008bea:	f3bf 8f6f 	isb	sy
 8008bee:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8008bf2:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8008bf4:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8008bf6:	429a      	cmp	r2, r3
 8008bf8:	d301      	bcc.n	8008bfe <xQueueGenericSendFromISR+0x78>
 8008bfa:	2f02      	cmp	r7, #2
 8008bfc:	d122      	bne.n	8008c44 <xQueueGenericSendFromISR+0xbe>
			const int8_t cTxLock = pxQueue->cTxLock;
 8008bfe:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8008c02:	463a      	mov	r2, r7
			const int8_t cTxLock = pxQueue->cTxLock;
 8008c04:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8008c06:	4649      	mov	r1, r9
 8008c08:	4620      	mov	r0, r4
 8008c0a:	f7ff fd92 	bl	8008732 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 8008c0e:	1c6b      	adds	r3, r5, #1
 8008c10:	d113      	bne.n	8008c3a <xQueueGenericSendFromISR+0xb4>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008c12:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8008c14:	b90b      	cbnz	r3, 8008c1a <xQueueGenericSendFromISR+0x94>
			xReturn = pdPASS;
 8008c16:	2001      	movs	r0, #1
 8008c18:	e00b      	b.n	8008c32 <xQueueGenericSendFromISR+0xac>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8008c1a:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8008c1e:	f000 fe5d 	bl	80098dc <xTaskRemoveFromEventList>
 8008c22:	2800      	cmp	r0, #0
 8008c24:	d0f7      	beq.n	8008c16 <xQueueGenericSendFromISR+0x90>
							if( pxHigherPriorityTaskWoken != NULL )
 8008c26:	f1b8 0f00 	cmp.w	r8, #0
 8008c2a:	d0f4      	beq.n	8008c16 <xQueueGenericSendFromISR+0x90>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8008c2c:	2001      	movs	r0, #1
 8008c2e:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 8008c32:	f386 8811 	msr	BASEPRI, r6
}
 8008c36:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8008c3a:	3501      	adds	r5, #1
 8008c3c:	b26d      	sxtb	r5, r5
 8008c3e:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
 8008c42:	e7e8      	b.n	8008c16 <xQueueGenericSendFromISR+0x90>
			xReturn = errQUEUE_FULL;
 8008c44:	2000      	movs	r0, #0
 8008c46:	e7f4      	b.n	8008c32 <xQueueGenericSendFromISR+0xac>

08008c48 <xQueueGiveFromISR>:
{
 8008c48:	b570      	push	{r4, r5, r6, lr}
 8008c4a:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 8008c4c:	4604      	mov	r4, r0
 8008c4e:	b940      	cbnz	r0, 8008c62 <xQueueGiveFromISR+0x1a>
	__asm volatile
 8008c50:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008c54:	f383 8811 	msr	BASEPRI, r3
 8008c58:	f3bf 8f6f 	isb	sy
 8008c5c:	f3bf 8f4f 	dsb	sy
 8008c60:	e7fe      	b.n	8008c60 <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 8008c62:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8008c64:	b143      	cbz	r3, 8008c78 <xQueueGiveFromISR+0x30>
 8008c66:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008c6a:	f383 8811 	msr	BASEPRI, r3
 8008c6e:	f3bf 8f6f 	isb	sy
 8008c72:	f3bf 8f4f 	dsb	sy
 8008c76:	e7fe      	b.n	8008c76 <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 8008c78:	6803      	ldr	r3, [r0, #0]
 8008c7a:	b953      	cbnz	r3, 8008c92 <xQueueGiveFromISR+0x4a>
 8008c7c:	6883      	ldr	r3, [r0, #8]
 8008c7e:	b143      	cbz	r3, 8008c92 <xQueueGiveFromISR+0x4a>
 8008c80:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008c84:	f383 8811 	msr	BASEPRI, r3
 8008c88:	f3bf 8f6f 	isb	sy
 8008c8c:	f3bf 8f4f 	dsb	sy
 8008c90:	e7fe      	b.n	8008c90 <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8008c92:	f7ff fd15 	bl	80086c0 <vPortValidateInterruptPriority>
	__asm volatile
 8008c96:	f3ef 8611 	mrs	r6, BASEPRI
 8008c9a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008c9e:	f383 8811 	msr	BASEPRI, r3
 8008ca2:	f3bf 8f6f 	isb	sy
 8008ca6:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8008caa:	6ba2      	ldr	r2, [r4, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 8008cac:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8008cae:	4293      	cmp	r3, r2
 8008cb0:	d91c      	bls.n	8008cec <xQueueGiveFromISR+0xa4>
			const int8_t cTxLock = pxQueue->cTxLock;
 8008cb2:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8008cb6:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 8008cb8:	29ff      	cmp	r1, #255	; 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 8008cba:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8008cbc:	63a2      	str	r2, [r4, #56]	; 0x38
			if( cTxLock == queueUNLOCKED )
 8008cbe:	d110      	bne.n	8008ce2 <xQueueGiveFromISR+0x9a>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008cc0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8008cc2:	b90b      	cbnz	r3, 8008cc8 <xQueueGiveFromISR+0x80>
			xReturn = pdPASS;
 8008cc4:	2001      	movs	r0, #1
 8008cc6:	e009      	b.n	8008cdc <xQueueGiveFromISR+0x94>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8008cc8:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8008ccc:	f000 fe06 	bl	80098dc <xTaskRemoveFromEventList>
 8008cd0:	2800      	cmp	r0, #0
 8008cd2:	d0f7      	beq.n	8008cc4 <xQueueGiveFromISR+0x7c>
							if( pxHigherPriorityTaskWoken != NULL )
 8008cd4:	2d00      	cmp	r5, #0
 8008cd6:	d0f5      	beq.n	8008cc4 <xQueueGiveFromISR+0x7c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8008cd8:	2001      	movs	r0, #1
 8008cda:	6028      	str	r0, [r5, #0]
	__asm volatile
 8008cdc:	f386 8811 	msr	BASEPRI, r6
}
 8008ce0:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8008ce2:	3301      	adds	r3, #1
 8008ce4:	b25b      	sxtb	r3, r3
 8008ce6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8008cea:	e7eb      	b.n	8008cc4 <xQueueGiveFromISR+0x7c>
			xReturn = errQUEUE_FULL;
 8008cec:	2000      	movs	r0, #0
 8008cee:	e7f5      	b.n	8008cdc <xQueueGiveFromISR+0x94>

08008cf0 <xQueueReceive>:
{
 8008cf0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8008cf4:	460f      	mov	r7, r1
 8008cf6:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 8008cf8:	4604      	mov	r4, r0
 8008cfa:	b940      	cbnz	r0, 8008d0e <xQueueReceive+0x1e>
	__asm volatile
 8008cfc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008d00:	f383 8811 	msr	BASEPRI, r3
 8008d04:	f3bf 8f6f 	isb	sy
 8008d08:	f3bf 8f4f 	dsb	sy
 8008d0c:	e7fe      	b.n	8008d0c <xQueueReceive+0x1c>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8008d0e:	b951      	cbnz	r1, 8008d26 <xQueueReceive+0x36>
 8008d10:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8008d12:	b143      	cbz	r3, 8008d26 <xQueueReceive+0x36>
 8008d14:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008d18:	f383 8811 	msr	BASEPRI, r3
 8008d1c:	f3bf 8f6f 	isb	sy
 8008d20:	f3bf 8f4f 	dsb	sy
 8008d24:	e7fe      	b.n	8008d24 <xQueueReceive+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8008d26:	f000 fe6b 	bl	8009a00 <xTaskGetSchedulerState>
 8008d2a:	4606      	mov	r6, r0
 8008d2c:	b950      	cbnz	r0, 8008d44 <xQueueReceive+0x54>
 8008d2e:	9b01      	ldr	r3, [sp, #4]
 8008d30:	b14b      	cbz	r3, 8008d46 <xQueueReceive+0x56>
 8008d32:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008d36:	f383 8811 	msr	BASEPRI, r3
 8008d3a:	f3bf 8f6f 	isb	sy
 8008d3e:	f3bf 8f4f 	dsb	sy
 8008d42:	e7fe      	b.n	8008d42 <xQueueReceive+0x52>
 8008d44:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 8008d46:	f04f 0800 	mov.w	r8, #0
 8008d4a:	e03d      	b.n	8008dc8 <xQueueReceive+0xd8>
				if( xTicksToWait == ( TickType_t ) 0 )
 8008d4c:	9d01      	ldr	r5, [sp, #4]
 8008d4e:	b91d      	cbnz	r5, 8008d58 <xQueueReceive+0x68>
					taskEXIT_CRITICAL();
 8008d50:	f7ff fbc0 	bl	80084d4 <vPortExitCritical>
				return errQUEUE_EMPTY;
 8008d54:	2000      	movs	r0, #0
 8008d56:	e056      	b.n	8008e06 <xQueueReceive+0x116>
				else if( xEntryTimeSet == pdFALSE )
 8008d58:	b916      	cbnz	r6, 8008d60 <xQueueReceive+0x70>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8008d5a:	a802      	add	r0, sp, #8
 8008d5c:	f000 fe02 	bl	8009964 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8008d60:	f7ff fbb8 	bl	80084d4 <vPortExitCritical>
		vTaskSuspendAll();
 8008d64:	f000 fc06 	bl	8009574 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8008d68:	f7ff fb94 	bl	8008494 <vPortEnterCritical>
 8008d6c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8008d70:	2bff      	cmp	r3, #255	; 0xff
 8008d72:	bf08      	it	eq
 8008d74:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 8008d78:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8008d7c:	2bff      	cmp	r3, #255	; 0xff
 8008d7e:	bf08      	it	eq
 8008d80:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 8008d84:	f7ff fba6 	bl	80084d4 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8008d88:	a901      	add	r1, sp, #4
 8008d8a:	a802      	add	r0, sp, #8
 8008d8c:	f000 fdf6 	bl	800997c <xTaskCheckForTimeOut>
 8008d90:	2800      	cmp	r0, #0
 8008d92:	d141      	bne.n	8008e18 <xQueueReceive+0x128>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8008d94:	4620      	mov	r0, r4
 8008d96:	f7ff fcc1 	bl	800871c <prvIsQueueEmpty>
 8008d9a:	b3b8      	cbz	r0, 8008e0c <xQueueReceive+0x11c>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8008d9c:	9901      	ldr	r1, [sp, #4]
 8008d9e:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8008da2:	f000 fd63 	bl	800986c <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8008da6:	4620      	mov	r0, r4
 8008da8:	f7ff fd0e 	bl	80087c8 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8008dac:	f000 fc86 	bl	80096bc <xTaskResumeAll>
 8008db0:	b948      	cbnz	r0, 8008dc6 <xQueueReceive+0xd6>
					portYIELD_WITHIN_API();
 8008db2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008db6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008dba:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008dbe:	f3bf 8f4f 	dsb	sy
 8008dc2:	f3bf 8f6f 	isb	sy
 8008dc6:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 8008dc8:	f7ff fb64 	bl	8008494 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8008dcc:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8008dce:	2d00      	cmp	r5, #0
 8008dd0:	d0bc      	beq.n	8008d4c <xQueueReceive+0x5c>
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8008dd2:	4639      	mov	r1, r7
 8008dd4:	4620      	mov	r0, r4
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8008dd6:	3d01      	subs	r5, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8008dd8:	f7ff fce0 	bl	800879c <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8008ddc:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8008dde:	6923      	ldr	r3, [r4, #16]
 8008de0:	b173      	cbz	r3, 8008e00 <xQueueReceive+0x110>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008de2:	f104 0010 	add.w	r0, r4, #16
 8008de6:	f000 fd79 	bl	80098dc <xTaskRemoveFromEventList>
 8008dea:	b148      	cbz	r0, 8008e00 <xQueueReceive+0x110>
						queueYIELD_IF_USING_PREEMPTION();
 8008dec:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008df0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008df4:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008df8:	f3bf 8f4f 	dsb	sy
 8008dfc:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8008e00:	f7ff fb68 	bl	80084d4 <vPortExitCritical>
				return pdPASS;
 8008e04:	2001      	movs	r0, #1
}
 8008e06:	b004      	add	sp, #16
 8008e08:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
				prvUnlockQueue( pxQueue );
 8008e0c:	4620      	mov	r0, r4
 8008e0e:	f7ff fcdb 	bl	80087c8 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8008e12:	f000 fc53 	bl	80096bc <xTaskResumeAll>
 8008e16:	e7d6      	b.n	8008dc6 <xQueueReceive+0xd6>
			prvUnlockQueue( pxQueue );
 8008e18:	4620      	mov	r0, r4
 8008e1a:	f7ff fcd5 	bl	80087c8 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8008e1e:	f000 fc4d 	bl	80096bc <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8008e22:	4620      	mov	r0, r4
 8008e24:	f7ff fc7a 	bl	800871c <prvIsQueueEmpty>
 8008e28:	2800      	cmp	r0, #0
 8008e2a:	d0cc      	beq.n	8008dc6 <xQueueReceive+0xd6>
 8008e2c:	e792      	b.n	8008d54 <xQueueReceive+0x64>

08008e2e <xQueueSemaphoreTake>:
{
 8008e2e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008e30:	b085      	sub	sp, #20
	configASSERT( ( pxQueue ) );
 8008e32:	4604      	mov	r4, r0
{
 8008e34:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 8008e36:	b940      	cbnz	r0, 8008e4a <xQueueSemaphoreTake+0x1c>
 8008e38:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008e3c:	f383 8811 	msr	BASEPRI, r3
 8008e40:	f3bf 8f6f 	isb	sy
 8008e44:	f3bf 8f4f 	dsb	sy
 8008e48:	e7fe      	b.n	8008e48 <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 8008e4a:	6c05      	ldr	r5, [r0, #64]	; 0x40
 8008e4c:	b145      	cbz	r5, 8008e60 <xQueueSemaphoreTake+0x32>
 8008e4e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008e52:	f383 8811 	msr	BASEPRI, r3
 8008e56:	f3bf 8f6f 	isb	sy
 8008e5a:	f3bf 8f4f 	dsb	sy
 8008e5e:	e7fe      	b.n	8008e5e <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8008e60:	f000 fdce 	bl	8009a00 <xTaskGetSchedulerState>
 8008e64:	4606      	mov	r6, r0
 8008e66:	b950      	cbnz	r0, 8008e7e <xQueueSemaphoreTake+0x50>
 8008e68:	9b01      	ldr	r3, [sp, #4]
 8008e6a:	b15b      	cbz	r3, 8008e84 <xQueueSemaphoreTake+0x56>
 8008e6c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008e70:	f383 8811 	msr	BASEPRI, r3
 8008e74:	f3bf 8f6f 	isb	sy
 8008e78:	f3bf 8f4f 	dsb	sy
 8008e7c:	e7fe      	b.n	8008e7c <xQueueSemaphoreTake+0x4e>
 8008e7e:	462e      	mov	r6, r5
		prvLockQueue( pxQueue );
 8008e80:	2700      	movs	r7, #0
 8008e82:	e053      	b.n	8008f2c <xQueueSemaphoreTake+0xfe>
 8008e84:	4605      	mov	r5, r0
 8008e86:	e7fb      	b.n	8008e80 <xQueueSemaphoreTake+0x52>
				if( xTicksToWait == ( TickType_t ) 0 )
 8008e88:	9b01      	ldr	r3, [sp, #4]
 8008e8a:	b963      	cbnz	r3, 8008ea6 <xQueueSemaphoreTake+0x78>
						configASSERT( xInheritanceOccurred == pdFALSE );
 8008e8c:	b145      	cbz	r5, 8008ea0 <xQueueSemaphoreTake+0x72>
 8008e8e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008e92:	f383 8811 	msr	BASEPRI, r3
 8008e96:	f3bf 8f6f 	isb	sy
 8008e9a:	f3bf 8f4f 	dsb	sy
 8008e9e:	e7fe      	b.n	8008e9e <xQueueSemaphoreTake+0x70>
					taskEXIT_CRITICAL();
 8008ea0:	f7ff fb18 	bl	80084d4 <vPortExitCritical>
					return errQUEUE_EMPTY;
 8008ea4:	e062      	b.n	8008f6c <xQueueSemaphoreTake+0x13e>
				else if( xEntryTimeSet == pdFALSE )
 8008ea6:	b916      	cbnz	r6, 8008eae <xQueueSemaphoreTake+0x80>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8008ea8:	a802      	add	r0, sp, #8
 8008eaa:	f000 fd5b 	bl	8009964 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8008eae:	f7ff fb11 	bl	80084d4 <vPortExitCritical>
		vTaskSuspendAll();
 8008eb2:	f000 fb5f 	bl	8009574 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8008eb6:	f7ff faed 	bl	8008494 <vPortEnterCritical>
 8008eba:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8008ebe:	2bff      	cmp	r3, #255	; 0xff
 8008ec0:	bf08      	it	eq
 8008ec2:	f884 7044 	strbeq.w	r7, [r4, #68]	; 0x44
 8008ec6:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8008eca:	2bff      	cmp	r3, #255	; 0xff
 8008ecc:	bf08      	it	eq
 8008ece:	f884 7045 	strbeq.w	r7, [r4, #69]	; 0x45
 8008ed2:	f7ff faff 	bl	80084d4 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8008ed6:	a901      	add	r1, sp, #4
 8008ed8:	a802      	add	r0, sp, #8
 8008eda:	f000 fd4f 	bl	800997c <xTaskCheckForTimeOut>
 8008ede:	2800      	cmp	r0, #0
 8008ee0:	d14d      	bne.n	8008f7e <xQueueSemaphoreTake+0x150>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8008ee2:	4620      	mov	r0, r4
 8008ee4:	f7ff fc1a 	bl	800871c <prvIsQueueEmpty>
 8008ee8:	2800      	cmp	r0, #0
 8008eea:	d042      	beq.n	8008f72 <xQueueSemaphoreTake+0x144>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8008eec:	6823      	ldr	r3, [r4, #0]
 8008eee:	b93b      	cbnz	r3, 8008f00 <xQueueSemaphoreTake+0xd2>
						taskENTER_CRITICAL();
 8008ef0:	f7ff fad0 	bl	8008494 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 8008ef4:	68a0      	ldr	r0, [r4, #8]
 8008ef6:	f000 fd93 	bl	8009a20 <xTaskPriorityInherit>
 8008efa:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 8008efc:	f7ff faea 	bl	80084d4 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8008f00:	9901      	ldr	r1, [sp, #4]
 8008f02:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8008f06:	f000 fcb1 	bl	800986c <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8008f0a:	4620      	mov	r0, r4
 8008f0c:	f7ff fc5c 	bl	80087c8 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8008f10:	f000 fbd4 	bl	80096bc <xTaskResumeAll>
 8008f14:	b948      	cbnz	r0, 8008f2a <xQueueSemaphoreTake+0xfc>
					portYIELD_WITHIN_API();
 8008f16:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008f1a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008f1e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008f22:	f3bf 8f4f 	dsb	sy
 8008f26:	f3bf 8f6f 	isb	sy
 8008f2a:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 8008f2c:	f7ff fab2 	bl	8008494 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 8008f30:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 8008f32:	2b00      	cmp	r3, #0
 8008f34:	d0a8      	beq.n	8008e88 <xQueueSemaphoreTake+0x5a>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 8008f36:	3b01      	subs	r3, #1
 8008f38:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8008f3a:	6823      	ldr	r3, [r4, #0]
 8008f3c:	b913      	cbnz	r3, 8008f44 <xQueueSemaphoreTake+0x116>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 8008f3e:	f000 fe47 	bl	8009bd0 <pvTaskIncrementMutexHeldCount>
 8008f42:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8008f44:	6923      	ldr	r3, [r4, #16]
 8008f46:	b173      	cbz	r3, 8008f66 <xQueueSemaphoreTake+0x138>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008f48:	f104 0010 	add.w	r0, r4, #16
 8008f4c:	f000 fcc6 	bl	80098dc <xTaskRemoveFromEventList>
 8008f50:	b148      	cbz	r0, 8008f66 <xQueueSemaphoreTake+0x138>
						queueYIELD_IF_USING_PREEMPTION();
 8008f52:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008f56:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008f5a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008f5e:	f3bf 8f4f 	dsb	sy
 8008f62:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8008f66:	f7ff fab5 	bl	80084d4 <vPortExitCritical>
				return pdPASS;
 8008f6a:	2501      	movs	r5, #1
}
 8008f6c:	4628      	mov	r0, r5
 8008f6e:	b005      	add	sp, #20
 8008f70:	bdf0      	pop	{r4, r5, r6, r7, pc}
				prvUnlockQueue( pxQueue );
 8008f72:	4620      	mov	r0, r4
 8008f74:	f7ff fc28 	bl	80087c8 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8008f78:	f000 fba0 	bl	80096bc <xTaskResumeAll>
 8008f7c:	e7d5      	b.n	8008f2a <xQueueSemaphoreTake+0xfc>
			prvUnlockQueue( pxQueue );
 8008f7e:	4620      	mov	r0, r4
 8008f80:	f7ff fc22 	bl	80087c8 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8008f84:	f000 fb9a 	bl	80096bc <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8008f88:	4620      	mov	r0, r4
 8008f8a:	f7ff fbc7 	bl	800871c <prvIsQueueEmpty>
 8008f8e:	2800      	cmp	r0, #0
 8008f90:	d0cb      	beq.n	8008f2a <xQueueSemaphoreTake+0xfc>
					if( xInheritanceOccurred != pdFALSE )
 8008f92:	2d00      	cmp	r5, #0
 8008f94:	d0ea      	beq.n	8008f6c <xQueueSemaphoreTake+0x13e>
						taskENTER_CRITICAL();
 8008f96:	f7ff fa7d 	bl	8008494 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 8008f9a:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8008f9c:	b119      	cbz	r1, 8008fa6 <xQueueSemaphoreTake+0x178>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 8008f9e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8008fa0:	6819      	ldr	r1, [r3, #0]
 8008fa2:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 8008fa6:	68a0      	ldr	r0, [r4, #8]
 8008fa8:	f000 fdc0 	bl	8009b2c <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 8008fac:	2500      	movs	r5, #0
						taskEXIT_CRITICAL();
 8008fae:	f7ff fa91 	bl	80084d4 <vPortExitCritical>
 8008fb2:	e7db      	b.n	8008f6c <xQueueSemaphoreTake+0x13e>

08008fb4 <xQueueReceiveFromISR>:
{
 8008fb4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8008fb8:	4689      	mov	r9, r1
 8008fba:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 8008fbc:	4605      	mov	r5, r0
 8008fbe:	b940      	cbnz	r0, 8008fd2 <xQueueReceiveFromISR+0x1e>
 8008fc0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008fc4:	f383 8811 	msr	BASEPRI, r3
 8008fc8:	f3bf 8f6f 	isb	sy
 8008fcc:	f3bf 8f4f 	dsb	sy
 8008fd0:	e7fe      	b.n	8008fd0 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8008fd2:	b951      	cbnz	r1, 8008fea <xQueueReceiveFromISR+0x36>
 8008fd4:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8008fd6:	b143      	cbz	r3, 8008fea <xQueueReceiveFromISR+0x36>
 8008fd8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008fdc:	f383 8811 	msr	BASEPRI, r3
 8008fe0:	f3bf 8f6f 	isb	sy
 8008fe4:	f3bf 8f4f 	dsb	sy
 8008fe8:	e7fe      	b.n	8008fe8 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8008fea:	f7ff fb69 	bl	80086c0 <vPortValidateInterruptPriority>
	__asm volatile
 8008fee:	f3ef 8711 	mrs	r7, BASEPRI
 8008ff2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008ff6:	f383 8811 	msr	BASEPRI, r3
 8008ffa:	f3bf 8f6f 	isb	sy
 8008ffe:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8009002:	6bac      	ldr	r4, [r5, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8009004:	b31c      	cbz	r4, 800904e <xQueueReceiveFromISR+0x9a>
			const int8_t cRxLock = pxQueue->cRxLock;
 8009006:	f895 6044 	ldrb.w	r6, [r5, #68]	; 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 800900a:	4649      	mov	r1, r9
			const int8_t cRxLock = pxQueue->cRxLock;
 800900c:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 800900e:	4628      	mov	r0, r5
 8009010:	f7ff fbc4 	bl	800879c <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8009014:	3c01      	subs	r4, #1
			if( cRxLock == queueUNLOCKED )
 8009016:	1c73      	adds	r3, r6, #1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8009018:	63ac      	str	r4, [r5, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 800901a:	d113      	bne.n	8009044 <xQueueReceiveFromISR+0x90>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800901c:	692b      	ldr	r3, [r5, #16]
 800901e:	b90b      	cbnz	r3, 8009024 <xQueueReceiveFromISR+0x70>
			xReturn = pdPASS;
 8009020:	2001      	movs	r0, #1
 8009022:	e00b      	b.n	800903c <xQueueReceiveFromISR+0x88>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8009024:	f105 0010 	add.w	r0, r5, #16
 8009028:	f000 fc58 	bl	80098dc <xTaskRemoveFromEventList>
 800902c:	2800      	cmp	r0, #0
 800902e:	d0f7      	beq.n	8009020 <xQueueReceiveFromISR+0x6c>
						if( pxHigherPriorityTaskWoken != NULL )
 8009030:	f1b8 0f00 	cmp.w	r8, #0
 8009034:	d0f4      	beq.n	8009020 <xQueueReceiveFromISR+0x6c>
							*pxHigherPriorityTaskWoken = pdTRUE;
 8009036:	2001      	movs	r0, #1
 8009038:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 800903c:	f387 8811 	msr	BASEPRI, r7
}
 8009040:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 8009044:	3601      	adds	r6, #1
 8009046:	b276      	sxtb	r6, r6
 8009048:	f885 6044 	strb.w	r6, [r5, #68]	; 0x44
 800904c:	e7e8      	b.n	8009020 <xQueueReceiveFromISR+0x6c>
			xReturn = pdFAIL;
 800904e:	4620      	mov	r0, r4
 8009050:	e7f4      	b.n	800903c <xQueueReceiveFromISR+0x88>
	...

08009054 <vQueueAddToRegistry>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
	{
 8009054:	b510      	push	{r4, lr}

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 8009056:	4a07      	ldr	r2, [pc, #28]	; (8009074 <vQueueAddToRegistry+0x20>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8009058:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800905a:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
 800905e:	b92c      	cbnz	r4, 800906c <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 8009060:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 8009064:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 8009068:	6058      	str	r0, [r3, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 800906a:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800906c:	3301      	adds	r3, #1
 800906e:	2b08      	cmp	r3, #8
 8009070:	d1f3      	bne.n	800905a <vQueueAddToRegistry+0x6>
 8009072:	e7fa      	b.n	800906a <vQueueAddToRegistry+0x16>
 8009074:	20014ce8 	.word	0x20014ce8

08009078 <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueUnregisterQueue( QueueHandle_t xQueue )
	{
 8009078:	b510      	push	{r4, lr}

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800907a:	4a08      	ldr	r2, [pc, #32]	; (800909c <vQueueUnregisterQueue+0x24>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800907c:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800907e:	eb02 01c3 	add.w	r1, r2, r3, lsl #3
 8009082:	684c      	ldr	r4, [r1, #4]
 8009084:	4284      	cmp	r4, r0
 8009086:	d104      	bne.n	8009092 <vQueueUnregisterQueue+0x1a>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 8009088:	2000      	movs	r0, #0
 800908a:	f842 0033 	str.w	r0, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 800908e:	6048      	str	r0, [r1, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 8009090:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8009092:	3301      	adds	r3, #1
 8009094:	2b08      	cmp	r3, #8
 8009096:	d1f2      	bne.n	800907e <vQueueUnregisterQueue+0x6>
 8009098:	e7fa      	b.n	8009090 <vQueueUnregisterQueue+0x18>
 800909a:	bf00      	nop
 800909c:	20014ce8 	.word	0x20014ce8

080090a0 <vQueueDelete>:
{
 80090a0:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 80090a2:	4604      	mov	r4, r0
 80090a4:	b940      	cbnz	r0, 80090b8 <vQueueDelete+0x18>
	__asm volatile
 80090a6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80090aa:	f383 8811 	msr	BASEPRI, r3
 80090ae:	f3bf 8f6f 	isb	sy
 80090b2:	f3bf 8f4f 	dsb	sy
 80090b6:	e7fe      	b.n	80090b6 <vQueueDelete+0x16>
		vQueueUnregisterQueue( pxQueue );
 80090b8:	f7ff ffde 	bl	8009078 <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 80090bc:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 80090c0:	b923      	cbnz	r3, 80090cc <vQueueDelete+0x2c>
			vPortFree( pxQueue );
 80090c2:	4620      	mov	r0, r4
}
 80090c4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 80090c8:	f7ff b8fe 	b.w	80082c8 <vPortFree>
}
 80090cc:	bd10      	pop	{r4, pc}

080090ce <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 80090ce:	b570      	push	{r4, r5, r6, lr}
 80090d0:	4604      	mov	r4, r0
 80090d2:	460d      	mov	r5, r1
 80090d4:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 80090d6:	f7ff f9dd 	bl	8008494 <vPortEnterCritical>
 80090da:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 80090de:	2bff      	cmp	r3, #255	; 0xff
 80090e0:	bf04      	itt	eq
 80090e2:	2300      	moveq	r3, #0
 80090e4:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 80090e8:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 80090ec:	2bff      	cmp	r3, #255	; 0xff
 80090ee:	bf04      	itt	eq
 80090f0:	2300      	moveq	r3, #0
 80090f2:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 80090f6:	f7ff f9ed 	bl	80084d4 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 80090fa:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80090fc:	b92b      	cbnz	r3, 800910a <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 80090fe:	4632      	mov	r2, r6
 8009100:	4629      	mov	r1, r5
 8009102:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8009106:	f000 fbcb 	bl	80098a0 <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 800910a:	4620      	mov	r0, r4
	}
 800910c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 8009110:	f7ff bb5a 	b.w	80087c8 <prvUnlockQueue>

08009114 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 8009114:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009118:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 800911a:	f7ff f9bb 	bl	8008494 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 800911e:	4b30      	ldr	r3, [pc, #192]	; (80091e0 <prvAddNewTaskToReadyList+0xcc>)
		if( pxCurrentTCB == NULL )
 8009120:	4e30      	ldr	r6, [pc, #192]	; (80091e4 <prvAddNewTaskToReadyList+0xd0>)
		uxCurrentNumberOfTasks++;
 8009122:	681a      	ldr	r2, [r3, #0]
 8009124:	4f30      	ldr	r7, [pc, #192]	; (80091e8 <prvAddNewTaskToReadyList+0xd4>)
 8009126:	3201      	adds	r2, #1
 8009128:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 800912a:	6835      	ldr	r5, [r6, #0]
 800912c:	2d00      	cmp	r5, #0
 800912e:	d14b      	bne.n	80091c8 <prvAddNewTaskToReadyList+0xb4>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 8009130:	6034      	str	r4, [r6, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 8009132:	681b      	ldr	r3, [r3, #0]
 8009134:	2b01      	cmp	r3, #1
 8009136:	d11f      	bne.n	8009178 <prvAddNewTaskToReadyList+0x64>
 8009138:	46b8      	mov	r8, r7
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800913a:	4640      	mov	r0, r8
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800913c:	3501      	adds	r5, #1
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800913e:	f7ff f8fb 	bl	8008338 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8009142:	2d38      	cmp	r5, #56	; 0x38
 8009144:	f108 0814 	add.w	r8, r8, #20
 8009148:	d1f7      	bne.n	800913a <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 800914a:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8009210 <prvAddNewTaskToReadyList+0xfc>
	vListInitialise( &xDelayedTaskList2 );
 800914e:	4d27      	ldr	r5, [pc, #156]	; (80091ec <prvAddNewTaskToReadyList+0xd8>)
	vListInitialise( &xDelayedTaskList1 );
 8009150:	4640      	mov	r0, r8
 8009152:	f7ff f8f1 	bl	8008338 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 8009156:	4628      	mov	r0, r5
 8009158:	f7ff f8ee 	bl	8008338 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 800915c:	4824      	ldr	r0, [pc, #144]	; (80091f0 <prvAddNewTaskToReadyList+0xdc>)
 800915e:	f7ff f8eb 	bl	8008338 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 8009162:	4824      	ldr	r0, [pc, #144]	; (80091f4 <prvAddNewTaskToReadyList+0xe0>)
 8009164:	f7ff f8e8 	bl	8008338 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 8009168:	4823      	ldr	r0, [pc, #140]	; (80091f8 <prvAddNewTaskToReadyList+0xe4>)
 800916a:	f7ff f8e5 	bl	8008338 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 800916e:	4b23      	ldr	r3, [pc, #140]	; (80091fc <prvAddNewTaskToReadyList+0xe8>)
 8009170:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 8009174:	4b22      	ldr	r3, [pc, #136]	; (8009200 <prvAddNewTaskToReadyList+0xec>)
 8009176:	601d      	str	r5, [r3, #0]
		uxTaskNumber++;
 8009178:	4a22      	ldr	r2, [pc, #136]	; (8009204 <prvAddNewTaskToReadyList+0xf0>)
 800917a:	6813      	ldr	r3, [r2, #0]
 800917c:	3301      	adds	r3, #1
 800917e:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 8009180:	4a21      	ldr	r2, [pc, #132]	; (8009208 <prvAddNewTaskToReadyList+0xf4>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 8009182:	6463      	str	r3, [r4, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 8009184:	6811      	ldr	r1, [r2, #0]
 8009186:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8009188:	2014      	movs	r0, #20
 800918a:	428b      	cmp	r3, r1
 800918c:	fb00 7003 	mla	r0, r0, r3, r7
 8009190:	f104 0104 	add.w	r1, r4, #4
 8009194:	bf88      	it	hi
 8009196:	6013      	strhi	r3, [r2, #0]
 8009198:	f7ff f8dc 	bl	8008354 <vListInsertEnd>
	taskEXIT_CRITICAL();
 800919c:	f7ff f99a 	bl	80084d4 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 80091a0:	4b1a      	ldr	r3, [pc, #104]	; (800920c <prvAddNewTaskToReadyList+0xf8>)
 80091a2:	681b      	ldr	r3, [r3, #0]
 80091a4:	b173      	cbz	r3, 80091c4 <prvAddNewTaskToReadyList+0xb0>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 80091a6:	6833      	ldr	r3, [r6, #0]
 80091a8:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80091aa:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80091ac:	429a      	cmp	r2, r3
 80091ae:	d209      	bcs.n	80091c4 <prvAddNewTaskToReadyList+0xb0>
			taskYIELD_IF_USING_PREEMPTION();
 80091b0:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80091b4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80091b8:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80091bc:	f3bf 8f4f 	dsb	sy
 80091c0:	f3bf 8f6f 	isb	sy
}
 80091c4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 80091c8:	4b10      	ldr	r3, [pc, #64]	; (800920c <prvAddNewTaskToReadyList+0xf8>)
 80091ca:	681b      	ldr	r3, [r3, #0]
 80091cc:	2b00      	cmp	r3, #0
 80091ce:	d1d3      	bne.n	8009178 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 80091d0:	6833      	ldr	r3, [r6, #0]
 80091d2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80091d4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80091d6:	429a      	cmp	r2, r3
					pxCurrentTCB = pxNewTCB;
 80091d8:	bf98      	it	ls
 80091da:	6034      	strls	r4, [r6, #0]
 80091dc:	e7cc      	b.n	8009178 <prvAddNewTaskToReadyList+0x64>
 80091de:	bf00      	nop
 80091e0:	20015194 	.word	0x20015194
 80091e4:	20014d28 	.word	0x20014d28
 80091e8:	20014d34 	.word	0x20014d34
 80091ec:	200151c0 	.word	0x200151c0
 80091f0:	200151dc 	.word	0x200151dc
 80091f4:	20015208 	.word	0x20015208
 80091f8:	200151f4 	.word	0x200151f4
 80091fc:	20014d2c 	.word	0x20014d2c
 8009200:	20014d30 	.word	0x20014d30
 8009204:	200151a4 	.word	0x200151a4
 8009208:	200151a8 	.word	0x200151a8
 800920c:	200151f0 	.word	0x200151f0
 8009210:	200151ac 	.word	0x200151ac

08009214 <prvAddCurrentTaskToDelayedList>:
	}
#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 8009214:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 8009216:	4b15      	ldr	r3, [pc, #84]	; (800926c <prvAddCurrentTaskToDelayedList+0x58>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009218:	4e15      	ldr	r6, [pc, #84]	; (8009270 <prvAddCurrentTaskToDelayedList+0x5c>)
const TickType_t xConstTickCount = xTickCount;
 800921a:	681d      	ldr	r5, [r3, #0]
{
 800921c:	4604      	mov	r4, r0
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800921e:	6830      	ldr	r0, [r6, #0]
 8009220:	3004      	adds	r0, #4
{
 8009222:	460f      	mov	r7, r1
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009224:	f7ff f8b9 	bl	800839a <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 8009228:	1c63      	adds	r3, r4, #1
 800922a:	d107      	bne.n	800923c <prvAddCurrentTaskToDelayedList+0x28>
 800922c:	b137      	cbz	r7, 800923c <prvAddCurrentTaskToDelayedList+0x28>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800922e:	6831      	ldr	r1, [r6, #0]
 8009230:	4810      	ldr	r0, [pc, #64]	; (8009274 <prvAddCurrentTaskToDelayedList+0x60>)

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 8009232:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009236:	3104      	adds	r1, #4
 8009238:	f7ff b88c 	b.w	8008354 <vListInsertEnd>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800923c:	6833      	ldr	r3, [r6, #0]
 800923e:	192c      	adds	r4, r5, r4
 8009240:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 8009242:	d307      	bcc.n	8009254 <prvAddCurrentTaskToDelayedList+0x40>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009244:	4b0c      	ldr	r3, [pc, #48]	; (8009278 <prvAddCurrentTaskToDelayedList+0x64>)
 8009246:	6818      	ldr	r0, [r3, #0]
 8009248:	6831      	ldr	r1, [r6, #0]
}
 800924a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800924e:	3104      	adds	r1, #4
 8009250:	f7ff b88c 	b.w	800836c <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009254:	4b09      	ldr	r3, [pc, #36]	; (800927c <prvAddCurrentTaskToDelayedList+0x68>)
 8009256:	6818      	ldr	r0, [r3, #0]
 8009258:	6831      	ldr	r1, [r6, #0]
 800925a:	3104      	adds	r1, #4
 800925c:	f7ff f886 	bl	800836c <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 8009260:	4b07      	ldr	r3, [pc, #28]	; (8009280 <prvAddCurrentTaskToDelayedList+0x6c>)
 8009262:	681a      	ldr	r2, [r3, #0]
 8009264:	42a2      	cmp	r2, r4
					xNextTaskUnblockTime = xTimeToWake;
 8009266:	bf88      	it	hi
 8009268:	601c      	strhi	r4, [r3, #0]
}
 800926a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800926c:	2001521c 	.word	0x2001521c
 8009270:	20014d28 	.word	0x20014d28
 8009274:	200151f4 	.word	0x200151f4
 8009278:	20014d30 	.word	0x20014d30
 800927c:	20014d2c 	.word	0x20014d2c
 8009280:	200151d4 	.word	0x200151d4

08009284 <prvResetNextTaskUnblockTime>:
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8009284:	4a06      	ldr	r2, [pc, #24]	; (80092a0 <prvResetNextTaskUnblockTime+0x1c>)
 8009286:	6813      	ldr	r3, [r2, #0]
 8009288:	6819      	ldr	r1, [r3, #0]
 800928a:	4b06      	ldr	r3, [pc, #24]	; (80092a4 <prvResetNextTaskUnblockTime+0x20>)
 800928c:	b919      	cbnz	r1, 8009296 <prvResetNextTaskUnblockTime+0x12>
		xNextTaskUnblockTime = portMAX_DELAY;
 800928e:	f04f 32ff 	mov.w	r2, #4294967295
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8009292:	601a      	str	r2, [r3, #0]
}
 8009294:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009296:	6812      	ldr	r2, [r2, #0]
 8009298:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800929a:	68d2      	ldr	r2, [r2, #12]
 800929c:	6852      	ldr	r2, [r2, #4]
 800929e:	e7f8      	b.n	8009292 <prvResetNextTaskUnblockTime+0xe>
 80092a0:	20014d2c 	.word	0x20014d2c
 80092a4:	200151d4 	.word	0x200151d4

080092a8 <prvDeleteTCB>:
	{
 80092a8:	b510      	push	{r4, lr}
 80092aa:	4604      	mov	r4, r0
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
 80092ac:	3058      	adds	r0, #88	; 0x58
 80092ae:	f017 faa1 	bl	80207f4 <_reclaim_reent>
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 80092b2:	f894 30bd 	ldrb.w	r3, [r4, #189]	; 0xbd
 80092b6:	b93b      	cbnz	r3, 80092c8 <prvDeleteTCB+0x20>
				vPortFree( pxTCB->pxStack );
 80092b8:	6b20      	ldr	r0, [r4, #48]	; 0x30
 80092ba:	f7ff f805 	bl	80082c8 <vPortFree>
				vPortFree( pxTCB );
 80092be:	4620      	mov	r0, r4
	}
 80092c0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 80092c4:	f7ff b800 	b.w	80082c8 <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 80092c8:	2b01      	cmp	r3, #1
 80092ca:	d0f8      	beq.n	80092be <prvDeleteTCB+0x16>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 80092cc:	2b02      	cmp	r3, #2
 80092ce:	d008      	beq.n	80092e2 <prvDeleteTCB+0x3a>
 80092d0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80092d4:	f383 8811 	msr	BASEPRI, r3
 80092d8:	f3bf 8f6f 	isb	sy
 80092dc:	f3bf 8f4f 	dsb	sy
 80092e0:	e7fe      	b.n	80092e0 <prvDeleteTCB+0x38>
	}
 80092e2:	bd10      	pop	{r4, pc}

080092e4 <prvIdleTask>:
{
 80092e4:	b580      	push	{r7, lr}
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 80092e6:	4c13      	ldr	r4, [pc, #76]	; (8009334 <prvIdleTask+0x50>)
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80092e8:	4f13      	ldr	r7, [pc, #76]	; (8009338 <prvIdleTask+0x54>)
				--uxCurrentNumberOfTasks;
 80092ea:	4d14      	ldr	r5, [pc, #80]	; (800933c <prvIdleTask+0x58>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 80092ec:	6823      	ldr	r3, [r4, #0]
 80092ee:	b973      	cbnz	r3, 800930e <prvIdleTask+0x2a>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 80092f0:	4b13      	ldr	r3, [pc, #76]	; (8009340 <prvIdleTask+0x5c>)
 80092f2:	681b      	ldr	r3, [r3, #0]
 80092f4:	2b01      	cmp	r3, #1
 80092f6:	d9f8      	bls.n	80092ea <prvIdleTask+0x6>
				taskYIELD();
 80092f8:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80092fc:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009300:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009304:	f3bf 8f4f 	dsb	sy
 8009308:	f3bf 8f6f 	isb	sy
 800930c:	e7ed      	b.n	80092ea <prvIdleTask+0x6>
			taskENTER_CRITICAL();
 800930e:	f7ff f8c1 	bl	8008494 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009312:	68fb      	ldr	r3, [r7, #12]
 8009314:	68de      	ldr	r6, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8009316:	1d30      	adds	r0, r6, #4
 8009318:	f7ff f83f 	bl	800839a <uxListRemove>
				--uxCurrentNumberOfTasks;
 800931c:	682b      	ldr	r3, [r5, #0]
 800931e:	3b01      	subs	r3, #1
 8009320:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 8009322:	6823      	ldr	r3, [r4, #0]
 8009324:	3b01      	subs	r3, #1
 8009326:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 8009328:	f7ff f8d4 	bl	80084d4 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 800932c:	4630      	mov	r0, r6
 800932e:	f7ff ffbb 	bl	80092a8 <prvDeleteTCB>
 8009332:	e7db      	b.n	80092ec <prvIdleTask+0x8>
 8009334:	20015198 	.word	0x20015198
 8009338:	20015208 	.word	0x20015208
 800933c:	20015194 	.word	0x20015194
 8009340:	20014d34 	.word	0x20014d34

08009344 <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8009344:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009348:	e9dd 8409 	ldrd	r8, r4, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800934c:	ea4f 0982 	mov.w	r9, r2, lsl #2
 8009350:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8009352:	4606      	mov	r6, r0
 8009354:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8009356:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8009358:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800935a:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800935c:	f016 fe66 	bl	802002c <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 8009360:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8009362:	f1a9 0904 	sub.w	r9, r9, #4
 8009366:	4491      	add	r9, r2
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 8009368:	f029 0907 	bic.w	r9, r9, #7
	if( pcName != NULL )
 800936c:	2d00      	cmp	r5, #0
 800936e:	d042      	beq.n	80093f6 <prvInitialiseNewTask.constprop.0+0xb2>
 8009370:	1e6b      	subs	r3, r5, #1
 8009372:	f104 0234 	add.w	r2, r4, #52	; 0x34
 8009376:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8009378:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800937c:	f802 0b01 	strb.w	r0, [r2], #1
			if( pcName[ x ] == ( char ) 0x00 )
 8009380:	b108      	cbz	r0, 8009386 <prvInitialiseNewTask.constprop.0+0x42>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 8009382:	42ab      	cmp	r3, r5
 8009384:	d1f8      	bne.n	8009378 <prvInitialiseNewTask.constprop.0+0x34>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 8009386:	2300      	movs	r3, #0
 8009388:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 800938c:	9d08      	ldr	r5, [sp, #32]
 800938e:	2d37      	cmp	r5, #55	; 0x37
 8009390:	bf28      	it	cs
 8009392:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 8009394:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 8009398:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 800939a:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800939c:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 800939e:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 80093a2:	f7fe ffd4 	bl	800834e <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80093a6:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 80093aa:	f104 0018 	add.w	r0, r4, #24
 80093ae:	f7fe ffce 	bl	800834e <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 80093b2:	f8c4 a0b8 	str.w	sl, [r4, #184]	; 0xb8
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 80093b6:	2260      	movs	r2, #96	; 0x60
 80093b8:	4651      	mov	r1, sl
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 80093ba:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80093bc:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 80093be:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 80093c0:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 80093c4:	f884 a0bc 	strb.w	sl, [r4, #188]	; 0xbc
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 80093c8:	f104 0058 	add.w	r0, r4, #88	; 0x58
 80093cc:	f016 fe2e 	bl	802002c <memset>
 80093d0:	4b0a      	ldr	r3, [pc, #40]	; (80093fc <prvInitialiseNewTask.constprop.0+0xb8>)
 80093d2:	65e3      	str	r3, [r4, #92]	; 0x5c
 80093d4:	4b0a      	ldr	r3, [pc, #40]	; (8009400 <prvInitialiseNewTask.constprop.0+0xbc>)
 80093d6:	6623      	str	r3, [r4, #96]	; 0x60
 80093d8:	4b0a      	ldr	r3, [pc, #40]	; (8009404 <prvInitialiseNewTask.constprop.0+0xc0>)
 80093da:	6663      	str	r3, [r4, #100]	; 0x64
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 80093dc:	463a      	mov	r2, r7
 80093de:	4631      	mov	r1, r6
 80093e0:	4648      	mov	r0, r9
 80093e2:	f7ff f829 	bl	8008438 <pxPortInitialiseStack>
 80093e6:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 80093e8:	f1b8 0f00 	cmp.w	r8, #0
 80093ec:	d001      	beq.n	80093f2 <prvInitialiseNewTask.constprop.0+0xae>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 80093ee:	f8c8 4000 	str.w	r4, [r8]
}
 80093f2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 80093f6:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 80093fa:	e7c7      	b.n	800938c <prvInitialiseNewTask.constprop.0+0x48>
 80093fc:	08023b30 	.word	0x08023b30
 8009400:	08023b50 	.word	0x08023b50
 8009404:	08023b10 	.word	0x08023b10

08009408 <xTaskCreateStatic>:
	{
 8009408:	b570      	push	{r4, r5, r6, lr}
 800940a:	b086      	sub	sp, #24
 800940c:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 8009410:	b945      	cbnz	r5, 8009424 <xTaskCreateStatic+0x1c>
 8009412:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009416:	f383 8811 	msr	BASEPRI, r3
 800941a:	f3bf 8f6f 	isb	sy
 800941e:	f3bf 8f4f 	dsb	sy
 8009422:	e7fe      	b.n	8009422 <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 8009424:	b944      	cbnz	r4, 8009438 <xTaskCreateStatic+0x30>
 8009426:	f04f 0350 	mov.w	r3, #80	; 0x50
 800942a:	f383 8811 	msr	BASEPRI, r3
 800942e:	f3bf 8f6f 	isb	sy
 8009432:	f3bf 8f4f 	dsb	sy
 8009436:	e7fe      	b.n	8009436 <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 8009438:	26c0      	movs	r6, #192	; 0xc0
 800943a:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 800943c:	9e05      	ldr	r6, [sp, #20]
 800943e:	2ec0      	cmp	r6, #192	; 0xc0
 8009440:	d008      	beq.n	8009454 <xTaskCreateStatic+0x4c>
 8009442:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009446:	f383 8811 	msr	BASEPRI, r3
 800944a:	f3bf 8f6f 	isb	sy
 800944e:	f3bf 8f4f 	dsb	sy
 8009452:	e7fe      	b.n	8009452 <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 8009454:	6325      	str	r5, [r4, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 8009456:	2502      	movs	r5, #2
 8009458:	f884 50bd 	strb.w	r5, [r4, #189]	; 0xbd
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800945c:	ad04      	add	r5, sp, #16
 800945e:	9501      	str	r5, [sp, #4]
 8009460:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8009462:	9402      	str	r4, [sp, #8]
 8009464:	9500      	str	r5, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 8009466:	9e05      	ldr	r6, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8009468:	f7ff ff6c 	bl	8009344 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800946c:	4620      	mov	r0, r4
 800946e:	f7ff fe51 	bl	8009114 <prvAddNewTaskToReadyList>
	}
 8009472:	9804      	ldr	r0, [sp, #16]
 8009474:	b006      	add	sp, #24
 8009476:	bd70      	pop	{r4, r5, r6, pc}

08009478 <xTaskCreate>:
	{
 8009478:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800947c:	4607      	mov	r7, r0
 800947e:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8009480:	0090      	lsls	r0, r2, #2
	{
 8009482:	4688      	mov	r8, r1
 8009484:	4616      	mov	r6, r2
 8009486:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8009488:	f7fe fe8c 	bl	80081a4 <pvPortMalloc>
			if( pxStack != NULL )
 800948c:	4605      	mov	r5, r0
 800948e:	b1e8      	cbz	r0, 80094cc <xTaskCreate+0x54>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 8009490:	20c0      	movs	r0, #192	; 0xc0
 8009492:	f7fe fe87 	bl	80081a4 <pvPortMalloc>
				if( pxNewTCB != NULL )
 8009496:	4604      	mov	r4, r0
 8009498:	b1a8      	cbz	r0, 80094c6 <xTaskCreate+0x4e>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 800949a:	2300      	movs	r3, #0
 800949c:	f880 30bd 	strb.w	r3, [r0, #189]	; 0xbd
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 80094a0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
					pxNewTCB->pxStack = pxStack;
 80094a2:	6305      	str	r5, [r0, #48]	; 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 80094a4:	9301      	str	r3, [sp, #4]
 80094a6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80094a8:	9002      	str	r0, [sp, #8]
 80094aa:	9300      	str	r3, [sp, #0]
 80094ac:	4632      	mov	r2, r6
 80094ae:	464b      	mov	r3, r9
 80094b0:	4641      	mov	r1, r8
 80094b2:	4638      	mov	r0, r7
 80094b4:	f7ff ff46 	bl	8009344 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 80094b8:	4620      	mov	r0, r4
 80094ba:	f7ff fe2b 	bl	8009114 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 80094be:	2001      	movs	r0, #1
	}
 80094c0:	b005      	add	sp, #20
 80094c2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 80094c6:	4628      	mov	r0, r5
 80094c8:	f7fe fefe 	bl	80082c8 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 80094cc:	f04f 30ff 	mov.w	r0, #4294967295
		return xReturn;
 80094d0:	e7f6      	b.n	80094c0 <xTaskCreate+0x48>
	...

080094d4 <vTaskStartScheduler>:
{
 80094d4:	b510      	push	{r4, lr}
 80094d6:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 80094d8:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 80094da:	aa07      	add	r2, sp, #28
 80094dc:	a906      	add	r1, sp, #24
 80094de:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 80094e0:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 80094e4:	f7fe fe22 	bl	800812c <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 80094e8:	9b05      	ldr	r3, [sp, #20]
 80094ea:	9302      	str	r3, [sp, #8]
 80094ec:	9b06      	ldr	r3, [sp, #24]
 80094ee:	9a07      	ldr	r2, [sp, #28]
 80094f0:	4919      	ldr	r1, [pc, #100]	; (8009558 <vTaskStartScheduler+0x84>)
 80094f2:	481a      	ldr	r0, [pc, #104]	; (800955c <vTaskStartScheduler+0x88>)
 80094f4:	e9cd 4300 	strd	r4, r3, [sp]
 80094f8:	4623      	mov	r3, r4
 80094fa:	f7ff ff85 	bl	8009408 <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 80094fe:	b340      	cbz	r0, 8009552 <vTaskStartScheduler+0x7e>
			xReturn = xTimerCreateTimerTask();
 8009500:	f000 fbc4 	bl	8009c8c <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 8009504:	2801      	cmp	r0, #1
 8009506:	d119      	bne.n	800953c <vTaskStartScheduler+0x68>
 8009508:	f04f 0350 	mov.w	r3, #80	; 0x50
 800950c:	f383 8811 	msr	BASEPRI, r3
 8009510:	f3bf 8f6f 	isb	sy
 8009514:	f3bf 8f4f 	dsb	sy
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 8009518:	4b11      	ldr	r3, [pc, #68]	; (8009560 <vTaskStartScheduler+0x8c>)
 800951a:	4a12      	ldr	r2, [pc, #72]	; (8009564 <vTaskStartScheduler+0x90>)
 800951c:	681b      	ldr	r3, [r3, #0]
 800951e:	3358      	adds	r3, #88	; 0x58
 8009520:	6013      	str	r3, [r2, #0]
		xNextTaskUnblockTime = portMAX_DELAY;
 8009522:	4b11      	ldr	r3, [pc, #68]	; (8009568 <vTaskStartScheduler+0x94>)
 8009524:	f04f 32ff 	mov.w	r2, #4294967295
 8009528:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 800952a:	4b10      	ldr	r3, [pc, #64]	; (800956c <vTaskStartScheduler+0x98>)
 800952c:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800952e:	4b10      	ldr	r3, [pc, #64]	; (8009570 <vTaskStartScheduler+0x9c>)
 8009530:	601c      	str	r4, [r3, #0]
}
 8009532:	b008      	add	sp, #32
 8009534:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		if( xPortStartScheduler() != pdFALSE )
 8009538:	f7ff b83c 	b.w	80085b4 <xPortStartScheduler>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 800953c:	3001      	adds	r0, #1
 800953e:	d108      	bne.n	8009552 <vTaskStartScheduler+0x7e>
 8009540:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009544:	f383 8811 	msr	BASEPRI, r3
 8009548:	f3bf 8f6f 	isb	sy
 800954c:	f3bf 8f4f 	dsb	sy
 8009550:	e7fe      	b.n	8009550 <vTaskStartScheduler+0x7c>
}
 8009552:	b008      	add	sp, #32
 8009554:	bd10      	pop	{r4, pc}
 8009556:	bf00      	nop
 8009558:	08022bec 	.word	0x08022bec
 800955c:	080092e5 	.word	0x080092e5
 8009560:	20014d28 	.word	0x20014d28
 8009564:	20000100 	.word	0x20000100
 8009568:	200151d4 	.word	0x200151d4
 800956c:	200151f0 	.word	0x200151f0
 8009570:	2001521c 	.word	0x2001521c

08009574 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 8009574:	4a02      	ldr	r2, [pc, #8]	; (8009580 <vTaskSuspendAll+0xc>)
 8009576:	6813      	ldr	r3, [r2, #0]
 8009578:	3301      	adds	r3, #1
 800957a:	6013      	str	r3, [r2, #0]
}
 800957c:	4770      	bx	lr
 800957e:	bf00      	nop
 8009580:	200151a0 	.word	0x200151a0

08009584 <xTaskGetTickCount>:
		xTicks = xTickCount;
 8009584:	4b01      	ldr	r3, [pc, #4]	; (800958c <xTaskGetTickCount+0x8>)
 8009586:	6818      	ldr	r0, [r3, #0]
}
 8009588:	4770      	bx	lr
 800958a:	bf00      	nop
 800958c:	2001521c 	.word	0x2001521c

08009590 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009590:	4b3f      	ldr	r3, [pc, #252]	; (8009690 <xTaskIncrementTick+0x100>)
 8009592:	681b      	ldr	r3, [r3, #0]
{
 8009594:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009598:	2b00      	cmp	r3, #0
 800959a:	d173      	bne.n	8009684 <xTaskIncrementTick+0xf4>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 800959c:	4b3d      	ldr	r3, [pc, #244]	; (8009694 <xTaskIncrementTick+0x104>)
 800959e:	681d      	ldr	r5, [r3, #0]
 80095a0:	3501      	adds	r5, #1
		xTickCount = xConstTickCount;
 80095a2:	601d      	str	r5, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 80095a4:	b9bd      	cbnz	r5, 80095d6 <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 80095a6:	4b3c      	ldr	r3, [pc, #240]	; (8009698 <xTaskIncrementTick+0x108>)
 80095a8:	681a      	ldr	r2, [r3, #0]
 80095aa:	6812      	ldr	r2, [r2, #0]
 80095ac:	b142      	cbz	r2, 80095c0 <xTaskIncrementTick+0x30>
 80095ae:	f04f 0350 	mov.w	r3, #80	; 0x50
 80095b2:	f383 8811 	msr	BASEPRI, r3
 80095b6:	f3bf 8f6f 	isb	sy
 80095ba:	f3bf 8f4f 	dsb	sy
 80095be:	e7fe      	b.n	80095be <xTaskIncrementTick+0x2e>
 80095c0:	4a36      	ldr	r2, [pc, #216]	; (800969c <xTaskIncrementTick+0x10c>)
 80095c2:	6819      	ldr	r1, [r3, #0]
 80095c4:	6810      	ldr	r0, [r2, #0]
 80095c6:	6018      	str	r0, [r3, #0]
 80095c8:	6011      	str	r1, [r2, #0]
 80095ca:	4a35      	ldr	r2, [pc, #212]	; (80096a0 <xTaskIncrementTick+0x110>)
 80095cc:	6813      	ldr	r3, [r2, #0]
 80095ce:	3301      	adds	r3, #1
 80095d0:	6013      	str	r3, [r2, #0]
 80095d2:	f7ff fe57 	bl	8009284 <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 80095d6:	4e33      	ldr	r6, [pc, #204]	; (80096a4 <xTaskIncrementTick+0x114>)
 80095d8:	4f33      	ldr	r7, [pc, #204]	; (80096a8 <xTaskIncrementTick+0x118>)
 80095da:	6833      	ldr	r3, [r6, #0]
 80095dc:	f8df 80d4 	ldr.w	r8, [pc, #212]	; 80096b4 <xTaskIncrementTick+0x124>
 80095e0:	42ab      	cmp	r3, r5
BaseType_t xSwitchRequired = pdFALSE;
 80095e2:	f04f 0400 	mov.w	r4, #0
		if( xConstTickCount >= xNextTaskUnblockTime )
 80095e6:	d911      	bls.n	800960c <xTaskIncrementTick+0x7c>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 80095e8:	f8d8 3000 	ldr.w	r3, [r8]
 80095ec:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80095ee:	2214      	movs	r2, #20
 80095f0:	4353      	muls	r3, r2
 80095f2:	58fb      	ldr	r3, [r7, r3]
				xSwitchRequired = pdTRUE;
 80095f4:	2b02      	cmp	r3, #2
 80095f6:	bf28      	it	cs
 80095f8:	2401      	movcs	r4, #1
		if( xYieldPending != pdFALSE )
 80095fa:	4b2c      	ldr	r3, [pc, #176]	; (80096ac <xTaskIncrementTick+0x11c>)
 80095fc:	681b      	ldr	r3, [r3, #0]
			xSwitchRequired = pdTRUE;
 80095fe:	2b00      	cmp	r3, #0
}
 8009600:	bf0c      	ite	eq
 8009602:	4620      	moveq	r0, r4
 8009604:	2001      	movne	r0, #1
 8009606:	b003      	add	sp, #12
 8009608:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800960c:	f8df 9088 	ldr.w	r9, [pc, #136]	; 8009698 <xTaskIncrementTick+0x108>
					prvAddTaskToReadyList( pxTCB );
 8009610:	f8df a0a4 	ldr.w	sl, [pc, #164]	; 80096b8 <xTaskIncrementTick+0x128>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8009614:	f8d9 3000 	ldr.w	r3, [r9]
 8009618:	681b      	ldr	r3, [r3, #0]
 800961a:	b91b      	cbnz	r3, 8009624 <xTaskIncrementTick+0x94>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800961c:	f04f 33ff 	mov.w	r3, #4294967295
 8009620:	6033      	str	r3, [r6, #0]
					break;
 8009622:	e7e1      	b.n	80095e8 <xTaskIncrementTick+0x58>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009624:	f8d9 3000 	ldr.w	r3, [r9]
 8009628:	68db      	ldr	r3, [r3, #12]
 800962a:	f8d3 b00c 	ldr.w	fp, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 800962e:	f8db 2004 	ldr.w	r2, [fp, #4]
					if( xConstTickCount < xItemValue )
 8009632:	4295      	cmp	r5, r2
 8009634:	d201      	bcs.n	800963a <xTaskIncrementTick+0xaa>
						xNextTaskUnblockTime = xItemValue;
 8009636:	6032      	str	r2, [r6, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 8009638:	e7d6      	b.n	80095e8 <xTaskIncrementTick+0x58>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800963a:	f10b 0104 	add.w	r1, fp, #4
 800963e:	4608      	mov	r0, r1
 8009640:	9101      	str	r1, [sp, #4]
 8009642:	f7fe feaa 	bl	800839a <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 8009646:	f8db 2028 	ldr.w	r2, [fp, #40]	; 0x28
 800964a:	9901      	ldr	r1, [sp, #4]
 800964c:	b122      	cbz	r2, 8009658 <xTaskIncrementTick+0xc8>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800964e:	f10b 0018 	add.w	r0, fp, #24
 8009652:	f7fe fea2 	bl	800839a <uxListRemove>
 8009656:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 8009658:	f8db 002c 	ldr.w	r0, [fp, #44]	; 0x2c
 800965c:	f8da 2000 	ldr.w	r2, [sl]
 8009660:	2314      	movs	r3, #20
 8009662:	4290      	cmp	r0, r2
 8009664:	bf88      	it	hi
 8009666:	f8ca 0000 	strhi.w	r0, [sl]
 800966a:	fb03 7000 	mla	r0, r3, r0, r7
 800966e:	f7fe fe71 	bl	8008354 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8009672:	f8d8 1000 	ldr.w	r1, [r8]
 8009676:	f8db 202c 	ldr.w	r2, [fp, #44]	; 0x2c
 800967a:	6acb      	ldr	r3, [r1, #44]	; 0x2c
							xSwitchRequired = pdTRUE;
 800967c:	429a      	cmp	r2, r3
 800967e:	bf28      	it	cs
 8009680:	2401      	movcs	r4, #1
 8009682:	e7c7      	b.n	8009614 <xTaskIncrementTick+0x84>
		++uxPendedTicks;
 8009684:	4a0a      	ldr	r2, [pc, #40]	; (80096b0 <xTaskIncrementTick+0x120>)
 8009686:	6813      	ldr	r3, [r2, #0]
 8009688:	3301      	adds	r3, #1
 800968a:	6013      	str	r3, [r2, #0]
BaseType_t xSwitchRequired = pdFALSE;
 800968c:	2400      	movs	r4, #0
 800968e:	e7b4      	b.n	80095fa <xTaskIncrementTick+0x6a>
 8009690:	200151a0 	.word	0x200151a0
 8009694:	2001521c 	.word	0x2001521c
 8009698:	20014d2c 	.word	0x20014d2c
 800969c:	20014d30 	.word	0x20014d30
 80096a0:	200151d8 	.word	0x200151d8
 80096a4:	200151d4 	.word	0x200151d4
 80096a8:	20014d34 	.word	0x20014d34
 80096ac:	20015220 	.word	0x20015220
 80096b0:	2001519c 	.word	0x2001519c
 80096b4:	20014d28 	.word	0x20014d28
 80096b8:	200151a8 	.word	0x200151a8

080096bc <xTaskResumeAll>:
{
 80096bc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	configASSERT( uxSchedulerSuspended );
 80096be:	4c31      	ldr	r4, [pc, #196]	; (8009784 <xTaskResumeAll+0xc8>)
 80096c0:	6823      	ldr	r3, [r4, #0]
 80096c2:	b943      	cbnz	r3, 80096d6 <xTaskResumeAll+0x1a>
 80096c4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80096c8:	f383 8811 	msr	BASEPRI, r3
 80096cc:	f3bf 8f6f 	isb	sy
 80096d0:	f3bf 8f4f 	dsb	sy
 80096d4:	e7fe      	b.n	80096d4 <xTaskResumeAll+0x18>
	taskENTER_CRITICAL();
 80096d6:	f7fe fedd 	bl	8008494 <vPortEnterCritical>
		--uxSchedulerSuspended;
 80096da:	6823      	ldr	r3, [r4, #0]
 80096dc:	3b01      	subs	r3, #1
 80096de:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 80096e0:	6824      	ldr	r4, [r4, #0]
 80096e2:	b12c      	cbz	r4, 80096f0 <xTaskResumeAll+0x34>
BaseType_t xAlreadyYielded = pdFALSE;
 80096e4:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 80096e6:	f7fe fef5 	bl	80084d4 <vPortExitCritical>
}
 80096ea:	4620      	mov	r0, r4
 80096ec:	b003      	add	sp, #12
 80096ee:	bdf0      	pop	{r4, r5, r6, r7, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 80096f0:	4b25      	ldr	r3, [pc, #148]	; (8009788 <xTaskResumeAll+0xcc>)
 80096f2:	681b      	ldr	r3, [r3, #0]
 80096f4:	2b00      	cmp	r3, #0
 80096f6:	d0f5      	beq.n	80096e4 <xTaskResumeAll+0x28>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 80096f8:	4d24      	ldr	r5, [pc, #144]	; (800978c <xTaskResumeAll+0xd0>)
					prvAddTaskToReadyList( pxTCB );
 80096fa:	4e25      	ldr	r6, [pc, #148]	; (8009790 <xTaskResumeAll+0xd4>)
 80096fc:	4f25      	ldr	r7, [pc, #148]	; (8009794 <xTaskResumeAll+0xd8>)
 80096fe:	e01e      	b.n	800973e <xTaskResumeAll+0x82>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009700:	68eb      	ldr	r3, [r5, #12]
 8009702:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8009704:	f104 0018 	add.w	r0, r4, #24
 8009708:	f7fe fe47 	bl	800839a <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800970c:	1d21      	adds	r1, r4, #4
 800970e:	4608      	mov	r0, r1
 8009710:	9101      	str	r1, [sp, #4]
 8009712:	f7fe fe42 	bl	800839a <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 8009716:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8009718:	6832      	ldr	r2, [r6, #0]
 800971a:	9901      	ldr	r1, [sp, #4]
 800971c:	2014      	movs	r0, #20
 800971e:	4293      	cmp	r3, r2
 8009720:	fb00 7003 	mla	r0, r0, r3, r7
 8009724:	bf88      	it	hi
 8009726:	6033      	strhi	r3, [r6, #0]
 8009728:	f7fe fe14 	bl	8008354 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800972c:	4b1a      	ldr	r3, [pc, #104]	; (8009798 <xTaskResumeAll+0xdc>)
 800972e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8009730:	681b      	ldr	r3, [r3, #0]
 8009732:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009734:	429a      	cmp	r2, r3
 8009736:	d302      	bcc.n	800973e <xTaskResumeAll+0x82>
						xYieldPending = pdTRUE;
 8009738:	4b18      	ldr	r3, [pc, #96]	; (800979c <xTaskResumeAll+0xe0>)
 800973a:	2201      	movs	r2, #1
 800973c:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800973e:	682b      	ldr	r3, [r5, #0]
 8009740:	2b00      	cmp	r3, #0
 8009742:	d1dd      	bne.n	8009700 <xTaskResumeAll+0x44>
				if( pxTCB != NULL )
 8009744:	b10c      	cbz	r4, 800974a <xTaskResumeAll+0x8e>
					prvResetNextTaskUnblockTime();
 8009746:	f7ff fd9d 	bl	8009284 <prvResetNextTaskUnblockTime>
					UBaseType_t uxPendedCounts = uxPendedTicks; /* Non-volatile copy. */
 800974a:	4d15      	ldr	r5, [pc, #84]	; (80097a0 <xTaskResumeAll+0xe4>)
 800974c:	682c      	ldr	r4, [r5, #0]
					if( uxPendedCounts > ( UBaseType_t ) 0U )
 800974e:	b144      	cbz	r4, 8009762 <xTaskResumeAll+0xa6>
								xYieldPending = pdTRUE;
 8009750:	4e12      	ldr	r6, [pc, #72]	; (800979c <xTaskResumeAll+0xe0>)
 8009752:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 8009754:	f7ff ff1c 	bl	8009590 <xTaskIncrementTick>
 8009758:	b100      	cbz	r0, 800975c <xTaskResumeAll+0xa0>
								xYieldPending = pdTRUE;
 800975a:	6037      	str	r7, [r6, #0]
						} while( uxPendedCounts > ( UBaseType_t ) 0U );
 800975c:	3c01      	subs	r4, #1
 800975e:	d1f9      	bne.n	8009754 <xTaskResumeAll+0x98>
						uxPendedTicks = 0;
 8009760:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 8009762:	4b0e      	ldr	r3, [pc, #56]	; (800979c <xTaskResumeAll+0xe0>)
 8009764:	681b      	ldr	r3, [r3, #0]
 8009766:	2b00      	cmp	r3, #0
 8009768:	d0bc      	beq.n	80096e4 <xTaskResumeAll+0x28>
					taskYIELD_IF_USING_PREEMPTION();
 800976a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800976e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009772:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009776:	f3bf 8f4f 	dsb	sy
 800977a:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 800977e:	2401      	movs	r4, #1
 8009780:	e7b1      	b.n	80096e6 <xTaskResumeAll+0x2a>
 8009782:	bf00      	nop
 8009784:	200151a0 	.word	0x200151a0
 8009788:	20015194 	.word	0x20015194
 800978c:	200151dc 	.word	0x200151dc
 8009790:	200151a8 	.word	0x200151a8
 8009794:	20014d34 	.word	0x20014d34
 8009798:	20014d28 	.word	0x20014d28
 800979c:	20015220 	.word	0x20015220
 80097a0:	2001519c 	.word	0x2001519c

080097a4 <vTaskDelay>:
	{
 80097a4:	b508      	push	{r3, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 80097a6:	b950      	cbnz	r0, 80097be <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 80097a8:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80097ac:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80097b0:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80097b4:	f3bf 8f4f 	dsb	sy
 80097b8:	f3bf 8f6f 	isb	sy
	}
 80097bc:	bd08      	pop	{r3, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 80097be:	4b0a      	ldr	r3, [pc, #40]	; (80097e8 <vTaskDelay+0x44>)
 80097c0:	6819      	ldr	r1, [r3, #0]
 80097c2:	b141      	cbz	r1, 80097d6 <vTaskDelay+0x32>
 80097c4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80097c8:	f383 8811 	msr	BASEPRI, r3
 80097cc:	f3bf 8f6f 	isb	sy
 80097d0:	f3bf 8f4f 	dsb	sy
 80097d4:	e7fe      	b.n	80097d4 <vTaskDelay+0x30>
			vTaskSuspendAll();
 80097d6:	f7ff fecd 	bl	8009574 <vTaskSuspendAll>
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 80097da:	f7ff fd1b 	bl	8009214 <prvAddCurrentTaskToDelayedList>
			xAlreadyYielded = xTaskResumeAll();
 80097de:	f7ff ff6d 	bl	80096bc <xTaskResumeAll>
		if( xAlreadyYielded == pdFALSE )
 80097e2:	2800      	cmp	r0, #0
 80097e4:	d0e0      	beq.n	80097a8 <vTaskDelay+0x4>
 80097e6:	e7e9      	b.n	80097bc <vTaskDelay+0x18>
 80097e8:	200151a0 	.word	0x200151a0

080097ec <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 80097ec:	4b19      	ldr	r3, [pc, #100]	; (8009854 <vTaskSwitchContext+0x68>)
 80097ee:	681a      	ldr	r2, [r3, #0]
 80097f0:	4b19      	ldr	r3, [pc, #100]	; (8009858 <vTaskSwitchContext+0x6c>)
{
 80097f2:	b570      	push	{r4, r5, r6, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 80097f4:	b112      	cbz	r2, 80097fc <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 80097f6:	2201      	movs	r2, #1
 80097f8:	601a      	str	r2, [r3, #0]
}
 80097fa:	bd70      	pop	{r4, r5, r6, pc}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80097fc:	4d17      	ldr	r5, [pc, #92]	; (800985c <vTaskSwitchContext+0x70>)
		xYieldPending = pdFALSE;
 80097fe:	601a      	str	r2, [r3, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009800:	682a      	ldr	r2, [r5, #0]
 8009802:	4917      	ldr	r1, [pc, #92]	; (8009860 <vTaskSwitchContext+0x74>)
 8009804:	2614      	movs	r6, #20
 8009806:	fb06 f302 	mul.w	r3, r6, r2
 800980a:	18c8      	adds	r0, r1, r3
 800980c:	58cc      	ldr	r4, [r1, r3]
 800980e:	b1ac      	cbz	r4, 800983c <vTaskSwitchContext+0x50>
 8009810:	6844      	ldr	r4, [r0, #4]
 8009812:	3308      	adds	r3, #8
 8009814:	6864      	ldr	r4, [r4, #4]
 8009816:	6044      	str	r4, [r0, #4]
 8009818:	440b      	add	r3, r1
 800981a:	429c      	cmp	r4, r3
 800981c:	bf04      	itt	eq
 800981e:	6863      	ldreq	r3, [r4, #4]
 8009820:	6043      	streq	r3, [r0, #4]
 8009822:	2314      	movs	r3, #20
 8009824:	fb03 1102 	mla	r1, r3, r2, r1
 8009828:	684b      	ldr	r3, [r1, #4]
 800982a:	68d9      	ldr	r1, [r3, #12]
 800982c:	4b0d      	ldr	r3, [pc, #52]	; (8009864 <vTaskSwitchContext+0x78>)
 800982e:	6019      	str	r1, [r3, #0]
 8009830:	602a      	str	r2, [r5, #0]
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 8009832:	681b      	ldr	r3, [r3, #0]
 8009834:	4a0c      	ldr	r2, [pc, #48]	; (8009868 <vTaskSwitchContext+0x7c>)
 8009836:	3358      	adds	r3, #88	; 0x58
 8009838:	6013      	str	r3, [r2, #0]
}
 800983a:	e7de      	b.n	80097fa <vTaskSwitchContext+0xe>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800983c:	b942      	cbnz	r2, 8009850 <vTaskSwitchContext+0x64>
 800983e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009842:	f383 8811 	msr	BASEPRI, r3
 8009846:	f3bf 8f6f 	isb	sy
 800984a:	f3bf 8f4f 	dsb	sy
 800984e:	e7fe      	b.n	800984e <vTaskSwitchContext+0x62>
 8009850:	3a01      	subs	r2, #1
 8009852:	e7d8      	b.n	8009806 <vTaskSwitchContext+0x1a>
 8009854:	200151a0 	.word	0x200151a0
 8009858:	20015220 	.word	0x20015220
 800985c:	200151a8 	.word	0x200151a8
 8009860:	20014d34 	.word	0x20014d34
 8009864:	20014d28 	.word	0x20014d28
 8009868:	20000100 	.word	0x20000100

0800986c <vTaskPlaceOnEventList>:
{
 800986c:	b510      	push	{r4, lr}
 800986e:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 8009870:	b940      	cbnz	r0, 8009884 <vTaskPlaceOnEventList+0x18>
 8009872:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009876:	f383 8811 	msr	BASEPRI, r3
 800987a:	f3bf 8f6f 	isb	sy
 800987e:	f3bf 8f4f 	dsb	sy
 8009882:	e7fe      	b.n	8009882 <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8009884:	4b05      	ldr	r3, [pc, #20]	; (800989c <vTaskPlaceOnEventList+0x30>)
 8009886:	6819      	ldr	r1, [r3, #0]
 8009888:	3118      	adds	r1, #24
 800988a:	f7fe fd6f 	bl	800836c <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800988e:	4620      	mov	r0, r4
 8009890:	2101      	movs	r1, #1
}
 8009892:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 8009896:	f7ff bcbd 	b.w	8009214 <prvAddCurrentTaskToDelayedList>
 800989a:	bf00      	nop
 800989c:	20014d28 	.word	0x20014d28

080098a0 <vTaskPlaceOnEventListRestricted>:
	{
 80098a0:	b538      	push	{r3, r4, r5, lr}
 80098a2:	460d      	mov	r5, r1
 80098a4:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 80098a6:	b940      	cbnz	r0, 80098ba <vTaskPlaceOnEventListRestricted+0x1a>
 80098a8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80098ac:	f383 8811 	msr	BASEPRI, r3
 80098b0:	f3bf 8f6f 	isb	sy
 80098b4:	f3bf 8f4f 	dsb	sy
 80098b8:	e7fe      	b.n	80098b8 <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 80098ba:	4b07      	ldr	r3, [pc, #28]	; (80098d8 <vTaskPlaceOnEventListRestricted+0x38>)
 80098bc:	6819      	ldr	r1, [r3, #0]
 80098be:	3118      	adds	r1, #24
 80098c0:	f7fe fd48 	bl	8008354 <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 80098c4:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 80098c6:	4621      	mov	r1, r4
 80098c8:	bf0c      	ite	eq
 80098ca:	4628      	moveq	r0, r5
 80098cc:	f04f 30ff 	movne.w	r0, #4294967295
	}
 80098d0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 80098d4:	f7ff bc9e 	b.w	8009214 <prvAddCurrentTaskToDelayedList>
 80098d8:	20014d28 	.word	0x20014d28

080098dc <xTaskRemoveFromEventList>:
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80098dc:	68c3      	ldr	r3, [r0, #12]
{
 80098de:	b513      	push	{r0, r1, r4, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80098e0:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 80098e2:	b944      	cbnz	r4, 80098f6 <xTaskRemoveFromEventList+0x1a>
 80098e4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80098e8:	f383 8811 	msr	BASEPRI, r3
 80098ec:	f3bf 8f6f 	isb	sy
 80098f0:	f3bf 8f4f 	dsb	sy
 80098f4:	e7fe      	b.n	80098f4 <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 80098f6:	f104 0118 	add.w	r1, r4, #24
 80098fa:	4608      	mov	r0, r1
 80098fc:	9101      	str	r1, [sp, #4]
 80098fe:	f7fe fd4c 	bl	800839a <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009902:	4b12      	ldr	r3, [pc, #72]	; (800994c <xTaskRemoveFromEventList+0x70>)
 8009904:	9901      	ldr	r1, [sp, #4]
 8009906:	681b      	ldr	r3, [r3, #0]
 8009908:	b9eb      	cbnz	r3, 8009946 <xTaskRemoveFromEventList+0x6a>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 800990a:	1d21      	adds	r1, r4, #4
 800990c:	4608      	mov	r0, r1
 800990e:	9101      	str	r1, [sp, #4]
 8009910:	f7fe fd43 	bl	800839a <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 8009914:	4a0e      	ldr	r2, [pc, #56]	; (8009950 <xTaskRemoveFromEventList+0x74>)
 8009916:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8009918:	6810      	ldr	r0, [r2, #0]
 800991a:	9901      	ldr	r1, [sp, #4]
 800991c:	4283      	cmp	r3, r0
 800991e:	bf88      	it	hi
 8009920:	6013      	strhi	r3, [r2, #0]
 8009922:	4a0c      	ldr	r2, [pc, #48]	; (8009954 <xTaskRemoveFromEventList+0x78>)
 8009924:	2014      	movs	r0, #20
 8009926:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800992a:	f7fe fd13 	bl	8008354 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 800992e:	4b0a      	ldr	r3, [pc, #40]	; (8009958 <xTaskRemoveFromEventList+0x7c>)
 8009930:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8009932:	681b      	ldr	r3, [r3, #0]
 8009934:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009936:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 8009938:	bf85      	ittet	hi
 800993a:	4b08      	ldrhi	r3, [pc, #32]	; (800995c <xTaskRemoveFromEventList+0x80>)
 800993c:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 800993e:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 8009940:	6018      	strhi	r0, [r3, #0]
}
 8009942:	b002      	add	sp, #8
 8009944:	bd10      	pop	{r4, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 8009946:	4806      	ldr	r0, [pc, #24]	; (8009960 <xTaskRemoveFromEventList+0x84>)
 8009948:	e7ef      	b.n	800992a <xTaskRemoveFromEventList+0x4e>
 800994a:	bf00      	nop
 800994c:	200151a0 	.word	0x200151a0
 8009950:	200151a8 	.word	0x200151a8
 8009954:	20014d34 	.word	0x20014d34
 8009958:	20014d28 	.word	0x20014d28
 800995c:	20015220 	.word	0x20015220
 8009960:	200151dc 	.word	0x200151dc

08009964 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 8009964:	4b03      	ldr	r3, [pc, #12]	; (8009974 <vTaskInternalSetTimeOutState+0x10>)
 8009966:	681b      	ldr	r3, [r3, #0]
 8009968:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800996a:	4b03      	ldr	r3, [pc, #12]	; (8009978 <vTaskInternalSetTimeOutState+0x14>)
 800996c:	681b      	ldr	r3, [r3, #0]
 800996e:	6043      	str	r3, [r0, #4]
}
 8009970:	4770      	bx	lr
 8009972:	bf00      	nop
 8009974:	200151d8 	.word	0x200151d8
 8009978:	2001521c 	.word	0x2001521c

0800997c <xTaskCheckForTimeOut>:
{
 800997c:	b570      	push	{r4, r5, r6, lr}
 800997e:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 8009980:	4605      	mov	r5, r0
 8009982:	b940      	cbnz	r0, 8009996 <xTaskCheckForTimeOut+0x1a>
 8009984:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009988:	f383 8811 	msr	BASEPRI, r3
 800998c:	f3bf 8f6f 	isb	sy
 8009990:	f3bf 8f4f 	dsb	sy
 8009994:	e7fe      	b.n	8009994 <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 8009996:	b941      	cbnz	r1, 80099aa <xTaskCheckForTimeOut+0x2e>
 8009998:	f04f 0350 	mov.w	r3, #80	; 0x50
 800999c:	f383 8811 	msr	BASEPRI, r3
 80099a0:	f3bf 8f6f 	isb	sy
 80099a4:	f3bf 8f4f 	dsb	sy
 80099a8:	e7fe      	b.n	80099a8 <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 80099aa:	f7fe fd73 	bl	8008494 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 80099ae:	4b0f      	ldr	r3, [pc, #60]	; (80099ec <xTaskCheckForTimeOut+0x70>)
 80099b0:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 80099b2:	6823      	ldr	r3, [r4, #0]
 80099b4:	1c5a      	adds	r2, r3, #1
 80099b6:	d010      	beq.n	80099da <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 80099b8:	480d      	ldr	r0, [pc, #52]	; (80099f0 <xTaskCheckForTimeOut+0x74>)
 80099ba:	682e      	ldr	r6, [r5, #0]
 80099bc:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 80099be:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 80099c0:	4286      	cmp	r6, r0
 80099c2:	d001      	beq.n	80099c8 <xTaskCheckForTimeOut+0x4c>
 80099c4:	428a      	cmp	r2, r1
 80099c6:	d90f      	bls.n	80099e8 <xTaskCheckForTimeOut+0x6c>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 80099c8:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 80099ca:	4283      	cmp	r3, r0
 80099cc:	d90a      	bls.n	80099e4 <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 80099ce:	1a5b      	subs	r3, r3, r1
 80099d0:	4413      	add	r3, r2
 80099d2:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 80099d4:	4628      	mov	r0, r5
 80099d6:	f7ff ffc5 	bl	8009964 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 80099da:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 80099dc:	f7fe fd7a 	bl	80084d4 <vPortExitCritical>
}
 80099e0:	4620      	mov	r0, r4
 80099e2:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 80099e4:	2300      	movs	r3, #0
 80099e6:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 80099e8:	2401      	movs	r4, #1
 80099ea:	e7f7      	b.n	80099dc <xTaskCheckForTimeOut+0x60>
 80099ec:	2001521c 	.word	0x2001521c
 80099f0:	200151d8 	.word	0x200151d8

080099f4 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 80099f4:	4b01      	ldr	r3, [pc, #4]	; (80099fc <vTaskMissedYield+0x8>)
 80099f6:	2201      	movs	r2, #1
 80099f8:	601a      	str	r2, [r3, #0]
}
 80099fa:	4770      	bx	lr
 80099fc:	20015220 	.word	0x20015220

08009a00 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 8009a00:	4b05      	ldr	r3, [pc, #20]	; (8009a18 <xTaskGetSchedulerState+0x18>)
 8009a02:	681b      	ldr	r3, [r3, #0]
 8009a04:	b133      	cbz	r3, 8009a14 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009a06:	4b05      	ldr	r3, [pc, #20]	; (8009a1c <xTaskGetSchedulerState+0x1c>)
 8009a08:	681b      	ldr	r3, [r3, #0]
				xReturn = taskSCHEDULER_SUSPENDED;
 8009a0a:	2b00      	cmp	r3, #0
 8009a0c:	bf0c      	ite	eq
 8009a0e:	2002      	moveq	r0, #2
 8009a10:	2000      	movne	r0, #0
 8009a12:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 8009a14:	2001      	movs	r0, #1
	}
 8009a16:	4770      	bx	lr
 8009a18:	200151f0 	.word	0x200151f0
 8009a1c:	200151a0 	.word	0x200151a0

08009a20 <xTaskPriorityInherit>:
	{
 8009a20:	b573      	push	{r0, r1, r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 8009a22:	4604      	mov	r4, r0
 8009a24:	b348      	cbz	r0, 8009a7a <xTaskPriorityInherit+0x5a>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 8009a26:	4d1c      	ldr	r5, [pc, #112]	; (8009a98 <xTaskPriorityInherit+0x78>)
 8009a28:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8009a2a:	682a      	ldr	r2, [r5, #0]
 8009a2c:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8009a2e:	4293      	cmp	r3, r2
 8009a30:	d229      	bcs.n	8009a86 <xTaskPriorityInherit+0x66>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8009a32:	6982      	ldr	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8009a34:	4e19      	ldr	r6, [pc, #100]	; (8009a9c <xTaskPriorityInherit+0x7c>)
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8009a36:	2a00      	cmp	r2, #0
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009a38:	bfa1      	itttt	ge
 8009a3a:	682a      	ldrge	r2, [r5, #0]
 8009a3c:	6ad2      	ldrge	r2, [r2, #44]	; 0x2c
 8009a3e:	f1c2 0238 	rsbge	r2, r2, #56	; 0x38
 8009a42:	6182      	strge	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8009a44:	2214      	movs	r2, #20
 8009a46:	fb02 6303 	mla	r3, r2, r3, r6
 8009a4a:	6942      	ldr	r2, [r0, #20]
 8009a4c:	429a      	cmp	r2, r3
 8009a4e:	d116      	bne.n	8009a7e <xTaskPriorityInherit+0x5e>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009a50:	1d01      	adds	r1, r0, #4
 8009a52:	4608      	mov	r0, r1
 8009a54:	9101      	str	r1, [sp, #4]
 8009a56:	f7fe fca0 	bl	800839a <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8009a5a:	682b      	ldr	r3, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8009a5c:	4a10      	ldr	r2, [pc, #64]	; (8009aa0 <xTaskPriorityInherit+0x80>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8009a5e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8009a60:	6810      	ldr	r0, [r2, #0]
 8009a62:	9901      	ldr	r1, [sp, #4]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8009a64:	62e3      	str	r3, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8009a66:	4283      	cmp	r3, r0
 8009a68:	f04f 0014 	mov.w	r0, #20
 8009a6c:	fb00 6003 	mla	r0, r0, r3, r6
 8009a70:	bf88      	it	hi
 8009a72:	6013      	strhi	r3, [r2, #0]
 8009a74:	f7fe fc6e 	bl	8008354 <vListInsertEnd>
				xReturn = pdTRUE;
 8009a78:	2001      	movs	r0, #1
	}
 8009a7a:	b002      	add	sp, #8
 8009a7c:	bd70      	pop	{r4, r5, r6, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8009a7e:	682b      	ldr	r3, [r5, #0]
 8009a80:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009a82:	62c3      	str	r3, [r0, #44]	; 0x2c
 8009a84:	e7f8      	b.n	8009a78 <xTaskPriorityInherit+0x58>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 8009a86:	682b      	ldr	r3, [r5, #0]
 8009a88:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8009a8a:	6adc      	ldr	r4, [r3, #44]	; 0x2c
 8009a8c:	42a0      	cmp	r0, r4
 8009a8e:	bf2c      	ite	cs
 8009a90:	2000      	movcs	r0, #0
 8009a92:	2001      	movcc	r0, #1
 8009a94:	e7f1      	b.n	8009a7a <xTaskPriorityInherit+0x5a>
 8009a96:	bf00      	nop
 8009a98:	20014d28 	.word	0x20014d28
 8009a9c:	20014d34 	.word	0x20014d34
 8009aa0:	200151a8 	.word	0x200151a8

08009aa4 <xTaskPriorityDisinherit>:
	{
 8009aa4:	b513      	push	{r0, r1, r4, lr}
		if( pxMutexHolder != NULL )
 8009aa6:	b910      	cbnz	r0, 8009aae <xTaskPriorityDisinherit+0xa>
	BaseType_t xReturn = pdFALSE;
 8009aa8:	2000      	movs	r0, #0
	}
 8009aaa:	b002      	add	sp, #8
 8009aac:	bd10      	pop	{r4, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 8009aae:	4b1c      	ldr	r3, [pc, #112]	; (8009b20 <xTaskPriorityDisinherit+0x7c>)
 8009ab0:	681c      	ldr	r4, [r3, #0]
 8009ab2:	4284      	cmp	r4, r0
 8009ab4:	d008      	beq.n	8009ac8 <xTaskPriorityDisinherit+0x24>
 8009ab6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009aba:	f383 8811 	msr	BASEPRI, r3
 8009abe:	f3bf 8f6f 	isb	sy
 8009ac2:	f3bf 8f4f 	dsb	sy
 8009ac6:	e7fe      	b.n	8009ac6 <xTaskPriorityDisinherit+0x22>
			configASSERT( pxTCB->uxMutexesHeld );
 8009ac8:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8009aca:	b943      	cbnz	r3, 8009ade <xTaskPriorityDisinherit+0x3a>
 8009acc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009ad0:	f383 8811 	msr	BASEPRI, r3
 8009ad4:	f3bf 8f6f 	isb	sy
 8009ad8:	f3bf 8f4f 	dsb	sy
 8009adc:	e7fe      	b.n	8009adc <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8009ade:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8009ae0:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 8009ae2:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8009ae4:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 8009ae6:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8009ae8:	d0de      	beq.n	8009aa8 <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 8009aea:	2b00      	cmp	r3, #0
 8009aec:	d1dc      	bne.n	8009aa8 <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009aee:	1d21      	adds	r1, r4, #4
 8009af0:	4608      	mov	r0, r1
 8009af2:	9101      	str	r1, [sp, #4]
 8009af4:	f7fe fc51 	bl	800839a <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 8009af8:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 8009afa:	9901      	ldr	r1, [sp, #4]
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 8009afc:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009afe:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 8009b02:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 8009b04:	4a07      	ldr	r2, [pc, #28]	; (8009b24 <xTaskPriorityDisinherit+0x80>)
 8009b06:	6810      	ldr	r0, [r2, #0]
 8009b08:	4283      	cmp	r3, r0
 8009b0a:	bf88      	it	hi
 8009b0c:	6013      	strhi	r3, [r2, #0]
 8009b0e:	4a06      	ldr	r2, [pc, #24]	; (8009b28 <xTaskPriorityDisinherit+0x84>)
 8009b10:	2014      	movs	r0, #20
 8009b12:	fb00 2003 	mla	r0, r0, r3, r2
 8009b16:	f7fe fc1d 	bl	8008354 <vListInsertEnd>
					xReturn = pdTRUE;
 8009b1a:	2001      	movs	r0, #1
		return xReturn;
 8009b1c:	e7c5      	b.n	8009aaa <xTaskPriorityDisinherit+0x6>
 8009b1e:	bf00      	nop
 8009b20:	20014d28 	.word	0x20014d28
 8009b24:	200151a8 	.word	0x200151a8
 8009b28:	20014d34 	.word	0x20014d34

08009b2c <vTaskPriorityDisinheritAfterTimeout>:
	{
 8009b2c:	b537      	push	{r0, r1, r2, r4, r5, lr}
		if( pxMutexHolder != NULL )
 8009b2e:	4604      	mov	r4, r0
 8009b30:	2800      	cmp	r0, #0
 8009b32:	d044      	beq.n	8009bbe <vTaskPriorityDisinheritAfterTimeout+0x92>
			configASSERT( pxTCB->uxMutexesHeld );
 8009b34:	6d02      	ldr	r2, [r0, #80]	; 0x50
 8009b36:	b942      	cbnz	r2, 8009b4a <vTaskPriorityDisinheritAfterTimeout+0x1e>
 8009b38:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009b3c:	f383 8811 	msr	BASEPRI, r3
 8009b40:	f3bf 8f6f 	isb	sy
 8009b44:	f3bf 8f4f 	dsb	sy
 8009b48:	e7fe      	b.n	8009b48 <vTaskPriorityDisinheritAfterTimeout+0x1c>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 8009b4a:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 8009b4c:	4299      	cmp	r1, r3
 8009b4e:	bf38      	it	cc
 8009b50:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 8009b52:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8009b54:	428b      	cmp	r3, r1
 8009b56:	d032      	beq.n	8009bbe <vTaskPriorityDisinheritAfterTimeout+0x92>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 8009b58:	2a01      	cmp	r2, #1
 8009b5a:	d130      	bne.n	8009bbe <vTaskPriorityDisinheritAfterTimeout+0x92>
					configASSERT( pxTCB != pxCurrentTCB );
 8009b5c:	4a19      	ldr	r2, [pc, #100]	; (8009bc4 <vTaskPriorityDisinheritAfterTimeout+0x98>)
 8009b5e:	6812      	ldr	r2, [r2, #0]
 8009b60:	4282      	cmp	r2, r0
 8009b62:	d108      	bne.n	8009b76 <vTaskPriorityDisinheritAfterTimeout+0x4a>
 8009b64:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009b68:	f383 8811 	msr	BASEPRI, r3
 8009b6c:	f3bf 8f6f 	isb	sy
 8009b70:	f3bf 8f4f 	dsb	sy
 8009b74:	e7fe      	b.n	8009b74 <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8009b76:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8009b78:	4d13      	ldr	r5, [pc, #76]	; (8009bc8 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
					pxTCB->uxPriority = uxPriorityToUse;
 8009b7a:	62c1      	str	r1, [r0, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8009b7c:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8009b7e:	f04f 0214 	mov.w	r2, #20
 8009b82:	fb02 5303 	mla	r3, r2, r3, r5
 8009b86:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009b88:	bfa4      	itt	ge
 8009b8a:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
 8009b8e:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8009b90:	429a      	cmp	r2, r3
 8009b92:	d114      	bne.n	8009bbe <vTaskPriorityDisinheritAfterTimeout+0x92>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009b94:	1d01      	adds	r1, r0, #4
 8009b96:	4608      	mov	r0, r1
 8009b98:	9101      	str	r1, [sp, #4]
 8009b9a:	f7fe fbfe 	bl	800839a <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 8009b9e:	4a0b      	ldr	r2, [pc, #44]	; (8009bcc <vTaskPriorityDisinheritAfterTimeout+0xa0>)
 8009ba0:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8009ba2:	6810      	ldr	r0, [r2, #0]
 8009ba4:	9901      	ldr	r1, [sp, #4]
 8009ba6:	4283      	cmp	r3, r0
 8009ba8:	f04f 0014 	mov.w	r0, #20
 8009bac:	fb00 5003 	mla	r0, r0, r3, r5
 8009bb0:	bf88      	it	hi
 8009bb2:	6013      	strhi	r3, [r2, #0]
	}
 8009bb4:	b003      	add	sp, #12
 8009bb6:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 8009bba:	f7fe bbcb 	b.w	8008354 <vListInsertEnd>
	}
 8009bbe:	b003      	add	sp, #12
 8009bc0:	bd30      	pop	{r4, r5, pc}
 8009bc2:	bf00      	nop
 8009bc4:	20014d28 	.word	0x20014d28
 8009bc8:	20014d34 	.word	0x20014d34
 8009bcc:	200151a8 	.word	0x200151a8

08009bd0 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 8009bd0:	4b04      	ldr	r3, [pc, #16]	; (8009be4 <pvTaskIncrementMutexHeldCount+0x14>)
 8009bd2:	681a      	ldr	r2, [r3, #0]
 8009bd4:	b11a      	cbz	r2, 8009bde <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 8009bd6:	6819      	ldr	r1, [r3, #0]
 8009bd8:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 8009bda:	3201      	adds	r2, #1
 8009bdc:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 8009bde:	6818      	ldr	r0, [r3, #0]
	}
 8009be0:	4770      	bx	lr
 8009be2:	bf00      	nop
 8009be4:	20014d28 	.word	0x20014d28

08009be8 <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 8009be8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 8009bea:	4c11      	ldr	r4, [pc, #68]	; (8009c30 <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 8009bec:	f7fe fc52 	bl	8008494 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 8009bf0:	6825      	ldr	r5, [r4, #0]
 8009bf2:	b9bd      	cbnz	r5, 8009c24 <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 8009bf4:	4f0f      	ldr	r7, [pc, #60]	; (8009c34 <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 8009bf6:	4e10      	ldr	r6, [pc, #64]	; (8009c38 <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 8009bf8:	4638      	mov	r0, r7
 8009bfa:	f7fe fb9d 	bl	8008338 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 8009bfe:	4630      	mov	r0, r6
 8009c00:	f7fe fb9a 	bl	8008338 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 8009c04:	4b0d      	ldr	r3, [pc, #52]	; (8009c3c <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8009c06:	4a0e      	ldr	r2, [pc, #56]	; (8009c40 <prvCheckForValidListAndQueue+0x58>)
			pxCurrentTimerList = &xActiveTimerList1;
 8009c08:	601f      	str	r7, [r3, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 8009c0a:	4b0e      	ldr	r3, [pc, #56]	; (8009c44 <prvCheckForValidListAndQueue+0x5c>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8009c0c:	2110      	movs	r1, #16
			pxOverflowTimerList = &xActiveTimerList2;
 8009c0e:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8009c10:	200a      	movs	r0, #10
 8009c12:	4b0d      	ldr	r3, [pc, #52]	; (8009c48 <prvCheckForValidListAndQueue+0x60>)
 8009c14:	9500      	str	r5, [sp, #0]
 8009c16:	f7fe fe4e 	bl	80088b6 <xQueueGenericCreateStatic>
 8009c1a:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 8009c1c:	b110      	cbz	r0, 8009c24 <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 8009c1e:	490b      	ldr	r1, [pc, #44]	; (8009c4c <prvCheckForValidListAndQueue+0x64>)
 8009c20:	f7ff fa18 	bl	8009054 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 8009c24:	b003      	add	sp, #12
 8009c26:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 8009c2a:	f7fe bc53 	b.w	80084d4 <vPortExitCritical>
 8009c2e:	bf00      	nop
 8009c30:	20015348 	.word	0x20015348
 8009c34:	200152cc 	.word	0x200152cc
 8009c38:	200152e0 	.word	0x200152e0
 8009c3c:	20015224 	.word	0x20015224
 8009c40:	2001522c 	.word	0x2001522c
 8009c44:	20015228 	.word	0x20015228
 8009c48:	200152f8 	.word	0x200152f8
 8009c4c:	08022bf1 	.word	0x08022bf1

08009c50 <prvInsertTimerInActiveList>:
	if( xNextExpiryTime <= xTimeNow )
 8009c50:	4291      	cmp	r1, r2
{
 8009c52:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 8009c54:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 8009c56:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 8009c58:	d80a      	bhi.n	8009c70 <prvInsertTimerInActiveList+0x20>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009c5a:	1ad2      	subs	r2, r2, r3
 8009c5c:	6983      	ldr	r3, [r0, #24]
 8009c5e:	429a      	cmp	r2, r3
 8009c60:	d20d      	bcs.n	8009c7e <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 8009c62:	4b08      	ldr	r3, [pc, #32]	; (8009c84 <prvInsertTimerInActiveList+0x34>)
 8009c64:	1d01      	adds	r1, r0, #4
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8009c66:	6818      	ldr	r0, [r3, #0]
 8009c68:	f7fe fb80 	bl	800836c <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 8009c6c:	2000      	movs	r0, #0
}
 8009c6e:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 8009c70:	429a      	cmp	r2, r3
 8009c72:	d201      	bcs.n	8009c78 <prvInsertTimerInActiveList+0x28>
 8009c74:	4299      	cmp	r1, r3
 8009c76:	d202      	bcs.n	8009c7e <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8009c78:	4b03      	ldr	r3, [pc, #12]	; (8009c88 <prvInsertTimerInActiveList+0x38>)
 8009c7a:	1d01      	adds	r1, r0, #4
 8009c7c:	e7f3      	b.n	8009c66 <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 8009c7e:	2001      	movs	r0, #1
	return xProcessTimerNow;
 8009c80:	e7f5      	b.n	8009c6e <prvInsertTimerInActiveList+0x1e>
 8009c82:	bf00      	nop
 8009c84:	20015228 	.word	0x20015228
 8009c88:	20015224 	.word	0x20015224

08009c8c <xTimerCreateTimerTask>:
{
 8009c8c:	b510      	push	{r4, lr}
 8009c8e:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 8009c90:	f7ff ffaa 	bl	8009be8 <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 8009c94:	4b12      	ldr	r3, [pc, #72]	; (8009ce0 <xTimerCreateTimerTask+0x54>)
 8009c96:	681b      	ldr	r3, [r3, #0]
 8009c98:	b1b3      	cbz	r3, 8009cc8 <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 8009c9a:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 8009c9c:	aa07      	add	r2, sp, #28
 8009c9e:	a906      	add	r1, sp, #24
 8009ca0:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 8009ca2:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 8009ca6:	f7fe fa4d 	bl	8008144 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 8009caa:	9b05      	ldr	r3, [sp, #20]
 8009cac:	9302      	str	r3, [sp, #8]
 8009cae:	9b06      	ldr	r3, [sp, #24]
 8009cb0:	9301      	str	r3, [sp, #4]
 8009cb2:	2302      	movs	r3, #2
 8009cb4:	9300      	str	r3, [sp, #0]
 8009cb6:	9a07      	ldr	r2, [sp, #28]
 8009cb8:	490a      	ldr	r1, [pc, #40]	; (8009ce4 <xTimerCreateTimerTask+0x58>)
 8009cba:	480b      	ldr	r0, [pc, #44]	; (8009ce8 <xTimerCreateTimerTask+0x5c>)
 8009cbc:	4623      	mov	r3, r4
 8009cbe:	f7ff fba3 	bl	8009408 <xTaskCreateStatic>
 8009cc2:	4b0a      	ldr	r3, [pc, #40]	; (8009cec <xTimerCreateTimerTask+0x60>)
 8009cc4:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 8009cc6:	b940      	cbnz	r0, 8009cda <xTimerCreateTimerTask+0x4e>
 8009cc8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009ccc:	f383 8811 	msr	BASEPRI, r3
 8009cd0:	f3bf 8f6f 	isb	sy
 8009cd4:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 8009cd8:	e7fe      	b.n	8009cd8 <xTimerCreateTimerTask+0x4c>
}
 8009cda:	2001      	movs	r0, #1
 8009cdc:	b008      	add	sp, #32
 8009cde:	bd10      	pop	{r4, pc}
 8009ce0:	20015348 	.word	0x20015348
 8009ce4:	08022bf6 	.word	0x08022bf6
 8009ce8:	08009df5 	.word	0x08009df5
 8009cec:	2001534c 	.word	0x2001534c

08009cf0 <xTimerGenericCommand>:
{
 8009cf0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8009cf2:	4616      	mov	r6, r2
	configASSERT( xTimer );
 8009cf4:	4604      	mov	r4, r0
{
 8009cf6:	461a      	mov	r2, r3
	configASSERT( xTimer );
 8009cf8:	b940      	cbnz	r0, 8009d0c <xTimerGenericCommand+0x1c>
 8009cfa:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009cfe:	f383 8811 	msr	BASEPRI, r3
 8009d02:	f3bf 8f6f 	isb	sy
 8009d06:	f3bf 8f4f 	dsb	sy
 8009d0a:	e7fe      	b.n	8009d0a <xTimerGenericCommand+0x1a>
	if( xTimerQueue != NULL )
 8009d0c:	4d0d      	ldr	r5, [pc, #52]	; (8009d44 <xTimerGenericCommand+0x54>)
 8009d0e:	6828      	ldr	r0, [r5, #0]
 8009d10:	b180      	cbz	r0, 8009d34 <xTimerGenericCommand+0x44>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 8009d12:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 8009d14:	e9cd 1600 	strd	r1, r6, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 8009d18:	9402      	str	r4, [sp, #8]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 8009d1a:	dc0d      	bgt.n	8009d38 <xTimerGenericCommand+0x48>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8009d1c:	f7ff fe70 	bl	8009a00 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8009d20:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8009d22:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8009d24:	bf08      	it	eq
 8009d26:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 8009d28:	6828      	ldr	r0, [r5, #0]
 8009d2a:	bf18      	it	ne
 8009d2c:	461a      	movne	r2, r3
 8009d2e:	4669      	mov	r1, sp
 8009d30:	f7fe fe76 	bl	8008a20 <xQueueGenericSend>
}
 8009d34:	b004      	add	sp, #16
 8009d36:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 8009d38:	2300      	movs	r3, #0
 8009d3a:	4669      	mov	r1, sp
 8009d3c:	f7fe ff23 	bl	8008b86 <xQueueGenericSendFromISR>
 8009d40:	e7f8      	b.n	8009d34 <xTimerGenericCommand+0x44>
 8009d42:	bf00      	nop
 8009d44:	20015348 	.word	0x20015348

08009d48 <prvSampleTimeNow>:
{
 8009d48:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
	if( xTimeNow < xLastTime )
 8009d4c:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 8009df0 <prvSampleTimeNow+0xa8>
{
 8009d50:	4606      	mov	r6, r0
	xTimeNow = xTaskGetTickCount();
 8009d52:	f7ff fc17 	bl	8009584 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 8009d56:	f8d8 3000 	ldr.w	r3, [r8]
 8009d5a:	4283      	cmp	r3, r0
	xTimeNow = xTaskGetTickCount();
 8009d5c:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 8009d5e:	d940      	bls.n	8009de2 <prvSampleTimeNow+0x9a>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 8009d60:	4f21      	ldr	r7, [pc, #132]	; (8009de8 <prvSampleTimeNow+0xa0>)
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8009d62:	f04f 0900 	mov.w	r9, #0
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 8009d66:	683b      	ldr	r3, [r7, #0]
 8009d68:	681a      	ldr	r2, [r3, #0]
 8009d6a:	b95a      	cbnz	r2, 8009d84 <prvSampleTimeNow+0x3c>
	pxCurrentTimerList = pxOverflowTimerList;
 8009d6c:	4a1f      	ldr	r2, [pc, #124]	; (8009dec <prvSampleTimeNow+0xa4>)
 8009d6e:	6811      	ldr	r1, [r2, #0]
 8009d70:	6039      	str	r1, [r7, #0]
	pxOverflowTimerList = pxTemp;
 8009d72:	6013      	str	r3, [r2, #0]
		*pxTimerListsWereSwitched = pdTRUE;
 8009d74:	2301      	movs	r3, #1
}
 8009d76:	4628      	mov	r0, r5
		*pxTimerListsWereSwitched = pdFALSE;
 8009d78:	6033      	str	r3, [r6, #0]
	xLastTime = xTimeNow;
 8009d7a:	f8c8 5000 	str.w	r5, [r8]
}
 8009d7e:	b004      	add	sp, #16
 8009d80:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8009d84:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009d86:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8009d88:	f8d3 a000 	ldr.w	sl, [r3]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8009d8c:	1d21      	adds	r1, r4, #4
 8009d8e:	4608      	mov	r0, r1
 8009d90:	9103      	str	r1, [sp, #12]
 8009d92:	f7fe fb02 	bl	800839a <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8009d96:	6a23      	ldr	r3, [r4, #32]
 8009d98:	4620      	mov	r0, r4
 8009d9a:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8009d9c:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8009da0:	9903      	ldr	r1, [sp, #12]
 8009da2:	f013 0f04 	tst.w	r3, #4
 8009da6:	d0de      	beq.n	8009d66 <prvSampleTimeNow+0x1e>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 8009da8:	69a3      	ldr	r3, [r4, #24]
 8009daa:	4453      	add	r3, sl
			if( xReloadTime > xNextExpireTime )
 8009dac:	459a      	cmp	sl, r3
 8009dae:	d205      	bcs.n	8009dbc <prvSampleTimeNow+0x74>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8009db0:	6838      	ldr	r0, [r7, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 8009db2:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 8009db4:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8009db6:	f7fe fad9 	bl	800836c <vListInsert>
 8009dba:	e7d4      	b.n	8009d66 <prvSampleTimeNow+0x1e>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8009dbc:	2300      	movs	r3, #0
 8009dbe:	f8cd 9000 	str.w	r9, [sp]
 8009dc2:	4652      	mov	r2, sl
 8009dc4:	4619      	mov	r1, r3
 8009dc6:	4620      	mov	r0, r4
 8009dc8:	f7ff ff92 	bl	8009cf0 <xTimerGenericCommand>
				configASSERT( xResult );
 8009dcc:	2800      	cmp	r0, #0
 8009dce:	d1ca      	bne.n	8009d66 <prvSampleTimeNow+0x1e>
 8009dd0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009dd4:	f383 8811 	msr	BASEPRI, r3
 8009dd8:	f3bf 8f6f 	isb	sy
 8009ddc:	f3bf 8f4f 	dsb	sy
 8009de0:	e7fe      	b.n	8009de0 <prvSampleTimeNow+0x98>
		*pxTimerListsWereSwitched = pdFALSE;
 8009de2:	2300      	movs	r3, #0
 8009de4:	e7c7      	b.n	8009d76 <prvSampleTimeNow+0x2e>
 8009de6:	bf00      	nop
 8009de8:	20015224 	.word	0x20015224
 8009dec:	20015228 	.word	0x20015228
 8009df0:	200152f4 	.word	0x200152f4

08009df4 <prvTimerTask>:
{
 8009df4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8009df8:	4d6e      	ldr	r5, [pc, #440]	; (8009fb4 <prvTimerTask+0x1c0>)
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 8009dfa:	4e6f      	ldr	r6, [pc, #444]	; (8009fb8 <prvTimerTask+0x1c4>)
{
 8009dfc:	b089      	sub	sp, #36	; 0x24
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8009dfe:	682b      	ldr	r3, [r5, #0]
 8009e00:	f8d3 8000 	ldr.w	r8, [r3]
 8009e04:	f1b8 0f00 	cmp.w	r8, #0
 8009e08:	d035      	beq.n	8009e76 <prvTimerTask+0x82>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8009e0a:	68db      	ldr	r3, [r3, #12]
 8009e0c:	f8d3 8000 	ldr.w	r8, [r3]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8009e10:	2400      	movs	r4, #0
	vTaskSuspendAll();
 8009e12:	f7ff fbaf 	bl	8009574 <vTaskSuspendAll>
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 8009e16:	a804      	add	r0, sp, #16
 8009e18:	f7ff ff96 	bl	8009d48 <prvSampleTimeNow>
		if( xTimerListsWereSwitched == pdFALSE )
 8009e1c:	9b04      	ldr	r3, [sp, #16]
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 8009e1e:	4681      	mov	r9, r0
		if( xTimerListsWereSwitched == pdFALSE )
 8009e20:	2b00      	cmp	r3, #0
 8009e22:	d169      	bne.n	8009ef8 <prvTimerTask+0x104>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 8009e24:	2c00      	cmp	r4, #0
 8009e26:	d14c      	bne.n	8009ec2 <prvTimerTask+0xce>
 8009e28:	4540      	cmp	r0, r8
 8009e2a:	d350      	bcc.n	8009ece <prvTimerTask+0xda>
				( void ) xTaskResumeAll();
 8009e2c:	f7ff fc46 	bl	80096bc <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009e30:	682b      	ldr	r3, [r5, #0]
 8009e32:	68db      	ldr	r3, [r3, #12]
 8009e34:	68df      	ldr	r7, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8009e36:	1d38      	adds	r0, r7, #4
 8009e38:	f7fe faaf 	bl	800839a <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8009e3c:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 8009e40:	0758      	lsls	r0, r3, #29
 8009e42:	d51a      	bpl.n	8009e7a <prvTimerTask+0x86>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 8009e44:	69b9      	ldr	r1, [r7, #24]
 8009e46:	4643      	mov	r3, r8
 8009e48:	464a      	mov	r2, r9
 8009e4a:	4441      	add	r1, r8
 8009e4c:	4638      	mov	r0, r7
 8009e4e:	f7ff feff 	bl	8009c50 <prvInsertTimerInActiveList>
 8009e52:	b1b0      	cbz	r0, 8009e82 <prvTimerTask+0x8e>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8009e54:	9400      	str	r4, [sp, #0]
 8009e56:	4623      	mov	r3, r4
 8009e58:	4642      	mov	r2, r8
 8009e5a:	4621      	mov	r1, r4
 8009e5c:	4638      	mov	r0, r7
 8009e5e:	f7ff ff47 	bl	8009cf0 <xTimerGenericCommand>
			configASSERT( xResult );
 8009e62:	b970      	cbnz	r0, 8009e82 <prvTimerTask+0x8e>
 8009e64:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009e68:	f383 8811 	msr	BASEPRI, r3
 8009e6c:	f3bf 8f6f 	isb	sy
 8009e70:	f3bf 8f4f 	dsb	sy
 8009e74:	e7fe      	b.n	8009e74 <prvTimerTask+0x80>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8009e76:	2401      	movs	r4, #1
 8009e78:	e7cb      	b.n	8009e12 <prvTimerTask+0x1e>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8009e7a:	f023 0301 	bic.w	r3, r3, #1
 8009e7e:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8009e82:	6a3b      	ldr	r3, [r7, #32]
 8009e84:	4638      	mov	r0, r7
 8009e86:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 8009e88:	6830      	ldr	r0, [r6, #0]
 8009e8a:	2200      	movs	r2, #0
 8009e8c:	a904      	add	r1, sp, #16
 8009e8e:	f7fe ff2f 	bl	8008cf0 <xQueueReceive>
 8009e92:	2800      	cmp	r0, #0
 8009e94:	d0b3      	beq.n	8009dfe <prvTimerTask+0xa>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 8009e96:	9b04      	ldr	r3, [sp, #16]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 8009e98:	9806      	ldr	r0, [sp, #24]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 8009e9a:	2b00      	cmp	r3, #0
 8009e9c:	db2f      	blt.n	8009efe <prvTimerTask+0x10a>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 8009e9e:	9c06      	ldr	r4, [sp, #24]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 8009ea0:	6963      	ldr	r3, [r4, #20]
 8009ea2:	2b00      	cmp	r3, #0
 8009ea4:	d132      	bne.n	8009f0c <prvTimerTask+0x118>
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 8009ea6:	a803      	add	r0, sp, #12
 8009ea8:	f7ff ff4e 	bl	8009d48 <prvSampleTimeNow>
			switch( xMessage.xMessageID )
 8009eac:	9b04      	ldr	r3, [sp, #16]
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 8009eae:	4602      	mov	r2, r0
			switch( xMessage.xMessageID )
 8009eb0:	2b09      	cmp	r3, #9
 8009eb2:	d8e9      	bhi.n	8009e88 <prvTimerTask+0x94>
 8009eb4:	e8df f003 	tbb	[pc, r3]
 8009eb8:	572e2e2e 	.word	0x572e2e2e
 8009ebc:	2e2e765e 	.word	0x2e2e765e
 8009ec0:	5e57      	.short	0x5e57
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 8009ec2:	4b3e      	ldr	r3, [pc, #248]	; (8009fbc <prvTimerTask+0x1c8>)
 8009ec4:	681b      	ldr	r3, [r3, #0]
 8009ec6:	681c      	ldr	r4, [r3, #0]
 8009ec8:	fab4 f484 	clz	r4, r4
 8009ecc:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 8009ece:	6830      	ldr	r0, [r6, #0]
 8009ed0:	4622      	mov	r2, r4
 8009ed2:	eba8 0109 	sub.w	r1, r8, r9
 8009ed6:	f7ff f8fa 	bl	80090ce <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 8009eda:	f7ff fbef 	bl	80096bc <xTaskResumeAll>
 8009ede:	2800      	cmp	r0, #0
 8009ee0:	d1d2      	bne.n	8009e88 <prvTimerTask+0x94>
					portYIELD_WITHIN_API();
 8009ee2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009ee6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009eea:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009eee:	f3bf 8f4f 	dsb	sy
 8009ef2:	f3bf 8f6f 	isb	sy
 8009ef6:	e7c7      	b.n	8009e88 <prvTimerTask+0x94>
			( void ) xTaskResumeAll();
 8009ef8:	f7ff fbe0 	bl	80096bc <xTaskResumeAll>
}
 8009efc:	e7c4      	b.n	8009e88 <prvTimerTask+0x94>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 8009efe:	9b05      	ldr	r3, [sp, #20]
 8009f00:	9907      	ldr	r1, [sp, #28]
 8009f02:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 8009f04:	9b04      	ldr	r3, [sp, #16]
 8009f06:	2b00      	cmp	r3, #0
 8009f08:	dbbe      	blt.n	8009e88 <prvTimerTask+0x94>
 8009f0a:	e7c8      	b.n	8009e9e <prvTimerTask+0xaa>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8009f0c:	1d20      	adds	r0, r4, #4
 8009f0e:	f7fe fa44 	bl	800839a <uxListRemove>
 8009f12:	e7c8      	b.n	8009ea6 <prvTimerTask+0xb2>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8009f14:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 8009f18:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8009f1a:	f043 0301 	orr.w	r3, r3, #1
 8009f1e:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 8009f22:	9b05      	ldr	r3, [sp, #20]
 8009f24:	4620      	mov	r0, r4
 8009f26:	4419      	add	r1, r3
 8009f28:	f7ff fe92 	bl	8009c50 <prvInsertTimerInActiveList>
 8009f2c:	2800      	cmp	r0, #0
 8009f2e:	d0ab      	beq.n	8009e88 <prvTimerTask+0x94>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8009f30:	6a23      	ldr	r3, [r4, #32]
 8009f32:	4620      	mov	r0, r4
 8009f34:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8009f36:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8009f3a:	0759      	lsls	r1, r3, #29
 8009f3c:	d5a4      	bpl.n	8009e88 <prvTimerTask+0x94>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 8009f3e:	69a2      	ldr	r2, [r4, #24]
 8009f40:	9905      	ldr	r1, [sp, #20]
 8009f42:	2300      	movs	r3, #0
 8009f44:	440a      	add	r2, r1
 8009f46:	9300      	str	r3, [sp, #0]
 8009f48:	4619      	mov	r1, r3
 8009f4a:	4620      	mov	r0, r4
 8009f4c:	f7ff fed0 	bl	8009cf0 <xTimerGenericCommand>
							configASSERT( xResult );
 8009f50:	2800      	cmp	r0, #0
 8009f52:	d199      	bne.n	8009e88 <prvTimerTask+0x94>
 8009f54:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009f58:	f383 8811 	msr	BASEPRI, r3
 8009f5c:	f3bf 8f6f 	isb	sy
 8009f60:	f3bf 8f4f 	dsb	sy
 8009f64:	e7fe      	b.n	8009f64 <prvTimerTask+0x170>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8009f66:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8009f6a:	f023 0301 	bic.w	r3, r3, #1
 8009f6e:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 8009f72:	e789      	b.n	8009e88 <prvTimerTask+0x94>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8009f74:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8009f78:	f043 0301 	orr.w	r3, r3, #1
 8009f7c:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 8009f80:	9905      	ldr	r1, [sp, #20]
 8009f82:	61a1      	str	r1, [r4, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 8009f84:	b941      	cbnz	r1, 8009f98 <prvTimerTask+0x1a4>
 8009f86:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009f8a:	f383 8811 	msr	BASEPRI, r3
 8009f8e:	f3bf 8f6f 	isb	sy
 8009f92:	f3bf 8f4f 	dsb	sy
 8009f96:	e7fe      	b.n	8009f96 <prvTimerTask+0x1a2>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 8009f98:	4603      	mov	r3, r0
 8009f9a:	4401      	add	r1, r0
 8009f9c:	4620      	mov	r0, r4
 8009f9e:	f7ff fe57 	bl	8009c50 <prvInsertTimerInActiveList>
					break;
 8009fa2:	e771      	b.n	8009e88 <prvTimerTask+0x94>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 8009fa4:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8009fa8:	079a      	lsls	r2, r3, #30
 8009faa:	d4de      	bmi.n	8009f6a <prvTimerTask+0x176>
							vPortFree( pxTimer );
 8009fac:	4620      	mov	r0, r4
 8009fae:	f7fe f98b 	bl	80082c8 <vPortFree>
 8009fb2:	e769      	b.n	8009e88 <prvTimerTask+0x94>
 8009fb4:	20015224 	.word	0x20015224
 8009fb8:	20015348 	.word	0x20015348
 8009fbc:	20015228 	.word	0x20015228

08009fc0 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 8009fc0:	8880      	ldrh	r0, [r0, #4]
 8009fc2:	4770      	bx	lr

08009fc4 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 8009fc4:	b570      	push	{r4, r5, r6, lr}
 8009fc6:	6803      	ldr	r3, [r0, #0]
 8009fc8:	4605      	mov	r5, r0
 8009fca:	460c      	mov	r4, r1
 8009fcc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009fce:	2100      	movs	r1, #0
 8009fd0:	4798      	blx	r3
 8009fd2:	682b      	ldr	r3, [r5, #0]
 8009fd4:	4606      	mov	r6, r0
 8009fd6:	6a1b      	ldr	r3, [r3, #32]
 8009fd8:	4628      	mov	r0, r5
 8009fda:	4798      	blx	r3
 8009fdc:	1ba4      	subs	r4, r4, r6
 8009fde:	b2a4      	uxth	r4, r4
 8009fe0:	fbb4 f0f0 	udiv	r0, r4, r0
 8009fe4:	bd70      	pop	{r4, r5, r6, pc}

08009fe6 <_ZN8touchgfx17AbstractPartition5clearEv>:
 8009fe6:	2300      	movs	r3, #0
 8009fe8:	8083      	strh	r3, [r0, #4]
 8009fea:	4770      	bx	lr

08009fec <_ZN8touchgfx17AbstractPartition8allocateEt>:
 8009fec:	b510      	push	{r4, lr}
 8009fee:	6803      	ldr	r3, [r0, #0]
 8009ff0:	8881      	ldrh	r1, [r0, #4]
 8009ff2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009ff4:	4604      	mov	r4, r0
 8009ff6:	4798      	blx	r3
 8009ff8:	88a3      	ldrh	r3, [r4, #4]
 8009ffa:	3301      	adds	r3, #1
 8009ffc:	80a3      	strh	r3, [r4, #4]
 8009ffe:	bd10      	pop	{r4, pc}

0800a000 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800a000:	6803      	ldr	r3, [r0, #0]
 800a002:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a004:	4718      	bx	r3

0800a006 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800a006:	4770      	bx	lr

0800a008 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800a008:	4a02      	ldr	r2, [pc, #8]	; (800a014 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800a00a:	6002      	str	r2, [r0, #0]
 800a00c:	2200      	movs	r2, #0
 800a00e:	8082      	strh	r2, [r0, #4]
 800a010:	4770      	bx	lr
 800a012:	bf00      	nop
 800a014:	08022c08 	.word	0x08022c08

0800a018 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800a018:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800a01a:	2000      	movs	r0, #0
 800a01c:	b12b      	cbz	r3, 800a02a <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800a01e:	b920      	cbnz	r0, 800a02a <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800a020:	1a5a      	subs	r2, r3, r1
 800a022:	4250      	negs	r0, r2
 800a024:	4150      	adcs	r0, r2
 800a026:	699b      	ldr	r3, [r3, #24]
 800a028:	e7f8      	b.n	800a01c <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800a02a:	4770      	bx	lr

0800a02c <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800a02c:	2300      	movs	r3, #0
 800a02e:	6148      	str	r0, [r1, #20]
 800a030:	618b      	str	r3, [r1, #24]
 800a032:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800a034:	b913      	cbnz	r3, 800a03c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 800a036:	6281      	str	r1, [r0, #40]	; 0x28
 800a038:	4770      	bx	lr
 800a03a:	4613      	mov	r3, r2
 800a03c:	699a      	ldr	r2, [r3, #24]
 800a03e:	2a00      	cmp	r2, #0
 800a040:	d1fb      	bne.n	800a03a <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 800a042:	6199      	str	r1, [r3, #24]
 800a044:	4770      	bx	lr

0800a046 <_ZN8touchgfx9Container9removeAllEv>:
 800a046:	2200      	movs	r2, #0
 800a048:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800a04a:	b123      	cbz	r3, 800a056 <_ZN8touchgfx9Container9removeAllEv+0x10>
 800a04c:	6999      	ldr	r1, [r3, #24]
 800a04e:	6281      	str	r1, [r0, #40]	; 0x28
 800a050:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800a054:	e7f8      	b.n	800a048 <_ZN8touchgfx9Container9removeAllEv+0x2>
 800a056:	4770      	bx	lr

0800a058 <_ZN8touchgfx9Container6unlinkEv>:
 800a058:	2300      	movs	r3, #0
 800a05a:	6283      	str	r3, [r0, #40]	; 0x28
 800a05c:	4770      	bx	lr

0800a05e <_ZNK8touchgfx9Container12getSolidRectEv>:
 800a05e:	2200      	movs	r2, #0
 800a060:	8002      	strh	r2, [r0, #0]
 800a062:	8042      	strh	r2, [r0, #2]
 800a064:	8082      	strh	r2, [r0, #4]
 800a066:	80c2      	strh	r2, [r0, #6]
 800a068:	4770      	bx	lr

0800a06a <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800a06a:	b570      	push	{r4, r5, r6, lr}
 800a06c:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800a06e:	460d      	mov	r5, r1
 800a070:	4616      	mov	r6, r2
 800a072:	b13c      	cbz	r4, 800a084 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800a074:	6823      	ldr	r3, [r4, #0]
 800a076:	4620      	mov	r0, r4
 800a078:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800a07a:	4632      	mov	r2, r6
 800a07c:	4629      	mov	r1, r5
 800a07e:	4798      	blx	r3
 800a080:	69a4      	ldr	r4, [r4, #24]
 800a082:	e7f6      	b.n	800a072 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800a084:	bd70      	pop	{r4, r5, r6, pc}

0800a086 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800a086:	b538      	push	{r3, r4, r5, lr}
 800a088:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800a08a:	460d      	mov	r5, r1
 800a08c:	b134      	cbz	r4, 800a09c <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800a08e:	682b      	ldr	r3, [r5, #0]
 800a090:	4621      	mov	r1, r4
 800a092:	689b      	ldr	r3, [r3, #8]
 800a094:	4628      	mov	r0, r5
 800a096:	4798      	blx	r3
 800a098:	69a4      	ldr	r4, [r4, #24]
 800a09a:	e7f7      	b.n	800a08c <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800a09c:	bd38      	pop	{r3, r4, r5, pc}

0800a09e <_ZNK8touchgfx9Container17invalidateContentEv>:
 800a09e:	b510      	push	{r4, lr}
 800a0a0:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800a0a2:	b12c      	cbz	r4, 800a0b0 <_ZNK8touchgfx9Container17invalidateContentEv+0x12>
 800a0a4:	6823      	ldr	r3, [r4, #0]
 800a0a6:	4620      	mov	r0, r4
 800a0a8:	699b      	ldr	r3, [r3, #24]
 800a0aa:	4798      	blx	r3
 800a0ac:	69a4      	ldr	r4, [r4, #24]
 800a0ae:	e7f8      	b.n	800a0a2 <_ZNK8touchgfx9Container17invalidateContentEv+0x4>
 800a0b0:	bd10      	pop	{r4, pc}

0800a0b2 <_ZN8touchgfx9ContainerD1Ev>:
 800a0b2:	4770      	bx	lr

0800a0b4 <_ZN8touchgfx9ContainerD0Ev>:
 800a0b4:	b510      	push	{r4, lr}
 800a0b6:	212c      	movs	r1, #44	; 0x2c
 800a0b8:	4604      	mov	r4, r0
 800a0ba:	f015 fe03 	bl	801fcc4 <_ZdlPvj>
 800a0be:	4620      	mov	r0, r4
 800a0c0:	bd10      	pop	{r4, pc}

0800a0c2 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800a0c2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800a0c4:	b19b      	cbz	r3, 800a0ee <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800a0c6:	428b      	cmp	r3, r1
 800a0c8:	d109      	bne.n	800a0de <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800a0ca:	699a      	ldr	r2, [r3, #24]
 800a0cc:	2100      	movs	r1, #0
 800a0ce:	6159      	str	r1, [r3, #20]
 800a0d0:	6282      	str	r2, [r0, #40]	; 0x28
 800a0d2:	b902      	cbnz	r2, 800a0d6 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800a0d4:	4770      	bx	lr
 800a0d6:	6199      	str	r1, [r3, #24]
 800a0d8:	4770      	bx	lr
 800a0da:	4613      	mov	r3, r2
 800a0dc:	b13a      	cbz	r2, 800a0ee <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800a0de:	699a      	ldr	r2, [r3, #24]
 800a0e0:	428a      	cmp	r2, r1
 800a0e2:	d1fa      	bne.n	800a0da <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800a0e4:	698a      	ldr	r2, [r1, #24]
 800a0e6:	619a      	str	r2, [r3, #24]
 800a0e8:	2300      	movs	r3, #0
 800a0ea:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800a0ee:	4770      	bx	lr

0800a0f0 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800a0f0:	b410      	push	{r4}
 800a0f2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800a0f4:	4604      	mov	r4, r0
 800a0f6:	b92b      	cbnz	r3, 800a104 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800a0f8:	6803      	ldr	r3, [r0, #0]
 800a0fa:	f85d 4b04 	ldr.w	r4, [sp], #4
 800a0fe:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800a100:	4611      	mov	r1, r2
 800a102:	4718      	bx	r3
 800a104:	b941      	cbnz	r1, 800a118 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800a106:	6193      	str	r3, [r2, #24]
 800a108:	6282      	str	r2, [r0, #40]	; 0x28
 800a10a:	6154      	str	r4, [r2, #20]
 800a10c:	f85d 4b04 	ldr.w	r4, [sp], #4
 800a110:	4770      	bx	lr
 800a112:	4603      	mov	r3, r0
 800a114:	2800      	cmp	r0, #0
 800a116:	d0f9      	beq.n	800a10c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800a118:	4299      	cmp	r1, r3
 800a11a:	6998      	ldr	r0, [r3, #24]
 800a11c:	d1f9      	bne.n	800a112 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800a11e:	6190      	str	r0, [r2, #24]
 800a120:	618a      	str	r2, [r1, #24]
 800a122:	e7f2      	b.n	800a10a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

0800a124 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800a124:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a128:	461f      	mov	r7, r3
 800a12a:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 800a12e:	460d      	mov	r5, r1
 800a130:	4616      	mov	r6, r2
 800a132:	b103      	cbz	r3, 800a136 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800a134:	6038      	str	r0, [r7, #0]
 800a136:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800a138:	b314      	cbz	r4, 800a180 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800a13a:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800a13e:	b1eb      	cbz	r3, 800a17c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a140:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800a144:	428d      	cmp	r5, r1
 800a146:	db19      	blt.n	800a17c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a148:	8923      	ldrh	r3, [r4, #8]
 800a14a:	b289      	uxth	r1, r1
 800a14c:	440b      	add	r3, r1
 800a14e:	b21b      	sxth	r3, r3
 800a150:	429d      	cmp	r5, r3
 800a152:	da13      	bge.n	800a17c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a154:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800a158:	4296      	cmp	r6, r2
 800a15a:	db0f      	blt.n	800a17c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a15c:	8963      	ldrh	r3, [r4, #10]
 800a15e:	b292      	uxth	r2, r2
 800a160:	4413      	add	r3, r2
 800a162:	b21b      	sxth	r3, r3
 800a164:	429e      	cmp	r6, r3
 800a166:	da09      	bge.n	800a17c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a168:	6823      	ldr	r3, [r4, #0]
 800a16a:	1ab2      	subs	r2, r6, r2
 800a16c:	1a69      	subs	r1, r5, r1
 800a16e:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 800a172:	b212      	sxth	r2, r2
 800a174:	463b      	mov	r3, r7
 800a176:	b209      	sxth	r1, r1
 800a178:	4620      	mov	r0, r4
 800a17a:	47c0      	blx	r8
 800a17c:	69a4      	ldr	r4, [r4, #24]
 800a17e:	e7db      	b.n	800a138 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800a180:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800a184 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 800a184:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a188:	4c6e      	ldr	r4, [pc, #440]	; (800a344 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 800a18a:	b0a1      	sub	sp, #132	; 0x84
 800a18c:	6824      	ldr	r4, [r4, #0]
 800a18e:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 800a190:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 800a194:	9303      	str	r3, [sp, #12]
 800a196:	2400      	movs	r4, #0
 800a198:	802c      	strh	r4, [r5, #0]
 800a19a:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 800a19c:	802c      	strh	r4, [r5, #0]
 800a19e:	601c      	str	r4, [r3, #0]
 800a1a0:	4606      	mov	r6, r0
 800a1a2:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800a1a6:	f7ff ffbd 	bl	800a124 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800a1aa:	f1b9 0f03 	cmp.w	r9, #3
 800a1ae:	f340 80c2 	ble.w	800a336 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 800a1b2:	4631      	mov	r1, r6
 800a1b4:	a80c      	add	r0, sp, #48	; 0x30
 800a1b6:	f007 fa9b 	bl	80116f0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800a1ba:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 800a1be:	9306      	str	r3, [sp, #24]
 800a1c0:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 800a1c4:	9307      	str	r3, [sp, #28]
 800a1c6:	9b03      	ldr	r3, [sp, #12]
 800a1c8:	f8d3 a000 	ldr.w	sl, [r3]
 800a1cc:	f1ba 0f00 	cmp.w	sl, #0
 800a1d0:	f000 80b4 	beq.w	800a33c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 800a1d4:	4651      	mov	r1, sl
 800a1d6:	a810      	add	r0, sp, #64	; 0x40
 800a1d8:	f007 fa8a 	bl	80116f0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800a1dc:	9b01      	ldr	r3, [sp, #4]
 800a1de:	9a06      	ldr	r2, [sp, #24]
 800a1e0:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 800a1e4:	189d      	adds	r5, r3, r2
 800a1e6:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 800a1ea:	9a07      	ldr	r2, [sp, #28]
 800a1ec:	2002      	movs	r0, #2
 800a1ee:	fb91 f1f0 	sdiv	r1, r1, r0
 800a1f2:	4419      	add	r1, r3
 800a1f4:	1a6d      	subs	r5, r5, r1
 800a1f6:	9b02      	ldr	r3, [sp, #8]
 800a1f8:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800a1fc:	4413      	add	r3, r2
 800a1fe:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 800a202:	fb92 f2f0 	sdiv	r2, r2, r0
 800a206:	440a      	add	r2, r1
 800a208:	1a9b      	subs	r3, r3, r2
 800a20a:	435b      	muls	r3, r3
 800a20c:	fb05 3505 	mla	r5, r5, r5, r3
 800a210:	4f4d      	ldr	r7, [pc, #308]	; (800a348 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 800a212:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800a214:	ac10      	add	r4, sp, #64	; 0x40
 800a216:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800a218:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800a21a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800a21c:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800a21e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800a220:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 800a224:	f1b9 0f0c 	cmp.w	r9, #12
 800a228:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800a22c:	f04f 0303 	mov.w	r3, #3
 800a230:	bfc8      	it	gt
 800a232:	4698      	movgt	r8, r3
 800a234:	f8cd 9000 	str.w	r9, [sp]
 800a238:	f04f 0400 	mov.w	r4, #0
 800a23c:	bfdc      	itt	le
 800a23e:	f109 32ff 	addle.w	r2, r9, #4294967295
 800a242:	fb92 f8f3 	sdivle	r8, r2, r3
 800a246:	1c63      	adds	r3, r4, #1
 800a248:	aa10      	add	r2, sp, #64	; 0x40
 800a24a:	f004 0401 	and.w	r4, r4, #1
 800a24e:	9308      	str	r3, [sp, #32]
 800a250:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 800a254:	9b00      	ldr	r3, [sp, #0]
 800a256:	fb93 f3f8 	sdiv	r3, r3, r8
 800a25a:	b29b      	uxth	r3, r3
 800a25c:	3404      	adds	r4, #4
 800a25e:	f04f 0b00 	mov.w	fp, #0
 800a262:	9304      	str	r3, [sp, #16]
 800a264:	9a04      	ldr	r2, [sp, #16]
 800a266:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800a26a:	fb13 f302 	smulbb	r3, r3, r2
 800a26e:	9a01      	ldr	r2, [sp, #4]
 800a270:	b29b      	uxth	r3, r3
 800a272:	1899      	adds	r1, r3, r2
 800a274:	9305      	str	r3, [sp, #20]
 800a276:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800a27a:	b209      	sxth	r1, r1
 800a27c:	4299      	cmp	r1, r3
 800a27e:	db4d      	blt.n	800a31c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800a280:	8932      	ldrh	r2, [r6, #8]
 800a282:	4413      	add	r3, r2
 800a284:	b21b      	sxth	r3, r3
 800a286:	4299      	cmp	r1, r3
 800a288:	da48      	bge.n	800a31c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800a28a:	9b04      	ldr	r3, [sp, #16]
 800a28c:	6827      	ldr	r7, [r4, #0]
 800a28e:	fb17 f703 	smulbb	r7, r7, r3
 800a292:	9b02      	ldr	r3, [sp, #8]
 800a294:	b2bf      	uxth	r7, r7
 800a296:	18fa      	adds	r2, r7, r3
 800a298:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800a29c:	b212      	sxth	r2, r2
 800a29e:	429a      	cmp	r2, r3
 800a2a0:	db3c      	blt.n	800a31c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800a2a2:	8970      	ldrh	r0, [r6, #10]
 800a2a4:	4403      	add	r3, r0
 800a2a6:	b21b      	sxth	r3, r3
 800a2a8:	429a      	cmp	r2, r3
 800a2aa:	da37      	bge.n	800a31c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800a2ac:	2300      	movs	r3, #0
 800a2ae:	930b      	str	r3, [sp, #44]	; 0x2c
 800a2b0:	4630      	mov	r0, r6
 800a2b2:	ab0b      	add	r3, sp, #44	; 0x2c
 800a2b4:	f7ff ff36 	bl	800a124 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800a2b8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800a2ba:	b37a      	cbz	r2, 800a31c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800a2bc:	4552      	cmp	r2, sl
 800a2be:	d02d      	beq.n	800a31c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800a2c0:	4611      	mov	r1, r2
 800a2c2:	a80e      	add	r0, sp, #56	; 0x38
 800a2c4:	9209      	str	r2, [sp, #36]	; 0x24
 800a2c6:	f007 fa13 	bl	80116f0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800a2ca:	9a06      	ldr	r2, [sp, #24]
 800a2cc:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 800a2d0:	9b01      	ldr	r3, [sp, #4]
 800a2d2:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 800a2d6:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 800a2da:	4413      	add	r3, r2
 800a2dc:	f04f 0e02 	mov.w	lr, #2
 800a2e0:	fb91 f1fe 	sdiv	r1, r1, lr
 800a2e4:	4401      	add	r1, r0
 800a2e6:	1a58      	subs	r0, r3, r1
 800a2e8:	9a07      	ldr	r2, [sp, #28]
 800a2ea:	9b02      	ldr	r3, [sp, #8]
 800a2ec:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 800a2f0:	fb9c fcfe 	sdiv	ip, ip, lr
 800a2f4:	4413      	add	r3, r2
 800a2f6:	448c      	add	ip, r1
 800a2f8:	eba3 030c 	sub.w	r3, r3, ip
 800a2fc:	435b      	muls	r3, r3
 800a2fe:	fb00 3300 	mla	r3, r0, r0, r3
 800a302:	42ab      	cmp	r3, r5
 800a304:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800a306:	d208      	bcs.n	800a31a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 800a308:	9803      	ldr	r0, [sp, #12]
 800a30a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800a30c:	6001      	str	r1, [r0, #0]
 800a30e:	992a      	ldr	r1, [sp, #168]	; 0xa8
 800a310:	9805      	ldr	r0, [sp, #20]
 800a312:	8008      	strh	r0, [r1, #0]
 800a314:	992b      	ldr	r1, [sp, #172]	; 0xac
 800a316:	461d      	mov	r5, r3
 800a318:	800f      	strh	r7, [r1, #0]
 800a31a:	4692      	mov	sl, r2
 800a31c:	f10b 0b01 	add.w	fp, fp, #1
 800a320:	f1bb 0f04 	cmp.w	fp, #4
 800a324:	f104 0408 	add.w	r4, r4, #8
 800a328:	d19c      	bne.n	800a264 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 800a32a:	9b00      	ldr	r3, [sp, #0]
 800a32c:	9c08      	ldr	r4, [sp, #32]
 800a32e:	444b      	add	r3, r9
 800a330:	4544      	cmp	r4, r8
 800a332:	9300      	str	r3, [sp, #0]
 800a334:	d187      	bne.n	800a246 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 800a336:	b021      	add	sp, #132	; 0x84
 800a338:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a33c:	f04f 35ff 	mov.w	r5, #4294967295
 800a340:	e766      	b.n	800a210 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 800a342:	bf00      	nop
 800a344:	2001535c 	.word	0x2001535c
 800a348:	08020f70 	.word	0x08020f70

0800a34c <_ZN8touchgfx4RectaNERKS0_>:
 800a34c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a350:	f9b1 7000 	ldrsh.w	r7, [r1]
 800a354:	888c      	ldrh	r4, [r1, #4]
 800a356:	f9b0 9000 	ldrsh.w	r9, [r0]
 800a35a:	443c      	add	r4, r7
 800a35c:	b2a4      	uxth	r4, r4
 800a35e:	fa0f f884 	sxth.w	r8, r4
 800a362:	45c1      	cmp	r9, r8
 800a364:	da2f      	bge.n	800a3c6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800a366:	8882      	ldrh	r2, [r0, #4]
 800a368:	444a      	add	r2, r9
 800a36a:	b292      	uxth	r2, r2
 800a36c:	fa0f fe82 	sxth.w	lr, r2
 800a370:	4577      	cmp	r7, lr
 800a372:	da28      	bge.n	800a3c6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800a374:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800a378:	88cb      	ldrh	r3, [r1, #6]
 800a37a:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800a37e:	442b      	add	r3, r5
 800a380:	b21b      	sxth	r3, r3
 800a382:	429e      	cmp	r6, r3
 800a384:	da1f      	bge.n	800a3c6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800a386:	88c3      	ldrh	r3, [r0, #6]
 800a388:	4433      	add	r3, r6
 800a38a:	b29b      	uxth	r3, r3
 800a38c:	fa0f fc83 	sxth.w	ip, r3
 800a390:	4565      	cmp	r5, ip
 800a392:	da18      	bge.n	800a3c6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800a394:	454f      	cmp	r7, r9
 800a396:	bfb8      	it	lt
 800a398:	464f      	movlt	r7, r9
 800a39a:	42b5      	cmp	r5, r6
 800a39c:	bfb8      	it	lt
 800a39e:	4635      	movlt	r5, r6
 800a3a0:	45f0      	cmp	r8, lr
 800a3a2:	bfd8      	it	le
 800a3a4:	4622      	movle	r2, r4
 800a3a6:	1bd2      	subs	r2, r2, r7
 800a3a8:	8082      	strh	r2, [r0, #4]
 800a3aa:	884a      	ldrh	r2, [r1, #2]
 800a3ac:	88c9      	ldrh	r1, [r1, #6]
 800a3ae:	8007      	strh	r7, [r0, #0]
 800a3b0:	440a      	add	r2, r1
 800a3b2:	b292      	uxth	r2, r2
 800a3b4:	b211      	sxth	r1, r2
 800a3b6:	458c      	cmp	ip, r1
 800a3b8:	bfa8      	it	ge
 800a3ba:	4613      	movge	r3, r2
 800a3bc:	1b5b      	subs	r3, r3, r5
 800a3be:	80c3      	strh	r3, [r0, #6]
 800a3c0:	8045      	strh	r5, [r0, #2]
 800a3c2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a3c6:	2300      	movs	r3, #0
 800a3c8:	8003      	strh	r3, [r0, #0]
 800a3ca:	8043      	strh	r3, [r0, #2]
 800a3cc:	8083      	strh	r3, [r0, #4]
 800a3ce:	80c3      	strh	r3, [r0, #6]
 800a3d0:	e7f7      	b.n	800a3c2 <_ZN8touchgfx4RectaNERKS0_+0x76>

0800a3d2 <_ZNK8touchgfx4Rect7isEmptyEv>:
 800a3d2:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800a3d6:	2b00      	cmp	r3, #0
 800a3d8:	dd06      	ble.n	800a3e8 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800a3da:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800a3de:	2800      	cmp	r0, #0
 800a3e0:	bfcc      	ite	gt
 800a3e2:	2000      	movgt	r0, #0
 800a3e4:	2001      	movle	r0, #1
 800a3e6:	4770      	bx	lr
 800a3e8:	2001      	movs	r0, #1
 800a3ea:	4770      	bx	lr

0800a3ec <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800a3ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a3f0:	2300      	movs	r3, #0
 800a3f2:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800a3f4:	8003      	strh	r3, [r0, #0]
 800a3f6:	4604      	mov	r4, r0
 800a3f8:	8043      	strh	r3, [r0, #2]
 800a3fa:	8083      	strh	r3, [r0, #4]
 800a3fc:	80c3      	strh	r3, [r0, #6]
 800a3fe:	2d00      	cmp	r5, #0
 800a400:	d040      	beq.n	800a484 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800a402:	1d28      	adds	r0, r5, #4
 800a404:	f7ff ffe5 	bl	800a3d2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800a408:	b988      	cbnz	r0, 800a42e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800a40a:	4620      	mov	r0, r4
 800a40c:	f7ff ffe1 	bl	800a3d2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800a410:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800a414:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800a418:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800a41c:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800a420:	b138      	cbz	r0, 800a432 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800a422:	8022      	strh	r2, [r4, #0]
 800a424:	8063      	strh	r3, [r4, #2]
 800a426:	f8a4 e004 	strh.w	lr, [r4, #4]
 800a42a:	f8a4 c006 	strh.w	ip, [r4, #6]
 800a42e:	69ad      	ldr	r5, [r5, #24]
 800a430:	e7e5      	b.n	800a3fe <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800a432:	f9b4 0000 	ldrsh.w	r0, [r4]
 800a436:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800a43a:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800a43e:	4290      	cmp	r0, r2
 800a440:	4607      	mov	r7, r0
 800a442:	bfa8      	it	ge
 800a444:	4617      	movge	r7, r2
 800a446:	4472      	add	r2, lr
 800a448:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800a44c:	8027      	strh	r7, [r4, #0]
 800a44e:	4299      	cmp	r1, r3
 800a450:	460e      	mov	r6, r1
 800a452:	4440      	add	r0, r8
 800a454:	bfa8      	it	ge
 800a456:	461e      	movge	r6, r3
 800a458:	4471      	add	r1, lr
 800a45a:	4463      	add	r3, ip
 800a45c:	b200      	sxth	r0, r0
 800a45e:	b212      	sxth	r2, r2
 800a460:	b209      	sxth	r1, r1
 800a462:	b21b      	sxth	r3, r3
 800a464:	4290      	cmp	r0, r2
 800a466:	bfac      	ite	ge
 800a468:	ebc7 0200 	rsbge	r2, r7, r0
 800a46c:	ebc7 0202 	rsblt	r2, r7, r2
 800a470:	4299      	cmp	r1, r3
 800a472:	bfac      	ite	ge
 800a474:	ebc6 0301 	rsbge	r3, r6, r1
 800a478:	ebc6 0303 	rsblt	r3, r6, r3
 800a47c:	8066      	strh	r6, [r4, #2]
 800a47e:	80a2      	strh	r2, [r4, #4]
 800a480:	80e3      	strh	r3, [r4, #6]
 800a482:	e7d4      	b.n	800a42e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800a484:	4620      	mov	r0, r4
 800a486:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800a48a <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800a48a:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800a48e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800a492:	b383      	cbz	r3, 800a4f6 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800a494:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800a496:	b374      	cbz	r4, 800a4f6 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800a498:	f9b1 5000 	ldrsh.w	r5, [r1]
 800a49c:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800a4a0:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800a4a4:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800a4a8:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800a4ac:	b303      	cbz	r3, 800a4f0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800a4ae:	4668      	mov	r0, sp
 800a4b0:	1d21      	adds	r1, r4, #4
 800a4b2:	f8ad 5000 	strh.w	r5, [sp]
 800a4b6:	f8ad 6002 	strh.w	r6, [sp, #2]
 800a4ba:	f8ad 7004 	strh.w	r7, [sp, #4]
 800a4be:	f8ad 8006 	strh.w	r8, [sp, #6]
 800a4c2:	f7ff ff43 	bl	800a34c <_ZN8touchgfx4RectaNERKS0_>
 800a4c6:	4668      	mov	r0, sp
 800a4c8:	f7ff ff83 	bl	800a3d2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800a4cc:	b980      	cbnz	r0, 800a4f0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800a4ce:	f8bd 3000 	ldrh.w	r3, [sp]
 800a4d2:	88a2      	ldrh	r2, [r4, #4]
 800a4d4:	1a9b      	subs	r3, r3, r2
 800a4d6:	f8ad 3000 	strh.w	r3, [sp]
 800a4da:	88e2      	ldrh	r2, [r4, #6]
 800a4dc:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800a4e0:	1a9b      	subs	r3, r3, r2
 800a4e2:	f8ad 3002 	strh.w	r3, [sp, #2]
 800a4e6:	6823      	ldr	r3, [r4, #0]
 800a4e8:	4669      	mov	r1, sp
 800a4ea:	689b      	ldr	r3, [r3, #8]
 800a4ec:	4620      	mov	r0, r4
 800a4ee:	4798      	blx	r3
 800a4f0:	69a4      	ldr	r4, [r4, #24]
 800a4f2:	2c00      	cmp	r4, #0
 800a4f4:	d1d8      	bne.n	800a4a8 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800a4f6:	b002      	add	sp, #8
 800a4f8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800a4fc <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800a4fc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a4fe:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800a502:	460d      	mov	r5, r1
 800a504:	4616      	mov	r6, r2
 800a506:	b323      	cbz	r3, 800a552 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800a508:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800a50a:	b314      	cbz	r4, 800a552 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800a50c:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800a510:	b1eb      	cbz	r3, 800a54e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800a512:	6828      	ldr	r0, [r5, #0]
 800a514:	6869      	ldr	r1, [r5, #4]
 800a516:	466b      	mov	r3, sp
 800a518:	c303      	stmia	r3!, {r0, r1}
 800a51a:	4668      	mov	r0, sp
 800a51c:	1d21      	adds	r1, r4, #4
 800a51e:	f7ff ff15 	bl	800a34c <_ZN8touchgfx4RectaNERKS0_>
 800a522:	4668      	mov	r0, sp
 800a524:	f7ff ff55 	bl	800a3d2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800a528:	b988      	cbnz	r0, 800a54e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800a52a:	f8bd 3000 	ldrh.w	r3, [sp]
 800a52e:	88a2      	ldrh	r2, [r4, #4]
 800a530:	1a9b      	subs	r3, r3, r2
 800a532:	f8ad 3000 	strh.w	r3, [sp]
 800a536:	88e2      	ldrh	r2, [r4, #6]
 800a538:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800a53c:	1a9b      	subs	r3, r3, r2
 800a53e:	f8ad 3002 	strh.w	r3, [sp, #2]
 800a542:	6823      	ldr	r3, [r4, #0]
 800a544:	4632      	mov	r2, r6
 800a546:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800a548:	4669      	mov	r1, sp
 800a54a:	4620      	mov	r0, r4
 800a54c:	4798      	blx	r3
 800a54e:	69a4      	ldr	r4, [r4, #24]
 800a550:	e7db      	b.n	800a50a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800a552:	b002      	add	sp, #8
 800a554:	bd70      	pop	{r4, r5, r6, pc}

0800a556 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800a556:	b513      	push	{r0, r1, r4, lr}
 800a558:	6803      	ldr	r3, [r0, #0]
 800a55a:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 800a55e:	2300      	movs	r3, #0
 800a560:	e9cd 3300 	strd	r3, r3, [sp]
 800a564:	466b      	mov	r3, sp
 800a566:	47a0      	blx	r4
 800a568:	b002      	add	sp, #8
 800a56a:	bd10      	pop	{r4, pc}

0800a56c <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800a56c:	2301      	movs	r3, #1
 800a56e:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800a572:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 800a576:	4770      	bx	lr

0800a578 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800a578:	2301      	movs	r3, #1
 800a57a:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800a57e:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 800a582:	4770      	bx	lr

0800a584 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800a584:	6843      	ldr	r3, [r0, #4]
 800a586:	2201      	movs	r2, #1
 800a588:	725a      	strb	r2, [r3, #9]
 800a58a:	6840      	ldr	r0, [r0, #4]
 800a58c:	6803      	ldr	r3, [r0, #0]
 800a58e:	691b      	ldr	r3, [r3, #16]
 800a590:	4718      	bx	r3

0800a592 <_ZN8touchgfx3HAL8flushDMAEv>:
 800a592:	6840      	ldr	r0, [r0, #4]
 800a594:	6803      	ldr	r3, [r0, #0]
 800a596:	689b      	ldr	r3, [r3, #8]
 800a598:	4718      	bx	r3

0800a59a <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 800a59a:	b530      	push	{r4, r5, lr}
 800a59c:	b08b      	sub	sp, #44	; 0x2c
 800a59e:	6804      	ldr	r4, [r0, #0]
 800a5a0:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 800a5a4:	9509      	str	r5, [sp, #36]	; 0x24
 800a5a6:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 800a5aa:	9508      	str	r5, [sp, #32]
 800a5ac:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 800a5b0:	9507      	str	r5, [sp, #28]
 800a5b2:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 800a5b6:	9506      	str	r5, [sp, #24]
 800a5b8:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 800a5bc:	9505      	str	r5, [sp, #20]
 800a5be:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 800a5c2:	9504      	str	r5, [sp, #16]
 800a5c4:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 800a5c8:	9503      	str	r5, [sp, #12]
 800a5ca:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 800a5ce:	9502      	str	r5, [sp, #8]
 800a5d0:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 800a5d4:	e9cd 3500 	strd	r3, r5, [sp]
 800a5d8:	4613      	mov	r3, r2
 800a5da:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 800a5dc:	2200      	movs	r2, #0
 800a5de:	47a0      	blx	r4
 800a5e0:	b00b      	add	sp, #44	; 0x2c
 800a5e2:	bd30      	pop	{r4, r5, pc}

0800a5e4 <_ZN8touchgfx3HAL10beginFrameEv>:
 800a5e4:	4b04      	ldr	r3, [pc, #16]	; (800a5f8 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800a5e6:	781b      	ldrb	r3, [r3, #0]
 800a5e8:	b123      	cbz	r3, 800a5f4 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800a5ea:	f890 006a 	ldrb.w	r0, [r0, #106]	; 0x6a
 800a5ee:	f080 0001 	eor.w	r0, r0, #1
 800a5f2:	4770      	bx	lr
 800a5f4:	2001      	movs	r0, #1
 800a5f6:	4770      	bx	lr
 800a5f8:	2001535a 	.word	0x2001535a

0800a5fc <_ZN8touchgfx3HAL8endFrameEv>:
 800a5fc:	b510      	push	{r4, lr}
 800a5fe:	4604      	mov	r4, r0
 800a600:	6840      	ldr	r0, [r0, #4]
 800a602:	6803      	ldr	r3, [r0, #0]
 800a604:	689b      	ldr	r3, [r3, #8]
 800a606:	4798      	blx	r3
 800a608:	f894 3069 	ldrb.w	r3, [r4, #105]	; 0x69
 800a60c:	b113      	cbz	r3, 800a614 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800a60e:	2301      	movs	r3, #1
 800a610:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800a614:	bd10      	pop	{r4, pc}

0800a616 <_ZN8touchgfx3HAL10initializeEv>:
 800a616:	b510      	push	{r4, lr}
 800a618:	4604      	mov	r4, r0
 800a61a:	f7f6 f965 	bl	80008e8 <_ZN8touchgfx10OSWrappers10initializeEv>
 800a61e:	6860      	ldr	r0, [r4, #4]
 800a620:	6803      	ldr	r3, [r0, #0]
 800a622:	68db      	ldr	r3, [r3, #12]
 800a624:	4798      	blx	r3
 800a626:	68e0      	ldr	r0, [r4, #12]
 800a628:	6803      	ldr	r3, [r0, #0]
 800a62a:	689b      	ldr	r3, [r3, #8]
 800a62c:	4798      	blx	r3
 800a62e:	6823      	ldr	r3, [r4, #0]
 800a630:	4620      	mov	r0, r4
 800a632:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800a634:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a638:	4718      	bx	r3
	...

0800a63c <_ZN8touchgfx3HAL4tickEv>:
 800a63c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800a63e:	6803      	ldr	r3, [r0, #0]
 800a640:	4d5b      	ldr	r5, [pc, #364]	; (800a7b0 <_ZN8touchgfx3HAL4tickEv+0x174>)
 800a642:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800a646:	4604      	mov	r4, r0
 800a648:	4798      	blx	r3
 800a64a:	2800      	cmp	r0, #0
 800a64c:	f000 8095 	beq.w	800a77a <_ZN8touchgfx3HAL4tickEv+0x13e>
 800a650:	2001      	movs	r0, #1
 800a652:	f7f6 f875 	bl	8000740 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800a656:	f894 3066 	ldrb.w	r3, [r4, #102]	; 0x66
 800a65a:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 800a65e:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 800a662:	2600      	movs	r6, #0
 800a664:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800a668:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 800a66c:	b133      	cbz	r3, 800a67c <_ZN8touchgfx3HAL4tickEv+0x40>
 800a66e:	6823      	ldr	r3, [r4, #0]
 800a670:	4620      	mov	r0, r4
 800a672:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 800a676:	4798      	blx	r3
 800a678:	f884 6075 	strb.w	r6, [r4, #117]	; 0x75
 800a67c:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 800a680:	6862      	ldr	r2, [r4, #4]
 800a682:	f083 0301 	eor.w	r3, r3, #1
 800a686:	7253      	strb	r3, [r2, #9]
 800a688:	2601      	movs	r6, #1
 800a68a:	702e      	strb	r6, [r5, #0]
 800a68c:	f005 fffe 	bl	801068c <_ZN8touchgfx11Application11getInstanceEv>
 800a690:	6803      	ldr	r3, [r0, #0]
 800a692:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800a694:	4798      	blx	r3
 800a696:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 800a69a:	b90b      	cbnz	r3, 800a6a0 <_ZN8touchgfx3HAL4tickEv+0x64>
 800a69c:	f884 6067 	strb.w	r6, [r4, #103]	; 0x67
 800a6a0:	f005 fff4 	bl	801068c <_ZN8touchgfx11Application11getInstanceEv>
 800a6a4:	6803      	ldr	r3, [r0, #0]
 800a6a6:	695b      	ldr	r3, [r3, #20]
 800a6a8:	4798      	blx	r3
 800a6aa:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800a6ac:	6803      	ldr	r3, [r0, #0]
 800a6ae:	691b      	ldr	r3, [r3, #16]
 800a6b0:	4798      	blx	r3
 800a6b2:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 800a6b6:	f894 2068 	ldrb.w	r2, [r4, #104]	; 0x68
 800a6ba:	3b01      	subs	r3, #1
 800a6bc:	b2db      	uxtb	r3, r3
 800a6be:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 800a6c2:	b10a      	cbz	r2, 800a6c8 <_ZN8touchgfx3HAL4tickEv+0x8c>
 800a6c4:	2b00      	cmp	r3, #0
 800a6c6:	d1eb      	bne.n	800a6a0 <_ZN8touchgfx3HAL4tickEv+0x64>
 800a6c8:	4a3a      	ldr	r2, [pc, #232]	; (800a7b4 <_ZN8touchgfx3HAL4tickEv+0x178>)
 800a6ca:	f994 1064 	ldrsb.w	r1, [r4, #100]	; 0x64
 800a6ce:	7813      	ldrb	r3, [r2, #0]
 800a6d0:	3301      	adds	r3, #1
 800a6d2:	b25b      	sxtb	r3, r3
 800a6d4:	4299      	cmp	r1, r3
 800a6d6:	7013      	strb	r3, [r2, #0]
 800a6d8:	dc10      	bgt.n	800a6fc <_ZN8touchgfx3HAL4tickEv+0xc0>
 800a6da:	68e0      	ldr	r0, [r4, #12]
 800a6dc:	2300      	movs	r3, #0
 800a6de:	7013      	strb	r3, [r2, #0]
 800a6e0:	6803      	ldr	r3, [r0, #0]
 800a6e2:	aa03      	add	r2, sp, #12
 800a6e4:	68db      	ldr	r3, [r3, #12]
 800a6e6:	a902      	add	r1, sp, #8
 800a6e8:	4798      	blx	r3
 800a6ea:	6823      	ldr	r3, [r4, #0]
 800a6ec:	2800      	cmp	r0, #0
 800a6ee:	d050      	beq.n	800a792 <_ZN8touchgfx3HAL4tickEv+0x156>
 800a6f0:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800a6f4:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800a6f8:	4620      	mov	r0, r4
 800a6fa:	4798      	blx	r3
 800a6fc:	6960      	ldr	r0, [r4, #20]
 800a6fe:	2300      	movs	r3, #0
 800a700:	f88d 3007 	strb.w	r3, [sp, #7]
 800a704:	b158      	cbz	r0, 800a71e <_ZN8touchgfx3HAL4tickEv+0xe2>
 800a706:	6803      	ldr	r3, [r0, #0]
 800a708:	f10d 0107 	add.w	r1, sp, #7
 800a70c:	68db      	ldr	r3, [r3, #12]
 800a70e:	4798      	blx	r3
 800a710:	b128      	cbz	r0, 800a71e <_ZN8touchgfx3HAL4tickEv+0xe2>
 800a712:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800a714:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800a718:	6803      	ldr	r3, [r0, #0]
 800a71a:	68db      	ldr	r3, [r3, #12]
 800a71c:	4798      	blx	r3
 800a71e:	f104 001c 	add.w	r0, r4, #28
 800a722:	f014 ff07 	bl	801f534 <_ZN8touchgfx8Gestures4tickEv>
 800a726:	f894 306c 	ldrb.w	r3, [r4, #108]	; 0x6c
 800a72a:	b30b      	cbz	r3, 800a770 <_ZN8touchgfx3HAL4tickEv+0x134>
 800a72c:	6920      	ldr	r0, [r4, #16]
 800a72e:	6803      	ldr	r3, [r0, #0]
 800a730:	691b      	ldr	r3, [r3, #16]
 800a732:	4798      	blx	r3
 800a734:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800a736:	4606      	mov	r6, r0
 800a738:	b903      	cbnz	r3, 800a73c <_ZN8touchgfx3HAL4tickEv+0x100>
 800a73a:	6720      	str	r0, [r4, #112]	; 0x70
 800a73c:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800a73e:	4a1e      	ldr	r2, [pc, #120]	; (800a7b8 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 800a740:	1af3      	subs	r3, r6, r3
 800a742:	4293      	cmp	r3, r2
 800a744:	d914      	bls.n	800a770 <_ZN8touchgfx3HAL4tickEv+0x134>
 800a746:	6920      	ldr	r0, [r4, #16]
 800a748:	6803      	ldr	r3, [r0, #0]
 800a74a:	699b      	ldr	r3, [r3, #24]
 800a74c:	4798      	blx	r3
 800a74e:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800a750:	2264      	movs	r2, #100	; 0x64
 800a752:	1af3      	subs	r3, r6, r3
 800a754:	fbb3 f3f2 	udiv	r3, r3, r2
 800a758:	fbb0 f0f3 	udiv	r0, r0, r3
 800a75c:	2800      	cmp	r0, #0
 800a75e:	dc1d      	bgt.n	800a79c <_ZN8touchgfx3HAL4tickEv+0x160>
 800a760:	f884 2065 	strb.w	r2, [r4, #101]	; 0x65
 800a764:	6920      	ldr	r0, [r4, #16]
 800a766:	6803      	ldr	r3, [r0, #0]
 800a768:	2100      	movs	r1, #0
 800a76a:	69db      	ldr	r3, [r3, #28]
 800a76c:	4798      	blx	r3
 800a76e:	6726      	str	r6, [r4, #112]	; 0x70
 800a770:	f005 ff8c 	bl	801068c <_ZN8touchgfx11Application11getInstanceEv>
 800a774:	6803      	ldr	r3, [r0, #0]
 800a776:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a778:	4798      	blx	r3
 800a77a:	6823      	ldr	r3, [r4, #0]
 800a77c:	4620      	mov	r0, r4
 800a77e:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800a782:	4798      	blx	r3
 800a784:	2001      	movs	r0, #1
 800a786:	f7f5 ffdc 	bl	8000742 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800a78a:	2300      	movs	r3, #0
 800a78c:	702b      	strb	r3, [r5, #0]
 800a78e:	b004      	add	sp, #16
 800a790:	bd70      	pop	{r4, r5, r6, pc}
 800a792:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 800a796:	4620      	mov	r0, r4
 800a798:	4798      	blx	r3
 800a79a:	e7af      	b.n	800a6fc <_ZN8touchgfx3HAL4tickEv+0xc0>
 800a79c:	2863      	cmp	r0, #99	; 0x63
 800a79e:	bfcb      	itete	gt
 800a7a0:	2300      	movgt	r3, #0
 800a7a2:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 800a7a6:	f884 3065 	strbgt.w	r3, [r4, #101]	; 0x65
 800a7aa:	f884 0065 	strble.w	r0, [r4, #101]	; 0x65
 800a7ae:	e7d9      	b.n	800a764 <_ZN8touchgfx3HAL4tickEv+0x128>
 800a7b0:	20015360 	.word	0x20015360
 800a7b4:	20015361 	.word	0x20015361
 800a7b8:	05f5e100 	.word	0x05f5e100

0800a7bc <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800a7bc:	f7f6 b8c4 	b.w	8000948 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800a7c0 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800a7c0:	6581      	str	r1, [r0, #88]	; 0x58
 800a7c2:	301c      	adds	r0, #28
 800a7c4:	f014 beb4 	b.w	801f530 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800a7c8 <_ZN8touchgfx3HAL5touchEll>:
 800a7c8:	b530      	push	{r4, r5, lr}
 800a7ca:	b087      	sub	sp, #28
 800a7cc:	4604      	mov	r4, r0
 800a7ce:	a804      	add	r0, sp, #16
 800a7d0:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800a7d4:	f005 fd1c 	bl	8010210 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800a7d8:	9b04      	ldr	r3, [sp, #16]
 800a7da:	f8ad 300c 	strh.w	r3, [sp, #12]
 800a7de:	a906      	add	r1, sp, #24
 800a7e0:	9b05      	ldr	r3, [sp, #20]
 800a7e2:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800a7e6:	a803      	add	r0, sp, #12
 800a7e8:	f005 fd64 	bl	80102b4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800a7ec:	f894 106b 	ldrb.w	r1, [r4, #107]	; 0x6b
 800a7f0:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800a7f4:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800a7f8:	f104 001c 	add.w	r0, r4, #28
 800a7fc:	b189      	cbz	r1, 800a822 <_ZN8touchgfx3HAL5touchEll+0x5a>
 800a7fe:	f8b4 5060 	ldrh.w	r5, [r4, #96]	; 0x60
 800a802:	9300      	str	r3, [sp, #0]
 800a804:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 800a808:	4613      	mov	r3, r2
 800a80a:	462a      	mov	r2, r5
 800a80c:	f014 fea0 	bl	801f550 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800a810:	b128      	cbz	r0, 800a81e <_ZN8touchgfx3HAL5touchEll+0x56>
 800a812:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800a816:	65e3      	str	r3, [r4, #92]	; 0x5c
 800a818:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800a81c:	6623      	str	r3, [r4, #96]	; 0x60
 800a81e:	b007      	add	sp, #28
 800a820:	bd30      	pop	{r4, r5, pc}
 800a822:	f014 fed5 	bl	801f5d0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800a826:	2301      	movs	r3, #1
 800a828:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800a82c:	e7f1      	b.n	800a812 <_ZN8touchgfx3HAL5touchEll+0x4a>

0800a82e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800a82e:	b510      	push	{r4, lr}
 800a830:	2b00      	cmp	r3, #0
 800a832:	d046      	beq.n	800a8c2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800a834:	ea81 0002 	eor.w	r0, r1, r2
 800a838:	07c4      	lsls	r4, r0, #31
 800a83a:	d508      	bpl.n	800a84e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800a83c:	440b      	add	r3, r1
 800a83e:	3a01      	subs	r2, #1
 800a840:	428b      	cmp	r3, r1
 800a842:	d93e      	bls.n	800a8c2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800a844:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800a848:	f801 0b01 	strb.w	r0, [r1], #1
 800a84c:	e7f8      	b.n	800a840 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800a84e:	07d0      	lsls	r0, r2, #31
 800a850:	bf42      	ittt	mi
 800a852:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800a856:	f801 0b01 	strbmi.w	r0, [r1], #1
 800a85a:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800a85e:	2b01      	cmp	r3, #1
 800a860:	d911      	bls.n	800a886 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800a862:	ea81 0402 	eor.w	r4, r1, r2
 800a866:	07a4      	lsls	r4, r4, #30
 800a868:	4610      	mov	r0, r2
 800a86a:	d022      	beq.n	800a8b2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 800a86c:	f023 0401 	bic.w	r4, r3, #1
 800a870:	440c      	add	r4, r1
 800a872:	428c      	cmp	r4, r1
 800a874:	4602      	mov	r2, r0
 800a876:	d904      	bls.n	800a882 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 800a878:	8812      	ldrh	r2, [r2, #0]
 800a87a:	f821 2b02 	strh.w	r2, [r1], #2
 800a87e:	3002      	adds	r0, #2
 800a880:	e7f7      	b.n	800a872 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 800a882:	f003 0301 	and.w	r3, r3, #1
 800a886:	f023 0003 	bic.w	r0, r3, #3
 800a88a:	4408      	add	r0, r1
 800a88c:	4288      	cmp	r0, r1
 800a88e:	4614      	mov	r4, r2
 800a890:	d904      	bls.n	800a89c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 800a892:	6824      	ldr	r4, [r4, #0]
 800a894:	f841 4b04 	str.w	r4, [r1], #4
 800a898:	3204      	adds	r2, #4
 800a89a:	e7f7      	b.n	800a88c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 800a89c:	f003 0303 	and.w	r3, r3, #3
 800a8a0:	440b      	add	r3, r1
 800a8a2:	3a01      	subs	r2, #1
 800a8a4:	428b      	cmp	r3, r1
 800a8a6:	d90c      	bls.n	800a8c2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800a8a8:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800a8ac:	f801 0b01 	strb.w	r0, [r1], #1
 800a8b0:	e7f8      	b.n	800a8a4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 800a8b2:	0790      	lsls	r0, r2, #30
 800a8b4:	d0e7      	beq.n	800a886 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800a8b6:	f832 0b02 	ldrh.w	r0, [r2], #2
 800a8ba:	f821 0b02 	strh.w	r0, [r1], #2
 800a8be:	3b02      	subs	r3, #2
 800a8c0:	e7e1      	b.n	800a886 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800a8c2:	2001      	movs	r0, #1
 800a8c4:	bd10      	pop	{r4, pc}

0800a8c6 <_ZN8touchgfx3HAL7noTouchEv>:
 800a8c6:	b510      	push	{r4, lr}
 800a8c8:	f890 306b 	ldrb.w	r3, [r0, #107]	; 0x6b
 800a8cc:	4604      	mov	r4, r0
 800a8ce:	b153      	cbz	r3, 800a8e6 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800a8d0:	f8b0 3060 	ldrh.w	r3, [r0, #96]	; 0x60
 800a8d4:	f8b0 205c 	ldrh.w	r2, [r0, #92]	; 0x5c
 800a8d8:	2101      	movs	r1, #1
 800a8da:	301c      	adds	r0, #28
 800a8dc:	f014 fe78 	bl	801f5d0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800a8e0:	2300      	movs	r3, #0
 800a8e2:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800a8e6:	bd10      	pop	{r4, pc}

0800a8e8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800a8e8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a8ec:	b085      	sub	sp, #20
 800a8ee:	ad04      	add	r5, sp, #16
 800a8f0:	4604      	mov	r4, r0
 800a8f2:	2000      	movs	r0, #0
 800a8f4:	f845 0d04 	str.w	r0, [r5, #-4]!
 800a8f8:	69a0      	ldr	r0, [r4, #24]
 800a8fa:	6806      	ldr	r6, [r0, #0]
 800a8fc:	9501      	str	r5, [sp, #4]
 800a8fe:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 800a902:	9500      	str	r5, [sp, #0]
 800a904:	6835      	ldr	r5, [r6, #0]
 800a906:	4699      	mov	r9, r3
 800a908:	460f      	mov	r7, r1
 800a90a:	4690      	mov	r8, r2
 800a90c:	47a8      	blx	r5
 800a90e:	4d10      	ldr	r5, [pc, #64]	; (800a950 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 800a910:	4606      	mov	r6, r0
 800a912:	f8a5 9000 	strh.w	r9, [r5]
 800a916:	f7f7 fd6d 	bl	80023f4 <_ZN8touchgfx3HAL3lcdEv>
 800a91a:	6803      	ldr	r3, [r0, #0]
 800a91c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a91e:	4798      	blx	r3
 800a920:	b128      	cbz	r0, 800a92e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 800a922:	2801      	cmp	r0, #1
 800a924:	d00b      	beq.n	800a93e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 800a926:	4630      	mov	r0, r6
 800a928:	b005      	add	sp, #20
 800a92a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a92e:	882b      	ldrh	r3, [r5, #0]
 800a930:	fb08 7203 	mla	r2, r8, r3, r7
 800a934:	9b03      	ldr	r3, [sp, #12]
 800a936:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800a93a:	63e3      	str	r3, [r4, #60]	; 0x3c
 800a93c:	e7f3      	b.n	800a926 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800a93e:	882a      	ldrh	r2, [r5, #0]
 800a940:	9b03      	ldr	r3, [sp, #12]
 800a942:	fb08 7202 	mla	r2, r8, r2, r7
 800a946:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800a94a:	1a9a      	subs	r2, r3, r2
 800a94c:	63e2      	str	r2, [r4, #60]	; 0x3c
 800a94e:	e7ea      	b.n	800a926 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800a950:	20015356 	.word	0x20015356

0800a954 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 800a954:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a956:	b08b      	sub	sp, #44	; 0x2c
 800a958:	4617      	mov	r7, r2
 800a95a:	4604      	mov	r4, r0
 800a95c:	460e      	mov	r6, r1
 800a95e:	461d      	mov	r5, r3
 800a960:	f7f7 fd48 	bl	80023f4 <_ZN8touchgfx3HAL3lcdEv>
 800a964:	6803      	ldr	r3, [r0, #0]
 800a966:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a968:	4798      	blx	r3
 800a96a:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800a96e:	9007      	str	r0, [sp, #28]
 800a970:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800a974:	4b0d      	ldr	r3, [pc, #52]	; (800a9ac <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 800a976:	6822      	ldr	r2, [r4, #0]
 800a978:	881b      	ldrh	r3, [r3, #0]
 800a97a:	9306      	str	r3, [sp, #24]
 800a97c:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800a980:	9305      	str	r3, [sp, #20]
 800a982:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 800a986:	9304      	str	r3, [sp, #16]
 800a988:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800a98c:	9303      	str	r3, [sp, #12]
 800a98e:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800a992:	9302      	str	r3, [sp, #8]
 800a994:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800a998:	e9cd 5300 	strd	r5, r3, [sp]
 800a99c:	4631      	mov	r1, r6
 800a99e:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 800a9a0:	463b      	mov	r3, r7
 800a9a2:	2200      	movs	r2, #0
 800a9a4:	4620      	mov	r0, r4
 800a9a6:	47a8      	blx	r5
 800a9a8:	b00b      	add	sp, #44	; 0x2c
 800a9aa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a9ac:	20015356 	.word	0x20015356

0800a9b0 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 800a9b0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a9b4:	4698      	mov	r8, r3
 800a9b6:	6803      	ldr	r3, [r0, #0]
 800a9b8:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 800a9ba:	4b15      	ldr	r3, [pc, #84]	; (800aa10 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 800a9bc:	b08b      	sub	sp, #44	; 0x2c
 800a9be:	4617      	mov	r7, r2
 800a9c0:	f8b3 9000 	ldrh.w	r9, [r3]
 800a9c4:	460e      	mov	r6, r1
 800a9c6:	4604      	mov	r4, r0
 800a9c8:	f7f7 fd14 	bl	80023f4 <_ZN8touchgfx3HAL3lcdEv>
 800a9cc:	6803      	ldr	r3, [r0, #0]
 800a9ce:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a9d0:	4798      	blx	r3
 800a9d2:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800a9d6:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800a9da:	2302      	movs	r3, #2
 800a9dc:	e9cd 9306 	strd	r9, r3, [sp, #24]
 800a9e0:	2301      	movs	r3, #1
 800a9e2:	9305      	str	r3, [sp, #20]
 800a9e4:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800a9e8:	9304      	str	r3, [sp, #16]
 800a9ea:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800a9ee:	9303      	str	r3, [sp, #12]
 800a9f0:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800a9f4:	9302      	str	r3, [sp, #8]
 800a9f6:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800a9fa:	2200      	movs	r2, #0
 800a9fc:	e9cd 8300 	strd	r8, r3, [sp]
 800aa00:	4631      	mov	r1, r6
 800aa02:	463b      	mov	r3, r7
 800aa04:	4620      	mov	r0, r4
 800aa06:	47a8      	blx	r5
 800aa08:	b00b      	add	sp, #44	; 0x2c
 800aa0a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800aa0e:	bf00      	nop
 800aa10:	20015356 	.word	0x20015356

0800aa14 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 800aa14:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800aa18:	4698      	mov	r8, r3
 800aa1a:	6803      	ldr	r3, [r0, #0]
 800aa1c:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 800aa1e:	4b11      	ldr	r3, [pc, #68]	; (800aa64 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 800aa20:	b087      	sub	sp, #28
 800aa22:	f8b3 9000 	ldrh.w	r9, [r3]
 800aa26:	460e      	mov	r6, r1
 800aa28:	4617      	mov	r7, r2
 800aa2a:	4604      	mov	r4, r0
 800aa2c:	f7f7 fce2 	bl	80023f4 <_ZN8touchgfx3HAL3lcdEv>
 800aa30:	6803      	ldr	r3, [r0, #0]
 800aa32:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800aa34:	4798      	blx	r3
 800aa36:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 800aa3a:	f8cd 900c 	str.w	r9, [sp, #12]
 800aa3e:	e9cd 0304 	strd	r0, r3, [sp, #16]
 800aa42:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 800aa46:	9302      	str	r3, [sp, #8]
 800aa48:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800aa4c:	9301      	str	r3, [sp, #4]
 800aa4e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800aa52:	9300      	str	r3, [sp, #0]
 800aa54:	463a      	mov	r2, r7
 800aa56:	4643      	mov	r3, r8
 800aa58:	4631      	mov	r1, r6
 800aa5a:	4620      	mov	r0, r4
 800aa5c:	47a8      	blx	r5
 800aa5e:	b007      	add	sp, #28
 800aa60:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800aa64:	20015356 	.word	0x20015356

0800aa68 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800aa68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800aa6c:	4604      	mov	r4, r0
 800aa6e:	b08f      	sub	sp, #60	; 0x3c
 800aa70:	4610      	mov	r0, r2
 800aa72:	460d      	mov	r5, r1
 800aa74:	4691      	mov	r9, r2
 800aa76:	461e      	mov	r6, r3
 800aa78:	f008 ffa4 	bl	80139c4 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800aa7c:	2800      	cmp	r0, #0
 800aa7e:	f000 809d 	beq.w	800abbc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 800aa82:	6823      	ldr	r3, [r4, #0]
 800aa84:	f8df b198 	ldr.w	fp, [pc, #408]	; 800ac20 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 800aa88:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800aa8a:	f8df a198 	ldr.w	sl, [pc, #408]	; 800ac24 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 800aa8e:	4f61      	ldr	r7, [pc, #388]	; (800ac14 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800aa90:	4620      	mov	r0, r4
 800aa92:	4798      	blx	r3
 800aa94:	6823      	ldr	r3, [r4, #0]
 800aa96:	4620      	mov	r0, r4
 800aa98:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800aa9a:	4798      	blx	r3
 800aa9c:	f8bb 3000 	ldrh.w	r3, [fp]
 800aaa0:	9301      	str	r3, [sp, #4]
 800aaa2:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 800aaa6:	f8ba 3000 	ldrh.w	r3, [sl]
 800aaaa:	9302      	str	r3, [sp, #8]
 800aaac:	883b      	ldrh	r3, [r7, #0]
 800aaae:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 800aab2:	9303      	str	r3, [sp, #12]
 800aab4:	4b58      	ldr	r3, [pc, #352]	; (800ac18 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800aab6:	9305      	str	r3, [sp, #20]
 800aab8:	881a      	ldrh	r2, [r3, #0]
 800aaba:	9204      	str	r2, [sp, #16]
 800aabc:	4640      	mov	r0, r8
 800aabe:	f009 f815 	bl	8013aec <_ZNK8touchgfx6Bitmap8getWidthEv>
 800aac2:	8038      	strh	r0, [r7, #0]
 800aac4:	4640      	mov	r0, r8
 800aac6:	f009 f845 	bl	8013b54 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800aaca:	9b05      	ldr	r3, [sp, #20]
 800aacc:	b280      	uxth	r0, r0
 800aace:	8018      	strh	r0, [r3, #0]
 800aad0:	4b52      	ldr	r3, [pc, #328]	; (800ac1c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 800aad2:	781b      	ldrb	r3, [r3, #0]
 800aad4:	2b00      	cmp	r3, #0
 800aad6:	d174      	bne.n	800abc2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 800aad8:	883b      	ldrh	r3, [r7, #0]
 800aada:	f8ab 3000 	strh.w	r3, [fp]
 800aade:	f8aa 0000 	strh.w	r0, [sl]
 800aae2:	4648      	mov	r0, r9
 800aae4:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 800aae8:	f008 ff6c 	bl	80139c4 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800aaec:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 800aaf0:	2200      	movs	r2, #0
 800aaf2:	4611      	mov	r1, r2
 800aaf4:	4628      	mov	r0, r5
 800aaf6:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 800aafa:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 800aafe:	f7f8 f88d 	bl	8002c1c <_ZN8touchgfx8Drawable5setXYEss>
 800ab02:	2301      	movs	r3, #1
 800ab04:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 800ab08:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 800ab0c:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800ab10:	2b00      	cmp	r3, #0
 800ab12:	dd5c      	ble.n	800abce <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800ab14:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800ab18:	2b00      	cmp	r3, #0
 800ab1a:	dd58      	ble.n	800abce <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800ab1c:	462a      	mov	r2, r5
 800ab1e:	ab0a      	add	r3, sp, #40	; 0x28
 800ab20:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800ab24:	6851      	ldr	r1, [r2, #4]
 800ab26:	c303      	stmia	r3!, {r0, r1}
 800ab28:	4631      	mov	r1, r6
 800ab2a:	a80a      	add	r0, sp, #40	; 0x28
 800ab2c:	f7ff fc0e 	bl	800a34c <_ZN8touchgfx4RectaNERKS0_>
 800ab30:	4b38      	ldr	r3, [pc, #224]	; (800ac14 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800ab32:	f9b3 2000 	ldrsh.w	r2, [r3]
 800ab36:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 800ab3a:	2100      	movs	r1, #0
 800ab3c:	aa0a      	add	r2, sp, #40	; 0x28
 800ab3e:	4b36      	ldr	r3, [pc, #216]	; (800ac18 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800ab40:	910c      	str	r1, [sp, #48]	; 0x30
 800ab42:	e892 0003 	ldmia.w	r2, {r0, r1}
 800ab46:	f9b3 3000 	ldrsh.w	r3, [r3]
 800ab4a:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800ab4e:	ab08      	add	r3, sp, #32
 800ab50:	e883 0003 	stmia.w	r3, {r0, r1}
 800ab54:	4618      	mov	r0, r3
 800ab56:	a90c      	add	r1, sp, #48	; 0x30
 800ab58:	f7ff fbf8 	bl	800a34c <_ZN8touchgfx4RectaNERKS0_>
 800ab5c:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 800ab5e:	2b00      	cmp	r3, #0
 800ab60:	d13c      	bne.n	800abdc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 800ab62:	2000      	movs	r0, #0
 800ab64:	f884 0076 	strb.w	r0, [r4, #118]	; 0x76
 800ab68:	2600      	movs	r6, #0
 800ab6a:	682a      	ldr	r2, [r5, #0]
 800ab6c:	696b      	ldr	r3, [r5, #20]
 800ab6e:	616e      	str	r6, [r5, #20]
 800ab70:	9305      	str	r3, [sp, #20]
 800ab72:	6892      	ldr	r2, [r2, #8]
 800ab74:	a908      	add	r1, sp, #32
 800ab76:	4628      	mov	r0, r5
 800ab78:	4790      	blx	r2
 800ab7a:	9b05      	ldr	r3, [sp, #20]
 800ab7c:	616b      	str	r3, [r5, #20]
 800ab7e:	4652      	mov	r2, sl
 800ab80:	f884 6076 	strb.w	r6, [r4, #118]	; 0x76
 800ab84:	4649      	mov	r1, r9
 800ab86:	4628      	mov	r0, r5
 800ab88:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 800ab8c:	f7f8 f846 	bl	8002c1c <_ZN8touchgfx8Drawable5setXYEss>
 800ab90:	4b23      	ldr	r3, [pc, #140]	; (800ac20 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 800ab92:	9a01      	ldr	r2, [sp, #4]
 800ab94:	801a      	strh	r2, [r3, #0]
 800ab96:	4b23      	ldr	r3, [pc, #140]	; (800ac24 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 800ab98:	9a02      	ldr	r2, [sp, #8]
 800ab9a:	801a      	strh	r2, [r3, #0]
 800ab9c:	4b1d      	ldr	r3, [pc, #116]	; (800ac14 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800ab9e:	9a03      	ldr	r2, [sp, #12]
 800aba0:	801a      	strh	r2, [r3, #0]
 800aba2:	4b1d      	ldr	r3, [pc, #116]	; (800ac18 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800aba4:	9a04      	ldr	r2, [sp, #16]
 800aba6:	801a      	strh	r2, [r3, #0]
 800aba8:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 800abac:	6823      	ldr	r3, [r4, #0]
 800abae:	4620      	mov	r0, r4
 800abb0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800abb2:	4798      	blx	r3
 800abb4:	6823      	ldr	r3, [r4, #0]
 800abb6:	4620      	mov	r0, r4
 800abb8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800abba:	4798      	blx	r3
 800abbc:	b00f      	add	sp, #60	; 0x3c
 800abbe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800abc2:	883b      	ldrh	r3, [r7, #0]
 800abc4:	f8ab 0000 	strh.w	r0, [fp]
 800abc8:	f8aa 3000 	strh.w	r3, [sl]
 800abcc:	e789      	b.n	800aae2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 800abce:	462a      	mov	r2, r5
 800abd0:	ab0a      	add	r3, sp, #40	; 0x28
 800abd2:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800abd6:	6851      	ldr	r1, [r2, #4]
 800abd8:	c303      	stmia	r3!, {r0, r1}
 800abda:	e7a9      	b.n	800ab30 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 800abdc:	a807      	add	r0, sp, #28
 800abde:	f009 f8f5 	bl	8013dcc <_ZNK8touchgfx6Bitmap9getFormatEv>
 800abe2:	4606      	mov	r6, r0
 800abe4:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 800abe6:	6803      	ldr	r3, [r0, #0]
 800abe8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800abea:	4798      	blx	r3
 800abec:	4286      	cmp	r6, r0
 800abee:	d1b8      	bne.n	800ab62 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 800abf0:	f7f7 fc00 	bl	80023f4 <_ZN8touchgfx3HAL3lcdEv>
 800abf4:	6803      	ldr	r3, [r0, #0]
 800abf6:	4606      	mov	r6, r0
 800abf8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800abfa:	9305      	str	r3, [sp, #20]
 800abfc:	a807      	add	r0, sp, #28
 800abfe:	f009 f8e5 	bl	8013dcc <_ZNK8touchgfx6Bitmap9getFormatEv>
 800ac02:	9b05      	ldr	r3, [sp, #20]
 800ac04:	4601      	mov	r1, r0
 800ac06:	4630      	mov	r0, r6
 800ac08:	4798      	blx	r3
 800ac0a:	f080 0001 	eor.w	r0, r0, #1
 800ac0e:	b2c0      	uxtb	r0, r0
 800ac10:	e7a8      	b.n	800ab64 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 800ac12:	bf00      	nop
 800ac14:	20015350 	.word	0x20015350
 800ac18:	20015352 	.word	0x20015352
 800ac1c:	20015354 	.word	0x20015354
 800ac20:	20015356 	.word	0x20015356
 800ac24:	20015358 	.word	0x20015358

0800ac28 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800ac28:	b510      	push	{r4, lr}
 800ac2a:	4b07      	ldr	r3, [pc, #28]	; (800ac48 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800ac2c:	781b      	ldrb	r3, [r3, #0]
 800ac2e:	4604      	mov	r4, r0
 800ac30:	b13b      	cbz	r3, 800ac42 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800ac32:	6803      	ldr	r3, [r0, #0]
 800ac34:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800ac36:	4798      	blx	r3
 800ac38:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800ac3a:	4283      	cmp	r3, r0
 800ac3c:	d101      	bne.n	800ac42 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800ac3e:	6c20      	ldr	r0, [r4, #64]	; 0x40
 800ac40:	bd10      	pop	{r4, pc}
 800ac42:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 800ac44:	e7fc      	b.n	800ac40 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800ac46:	bf00      	nop
 800ac48:	2001535a 	.word	0x2001535a

0800ac4c <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 800ac4c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ac50:	b08a      	sub	sp, #40	; 0x28
 800ac52:	461d      	mov	r5, r3
 800ac54:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800ac58:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800ac5c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800ac60:	f8ad 3018 	strh.w	r3, [sp, #24]
 800ac64:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800ac68:	f8ad 301a 	strh.w	r3, [sp, #26]
 800ac6c:	2400      	movs	r4, #0
 800ac6e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800ac72:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 800ac76:	f8ad 301c 	strh.w	r3, [sp, #28]
 800ac7a:	4690      	mov	r8, r2
 800ac7c:	4607      	mov	r7, r0
 800ac7e:	9404      	str	r4, [sp, #16]
 800ac80:	f88d 4020 	strb.w	r4, [sp, #32]
 800ac84:	f7ff ffd0 	bl	800ac28 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800ac88:	fb06 8505 	mla	r5, r6, r5, r8
 800ac8c:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800ac90:	6878      	ldr	r0, [r7, #4]
 800ac92:	9505      	str	r5, [sp, #20]
 800ac94:	f8ad 601e 	strh.w	r6, [sp, #30]
 800ac98:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800ac9c:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 800aca0:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 800aca4:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 800aca8:	6803      	ldr	r3, [r0, #0]
 800acaa:	a901      	add	r1, sp, #4
 800acac:	685b      	ldr	r3, [r3, #4]
 800acae:	4798      	blx	r3
 800acb0:	b00a      	add	sp, #40	; 0x28
 800acb2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800acb6 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 800acb6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800acba:	b08b      	sub	sp, #44	; 0x2c
 800acbc:	2400      	movs	r4, #0
 800acbe:	461d      	mov	r5, r3
 800acc0:	f44f 6300 	mov.w	r3, #2048	; 0x800
 800acc4:	4688      	mov	r8, r1
 800acc6:	4691      	mov	r9, r2
 800acc8:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 800accc:	9404      	str	r4, [sp, #16]
 800acce:	4607      	mov	r7, r0
 800acd0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800acd4:	f7ff ffa8 	bl	800ac28 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800acd8:	fb06 9505 	mla	r5, r6, r5, r9
 800acdc:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800ace0:	f8ad 3018 	strh.w	r3, [sp, #24]
 800ace4:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800ace8:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800acec:	6878      	ldr	r0, [r7, #4]
 800acee:	9505      	str	r5, [sp, #20]
 800acf0:	f8ad 301a 	strh.w	r3, [sp, #26]
 800acf4:	f8ad 401c 	strh.w	r4, [sp, #28]
 800acf8:	f8ad 601e 	strh.w	r6, [sp, #30]
 800acfc:	f8cd 8010 	str.w	r8, [sp, #16]
 800ad00:	f8ad 4020 	strh.w	r4, [sp, #32]
 800ad04:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800ad08:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 800ad0c:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 800ad10:	6803      	ldr	r3, [r0, #0]
 800ad12:	a901      	add	r1, sp, #4
 800ad14:	685b      	ldr	r3, [r3, #4]
 800ad16:	4798      	blx	r3
 800ad18:	b00b      	add	sp, #44	; 0x2c
 800ad1a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

0800ad20 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 800ad20:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ad24:	b08a      	sub	sp, #40	; 0x28
 800ad26:	4698      	mov	r8, r3
 800ad28:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 800ad2c:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 800ad30:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 800ad34:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 800ad38:	2300      	movs	r3, #0
 800ad3a:	2d0b      	cmp	r5, #11
 800ad3c:	4606      	mov	r6, r0
 800ad3e:	9304      	str	r3, [sp, #16]
 800ad40:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 800ad44:	d138      	bne.n	800adb8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 800ad46:	2380      	movs	r3, #128	; 0x80
 800ad48:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800ad4c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800ad50:	f8ad 3018 	strh.w	r3, [sp, #24]
 800ad54:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800ad58:	f8ad 301a 	strh.w	r3, [sp, #26]
 800ad5c:	f88d 0020 	strb.w	r0, [sp, #32]
 800ad60:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800ad64:	f8ad 301c 	strh.w	r3, [sp, #28]
 800ad68:	4630      	mov	r0, r6
 800ad6a:	9203      	str	r2, [sp, #12]
 800ad6c:	f7ff ff5c 	bl	800ac28 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800ad70:	2c0b      	cmp	r4, #11
 800ad72:	bf98      	it	ls
 800ad74:	4b1b      	ldrls	r3, [pc, #108]	; (800ade4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 800ad76:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 800ad7a:	bf98      	it	ls
 800ad7c:	5d19      	ldrbls	r1, [r3, r4]
 800ad7e:	f8ad 701e 	strh.w	r7, [sp, #30]
 800ad82:	bf88      	it	hi
 800ad84:	2100      	movhi	r1, #0
 800ad86:	fb02 8307 	mla	r3, r2, r7, r8
 800ad8a:	10c9      	asrs	r1, r1, #3
 800ad8c:	fb01 0003 	mla	r0, r1, r3, r0
 800ad90:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 800ad94:	9005      	str	r0, [sp, #20]
 800ad96:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 800ad9a:	6870      	ldr	r0, [r6, #4]
 800ad9c:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 800ada0:	2300      	movs	r3, #0
 800ada2:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800ada6:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800adaa:	6803      	ldr	r3, [r0, #0]
 800adac:	a901      	add	r1, sp, #4
 800adae:	685b      	ldr	r3, [r3, #4]
 800adb0:	4798      	blx	r3
 800adb2:	b00a      	add	sp, #40	; 0x28
 800adb4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800adb8:	2d02      	cmp	r5, #2
 800adba:	d109      	bne.n	800add0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 800adbc:	28ff      	cmp	r0, #255	; 0xff
 800adbe:	d105      	bne.n	800adcc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 800adc0:	f1bc 0f00 	cmp.w	ip, #0
 800adc4:	bf14      	ite	ne
 800adc6:	2340      	movne	r3, #64	; 0x40
 800adc8:	2320      	moveq	r3, #32
 800adca:	e7bd      	b.n	800ad48 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800adcc:	2340      	movs	r3, #64	; 0x40
 800adce:	e7bb      	b.n	800ad48 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800add0:	28ff      	cmp	r0, #255	; 0xff
 800add2:	d105      	bne.n	800ade0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 800add4:	f1bc 0f00 	cmp.w	ip, #0
 800add8:	bf14      	ite	ne
 800adda:	2304      	movne	r3, #4
 800addc:	2301      	moveq	r3, #1
 800adde:	e7b3      	b.n	800ad48 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800ade0:	2304      	movs	r3, #4
 800ade2:	e7b1      	b.n	800ad48 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800ade4:	08022cc4 	.word	0x08022cc4

0800ade8 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 800ade8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800adec:	b08b      	sub	sp, #44	; 0x2c
 800adee:	461d      	mov	r5, r3
 800adf0:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 800adf4:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 800adf8:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 800adfc:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 800ae00:	bf14      	ite	ne
 800ae02:	2308      	movne	r3, #8
 800ae04:	2302      	moveq	r3, #2
 800ae06:	2400      	movs	r4, #0
 800ae08:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800ae0c:	4688      	mov	r8, r1
 800ae0e:	4693      	mov	fp, r2
 800ae10:	9404      	str	r4, [sp, #16]
 800ae12:	4607      	mov	r7, r0
 800ae14:	f7ff ff08 	bl	800ac28 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800ae18:	2e0b      	cmp	r6, #11
 800ae1a:	bf98      	it	ls
 800ae1c:	4b15      	ldrls	r3, [pc, #84]	; (800ae74 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 800ae1e:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 800ae22:	bf98      	it	ls
 800ae24:	5d9c      	ldrbls	r4, [r3, r6]
 800ae26:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800ae2a:	f8ad 3018 	strh.w	r3, [sp, #24]
 800ae2e:	fb05 b50a 	mla	r5, r5, sl, fp
 800ae32:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800ae36:	f8ad 301a 	strh.w	r3, [sp, #26]
 800ae3a:	10e4      	asrs	r4, r4, #3
 800ae3c:	fb04 0405 	mla	r4, r4, r5, r0
 800ae40:	2300      	movs	r3, #0
 800ae42:	6878      	ldr	r0, [r7, #4]
 800ae44:	9405      	str	r4, [sp, #20]
 800ae46:	f8ad 301c 	strh.w	r3, [sp, #28]
 800ae4a:	f8ad a01e 	strh.w	sl, [sp, #30]
 800ae4e:	f8cd 8010 	str.w	r8, [sp, #16]
 800ae52:	f88d 9020 	strb.w	r9, [sp, #32]
 800ae56:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 800ae5a:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800ae5e:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 800ae62:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 800ae66:	6803      	ldr	r3, [r0, #0]
 800ae68:	a901      	add	r1, sp, #4
 800ae6a:	685b      	ldr	r3, [r3, #4]
 800ae6c:	4798      	blx	r3
 800ae6e:	b00b      	add	sp, #44	; 0x2c
 800ae70:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ae74:	08022cc4 	.word	0x08022cc4

0800ae78 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800ae78:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ae7c:	461e      	mov	r6, r3
 800ae7e:	4b0a      	ldr	r3, [pc, #40]	; (800aea8 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 800ae80:	460f      	mov	r7, r1
 800ae82:	881d      	ldrh	r5, [r3, #0]
 800ae84:	4690      	mov	r8, r2
 800ae86:	f7f7 fab5 	bl	80023f4 <_ZN8touchgfx3HAL3lcdEv>
 800ae8a:	6803      	ldr	r3, [r0, #0]
 800ae8c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ae8e:	4798      	blx	r3
 800ae90:	280b      	cmp	r0, #11
 800ae92:	bf9a      	itte	ls
 800ae94:	4b05      	ldrls	r3, [pc, #20]	; (800aeac <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800ae96:	5c1c      	ldrbls	r4, [r3, r0]
 800ae98:	2400      	movhi	r4, #0
 800ae9a:	fb08 7005 	mla	r0, r8, r5, r7
 800ae9e:	10e4      	asrs	r4, r4, #3
 800aea0:	fb04 6000 	mla	r0, r4, r0, r6
 800aea4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800aea8:	20015356 	.word	0x20015356
 800aeac:	08022cc4 	.word	0x08022cc4

0800aeb0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 800aeb0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800aeb2:	b08b      	sub	sp, #44	; 0x2c
 800aeb4:	461f      	mov	r7, r3
 800aeb6:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800aeba:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800aebe:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800aec2:	f8ad 3018 	strh.w	r3, [sp, #24]
 800aec6:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800aeca:	f8ad 301a 	strh.w	r3, [sp, #26]
 800aece:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800aed2:	f8ad 301c 	strh.w	r3, [sp, #28]
 800aed6:	2500      	movs	r5, #0
 800aed8:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800aedc:	f88d 3020 	strb.w	r3, [sp, #32]
 800aee0:	4604      	mov	r4, r0
 800aee2:	4616      	mov	r6, r2
 800aee4:	9504      	str	r5, [sp, #16]
 800aee6:	f7ff fe9f 	bl	800ac28 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800aeea:	463a      	mov	r2, r7
 800aeec:	4631      	mov	r1, r6
 800aeee:	4603      	mov	r3, r0
 800aef0:	4620      	mov	r0, r4
 800aef2:	f7ff ffc1 	bl	800ae78 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800aef6:	4b0e      	ldr	r3, [pc, #56]	; (800af30 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 800aef8:	9005      	str	r0, [sp, #20]
 800aefa:	881b      	ldrh	r3, [r3, #0]
 800aefc:	f8ad 301e 	strh.w	r3, [sp, #30]
 800af00:	f7f7 fa78 	bl	80023f4 <_ZN8touchgfx3HAL3lcdEv>
 800af04:	6803      	ldr	r3, [r0, #0]
 800af06:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800af08:	4798      	blx	r3
 800af0a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800af0c:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 800af10:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 800af14:	9304      	str	r3, [sp, #16]
 800af16:	6860      	ldr	r0, [r4, #4]
 800af18:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800af1c:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 800af20:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 800af24:	6803      	ldr	r3, [r0, #0]
 800af26:	a901      	add	r1, sp, #4
 800af28:	685b      	ldr	r3, [r3, #4]
 800af2a:	4798      	blx	r3
 800af2c:	b00b      	add	sp, #44	; 0x2c
 800af2e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800af30:	20015356 	.word	0x20015356

0800af34 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800af34:	b5f0      	push	{r4, r5, r6, r7, lr}
 800af36:	b08d      	sub	sp, #52	; 0x34
 800af38:	466b      	mov	r3, sp
 800af3a:	e883 0006 	stmia.w	r3, {r1, r2}
 800af3e:	2300      	movs	r3, #0
 800af40:	9306      	str	r3, [sp, #24]
 800af42:	6803      	ldr	r3, [r0, #0]
 800af44:	f8bd 6000 	ldrh.w	r6, [sp]
 800af48:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800af4a:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800af4e:	2501      	movs	r5, #1
 800af50:	9503      	str	r5, [sp, #12]
 800af52:	4604      	mov	r4, r0
 800af54:	4798      	blx	r3
 800af56:	463a      	mov	r2, r7
 800af58:	4631      	mov	r1, r6
 800af5a:	4603      	mov	r3, r0
 800af5c:	4620      	mov	r0, r4
 800af5e:	f7ff ff8b 	bl	800ae78 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800af62:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800af64:	9307      	str	r3, [sp, #28]
 800af66:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800af6a:	f8ad 3020 	strh.w	r3, [sp, #32]
 800af6e:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800af72:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800af76:	4b0f      	ldr	r3, [pc, #60]	; (800afb4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 800af78:	9004      	str	r0, [sp, #16]
 800af7a:	881b      	ldrh	r3, [r3, #0]
 800af7c:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800af80:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800af84:	f7f7 fa36 	bl	80023f4 <_ZN8touchgfx3HAL3lcdEv>
 800af88:	6803      	ldr	r3, [r0, #0]
 800af8a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800af8c:	4798      	blx	r3
 800af8e:	23ff      	movs	r3, #255	; 0xff
 800af90:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 800af94:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800af98:	6860      	ldr	r0, [r4, #4]
 800af9a:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 800af9e:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800afa2:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800afa6:	6803      	ldr	r3, [r0, #0]
 800afa8:	a903      	add	r1, sp, #12
 800afaa:	685b      	ldr	r3, [r3, #4]
 800afac:	4798      	blx	r3
 800afae:	6c60      	ldr	r0, [r4, #68]	; 0x44
 800afb0:	b00d      	add	sp, #52	; 0x34
 800afb2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800afb4:	20015356 	.word	0x20015356

0800afb8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800afb8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800afbc:	b08c      	sub	sp, #48	; 0x30
 800afbe:	461e      	mov	r6, r3
 800afc0:	466d      	mov	r5, sp
 800afc2:	2300      	movs	r3, #0
 800afc4:	e885 0006 	stmia.w	r5, {r1, r2}
 800afc8:	9306      	str	r3, [sp, #24]
 800afca:	6803      	ldr	r3, [r0, #0]
 800afcc:	f8bd 7000 	ldrh.w	r7, [sp]
 800afd0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800afd2:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 800afd6:	2501      	movs	r5, #1
 800afd8:	9503      	str	r5, [sp, #12]
 800afda:	4604      	mov	r4, r0
 800afdc:	4798      	blx	r3
 800afde:	4642      	mov	r2, r8
 800afe0:	4639      	mov	r1, r7
 800afe2:	4603      	mov	r3, r0
 800afe4:	4620      	mov	r0, r4
 800afe6:	f7ff ff47 	bl	800ae78 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800afea:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800afee:	f8ad 3020 	strh.w	r3, [sp, #32]
 800aff2:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800aff6:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800affa:	4b11      	ldr	r3, [pc, #68]	; (800b040 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 800affc:	9004      	str	r0, [sp, #16]
 800affe:	881b      	ldrh	r3, [r3, #0]
 800b000:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800b004:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800b006:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800b00a:	9607      	str	r6, [sp, #28]
 800b00c:	f7f7 f9f2 	bl	80023f4 <_ZN8touchgfx3HAL3lcdEv>
 800b010:	6803      	ldr	r3, [r0, #0]
 800b012:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b014:	4798      	blx	r3
 800b016:	23ff      	movs	r3, #255	; 0xff
 800b018:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 800b01c:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800b020:	6860      	ldr	r0, [r4, #4]
 800b022:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 800b026:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800b02a:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800b02e:	6803      	ldr	r3, [r0, #0]
 800b030:	a903      	add	r1, sp, #12
 800b032:	685b      	ldr	r3, [r3, #4]
 800b034:	4798      	blx	r3
 800b036:	4630      	mov	r0, r6
 800b038:	b00c      	add	sp, #48	; 0x30
 800b03a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b03e:	bf00      	nop
 800b040:	20015356 	.word	0x20015356

0800b044 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 800b044:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b046:	b085      	sub	sp, #20
 800b048:	ac02      	add	r4, sp, #8
 800b04a:	e884 0006 	stmia.w	r4, {r1, r2}
 800b04e:	4605      	mov	r5, r0
 800b050:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 800b054:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 800b058:	f7ff fde6 	bl	800ac28 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b05c:	463a      	mov	r2, r7
 800b05e:	4603      	mov	r3, r0
 800b060:	4631      	mov	r1, r6
 800b062:	4628      	mov	r0, r5
 800b064:	f7ff ff08 	bl	800ae78 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b068:	4a05      	ldr	r2, [pc, #20]	; (800b080 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 800b06a:	682b      	ldr	r3, [r5, #0]
 800b06c:	8812      	ldrh	r2, [r2, #0]
 800b06e:	9200      	str	r2, [sp, #0]
 800b070:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 800b072:	e894 0006 	ldmia.w	r4, {r1, r2}
 800b076:	4603      	mov	r3, r0
 800b078:	4628      	mov	r0, r5
 800b07a:	47b0      	blx	r6
 800b07c:	b005      	add	sp, #20
 800b07e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b080:	20015356 	.word	0x20015356

0800b084 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800b084:	b570      	push	{r4, r5, r6, lr}
 800b086:	f890 306a 	ldrb.w	r3, [r0, #106]	; 0x6a
 800b08a:	4604      	mov	r4, r0
 800b08c:	b19b      	cbz	r3, 800b0b6 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800b08e:	2002      	movs	r0, #2
 800b090:	f7f5 fb58 	bl	8000744 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800b094:	2300      	movs	r3, #0
 800b096:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800b09a:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 800b09e:	6823      	ldr	r3, [r4, #0]
 800b0a0:	4620      	mov	r0, r4
 800b0a2:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 800b0a6:	f7ff fdbf 	bl	800ac28 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b0aa:	462b      	mov	r3, r5
 800b0ac:	4601      	mov	r1, r0
 800b0ae:	4620      	mov	r0, r4
 800b0b0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b0b4:	4718      	bx	r3
 800b0b6:	bd70      	pop	{r4, r5, r6, pc}

0800b0b8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 800b0b8:	b538      	push	{r3, r4, r5, lr}
 800b0ba:	f890 3078 	ldrb.w	r3, [r0, #120]	; 0x78
 800b0be:	428b      	cmp	r3, r1
 800b0c0:	4604      	mov	r4, r0
 800b0c2:	460d      	mov	r5, r1
 800b0c4:	d006      	beq.n	800b0d4 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 800b0c6:	6803      	ldr	r3, [r0, #0]
 800b0c8:	b929      	cbnz	r1, 800b0d6 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 800b0ca:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 800b0ce:	4798      	blx	r3
 800b0d0:	f884 5078 	strb.w	r5, [r4, #120]	; 0x78
 800b0d4:	bd38      	pop	{r3, r4, r5, pc}
 800b0d6:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 800b0da:	e7f8      	b.n	800b0ce <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0800b0dc <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800b0dc:	b510      	push	{r4, lr}
 800b0de:	4b0d      	ldr	r3, [pc, #52]	; (800b114 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 800b0e0:	781b      	ldrb	r3, [r3, #0]
 800b0e2:	4604      	mov	r4, r0
 800b0e4:	b95b      	cbnz	r3, 800b0fe <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800b0e6:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 800b0ea:	2b02      	cmp	r3, #2
 800b0ec:	d007      	beq.n	800b0fe <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800b0ee:	6840      	ldr	r0, [r0, #4]
 800b0f0:	f000 f92a 	bl	800b348 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800b0f4:	b118      	cbz	r0, 800b0fe <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800b0f6:	6862      	ldr	r2, [r4, #4]
 800b0f8:	7a53      	ldrb	r3, [r2, #9]
 800b0fa:	2b00      	cmp	r3, #0
 800b0fc:	d0fc      	beq.n	800b0f8 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 800b0fe:	f7f5 fc1b 	bl	8000938 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800b102:	4620      	mov	r0, r4
 800b104:	2100      	movs	r1, #0
 800b106:	f7ff ffd7 	bl	800b0b8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800b10a:	4620      	mov	r0, r4
 800b10c:	f7ff fd8c 	bl	800ac28 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b110:	bd10      	pop	{r4, pc}
 800b112:	bf00      	nop
 800b114:	2001535a 	.word	0x2001535a

0800b118 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 800b118:	b570      	push	{r4, r5, r6, lr}
 800b11a:	4604      	mov	r4, r0
 800b11c:	6803      	ldr	r3, [r0, #0]
 800b11e:	b919      	cbnz	r1, 800b128 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 800b120:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b122:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b126:	4718      	bx	r3
 800b128:	2200      	movs	r2, #0
 800b12a:	f890 6078 	ldrb.w	r6, [r0, #120]	; 0x78
 800b12e:	f880 2078 	strb.w	r2, [r0, #120]	; 0x78
 800b132:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b134:	4798      	blx	r3
 800b136:	f884 6078 	strb.w	r6, [r4, #120]	; 0x78
 800b13a:	4605      	mov	r5, r0
 800b13c:	2101      	movs	r1, #1
 800b13e:	4620      	mov	r0, r4
 800b140:	f7ff ffba 	bl	800b0b8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800b144:	4628      	mov	r0, r5
 800b146:	bd70      	pop	{r4, r5, r6, pc}

0800b148 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800b148:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800b14c:	1a13      	subs	r3, r2, r0
 800b14e:	4258      	negs	r0, r3
 800b150:	4158      	adcs	r0, r3
 800b152:	4770      	bx	lr

0800b154 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800b154:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800b158:	1a9b      	subs	r3, r3, r2
 800b15a:	2b00      	cmp	r3, #0
 800b15c:	bfdc      	itt	le
 800b15e:	6882      	ldrle	r2, [r0, #8]
 800b160:	189b      	addle	r3, r3, r2
 800b162:	2b01      	cmp	r3, #1
 800b164:	bfcc      	ite	gt
 800b166:	2000      	movgt	r0, #0
 800b168:	2001      	movle	r0, #1
 800b16a:	4770      	bx	lr

0800b16c <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800b16c:	6902      	ldr	r2, [r0, #16]
 800b16e:	6843      	ldr	r3, [r0, #4]
 800b170:	2024      	movs	r0, #36	; 0x24
 800b172:	fb00 3002 	mla	r0, r0, r2, r3
 800b176:	4770      	bx	lr

0800b178 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800b178:	6803      	ldr	r3, [r0, #0]
 800b17a:	691b      	ldr	r3, [r3, #16]
 800b17c:	4718      	bx	r3

0800b17e <_ZN8touchgfx13DMA_Interface7executeEv>:
 800b17e:	b570      	push	{r4, r5, r6, lr}
 800b180:	2301      	movs	r3, #1
 800b182:	7203      	strb	r3, [r0, #8]
 800b184:	4604      	mov	r4, r0
 800b186:	6840      	ldr	r0, [r0, #4]
 800b188:	6803      	ldr	r3, [r0, #0]
 800b18a:	699b      	ldr	r3, [r3, #24]
 800b18c:	4798      	blx	r3
 800b18e:	6803      	ldr	r3, [r0, #0]
 800b190:	2b40      	cmp	r3, #64	; 0x40
 800b192:	4605      	mov	r5, r0
 800b194:	d00c      	beq.n	800b1b0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800b196:	d810      	bhi.n	800b1ba <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 800b198:	2b04      	cmp	r3, #4
 800b19a:	d01d      	beq.n	800b1d8 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 800b19c:	d804      	bhi.n	800b1a8 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 800b19e:	2b01      	cmp	r3, #1
 800b1a0:	d006      	beq.n	800b1b0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800b1a2:	2b02      	cmp	r3, #2
 800b1a4:	d02c      	beq.n	800b200 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 800b1a6:	bd70      	pop	{r4, r5, r6, pc}
 800b1a8:	2b08      	cmp	r3, #8
 800b1aa:	d01d      	beq.n	800b1e8 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 800b1ac:	2b20      	cmp	r3, #32
 800b1ae:	d1fa      	bne.n	800b1a6 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 800b1b0:	6823      	ldr	r3, [r4, #0]
 800b1b2:	4620      	mov	r0, r4
 800b1b4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800b1b6:	4798      	blx	r3
 800b1b8:	e013      	b.n	800b1e2 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800b1ba:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800b1be:	d0f7      	beq.n	800b1b0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800b1c0:	d804      	bhi.n	800b1cc <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 800b1c2:	2b80      	cmp	r3, #128	; 0x80
 800b1c4:	d0f4      	beq.n	800b1b0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800b1c6:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800b1ca:	e7f0      	b.n	800b1ae <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 800b1cc:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800b1d0:	d0ee      	beq.n	800b1b0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800b1d2:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800b1d6:	e7e5      	b.n	800b1a4 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 800b1d8:	6823      	ldr	r3, [r4, #0]
 800b1da:	7f01      	ldrb	r1, [r0, #28]
 800b1dc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b1de:	4620      	mov	r0, r4
 800b1e0:	4798      	blx	r3
 800b1e2:	6823      	ldr	r3, [r4, #0]
 800b1e4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b1e6:	e006      	b.n	800b1f6 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800b1e8:	6823      	ldr	r3, [r4, #0]
 800b1ea:	7f01      	ldrb	r1, [r0, #28]
 800b1ec:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b1ee:	4620      	mov	r0, r4
 800b1f0:	4798      	blx	r3
 800b1f2:	6823      	ldr	r3, [r4, #0]
 800b1f4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800b1f6:	4629      	mov	r1, r5
 800b1f8:	4620      	mov	r0, r4
 800b1fa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b1fe:	4718      	bx	r3
 800b200:	6823      	ldr	r3, [r4, #0]
 800b202:	4620      	mov	r0, r4
 800b204:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800b206:	4798      	blx	r3
 800b208:	e7f3      	b.n	800b1f2 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

0800b20a <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800b20a:	4770      	bx	lr

0800b20c <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800b20c:	4770      	bx	lr

0800b20e <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800b20e:	4770      	bx	lr

0800b210 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800b210:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 800b214:	1ad2      	subs	r2, r2, r3
 800b216:	2a00      	cmp	r2, #0
 800b218:	b510      	push	{r4, lr}
 800b21a:	bfdc      	itt	le
 800b21c:	6884      	ldrle	r4, [r0, #8]
 800b21e:	1912      	addle	r2, r2, r4
 800b220:	2a01      	cmp	r2, #1
 800b222:	dd16      	ble.n	800b252 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 800b224:	6842      	ldr	r2, [r0, #4]
 800b226:	2424      	movs	r4, #36	; 0x24
 800b228:	fb04 2303 	mla	r3, r4, r3, r2
 800b22c:	f101 0220 	add.w	r2, r1, #32
 800b230:	f851 4b04 	ldr.w	r4, [r1], #4
 800b234:	f843 4b04 	str.w	r4, [r3], #4
 800b238:	4291      	cmp	r1, r2
 800b23a:	d1f9      	bne.n	800b230 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 800b23c:	780a      	ldrb	r2, [r1, #0]
 800b23e:	701a      	strb	r2, [r3, #0]
 800b240:	68c3      	ldr	r3, [r0, #12]
 800b242:	6882      	ldr	r2, [r0, #8]
 800b244:	f3bf 8f5b 	dmb	ish
 800b248:	3301      	adds	r3, #1
 800b24a:	429a      	cmp	r2, r3
 800b24c:	bfd8      	it	le
 800b24e:	1a9b      	suble	r3, r3, r2
 800b250:	60c3      	str	r3, [r0, #12]
 800b252:	bd10      	pop	{r4, pc}

0800b254 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800b254:	6903      	ldr	r3, [r0, #16]
 800b256:	6882      	ldr	r2, [r0, #8]
 800b258:	f3bf 8f5b 	dmb	ish
 800b25c:	3301      	adds	r3, #1
 800b25e:	429a      	cmp	r2, r3
 800b260:	bfd8      	it	le
 800b262:	1a9b      	suble	r3, r3, r2
 800b264:	6103      	str	r3, [r0, #16]
 800b266:	4770      	bx	lr

0800b268 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800b268:	b570      	push	{r4, r5, r6, lr}
 800b26a:	4604      	mov	r4, r0
 800b26c:	460e      	mov	r6, r1
 800b26e:	6860      	ldr	r0, [r4, #4]
 800b270:	6803      	ldr	r3, [r0, #0]
 800b272:	685b      	ldr	r3, [r3, #4]
 800b274:	4798      	blx	r3
 800b276:	2800      	cmp	r0, #0
 800b278:	d1f9      	bne.n	800b26e <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800b27a:	4d0d      	ldr	r5, [pc, #52]	; (800b2b0 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800b27c:	6828      	ldr	r0, [r5, #0]
 800b27e:	6803      	ldr	r3, [r0, #0]
 800b280:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800b282:	4798      	blx	r3
 800b284:	f7f5 fb66 	bl	8000954 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800b288:	6828      	ldr	r0, [r5, #0]
 800b28a:	2101      	movs	r1, #1
 800b28c:	f7ff ff14 	bl	800b0b8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800b290:	6860      	ldr	r0, [r4, #4]
 800b292:	6803      	ldr	r3, [r0, #0]
 800b294:	4631      	mov	r1, r6
 800b296:	689b      	ldr	r3, [r3, #8]
 800b298:	4798      	blx	r3
 800b29a:	6823      	ldr	r3, [r4, #0]
 800b29c:	4620      	mov	r0, r4
 800b29e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b2a0:	4798      	blx	r3
 800b2a2:	6828      	ldr	r0, [r5, #0]
 800b2a4:	6803      	ldr	r3, [r0, #0]
 800b2a6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b2aa:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800b2ac:	4718      	bx	r3
 800b2ae:	bf00      	nop
 800b2b0:	2001535c 	.word	0x2001535c

0800b2b4 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800b2b4:	b508      	push	{r3, lr}
 800b2b6:	f7f5 fb3f 	bl	8000938 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800b2ba:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800b2be:	f7f5 bb43 	b.w	8000948 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800b2c2 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800b2c2:	b510      	push	{r4, lr}
 800b2c4:	2114      	movs	r1, #20
 800b2c6:	4604      	mov	r4, r0
 800b2c8:	f014 fcfc 	bl	801fcc4 <_ZdlPvj>
 800b2cc:	4620      	mov	r0, r4
 800b2ce:	bd10      	pop	{r4, pc}

0800b2d0 <_ZN8touchgfx13DMA_Interface5startEv>:
 800b2d0:	b510      	push	{r4, lr}
 800b2d2:	4604      	mov	r4, r0
 800b2d4:	6840      	ldr	r0, [r0, #4]
 800b2d6:	6803      	ldr	r3, [r0, #0]
 800b2d8:	681b      	ldr	r3, [r3, #0]
 800b2da:	4798      	blx	r3
 800b2dc:	b948      	cbnz	r0, 800b2f2 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800b2de:	7a63      	ldrb	r3, [r4, #9]
 800b2e0:	b13b      	cbz	r3, 800b2f2 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800b2e2:	7a23      	ldrb	r3, [r4, #8]
 800b2e4:	b92b      	cbnz	r3, 800b2f2 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800b2e6:	6823      	ldr	r3, [r4, #0]
 800b2e8:	4620      	mov	r0, r4
 800b2ea:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b2ec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b2f0:	4718      	bx	r3
 800b2f2:	bd10      	pop	{r4, pc}

0800b2f4 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800b2f4:	b570      	push	{r4, r5, r6, lr}
 800b2f6:	4604      	mov	r4, r0
 800b2f8:	6840      	ldr	r0, [r0, #4]
 800b2fa:	6803      	ldr	r3, [r0, #0]
 800b2fc:	681b      	ldr	r3, [r3, #0]
 800b2fe:	4798      	blx	r3
 800b300:	4605      	mov	r5, r0
 800b302:	b930      	cbnz	r0, 800b312 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800b304:	7a23      	ldrb	r3, [r4, #8]
 800b306:	b123      	cbz	r3, 800b312 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800b308:	6860      	ldr	r0, [r4, #4]
 800b30a:	6803      	ldr	r3, [r0, #0]
 800b30c:	695b      	ldr	r3, [r3, #20]
 800b30e:	4798      	blx	r3
 800b310:	7225      	strb	r5, [r4, #8]
 800b312:	6860      	ldr	r0, [r4, #4]
 800b314:	6803      	ldr	r3, [r0, #0]
 800b316:	681b      	ldr	r3, [r3, #0]
 800b318:	4798      	blx	r3
 800b31a:	b928      	cbnz	r0, 800b328 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800b31c:	6823      	ldr	r3, [r4, #0]
 800b31e:	4620      	mov	r0, r4
 800b320:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b322:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b326:	4718      	bx	r3
 800b328:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b32c:	f7f5 bb1a 	b.w	8000964 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800b330 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800b330:	b510      	push	{r4, lr}
 800b332:	4c04      	ldr	r4, [pc, #16]	; (800b344 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800b334:	6082      	str	r2, [r0, #8]
 800b336:	2200      	movs	r2, #0
 800b338:	e9c0 4100 	strd	r4, r1, [r0]
 800b33c:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800b340:	bd10      	pop	{r4, pc}
 800b342:	bf00      	nop
 800b344:	08022cd8 	.word	0x08022cd8

0800b348 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800b348:	6840      	ldr	r0, [r0, #4]
 800b34a:	6803      	ldr	r3, [r0, #0]
 800b34c:	681b      	ldr	r3, [r3, #0]
 800b34e:	4718      	bx	r3

0800b350 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 800b350:	4b06      	ldr	r3, [pc, #24]	; (800b36c <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
 800b352:	60c1      	str	r1, [r0, #12]
 800b354:	094a      	lsrs	r2, r1, #5
 800b356:	ea03 2311 	and.w	r3, r3, r1, lsr #8
 800b35a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 800b35e:	4313      	orrs	r3, r2
 800b360:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 800b364:	4319      	orrs	r1, r3
 800b366:	8201      	strh	r1, [r0, #16]
 800b368:	4770      	bx	lr
 800b36a:	bf00      	nop
 800b36c:	fffff800 	.word	0xfffff800

0800b370 <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 800b370:	f1a0 0008 	sub.w	r0, r0, #8
 800b374:	e7ec      	b.n	800b350 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 800b376:	bf00      	nop

0800b378 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 800b378:	b508      	push	{r3, lr}
 800b37a:	4b05      	ldr	r3, [pc, #20]	; (800b390 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 800b37c:	6818      	ldr	r0, [r3, #0]
 800b37e:	6803      	ldr	r3, [r0, #0]
 800b380:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 800b384:	4798      	blx	r3
 800b386:	1e43      	subs	r3, r0, #1
 800b388:	4258      	negs	r0, r3
 800b38a:	4158      	adcs	r0, r3
 800b38c:	bd08      	pop	{r3, pc}
 800b38e:	bf00      	nop
 800b390:	2001535c 	.word	0x2001535c

0800b394 <_ZN8touchgfx13PainterRGB565D1Ev>:
 800b394:	4770      	bx	lr

0800b396 <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 800b396:	3808      	subs	r0, #8
 800b398:	4770      	bx	lr

0800b39a <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 800b39a:	b430      	push	{r4, r5}
 800b39c:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 800b3a0:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 800b3a4:	8a02      	ldrh	r2, [r0, #16]
 800b3a6:	9202      	str	r2, [sp, #8]
 800b3a8:	f89d 3010 	ldrb.w	r3, [sp, #16]
 800b3ac:	68c2      	ldr	r2, [r0, #12]
 800b3ae:	4629      	mov	r1, r5
 800b3b0:	4620      	mov	r0, r4
 800b3b2:	bc30      	pop	{r4, r5}
 800b3b4:	f7f5 bc94 	b.w	8000ce0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

0800b3b8 <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 800b3b8:	f7f5 bc88 	b.w	8000ccc <_ZN8touchgfx5paint6rgb5658tearDownEv>

0800b3bc <_ZN8touchgfx13PainterRGB565D0Ev>:
 800b3bc:	b510      	push	{r4, lr}
 800b3be:	2114      	movs	r1, #20
 800b3c0:	4604      	mov	r4, r0
 800b3c2:	f014 fc7f 	bl	801fcc4 <_ZdlPvj>
 800b3c6:	4620      	mov	r0, r4
 800b3c8:	bd10      	pop	{r4, pc}

0800b3ca <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 800b3ca:	f1a0 0008 	sub.w	r0, r0, #8
 800b3ce:	e7f5      	b.n	800b3bc <_ZN8touchgfx13PainterRGB565D0Ev>

0800b3d0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 800b3d0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800b3d2:	6803      	ldr	r3, [r0, #0]
 800b3d4:	460d      	mov	r5, r1
 800b3d6:	4604      	mov	r4, r0
 800b3d8:	4601      	mov	r1, r0
 800b3da:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800b3dc:	a802      	add	r0, sp, #8
 800b3de:	4798      	blx	r3
 800b3e0:	6828      	ldr	r0, [r5, #0]
 800b3e2:	6869      	ldr	r1, [r5, #4]
 800b3e4:	466b      	mov	r3, sp
 800b3e6:	c303      	stmia	r3!, {r0, r1}
 800b3e8:	4668      	mov	r0, sp
 800b3ea:	4619      	mov	r1, r3
 800b3ec:	f7fe ffae 	bl	800a34c <_ZN8touchgfx4RectaNERKS0_>
 800b3f0:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800b3f2:	b1a8      	cbz	r0, 800b420 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
 800b3f4:	6803      	ldr	r3, [r0, #0]
 800b3f6:	1d21      	adds	r1, r4, #4
 800b3f8:	68db      	ldr	r3, [r3, #12]
 800b3fa:	4798      	blx	r3
 800b3fc:	b180      	cbz	r0, 800b420 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
 800b3fe:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800b402:	2b00      	cmp	r3, #0
 800b404:	dd0c      	ble.n	800b420 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
 800b406:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 800b40a:	2d00      	cmp	r5, #0
 800b40c:	dd08      	ble.n	800b420 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
 800b40e:	4a2d      	ldr	r2, [pc, #180]	; (800b4c4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xf4>)
 800b410:	7812      	ldrb	r2, [r2, #0]
 800b412:	b13a      	cbz	r2, 800b424 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x54>
 800b414:	2a01      	cmp	r2, #1
 800b416:	d02d      	beq.n	800b474 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa4>
 800b418:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800b41a:	6803      	ldr	r3, [r0, #0]
 800b41c:	691b      	ldr	r3, [r3, #16]
 800b41e:	4798      	blx	r3
 800b420:	b004      	add	sp, #16
 800b422:	bd70      	pop	{r4, r5, r6, pc}
 800b424:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800b428:	441d      	add	r5, r3
 800b42a:	b2ad      	uxth	r5, r5
 800b42c:	b22e      	sxth	r6, r5
 800b42e:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 800b432:	42b3      	cmp	r3, r6
 800b434:	daf0      	bge.n	800b418 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800b436:	6823      	ldr	r3, [r4, #0]
 800b438:	4669      	mov	r1, sp
 800b43a:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800b43c:	4620      	mov	r0, r4
 800b43e:	4798      	blx	r3
 800b440:	b940      	cbnz	r0, 800b454 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x84>
 800b442:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800b446:	2b01      	cmp	r3, #1
 800b448:	d004      	beq.n	800b454 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x84>
 800b44a:	3301      	adds	r3, #1
 800b44c:	105b      	asrs	r3, r3, #1
 800b44e:	f8ad 3006 	strh.w	r3, [sp, #6]
 800b452:	e7f0      	b.n	800b436 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x66>
 800b454:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800b458:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800b45c:	4413      	add	r3, r2
 800b45e:	b29b      	uxth	r3, r3
 800b460:	441a      	add	r2, r3
 800b462:	b212      	sxth	r2, r2
 800b464:	4296      	cmp	r6, r2
 800b466:	f8ad 3002 	strh.w	r3, [sp, #2]
 800b46a:	dae0      	bge.n	800b42e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 800b46c:	1aeb      	subs	r3, r5, r3
 800b46e:	f8ad 3006 	strh.w	r3, [sp, #6]
 800b472:	e7dc      	b.n	800b42e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 800b474:	f8bd 5000 	ldrh.w	r5, [sp]
 800b478:	441d      	add	r5, r3
 800b47a:	b2ad      	uxth	r5, r5
 800b47c:	b22e      	sxth	r6, r5
 800b47e:	f9bd 3000 	ldrsh.w	r3, [sp]
 800b482:	42b3      	cmp	r3, r6
 800b484:	dac8      	bge.n	800b418 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800b486:	6823      	ldr	r3, [r4, #0]
 800b488:	4669      	mov	r1, sp
 800b48a:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800b48c:	4620      	mov	r0, r4
 800b48e:	4798      	blx	r3
 800b490:	b940      	cbnz	r0, 800b4a4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xd4>
 800b492:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800b496:	2b01      	cmp	r3, #1
 800b498:	d004      	beq.n	800b4a4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xd4>
 800b49a:	3301      	adds	r3, #1
 800b49c:	105b      	asrs	r3, r3, #1
 800b49e:	f8ad 3004 	strh.w	r3, [sp, #4]
 800b4a2:	e7f0      	b.n	800b486 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xb6>
 800b4a4:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 800b4a8:	f8bd 3000 	ldrh.w	r3, [sp]
 800b4ac:	4413      	add	r3, r2
 800b4ae:	b29b      	uxth	r3, r3
 800b4b0:	441a      	add	r2, r3
 800b4b2:	b212      	sxth	r2, r2
 800b4b4:	4296      	cmp	r6, r2
 800b4b6:	f8ad 3000 	strh.w	r3, [sp]
 800b4ba:	dae0      	bge.n	800b47e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 800b4bc:	1aeb      	subs	r3, r5, r3
 800b4be:	f8ad 3004 	strh.w	r3, [sp, #4]
 800b4c2:	e7dc      	b.n	800b47e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 800b4c4:	20015354 	.word	0x20015354

0800b4c8 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 800b4c8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800b4ca:	6803      	ldr	r3, [r0, #0]
 800b4cc:	4604      	mov	r4, r0
 800b4ce:	4601      	mov	r1, r0
 800b4d0:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800b4d2:	4668      	mov	r0, sp
 800b4d4:	4798      	blx	r3
 800b4d6:	2100      	movs	r1, #0
 800b4d8:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800b4dc:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800b4e0:	9102      	str	r1, [sp, #8]
 800b4e2:	4668      	mov	r0, sp
 800b4e4:	a902      	add	r1, sp, #8
 800b4e6:	f8ad 200c 	strh.w	r2, [sp, #12]
 800b4ea:	f8ad 300e 	strh.w	r3, [sp, #14]
 800b4ee:	f7fe ff2d 	bl	800a34c <_ZN8touchgfx4RectaNERKS0_>
 800b4f2:	6823      	ldr	r3, [r4, #0]
 800b4f4:	4669      	mov	r1, sp
 800b4f6:	691b      	ldr	r3, [r3, #16]
 800b4f8:	4620      	mov	r0, r4
 800b4fa:	4798      	blx	r3
 800b4fc:	b004      	add	sp, #16
 800b4fe:	bd10      	pop	{r4, pc}

0800b500 <_ZN8touchgfx12CanvasWidgetC1Ev>:
 800b500:	2101      	movs	r1, #1
 800b502:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800b506:	490b      	ldr	r1, [pc, #44]	; (800b534 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 800b508:	6001      	str	r1, [r0, #0]
 800b50a:	2200      	movs	r2, #0
 800b50c:	21ff      	movs	r1, #255	; 0xff
 800b50e:	8082      	strh	r2, [r0, #4]
 800b510:	80c2      	strh	r2, [r0, #6]
 800b512:	8102      	strh	r2, [r0, #8]
 800b514:	8142      	strh	r2, [r0, #10]
 800b516:	8182      	strh	r2, [r0, #12]
 800b518:	81c2      	strh	r2, [r0, #14]
 800b51a:	8202      	strh	r2, [r0, #16]
 800b51c:	8242      	strh	r2, [r0, #18]
 800b51e:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800b522:	61c2      	str	r2, [r0, #28]
 800b524:	8402      	strh	r2, [r0, #32]
 800b526:	8442      	strh	r2, [r0, #34]	; 0x22
 800b528:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800b52c:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
 800b530:	6282      	str	r2, [r0, #40]	; 0x28
 800b532:	4770      	bx	lr
 800b534:	08022d34 	.word	0x08022d34

0800b538 <_ZN8touchgfx17AbstractDataGraph9setScaleXEib>:
 800b538:	6301      	str	r1, [r0, #48]	; 0x30
 800b53a:	4770      	bx	lr

0800b53c <_ZNK8touchgfx17AbstractDataGraph9getScaleXEv>:
 800b53c:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800b53e:	4770      	bx	lr

0800b540 <_ZN8touchgfx17AbstractDataGraph9setScaleYEib>:
 800b540:	6341      	str	r1, [r0, #52]	; 0x34
 800b542:	4770      	bx	lr

0800b544 <_ZNK8touchgfx17AbstractDataGraph9getScaleYEv>:
 800b544:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800b546:	4770      	bx	lr

0800b548 <_ZN8touchgfx16DynamicDataGraph14beforeAddValueEv>:
 800b548:	4770      	bx	lr

0800b54a <_ZNK8touchgfx16DynamicDataGraph9dataIndexEs>:
 800b54a:	4608      	mov	r0, r1
 800b54c:	4770      	bx	lr

0800b54e <_ZNK8touchgfx16DynamicDataGraph18indexToGlobalIndexEs>:
 800b54e:	4608      	mov	r0, r1
 800b550:	4770      	bx	lr

0800b552 <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE>:
 800b552:	b530      	push	{r4, r5, lr}
 800b554:	460d      	mov	r5, r1
 800b556:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 800b558:	8949      	ldrh	r1, [r1, #10]
 800b55a:	1ac9      	subs	r1, r1, r3
 800b55c:	6803      	ldr	r3, [r0, #0]
 800b55e:	b085      	sub	sp, #20
 800b560:	f8d3 3104 	ldr.w	r3, [r3, #260]	; 0x104
 800b564:	f10d 0206 	add.w	r2, sp, #6
 800b568:	b209      	sxth	r1, r1
 800b56a:	4604      	mov	r4, r0
 800b56c:	4798      	blx	r3
 800b56e:	b1a0      	cbz	r0, 800b59a <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 800b570:	792b      	ldrb	r3, [r5, #4]
 800b572:	b993      	cbnz	r3, 800b59a <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 800b574:	f8d4 0128 	ldr.w	r0, [r4, #296]	; 0x128
 800b578:	b178      	cbz	r0, 800b59a <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 800b57a:	6803      	ldr	r3, [r0, #0]
 800b57c:	68db      	ldr	r3, [r3, #12]
 800b57e:	4798      	blx	r3
 800b580:	b158      	cbz	r0, 800b59a <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 800b582:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800b586:	f8d4 0128 	ldr.w	r0, [r4, #296]	; 0x128
 800b58a:	f8ad 3008 	strh.w	r3, [sp, #8]
 800b58e:	9503      	str	r5, [sp, #12]
 800b590:	6803      	ldr	r3, [r0, #0]
 800b592:	aa02      	add	r2, sp, #8
 800b594:	689b      	ldr	r3, [r3, #8]
 800b596:	4621      	mov	r1, r4
 800b598:	4798      	blx	r3
 800b59a:	b005      	add	sp, #20
 800b59c:	bd30      	pop	{r4, r5, pc}

0800b59e <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii>:
 800b59e:	b510      	push	{r4, lr}
 800b5a0:	428a      	cmp	r2, r1
 800b5a2:	bfbe      	ittt	lt
 800b5a4:	460b      	movlt	r3, r1
 800b5a6:	4611      	movlt	r1, r2
 800b5a8:	461a      	movlt	r2, r3
 800b5aa:	f8d0 312c 	ldr.w	r3, [r0, #300]	; 0x12c
 800b5ae:	428b      	cmp	r3, r1
 800b5b0:	4604      	mov	r4, r0
 800b5b2:	d103      	bne.n	800b5bc <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii+0x1e>
 800b5b4:	f8d0 3130 	ldr.w	r3, [r0, #304]	; 0x130
 800b5b8:	4293      	cmp	r3, r2
 800b5ba:	d011      	beq.n	800b5e0 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii+0x42>
 800b5bc:	f8c4 112c 	str.w	r1, [r4, #300]	; 0x12c
 800b5c0:	f8c4 2130 	str.w	r2, [r4, #304]	; 0x130
 800b5c4:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 800b5c8:	f005 fff7 	bl	80115ba <_ZNK8touchgfx8Drawable10invalidateEv>
 800b5cc:	f104 0038 	add.w	r0, r4, #56	; 0x38
 800b5d0:	f005 fff3 	bl	80115ba <_ZNK8touchgfx8Drawable10invalidateEv>
 800b5d4:	f104 00e8 	add.w	r0, r4, #232	; 0xe8
 800b5d8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b5dc:	f005 bfed 	b.w	80115ba <_ZNK8touchgfx8Drawable10invalidateEv>
 800b5e0:	bd10      	pop	{r4, pc}

0800b5e2 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii>:
 800b5e2:	b510      	push	{r4, lr}
 800b5e4:	428a      	cmp	r2, r1
 800b5e6:	bfbe      	ittt	lt
 800b5e8:	460b      	movlt	r3, r1
 800b5ea:	4611      	movlt	r1, r2
 800b5ec:	461a      	movlt	r2, r3
 800b5ee:	f8d0 3134 	ldr.w	r3, [r0, #308]	; 0x134
 800b5f2:	428b      	cmp	r3, r1
 800b5f4:	4604      	mov	r4, r0
 800b5f6:	d103      	bne.n	800b600 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii+0x1e>
 800b5f8:	f8d0 3138 	ldr.w	r3, [r0, #312]	; 0x138
 800b5fc:	4293      	cmp	r3, r2
 800b5fe:	d011      	beq.n	800b624 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii+0x42>
 800b600:	f8c4 1134 	str.w	r1, [r4, #308]	; 0x134
 800b604:	f8c4 2138 	str.w	r2, [r4, #312]	; 0x138
 800b608:	f104 0064 	add.w	r0, r4, #100	; 0x64
 800b60c:	f005 ffd5 	bl	80115ba <_ZNK8touchgfx8Drawable10invalidateEv>
 800b610:	f104 0038 	add.w	r0, r4, #56	; 0x38
 800b614:	f005 ffd1 	bl	80115ba <_ZNK8touchgfx8Drawable10invalidateEv>
 800b618:	f104 0090 	add.w	r0, r4, #144	; 0x90
 800b61c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b620:	f005 bfcb 	b.w	80115ba <_ZNK8touchgfx8Drawable10invalidateEv>
 800b624:	bd10      	pop	{r4, pc}

0800b626 <_ZN8touchgfx17AbstractDataGraph5clearEv>:
 800b626:	2300      	movs	r3, #0
 800b628:	f8a0 311e 	strh.w	r3, [r0, #286]	; 0x11e
 800b62c:	3038      	adds	r0, #56	; 0x38
 800b62e:	f005 bfc4 	b.w	80115ba <_ZNK8touchgfx8Drawable10invalidateEv>

0800b632 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi>:
 800b632:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b636:	f9b0 311e 	ldrsh.w	r3, [r0, #286]	; 0x11e
 800b63a:	4605      	mov	r5, r0
 800b63c:	4688      	mov	r8, r1
 800b63e:	4617      	mov	r7, r2
 800b640:	2b00      	cmp	r3, #0
 800b642:	d03f      	beq.n	800b6c4 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x92>
 800b644:	6803      	ldr	r3, [r0, #0]
 800b646:	f8d3 3130 	ldr.w	r3, [r3, #304]	; 0x130
 800b64a:	4798      	blx	r3
 800b64c:	682b      	ldr	r3, [r5, #0]
 800b64e:	4604      	mov	r4, r0
 800b650:	f8d3 3134 	ldr.w	r3, [r3, #308]	; 0x134
 800b654:	4628      	mov	r0, r5
 800b656:	4798      	blx	r3
 800b658:	4284      	cmp	r4, r0
 800b65a:	bfc8      	it	gt
 800b65c:	4623      	movgt	r3, r4
 800b65e:	f9b5 611e 	ldrsh.w	r6, [r5, #286]	; 0x11e
 800b662:	bfc4      	itt	gt
 800b664:	4604      	movgt	r4, r0
 800b666:	4618      	movgt	r0, r3
 800b668:	ea24 73e4 	bic.w	r3, r4, r4, asr #31
 800b66c:	42b3      	cmp	r3, r6
 800b66e:	da29      	bge.n	800b6c4 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x92>
 800b670:	42b0      	cmp	r0, r6
 800b672:	bfa8      	it	ge
 800b674:	4630      	movge	r0, r6
 800b676:	2800      	cmp	r0, #0
 800b678:	db24      	blt.n	800b6c4 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x92>
 800b67a:	f1b8 0f00 	cmp.w	r8, #0
 800b67e:	d11e      	bne.n	800b6be <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x8c>
 800b680:	f8d5 2144 	ldr.w	r2, [r5, #324]	; 0x144
 800b684:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 800b688:	460c      	mov	r4, r1
 800b68a:	009a      	lsls	r2, r3, #2
 800b68c:	4298      	cmp	r0, r3
 800b68e:	dd0b      	ble.n	800b6a8 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x76>
 800b690:	f8d5 6144 	ldr.w	r6, [r5, #324]	; 0x144
 800b694:	58b6      	ldr	r6, [r6, r2]
 800b696:	42b1      	cmp	r1, r6
 800b698:	bfa8      	it	ge
 800b69a:	4631      	movge	r1, r6
 800b69c:	42b4      	cmp	r4, r6
 800b69e:	bfb8      	it	lt
 800b6a0:	4634      	movlt	r4, r6
 800b6a2:	3301      	adds	r3, #1
 800b6a4:	3204      	adds	r2, #4
 800b6a6:	e7f1      	b.n	800b68c <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x5a>
 800b6a8:	1bc9      	subs	r1, r1, r7
 800b6aa:	193a      	adds	r2, r7, r4
 800b6ac:	4291      	cmp	r1, r2
 800b6ae:	d009      	beq.n	800b6c4 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x92>
 800b6b0:	682b      	ldr	r3, [r5, #0]
 800b6b2:	4628      	mov	r0, r5
 800b6b4:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800b6b8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800b6bc:	4718      	bx	r3
 800b6be:	427c      	negs	r4, r7
 800b6c0:	4639      	mov	r1, r7
 800b6c2:	e7e2      	b.n	800b68a <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x58>
 800b6c4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800b6c8 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE>:
 800b6c8:	b530      	push	{r4, r5, lr}
 800b6ca:	790b      	ldrb	r3, [r1, #4]
 800b6cc:	2b02      	cmp	r3, #2
 800b6ce:	b085      	sub	sp, #20
 800b6d0:	4604      	mov	r4, r0
 800b6d2:	460d      	mov	r5, r1
 800b6d4:	d020      	beq.n	800b718 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800b6d6:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 800b6d8:	88c9      	ldrh	r1, [r1, #6]
 800b6da:	1ac9      	subs	r1, r1, r3
 800b6dc:	6803      	ldr	r3, [r0, #0]
 800b6de:	f10d 0206 	add.w	r2, sp, #6
 800b6e2:	f8d3 3104 	ldr.w	r3, [r3, #260]	; 0x104
 800b6e6:	b209      	sxth	r1, r1
 800b6e8:	4798      	blx	r3
 800b6ea:	b1a8      	cbz	r0, 800b718 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800b6ec:	792b      	ldrb	r3, [r5, #4]
 800b6ee:	2b01      	cmp	r3, #1
 800b6f0:	d812      	bhi.n	800b718 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800b6f2:	f8d4 0124 	ldr.w	r0, [r4, #292]	; 0x124
 800b6f6:	b178      	cbz	r0, 800b718 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800b6f8:	6803      	ldr	r3, [r0, #0]
 800b6fa:	68db      	ldr	r3, [r3, #12]
 800b6fc:	4798      	blx	r3
 800b6fe:	b158      	cbz	r0, 800b718 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800b700:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800b704:	f8d4 0124 	ldr.w	r0, [r4, #292]	; 0x124
 800b708:	f8ad 3008 	strh.w	r3, [sp, #8]
 800b70c:	9503      	str	r5, [sp, #12]
 800b70e:	6803      	ldr	r3, [r0, #0]
 800b710:	aa02      	add	r2, sp, #8
 800b712:	689b      	ldr	r3, [r3, #8]
 800b714:	4621      	mov	r1, r4
 800b716:	4798      	blx	r3
 800b718:	b005      	add	sp, #20
 800b71a:	bd30      	pop	{r4, r5, pc}

0800b71c <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_>:
 800b71c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b720:	4604      	mov	r4, r0
 800b722:	f9b0 011e 	ldrsh.w	r0, [r0, #286]	; 0x11e
 800b726:	9e06      	ldr	r6, [sp, #24]
 800b728:	4690      	mov	r8, r2
 800b72a:	461f      	mov	r7, r3
 800b72c:	b928      	cbnz	r0, 800b73a <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1e>
 800b72e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800b732:	8033      	strh	r3, [r6, #0]
 800b734:	803b      	strh	r3, [r7, #0]
 800b736:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b73a:	f8b4 2118 	ldrh.w	r2, [r4, #280]	; 0x118
 800b73e:	f9b4 0116 	ldrsh.w	r0, [r4, #278]	; 0x116
 800b742:	1883      	adds	r3, r0, r2
 800b744:	f8b4 2040 	ldrh.w	r2, [r4, #64]	; 0x40
 800b748:	1ad2      	subs	r2, r2, r3
 800b74a:	b212      	sxth	r2, r2
 800b74c:	2a01      	cmp	r2, #1
 800b74e:	dc07      	bgt.n	800b760 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x44>
 800b750:	2300      	movs	r3, #0
 800b752:	803b      	strh	r3, [r7, #0]
 800b754:	f8b4 311e 	ldrh.w	r3, [r4, #286]	; 0x11e
 800b758:	3b01      	subs	r3, #1
 800b75a:	8033      	strh	r3, [r6, #0]
 800b75c:	2001      	movs	r0, #1
 800b75e:	e7ea      	b.n	800b736 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1a>
 800b760:	1a08      	subs	r0, r1, r0
 800b762:	f8d4 3130 	ldr.w	r3, [r4, #304]	; 0x130
 800b766:	f8d4 112c 	ldr.w	r1, [r4, #300]	; 0x12c
 800b76a:	6b25      	ldr	r5, [r4, #48]	; 0x30
 800b76c:	1a5b      	subs	r3, r3, r1
 800b76e:	ea4f 1040 	mov.w	r0, r0, lsl #5
 800b772:	d45b      	bmi.n	800b82c <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x110>
 800b774:	eb05 0343 	add.w	r3, r5, r3, lsl #1
 800b778:	fb93 f1f5 	sdiv	r1, r3, r5
 800b77c:	2302      	movs	r3, #2
 800b77e:	fb91 f1f3 	sdiv	r1, r1, r3
 800b782:	3a01      	subs	r2, #1
 800b784:	f006 f8da 	bl	801193c <_ZN8touchgfx6muldivElll>
 800b788:	f8d4 112c 	ldr.w	r1, [r4, #300]	; 0x12c
 800b78c:	f8d4 c030 	ldr.w	ip, [r4, #48]	; 0x30
 800b790:	2900      	cmp	r1, #0
 800b792:	db57      	blt.n	800b844 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x128>
 800b794:	eb0c 0341 	add.w	r3, ip, r1, lsl #1
 800b798:	2502      	movs	r5, #2
 800b79a:	fb93 f3fc 	sdiv	r3, r3, ip
 800b79e:	fb93 f3f5 	sdiv	r3, r3, r5
 800b7a2:	eb00 1543 	add.w	r5, r0, r3, lsl #5
 800b7a6:	f8d4 2130 	ldr.w	r2, [r4, #304]	; 0x130
 800b7aa:	f9b4 3116 	ldrsh.w	r3, [r4, #278]	; 0x116
 800b7ae:	1a52      	subs	r2, r2, r1
 800b7b0:	eba8 0003 	sub.w	r0, r8, r3
 800b7b4:	ea4f 1040 	mov.w	r0, r0, lsl #5
 800b7b8:	d450      	bmi.n	800b85c <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x140>
 800b7ba:	eb0c 0242 	add.w	r2, ip, r2, lsl #1
 800b7be:	fb92 f1fc 	sdiv	r1, r2, ip
 800b7c2:	2202      	movs	r2, #2
 800b7c4:	fb91 f1f2 	sdiv	r1, r1, r2
 800b7c8:	f8b4 2118 	ldrh.w	r2, [r4, #280]	; 0x118
 800b7cc:	4413      	add	r3, r2
 800b7ce:	f8b4 2040 	ldrh.w	r2, [r4, #64]	; 0x40
 800b7d2:	1ad2      	subs	r2, r2, r3
 800b7d4:	b212      	sxth	r2, r2
 800b7d6:	3a01      	subs	r2, #1
 800b7d8:	f006 f8b0 	bl	801193c <_ZN8touchgfx6muldivElll>
 800b7dc:	f8d4 312c 	ldr.w	r3, [r4, #300]	; 0x12c
 800b7e0:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800b7e2:	2b00      	cmp	r3, #0
 800b7e4:	db46      	blt.n	800b874 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x158>
 800b7e6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 800b7ea:	fb93 f3f2 	sdiv	r3, r3, r2
 800b7ee:	2202      	movs	r2, #2
 800b7f0:	fb93 f3f2 	sdiv	r3, r3, r2
 800b7f4:	eb00 1343 	add.w	r3, r0, r3, lsl #5
 800b7f8:	429d      	cmp	r5, r3
 800b7fa:	bfde      	ittt	le
 800b7fc:	461a      	movle	r2, r3
 800b7fe:	462b      	movle	r3, r5
 800b800:	4615      	movle	r5, r2
 800b802:	2d00      	cmp	r5, #0
 800b804:	bfa4      	itt	ge
 800b806:	351f      	addge	r5, #31
 800b808:	116d      	asrge	r5, r5, #5
 800b80a:	f04f 0020 	mov.w	r0, #32
 800b80e:	bfb8      	it	lt
 800b810:	fb95 f5f0 	sdivlt	r5, r5, r0
 800b814:	b22d      	sxth	r5, r5
 800b816:	2d00      	cmp	r5, #0
 800b818:	b21b      	sxth	r3, r3
 800b81a:	fb93 f3f0 	sdiv	r3, r3, r0
 800b81e:	803b      	strh	r3, [r7, #0]
 800b820:	8035      	strh	r5, [r6, #0]
 800b822:	da33      	bge.n	800b88c <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x170>
 800b824:	2000      	movs	r0, #0
 800b826:	8030      	strh	r0, [r6, #0]
 800b828:	8038      	strh	r0, [r7, #0]
 800b82a:	e784      	b.n	800b736 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1a>
 800b82c:	f06f 0101 	mvn.w	r1, #1
 800b830:	fb01 5303 	mla	r3, r1, r3, r5
 800b834:	1e59      	subs	r1, r3, #1
 800b836:	2302      	movs	r3, #2
 800b838:	fb91 f1f5 	sdiv	r1, r1, r5
 800b83c:	fb91 f1f3 	sdiv	r1, r1, r3
 800b840:	4249      	negs	r1, r1
 800b842:	e79e      	b.n	800b782 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x66>
 800b844:	f06f 0301 	mvn.w	r3, #1
 800b848:	fb03 c301 	mla	r3, r3, r1, ip
 800b84c:	3b01      	subs	r3, #1
 800b84e:	2502      	movs	r5, #2
 800b850:	fb93 f3fc 	sdiv	r3, r3, ip
 800b854:	fb93 f3f5 	sdiv	r3, r3, r5
 800b858:	425b      	negs	r3, r3
 800b85a:	e7a2      	b.n	800b7a2 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x86>
 800b85c:	f06f 0101 	mvn.w	r1, #1
 800b860:	fb01 c202 	mla	r2, r1, r2, ip
 800b864:	1e51      	subs	r1, r2, #1
 800b866:	2202      	movs	r2, #2
 800b868:	fb91 f1fc 	sdiv	r1, r1, ip
 800b86c:	fb91 f1f2 	sdiv	r1, r1, r2
 800b870:	4249      	negs	r1, r1
 800b872:	e7a9      	b.n	800b7c8 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0xac>
 800b874:	f06f 0101 	mvn.w	r1, #1
 800b878:	fb01 2303 	mla	r3, r1, r3, r2
 800b87c:	3b01      	subs	r3, #1
 800b87e:	fb93 f3f2 	sdiv	r3, r3, r2
 800b882:	2202      	movs	r2, #2
 800b884:	fb93 f3f2 	sdiv	r3, r3, r2
 800b888:	425b      	negs	r3, r3
 800b88a:	e7b3      	b.n	800b7f4 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0xd8>
 800b88c:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800b890:	f9b7 2000 	ldrsh.w	r2, [r7]
 800b894:	4293      	cmp	r3, r2
 800b896:	dc05      	bgt.n	800b8a4 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x188>
 800b898:	3b01      	subs	r3, #1
 800b89a:	b21b      	sxth	r3, r3
 800b89c:	8033      	strh	r3, [r6, #0]
 800b89e:	2000      	movs	r0, #0
 800b8a0:	803b      	strh	r3, [r7, #0]
 800b8a2:	e748      	b.n	800b736 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1a>
 800b8a4:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 800b8a8:	803a      	strh	r2, [r7, #0]
 800b8aa:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800b8ae:	f9b6 2000 	ldrsh.w	r2, [r6]
 800b8b2:	4293      	cmp	r3, r2
 800b8b4:	bfdc      	itt	le
 800b8b6:	f103 33ff 	addle.w	r3, r3, #4294967295
 800b8ba:	b21a      	sxthle	r2, r3
 800b8bc:	8032      	strh	r2, [r6, #0]
 800b8be:	e74d      	b.n	800b75c <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x40>

0800b8c0 <_ZN8touchgfx9ContainerC1Ev>:
 800b8c0:	2101      	movs	r1, #1
 800b8c2:	2200      	movs	r2, #0
 800b8c4:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800b8c8:	4909      	ldr	r1, [pc, #36]	; (800b8f0 <_ZN8touchgfx9ContainerC1Ev+0x30>)
 800b8ca:	8082      	strh	r2, [r0, #4]
 800b8cc:	80c2      	strh	r2, [r0, #6]
 800b8ce:	8102      	strh	r2, [r0, #8]
 800b8d0:	8142      	strh	r2, [r0, #10]
 800b8d2:	8182      	strh	r2, [r0, #12]
 800b8d4:	81c2      	strh	r2, [r0, #14]
 800b8d6:	8202      	strh	r2, [r0, #16]
 800b8d8:	8242      	strh	r2, [r0, #18]
 800b8da:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800b8de:	61c2      	str	r2, [r0, #28]
 800b8e0:	8402      	strh	r2, [r0, #32]
 800b8e2:	8442      	strh	r2, [r0, #34]	; 0x22
 800b8e4:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800b8e8:	6001      	str	r1, [r0, #0]
 800b8ea:	6282      	str	r2, [r0, #40]	; 0x28
 800b8ec:	4770      	bx	lr
 800b8ee:	bf00      	nop
 800b8f0:	08022c3c 	.word	0x08022c3c

0800b8f4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>:
 800b8f4:	6800      	ldr	r0, [r0, #0]
 800b8f6:	2800      	cmp	r0, #0
 800b8f8:	bfbd      	ittte	lt
 800b8fa:	380f      	sublt	r0, #15
 800b8fc:	2320      	movlt	r3, #32
 800b8fe:	fb90 f0f3 	sdivlt	r0, r0, r3
 800b902:	3010      	addge	r0, #16
 800b904:	bfa8      	it	ge
 800b906:	1140      	asrge	r0, r0, #5
 800b908:	4770      	bx	lr

0800b90a <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs>:
 800b90a:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b90e:	4605      	mov	r5, r0
 800b910:	f9b0 011e 	ldrsh.w	r0, [r0, #286]	; 0x11e
 800b914:	4688      	mov	r8, r1
 800b916:	4691      	mov	r9, r2
 800b918:	469a      	mov	sl, r3
 800b91a:	b360      	cbz	r0, 800b976 <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs+0x6c>
 800b91c:	2700      	movs	r7, #0
 800b91e:	f04f 3bff 	mov.w	fp, #4294967295
 800b922:	f9b5 311e 	ldrsh.w	r3, [r5, #286]	; 0x11e
 800b926:	b23e      	sxth	r6, r7
 800b928:	42b3      	cmp	r3, r6
 800b92a:	dd23      	ble.n	800b974 <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs+0x6a>
 800b92c:	682b      	ldr	r3, [r5, #0]
 800b92e:	4631      	mov	r1, r6
 800b930:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800b934:	4628      	mov	r0, r5
 800b936:	4798      	blx	r3
 800b938:	9001      	str	r0, [sp, #4]
 800b93a:	a801      	add	r0, sp, #4
 800b93c:	f7ff ffda 	bl	800b8f4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800b940:	682b      	ldr	r3, [r5, #0]
 800b942:	eba0 0008 	sub.w	r0, r0, r8
 800b946:	b204      	sxth	r4, r0
 800b948:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800b94c:	4631      	mov	r1, r6
 800b94e:	4628      	mov	r0, r5
 800b950:	4798      	blx	r3
 800b952:	9001      	str	r0, [sp, #4]
 800b954:	a801      	add	r0, sp, #4
 800b956:	f7ff ffcd 	bl	800b8f4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800b95a:	eba0 0009 	sub.w	r0, r0, r9
 800b95e:	fb10 f000 	smulbb	r0, r0, r0
 800b962:	fb04 0404 	mla	r4, r4, r4, r0
 800b966:	455c      	cmp	r4, fp
 800b968:	bf3c      	itt	cc
 800b96a:	f8aa 6000 	strhcc.w	r6, [sl]
 800b96e:	46a3      	movcc	fp, r4
 800b970:	3701      	adds	r7, #1
 800b972:	e7d6      	b.n	800b922 <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs+0x18>
 800b974:	2001      	movs	r0, #1
 800b976:	b003      	add	sp, #12
 800b978:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800b97c <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs>:
 800b97c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800b980:	4604      	mov	r4, r0
 800b982:	f9b0 011e 	ldrsh.w	r0, [r0, #286]	; 0x11e
 800b986:	4688      	mov	r8, r1
 800b988:	4691      	mov	r9, r2
 800b98a:	b1f8      	cbz	r0, 800b9cc <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs+0x50>
 800b98c:	2500      	movs	r5, #0
 800b98e:	f04f 37ff 	mov.w	r7, #4294967295
 800b992:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800b996:	b22e      	sxth	r6, r5
 800b998:	42b3      	cmp	r3, r6
 800b99a:	dd16      	ble.n	800b9ca <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs+0x4e>
 800b99c:	6823      	ldr	r3, [r4, #0]
 800b99e:	4631      	mov	r1, r6
 800b9a0:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800b9a4:	4620      	mov	r0, r4
 800b9a6:	4798      	blx	r3
 800b9a8:	9001      	str	r0, [sp, #4]
 800b9aa:	a801      	add	r0, sp, #4
 800b9ac:	f7ff ffa2 	bl	800b8f4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800b9b0:	b200      	sxth	r0, r0
 800b9b2:	eba0 0008 	sub.w	r0, r0, r8
 800b9b6:	2800      	cmp	r0, #0
 800b9b8:	bfb8      	it	lt
 800b9ba:	4240      	neglt	r0, r0
 800b9bc:	42b8      	cmp	r0, r7
 800b9be:	bf3c      	itt	cc
 800b9c0:	f8a9 6000 	strhcc.w	r6, [r9]
 800b9c4:	4607      	movcc	r7, r0
 800b9c6:	3501      	adds	r5, #1
 800b9c8:	e7e3      	b.n	800b992 <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs+0x16>
 800b9ca:	2001      	movs	r0, #1
 800b9cc:	b003      	add	sp, #12
 800b9ce:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800b9d2 <_ZN8touchgfx17AbstractDataGraph19setGraphAreaPaddingEssss>:
 800b9d2:	f8a0 3118 	strh.w	r3, [r0, #280]	; 0x118
 800b9d6:	f9bd 3000 	ldrsh.w	r3, [sp]
 800b9da:	f8a0 1114 	strh.w	r1, [r0, #276]	; 0x114
 800b9de:	f8a0 2116 	strh.w	r2, [r0, #278]	; 0x116
 800b9e2:	f8a0 311a 	strh.w	r3, [r0, #282]	; 0x11a
 800b9e6:	4770      	bx	lr

0800b9e8 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>:
 800b9e8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800b9ea:	4604      	mov	r4, r0
 800b9ec:	3038      	adds	r0, #56	; 0x38
 800b9ee:	460d      	mov	r5, r1
 800b9f0:	f7fe fb1c 	bl	800a02c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800b9f4:	f9b4 2042 	ldrsh.w	r2, [r4, #66]	; 0x42
 800b9f8:	9200      	str	r2, [sp, #0]
 800b9fa:	2200      	movs	r2, #0
 800b9fc:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800ba00:	4611      	mov	r1, r2
 800ba02:	4628      	mov	r0, r5
 800ba04:	f7f7 f949 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
 800ba08:	b003      	add	sp, #12
 800ba0a:	bd30      	pop	{r4, r5, pc}

0800ba0c <_ZN8touchgfx17AbstractDataGraph14addLeftElementERNS_23AbstractGraphDecorationE>:
 800ba0c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800ba0e:	4604      	mov	r4, r0
 800ba10:	3064      	adds	r0, #100	; 0x64
 800ba12:	460d      	mov	r5, r1
 800ba14:	f7fe fb0a 	bl	800a02c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800ba18:	f9b4 206e 	ldrsh.w	r2, [r4, #110]	; 0x6e
 800ba1c:	9200      	str	r2, [sp, #0]
 800ba1e:	2200      	movs	r2, #0
 800ba20:	f9b4 306c 	ldrsh.w	r3, [r4, #108]	; 0x6c
 800ba24:	4611      	mov	r1, r2
 800ba26:	4628      	mov	r0, r5
 800ba28:	f7f7 f937 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
 800ba2c:	b003      	add	sp, #12
 800ba2e:	bd30      	pop	{r4, r5, pc}

0800ba30 <_ZN8touchgfx17AbstractDataGraph16addBottomElementERNS_23AbstractGraphDecorationE>:
 800ba30:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800ba32:	4604      	mov	r4, r0
 800ba34:	30e8      	adds	r0, #232	; 0xe8
 800ba36:	460d      	mov	r5, r1
 800ba38:	f7fe faf8 	bl	800a02c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800ba3c:	f9b4 20f2 	ldrsh.w	r2, [r4, #242]	; 0xf2
 800ba40:	9200      	str	r2, [sp, #0]
 800ba42:	2200      	movs	r2, #0
 800ba44:	f9b4 30f0 	ldrsh.w	r3, [r4, #240]	; 0xf0
 800ba48:	4611      	mov	r1, r2
 800ba4a:	4628      	mov	r0, r5
 800ba4c:	f7f7 f925 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
 800ba50:	b003      	add	sp, #12
 800ba52:	bd30      	pop	{r4, r5, pc}

0800ba54 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs>:
 800ba54:	b538      	push	{r3, r4, r5, lr}
 800ba56:	f9b0 311e 	ldrsh.w	r3, [r0, #286]	; 0x11e
 800ba5a:	428b      	cmp	r3, r1
 800ba5c:	460d      	mov	r5, r1
 800ba5e:	dd08      	ble.n	800ba72 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs+0x1e>
 800ba60:	6e04      	ldr	r4, [r0, #96]	; 0x60
 800ba62:	b134      	cbz	r4, 800ba72 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs+0x1e>
 800ba64:	6823      	ldr	r3, [r4, #0]
 800ba66:	4620      	mov	r0, r4
 800ba68:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800ba6a:	4629      	mov	r1, r5
 800ba6c:	4798      	blx	r3
 800ba6e:	69a4      	ldr	r4, [r4, #24]
 800ba70:	e7f7      	b.n	800ba62 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs+0xe>
 800ba72:	bd38      	pop	{r3, r4, r5, pc}

0800ba74 <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs>:
 800ba74:	b570      	push	{r4, r5, r6, lr}
 800ba76:	f8d0 40e4 	ldr.w	r4, [r0, #228]	; 0xe4
 800ba7a:	4606      	mov	r6, r0
 800ba7c:	460d      	mov	r5, r1
 800ba7e:	b134      	cbz	r4, 800ba8e <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0x1a>
 800ba80:	6823      	ldr	r3, [r4, #0]
 800ba82:	4620      	mov	r0, r4
 800ba84:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800ba86:	4629      	mov	r1, r5
 800ba88:	4798      	blx	r3
 800ba8a:	69a4      	ldr	r4, [r4, #24]
 800ba8c:	e7f7      	b.n	800ba7e <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0xa>
 800ba8e:	f8d6 4110 	ldr.w	r4, [r6, #272]	; 0x110
 800ba92:	b134      	cbz	r4, 800baa2 <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0x2e>
 800ba94:	6823      	ldr	r3, [r4, #0]
 800ba96:	4620      	mov	r0, r4
 800ba98:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800ba9a:	4629      	mov	r1, r5
 800ba9c:	4798      	blx	r3
 800ba9e:	69a4      	ldr	r4, [r4, #24]
 800baa0:	e7f7      	b.n	800ba92 <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0x1e>
 800baa2:	bd70      	pop	{r4, r5, r6, pc}

0800baa4 <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv>:
 800baa4:	b538      	push	{r3, r4, r5, lr}
 800baa6:	4604      	mov	r4, r0
 800baa8:	2500      	movs	r5, #0
 800baaa:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800baae:	42ab      	cmp	r3, r5
 800bab0:	db05      	blt.n	800babe <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv+0x1a>
 800bab2:	b229      	sxth	r1, r5
 800bab4:	4620      	mov	r0, r4
 800bab6:	f7ff ffdd 	bl	800ba74 <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs>
 800baba:	3501      	adds	r5, #1
 800babc:	e7f5      	b.n	800baaa <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv+0x6>
 800babe:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 800bac2:	f005 fd7a 	bl	80115ba <_ZNK8touchgfx8Drawable10invalidateEv>
 800bac6:	f104 00e8 	add.w	r0, r4, #232	; 0xe8
 800baca:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800bace:	f005 bd74 	b.w	80115ba <_ZNK8touchgfx8Drawable10invalidateEv>

0800bad2 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>:
 800bad2:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800bad4:	6e05      	ldr	r5, [r0, #96]	; 0x60
 800bad6:	4604      	mov	r4, r0
 800bad8:	b15d      	cbz	r5, 800baf2 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x20>
 800bada:	f9b4 2042 	ldrsh.w	r2, [r4, #66]	; 0x42
 800bade:	9200      	str	r2, [sp, #0]
 800bae0:	2200      	movs	r2, #0
 800bae2:	4628      	mov	r0, r5
 800bae4:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800bae8:	4611      	mov	r1, r2
 800baea:	f7f7 f8d6 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
 800baee:	69ad      	ldr	r5, [r5, #24]
 800baf0:	e7f2      	b.n	800bad8 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x6>
 800baf2:	f8d4 50e4 	ldr.w	r5, [r4, #228]	; 0xe4
 800baf6:	b15d      	cbz	r5, 800bb10 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x3e>
 800baf8:	f9b4 20c6 	ldrsh.w	r2, [r4, #198]	; 0xc6
 800bafc:	9200      	str	r2, [sp, #0]
 800bafe:	2200      	movs	r2, #0
 800bb00:	4628      	mov	r0, r5
 800bb02:	f9b4 30c4 	ldrsh.w	r3, [r4, #196]	; 0xc4
 800bb06:	4611      	mov	r1, r2
 800bb08:	f7f7 f8c7 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
 800bb0c:	69ad      	ldr	r5, [r5, #24]
 800bb0e:	e7f2      	b.n	800baf6 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x24>
 800bb10:	f8d4 508c 	ldr.w	r5, [r4, #140]	; 0x8c
 800bb14:	b15d      	cbz	r5, 800bb2e <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x5c>
 800bb16:	f9b4 206e 	ldrsh.w	r2, [r4, #110]	; 0x6e
 800bb1a:	9200      	str	r2, [sp, #0]
 800bb1c:	2200      	movs	r2, #0
 800bb1e:	4628      	mov	r0, r5
 800bb20:	f9b4 306c 	ldrsh.w	r3, [r4, #108]	; 0x6c
 800bb24:	4611      	mov	r1, r2
 800bb26:	f7f7 f8b8 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
 800bb2a:	69ad      	ldr	r5, [r5, #24]
 800bb2c:	e7f2      	b.n	800bb14 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x42>
 800bb2e:	f8d4 50b8 	ldr.w	r5, [r4, #184]	; 0xb8
 800bb32:	b15d      	cbz	r5, 800bb4c <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x7a>
 800bb34:	f9b4 209a 	ldrsh.w	r2, [r4, #154]	; 0x9a
 800bb38:	9200      	str	r2, [sp, #0]
 800bb3a:	2200      	movs	r2, #0
 800bb3c:	4628      	mov	r0, r5
 800bb3e:	f9b4 3098 	ldrsh.w	r3, [r4, #152]	; 0x98
 800bb42:	4611      	mov	r1, r2
 800bb44:	f7f7 f8a9 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
 800bb48:	69ad      	ldr	r5, [r5, #24]
 800bb4a:	e7f2      	b.n	800bb32 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x60>
 800bb4c:	f8d4 5110 	ldr.w	r5, [r4, #272]	; 0x110
 800bb50:	b15d      	cbz	r5, 800bb6a <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x98>
 800bb52:	f9b4 20f2 	ldrsh.w	r2, [r4, #242]	; 0xf2
 800bb56:	9200      	str	r2, [sp, #0]
 800bb58:	2200      	movs	r2, #0
 800bb5a:	4628      	mov	r0, r5
 800bb5c:	f9b4 30f0 	ldrsh.w	r3, [r4, #240]	; 0xf0
 800bb60:	4611      	mov	r1, r2
 800bb62:	f7f7 f89a 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
 800bb66:	69ad      	ldr	r5, [r5, #24]
 800bb68:	e7f2      	b.n	800bb50 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x7e>
 800bb6a:	6823      	ldr	r3, [r4, #0]
 800bb6c:	695b      	ldr	r3, [r3, #20]
 800bb6e:	4620      	mov	r0, r4
 800bb70:	b003      	add	sp, #12
 800bb72:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800bb76:	4718      	bx	r3

0800bb78 <_ZN8touchgfx17AbstractDataGraph8setWidthEs>:
 800bb78:	b430      	push	{r4, r5}
 800bb7a:	f8b0 4098 	ldrh.w	r4, [r0, #152]	; 0x98
 800bb7e:	f8a0 10c4 	strh.w	r1, [r0, #196]	; 0xc4
 800bb82:	b28a      	uxth	r2, r1
 800bb84:	1b15      	subs	r5, r2, r4
 800bb86:	f8a0 5094 	strh.w	r5, [r0, #148]	; 0x94
 800bb8a:	f8b0 506c 	ldrh.w	r5, [r0, #108]	; 0x6c
 800bb8e:	f8a0 10f0 	strh.w	r1, [r0, #240]	; 0xf0
 800bb92:	442c      	add	r4, r5
 800bb94:	1b12      	subs	r2, r2, r4
 800bb96:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 800bb9a:	8101      	strh	r1, [r0, #8]
 800bb9c:	bc30      	pop	{r4, r5}
 800bb9e:	f7ff bf98 	b.w	800bad2 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>

0800bba2 <_ZN8touchgfx17AbstractDataGraph9setHeightEs>:
 800bba2:	b430      	push	{r4, r5}
 800bba4:	f8b0 40f2 	ldrh.w	r4, [r0, #242]	; 0xf2
 800bba8:	f8a0 106e 	strh.w	r1, [r0, #110]	; 0x6e
 800bbac:	b28a      	uxth	r2, r1
 800bbae:	1b15      	subs	r5, r2, r4
 800bbb0:	f8a0 50ee 	strh.w	r5, [r0, #238]	; 0xee
 800bbb4:	f8b0 50c6 	ldrh.w	r5, [r0, #198]	; 0xc6
 800bbb8:	f8a0 109a 	strh.w	r1, [r0, #154]	; 0x9a
 800bbbc:	442c      	add	r4, r5
 800bbbe:	1b12      	subs	r2, r2, r4
 800bbc0:	f8a0 2042 	strh.w	r2, [r0, #66]	; 0x42
 800bbc4:	8141      	strh	r1, [r0, #10]
 800bbc6:	bc30      	pop	{r4, r5}
 800bbc8:	f7ff bf83 	b.w	800bad2 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>

0800bbcc <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>:
 800bbcc:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800bbd0:	f9bd 7028 	ldrsh.w	r7, [sp, #40]	; 0x28
 800bbd4:	fa1f fa83 	uxth.w	sl, r3
 800bbd8:	4699      	mov	r9, r3
 800bbda:	8903      	ldrh	r3, [r0, #8]
 800bbdc:	4604      	mov	r4, r0
 800bbde:	4615      	mov	r5, r2
 800bbe0:	fa1f f887 	uxth.w	r8, r7
 800bbe4:	4452      	add	r2, sl
 800bbe6:	8940      	ldrh	r0, [r0, #10]
 800bbe8:	1a9b      	subs	r3, r3, r2
 800bbea:	eb08 0201 	add.w	r2, r8, r1
 800bbee:	1a80      	subs	r0, r0, r2
 800bbf0:	b200      	sxth	r0, r0
 800bbf2:	460e      	mov	r6, r1
 800bbf4:	9000      	str	r0, [sp, #0]
 800bbf6:	460a      	mov	r2, r1
 800bbf8:	f104 0038 	add.w	r0, r4, #56	; 0x38
 800bbfc:	4629      	mov	r1, r5
 800bbfe:	b21b      	sxth	r3, r3
 800bc00:	f7f7 f84b 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
 800bc04:	2200      	movs	r2, #0
 800bc06:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800bc0a:	9600      	str	r6, [sp, #0]
 800bc0c:	4611      	mov	r1, r2
 800bc0e:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 800bc12:	f7f7 f842 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
 800bc16:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800bc1a:	9300      	str	r3, [sp, #0]
 800bc1c:	2200      	movs	r2, #0
 800bc1e:	462b      	mov	r3, r5
 800bc20:	4611      	mov	r1, r2
 800bc22:	f104 0064 	add.w	r0, r4, #100	; 0x64
 800bc26:	f7f7 f838 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
 800bc2a:	8921      	ldrh	r1, [r4, #8]
 800bc2c:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800bc30:	9300      	str	r3, [sp, #0]
 800bc32:	eba1 010a 	sub.w	r1, r1, sl
 800bc36:	464b      	mov	r3, r9
 800bc38:	f104 0090 	add.w	r0, r4, #144	; 0x90
 800bc3c:	2200      	movs	r2, #0
 800bc3e:	b209      	sxth	r1, r1
 800bc40:	f7f7 f82b 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
 800bc44:	8962      	ldrh	r2, [r4, #10]
 800bc46:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800bc4a:	9700      	str	r7, [sp, #0]
 800bc4c:	eba2 0208 	sub.w	r2, r2, r8
 800bc50:	f104 00e8 	add.w	r0, r4, #232	; 0xe8
 800bc54:	b212      	sxth	r2, r2
 800bc56:	2100      	movs	r1, #0
 800bc58:	f7f7 f81f 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
 800bc5c:	4620      	mov	r0, r4
 800bc5e:	b002      	add	sp, #8
 800bc60:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800bc64:	f7ff bf35 	b.w	800bad2 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>

0800bc68 <_ZN8touchgfx17AbstractDataGraphC1Es>:
 800bc68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bc6c:	b085      	sub	sp, #20
 800bc6e:	4604      	mov	r4, r0
 800bc70:	9103      	str	r1, [sp, #12]
 800bc72:	f7ff fe25 	bl	800b8c0 <_ZN8touchgfx9ContainerC1Ev>
 800bc76:	4b2d      	ldr	r3, [pc, #180]	; (800bd2c <_ZN8touchgfx17AbstractDataGraphC1Es+0xc4>)
 800bc78:	6023      	str	r3, [r4, #0]
 800bc7a:	2601      	movs	r6, #1
 800bc7c:	23ff      	movs	r3, #255	; 0xff
 800bc7e:	f104 0b38 	add.w	fp, r4, #56	; 0x38
 800bc82:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 800bc86:	f104 0964 	add.w	r9, r4, #100	; 0x64
 800bc8a:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 800bc8e:	4658      	mov	r0, fp
 800bc90:	f7ff fe16 	bl	800b8c0 <_ZN8touchgfx9ContainerC1Ev>
 800bc94:	f104 0890 	add.w	r8, r4, #144	; 0x90
 800bc98:	4648      	mov	r0, r9
 800bc9a:	f7ff fe11 	bl	800b8c0 <_ZN8touchgfx9ContainerC1Ev>
 800bc9e:	f104 0abc 	add.w	sl, r4, #188	; 0xbc
 800bca2:	4640      	mov	r0, r8
 800bca4:	f7ff fe0c 	bl	800b8c0 <_ZN8touchgfx9ContainerC1Ev>
 800bca8:	f104 07e8 	add.w	r7, r4, #232	; 0xe8
 800bcac:	4650      	mov	r0, sl
 800bcae:	f7ff fe07 	bl	800b8c0 <_ZN8touchgfx9ContainerC1Ev>
 800bcb2:	4638      	mov	r0, r7
 800bcb4:	f7ff fe04 	bl	800b8c0 <_ZN8touchgfx9ContainerC1Ev>
 800bcb8:	2500      	movs	r5, #0
 800bcba:	9903      	ldr	r1, [sp, #12]
 800bcbc:	f8a4 111c 	strh.w	r1, [r4, #284]	; 0x11c
 800bcc0:	4620      	mov	r0, r4
 800bcc2:	4659      	mov	r1, fp
 800bcc4:	f8c4 5114 	str.w	r5, [r4, #276]	; 0x114
 800bcc8:	f8c4 5118 	str.w	r5, [r4, #280]	; 0x118
 800bccc:	f8a4 511e 	strh.w	r5, [r4, #286]	; 0x11e
 800bcd0:	f8a4 5120 	strh.w	r5, [r4, #288]	; 0x120
 800bcd4:	f8c4 5124 	str.w	r5, [r4, #292]	; 0x124
 800bcd8:	f8c4 5128 	str.w	r5, [r4, #296]	; 0x128
 800bcdc:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
 800bce0:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 800bce4:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 800bce8:	f8c4 5138 	str.w	r5, [r4, #312]	; 0x138
 800bcec:	f7fe f99e 	bl	800a02c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800bcf0:	4651      	mov	r1, sl
 800bcf2:	4620      	mov	r0, r4
 800bcf4:	f7fe f99a 	bl	800a02c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800bcf8:	4649      	mov	r1, r9
 800bcfa:	4620      	mov	r0, r4
 800bcfc:	f7fe f996 	bl	800a02c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800bd00:	4641      	mov	r1, r8
 800bd02:	4620      	mov	r0, r4
 800bd04:	f7fe f992 	bl	800a02c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800bd08:	4639      	mov	r1, r7
 800bd0a:	4620      	mov	r0, r4
 800bd0c:	f7fe f98e 	bl	800a02c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800bd10:	4620      	mov	r0, r4
 800bd12:	9500      	str	r5, [sp, #0]
 800bd14:	462b      	mov	r3, r5
 800bd16:	462a      	mov	r2, r5
 800bd18:	4629      	mov	r1, r5
 800bd1a:	f7ff ff57 	bl	800bbcc <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>
 800bd1e:	4620      	mov	r0, r4
 800bd20:	f884 6024 	strb.w	r6, [r4, #36]	; 0x24
 800bd24:	b005      	add	sp, #20
 800bd26:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bd2a:	bf00      	nop
 800bd2c:	08022f44 	.word	0x08022f44

0800bd30 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>:
 800bd30:	4291      	cmp	r1, r2
 800bd32:	4613      	mov	r3, r2
 800bd34:	d003      	beq.n	800bd3e <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii+0xe>
 800bd36:	460a      	mov	r2, r1
 800bd38:	4619      	mov	r1, r3
 800bd3a:	f005 bdff 	b.w	801193c <_ZN8touchgfx6muldivElll>
 800bd3e:	4770      	bx	lr

0800bd40 <_ZN8touchgfx16DynamicDataGraph9setScaleXEib>:
 800bd40:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bd44:	6803      	ldr	r3, [r0, #0]
 800bd46:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800bd4a:	460d      	mov	r5, r1
 800bd4c:	4604      	mov	r4, r0
 800bd4e:	4798      	blx	r3
 800bd50:	42a8      	cmp	r0, r5
 800bd52:	4606      	mov	r6, r0
 800bd54:	d024      	beq.n	800bda0 <_ZN8touchgfx16DynamicDataGraph9setScaleXEib+0x60>
 800bd56:	6823      	ldr	r3, [r4, #0]
 800bd58:	4601      	mov	r1, r0
 800bd5a:	462a      	mov	r2, r5
 800bd5c:	f8d4 012c 	ldr.w	r0, [r4, #300]	; 0x12c
 800bd60:	f8d3 70a4 	ldr.w	r7, [r3, #164]	; 0xa4
 800bd64:	f7ff ffe4 	bl	800bd30 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800bd68:	462a      	mov	r2, r5
 800bd6a:	4680      	mov	r8, r0
 800bd6c:	4631      	mov	r1, r6
 800bd6e:	f8d4 0130 	ldr.w	r0, [r4, #304]	; 0x130
 800bd72:	f7ff ffdd 	bl	800bd30 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800bd76:	4641      	mov	r1, r8
 800bd78:	4602      	mov	r2, r0
 800bd7a:	4620      	mov	r0, r4
 800bd7c:	47b8      	blx	r7
 800bd7e:	462a      	mov	r2, r5
 800bd80:	4631      	mov	r1, r6
 800bd82:	f8d4 013c 	ldr.w	r0, [r4, #316]	; 0x13c
 800bd86:	f7ff ffd3 	bl	800bd30 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800bd8a:	462a      	mov	r2, r5
 800bd8c:	f8c4 013c 	str.w	r0, [r4, #316]	; 0x13c
 800bd90:	4631      	mov	r1, r6
 800bd92:	f8d4 0140 	ldr.w	r0, [r4, #320]	; 0x140
 800bd96:	f7ff ffcb 	bl	800bd30 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800bd9a:	6325      	str	r5, [r4, #48]	; 0x30
 800bd9c:	f8c4 0140 	str.w	r0, [r4, #320]	; 0x140
 800bda0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800bda4 <_ZN8touchgfx16DynamicDataGraph9setScaleYEib>:
 800bda4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800bda8:	4604      	mov	r4, r0
 800bdaa:	460f      	mov	r7, r1
 800bdac:	b1ba      	cbz	r2, 800bdde <_ZN8touchgfx16DynamicDataGraph9setScaleYEib+0x3a>
 800bdae:	6803      	ldr	r3, [r0, #0]
 800bdb0:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800bdb4:	4798      	blx	r3
 800bdb6:	2600      	movs	r6, #0
 800bdb8:	4681      	mov	r9, r0
 800bdba:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800bdbe:	b235      	sxth	r5, r6
 800bdc0:	42ab      	cmp	r3, r5
 800bdc2:	f106 0601 	add.w	r6, r6, #1
 800bdc6:	dd0a      	ble.n	800bdde <_ZN8touchgfx16DynamicDataGraph9setScaleYEib+0x3a>
 800bdc8:	f8d4 8144 	ldr.w	r8, [r4, #324]	; 0x144
 800bdcc:	463a      	mov	r2, r7
 800bdce:	4649      	mov	r1, r9
 800bdd0:	f858 0025 	ldr.w	r0, [r8, r5, lsl #2]
 800bdd4:	f7ff ffac 	bl	800bd30 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800bdd8:	f848 0025 	str.w	r0, [r8, r5, lsl #2]
 800bddc:	e7ed      	b.n	800bdba <_ZN8touchgfx16DynamicDataGraph9setScaleYEib+0x16>
 800bdde:	6367      	str	r7, [r4, #52]	; 0x34
 800bde0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

0800bde4 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>:
 800bde4:	b570      	push	{r4, r5, r6, lr}
 800bde6:	6803      	ldr	r3, [r0, #0]
 800bde8:	4604      	mov	r4, r0
 800bdea:	f8d3 3178 	ldr.w	r3, [r3, #376]	; 0x178
 800bdee:	460d      	mov	r5, r1
 800bdf0:	4798      	blx	r3
 800bdf2:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 800bdf6:	3301      	adds	r3, #1
 800bdf8:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
 800bdfc:	6823      	ldr	r3, [r4, #0]
 800bdfe:	4629      	mov	r1, r5
 800be00:	4620      	mov	r0, r4
 800be02:	f8d3 317c 	ldr.w	r3, [r3, #380]	; 0x17c
 800be06:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800be0a:	4718      	bx	r3

0800be0c <_ZN8touchgfx16GraphElementLineD1Ev>:
 800be0c:	4770      	bx	lr

0800be0e <_ZN8touchgfx16GraphElementLineD0Ev>:
 800be0e:	b510      	push	{r4, lr}
 800be10:	2130      	movs	r1, #48	; 0x30
 800be12:	4604      	mov	r4, r0
 800be14:	f013 ff56 	bl	801fcc4 <_ZdlPvj>
 800be18:	4620      	mov	r0, r4
 800be1a:	bd10      	pop	{r4, pc}

0800be1c <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800be1c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800be1e:	4604      	mov	r4, r0
 800be20:	4608      	mov	r0, r1
 800be22:	460d      	mov	r5, r1
 800be24:	f7fe fad5 	bl	800a3d2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800be28:	b978      	cbnz	r0, 800be4a <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 800be2a:	4620      	mov	r0, r4
 800be2c:	f7fe fad1 	bl	800a3d2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800be30:	f9b5 6000 	ldrsh.w	r6, [r5]
 800be34:	b150      	cbz	r0, 800be4c <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 800be36:	8026      	strh	r6, [r4, #0]
 800be38:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800be3c:	8063      	strh	r3, [r4, #2]
 800be3e:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800be42:	80a3      	strh	r3, [r4, #4]
 800be44:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800be48:	80e3      	strh	r3, [r4, #6]
 800be4a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800be4c:	f9b4 1000 	ldrsh.w	r1, [r4]
 800be50:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800be54:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800be58:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 800be5c:	88ed      	ldrh	r5, [r5, #6]
 800be5e:	42b1      	cmp	r1, r6
 800be60:	460f      	mov	r7, r1
 800be62:	bfa8      	it	ge
 800be64:	4637      	movge	r7, r6
 800be66:	4293      	cmp	r3, r2
 800be68:	4618      	mov	r0, r3
 800be6a:	4466      	add	r6, ip
 800be6c:	bfa8      	it	ge
 800be6e:	4610      	movge	r0, r2
 800be70:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800be74:	8027      	strh	r7, [r4, #0]
 800be76:	442a      	add	r2, r5
 800be78:	88e5      	ldrh	r5, [r4, #6]
 800be7a:	8060      	strh	r0, [r4, #2]
 800be7c:	4461      	add	r1, ip
 800be7e:	442b      	add	r3, r5
 800be80:	b236      	sxth	r6, r6
 800be82:	b209      	sxth	r1, r1
 800be84:	b212      	sxth	r2, r2
 800be86:	b21b      	sxth	r3, r3
 800be88:	428e      	cmp	r6, r1
 800be8a:	bfac      	ite	ge
 800be8c:	ebc7 0106 	rsbge	r1, r7, r6
 800be90:	ebc7 0101 	rsblt	r1, r7, r1
 800be94:	429a      	cmp	r2, r3
 800be96:	bfac      	ite	ge
 800be98:	ebc0 0202 	rsbge	r2, r0, r2
 800be9c:	ebc0 0203 	rsblt	r2, r0, r3
 800bea0:	80a1      	strh	r1, [r4, #4]
 800bea2:	80e2      	strh	r2, [r4, #6]
 800bea4:	e7d1      	b.n	800be4a <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>

0800bea6 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>:
 800bea6:	6800      	ldr	r0, [r0, #0]
 800bea8:	2800      	cmp	r0, #0
 800beaa:	bfb9      	ittee	lt
 800beac:	2320      	movlt	r3, #32
 800beae:	fb90 f0f3 	sdivlt	r0, r0, r3
 800beb2:	301f      	addge	r0, #31
 800beb4:	1140      	asrge	r0, r0, #5
 800beb6:	4770      	bx	lr

0800beb8 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE>:
 800beb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bebc:	6803      	ldr	r3, [r0, #0]
 800bebe:	6945      	ldr	r5, [r0, #20]
 800bec0:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800bec2:	b093      	sub	sp, #76	; 0x4c
 800bec4:	4604      	mov	r4, r0
 800bec6:	460f      	mov	r7, r1
 800bec8:	2d00      	cmp	r5, #0
 800beca:	f000 81ad 	beq.w	800c228 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x370>
 800bece:	696d      	ldr	r5, [r5, #20]
 800bed0:	4798      	blx	r3
 800bed2:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800bed6:	2b00      	cmp	r3, #0
 800bed8:	d077      	beq.n	800bfca <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800beda:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 800bede:	fb13 f000 	smulbb	r0, r3, r0
 800bee2:	b283      	uxth	r3, r0
 800bee4:	1c58      	adds	r0, r3, #1
 800bee6:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 800beea:	1200      	asrs	r0, r0, #8
 800beec:	d06d      	beq.n	800bfca <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800beee:	b2c3      	uxtb	r3, r0
 800bef0:	9308      	str	r3, [sp, #32]
 800bef2:	6823      	ldr	r3, [r4, #0]
 800bef4:	f10d 0840 	add.w	r8, sp, #64	; 0x40
 800bef8:	462a      	mov	r2, r5
 800befa:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800befe:	4621      	mov	r1, r4
 800bf00:	4640      	mov	r0, r8
 800bf02:	4798      	blx	r3
 800bf04:	e898 0003 	ldmia.w	r8, {r0, r1}
 800bf08:	ae0e      	add	r6, sp, #56	; 0x38
 800bf0a:	e886 0003 	stmia.w	r6, {r0, r1}
 800bf0e:	4639      	mov	r1, r7
 800bf10:	4630      	mov	r0, r6
 800bf12:	f7fe fa1b 	bl	800a34c <_ZN8touchgfx4RectaNERKS0_>
 800bf16:	6823      	ldr	r3, [r4, #0]
 800bf18:	4629      	mov	r1, r5
 800bf1a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800bf1e:	4620      	mov	r0, r4
 800bf20:	4798      	blx	r3
 800bf22:	6823      	ldr	r3, [r4, #0]
 800bf24:	4607      	mov	r7, r0
 800bf26:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800bf2a:	4629      	mov	r1, r5
 800bf2c:	4620      	mov	r0, r4
 800bf2e:	4798      	blx	r3
 800bf30:	4681      	mov	r9, r0
 800bf32:	f894 0038 	ldrb.w	r0, [r4, #56]	; 0x38
 800bf36:	0103      	lsls	r3, r0, #4
 800bf38:	9309      	str	r3, [sp, #36]	; 0x24
 800bf3a:	6823      	ldr	r3, [r4, #0]
 800bf3c:	4629      	mov	r1, r5
 800bf3e:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 800bf42:	4620      	mov	r0, r4
 800bf44:	4798      	blx	r3
 800bf46:	b203      	sxth	r3, r0
 800bf48:	9306      	str	r3, [sp, #24]
 800bf4a:	6823      	ldr	r3, [r4, #0]
 800bf4c:	4629      	mov	r1, r5
 800bf4e:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 800bf52:	4620      	mov	r0, r4
 800bf54:	4798      	blx	r3
 800bf56:	2f00      	cmp	r7, #0
 800bf58:	b203      	sxth	r3, r0
 800bf5a:	9307      	str	r3, [sp, #28]
 800bf5c:	d138      	bne.n	800bfd0 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x118>
 800bf5e:	f1b9 0f00 	cmp.w	r9, #0
 800bf62:	d132      	bne.n	800bfca <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800bf64:	6823      	ldr	r3, [r4, #0]
 800bf66:	464a      	mov	r2, r9
 800bf68:	4629      	mov	r1, r5
 800bf6a:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800bf6e:	4620      	mov	r0, r4
 800bf70:	4798      	blx	r3
 800bf72:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800bf74:	1ac0      	subs	r0, r0, r3
 800bf76:	9010      	str	r0, [sp, #64]	; 0x40
 800bf78:	4640      	mov	r0, r8
 800bf7a:	f7ff fcbb 	bl	800b8f4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800bf7e:	6823      	ldr	r3, [r4, #0]
 800bf80:	4607      	mov	r7, r0
 800bf82:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800bf86:	4629      	mov	r1, r5
 800bf88:	4620      	mov	r0, r4
 800bf8a:	4798      	blx	r3
 800bf8c:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800bf90:	1a38      	subs	r0, r7, r0
 800bf92:	fa0f f880 	sxth.w	r8, r0
 800bf96:	eb13 0f08 	cmn.w	r3, r8
 800bf9a:	d416      	bmi.n	800bfca <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800bf9c:	6823      	ldr	r3, [r4, #0]
 800bf9e:	4629      	mov	r1, r5
 800bfa0:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 800bfa4:	4620      	mov	r0, r4
 800bfa6:	4798      	blx	r3
 800bfa8:	4580      	cmp	r8, r0
 800bfaa:	da0e      	bge.n	800bfca <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800bfac:	9a08      	ldr	r2, [sp, #32]
 800bfae:	6823      	ldr	r3, [r4, #0]
 800bfb0:	9202      	str	r2, [sp, #8]
 800bfb2:	b23f      	sxth	r7, r7
 800bfb4:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 800bfb8:	9201      	str	r2, [sp, #4]
 800bfba:	9700      	str	r7, [sp, #0]
 800bfbc:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 800bfc0:	4631      	mov	r1, r6
 800bfc2:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800bfc6:	4620      	mov	r0, r4
 800bfc8:	47a8      	blx	r5
 800bfca:	b013      	add	sp, #76	; 0x4c
 800bfcc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bfd0:	ddfb      	ble.n	800bfca <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800bfd2:	6823      	ldr	r3, [r4, #0]
 800bfd4:	4629      	mov	r1, r5
 800bfd6:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800bfda:	4620      	mov	r0, r4
 800bfdc:	4798      	blx	r3
 800bfde:	6823      	ldr	r3, [r4, #0]
 800bfe0:	4683      	mov	fp, r0
 800bfe2:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 800bfe6:	4629      	mov	r1, r5
 800bfe8:	4620      	mov	r0, r4
 800bfea:	4798      	blx	r3
 800bfec:	eba0 030b 	sub.w	r3, r0, fp
 800bff0:	2b00      	cmp	r3, #0
 800bff2:	bfb8      	it	lt
 800bff4:	425b      	neglt	r3, r3
 800bff6:	fb93 f3f7 	sdiv	r3, r3, r7
 800bffa:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800bffe:	4680      	mov	r8, r0
 800c000:	dce3      	bgt.n	800bfca <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800c002:	6823      	ldr	r3, [r4, #0]
 800c004:	465a      	mov	r2, fp
 800c006:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800c00a:	4629      	mov	r1, r5
 800c00c:	4620      	mov	r0, r4
 800c00e:	4798      	blx	r3
 800c010:	6823      	ldr	r3, [r4, #0]
 800c012:	4606      	mov	r6, r0
 800c014:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800c018:	4642      	mov	r2, r8
 800c01a:	4629      	mov	r1, r5
 800c01c:	4620      	mov	r0, r4
 800c01e:	4798      	blx	r3
 800c020:	42b0      	cmp	r0, r6
 800c022:	bfa2      	ittt	ge
 800c024:	4643      	movge	r3, r8
 800c026:	46d8      	movge	r8, fp
 800c028:	469b      	movge	fp, r3
 800c02a:	45d8      	cmp	r8, fp
 800c02c:	bfac      	ite	ge
 800c02e:	f04f 33ff 	movge.w	r3, #4294967295
 800c032:	2301      	movlt	r3, #1
 800c034:	fb98 f6f7 	sdiv	r6, r8, r7
 800c038:	fb9b f2f7 	sdiv	r2, fp, r7
 800c03c:	1af6      	subs	r6, r6, r3
 800c03e:	441a      	add	r2, r3
 800c040:	4296      	cmp	r6, r2
 800c042:	bfac      	ite	ge
 800c044:	f04f 3aff 	movge.w	sl, #4294967295
 800c048:	f04f 0a01 	movlt.w	sl, #1
 800c04c:	f1b9 0f00 	cmp.w	r9, #0
 800c050:	d13e      	bne.n	800c0d0 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x218>
 800c052:	fb07 fb0a 	mul.w	fp, r7, sl
 800c056:	eb0a 0802 	add.w	r8, sl, r2
 800c05a:	4377      	muls	r7, r6
 800c05c:	45b0      	cmp	r8, r6
 800c05e:	d0b4      	beq.n	800bfca <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800c060:	6823      	ldr	r3, [r4, #0]
 800c062:	463a      	mov	r2, r7
 800c064:	4629      	mov	r1, r5
 800c066:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800c06a:	4620      	mov	r0, r4
 800c06c:	4798      	blx	r3
 800c06e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c070:	1ac0      	subs	r0, r0, r3
 800c072:	9010      	str	r0, [sp, #64]	; 0x40
 800c074:	a810      	add	r0, sp, #64	; 0x40
 800c076:	f7ff fc3d 	bl	800b8f4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c07a:	6823      	ldr	r3, [r4, #0]
 800c07c:	4681      	mov	r9, r0
 800c07e:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800c082:	4629      	mov	r1, r5
 800c084:	4620      	mov	r0, r4
 800c086:	4798      	blx	r3
 800c088:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 800c08c:	eba9 0000 	sub.w	r0, r9, r0
 800c090:	b203      	sxth	r3, r0
 800c092:	42da      	cmn	r2, r3
 800c094:	9304      	str	r3, [sp, #16]
 800c096:	d418      	bmi.n	800c0ca <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x212>
 800c098:	6822      	ldr	r2, [r4, #0]
 800c09a:	4629      	mov	r1, r5
 800c09c:	f8d2 20a8 	ldr.w	r2, [r2, #168]	; 0xa8
 800c0a0:	4620      	mov	r0, r4
 800c0a2:	4790      	blx	r2
 800c0a4:	9b04      	ldr	r3, [sp, #16]
 800c0a6:	4283      	cmp	r3, r0
 800c0a8:	da0f      	bge.n	800c0ca <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x212>
 800c0aa:	9b08      	ldr	r3, [sp, #32]
 800c0ac:	9302      	str	r3, [sp, #8]
 800c0ae:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800c0b2:	6822      	ldr	r2, [r4, #0]
 800c0b4:	9301      	str	r3, [sp, #4]
 800c0b6:	fa0f f389 	sxth.w	r3, r9
 800c0ba:	9300      	str	r3, [sp, #0]
 800c0bc:	f8d2 9088 	ldr.w	r9, [r2, #136]	; 0x88
 800c0c0:	a90e      	add	r1, sp, #56	; 0x38
 800c0c2:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800c0c6:	4620      	mov	r0, r4
 800c0c8:	47c8      	blx	r9
 800c0ca:	4456      	add	r6, sl
 800c0cc:	445f      	add	r7, fp
 800c0ce:	e7c5      	b.n	800c05c <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x1a4>
 800c0d0:	fb98 f8f9 	sdiv	r8, r8, r9
 800c0d4:	eba8 0203 	sub.w	r2, r8, r3
 800c0d8:	fb9b f8f9 	sdiv	r8, fp, r9
 800c0dc:	4498      	add	r8, r3
 800c0de:	4542      	cmp	r2, r8
 800c0e0:	bfac      	ite	ge
 800c0e2:	f04f 33ff 	movge.w	r3, #4294967295
 800c0e6:	2301      	movlt	r3, #1
 800c0e8:	930a      	str	r3, [sp, #40]	; 0x28
 800c0ea:	6823      	ldr	r3, [r4, #0]
 800c0ec:	9204      	str	r2, [sp, #16]
 800c0ee:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800c0f2:	fb02 f209 	mul.w	r2, r2, r9
 800c0f6:	4629      	mov	r1, r5
 800c0f8:	4620      	mov	r0, r4
 800c0fa:	4798      	blx	r3
 800c0fc:	f10d 0b48 	add.w	fp, sp, #72	; 0x48
 800c100:	f84b 0d08 	str.w	r0, [fp, #-8]!
 800c104:	4658      	mov	r0, fp
 800c106:	f7ff fbf5 	bl	800b8f4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c10a:	b203      	sxth	r3, r0
 800c10c:	9305      	str	r3, [sp, #20]
 800c10e:	6823      	ldr	r3, [r4, #0]
 800c110:	fb06 f207 	mul.w	r2, r6, r7
 800c114:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800c118:	4629      	mov	r1, r5
 800c11a:	4620      	mov	r0, r4
 800c11c:	4798      	blx	r3
 800c11e:	9010      	str	r0, [sp, #64]	; 0x40
 800c120:	4658      	mov	r0, fp
 800c122:	f7ff fbe7 	bl	800b8f4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c126:	fb07 f20a 	mul.w	r2, r7, sl
 800c12a:	920b      	str	r2, [sp, #44]	; 0x2c
 800c12c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800c12e:	4442      	add	r2, r8
 800c130:	b203      	sxth	r3, r0
 800c132:	920c      	str	r2, [sp, #48]	; 0x30
 800c134:	9a05      	ldr	r2, [sp, #20]
 800c136:	429a      	cmp	r2, r3
 800c138:	dc16      	bgt.n	800c168 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x2b0>
 800c13a:	eb06 080a 	add.w	r8, r6, sl
 800c13e:	fb07 f808 	mul.w	r8, r7, r8
 800c142:	9a05      	ldr	r2, [sp, #20]
 800c144:	429a      	cmp	r2, r3
 800c146:	db54      	blt.n	800c1f2 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x33a>
 800c148:	6823      	ldr	r3, [r4, #0]
 800c14a:	4642      	mov	r2, r8
 800c14c:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800c150:	4629      	mov	r1, r5
 800c152:	4620      	mov	r0, r4
 800c154:	4798      	blx	r3
 800c156:	9010      	str	r0, [sp, #64]	; 0x40
 800c158:	4658      	mov	r0, fp
 800c15a:	f7ff fbcb 	bl	800b8f4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c15e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800c160:	4456      	add	r6, sl
 800c162:	b203      	sxth	r3, r0
 800c164:	4490      	add	r8, r2
 800c166:	e7ec      	b.n	800c142 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x28a>
 800c168:	6823      	ldr	r3, [r4, #0]
 800c16a:	fb07 f206 	mul.w	r2, r7, r6
 800c16e:	4629      	mov	r1, r5
 800c170:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800c174:	4620      	mov	r0, r4
 800c176:	4798      	blx	r3
 800c178:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c17a:	1ac0      	subs	r0, r0, r3
 800c17c:	9010      	str	r0, [sp, #64]	; 0x40
 800c17e:	4658      	mov	r0, fp
 800c180:	f7ff fbb8 	bl	800b8f4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c184:	6823      	ldr	r3, [r4, #0]
 800c186:	4680      	mov	r8, r0
 800c188:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800c18c:	4629      	mov	r1, r5
 800c18e:	4620      	mov	r0, r4
 800c190:	4798      	blx	r3
 800c192:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 800c196:	eba8 0000 	sub.w	r0, r8, r0
 800c19a:	b203      	sxth	r3, r0
 800c19c:	42da      	cmn	r2, r3
 800c19e:	930d      	str	r3, [sp, #52]	; 0x34
 800c1a0:	d418      	bmi.n	800c1d4 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x31c>
 800c1a2:	6822      	ldr	r2, [r4, #0]
 800c1a4:	4629      	mov	r1, r5
 800c1a6:	f8d2 20a8 	ldr.w	r2, [r2, #168]	; 0xa8
 800c1aa:	4620      	mov	r0, r4
 800c1ac:	4790      	blx	r2
 800c1ae:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800c1b0:	4283      	cmp	r3, r0
 800c1b2:	da0f      	bge.n	800c1d4 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x31c>
 800c1b4:	9b08      	ldr	r3, [sp, #32]
 800c1b6:	9302      	str	r3, [sp, #8]
 800c1b8:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800c1bc:	6822      	ldr	r2, [r4, #0]
 800c1be:	9301      	str	r3, [sp, #4]
 800c1c0:	fa0f f388 	sxth.w	r3, r8
 800c1c4:	9300      	str	r3, [sp, #0]
 800c1c6:	f8d2 8088 	ldr.w	r8, [r2, #136]	; 0x88
 800c1ca:	a90e      	add	r1, sp, #56	; 0x38
 800c1cc:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800c1d0:	4620      	mov	r0, r4
 800c1d2:	47c0      	blx	r8
 800c1d4:	6823      	ldr	r3, [r4, #0]
 800c1d6:	4456      	add	r6, sl
 800c1d8:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800c1dc:	fb06 f207 	mul.w	r2, r6, r7
 800c1e0:	4629      	mov	r1, r5
 800c1e2:	4620      	mov	r0, r4
 800c1e4:	4798      	blx	r3
 800c1e6:	9010      	str	r0, [sp, #64]	; 0x40
 800c1e8:	4658      	mov	r0, fp
 800c1ea:	f7ff fb83 	bl	800b8f4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c1ee:	b203      	sxth	r3, r0
 800c1f0:	e7a0      	b.n	800c134 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x27c>
 800c1f2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800c1f4:	930d      	str	r3, [sp, #52]	; 0x34
 800c1f6:	9b04      	ldr	r3, [sp, #16]
 800c1f8:	4413      	add	r3, r2
 800c1fa:	9304      	str	r3, [sp, #16]
 800c1fc:	9a04      	ldr	r2, [sp, #16]
 800c1fe:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800c200:	4293      	cmp	r3, r2
 800c202:	f43f aee2 	beq.w	800bfca <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800c206:	9b04      	ldr	r3, [sp, #16]
 800c208:	6822      	ldr	r2, [r4, #0]
 800c20a:	4629      	mov	r1, r5
 800c20c:	f8d2 80ac 	ldr.w	r8, [r2, #172]	; 0xac
 800c210:	4620      	mov	r0, r4
 800c212:	fb03 f209 	mul.w	r2, r3, r9
 800c216:	47c0      	blx	r8
 800c218:	9010      	str	r0, [sp, #64]	; 0x40
 800c21a:	4658      	mov	r0, fp
 800c21c:	f7ff fb6a 	bl	800b8f4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c220:	b203      	sxth	r3, r0
 800c222:	9305      	str	r3, [sp, #20]
 800c224:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800c226:	e785      	b.n	800c134 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x27c>
 800c228:	4798      	blx	r3
 800c22a:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 800c22e:	deff      	udf	#255	; 0xff

0800c230 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>:
 800c230:	b510      	push	{r4, lr}
 800c232:	ea80 73e0 	eor.w	r3, r0, r0, asr #31
 800c236:	ea81 74e1 	eor.w	r4, r1, r1, asr #31
 800c23a:	eba4 74e1 	sub.w	r4, r4, r1, asr #31
 800c23e:	eba3 73e0 	sub.w	r3, r3, r0, asr #31
 800c242:	13a4      	asrs	r4, r4, #14
 800c244:	139b      	asrs	r3, r3, #14
 800c246:	429c      	cmp	r4, r3
 800c248:	bfb8      	it	lt
 800c24a:	461c      	movlt	r4, r3
 800c24c:	2c01      	cmp	r4, #1
 800c24e:	dd07      	ble.n	800c260 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x30>
 800c250:	fb91 f1f4 	sdiv	r1, r1, r4
 800c254:	fb90 f0f4 	sdiv	r0, r0, r4
 800c258:	f7ff ffea 	bl	800c230 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 800c25c:	4360      	muls	r0, r4
 800c25e:	bd10      	pop	{r4, pc}
 800c260:	4340      	muls	r0, r0
 800c262:	fb01 0101 	mla	r1, r1, r1, r0
 800c266:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
 800c26a:	bfb4      	ite	lt
 800c26c:	f44f 4380 	movlt.w	r3, #16384	; 0x4000
 800c270:	f04f 4380 	movge.w	r3, #1073741824	; 0x40000000
 800c274:	2000      	movs	r0, #0
 800c276:	18c2      	adds	r2, r0, r3
 800c278:	428a      	cmp	r2, r1
 800c27a:	bf9c      	itt	ls
 800c27c:	1898      	addls	r0, r3, r2
 800c27e:	1a89      	subls	r1, r1, r2
 800c280:	089b      	lsrs	r3, r3, #2
 800c282:	ea4f 0050 	mov.w	r0, r0, lsr #1
 800c286:	d1f6      	bne.n	800c276 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x46>
 800c288:	e7e9      	b.n	800c25e <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x2e>

0800c28a <_ZNK8touchgfx20AbstractGraphElement21rectFromQ5CoordinatesENS_7CWRUtil2Q5ES2_S2_S2_>:
 800c28a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c28c:	9906      	ldr	r1, [sp, #24]
 800c28e:	4291      	cmp	r1, r2
 800c290:	bfbc      	itt	lt
 800c292:	9206      	strlt	r2, [sp, #24]
 800c294:	460a      	movlt	r2, r1
 800c296:	9907      	ldr	r1, [sp, #28]
 800c298:	428b      	cmp	r3, r1
 800c29a:	4606      	mov	r6, r0
 800c29c:	461c      	mov	r4, r3
 800c29e:	f04f 0020 	mov.w	r0, #32
 800c2a2:	bfc8      	it	gt
 800c2a4:	460c      	movgt	r4, r1
 800c2a6:	fb92 f5f0 	sdiv	r5, r2, r0
 800c2aa:	fb94 f4f0 	sdiv	r4, r4, r0
 800c2ae:	a806      	add	r0, sp, #24
 800c2b0:	bfc8      	it	gt
 800c2b2:	9307      	strgt	r3, [sp, #28]
 800c2b4:	f7ff fdf7 	bl	800bea6 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 800c2b8:	4607      	mov	r7, r0
 800c2ba:	a807      	add	r0, sp, #28
 800c2bc:	f7ff fdf3 	bl	800bea6 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 800c2c0:	1b7a      	subs	r2, r7, r5
 800c2c2:	1b00      	subs	r0, r0, r4
 800c2c4:	80f0      	strh	r0, [r6, #6]
 800c2c6:	8035      	strh	r5, [r6, #0]
 800c2c8:	8074      	strh	r4, [r6, #2]
 800c2ca:	80b2      	strh	r2, [r6, #4]
 800c2cc:	4630      	mov	r0, r6
 800c2ce:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800c2d0 <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>:
 800c2d0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800c2d2:	9c08      	ldr	r4, [sp, #32]
 800c2d4:	2602      	movs	r6, #2
 800c2d6:	3401      	adds	r4, #1
 800c2d8:	fb94 f4f6 	sdiv	r4, r4, r6
 800c2dc:	18a6      	adds	r6, r4, r2
 800c2de:	191f      	adds	r7, r3, r4
 800c2e0:	e9cd 6700 	strd	r6, r7, [sp]
 800c2e4:	1b1b      	subs	r3, r3, r4
 800c2e6:	1b12      	subs	r2, r2, r4
 800c2e8:	4605      	mov	r5, r0
 800c2ea:	f7ff ffce 	bl	800c28a <_ZNK8touchgfx20AbstractGraphElement21rectFromQ5CoordinatesENS_7CWRUtil2Q5ES2_S2_S2_>
 800c2ee:	4628      	mov	r0, r5
 800c2f0:	b003      	add	sp, #12
 800c2f2:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800c2f4 <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs>:
 800c2f4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c2f8:	6943      	ldr	r3, [r0, #20]
 800c2fa:	b087      	sub	sp, #28
 800c2fc:	4606      	mov	r6, r0
 800c2fe:	460d      	mov	r5, r1
 800c300:	2b00      	cmp	r3, #0
 800c302:	d072      	beq.n	800c3ea <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs+0xf6>
 800c304:	695c      	ldr	r4, [r3, #20]
 800c306:	f890 702c 	ldrb.w	r7, [r0, #44]	; 0x2c
 800c30a:	6823      	ldr	r3, [r4, #0]
 800c30c:	4620      	mov	r0, r4
 800c30e:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800c312:	4798      	blx	r3
 800c314:	6823      	ldr	r3, [r4, #0]
 800c316:	4680      	mov	r8, r0
 800c318:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800c31c:	4629      	mov	r1, r5
 800c31e:	4620      	mov	r0, r4
 800c320:	4798      	blx	r3
 800c322:	017f      	lsls	r7, r7, #5
 800c324:	4603      	mov	r3, r0
 800c326:	9700      	str	r7, [sp, #0]
 800c328:	4642      	mov	r2, r8
 800c32a:	4631      	mov	r1, r6
 800c32c:	a802      	add	r0, sp, #8
 800c32e:	f7ff ffcf 	bl	800c2d0 <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>
 800c332:	2d00      	cmp	r5, #0
 800c334:	dd1b      	ble.n	800c36e <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs+0x7a>
 800c336:	6823      	ldr	r3, [r4, #0]
 800c338:	f105 38ff 	add.w	r8, r5, #4294967295
 800c33c:	fa0f f888 	sxth.w	r8, r8
 800c340:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800c344:	4641      	mov	r1, r8
 800c346:	4620      	mov	r0, r4
 800c348:	4798      	blx	r3
 800c34a:	6823      	ldr	r3, [r4, #0]
 800c34c:	4681      	mov	r9, r0
 800c34e:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800c352:	4641      	mov	r1, r8
 800c354:	4620      	mov	r0, r4
 800c356:	4798      	blx	r3
 800c358:	4631      	mov	r1, r6
 800c35a:	4603      	mov	r3, r0
 800c35c:	9700      	str	r7, [sp, #0]
 800c35e:	a804      	add	r0, sp, #16
 800c360:	464a      	mov	r2, r9
 800c362:	f7ff ffb5 	bl	800c2d0 <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>
 800c366:	a904      	add	r1, sp, #16
 800c368:	a802      	add	r0, sp, #8
 800c36a:	f7ff fd57 	bl	800be1c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800c36e:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800c372:	3b01      	subs	r3, #1
 800c374:	429d      	cmp	r5, r3
 800c376:	da19      	bge.n	800c3ac <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs+0xb8>
 800c378:	6823      	ldr	r3, [r4, #0]
 800c37a:	3501      	adds	r5, #1
 800c37c:	b22d      	sxth	r5, r5
 800c37e:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800c382:	4629      	mov	r1, r5
 800c384:	4620      	mov	r0, r4
 800c386:	4798      	blx	r3
 800c388:	6823      	ldr	r3, [r4, #0]
 800c38a:	4680      	mov	r8, r0
 800c38c:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800c390:	4629      	mov	r1, r5
 800c392:	4620      	mov	r0, r4
 800c394:	4798      	blx	r3
 800c396:	4631      	mov	r1, r6
 800c398:	4603      	mov	r3, r0
 800c39a:	9700      	str	r7, [sp, #0]
 800c39c:	a804      	add	r0, sp, #16
 800c39e:	4642      	mov	r2, r8
 800c3a0:	f7ff ff96 	bl	800c2d0 <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>
 800c3a4:	a904      	add	r1, sp, #16
 800c3a6:	a802      	add	r0, sp, #8
 800c3a8:	f7ff fd38 	bl	800be1c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800c3ac:	f9b4 1114 	ldrsh.w	r1, [r4, #276]	; 0x114
 800c3b0:	f8b4 311a 	ldrh.w	r3, [r4, #282]	; 0x11a
 800c3b4:	f9b4 0040 	ldrsh.w	r0, [r4, #64]	; 0x40
 800c3b8:	18ca      	adds	r2, r1, r3
 800c3ba:	f8b4 3042 	ldrh.w	r3, [r4, #66]	; 0x42
 800c3be:	f8ad 1012 	strh.w	r1, [sp, #18]
 800c3c2:	1a9b      	subs	r3, r3, r2
 800c3c4:	f8ad 0014 	strh.w	r0, [sp, #20]
 800c3c8:	2200      	movs	r2, #0
 800c3ca:	a904      	add	r1, sp, #16
 800c3cc:	a802      	add	r0, sp, #8
 800c3ce:	f8ad 2010 	strh.w	r2, [sp, #16]
 800c3d2:	f8ad 3016 	strh.w	r3, [sp, #22]
 800c3d6:	f7fd ffb9 	bl	800a34c <_ZN8touchgfx4RectaNERKS0_>
 800c3da:	6833      	ldr	r3, [r6, #0]
 800c3dc:	a902      	add	r1, sp, #8
 800c3de:	691b      	ldr	r3, [r3, #16]
 800c3e0:	4630      	mov	r0, r6
 800c3e2:	4798      	blx	r3
 800c3e4:	b007      	add	sp, #28
 800c3e6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c3ea:	681b      	ldr	r3, [r3, #0]
 800c3ec:	deff      	udf	#255	; 0xff

0800c3ee <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE>:
 800c3ee:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 800c3f2:	2b00      	cmp	r3, #0
 800c3f4:	da05      	bge.n	800c402 <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE+0x14>
 800c3f6:	880a      	ldrh	r2, [r1, #0]
 800c3f8:	b29b      	uxth	r3, r3
 800c3fa:	441a      	add	r2, r3
 800c3fc:	425b      	negs	r3, r3
 800c3fe:	800a      	strh	r2, [r1, #0]
 800c400:	808b      	strh	r3, [r1, #4]
 800c402:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800c406:	2b00      	cmp	r3, #0
 800c408:	da05      	bge.n	800c416 <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE+0x28>
 800c40a:	884a      	ldrh	r2, [r1, #2]
 800c40c:	b29b      	uxth	r3, r3
 800c40e:	441a      	add	r2, r3
 800c410:	425b      	negs	r3, r3
 800c412:	804a      	strh	r2, [r1, #2]
 800c414:	80cb      	strh	r3, [r1, #6]
 800c416:	4770      	bx	lr

0800c418 <_ZNK8touchgfx20GraphElementGridBase8drawLineERKNS_4RectEssssh>:
 800c418:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800c41a:	4604      	mov	r4, r0
 800c41c:	460d      	mov	r5, r1
 800c41e:	6801      	ldr	r1, [r0, #0]
 800c420:	f9bd 0024 	ldrsh.w	r0, [sp, #36]	; 0x24
 800c424:	9001      	str	r0, [sp, #4]
 800c426:	f9bd 0020 	ldrsh.w	r0, [sp, #32]
 800c42a:	9000      	str	r0, [sp, #0]
 800c42c:	f8d1 6090 	ldr.w	r6, [r1, #144]	; 0x90
 800c430:	a802      	add	r0, sp, #8
 800c432:	4621      	mov	r1, r4
 800c434:	47b0      	blx	r6
 800c436:	a902      	add	r1, sp, #8
 800c438:	4620      	mov	r0, r4
 800c43a:	f7ff ffd8 	bl	800c3ee <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE>
 800c43e:	a802      	add	r0, sp, #8
 800c440:	4629      	mov	r1, r5
 800c442:	f7fd ff83 	bl	800a34c <_ZN8touchgfx4RectaNERKS0_>
 800c446:	a802      	add	r0, sp, #8
 800c448:	f7fd ffc3 	bl	800a3d2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800c44c:	b968      	cbnz	r0, 800c46a <_ZNK8touchgfx20GraphElementGridBase8drawLineERKNS_4RectEssssh+0x52>
 800c44e:	6823      	ldr	r3, [r4, #0]
 800c450:	a902      	add	r1, sp, #8
 800c452:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c454:	4620      	mov	r0, r4
 800c456:	4798      	blx	r3
 800c458:	f7f5 ffcc 	bl	80023f4 <_ZN8touchgfx3HAL3lcdEv>
 800c45c:	6803      	ldr	r3, [r0, #0]
 800c45e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800c460:	6a1d      	ldr	r5, [r3, #32]
 800c462:	f89d 3028 	ldrb.w	r3, [sp, #40]	; 0x28
 800c466:	a902      	add	r1, sp, #8
 800c468:	47a8      	blx	r5
 800c46a:	b004      	add	sp, #16
 800c46c:	bd70      	pop	{r4, r5, r6, pc}

0800c46e <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss>:
 800c46e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c472:	b08b      	sub	sp, #44	; 0x2c
 800c474:	461e      	mov	r6, r3
 800c476:	f9bd 3050 	ldrsh.w	r3, [sp, #80]	; 0x50
 800c47a:	9304      	str	r3, [sp, #16]
 800c47c:	429e      	cmp	r6, r3
 800c47e:	4689      	mov	r9, r1
 800c480:	4615      	mov	r5, r2
 800c482:	d072      	beq.n	800c56a <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0xfc>
 800c484:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800c488:	015b      	lsls	r3, r3, #5
 800c48a:	9303      	str	r3, [sp, #12]
 800c48c:	6813      	ldr	r3, [r2, #0]
 800c48e:	4610      	mov	r0, r2
 800c490:	4631      	mov	r1, r6
 800c492:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800c496:	4798      	blx	r3
 800c498:	ab0a      	add	r3, sp, #40	; 0x28
 800c49a:	4634      	mov	r4, r6
 800c49c:	f843 0d10 	str.w	r0, [r3, #-16]!
 800c4a0:	4618      	mov	r0, r3
 800c4a2:	f7ff fa27 	bl	800b8f4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c4a6:	682b      	ldr	r3, [r5, #0]
 800c4a8:	4631      	mov	r1, r6
 800c4aa:	0147      	lsls	r7, r0, #5
 800c4ac:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800c4b0:	4628      	mov	r0, r5
 800c4b2:	4798      	blx	r3
 800c4b4:	ab0a      	add	r3, sp, #40	; 0x28
 800c4b6:	f843 0d0c 	str.w	r0, [r3, #-12]!
 800c4ba:	4618      	mov	r0, r3
 800c4bc:	f7ff fa1a 	bl	800b8f4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c4c0:	ea4f 1840 	mov.w	r8, r0, lsl #5
 800c4c4:	4642      	mov	r2, r8
 800c4c6:	4639      	mov	r1, r7
 800c4c8:	4648      	mov	r0, r9
 800c4ca:	f013 fba9 	bl	801fc20 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 800c4ce:	2301      	movs	r3, #1
 800c4d0:	9300      	str	r3, [sp, #0]
 800c4d2:	9b00      	ldr	r3, [sp, #0]
 800c4d4:	441c      	add	r4, r3
 800c4d6:	682b      	ldr	r3, [r5, #0]
 800c4d8:	b224      	sxth	r4, r4
 800c4da:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800c4de:	4621      	mov	r1, r4
 800c4e0:	4628      	mov	r0, r5
 800c4e2:	4798      	blx	r3
 800c4e4:	9008      	str	r0, [sp, #32]
 800c4e6:	a808      	add	r0, sp, #32
 800c4e8:	f7ff fa04 	bl	800b8f4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c4ec:	0143      	lsls	r3, r0, #5
 800c4ee:	9301      	str	r3, [sp, #4]
 800c4f0:	682b      	ldr	r3, [r5, #0]
 800c4f2:	4621      	mov	r1, r4
 800c4f4:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800c4f8:	4628      	mov	r0, r5
 800c4fa:	4798      	blx	r3
 800c4fc:	9009      	str	r0, [sp, #36]	; 0x24
 800c4fe:	a809      	add	r0, sp, #36	; 0x24
 800c500:	f7ff f9f8 	bl	800b8f4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c504:	0143      	lsls	r3, r0, #5
 800c506:	9302      	str	r3, [sp, #8]
 800c508:	9b01      	ldr	r3, [sp, #4]
 800c50a:	eba3 0b07 	sub.w	fp, r3, r7
 800c50e:	9b02      	ldr	r3, [sp, #8]
 800c510:	eba3 0a08 	sub.w	sl, r3, r8
 800c514:	4651      	mov	r1, sl
 800c516:	4658      	mov	r0, fp
 800c518:	f7ff fe8a 	bl	800c230 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 800c51c:	b318      	cbz	r0, 800c566 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0xf8>
 800c51e:	4602      	mov	r2, r0
 800c520:	4651      	mov	r1, sl
 800c522:	9005      	str	r0, [sp, #20]
 800c524:	9803      	ldr	r0, [sp, #12]
 800c526:	f005 fa09 	bl	801193c <_ZN8touchgfx6muldivElll>
 800c52a:	2302      	movs	r3, #2
 800c52c:	fb90 faf3 	sdiv	sl, r0, r3
 800c530:	9b05      	ldr	r3, [sp, #20]
 800c532:	9803      	ldr	r0, [sp, #12]
 800c534:	461a      	mov	r2, r3
 800c536:	4659      	mov	r1, fp
 800c538:	f005 fa00 	bl	801193c <_ZN8touchgfx6muldivElll>
 800c53c:	2302      	movs	r3, #2
 800c53e:	eba7 010a 	sub.w	r1, r7, sl
 800c542:	fb90 fbf3 	sdiv	fp, r0, r3
 800c546:	4648      	mov	r0, r9
 800c548:	eb0b 0208 	add.w	r2, fp, r8
 800c54c:	f013 fa3e 	bl	801f9cc <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800c550:	9b02      	ldr	r3, [sp, #8]
 800c552:	eb03 020b 	add.w	r2, r3, fp
 800c556:	9b01      	ldr	r3, [sp, #4]
 800c558:	4648      	mov	r0, r9
 800c55a:	eba3 010a 	sub.w	r1, r3, sl
 800c55e:	f013 fa35 	bl	801f9cc <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800c562:	e9dd 7801 	ldrd	r7, r8, [sp, #4]
 800c566:	42a6      	cmp	r6, r4
 800c568:	db02      	blt.n	800c570 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0x102>
 800c56a:	b00b      	add	sp, #44	; 0x2c
 800c56c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c570:	9b00      	ldr	r3, [sp, #0]
 800c572:	9a04      	ldr	r2, [sp, #16]
 800c574:	42a2      	cmp	r2, r4
 800c576:	bf08      	it	eq
 800c578:	f04f 33ff 	moveq.w	r3, #4294967295
 800c57c:	e7a8      	b.n	800c4d0 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0x62>
	...

0800c580 <_ZN8touchgfx6CanvasD1Ev>:
 800c580:	b510      	push	{r4, lr}
 800c582:	4b04      	ldr	r3, [pc, #16]	; (800c594 <_ZN8touchgfx6CanvasD1Ev+0x14>)
 800c584:	4604      	mov	r4, r0
 800c586:	f840 3b20 	str.w	r3, [r0], #32
 800c58a:	f001 fd31 	bl	800dff0 <_ZN8touchgfx7OutlineD1Ev>
 800c58e:	4620      	mov	r0, r4
 800c590:	bd10      	pop	{r4, pc}
 800c592:	bf00      	nop
 800c594:	08023074 	.word	0x08023074

0800c598 <_ZN8touchgfx6CanvasD0Ev>:
 800c598:	b510      	push	{r4, lr}
 800c59a:	4604      	mov	r4, r0
 800c59c:	f7ff fff0 	bl	800c580 <_ZN8touchgfx6CanvasD1Ev>
 800c5a0:	4620      	mov	r0, r4
 800c5a2:	2170      	movs	r1, #112	; 0x70
 800c5a4:	f013 fb8e 	bl	801fcc4 <_ZdlPvj>
 800c5a8:	4620      	mov	r0, r4
 800c5aa:	bd10      	pop	{r4, pc}

0800c5ac <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE>:
 800c5ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c5b0:	6943      	ldr	r3, [r0, #20]
 800c5b2:	b0a2      	sub	sp, #136	; 0x88
 800c5b4:	4606      	mov	r6, r0
 800c5b6:	460f      	mov	r7, r1
 800c5b8:	2b00      	cmp	r3, #0
 800c5ba:	d06a      	beq.n	800c692 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xe6>
 800c5bc:	695c      	ldr	r4, [r3, #20]
 800c5be:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800c5c2:	2b01      	cmp	r3, #1
 800c5c4:	dc04      	bgt.n	800c5d0 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0x24>
 800c5c6:	2401      	movs	r4, #1
 800c5c8:	4620      	mov	r0, r4
 800c5ca:	b022      	add	sp, #136	; 0x88
 800c5cc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c5d0:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800c5d4:	ad22      	add	r5, sp, #136	; 0x88
 800c5d6:	011b      	lsls	r3, r3, #4
 800c5d8:	f845 3d70 	str.w	r3, [r5, #-112]!
 800c5dc:	4628      	mov	r0, r5
 800c5de:	f7ff fc62 	bl	800bea6 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 800c5e2:	8839      	ldrh	r1, [r7, #0]
 800c5e4:	88ba      	ldrh	r2, [r7, #4]
 800c5e6:	6823      	ldr	r3, [r4, #0]
 800c5e8:	b280      	uxth	r0, r0
 800c5ea:	440a      	add	r2, r1
 800c5ec:	4402      	add	r2, r0
 800c5ee:	1a09      	subs	r1, r1, r0
 800c5f0:	f10d 000e 	add.w	r0, sp, #14
 800c5f4:	9000      	str	r0, [sp, #0]
 800c5f6:	f8d3 8124 	ldr.w	r8, [r3, #292]	; 0x124
 800c5fa:	b212      	sxth	r2, r2
 800c5fc:	ab03      	add	r3, sp, #12
 800c5fe:	b209      	sxth	r1, r1
 800c600:	4620      	mov	r0, r4
 800c602:	47c0      	blx	r8
 800c604:	2800      	cmp	r0, #0
 800c606:	d0de      	beq.n	800c5c6 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0x1a>
 800c608:	f9b4 1114 	ldrsh.w	r1, [r4, #276]	; 0x114
 800c60c:	f8b4 311a 	ldrh.w	r3, [r4, #282]	; 0x11a
 800c610:	f9b4 0040 	ldrsh.w	r0, [r4, #64]	; 0x40
 800c614:	f8ad 1012 	strh.w	r1, [sp, #18]
 800c618:	18ca      	adds	r2, r1, r3
 800c61a:	f8b4 3042 	ldrh.w	r3, [r4, #66]	; 0x42
 800c61e:	f8ad 0014 	strh.w	r0, [sp, #20]
 800c622:	1a9b      	subs	r3, r3, r2
 800c624:	4639      	mov	r1, r7
 800c626:	2200      	movs	r2, #0
 800c628:	a804      	add	r0, sp, #16
 800c62a:	f8ad 3016 	strh.w	r3, [sp, #22]
 800c62e:	f8ad 2010 	strh.w	r2, [sp, #16]
 800c632:	f7fd fe8b 	bl	800a34c <_ZN8touchgfx4RectaNERKS0_>
 800c636:	aa04      	add	r2, sp, #16
 800c638:	4631      	mov	r1, r6
 800c63a:	4628      	mov	r0, r5
 800c63c:	f013 f918 	bl	801f870 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 800c640:	f9b4 7120 	ldrsh.w	r7, [r4, #288]	; 0x120
 800c644:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800c648:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
 800c64c:	2f00      	cmp	r7, #0
 800c64e:	dd03      	ble.n	800c658 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xac>
 800c650:	42bb      	cmp	r3, r7
 800c652:	da01      	bge.n	800c658 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xac>
 800c654:	42ba      	cmp	r2, r7
 800c656:	da0f      	bge.n	800c678 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xcc>
 800c658:	9200      	str	r2, [sp, #0]
 800c65a:	4622      	mov	r2, r4
 800c65c:	4629      	mov	r1, r5
 800c65e:	4630      	mov	r0, r6
 800c660:	f7ff ff05 	bl	800c46e <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss>
 800c664:	f894 102c 	ldrb.w	r1, [r4, #44]	; 0x2c
 800c668:	4628      	mov	r0, r5
 800c66a:	f013 fa2b 	bl	801fac4 <_ZN8touchgfx6Canvas6renderEh>
 800c66e:	4604      	mov	r4, r0
 800c670:	4628      	mov	r0, r5
 800c672:	f7ff ff85 	bl	800c580 <_ZN8touchgfx6CanvasD1Ev>
 800c676:	e7a7      	b.n	800c5c8 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0x1c>
 800c678:	1e7a      	subs	r2, r7, #1
 800c67a:	b212      	sxth	r2, r2
 800c67c:	9200      	str	r2, [sp, #0]
 800c67e:	4629      	mov	r1, r5
 800c680:	4622      	mov	r2, r4
 800c682:	4630      	mov	r0, r6
 800c684:	f7ff fef3 	bl	800c46e <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss>
 800c688:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800c68c:	9300      	str	r3, [sp, #0]
 800c68e:	463b      	mov	r3, r7
 800c690:	e7e3      	b.n	800c65a <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xae>
 800c692:	f8b3 311e 	ldrh.w	r3, [r3, #286]	; 0x11e
 800c696:	deff      	udf	#255	; 0xff

0800c698 <_ZN8touchgfx15GraphLabelsBase22invalidateGraphPointAtEs>:
 800c698:	4770      	bx	lr

0800c69a <_ZNK8touchgfx15GraphLabelsBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE>:
 800c69a:	6c80      	ldr	r0, [r0, #72]	; 0x48
 800c69c:	b118      	cbz	r0, 800c6a6 <_ZNK8touchgfx15GraphLabelsBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE+0xc>
 800c69e:	6803      	ldr	r3, [r0, #0]
 800c6a0:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800c6a4:	4718      	bx	r3
 800c6a6:	4770      	bx	lr

0800c6a8 <_ZNK8touchgfx12GraphLabelsX22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:
 800c6a8:	680b      	ldr	r3, [r1, #0]
 800c6aa:	4608      	mov	r0, r1
 800c6ac:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 800c6b0:	4718      	bx	r3

0800c6b2 <_ZNK8touchgfx12GraphLabelsX22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
 800c6b2:	680b      	ldr	r3, [r1, #0]
 800c6b4:	4608      	mov	r0, r1
 800c6b6:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 800c6ba:	4718      	bx	r3

0800c6bc <_ZNK8touchgfx12GraphLabelsY22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:
 800c6bc:	680b      	ldr	r3, [r1, #0]
 800c6be:	4608      	mov	r0, r1
 800c6c0:	f8d3 30ec 	ldr.w	r3, [r3, #236]	; 0xec
 800c6c4:	4718      	bx	r3

0800c6c6 <_ZNK8touchgfx12GraphLabelsY22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
 800c6c6:	680b      	ldr	r3, [r1, #0]
 800c6c8:	4608      	mov	r0, r1
 800c6ca:	f8d3 30f8 	ldr.w	r3, [r3, #248]	; 0xf8
 800c6ce:	4718      	bx	r3

0800c6d0 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE>:
 800c6d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c6d4:	4a37      	ldr	r2, [pc, #220]	; (800c7b4 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xe4>)
 800c6d6:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 800c6d8:	8812      	ldrh	r2, [r2, #0]
 800c6da:	429a      	cmp	r2, r3
 800c6dc:	b087      	sub	sp, #28
 800c6de:	4604      	mov	r4, r0
 800c6e0:	4689      	mov	r9, r1
 800c6e2:	d937      	bls.n	800c754 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800c6e4:	4a34      	ldr	r2, [pc, #208]	; (800c7b8 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xe8>)
 800c6e6:	6812      	ldr	r2, [r2, #0]
 800c6e8:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800c6ec:	4b33      	ldr	r3, [pc, #204]	; (800c7bc <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xec>)
 800c6ee:	681b      	ldr	r3, [r3, #0]
 800c6f0:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
 800c6f4:	f1b8 0f00 	cmp.w	r8, #0
 800c6f8:	d02c      	beq.n	800c754 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800c6fa:	6803      	ldr	r3, [r0, #0]
 800c6fc:	6945      	ldr	r5, [r0, #20]
 800c6fe:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800c700:	2d00      	cmp	r5, #0
 800c702:	d052      	beq.n	800c7aa <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xda>
 800c704:	696f      	ldr	r7, [r5, #20]
 800c706:	4798      	blx	r3
 800c708:	f897 502c 	ldrb.w	r5, [r7, #44]	; 0x2c
 800c70c:	fb15 f000 	smulbb	r0, r5, r0
 800c710:	b280      	uxth	r0, r0
 800c712:	1c45      	adds	r5, r0, #1
 800c714:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 800c718:	122d      	asrs	r5, r5, #8
 800c71a:	d01b      	beq.n	800c754 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800c71c:	6823      	ldr	r3, [r4, #0]
 800c71e:	4639      	mov	r1, r7
 800c720:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800c724:	4620      	mov	r0, r4
 800c726:	4798      	blx	r3
 800c728:	6823      	ldr	r3, [r4, #0]
 800c72a:	4606      	mov	r6, r0
 800c72c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800c730:	4639      	mov	r1, r7
 800c732:	4620      	mov	r0, r4
 800c734:	4798      	blx	r3
 800c736:	b2ed      	uxtb	r5, r5
 800c738:	4683      	mov	fp, r0
 800c73a:	b970      	cbnz	r0, 800c75a <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x8a>
 800c73c:	b96e      	cbnz	r6, 800c75a <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x8a>
 800c73e:	e9cd 6501 	strd	r6, r5, [sp, #4]
 800c742:	6823      	ldr	r3, [r4, #0]
 800c744:	9600      	str	r6, [sp, #0]
 800c746:	f8d3 508c 	ldr.w	r5, [r3, #140]	; 0x8c
 800c74a:	4642      	mov	r2, r8
 800c74c:	463b      	mov	r3, r7
 800c74e:	4649      	mov	r1, r9
 800c750:	4620      	mov	r0, r4
 800c752:	47a8      	blx	r5
 800c754:	b007      	add	sp, #28
 800c756:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c75a:	2e00      	cmp	r6, #0
 800c75c:	ddfa      	ble.n	800c754 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800c75e:	6823      	ldr	r3, [r4, #0]
 800c760:	4639      	mov	r1, r7
 800c762:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800c766:	4620      	mov	r0, r4
 800c768:	4798      	blx	r3
 800c76a:	6823      	ldr	r3, [r4, #0]
 800c76c:	4682      	mov	sl, r0
 800c76e:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800c772:	4639      	mov	r1, r7
 800c774:	4620      	mov	r0, r4
 800c776:	4798      	blx	r3
 800c778:	4582      	cmp	sl, r0
 800c77a:	bfde      	ittt	le
 800c77c:	4603      	movle	r3, r0
 800c77e:	4650      	movle	r0, sl
 800c780:	469a      	movle	sl, r3
 800c782:	ebaa 0300 	sub.w	r3, sl, r0
 800c786:	fb93 f3f6 	sdiv	r3, r3, r6
 800c78a:	2b64      	cmp	r3, #100	; 0x64
 800c78c:	dce2      	bgt.n	800c754 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800c78e:	e9cd b503 	strd	fp, r5, [sp, #12]
 800c792:	e9cd a601 	strd	sl, r6, [sp, #4]
 800c796:	6823      	ldr	r3, [r4, #0]
 800c798:	9000      	str	r0, [sp, #0]
 800c79a:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 800c79e:	4642      	mov	r2, r8
 800c7a0:	463b      	mov	r3, r7
 800c7a2:	4649      	mov	r1, r9
 800c7a4:	4620      	mov	r0, r4
 800c7a6:	47a8      	blx	r5
 800c7a8:	e7d4      	b.n	800c754 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800c7aa:	4798      	blx	r3
 800c7ac:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 800c7b0:	deff      	udf	#255	; 0xff
 800c7b2:	bf00      	nop
 800c7b4:	200153b8 	.word	0x200153b8
 800c7b8:	200153b4 	.word	0x200153b4
 800c7bc:	200153bc 	.word	0x200153bc

0800c7c0 <_ZN8touchgfx12GraphLabelsYD1Ev>:
 800c7c0:	4770      	bx	lr

0800c7c2 <_ZN8touchgfx12GraphLabelsXD1Ev>:
 800c7c2:	4770      	bx	lr

0800c7c4 <_ZNK8touchgfx12GraphLabelsX31getCorrectlyScaledLabelIntervalEPKNS_17AbstractDataGraphE>:
 800c7c4:	b538      	push	{r3, r4, r5, lr}
 800c7c6:	680a      	ldr	r2, [r1, #0]
 800c7c8:	e9d0 540c 	ldrd	r5, r4, [r0, #48]	; 0x30
 800c7cc:	f8d2 208c 	ldr.w	r2, [r2, #140]	; 0x8c
 800c7d0:	4608      	mov	r0, r1
 800c7d2:	4790      	blx	r2
 800c7d4:	4629      	mov	r1, r5
 800c7d6:	4602      	mov	r2, r0
 800c7d8:	4620      	mov	r0, r4
 800c7da:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c7de:	f7ff baa7 	b.w	800bd30 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>

0800c7e2 <_ZNK8touchgfx12GraphLabelsY31getCorrectlyScaledLabelIntervalEPKNS_17AbstractDataGraphE>:
 800c7e2:	b538      	push	{r3, r4, r5, lr}
 800c7e4:	680a      	ldr	r2, [r1, #0]
 800c7e6:	e9d0 540c 	ldrd	r5, r4, [r0, #48]	; 0x30
 800c7ea:	f8d2 2094 	ldr.w	r2, [r2, #148]	; 0x94
 800c7ee:	4608      	mov	r0, r1
 800c7f0:	4790      	blx	r2
 800c7f2:	4629      	mov	r1, r5
 800c7f4:	4602      	mov	r2, r0
 800c7f6:	4620      	mov	r0, r4
 800c7f8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c7fc:	f7ff ba98 	b.w	800bd30 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>

0800c800 <_ZN8touchgfx12GraphLabelsYD0Ev>:
 800c800:	b510      	push	{r4, lr}
 800c802:	214c      	movs	r1, #76	; 0x4c
 800c804:	4604      	mov	r4, r0
 800c806:	f013 fa5d 	bl	801fcc4 <_ZdlPvj>
 800c80a:	4620      	mov	r0, r4
 800c80c:	bd10      	pop	{r4, pc}

0800c80e <_ZN8touchgfx12GraphLabelsXD0Ev>:
 800c80e:	b510      	push	{r4, lr}
 800c810:	214c      	movs	r1, #76	; 0x4c
 800c812:	4604      	mov	r4, r0
 800c814:	f013 fa56 	bl	801fcc4 <_ZdlPvj>
 800c818:	4620      	mov	r0, r4
 800c81a:	bd10      	pop	{r4, pc}

0800c81c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>:
 800c81c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c820:	b08d      	sub	sp, #52	; 0x34
 800c822:	e9dd 9a18 	ldrd	r9, sl, [sp, #96]	; 0x60
 800c826:	9309      	str	r3, [sp, #36]	; 0x24
 800c828:	f89d 3068 	ldrb.w	r3, [sp, #104]	; 0x68
 800c82c:	930a      	str	r3, [sp, #40]	; 0x28
 800c82e:	4606      	mov	r6, r0
 800c830:	e9cd 1207 	strd	r1, r2, [sp, #28]
 800c834:	e9dd 7816 	ldrd	r7, r8, [sp, #88]	; 0x58
 800c838:	f1b9 0f00 	cmp.w	r9, #0
 800c83c:	d117      	bne.n	800c86e <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x52>
 800c83e:	2f00      	cmp	r7, #0
 800c840:	dc7c      	bgt.n	800c93c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x120>
 800c842:	f1b8 0f00 	cmp.w	r8, #0
 800c846:	da01      	bge.n	800c84c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x30>
 800c848:	2f00      	cmp	r7, #0
 800c84a:	d17a      	bne.n	800c942 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x126>
 800c84c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800c84e:	9318      	str	r3, [sp, #96]	; 0x60
 800c850:	2300      	movs	r3, #0
 800c852:	e9cd 3316 	strd	r3, r3, [sp, #88]	; 0x58
 800c856:	6832      	ldr	r2, [r6, #0]
 800c858:	9907      	ldr	r1, [sp, #28]
 800c85a:	f8d2 408c 	ldr.w	r4, [r2, #140]	; 0x8c
 800c85e:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800c862:	4630      	mov	r0, r6
 800c864:	46a4      	mov	ip, r4
 800c866:	b00d      	add	sp, #52	; 0x34
 800c868:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c86c:	4760      	bx	ip
 800c86e:	fb97 f4f9 	sdiv	r4, r7, r9
 800c872:	1e63      	subs	r3, r4, #1
 800c874:	9305      	str	r3, [sp, #20]
 800c876:	f1ba 0f00 	cmp.w	sl, #0
 800c87a:	d122      	bne.n	800c8c2 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xa6>
 800c87c:	fb98 faf9 	sdiv	sl, r8, r9
 800c880:	fb03 f509 	mul.w	r5, r3, r9
 800c884:	f10a 0a02 	add.w	sl, sl, #2
 800c888:	9b05      	ldr	r3, [sp, #20]
 800c88a:	459a      	cmp	sl, r3
 800c88c:	d059      	beq.n	800c942 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x126>
 800c88e:	42af      	cmp	r7, r5
 800c890:	dc5a      	bgt.n	800c948 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x12c>
 800c892:	45a8      	cmp	r8, r5
 800c894:	da01      	bge.n	800c89a <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x7e>
 800c896:	42af      	cmp	r7, r5
 800c898:	db0e      	blt.n	800c8b8 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x9c>
 800c89a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800c89c:	9302      	str	r3, [sp, #8]
 800c89e:	9905      	ldr	r1, [sp, #20]
 800c8a0:	6b73      	ldr	r3, [r6, #52]	; 0x34
 800c8a2:	6832      	ldr	r2, [r6, #0]
 800c8a4:	434b      	muls	r3, r1
 800c8a6:	e9cd 5300 	strd	r5, r3, [sp]
 800c8aa:	9907      	ldr	r1, [sp, #28]
 800c8ac:	f8d2 b08c 	ldr.w	fp, [r2, #140]	; 0x8c
 800c8b0:	4630      	mov	r0, r6
 800c8b2:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800c8b6:	47d8      	blx	fp
 800c8b8:	9b05      	ldr	r3, [sp, #20]
 800c8ba:	3301      	adds	r3, #1
 800c8bc:	9305      	str	r3, [sp, #20]
 800c8be:	444d      	add	r5, r9
 800c8c0:	e7e2      	b.n	800c888 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x6c>
 800c8c2:	fb97 f3fa 	sdiv	r3, r7, sl
 800c8c6:	3b01      	subs	r3, #1
 800c8c8:	9306      	str	r3, [sp, #24]
 800c8ca:	9a06      	ldr	r2, [sp, #24]
 800c8cc:	fb98 f3fa 	sdiv	r3, r8, sl
 800c8d0:	fb02 fb0a 	mul.w	fp, r2, sl
 800c8d4:	9a05      	ldr	r2, [sp, #20]
 800c8d6:	3302      	adds	r3, #2
 800c8d8:	fb02 f509 	mul.w	r5, r2, r9
 800c8dc:	930b      	str	r3, [sp, #44]	; 0x2c
 800c8de:	45ab      	cmp	fp, r5
 800c8e0:	dd1d      	ble.n	800c91e <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x102>
 800c8e2:	42af      	cmp	r7, r5
 800c8e4:	dc08      	bgt.n	800c8f8 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xdc>
 800c8e6:	45a8      	cmp	r8, r5
 800c8e8:	da08      	bge.n	800c8fc <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xe0>
 800c8ea:	42af      	cmp	r7, r5
 800c8ec:	da06      	bge.n	800c8fc <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xe0>
 800c8ee:	9b05      	ldr	r3, [sp, #20]
 800c8f0:	3301      	adds	r3, #1
 800c8f2:	9305      	str	r3, [sp, #20]
 800c8f4:	444d      	add	r5, r9
 800c8f6:	e7f2      	b.n	800c8de <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xc2>
 800c8f8:	45a8      	cmp	r8, r5
 800c8fa:	dcf8      	bgt.n	800c8ee <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xd2>
 800c8fc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800c8fe:	9302      	str	r3, [sp, #8]
 800c900:	9905      	ldr	r1, [sp, #20]
 800c902:	6b73      	ldr	r3, [r6, #52]	; 0x34
 800c904:	6832      	ldr	r2, [r6, #0]
 800c906:	434b      	muls	r3, r1
 800c908:	e9cd 5300 	strd	r5, r3, [sp]
 800c90c:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 800c910:	9907      	ldr	r1, [sp, #28]
 800c912:	461c      	mov	r4, r3
 800c914:	4630      	mov	r0, r6
 800c916:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800c91a:	47a0      	blx	r4
 800c91c:	e7e7      	b.n	800c8ee <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xd2>
 800c91e:	45ab      	cmp	fp, r5
 800c920:	db04      	blt.n	800c92c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x110>
 800c922:	9b05      	ldr	r3, [sp, #20]
 800c924:	3301      	adds	r3, #1
 800c926:	9305      	str	r3, [sp, #20]
 800c928:	444d      	add	r5, r9
 800c92a:	e7f8      	b.n	800c91e <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x102>
 800c92c:	9b06      	ldr	r3, [sp, #24]
 800c92e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800c930:	3301      	adds	r3, #1
 800c932:	4293      	cmp	r3, r2
 800c934:	9306      	str	r3, [sp, #24]
 800c936:	d004      	beq.n	800c942 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x126>
 800c938:	44d3      	add	fp, sl
 800c93a:	e7d0      	b.n	800c8de <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xc2>
 800c93c:	f1b8 0f00 	cmp.w	r8, #0
 800c940:	dd84      	ble.n	800c84c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x30>
 800c942:	b00d      	add	sp, #52	; 0x34
 800c944:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c948:	45a8      	cmp	r8, r5
 800c94a:	dcb5      	bgt.n	800c8b8 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x9c>
 800c94c:	e7a5      	b.n	800c89a <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x7e>

0800c94e <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>:
 800c94e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c952:	f9b3 4120 	ldrsh.w	r4, [r3, #288]	; 0x120
 800c956:	b089      	sub	sp, #36	; 0x24
 800c958:	2c00      	cmp	r4, #0
 800c95a:	9007      	str	r0, [sp, #28]
 800c95c:	468a      	mov	sl, r1
 800c95e:	4693      	mov	fp, r2
 800c960:	461d      	mov	r5, r3
 800c962:	e9dd c612 	ldrd	ip, r6, [sp, #72]	; 0x48
 800c966:	e9dd 7814 	ldrd	r7, r8, [sp, #80]	; 0x50
 800c96a:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 800c96e:	dd03      	ble.n	800c978 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x2a>
 800c970:	4564      	cmp	r4, ip
 800c972:	dd01      	ble.n	800c978 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x2a>
 800c974:	42b4      	cmp	r4, r6
 800c976:	dd0e      	ble.n	800c996 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x48>
 800c978:	e9cd 8915 	strd	r8, r9, [sp, #84]	; 0x54
 800c97c:	e9cd 6713 	strd	r6, r7, [sp, #76]	; 0x4c
 800c980:	f8cd c048 	str.w	ip, [sp, #72]	; 0x48
 800c984:	9807      	ldr	r0, [sp, #28]
 800c986:	462b      	mov	r3, r5
 800c988:	465a      	mov	r2, fp
 800c98a:	4651      	mov	r1, sl
 800c98c:	b009      	add	sp, #36	; 0x24
 800c98e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c992:	f7ff bf43 	b.w	800c81c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>
 800c996:	f104 3eff 	add.w	lr, r4, #4294967295
 800c99a:	e9cd 8903 	strd	r8, r9, [sp, #12]
 800c99e:	9702      	str	r7, [sp, #8]
 800c9a0:	e9cd ce00 	strd	ip, lr, [sp]
 800c9a4:	f7ff ff3a 	bl	800c81c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>
 800c9a8:	e9cd 8915 	strd	r8, r9, [sp, #84]	; 0x54
 800c9ac:	e9cd 6713 	strd	r6, r7, [sp, #76]	; 0x4c
 800c9b0:	9412      	str	r4, [sp, #72]	; 0x48
 800c9b2:	e7e7      	b.n	800c984 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x36>

0800c9b4 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>:
 800c9b4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c9b8:	f1b3 0900 	subs.w	r9, r3, #0
 800c9bc:	460d      	mov	r5, r1
 800c9be:	4690      	mov	r8, r2
 800c9c0:	9f08      	ldr	r7, [sp, #32]
 800c9c2:	f8bd a024 	ldrh.w	sl, [sp, #36]	; 0x24
 800c9c6:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 800c9c8:	da18      	bge.n	800c9fc <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x48>
 800c9ca:	2a01      	cmp	r2, #1
 800c9cc:	dd16      	ble.n	800c9fc <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x48>
 800c9ce:	232d      	movs	r3, #45	; 0x2d
 800c9d0:	800b      	strh	r3, [r1, #0]
 800c9d2:	f1c9 0900 	rsb	r9, r9, #0
 800c9d6:	2001      	movs	r0, #1
 800c9d8:	2f00      	cmp	r7, #0
 800c9da:	d111      	bne.n	800ca00 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x4c>
 800c9dc:	eba8 0100 	sub.w	r1, r8, r0
 800c9e0:	2302      	movs	r3, #2
 800c9e2:	eb05 0040 	add.w	r0, r5, r0, lsl #1
 800c9e6:	fb96 f3f3 	sdiv	r3, r6, r3
 800c9ea:	4a24      	ldr	r2, [pc, #144]	; (800ca7c <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc8>)
 800c9ec:	444b      	add	r3, r9
 800c9ee:	b289      	uxth	r1, r1
 800c9f0:	fb93 f3f6 	sdiv	r3, r3, r6
 800c9f4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c9f8:	f006 be06 	b.w	8013608 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800c9fc:	2000      	movs	r0, #0
 800c9fe:	e7eb      	b.n	800c9d8 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x24>
 800ca00:	dd39      	ble.n	800ca76 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc2>
 800ca02:	fb99 f4f6 	sdiv	r4, r9, r6
 800ca06:	eba8 0100 	sub.w	r1, r8, r0
 800ca0a:	4623      	mov	r3, r4
 800ca0c:	4a1b      	ldr	r2, [pc, #108]	; (800ca7c <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc8>)
 800ca0e:	b289      	uxth	r1, r1
 800ca10:	eb05 0040 	add.w	r0, r5, r0, lsl #1
 800ca14:	f006 fdf8 	bl	8013608 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800ca18:	4628      	mov	r0, r5
 800ca1a:	f006 fa81 	bl	8012f20 <_ZN8touchgfx7Unicode6strlenEPKt>
 800ca1e:	f108 38ff 	add.w	r8, r8, #4294967295
 800ca22:	4580      	cmp	r8, r0
 800ca24:	dd27      	ble.n	800ca76 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc2>
 800ca26:	f825 a010 	strh.w	sl, [r5, r0, lsl #1]
 800ca2a:	fb06 9314 	mls	r3, r6, r4, r9
 800ca2e:	3001      	adds	r0, #1
 800ca30:	2200      	movs	r2, #0
 800ca32:	f04f 090a 	mov.w	r9, #10
 800ca36:	f107 3aff 	add.w	sl, r7, #4294967295
 800ca3a:	f04f 0e02 	mov.w	lr, #2
 800ca3e:	fb96 fefe 	sdiv	lr, r6, lr
 800ca42:	4580      	cmp	r8, r0
 800ca44:	4684      	mov	ip, r0
 800ca46:	dd13      	ble.n	800ca70 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xbc>
 800ca48:	fb09 f303 	mul.w	r3, r9, r3
 800ca4c:	4592      	cmp	sl, r2
 800ca4e:	f102 0201 	add.w	r2, r2, #1
 800ca52:	bf08      	it	eq
 800ca54:	4473      	addeq	r3, lr
 800ca56:	f100 0c01 	add.w	ip, r0, #1
 800ca5a:	fb93 f4f6 	sdiv	r4, r3, r6
 800ca5e:	4297      	cmp	r7, r2
 800ca60:	f104 0130 	add.w	r1, r4, #48	; 0x30
 800ca64:	f825 1010 	strh.w	r1, [r5, r0, lsl #1]
 800ca68:	fb06 3314 	mls	r3, r6, r4, r3
 800ca6c:	4660      	mov	r0, ip
 800ca6e:	d1e8      	bne.n	800ca42 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x8e>
 800ca70:	2300      	movs	r3, #0
 800ca72:	f825 301c 	strh.w	r3, [r5, ip, lsl #1]
 800ca76:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800ca7a:	bf00      	nop
 800ca7c:	08022ae4 	.word	0x08022ae4

0800ca80 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs>:
 800ca80:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ca84:	4a6b      	ldr	r2, [pc, #428]	; (800cc34 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1b4>)
 800ca86:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 800ca88:	8812      	ldrh	r2, [r2, #0]
 800ca8a:	429a      	cmp	r2, r3
 800ca8c:	b092      	sub	sp, #72	; 0x48
 800ca8e:	4604      	mov	r4, r0
 800ca90:	460e      	mov	r6, r1
 800ca92:	d93a      	bls.n	800cb0a <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800ca94:	4a68      	ldr	r2, [pc, #416]	; (800cc38 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1b8>)
 800ca96:	6812      	ldr	r2, [r2, #0]
 800ca98:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800ca9c:	4b67      	ldr	r3, [pc, #412]	; (800cc3c <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1bc>)
 800ca9e:	681b      	ldr	r3, [r3, #0]
 800caa0:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
 800caa4:	f1b8 0f00 	cmp.w	r8, #0
 800caa8:	d02f      	beq.n	800cb0a <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800caaa:	6803      	ldr	r3, [r0, #0]
 800caac:	6945      	ldr	r5, [r0, #20]
 800caae:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800cab0:	2d00      	cmp	r5, #0
 800cab2:	f000 80ba 	beq.w	800cc2a <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1aa>
 800cab6:	696f      	ldr	r7, [r5, #20]
 800cab8:	4798      	blx	r3
 800caba:	f897 302c 	ldrb.w	r3, [r7, #44]	; 0x2c
 800cabe:	fb13 f000 	smulbb	r0, r3, r0
 800cac2:	b280      	uxth	r0, r0
 800cac4:	1c43      	adds	r3, r0, #1
 800cac6:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 800caca:	0a03      	lsrs	r3, r0, #8
 800cacc:	d01d      	beq.n	800cb0a <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800cace:	6b39      	ldr	r1, [r7, #48]	; 0x30
 800cad0:	6823      	ldr	r3, [r4, #0]
 800cad2:	434e      	muls	r6, r1
 800cad4:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800cad8:	4639      	mov	r1, r7
 800cada:	4620      	mov	r0, r4
 800cadc:	4798      	blx	r3
 800cade:	6823      	ldr	r3, [r4, #0]
 800cae0:	4605      	mov	r5, r0
 800cae2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800cae6:	4639      	mov	r1, r7
 800cae8:	4620      	mov	r0, r4
 800caea:	4798      	blx	r3
 800caec:	2d00      	cmp	r5, #0
 800caee:	dd0f      	ble.n	800cb10 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x90>
 800caf0:	fb96 f3f5 	sdiv	r3, r6, r5
 800caf4:	436b      	muls	r3, r5
 800caf6:	1b9a      	subs	r2, r3, r6
 800caf8:	4253      	negs	r3, r2
 800cafa:	4153      	adcs	r3, r2
 800cafc:	2800      	cmp	r0, #0
 800cafe:	dd09      	ble.n	800cb14 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x94>
 800cb00:	fb96 f2f0 	sdiv	r2, r6, r0
 800cb04:	4350      	muls	r0, r2
 800cb06:	42b0      	cmp	r0, r6
 800cb08:	d10e      	bne.n	800cb28 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xa8>
 800cb0a:	b012      	add	sp, #72	; 0x48
 800cb0c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800cb10:	2300      	movs	r3, #0
 800cb12:	e7f3      	b.n	800cafc <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x7c>
 800cb14:	d108      	bne.n	800cb28 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xa8>
 800cb16:	2d00      	cmp	r5, #0
 800cb18:	f040 8084 	bne.w	800cc24 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1a4>
 800cb1c:	2e00      	cmp	r6, #0
 800cb1e:	d055      	beq.n	800cbcc <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x14c>
 800cb20:	2b00      	cmp	r3, #0
 800cb22:	d0f2      	beq.n	800cb0a <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800cb24:	462a      	mov	r2, r5
 800cb26:	e007      	b.n	800cb38 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xb8>
 800cb28:	2b00      	cmp	r3, #0
 800cb2a:	d0ee      	beq.n	800cb0a <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800cb2c:	2d00      	cmp	r5, #0
 800cb2e:	d0f9      	beq.n	800cb24 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xa4>
 800cb30:	fb96 f2f5 	sdiv	r2, r6, r5
 800cb34:	6b65      	ldr	r5, [r4, #52]	; 0x34
 800cb36:	436a      	muls	r2, r5
 800cb38:	683b      	ldr	r3, [r7, #0]
 800cb3a:	f8df 9104 	ldr.w	r9, [pc, #260]	; 800cc40 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1c0>
 800cb3e:	f8d3 3110 	ldr.w	r3, [r3, #272]	; 0x110
 800cb42:	4631      	mov	r1, r6
 800cb44:	4638      	mov	r0, r7
 800cb46:	4798      	blx	r3
 800cb48:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800cb4a:	9302      	str	r3, [sp, #8]
 800cb4c:	f8b4 3044 	ldrh.w	r3, [r4, #68]	; 0x44
 800cb50:	9301      	str	r3, [sp, #4]
 800cb52:	f8b4 3042 	ldrh.w	r3, [r4, #66]	; 0x42
 800cb56:	9300      	str	r3, [sp, #0]
 800cb58:	a908      	add	r1, sp, #32
 800cb5a:	4603      	mov	r3, r0
 800cb5c:	2214      	movs	r2, #20
 800cb5e:	4620      	mov	r0, r4
 800cb60:	f7ff ff28 	bl	800c9b4 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>
 800cb64:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800cb68:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800cb6a:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800cb6e:	f8d8 3000 	ldr.w	r3, [r8]
 800cb72:	d12d      	bne.n	800cbd0 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x150>
 800cb74:	f8d9 0000 	ldr.w	r0, [r9]
 800cb78:	699d      	ldr	r5, [r3, #24]
 800cb7a:	f7f7 fee1 	bl	8004940 <_ZNK8touchgfx5Texts7getTextEt>
 800cb7e:	aa08      	add	r2, sp, #32
 800cb80:	4601      	mov	r1, r0
 800cb82:	4640      	mov	r0, r8
 800cb84:	47a8      	blx	r5
 800cb86:	4605      	mov	r5, r0
 800cb88:	683b      	ldr	r3, [r7, #0]
 800cb8a:	f8b7 806c 	ldrh.w	r8, [r7, #108]	; 0x6c
 800cb8e:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 800cb92:	4631      	mov	r1, r6
 800cb94:	4638      	mov	r0, r7
 800cb96:	4798      	blx	r3
 800cb98:	ab12      	add	r3, sp, #72	; 0x48
 800cb9a:	f843 0d34 	str.w	r0, [r3, #-52]!
 800cb9e:	4618      	mov	r0, r3
 800cba0:	f7fe fea8 	bl	800b8f4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800cba4:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800cba8:	f8ad 301e 	strh.w	r3, [sp, #30]
 800cbac:	4440      	add	r0, r8
 800cbae:	6823      	ldr	r3, [r4, #0]
 800cbb0:	f8ad 501c 	strh.w	r5, [sp, #28]
 800cbb4:	eba0 0055 	sub.w	r0, r0, r5, lsr #1
 800cbb8:	2200      	movs	r2, #0
 800cbba:	f8ad 0018 	strh.w	r0, [sp, #24]
 800cbbe:	f8ad 201a 	strh.w	r2, [sp, #26]
 800cbc2:	691b      	ldr	r3, [r3, #16]
 800cbc4:	a906      	add	r1, sp, #24
 800cbc6:	4620      	mov	r0, r4
 800cbc8:	4798      	blx	r3
 800cbca:	e79e      	b.n	800cb0a <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800cbcc:	4632      	mov	r2, r6
 800cbce:	e7b3      	b.n	800cb38 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xb8>
 800cbd0:	f8d9 0000 	ldr.w	r0, [r9]
 800cbd4:	6a9d      	ldr	r5, [r3, #40]	; 0x28
 800cbd6:	f7f7 feb3 	bl	8004940 <_ZNK8touchgfx5Texts7getTextEt>
 800cbda:	aa08      	add	r2, sp, #32
 800cbdc:	4601      	mov	r1, r0
 800cbde:	4640      	mov	r0, r8
 800cbe0:	47a8      	blx	r5
 800cbe2:	f8d8 3000 	ldr.w	r3, [r8]
 800cbe6:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800cbe8:	f8d3 a040 	ldr.w	sl, [r3, #64]	; 0x40
 800cbec:	4605      	mov	r5, r0
 800cbee:	f8d9 0000 	ldr.w	r0, [r9]
 800cbf2:	f7f7 fea5 	bl	8004940 <_ZNK8touchgfx5Texts7getTextEt>
 800cbf6:	aa08      	add	r2, sp, #32
 800cbf8:	4601      	mov	r1, r0
 800cbfa:	4640      	mov	r0, r8
 800cbfc:	47d0      	blx	sl
 800cbfe:	f8d8 3000 	ldr.w	r3, [r8]
 800cc02:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800cc04:	f8d3 a024 	ldr.w	sl, [r3, #36]	; 0x24
 800cc08:	fb15 f500 	smulbb	r5, r5, r0
 800cc0c:	f8d9 0000 	ldr.w	r0, [r9]
 800cc10:	f7f7 fe96 	bl	8004940 <_ZNK8touchgfx5Texts7getTextEt>
 800cc14:	aa08      	add	r2, sp, #32
 800cc16:	4601      	mov	r1, r0
 800cc18:	4640      	mov	r0, r8
 800cc1a:	47d0      	blx	sl
 800cc1c:	b2ad      	uxth	r5, r5
 800cc1e:	4405      	add	r5, r0
 800cc20:	b2ad      	uxth	r5, r5
 800cc22:	e7b1      	b.n	800cb88 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x108>
 800cc24:	2b00      	cmp	r3, #0
 800cc26:	d183      	bne.n	800cb30 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xb0>
 800cc28:	e76f      	b.n	800cb0a <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800cc2a:	4798      	blx	r3
 800cc2c:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 800cc30:	deff      	udf	#255	; 0xff
 800cc32:	bf00      	nop
 800cc34:	200153b8 	.word	0x200153b8
 800cc38:	200153b4 	.word	0x200153b4
 800cc3c:	200153bc 	.word	0x200153bc
 800cc40:	200153c0 	.word	0x200153c0

0800cc44 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih>:
 800cc44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cc48:	461d      	mov	r5, r3
 800cc4a:	b099      	sub	sp, #100	; 0x64
 800cc4c:	681b      	ldr	r3, [r3, #0]
 800cc4e:	4604      	mov	r4, r0
 800cc50:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 800cc54:	4689      	mov	r9, r1
 800cc56:	4628      	mov	r0, r5
 800cc58:	9922      	ldr	r1, [sp, #136]	; 0x88
 800cc5a:	4690      	mov	r8, r2
 800cc5c:	4798      	blx	r3
 800cc5e:	af18      	add	r7, sp, #96	; 0x60
 800cc60:	f847 0d28 	str.w	r0, [r7, #-40]!
 800cc64:	4638      	mov	r0, r7
 800cc66:	f7fe fe45 	bl	800b8f4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800cc6a:	f8b5 3116 	ldrh.w	r3, [r5, #278]	; 0x116
 800cc6e:	1ac0      	subs	r0, r0, r3
 800cc70:	b200      	sxth	r0, r0
 800cc72:	2800      	cmp	r0, #0
 800cc74:	f2c0 80b0 	blt.w	800cdd8 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x194>
 800cc78:	f8b5 2118 	ldrh.w	r2, [r5, #280]	; 0x118
 800cc7c:	441a      	add	r2, r3
 800cc7e:	f8b5 3040 	ldrh.w	r3, [r5, #64]	; 0x40
 800cc82:	1a9b      	subs	r3, r3, r2
 800cc84:	b21b      	sxth	r3, r3
 800cc86:	4298      	cmp	r0, r3
 800cc88:	f280 80a6 	bge.w	800cdd8 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x194>
 800cc8c:	682b      	ldr	r3, [r5, #0]
 800cc8e:	e9dd 1222 	ldrd	r1, r2, [sp, #136]	; 0x88
 800cc92:	f8d3 3110 	ldr.w	r3, [r3, #272]	; 0x110
 800cc96:	4628      	mov	r0, r5
 800cc98:	4798      	blx	r3
 800cc9a:	682b      	ldr	r3, [r5, #0]
 800cc9c:	f8b4 a042 	ldrh.w	sl, [r4, #66]	; 0x42
 800cca0:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800cca4:	f8b4 b044 	ldrh.w	fp, [r4, #68]	; 0x44
 800cca8:	4606      	mov	r6, r0
 800ccaa:	4628      	mov	r0, r5
 800ccac:	4798      	blx	r3
 800ccae:	f8cd a000 	str.w	sl, [sp]
 800ccb2:	e9cd b001 	strd	fp, r0, [sp, #4]
 800ccb6:	4633      	mov	r3, r6
 800ccb8:	4639      	mov	r1, r7
 800ccba:	2214      	movs	r2, #20
 800ccbc:	4620      	mov	r0, r4
 800ccbe:	f7ff fe79 	bl	800c9b4 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>
 800ccc2:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800ccc6:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800ccc8:	f8df a16c 	ldr.w	sl, [pc, #364]	; 800ce38 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1f4>
 800cccc:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800ccd0:	f8d8 3000 	ldr.w	r3, [r8]
 800ccd4:	f040 8083 	bne.w	800cdde <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x19a>
 800ccd8:	f8da 0000 	ldr.w	r0, [sl]
 800ccdc:	699e      	ldr	r6, [r3, #24]
 800ccde:	f7f7 fe2f 	bl	8004940 <_ZNK8touchgfx5Texts7getTextEt>
 800cce2:	463a      	mov	r2, r7
 800cce4:	4601      	mov	r1, r0
 800cce6:	4640      	mov	r0, r8
 800cce8:	47b0      	blx	r6
 800ccea:	4606      	mov	r6, r0
 800ccec:	682b      	ldr	r3, [r5, #0]
 800ccee:	9922      	ldr	r1, [sp, #136]	; 0x88
 800ccf0:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 800ccf4:	f8b5 a06c 	ldrh.w	sl, [r5, #108]	; 0x6c
 800ccf8:	4628      	mov	r0, r5
 800ccfa:	4798      	blx	r3
 800ccfc:	f10d 0b60 	add.w	fp, sp, #96	; 0x60
 800cd00:	ad05      	add	r5, sp, #20
 800cd02:	f84b 0d3c 	str.w	r0, [fp, #-60]!
 800cd06:	4658      	mov	r0, fp
 800cd08:	f7fe fdf4 	bl	800b8f4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800cd0c:	4450      	add	r0, sl
 800cd0e:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800cd12:	f8ad 6018 	strh.w	r6, [sp, #24]
 800cd16:	eba0 0056 	sub.w	r0, r0, r6, lsr #1
 800cd1a:	f04f 0a00 	mov.w	sl, #0
 800cd1e:	f8ad 301a 	strh.w	r3, [sp, #26]
 800cd22:	f8ad 0014 	strh.w	r0, [sp, #20]
 800cd26:	f8ad a016 	strh.w	sl, [sp, #22]
 800cd2a:	e895 0003 	ldmia.w	r5, {r0, r1}
 800cd2e:	ae07      	add	r6, sp, #28
 800cd30:	e886 0003 	stmia.w	r6, {r0, r1}
 800cd34:	4649      	mov	r1, r9
 800cd36:	4630      	mov	r0, r6
 800cd38:	f7fd fb08 	bl	800a34c <_ZN8touchgfx4RectaNERKS0_>
 800cd3c:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800cd40:	4553      	cmp	r3, sl
 800cd42:	dd49      	ble.n	800cdd8 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x194>
 800cd44:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800cd48:	4553      	cmp	r3, sl
 800cd4a:	dd45      	ble.n	800cdd8 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x194>
 800cd4c:	f8bd 301c 	ldrh.w	r3, [sp, #28]
 800cd50:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800cd54:	1a9b      	subs	r3, r3, r2
 800cd56:	f8ad 301c 	strh.w	r3, [sp, #28]
 800cd5a:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800cd5e:	f8bd 301e 	ldrh.w	r3, [sp, #30]
 800cd62:	1a9b      	subs	r3, r3, r2
 800cd64:	f8ad 301e 	strh.w	r3, [sp, #30]
 800cd68:	6823      	ldr	r3, [r4, #0]
 800cd6a:	4620      	mov	r0, r4
 800cd6c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800cd6e:	4629      	mov	r1, r5
 800cd70:	4798      	blx	r3
 800cd72:	4b30      	ldr	r3, [pc, #192]	; (800ce34 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1f0>)
 800cd74:	f8b4 903c 	ldrh.w	r9, [r4, #60]	; 0x3c
 800cd78:	681b      	ldr	r3, [r3, #0]
 800cd7a:	f894 1040 	ldrb.w	r1, [r4, #64]	; 0x40
 800cd7e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800cd80:	eb03 0349 	add.w	r3, r3, r9, lsl #1
 800cd84:	785b      	ldrb	r3, [r3, #1]
 800cd86:	920b      	str	r2, [sp, #44]	; 0x2c
 800cd88:	f3c3 0001 	ubfx	r0, r3, #0, #2
 800cd8c:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800cd90:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800cd94:	f89d 3090 	ldrb.w	r3, [sp, #144]	; 0x90
 800cd98:	f88d 102a 	strb.w	r1, [sp, #42]	; 0x2a
 800cd9c:	f88d 3032 	strb.w	r3, [sp, #50]	; 0x32
 800cda0:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 800cda4:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 800cda8:	f8ad a030 	strh.w	sl, [sp, #48]	; 0x30
 800cdac:	f88d a033 	strb.w	sl, [sp, #51]	; 0x33
 800cdb0:	f88d a034 	strb.w	sl, [sp, #52]	; 0x34
 800cdb4:	f7f5 fb1e 	bl	80023f4 <_ZN8touchgfx3HAL3lcdEv>
 800cdb8:	4b1f      	ldr	r3, [pc, #124]	; (800ce38 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1f4>)
 800cdba:	4604      	mov	r4, r0
 800cdbc:	4649      	mov	r1, r9
 800cdbe:	6818      	ldr	r0, [r3, #0]
 800cdc0:	f7f7 fdbe 	bl	8004940 <_ZNK8touchgfx5Texts7getTextEt>
 800cdc4:	e9cd 7a02 	strd	r7, sl, [sp, #8]
 800cdc8:	e9cd b000 	strd	fp, r0, [sp]
 800cdcc:	4633      	mov	r3, r6
 800cdce:	e895 0006 	ldmia.w	r5, {r1, r2}
 800cdd2:	4620      	mov	r0, r4
 800cdd4:	f7f7 fd66 	bl	80048a4 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800cdd8:	b019      	add	sp, #100	; 0x64
 800cdda:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cdde:	f8da 0000 	ldr.w	r0, [sl]
 800cde2:	6a9e      	ldr	r6, [r3, #40]	; 0x28
 800cde4:	f7f7 fdac 	bl	8004940 <_ZNK8touchgfx5Texts7getTextEt>
 800cde8:	463a      	mov	r2, r7
 800cdea:	4601      	mov	r1, r0
 800cdec:	4640      	mov	r0, r8
 800cdee:	47b0      	blx	r6
 800cdf0:	f8d8 3000 	ldr.w	r3, [r8]
 800cdf4:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800cdf6:	f8d3 b040 	ldr.w	fp, [r3, #64]	; 0x40
 800cdfa:	4606      	mov	r6, r0
 800cdfc:	f8da 0000 	ldr.w	r0, [sl]
 800ce00:	f7f7 fd9e 	bl	8004940 <_ZNK8touchgfx5Texts7getTextEt>
 800ce04:	463a      	mov	r2, r7
 800ce06:	4601      	mov	r1, r0
 800ce08:	4640      	mov	r0, r8
 800ce0a:	47d8      	blx	fp
 800ce0c:	f8d8 3000 	ldr.w	r3, [r8]
 800ce10:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800ce12:	f8d3 b024 	ldr.w	fp, [r3, #36]	; 0x24
 800ce16:	fb16 f600 	smulbb	r6, r6, r0
 800ce1a:	f8da 0000 	ldr.w	r0, [sl]
 800ce1e:	f7f7 fd8f 	bl	8004940 <_ZNK8touchgfx5Texts7getTextEt>
 800ce22:	463a      	mov	r2, r7
 800ce24:	4601      	mov	r1, r0
 800ce26:	4640      	mov	r0, r8
 800ce28:	47d8      	blx	fp
 800ce2a:	b2b6      	uxth	r6, r6
 800ce2c:	4406      	add	r6, r0
 800ce2e:	b2b6      	uxth	r6, r6
 800ce30:	e75c      	b.n	800ccec <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xa8>
 800ce32:	bf00      	nop
 800ce34:	200153b4 	.word	0x200153b4
 800ce38:	200153c0 	.word	0x200153c0

0800ce3c <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih>:
 800ce3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ce40:	4698      	mov	r8, r3
 800ce42:	b099      	sub	sp, #100	; 0x64
 800ce44:	681b      	ldr	r3, [r3, #0]
 800ce46:	4604      	mov	r4, r0
 800ce48:	f8d3 3118 	ldr.w	r3, [r3, #280]	; 0x118
 800ce4c:	4689      	mov	r9, r1
 800ce4e:	4640      	mov	r0, r8
 800ce50:	9922      	ldr	r1, [sp, #136]	; 0x88
 800ce52:	4617      	mov	r7, r2
 800ce54:	4798      	blx	r3
 800ce56:	ae18      	add	r6, sp, #96	; 0x60
 800ce58:	f846 0d28 	str.w	r0, [r6, #-40]!
 800ce5c:	4630      	mov	r0, r6
 800ce5e:	f7fe fd49 	bl	800b8f4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800ce62:	f8b8 3114 	ldrh.w	r3, [r8, #276]	; 0x114
 800ce66:	1ac0      	subs	r0, r0, r3
 800ce68:	b200      	sxth	r0, r0
 800ce6a:	2800      	cmp	r0, #0
 800ce6c:	f2c0 80c0 	blt.w	800cff0 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1b4>
 800ce70:	f8b8 211a 	ldrh.w	r2, [r8, #282]	; 0x11a
 800ce74:	441a      	add	r2, r3
 800ce76:	f8b8 3042 	ldrh.w	r3, [r8, #66]	; 0x42
 800ce7a:	1a9b      	subs	r3, r3, r2
 800ce7c:	b21b      	sxth	r3, r3
 800ce7e:	4298      	cmp	r0, r3
 800ce80:	f280 80b6 	bge.w	800cff0 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1b4>
 800ce84:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800ce86:	9302      	str	r3, [sp, #8]
 800ce88:	f8b4 3044 	ldrh.w	r3, [r4, #68]	; 0x44
 800ce8c:	9301      	str	r3, [sp, #4]
 800ce8e:	f8b4 3042 	ldrh.w	r3, [r4, #66]	; 0x42
 800ce92:	9300      	str	r3, [sp, #0]
 800ce94:	4631      	mov	r1, r6
 800ce96:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800ce98:	f8df a174 	ldr.w	sl, [pc, #372]	; 800d010 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1d4>
 800ce9c:	2214      	movs	r2, #20
 800ce9e:	4620      	mov	r0, r4
 800cea0:	f7ff fd88 	bl	800c9b4 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>
 800cea4:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800cea8:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800ceaa:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800ceae:	683b      	ldr	r3, [r7, #0]
 800ceb0:	f040 80a1 	bne.w	800cff6 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1ba>
 800ceb4:	f8da 0000 	ldr.w	r0, [sl]
 800ceb8:	6a9d      	ldr	r5, [r3, #40]	; 0x28
 800ceba:	f7f7 fd41 	bl	8004940 <_ZNK8touchgfx5Texts7getTextEt>
 800cebe:	4632      	mov	r2, r6
 800cec0:	4601      	mov	r1, r0
 800cec2:	4638      	mov	r0, r7
 800cec4:	47a8      	blx	r5
 800cec6:	683b      	ldr	r3, [r7, #0]
 800cec8:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800ceca:	f8d3 b040 	ldr.w	fp, [r3, #64]	; 0x40
 800cece:	4605      	mov	r5, r0
 800ced0:	f8da 0000 	ldr.w	r0, [sl]
 800ced4:	f7f7 fd34 	bl	8004940 <_ZNK8touchgfx5Texts7getTextEt>
 800ced8:	4632      	mov	r2, r6
 800ceda:	4601      	mov	r1, r0
 800cedc:	4638      	mov	r0, r7
 800cede:	47d8      	blx	fp
 800cee0:	683b      	ldr	r3, [r7, #0]
 800cee2:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800cee4:	f8d3 b024 	ldr.w	fp, [r3, #36]	; 0x24
 800cee8:	fb15 f500 	smulbb	r5, r5, r0
 800ceec:	f8da 0000 	ldr.w	r0, [sl]
 800cef0:	f7f7 fd26 	bl	8004940 <_ZNK8touchgfx5Texts7getTextEt>
 800cef4:	4632      	mov	r2, r6
 800cef6:	4601      	mov	r1, r0
 800cef8:	4638      	mov	r0, r7
 800cefa:	47d8      	blx	fp
 800cefc:	b2ad      	uxth	r5, r5
 800cefe:	4405      	add	r5, r0
 800cf00:	b2ad      	uxth	r5, r5
 800cf02:	f8d8 3000 	ldr.w	r3, [r8]
 800cf06:	9922      	ldr	r1, [sp, #136]	; 0x88
 800cf08:	f8d3 3118 	ldr.w	r3, [r3, #280]	; 0x118
 800cf0c:	f8b8 a0c6 	ldrh.w	sl, [r8, #198]	; 0xc6
 800cf10:	4640      	mov	r0, r8
 800cf12:	4798      	blx	r3
 800cf14:	f10d 0b60 	add.w	fp, sp, #96	; 0x60
 800cf18:	f04f 0800 	mov.w	r8, #0
 800cf1c:	f84b 0d3c 	str.w	r0, [fp, #-60]!
 800cf20:	4658      	mov	r0, fp
 800cf22:	f7fe fce7 	bl	800b8f4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800cf26:	4450      	add	r0, sl
 800cf28:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800cf2c:	f8ad 3018 	strh.w	r3, [sp, #24]
 800cf30:	eba0 0055 	sub.w	r0, r0, r5, lsr #1
 800cf34:	f8ad 501a 	strh.w	r5, [sp, #26]
 800cf38:	f8ad 8014 	strh.w	r8, [sp, #20]
 800cf3c:	f8ad 0016 	strh.w	r0, [sp, #22]
 800cf40:	ad05      	add	r5, sp, #20
 800cf42:	e895 0003 	ldmia.w	r5, {r0, r1}
 800cf46:	f10d 0a1c 	add.w	sl, sp, #28
 800cf4a:	e88a 0003 	stmia.w	sl, {r0, r1}
 800cf4e:	4649      	mov	r1, r9
 800cf50:	4650      	mov	r0, sl
 800cf52:	f7fd f9fb 	bl	800a34c <_ZN8touchgfx4RectaNERKS0_>
 800cf56:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800cf5a:	4543      	cmp	r3, r8
 800cf5c:	dd48      	ble.n	800cff0 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1b4>
 800cf5e:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800cf62:	4543      	cmp	r3, r8
 800cf64:	dd44      	ble.n	800cff0 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1b4>
 800cf66:	f8bd 301c 	ldrh.w	r3, [sp, #28]
 800cf6a:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800cf6e:	1a9b      	subs	r3, r3, r2
 800cf70:	f8ad 301c 	strh.w	r3, [sp, #28]
 800cf74:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800cf78:	f8bd 301e 	ldrh.w	r3, [sp, #30]
 800cf7c:	1a9b      	subs	r3, r3, r2
 800cf7e:	f8ad 301e 	strh.w	r3, [sp, #30]
 800cf82:	6823      	ldr	r3, [r4, #0]
 800cf84:	4620      	mov	r0, r4
 800cf86:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800cf88:	4629      	mov	r1, r5
 800cf8a:	4798      	blx	r3
 800cf8c:	4b1f      	ldr	r3, [pc, #124]	; (800d00c <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1d0>)
 800cf8e:	f8b4 903c 	ldrh.w	r9, [r4, #60]	; 0x3c
 800cf92:	681b      	ldr	r3, [r3, #0]
 800cf94:	f894 1040 	ldrb.w	r1, [r4, #64]	; 0x40
 800cf98:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800cf9a:	eb03 0349 	add.w	r3, r3, r9, lsl #1
 800cf9e:	785b      	ldrb	r3, [r3, #1]
 800cfa0:	920b      	str	r2, [sp, #44]	; 0x2c
 800cfa2:	f3c3 0001 	ubfx	r0, r3, #0, #2
 800cfa6:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800cfaa:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800cfae:	f89d 3090 	ldrb.w	r3, [sp, #144]	; 0x90
 800cfb2:	f88d 102a 	strb.w	r1, [sp, #42]	; 0x2a
 800cfb6:	f88d 3032 	strb.w	r3, [sp, #50]	; 0x32
 800cfba:	9709      	str	r7, [sp, #36]	; 0x24
 800cfbc:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 800cfc0:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 800cfc4:	f88d 8033 	strb.w	r8, [sp, #51]	; 0x33
 800cfc8:	f88d 8034 	strb.w	r8, [sp, #52]	; 0x34
 800cfcc:	f7f5 fa12 	bl	80023f4 <_ZN8touchgfx3HAL3lcdEv>
 800cfd0:	4b0f      	ldr	r3, [pc, #60]	; (800d010 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1d4>)
 800cfd2:	4604      	mov	r4, r0
 800cfd4:	4649      	mov	r1, r9
 800cfd6:	6818      	ldr	r0, [r3, #0]
 800cfd8:	f7f7 fcb2 	bl	8004940 <_ZNK8touchgfx5Texts7getTextEt>
 800cfdc:	e9cd 6802 	strd	r6, r8, [sp, #8]
 800cfe0:	e9cd b000 	strd	fp, r0, [sp]
 800cfe4:	4653      	mov	r3, sl
 800cfe6:	e895 0006 	ldmia.w	r5, {r1, r2}
 800cfea:	4620      	mov	r0, r4
 800cfec:	f7f7 fc5a 	bl	80048a4 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800cff0:	b019      	add	sp, #100	; 0x64
 800cff2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cff6:	f8da 0000 	ldr.w	r0, [sl]
 800cffa:	699d      	ldr	r5, [r3, #24]
 800cffc:	f7f7 fca0 	bl	8004940 <_ZNK8touchgfx5Texts7getTextEt>
 800d000:	4632      	mov	r2, r6
 800d002:	4601      	mov	r1, r0
 800d004:	4638      	mov	r0, r7
 800d006:	47a8      	blx	r5
 800d008:	4605      	mov	r5, r0
 800d00a:	e77a      	b.n	800cf02 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xc6>
 800d00c:	200153b4 	.word	0x200153b4
 800d010:	200153c0 	.word	0x200153c0

0800d014 <_ZN8touchgfx15GraphScrollData5clearEv>:
 800d014:	b510      	push	{r4, lr}
 800d016:	4604      	mov	r4, r0
 800d018:	f7fe fb05 	bl	800b626 <_ZN8touchgfx17AbstractDataGraph5clearEv>
 800d01c:	2300      	movs	r3, #0
 800d01e:	f8a4 314c 	strh.w	r3, [r4, #332]	; 0x14c
 800d022:	bd10      	pop	{r4, pc}

0800d024 <_ZN8touchgfx15GraphScrollData14beforeAddValueEv>:
 800d024:	f9b0 211e 	ldrsh.w	r2, [r0, #286]	; 0x11e
 800d028:	f9b0 311c 	ldrsh.w	r3, [r0, #284]	; 0x11c
 800d02c:	429a      	cmp	r2, r3
 800d02e:	d101      	bne.n	800d034 <_ZN8touchgfx15GraphScrollData14beforeAddValueEv+0x10>
 800d030:	f7fe bd38 	b.w	800baa4 <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv>
 800d034:	4770      	bx	lr

0800d036 <_ZNK8touchgfx15GraphScrollData18indexToGlobalIndexEs>:
 800d036:	b538      	push	{r3, r4, r5, lr}
 800d038:	f9b0 411c 	ldrsh.w	r4, [r0, #284]	; 0x11c
 800d03c:	f9b0 511e 	ldrsh.w	r5, [r0, #286]	; 0x11e
 800d040:	42a5      	cmp	r5, r4
 800d042:	da04      	bge.n	800d04e <_ZNK8touchgfx15GraphScrollData18indexToGlobalIndexEs+0x18>
 800d044:	6803      	ldr	r3, [r0, #0]
 800d046:	f8d3 3180 	ldr.w	r3, [r3, #384]	; 0x180
 800d04a:	4798      	blx	r3
 800d04c:	bd38      	pop	{r3, r4, r5, pc}
 800d04e:	f8d0 0148 	ldr.w	r0, [r0, #328]	; 0x148
 800d052:	4408      	add	r0, r1
 800d054:	1b00      	subs	r0, r0, r4
 800d056:	e7f9      	b.n	800d04c <_ZNK8touchgfx15GraphScrollData18indexToGlobalIndexEs+0x16>

0800d058 <_ZN8touchgfx15GraphScrollData8addValueEi>:
 800d058:	b570      	push	{r4, r5, r6, lr}
 800d05a:	f9b0 514c 	ldrsh.w	r5, [r0, #332]	; 0x14c
 800d05e:	f9b0 611e 	ldrsh.w	r6, [r0, #286]	; 0x11e
 800d062:	f9b0 211c 	ldrsh.w	r2, [r0, #284]	; 0x11c
 800d066:	4604      	mov	r4, r0
 800d068:	1c6b      	adds	r3, r5, #1
 800d06a:	b21b      	sxth	r3, r3
 800d06c:	42ae      	cmp	r6, r5
 800d06e:	bf08      	it	eq
 800d070:	f8a4 311e 	strheq.w	r3, [r4, #286]	; 0x11e
 800d074:	fb93 f0f2 	sdiv	r0, r3, r2
 800d078:	fb02 3010 	mls	r0, r2, r0, r3
 800d07c:	f8d4 3144 	ldr.w	r3, [r4, #324]	; 0x144
 800d080:	f8a4 014c 	strh.w	r0, [r4, #332]	; 0x14c
 800d084:	4296      	cmp	r6, r2
 800d086:	f843 1025 	str.w	r1, [r3, r5, lsl #2]
 800d08a:	d108      	bne.n	800d09e <_ZN8touchgfx15GraphScrollData8addValueEi+0x46>
 800d08c:	f104 0038 	add.w	r0, r4, #56	; 0x38
 800d090:	f004 fa93 	bl	80115ba <_ZNK8touchgfx8Drawable10invalidateEv>
 800d094:	4620      	mov	r0, r4
 800d096:	f7fe fd05 	bl	800baa4 <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv>
 800d09a:	4628      	mov	r0, r5
 800d09c:	bd70      	pop	{r4, r5, r6, pc}
 800d09e:	4629      	mov	r1, r5
 800d0a0:	4620      	mov	r0, r4
 800d0a2:	f7fe fcd7 	bl	800ba54 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs>
 800d0a6:	e7f8      	b.n	800d09a <_ZN8touchgfx15GraphScrollData8addValueEi+0x42>

0800d0a8 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 800d0a8:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 800d0ac:	4770      	bx	lr

0800d0ae <_ZN8touchgfx14AbstractButton13executeActionEv>:
 800d0ae:	b510      	push	{r4, lr}
 800d0b0:	4604      	mov	r4, r0
 800d0b2:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800d0b4:	b150      	cbz	r0, 800d0cc <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800d0b6:	6803      	ldr	r3, [r0, #0]
 800d0b8:	68db      	ldr	r3, [r3, #12]
 800d0ba:	4798      	blx	r3
 800d0bc:	b130      	cbz	r0, 800d0cc <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800d0be:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800d0c0:	6803      	ldr	r3, [r0, #0]
 800d0c2:	4621      	mov	r1, r4
 800d0c4:	689b      	ldr	r3, [r3, #8]
 800d0c6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d0ca:	4718      	bx	r3
 800d0cc:	bd10      	pop	{r4, pc}

0800d0ce <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 800d0ce:	b570      	push	{r4, r5, r6, lr}
 800d0d0:	790b      	ldrb	r3, [r1, #4]
 800d0d2:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 800d0d6:	2b00      	cmp	r3, #0
 800d0d8:	bf0c      	ite	eq
 800d0da:	2301      	moveq	r3, #1
 800d0dc:	2300      	movne	r3, #0
 800d0de:	4604      	mov	r4, r0
 800d0e0:	460e      	mov	r6, r1
 800d0e2:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 800d0e6:	d109      	bne.n	800d0fc <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 800d0e8:	b14d      	cbz	r5, 800d0fe <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 800d0ea:	7933      	ldrb	r3, [r6, #4]
 800d0ec:	2b01      	cmp	r3, #1
 800d0ee:	d10c      	bne.n	800d10a <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 800d0f0:	6823      	ldr	r3, [r4, #0]
 800d0f2:	4620      	mov	r0, r4
 800d0f4:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800d0f6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d0fa:	4718      	bx	r3
 800d0fc:	b12d      	cbz	r5, 800d10a <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 800d0fe:	6823      	ldr	r3, [r4, #0]
 800d100:	4620      	mov	r0, r4
 800d102:	695b      	ldr	r3, [r3, #20]
 800d104:	4798      	blx	r3
 800d106:	2d00      	cmp	r5, #0
 800d108:	d1ef      	bne.n	800d0ea <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 800d10a:	bd70      	pop	{r4, r5, r6, pc}

0800d10c <_ZN8touchgfx12ToggleButtonD1Ev>:
 800d10c:	4770      	bx	lr

0800d10e <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE>:
 800d10e:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800d112:	b133      	cbz	r3, 800d122 <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE+0x14>
 800d114:	790b      	ldrb	r3, [r1, #4]
 800d116:	2b01      	cmp	r3, #1
 800d118:	bf01      	itttt	eq
 800d11a:	8dc3      	ldrheq	r3, [r0, #46]	; 0x2e
 800d11c:	8e02      	ldrheq	r2, [r0, #48]	; 0x30
 800d11e:	85c2      	strheq	r2, [r0, #46]	; 0x2e
 800d120:	8603      	strheq	r3, [r0, #48]	; 0x30
 800d122:	f7ff bfd4 	b.w	800d0ce <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>

0800d126 <_ZN8touchgfx12ToggleButton10setBitmapsERKNS_6BitmapES3_>:
 800d126:	8813      	ldrh	r3, [r2, #0]
 800d128:	8683      	strh	r3, [r0, #52]	; 0x34
 800d12a:	f000 bbde 	b.w	800d8ea <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>

0800d12e <_ZN8touchgfx12ToggleButtonD0Ev>:
 800d12e:	b510      	push	{r4, lr}
 800d130:	2138      	movs	r1, #56	; 0x38
 800d132:	4604      	mov	r4, r0
 800d134:	f012 fdc6 	bl	801fcc4 <_ZdlPvj>
 800d138:	4620      	mov	r0, r4
 800d13a:	bd10      	pop	{r4, pc}

0800d13c <_ZNK8touchgfx6Button17invalidateContentEv>:
 800d13c:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 800d140:	b12a      	cbz	r2, 800d14e <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800d142:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800d146:	b112      	cbz	r2, 800d14e <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800d148:	6803      	ldr	r3, [r0, #0]
 800d14a:	695b      	ldr	r3, [r3, #20]
 800d14c:	4718      	bx	r3
 800d14e:	4770      	bx	lr

0800d150 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 800d150:	2000      	movs	r0, #0
 800d152:	4770      	bx	lr

0800d154 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 800d154:	4b07      	ldr	r3, [pc, #28]	; (800d174 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 800d156:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800d158:	881b      	ldrh	r3, [r3, #0]
 800d15a:	4293      	cmp	r3, r2
 800d15c:	bf81      	itttt	hi
 800d15e:	4b06      	ldrhi	r3, [pc, #24]	; (800d178 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 800d160:	681b      	ldrhi	r3, [r3, #0]
 800d162:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 800d166:	7858      	ldrbhi	r0, [r3, #1]
 800d168:	bf8c      	ite	hi
 800d16a:	f000 0003 	andhi.w	r0, r0, #3
 800d16e:	2000      	movls	r0, #0
 800d170:	4770      	bx	lr
 800d172:	bf00      	nop
 800d174:	200153b8 	.word	0x200153b8
 800d178:	200153b4 	.word	0x200153b4

0800d17c <_ZN8touchgfx8TextAreaD1Ev>:
 800d17c:	4770      	bx	lr
	...

0800d180 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 800d180:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d184:	4b10      	ldr	r3, [pc, #64]	; (800d1c8 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 800d186:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800d188:	881b      	ldrh	r3, [r3, #0]
 800d18a:	428b      	cmp	r3, r1
 800d18c:	4604      	mov	r4, r0
 800d18e:	d918      	bls.n	800d1c2 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 800d190:	6803      	ldr	r3, [r0, #0]
 800d192:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 800d194:	4b0d      	ldr	r3, [pc, #52]	; (800d1cc <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 800d196:	6818      	ldr	r0, [r3, #0]
 800d198:	f7f7 fbd2 	bl	8004940 <_ZNK8touchgfx5Texts7getTextEt>
 800d19c:	6823      	ldr	r3, [r4, #0]
 800d19e:	4606      	mov	r6, r0
 800d1a0:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800d1a2:	4620      	mov	r0, r4
 800d1a4:	4798      	blx	r3
 800d1a6:	6823      	ldr	r3, [r4, #0]
 800d1a8:	4607      	mov	r7, r0
 800d1aa:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800d1ae:	4620      	mov	r0, r4
 800d1b0:	4798      	blx	r3
 800d1b2:	463a      	mov	r2, r7
 800d1b4:	4603      	mov	r3, r0
 800d1b6:	4631      	mov	r1, r6
 800d1b8:	4620      	mov	r0, r4
 800d1ba:	46ac      	mov	ip, r5
 800d1bc:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800d1c0:	4760      	bx	ip
 800d1c2:	2000      	movs	r0, #0
 800d1c4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d1c8:	200153b8 	.word	0x200153b8
 800d1cc:	200153c0 	.word	0x200153c0

0800d1d0 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 800d1d0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800d1d4:	4b17      	ldr	r3, [pc, #92]	; (800d234 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 800d1d6:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800d1d8:	881b      	ldrh	r3, [r3, #0]
 800d1da:	428b      	cmp	r3, r1
 800d1dc:	4604      	mov	r4, r0
 800d1de:	d926      	bls.n	800d22e <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 800d1e0:	4b15      	ldr	r3, [pc, #84]	; (800d238 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 800d1e2:	681b      	ldr	r3, [r3, #0]
 800d1e4:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 800d1e8:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 800d1ec:	4b13      	ldr	r3, [pc, #76]	; (800d23c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 800d1ee:	7855      	ldrb	r5, [r2, #1]
 800d1f0:	681b      	ldr	r3, [r3, #0]
 800d1f2:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 800d1f6:	6833      	ldr	r3, [r6, #0]
 800d1f8:	69df      	ldr	r7, [r3, #28]
 800d1fa:	4b11      	ldr	r3, [pc, #68]	; (800d240 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 800d1fc:	6818      	ldr	r0, [r3, #0]
 800d1fe:	f7f7 fb9f 	bl	8004940 <_ZNK8touchgfx5Texts7getTextEt>
 800d202:	6823      	ldr	r3, [r4, #0]
 800d204:	4680      	mov	r8, r0
 800d206:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800d208:	4620      	mov	r0, r4
 800d20a:	4798      	blx	r3
 800d20c:	6823      	ldr	r3, [r4, #0]
 800d20e:	4681      	mov	r9, r0
 800d210:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800d214:	4620      	mov	r0, r4
 800d216:	4798      	blx	r3
 800d218:	f3c5 0581 	ubfx	r5, r5, #2, #2
 800d21c:	9000      	str	r0, [sp, #0]
 800d21e:	464b      	mov	r3, r9
 800d220:	4642      	mov	r2, r8
 800d222:	4629      	mov	r1, r5
 800d224:	4630      	mov	r0, r6
 800d226:	47b8      	blx	r7
 800d228:	b003      	add	sp, #12
 800d22a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d22e:	2000      	movs	r0, #0
 800d230:	e7fa      	b.n	800d228 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 800d232:	bf00      	nop
 800d234:	200153b8 	.word	0x200153b8
 800d238:	200153b4 	.word	0x200153b4
 800d23c:	200153bc 	.word	0x200153bc
 800d240:	200153c0 	.word	0x200153c0

0800d244 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 800d244:	b40e      	push	{r1, r2, r3}
 800d246:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d24a:	4b2f      	ldr	r3, [pc, #188]	; (800d308 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 800d24c:	881a      	ldrh	r2, [r3, #0]
 800d24e:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 800d250:	429a      	cmp	r2, r3
 800d252:	b09d      	sub	sp, #116	; 0x74
 800d254:	4604      	mov	r4, r0
 800d256:	d954      	bls.n	800d302 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 800d258:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 800d30c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 800d25c:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 800d310 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 800d260:	aa26      	add	r2, sp, #152	; 0x98
 800d262:	9202      	str	r2, [sp, #8]
 800d264:	f8d9 2000 	ldr.w	r2, [r9]
 800d268:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800d26c:	f8d8 3000 	ldr.w	r3, [r8]
 800d270:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800d274:	682b      	ldr	r3, [r5, #0]
 800d276:	4628      	mov	r0, r5
 800d278:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800d27a:	4798      	blx	r3
 800d27c:	b207      	sxth	r7, r0
 800d27e:	4606      	mov	r6, r0
 800d280:	a803      	add	r0, sp, #12
 800d282:	f004 feea 	bl	801205a <_ZN8touchgfx12TextProviderC1Ev>
 800d286:	682b      	ldr	r3, [r5, #0]
 800d288:	4628      	mov	r0, r5
 800d28a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800d28c:	4798      	blx	r3
 800d28e:	682b      	ldr	r3, [r5, #0]
 800d290:	4682      	mov	sl, r0
 800d292:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800d294:	4628      	mov	r0, r5
 800d296:	4798      	blx	r3
 800d298:	4653      	mov	r3, sl
 800d29a:	9000      	str	r0, [sp, #0]
 800d29c:	9a02      	ldr	r2, [sp, #8]
 800d29e:	9925      	ldr	r1, [sp, #148]	; 0x94
 800d2a0:	a803      	add	r0, sp, #12
 800d2a2:	f004 ff35 	bl	8012110 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800d2a6:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800d2a8:	f8d9 3000 	ldr.w	r3, [r9]
 800d2ac:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 800d2b0:	8925      	ldrh	r5, [r4, #8]
 800d2b2:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 800d2b6:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 800d2ba:	eba5 050c 	sub.w	r5, r5, ip
 800d2be:	784a      	ldrb	r2, [r1, #1]
 800d2c0:	f8d8 3000 	ldr.w	r3, [r8]
 800d2c4:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 800d2c8:	b22d      	sxth	r5, r5
 800d2ca:	9500      	str	r5, [sp, #0]
 800d2cc:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800d2d0:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800d2d4:	a803      	add	r0, sp, #12
 800d2d6:	f002 fd2f 	bl	800fd38 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 800d2da:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 800d2de:	18b9      	adds	r1, r7, r2
 800d2e0:	2900      	cmp	r1, #0
 800d2e2:	b203      	sxth	r3, r0
 800d2e4:	dd0b      	ble.n	800d2fe <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 800d2e6:	3b01      	subs	r3, #1
 800d2e8:	fb13 f302 	smulbb	r3, r3, r2
 800d2ec:	fb16 3300 	smlabb	r3, r6, r0, r3
 800d2f0:	b21f      	sxth	r7, r3
 800d2f2:	4638      	mov	r0, r7
 800d2f4:	b01d      	add	sp, #116	; 0x74
 800d2f6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d2fa:	b003      	add	sp, #12
 800d2fc:	4770      	bx	lr
 800d2fe:	2b00      	cmp	r3, #0
 800d300:	dcf7      	bgt.n	800d2f2 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800d302:	2700      	movs	r7, #0
 800d304:	e7f5      	b.n	800d2f2 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800d306:	bf00      	nop
 800d308:	200153b8 	.word	0x200153b8
 800d30c:	200153b4 	.word	0x200153b4
 800d310:	200153bc 	.word	0x200153bc

0800d314 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 800d314:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d318:	4bbb      	ldr	r3, [pc, #748]	; (800d608 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f4>)
 800d31a:	460c      	mov	r4, r1
 800d31c:	881b      	ldrh	r3, [r3, #0]
 800d31e:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 800d320:	428b      	cmp	r3, r1
 800d322:	b0a9      	sub	sp, #164	; 0xa4
 800d324:	4681      	mov	r9, r0
 800d326:	d809      	bhi.n	800d33c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 800d328:	2300      	movs	r3, #0
 800d32a:	f04f 32ff 	mov.w	r2, #4294967295
 800d32e:	e9c0 3200 	strd	r3, r2, [r0]
 800d332:	6083      	str	r3, [r0, #8]
 800d334:	4648      	mov	r0, r9
 800d336:	b029      	add	sp, #164	; 0xa4
 800d338:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d33c:	f8df b2d0 	ldr.w	fp, [pc, #720]	; 800d610 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 800d340:	f8df 82d0 	ldr.w	r8, [pc, #720]	; 800d614 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>
 800d344:	f8db 3000 	ldr.w	r3, [fp]
 800d348:	f8d8 0000 	ldr.w	r0, [r8]
 800d34c:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 800d350:	4bae      	ldr	r3, [pc, #696]	; (800d60c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 800d352:	681b      	ldr	r3, [r3, #0]
 800d354:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800d358:	f7f7 faf2 	bl	8004940 <_ZNK8touchgfx5Texts7getTextEt>
 800d35c:	682b      	ldr	r3, [r5, #0]
 800d35e:	4607      	mov	r7, r0
 800d360:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800d362:	4628      	mov	r0, r5
 800d364:	4798      	blx	r3
 800d366:	8ea6      	ldrh	r6, [r4, #52]	; 0x34
 800d368:	f8cd 800c 	str.w	r8, [sp, #12]
 800d36c:	4430      	add	r0, r6
 800d36e:	f894 6039 	ldrb.w	r6, [r4, #57]	; 0x39
 800d372:	b283      	uxth	r3, r0
 800d374:	f10d 0a3c 	add.w	sl, sp, #60	; 0x3c
 800d378:	9302      	str	r3, [sp, #8]
 800d37a:	4650      	mov	r0, sl
 800d37c:	2e00      	cmp	r6, #0
 800d37e:	f040 8091 	bne.w	800d4a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 800d382:	f004 fe6a 	bl	801205a <_ZN8touchgfx12TextProviderC1Ev>
 800d386:	682b      	ldr	r3, [r5, #0]
 800d388:	4628      	mov	r0, r5
 800d38a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800d38c:	4798      	blx	r3
 800d38e:	682b      	ldr	r3, [r5, #0]
 800d390:	9005      	str	r0, [sp, #20]
 800d392:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800d394:	4628      	mov	r0, r5
 800d396:	4798      	blx	r3
 800d398:	6823      	ldr	r3, [r4, #0]
 800d39a:	4680      	mov	r8, r0
 800d39c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800d39e:	4620      	mov	r0, r4
 800d3a0:	4798      	blx	r3
 800d3a2:	6822      	ldr	r2, [r4, #0]
 800d3a4:	9004      	str	r0, [sp, #16]
 800d3a6:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 800d3aa:	4620      	mov	r0, r4
 800d3ac:	4790      	blx	r2
 800d3ae:	9905      	ldr	r1, [sp, #20]
 800d3b0:	9b04      	ldr	r3, [sp, #16]
 800d3b2:	9001      	str	r0, [sp, #4]
 800d3b4:	9300      	str	r3, [sp, #0]
 800d3b6:	460a      	mov	r2, r1
 800d3b8:	4643      	mov	r3, r8
 800d3ba:	4639      	mov	r1, r7
 800d3bc:	4650      	mov	r0, sl
 800d3be:	f004 febc 	bl	801213a <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800d3c2:	4637      	mov	r7, r6
 800d3c4:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800d3c6:	f8db 3000 	ldr.w	r3, [fp]
 800d3ca:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800d3ce:	4629      	mov	r1, r5
 800d3d0:	785b      	ldrb	r3, [r3, #1]
 800d3d2:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800d3d6:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800d3da:	4650      	mov	r0, sl
 800d3dc:	f002 f9fe 	bl	800f7dc <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800d3e0:	4287      	cmp	r7, r0
 800d3e2:	bfb8      	it	lt
 800d3e4:	b207      	sxthlt	r7, r0
 800d3e6:	3601      	adds	r6, #1
 800d3e8:	4650      	mov	r0, sl
 800d3ea:	b2b6      	uxth	r6, r6
 800d3ec:	f004 fe5c 	bl	80120a8 <_ZN8touchgfx12TextProvider11endOfStringEv>
 800d3f0:	2800      	cmp	r0, #0
 800d3f2:	d0e7      	beq.n	800d3c4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xb0>
 800d3f4:	9b02      	ldr	r3, [sp, #8]
 800d3f6:	f8b4 8034 	ldrh.w	r8, [r4, #52]	; 0x34
 800d3fa:	fb13 f606 	smulbb	r6, r3, r6
 800d3fe:	eba6 0608 	sub.w	r6, r6, r8
 800d402:	b2b6      	uxth	r6, r6
 800d404:	fa0f f886 	sxth.w	r8, r6
 800d408:	f1b8 0f00 	cmp.w	r8, #0
 800d40c:	dd06      	ble.n	800d41c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x108>
 800d40e:	682b      	ldr	r3, [r5, #0]
 800d410:	4628      	mov	r0, r5
 800d412:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800d414:	4798      	blx	r3
 800d416:	4430      	add	r0, r6
 800d418:	fa0f f880 	sxth.w	r8, r0
 800d41c:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800d420:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800d424:	6823      	ldr	r3, [r4, #0]
 800d426:	bf08      	it	eq
 800d428:	f9b4 6008 	ldrsheq.w	r6, [r4, #8]
 800d42c:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800d42e:	bf18      	it	ne
 800d430:	f9b4 600a 	ldrshne.w	r6, [r4, #10]
 800d434:	4620      	mov	r0, r4
 800d436:	4798      	blx	r3
 800d438:	2801      	cmp	r0, #1
 800d43a:	b2ba      	uxth	r2, r7
 800d43c:	f000 80d1 	beq.w	800d5e2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ce>
 800d440:	2802      	cmp	r0, #2
 800d442:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 800d446:	f000 80d2 	beq.w	800d5ee <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2da>
 800d44a:	b21e      	sxth	r6, r3
 800d44c:	7a29      	ldrb	r1, [r5, #8]
 800d44e:	7a6d      	ldrb	r5, [r5, #9]
 800d450:	1a76      	subs	r6, r6, r1
 800d452:	4429      	add	r1, r5
 800d454:	440a      	add	r2, r1
 800d456:	f894 1038 	ldrb.w	r1, [r4, #56]	; 0x38
 800d45a:	b2b3      	uxth	r3, r6
 800d45c:	b292      	uxth	r2, r2
 800d45e:	2902      	cmp	r1, #2
 800d460:	b21f      	sxth	r7, r3
 800d462:	b216      	sxth	r6, r2
 800d464:	f000 80c6 	beq.w	800d5f4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2e0>
 800d468:	2903      	cmp	r1, #3
 800d46a:	f000 80d5 	beq.w	800d618 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>
 800d46e:	2901      	cmp	r1, #1
 800d470:	f040 80db 	bne.w	800d62a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x316>
 800d474:	8923      	ldrh	r3, [r4, #8]
 800d476:	4632      	mov	r2, r6
 800d478:	eba3 0308 	sub.w	r3, r3, r8
 800d47c:	4646      	mov	r6, r8
 800d47e:	463d      	mov	r5, r7
 800d480:	4690      	mov	r8, r2
 800d482:	b21f      	sxth	r7, r3
 800d484:	9b03      	ldr	r3, [sp, #12]
 800d486:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800d488:	6818      	ldr	r0, [r3, #0]
 800d48a:	f7f7 fa59 	bl	8004940 <_ZNK8touchgfx5Texts7getTextEt>
 800d48e:	f8a9 7000 	strh.w	r7, [r9]
 800d492:	f8a9 5002 	strh.w	r5, [r9, #2]
 800d496:	f8a9 6004 	strh.w	r6, [r9, #4]
 800d49a:	f8a9 8006 	strh.w	r8, [r9, #6]
 800d49e:	f8c9 0008 	str.w	r0, [r9, #8]
 800d4a2:	e747      	b.n	800d334 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 800d4a4:	f004 fdd9 	bl	801205a <_ZN8touchgfx12TextProviderC1Ev>
 800d4a8:	682b      	ldr	r3, [r5, #0]
 800d4aa:	4628      	mov	r0, r5
 800d4ac:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800d4ae:	4798      	blx	r3
 800d4b0:	682b      	ldr	r3, [r5, #0]
 800d4b2:	4606      	mov	r6, r0
 800d4b4:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800d4b6:	4628      	mov	r0, r5
 800d4b8:	4798      	blx	r3
 800d4ba:	6823      	ldr	r3, [r4, #0]
 800d4bc:	4680      	mov	r8, r0
 800d4be:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800d4c0:	4620      	mov	r0, r4
 800d4c2:	4798      	blx	r3
 800d4c4:	6822      	ldr	r2, [r4, #0]
 800d4c6:	9004      	str	r0, [sp, #16]
 800d4c8:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 800d4cc:	4620      	mov	r0, r4
 800d4ce:	4790      	blx	r2
 800d4d0:	9b04      	ldr	r3, [sp, #16]
 800d4d2:	9001      	str	r0, [sp, #4]
 800d4d4:	4632      	mov	r2, r6
 800d4d6:	9300      	str	r3, [sp, #0]
 800d4d8:	4639      	mov	r1, r7
 800d4da:	4643      	mov	r3, r8
 800d4dc:	4650      	mov	r0, sl
 800d4de:	f004 fe2c 	bl	801213a <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800d4e2:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800d4e6:	f9b4 8008 	ldrsh.w	r8, [r4, #8]
 800d4ea:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800d4ec:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 800d4f0:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800d4f4:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800d4f8:	bf0a      	itet	eq
 800d4fa:	4642      	moveq	r2, r8
 800d4fc:	461a      	movne	r2, r3
 800d4fe:	4698      	moveq	r8, r3
 800d500:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 800d504:	1ad2      	subs	r2, r2, r3
 800d506:	f8db 3000 	ldr.w	r3, [fp]
 800d50a:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800d50e:	7859      	ldrb	r1, [r3, #1]
 800d510:	f8cd a020 	str.w	sl, [sp, #32]
 800d514:	2300      	movs	r3, #0
 800d516:	f3c1 0181 	ubfx	r1, r1, #2, #2
 800d51a:	f8ad 301c 	strh.w	r3, [sp, #28]
 800d51e:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 800d522:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 800d526:	950a      	str	r5, [sp, #40]	; 0x28
 800d528:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800d52c:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800d530:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 800d534:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 800d538:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 800d53c:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800d540:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 800d544:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 800d548:	b350      	cbz	r0, 800d5a0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28c>
 800d54a:	682b      	ldr	r3, [r5, #0]
 800d54c:	4628      	mov	r0, r5
 800d54e:	695b      	ldr	r3, [r3, #20]
 800d550:	4798      	blx	r3
 800d552:	4607      	mov	r7, r0
 800d554:	b320      	cbz	r0, 800d5a0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28c>
 800d556:	980a      	ldr	r0, [sp, #40]	; 0x28
 800d558:	6803      	ldr	r3, [r0, #0]
 800d55a:	4639      	mov	r1, r7
 800d55c:	68db      	ldr	r3, [r3, #12]
 800d55e:	4798      	blx	r3
 800d560:	4606      	mov	r6, r0
 800d562:	b1e8      	cbz	r0, 800d5a0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28c>
 800d564:	7b43      	ldrb	r3, [r0, #13]
 800d566:	7a82      	ldrb	r2, [r0, #10]
 800d568:	005b      	lsls	r3, r3, #1
 800d56a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800d56e:	4313      	orrs	r3, r2
 800d570:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 800d574:	f89d 3025 	ldrb.w	r3, [sp, #37]	; 0x25
 800d578:	2b04      	cmp	r3, #4
 800d57a:	d111      	bne.n	800d5a0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28c>
 800d57c:	980a      	ldr	r0, [sp, #40]	; 0x28
 800d57e:	6803      	ldr	r3, [r0, #0]
 800d580:	4632      	mov	r2, r6
 800d582:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d584:	4639      	mov	r1, r7
 800d586:	4798      	blx	r3
 800d588:	7b73      	ldrb	r3, [r6, #13]
 800d58a:	005b      	lsls	r3, r3, #1
 800d58c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800d590:	7ab3      	ldrb	r3, [r6, #10]
 800d592:	4313      	orrs	r3, r2
 800d594:	4418      	add	r0, r3
 800d596:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800d59a:	4418      	add	r0, r3
 800d59c:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
 800d5a0:	f9bd a008 	ldrsh.w	sl, [sp, #8]
 800d5a4:	2600      	movs	r6, #0
 800d5a6:	ea4f 0b4a 	mov.w	fp, sl, lsl #1
 800d5aa:	4637      	mov	r7, r6
 800d5ac:	45c3      	cmp	fp, r8
 800d5ae:	bfd4      	ite	le
 800d5b0:	2100      	movle	r1, #0
 800d5b2:	2101      	movgt	r1, #1
 800d5b4:	a807      	add	r0, sp, #28
 800d5b6:	f002 faf0 	bl	800fb9a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800d5ba:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 800d5be:	429f      	cmp	r7, r3
 800d5c0:	bfb8      	it	lt
 800d5c2:	b21f      	sxthlt	r7, r3
 800d5c4:	9b02      	ldr	r3, [sp, #8]
 800d5c6:	eba8 0803 	sub.w	r8, r8, r3
 800d5ca:	f8bd 301c 	ldrh.w	r3, [sp, #28]
 800d5ce:	3601      	adds	r6, #1
 800d5d0:	b2b6      	uxth	r6, r6
 800d5d2:	fa0f f888 	sxth.w	r8, r8
 800d5d6:	2b00      	cmp	r3, #0
 800d5d8:	f43f af0c 	beq.w	800d3f4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xe0>
 800d5dc:	45c2      	cmp	sl, r8
 800d5de:	dbe5      	blt.n	800d5ac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x298>
 800d5e0:	e708      	b.n	800d3f4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xe0>
 800d5e2:	1bf6      	subs	r6, r6, r7
 800d5e4:	2702      	movs	r7, #2
 800d5e6:	fb96 f6f7 	sdiv	r6, r6, r7
 800d5ea:	b236      	sxth	r6, r6
 800d5ec:	e72e      	b.n	800d44c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x138>
 800d5ee:	4413      	add	r3, r2
 800d5f0:	1af6      	subs	r6, r6, r3
 800d5f2:	e7fa      	b.n	800d5ea <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2d6>
 800d5f4:	8925      	ldrh	r5, [r4, #8]
 800d5f6:	1aad      	subs	r5, r5, r2
 800d5f8:	1aed      	subs	r5, r5, r3
 800d5fa:	b22f      	sxth	r7, r5
 800d5fc:	8965      	ldrh	r5, [r4, #10]
 800d5fe:	eba5 0508 	sub.w	r5, r5, r8
 800d602:	b22d      	sxth	r5, r5
 800d604:	e73e      	b.n	800d484 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x170>
 800d606:	bf00      	nop
 800d608:	200153b8 	.word	0x200153b8
 800d60c:	200153bc 	.word	0x200153bc
 800d610:	200153b4 	.word	0x200153b4
 800d614:	200153c0 	.word	0x200153c0
 800d618:	8965      	ldrh	r5, [r4, #10]
 800d61a:	1aad      	subs	r5, r5, r2
 800d61c:	1aed      	subs	r5, r5, r3
 800d61e:	4633      	mov	r3, r6
 800d620:	b22d      	sxth	r5, r5
 800d622:	4646      	mov	r6, r8
 800d624:	2700      	movs	r7, #0
 800d626:	4698      	mov	r8, r3
 800d628:	e72c      	b.n	800d484 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x170>
 800d62a:	2500      	movs	r5, #0
 800d62c:	e72a      	b.n	800d484 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x170>
 800d62e:	bf00      	nop

0800d630 <_ZN8touchgfx8TextAreaD0Ev>:
 800d630:	b510      	push	{r4, lr}
 800d632:	2148      	movs	r1, #72	; 0x48
 800d634:	4604      	mov	r4, r0
 800d636:	f012 fb45 	bl	801fcc4 <_ZdlPvj>
 800d63a:	4620      	mov	r0, r4
 800d63c:	bd10      	pop	{r4, pc}
	...

0800d640 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 800d640:	b513      	push	{r0, r1, r4, lr}
 800d642:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 800d646:	4604      	mov	r4, r0
 800d648:	b1fb      	cbz	r3, 800d68a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800d64a:	4b16      	ldr	r3, [pc, #88]	; (800d6a4 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 800d64c:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800d64e:	881b      	ldrh	r3, [r3, #0]
 800d650:	428b      	cmp	r3, r1
 800d652:	d91a      	bls.n	800d68a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800d654:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800d658:	2b00      	cmp	r3, #0
 800d65a:	dd16      	ble.n	800d68a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800d65c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800d660:	2b00      	cmp	r3, #0
 800d662:	dd12      	ble.n	800d68a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800d664:	4b10      	ldr	r3, [pc, #64]	; (800d6a8 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 800d666:	6818      	ldr	r0, [r3, #0]
 800d668:	f7f7 f96a 	bl	8004940 <_ZNK8touchgfx5Texts7getTextEt>
 800d66c:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 800d670:	6822      	ldr	r2, [r4, #0]
 800d672:	2b00      	cmp	r3, #0
 800d674:	db06      	blt.n	800d684 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 800d676:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800d67a:	2b00      	cmp	r3, #0
 800d67c:	db02      	blt.n	800d684 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 800d67e:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800d680:	4298      	cmp	r0, r3
 800d682:	d004      	beq.n	800d68e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 800d684:	6953      	ldr	r3, [r2, #20]
 800d686:	4620      	mov	r0, r4
 800d688:	4798      	blx	r3
 800d68a:	b002      	add	sp, #8
 800d68c:	bd10      	pop	{r4, pc}
 800d68e:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 800d692:	c903      	ldmia	r1, {r0, r1}
 800d694:	466b      	mov	r3, sp
 800d696:	e883 0003 	stmia.w	r3, {r0, r1}
 800d69a:	6912      	ldr	r2, [r2, #16]
 800d69c:	4619      	mov	r1, r3
 800d69e:	4620      	mov	r0, r4
 800d6a0:	4790      	blx	r2
 800d6a2:	e7f2      	b.n	800d68a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800d6a4:	200153b8 	.word	0x200153b8
 800d6a8:	200153c0 	.word	0x200153c0

0800d6ac <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 800d6ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d6b0:	4b44      	ldr	r3, [pc, #272]	; (800d7c4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 800d6b2:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800d6b4:	881b      	ldrh	r3, [r3, #0]
 800d6b6:	4293      	cmp	r3, r2
 800d6b8:	b08e      	sub	sp, #56	; 0x38
 800d6ba:	4604      	mov	r4, r0
 800d6bc:	d97e      	bls.n	800d7bc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800d6be:	6808      	ldr	r0, [r1, #0]
 800d6c0:	4d41      	ldr	r5, [pc, #260]	; (800d7c8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 800d6c2:	6849      	ldr	r1, [r1, #4]
 800d6c4:	ab05      	add	r3, sp, #20
 800d6c6:	c303      	stmia	r3!, {r0, r1}
 800d6c8:	4611      	mov	r1, r2
 800d6ca:	6828      	ldr	r0, [r5, #0]
 800d6cc:	f7f7 f938 	bl	8004940 <_ZNK8touchgfx5Texts7getTextEt>
 800d6d0:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 800d6d4:	2b00      	cmp	r3, #0
 800d6d6:	db11      	blt.n	800d6fc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800d6d8:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800d6dc:	2b00      	cmp	r3, #0
 800d6de:	db0d      	blt.n	800d6fc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800d6e0:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800d6e2:	4298      	cmp	r0, r3
 800d6e4:	d10a      	bne.n	800d6fc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800d6e6:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 800d6ea:	e892 0003 	ldmia.w	r2, {r0, r1}
 800d6ee:	ab09      	add	r3, sp, #36	; 0x24
 800d6f0:	e883 0003 	stmia.w	r3, {r0, r1}
 800d6f4:	4619      	mov	r1, r3
 800d6f6:	a805      	add	r0, sp, #20
 800d6f8:	f7fc fe28 	bl	800a34c <_ZN8touchgfx4RectaNERKS0_>
 800d6fc:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800d700:	2b00      	cmp	r3, #0
 800d702:	dd5b      	ble.n	800d7bc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800d704:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800d708:	2b00      	cmp	r3, #0
 800d70a:	dd57      	ble.n	800d7bc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800d70c:	4f2f      	ldr	r7, [pc, #188]	; (800d7cc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 800d70e:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800d710:	683b      	ldr	r3, [r7, #0]
 800d712:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800d716:	4b2e      	ldr	r3, [pc, #184]	; (800d7d0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 800d718:	681b      	ldr	r3, [r3, #0]
 800d71a:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 800d71e:	2e00      	cmp	r6, #0
 800d720:	d04c      	beq.n	800d7bc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800d722:	6823      	ldr	r3, [r4, #0]
 800d724:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
 800d728:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800d72a:	4620      	mov	r0, r4
 800d72c:	4798      	blx	r3
 800d72e:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800d730:	683b      	ldr	r3, [r7, #0]
 800d732:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
 800d736:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
 800d73a:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
 800d73e:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800d740:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800d744:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 800d748:	785b      	ldrb	r3, [r3, #1]
 800d74a:	9609      	str	r6, [sp, #36]	; 0x24
 800d74c:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800d750:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800d754:	4b1f      	ldr	r3, [pc, #124]	; (800d7d4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 800d756:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 800d75a:	681b      	ldr	r3, [r3, #0]
 800d75c:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
 800d760:	910b      	str	r1, [sp, #44]	; 0x2c
 800d762:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
 800d766:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
 800d76a:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
 800d76e:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
 800d772:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800d776:	b10a      	cbz	r2, 800d77c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 800d778:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 800d77a:	b906      	cbnz	r6, 800d77e <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 800d77c:	689e      	ldr	r6, [r3, #8]
 800d77e:	af07      	add	r7, sp, #28
 800d780:	4621      	mov	r1, r4
 800d782:	4638      	mov	r0, r7
 800d784:	f003 ffb4 	bl	80116f0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800d788:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800d78a:	6828      	ldr	r0, [r5, #0]
 800d78c:	f7f7 f8d8 	bl	8004940 <_ZNK8touchgfx5Texts7getTextEt>
 800d790:	6823      	ldr	r3, [r4, #0]
 800d792:	4605      	mov	r5, r0
 800d794:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800d796:	4620      	mov	r0, r4
 800d798:	4798      	blx	r3
 800d79a:	6823      	ldr	r3, [r4, #0]
 800d79c:	4680      	mov	r8, r0
 800d79e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800d7a2:	4620      	mov	r0, r4
 800d7a4:	4798      	blx	r3
 800d7a6:	e9cd 8002 	strd	r8, r0, [sp, #8]
 800d7aa:	ab09      	add	r3, sp, #36	; 0x24
 800d7ac:	9300      	str	r3, [sp, #0]
 800d7ae:	9501      	str	r5, [sp, #4]
 800d7b0:	ab05      	add	r3, sp, #20
 800d7b2:	e897 0006 	ldmia.w	r7, {r1, r2}
 800d7b6:	4630      	mov	r0, r6
 800d7b8:	f7f7 f874 	bl	80048a4 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800d7bc:	b00e      	add	sp, #56	; 0x38
 800d7be:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d7c2:	bf00      	nop
 800d7c4:	200153b8 	.word	0x200153b8
 800d7c8:	200153c0 	.word	0x200153c0
 800d7cc:	200153b4 	.word	0x200153b4
 800d7d0:	200153bc 	.word	0x200153bc
 800d7d4:	2001535c 	.word	0x2001535c

0800d7d8 <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 800d7d8:	b570      	push	{r4, r5, r6, lr}
 800d7da:	6803      	ldr	r3, [r0, #0]
 800d7dc:	4604      	mov	r4, r0
 800d7de:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d7e0:	4615      	mov	r5, r2
 800d7e2:	4798      	blx	r3
 800d7e4:	6823      	ldr	r3, [r4, #0]
 800d7e6:	4629      	mov	r1, r5
 800d7e8:	4620      	mov	r0, r4
 800d7ea:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d7ec:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d7f0:	4718      	bx	r3
	...

0800d7f4 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 800d7f4:	b538      	push	{r3, r4, r5, lr}
 800d7f6:	4b0e      	ldr	r3, [pc, #56]	; (800d830 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 800d7f8:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800d7fa:	881b      	ldrh	r3, [r3, #0]
 800d7fc:	429a      	cmp	r2, r3
 800d7fe:	4604      	mov	r4, r0
 800d800:	d214      	bcs.n	800d82c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 800d802:	6803      	ldr	r3, [r0, #0]
 800d804:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800d806:	4798      	blx	r3
 800d808:	6823      	ldr	r3, [r4, #0]
 800d80a:	4605      	mov	r5, r0
 800d80c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800d80e:	4620      	mov	r0, r4
 800d810:	4798      	blx	r3
 800d812:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800d816:	b22d      	sxth	r5, r5
 800d818:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800d81c:	4601      	mov	r1, r0
 800d81e:	bf06      	itte	eq
 800d820:	4602      	moveq	r2, r0
 800d822:	4629      	moveq	r1, r5
 800d824:	462a      	movne	r2, r5
 800d826:	4620      	mov	r0, r4
 800d828:	f7ff ffd6 	bl	800d7d8 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800d82c:	bd38      	pop	{r3, r4, r5, pc}
 800d82e:	bf00      	nop
 800d830:	200153b8 	.word	0x200153b8

0800d834 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 800d834:	b530      	push	{r4, r5, lr}
 800d836:	888b      	ldrh	r3, [r1, #4]
 800d838:	8583      	strh	r3, [r0, #44]	; 0x2c
 800d83a:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800d83e:	b085      	sub	sp, #20
 800d840:	4604      	mov	r4, r0
 800d842:	b923      	cbnz	r3, 800d84e <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800d844:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800d848:	b90b      	cbnz	r3, 800d84e <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800d84a:	f7ff ffd3 	bl	800d7f4 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 800d84e:	6823      	ldr	r3, [r4, #0]
 800d850:	466d      	mov	r5, sp
 800d852:	4621      	mov	r1, r4
 800d854:	4628      	mov	r0, r5
 800d856:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800d85a:	4798      	blx	r3
 800d85c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800d860:	343c      	adds	r4, #60	; 0x3c
 800d862:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800d866:	b005      	add	sp, #20
 800d868:	bd30      	pop	{r4, r5, pc}

0800d86a <_ZNK8touchgfx3Box12getSolidRectEv>:
 800d86a:	2300      	movs	r3, #0
 800d86c:	8083      	strh	r3, [r0, #4]
 800d86e:	80c3      	strh	r3, [r0, #6]
 800d870:	8003      	strh	r3, [r0, #0]
 800d872:	8043      	strh	r3, [r0, #2]
 800d874:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 800d878:	2bff      	cmp	r3, #255	; 0xff
 800d87a:	bf01      	itttt	eq
 800d87c:	890b      	ldrheq	r3, [r1, #8]
 800d87e:	8083      	strheq	r3, [r0, #4]
 800d880:	894b      	ldrheq	r3, [r1, #10]
 800d882:	80c3      	strheq	r3, [r0, #6]
 800d884:	4770      	bx	lr
	...

0800d888 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800d888:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d88a:	4604      	mov	r4, r0
 800d88c:	6808      	ldr	r0, [r1, #0]
 800d88e:	6849      	ldr	r1, [r1, #4]
 800d890:	466b      	mov	r3, sp
 800d892:	c303      	stmia	r3!, {r0, r1}
 800d894:	6823      	ldr	r3, [r4, #0]
 800d896:	4669      	mov	r1, sp
 800d898:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d89a:	4620      	mov	r0, r4
 800d89c:	4798      	blx	r3
 800d89e:	4b08      	ldr	r3, [pc, #32]	; (800d8c0 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800d8a0:	681b      	ldr	r3, [r3, #0]
 800d8a2:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800d8a6:	b10a      	cbz	r2, 800d8ac <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800d8a8:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800d8aa:	b900      	cbnz	r0, 800d8ae <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800d8ac:	6898      	ldr	r0, [r3, #8]
 800d8ae:	6803      	ldr	r3, [r0, #0]
 800d8b0:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800d8b2:	6a1d      	ldr	r5, [r3, #32]
 800d8b4:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800d8b8:	4669      	mov	r1, sp
 800d8ba:	47a8      	blx	r5
 800d8bc:	b003      	add	sp, #12
 800d8be:	bd30      	pop	{r4, r5, pc}
 800d8c0:	2001535c 	.word	0x2001535c

0800d8c4 <_ZN8touchgfx3BoxD1Ev>:
 800d8c4:	4770      	bx	lr

0800d8c6 <_ZN8touchgfx3BoxD0Ev>:
 800d8c6:	b510      	push	{r4, lr}
 800d8c8:	212c      	movs	r1, #44	; 0x2c
 800d8ca:	4604      	mov	r4, r0
 800d8cc:	f012 f9fa 	bl	801fcc4 <_ZdlPvj>
 800d8d0:	4620      	mov	r0, r4
 800d8d2:	bd10      	pop	{r4, pc}

0800d8d4 <_ZNK8touchgfx3Box17invalidateContentEv>:
 800d8d4:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 800d8d8:	b12a      	cbz	r2, 800d8e6 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800d8da:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800d8de:	b112      	cbz	r2, 800d8e6 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800d8e0:	6803      	ldr	r3, [r0, #0]
 800d8e2:	695b      	ldr	r3, [r3, #20]
 800d8e4:	4718      	bx	r3
 800d8e6:	4770      	bx	lr

0800d8e8 <_ZN8touchgfx6ButtonD1Ev>:
 800d8e8:	4770      	bx	lr

0800d8ea <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 800d8ea:	b570      	push	{r4, r5, r6, lr}
 800d8ec:	880b      	ldrh	r3, [r1, #0]
 800d8ee:	85c3      	strh	r3, [r0, #46]	; 0x2e
 800d8f0:	4605      	mov	r5, r0
 800d8f2:	8813      	ldrh	r3, [r2, #0]
 800d8f4:	f825 3f30 	strh.w	r3, [r5, #48]!
 800d8f8:	4604      	mov	r4, r0
 800d8fa:	4628      	mov	r0, r5
 800d8fc:	f006 f8f6 	bl	8013aec <_ZNK8touchgfx6Bitmap8getWidthEv>
 800d900:	4606      	mov	r6, r0
 800d902:	4628      	mov	r0, r5
 800d904:	f006 f926 	bl	8013b54 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800d908:	6823      	ldr	r3, [r4, #0]
 800d90a:	4605      	mov	r5, r0
 800d90c:	4631      	mov	r1, r6
 800d90e:	4620      	mov	r0, r4
 800d910:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d912:	4798      	blx	r3
 800d914:	6823      	ldr	r3, [r4, #0]
 800d916:	4629      	mov	r1, r5
 800d918:	4620      	mov	r0, r4
 800d91a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d91c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d920:	4718      	bx	r3

0800d922 <_ZN8touchgfx6ButtonD0Ev>:
 800d922:	b510      	push	{r4, lr}
 800d924:	2134      	movs	r1, #52	; 0x34
 800d926:	4604      	mov	r4, r0
 800d928:	f012 f9cc 	bl	801fcc4 <_ZdlPvj>
 800d92c:	4620      	mov	r0, r4
 800d92e:	bd10      	pop	{r4, pc}

0800d930 <_ZNK8touchgfx6Button12getSolidRectEv>:
 800d930:	b510      	push	{r4, lr}
 800d932:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 800d936:	2bff      	cmp	r3, #255	; 0xff
 800d938:	4604      	mov	r4, r0
 800d93a:	d006      	beq.n	800d94a <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 800d93c:	2300      	movs	r3, #0
 800d93e:	8003      	strh	r3, [r0, #0]
 800d940:	8043      	strh	r3, [r0, #2]
 800d942:	8083      	strh	r3, [r0, #4]
 800d944:	80c3      	strh	r3, [r0, #6]
 800d946:	4620      	mov	r0, r4
 800d948:	bd10      	pop	{r4, pc}
 800d94a:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 800d94e:	b11b      	cbz	r3, 800d958 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 800d950:	3130      	adds	r1, #48	; 0x30
 800d952:	f006 f933 	bl	8013bbc <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800d956:	e7f6      	b.n	800d946 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 800d958:	312e      	adds	r1, #46	; 0x2e
 800d95a:	e7fa      	b.n	800d952 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>

0800d95c <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 800d95c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d960:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800d964:	b08a      	sub	sp, #40	; 0x28
 800d966:	4604      	mov	r4, r0
 800d968:	4688      	mov	r8, r1
 800d96a:	2b00      	cmp	r3, #0
 800d96c:	d066      	beq.n	800da3c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 800d96e:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800d970:	f8ad 3014 	strh.w	r3, [sp, #20]
 800d974:	a805      	add	r0, sp, #20
 800d976:	f006 f8b9 	bl	8013aec <_ZNK8touchgfx6Bitmap8getWidthEv>
 800d97a:	4607      	mov	r7, r0
 800d97c:	a805      	add	r0, sp, #20
 800d97e:	f006 f8e9 	bl	8013b54 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800d982:	f9b8 6000 	ldrsh.w	r6, [r8]
 800d986:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 800d98a:	4432      	add	r2, r6
 800d98c:	b292      	uxth	r2, r2
 800d98e:	2300      	movs	r3, #0
 800d990:	fa0f fc82 	sxth.w	ip, r2
 800d994:	459c      	cmp	ip, r3
 800d996:	9306      	str	r3, [sp, #24]
 800d998:	dd52      	ble.n	800da40 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800d99a:	42b7      	cmp	r7, r6
 800d99c:	dd50      	ble.n	800da40 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800d99e:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 800d9a2:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 800d9a6:	442b      	add	r3, r5
 800d9a8:	b29b      	uxth	r3, r3
 800d9aa:	b219      	sxth	r1, r3
 800d9ac:	2900      	cmp	r1, #0
 800d9ae:	dd47      	ble.n	800da40 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800d9b0:	42a8      	cmp	r0, r5
 800d9b2:	dd45      	ble.n	800da40 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800d9b4:	4567      	cmp	r7, ip
 800d9b6:	bfb8      	it	lt
 800d9b8:	b2ba      	uxthlt	r2, r7
 800d9ba:	4288      	cmp	r0, r1
 800d9bc:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 800d9c0:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 800d9c4:	bfb8      	it	lt
 800d9c6:	b283      	uxthlt	r3, r0
 800d9c8:	1b92      	subs	r2, r2, r6
 800d9ca:	1b5b      	subs	r3, r3, r5
 800d9cc:	f8ad 201c 	strh.w	r2, [sp, #28]
 800d9d0:	f8ad 301e 	strh.w	r3, [sp, #30]
 800d9d4:	f8ad 6018 	strh.w	r6, [sp, #24]
 800d9d8:	f8ad 501a 	strh.w	r5, [sp, #26]
 800d9dc:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800d9e0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800d9e4:	429a      	cmp	r2, r3
 800d9e6:	d026      	beq.n	800da36 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800d9e8:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800d9ec:	2b00      	cmp	r3, #0
 800d9ee:	dd22      	ble.n	800da36 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800d9f0:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800d9f4:	2b00      	cmp	r3, #0
 800d9f6:	dd1e      	ble.n	800da36 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800d9f8:	2300      	movs	r3, #0
 800d9fa:	e9cd 3308 	strd	r3, r3, [sp, #32]
 800d9fe:	6823      	ldr	r3, [r4, #0]
 800da00:	a908      	add	r1, sp, #32
 800da02:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800da04:	4620      	mov	r0, r4
 800da06:	4798      	blx	r3
 800da08:	4b0f      	ldr	r3, [pc, #60]	; (800da48 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 800da0a:	681b      	ldr	r3, [r3, #0]
 800da0c:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800da10:	b10a      	cbz	r2, 800da16 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 800da12:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800da14:	b900      	cbnz	r0, 800da18 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 800da16:	6898      	ldr	r0, [r3, #8]
 800da18:	6801      	ldr	r1, [r0, #0]
 800da1a:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800da1e:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 800da22:	2501      	movs	r5, #1
 800da24:	9502      	str	r5, [sp, #8]
 800da26:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 800da2a:	9401      	str	r4, [sp, #4]
 800da2c:	ac06      	add	r4, sp, #24
 800da2e:	9400      	str	r4, [sp, #0]
 800da30:	688c      	ldr	r4, [r1, #8]
 800da32:	a905      	add	r1, sp, #20
 800da34:	47a0      	blx	r4
 800da36:	b00a      	add	sp, #40	; 0x28
 800da38:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800da3c:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800da3e:	e797      	b.n	800d970 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 800da40:	2300      	movs	r3, #0
 800da42:	9307      	str	r3, [sp, #28]
 800da44:	e7ca      	b.n	800d9dc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 800da46:	bf00      	nop
 800da48:	2001535c 	.word	0x2001535c

0800da4c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 800da4c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800da50:	4b2f      	ldr	r3, [pc, #188]	; (800db10 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 800da52:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800da54:	881b      	ldrh	r3, [r3, #0]
 800da56:	4293      	cmp	r3, r2
 800da58:	b08d      	sub	sp, #52	; 0x34
 800da5a:	4604      	mov	r4, r0
 800da5c:	460f      	mov	r7, r1
 800da5e:	d954      	bls.n	800db0a <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 800da60:	4b2c      	ldr	r3, [pc, #176]	; (800db14 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 800da62:	6819      	ldr	r1, [r3, #0]
 800da64:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 800da68:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 800da6c:	4a2a      	ldr	r2, [pc, #168]	; (800db18 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 800da6e:	6812      	ldr	r2, [r2, #0]
 800da70:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 800da74:	2900      	cmp	r1, #0
 800da76:	d048      	beq.n	800db0a <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 800da78:	785a      	ldrb	r2, [r3, #1]
 800da7a:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 800da7e:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 800da82:	4b26      	ldr	r3, [pc, #152]	; (800db1c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 800da84:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
 800da88:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 800da8c:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 800da90:	6b26      	ldr	r6, [r4, #48]	; 0x30
 800da92:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
 800da96:	9107      	str	r1, [sp, #28]
 800da98:	f3c2 0801 	ubfx	r8, r2, #0, #2
 800da9c:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800daa0:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
 800daa4:	681a      	ldr	r2, [r3, #0]
 800daa6:	f88d 8020 	strb.w	r8, [sp, #32]
 800daaa:	f892 3076 	ldrb.w	r3, [r2, #118]	; 0x76
 800daae:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 800dab2:	9609      	str	r6, [sp, #36]	; 0x24
 800dab4:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 800dab8:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
 800dabc:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
 800dac0:	b10b      	cbz	r3, 800dac6 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 800dac2:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
 800dac4:	b905      	cbnz	r5, 800dac8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 800dac6:	6895      	ldr	r5, [r2, #8]
 800dac8:	ae05      	add	r6, sp, #20
 800daca:	4621      	mov	r1, r4
 800dacc:	4630      	mov	r0, r6
 800dace:	f003 fe0f 	bl	80116f0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800dad2:	4b13      	ldr	r3, [pc, #76]	; (800db20 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 800dad4:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800dad6:	6818      	ldr	r0, [r3, #0]
 800dad8:	f7f6 ff32 	bl	8004940 <_ZNK8touchgfx5Texts7getTextEt>
 800dadc:	6823      	ldr	r3, [r4, #0]
 800dade:	4680      	mov	r8, r0
 800dae0:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800dae2:	4620      	mov	r0, r4
 800dae4:	4798      	blx	r3
 800dae6:	6823      	ldr	r3, [r4, #0]
 800dae8:	4681      	mov	r9, r0
 800daea:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800daee:	4620      	mov	r0, r4
 800daf0:	4798      	blx	r3
 800daf2:	e9cd 9002 	strd	r9, r0, [sp, #8]
 800daf6:	ab07      	add	r3, sp, #28
 800daf8:	9300      	str	r3, [sp, #0]
 800dafa:	f8cd 8004 	str.w	r8, [sp, #4]
 800dafe:	463b      	mov	r3, r7
 800db00:	e896 0006 	ldmia.w	r6, {r1, r2}
 800db04:	4628      	mov	r0, r5
 800db06:	f7f6 fecd 	bl	80048a4 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800db0a:	b00d      	add	sp, #52	; 0x34
 800db0c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800db10:	200153b8 	.word	0x200153b8
 800db14:	200153b4 	.word	0x200153b4
 800db18:	200153bc 	.word	0x200153bc
 800db1c:	2001535c 	.word	0x2001535c
 800db20:	200153c0 	.word	0x200153c0

0800db24 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
 800db24:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800db28:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 800db2c:	b0a0      	sub	sp, #128	; 0x80
 800db2e:	4604      	mov	r4, r0
 800db30:	b193      	cbz	r3, 800db58 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800db32:	4b30      	ldr	r3, [pc, #192]	; (800dbf4 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xd0>)
 800db34:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800db36:	881b      	ldrh	r3, [r3, #0]
 800db38:	428b      	cmp	r3, r1
 800db3a:	d90d      	bls.n	800db58 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800db3c:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800db40:	2b00      	cmp	r3, #0
 800db42:	dd09      	ble.n	800db58 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800db44:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800db48:	2b00      	cmp	r3, #0
 800db4a:	dd05      	ble.n	800db58 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800db4c:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 800db50:	b12b      	cbz	r3, 800db5e <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x3a>
 800db52:	6803      	ldr	r3, [r0, #0]
 800db54:	695b      	ldr	r3, [r3, #20]
 800db56:	4798      	blx	r3
 800db58:	b020      	add	sp, #128	; 0x80
 800db5a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800db5e:	4b26      	ldr	r3, [pc, #152]	; (800dbf8 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xd4>)
 800db60:	681b      	ldr	r3, [r3, #0]
 800db62:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 800db66:	4b25      	ldr	r3, [pc, #148]	; (800dbfc <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xd8>)
 800db68:	681b      	ldr	r3, [r3, #0]
 800db6a:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800db6e:	4b24      	ldr	r3, [pc, #144]	; (800dc00 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xdc>)
 800db70:	6818      	ldr	r0, [r3, #0]
 800db72:	f7f6 fee5 	bl	8004940 <_ZNK8touchgfx5Texts7getTextEt>
 800db76:	4606      	mov	r6, r0
 800db78:	a807      	add	r0, sp, #28
 800db7a:	f004 fa6e 	bl	801205a <_ZN8touchgfx12TextProviderC1Ev>
 800db7e:	682b      	ldr	r3, [r5, #0]
 800db80:	4628      	mov	r0, r5
 800db82:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800db84:	4798      	blx	r3
 800db86:	682b      	ldr	r3, [r5, #0]
 800db88:	4607      	mov	r7, r0
 800db8a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800db8c:	4628      	mov	r0, r5
 800db8e:	4798      	blx	r3
 800db90:	6823      	ldr	r3, [r4, #0]
 800db92:	4605      	mov	r5, r0
 800db94:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800db96:	4620      	mov	r0, r4
 800db98:	4798      	blx	r3
 800db9a:	6823      	ldr	r3, [r4, #0]
 800db9c:	4680      	mov	r8, r0
 800db9e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800dba2:	4620      	mov	r0, r4
 800dba4:	4798      	blx	r3
 800dba6:	462b      	mov	r3, r5
 800dba8:	e9cd 8000 	strd	r8, r0, [sp]
 800dbac:	463a      	mov	r2, r7
 800dbae:	a807      	add	r0, sp, #28
 800dbb0:	4631      	mov	r1, r6
 800dbb2:	f004 fac2 	bl	801213a <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800dbb6:	a807      	add	r0, sp, #28
 800dbb8:	f004 fe7a 	bl	80128b0 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800dbbc:	280a      	cmp	r0, #10
 800dbbe:	d103      	bne.n	800dbc8 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xa4>
 800dbc0:	6823      	ldr	r3, [r4, #0]
 800dbc2:	4620      	mov	r0, r4
 800dbc4:	695b      	ldr	r3, [r3, #20]
 800dbc6:	e7c6      	b.n	800db56 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x32>
 800dbc8:	a807      	add	r0, sp, #28
 800dbca:	f004 fe71 	bl	80128b0 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800dbce:	2800      	cmp	r0, #0
 800dbd0:	d1f4      	bne.n	800dbbc <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x98>
 800dbd2:	ad04      	add	r5, sp, #16
 800dbd4:	4621      	mov	r1, r4
 800dbd6:	4628      	mov	r0, r5
 800dbd8:	f7ff fb9c 	bl	800d314 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800dbdc:	e895 0003 	ldmia.w	r5, {r0, r1}
 800dbe0:	6822      	ldr	r2, [r4, #0]
 800dbe2:	ab02      	add	r3, sp, #8
 800dbe4:	e883 0003 	stmia.w	r3, {r0, r1}
 800dbe8:	6912      	ldr	r2, [r2, #16]
 800dbea:	4619      	mov	r1, r3
 800dbec:	4620      	mov	r0, r4
 800dbee:	4790      	blx	r2
 800dbf0:	e7b2      	b.n	800db58 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800dbf2:	bf00      	nop
 800dbf4:	200153b8 	.word	0x200153b8
 800dbf8:	200153b4 	.word	0x200153b4
 800dbfc:	200153bc 	.word	0x200153bc
 800dc00:	200153c0 	.word	0x200153c0

0800dc04 <_ZN8touchgfx13BoxWithBorderD1Ev>:
 800dc04:	4770      	bx	lr

0800dc06 <_ZN8touchgfx13BoxWithBorderD0Ev>:
 800dc06:	b510      	push	{r4, lr}
 800dc08:	2134      	movs	r1, #52	; 0x34
 800dc0a:	4604      	mov	r4, r0
 800dc0c:	f012 f85a 	bl	801fcc4 <_ZdlPvj>
 800dc10:	4620      	mov	r0, r4
 800dc12:	bd10      	pop	{r4, pc}

0800dc14 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE>:
 800dc14:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800dc18:	4604      	mov	r4, r0
 800dc1a:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800dc1c:	8962      	ldrh	r2, [r4, #10]
 800dc1e:	b218      	sxth	r0, r3
 800dc20:	460e      	mov	r6, r1
 800dc22:	005b      	lsls	r3, r3, #1
 800dc24:	8921      	ldrh	r1, [r4, #8]
 800dc26:	b29b      	uxth	r3, r3
 800dc28:	1ac9      	subs	r1, r1, r3
 800dc2a:	b08e      	sub	sp, #56	; 0x38
 800dc2c:	b209      	sxth	r1, r1
 800dc2e:	1ad3      	subs	r3, r2, r3
 800dc30:	b21b      	sxth	r3, r3
 800dc32:	2900      	cmp	r1, #0
 800dc34:	f8ad 0000 	strh.w	r0, [sp]
 800dc38:	f8ad 0002 	strh.w	r0, [sp, #2]
 800dc3c:	f8ad 1004 	strh.w	r1, [sp, #4]
 800dc40:	f8ad 3006 	strh.w	r3, [sp, #6]
 800dc44:	dd5e      	ble.n	800dd04 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 800dc46:	2b00      	cmp	r3, #0
 800dc48:	dd5c      	ble.n	800dd04 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 800dc4a:	6830      	ldr	r0, [r6, #0]
 800dc4c:	6871      	ldr	r1, [r6, #4]
 800dc4e:	ab02      	add	r3, sp, #8
 800dc50:	c303      	stmia	r3!, {r0, r1}
 800dc52:	4669      	mov	r1, sp
 800dc54:	a802      	add	r0, sp, #8
 800dc56:	f7fc fb79 	bl	800a34c <_ZN8touchgfx4RectaNERKS0_>
 800dc5a:	4620      	mov	r0, r4
 800dc5c:	a902      	add	r1, sp, #8
 800dc5e:	f7ff fe13 	bl	800d888 <_ZNK8touchgfx3Box4drawERKNS_4RectE>
 800dc62:	8e20      	ldrh	r0, [r4, #48]	; 0x30
 800dc64:	2800      	cmp	r0, #0
 800dc66:	d05f      	beq.n	800dd28 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 800dc68:	8963      	ldrh	r3, [r4, #10]
 800dc6a:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800dc6e:	f8ad 101c 	strh.w	r1, [sp, #28]
 800dc72:	1a1f      	subs	r7, r3, r0
 800dc74:	eba3 0340 	sub.w	r3, r3, r0, lsl #1
 800dc78:	b202      	sxth	r2, r0
 800dc7a:	2500      	movs	r5, #0
 800dc7c:	b21b      	sxth	r3, r3
 800dc7e:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
 800dc82:	1a09      	subs	r1, r1, r0
 800dc84:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 800dc88:	9506      	str	r5, [sp, #24]
 800dc8a:	f8ad 201e 	strh.w	r2, [sp, #30]
 800dc8e:	f8ad 5020 	strh.w	r5, [sp, #32]
 800dc92:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 800dc96:	f8ad 5028 	strh.w	r5, [sp, #40]	; 0x28
 800dc9a:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 800dc9e:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800dca2:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800dca6:	f8ad 1030 	strh.w	r1, [sp, #48]	; 0x30
 800dcaa:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 800dcae:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 800dcb2:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800dcb6:	af04      	add	r7, sp, #16
 800dcb8:	ab06      	add	r3, sp, #24
 800dcba:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800dcbe:	e893 0003 	ldmia.w	r3, {r0, r1}
 800dcc2:	e887 0003 	stmia.w	r7, {r0, r1}
 800dcc6:	4631      	mov	r1, r6
 800dcc8:	4638      	mov	r0, r7
 800dcca:	f7fc fb3f 	bl	800a34c <_ZN8touchgfx4RectaNERKS0_>
 800dcce:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800dcd2:	2b00      	cmp	r3, #0
 800dcd4:	dd12      	ble.n	800dcfc <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 800dcd6:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800dcda:	2b00      	cmp	r3, #0
 800dcdc:	dd0e      	ble.n	800dcfc <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 800dcde:	6823      	ldr	r3, [r4, #0]
 800dce0:	4639      	mov	r1, r7
 800dce2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800dce4:	4620      	mov	r0, r4
 800dce6:	4798      	blx	r3
 800dce8:	f7f4 fb84 	bl	80023f4 <_ZN8touchgfx3HAL3lcdEv>
 800dcec:	6803      	ldr	r3, [r0, #0]
 800dcee:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800dcf0:	f8d3 8020 	ldr.w	r8, [r3, #32]
 800dcf4:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800dcf8:	4639      	mov	r1, r7
 800dcfa:	47c0      	blx	r8
 800dcfc:	3501      	adds	r5, #1
 800dcfe:	2d04      	cmp	r5, #4
 800dd00:	d1da      	bne.n	800dcb8 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xa4>
 800dd02:	e011      	b.n	800dd28 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 800dd04:	6830      	ldr	r0, [r6, #0]
 800dd06:	6871      	ldr	r1, [r6, #4]
 800dd08:	ab06      	add	r3, sp, #24
 800dd0a:	c303      	stmia	r3!, {r0, r1}
 800dd0c:	6823      	ldr	r3, [r4, #0]
 800dd0e:	a906      	add	r1, sp, #24
 800dd10:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800dd12:	4620      	mov	r0, r4
 800dd14:	4798      	blx	r3
 800dd16:	f7f4 fb6d 	bl	80023f4 <_ZN8touchgfx3HAL3lcdEv>
 800dd1a:	6803      	ldr	r3, [r0, #0]
 800dd1c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800dd1e:	6a1d      	ldr	r5, [r3, #32]
 800dd20:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800dd24:	a906      	add	r1, sp, #24
 800dd26:	47a8      	blx	r5
 800dd28:	b00e      	add	sp, #56	; 0x38
 800dd2a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800dd2e <_ZN8touchgfx5ImageD1Ev>:
 800dd2e:	4770      	bx	lr

0800dd30 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 800dd30:	b570      	push	{r4, r5, r6, lr}
 800dd32:	880b      	ldrh	r3, [r1, #0]
 800dd34:	84c3      	strh	r3, [r0, #38]	; 0x26
 800dd36:	4604      	mov	r4, r0
 800dd38:	4608      	mov	r0, r1
 800dd3a:	460d      	mov	r5, r1
 800dd3c:	f005 fed6 	bl	8013aec <_ZNK8touchgfx6Bitmap8getWidthEv>
 800dd40:	4606      	mov	r6, r0
 800dd42:	4628      	mov	r0, r5
 800dd44:	f005 ff06 	bl	8013b54 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800dd48:	6823      	ldr	r3, [r4, #0]
 800dd4a:	4605      	mov	r5, r0
 800dd4c:	4631      	mov	r1, r6
 800dd4e:	4620      	mov	r0, r4
 800dd50:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800dd52:	4798      	blx	r3
 800dd54:	6823      	ldr	r3, [r4, #0]
 800dd56:	4629      	mov	r1, r5
 800dd58:	4620      	mov	r0, r4
 800dd5a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800dd5c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800dd60:	4718      	bx	r3

0800dd62 <_ZN8touchgfx5ImageD0Ev>:
 800dd62:	b510      	push	{r4, lr}
 800dd64:	212c      	movs	r1, #44	; 0x2c
 800dd66:	4604      	mov	r4, r0
 800dd68:	f011 ffac 	bl	801fcc4 <_ZdlPvj>
 800dd6c:	4620      	mov	r0, r4
 800dd6e:	bd10      	pop	{r4, pc}

0800dd70 <_ZNK8touchgfx5Image12getSolidRectEv>:
 800dd70:	b510      	push	{r4, lr}
 800dd72:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 800dd76:	2bff      	cmp	r3, #255	; 0xff
 800dd78:	4604      	mov	r4, r0
 800dd7a:	d006      	beq.n	800dd8a <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 800dd7c:	2300      	movs	r3, #0
 800dd7e:	8003      	strh	r3, [r0, #0]
 800dd80:	8043      	strh	r3, [r0, #2]
 800dd82:	8083      	strh	r3, [r0, #4]
 800dd84:	80c3      	strh	r3, [r0, #6]
 800dd86:	4620      	mov	r0, r4
 800dd88:	bd10      	pop	{r4, pc}
 800dd8a:	3126      	adds	r1, #38	; 0x26
 800dd8c:	f005 ff16 	bl	8013bbc <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800dd90:	e7f9      	b.n	800dd86 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

0800dd92 <_ZNK8touchgfx5Image17invalidateContentEv>:
 800dd92:	f890 2028 	ldrb.w	r2, [r0, #40]	; 0x28
 800dd96:	b12a      	cbz	r2, 800dda4 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 800dd98:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800dd9c:	b112      	cbz	r2, 800dda4 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 800dd9e:	6803      	ldr	r3, [r0, #0]
 800dda0:	695b      	ldr	r3, [r3, #20]
 800dda2:	4718      	bx	r3
 800dda4:	4770      	bx	lr
	...

0800dda8 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 800dda8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ddac:	4604      	mov	r4, r0
 800ddae:	b088      	sub	sp, #32
 800ddb0:	f854 3b26 	ldr.w	r3, [r4], #38
 800ddb4:	2500      	movs	r5, #0
 800ddb6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ddb8:	460f      	mov	r7, r1
 800ddba:	e9cd 5504 	strd	r5, r5, [sp, #16]
 800ddbe:	a904      	add	r1, sp, #16
 800ddc0:	4606      	mov	r6, r0
 800ddc2:	4798      	blx	r3
 800ddc4:	4620      	mov	r0, r4
 800ddc6:	f005 fe91 	bl	8013aec <_ZNK8touchgfx6Bitmap8getWidthEv>
 800ddca:	4680      	mov	r8, r0
 800ddcc:	4620      	mov	r0, r4
 800ddce:	f005 fec1 	bl	8013b54 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800ddd2:	9506      	str	r5, [sp, #24]
 800ddd4:	ad06      	add	r5, sp, #24
 800ddd6:	f8ad 001e 	strh.w	r0, [sp, #30]
 800ddda:	4639      	mov	r1, r7
 800dddc:	4628      	mov	r0, r5
 800ddde:	f8ad 801c 	strh.w	r8, [sp, #28]
 800dde2:	f7fc fab3 	bl	800a34c <_ZN8touchgfx4RectaNERKS0_>
 800dde6:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800ddea:	2b00      	cmp	r3, #0
 800ddec:	dd19      	ble.n	800de22 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800ddee:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800ddf2:	2b00      	cmp	r3, #0
 800ddf4:	dd15      	ble.n	800de22 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800ddf6:	4b0c      	ldr	r3, [pc, #48]	; (800de28 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 800ddf8:	681b      	ldr	r3, [r3, #0]
 800ddfa:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800ddfe:	b10a      	cbz	r2, 800de04 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 800de00:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800de02:	b900      	cbnz	r0, 800de06 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 800de04:	6898      	ldr	r0, [r3, #8]
 800de06:	6801      	ldr	r1, [r0, #0]
 800de08:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 800de0c:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 800de10:	2701      	movs	r7, #1
 800de12:	9702      	str	r7, [sp, #8]
 800de14:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 800de18:	e9cd 5600 	strd	r5, r6, [sp]
 800de1c:	688d      	ldr	r5, [r1, #8]
 800de1e:	4621      	mov	r1, r4
 800de20:	47a8      	blx	r5
 800de22:	b008      	add	sp, #32
 800de24:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800de28:	2001535c 	.word	0x2001535c

0800de2c <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 800de2c:	4770      	bx	lr

0800de2e <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 800de2e:	b510      	push	{r4, lr}
 800de30:	2148      	movs	r1, #72	; 0x48
 800de32:	4604      	mov	r4, r0
 800de34:	f011 ff46 	bl	801fcc4 <_ZdlPvj>
 800de38:	4620      	mov	r0, r4
 800de3a:	bd10      	pop	{r4, pc}

0800de3c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 800de3c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800de40:	b08d      	sub	sp, #52	; 0x34
 800de42:	4604      	mov	r4, r0
 800de44:	4688      	mov	r8, r1
 800de46:	f7ff fd89 	bl	800d95c <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 800de4a:	4a4d      	ldr	r2, [pc, #308]	; (800df80 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x144>)
 800de4c:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800de4e:	8812      	ldrh	r2, [r2, #0]
 800de50:	429a      	cmp	r2, r3
 800de52:	f240 8081 	bls.w	800df58 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11c>
 800de56:	4e4b      	ldr	r6, [pc, #300]	; (800df84 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x148>)
 800de58:	6832      	ldr	r2, [r6, #0]
 800de5a:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800de5e:	4b4a      	ldr	r3, [pc, #296]	; (800df88 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x14c>)
 800de60:	681b      	ldr	r3, [r3, #0]
 800de62:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 800de66:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
 800de6a:	2300      	movs	r3, #0
 800de6c:	e9cd 3303 	strd	r3, r3, [sp, #12]
 800de70:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800de74:	2b03      	cmp	r3, #3
 800de76:	d811      	bhi.n	800de9c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 800de78:	e8df f003 	tbb	[pc, r3]
 800de7c:	71027102 	.word	0x71027102
 800de80:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800de84:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800de88:	f8ad 1010 	strh.w	r1, [sp, #16]
 800de8c:	1a9b      	subs	r3, r3, r2
 800de8e:	2002      	movs	r0, #2
 800de90:	f8ad 2012 	strh.w	r2, [sp, #18]
 800de94:	fb93 f3f0 	sdiv	r3, r3, r0
 800de98:	f8ad 300e 	strh.w	r3, [sp, #14]
 800de9c:	ad03      	add	r5, sp, #12
 800de9e:	e895 0003 	ldmia.w	r5, {r0, r1}
 800dea2:	f10d 0914 	add.w	r9, sp, #20
 800dea6:	e889 0003 	stmia.w	r9, {r0, r1}
 800deaa:	4641      	mov	r1, r8
 800deac:	4648      	mov	r0, r9
 800deae:	f7fc fa4d 	bl	800a34c <_ZN8touchgfx4RectaNERKS0_>
 800deb2:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800deb6:	2b00      	cmp	r3, #0
 800deb8:	dd4e      	ble.n	800df58 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11c>
 800deba:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800debe:	2b00      	cmp	r3, #0
 800dec0:	dd4a      	ble.n	800df58 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11c>
 800dec2:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 800dec6:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800deca:	1a9b      	subs	r3, r3, r2
 800decc:	f8ad 3014 	strh.w	r3, [sp, #20]
 800ded0:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 800ded4:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800ded8:	1a9b      	subs	r3, r3, r2
 800deda:	f8ad 3016 	strh.w	r3, [sp, #22]
 800dede:	6823      	ldr	r3, [r4, #0]
 800dee0:	4629      	mov	r1, r5
 800dee2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800dee4:	4620      	mov	r0, r4
 800dee6:	4798      	blx	r3
 800dee8:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800deec:	2b00      	cmp	r3, #0
 800deee:	d045      	beq.n	800df7c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x140>
 800def0:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800def2:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 800def4:	6833      	ldr	r3, [r6, #0]
 800def6:	f894 0032 	ldrb.w	r0, [r4, #50]	; 0x32
 800defa:	f894 4044 	ldrb.w	r4, [r4, #68]	; 0x44
 800defe:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800df02:	785b      	ldrb	r3, [r3, #1]
 800df04:	9209      	str	r2, [sp, #36]	; 0x24
 800df06:	f3c3 0601 	ubfx	r6, r3, #0, #2
 800df0a:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800df0e:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 800df12:	2300      	movs	r3, #0
 800df14:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800df18:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 800df1c:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 800df20:	4b1a      	ldr	r3, [pc, #104]	; (800df8c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x150>)
 800df22:	9707      	str	r7, [sp, #28]
 800df24:	681b      	ldr	r3, [r3, #0]
 800df26:	f88d 6020 	strb.w	r6, [sp, #32]
 800df2a:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800df2e:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800df32:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800df36:	b10a      	cbz	r2, 800df3c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x100>
 800df38:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 800df3a:	b904      	cbnz	r4, 800df3e <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
 800df3c:	689c      	ldr	r4, [r3, #8]
 800df3e:	4b14      	ldr	r3, [pc, #80]	; (800df90 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x154>)
 800df40:	6818      	ldr	r0, [r3, #0]
 800df42:	f7f6 fcfd 	bl	8004940 <_ZNK8touchgfx5Texts7getTextEt>
 800df46:	ab07      	add	r3, sp, #28
 800df48:	9001      	str	r0, [sp, #4]
 800df4a:	9300      	str	r3, [sp, #0]
 800df4c:	e895 0006 	ldmia.w	r5, {r1, r2}
 800df50:	464b      	mov	r3, r9
 800df52:	4620      	mov	r0, r4
 800df54:	f7f6 fca6 	bl	80048a4 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800df58:	b00d      	add	sp, #52	; 0x34
 800df5a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800df5e:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800df62:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 800df66:	f8ad 2010 	strh.w	r2, [sp, #16]
 800df6a:	1a9b      	subs	r3, r3, r2
 800df6c:	2002      	movs	r0, #2
 800df6e:	f8ad 1012 	strh.w	r1, [sp, #18]
 800df72:	fb93 f3f0 	sdiv	r3, r3, r0
 800df76:	f8ad 300c 	strh.w	r3, [sp, #12]
 800df7a:	e78f      	b.n	800de9c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 800df7c:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 800df7e:	e7b8      	b.n	800def2 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb6>
 800df80:	200153b8 	.word	0x200153b8
 800df84:	200153b4 	.word	0x200153b4
 800df88:	200153bc 	.word	0x200153bc
 800df8c:	2001535c 	.word	0x2001535c
 800df90:	200153c0 	.word	0x200153c0

0800df94 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 800df94:	b510      	push	{r4, lr}
 800df96:	2101      	movs	r1, #1
 800df98:	4c13      	ldr	r4, [pc, #76]	; (800dfe8 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 800df9a:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800df9e:	2200      	movs	r2, #0
 800dfa0:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 800dfa4:	6004      	str	r4, [r0, #0]
 800dfa6:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800dfaa:	4c10      	ldr	r4, [pc, #64]	; (800dfec <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 800dfac:	8082      	strh	r2, [r0, #4]
 800dfae:	80c2      	strh	r2, [r0, #6]
 800dfb0:	8102      	strh	r2, [r0, #8]
 800dfb2:	8142      	strh	r2, [r0, #10]
 800dfb4:	8182      	strh	r2, [r0, #12]
 800dfb6:	81c2      	strh	r2, [r0, #14]
 800dfb8:	8202      	strh	r2, [r0, #16]
 800dfba:	8242      	strh	r2, [r0, #18]
 800dfbc:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800dfc0:	61c2      	str	r2, [r0, #28]
 800dfc2:	8402      	strh	r2, [r0, #32]
 800dfc4:	8442      	strh	r2, [r0, #34]	; 0x22
 800dfc6:	6282      	str	r2, [r0, #40]	; 0x28
 800dfc8:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 800dfcc:	85c1      	strh	r1, [r0, #46]	; 0x2e
 800dfce:	8601      	strh	r1, [r0, #48]	; 0x30
 800dfd0:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 800dfd4:	6344      	str	r4, [r0, #52]	; 0x34
 800dfd6:	8701      	strh	r1, [r0, #56]	; 0x38
 800dfd8:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
 800dfdc:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
 800dfe0:	f880 2045 	strb.w	r2, [r0, #69]	; 0x45
 800dfe4:	bd10      	pop	{r4, pc}
 800dfe6:	bf00      	nop
 800dfe8:	080236bc 	.word	0x080236bc
 800dfec:	0802169c 	.word	0x0802169c

0800dff0 <_ZN8touchgfx7OutlineD1Ev>:
 800dff0:	4770      	bx	lr

0800dff2 <_ZN8touchgfx7OutlineD0Ev>:
 800dff2:	b510      	push	{r4, lr}
 800dff4:	2130      	movs	r1, #48	; 0x30
 800dff6:	4604      	mov	r4, r0
 800dff8:	f011 fe64 	bl	801fcc4 <_ZdlPvj>
 800dffc:	4620      	mov	r0, r4
 800dffe:	bd10      	pop	{r4, pc}

0800e000 <_ZN8touchgfx7Outline5resetEv>:
 800e000:	b510      	push	{r4, lr}
 800e002:	4604      	mov	r4, r0
 800e004:	f000 fe8c 	bl	800ed20 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 800e008:	60e0      	str	r0, [r4, #12]
 800e00a:	f000 fe8f 	bl	800ed2c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 800e00e:	68e3      	ldr	r3, [r4, #12]
 800e010:	6123      	str	r3, [r4, #16]
 800e012:	08c0      	lsrs	r0, r0, #3
 800e014:	2200      	movs	r2, #0
 800e016:	f647 71ff 	movw	r1, #32767	; 0x7fff
 800e01a:	3801      	subs	r0, #1
 800e01c:	6060      	str	r0, [r4, #4]
 800e01e:	60a2      	str	r2, [r4, #8]
 800e020:	8019      	strh	r1, [r3, #0]
 800e022:	8059      	strh	r1, [r3, #2]
 800e024:	809a      	strh	r2, [r3, #4]
 800e026:	80da      	strh	r2, [r3, #6]
 800e028:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800e02a:	f023 0301 	bic.w	r3, r3, #1
 800e02e:	f043 0302 	orr.w	r3, r3, #2
 800e032:	6263      	str	r3, [r4, #36]	; 0x24
 800e034:	bd10      	pop	{r4, pc}
	...

0800e038 <_ZN8touchgfx7OutlineC1Ev>:
 800e038:	b510      	push	{r4, lr}
 800e03a:	4b0a      	ldr	r3, [pc, #40]	; (800e064 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 800e03c:	6003      	str	r3, [r0, #0]
 800e03e:	2300      	movs	r3, #0
 800e040:	e9c0 3301 	strd	r3, r3, [r0, #4]
 800e044:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800e048:	e9c0 3305 	strd	r3, r3, [r0, #20]
 800e04c:	e9c0 3307 	strd	r3, r3, [r0, #28]
 800e050:	6243      	str	r3, [r0, #36]	; 0x24
 800e052:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 800e056:	4604      	mov	r4, r0
 800e058:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 800e05c:	f7ff ffd0 	bl	800e000 <_ZN8touchgfx7Outline5resetEv>
 800e060:	4620      	mov	r0, r4
 800e062:	bd10      	pop	{r4, pc}
 800e064:	08023730 	.word	0x08023730

0800e068 <_ZN8touchgfx7Outline10renderLineEiiii>:
 800e068:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e06c:	b093      	sub	sp, #76	; 0x4c
 800e06e:	1156      	asrs	r6, r2, #5
 800e070:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 800e072:	9305      	str	r3, [sp, #20]
 800e074:	f004 051f 	and.w	r5, r4, #31
 800e078:	1153      	asrs	r3, r2, #5
 800e07a:	9504      	str	r5, [sp, #16]
 800e07c:	1165      	asrs	r5, r4, #5
 800e07e:	9303      	str	r3, [sp, #12]
 800e080:	42ae      	cmp	r6, r5
 800e082:	ea4f 1364 	mov.w	r3, r4, asr #5
 800e086:	9306      	str	r3, [sp, #24]
 800e088:	f002 031f 	and.w	r3, r2, #31
 800e08c:	f040 80f8 	bne.w	800e280 <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 800e090:	9c04      	ldr	r4, [sp, #16]
 800e092:	9a05      	ldr	r2, [sp, #20]
 800e094:	42a3      	cmp	r3, r4
 800e096:	ea4f 1e62 	mov.w	lr, r2, asr #5
 800e09a:	6902      	ldr	r2, [r0, #16]
 800e09c:	d125      	bne.n	800e0ea <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 800e09e:	f9b2 3000 	ldrsh.w	r3, [r2]
 800e0a2:	459e      	cmp	lr, r3
 800e0a4:	d103      	bne.n	800e0ae <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 800e0a6:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 800e0aa:	429e      	cmp	r6, r3
 800e0ac:	d035      	beq.n	800e11a <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800e0ae:	88d1      	ldrh	r1, [r2, #6]
 800e0b0:	8893      	ldrh	r3, [r2, #4]
 800e0b2:	430b      	orrs	r3, r1
 800e0b4:	d010      	beq.n	800e0d8 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 800e0b6:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 800e0ba:	2b00      	cmp	r3, #0
 800e0bc:	db0c      	blt.n	800e0d8 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 800e0be:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 800e0c0:	428b      	cmp	r3, r1
 800e0c2:	da09      	bge.n	800e0d8 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 800e0c4:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 800e0c8:	428b      	cmp	r3, r1
 800e0ca:	bf38      	it	cc
 800e0cc:	3208      	addcc	r2, #8
 800e0ce:	f103 0301 	add.w	r3, r3, #1
 800e0d2:	bf38      	it	cc
 800e0d4:	6102      	strcc	r2, [r0, #16]
 800e0d6:	6083      	str	r3, [r0, #8]
 800e0d8:	6903      	ldr	r3, [r0, #16]
 800e0da:	9a03      	ldr	r2, [sp, #12]
 800e0dc:	f8a3 e000 	strh.w	lr, [r3]
 800e0e0:	805a      	strh	r2, [r3, #2]
 800e0e2:	2200      	movs	r2, #0
 800e0e4:	809a      	strh	r2, [r3, #4]
 800e0e6:	80da      	strh	r2, [r3, #6]
 800e0e8:	e017      	b.n	800e11a <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800e0ea:	9c05      	ldr	r4, [sp, #20]
 800e0ec:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 800e0f0:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 800e0f4:	f004 041f 	and.w	r4, r4, #31
 800e0f8:	114e      	asrs	r6, r1, #5
 800e0fa:	9402      	str	r4, [sp, #8]
 800e0fc:	9c04      	ldr	r4, [sp, #16]
 800e0fe:	4576      	cmp	r6, lr
 800e100:	f001 0c1f 	and.w	ip, r1, #31
 800e104:	eba4 0403 	sub.w	r4, r4, r3
 800e108:	d10a      	bne.n	800e120 <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 800e10a:	9b02      	ldr	r3, [sp, #8]
 800e10c:	449c      	add	ip, r3
 800e10e:	44a0      	add	r8, r4
 800e110:	fb04 a40c 	mla	r4, r4, ip, sl
 800e114:	f8a2 8004 	strh.w	r8, [r2, #4]
 800e118:	80d4      	strh	r4, [r2, #6]
 800e11a:	b013      	add	sp, #76	; 0x4c
 800e11c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e120:	9d05      	ldr	r5, [sp, #20]
 800e122:	1a69      	subs	r1, r5, r1
 800e124:	bf5b      	ittet	pl
 800e126:	f1cc 0520 	rsbpl	r5, ip, #32
 800e12a:	436c      	mulpl	r4, r5
 800e12c:	2500      	movmi	r5, #0
 800e12e:	2520      	movpl	r5, #32
 800e130:	bf44      	itt	mi
 800e132:	fb04 f40c 	mulmi.w	r4, r4, ip
 800e136:	4249      	negmi	r1, r1
 800e138:	9501      	str	r5, [sp, #4]
 800e13a:	9f01      	ldr	r7, [sp, #4]
 800e13c:	fb94 f5f1 	sdiv	r5, r4, r1
 800e140:	fb01 4415 	mls	r4, r1, r5, r4
 800e144:	bf54      	ite	pl
 800e146:	f04f 0901 	movpl.w	r9, #1
 800e14a:	f04f 39ff 	movmi.w	r9, #4294967295
 800e14e:	2c00      	cmp	r4, #0
 800e150:	bfb8      	it	lt
 800e152:	f105 35ff 	addlt.w	r5, r5, #4294967295
 800e156:	44bc      	add	ip, r7
 800e158:	44a8      	add	r8, r5
 800e15a:	fb05 ac0c 	mla	ip, r5, ip, sl
 800e15e:	f8a2 8004 	strh.w	r8, [r2, #4]
 800e162:	f8a2 c006 	strh.w	ip, [r2, #6]
 800e166:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800e16a:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 800e16e:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 800e172:	bfb8      	it	lt
 800e174:	1864      	addlt	r4, r4, r1
 800e176:	ea58 0202 	orrs.w	r2, r8, r2
 800e17a:	444e      	add	r6, r9
 800e17c:	d011      	beq.n	800e1a2 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 800e17e:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 800e182:	f1b8 0f00 	cmp.w	r8, #0
 800e186:	db0c      	blt.n	800e1a2 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 800e188:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 800e18a:	4590      	cmp	r8, r2
 800e18c:	da09      	bge.n	800e1a2 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 800e18e:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 800e192:	4590      	cmp	r8, r2
 800e194:	bf3c      	itt	cc
 800e196:	f10c 0208 	addcc.w	r2, ip, #8
 800e19a:	6102      	strcc	r2, [r0, #16]
 800e19c:	f108 0201 	add.w	r2, r8, #1
 800e1a0:	6082      	str	r2, [r0, #8]
 800e1a2:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800e1a6:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800e1aa:	f8ac 6000 	strh.w	r6, [ip]
 800e1ae:	2700      	movs	r7, #0
 800e1b0:	45b6      	cmp	lr, r6
 800e1b2:	f8ac 2002 	strh.w	r2, [ip, #2]
 800e1b6:	f8ac 7004 	strh.w	r7, [ip, #4]
 800e1ba:	f8ac 7006 	strh.w	r7, [ip, #6]
 800e1be:	442b      	add	r3, r5
 800e1c0:	d04d      	beq.n	800e25e <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 800e1c2:	9f04      	ldr	r7, [sp, #16]
 800e1c4:	1aff      	subs	r7, r7, r3
 800e1c6:	443d      	add	r5, r7
 800e1c8:	016d      	lsls	r5, r5, #5
 800e1ca:	fb95 f8f1 	sdiv	r8, r5, r1
 800e1ce:	fb01 5518 	mls	r5, r1, r8, r5
 800e1d2:	2d00      	cmp	r5, #0
 800e1d4:	bfb8      	it	lt
 800e1d6:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800e1da:	f108 0701 	add.w	r7, r8, #1
 800e1de:	bfb8      	it	lt
 800e1e0:	186d      	addlt	r5, r5, r1
 800e1e2:	1a64      	subs	r4, r4, r1
 800e1e4:	9703      	str	r7, [sp, #12]
 800e1e6:	f04f 0a00 	mov.w	sl, #0
 800e1ea:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800e1ee:	1964      	adds	r4, r4, r5
 800e1f0:	bf58      	it	pl
 800e1f2:	9f03      	ldrpl	r7, [sp, #12]
 800e1f4:	f8bc b004 	ldrh.w	fp, [ip, #4]
 800e1f8:	bf48      	it	mi
 800e1fa:	4647      	movmi	r7, r8
 800e1fc:	44bb      	add	fp, r7
 800e1fe:	f8ac b004 	strh.w	fp, [ip, #4]
 800e202:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800e206:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800e20a:	f8ac b006 	strh.w	fp, [ip, #6]
 800e20e:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800e212:	443b      	add	r3, r7
 800e214:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800e218:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800e21c:	bf58      	it	pl
 800e21e:	1a64      	subpl	r4, r4, r1
 800e220:	ea5b 0707 	orrs.w	r7, fp, r7
 800e224:	444e      	add	r6, r9
 800e226:	d011      	beq.n	800e24c <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 800e228:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 800e22c:	f1bb 0f00 	cmp.w	fp, #0
 800e230:	db0c      	blt.n	800e24c <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 800e232:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800e234:	45bb      	cmp	fp, r7
 800e236:	da09      	bge.n	800e24c <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 800e238:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800e23c:	45bb      	cmp	fp, r7
 800e23e:	bf3c      	itt	cc
 800e240:	f10c 0708 	addcc.w	r7, ip, #8
 800e244:	6107      	strcc	r7, [r0, #16]
 800e246:	f10b 0701 	add.w	r7, fp, #1
 800e24a:	6087      	str	r7, [r0, #8]
 800e24c:	6907      	ldr	r7, [r0, #16]
 800e24e:	45b6      	cmp	lr, r6
 800e250:	803e      	strh	r6, [r7, #0]
 800e252:	807a      	strh	r2, [r7, #2]
 800e254:	f8a7 a004 	strh.w	sl, [r7, #4]
 800e258:	f8a7 a006 	strh.w	sl, [r7, #6]
 800e25c:	d1c5      	bne.n	800e1ea <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 800e25e:	9a04      	ldr	r2, [sp, #16]
 800e260:	1ad3      	subs	r3, r2, r3
 800e262:	6902      	ldr	r2, [r0, #16]
 800e264:	8891      	ldrh	r1, [r2, #4]
 800e266:	88d6      	ldrh	r6, [r2, #6]
 800e268:	4419      	add	r1, r3
 800e26a:	8091      	strh	r1, [r2, #4]
 800e26c:	9902      	ldr	r1, [sp, #8]
 800e26e:	f101 0c20 	add.w	ip, r1, #32
 800e272:	9901      	ldr	r1, [sp, #4]
 800e274:	ebac 0c01 	sub.w	ip, ip, r1
 800e278:	fb03 630c 	mla	r3, r3, ip, r6
 800e27c:	80d3      	strh	r3, [r2, #6]
 800e27e:	e74c      	b.n	800e11a <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800e280:	9d05      	ldr	r5, [sp, #20]
 800e282:	1aa2      	subs	r2, r4, r2
 800e284:	eba5 0501 	sub.w	r5, r5, r1
 800e288:	9508      	str	r5, [sp, #32]
 800e28a:	9202      	str	r2, [sp, #8]
 800e28c:	f140 8128 	bpl.w	800e4e0 <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 800e290:	9a03      	ldr	r2, [sp, #12]
 800e292:	2a00      	cmp	r2, #0
 800e294:	f6ff af41 	blt.w	800e11a <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800e298:	9a02      	ldr	r2, [sp, #8]
 800e29a:	4252      	negs	r2, r2
 800e29c:	9202      	str	r2, [sp, #8]
 800e29e:	9a06      	ldr	r2, [sp, #24]
 800e2a0:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 800e2a4:	f04f 34ff 	mov.w	r4, #4294967295
 800e2a8:	9206      	str	r2, [sp, #24]
 800e2aa:	462a      	mov	r2, r5
 800e2ac:	940b      	str	r4, [sp, #44]	; 0x2c
 800e2ae:	435a      	muls	r2, r3
 800e2b0:	2400      	movs	r4, #0
 800e2b2:	9d02      	ldr	r5, [sp, #8]
 800e2b4:	9401      	str	r4, [sp, #4]
 800e2b6:	9c02      	ldr	r4, [sp, #8]
 800e2b8:	fb92 f4f4 	sdiv	r4, r2, r4
 800e2bc:	fb05 2214 	mls	r2, r5, r4, r2
 800e2c0:	2a00      	cmp	r2, #0
 800e2c2:	9207      	str	r2, [sp, #28]
 800e2c4:	bfbc      	itt	lt
 800e2c6:	1952      	addlt	r2, r2, r5
 800e2c8:	9207      	strlt	r2, [sp, #28]
 800e2ca:	9a01      	ldr	r2, [sp, #4]
 800e2cc:	6905      	ldr	r5, [r0, #16]
 800e2ce:	bfb8      	it	lt
 800e2d0:	f104 34ff 	addlt.w	r4, r4, #4294967295
 800e2d4:	eb04 0901 	add.w	r9, r4, r1
 800e2d8:	429a      	cmp	r2, r3
 800e2da:	ea4f 1669 	mov.w	r6, r9, asr #5
 800e2de:	f040 8112 	bne.w	800e506 <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 800e2e2:	f9b5 3000 	ldrsh.w	r3, [r5]
 800e2e6:	429e      	cmp	r6, r3
 800e2e8:	d104      	bne.n	800e2f4 <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 800e2ea:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800e2ee:	9a03      	ldr	r2, [sp, #12]
 800e2f0:	429a      	cmp	r2, r3
 800e2f2:	d01b      	beq.n	800e32c <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 800e2f4:	88ea      	ldrh	r2, [r5, #6]
 800e2f6:	88ab      	ldrh	r3, [r5, #4]
 800e2f8:	4313      	orrs	r3, r2
 800e2fa:	d010      	beq.n	800e31e <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 800e2fc:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800e300:	2a00      	cmp	r2, #0
 800e302:	db0c      	blt.n	800e31e <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 800e304:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800e306:	429a      	cmp	r2, r3
 800e308:	da09      	bge.n	800e31e <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 800e30a:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 800e30e:	429a      	cmp	r2, r3
 800e310:	bf38      	it	cc
 800e312:	3508      	addcc	r5, #8
 800e314:	f102 0201 	add.w	r2, r2, #1
 800e318:	bf38      	it	cc
 800e31a:	6105      	strcc	r5, [r0, #16]
 800e31c:	6082      	str	r2, [r0, #8]
 800e31e:	6903      	ldr	r3, [r0, #16]
 800e320:	9a03      	ldr	r2, [sp, #12]
 800e322:	805a      	strh	r2, [r3, #2]
 800e324:	2200      	movs	r2, #0
 800e326:	801e      	strh	r6, [r3, #0]
 800e328:	809a      	strh	r2, [r3, #4]
 800e32a:	80da      	strh	r2, [r3, #6]
 800e32c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800e32e:	9a03      	ldr	r2, [sp, #12]
 800e330:	6901      	ldr	r1, [r0, #16]
 800e332:	441a      	add	r2, r3
 800e334:	f9b1 3000 	ldrsh.w	r3, [r1]
 800e338:	42b3      	cmp	r3, r6
 800e33a:	d103      	bne.n	800e344 <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 800e33c:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800e340:	429a      	cmp	r2, r3
 800e342:	d01a      	beq.n	800e37a <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 800e344:	88cc      	ldrh	r4, [r1, #6]
 800e346:	888b      	ldrh	r3, [r1, #4]
 800e348:	4323      	orrs	r3, r4
 800e34a:	d010      	beq.n	800e36e <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 800e34c:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 800e350:	2c00      	cmp	r4, #0
 800e352:	db0c      	blt.n	800e36e <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 800e354:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800e356:	429c      	cmp	r4, r3
 800e358:	da09      	bge.n	800e36e <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 800e35a:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 800e35e:	429c      	cmp	r4, r3
 800e360:	bf38      	it	cc
 800e362:	3108      	addcc	r1, #8
 800e364:	f104 0401 	add.w	r4, r4, #1
 800e368:	bf38      	it	cc
 800e36a:	6101      	strcc	r1, [r0, #16]
 800e36c:	6084      	str	r4, [r0, #8]
 800e36e:	6903      	ldr	r3, [r0, #16]
 800e370:	2100      	movs	r1, #0
 800e372:	801e      	strh	r6, [r3, #0]
 800e374:	805a      	strh	r2, [r3, #2]
 800e376:	8099      	strh	r1, [r3, #4]
 800e378:	80d9      	strh	r1, [r3, #6]
 800e37a:	9b06      	ldr	r3, [sp, #24]
 800e37c:	4293      	cmp	r3, r2
 800e37e:	f000 8082 	beq.w	800e486 <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 800e382:	9b08      	ldr	r3, [sp, #32]
 800e384:	9c02      	ldr	r4, [sp, #8]
 800e386:	9902      	ldr	r1, [sp, #8]
 800e388:	015b      	lsls	r3, r3, #5
 800e38a:	fb93 f1f1 	sdiv	r1, r3, r1
 800e38e:	fb04 3311 	mls	r3, r4, r1, r3
 800e392:	2b00      	cmp	r3, #0
 800e394:	9103      	str	r1, [sp, #12]
 800e396:	9308      	str	r3, [sp, #32]
 800e398:	da04      	bge.n	800e3a4 <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 800e39a:	1e4b      	subs	r3, r1, #1
 800e39c:	9303      	str	r3, [sp, #12]
 800e39e:	9b08      	ldr	r3, [sp, #32]
 800e3a0:	4423      	add	r3, r4
 800e3a2:	9308      	str	r3, [sp, #32]
 800e3a4:	9b07      	ldr	r3, [sp, #28]
 800e3a6:	9902      	ldr	r1, [sp, #8]
 800e3a8:	1a5b      	subs	r3, r3, r1
 800e3aa:	9307      	str	r3, [sp, #28]
 800e3ac:	9b01      	ldr	r3, [sp, #4]
 800e3ae:	f1c3 0320 	rsb	r3, r3, #32
 800e3b2:	930e      	str	r3, [sp, #56]	; 0x38
 800e3b4:	990e      	ldr	r1, [sp, #56]	; 0x38
 800e3b6:	9b01      	ldr	r3, [sp, #4]
 800e3b8:	1a5b      	subs	r3, r3, r1
 800e3ba:	464f      	mov	r7, r9
 800e3bc:	930a      	str	r3, [sp, #40]	; 0x28
 800e3be:	2600      	movs	r6, #0
 800e3c0:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 800e3c4:	185b      	adds	r3, r3, r1
 800e3c6:	bf58      	it	pl
 800e3c8:	9902      	ldrpl	r1, [sp, #8]
 800e3ca:	9307      	str	r3, [sp, #28]
 800e3cc:	bf5d      	ittte	pl
 800e3ce:	1a5b      	subpl	r3, r3, r1
 800e3d0:	9307      	strpl	r3, [sp, #28]
 800e3d2:	9b03      	ldrpl	r3, [sp, #12]
 800e3d4:	9903      	ldrmi	r1, [sp, #12]
 800e3d6:	bf58      	it	pl
 800e3d8:	1c59      	addpl	r1, r3, #1
 800e3da:	4489      	add	r9, r1
 800e3dc:	2a00      	cmp	r2, #0
 800e3de:	ea4f 1a69 	mov.w	sl, r9, asr #5
 800e3e2:	db2e      	blt.n	800e442 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800e3e4:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800e3e6:	4293      	cmp	r3, r2
 800e3e8:	dd2b      	ble.n	800e442 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800e3ea:	9c01      	ldr	r4, [sp, #4]
 800e3ec:	6905      	ldr	r5, [r0, #16]
 800e3ee:	46a0      	mov	r8, r4
 800e3f0:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 800e3f2:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 800e3f6:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 800e3fa:	45a0      	cmp	r8, r4
 800e3fc:	f040 814f 	bne.w	800e69e <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 800e400:	f9b5 1000 	ldrsh.w	r1, [r5]
 800e404:	4551      	cmp	r1, sl
 800e406:	d103      	bne.n	800e410 <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 800e408:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 800e40c:	4291      	cmp	r1, r2
 800e40e:	d018      	beq.n	800e442 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800e410:	ea5c 010e 	orrs.w	r1, ip, lr
 800e414:	d00f      	beq.n	800e436 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 800e416:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 800e41a:	2900      	cmp	r1, #0
 800e41c:	db0b      	blt.n	800e436 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 800e41e:	428b      	cmp	r3, r1
 800e420:	dd09      	ble.n	800e436 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 800e422:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 800e426:	4299      	cmp	r1, r3
 800e428:	bf38      	it	cc
 800e42a:	3508      	addcc	r5, #8
 800e42c:	f101 0101 	add.w	r1, r1, #1
 800e430:	bf38      	it	cc
 800e432:	6105      	strcc	r5, [r0, #16]
 800e434:	6081      	str	r1, [r0, #8]
 800e436:	6903      	ldr	r3, [r0, #16]
 800e438:	f8a3 a000 	strh.w	sl, [r3]
 800e43c:	805a      	strh	r2, [r3, #2]
 800e43e:	809e      	strh	r6, [r3, #4]
 800e440:	80de      	strh	r6, [r3, #6]
 800e442:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800e444:	6901      	ldr	r1, [r0, #16]
 800e446:	441a      	add	r2, r3
 800e448:	88cc      	ldrh	r4, [r1, #6]
 800e44a:	888b      	ldrh	r3, [r1, #4]
 800e44c:	4323      	orrs	r3, r4
 800e44e:	d010      	beq.n	800e472 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 800e450:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 800e454:	2c00      	cmp	r4, #0
 800e456:	db0c      	blt.n	800e472 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 800e458:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800e45a:	429c      	cmp	r4, r3
 800e45c:	da09      	bge.n	800e472 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 800e45e:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 800e462:	429c      	cmp	r4, r3
 800e464:	bf38      	it	cc
 800e466:	3108      	addcc	r1, #8
 800e468:	f104 0401 	add.w	r4, r4, #1
 800e46c:	bf38      	it	cc
 800e46e:	6101      	strcc	r1, [r0, #16]
 800e470:	6084      	str	r4, [r0, #8]
 800e472:	6903      	ldr	r3, [r0, #16]
 800e474:	f8a3 a000 	strh.w	sl, [r3]
 800e478:	805a      	strh	r2, [r3, #2]
 800e47a:	809e      	strh	r6, [r3, #4]
 800e47c:	80de      	strh	r6, [r3, #6]
 800e47e:	9b06      	ldr	r3, [sp, #24]
 800e480:	4293      	cmp	r3, r2
 800e482:	464f      	mov	r7, r9
 800e484:	d19c      	bne.n	800e3c0 <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 800e486:	9b01      	ldr	r3, [sp, #4]
 800e488:	6907      	ldr	r7, [r0, #16]
 800e48a:	f1c3 0620 	rsb	r6, r3, #32
 800e48e:	9b05      	ldr	r3, [sp, #20]
 800e490:	ea4f 1e63 	mov.w	lr, r3, asr #5
 800e494:	9b04      	ldr	r3, [sp, #16]
 800e496:	429e      	cmp	r6, r3
 800e498:	f040 81cc 	bne.w	800e834 <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 800e49c:	f9b7 3000 	ldrsh.w	r3, [r7]
 800e4a0:	459e      	cmp	lr, r3
 800e4a2:	d104      	bne.n	800e4ae <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 800e4a4:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800e4a8:	429a      	cmp	r2, r3
 800e4aa:	f43f ae36 	beq.w	800e11a <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800e4ae:	88f9      	ldrh	r1, [r7, #6]
 800e4b0:	88bb      	ldrh	r3, [r7, #4]
 800e4b2:	430b      	orrs	r3, r1
 800e4b4:	d010      	beq.n	800e4d8 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 800e4b6:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800e4ba:	2b00      	cmp	r3, #0
 800e4bc:	db0c      	blt.n	800e4d8 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 800e4be:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 800e4c0:	428b      	cmp	r3, r1
 800e4c2:	da09      	bge.n	800e4d8 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 800e4c4:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 800e4c8:	428b      	cmp	r3, r1
 800e4ca:	bf38      	it	cc
 800e4cc:	3708      	addcc	r7, #8
 800e4ce:	f103 0301 	add.w	r3, r3, #1
 800e4d2:	bf38      	it	cc
 800e4d4:	6107      	strcc	r7, [r0, #16]
 800e4d6:	6083      	str	r3, [r0, #8]
 800e4d8:	6903      	ldr	r3, [r0, #16]
 800e4da:	f8a3 e000 	strh.w	lr, [r3]
 800e4de:	e5ff      	b.n	800e0e0 <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 800e4e0:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 800e4e2:	9c03      	ldr	r4, [sp, #12]
 800e4e4:	42a2      	cmp	r2, r4
 800e4e6:	f6ff ae18 	blt.w	800e11a <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800e4ea:	9c06      	ldr	r4, [sp, #24]
 800e4ec:	42a2      	cmp	r2, r4
 800e4ee:	bfb8      	it	lt
 800e4f0:	3201      	addlt	r2, #1
 800e4f2:	9c08      	ldr	r4, [sp, #32]
 800e4f4:	bfb8      	it	lt
 800e4f6:	9206      	strlt	r2, [sp, #24]
 800e4f8:	f1c3 0220 	rsb	r2, r3, #32
 800e4fc:	4362      	muls	r2, r4
 800e4fe:	2401      	movs	r4, #1
 800e500:	940b      	str	r4, [sp, #44]	; 0x2c
 800e502:	2420      	movs	r4, #32
 800e504:	e6d5      	b.n	800e2b2 <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 800e506:	f009 021f 	and.w	r2, r9, #31
 800e50a:	ea4f 1861 	mov.w	r8, r1, asr #5
 800e50e:	920c      	str	r2, [sp, #48]	; 0x30
 800e510:	9a01      	ldr	r2, [sp, #4]
 800e512:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 800e516:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 800e51a:	45b0      	cmp	r8, r6
 800e51c:	f001 011f 	and.w	r1, r1, #31
 800e520:	eba2 0203 	sub.w	r2, r2, r3
 800e524:	d108      	bne.n	800e538 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 800e526:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800e528:	4419      	add	r1, r3
 800e52a:	4496      	add	lr, r2
 800e52c:	fb02 a101 	mla	r1, r2, r1, sl
 800e530:	f8a5 e004 	strh.w	lr, [r5, #4]
 800e534:	80e9      	strh	r1, [r5, #6]
 800e536:	e6f9      	b.n	800e32c <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 800e538:	2c00      	cmp	r4, #0
 800e53a:	f2c0 80a9 	blt.w	800e690 <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 800e53e:	2701      	movs	r7, #1
 800e540:	f1c1 0c20 	rsb	ip, r1, #32
 800e544:	970a      	str	r7, [sp, #40]	; 0x28
 800e546:	fb02 f20c 	mul.w	r2, r2, ip
 800e54a:	2720      	movs	r7, #32
 800e54c:	9709      	str	r7, [sp, #36]	; 0x24
 800e54e:	fb92 fcf4 	sdiv	ip, r2, r4
 800e552:	9f09      	ldr	r7, [sp, #36]	; 0x24
 800e554:	fb04 221c 	mls	r2, r4, ip, r2
 800e558:	2a00      	cmp	r2, #0
 800e55a:	bfb8      	it	lt
 800e55c:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 800e560:	4439      	add	r1, r7
 800e562:	fb0c a101 	mla	r1, ip, r1, sl
 800e566:	80e9      	strh	r1, [r5, #6]
 800e568:	44e6      	add	lr, ip
 800e56a:	990a      	ldr	r1, [sp, #40]	; 0x28
 800e56c:	f8a5 e004 	strh.w	lr, [r5, #4]
 800e570:	eb08 0501 	add.w	r5, r8, r1
 800e574:	6901      	ldr	r1, [r0, #16]
 800e576:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 800e57a:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 800e57e:	bfb8      	it	lt
 800e580:	1912      	addlt	r2, r2, r4
 800e582:	ea58 070e 	orrs.w	r7, r8, lr
 800e586:	d010      	beq.n	800e5aa <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 800e588:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 800e58c:	f1be 0f00 	cmp.w	lr, #0
 800e590:	db0b      	blt.n	800e5aa <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 800e592:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800e594:	45be      	cmp	lr, r7
 800e596:	da08      	bge.n	800e5aa <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 800e598:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 800e59c:	45be      	cmp	lr, r7
 800e59e:	bf3c      	itt	cc
 800e5a0:	3108      	addcc	r1, #8
 800e5a2:	6101      	strcc	r1, [r0, #16]
 800e5a4:	f10e 0101 	add.w	r1, lr, #1
 800e5a8:	6081      	str	r1, [r0, #8]
 800e5aa:	6901      	ldr	r1, [r0, #16]
 800e5ac:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 800e5b0:	800d      	strh	r5, [r1, #0]
 800e5b2:	f04f 0e00 	mov.w	lr, #0
 800e5b6:	42ae      	cmp	r6, r5
 800e5b8:	f8a1 8002 	strh.w	r8, [r1, #2]
 800e5bc:	f8a1 e004 	strh.w	lr, [r1, #4]
 800e5c0:	f8a1 e006 	strh.w	lr, [r1, #6]
 800e5c4:	4463      	add	r3, ip
 800e5c6:	d054      	beq.n	800e672 <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 800e5c8:	9901      	ldr	r1, [sp, #4]
 800e5ca:	1ac9      	subs	r1, r1, r3
 800e5cc:	4461      	add	r1, ip
 800e5ce:	0149      	lsls	r1, r1, #5
 800e5d0:	fb91 fef4 	sdiv	lr, r1, r4
 800e5d4:	fb04 111e 	mls	r1, r4, lr, r1
 800e5d8:	2900      	cmp	r1, #0
 800e5da:	bfb8      	it	lt
 800e5dc:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 800e5e0:	f10e 0701 	add.w	r7, lr, #1
 800e5e4:	bfb8      	it	lt
 800e5e6:	1909      	addlt	r1, r1, r4
 800e5e8:	1b12      	subs	r2, r2, r4
 800e5ea:	970d      	str	r7, [sp, #52]	; 0x34
 800e5ec:	f8d0 a010 	ldr.w	sl, [r0, #16]
 800e5f0:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 800e5f2:	f8ba b004 	ldrh.w	fp, [sl, #4]
 800e5f6:	1852      	adds	r2, r2, r1
 800e5f8:	bf54      	ite	pl
 800e5fa:	f8dd c034 	ldrpl.w	ip, [sp, #52]	; 0x34
 800e5fe:	46f4      	movmi	ip, lr
 800e600:	44e3      	add	fp, ip
 800e602:	f8aa b004 	strh.w	fp, [sl, #4]
 800e606:	f8ba b006 	ldrh.w	fp, [sl, #6]
 800e60a:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 800e60e:	f8aa b006 	strh.w	fp, [sl, #6]
 800e612:	4463      	add	r3, ip
 800e614:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800e618:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800e61c:	f8bc a004 	ldrh.w	sl, [ip, #4]
 800e620:	bf58      	it	pl
 800e622:	1b12      	subpl	r2, r2, r4
 800e624:	443d      	add	r5, r7
 800e626:	ea5b 070a 	orrs.w	r7, fp, sl
 800e62a:	d014      	beq.n	800e656 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 800e62c:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 800e630:	f1ba 0f00 	cmp.w	sl, #0
 800e634:	db0f      	blt.n	800e656 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 800e636:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800e638:	45ba      	cmp	sl, r7
 800e63a:	da0c      	bge.n	800e656 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 800e63c:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 800e640:	45ba      	cmp	sl, r7
 800e642:	bf38      	it	cc
 800e644:	f10c 0c08 	addcc.w	ip, ip, #8
 800e648:	f10a 0a01 	add.w	sl, sl, #1
 800e64c:	bf38      	it	cc
 800e64e:	f8c0 c010 	strcc.w	ip, [r0, #16]
 800e652:	f8c0 a008 	str.w	sl, [r0, #8]
 800e656:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800e65a:	f04f 0700 	mov.w	r7, #0
 800e65e:	42ae      	cmp	r6, r5
 800e660:	f8ac 5000 	strh.w	r5, [ip]
 800e664:	f8ac 8002 	strh.w	r8, [ip, #2]
 800e668:	f8ac 7004 	strh.w	r7, [ip, #4]
 800e66c:	f8ac 7006 	strh.w	r7, [ip, #6]
 800e670:	d1bc      	bne.n	800e5ec <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 800e672:	6904      	ldr	r4, [r0, #16]
 800e674:	9a01      	ldr	r2, [sp, #4]
 800e676:	990c      	ldr	r1, [sp, #48]	; 0x30
 800e678:	1ad3      	subs	r3, r2, r3
 800e67a:	88a2      	ldrh	r2, [r4, #4]
 800e67c:	441a      	add	r2, r3
 800e67e:	80a2      	strh	r2, [r4, #4]
 800e680:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800e682:	3120      	adds	r1, #32
 800e684:	1a89      	subs	r1, r1, r2
 800e686:	88e2      	ldrh	r2, [r4, #6]
 800e688:	fb03 2301 	mla	r3, r3, r1, r2
 800e68c:	80e3      	strh	r3, [r4, #6]
 800e68e:	e64d      	b.n	800e32c <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 800e690:	f04f 37ff 	mov.w	r7, #4294967295
 800e694:	970a      	str	r7, [sp, #40]	; 0x28
 800e696:	434a      	muls	r2, r1
 800e698:	4264      	negs	r4, r4
 800e69a:	2700      	movs	r7, #0
 800e69c:	e756      	b.n	800e54c <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 800e69e:	ea4f 1867 	mov.w	r8, r7, asr #5
 800e6a2:	f009 031f 	and.w	r3, r9, #31
 800e6a6:	45d0      	cmp	r8, sl
 800e6a8:	f007 071f 	and.w	r7, r7, #31
 800e6ac:	930f      	str	r3, [sp, #60]	; 0x3c
 800e6ae:	fa1f fc8c 	uxth.w	ip, ip
 800e6b2:	fa1f fe8e 	uxth.w	lr, lr
 800e6b6:	d10a      	bne.n	800e6ce <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 800e6b8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800e6ba:	449c      	add	ip, r3
 800e6bc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800e6be:	f8a5 c004 	strh.w	ip, [r5, #4]
 800e6c2:	441f      	add	r7, r3
 800e6c4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800e6c6:	fb03 e707 	mla	r7, r3, r7, lr
 800e6ca:	80ef      	strh	r7, [r5, #6]
 800e6cc:	e6b9      	b.n	800e442 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800e6ce:	2900      	cmp	r1, #0
 800e6d0:	f2c0 80a8 	blt.w	800e824 <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 800e6d4:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800e6d6:	f1c7 0320 	rsb	r3, r7, #32
 800e6da:	4363      	muls	r3, r4
 800e6dc:	2401      	movs	r4, #1
 800e6de:	940d      	str	r4, [sp, #52]	; 0x34
 800e6e0:	2420      	movs	r4, #32
 800e6e2:	940c      	str	r4, [sp, #48]	; 0x30
 800e6e4:	fb93 f4f1 	sdiv	r4, r3, r1
 800e6e8:	fb01 3b14 	mls	fp, r1, r4, r3
 800e6ec:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800e6ee:	f1bb 0f00 	cmp.w	fp, #0
 800e6f2:	bfb8      	it	lt
 800e6f4:	f104 34ff 	addlt.w	r4, r4, #4294967295
 800e6f8:	441f      	add	r7, r3
 800e6fa:	fb04 e707 	mla	r7, r4, r7, lr
 800e6fe:	44a4      	add	ip, r4
 800e700:	f8a5 c004 	strh.w	ip, [r5, #4]
 800e704:	80ef      	strh	r7, [r5, #6]
 800e706:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800e70a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800e70c:	f8bc e006 	ldrh.w	lr, [ip, #6]
 800e710:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800e714:	bfb8      	it	lt
 800e716:	448b      	addlt	fp, r1
 800e718:	eb08 0503 	add.w	r5, r8, r3
 800e71c:	ea5e 0307 	orrs.w	r3, lr, r7
 800e720:	d011      	beq.n	800e746 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 800e722:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 800e726:	f1be 0f00 	cmp.w	lr, #0
 800e72a:	db0c      	blt.n	800e746 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 800e72c:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800e72e:	45be      	cmp	lr, r7
 800e730:	da09      	bge.n	800e746 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 800e732:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 800e736:	45be      	cmp	lr, r7
 800e738:	bf3c      	itt	cc
 800e73a:	f10c 0708 	addcc.w	r7, ip, #8
 800e73e:	6107      	strcc	r7, [r0, #16]
 800e740:	f10e 0701 	add.w	r7, lr, #1
 800e744:	6087      	str	r7, [r0, #8]
 800e746:	6907      	ldr	r7, [r0, #16]
 800e748:	b213      	sxth	r3, r2
 800e74a:	9310      	str	r3, [sp, #64]	; 0x40
 800e74c:	807b      	strh	r3, [r7, #2]
 800e74e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800e750:	803d      	strh	r5, [r7, #0]
 800e752:	4555      	cmp	r5, sl
 800e754:	80be      	strh	r6, [r7, #4]
 800e756:	80fe      	strh	r6, [r7, #6]
 800e758:	eb04 0c03 	add.w	ip, r4, r3
 800e75c:	d051      	beq.n	800e802 <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 800e75e:	9b01      	ldr	r3, [sp, #4]
 800e760:	eba3 070c 	sub.w	r7, r3, ip
 800e764:	443c      	add	r4, r7
 800e766:	0164      	lsls	r4, r4, #5
 800e768:	fb94 f8f1 	sdiv	r8, r4, r1
 800e76c:	fb01 4418 	mls	r4, r1, r8, r4
 800e770:	2c00      	cmp	r4, #0
 800e772:	bfb8      	it	lt
 800e774:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800e778:	ebab 0301 	sub.w	r3, fp, r1
 800e77c:	f108 0701 	add.w	r7, r8, #1
 800e780:	bfb8      	it	lt
 800e782:	1864      	addlt	r4, r4, r1
 800e784:	9309      	str	r3, [sp, #36]	; 0x24
 800e786:	9711      	str	r7, [sp, #68]	; 0x44
 800e788:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800e78a:	f8d0 e010 	ldr.w	lr, [r0, #16]
 800e78e:	191b      	adds	r3, r3, r4
 800e790:	bf58      	it	pl
 800e792:	9f11      	ldrpl	r7, [sp, #68]	; 0x44
 800e794:	f8be b004 	ldrh.w	fp, [lr, #4]
 800e798:	9309      	str	r3, [sp, #36]	; 0x24
 800e79a:	bf48      	it	mi
 800e79c:	4647      	movmi	r7, r8
 800e79e:	44bb      	add	fp, r7
 800e7a0:	f8ae b004 	strh.w	fp, [lr, #4]
 800e7a4:	f8be b006 	ldrh.w	fp, [lr, #6]
 800e7a8:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800e7ac:	f8ae b006 	strh.w	fp, [lr, #6]
 800e7b0:	f8d0 e010 	ldr.w	lr, [r0, #16]
 800e7b4:	44bc      	add	ip, r7
 800e7b6:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 800e7b8:	f8be b006 	ldrh.w	fp, [lr, #6]
 800e7bc:	443d      	add	r5, r7
 800e7be:	f8be 7004 	ldrh.w	r7, [lr, #4]
 800e7c2:	bf5c      	itt	pl
 800e7c4:	1a5b      	subpl	r3, r3, r1
 800e7c6:	9309      	strpl	r3, [sp, #36]	; 0x24
 800e7c8:	ea5b 0307 	orrs.w	r3, fp, r7
 800e7cc:	d011      	beq.n	800e7f2 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 800e7ce:	f9be b002 	ldrsh.w	fp, [lr, #2]
 800e7d2:	f1bb 0f00 	cmp.w	fp, #0
 800e7d6:	db0c      	blt.n	800e7f2 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 800e7d8:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800e7da:	45bb      	cmp	fp, r7
 800e7dc:	da09      	bge.n	800e7f2 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 800e7de:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800e7e2:	45bb      	cmp	fp, r7
 800e7e4:	bf3c      	itt	cc
 800e7e6:	f10e 0708 	addcc.w	r7, lr, #8
 800e7ea:	6107      	strcc	r7, [r0, #16]
 800e7ec:	f10b 0701 	add.w	r7, fp, #1
 800e7f0:	6087      	str	r7, [r0, #8]
 800e7f2:	6907      	ldr	r7, [r0, #16]
 800e7f4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800e7f6:	803d      	strh	r5, [r7, #0]
 800e7f8:	4555      	cmp	r5, sl
 800e7fa:	807b      	strh	r3, [r7, #2]
 800e7fc:	80be      	strh	r6, [r7, #4]
 800e7fe:	80fe      	strh	r6, [r7, #6]
 800e800:	d1c2      	bne.n	800e788 <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 800e802:	9b01      	ldr	r3, [sp, #4]
 800e804:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 800e806:	eba3 0c0c 	sub.w	ip, r3, ip
 800e80a:	6903      	ldr	r3, [r0, #16]
 800e80c:	8899      	ldrh	r1, [r3, #4]
 800e80e:	4461      	add	r1, ip
 800e810:	8099      	strh	r1, [r3, #4]
 800e812:	990c      	ldr	r1, [sp, #48]	; 0x30
 800e814:	3720      	adds	r7, #32
 800e816:	1a7f      	subs	r7, r7, r1
 800e818:	88d9      	ldrh	r1, [r3, #6]
 800e81a:	fb0c 1c07 	mla	ip, ip, r7, r1
 800e81e:	f8a3 c006 	strh.w	ip, [r3, #6]
 800e822:	e60e      	b.n	800e442 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800e824:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800e826:	f04f 34ff 	mov.w	r4, #4294967295
 800e82a:	940d      	str	r4, [sp, #52]	; 0x34
 800e82c:	437b      	muls	r3, r7
 800e82e:	4249      	negs	r1, r1
 800e830:	2400      	movs	r4, #0
 800e832:	e756      	b.n	800e6e2 <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 800e834:	9905      	ldr	r1, [sp, #20]
 800e836:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 800e83a:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 800e83e:	f001 011f 	and.w	r1, r1, #31
 800e842:	ea4f 1b69 	mov.w	fp, r9, asr #5
 800e846:	9102      	str	r1, [sp, #8]
 800e848:	9904      	ldr	r1, [sp, #16]
 800e84a:	45f3      	cmp	fp, lr
 800e84c:	f009 0c1f 	and.w	ip, r9, #31
 800e850:	eba1 0406 	sub.w	r4, r1, r6
 800e854:	d108      	bne.n	800e868 <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 800e856:	9b02      	ldr	r3, [sp, #8]
 800e858:	449c      	add	ip, r3
 800e85a:	44a0      	add	r8, r4
 800e85c:	fb04 a40c 	mla	r4, r4, ip, sl
 800e860:	f8a7 8004 	strh.w	r8, [r7, #4]
 800e864:	80fc      	strh	r4, [r7, #6]
 800e866:	e458      	b.n	800e11a <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800e868:	9905      	ldr	r1, [sp, #20]
 800e86a:	ebb1 0109 	subs.w	r1, r1, r9
 800e86e:	bf5b      	ittet	pl
 800e870:	f1cc 0520 	rsbpl	r5, ip, #32
 800e874:	436c      	mulpl	r4, r5
 800e876:	2500      	movmi	r5, #0
 800e878:	2520      	movpl	r5, #32
 800e87a:	bf44      	itt	mi
 800e87c:	fb04 f40c 	mulmi.w	r4, r4, ip
 800e880:	4249      	negmi	r1, r1
 800e882:	9501      	str	r5, [sp, #4]
 800e884:	9b01      	ldr	r3, [sp, #4]
 800e886:	fb94 f5f1 	sdiv	r5, r4, r1
 800e88a:	fb01 4415 	mls	r4, r1, r5, r4
 800e88e:	bf54      	ite	pl
 800e890:	f04f 0901 	movpl.w	r9, #1
 800e894:	f04f 39ff 	movmi.w	r9, #4294967295
 800e898:	2c00      	cmp	r4, #0
 800e89a:	bfb8      	it	lt
 800e89c:	f105 35ff 	addlt.w	r5, r5, #4294967295
 800e8a0:	449c      	add	ip, r3
 800e8a2:	44a8      	add	r8, r5
 800e8a4:	fb05 ac0c 	mla	ip, r5, ip, sl
 800e8a8:	f8a7 8004 	strh.w	r8, [r7, #4]
 800e8ac:	f8a7 c006 	strh.w	ip, [r7, #6]
 800e8b0:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800e8b4:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 800e8b8:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800e8bc:	bfb8      	it	lt
 800e8be:	1864      	addlt	r4, r4, r1
 800e8c0:	ea58 0707 	orrs.w	r7, r8, r7
 800e8c4:	eb0b 0309 	add.w	r3, fp, r9
 800e8c8:	d011      	beq.n	800e8ee <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 800e8ca:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 800e8ce:	f1b8 0f00 	cmp.w	r8, #0
 800e8d2:	db0c      	blt.n	800e8ee <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 800e8d4:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800e8d6:	45b8      	cmp	r8, r7
 800e8d8:	da09      	bge.n	800e8ee <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 800e8da:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 800e8de:	45b8      	cmp	r8, r7
 800e8e0:	bf3c      	itt	cc
 800e8e2:	f10c 0708 	addcc.w	r7, ip, #8
 800e8e6:	6107      	strcc	r7, [r0, #16]
 800e8e8:	f108 0701 	add.w	r7, r8, #1
 800e8ec:	6087      	str	r7, [r0, #8]
 800e8ee:	6907      	ldr	r7, [r0, #16]
 800e8f0:	f04f 0c00 	mov.w	ip, #0
 800e8f4:	b212      	sxth	r2, r2
 800e8f6:	459e      	cmp	lr, r3
 800e8f8:	803b      	strh	r3, [r7, #0]
 800e8fa:	807a      	strh	r2, [r7, #2]
 800e8fc:	f8a7 c004 	strh.w	ip, [r7, #4]
 800e900:	f8a7 c006 	strh.w	ip, [r7, #6]
 800e904:	442e      	add	r6, r5
 800e906:	d04d      	beq.n	800e9a4 <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 800e908:	9f04      	ldr	r7, [sp, #16]
 800e90a:	1bbf      	subs	r7, r7, r6
 800e90c:	443d      	add	r5, r7
 800e90e:	016d      	lsls	r5, r5, #5
 800e910:	fb95 f8f1 	sdiv	r8, r5, r1
 800e914:	fb01 5518 	mls	r5, r1, r8, r5
 800e918:	4565      	cmp	r5, ip
 800e91a:	bfb8      	it	lt
 800e91c:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800e920:	f108 0701 	add.w	r7, r8, #1
 800e924:	bfb8      	it	lt
 800e926:	186d      	addlt	r5, r5, r1
 800e928:	1a64      	subs	r4, r4, r1
 800e92a:	9703      	str	r7, [sp, #12]
 800e92c:	f04f 0a00 	mov.w	sl, #0
 800e930:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800e934:	1964      	adds	r4, r4, r5
 800e936:	bf58      	it	pl
 800e938:	9f03      	ldrpl	r7, [sp, #12]
 800e93a:	f8bc b004 	ldrh.w	fp, [ip, #4]
 800e93e:	bf48      	it	mi
 800e940:	4647      	movmi	r7, r8
 800e942:	44bb      	add	fp, r7
 800e944:	f8ac b004 	strh.w	fp, [ip, #4]
 800e948:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800e94c:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800e950:	f8ac b006 	strh.w	fp, [ip, #6]
 800e954:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800e958:	443e      	add	r6, r7
 800e95a:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800e95e:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800e962:	bf58      	it	pl
 800e964:	1a64      	subpl	r4, r4, r1
 800e966:	ea5b 0707 	orrs.w	r7, fp, r7
 800e96a:	444b      	add	r3, r9
 800e96c:	d011      	beq.n	800e992 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 800e96e:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 800e972:	f1bb 0f00 	cmp.w	fp, #0
 800e976:	db0c      	blt.n	800e992 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 800e978:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800e97a:	45bb      	cmp	fp, r7
 800e97c:	da09      	bge.n	800e992 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 800e97e:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800e982:	45bb      	cmp	fp, r7
 800e984:	bf3c      	itt	cc
 800e986:	f10c 0708 	addcc.w	r7, ip, #8
 800e98a:	6107      	strcc	r7, [r0, #16]
 800e98c:	f10b 0701 	add.w	r7, fp, #1
 800e990:	6087      	str	r7, [r0, #8]
 800e992:	6907      	ldr	r7, [r0, #16]
 800e994:	459e      	cmp	lr, r3
 800e996:	803b      	strh	r3, [r7, #0]
 800e998:	807a      	strh	r2, [r7, #2]
 800e99a:	f8a7 a004 	strh.w	sl, [r7, #4]
 800e99e:	f8a7 a006 	strh.w	sl, [r7, #6]
 800e9a2:	d1c5      	bne.n	800e930 <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 800e9a4:	9b04      	ldr	r3, [sp, #16]
 800e9a6:	1b9e      	subs	r6, r3, r6
 800e9a8:	6903      	ldr	r3, [r0, #16]
 800e9aa:	889a      	ldrh	r2, [r3, #4]
 800e9ac:	4432      	add	r2, r6
 800e9ae:	809a      	strh	r2, [r3, #4]
 800e9b0:	9a02      	ldr	r2, [sp, #8]
 800e9b2:	f102 0c20 	add.w	ip, r2, #32
 800e9b6:	9a01      	ldr	r2, [sp, #4]
 800e9b8:	ebac 0c02 	sub.w	ip, ip, r2
 800e9bc:	88da      	ldrh	r2, [r3, #6]
 800e9be:	fb06 260c 	mla	r6, r6, ip, r2
 800e9c2:	80de      	strh	r6, [r3, #6]
 800e9c4:	f7ff bba9 	b.w	800e11a <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

0800e9c8 <_ZN8touchgfx7Outline6lineToEii>:
 800e9c8:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800e9ca:	079b      	lsls	r3, r3, #30
 800e9cc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800e9ce:	460e      	mov	r6, r1
 800e9d0:	4615      	mov	r5, r2
 800e9d2:	d511      	bpl.n	800e9f8 <_ZN8touchgfx7Outline6lineToEii+0x30>
 800e9d4:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 800e9d8:	ea86 0701 	eor.w	r7, r6, r1
 800e9dc:	ea85 0302 	eor.w	r3, r5, r2
 800e9e0:	433b      	orrs	r3, r7
 800e9e2:	d009      	beq.n	800e9f8 <_ZN8touchgfx7Outline6lineToEii+0x30>
 800e9e4:	4633      	mov	r3, r6
 800e9e6:	9500      	str	r5, [sp, #0]
 800e9e8:	f7ff fb3e 	bl	800e068 <_ZN8touchgfx7Outline10renderLineEiiii>
 800e9ec:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800e9ee:	e9c0 6505 	strd	r6, r5, [r0, #20]
 800e9f2:	f043 0301 	orr.w	r3, r3, #1
 800e9f6:	6243      	str	r3, [r0, #36]	; 0x24
 800e9f8:	b003      	add	sp, #12
 800e9fa:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800e9fc <_ZN8touchgfx7Outline6moveToEii>:
 800e9fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e9fe:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800ea00:	4615      	mov	r5, r2
 800ea02:	079a      	lsls	r2, r3, #30
 800ea04:	4604      	mov	r4, r0
 800ea06:	460e      	mov	r6, r1
 800ea08:	d401      	bmi.n	800ea0e <_ZN8touchgfx7Outline6moveToEii+0x12>
 800ea0a:	f7ff faf9 	bl	800e000 <_ZN8touchgfx7Outline5resetEv>
 800ea0e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800ea10:	07db      	lsls	r3, r3, #31
 800ea12:	d504      	bpl.n	800ea1e <_ZN8touchgfx7Outline6moveToEii+0x22>
 800ea14:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 800ea18:	4620      	mov	r0, r4
 800ea1a:	f7ff ffd5 	bl	800e9c8 <_ZN8touchgfx7Outline6lineToEii>
 800ea1e:	6923      	ldr	r3, [r4, #16]
 800ea20:	f9b3 2000 	ldrsh.w	r2, [r3]
 800ea24:	1170      	asrs	r0, r6, #5
 800ea26:	4290      	cmp	r0, r2
 800ea28:	ea4f 1165 	mov.w	r1, r5, asr #5
 800ea2c:	d103      	bne.n	800ea36 <_ZN8touchgfx7Outline6moveToEii+0x3a>
 800ea2e:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800ea32:	4291      	cmp	r1, r2
 800ea34:	d01a      	beq.n	800ea6c <_ZN8touchgfx7Outline6moveToEii+0x70>
 800ea36:	88df      	ldrh	r7, [r3, #6]
 800ea38:	889a      	ldrh	r2, [r3, #4]
 800ea3a:	433a      	orrs	r2, r7
 800ea3c:	d010      	beq.n	800ea60 <_ZN8touchgfx7Outline6moveToEii+0x64>
 800ea3e:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800ea42:	2a00      	cmp	r2, #0
 800ea44:	db0c      	blt.n	800ea60 <_ZN8touchgfx7Outline6moveToEii+0x64>
 800ea46:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 800ea48:	42ba      	cmp	r2, r7
 800ea4a:	da09      	bge.n	800ea60 <_ZN8touchgfx7Outline6moveToEii+0x64>
 800ea4c:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 800ea50:	42ba      	cmp	r2, r7
 800ea52:	bf38      	it	cc
 800ea54:	3308      	addcc	r3, #8
 800ea56:	f102 0201 	add.w	r2, r2, #1
 800ea5a:	bf38      	it	cc
 800ea5c:	6123      	strcc	r3, [r4, #16]
 800ea5e:	60a2      	str	r2, [r4, #8]
 800ea60:	6923      	ldr	r3, [r4, #16]
 800ea62:	2200      	movs	r2, #0
 800ea64:	8018      	strh	r0, [r3, #0]
 800ea66:	8059      	strh	r1, [r3, #2]
 800ea68:	809a      	strh	r2, [r3, #4]
 800ea6a:	80da      	strh	r2, [r3, #6]
 800ea6c:	6166      	str	r6, [r4, #20]
 800ea6e:	e9c4 5606 	strd	r5, r6, [r4, #24]
 800ea72:	6225      	str	r5, [r4, #32]
 800ea74:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800ea76 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 800ea76:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ea7a:	b0d0      	sub	sp, #320	; 0x140
 800ea7c:	466c      	mov	r4, sp
 800ea7e:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 800ea82:	4627      	mov	r7, r4
 800ea84:	1a0d      	subs	r5, r1, r0
 800ea86:	2d48      	cmp	r5, #72	; 0x48
 800ea88:	f100 0308 	add.w	r3, r0, #8
 800ea8c:	f340 80d5 	ble.w	800ec3a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 800ea90:	112d      	asrs	r5, r5, #4
 800ea92:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 800ea96:	f9b0 9000 	ldrsh.w	r9, [r0]
 800ea9a:	6816      	ldr	r6, [r2, #0]
 800ea9c:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 800eaa0:	6006      	str	r6, [r0, #0]
 800eaa2:	6856      	ldr	r6, [r2, #4]
 800eaa4:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 800eaa8:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 800eaac:	6046      	str	r6, [r0, #4]
 800eaae:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 800eab2:	f8a2 8002 	strh.w	r8, [r2, #2]
 800eab6:	f8a2 e004 	strh.w	lr, [r2, #4]
 800eaba:	f8a2 c006 	strh.w	ip, [r2, #6]
 800eabe:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 800eac2:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 800eac6:	4565      	cmp	r5, ip
 800eac8:	f1a1 0208 	sub.w	r2, r1, #8
 800eacc:	db06      	blt.n	800eadc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 800eace:	d119      	bne.n	800eb04 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 800ead0:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 800ead4:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 800ead8:	42ae      	cmp	r6, r5
 800eada:	dd13      	ble.n	800eb04 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 800eadc:	460e      	mov	r6, r1
 800eade:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 800eae2:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 800eae6:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 800eaea:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 800eaee:	601d      	str	r5, [r3, #0]
 800eaf0:	6875      	ldr	r5, [r6, #4]
 800eaf2:	605d      	str	r5, [r3, #4]
 800eaf4:	f821 9c08 	strh.w	r9, [r1, #-8]
 800eaf8:	f821 cc06 	strh.w	ip, [r1, #-6]
 800eafc:	f821 8c04 	strh.w	r8, [r1, #-4]
 800eb00:	f821 ec02 	strh.w	lr, [r1, #-2]
 800eb04:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800eb08:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 800eb0c:	42ae      	cmp	r6, r5
 800eb0e:	db06      	blt.n	800eb1e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 800eb10:	d116      	bne.n	800eb40 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 800eb12:	f9b0 c000 	ldrsh.w	ip, [r0]
 800eb16:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 800eb1a:	45ac      	cmp	ip, r5
 800eb1c:	da10      	bge.n	800eb40 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 800eb1e:	681d      	ldr	r5, [r3, #0]
 800eb20:	f9b0 8000 	ldrsh.w	r8, [r0]
 800eb24:	6005      	str	r5, [r0, #0]
 800eb26:	685d      	ldr	r5, [r3, #4]
 800eb28:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 800eb2c:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 800eb30:	f8a0 8008 	strh.w	r8, [r0, #8]
 800eb34:	6045      	str	r5, [r0, #4]
 800eb36:	8146      	strh	r6, [r0, #10]
 800eb38:	f8a0 e00c 	strh.w	lr, [r0, #12]
 800eb3c:	f8a0 c00e 	strh.w	ip, [r0, #14]
 800eb40:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 800eb44:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 800eb48:	4565      	cmp	r5, ip
 800eb4a:	db06      	blt.n	800eb5a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 800eb4c:	d119      	bne.n	800eb82 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800eb4e:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 800eb52:	f9b0 5000 	ldrsh.w	r5, [r0]
 800eb56:	42ae      	cmp	r6, r5
 800eb58:	da13      	bge.n	800eb82 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800eb5a:	460e      	mov	r6, r1
 800eb5c:	f9b0 9000 	ldrsh.w	r9, [r0]
 800eb60:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 800eb64:	6005      	str	r5, [r0, #0]
 800eb66:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 800eb6a:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 800eb6e:	6875      	ldr	r5, [r6, #4]
 800eb70:	6045      	str	r5, [r0, #4]
 800eb72:	f821 9c08 	strh.w	r9, [r1, #-8]
 800eb76:	f821 cc06 	strh.w	ip, [r1, #-6]
 800eb7a:	f821 8c04 	strh.w	r8, [r1, #-4]
 800eb7e:	f821 ec02 	strh.w	lr, [r1, #-2]
 800eb82:	3308      	adds	r3, #8
 800eb84:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 800eb88:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 800eb8c:	45e6      	cmp	lr, ip
 800eb8e:	dbf8      	blt.n	800eb82 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800eb90:	d105      	bne.n	800eb9e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800eb92:	f9b3 6000 	ldrsh.w	r6, [r3]
 800eb96:	f9b0 5000 	ldrsh.w	r5, [r0]
 800eb9a:	42ae      	cmp	r6, r5
 800eb9c:	dbf1      	blt.n	800eb82 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800eb9e:	4615      	mov	r5, r2
 800eba0:	3a08      	subs	r2, #8
 800eba2:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 800eba6:	45b4      	cmp	ip, r6
 800eba8:	dbf9      	blt.n	800eb9e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800ebaa:	d105      	bne.n	800ebb8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 800ebac:	f9b0 8000 	ldrsh.w	r8, [r0]
 800ebb0:	f9b2 6000 	ldrsh.w	r6, [r2]
 800ebb4:	45b0      	cmp	r8, r6
 800ebb6:	dbf2      	blt.n	800eb9e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800ebb8:	4293      	cmp	r3, r2
 800ebba:	f1a5 0608 	sub.w	r6, r5, #8
 800ebbe:	d816      	bhi.n	800ebee <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 800ebc0:	f8d6 c000 	ldr.w	ip, [r6]
 800ebc4:	f9b3 a000 	ldrsh.w	sl, [r3]
 800ebc8:	f8c3 c000 	str.w	ip, [r3]
 800ebcc:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 800ebd0:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 800ebd4:	f8d6 c004 	ldr.w	ip, [r6, #4]
 800ebd8:	f8c3 c004 	str.w	ip, [r3, #4]
 800ebdc:	f825 ac08 	strh.w	sl, [r5, #-8]
 800ebe0:	f825 ec06 	strh.w	lr, [r5, #-6]
 800ebe4:	f825 9c04 	strh.w	r9, [r5, #-4]
 800ebe8:	f825 8c02 	strh.w	r8, [r5, #-2]
 800ebec:	e7c9      	b.n	800eb82 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800ebee:	f8d6 e000 	ldr.w	lr, [r6]
 800ebf2:	f9b0 a000 	ldrsh.w	sl, [r0]
 800ebf6:	f8c0 e000 	str.w	lr, [r0]
 800ebfa:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 800ebfe:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 800ec02:	f8d6 e004 	ldr.w	lr, [r6, #4]
 800ec06:	f8c0 e004 	str.w	lr, [r0, #4]
 800ec0a:	f825 ac08 	strh.w	sl, [r5, #-8]
 800ec0e:	f825 cc06 	strh.w	ip, [r5, #-6]
 800ec12:	f825 9c04 	strh.w	r9, [r5, #-4]
 800ec16:	f825 8c02 	strh.w	r8, [r5, #-2]
 800ec1a:	1acd      	subs	r5, r1, r3
 800ec1c:	1a16      	subs	r6, r2, r0
 800ec1e:	10ed      	asrs	r5, r5, #3
 800ec20:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 800ec24:	bfb5      	itete	lt
 800ec26:	e9c4 0200 	strdlt	r0, r2, [r4]
 800ec2a:	e9c4 3100 	strdge	r3, r1, [r4]
 800ec2e:	460a      	movlt	r2, r1
 800ec30:	4603      	movge	r3, r0
 800ec32:	3408      	adds	r4, #8
 800ec34:	4618      	mov	r0, r3
 800ec36:	4611      	mov	r1, r2
 800ec38:	e724      	b.n	800ea84 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 800ec3a:	4299      	cmp	r1, r3
 800ec3c:	d928      	bls.n	800ec90 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 800ec3e:	f1a3 0210 	sub.w	r2, r3, #16
 800ec42:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 800ec46:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 800ec4a:	45ac      	cmp	ip, r5
 800ec4c:	db06      	blt.n	800ec5c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 800ec4e:	d11d      	bne.n	800ec8c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 800ec50:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 800ec54:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 800ec58:	42ae      	cmp	r6, r5
 800ec5a:	da17      	bge.n	800ec8c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 800ec5c:	4615      	mov	r5, r2
 800ec5e:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 800ec62:	f855 6f08 	ldr.w	r6, [r5, #8]!
 800ec66:	6116      	str	r6, [r2, #16]
 800ec68:	686e      	ldr	r6, [r5, #4]
 800ec6a:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 800ec6e:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 800ec72:	f8a2 9008 	strh.w	r9, [r2, #8]
 800ec76:	42a8      	cmp	r0, r5
 800ec78:	6156      	str	r6, [r2, #20]
 800ec7a:	f8a2 c00a 	strh.w	ip, [r2, #10]
 800ec7e:	f8a2 800c 	strh.w	r8, [r2, #12]
 800ec82:	f8a2 e00e 	strh.w	lr, [r2, #14]
 800ec86:	f1a2 0208 	sub.w	r2, r2, #8
 800ec8a:	d1da      	bne.n	800ec42 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 800ec8c:	3308      	adds	r3, #8
 800ec8e:	e7d4      	b.n	800ec3a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 800ec90:	42bc      	cmp	r4, r7
 800ec92:	d903      	bls.n	800ec9c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 800ec94:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 800ec98:	3c08      	subs	r4, #8
 800ec9a:	e6f3      	b.n	800ea84 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 800ec9c:	b050      	add	sp, #320	; 0x140
 800ec9e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0800eca2 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 800eca2:	b510      	push	{r4, lr}
 800eca4:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800eca6:	07da      	lsls	r2, r3, #31
 800eca8:	4604      	mov	r4, r0
 800ecaa:	d507      	bpl.n	800ecbc <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 800ecac:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 800ecb0:	f7ff fe8a 	bl	800e9c8 <_ZN8touchgfx7Outline6lineToEii>
 800ecb4:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800ecb6:	f023 0301 	bic.w	r3, r3, #1
 800ecba:	6243      	str	r3, [r0, #36]	; 0x24
 800ecbc:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800ecbe:	079b      	lsls	r3, r3, #30
 800ecc0:	d521      	bpl.n	800ed06 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 800ecc2:	6923      	ldr	r3, [r4, #16]
 800ecc4:	88d9      	ldrh	r1, [r3, #6]
 800ecc6:	889a      	ldrh	r2, [r3, #4]
 800ecc8:	430a      	orrs	r2, r1
 800ecca:	d010      	beq.n	800ecee <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800eccc:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800ecd0:	2a00      	cmp	r2, #0
 800ecd2:	db0c      	blt.n	800ecee <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800ecd4:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800ecd6:	428a      	cmp	r2, r1
 800ecd8:	da09      	bge.n	800ecee <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800ecda:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 800ecde:	4291      	cmp	r1, r2
 800ece0:	bf88      	it	hi
 800ece2:	3308      	addhi	r3, #8
 800ece4:	f102 0201 	add.w	r2, r2, #1
 800ece8:	bf88      	it	hi
 800ecea:	6123      	strhi	r3, [r4, #16]
 800ecec:	60a2      	str	r2, [r4, #8]
 800ecee:	68a1      	ldr	r1, [r4, #8]
 800ecf0:	b129      	cbz	r1, 800ecfe <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 800ecf2:	6863      	ldr	r3, [r4, #4]
 800ecf4:	4299      	cmp	r1, r3
 800ecf6:	d802      	bhi.n	800ecfe <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 800ecf8:	68e0      	ldr	r0, [r4, #12]
 800ecfa:	f7ff febc 	bl	800ea76 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 800ecfe:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800ed00:	f023 0302 	bic.w	r3, r3, #2
 800ed04:	6263      	str	r3, [r4, #36]	; 0x24
 800ed06:	68e0      	ldr	r0, [r4, #12]
 800ed08:	bd10      	pop	{r4, pc}
	...

0800ed0c <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 800ed0c:	4b02      	ldr	r3, [pc, #8]	; (800ed18 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 800ed0e:	6018      	str	r0, [r3, #0]
 800ed10:	4b02      	ldr	r3, [pc, #8]	; (800ed1c <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 800ed12:	6019      	str	r1, [r3, #0]
 800ed14:	4770      	bx	lr
 800ed16:	bf00      	nop
 800ed18:	20015364 	.word	0x20015364
 800ed1c:	20015368 	.word	0x20015368

0800ed20 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 800ed20:	4b01      	ldr	r3, [pc, #4]	; (800ed28 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 800ed22:	6818      	ldr	r0, [r3, #0]
 800ed24:	4770      	bx	lr
 800ed26:	bf00      	nop
 800ed28:	20015364 	.word	0x20015364

0800ed2c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 800ed2c:	4b01      	ldr	r3, [pc, #4]	; (800ed34 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 800ed2e:	6818      	ldr	r0, [r3, #0]
 800ed30:	4770      	bx	lr
 800ed32:	bf00      	nop
 800ed34:	20015368 	.word	0x20015368

0800ed38 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 800ed38:	b510      	push	{r4, lr}
 800ed3a:	6803      	ldr	r3, [r0, #0]
 800ed3c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ed3e:	460c      	mov	r4, r1
 800ed40:	4798      	blx	r3
 800ed42:	1b03      	subs	r3, r0, r4
 800ed44:	4258      	negs	r0, r3
 800ed46:	4158      	adcs	r0, r3
 800ed48:	bd10      	pop	{r4, pc}
	...

0800ed4c <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 800ed4c:	4b01      	ldr	r3, [pc, #4]	; (800ed54 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 800ed4e:	6019      	str	r1, [r3, #0]
 800ed50:	4770      	bx	lr
 800ed52:	bf00      	nop
 800ed54:	2001536c 	.word	0x2001536c

0800ed58 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800ed58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ed5c:	4696      	mov	lr, r2
 800ed5e:	4605      	mov	r5, r0
 800ed60:	4614      	mov	r4, r2
 800ed62:	460e      	mov	r6, r1
 800ed64:	461f      	mov	r7, r3
 800ed66:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800ed6a:	b097      	sub	sp, #92	; 0x5c
 800ed6c:	f10d 0c1c 	add.w	ip, sp, #28
 800ed70:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800ed74:	f8de 3000 	ldr.w	r3, [lr]
 800ed78:	f8cc 3000 	str.w	r3, [ip]
 800ed7c:	f104 0e14 	add.w	lr, r4, #20
 800ed80:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800ed84:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800ed88:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800ed8c:	f8de 3000 	ldr.w	r3, [lr]
 800ed90:	f8cc 3000 	str.w	r3, [ip]
 800ed94:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800ed98:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800ed9c:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800eda0:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800eda4:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 800eda8:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 800edac:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 800edb0:	f8de 3000 	ldr.w	r3, [lr]
 800edb4:	f8cc 3000 	str.w	r3, [ip]
 800edb8:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800edba:	682b      	ldr	r3, [r5, #0]
 800edbc:	9201      	str	r2, [sp, #4]
 800edbe:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800edc2:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800edc4:	9200      	str	r2, [sp, #0]
 800edc6:	f8cd 8008 	str.w	r8, [sp, #8]
 800edca:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 800edce:	aa07      	add	r2, sp, #28
 800edd0:	463b      	mov	r3, r7
 800edd2:	4631      	mov	r1, r6
 800edd4:	4628      	mov	r0, r5
 800edd6:	47d8      	blx	fp
 800edd8:	46a6      	mov	lr, r4
 800edda:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800edde:	f10d 0c1c 	add.w	ip, sp, #28
 800ede2:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800ede6:	f8de 3000 	ldr.w	r3, [lr]
 800edea:	f8cc 3000 	str.w	r3, [ip]
 800edee:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800edf2:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800edf6:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800edfa:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800edfe:	343c      	adds	r4, #60	; 0x3c
 800ee00:	f8de 3000 	ldr.w	r3, [lr]
 800ee04:	f8cc 3000 	str.w	r3, [ip]
 800ee08:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800ee0a:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800ee0e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800ee12:	6823      	ldr	r3, [r4, #0]
 800ee14:	f8cc 3000 	str.w	r3, [ip]
 800ee18:	682b      	ldr	r3, [r5, #0]
 800ee1a:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800ee1e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800ee20:	9201      	str	r2, [sp, #4]
 800ee22:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800ee24:	9200      	str	r2, [sp, #0]
 800ee26:	f8cd 8008 	str.w	r8, [sp, #8]
 800ee2a:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 800ee2c:	aa07      	add	r2, sp, #28
 800ee2e:	463b      	mov	r3, r7
 800ee30:	4631      	mov	r1, r6
 800ee32:	4628      	mov	r0, r5
 800ee34:	47a0      	blx	r4
 800ee36:	b017      	add	sp, #92	; 0x5c
 800ee38:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800ee3c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800ee3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ee40:	b08d      	sub	sp, #52	; 0x34
 800ee42:	4688      	mov	r8, r1
 800ee44:	9916      	ldr	r1, [sp, #88]	; 0x58
 800ee46:	f8d3 c000 	ldr.w	ip, [r3]
 800ee4a:	680f      	ldr	r7, [r1, #0]
 800ee4c:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 800ee50:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 800ee54:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 800ee58:	edd3 6a07 	vldr	s13, [r3, #28]
 800ee5c:	9918      	ldr	r1, [sp, #96]	; 0x60
 800ee5e:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 800ee62:	f9b1 9000 	ldrsh.w	r9, [r1]
 800ee66:	f9ba 1000 	ldrsh.w	r1, [sl]
 800ee6a:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 800ee6e:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 800ee72:	eba7 070c 	sub.w	r7, r7, ip
 800ee76:	42bc      	cmp	r4, r7
 800ee78:	bfa8      	it	ge
 800ee7a:	463c      	movge	r4, r7
 800ee7c:	ee07 4a90 	vmov	s15, r4
 800ee80:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800ee84:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 800ee88:	ee25 4a04 	vmul.f32	s8, s10, s8
 800ee8c:	ee65 4a24 	vmul.f32	s9, s10, s9
 800ee90:	ee25 5a27 	vmul.f32	s10, s10, s15
 800ee94:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 800ee98:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800ee9c:	eb09 0e0c 	add.w	lr, r9, ip
 800eea0:	4571      	cmp	r1, lr
 800eea2:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800eea6:	ee32 1a05 	vadd.f32	s2, s4, s10
 800eeaa:	ee36 0a84 	vadd.f32	s0, s13, s8
 800eeae:	ee61 1a87 	vmul.f32	s3, s3, s14
 800eeb2:	ee22 2a07 	vmul.f32	s4, s4, s14
 800eeb6:	f340 808d 	ble.w	800efd4 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 800eeba:	eba1 060e 	sub.w	r6, r1, lr
 800eebe:	fb96 f5f4 	sdiv	r5, r6, r4
 800eec2:	ee07 5a10 	vmov	s14, r5
 800eec6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800eeca:	2d00      	cmp	r5, #0
 800eecc:	fb04 6615 	mls	r6, r4, r5, r6
 800eed0:	eea7 0a04 	vfma.f32	s0, s14, s8
 800eed4:	eee7 0a24 	vfma.f32	s1, s14, s9
 800eed8:	eea7 1a05 	vfma.f32	s2, s14, s10
 800eedc:	dd13      	ble.n	800ef06 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 800eede:	ee70 6a44 	vsub.f32	s13, s0, s8
 800eee2:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800eee6:	eef5 6a40 	vcmp.f32	s13, #0.0
 800eeea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800eeee:	bf18      	it	ne
 800eef0:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800eef4:	ee31 2a45 	vsub.f32	s4, s2, s10
 800eef8:	bf08      	it	eq
 800eefa:	eeb0 7a67 	vmoveq.f32	s14, s15
 800eefe:	ee61 1a87 	vmul.f32	s3, s3, s14
 800ef02:	ee22 2a07 	vmul.f32	s4, s4, s14
 800ef06:	fb05 f204 	mul.w	r2, r5, r4
 800ef0a:	1abf      	subs	r7, r7, r2
 800ef0c:	4494      	add	ip, r2
 800ef0e:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 800ef12:	4411      	add	r1, r2
 800ef14:	eb09 020c 	add.w	r2, r9, ip
 800ef18:	443a      	add	r2, r7
 800ef1a:	b209      	sxth	r1, r1
 800ef1c:	428a      	cmp	r2, r1
 800ef1e:	bfc4      	itt	gt
 800ef20:	eba1 0209 	subgt.w	r2, r1, r9
 800ef24:	eba2 070c 	subgt.w	r7, r2, ip
 800ef28:	2f00      	cmp	r7, #0
 800ef2a:	dd50      	ble.n	800efce <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 800ef2c:	fb97 f1f4 	sdiv	r1, r7, r4
 800ef30:	fb04 7211 	mls	r2, r4, r1, r7
 800ef34:	b90a      	cbnz	r2, 800ef3a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 800ef36:	3901      	subs	r1, #1
 800ef38:	4622      	mov	r2, r4
 800ef3a:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800ef3e:	6840      	ldr	r0, [r0, #4]
 800ef40:	900b      	str	r0, [sp, #44]	; 0x2c
 800ef42:	f8d0 a000 	ldr.w	sl, [r0]
 800ef46:	9817      	ldr	r0, [sp, #92]	; 0x5c
 800ef48:	9008      	str	r0, [sp, #32]
 800ef4a:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 800ef4e:	9818      	ldr	r0, [sp, #96]	; 0x60
 800ef50:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 800ef54:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 800ef58:	695b      	ldr	r3, [r3, #20]
 800ef5a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800ef5c:	445b      	add	r3, fp
 800ef5e:	eef0 6a42 	vmov.f32	s13, s4
 800ef62:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800ef66:	ee21 3a23 	vmul.f32	s6, s2, s7
 800ef6a:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800ef6e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800ef72:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800ef76:	9307      	str	r3, [sp, #28]
 800ef78:	ee17 7a90 	vmov	r7, s15
 800ef7c:	ee73 7a42 	vsub.f32	s15, s6, s4
 800ef80:	eeb0 7a61 	vmov.f32	s14, s3
 800ef84:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800ef88:	ee16 3a90 	vmov	r3, s13
 800ef8c:	fb97 f7f4 	sdiv	r7, r7, r4
 800ef90:	ee17 ca90 	vmov	ip, s15
 800ef94:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800ef98:	fb9c fcf4 	sdiv	ip, ip, r4
 800ef9c:	fb0c 3306 	mla	r3, ip, r6, r3
 800efa0:	9302      	str	r3, [sp, #8]
 800efa2:	ee17 3a10 	vmov	r3, s14
 800efa6:	44b6      	add	lr, r6
 800efa8:	fb04 e505 	mla	r5, r4, r5, lr
 800efac:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 800efb0:	fb07 3706 	mla	r7, r7, r6, r3
 800efb4:	e9cd 8505 	strd	r8, r5, [sp, #20]
 800efb8:	e9cd 4700 	strd	r4, r7, [sp]
 800efbc:	2900      	cmp	r1, #0
 800efbe:	bfcc      	ite	gt
 800efc0:	46a1      	movgt	r9, r4
 800efc2:	4691      	movle	r9, r2
 800efc4:	eba9 0306 	sub.w	r3, r9, r6
 800efc8:	f8da 4008 	ldr.w	r4, [sl, #8]
 800efcc:	47a0      	blx	r4
 800efce:	b00d      	add	sp, #52	; 0x34
 800efd0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800efd4:	2500      	movs	r5, #0
 800efd6:	462e      	mov	r6, r5
 800efd8:	e799      	b.n	800ef0e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

0800efdc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800efdc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800efe0:	b0db      	sub	sp, #364	; 0x16c
 800efe2:	461d      	mov	r5, r3
 800efe4:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 800efe8:	930a      	str	r3, [sp, #40]	; 0x28
 800efea:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 800efee:	930b      	str	r3, [sp, #44]	; 0x2c
 800eff0:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 800eff4:	9310      	str	r3, [sp, #64]	; 0x40
 800eff6:	6803      	ldr	r3, [r0, #0]
 800eff8:	910f      	str	r1, [sp, #60]	; 0x3c
 800effa:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 800effc:	9009      	str	r0, [sp, #36]	; 0x24
 800effe:	4614      	mov	r4, r2
 800f000:	4629      	mov	r1, r5
 800f002:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 800f006:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 800f00a:	47b8      	blx	r7
 800f00c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f00e:	6058      	str	r0, [r3, #4]
 800f010:	2800      	cmp	r0, #0
 800f012:	f000 83a1 	beq.w	800f758 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f016:	682b      	ldr	r3, [r5, #0]
 800f018:	9314      	str	r3, [sp, #80]	; 0x50
 800f01a:	686b      	ldr	r3, [r5, #4]
 800f01c:	9315      	str	r3, [sp, #84]	; 0x54
 800f01e:	4bc4      	ldr	r3, [pc, #784]	; (800f330 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 800f020:	ed94 7a02 	vldr	s14, [r4, #8]
 800f024:	7819      	ldrb	r1, [r3, #0]
 800f026:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 800f02a:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 800f02e:	2900      	cmp	r1, #0
 800f030:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800f034:	bf16      	itet	ne
 800f036:	4619      	movne	r1, r3
 800f038:	4611      	moveq	r1, r2
 800f03a:	4613      	movne	r3, r2
 800f03c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f040:	9116      	str	r1, [sp, #88]	; 0x58
 800f042:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 800f046:	f240 8387 	bls.w	800f758 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f04a:	ed94 7a07 	vldr	s14, [r4, #28]
 800f04e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800f052:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f056:	f240 837f 	bls.w	800f758 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f05a:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 800f05e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800f062:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f066:	f240 8377 	bls.w	800f758 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f06a:	6822      	ldr	r2, [r4, #0]
 800f06c:	4bb1      	ldr	r3, [pc, #708]	; (800f334 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 800f06e:	429a      	cmp	r2, r3
 800f070:	f2c0 8372 	blt.w	800f758 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f074:	49b0      	ldr	r1, [pc, #704]	; (800f338 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 800f076:	6963      	ldr	r3, [r4, #20]
 800f078:	428a      	cmp	r2, r1
 800f07a:	f300 836d 	bgt.w	800f758 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f07e:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800f082:	48ae      	ldr	r0, [pc, #696]	; (800f33c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 800f084:	33ff      	adds	r3, #255	; 0xff
 800f086:	4283      	cmp	r3, r0
 800f088:	f200 8366 	bhi.w	800f758 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f08c:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800f08e:	4dac      	ldr	r5, [pc, #688]	; (800f340 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 800f090:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800f094:	33ff      	adds	r3, #255	; 0xff
 800f096:	42ab      	cmp	r3, r5
 800f098:	f200 835e 	bhi.w	800f758 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f09c:	6862      	ldr	r2, [r4, #4]
 800f09e:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 800f0a2:	33ff      	adds	r3, #255	; 0xff
 800f0a4:	4283      	cmp	r3, r0
 800f0a6:	f200 8357 	bhi.w	800f758 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f0aa:	69a1      	ldr	r1, [r4, #24]
 800f0ac:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 800f0b0:	33ff      	adds	r3, #255	; 0xff
 800f0b2:	4283      	cmp	r3, r0
 800f0b4:	f200 8350 	bhi.w	800f758 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f0b8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800f0ba:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 800f0be:	30ff      	adds	r0, #255	; 0xff
 800f0c0:	42a8      	cmp	r0, r5
 800f0c2:	f200 8349 	bhi.w	800f758 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f0c6:	428a      	cmp	r2, r1
 800f0c8:	f280 8110 	bge.w	800f2ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 800f0cc:	429a      	cmp	r2, r3
 800f0ce:	f300 8119 	bgt.w	800f304 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 800f0d2:	4299      	cmp	r1, r3
 800f0d4:	f280 811d 	bge.w	800f312 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 800f0d8:	2502      	movs	r5, #2
 800f0da:	2701      	movs	r7, #1
 800f0dc:	46a9      	mov	r9, r5
 800f0de:	46b8      	mov	r8, r7
 800f0e0:	f04f 0a00 	mov.w	sl, #0
 800f0e4:	4621      	mov	r1, r4
 800f0e6:	a849      	add	r0, sp, #292	; 0x124
 800f0e8:	f003 fcfe 	bl	8012ae8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 800f0ec:	4622      	mov	r2, r4
 800f0ee:	4653      	mov	r3, sl
 800f0f0:	a949      	add	r1, sp, #292	; 0x124
 800f0f2:	f8cd 9000 	str.w	r9, [sp]
 800f0f6:	a819      	add	r0, sp, #100	; 0x64
 800f0f8:	f003 fe26 	bl	8012d48 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800f0fc:	4622      	mov	r2, r4
 800f0fe:	4653      	mov	r3, sl
 800f100:	a949      	add	r1, sp, #292	; 0x124
 800f102:	f8cd 8000 	str.w	r8, [sp]
 800f106:	a829      	add	r0, sp, #164	; 0xa4
 800f108:	f003 fe1e 	bl	8012d48 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800f10c:	4643      	mov	r3, r8
 800f10e:	4622      	mov	r2, r4
 800f110:	a949      	add	r1, sp, #292	; 0x124
 800f112:	f8cd 9000 	str.w	r9, [sp]
 800f116:	a839      	add	r0, sp, #228	; 0xe4
 800f118:	f003 fe16 	bl	8012d48 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800f11c:	42af      	cmp	r7, r5
 800f11e:	bfb5      	itete	lt
 800f120:	2300      	movlt	r3, #0
 800f122:	2301      	movge	r3, #1
 800f124:	930e      	strlt	r3, [sp, #56]	; 0x38
 800f126:	930e      	strge	r3, [sp, #56]	; 0x38
 800f128:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800f12a:	e893 0003 	ldmia.w	r3, {r0, r1}
 800f12e:	af12      	add	r7, sp, #72	; 0x48
 800f130:	bfb9      	ittee	lt
 800f132:	ad29      	addlt	r5, sp, #164	; 0xa4
 800f134:	ac19      	addlt	r4, sp, #100	; 0x64
 800f136:	ad19      	addge	r5, sp, #100	; 0x64
 800f138:	ac29      	addge	r4, sp, #164	; 0xa4
 800f13a:	e887 0003 	stmia.w	r7, {r0, r1}
 800f13e:	b928      	cbnz	r0, 800f14c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 800f140:	4b80      	ldr	r3, [pc, #512]	; (800f344 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 800f142:	6818      	ldr	r0, [r3, #0]
 800f144:	6803      	ldr	r3, [r0, #0]
 800f146:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800f148:	4798      	blx	r3
 800f14a:	6038      	str	r0, [r7, #0]
 800f14c:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800f14e:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800f152:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800f156:	930c      	str	r3, [sp, #48]	; 0x30
 800f158:	990c      	ldr	r1, [sp, #48]	; 0x30
 800f15a:	6963      	ldr	r3, [r4, #20]
 800f15c:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 800f15e:	440b      	add	r3, r1
 800f160:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800f164:	4408      	add	r0, r1
 800f166:	b200      	sxth	r0, r0
 800f168:	4283      	cmp	r3, r0
 800f16a:	900d      	str	r0, [sp, #52]	; 0x34
 800f16c:	f280 80dd 	bge.w	800f32a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 800f170:	428b      	cmp	r3, r1
 800f172:	da08      	bge.n	800f186 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800f174:	2a00      	cmp	r2, #0
 800f176:	dd06      	ble.n	800f186 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800f178:	1acb      	subs	r3, r1, r3
 800f17a:	429a      	cmp	r2, r3
 800f17c:	f2c0 80e4 	blt.w	800f348 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 800f180:	2b00      	cmp	r3, #0
 800f182:	f300 80e2 	bgt.w	800f34a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 800f186:	6967      	ldr	r7, [r4, #20]
 800f188:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800f18a:	443b      	add	r3, r7
 800f18c:	461f      	mov	r7, r3
 800f18e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f190:	1bdf      	subs	r7, r3, r7
 800f192:	4297      	cmp	r7, r2
 800f194:	bfa8      	it	ge
 800f196:	4617      	movge	r7, r2
 800f198:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800f19c:	2f00      	cmp	r7, #0
 800f19e:	f340 8166 	ble.w	800f46e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 800f1a2:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800f1a4:	6829      	ldr	r1, [r5, #0]
 800f1a6:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f1aa:	f9bb 3000 	ldrsh.w	r3, [fp]
 800f1ae:	6820      	ldr	r0, [r4, #0]
 800f1b0:	4411      	add	r1, r2
 800f1b2:	4299      	cmp	r1, r3
 800f1b4:	dd1a      	ble.n	800f1ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800f1b6:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800f1ba:	440b      	add	r3, r1
 800f1bc:	4402      	add	r2, r0
 800f1be:	b21b      	sxth	r3, r3
 800f1c0:	429a      	cmp	r2, r3
 800f1c2:	dc13      	bgt.n	800f1ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800f1c4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f1c6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800f1c8:	681b      	ldr	r3, [r3, #0]
 800f1ca:	9206      	str	r2, [sp, #24]
 800f1cc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800f1ce:	9205      	str	r2, [sp, #20]
 800f1d0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800f1d2:	9500      	str	r5, [sp, #0]
 800f1d4:	e9cd b203 	strd	fp, r2, [sp, #12]
 800f1d8:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800f1da:	9809      	ldr	r0, [sp, #36]	; 0x24
 800f1dc:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800f1e0:	a912      	add	r1, sp, #72	; 0x48
 800f1e2:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 800f1e6:	aa49      	add	r2, sp, #292	; 0x124
 800f1e8:	4623      	mov	r3, r4
 800f1ea:	47c8      	blx	r9
 800f1ec:	e9d4 2300 	ldrd	r2, r3, [r4]
 800f1f0:	441a      	add	r2, r3
 800f1f2:	6963      	ldr	r3, [r4, #20]
 800f1f4:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800f1f8:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800f1fc:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800f200:	68a1      	ldr	r1, [r4, #8]
 800f202:	ed94 6a08 	vldr	s12, [r4, #32]
 800f206:	6022      	str	r2, [r4, #0]
 800f208:	3301      	adds	r3, #1
 800f20a:	6163      	str	r3, [r4, #20]
 800f20c:	69a3      	ldr	r3, [r4, #24]
 800f20e:	ee37 7a27 	vadd.f32	s14, s14, s15
 800f212:	3b01      	subs	r3, #1
 800f214:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800f218:	61a3      	str	r3, [r4, #24]
 800f21a:	6923      	ldr	r3, [r4, #16]
 800f21c:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800f220:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f224:	edd4 6a07 	vldr	s13, [r4, #28]
 800f228:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800f22c:	440b      	add	r3, r1
 800f22e:	68e1      	ldr	r1, [r4, #12]
 800f230:	6123      	str	r3, [r4, #16]
 800f232:	ee76 6a86 	vadd.f32	s13, s13, s12
 800f236:	428b      	cmp	r3, r1
 800f238:	edc4 6a07 	vstr	s13, [r4, #28]
 800f23c:	db15      	blt.n	800f26a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 800f23e:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800f242:	ee76 6a26 	vadd.f32	s13, s12, s13
 800f246:	3201      	adds	r2, #1
 800f248:	edc4 6a07 	vstr	s13, [r4, #28]
 800f24c:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800f250:	6022      	str	r2, [r4, #0]
 800f252:	ee36 7a87 	vadd.f32	s14, s13, s14
 800f256:	1a5b      	subs	r3, r3, r1
 800f258:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800f25c:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800f260:	6123      	str	r3, [r4, #16]
 800f262:	ee77 7a27 	vadd.f32	s15, s14, s15
 800f266:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800f26a:	e9d5 2300 	ldrd	r2, r3, [r5]
 800f26e:	441a      	add	r2, r3
 800f270:	696b      	ldr	r3, [r5, #20]
 800f272:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800f276:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800f27a:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800f27e:	68a9      	ldr	r1, [r5, #8]
 800f280:	ed95 6a08 	vldr	s12, [r5, #32]
 800f284:	602a      	str	r2, [r5, #0]
 800f286:	3301      	adds	r3, #1
 800f288:	616b      	str	r3, [r5, #20]
 800f28a:	69ab      	ldr	r3, [r5, #24]
 800f28c:	ee37 7a27 	vadd.f32	s14, s14, s15
 800f290:	3b01      	subs	r3, #1
 800f292:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800f296:	61ab      	str	r3, [r5, #24]
 800f298:	692b      	ldr	r3, [r5, #16]
 800f29a:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800f29e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f2a2:	edd5 6a07 	vldr	s13, [r5, #28]
 800f2a6:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800f2aa:	440b      	add	r3, r1
 800f2ac:	68e9      	ldr	r1, [r5, #12]
 800f2ae:	612b      	str	r3, [r5, #16]
 800f2b0:	ee76 6a86 	vadd.f32	s13, s13, s12
 800f2b4:	428b      	cmp	r3, r1
 800f2b6:	edc5 6a07 	vstr	s13, [r5, #28]
 800f2ba:	db15      	blt.n	800f2e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 800f2bc:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800f2c0:	ee76 6a26 	vadd.f32	s13, s12, s13
 800f2c4:	3201      	adds	r2, #1
 800f2c6:	edc5 6a07 	vstr	s13, [r5, #28]
 800f2ca:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800f2ce:	602a      	str	r2, [r5, #0]
 800f2d0:	ee36 7a87 	vadd.f32	s14, s13, s14
 800f2d4:	1a5b      	subs	r3, r3, r1
 800f2d6:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800f2da:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800f2de:	612b      	str	r3, [r5, #16]
 800f2e0:	ee77 7a27 	vadd.f32	s15, s14, s15
 800f2e4:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800f2e8:	3f01      	subs	r7, #1
 800f2ea:	e757      	b.n	800f19c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 800f2ec:	4299      	cmp	r1, r3
 800f2ee:	dc13      	bgt.n	800f318 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 800f2f0:	429a      	cmp	r2, r3
 800f2f2:	da14      	bge.n	800f31e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 800f2f4:	2502      	movs	r5, #2
 800f2f6:	2703      	movs	r7, #3
 800f2f8:	46a9      	mov	r9, r5
 800f2fa:	f04f 0800 	mov.w	r8, #0
 800f2fe:	f04f 0a01 	mov.w	sl, #1
 800f302:	e6ef      	b.n	800f0e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800f304:	2501      	movs	r5, #1
 800f306:	2700      	movs	r7, #0
 800f308:	46a9      	mov	r9, r5
 800f30a:	46b8      	mov	r8, r7
 800f30c:	f04f 0a02 	mov.w	sl, #2
 800f310:	e6e8      	b.n	800f0e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800f312:	2501      	movs	r5, #1
 800f314:	2702      	movs	r7, #2
 800f316:	e6e1      	b.n	800f0dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 800f318:	2500      	movs	r5, #0
 800f31a:	2701      	movs	r7, #1
 800f31c:	e7f4      	b.n	800f308 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 800f31e:	2702      	movs	r7, #2
 800f320:	2503      	movs	r5, #3
 800f322:	f04f 0900 	mov.w	r9, #0
 800f326:	46b8      	mov	r8, r7
 800f328:	e7e9      	b.n	800f2fe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 800f32a:	4613      	mov	r3, r2
 800f32c:	e728      	b.n	800f180 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 800f32e:	bf00      	nop
 800f330:	20015354 	.word	0x20015354
 800f334:	fffd8f01 	.word	0xfffd8f01
 800f338:	00027100 	.word	0x00027100
 800f33c:	0004e1ff 	.word	0x0004e1ff
 800f340:	0004e1fe 	.word	0x0004e1fe
 800f344:	2001535c 	.word	0x2001535c
 800f348:	4613      	mov	r3, r2
 800f34a:	992b      	ldr	r1, [sp, #172]	; 0xac
 800f34c:	9111      	str	r1, [sp, #68]	; 0x44
 800f34e:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 800f352:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 800f356:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 800f358:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 800f35c:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 800f360:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 800f364:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 800f368:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 800f36c:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 800f370:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 800f374:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 800f378:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 800f37c:	469e      	mov	lr, r3
 800f37e:	469c      	mov	ip, r3
 800f380:	f04f 0900 	mov.w	r9, #0
 800f384:	f1bc 0f00 	cmp.w	ip, #0
 800f388:	d147      	bne.n	800f41a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 800f38a:	eb03 0c07 	add.w	ip, r3, r7
 800f38e:	1ad7      	subs	r7, r2, r3
 800f390:	f1b9 0f00 	cmp.w	r9, #0
 800f394:	d009      	beq.n	800f3aa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 800f396:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 800f39a:	9029      	str	r0, [sp, #164]	; 0xa4
 800f39c:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 800f3a0:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 800f3a4:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 800f3a8:	912d      	str	r1, [sp, #180]	; 0xb4
 800f3aa:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800f3ac:	9111      	str	r1, [sp, #68]	; 0x44
 800f3ae:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 800f3b2:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 800f3b6:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 800f3ba:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 800f3be:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 800f3c2:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 800f3c6:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 800f3ca:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 800f3ce:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 800f3d2:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 800f3d6:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 800f3da:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 800f3de:	f04f 0800 	mov.w	r8, #0
 800f3e2:	f1be 0f00 	cmp.w	lr, #0
 800f3e6:	d031      	beq.n	800f44c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 800f3e8:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800f3ea:	4431      	add	r1, r6
 800f3ec:	4549      	cmp	r1, r9
 800f3ee:	4450      	add	r0, sl
 800f3f0:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800f3f4:	ee37 7a04 	vadd.f32	s14, s14, s8
 800f3f8:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800f3fc:	db08      	blt.n	800f410 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 800f3fe:	ee77 7a85 	vadd.f32	s15, s15, s10
 800f402:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800f406:	ee37 7a06 	vadd.f32	s14, s14, s12
 800f40a:	3001      	adds	r0, #1
 800f40c:	eba1 0109 	sub.w	r1, r1, r9
 800f410:	f10e 3eff 	add.w	lr, lr, #4294967295
 800f414:	f04f 0801 	mov.w	r8, #1
 800f418:	e7e3      	b.n	800f3e2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 800f41a:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800f41c:	4431      	add	r1, r6
 800f41e:	4541      	cmp	r1, r8
 800f420:	4450      	add	r0, sl
 800f422:	ee37 7a24 	vadd.f32	s14, s14, s9
 800f426:	ee77 7a84 	vadd.f32	s15, s15, s8
 800f42a:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800f42e:	db08      	blt.n	800f442 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 800f430:	ee76 6a85 	vadd.f32	s13, s13, s10
 800f434:	ee37 7a25 	vadd.f32	s14, s14, s11
 800f438:	ee77 7a86 	vadd.f32	s15, s15, s12
 800f43c:	3001      	adds	r0, #1
 800f43e:	eba1 0108 	sub.w	r1, r1, r8
 800f442:	f10c 3cff 	add.w	ip, ip, #4294967295
 800f446:	f04f 0901 	mov.w	r9, #1
 800f44a:	e79b      	b.n	800f384 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 800f44c:	449c      	add	ip, r3
 800f44e:	1aff      	subs	r7, r7, r3
 800f450:	f1b8 0f00 	cmp.w	r8, #0
 800f454:	d009      	beq.n	800f46a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 800f456:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 800f45a:	9019      	str	r0, [sp, #100]	; 0x64
 800f45c:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 800f460:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 800f464:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 800f468:	911d      	str	r1, [sp, #116]	; 0x74
 800f46a:	1ad2      	subs	r2, r2, r3
 800f46c:	e68b      	b.n	800f186 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800f46e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f470:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 800f472:	2b00      	cmp	r3, #0
 800f474:	f000 80d1 	beq.w	800f61a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 800f478:	ad19      	add	r5, sp, #100	; 0x64
 800f47a:	ac39      	add	r4, sp, #228	; 0xe4
 800f47c:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800f47e:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800f482:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800f486:	930c      	str	r3, [sp, #48]	; 0x30
 800f488:	990c      	ldr	r1, [sp, #48]	; 0x30
 800f48a:	6963      	ldr	r3, [r4, #20]
 800f48c:	440b      	add	r3, r1
 800f48e:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800f492:	4408      	add	r0, r1
 800f494:	b200      	sxth	r0, r0
 800f496:	4283      	cmp	r3, r0
 800f498:	900d      	str	r0, [sp, #52]	; 0x34
 800f49a:	f280 80c1 	bge.w	800f620 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 800f49e:	428b      	cmp	r3, r1
 800f4a0:	da08      	bge.n	800f4b4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800f4a2:	2a00      	cmp	r2, #0
 800f4a4:	dd06      	ble.n	800f4b4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800f4a6:	1acb      	subs	r3, r1, r3
 800f4a8:	429a      	cmp	r2, r3
 800f4aa:	f2c0 80bb 	blt.w	800f624 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 800f4ae:	2b00      	cmp	r3, #0
 800f4b0:	f300 80b9 	bgt.w	800f626 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 800f4b4:	6967      	ldr	r7, [r4, #20]
 800f4b6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800f4b8:	443b      	add	r3, r7
 800f4ba:	461f      	mov	r7, r3
 800f4bc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f4be:	1bdf      	subs	r7, r3, r7
 800f4c0:	4297      	cmp	r7, r2
 800f4c2:	bfa8      	it	ge
 800f4c4:	4617      	movge	r7, r2
 800f4c6:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800f4ca:	2f00      	cmp	r7, #0
 800f4cc:	f340 813c 	ble.w	800f748 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 800f4d0:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800f4d2:	6829      	ldr	r1, [r5, #0]
 800f4d4:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f4d8:	f9bb 3000 	ldrsh.w	r3, [fp]
 800f4dc:	6820      	ldr	r0, [r4, #0]
 800f4de:	4411      	add	r1, r2
 800f4e0:	4299      	cmp	r1, r3
 800f4e2:	dd1a      	ble.n	800f51a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800f4e4:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800f4e8:	440b      	add	r3, r1
 800f4ea:	4402      	add	r2, r0
 800f4ec:	b21b      	sxth	r3, r3
 800f4ee:	429a      	cmp	r2, r3
 800f4f0:	dc13      	bgt.n	800f51a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800f4f2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f4f4:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800f4f6:	681b      	ldr	r3, [r3, #0]
 800f4f8:	9206      	str	r2, [sp, #24]
 800f4fa:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800f4fc:	9205      	str	r2, [sp, #20]
 800f4fe:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800f500:	9500      	str	r5, [sp, #0]
 800f502:	e9cd b203 	strd	fp, r2, [sp, #12]
 800f506:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800f508:	9809      	ldr	r0, [sp, #36]	; 0x24
 800f50a:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800f50e:	a912      	add	r1, sp, #72	; 0x48
 800f510:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 800f514:	aa49      	add	r2, sp, #292	; 0x124
 800f516:	4623      	mov	r3, r4
 800f518:	47c8      	blx	r9
 800f51a:	e9d4 2300 	ldrd	r2, r3, [r4]
 800f51e:	441a      	add	r2, r3
 800f520:	6963      	ldr	r3, [r4, #20]
 800f522:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800f526:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800f52a:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800f52e:	68a1      	ldr	r1, [r4, #8]
 800f530:	ed94 6a08 	vldr	s12, [r4, #32]
 800f534:	6022      	str	r2, [r4, #0]
 800f536:	3301      	adds	r3, #1
 800f538:	6163      	str	r3, [r4, #20]
 800f53a:	69a3      	ldr	r3, [r4, #24]
 800f53c:	ee37 7a27 	vadd.f32	s14, s14, s15
 800f540:	3b01      	subs	r3, #1
 800f542:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800f546:	61a3      	str	r3, [r4, #24]
 800f548:	6923      	ldr	r3, [r4, #16]
 800f54a:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800f54e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f552:	edd4 6a07 	vldr	s13, [r4, #28]
 800f556:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800f55a:	440b      	add	r3, r1
 800f55c:	68e1      	ldr	r1, [r4, #12]
 800f55e:	6123      	str	r3, [r4, #16]
 800f560:	ee76 6a86 	vadd.f32	s13, s13, s12
 800f564:	428b      	cmp	r3, r1
 800f566:	edc4 6a07 	vstr	s13, [r4, #28]
 800f56a:	db15      	blt.n	800f598 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 800f56c:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800f570:	ee76 6a26 	vadd.f32	s13, s12, s13
 800f574:	3201      	adds	r2, #1
 800f576:	edc4 6a07 	vstr	s13, [r4, #28]
 800f57a:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800f57e:	6022      	str	r2, [r4, #0]
 800f580:	ee36 7a87 	vadd.f32	s14, s13, s14
 800f584:	1a5b      	subs	r3, r3, r1
 800f586:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800f58a:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800f58e:	6123      	str	r3, [r4, #16]
 800f590:	ee77 7a27 	vadd.f32	s15, s14, s15
 800f594:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800f598:	e9d5 2300 	ldrd	r2, r3, [r5]
 800f59c:	441a      	add	r2, r3
 800f59e:	696b      	ldr	r3, [r5, #20]
 800f5a0:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800f5a4:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800f5a8:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800f5ac:	68a9      	ldr	r1, [r5, #8]
 800f5ae:	ed95 6a08 	vldr	s12, [r5, #32]
 800f5b2:	602a      	str	r2, [r5, #0]
 800f5b4:	3301      	adds	r3, #1
 800f5b6:	616b      	str	r3, [r5, #20]
 800f5b8:	69ab      	ldr	r3, [r5, #24]
 800f5ba:	ee37 7a27 	vadd.f32	s14, s14, s15
 800f5be:	3b01      	subs	r3, #1
 800f5c0:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800f5c4:	61ab      	str	r3, [r5, #24]
 800f5c6:	692b      	ldr	r3, [r5, #16]
 800f5c8:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800f5cc:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f5d0:	edd5 6a07 	vldr	s13, [r5, #28]
 800f5d4:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800f5d8:	440b      	add	r3, r1
 800f5da:	68e9      	ldr	r1, [r5, #12]
 800f5dc:	612b      	str	r3, [r5, #16]
 800f5de:	ee76 6a86 	vadd.f32	s13, s13, s12
 800f5e2:	428b      	cmp	r3, r1
 800f5e4:	edc5 6a07 	vstr	s13, [r5, #28]
 800f5e8:	db15      	blt.n	800f616 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 800f5ea:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800f5ee:	ee76 6a26 	vadd.f32	s13, s12, s13
 800f5f2:	3201      	adds	r2, #1
 800f5f4:	edc5 6a07 	vstr	s13, [r5, #28]
 800f5f8:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800f5fc:	602a      	str	r2, [r5, #0]
 800f5fe:	ee36 7a87 	vadd.f32	s14, s13, s14
 800f602:	1a5b      	subs	r3, r3, r1
 800f604:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800f608:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800f60c:	612b      	str	r3, [r5, #16]
 800f60e:	ee77 7a27 	vadd.f32	s15, s14, s15
 800f612:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800f616:	3f01      	subs	r7, #1
 800f618:	e757      	b.n	800f4ca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 800f61a:	ad39      	add	r5, sp, #228	; 0xe4
 800f61c:	ac19      	add	r4, sp, #100	; 0x64
 800f61e:	e72d      	b.n	800f47c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 800f620:	4613      	mov	r3, r2
 800f622:	e744      	b.n	800f4ae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 800f624:	4613      	mov	r3, r2
 800f626:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 800f62a:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 800f62c:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 800f630:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 800f634:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 800f638:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 800f63c:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 800f640:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 800f644:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 800f648:	993d      	ldr	r1, [sp, #244]	; 0xf4
 800f64a:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 800f64e:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 800f652:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 800f656:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 800f65a:	960e      	str	r6, [sp, #56]	; 0x38
 800f65c:	469e      	mov	lr, r3
 800f65e:	461f      	mov	r7, r3
 800f660:	f04f 0900 	mov.w	r9, #0
 800f664:	2f00      	cmp	r7, #0
 800f666:	d146      	bne.n	800f6f6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 800f668:	449c      	add	ip, r3
 800f66a:	1ad7      	subs	r7, r2, r3
 800f66c:	f1b9 0f00 	cmp.w	r9, #0
 800f670:	d009      	beq.n	800f686 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 800f672:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 800f676:	9039      	str	r0, [sp, #228]	; 0xe4
 800f678:	913d      	str	r1, [sp, #244]	; 0xf4
 800f67a:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 800f67e:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 800f682:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 800f686:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800f688:	910e      	str	r1, [sp, #56]	; 0x38
 800f68a:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 800f68e:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 800f692:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 800f696:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 800f69a:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 800f69e:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 800f6a2:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 800f6a6:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 800f6aa:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 800f6ae:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 800f6b2:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 800f6b6:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 800f6ba:	f04f 0800 	mov.w	r8, #0
 800f6be:	f1be 0f00 	cmp.w	lr, #0
 800f6c2:	d030      	beq.n	800f726 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 800f6c4:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800f6c6:	4431      	add	r1, r6
 800f6c8:	4549      	cmp	r1, r9
 800f6ca:	4450      	add	r0, sl
 800f6cc:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800f6d0:	ee37 7a04 	vadd.f32	s14, s14, s8
 800f6d4:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800f6d8:	db08      	blt.n	800f6ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 800f6da:	ee77 7a85 	vadd.f32	s15, s15, s10
 800f6de:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800f6e2:	ee37 7a06 	vadd.f32	s14, s14, s12
 800f6e6:	3001      	adds	r0, #1
 800f6e8:	eba1 0109 	sub.w	r1, r1, r9
 800f6ec:	f10e 3eff 	add.w	lr, lr, #4294967295
 800f6f0:	f04f 0801 	mov.w	r8, #1
 800f6f4:	e7e3      	b.n	800f6be <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 800f6f6:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800f6f8:	4431      	add	r1, r6
 800f6fa:	4541      	cmp	r1, r8
 800f6fc:	4450      	add	r0, sl
 800f6fe:	ee37 7a24 	vadd.f32	s14, s14, s9
 800f702:	ee77 7a84 	vadd.f32	s15, s15, s8
 800f706:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800f70a:	db08      	blt.n	800f71e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 800f70c:	ee76 6a85 	vadd.f32	s13, s13, s10
 800f710:	ee37 7a25 	vadd.f32	s14, s14, s11
 800f714:	ee77 7a86 	vadd.f32	s15, s15, s12
 800f718:	3001      	adds	r0, #1
 800f71a:	eba1 0108 	sub.w	r1, r1, r8
 800f71e:	3f01      	subs	r7, #1
 800f720:	f04f 0901 	mov.w	r9, #1
 800f724:	e79e      	b.n	800f664 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 800f726:	449c      	add	ip, r3
 800f728:	1aff      	subs	r7, r7, r3
 800f72a:	f1b8 0f00 	cmp.w	r8, #0
 800f72e:	d009      	beq.n	800f744 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 800f730:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 800f734:	9019      	str	r0, [sp, #100]	; 0x64
 800f736:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 800f73a:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 800f73e:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 800f742:	911d      	str	r1, [sp, #116]	; 0x74
 800f744:	1ad2      	subs	r2, r2, r3
 800f746:	e6b5      	b.n	800f4b4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800f748:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800f74a:	681b      	ldr	r3, [r3, #0]
 800f74c:	b923      	cbnz	r3, 800f758 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f74e:	4b04      	ldr	r3, [pc, #16]	; (800f760 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 800f750:	6818      	ldr	r0, [r3, #0]
 800f752:	6803      	ldr	r3, [r0, #0]
 800f754:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f756:	4798      	blx	r3
 800f758:	b05b      	add	sp, #364	; 0x16c
 800f75a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f75e:	bf00      	nop
 800f760:	2001535c 	.word	0x2001535c

0800f764 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>:
 800f764:	b570      	push	{r4, r5, r6, lr}
 800f766:	4604      	mov	r4, r0
 800f768:	f89d 6014 	ldrb.w	r6, [sp, #20]
 800f76c:	9804      	ldr	r0, [sp, #16]
 800f76e:	6061      	str	r1, [r4, #4]
 800f770:	2500      	movs	r5, #0
 800f772:	8025      	strh	r5, [r4, #0]
 800f774:	7223      	strb	r3, [r4, #8]
 800f776:	7266      	strb	r6, [r4, #9]
 800f778:	60e0      	str	r0, [r4, #12]
 800f77a:	8222      	strh	r2, [r4, #16]
 800f77c:	8265      	strh	r5, [r4, #18]
 800f77e:	82a5      	strh	r5, [r4, #20]
 800f780:	82e5      	strh	r5, [r4, #22]
 800f782:	8325      	strh	r5, [r4, #24]
 800f784:	8365      	strh	r5, [r4, #26]
 800f786:	83a5      	strh	r5, [r4, #28]
 800f788:	77a5      	strb	r5, [r4, #30]
 800f78a:	b32e      	cbz	r6, 800f7d8 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 800f78c:	6803      	ldr	r3, [r0, #0]
 800f78e:	695b      	ldr	r3, [r3, #20]
 800f790:	4798      	blx	r3
 800f792:	4606      	mov	r6, r0
 800f794:	b300      	cbz	r0, 800f7d8 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 800f796:	68e0      	ldr	r0, [r4, #12]
 800f798:	6803      	ldr	r3, [r0, #0]
 800f79a:	4631      	mov	r1, r6
 800f79c:	68db      	ldr	r3, [r3, #12]
 800f79e:	4798      	blx	r3
 800f7a0:	4605      	mov	r5, r0
 800f7a2:	b1c8      	cbz	r0, 800f7d8 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 800f7a4:	7b43      	ldrb	r3, [r0, #13]
 800f7a6:	7a82      	ldrb	r2, [r0, #10]
 800f7a8:	005b      	lsls	r3, r3, #1
 800f7aa:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800f7ae:	4313      	orrs	r3, r2
 800f7b0:	83a3      	strh	r3, [r4, #28]
 800f7b2:	7a63      	ldrb	r3, [r4, #9]
 800f7b4:	2b04      	cmp	r3, #4
 800f7b6:	d10f      	bne.n	800f7d8 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 800f7b8:	68e0      	ldr	r0, [r4, #12]
 800f7ba:	6803      	ldr	r3, [r0, #0]
 800f7bc:	462a      	mov	r2, r5
 800f7be:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800f7c0:	4631      	mov	r1, r6
 800f7c2:	4798      	blx	r3
 800f7c4:	7b6b      	ldrb	r3, [r5, #13]
 800f7c6:	005b      	lsls	r3, r3, #1
 800f7c8:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800f7cc:	7aab      	ldrb	r3, [r5, #10]
 800f7ce:	4313      	orrs	r3, r2
 800f7d0:	4418      	add	r0, r3
 800f7d2:	8ba3      	ldrh	r3, [r4, #28]
 800f7d4:	4418      	add	r0, r3
 800f7d6:	83a0      	strh	r0, [r4, #28]
 800f7d8:	4620      	mov	r0, r4
 800f7da:	bd70      	pop	{r4, r5, r6, pc}

0800f7dc <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 800f7dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f7e0:	2400      	movs	r4, #0
 800f7e2:	b085      	sub	sp, #20
 800f7e4:	4681      	mov	r9, r0
 800f7e6:	4688      	mov	r8, r1
 800f7e8:	4692      	mov	sl, r2
 800f7ea:	469b      	mov	fp, r3
 800f7ec:	4627      	mov	r7, r4
 800f7ee:	4625      	mov	r5, r4
 800f7f0:	4626      	mov	r6, r4
 800f7f2:	4554      	cmp	r4, sl
 800f7f4:	da2a      	bge.n	800f84c <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800f7f6:	2300      	movs	r3, #0
 800f7f8:	9303      	str	r3, [sp, #12]
 800f7fa:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800f7fe:	429d      	cmp	r5, r3
 800f800:	d004      	beq.n	800f80c <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 800f802:	f242 030b 	movw	r3, #8203	; 0x200b
 800f806:	429d      	cmp	r5, r3
 800f808:	bf18      	it	ne
 800f80a:	462f      	movne	r7, r5
 800f80c:	ab03      	add	r3, sp, #12
 800f80e:	4642      	mov	r2, r8
 800f810:	4659      	mov	r1, fp
 800f812:	4648      	mov	r0, r9
 800f814:	f002 ff7e 	bl	8012714 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800f818:	4605      	mov	r5, r0
 800f81a:	b1b8      	cbz	r0, 800f84c <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800f81c:	280a      	cmp	r0, #10
 800f81e:	d015      	beq.n	800f84c <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800f820:	9a03      	ldr	r2, [sp, #12]
 800f822:	b18a      	cbz	r2, 800f848 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 800f824:	7b50      	ldrb	r0, [r2, #13]
 800f826:	7a93      	ldrb	r3, [r2, #10]
 800f828:	8895      	ldrh	r5, [r2, #4]
 800f82a:	0040      	lsls	r0, r0, #1
 800f82c:	f400 7080 	and.w	r0, r0, #256	; 0x100
 800f830:	4303      	orrs	r3, r0
 800f832:	9301      	str	r3, [sp, #4]
 800f834:	f8d8 3000 	ldr.w	r3, [r8]
 800f838:	4639      	mov	r1, r7
 800f83a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800f83c:	4640      	mov	r0, r8
 800f83e:	4798      	blx	r3
 800f840:	9b01      	ldr	r3, [sp, #4]
 800f842:	4418      	add	r0, r3
 800f844:	4406      	add	r6, r0
 800f846:	b2b6      	uxth	r6, r6
 800f848:	3401      	adds	r4, #1
 800f84a:	e7d2      	b.n	800f7f2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 800f84c:	4630      	mov	r0, r6
 800f84e:	b005      	add	sp, #20
 800f850:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800f854 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 800f854:	2a02      	cmp	r2, #2
 800f856:	b530      	push	{r4, r5, lr}
 800f858:	d011      	beq.n	800f87e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 800f85a:	2a03      	cmp	r2, #3
 800f85c:	d01c      	beq.n	800f898 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 800f85e:	2a01      	cmp	r2, #1
 800f860:	d10c      	bne.n	800f87c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800f862:	888b      	ldrh	r3, [r1, #4]
 800f864:	8801      	ldrh	r1, [r0, #0]
 800f866:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 800f86a:	8844      	ldrh	r4, [r0, #2]
 800f86c:	8004      	strh	r4, [r0, #0]
 800f86e:	1a5b      	subs	r3, r3, r1
 800f870:	1a9b      	subs	r3, r3, r2
 800f872:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800f876:	8043      	strh	r3, [r0, #2]
 800f878:	8081      	strh	r1, [r0, #4]
 800f87a:	80c2      	strh	r2, [r0, #6]
 800f87c:	bd30      	pop	{r4, r5, pc}
 800f87e:	88cb      	ldrh	r3, [r1, #6]
 800f880:	8842      	ldrh	r2, [r0, #2]
 800f882:	1a9b      	subs	r3, r3, r2
 800f884:	88c2      	ldrh	r2, [r0, #6]
 800f886:	1a9b      	subs	r3, r3, r2
 800f888:	888a      	ldrh	r2, [r1, #4]
 800f88a:	8801      	ldrh	r1, [r0, #0]
 800f88c:	8043      	strh	r3, [r0, #2]
 800f88e:	1a52      	subs	r2, r2, r1
 800f890:	8881      	ldrh	r1, [r0, #4]
 800f892:	1a52      	subs	r2, r2, r1
 800f894:	8002      	strh	r2, [r0, #0]
 800f896:	e7f1      	b.n	800f87c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800f898:	88cb      	ldrh	r3, [r1, #6]
 800f89a:	8841      	ldrh	r1, [r0, #2]
 800f89c:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 800f8a0:	f9b0 5000 	ldrsh.w	r5, [r0]
 800f8a4:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 800f8a8:	8045      	strh	r5, [r0, #2]
 800f8aa:	1a5b      	subs	r3, r3, r1
 800f8ac:	1a9b      	subs	r3, r3, r2
 800f8ae:	8003      	strh	r3, [r0, #0]
 800f8b0:	8082      	strh	r2, [r0, #4]
 800f8b2:	80c4      	strh	r4, [r0, #6]
 800f8b4:	e7e2      	b.n	800f87c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

0800f8b6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 800f8b6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f8ba:	b09f      	sub	sp, #124	; 0x7c
 800f8bc:	9116      	str	r1, [sp, #88]	; 0x58
 800f8be:	9317      	str	r3, [sp, #92]	; 0x5c
 800f8c0:	9929      	ldr	r1, [sp, #164]	; 0xa4
 800f8c2:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800f8c4:	8809      	ldrh	r1, [r1, #0]
 800f8c6:	889b      	ldrh	r3, [r3, #4]
 800f8c8:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 800f8cc:	9212      	str	r2, [sp, #72]	; 0x48
 800f8ce:	440b      	add	r3, r1
 800f8d0:	b21b      	sxth	r3, r3
 800f8d2:	9310      	str	r3, [sp, #64]	; 0x40
 800f8d4:	f8d8 3000 	ldr.w	r3, [r8]
 800f8d8:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 800f8dc:	7a59      	ldrb	r1, [r3, #9]
 800f8de:	7a1b      	ldrb	r3, [r3, #8]
 800f8e0:	9011      	str	r0, [sp, #68]	; 0x44
 800f8e2:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 800f8e6:	9114      	str	r1, [sp, #80]	; 0x50
 800f8e8:	9315      	str	r3, [sp, #84]	; 0x54
 800f8ea:	f9bd 50a0 	ldrsh.w	r5, [sp, #160]	; 0xa0
 800f8ee:	2a00      	cmp	r2, #0
 800f8f0:	d06a      	beq.n	800f9c8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 800f8f2:	f898 3010 	ldrb.w	r3, [r8, #16]
 800f8f6:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 800f8f8:	2b04      	cmp	r3, #4
 800f8fa:	bf14      	ite	ne
 800f8fc:	2301      	movne	r3, #1
 800f8fe:	2302      	moveq	r3, #2
 800f900:	4413      	add	r3, r2
 800f902:	f04f 0900 	mov.w	r9, #0
 800f906:	930f      	str	r3, [sp, #60]	; 0x3c
 800f908:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 800f90c:	464c      	mov	r4, r9
 800f90e:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 800f912:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 800f916:	4293      	cmp	r3, r2
 800f918:	f280 808f 	bge.w	800fa3a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 800f91c:	2300      	movs	r3, #0
 800f91e:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 800f922:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 800f926:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800f92a:	429c      	cmp	r4, r3
 800f92c:	d006      	beq.n	800f93c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 800f92e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f930:	f242 020b 	movw	r2, #8203	; 0x200b
 800f934:	4294      	cmp	r4, r2
 800f936:	bf18      	it	ne
 800f938:	4623      	movne	r3, r4
 800f93a:	930d      	str	r3, [sp, #52]	; 0x34
 800f93c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f93e:	992d      	ldr	r1, [sp, #180]	; 0xb4
 800f940:	f8d8 2000 	ldr.w	r2, [r8]
 800f944:	428b      	cmp	r3, r1
 800f946:	db41      	blt.n	800f9cc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 800f948:	6813      	ldr	r3, [r2, #0]
 800f94a:	4610      	mov	r0, r2
 800f94c:	695b      	ldr	r3, [r3, #20]
 800f94e:	4798      	blx	r3
 800f950:	4604      	mov	r4, r0
 800f952:	f8d8 0000 	ldr.w	r0, [r8]
 800f956:	6803      	ldr	r3, [r0, #0]
 800f958:	aa1d      	add	r2, sp, #116	; 0x74
 800f95a:	689e      	ldr	r6, [r3, #8]
 800f95c:	4621      	mov	r1, r4
 800f95e:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 800f962:	47b0      	blx	r6
 800f964:	901c      	str	r0, [sp, #112]	; 0x70
 800f966:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800f96a:	429c      	cmp	r4, r3
 800f96c:	f000 80e9 	beq.w	800fb42 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 800f970:	f242 030b 	movw	r3, #8203	; 0x200b
 800f974:	429c      	cmp	r4, r3
 800f976:	f000 80e4 	beq.w	800fb42 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 800f97a:	2c00      	cmp	r4, #0
 800f97c:	f000 80f6 	beq.w	800fb6c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b6>
 800f980:	2c0a      	cmp	r4, #10
 800f982:	d060      	beq.n	800fa46 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 800f984:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800f986:	b36a      	cbz	r2, 800f9e4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 800f988:	8894      	ldrh	r4, [r2, #4]
 800f98a:	f1bb 0f00 	cmp.w	fp, #0
 800f98e:	d03b      	beq.n	800fa08 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 800f990:	f892 900d 	ldrb.w	r9, [r2, #13]
 800f994:	ea4f 0949 	mov.w	r9, r9, lsl #1
 800f998:	f409 7380 	and.w	r3, r9, #256	; 0x100
 800f99c:	f892 900a 	ldrb.w	r9, [r2, #10]
 800f9a0:	f1bb 0f01 	cmp.w	fp, #1
 800f9a4:	ea49 0903 	orr.w	r9, r9, r3
 800f9a8:	d134      	bne.n	800fa14 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 800f9aa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f9ac:	eba5 0509 	sub.w	r5, r5, r9
 800f9b0:	2b00      	cmp	r3, #0
 800f9b2:	d14f      	bne.n	800fa54 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 800f9b4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800f9b6:	eb09 0305 	add.w	r3, r9, r5
 800f9ba:	4413      	add	r3, r2
 800f9bc:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 800f9be:	f9b2 2000 	ldrsh.w	r2, [r2]
 800f9c2:	4293      	cmp	r3, r2
 800f9c4:	da51      	bge.n	800fa6a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 800f9c6:	e038      	b.n	800fa3a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 800f9c8:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800f9ca:	e79a      	b.n	800f902 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 800f9cc:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 800f9d0:	9301      	str	r3, [sp, #4]
 800f9d2:	ab1d      	add	r3, sp, #116	; 0x74
 800f9d4:	9300      	str	r3, [sp, #0]
 800f9d6:	4659      	mov	r1, fp
 800f9d8:	ab1c      	add	r3, sp, #112	; 0x70
 800f9da:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800f9dc:	f002 fee3 	bl	80127a6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 800f9e0:	4604      	mov	r4, r0
 800f9e2:	e7c0      	b.n	800f966 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 800f9e4:	f8d8 0000 	ldr.w	r0, [r8]
 800f9e8:	6803      	ldr	r3, [r0, #0]
 800f9ea:	691b      	ldr	r3, [r3, #16]
 800f9ec:	4798      	blx	r3
 800f9ee:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800f9f2:	4298      	cmp	r0, r3
 800f9f4:	f000 80a5 	beq.w	800fb42 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 800f9f8:	f242 030b 	movw	r3, #8203	; 0x200b
 800f9fc:	4298      	cmp	r0, r3
 800f9fe:	f000 80a0 	beq.w	800fb42 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 800fa02:	f1bb 0f00 	cmp.w	fp, #0
 800fa06:	d100      	bne.n	800fa0a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 800fa08:	444d      	add	r5, r9
 800fa0a:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800fa0c:	2a00      	cmp	r2, #0
 800fa0e:	d1bf      	bne.n	800f990 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 800fa10:	4691      	mov	r9, r2
 800fa12:	e096      	b.n	800fb42 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 800fa14:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800fa16:	2b00      	cmp	r3, #0
 800fa18:	f000 80aa 	beq.w	800fb70 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 800fa1c:	f1bb 0f00 	cmp.w	fp, #0
 800fa20:	d118      	bne.n	800fa54 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 800fa22:	f8d8 0000 	ldr.w	r0, [r8]
 800fa26:	990d      	ldr	r1, [sp, #52]	; 0x34
 800fa28:	6803      	ldr	r3, [r0, #0]
 800fa2a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800fa2c:	4798      	blx	r3
 800fa2e:	4405      	add	r5, r0
 800fa30:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800fa32:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800fa34:	1aeb      	subs	r3, r5, r3
 800fa36:	4293      	cmp	r3, r2
 800fa38:	dd17      	ble.n	800fa6a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 800fa3a:	2c00      	cmp	r4, #0
 800fa3c:	f000 8096 	beq.w	800fb6c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b6>
 800fa40:	2c0a      	cmp	r4, #10
 800fa42:	f040 8084 	bne.w	800fb4e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 800fa46:	240a      	movs	r4, #10
 800fa48:	fab4 f084 	clz	r0, r4
 800fa4c:	0940      	lsrs	r0, r0, #5
 800fa4e:	b01f      	add	sp, #124	; 0x7c
 800fa50:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fa54:	f8d8 0000 	ldr.w	r0, [r8]
 800fa58:	990d      	ldr	r1, [sp, #52]	; 0x34
 800fa5a:	6803      	ldr	r3, [r0, #0]
 800fa5c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800fa5e:	4798      	blx	r3
 800fa60:	f1bb 0f01 	cmp.w	fp, #1
 800fa64:	eba5 0500 	sub.w	r5, r5, r0
 800fa68:	d0a4      	beq.n	800f9b4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 800fa6a:	981c      	ldr	r0, [sp, #112]	; 0x70
 800fa6c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800fa6e:	f990 1009 	ldrsb.w	r1, [r0, #9]
 800fa72:	f9b3 6000 	ldrsh.w	r6, [r3]
 800fa76:	7b43      	ldrb	r3, [r0, #13]
 800fa78:	015b      	lsls	r3, r3, #5
 800fa7a:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800fa7e:	7983      	ldrb	r3, [r0, #6]
 800fa80:	4429      	add	r1, r5
 800fa82:	4313      	orrs	r3, r2
 800fa84:	440b      	add	r3, r1
 800fa86:	42b3      	cmp	r3, r6
 800fa88:	db5b      	blt.n	800fb42 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 800fa8a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800fa8c:	4299      	cmp	r1, r3
 800fa8e:	da58      	bge.n	800fb42 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 800fa90:	f8d8 0000 	ldr.w	r0, [r8]
 800fa94:	6803      	ldr	r3, [r0, #0]
 800fa96:	42ae      	cmp	r6, r5
 800fa98:	bfc8      	it	gt
 800fa9a:	1b76      	subgt	r6, r6, r5
 800fa9c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800fa9e:	bfcc      	ite	gt
 800faa0:	b2b6      	uxthgt	r6, r6
 800faa2:	2600      	movle	r6, #0
 800faa4:	4798      	blx	r3
 800faa6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800faa8:	7b5a      	ldrb	r2, [r3, #13]
 800faaa:	00d1      	lsls	r1, r2, #3
 800faac:	f401 7780 	and.w	r7, r1, #256	; 0x100
 800fab0:	7a19      	ldrb	r1, [r3, #8]
 800fab2:	4339      	orrs	r1, r7
 800fab4:	0657      	lsls	r7, r2, #25
 800fab6:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 800fab8:	bf44      	itt	mi
 800faba:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 800fabe:	b209      	sxthmi	r1, r1
 800fac0:	19c7      	adds	r7, r0, r7
 800fac2:	1a7f      	subs	r7, r7, r1
 800fac4:	9929      	ldr	r1, [sp, #164]	; 0xa4
 800fac6:	b2bf      	uxth	r7, r7
 800fac8:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 800facc:	fa0f fa87 	sxth.w	sl, r7
 800fad0:	4551      	cmp	r1, sl
 800fad2:	dd3a      	ble.n	800fb4a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x294>
 800fad4:	0112      	lsls	r2, r2, #4
 800fad6:	79d8      	ldrb	r0, [r3, #7]
 800fad8:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800fadc:	4302      	orrs	r2, r0
 800fade:	4492      	add	sl, r2
 800fae0:	4551      	cmp	r1, sl
 800fae2:	dc2e      	bgt.n	800fb42 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 800fae4:	1bcf      	subs	r7, r1, r7
 800fae6:	b2bf      	uxth	r7, r7
 800fae8:	468a      	mov	sl, r1
 800faea:	9319      	str	r3, [sp, #100]	; 0x64
 800faec:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800faee:	f8d8 0000 	ldr.w	r0, [r8]
 800faf2:	681a      	ldr	r2, [r3, #0]
 800faf4:	6801      	ldr	r1, [r0, #0]
 800faf6:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 800faf8:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 800fafa:	9313      	str	r3, [sp, #76]	; 0x4c
 800fafc:	9218      	str	r2, [sp, #96]	; 0x60
 800fafe:	6b89      	ldr	r1, [r1, #56]	; 0x38
 800fb00:	4788      	blx	r1
 800fb02:	f898 1006 	ldrb.w	r1, [r8, #6]
 800fb06:	910b      	str	r1, [sp, #44]	; 0x2c
 800fb08:	f898 100e 	ldrb.w	r1, [r8, #14]
 800fb0c:	910a      	str	r1, [sp, #40]	; 0x28
 800fb0e:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 800fb12:	9109      	str	r1, [sp, #36]	; 0x24
 800fb14:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800fb16:	f8d8 1008 	ldr.w	r1, [r8, #8]
 800fb1a:	9305      	str	r3, [sp, #20]
 800fb1c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800fb1e:	9a18      	ldr	r2, [sp, #96]	; 0x60
 800fb20:	9206      	str	r2, [sp, #24]
 800fb22:	e9cd 0107 	strd	r0, r1, [sp, #28]
 800fb26:	e9cd 7303 	strd	r7, r3, [sp, #12]
 800fb2a:	e9cd a601 	strd	sl, r6, [sp, #4]
 800fb2e:	442e      	add	r6, r5
 800fb30:	b236      	sxth	r6, r6
 800fb32:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800fb34:	9600      	str	r6, [sp, #0]
 800fb36:	681a      	ldr	r2, [r3, #0]
 800fb38:	9916      	ldr	r1, [sp, #88]	; 0x58
 800fb3a:	685b      	ldr	r3, [r3, #4]
 800fb3c:	9811      	ldr	r0, [sp, #68]	; 0x44
 800fb3e:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800fb40:	47b0      	blx	r6
 800fb42:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800fb44:	3301      	adds	r3, #1
 800fb46:	930e      	str	r3, [sp, #56]	; 0x38
 800fb48:	e6e3      	b.n	800f912 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 800fb4a:	2700      	movs	r7, #0
 800fb4c:	e7cd      	b.n	800faea <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
 800fb4e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 800fb50:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800fb52:	3501      	adds	r5, #1
 800fb54:	429d      	cmp	r5, r3
 800fb56:	f6bf af77 	bge.w	800fa48 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 800fb5a:	4659      	mov	r1, fp
 800fb5c:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800fb5e:	f7f4 fe5d 	bl	800481c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800fb62:	4604      	mov	r4, r0
 800fb64:	b110      	cbz	r0, 800fb6c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b6>
 800fb66:	280a      	cmp	r0, #10
 800fb68:	d1f2      	bne.n	800fb50 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29a>
 800fb6a:	e76c      	b.n	800fa46 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 800fb6c:	2400      	movs	r4, #0
 800fb6e:	e76b      	b.n	800fa48 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 800fb70:	f1bb 0f00 	cmp.w	fp, #0
 800fb74:	f43f af5c 	beq.w	800fa30 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 800fb78:	e777      	b.n	800fa6a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

0800fb7a <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 800fb7a:	b530      	push	{r4, r5, lr}
 800fb7c:	8a44      	ldrh	r4, [r0, #18]
 800fb7e:	8ac5      	ldrh	r5, [r0, #22]
 800fb80:	82c3      	strh	r3, [r0, #22]
 800fb82:	442c      	add	r4, r5
 800fb84:	1ae4      	subs	r4, r4, r3
 800fb86:	8244      	strh	r4, [r0, #18]
 800fb88:	8b03      	ldrh	r3, [r0, #24]
 800fb8a:	8a84      	ldrh	r4, [r0, #20]
 800fb8c:	4422      	add	r2, r4
 800fb8e:	440c      	add	r4, r1
 800fb90:	1a59      	subs	r1, r3, r1
 800fb92:	8342      	strh	r2, [r0, #26]
 800fb94:	8284      	strh	r4, [r0, #20]
 800fb96:	8301      	strh	r1, [r0, #24]
 800fb98:	bd30      	pop	{r4, r5, pc}

0800fb9a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>:
 800fb9a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fb9e:	7a43      	ldrb	r3, [r0, #9]
 800fba0:	1eda      	subs	r2, r3, #3
 800fba2:	b087      	sub	sp, #28
 800fba4:	4604      	mov	r4, r0
 800fba6:	b2d2      	uxtb	r2, r2
 800fba8:	460f      	mov	r7, r1
 800fbaa:	2900      	cmp	r1, #0
 800fbac:	d036      	beq.n	800fc1c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x82>
 800fbae:	2a01      	cmp	r2, #1
 800fbb0:	d932      	bls.n	800fc18 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x7e>
 800fbb2:	1e58      	subs	r0, r3, #1
 800fbb4:	f1d0 0b00 	rsbs	fp, r0, #0
 800fbb8:	eb4b 0b00 	adc.w	fp, fp, r0
 800fbbc:	1e99      	subs	r1, r3, #2
 800fbbe:	424b      	negs	r3, r1
 800fbc0:	414b      	adcs	r3, r1
 800fbc2:	9303      	str	r3, [sp, #12]
 800fbc4:	2300      	movs	r3, #0
 800fbc6:	e9cd 3301 	strd	r3, r3, [sp, #4]
 800fbca:	2500      	movs	r5, #0
 800fbcc:	8265      	strh	r5, [r4, #18]
 800fbce:	82a5      	strh	r5, [r4, #20]
 800fbd0:	46a9      	mov	r9, r5
 800fbd2:	f242 0a0b 	movw	sl, #8203	; 0x200b
 800fbd6:	2300      	movs	r3, #0
 800fbd8:	9305      	str	r3, [sp, #20]
 800fbda:	8823      	ldrh	r3, [r4, #0]
 800fbdc:	2b20      	cmp	r3, #32
 800fbde:	d02b      	beq.n	800fc38 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x9e>
 800fbe0:	eba3 020a 	sub.w	r2, r3, sl
 800fbe4:	4256      	negs	r6, r2
 800fbe6:	4156      	adcs	r6, r2
 800fbe8:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 800fbec:	4293      	cmp	r3, r2
 800fbee:	d004      	beq.n	800fbfa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 800fbf0:	4553      	cmp	r3, sl
 800fbf2:	bf16      	itet	ne
 800fbf4:	4699      	movne	r9, r3
 800fbf6:	2601      	moveq	r6, #1
 800fbf8:	2600      	movne	r6, #0
 800fbfa:	ab05      	add	r3, sp, #20
 800fbfc:	68e2      	ldr	r2, [r4, #12]
 800fbfe:	7a21      	ldrb	r1, [r4, #8]
 800fc00:	6860      	ldr	r0, [r4, #4]
 800fc02:	f002 fd87 	bl	8012714 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800fc06:	8020      	strh	r0, [r4, #0]
 800fc08:	b9c8      	cbnz	r0, 800fc3e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xa4>
 800fc0a:	8b22      	ldrh	r2, [r4, #24]
 800fc0c:	2300      	movs	r3, #0
 800fc0e:	4611      	mov	r1, r2
 800fc10:	4620      	mov	r0, r4
 800fc12:	f7ff ffb2 	bl	800fb7a <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800fc16:	e066      	b.n	800fce6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 800fc18:	468b      	mov	fp, r1
 800fc1a:	e7cf      	b.n	800fbbc <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x22>
 800fc1c:	3b01      	subs	r3, #1
 800fc1e:	2a01      	cmp	r2, #1
 800fc20:	bf8c      	ite	hi
 800fc22:	2200      	movhi	r2, #0
 800fc24:	2201      	movls	r2, #1
 800fc26:	2b01      	cmp	r3, #1
 800fc28:	bf8c      	ite	hi
 800fc2a:	2300      	movhi	r3, #0
 800fc2c:	2301      	movls	r3, #1
 800fc2e:	9202      	str	r2, [sp, #8]
 800fc30:	9301      	str	r3, [sp, #4]
 800fc32:	9103      	str	r1, [sp, #12]
 800fc34:	468b      	mov	fp, r1
 800fc36:	e7c8      	b.n	800fbca <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x30>
 800fc38:	4699      	mov	r9, r3
 800fc3a:	2601      	movs	r6, #1
 800fc3c:	e7dd      	b.n	800fbfa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 800fc3e:	8ae3      	ldrh	r3, [r4, #22]
 800fc40:	280a      	cmp	r0, #10
 800fc42:	f103 0301 	add.w	r3, r3, #1
 800fc46:	82e3      	strh	r3, [r4, #22]
 800fc48:	d0df      	beq.n	800fc0a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x70>
 800fc4a:	9a05      	ldr	r2, [sp, #20]
 800fc4c:	bb42      	cbnz	r2, 800fca0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x106>
 800fc4e:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800fc52:	4298      	cmp	r0, r3
 800fc54:	d001      	beq.n	800fc5a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 800fc56:	4550      	cmp	r0, sl
 800fc58:	d1bd      	bne.n	800fbd6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800fc5a:	8823      	ldrh	r3, [r4, #0]
 800fc5c:	8b21      	ldrh	r1, [r4, #24]
 800fc5e:	2b20      	cmp	r3, #32
 800fc60:	d001      	beq.n	800fc66 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xcc>
 800fc62:	4553      	cmp	r3, sl
 800fc64:	d131      	bne.n	800fcca <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x130>
 800fc66:	2e00      	cmp	r6, #0
 800fc68:	bf0a      	itet	eq
 800fc6a:	460d      	moveq	r5, r1
 800fc6c:	4630      	movne	r0, r6
 800fc6e:	2001      	moveq	r0, #1
 800fc70:	440a      	add	r2, r1
 800fc72:	8aa3      	ldrh	r3, [r4, #20]
 800fc74:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 800fc78:	b292      	uxth	r2, r2
 800fc7a:	8322      	strh	r2, [r4, #24]
 800fc7c:	4413      	add	r3, r2
 800fc7e:	2f00      	cmp	r7, #0
 800fc80:	d03a      	beq.n	800fcf8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x15e>
 800fc82:	f1bb 0f00 	cmp.w	fp, #0
 800fc86:	d102      	bne.n	800fc8e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xf4>
 800fc88:	9903      	ldr	r1, [sp, #12]
 800fc8a:	b301      	cbz	r1, 800fcce <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 800fc8c:	b1f8      	cbz	r0, 800fcce <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 800fc8e:	8ba1      	ldrh	r1, [r4, #28]
 800fc90:	4419      	add	r1, r3
 800fc92:	458c      	cmp	ip, r1
 800fc94:	da2a      	bge.n	800fcec <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 800fc96:	8a61      	ldrh	r1, [r4, #18]
 800fc98:	b341      	cbz	r1, 800fcec <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 800fc9a:	4563      	cmp	r3, ip
 800fc9c:	dd9b      	ble.n	800fbd6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800fc9e:	e01c      	b.n	800fcda <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x140>
 800fca0:	8893      	ldrh	r3, [r2, #4]
 800fca2:	8023      	strh	r3, [r4, #0]
 800fca4:	f892 800d 	ldrb.w	r8, [r2, #13]
 800fca8:	ea4f 0848 	mov.w	r8, r8, lsl #1
 800fcac:	f408 7080 	and.w	r0, r8, #256	; 0x100
 800fcb0:	f892 800a 	ldrb.w	r8, [r2, #10]
 800fcb4:	ea48 0800 	orr.w	r8, r8, r0
 800fcb8:	68e0      	ldr	r0, [r4, #12]
 800fcba:	6803      	ldr	r3, [r0, #0]
 800fcbc:	4649      	mov	r1, r9
 800fcbe:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800fcc0:	4798      	blx	r3
 800fcc2:	eb08 0200 	add.w	r2, r8, r0
 800fcc6:	b292      	uxth	r2, r2
 800fcc8:	e7c7      	b.n	800fc5a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 800fcca:	2000      	movs	r0, #0
 800fccc:	e7d0      	b.n	800fc70 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xd6>
 800fcce:	4563      	cmp	r3, ip
 800fcd0:	dd81      	ble.n	800fbd6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800fcd2:	8a63      	ldrh	r3, [r4, #18]
 800fcd4:	2b00      	cmp	r3, #0
 800fcd6:	f43f af7e 	beq.w	800fbd6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800fcda:	2301      	movs	r3, #1
 800fcdc:	77a3      	strb	r3, [r4, #30]
 800fcde:	8ba2      	ldrh	r2, [r4, #28]
 800fce0:	8b63      	ldrh	r3, [r4, #26]
 800fce2:	4413      	add	r3, r2
 800fce4:	8363      	strh	r3, [r4, #26]
 800fce6:	b007      	add	sp, #28
 800fce8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fcec:	2300      	movs	r3, #0
 800fcee:	4611      	mov	r1, r2
 800fcf0:	4620      	mov	r0, r4
 800fcf2:	f7ff ff42 	bl	800fb7a <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800fcf6:	e76e      	b.n	800fbd6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800fcf8:	4563      	cmp	r3, ip
 800fcfa:	dd14      	ble.n	800fd26 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x18c>
 800fcfc:	9b02      	ldr	r3, [sp, #8]
 800fcfe:	b113      	cbz	r3, 800fd06 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x16c>
 800fd00:	2301      	movs	r3, #1
 800fd02:	460a      	mov	r2, r1
 800fd04:	e783      	b.n	800fc0e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x74>
 800fd06:	9b01      	ldr	r3, [sp, #4]
 800fd08:	2b00      	cmp	r3, #0
 800fd0a:	f43f af64 	beq.w	800fbd6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800fd0e:	2800      	cmp	r0, #0
 800fd10:	f47f af61 	bne.w	800fbd6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800fd14:	b116      	cbz	r6, 800fd1c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x182>
 800fd16:	2301      	movs	r3, #1
 800fd18:	462a      	mov	r2, r5
 800fd1a:	e779      	b.n	800fc10 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x76>
 800fd1c:	8a63      	ldrh	r3, [r4, #18]
 800fd1e:	2b00      	cmp	r3, #0
 800fd20:	f43f af59 	beq.w	800fbd6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800fd24:	e7df      	b.n	800fce6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 800fd26:	2800      	cmp	r0, #0
 800fd28:	f47f af55 	bne.w	800fbd6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800fd2c:	2e00      	cmp	r6, #0
 800fd2e:	f43f af52 	beq.w	800fbd6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800fd32:	2301      	movs	r3, #1
 800fd34:	462a      	mov	r2, r5
 800fd36:	e7db      	b.n	800fcf0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x156>

0800fd38 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 800fd38:	b530      	push	{r4, r5, lr}
 800fd3a:	4605      	mov	r5, r0
 800fd3c:	b08b      	sub	sp, #44	; 0x2c
 800fd3e:	b191      	cbz	r1, 800fd66 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x2e>
 800fd40:	e9cd 3100 	strd	r3, r1, [sp]
 800fd44:	4613      	mov	r3, r2
 800fd46:	4601      	mov	r1, r0
 800fd48:	f8bd 2038 	ldrh.w	r2, [sp, #56]	; 0x38
 800fd4c:	a802      	add	r0, sp, #8
 800fd4e:	f7ff fd09 	bl	800f764 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 800fd52:	2401      	movs	r4, #1
 800fd54:	2100      	movs	r1, #0
 800fd56:	a802      	add	r0, sp, #8
 800fd58:	f7ff ff1f 	bl	800fb9a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800fd5c:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800fd60:	b163      	cbz	r3, 800fd7c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 800fd62:	3401      	adds	r4, #1
 800fd64:	e7f6      	b.n	800fd54 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x1c>
 800fd66:	f002 fda3 	bl	80128b0 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800fd6a:	2401      	movs	r4, #1
 800fd6c:	280a      	cmp	r0, #10
 800fd6e:	4628      	mov	r0, r5
 800fd70:	bf08      	it	eq
 800fd72:	3401      	addeq	r4, #1
 800fd74:	f002 fd9c 	bl	80128b0 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800fd78:	2800      	cmp	r0, #0
 800fd7a:	d1f7      	bne.n	800fd6c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 800fd7c:	b2a0      	uxth	r0, r4
 800fd7e:	b00b      	add	sp, #44	; 0x2c
 800fd80:	bd30      	pop	{r4, r5, pc}

0800fd82 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 800fd82:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fd86:	b0e5      	sub	sp, #404	; 0x194
 800fd88:	4689      	mov	r9, r1
 800fd8a:	f8dd a1b8 	ldr.w	sl, [sp, #440]	; 0x1b8
 800fd8e:	900a      	str	r0, [sp, #40]	; 0x28
 800fd90:	461c      	mov	r4, r3
 800fd92:	f1ba 0f00 	cmp.w	sl, #0
 800fd96:	f000 80b4 	beq.w	800ff02 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800fd9a:	681b      	ldr	r3, [r3, #0]
 800fd9c:	2b00      	cmp	r3, #0
 800fd9e:	f000 80b0 	beq.w	800ff02 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800fda2:	7ba3      	ldrb	r3, [r4, #14]
 800fda4:	2b00      	cmp	r3, #0
 800fda6:	f000 80ac 	beq.w	800ff02 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800fdaa:	6810      	ldr	r0, [r2, #0]
 800fdac:	6851      	ldr	r1, [r2, #4]
 800fdae:	f9b9 2004 	ldrsh.w	r2, [r9, #4]
 800fdb2:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 800fdb6:	f10d 0834 	add.w	r8, sp, #52	; 0x34
 800fdba:	4643      	mov	r3, r8
 800fdbc:	c303      	stmia	r3!, {r0, r1}
 800fdbe:	2500      	movs	r5, #0
 800fdc0:	f9b9 3006 	ldrsh.w	r3, [r9, #6]
 800fdc4:	79a2      	ldrb	r2, [r4, #6]
 800fdc6:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 800fdca:	a90f      	add	r1, sp, #60	; 0x3c
 800fdcc:	4640      	mov	r0, r8
 800fdce:	950f      	str	r5, [sp, #60]	; 0x3c
 800fdd0:	f7ff fd40 	bl	800f854 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800fdd4:	a90f      	add	r1, sp, #60	; 0x3c
 800fdd6:	4608      	mov	r0, r1
 800fdd8:	79a2      	ldrb	r2, [r4, #6]
 800fdda:	af19      	add	r7, sp, #100	; 0x64
 800fddc:	f7ff fd3a 	bl	800f854 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800fde0:	4638      	mov	r0, r7
 800fde2:	f002 f93a 	bl	801205a <_ZN8touchgfx12TextProviderC1Ev>
 800fde6:	6820      	ldr	r0, [r4, #0]
 800fde8:	6803      	ldr	r3, [r0, #0]
 800fdea:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800fdec:	4798      	blx	r3
 800fdee:	4606      	mov	r6, r0
 800fdf0:	6820      	ldr	r0, [r4, #0]
 800fdf2:	6803      	ldr	r3, [r0, #0]
 800fdf4:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800fdf6:	4798      	blx	r3
 800fdf8:	4633      	mov	r3, r6
 800fdfa:	9000      	str	r0, [sp, #0]
 800fdfc:	9a6f      	ldr	r2, [sp, #444]	; 0x1bc
 800fdfe:	4651      	mov	r1, sl
 800fe00:	4638      	mov	r0, r7
 800fe02:	f002 f985 	bl	8012110 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800fe06:	6820      	ldr	r0, [r4, #0]
 800fe08:	7923      	ldrb	r3, [r4, #4]
 800fe0a:	9308      	str	r3, [sp, #32]
 800fe0c:	6803      	ldr	r3, [r0, #0]
 800fe0e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800fe10:	4798      	blx	r3
 800fe12:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800fe16:	181e      	adds	r6, r3, r0
 800fe18:	42ae      	cmp	r6, r5
 800fe1a:	dd06      	ble.n	800fe2a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xa8>
 800fe1c:	f9b8 2002 	ldrsh.w	r2, [r8, #2]
 800fe20:	4282      	cmp	r2, r0
 800fe22:	bfa4      	itt	ge
 800fe24:	189d      	addge	r5, r3, r2
 800fe26:	fb95 f5f6 	sdivge	r5, r5, r6
 800fe2a:	a832      	add	r0, sp, #200	; 0xc8
 800fe2c:	f002 f915 	bl	801205a <_ZN8touchgfx12TextProviderC1Ev>
 800fe30:	7c23      	ldrb	r3, [r4, #16]
 800fe32:	b17b      	cbz	r3, 800fe54 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xd2>
 800fe34:	6820      	ldr	r0, [r4, #0]
 800fe36:	6803      	ldr	r3, [r0, #0]
 800fe38:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800fe3a:	4798      	blx	r3
 800fe3c:	4683      	mov	fp, r0
 800fe3e:	6820      	ldr	r0, [r4, #0]
 800fe40:	6803      	ldr	r3, [r0, #0]
 800fe42:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800fe44:	4798      	blx	r3
 800fe46:	465b      	mov	r3, fp
 800fe48:	9000      	str	r0, [sp, #0]
 800fe4a:	9a6f      	ldr	r2, [sp, #444]	; 0x1bc
 800fe4c:	4651      	mov	r1, sl
 800fe4e:	a832      	add	r0, sp, #200	; 0xc8
 800fe50:	f002 f95e 	bl	8012110 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800fe54:	7be1      	ldrb	r1, [r4, #15]
 800fe56:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 800fe5a:	7963      	ldrb	r3, [r4, #5]
 800fe5c:	1a52      	subs	r2, r2, r1
 800fe5e:	7c21      	ldrb	r1, [r4, #16]
 800fe60:	9101      	str	r1, [sp, #4]
 800fe62:	6821      	ldr	r1, [r4, #0]
 800fe64:	9100      	str	r1, [sp, #0]
 800fe66:	b292      	uxth	r2, r2
 800fe68:	a932      	add	r1, sp, #200	; 0xc8
 800fe6a:	a811      	add	r0, sp, #68	; 0x44
 800fe6c:	f7ff fc7a 	bl	800f764 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 800fe70:	7c23      	ldrb	r3, [r4, #16]
 800fe72:	b9bb      	cbnz	r3, 800fea4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>
 800fe74:	fa1f fa86 	uxth.w	sl, r6
 800fe78:	2d00      	cmp	r5, #0
 800fe7a:	dd45      	ble.n	800ff08 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x186>
 800fe7c:	4638      	mov	r0, r7
 800fe7e:	f002 fd17 	bl	80128b0 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800fe82:	2800      	cmp	r0, #0
 800fe84:	d03d      	beq.n	800ff02 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800fe86:	280a      	cmp	r0, #10
 800fe88:	d1f6      	bne.n	800fe78 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf6>
 800fe8a:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 800fe8e:	4453      	add	r3, sl
 800fe90:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800fe94:	f8bd 3042 	ldrh.w	r3, [sp, #66]	; 0x42
 800fe98:	eba3 030a 	sub.w	r3, r3, sl
 800fe9c:	3d01      	subs	r5, #1
 800fe9e:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 800fea2:	e7e9      	b.n	800fe78 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf6>
 800fea4:	0073      	lsls	r3, r6, #1
 800fea6:	9309      	str	r3, [sp, #36]	; 0x24
 800fea8:	f64f 7bff 	movw	fp, #65535	; 0xffff
 800feac:	fa1f fa86 	uxth.w	sl, r6
 800feb0:	2d00      	cmp	r5, #0
 800feb2:	dd29      	ble.n	800ff08 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x186>
 800feb4:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800feb8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800feba:	428b      	cmp	r3, r1
 800febc:	bfd4      	ite	le
 800febe:	2100      	movle	r1, #0
 800fec0:	2101      	movgt	r1, #1
 800fec2:	a811      	add	r0, sp, #68	; 0x44
 800fec4:	f7ff fe69 	bl	800fb9a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800fec8:	f8bd 3056 	ldrh.w	r3, [sp, #86]	; 0x56
 800fecc:	3b01      	subs	r3, #1
 800fece:	b29b      	uxth	r3, r3
 800fed0:	455b      	cmp	r3, fp
 800fed2:	930b      	str	r3, [sp, #44]	; 0x2c
 800fed4:	d005      	beq.n	800fee2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x160>
 800fed6:	7961      	ldrb	r1, [r4, #5]
 800fed8:	4638      	mov	r0, r7
 800feda:	f7f4 fc9f 	bl	800481c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800fede:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800fee0:	e7f4      	b.n	800fecc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x14a>
 800fee2:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 800fee6:	4453      	add	r3, sl
 800fee8:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800feec:	f8bd 3042 	ldrh.w	r3, [sp, #66]	; 0x42
 800fef0:	eba3 030a 	sub.w	r3, r3, sl
 800fef4:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 800fef8:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800fefc:	3d01      	subs	r5, #1
 800fefe:	2b00      	cmp	r3, #0
 800ff00:	d1d6      	bne.n	800feb0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x12e>
 800ff02:	b065      	add	sp, #404	; 0x194
 800ff04:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ff08:	0075      	lsls	r5, r6, #1
 800ff0a:	f04f 0a00 	mov.w	sl, #0
 800ff0e:	7c23      	ldrb	r3, [r4, #16]
 800ff10:	2b00      	cmp	r3, #0
 800ff12:	d066      	beq.n	800ffe2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x260>
 800ff14:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800ff18:	428d      	cmp	r5, r1
 800ff1a:	bfd4      	ite	le
 800ff1c:	2100      	movle	r1, #0
 800ff1e:	2101      	movgt	r1, #1
 800ff20:	a811      	add	r0, sp, #68	; 0x44
 800ff22:	f7ff fe3a 	bl	800fb9a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800ff26:	9b08      	ldr	r3, [sp, #32]
 800ff28:	2b00      	cmp	r3, #0
 800ff2a:	d055      	beq.n	800ffd8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 800ff2c:	f894 b010 	ldrb.w	fp, [r4, #16]
 800ff30:	2264      	movs	r2, #100	; 0x64
 800ff32:	4639      	mov	r1, r7
 800ff34:	a84b      	add	r0, sp, #300	; 0x12c
 800ff36:	f010 f86b 	bl	8020010 <memcpy>
 800ff3a:	f1bb 0f00 	cmp.w	fp, #0
 800ff3e:	d058      	beq.n	800fff2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x270>
 800ff40:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 800ff44:	7922      	ldrb	r2, [r4, #4]
 800ff46:	2a01      	cmp	r2, #1
 800ff48:	d13c      	bne.n	800ffc4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x242>
 800ff4a:	f9bd 0040 	ldrsh.w	r0, [sp, #64]	; 0x40
 800ff4e:	1ac0      	subs	r0, r0, r3
 800ff50:	2302      	movs	r3, #2
 800ff52:	fb90 f0f3 	sdiv	r0, r0, r3
 800ff56:	b200      	sxth	r0, r0
 800ff58:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800ff5c:	4418      	add	r0, r3
 800ff5e:	7c23      	ldrb	r3, [r4, #16]
 800ff60:	b200      	sxth	r0, r0
 800ff62:	2b00      	cmp	r3, #0
 800ff64:	d03a      	beq.n	800ffdc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25a>
 800ff66:	f8bd 2056 	ldrh.w	r2, [sp, #86]	; 0x56
 800ff6a:	f89d 1062 	ldrb.w	r1, [sp, #98]	; 0x62
 800ff6e:	9000      	str	r0, [sp, #0]
 800ff70:	e9cd 2105 	strd	r2, r1, [sp, #20]
 800ff74:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	; 0x3e
 800ff78:	980a      	ldr	r0, [sp, #40]	; 0x28
 800ff7a:	e9cd a703 	strd	sl, r7, [sp, #12]
 800ff7e:	e9cd 8401 	strd	r8, r4, [sp, #4]
 800ff82:	464a      	mov	r2, r9
 800ff84:	2100      	movs	r1, #0
 800ff86:	f7ff fc96 	bl	800f8b6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 800ff8a:	2800      	cmp	r0, #0
 800ff8c:	d1b9      	bne.n	800ff02 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800ff8e:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 800ff92:	b2b2      	uxth	r2, r6
 800ff94:	4611      	mov	r1, r2
 800ff96:	4413      	add	r3, r2
 800ff98:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 800ff9c:	1a52      	subs	r2, r2, r1
 800ff9e:	7c21      	ldrb	r1, [r4, #16]
 800ffa0:	b21b      	sxth	r3, r3
 800ffa2:	b212      	sxth	r2, r2
 800ffa4:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800ffa8:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 800ffac:	b109      	cbz	r1, 800ffb2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x230>
 800ffae:	42b2      	cmp	r2, r6
 800ffb0:	dba7      	blt.n	800ff02 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800ffb2:	f8b8 2006 	ldrh.w	r2, [r8, #6]
 800ffb6:	f8b8 1002 	ldrh.w	r1, [r8, #2]
 800ffba:	440a      	add	r2, r1
 800ffbc:	b212      	sxth	r2, r2
 800ffbe:	4293      	cmp	r3, r2
 800ffc0:	dda5      	ble.n	800ff0e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x18c>
 800ffc2:	e79e      	b.n	800ff02 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800ffc4:	2a02      	cmp	r2, #2
 800ffc6:	d105      	bne.n	800ffd4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 800ffc8:	7be2      	ldrb	r2, [r4, #15]
 800ffca:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 800ffce:	1a80      	subs	r0, r0, r2
 800ffd0:	1ac0      	subs	r0, r0, r3
 800ffd2:	e7c0      	b.n	800ff56 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d4>
 800ffd4:	2000      	movs	r0, #0
 800ffd6:	e7bf      	b.n	800ff58 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d6>
 800ffd8:	7be0      	ldrb	r0, [r4, #15]
 800ffda:	e7bd      	b.n	800ff58 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d6>
 800ffdc:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800ffe0:	e7c3      	b.n	800ff6a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e8>
 800ffe2:	9b08      	ldr	r3, [sp, #32]
 800ffe4:	2b00      	cmp	r3, #0
 800ffe6:	d0f7      	beq.n	800ffd8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 800ffe8:	2264      	movs	r2, #100	; 0x64
 800ffea:	4639      	mov	r1, r7
 800ffec:	a84b      	add	r0, sp, #300	; 0x12c
 800ffee:	f010 f80f 	bl	8020010 <memcpy>
 800fff2:	2300      	movs	r3, #0
 800fff4:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800fff8:	6821      	ldr	r1, [r4, #0]
 800fffa:	a84b      	add	r0, sp, #300	; 0x12c
 800fffc:	f7ff fbee 	bl	800f7dc <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8010000:	b203      	sxth	r3, r0
 8010002:	e79f      	b.n	800ff44 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c2>

08010004 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 8010004:	2b03      	cmp	r3, #3
 8010006:	d818      	bhi.n	801003a <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 8010008:	e8df f003 	tbb	[pc, r3]
 801000c:	130d0602 	.word	0x130d0602
 8010010:	f9b0 2000 	ldrsh.w	r2, [r0]
 8010014:	1850      	adds	r0, r2, r1
 8010016:	4770      	bx	lr
 8010018:	8803      	ldrh	r3, [r0, #0]
 801001a:	8880      	ldrh	r0, [r0, #4]
 801001c:	4418      	add	r0, r3
 801001e:	b200      	sxth	r0, r0
 8010020:	1a80      	subs	r0, r0, r2
 8010022:	3801      	subs	r0, #1
 8010024:	4770      	bx	lr
 8010026:	8803      	ldrh	r3, [r0, #0]
 8010028:	8880      	ldrh	r0, [r0, #4]
 801002a:	4418      	add	r0, r3
 801002c:	b200      	sxth	r0, r0
 801002e:	1a40      	subs	r0, r0, r1
 8010030:	e7f7      	b.n	8010022 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 8010032:	f9b0 0000 	ldrsh.w	r0, [r0]
 8010036:	4410      	add	r0, r2
 8010038:	4770      	bx	lr
 801003a:	2000      	movs	r0, #0
 801003c:	4770      	bx	lr

0801003e <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 801003e:	2b03      	cmp	r3, #3
 8010040:	d817      	bhi.n	8010072 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 8010042:	e8df f003 	tbb	[pc, r3]
 8010046:	0602      	.short	0x0602
 8010048:	1009      	.short	0x1009
 801004a:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 801004e:	1850      	adds	r0, r2, r1
 8010050:	4770      	bx	lr
 8010052:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8010056:	e7fa      	b.n	801004e <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 8010058:	8843      	ldrh	r3, [r0, #2]
 801005a:	88c0      	ldrh	r0, [r0, #6]
 801005c:	4418      	add	r0, r3
 801005e:	b200      	sxth	r0, r0
 8010060:	1a80      	subs	r0, r0, r2
 8010062:	3801      	subs	r0, #1
 8010064:	4770      	bx	lr
 8010066:	8843      	ldrh	r3, [r0, #2]
 8010068:	88c0      	ldrh	r0, [r0, #6]
 801006a:	4418      	add	r0, r3
 801006c:	b200      	sxth	r0, r0
 801006e:	1a40      	subs	r0, r0, r1
 8010070:	e7f7      	b.n	8010062 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 8010072:	2000      	movs	r0, #0
 8010074:	4770      	bx	lr
	...

08010078 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 8010078:	4b01      	ldr	r3, [pc, #4]	; (8010080 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 801007a:	2200      	movs	r2, #0
 801007c:	601a      	str	r2, [r3, #0]
 801007e:	4770      	bx	lr
 8010080:	2001536c 	.word	0x2001536c

08010084 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 8010084:	4603      	mov	r3, r0
 8010086:	b1c8      	cbz	r0, 80100bc <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 8010088:	0c02      	lsrs	r2, r0, #16
 801008a:	0412      	lsls	r2, r2, #16
 801008c:	b9a2      	cbnz	r2, 80100b8 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 801008e:	0403      	lsls	r3, r0, #16
 8010090:	2010      	movs	r0, #16
 8010092:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8010096:	bf04      	itt	eq
 8010098:	021b      	lsleq	r3, r3, #8
 801009a:	3008      	addeq	r0, #8
 801009c:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 80100a0:	bf04      	itt	eq
 80100a2:	011b      	lsleq	r3, r3, #4
 80100a4:	3004      	addeq	r0, #4
 80100a6:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 80100aa:	bf04      	itt	eq
 80100ac:	009b      	lsleq	r3, r3, #2
 80100ae:	3002      	addeq	r0, #2
 80100b0:	2b00      	cmp	r3, #0
 80100b2:	db04      	blt.n	80100be <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 80100b4:	3001      	adds	r0, #1
 80100b6:	4770      	bx	lr
 80100b8:	2000      	movs	r0, #0
 80100ba:	e7ea      	b.n	8010092 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 80100bc:	2020      	movs	r0, #32
 80100be:	4770      	bx	lr

080100c0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 80100c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80100c4:	b087      	sub	sp, #28
 80100c6:	4681      	mov	r9, r0
 80100c8:	4698      	mov	r8, r3
 80100ca:	4610      	mov	r0, r2
 80100cc:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 80100d0:	460d      	mov	r5, r1
 80100d2:	b981      	cbnz	r1, 80100f6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x36>
 80100d4:	b14b      	cbz	r3, 80100ea <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x2a>
 80100d6:	460b      	mov	r3, r1
 80100d8:	e9cd 4700 	strd	r4, r7, [sp]
 80100dc:	464a      	mov	r2, r9
 80100de:	4641      	mov	r1, r8
 80100e0:	f7ff ffee 	bl	80100c0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80100e4:	b007      	add	sp, #28
 80100e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80100ea:	f04f 33ff 	mov.w	r3, #4294967295
 80100ee:	603b      	str	r3, [r7, #0]
 80100f0:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 80100f4:	e7f6      	b.n	80100e4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 80100f6:	fa32 fa01 	lsrs.w	sl, r2, r1
 80100fa:	d107      	bne.n	801010c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4c>
 80100fc:	fb09 f602 	mul.w	r6, r9, r2
 8010100:	fbb6 f0f4 	udiv	r0, r6, r4
 8010104:	fb04 6610 	mls	r6, r4, r0, r6
 8010108:	603e      	str	r6, [r7, #0]
 801010a:	e7eb      	b.n	80100e4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 801010c:	2601      	movs	r6, #1
 801010e:	408e      	lsls	r6, r1
 8010110:	3e01      	subs	r6, #1
 8010112:	4016      	ands	r6, r2
 8010114:	fa09 fb01 	lsl.w	fp, r9, r1
 8010118:	4630      	mov	r0, r6
 801011a:	fbbb f3f4 	udiv	r3, fp, r4
 801011e:	9302      	str	r3, [sp, #8]
 8010120:	fb0a f303 	mul.w	r3, sl, r3
 8010124:	9303      	str	r3, [sp, #12]
 8010126:	f7ff ffad 	bl	8010084 <_ZN8touchgfx16TouchCalibration4clzuEm>
 801012a:	464a      	mov	r2, r9
 801012c:	460b      	mov	r3, r1
 801012e:	e9cd 4700 	strd	r4, r7, [sp]
 8010132:	4601      	mov	r1, r0
 8010134:	4630      	mov	r0, r6
 8010136:	f7ff ffc3 	bl	80100c0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 801013a:	9b02      	ldr	r3, [sp, #8]
 801013c:	fb04 bb13 	mls	fp, r4, r3, fp
 8010140:	4606      	mov	r6, r0
 8010142:	4658      	mov	r0, fp
 8010144:	eb05 0108 	add.w	r1, r5, r8
 8010148:	f7ff ff9c 	bl	8010084 <_ZN8touchgfx16TouchCalibration4clzuEm>
 801014c:	ab05      	add	r3, sp, #20
 801014e:	e9cd 4300 	strd	r4, r3, [sp]
 8010152:	465a      	mov	r2, fp
 8010154:	4603      	mov	r3, r0
 8010156:	4650      	mov	r0, sl
 8010158:	f7ff ffb2 	bl	80100c0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 801015c:	6839      	ldr	r1, [r7, #0]
 801015e:	9a05      	ldr	r2, [sp, #20]
 8010160:	9b03      	ldr	r3, [sp, #12]
 8010162:	4411      	add	r1, r2
 8010164:	fbb1 f2f4 	udiv	r2, r1, r4
 8010168:	18d3      	adds	r3, r2, r3
 801016a:	441e      	add	r6, r3
 801016c:	fb04 1412 	mls	r4, r4, r2, r1
 8010170:	4430      	add	r0, r6
 8010172:	603c      	str	r4, [r7, #0]
 8010174:	e7b6      	b.n	80100e4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>

08010176 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 8010176:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801017a:	b085      	sub	sp, #20
 801017c:	f1b0 0900 	subs.w	r9, r0, #0
 8010180:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8010182:	461d      	mov	r5, r3
 8010184:	bfbf      	itttt	lt
 8010186:	6823      	ldrlt	r3, [r4, #0]
 8010188:	425b      	neglt	r3, r3
 801018a:	f1c9 0900 	rsblt	r9, r9, #0
 801018e:	6023      	strlt	r3, [r4, #0]
 8010190:	bfb4      	ite	lt
 8010192:	f04f 36ff 	movlt.w	r6, #4294967295
 8010196:	2601      	movge	r6, #1
 8010198:	2a00      	cmp	r2, #0
 801019a:	4617      	mov	r7, r2
 801019c:	da04      	bge.n	80101a8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 801019e:	6823      	ldr	r3, [r4, #0]
 80101a0:	425b      	negs	r3, r3
 80101a2:	4257      	negs	r7, r2
 80101a4:	4276      	negs	r6, r6
 80101a6:	6023      	str	r3, [r4, #0]
 80101a8:	2d00      	cmp	r5, #0
 80101aa:	4638      	mov	r0, r7
 80101ac:	bfba      	itte	lt
 80101ae:	426d      	neglt	r5, r5
 80101b0:	f04f 38ff 	movlt.w	r8, #4294967295
 80101b4:	f04f 0801 	movge.w	r8, #1
 80101b8:	f7ff ff64 	bl	8010084 <_ZN8touchgfx16TouchCalibration4clzuEm>
 80101bc:	ab03      	add	r3, sp, #12
 80101be:	e9cd 5300 	strd	r5, r3, [sp]
 80101c2:	463a      	mov	r2, r7
 80101c4:	4603      	mov	r3, r0
 80101c6:	4648      	mov	r0, r9
 80101c8:	f7ff ff7a 	bl	80100c0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80101cc:	6823      	ldr	r3, [r4, #0]
 80101ce:	9a03      	ldr	r2, [sp, #12]
 80101d0:	4546      	cmp	r6, r8
 80101d2:	441a      	add	r2, r3
 80101d4:	fb92 f3f5 	sdiv	r3, r2, r5
 80101d8:	4418      	add	r0, r3
 80101da:	bf18      	it	ne
 80101dc:	4240      	negne	r0, r0
 80101de:	fb05 2313 	mls	r3, r5, r3, r2
 80101e2:	1c72      	adds	r2, r6, #1
 80101e4:	6023      	str	r3, [r4, #0]
 80101e6:	d105      	bne.n	80101f4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 80101e8:	2b00      	cmp	r3, #0
 80101ea:	f1c3 0200 	rsb	r2, r3, #0
 80101ee:	db0b      	blt.n	8010208 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 80101f0:	6022      	str	r2, [r4, #0]
 80101f2:	e006      	b.n	8010202 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 80101f4:	2e01      	cmp	r6, #1
 80101f6:	d104      	bne.n	8010202 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 80101f8:	2b00      	cmp	r3, #0
 80101fa:	da02      	bge.n	8010202 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 80101fc:	442b      	add	r3, r5
 80101fe:	3801      	subs	r0, #1
 8010200:	6023      	str	r3, [r4, #0]
 8010202:	b005      	add	sp, #20
 8010204:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010208:	3801      	subs	r0, #1
 801020a:	1b52      	subs	r2, r2, r5
 801020c:	e7f0      	b.n	80101f0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>
	...

08010210 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 8010210:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8010214:	4c1c      	ldr	r4, [pc, #112]	; (8010288 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 8010216:	6807      	ldr	r7, [r0, #0]
 8010218:	69a3      	ldr	r3, [r4, #24]
 801021a:	4605      	mov	r5, r0
 801021c:	b92b      	cbnz	r3, 801022a <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 801021e:	6840      	ldr	r0, [r0, #4]
 8010220:	e9c5 7000 	strd	r7, r0, [r5]
 8010224:	b004      	add	sp, #16
 8010226:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801022a:	68a2      	ldr	r2, [r4, #8]
 801022c:	6820      	ldr	r0, [r4, #0]
 801022e:	ae04      	add	r6, sp, #16
 8010230:	f04f 0802 	mov.w	r8, #2
 8010234:	fb93 f1f8 	sdiv	r1, r3, r8
 8010238:	440a      	add	r2, r1
 801023a:	f846 2d04 	str.w	r2, [r6, #-4]!
 801023e:	69e1      	ldr	r1, [r4, #28]
 8010240:	9600      	str	r6, [sp, #0]
 8010242:	463a      	mov	r2, r7
 8010244:	f7ff ff97 	bl	8010176 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8010248:	69a3      	ldr	r3, [r4, #24]
 801024a:	686a      	ldr	r2, [r5, #4]
 801024c:	6a21      	ldr	r1, [r4, #32]
 801024e:	9600      	str	r6, [sp, #0]
 8010250:	4607      	mov	r7, r0
 8010252:	6860      	ldr	r0, [r4, #4]
 8010254:	f7ff ff8f 	bl	8010176 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8010258:	6962      	ldr	r2, [r4, #20]
 801025a:	69a3      	ldr	r3, [r4, #24]
 801025c:	fb93 f8f8 	sdiv	r8, r3, r8
 8010260:	4442      	add	r2, r8
 8010262:	9203      	str	r2, [sp, #12]
 8010264:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8010266:	682a      	ldr	r2, [r5, #0]
 8010268:	9600      	str	r6, [sp, #0]
 801026a:	4407      	add	r7, r0
 801026c:	68e0      	ldr	r0, [r4, #12]
 801026e:	f7ff ff82 	bl	8010176 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8010272:	9600      	str	r6, [sp, #0]
 8010274:	4680      	mov	r8, r0
 8010276:	69a3      	ldr	r3, [r4, #24]
 8010278:	686a      	ldr	r2, [r5, #4]
 801027a:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 801027c:	6920      	ldr	r0, [r4, #16]
 801027e:	f7ff ff7a 	bl	8010176 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8010282:	4440      	add	r0, r8
 8010284:	e7cc      	b.n	8010220 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 8010286:	bf00      	nop
 8010288:	20015370 	.word	0x20015370

0801028c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 801028c:	4b07      	ldr	r3, [pc, #28]	; (80102ac <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 801028e:	781b      	ldrb	r3, [r3, #0]
 8010290:	2b01      	cmp	r3, #1
 8010292:	d109      	bne.n	80102a8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 8010294:	f9b1 3000 	ldrsh.w	r3, [r1]
 8010298:	f9b0 2000 	ldrsh.w	r2, [r0]
 801029c:	8003      	strh	r3, [r0, #0]
 801029e:	4b04      	ldr	r3, [pc, #16]	; (80102b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 80102a0:	881b      	ldrh	r3, [r3, #0]
 80102a2:	3b01      	subs	r3, #1
 80102a4:	1a9b      	subs	r3, r3, r2
 80102a6:	800b      	strh	r3, [r1, #0]
 80102a8:	4770      	bx	lr
 80102aa:	bf00      	nop
 80102ac:	20015354 	.word	0x20015354
 80102b0:	20015350 	.word	0x20015350

080102b4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 80102b4:	b510      	push	{r4, lr}
 80102b6:	4b07      	ldr	r3, [pc, #28]	; (80102d4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 80102b8:	781b      	ldrb	r3, [r3, #0]
 80102ba:	2b01      	cmp	r3, #1
 80102bc:	d108      	bne.n	80102d0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 80102be:	4b06      	ldr	r3, [pc, #24]	; (80102d8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 80102c0:	880c      	ldrh	r4, [r1, #0]
 80102c2:	881b      	ldrh	r3, [r3, #0]
 80102c4:	f9b0 2000 	ldrsh.w	r2, [r0]
 80102c8:	3b01      	subs	r3, #1
 80102ca:	1b1b      	subs	r3, r3, r4
 80102cc:	8003      	strh	r3, [r0, #0]
 80102ce:	800a      	strh	r2, [r1, #0]
 80102d0:	bd10      	pop	{r4, pc}
 80102d2:	bf00      	nop
 80102d4:	20015354 	.word	0x20015354
 80102d8:	20015350 	.word	0x20015350

080102dc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 80102dc:	b510      	push	{r4, lr}
 80102de:	4b0a      	ldr	r3, [pc, #40]	; (8010308 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 80102e0:	781b      	ldrb	r3, [r3, #0]
 80102e2:	2b01      	cmp	r3, #1
 80102e4:	d10e      	bne.n	8010304 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 80102e6:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 80102ea:	8843      	ldrh	r3, [r0, #2]
 80102ec:	f9b0 4000 	ldrsh.w	r4, [r0]
 80102f0:	8044      	strh	r4, [r0, #2]
 80102f2:	18ca      	adds	r2, r1, r3
 80102f4:	4b05      	ldr	r3, [pc, #20]	; (801030c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 80102f6:	881b      	ldrh	r3, [r3, #0]
 80102f8:	1a9b      	subs	r3, r3, r2
 80102fa:	8003      	strh	r3, [r0, #0]
 80102fc:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8010300:	80c3      	strh	r3, [r0, #6]
 8010302:	8081      	strh	r1, [r0, #4]
 8010304:	bd10      	pop	{r4, pc}
 8010306:	bf00      	nop
 8010308:	20015354 	.word	0x20015354
 801030c:	20015350 	.word	0x20015350

08010310 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 8010310:	4b08      	ldr	r3, [pc, #32]	; (8010334 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 8010312:	781b      	ldrb	r3, [r3, #0]
 8010314:	2b01      	cmp	r3, #1
 8010316:	d10c      	bne.n	8010332 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 8010318:	8803      	ldrh	r3, [r0, #0]
 801031a:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 801031e:	8842      	ldrh	r2, [r0, #2]
 8010320:	8002      	strh	r2, [r0, #0]
 8010322:	185a      	adds	r2, r3, r1
 8010324:	4b04      	ldr	r3, [pc, #16]	; (8010338 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 8010326:	881b      	ldrh	r3, [r3, #0]
 8010328:	1a9b      	subs	r3, r3, r2
 801032a:	8043      	strh	r3, [r0, #2]
 801032c:	88c3      	ldrh	r3, [r0, #6]
 801032e:	8083      	strh	r3, [r0, #4]
 8010330:	80c1      	strh	r1, [r0, #6]
 8010332:	4770      	bx	lr
 8010334:	20015354 	.word	0x20015354
 8010338:	20015350 	.word	0x20015350

0801033c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 801033c:	b510      	push	{r4, lr}
 801033e:	4b07      	ldr	r3, [pc, #28]	; (801035c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 8010340:	781b      	ldrb	r3, [r3, #0]
 8010342:	2b01      	cmp	r3, #1
 8010344:	d108      	bne.n	8010358 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 8010346:	f9b1 3000 	ldrsh.w	r3, [r1]
 801034a:	f9b0 4000 	ldrsh.w	r4, [r0]
 801034e:	8003      	strh	r3, [r0, #0]
 8010350:	8893      	ldrh	r3, [r2, #4]
 8010352:	3b01      	subs	r3, #1
 8010354:	1b1b      	subs	r3, r3, r4
 8010356:	800b      	strh	r3, [r1, #0]
 8010358:	bd10      	pop	{r4, pc}
 801035a:	bf00      	nop
 801035c:	20015354 	.word	0x20015354

08010360 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 8010360:	b510      	push	{r4, lr}
 8010362:	4b0a      	ldr	r3, [pc, #40]	; (801038c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 8010364:	781b      	ldrb	r3, [r3, #0]
 8010366:	2b01      	cmp	r3, #1
 8010368:	460a      	mov	r2, r1
 801036a:	d10d      	bne.n	8010388 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 801036c:	8881      	ldrh	r1, [r0, #4]
 801036e:	8803      	ldrh	r3, [r0, #0]
 8010370:	440b      	add	r3, r1
 8010372:	4601      	mov	r1, r0
 8010374:	3b01      	subs	r3, #1
 8010376:	f821 3b02 	strh.w	r3, [r1], #2
 801037a:	f7ff ffdf 	bl	801033c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 801037e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8010382:	88c2      	ldrh	r2, [r0, #6]
 8010384:	8082      	strh	r2, [r0, #4]
 8010386:	80c3      	strh	r3, [r0, #6]
 8010388:	bd10      	pop	{r4, pc}
 801038a:	bf00      	nop
 801038c:	20015354 	.word	0x20015354

08010390 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 8010390:	b570      	push	{r4, r5, r6, lr}
 8010392:	4c0b      	ldr	r4, [pc, #44]	; (80103c0 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 8010394:	2300      	movs	r3, #0
 8010396:	4605      	mov	r5, r0
 8010398:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 801039c:	6820      	ldr	r0, [r4, #0]
 801039e:	460e      	mov	r6, r1
 80103a0:	b110      	cbz	r0, 80103a8 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x18>
 80103a2:	6803      	ldr	r3, [r0, #0]
 80103a4:	695b      	ldr	r3, [r3, #20]
 80103a6:	4798      	blx	r3
 80103a8:	6026      	str	r6, [r4, #0]
 80103aa:	6833      	ldr	r3, [r6, #0]
 80103ac:	4630      	mov	r0, r6
 80103ae:	68db      	ldr	r3, [r3, #12]
 80103b0:	4798      	blx	r3
 80103b2:	682b      	ldr	r3, [r5, #0]
 80103b4:	4628      	mov	r0, r5
 80103b6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80103b8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80103bc:	4718      	bx	r3
 80103be:	bf00      	nop
 80103c0:	200153a0 	.word	0x200153a0

080103c4 <_ZN8touchgfx11Application13requestRedrawEv>:
 80103c4:	4b06      	ldr	r3, [pc, #24]	; (80103e0 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 80103c6:	f9b3 2000 	ldrsh.w	r2, [r3]
 80103ca:	4b06      	ldr	r3, [pc, #24]	; (80103e4 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 80103cc:	f8a0 2130 	strh.w	r2, [r0, #304]	; 0x130
 80103d0:	f9b3 3000 	ldrsh.w	r3, [r3]
 80103d4:	f8a0 3132 	strh.w	r3, [r0, #306]	; 0x132
 80103d8:	2100      	movs	r1, #0
 80103da:	f8c0 112c 	str.w	r1, [r0, #300]	; 0x12c
 80103de:	4770      	bx	lr
 80103e0:	20015350 	.word	0x20015350
 80103e4:	20015352 	.word	0x20015352

080103e8 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 80103e8:	4b03      	ldr	r3, [pc, #12]	; (80103f8 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 80103ea:	6818      	ldr	r0, [r3, #0]
 80103ec:	b110      	cbz	r0, 80103f4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 80103ee:	6803      	ldr	r3, [r0, #0]
 80103f0:	699b      	ldr	r3, [r3, #24]
 80103f2:	4718      	bx	r3
 80103f4:	4770      	bx	lr
 80103f6:	bf00      	nop
 80103f8:	200153a0 	.word	0x200153a0

080103fc <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 80103fc:	4770      	bx	lr
	...

08010400 <_ZN8touchgfx11Application4drawEv>:
 8010400:	b507      	push	{r0, r1, r2, lr}
 8010402:	4b09      	ldr	r3, [pc, #36]	; (8010428 <_ZN8touchgfx11Application4drawEv+0x28>)
 8010404:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010408:	4b08      	ldr	r3, [pc, #32]	; (801042c <_ZN8touchgfx11Application4drawEv+0x2c>)
 801040a:	f8ad 2004 	strh.w	r2, [sp, #4]
 801040e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8010412:	f8ad 3006 	strh.w	r3, [sp, #6]
 8010416:	6803      	ldr	r3, [r0, #0]
 8010418:	2100      	movs	r1, #0
 801041a:	9100      	str	r1, [sp, #0]
 801041c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801041e:	4669      	mov	r1, sp
 8010420:	4798      	blx	r3
 8010422:	b003      	add	sp, #12
 8010424:	f85d fb04 	ldr.w	pc, [sp], #4
 8010428:	20015350 	.word	0x20015350
 801042c:	20015352 	.word	0x20015352

08010430 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 8010430:	4b03      	ldr	r3, [pc, #12]	; (8010440 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 8010432:	6818      	ldr	r0, [r3, #0]
 8010434:	b110      	cbz	r0, 801043c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 8010436:	6803      	ldr	r3, [r0, #0]
 8010438:	69db      	ldr	r3, [r3, #28]
 801043a:	4718      	bx	r3
 801043c:	4770      	bx	lr
 801043e:	bf00      	nop
 8010440:	200153a0 	.word	0x200153a0

08010444 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 8010444:	4b03      	ldr	r3, [pc, #12]	; (8010454 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 8010446:	6818      	ldr	r0, [r3, #0]
 8010448:	b110      	cbz	r0, 8010450 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 801044a:	6803      	ldr	r3, [r0, #0]
 801044c:	6a1b      	ldr	r3, [r3, #32]
 801044e:	4718      	bx	r3
 8010450:	4770      	bx	lr
 8010452:	bf00      	nop
 8010454:	200153a0 	.word	0x200153a0

08010458 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 8010458:	2300      	movs	r3, #0
 801045a:	f8a0 30e8 	strh.w	r3, [r0, #232]	; 0xe8
 801045e:	4770      	bx	lr

08010460 <_ZN8touchgfx11Application14handleKeyEventEh>:
 8010460:	4b03      	ldr	r3, [pc, #12]	; (8010470 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 8010462:	6818      	ldr	r0, [r3, #0]
 8010464:	b110      	cbz	r0, 801046c <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 8010466:	6803      	ldr	r3, [r0, #0]
 8010468:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801046a:	4718      	bx	r3
 801046c:	4770      	bx	lr
 801046e:	bf00      	nop
 8010470:	200153a0 	.word	0x200153a0

08010474 <_ZN8touchgfx11Application15handleTickEventEv>:
 8010474:	b570      	push	{r4, r5, r6, lr}
 8010476:	4d32      	ldr	r5, [pc, #200]	; (8010540 <_ZN8touchgfx11Application15handleTickEventEv+0xcc>)
 8010478:	4604      	mov	r4, r0
 801047a:	6828      	ldr	r0, [r5, #0]
 801047c:	b140      	cbz	r0, 8010490 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 801047e:	7a03      	ldrb	r3, [r0, #8]
 8010480:	b933      	cbnz	r3, 8010490 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8010482:	f884 3134 	strb.w	r3, [r4, #308]	; 0x134
 8010486:	6803      	ldr	r3, [r0, #0]
 8010488:	689b      	ldr	r3, [r3, #8]
 801048a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801048e:	4718      	bx	r3
 8010490:	f894 3134 	ldrb.w	r3, [r4, #308]	; 0x134
 8010494:	b97b      	cbnz	r3, 80104b6 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8010496:	b170      	cbz	r0, 80104b6 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8010498:	7a03      	ldrb	r3, [r0, #8]
 801049a:	b163      	cbz	r3, 80104b6 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 801049c:	4b29      	ldr	r3, [pc, #164]	; (8010544 <_ZN8touchgfx11Application15handleTickEventEv+0xd0>)
 801049e:	6818      	ldr	r0, [r3, #0]
 80104a0:	b110      	cbz	r0, 80104a8 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 80104a2:	6803      	ldr	r3, [r0, #0]
 80104a4:	691b      	ldr	r3, [r3, #16]
 80104a6:	4798      	blx	r3
 80104a8:	6828      	ldr	r0, [r5, #0]
 80104aa:	6803      	ldr	r3, [r0, #0]
 80104ac:	68db      	ldr	r3, [r3, #12]
 80104ae:	4798      	blx	r3
 80104b0:	2301      	movs	r3, #1
 80104b2:	f884 3134 	strb.w	r3, [r4, #308]	; 0x134
 80104b6:	2500      	movs	r5, #0
 80104b8:	f8b4 0084 	ldrh.w	r0, [r4, #132]	; 0x84
 80104bc:	42a8      	cmp	r0, r5
 80104be:	dd0c      	ble.n	80104da <_ZN8touchgfx11Application15handleTickEventEv+0x66>
 80104c0:	1963      	adds	r3, r4, r5
 80104c2:	f893 2088 	ldrb.w	r2, [r3, #136]	; 0x88
 80104c6:	b132      	cbz	r2, 80104d6 <_ZN8touchgfx11Application15handleTickEventEv+0x62>
 80104c8:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 80104cc:	4413      	add	r3, r2
 80104ce:	6858      	ldr	r0, [r3, #4]
 80104d0:	6803      	ldr	r3, [r0, #0]
 80104d2:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80104d4:	4798      	blx	r3
 80104d6:	3501      	adds	r5, #1
 80104d8:	e7ee      	b.n	80104b8 <_ZN8touchgfx11Application15handleTickEventEv+0x44>
 80104da:	2300      	movs	r3, #0
 80104dc:	461a      	mov	r2, r3
 80104de:	4298      	cmp	r0, r3
 80104e0:	d015      	beq.n	801050e <_ZN8touchgfx11Application15handleTickEventEv+0x9a>
 80104e2:	18e1      	adds	r1, r4, r3
 80104e4:	f891 5088 	ldrb.w	r5, [r1, #136]	; 0x88
 80104e8:	b16d      	cbz	r5, 8010506 <_ZN8touchgfx11Application15handleTickEventEv+0x92>
 80104ea:	429a      	cmp	r2, r3
 80104ec:	d00a      	beq.n	8010504 <_ZN8touchgfx11Application15handleTickEventEv+0x90>
 80104ee:	eb03 0643 	add.w	r6, r3, r3, lsl #1
 80104f2:	4431      	add	r1, r6
 80104f4:	684e      	ldr	r6, [r1, #4]
 80104f6:	b291      	uxth	r1, r2
 80104f8:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 80104fc:	604e      	str	r6, [r1, #4]
 80104fe:	18a1      	adds	r1, r4, r2
 8010500:	f881 5088 	strb.w	r5, [r1, #136]	; 0x88
 8010504:	3201      	adds	r2, #1
 8010506:	3301      	adds	r3, #1
 8010508:	e7e9      	b.n	80104de <_ZN8touchgfx11Application15handleTickEventEv+0x6a>
 801050a:	f8a4 3084 	strh.w	r3, [r4, #132]	; 0x84
 801050e:	f8b4 5084 	ldrh.w	r5, [r4, #132]	; 0x84
 8010512:	4295      	cmp	r5, r2
 8010514:	dd0d      	ble.n	8010532 <_ZN8touchgfx11Application15handleTickEventEv+0xbe>
 8010516:	1e6b      	subs	r3, r5, #1
 8010518:	b29b      	uxth	r3, r3
 801051a:	eb04 0183 	add.w	r1, r4, r3, lsl #2
 801051e:	4618      	mov	r0, r3
 8010520:	3104      	adds	r1, #4
 8010522:	4285      	cmp	r5, r0
 8010524:	ddf1      	ble.n	801050a <_ZN8touchgfx11Application15handleTickEventEv+0x96>
 8010526:	f851 6f04 	ldr.w	r6, [r1, #4]!
 801052a:	f841 6c04 	str.w	r6, [r1, #-4]
 801052e:	3001      	adds	r0, #1
 8010530:	e7f7      	b.n	8010522 <_ZN8touchgfx11Application15handleTickEventEv+0xae>
 8010532:	4b04      	ldr	r3, [pc, #16]	; (8010544 <_ZN8touchgfx11Application15handleTickEventEv+0xd0>)
 8010534:	6818      	ldr	r0, [r3, #0]
 8010536:	b110      	cbz	r0, 801053e <_ZN8touchgfx11Application15handleTickEventEv+0xca>
 8010538:	6803      	ldr	r3, [r0, #0]
 801053a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801053c:	e7a5      	b.n	801048a <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 801053e:	bd70      	pop	{r4, r5, r6, pc}
 8010540:	200153a4 	.word	0x200153a4
 8010544:	200153a0 	.word	0x200153a0

08010548 <_ZN8touchgfx11ApplicationD1Ev>:
 8010548:	4770      	bx	lr

0801054a <_ZN8touchgfx11ApplicationD0Ev>:
 801054a:	b510      	push	{r4, lr}
 801054c:	f44f 719c 	mov.w	r1, #312	; 0x138
 8010550:	4604      	mov	r4, r0
 8010552:	f00f fbb7 	bl	801fcc4 <_ZdlPvj>
 8010556:	4620      	mov	r0, r4
 8010558:	bd10      	pop	{r4, pc}

0801055a <_ZNK8touchgfx4Rect9intersectERKS0_>:
 801055a:	b510      	push	{r4, lr}
 801055c:	f9b1 4000 	ldrsh.w	r4, [r1]
 8010560:	888a      	ldrh	r2, [r1, #4]
 8010562:	f9b0 3000 	ldrsh.w	r3, [r0]
 8010566:	4422      	add	r2, r4
 8010568:	b212      	sxth	r2, r2
 801056a:	4293      	cmp	r3, r2
 801056c:	da15      	bge.n	801059a <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 801056e:	8882      	ldrh	r2, [r0, #4]
 8010570:	4413      	add	r3, r2
 8010572:	b21b      	sxth	r3, r3
 8010574:	429c      	cmp	r4, r3
 8010576:	da10      	bge.n	801059a <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8010578:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 801057c:	88c9      	ldrh	r1, [r1, #6]
 801057e:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8010582:	4419      	add	r1, r3
 8010584:	b209      	sxth	r1, r1
 8010586:	428a      	cmp	r2, r1
 8010588:	da07      	bge.n	801059a <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 801058a:	88c0      	ldrh	r0, [r0, #6]
 801058c:	4410      	add	r0, r2
 801058e:	b200      	sxth	r0, r0
 8010590:	4283      	cmp	r3, r0
 8010592:	bfac      	ite	ge
 8010594:	2000      	movge	r0, #0
 8010596:	2001      	movlt	r0, #1
 8010598:	bd10      	pop	{r4, pc}
 801059a:	2000      	movs	r0, #0
 801059c:	e7fc      	b.n	8010598 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0801059e <_ZN8touchgfx4Rect10restrictToEss>:
 801059e:	f9b0 3000 	ldrsh.w	r3, [r0]
 80105a2:	2b00      	cmp	r3, #0
 80105a4:	b510      	push	{r4, lr}
 80105a6:	da04      	bge.n	80105b2 <_ZN8touchgfx4Rect10restrictToEss+0x14>
 80105a8:	8884      	ldrh	r4, [r0, #4]
 80105aa:	4423      	add	r3, r4
 80105ac:	8083      	strh	r3, [r0, #4]
 80105ae:	2300      	movs	r3, #0
 80105b0:	8003      	strh	r3, [r0, #0]
 80105b2:	f9b0 4000 	ldrsh.w	r4, [r0]
 80105b6:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80105ba:	1b09      	subs	r1, r1, r4
 80105bc:	428b      	cmp	r3, r1
 80105be:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 80105c2:	bfc8      	it	gt
 80105c4:	8081      	strhgt	r1, [r0, #4]
 80105c6:	2b00      	cmp	r3, #0
 80105c8:	da04      	bge.n	80105d4 <_ZN8touchgfx4Rect10restrictToEss+0x36>
 80105ca:	88c1      	ldrh	r1, [r0, #6]
 80105cc:	440b      	add	r3, r1
 80105ce:	80c3      	strh	r3, [r0, #6]
 80105d0:	2300      	movs	r3, #0
 80105d2:	8043      	strh	r3, [r0, #2]
 80105d4:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 80105d8:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 80105dc:	1a52      	subs	r2, r2, r1
 80105de:	4293      	cmp	r3, r2
 80105e0:	bfc8      	it	gt
 80105e2:	80c2      	strhgt	r2, [r0, #6]
 80105e4:	bd10      	pop	{r4, pc}
	...

080105e8 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 80105e8:	b510      	push	{r4, lr}
 80105ea:	4b10      	ldr	r3, [pc, #64]	; (801062c <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 80105ec:	f9b3 2000 	ldrsh.w	r2, [r3]
 80105f0:	4b0f      	ldr	r3, [pc, #60]	; (8010630 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 80105f2:	460c      	mov	r4, r1
 80105f4:	4620      	mov	r0, r4
 80105f6:	f9b3 1000 	ldrsh.w	r1, [r3]
 80105fa:	f7ff ffd0 	bl	801059e <_ZN8touchgfx4Rect10restrictToEss>
 80105fe:	4b0d      	ldr	r3, [pc, #52]	; (8010634 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 8010600:	6818      	ldr	r0, [r3, #0]
 8010602:	b190      	cbz	r0, 801062a <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 8010604:	6803      	ldr	r3, [r0, #0]
 8010606:	4621      	mov	r1, r4
 8010608:	689b      	ldr	r3, [r3, #8]
 801060a:	4798      	blx	r3
 801060c:	4b0a      	ldr	r3, [pc, #40]	; (8010638 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 801060e:	6818      	ldr	r0, [r3, #0]
 8010610:	b118      	cbz	r0, 801061a <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 8010612:	6803      	ldr	r3, [r0, #0]
 8010614:	4621      	mov	r1, r4
 8010616:	689b      	ldr	r3, [r3, #8]
 8010618:	4798      	blx	r3
 801061a:	4b08      	ldr	r3, [pc, #32]	; (801063c <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 801061c:	6818      	ldr	r0, [r3, #0]
 801061e:	6803      	ldr	r3, [r0, #0]
 8010620:	4621      	mov	r1, r4
 8010622:	69db      	ldr	r3, [r3, #28]
 8010624:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010628:	4718      	bx	r3
 801062a:	bd10      	pop	{r4, pc}
 801062c:	20015352 	.word	0x20015352
 8010630:	20015350 	.word	0x20015350
 8010634:	200153a0 	.word	0x200153a0
 8010638:	2001539c 	.word	0x2001539c
 801063c:	2001535c 	.word	0x2001535c

08010640 <_ZNK8touchgfx4Rect8includesERKS0_>:
 8010640:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010642:	4606      	mov	r6, r0
 8010644:	4608      	mov	r0, r1
 8010646:	460f      	mov	r7, r1
 8010648:	f7f9 fec3 	bl	800a3d2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801064c:	b9e8      	cbnz	r0, 801068a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801064e:	f9b7 5000 	ldrsh.w	r5, [r7]
 8010652:	f9b6 4000 	ldrsh.w	r4, [r6]
 8010656:	42a5      	cmp	r5, r4
 8010658:	db17      	blt.n	801068a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801065a:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 801065e:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 8010662:	429a      	cmp	r2, r3
 8010664:	db11      	blt.n	801068a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8010666:	88b9      	ldrh	r1, [r7, #4]
 8010668:	440d      	add	r5, r1
 801066a:	88b1      	ldrh	r1, [r6, #4]
 801066c:	440c      	add	r4, r1
 801066e:	b22d      	sxth	r5, r5
 8010670:	b224      	sxth	r4, r4
 8010672:	42a5      	cmp	r5, r4
 8010674:	dc09      	bgt.n	801068a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8010676:	88f8      	ldrh	r0, [r7, #6]
 8010678:	4410      	add	r0, r2
 801067a:	88f2      	ldrh	r2, [r6, #6]
 801067c:	4413      	add	r3, r2
 801067e:	b200      	sxth	r0, r0
 8010680:	b21b      	sxth	r3, r3
 8010682:	4298      	cmp	r0, r3
 8010684:	bfcc      	ite	gt
 8010686:	2000      	movgt	r0, #0
 8010688:	2001      	movle	r0, #1
 801068a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0801068c <_ZN8touchgfx11Application11getInstanceEv>:
 801068c:	4b01      	ldr	r3, [pc, #4]	; (8010694 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 801068e:	6818      	ldr	r0, [r3, #0]
 8010690:	4770      	bx	lr
 8010692:	bf00      	nop
 8010694:	200153b0 	.word	0x200153b0

08010698 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
 8010698:	2300      	movs	r3, #0
 801069a:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 801069e:	f100 0288 	add.w	r2, r0, #136	; 0x88
 80106a2:	30a8      	adds	r0, #168	; 0xa8
 80106a4:	f802 3b01 	strb.w	r3, [r2], #1
 80106a8:	4282      	cmp	r2, r0
 80106aa:	d1fb      	bne.n	80106a4 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv+0xc>
 80106ac:	4770      	bx	lr

080106ae <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 80106ae:	4603      	mov	r3, r0
 80106b0:	f100 0140 	add.w	r1, r0, #64	; 0x40
 80106b4:	2200      	movs	r2, #0
 80106b6:	801a      	strh	r2, [r3, #0]
 80106b8:	805a      	strh	r2, [r3, #2]
 80106ba:	809a      	strh	r2, [r3, #4]
 80106bc:	80da      	strh	r2, [r3, #6]
 80106be:	3308      	adds	r3, #8
 80106c0:	428b      	cmp	r3, r1
 80106c2:	d1f8      	bne.n	80106b6 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 80106c4:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 80106c8:	4770      	bx	lr
	...

080106cc <_ZN8touchgfx11ApplicationC1Ev>:
 80106cc:	b570      	push	{r4, r5, r6, lr}
 80106ce:	4b19      	ldr	r3, [pc, #100]	; (8010734 <_ZN8touchgfx11ApplicationC1Ev+0x68>)
 80106d0:	6003      	str	r3, [r0, #0]
 80106d2:	2500      	movs	r5, #0
 80106d4:	4604      	mov	r4, r0
 80106d6:	f8a0 5084 	strh.w	r5, [r0, #132]	; 0x84
 80106da:	30a8      	adds	r0, #168	; 0xa8
 80106dc:	f7ff ffe7 	bl	80106ae <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80106e0:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 80106e4:	f7ff ffe3 	bl	80106ae <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80106e8:	f8a4 512c 	strh.w	r5, [r4, #300]	; 0x12c
 80106ec:	f8a4 512e 	strh.w	r5, [r4, #302]	; 0x12e
 80106f0:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 80106f4:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 80106f8:	f884 5134 	strb.w	r5, [r4, #308]	; 0x134
 80106fc:	490e      	ldr	r1, [pc, #56]	; (8010738 <_ZN8touchgfx11ApplicationC1Ev+0x6c>)
 80106fe:	480f      	ldr	r0, [pc, #60]	; (801073c <_ZN8touchgfx11ApplicationC1Ev+0x70>)
 8010700:	4e0f      	ldr	r6, [pc, #60]	; (8010740 <_ZN8touchgfx11ApplicationC1Ev+0x74>)
 8010702:	f00e fec3 	bl	801f48c <CRC_Lock>
 8010706:	4b0f      	ldr	r3, [pc, #60]	; (8010744 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 8010708:	b158      	cbz	r0, 8010722 <_ZN8touchgfx11ApplicationC1Ev+0x56>
 801070a:	801d      	strh	r5, [r3, #0]
 801070c:	4a0e      	ldr	r2, [pc, #56]	; (8010748 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 801070e:	2300      	movs	r3, #0
 8010710:	6013      	str	r3, [r2, #0]
 8010712:	4a0e      	ldr	r2, [pc, #56]	; (801074c <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 8010714:	6033      	str	r3, [r6, #0]
 8010716:	4620      	mov	r0, r4
 8010718:	6013      	str	r3, [r2, #0]
 801071a:	f7ff ffbd 	bl	8010698 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
 801071e:	4620      	mov	r0, r4
 8010720:	bd70      	pop	{r4, r5, r6, pc}
 8010722:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8010726:	2002      	movs	r0, #2
 8010728:	801a      	strh	r2, [r3, #0]
 801072a:	6030      	str	r0, [r6, #0]
 801072c:	f001 fae8 	bl	8011d00 <_ZN8touchgfx6Screen4drawEv>
 8010730:	e7ec      	b.n	801070c <_ZN8touchgfx11ApplicationC1Ev+0x40>
 8010732:	bf00      	nop
 8010734:	08023740 	.word	0x08023740
 8010738:	b5e8b5cd 	.word	0xb5e8b5cd
 801073c:	f407a5c2 	.word	0xf407a5c2
 8010740:	200153a0 	.word	0x200153a0
 8010744:	20000088 	.word	0x20000088
 8010748:	200153b0 	.word	0x200153b0
 801074c:	200153a4 	.word	0x200153a4

08010750 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 8010750:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 8010754:	3b01      	subs	r3, #1
 8010756:	b29b      	uxth	r3, r3
 8010758:	428b      	cmp	r3, r1
 801075a:	b510      	push	{r4, lr}
 801075c:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 8010760:	d908      	bls.n	8010774 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 8010762:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8010766:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 801076a:	681a      	ldr	r2, [r3, #0]
 801076c:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 8010770:	685a      	ldr	r2, [r3, #4]
 8010772:	6062      	str	r2, [r4, #4]
 8010774:	bd10      	pop	{r4, pc}
	...

08010778 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 8010778:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801077c:	4b94      	ldr	r3, [pc, #592]	; (80109d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>)
 801077e:	b08f      	sub	sp, #60	; 0x3c
 8010780:	ac0a      	add	r4, sp, #40	; 0x28
 8010782:	e884 0006 	stmia.w	r4, {r1, r2}
 8010786:	f9b3 2000 	ldrsh.w	r2, [r3]
 801078a:	4b92      	ldr	r3, [pc, #584]	; (80109d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x25c>)
 801078c:	4683      	mov	fp, r0
 801078e:	f9b3 1000 	ldrsh.w	r1, [r3]
 8010792:	4620      	mov	r0, r4
 8010794:	f7ff ff03 	bl	801059e <_ZN8touchgfx4Rect10restrictToEss>
 8010798:	4620      	mov	r0, r4
 801079a:	f7f9 fe1a 	bl	800a3d2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801079e:	2800      	cmp	r0, #0
 80107a0:	d16a      	bne.n	8010878 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80107a2:	9403      	str	r4, [sp, #12]
 80107a4:	f8bb 50e8 	ldrh.w	r5, [fp, #232]	; 0xe8
 80107a8:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 80107ac:	eb0b 06c5 	add.w	r6, fp, r5, lsl #3
 80107b0:	2400      	movs	r4, #0
 80107b2:	9301      	str	r3, [sp, #4]
 80107b4:	36a0      	adds	r6, #160	; 0xa0
 80107b6:	42a5      	cmp	r5, r4
 80107b8:	d00d      	beq.n	80107d6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e>
 80107ba:	eba6 01c4 	sub.w	r1, r6, r4, lsl #3
 80107be:	9803      	ldr	r0, [sp, #12]
 80107c0:	f7ff ff3e 	bl	8010640 <_ZNK8touchgfx4Rect8includesERKS0_>
 80107c4:	b128      	cbz	r0, 80107d2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a>
 80107c6:	1e69      	subs	r1, r5, #1
 80107c8:	1b09      	subs	r1, r1, r4
 80107ca:	b289      	uxth	r1, r1
 80107cc:	9801      	ldr	r0, [sp, #4]
 80107ce:	f7ff ffbf 	bl	8010750 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80107d2:	3401      	adds	r4, #1
 80107d4:	e7ef      	b.n	80107b6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e>
 80107d6:	f8bb 70e8 	ldrh.w	r7, [fp, #232]	; 0xe8
 80107da:	9704      	str	r7, [sp, #16]
 80107dc:	1e7b      	subs	r3, r7, #1
 80107de:	9302      	str	r3, [sp, #8]
 80107e0:	eb0b 0ac7 	add.w	sl, fp, r7, lsl #3
 80107e4:	2400      	movs	r4, #0
 80107e6:	4655      	mov	r5, sl
 80107e8:	9705      	str	r7, [sp, #20]
 80107ea:	4626      	mov	r6, r4
 80107ec:	9b05      	ldr	r3, [sp, #20]
 80107ee:	2b00      	cmp	r3, #0
 80107f0:	d078      	beq.n	80108e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x16c>
 80107f2:	9903      	ldr	r1, [sp, #12]
 80107f4:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 80107f8:	f7ff feaf 	bl	801055a <_ZNK8touchgfx4Rect9intersectERKS0_>
 80107fc:	b360      	cbz	r0, 8010858 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 80107fe:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 8010802:	f9b5 c0a0 	ldrsh.w	ip, [r5, #160]	; 0xa0
 8010806:	f9bd 902a 	ldrsh.w	r9, [sp, #42]	; 0x2a
 801080a:	f9b5 80a2 	ldrsh.w	r8, [r5, #162]	; 0xa2
 801080e:	45e6      	cmp	lr, ip
 8010810:	db35      	blt.n	801087e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8010812:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8010816:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 801081a:	4472      	add	r2, lr
 801081c:	4463      	add	r3, ip
 801081e:	b212      	sxth	r2, r2
 8010820:	b21b      	sxth	r3, r3
 8010822:	429a      	cmp	r2, r3
 8010824:	dc2b      	bgt.n	801087e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8010826:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 801082a:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 801082e:	fa1f f288 	uxth.w	r2, r8
 8010832:	4413      	add	r3, r2
 8010834:	b29b      	uxth	r3, r3
 8010836:	45c1      	cmp	r9, r8
 8010838:	fa0f fe83 	sxth.w	lr, r3
 801083c:	fa1f fc89 	uxth.w	ip, r9
 8010840:	db0f      	blt.n	8010862 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 8010842:	eba3 030c 	sub.w	r3, r3, ip
 8010846:	1ac9      	subs	r1, r1, r3
 8010848:	b209      	sxth	r1, r1
 801084a:	2900      	cmp	r1, #0
 801084c:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8010850:	dd12      	ble.n	8010878 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8010852:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 8010856:	4604      	mov	r4, r0
 8010858:	9b05      	ldr	r3, [sp, #20]
 801085a:	3b01      	subs	r3, #1
 801085c:	9305      	str	r3, [sp, #20]
 801085e:	3d08      	subs	r5, #8
 8010860:	e7c4      	b.n	80107ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x74>
 8010862:	4461      	add	r1, ip
 8010864:	b209      	sxth	r1, r1
 8010866:	4571      	cmp	r1, lr
 8010868:	dc3a      	bgt.n	80108e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 801086a:	eba2 020c 	sub.w	r2, r2, ip
 801086e:	b212      	sxth	r2, r2
 8010870:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 8010874:	2a00      	cmp	r2, #0
 8010876:	dcee      	bgt.n	8010856 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8010878:	b00f      	add	sp, #60	; 0x3c
 801087a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801087e:	45c1      	cmp	r9, r8
 8010880:	db2e      	blt.n	80108e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 8010882:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 8010886:	4499      	add	r9, r3
 8010888:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 801088c:	4498      	add	r8, r3
 801088e:	fa0f f989 	sxth.w	r9, r9
 8010892:	fa0f f888 	sxth.w	r8, r8
 8010896:	45c1      	cmp	r9, r8
 8010898:	dc22      	bgt.n	80108e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 801089a:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 801089e:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 80108a2:	fa1f f28c 	uxth.w	r2, ip
 80108a6:	4413      	add	r3, r2
 80108a8:	b29b      	uxth	r3, r3
 80108aa:	45e6      	cmp	lr, ip
 80108ac:	fa1f f88e 	uxth.w	r8, lr
 80108b0:	fa0f f983 	sxth.w	r9, r3
 80108b4:	db0a      	blt.n	80108cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x154>
 80108b6:	eba3 0308 	sub.w	r3, r3, r8
 80108ba:	1ac9      	subs	r1, r1, r3
 80108bc:	b209      	sxth	r1, r1
 80108be:	2900      	cmp	r1, #0
 80108c0:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 80108c4:	ddd8      	ble.n	8010878 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80108c6:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 80108ca:	e7c4      	b.n	8010856 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 80108cc:	4441      	add	r1, r8
 80108ce:	b209      	sxth	r1, r1
 80108d0:	4549      	cmp	r1, r9
 80108d2:	dc05      	bgt.n	80108e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 80108d4:	eba2 0208 	sub.w	r2, r2, r8
 80108d8:	b212      	sxth	r2, r2
 80108da:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 80108de:	e7c9      	b.n	8010874 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 80108e0:	4606      	mov	r6, r0
 80108e2:	e7b9      	b.n	8010858 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 80108e4:	2c00      	cmp	r4, #0
 80108e6:	f47f af7d 	bne.w	80107e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c>
 80108ea:	2e00      	cmp	r6, #0
 80108ec:	f000 81e1 	beq.w	8010cb2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 80108f0:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 80108f4:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 80108f8:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 80108fc:	b2b9      	uxth	r1, r7
 80108fe:	9105      	str	r1, [sp, #20]
 8010900:	9805      	ldr	r0, [sp, #20]
 8010902:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8010906:	4401      	add	r1, r0
 8010908:	b2b3      	uxth	r3, r6
 801090a:	b289      	uxth	r1, r1
 801090c:	441a      	add	r2, r3
 801090e:	9106      	str	r1, [sp, #24]
 8010910:	b292      	uxth	r2, r2
 8010912:	f9bd 9018 	ldrsh.w	r9, [sp, #24]
 8010916:	fa0f f882 	sxth.w	r8, r2
 801091a:	4655      	mov	r5, sl
 801091c:	e9cd 2307 	strd	r2, r3, [sp, #28]
 8010920:	9b04      	ldr	r3, [sp, #16]
 8010922:	2b00      	cmp	r3, #0
 8010924:	d058      	beq.n	80109d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x260>
 8010926:	9903      	ldr	r1, [sp, #12]
 8010928:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 801092c:	f7ff fe15 	bl	801055a <_ZNK8touchgfx4Rect9intersectERKS0_>
 8010930:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 8010934:	b1d8      	cbz	r0, 801096e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 8010936:	f9b5 e0a0 	ldrsh.w	lr, [r5, #160]	; 0xa0
 801093a:	f9b5 10a2 	ldrsh.w	r1, [r5, #162]	; 0xa2
 801093e:	4576      	cmp	r6, lr
 8010940:	dc26      	bgt.n	8010990 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x218>
 8010942:	f8b5 c0a4 	ldrh.w	ip, [r5, #164]	; 0xa4
 8010946:	44f4      	add	ip, lr
 8010948:	fa0f fc8c 	sxth.w	ip, ip
 801094c:	45e0      	cmp	r8, ip
 801094e:	db1f      	blt.n	8010990 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x218>
 8010950:	428f      	cmp	r7, r1
 8010952:	fa1f fc81 	uxth.w	ip, r1
 8010956:	f8b5 10a6 	ldrh.w	r1, [r5, #166]	; 0xa6
 801095a:	dc0f      	bgt.n	801097c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x204>
 801095c:	9806      	ldr	r0, [sp, #24]
 801095e:	f8a5 90a2 	strh.w	r9, [r5, #162]	; 0xa2
 8010962:	eba0 0c0c 	sub.w	ip, r0, ip
 8010966:	eba1 010c 	sub.w	r1, r1, ip
 801096a:	f8a5 10a6 	strh.w	r1, [r5, #166]	; 0xa6
 801096e:	4620      	mov	r0, r4
 8010970:	9904      	ldr	r1, [sp, #16]
 8010972:	3901      	subs	r1, #1
 8010974:	9104      	str	r1, [sp, #16]
 8010976:	3d08      	subs	r5, #8
 8010978:	4604      	mov	r4, r0
 801097a:	e7cf      	b.n	801091c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a4>
 801097c:	4461      	add	r1, ip
 801097e:	b209      	sxth	r1, r1
 8010980:	4549      	cmp	r1, r9
 8010982:	dcf5      	bgt.n	8010970 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 8010984:	9905      	ldr	r1, [sp, #20]
 8010986:	eba1 0c0c 	sub.w	ip, r1, ip
 801098a:	f8a5 c0a6 	strh.w	ip, [r5, #166]	; 0xa6
 801098e:	e7ee      	b.n	801096e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 8010990:	428f      	cmp	r7, r1
 8010992:	dced      	bgt.n	8010970 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 8010994:	f8b5 c0a6 	ldrh.w	ip, [r5, #166]	; 0xa6
 8010998:	4461      	add	r1, ip
 801099a:	b209      	sxth	r1, r1
 801099c:	4589      	cmp	r9, r1
 801099e:	dbe7      	blt.n	8010970 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 80109a0:	4576      	cmp	r6, lr
 80109a2:	fa1f fc8e 	uxth.w	ip, lr
 80109a6:	f8b5 10a4 	ldrh.w	r1, [r5, #164]	; 0xa4
 80109aa:	dc08      	bgt.n	80109be <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x246>
 80109ac:	eba2 0c0c 	sub.w	ip, r2, ip
 80109b0:	eba1 010c 	sub.w	r1, r1, ip
 80109b4:	f8a5 80a0 	strh.w	r8, [r5, #160]	; 0xa0
 80109b8:	f8a5 10a4 	strh.w	r1, [r5, #164]	; 0xa4
 80109bc:	e7d7      	b.n	801096e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 80109be:	4461      	add	r1, ip
 80109c0:	b209      	sxth	r1, r1
 80109c2:	4588      	cmp	r8, r1
 80109c4:	dbd4      	blt.n	8010970 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 80109c6:	eba3 0c0c 	sub.w	ip, r3, ip
 80109ca:	f8a5 c0a4 	strh.w	ip, [r5, #164]	; 0xa4
 80109ce:	e7ce      	b.n	801096e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 80109d0:	20015352 	.word	0x20015352
 80109d4:	20015350 	.word	0x20015350
 80109d8:	2c00      	cmp	r4, #0
 80109da:	f000 816a 	beq.w	8010cb2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 80109de:	9b02      	ldr	r3, [sp, #8]
 80109e0:	3301      	adds	r3, #1
 80109e2:	f000 8166 	beq.w	8010cb2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 80109e6:	f10a 04a0 	add.w	r4, sl, #160	; 0xa0
 80109ea:	4621      	mov	r1, r4
 80109ec:	9803      	ldr	r0, [sp, #12]
 80109ee:	f7ff fe27 	bl	8010640 <_ZNK8touchgfx4Rect8includesERKS0_>
 80109f2:	b120      	cbz	r0, 80109fe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x286>
 80109f4:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 80109f8:	9801      	ldr	r0, [sp, #4]
 80109fa:	f7ff fea9 	bl	8010750 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80109fe:	9903      	ldr	r1, [sp, #12]
 8010a00:	4620      	mov	r0, r4
 8010a02:	f7ff fdaa 	bl	801055a <_ZNK8touchgfx4Rect9intersectERKS0_>
 8010a06:	2800      	cmp	r0, #0
 8010a08:	f000 809b 	beq.w	8010b42 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ca>
 8010a0c:	f9ba 00a0 	ldrsh.w	r0, [sl, #160]	; 0xa0
 8010a10:	f9ba 30a4 	ldrsh.w	r3, [sl, #164]	; 0xa4
 8010a14:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 8010a18:	9309      	str	r3, [sp, #36]	; 0x24
 8010a1a:	b281      	uxth	r1, r0
 8010a1c:	eb01 0c03 	add.w	ip, r1, r3
 8010a20:	fa1f f98c 	uxth.w	r9, ip
 8010a24:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 8010a28:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 8010a2c:	f9ba 20a2 	ldrsh.w	r2, [sl, #162]	; 0xa2
 8010a30:	b2ab      	uxth	r3, r5
 8010a32:	eb03 040c 	add.w	r4, r3, ip
 8010a36:	b2a4      	uxth	r4, r4
 8010a38:	9405      	str	r4, [sp, #20]
 8010a3a:	f9bd 4014 	ldrsh.w	r4, [sp, #20]
 8010a3e:	9404      	str	r4, [sp, #16]
 8010a40:	4285      	cmp	r5, r0
 8010a42:	f8bb 40e8 	ldrh.w	r4, [fp, #232]	; 0xe8
 8010a46:	f340 809a 	ble.w	8010b7e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x406>
 8010a4a:	1a5b      	subs	r3, r3, r1
 8010a4c:	b29b      	uxth	r3, r3
 8010a4e:	4596      	cmp	lr, r2
 8010a50:	fa0f f589 	sxth.w	r5, r9
 8010a54:	b21e      	sxth	r6, r3
 8010a56:	dd2e      	ble.n	8010ab6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x33e>
 8010a58:	9f02      	ldr	r7, [sp, #8]
 8010a5a:	f8bd 002e 	ldrh.w	r0, [sp, #46]	; 0x2e
 8010a5e:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 8010a62:	9f04      	ldr	r7, [sp, #16]
 8010a64:	1b7f      	subs	r7, r7, r5
 8010a66:	f8b8 50ae 	ldrh.w	r5, [r8, #174]	; 0xae
 8010a6a:	fa1f fe8e 	uxth.w	lr, lr
 8010a6e:	b292      	uxth	r2, r2
 8010a70:	ebae 0102 	sub.w	r1, lr, r2
 8010a74:	4486      	add	lr, r0
 8010a76:	442a      	add	r2, r5
 8010a78:	b289      	uxth	r1, r1
 8010a7a:	fa0f fe8e 	sxth.w	lr, lr
 8010a7e:	b212      	sxth	r2, r2
 8010a80:	b20c      	sxth	r4, r1
 8010a82:	ebae 0202 	sub.w	r2, lr, r2
 8010a86:	4367      	muls	r7, r4
 8010a88:	4372      	muls	r2, r6
 8010a8a:	4297      	cmp	r7, r2
 8010a8c:	db09      	blt.n	8010aa2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x32a>
 8010a8e:	f8b8 20a8 	ldrh.w	r2, [r8, #168]	; 0xa8
 8010a92:	f8a8 40ae 	strh.w	r4, [r8, #174]	; 0xae
 8010a96:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8010a9a:	449c      	add	ip, r3
 8010a9c:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8010aa0:	e680      	b.n	80107a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8010aa2:	4401      	add	r1, r0
 8010aa4:	f8b8 30aa 	ldrh.w	r3, [r8, #170]	; 0xaa
 8010aa8:	f8a8 60ac 	strh.w	r6, [r8, #172]	; 0xac
 8010aac:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8010ab0:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8010ab4:	e676      	b.n	80107a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8010ab6:	9f04      	ldr	r7, [sp, #16]
 8010ab8:	42bd      	cmp	r5, r7
 8010aba:	da27      	bge.n	8010b0c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x394>
 8010abc:	9902      	ldr	r1, [sp, #8]
 8010abe:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 8010ac2:	eb0b 00c1 	add.w	r0, fp, r1, lsl #3
 8010ac6:	eb04 010e 	add.w	r1, r4, lr
 8010aca:	fa1f f881 	uxth.w	r8, r1
 8010ace:	f8b0 10ae 	ldrh.w	r1, [r0, #174]	; 0xae
 8010ad2:	4411      	add	r1, r2
 8010ad4:	eba1 0108 	sub.w	r1, r1, r8
 8010ad8:	b289      	uxth	r1, r1
 8010ada:	fa0f f988 	sxth.w	r9, r8
 8010ade:	eba2 020e 	sub.w	r2, r2, lr
 8010ae2:	fa0f f881 	sxth.w	r8, r1
 8010ae6:	1b7f      	subs	r7, r7, r5
 8010ae8:	4372      	muls	r2, r6
 8010aea:	fb08 f707 	mul.w	r7, r8, r7
 8010aee:	42ba      	cmp	r2, r7
 8010af0:	dc06      	bgt.n	8010b00 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 8010af2:	f8a0 90aa 	strh.w	r9, [r0, #170]	; 0xaa
 8010af6:	f8a0 80ae 	strh.w	r8, [r0, #174]	; 0xae
 8010afa:	f8b0 20a8 	ldrh.w	r2, [r0, #168]	; 0xa8
 8010afe:	e7ca      	b.n	8010a96 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 8010b00:	f8a0 60ac 	strh.w	r6, [r0, #172]	; 0xac
 8010b04:	4421      	add	r1, r4
 8010b06:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8010b0a:	e64b      	b.n	80107a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8010b0c:	9d05      	ldr	r5, [sp, #20]
 8010b0e:	eba9 0505 	sub.w	r5, r9, r5
 8010b12:	b2ad      	uxth	r5, r5
 8010b14:	2c06      	cmp	r4, #6
 8010b16:	fa0f fe85 	sxth.w	lr, r5
 8010b1a:	d818      	bhi.n	8010b4e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3d6>
 8010b1c:	9b04      	ldr	r3, [sp, #16]
 8010b1e:	f8aa 30a0 	strh.w	r3, [sl, #160]	; 0xa0
 8010b22:	1c63      	adds	r3, r4, #1
 8010b24:	f9ba 10a6 	ldrsh.w	r1, [sl, #166]	; 0xa6
 8010b28:	f8aa e0a4 	strh.w	lr, [sl, #164]	; 0xa4
 8010b2c:	f8ab 30e8 	strh.w	r3, [fp, #232]	; 0xe8
 8010b30:	9b01      	ldr	r3, [sp, #4]
 8010b32:	9d01      	ldr	r5, [sp, #4]
 8010b34:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8010b38:	f825 0034 	strh.w	r0, [r5, r4, lsl #3]
 8010b3c:	805a      	strh	r2, [r3, #2]
 8010b3e:	809e      	strh	r6, [r3, #4]
 8010b40:	80d9      	strh	r1, [r3, #6]
 8010b42:	9b02      	ldr	r3, [sp, #8]
 8010b44:	3b01      	subs	r3, #1
 8010b46:	9302      	str	r3, [sp, #8]
 8010b48:	f1aa 0a08 	sub.w	sl, sl, #8
 8010b4c:	e747      	b.n	80109de <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x266>
 8010b4e:	9a02      	ldr	r2, [sp, #8]
 8010b50:	45b6      	cmp	lr, r6
 8010b52:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8010b56:	db0d      	blt.n	8010b74 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3fc>
 8010b58:	449c      	add	ip, r3
 8010b5a:	fa1f fc8c 	uxth.w	ip, ip
 8010b5e:	445a      	add	r2, fp
 8010b60:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8010b64:	448c      	add	ip, r1
 8010b66:	f8ad 0028 	strh.w	r0, [sp, #40]	; 0x28
 8010b6a:	f8a2 c0a8 	strh.w	ip, [r2, #168]	; 0xa8
 8010b6e:	f8a2 e0ac 	strh.w	lr, [r2, #172]	; 0xac
 8010b72:	e617      	b.n	80107a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8010b74:	445a      	add	r2, fp
 8010b76:	44ac      	add	ip, r5
 8010b78:	f8a2 60ac 	strh.w	r6, [r2, #172]	; 0xac
 8010b7c:	e78e      	b.n	8010a9c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x324>
 8010b7e:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 8010b82:	fa1f f18e 	uxth.w	r1, lr
 8010b86:	eb01 0806 	add.w	r8, r1, r6
 8010b8a:	b293      	uxth	r3, r2
 8010b8c:	fa1f f888 	uxth.w	r8, r8
 8010b90:	9306      	str	r3, [sp, #24]
 8010b92:	fa0f f388 	sxth.w	r3, r8
 8010b96:	9307      	str	r3, [sp, #28]
 8010b98:	9f06      	ldr	r7, [sp, #24]
 8010b9a:	f8ba 30a6 	ldrh.w	r3, [sl, #166]	; 0xa6
 8010b9e:	443b      	add	r3, r7
 8010ba0:	b29b      	uxth	r3, r3
 8010ba2:	4596      	cmp	lr, r2
 8010ba4:	9308      	str	r3, [sp, #32]
 8010ba6:	da25      	bge.n	8010bf4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x47c>
 8010ba8:	9905      	ldr	r1, [sp, #20]
 8010baa:	eba3 0308 	sub.w	r3, r3, r8
 8010bae:	eba9 0401 	sub.w	r4, r9, r1
 8010bb2:	b2a4      	uxth	r4, r4
 8010bb4:	b29b      	uxth	r3, r3
 8010bb6:	fa0f f984 	sxth.w	r9, r4
 8010bba:	b219      	sxth	r1, r3
 8010bbc:	eba2 020e 	sub.w	r2, r2, lr
 8010bc0:	1b40      	subs	r0, r0, r5
 8010bc2:	fb09 f202 	mul.w	r2, r9, r2
 8010bc6:	4348      	muls	r0, r1
 8010bc8:	4282      	cmp	r2, r0
 8010bca:	9a02      	ldr	r2, [sp, #8]
 8010bcc:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8010bd0:	445a      	add	r2, fp
 8010bd2:	dc06      	bgt.n	8010be2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46a>
 8010bd4:	9b07      	ldr	r3, [sp, #28]
 8010bd6:	f8a2 10ae 	strh.w	r1, [r2, #174]	; 0xae
 8010bda:	f8a2 30aa 	strh.w	r3, [r2, #170]	; 0xaa
 8010bde:	44a4      	add	ip, r4
 8010be0:	e75c      	b.n	8010a9c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x324>
 8010be2:	9904      	ldr	r1, [sp, #16]
 8010be4:	f8a2 90ac 	strh.w	r9, [r2, #172]	; 0xac
 8010be8:	f8a2 10a8 	strh.w	r1, [r2, #168]	; 0xa8
 8010bec:	4433      	add	r3, r6
 8010bee:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8010bf2:	e5d7      	b.n	80107a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8010bf4:	9f06      	ldr	r7, [sp, #24]
 8010bf6:	9b04      	ldr	r3, [sp, #16]
 8010bf8:	1bc9      	subs	r1, r1, r7
 8010bfa:	fa0f f789 	sxth.w	r7, r9
 8010bfe:	b289      	uxth	r1, r1
 8010c00:	429f      	cmp	r7, r3
 8010c02:	fa0f fe81 	sxth.w	lr, r1
 8010c06:	dd22      	ble.n	8010c4e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4d6>
 8010c08:	9a05      	ldr	r2, [sp, #20]
 8010c0a:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8010c0e:	1b40      	subs	r0, r0, r5
 8010c10:	eba9 0202 	sub.w	r2, r9, r2
 8010c14:	9d07      	ldr	r5, [sp, #28]
 8010c16:	b292      	uxth	r2, r2
 8010c18:	eba5 0a03 	sub.w	sl, r5, r3
 8010c1c:	b214      	sxth	r4, r2
 8010c1e:	9b02      	ldr	r3, [sp, #8]
 8010c20:	fb0e f000 	mul.w	r0, lr, r0
 8010c24:	fb04 fa0a 	mul.w	sl, r4, sl
 8010c28:	00db      	lsls	r3, r3, #3
 8010c2a:	4550      	cmp	r0, sl
 8010c2c:	445b      	add	r3, fp
 8010c2e:	db03      	blt.n	8010c38 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c0>
 8010c30:	f8a3 e0ae 	strh.w	lr, [r3, #174]	; 0xae
 8010c34:	4494      	add	ip, r2
 8010c36:	e731      	b.n	8010a9c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x324>
 8010c38:	9a04      	ldr	r2, [sp, #16]
 8010c3a:	f8a3 20a8 	strh.w	r2, [r3, #168]	; 0xa8
 8010c3e:	f8a3 40ac 	strh.w	r4, [r3, #172]	; 0xac
 8010c42:	f8b3 30aa 	ldrh.w	r3, [r3, #170]	; 0xaa
 8010c46:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8010c4a:	4431      	add	r1, r6
 8010c4c:	e75b      	b.n	8010b06 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38e>
 8010c4e:	9b08      	ldr	r3, [sp, #32]
 8010c50:	eba3 0308 	sub.w	r3, r3, r8
 8010c54:	b29b      	uxth	r3, r3
 8010c56:	2c06      	cmp	r4, #6
 8010c58:	b21d      	sxth	r5, r3
 8010c5a:	d813      	bhi.n	8010c84 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x50c>
 8010c5c:	9b07      	ldr	r3, [sp, #28]
 8010c5e:	f8aa 30a2 	strh.w	r3, [sl, #162]	; 0xa2
 8010c62:	1c63      	adds	r3, r4, #1
 8010c64:	f8aa 50a6 	strh.w	r5, [sl, #166]	; 0xa6
 8010c68:	f8ab 30e8 	strh.w	r3, [fp, #232]	; 0xe8
 8010c6c:	9b01      	ldr	r3, [sp, #4]
 8010c6e:	9901      	ldr	r1, [sp, #4]
 8010c70:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8010c74:	f821 0034 	strh.w	r0, [r1, r4, lsl #3]
 8010c78:	805a      	strh	r2, [r3, #2]
 8010c7a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8010c7c:	809a      	strh	r2, [r3, #4]
 8010c7e:	f8a3 e006 	strh.w	lr, [r3, #6]
 8010c82:	e75e      	b.n	8010b42 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ca>
 8010c84:	9802      	ldr	r0, [sp, #8]
 8010c86:	4575      	cmp	r5, lr
 8010c88:	ea4f 00c0 	mov.w	r0, r0, lsl #3
 8010c8c:	db0d      	blt.n	8010caa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x532>
 8010c8e:	4431      	add	r1, r6
 8010c90:	9b06      	ldr	r3, [sp, #24]
 8010c92:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 8010c96:	b289      	uxth	r1, r1
 8010c98:	4458      	add	r0, fp
 8010c9a:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8010c9e:	4419      	add	r1, r3
 8010ca0:	f8a0 10aa 	strh.w	r1, [r0, #170]	; 0xaa
 8010ca4:	f8a0 50ae 	strh.w	r5, [r0, #174]	; 0xae
 8010ca8:	e57c      	b.n	80107a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8010caa:	4458      	add	r0, fp
 8010cac:	f8a0 e0ae 	strh.w	lr, [r0, #174]	; 0xae
 8010cb0:	e79c      	b.n	8010bec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x474>
 8010cb2:	f8bb 60e8 	ldrh.w	r6, [fp, #232]	; 0xe8
 8010cb6:	2e07      	cmp	r6, #7
 8010cb8:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 8010cbc:	d812      	bhi.n	8010ce4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56c>
 8010cbe:	1c75      	adds	r5, r6, #1
 8010cc0:	f8ab 50e8 	strh.w	r5, [fp, #232]	; 0xe8
 8010cc4:	9d01      	ldr	r5, [sp, #4]
 8010cc6:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 8010cca:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 8010cce:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8010cd2:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 8010cd6:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 8010cda:	442c      	add	r4, r5
 8010cdc:	8061      	strh	r1, [r4, #2]
 8010cde:	80a2      	strh	r2, [r4, #4]
 8010ce0:	80e3      	strh	r3, [r4, #6]
 8010ce2:	e5c9      	b.n	8010878 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8010ce4:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 8010ce8:	3e01      	subs	r6, #1
 8010cea:	445c      	add	r4, fp
 8010cec:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 8010cf0:	f04f 37ff 	mov.w	r7, #4294967295
 8010cf4:	2500      	movs	r5, #0
 8010cf6:	9305      	str	r3, [sp, #20]
 8010cf8:	f9b4 30a4 	ldrsh.w	r3, [r4, #164]	; 0xa4
 8010cfc:	9302      	str	r3, [sp, #8]
 8010cfe:	1e72      	subs	r2, r6, #1
 8010d00:	f9b4 30a6 	ldrsh.w	r3, [r4, #166]	; 0xa6
 8010d04:	9304      	str	r3, [sp, #16]
 8010d06:	4691      	mov	r9, r2
 8010d08:	f104 03a0 	add.w	r3, r4, #160	; 0xa0
 8010d0c:	f1b9 3fff 	cmp.w	r9, #4294967295
 8010d10:	bf14      	ite	ne
 8010d12:	9905      	ldrne	r1, [sp, #20]
 8010d14:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 8010d18:	6818      	ldr	r0, [r3, #0]
 8010d1a:	9207      	str	r2, [sp, #28]
 8010d1c:	bf18      	it	ne
 8010d1e:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 8010d22:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8010d26:	f8be 1006 	ldrh.w	r1, [lr, #6]
 8010d2a:	f8be 8004 	ldrh.w	r8, [lr, #4]
 8010d2e:	9306      	str	r3, [sp, #24]
 8010d30:	fb18 f801 	smulbb	r8, r8, r1
 8010d34:	6859      	ldr	r1, [r3, #4]
 8010d36:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8010d3a:	4671      	mov	r1, lr
 8010d3c:	a80c      	add	r0, sp, #48	; 0x30
 8010d3e:	f7fb f86d 	bl	800be1c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8010d42:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 8010d46:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 8010d4a:	9b04      	ldr	r3, [sp, #16]
 8010d4c:	9a02      	ldr	r2, [sp, #8]
 8010d4e:	fb10 f001 	smulbb	r0, r0, r1
 8010d52:	fb02 8803 	mla	r8, r2, r3, r8
 8010d56:	eba0 0108 	sub.w	r1, r0, r8
 8010d5a:	f04f 0c08 	mov.w	ip, #8
 8010d5e:	fb90 f0fc 	sdiv	r0, r0, ip
 8010d62:	4288      	cmp	r0, r1
 8010d64:	dc20      	bgt.n	8010da8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x630>
 8010d66:	4551      	cmp	r1, sl
 8010d68:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8010d6c:	da03      	bge.n	8010d76 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fe>
 8010d6e:	b1d9      	cbz	r1, 8010da8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x630>
 8010d70:	468a      	mov	sl, r1
 8010d72:	464f      	mov	r7, r9
 8010d74:	4635      	mov	r5, r6
 8010d76:	f109 39ff 	add.w	r9, r9, #4294967295
 8010d7a:	f119 0f02 	cmn.w	r9, #2
 8010d7e:	d1c5      	bne.n	8010d0c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8010d80:	4616      	mov	r6, r2
 8010d82:	3201      	adds	r2, #1
 8010d84:	f1a4 0408 	sub.w	r4, r4, #8
 8010d88:	d1b6      	bne.n	8010cf8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x580>
 8010d8a:	9b01      	ldr	r3, [sp, #4]
 8010d8c:	b2ac      	uxth	r4, r5
 8010d8e:	00ed      	lsls	r5, r5, #3
 8010d90:	1958      	adds	r0, r3, r5
 8010d92:	1c7b      	adds	r3, r7, #1
 8010d94:	d10b      	bne.n	8010dae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x636>
 8010d96:	4601      	mov	r1, r0
 8010d98:	9803      	ldr	r0, [sp, #12]
 8010d9a:	f7fb f83f 	bl	800be1c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8010d9e:	4621      	mov	r1, r4
 8010da0:	9801      	ldr	r0, [sp, #4]
 8010da2:	f7ff fcd5 	bl	8010750 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8010da6:	e4fd      	b.n	80107a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8010da8:	464f      	mov	r7, r9
 8010daa:	4635      	mov	r5, r6
 8010dac:	e7ed      	b.n	8010d8a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x612>
 8010dae:	9b01      	ldr	r3, [sp, #4]
 8010db0:	00ff      	lsls	r7, r7, #3
 8010db2:	19d9      	adds	r1, r3, r7
 8010db4:	f7fb f832 	bl	800be1c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8010db8:	9b03      	ldr	r3, [sp, #12]
 8010dba:	cb03      	ldmia	r3!, {r0, r1}
 8010dbc:	445f      	add	r7, fp
 8010dbe:	445d      	add	r5, fp
 8010dc0:	f8c7 00a8 	str.w	r0, [r7, #168]	; 0xa8
 8010dc4:	f8c7 10ac 	str.w	r1, [r7, #172]	; 0xac
 8010dc8:	f855 0fa8 	ldr.w	r0, [r5, #168]!
 8010dcc:	9b03      	ldr	r3, [sp, #12]
 8010dce:	6869      	ldr	r1, [r5, #4]
 8010dd0:	c303      	stmia	r3!, {r0, r1}
 8010dd2:	e7e4      	b.n	8010d9e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x626>

08010dd4 <_ZN8touchgfx11Application10invalidateEv>:
 8010dd4:	4b09      	ldr	r3, [pc, #36]	; (8010dfc <_ZN8touchgfx11Application10invalidateEv+0x28>)
 8010dd6:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010dda:	4b09      	ldr	r3, [pc, #36]	; (8010e00 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 8010ddc:	b082      	sub	sp, #8
 8010dde:	f9b3 3000 	ldrsh.w	r3, [r3]
 8010de2:	f8ad 3006 	strh.w	r3, [sp, #6]
 8010de6:	2100      	movs	r1, #0
 8010de8:	9100      	str	r1, [sp, #0]
 8010dea:	f8ad 2004 	strh.w	r2, [sp, #4]
 8010dee:	ab02      	add	r3, sp, #8
 8010df0:	e913 0006 	ldmdb	r3, {r1, r2}
 8010df4:	b002      	add	sp, #8
 8010df6:	f7ff bcbf 	b.w	8010778 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8010dfa:	bf00      	nop
 8010dfc:	20015350 	.word	0x20015350
 8010e00:	20015352 	.word	0x20015352

08010e04 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 8010e04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010e08:	f500 7696 	add.w	r6, r0, #300	; 0x12c
 8010e0c:	b09b      	sub	sp, #108	; 0x6c
 8010e0e:	4604      	mov	r4, r0
 8010e10:	4630      	mov	r0, r6
 8010e12:	f7f9 fade 	bl	800a3d2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010e16:	4605      	mov	r5, r0
 8010e18:	b940      	cbnz	r0, 8010e2c <_ZN8touchgfx11Application15drawCachedAreasEv+0x28>
 8010e1a:	e896 0006 	ldmia.w	r6, {r1, r2}
 8010e1e:	4620      	mov	r0, r4
 8010e20:	f7ff fcaa 	bl	8010778 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8010e24:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
 8010e28:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 8010e2c:	4bc9      	ldr	r3, [pc, #804]	; (8011154 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8010e2e:	681b      	ldr	r3, [r3, #0]
 8010e30:	2b00      	cmp	r3, #0
 8010e32:	d03e      	beq.n	8010eb2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xae>
 8010e34:	4dc8      	ldr	r5, [pc, #800]	; (8011158 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 8010e36:	4628      	mov	r0, r5
 8010e38:	f7f9 facb 	bl	800a3d2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010e3c:	4606      	mov	r6, r0
 8010e3e:	2800      	cmp	r0, #0
 8010e40:	d137      	bne.n	8010eb2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xae>
 8010e42:	4628      	mov	r0, r5
 8010e44:	f7ff fa4a 	bl	80102dc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8010e48:	6829      	ldr	r1, [r5, #0]
 8010e4a:	686a      	ldr	r2, [r5, #4]
 8010e4c:	4620      	mov	r0, r4
 8010e4e:	f7ff fc93 	bl	8010778 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8010e52:	802e      	strh	r6, [r5, #0]
 8010e54:	806e      	strh	r6, [r5, #2]
 8010e56:	80ae      	strh	r6, [r5, #4]
 8010e58:	80ee      	strh	r6, [r5, #6]
 8010e5a:	ae09      	add	r6, sp, #36	; 0x24
 8010e5c:	4630      	mov	r0, r6
 8010e5e:	f7ff fc26 	bl	80106ae <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8010e62:	4abe      	ldr	r2, [pc, #760]	; (801115c <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 8010e64:	f8b4 70e8 	ldrh.w	r7, [r4, #232]	; 0xe8
 8010e68:	8815      	ldrh	r5, [r2, #0]
 8010e6a:	9202      	str	r2, [sp, #8]
 8010e6c:	462b      	mov	r3, r5
 8010e6e:	f104 00a8 	add.w	r0, r4, #168	; 0xa8
 8010e72:	429f      	cmp	r7, r3
 8010e74:	d924      	bls.n	8010ec0 <_ZN8touchgfx11Application15drawCachedAreasEv+0xbc>
 8010e76:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 8010e7a:	2907      	cmp	r1, #7
 8010e7c:	d816      	bhi.n	8010eac <_ZN8touchgfx11Application15drawCachedAreasEv+0xa8>
 8010e7e:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 8010e82:	f930 8033 	ldrsh.w	r8, [r0, r3, lsl #3]
 8010e86:	f9b2 9002 	ldrsh.w	r9, [r2, #2]
 8010e8a:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 8010e8e:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 8010e92:	1c4a      	adds	r2, r1, #1
 8010e94:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 8010e98:	eb06 02c1 	add.w	r2, r6, r1, lsl #3
 8010e9c:	f826 8031 	strh.w	r8, [r6, r1, lsl #3]
 8010ea0:	f8a2 9002 	strh.w	r9, [r2, #2]
 8010ea4:	f8a2 e004 	strh.w	lr, [r2, #4]
 8010ea8:	f8a2 c006 	strh.w	ip, [r2, #6]
 8010eac:	3301      	adds	r3, #1
 8010eae:	b29b      	uxth	r3, r3
 8010eb0:	e7df      	b.n	8010e72 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6e>
 8010eb2:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 8010eb6:	2b00      	cmp	r3, #0
 8010eb8:	d1cf      	bne.n	8010e5a <_ZN8touchgfx11Application15drawCachedAreasEv+0x56>
 8010eba:	b01b      	add	sp, #108	; 0x6c
 8010ebc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010ec0:	462f      	mov	r7, r5
 8010ec2:	f8b4 312a 	ldrh.w	r3, [r4, #298]	; 0x12a
 8010ec6:	42bb      	cmp	r3, r7
 8010ec8:	d90b      	bls.n	8010ee2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xde>
 8010eca:	eb04 03c7 	add.w	r3, r4, r7, lsl #3
 8010ece:	4620      	mov	r0, r4
 8010ed0:	f8d3 10ea 	ldr.w	r1, [r3, #234]	; 0xea
 8010ed4:	f8d3 20ee 	ldr.w	r2, [r3, #238]	; 0xee
 8010ed8:	3701      	adds	r7, #1
 8010eda:	f7ff fc4d 	bl	8010778 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8010ede:	b2bf      	uxth	r7, r7
 8010ee0:	e7ef      	b.n	8010ec2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xbe>
 8010ee2:	4a9f      	ldr	r2, [pc, #636]	; (8011160 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 8010ee4:	6813      	ldr	r3, [r2, #0]
 8010ee6:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 8010eea:	2b01      	cmp	r3, #1
 8010eec:	4690      	mov	r8, r2
 8010eee:	f040 80e6 	bne.w	80110be <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ba>
 8010ef2:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 8010ef6:	f8b4 70e8 	ldrh.w	r7, [r4, #232]	; 0xe8
 8010efa:	4629      	mov	r1, r5
 8010efc:	33aa      	adds	r3, #170	; 0xaa
 8010efe:	2500      	movs	r5, #0
 8010f00:	428f      	cmp	r7, r1
 8010f02:	f103 0308 	add.w	r3, r3, #8
 8010f06:	dd0a      	ble.n	8010f1e <_ZN8touchgfx11Application15drawCachedAreasEv+0x11a>
 8010f08:	f833 2c08 	ldrh.w	r2, [r3, #-8]
 8010f0c:	f833 0c04 	ldrh.w	r0, [r3, #-4]
 8010f10:	4402      	add	r2, r0
 8010f12:	b212      	sxth	r2, r2
 8010f14:	4295      	cmp	r5, r2
 8010f16:	bfb8      	it	lt
 8010f18:	4615      	movlt	r5, r2
 8010f1a:	3101      	adds	r1, #1
 8010f1c:	e7f0      	b.n	8010f00 <_ZN8touchgfx11Application15drawCachedAreasEv+0xfc>
 8010f1e:	4b91      	ldr	r3, [pc, #580]	; (8011164 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 8010f20:	f8df b23c 	ldr.w	fp, [pc, #572]	; 8011160 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>
 8010f24:	881b      	ldrh	r3, [r3, #0]
 8010f26:	2b0f      	cmp	r3, #15
 8010f28:	bf88      	it	hi
 8010f2a:	ea4f 0ad3 	movhi.w	sl, r3, lsr #3
 8010f2e:	f04f 0300 	mov.w	r3, #0
 8010f32:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8010f36:	bf98      	it	ls
 8010f38:	f04f 0a01 	movls.w	sl, #1
 8010f3c:	46d8      	mov	r8, fp
 8010f3e:	f8bd 701a 	ldrh.w	r7, [sp, #26]
 8010f42:	f8bd 0016 	ldrh.w	r0, [sp, #22]
 8010f46:	4438      	add	r0, r7
 8010f48:	b207      	sxth	r7, r0
 8010f4a:	f8db 0000 	ldr.w	r0, [fp]
 8010f4e:	42bd      	cmp	r5, r7
 8010f50:	6803      	ldr	r3, [r0, #0]
 8010f52:	f340 8084 	ble.w	801105e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 8010f56:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8010f5a:	4798      	blx	r3
 8010f5c:	eb07 030a 	add.w	r3, r7, sl
 8010f60:	4298      	cmp	r0, r3
 8010f62:	da07      	bge.n	8010f74 <_ZN8touchgfx11Application15drawCachedAreasEv+0x170>
 8010f64:	4285      	cmp	r5, r0
 8010f66:	dd05      	ble.n	8010f74 <_ZN8touchgfx11Application15drawCachedAreasEv+0x170>
 8010f68:	4287      	cmp	r7, r0
 8010f6a:	dd6d      	ble.n	8011048 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8010f6c:	2f00      	cmp	r7, #0
 8010f6e:	dd6b      	ble.n	8011048 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8010f70:	4628      	mov	r0, r5
 8010f72:	e004      	b.n	8010f7e <_ZN8touchgfx11Application15drawCachedAreasEv+0x17a>
 8010f74:	4287      	cmp	r7, r0
 8010f76:	dcfb      	bgt.n	8010f70 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16c>
 8010f78:	42a8      	cmp	r0, r5
 8010f7a:	bfa8      	it	ge
 8010f7c:	4628      	movge	r0, r5
 8010f7e:	4b7a      	ldr	r3, [pc, #488]	; (8011168 <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>)
 8010f80:	f8ad 7016 	strh.w	r7, [sp, #22]
 8010f84:	f9b3 3000 	ldrsh.w	r3, [r3]
 8010f88:	f8ad 3018 	strh.w	r3, [sp, #24]
 8010f8c:	9b02      	ldr	r3, [sp, #8]
 8010f8e:	1bc0      	subs	r0, r0, r7
 8010f90:	2200      	movs	r2, #0
 8010f92:	881f      	ldrh	r7, [r3, #0]
 8010f94:	f8ad 2014 	strh.w	r2, [sp, #20]
 8010f98:	f8ad 001a 	strh.w	r0, [sp, #26]
 8010f9c:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 8010fa0:	42bb      	cmp	r3, r7
 8010fa2:	d9cc      	bls.n	8010f3e <_ZN8touchgfx11Application15drawCachedAreasEv+0x13a>
 8010fa4:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 8010fa8:	ab07      	add	r3, sp, #28
 8010faa:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 8010fae:	6851      	ldr	r1, [r2, #4]
 8010fb0:	c303      	stmia	r3!, {r0, r1}
 8010fb2:	a905      	add	r1, sp, #20
 8010fb4:	a807      	add	r0, sp, #28
 8010fb6:	f7ff fad0 	bl	801055a <_ZNK8touchgfx4Rect9intersectERKS0_>
 8010fba:	2800      	cmp	r0, #0
 8010fbc:	d04c      	beq.n	8011058 <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 8010fbe:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 8010fc2:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 8010fc6:	f8bd 9020 	ldrh.w	r9, [sp, #32]
 8010fca:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 8010fce:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8010fd2:	9303      	str	r3, [sp, #12]
 8010fd4:	4686      	mov	lr, r0
 8010fd6:	4290      	cmp	r0, r2
 8010fd8:	4448      	add	r0, r9
 8010fda:	f8bd 9018 	ldrh.w	r9, [sp, #24]
 8010fde:	bfb8      	it	lt
 8010fe0:	4696      	movlt	lr, r2
 8010fe2:	444a      	add	r2, r9
 8010fe4:	4299      	cmp	r1, r3
 8010fe6:	b280      	uxth	r0, r0
 8010fe8:	b292      	uxth	r2, r2
 8010fea:	468c      	mov	ip, r1
 8010fec:	fa0f f982 	sxth.w	r9, r2
 8010ff0:	bfb8      	it	lt
 8010ff2:	469c      	movlt	ip, r3
 8010ff4:	b203      	sxth	r3, r0
 8010ff6:	454b      	cmp	r3, r9
 8010ff8:	bfb8      	it	lt
 8010ffa:	4602      	movlt	r2, r0
 8010ffc:	eba2 020e 	sub.w	r2, r2, lr
 8011000:	f8ad 2020 	strh.w	r2, [sp, #32]
 8011004:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8011008:	9b03      	ldr	r3, [sp, #12]
 801100a:	f8ad e01c 	strh.w	lr, [sp, #28]
 801100e:	4411      	add	r1, r2
 8011010:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8011014:	f8ad c01e 	strh.w	ip, [sp, #30]
 8011018:	4413      	add	r3, r2
 801101a:	b289      	uxth	r1, r1
 801101c:	b29b      	uxth	r3, r3
 801101e:	b208      	sxth	r0, r1
 8011020:	b21a      	sxth	r2, r3
 8011022:	4290      	cmp	r0, r2
 8011024:	bfb8      	it	lt
 8011026:	460b      	movlt	r3, r1
 8011028:	eba3 030c 	sub.w	r3, r3, ip
 801102c:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8011030:	a807      	add	r0, sp, #28
 8011032:	f7f9 f9ce 	bl	800a3d2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011036:	b920      	cbnz	r0, 8011042 <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 8011038:	6823      	ldr	r3, [r4, #0]
 801103a:	a907      	add	r1, sp, #28
 801103c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801103e:	4620      	mov	r0, r4
 8011040:	4798      	blx	r3
 8011042:	3701      	adds	r7, #1
 8011044:	b2bf      	uxth	r7, r7
 8011046:	e7a9      	b.n	8010f9c <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 8011048:	f8d8 0000 	ldr.w	r0, [r8]
 801104c:	6803      	ldr	r3, [r0, #0]
 801104e:	2101      	movs	r1, #1
 8011050:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8011054:	4798      	blx	r3
 8011056:	e772      	b.n	8010f3e <_ZN8touchgfx11Application15drawCachedAreasEv+0x13a>
 8011058:	e9cd 0007 	strd	r0, r0, [sp, #28]
 801105c:	e7e8      	b.n	8011030 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 801105e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011060:	4798      	blx	r3
 8011062:	4b42      	ldr	r3, [pc, #264]	; (801116c <_ZN8touchgfx11Application15drawCachedAreasEv+0x368>)
 8011064:	781b      	ldrb	r3, [r3, #0]
 8011066:	2b00      	cmp	r3, #0
 8011068:	f43f af27 	beq.w	8010eba <_ZN8touchgfx11Application15drawCachedAreasEv+0xb6>
 801106c:	2300      	movs	r3, #0
 801106e:	f8a4 312a 	strh.w	r3, [r4, #298]	; 0x12a
 8011072:	9b02      	ldr	r3, [sp, #8]
 8011074:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 8011078:	881b      	ldrh	r3, [r3, #0]
 801107a:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 801107e:	429d      	cmp	r5, r3
 8011080:	f67f af1b 	bls.w	8010eba <_ZN8touchgfx11Application15drawCachedAreasEv+0xb6>
 8011084:	f8b4 112a 	ldrh.w	r1, [r4, #298]	; 0x12a
 8011088:	2907      	cmp	r1, #7
 801108a:	d815      	bhi.n	80110b8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b4>
 801108c:	eb06 02c3 	add.w	r2, r6, r3, lsl #3
 8011090:	f936 8033 	ldrsh.w	r8, [r6, r3, lsl #3]
 8011094:	f9b2 e002 	ldrsh.w	lr, [r2, #2]
 8011098:	f9b2 c004 	ldrsh.w	ip, [r2, #4]
 801109c:	f9b2 7006 	ldrsh.w	r7, [r2, #6]
 80110a0:	1c4a      	adds	r2, r1, #1
 80110a2:	f8a4 212a 	strh.w	r2, [r4, #298]	; 0x12a
 80110a6:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 80110aa:	f820 8031 	strh.w	r8, [r0, r1, lsl #3]
 80110ae:	f8a2 e002 	strh.w	lr, [r2, #2]
 80110b2:	f8a2 c004 	strh.w	ip, [r2, #4]
 80110b6:	80d7      	strh	r7, [r2, #6]
 80110b8:	3301      	adds	r3, #1
 80110ba:	b29b      	uxth	r3, r3
 80110bc:	e7df      	b.n	801107e <_ZN8touchgfx11Application15drawCachedAreasEv+0x27a>
 80110be:	2b02      	cmp	r3, #2
 80110c0:	f040 8136 	bne.w	8011330 <_ZN8touchgfx11Application15drawCachedAreasEv+0x52c>
 80110c4:	4b2a      	ldr	r3, [pc, #168]	; (8011170 <_ZN8touchgfx11Application15drawCachedAreasEv+0x36c>)
 80110c6:	781b      	ldrb	r3, [r3, #0]
 80110c8:	2b01      	cmp	r3, #1
 80110ca:	f104 09a8 	add.w	r9, r4, #168	; 0xa8
 80110ce:	f000 809c 	beq.w	801120a <_ZN8touchgfx11Application15drawCachedAreasEv+0x406>
 80110d2:	9b02      	ldr	r3, [sp, #8]
 80110d4:	f8b4 20e8 	ldrh.w	r2, [r4, #232]	; 0xe8
 80110d8:	f8b3 b000 	ldrh.w	fp, [r3]
 80110dc:	f10b 0b01 	add.w	fp, fp, #1
 80110e0:	fa1f fb8b 	uxth.w	fp, fp
 80110e4:	2a00      	cmp	r2, #0
 80110e6:	d0bc      	beq.n	8011062 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 80110e8:	f8b4 50aa 	ldrh.w	r5, [r4, #170]	; 0xaa
 80110ec:	f8b4 30ae 	ldrh.w	r3, [r4, #174]	; 0xae
 80110f0:	441d      	add	r5, r3
 80110f2:	b22d      	sxth	r5, r5
 80110f4:	4659      	mov	r1, fp
 80110f6:	f04f 0800 	mov.w	r8, #0
 80110fa:	b28b      	uxth	r3, r1
 80110fc:	429a      	cmp	r2, r3
 80110fe:	ea4f 07c8 	mov.w	r7, r8, lsl #3
 8011102:	f240 80c1 	bls.w	8011288 <_ZN8touchgfx11Application15drawCachedAreasEv+0x484>
 8011106:	4427      	add	r7, r4
 8011108:	eb04 0ec1 	add.w	lr, r4, r1, lsl #3
 801110c:	f9b7 30aa 	ldrsh.w	r3, [r7, #170]	; 0xaa
 8011110:	f9be c0aa 	ldrsh.w	ip, [lr, #170]	; 0xaa
 8011114:	4563      	cmp	r3, ip
 8011116:	4608      	mov	r0, r1
 8011118:	f340 80a3 	ble.w	8011262 <_ZN8touchgfx11Application15drawCachedAreasEv+0x45e>
 801111c:	f8be 50ae 	ldrh.w	r5, [lr, #174]	; 0xae
 8011120:	4465      	add	r5, ip
 8011122:	b22d      	sxth	r5, r5
 8011124:	429d      	cmp	r5, r3
 8011126:	bfa8      	it	ge
 8011128:	461d      	movge	r5, r3
 801112a:	3101      	adds	r1, #1
 801112c:	4680      	mov	r8, r0
 801112e:	e7e4      	b.n	80110fa <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f6>
 8011130:	d10b      	bne.n	801114a <_ZN8touchgfx11Application15drawCachedAreasEv+0x346>
 8011132:	f9b5 c0ae 	ldrsh.w	ip, [r5, #174]	; 0xae
 8011136:	f9ba 10ae 	ldrsh.w	r1, [sl, #174]	; 0xae
 801113a:	458c      	cmp	ip, r1
 801113c:	bfb4      	ite	lt
 801113e:	469c      	movlt	ip, r3
 8011140:	46bc      	movge	ip, r7
 8011142:	4572      	cmp	r2, lr
 8011144:	bfb8      	it	lt
 8011146:	4672      	movlt	r2, lr
 8011148:	e088      	b.n	801125c <_ZN8touchgfx11Application15drawCachedAreasEv+0x458>
 801114a:	428a      	cmp	r2, r1
 801114c:	bfb8      	it	lt
 801114e:	460a      	movlt	r2, r1
 8011150:	46bc      	mov	ip, r7
 8011152:	e083      	b.n	801125c <_ZN8touchgfx11Application15drawCachedAreasEv+0x458>
 8011154:	2001539c 	.word	0x2001539c
 8011158:	200153a8 	.word	0x200153a8
 801115c:	20000088 	.word	0x20000088
 8011160:	2001535c 	.word	0x2001535c
 8011164:	20015352 	.word	0x20015352
 8011168:	20015350 	.word	0x20015350
 801116c:	2001535a 	.word	0x2001535a
 8011170:	20015354 	.word	0x20015354
 8011174:	1961      	adds	r1, r4, r5
 8011176:	ab07      	add	r3, sp, #28
 8011178:	f851 0fa8 	ldr.w	r0, [r1, #168]!
 801117c:	6849      	ldr	r1, [r1, #4]
 801117e:	c303      	stmia	r3!, {r0, r1}
 8011180:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8011184:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8011188:	2b13      	cmp	r3, #19
 801118a:	bfd8      	it	le
 801118c:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 8011190:	f8ad 201c 	strh.w	r2, [sp, #28]
 8011194:	440b      	add	r3, r1
 8011196:	1a9b      	subs	r3, r3, r2
 8011198:	a807      	add	r0, sp, #28
 801119a:	f8ad 3020 	strh.w	r3, [sp, #32]
 801119e:	f7ff f8b7 	bl	8010310 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80111a2:	a807      	add	r0, sp, #28
 80111a4:	f7f9 f915 	bl	800a3d2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80111a8:	bb78      	cbnz	r0, 801120a <_ZN8touchgfx11Application15drawCachedAreasEv+0x406>
 80111aa:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 80111ae:	f8d8 0000 	ldr.w	r0, [r8]
 80111b2:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 80111b6:	f8d0 e000 	ldr.w	lr, [r0]
 80111ba:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 80111be:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 80111c2:	f1bc 0f14 	cmp.w	ip, #20
 80111c6:	bfa8      	it	ge
 80111c8:	f04f 0c14 	movge.w	ip, #20
 80111cc:	fa1f fc8c 	uxth.w	ip, ip
 80111d0:	f8cd c000 	str.w	ip, [sp]
 80111d4:	f8de a090 	ldr.w	sl, [lr, #144]	; 0x90
 80111d8:	47d0      	blx	sl
 80111da:	4682      	mov	sl, r0
 80111dc:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 80111e0:	a807      	add	r0, sp, #28
 80111e2:	f7ff f87b 	bl	80102dc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 80111e6:	6823      	ldr	r3, [r4, #0]
 80111e8:	4425      	add	r5, r4
 80111ea:	4620      	mov	r0, r4
 80111ec:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80111ee:	a907      	add	r1, sp, #28
 80111f0:	4798      	blx	r3
 80111f2:	f8b5 00ac 	ldrh.w	r0, [r5, #172]	; 0xac
 80111f6:	eba0 000a 	sub.w	r0, r0, sl
 80111fa:	b200      	sxth	r0, r0
 80111fc:	f8a5 00ac 	strh.w	r0, [r5, #172]	; 0xac
 8011200:	b918      	cbnz	r0, 801120a <_ZN8touchgfx11Application15drawCachedAreasEv+0x406>
 8011202:	b2b9      	uxth	r1, r7
 8011204:	4648      	mov	r0, r9
 8011206:	f7ff faa3 	bl	8010750 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801120a:	f8b4 b0e8 	ldrh.w	fp, [r4, #232]	; 0xe8
 801120e:	f1bb 0f00 	cmp.w	fp, #0
 8011212:	f43f af26 	beq.w	8011062 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8011216:	9b02      	ldr	r3, [sp, #8]
 8011218:	f9b4 20a8 	ldrsh.w	r2, [r4, #168]	; 0xa8
 801121c:	881b      	ldrh	r3, [r3, #0]
 801121e:	3301      	adds	r3, #1
 8011220:	b29b      	uxth	r3, r3
 8011222:	2700      	movs	r7, #0
 8011224:	b299      	uxth	r1, r3
 8011226:	458b      	cmp	fp, r1
 8011228:	ea4f 05c7 	mov.w	r5, r7, lsl #3
 801122c:	d9a2      	bls.n	8011174 <_ZN8touchgfx11Application15drawCachedAreasEv+0x370>
 801122e:	4425      	add	r5, r4
 8011230:	eb04 0ac3 	add.w	sl, r4, r3, lsl #3
 8011234:	f8b5 10ac 	ldrh.w	r1, [r5, #172]	; 0xac
 8011238:	f8b5 00a8 	ldrh.w	r0, [r5, #168]	; 0xa8
 801123c:	f9ba e0a8 	ldrsh.w	lr, [sl, #168]	; 0xa8
 8011240:	4408      	add	r0, r1
 8011242:	f8ba 10ac 	ldrh.w	r1, [sl, #172]	; 0xac
 8011246:	4471      	add	r1, lr
 8011248:	b200      	sxth	r0, r0
 801124a:	b209      	sxth	r1, r1
 801124c:	4288      	cmp	r0, r1
 801124e:	469c      	mov	ip, r3
 8011250:	f6bf af6e 	bge.w	8011130 <_ZN8touchgfx11Application15drawCachedAreasEv+0x32c>
 8011254:	4586      	cmp	lr, r0
 8011256:	4672      	mov	r2, lr
 8011258:	bfb8      	it	lt
 801125a:	4602      	movlt	r2, r0
 801125c:	3301      	adds	r3, #1
 801125e:	4667      	mov	r7, ip
 8011260:	e7e0      	b.n	8011224 <_ZN8touchgfx11Application15drawCachedAreasEv+0x420>
 8011262:	d10c      	bne.n	801127e <_ZN8touchgfx11Application15drawCachedAreasEv+0x47a>
 8011264:	f9b7 70ac 	ldrsh.w	r7, [r7, #172]	; 0xac
 8011268:	f9be 00ac 	ldrsh.w	r0, [lr, #172]	; 0xac
 801126c:	4287      	cmp	r7, r0
 801126e:	bfb4      	ite	lt
 8011270:	4608      	movlt	r0, r1
 8011272:	4640      	movge	r0, r8
 8011274:	f8be 70ae 	ldrh.w	r7, [lr, #174]	; 0xae
 8011278:	443b      	add	r3, r7
 801127a:	b21b      	sxth	r3, r3
 801127c:	e752      	b.n	8011124 <_ZN8touchgfx11Application15drawCachedAreasEv+0x320>
 801127e:	4565      	cmp	r5, ip
 8011280:	bfa8      	it	ge
 8011282:	4665      	movge	r5, ip
 8011284:	4640      	mov	r0, r8
 8011286:	e750      	b.n	801112a <_ZN8touchgfx11Application15drawCachedAreasEv+0x326>
 8011288:	eb09 0007 	add.w	r0, r9, r7
 801128c:	4427      	add	r7, r4
 801128e:	9203      	str	r2, [sp, #12]
 8011290:	f9b7 a0ae 	ldrsh.w	sl, [r7, #174]	; 0xae
 8011294:	f1ba 0f13 	cmp.w	sl, #19
 8011298:	bfde      	ittt	le
 801129a:	f8b7 50aa 	ldrhle.w	r5, [r7, #170]	; 0xaa
 801129e:	4455      	addle	r5, sl
 80112a0:	b22d      	sxthle	r5, r5
 80112a2:	f7f9 f896 	bl	800a3d2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80112a6:	9a03      	ldr	r2, [sp, #12]
 80112a8:	2800      	cmp	r0, #0
 80112aa:	f47f af1b 	bne.w	80110e4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2e0>
 80112ae:	f9b7 20aa 	ldrsh.w	r2, [r7, #170]	; 0xaa
 80112b2:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 80112b6:	482a      	ldr	r0, [pc, #168]	; (8011360 <_ZN8touchgfx11Application15drawCachedAreasEv+0x55c>)
 80112b8:	f9b7 10a8 	ldrsh.w	r1, [r7, #168]	; 0xa8
 80112bc:	f9b7 30ac 	ldrsh.w	r3, [r7, #172]	; 0xac
 80112c0:	6800      	ldr	r0, [r0, #0]
 80112c2:	f8ad 101c 	strh.w	r1, [sp, #28]
 80112c6:	1aad      	subs	r5, r5, r2
 80112c8:	2d14      	cmp	r5, #20
 80112ca:	f8ad 201e 	strh.w	r2, [sp, #30]
 80112ce:	f8ad 3020 	strh.w	r3, [sp, #32]
 80112d2:	bfa8      	it	ge
 80112d4:	2514      	movge	r5, #20
 80112d6:	f8d0 c000 	ldr.w	ip, [r0]
 80112da:	b2ad      	uxth	r5, r5
 80112dc:	fa1f fa8a 	uxth.w	sl, sl
 80112e0:	4555      	cmp	r5, sl
 80112e2:	bf94      	ite	ls
 80112e4:	9500      	strls	r5, [sp, #0]
 80112e6:	f8cd a000 	strhi.w	sl, [sp]
 80112ea:	b292      	uxth	r2, r2
 80112ec:	f8dc 5090 	ldr.w	r5, [ip, #144]	; 0x90
 80112f0:	b29b      	uxth	r3, r3
 80112f2:	b289      	uxth	r1, r1
 80112f4:	47a8      	blx	r5
 80112f6:	6823      	ldr	r3, [r4, #0]
 80112f8:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 80112fc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80112fe:	a907      	add	r1, sp, #28
 8011300:	4620      	mov	r0, r4
 8011302:	4798      	blx	r3
 8011304:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 8011308:	f8b7 30ae 	ldrh.w	r3, [r7, #174]	; 0xae
 801130c:	f8b7 20aa 	ldrh.w	r2, [r7, #170]	; 0xaa
 8011310:	1a5b      	subs	r3, r3, r1
 8011312:	440a      	add	r2, r1
 8011314:	b21b      	sxth	r3, r3
 8011316:	f8a7 20aa 	strh.w	r2, [r7, #170]	; 0xaa
 801131a:	f8a7 30ae 	strh.w	r3, [r7, #174]	; 0xae
 801131e:	2b00      	cmp	r3, #0
 8011320:	f47f aed7 	bne.w	80110d2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ce>
 8011324:	fa1f f188 	uxth.w	r1, r8
 8011328:	4648      	mov	r0, r9
 801132a:	f7ff fa11 	bl	8010750 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801132e:	e6d0      	b.n	80110d2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ce>
 8011330:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 8011334:	42ab      	cmp	r3, r5
 8011336:	f67f ae94 	bls.w	8011062 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 801133a:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
 801133e:	ab07      	add	r3, sp, #28
 8011340:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 8011344:	6851      	ldr	r1, [r2, #4]
 8011346:	c303      	stmia	r3!, {r0, r1}
 8011348:	a807      	add	r0, sp, #28
 801134a:	f7f9 f842 	bl	800a3d2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801134e:	b920      	cbnz	r0, 801135a <_ZN8touchgfx11Application15drawCachedAreasEv+0x556>
 8011350:	6823      	ldr	r3, [r4, #0]
 8011352:	a907      	add	r1, sp, #28
 8011354:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8011356:	4620      	mov	r0, r4
 8011358:	4798      	blx	r3
 801135a:	3501      	adds	r5, #1
 801135c:	b2ad      	uxth	r5, r5
 801135e:	e7e7      	b.n	8011330 <_ZN8touchgfx11Application15drawCachedAreasEv+0x52c>
 8011360:	2001535c 	.word	0x2001535c

08011364 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8011364:	4b03      	ldr	r3, [pc, #12]	; (8011374 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 8011366:	2200      	movs	r2, #0
 8011368:	801a      	strh	r2, [r3, #0]
 801136a:	805a      	strh	r2, [r3, #2]
 801136c:	809a      	strh	r2, [r3, #4]
 801136e:	80da      	strh	r2, [r3, #6]
 8011370:	4770      	bx	lr
 8011372:	bf00      	nop
 8011374:	200153a8 	.word	0x200153a8

08011378 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 8011378:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801137c:	4606      	mov	r6, r0
 801137e:	b09d      	sub	sp, #116	; 0x74
 8011380:	a803      	add	r0, sp, #12
 8011382:	4614      	mov	r4, r2
 8011384:	468a      	mov	sl, r1
 8011386:	461d      	mov	r5, r3
 8011388:	f000 fe67 	bl	801205a <_ZN8touchgfx12TextProviderC1Ev>
 801138c:	6833      	ldr	r3, [r6, #0]
 801138e:	4630      	mov	r0, r6
 8011390:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8011392:	4798      	blx	r3
 8011394:	6833      	ldr	r3, [r6, #0]
 8011396:	4607      	mov	r7, r0
 8011398:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801139a:	4630      	mov	r0, r6
 801139c:	4798      	blx	r3
 801139e:	462a      	mov	r2, r5
 80113a0:	9000      	str	r0, [sp, #0]
 80113a2:	4621      	mov	r1, r4
 80113a4:	463b      	mov	r3, r7
 80113a6:	a803      	add	r0, sp, #12
 80113a8:	f000 feb2 	bl	8012110 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80113ac:	2500      	movs	r5, #0
 80113ae:	462c      	mov	r4, r5
 80113b0:	46a9      	mov	r9, r5
 80113b2:	46a8      	mov	r8, r5
 80113b4:	f242 0b0b 	movw	fp, #8203	; 0x200b
 80113b8:	2300      	movs	r3, #0
 80113ba:	9302      	str	r3, [sp, #8]
 80113bc:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80113c0:	429c      	cmp	r4, r3
 80113c2:	d002      	beq.n	80113ca <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 80113c4:	455c      	cmp	r4, fp
 80113c6:	bf18      	it	ne
 80113c8:	4625      	movne	r5, r4
 80113ca:	ab02      	add	r3, sp, #8
 80113cc:	4632      	mov	r2, r6
 80113ce:	4651      	mov	r1, sl
 80113d0:	a803      	add	r0, sp, #12
 80113d2:	f001 f99f 	bl	8012714 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80113d6:	4604      	mov	r4, r0
 80113d8:	b108      	cbz	r0, 80113de <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 80113da:	280a      	cmp	r0, #10
 80113dc:	d10a      	bne.n	80113f4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 80113de:	45c1      	cmp	r9, r8
 80113e0:	bf38      	it	cc
 80113e2:	46c1      	movcc	r9, r8
 80113e4:	f04f 0800 	mov.w	r8, #0
 80113e8:	2c00      	cmp	r4, #0
 80113ea:	d1e5      	bne.n	80113b8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 80113ec:	4648      	mov	r0, r9
 80113ee:	b01d      	add	sp, #116	; 0x74
 80113f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80113f4:	9a02      	ldr	r2, [sp, #8]
 80113f6:	2a00      	cmp	r2, #0
 80113f8:	d0de      	beq.n	80113b8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 80113fa:	7b57      	ldrb	r7, [r2, #13]
 80113fc:	6833      	ldr	r3, [r6, #0]
 80113fe:	8894      	ldrh	r4, [r2, #4]
 8011400:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8011402:	007f      	lsls	r7, r7, #1
 8011404:	f407 7080 	and.w	r0, r7, #256	; 0x100
 8011408:	7a97      	ldrb	r7, [r2, #10]
 801140a:	4629      	mov	r1, r5
 801140c:	4307      	orrs	r7, r0
 801140e:	4630      	mov	r0, r6
 8011410:	4798      	blx	r3
 8011412:	4438      	add	r0, r7
 8011414:	4480      	add	r8, r0
 8011416:	fa1f f888 	uxth.w	r8, r8
 801141a:	e7e5      	b.n	80113e8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

0801141c <_ZNK8touchgfx4Font12getCharWidthEt>:
 801141c:	b508      	push	{r3, lr}
 801141e:	6803      	ldr	r3, [r0, #0]
 8011420:	68db      	ldr	r3, [r3, #12]
 8011422:	4798      	blx	r3
 8011424:	b128      	cbz	r0, 8011432 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 8011426:	7b43      	ldrb	r3, [r0, #13]
 8011428:	7a80      	ldrb	r0, [r0, #10]
 801142a:	005b      	lsls	r3, r3, #1
 801142c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8011430:	4318      	orrs	r0, r3
 8011432:	bd08      	pop	{r3, pc}

08011434 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 8011434:	b40e      	push	{r1, r2, r3}
 8011436:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011438:	b09e      	sub	sp, #120	; 0x78
 801143a:	ab23      	add	r3, sp, #140	; 0x8c
 801143c:	4605      	mov	r5, r0
 801143e:	f853 4b04 	ldr.w	r4, [r3], #4
 8011442:	9303      	str	r3, [sp, #12]
 8011444:	a805      	add	r0, sp, #20
 8011446:	f000 fe08 	bl	801205a <_ZN8touchgfx12TextProviderC1Ev>
 801144a:	682b      	ldr	r3, [r5, #0]
 801144c:	4628      	mov	r0, r5
 801144e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8011450:	4798      	blx	r3
 8011452:	682b      	ldr	r3, [r5, #0]
 8011454:	4606      	mov	r6, r0
 8011456:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8011458:	4628      	mov	r0, r5
 801145a:	4798      	blx	r3
 801145c:	4633      	mov	r3, r6
 801145e:	ae1e      	add	r6, sp, #120	; 0x78
 8011460:	4621      	mov	r1, r4
 8011462:	9000      	str	r0, [sp, #0]
 8011464:	9a03      	ldr	r2, [sp, #12]
 8011466:	2400      	movs	r4, #0
 8011468:	a805      	add	r0, sp, #20
 801146a:	f000 fe51 	bl	8012110 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801146e:	f846 4d68 	str.w	r4, [r6, #-104]!
 8011472:	462a      	mov	r2, r5
 8011474:	4633      	mov	r3, r6
 8011476:	4621      	mov	r1, r4
 8011478:	a805      	add	r0, sp, #20
 801147a:	f001 f94b 	bl	8012714 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801147e:	b1f0      	cbz	r0, 80114be <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 8011480:	280a      	cmp	r0, #10
 8011482:	d018      	beq.n	80114b6 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8011484:	9f04      	ldr	r7, [sp, #16]
 8011486:	b1b7      	cbz	r7, 80114b6 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8011488:	7b78      	ldrb	r0, [r7, #13]
 801148a:	7a3b      	ldrb	r3, [r7, #8]
 801148c:	88aa      	ldrh	r2, [r5, #4]
 801148e:	00c1      	lsls	r1, r0, #3
 8011490:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8011494:	4319      	orrs	r1, r3
 8011496:	0643      	lsls	r3, r0, #25
 8011498:	bf44      	itt	mi
 801149a:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 801149e:	b219      	sxthmi	r1, r3
 80114a0:	0100      	lsls	r0, r0, #4
 80114a2:	79fb      	ldrb	r3, [r7, #7]
 80114a4:	f400 7080 	and.w	r0, r0, #256	; 0x100
 80114a8:	4303      	orrs	r3, r0
 80114aa:	4413      	add	r3, r2
 80114ac:	1a5b      	subs	r3, r3, r1
 80114ae:	b29b      	uxth	r3, r3
 80114b0:	42a3      	cmp	r3, r4
 80114b2:	bfc8      	it	gt
 80114b4:	b21c      	sxthgt	r4, r3
 80114b6:	4633      	mov	r3, r6
 80114b8:	462a      	mov	r2, r5
 80114ba:	2100      	movs	r1, #0
 80114bc:	e7dc      	b.n	8011478 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 80114be:	b2a0      	uxth	r0, r4
 80114c0:	b01e      	add	sp, #120	; 0x78
 80114c2:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 80114c6:	b003      	add	sp, #12
 80114c8:	4770      	bx	lr

080114ca <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 80114ca:	b40e      	push	{r1, r2, r3}
 80114cc:	b570      	push	{r4, r5, r6, lr}
 80114ce:	b09d      	sub	sp, #116	; 0x74
 80114d0:	ab21      	add	r3, sp, #132	; 0x84
 80114d2:	4604      	mov	r4, r0
 80114d4:	f853 5b04 	ldr.w	r5, [r3], #4
 80114d8:	9302      	str	r3, [sp, #8]
 80114da:	a803      	add	r0, sp, #12
 80114dc:	f000 fdbd 	bl	801205a <_ZN8touchgfx12TextProviderC1Ev>
 80114e0:	6823      	ldr	r3, [r4, #0]
 80114e2:	4620      	mov	r0, r4
 80114e4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80114e6:	4798      	blx	r3
 80114e8:	6823      	ldr	r3, [r4, #0]
 80114ea:	4606      	mov	r6, r0
 80114ec:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80114ee:	4620      	mov	r0, r4
 80114f0:	4798      	blx	r3
 80114f2:	4633      	mov	r3, r6
 80114f4:	9000      	str	r0, [sp, #0]
 80114f6:	9a02      	ldr	r2, [sp, #8]
 80114f8:	4629      	mov	r1, r5
 80114fa:	a803      	add	r0, sp, #12
 80114fc:	f000 fe08 	bl	8012110 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8011500:	a803      	add	r0, sp, #12
 8011502:	f001 f9d5 	bl	80128b0 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8011506:	2401      	movs	r4, #1
 8011508:	b2a3      	uxth	r3, r4
 801150a:	b140      	cbz	r0, 801151e <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 801150c:	280a      	cmp	r0, #10
 801150e:	bf08      	it	eq
 8011510:	3301      	addeq	r3, #1
 8011512:	a803      	add	r0, sp, #12
 8011514:	bf08      	it	eq
 8011516:	b21c      	sxtheq	r4, r3
 8011518:	f001 f9ca 	bl	80128b0 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801151c:	e7f4      	b.n	8011508 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 801151e:	4618      	mov	r0, r3
 8011520:	b01d      	add	sp, #116	; 0x74
 8011522:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011526:	b003      	add	sp, #12
 8011528:	4770      	bx	lr

0801152a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 801152a:	b40e      	push	{r1, r2, r3}
 801152c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801152e:	b09e      	sub	sp, #120	; 0x78
 8011530:	ab23      	add	r3, sp, #140	; 0x8c
 8011532:	4604      	mov	r4, r0
 8011534:	f853 5b04 	ldr.w	r5, [r3], #4
 8011538:	9303      	str	r3, [sp, #12]
 801153a:	a805      	add	r0, sp, #20
 801153c:	f000 fd8d 	bl	801205a <_ZN8touchgfx12TextProviderC1Ev>
 8011540:	6823      	ldr	r3, [r4, #0]
 8011542:	4620      	mov	r0, r4
 8011544:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8011546:	4798      	blx	r3
 8011548:	6823      	ldr	r3, [r4, #0]
 801154a:	4606      	mov	r6, r0
 801154c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801154e:	4620      	mov	r0, r4
 8011550:	4798      	blx	r3
 8011552:	4633      	mov	r3, r6
 8011554:	4629      	mov	r1, r5
 8011556:	9000      	str	r0, [sp, #0]
 8011558:	9a03      	ldr	r2, [sp, #12]
 801155a:	a805      	add	r0, sp, #20
 801155c:	ad1e      	add	r5, sp, #120	; 0x78
 801155e:	f000 fdd7 	bl	8012110 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8011562:	2100      	movs	r1, #0
 8011564:	f845 1d68 	str.w	r1, [r5, #-104]!
 8011568:	4622      	mov	r2, r4
 801156a:	462b      	mov	r3, r5
 801156c:	a805      	add	r0, sp, #20
 801156e:	f001 f8d1 	bl	8012714 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8011572:	26ff      	movs	r6, #255	; 0xff
 8011574:	b1d8      	cbz	r0, 80115ae <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x84>
 8011576:	280a      	cmp	r0, #10
 8011578:	d012      	beq.n	80115a0 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 801157a:	9804      	ldr	r0, [sp, #16]
 801157c:	b180      	cbz	r0, 80115a0 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 801157e:	7b47      	ldrb	r7, [r0, #13]
 8011580:	7922      	ldrb	r2, [r4, #4]
 8011582:	00fb      	lsls	r3, r7, #3
 8011584:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8011588:	7a03      	ldrb	r3, [r0, #8]
 801158a:	430b      	orrs	r3, r1
 801158c:	0679      	lsls	r1, r7, #25
 801158e:	bf44      	itt	mi
 8011590:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8011594:	b21b      	sxthmi	r3, r3
 8011596:	1ad3      	subs	r3, r2, r3
 8011598:	b2db      	uxtb	r3, r3
 801159a:	429e      	cmp	r6, r3
 801159c:	bf28      	it	cs
 801159e:	461e      	movcs	r6, r3
 80115a0:	462b      	mov	r3, r5
 80115a2:	4622      	mov	r2, r4
 80115a4:	2100      	movs	r1, #0
 80115a6:	a805      	add	r0, sp, #20
 80115a8:	f001 f8b4 	bl	8012714 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80115ac:	e7e2      	b.n	8011574 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4a>
 80115ae:	4630      	mov	r0, r6
 80115b0:	b01e      	add	sp, #120	; 0x78
 80115b2:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 80115b6:	b003      	add	sp, #12
 80115b8:	4770      	bx	lr

080115ba <_ZNK8touchgfx8Drawable10invalidateEv>:
 80115ba:	b513      	push	{r0, r1, r4, lr}
 80115bc:	6803      	ldr	r3, [r0, #0]
 80115be:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 80115c2:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80115c6:	f8ad 1004 	strh.w	r1, [sp, #4]
 80115ca:	2400      	movs	r4, #0
 80115cc:	9400      	str	r4, [sp, #0]
 80115ce:	f8ad 2006 	strh.w	r2, [sp, #6]
 80115d2:	691b      	ldr	r3, [r3, #16]
 80115d4:	4669      	mov	r1, sp
 80115d6:	4798      	blx	r3
 80115d8:	b002      	add	sp, #8
 80115da:	bd10      	pop	{r4, pc}

080115dc <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 80115dc:	b538      	push	{r3, r4, r5, lr}
 80115de:	680b      	ldr	r3, [r1, #0]
 80115e0:	460c      	mov	r4, r1
 80115e2:	68db      	ldr	r3, [r3, #12]
 80115e4:	4605      	mov	r5, r0
 80115e6:	4798      	blx	r3
 80115e8:	6823      	ldr	r3, [r4, #0]
 80115ea:	4620      	mov	r0, r4
 80115ec:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80115ee:	4629      	mov	r1, r5
 80115f0:	4798      	blx	r3
 80115f2:	4628      	mov	r0, r5
 80115f4:	bd38      	pop	{r3, r4, r5, pc}

080115f6 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 80115f6:	b410      	push	{r4}
 80115f8:	880a      	ldrh	r2, [r1, #0]
 80115fa:	8884      	ldrh	r4, [r0, #4]
 80115fc:	4422      	add	r2, r4
 80115fe:	800a      	strh	r2, [r1, #0]
 8011600:	88c4      	ldrh	r4, [r0, #6]
 8011602:	884a      	ldrh	r2, [r1, #2]
 8011604:	4422      	add	r2, r4
 8011606:	804a      	strh	r2, [r1, #2]
 8011608:	6940      	ldr	r0, [r0, #20]
 801160a:	b120      	cbz	r0, 8011616 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 801160c:	6803      	ldr	r3, [r0, #0]
 801160e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8011612:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011614:	4718      	bx	r3
 8011616:	f85d 4b04 	ldr.w	r4, [sp], #4
 801161a:	4770      	bx	lr

0801161c <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 801161c:	b570      	push	{r4, r5, r6, lr}
 801161e:	8882      	ldrh	r2, [r0, #4]
 8011620:	880b      	ldrh	r3, [r1, #0]
 8011622:	4413      	add	r3, r2
 8011624:	800b      	strh	r3, [r1, #0]
 8011626:	88c2      	ldrh	r2, [r0, #6]
 8011628:	884b      	ldrh	r3, [r1, #2]
 801162a:	460c      	mov	r4, r1
 801162c:	4413      	add	r3, r2
 801162e:	804b      	strh	r3, [r1, #2]
 8011630:	4605      	mov	r5, r0
 8011632:	1d01      	adds	r1, r0, #4
 8011634:	4620      	mov	r0, r4
 8011636:	f7f8 fe89 	bl	800a34c <_ZN8touchgfx4RectaNERKS0_>
 801163a:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 801163e:	2b00      	cmp	r3, #0
 8011640:	dd0b      	ble.n	801165a <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8011642:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8011646:	2b00      	cmp	r3, #0
 8011648:	dd07      	ble.n	801165a <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 801164a:	6968      	ldr	r0, [r5, #20]
 801164c:	b128      	cbz	r0, 801165a <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 801164e:	6803      	ldr	r3, [r0, #0]
 8011650:	4621      	mov	r1, r4
 8011652:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8011654:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011658:	4718      	bx	r3
 801165a:	bd70      	pop	{r4, r5, r6, pc}

0801165c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 801165c:	b570      	push	{r4, r5, r6, lr}
 801165e:	8882      	ldrh	r2, [r0, #4]
 8011660:	880b      	ldrh	r3, [r1, #0]
 8011662:	4413      	add	r3, r2
 8011664:	800b      	strh	r3, [r1, #0]
 8011666:	88c2      	ldrh	r2, [r0, #6]
 8011668:	884b      	ldrh	r3, [r1, #2]
 801166a:	460c      	mov	r4, r1
 801166c:	4413      	add	r3, r2
 801166e:	804b      	strh	r3, [r1, #2]
 8011670:	4605      	mov	r5, r0
 8011672:	1d01      	adds	r1, r0, #4
 8011674:	4620      	mov	r0, r4
 8011676:	f7f8 fe69 	bl	800a34c <_ZN8touchgfx4RectaNERKS0_>
 801167a:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 801167e:	2b00      	cmp	r3, #0
 8011680:	dd18      	ble.n	80116b4 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 8011682:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8011686:	2b00      	cmp	r3, #0
 8011688:	dd14      	ble.n	80116b4 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 801168a:	6968      	ldr	r0, [r5, #20]
 801168c:	b128      	cbz	r0, 801169a <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 801168e:	6803      	ldr	r3, [r0, #0]
 8011690:	4621      	mov	r1, r4
 8011692:	691b      	ldr	r3, [r3, #16]
 8011694:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011698:	4718      	bx	r3
 801169a:	4b07      	ldr	r3, [pc, #28]	; (80116b8 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 801169c:	681b      	ldr	r3, [r3, #0]
 801169e:	3304      	adds	r3, #4
 80116a0:	429d      	cmp	r5, r3
 80116a2:	d107      	bne.n	80116b4 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 80116a4:	f7fe fff2 	bl	801068c <_ZN8touchgfx11Application11getInstanceEv>
 80116a8:	6821      	ldr	r1, [r4, #0]
 80116aa:	6862      	ldr	r2, [r4, #4]
 80116ac:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80116b0:	f7ff b862 	b.w	8010778 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 80116b4:	bd70      	pop	{r4, r5, r6, pc}
 80116b6:	bf00      	nop
 80116b8:	200153a0 	.word	0x200153a0

080116bc <_ZN8touchgfx8Drawable12moveRelativeEss>:
 80116bc:	b570      	push	{r4, r5, r6, lr}
 80116be:	4604      	mov	r4, r0
 80116c0:	4616      	mov	r6, r2
 80116c2:	460d      	mov	r5, r1
 80116c4:	b901      	cbnz	r1, 80116c8 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 80116c6:	b192      	cbz	r2, 80116ee <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 80116c8:	6823      	ldr	r3, [r4, #0]
 80116ca:	4620      	mov	r0, r4
 80116cc:	699b      	ldr	r3, [r3, #24]
 80116ce:	4798      	blx	r3
 80116d0:	88e2      	ldrh	r2, [r4, #6]
 80116d2:	88a1      	ldrh	r1, [r4, #4]
 80116d4:	4432      	add	r2, r6
 80116d6:	4429      	add	r1, r5
 80116d8:	4620      	mov	r0, r4
 80116da:	b212      	sxth	r2, r2
 80116dc:	b209      	sxth	r1, r1
 80116de:	f7f1 fa9d 	bl	8002c1c <_ZN8touchgfx8Drawable5setXYEss>
 80116e2:	6823      	ldr	r3, [r4, #0]
 80116e4:	4620      	mov	r0, r4
 80116e6:	699b      	ldr	r3, [r3, #24]
 80116e8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80116ec:	4718      	bx	r3
 80116ee:	bd70      	pop	{r4, r5, r6, pc}

080116f0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 80116f0:	b510      	push	{r4, lr}
 80116f2:	4604      	mov	r4, r0
 80116f4:	4608      	mov	r0, r1
 80116f6:	2300      	movs	r3, #0
 80116f8:	8023      	strh	r3, [r4, #0]
 80116fa:	8063      	strh	r3, [r4, #2]
 80116fc:	6803      	ldr	r3, [r0, #0]
 80116fe:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8011702:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 8011706:	80a1      	strh	r1, [r4, #4]
 8011708:	80e2      	strh	r2, [r4, #6]
 801170a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801170c:	4621      	mov	r1, r4
 801170e:	4798      	blx	r3
 8011710:	4620      	mov	r0, r4
 8011712:	bd10      	pop	{r4, pc}

08011714 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>:
 8011714:	b530      	push	{r4, r5, lr}
 8011716:	8083      	strh	r3, [r0, #4]
 8011718:	f89d 300c 	ldrb.w	r3, [sp, #12]
 801171c:	f89d 5010 	ldrb.w	r5, [sp, #16]
 8011720:	7183      	strb	r3, [r0, #6]
 8011722:	79c3      	ldrb	r3, [r0, #7]
 8011724:	6101      	str	r1, [r0, #16]
 8011726:	f365 0306 	bfi	r3, r5, #0, #7
 801172a:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801172e:	8282      	strh	r2, [r0, #20]
 8011730:	f365 13c7 	bfi	r3, r5, #7, #1
 8011734:	71c3      	strb	r3, [r0, #7]
 8011736:	f89d 3018 	ldrb.w	r3, [sp, #24]
 801173a:	7203      	strb	r3, [r0, #8]
 801173c:	f89d 301c 	ldrb.w	r3, [sp, #28]
 8011740:	7243      	strb	r3, [r0, #9]
 8011742:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8011746:	8143      	strh	r3, [r0, #10]
 8011748:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 801174c:	8183      	strh	r3, [r0, #12]
 801174e:	4b01      	ldr	r3, [pc, #4]	; (8011754 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt+0x40>)
 8011750:	6003      	str	r3, [r0, #0]
 8011752:	bd30      	pop	{r4, r5, pc}
 8011754:	0802378c 	.word	0x0802378c

08011758 <_ZNK8touchgfx9ConstFont4findEt>:
 8011758:	b5f0      	push	{r4, r5, r6, r7, lr}
 801175a:	6904      	ldr	r4, [r0, #16]
 801175c:	b3bc      	cbz	r4, 80117ce <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801175e:	88a3      	ldrh	r3, [r4, #4]
 8011760:	8a82      	ldrh	r2, [r0, #20]
 8011762:	1acb      	subs	r3, r1, r3
 8011764:	f102 32ff 	add.w	r2, r2, #4294967295
 8011768:	d431      	bmi.n	80117ce <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801176a:	4293      	cmp	r3, r2
 801176c:	dd0c      	ble.n	8011788 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 801176e:	230e      	movs	r3, #14
 8011770:	fb03 4302 	mla	r3, r3, r2, r4
 8011774:	889b      	ldrh	r3, [r3, #4]
 8011776:	1a5b      	subs	r3, r3, r1
 8011778:	1ad3      	subs	r3, r2, r3
 801177a:	429a      	cmp	r2, r3
 801177c:	db27      	blt.n	80117ce <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801177e:	2b00      	cmp	r3, #0
 8011780:	bfbc      	itt	lt
 8011782:	2302      	movlt	r3, #2
 8011784:	fb92 f3f3 	sdivlt	r3, r2, r3
 8011788:	2500      	movs	r5, #0
 801178a:	260e      	movs	r6, #14
 801178c:	4295      	cmp	r5, r2
 801178e:	dc1e      	bgt.n	80117ce <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011790:	fb06 4003 	mla	r0, r6, r3, r4
 8011794:	8887      	ldrh	r7, [r0, #4]
 8011796:	42b9      	cmp	r1, r7
 8011798:	d01a      	beq.n	80117d0 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 801179a:	d20d      	bcs.n	80117b8 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 801179c:	1e5a      	subs	r2, r3, #1
 801179e:	4295      	cmp	r5, r2
 80117a0:	dc15      	bgt.n	80117ce <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80117a2:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 80117a6:	1a5b      	subs	r3, r3, r1
 80117a8:	1ad3      	subs	r3, r2, r3
 80117aa:	429a      	cmp	r2, r3
 80117ac:	db0f      	blt.n	80117ce <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80117ae:	429d      	cmp	r5, r3
 80117b0:	ddec      	ble.n	801178c <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80117b2:	1953      	adds	r3, r2, r5
 80117b4:	105b      	asrs	r3, r3, #1
 80117b6:	e7e9      	b.n	801178c <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80117b8:	1c5d      	adds	r5, r3, #1
 80117ba:	42aa      	cmp	r2, r5
 80117bc:	db07      	blt.n	80117ce <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80117be:	8a43      	ldrh	r3, [r0, #18]
 80117c0:	1acb      	subs	r3, r1, r3
 80117c2:	442b      	add	r3, r5
 80117c4:	429d      	cmp	r5, r3
 80117c6:	dc02      	bgt.n	80117ce <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80117c8:	429a      	cmp	r2, r3
 80117ca:	dadf      	bge.n	801178c <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80117cc:	e7f1      	b.n	80117b2 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 80117ce:	2000      	movs	r0, #0
 80117d0:	bdf0      	pop	{r4, r5, r6, r7, pc}

080117d2 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 80117d2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80117d4:	4604      	mov	r4, r0
 80117d6:	4617      	mov	r7, r2
 80117d8:	461e      	mov	r6, r3
 80117da:	b911      	cbnz	r1, 80117e2 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 80117dc:	2500      	movs	r5, #0
 80117de:	4628      	mov	r0, r5
 80117e0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80117e2:	290a      	cmp	r1, #10
 80117e4:	d0fa      	beq.n	80117dc <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80117e6:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 80117ea:	4291      	cmp	r1, r2
 80117ec:	d0f6      	beq.n	80117dc <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80117ee:	f242 020b 	movw	r2, #8203	; 0x200b
 80117f2:	4291      	cmp	r1, r2
 80117f4:	d0f2      	beq.n	80117dc <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80117f6:	f7ff ffaf 	bl	8011758 <_ZNK8touchgfx9ConstFont4findEt>
 80117fa:	4605      	mov	r5, r0
 80117fc:	b950      	cbnz	r0, 8011814 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 80117fe:	6823      	ldr	r3, [r4, #0]
 8011800:	4620      	mov	r0, r4
 8011802:	691b      	ldr	r3, [r3, #16]
 8011804:	4798      	blx	r3
 8011806:	4601      	mov	r1, r0
 8011808:	4620      	mov	r0, r4
 801180a:	f7ff ffa5 	bl	8011758 <_ZNK8touchgfx9ConstFont4findEt>
 801180e:	4605      	mov	r5, r0
 8011810:	2800      	cmp	r0, #0
 8011812:	d0e3      	beq.n	80117dc <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8011814:	6823      	ldr	r3, [r4, #0]
 8011816:	4629      	mov	r1, r5
 8011818:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801181a:	4620      	mov	r0, r4
 801181c:	4798      	blx	r3
 801181e:	6038      	str	r0, [r7, #0]
 8011820:	6823      	ldr	r3, [r4, #0]
 8011822:	4620      	mov	r0, r4
 8011824:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8011826:	4798      	blx	r3
 8011828:	7030      	strb	r0, [r6, #0]
 801182a:	e7d8      	b.n	80117de <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

0801182c <_ZN8touchgfx4clzuEm>:
 801182c:	4603      	mov	r3, r0
 801182e:	b1c8      	cbz	r0, 8011864 <_ZN8touchgfx4clzuEm+0x38>
 8011830:	0c02      	lsrs	r2, r0, #16
 8011832:	0412      	lsls	r2, r2, #16
 8011834:	b9a2      	cbnz	r2, 8011860 <_ZN8touchgfx4clzuEm+0x34>
 8011836:	0403      	lsls	r3, r0, #16
 8011838:	2010      	movs	r0, #16
 801183a:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 801183e:	bf04      	itt	eq
 8011840:	021b      	lsleq	r3, r3, #8
 8011842:	3008      	addeq	r0, #8
 8011844:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8011848:	bf04      	itt	eq
 801184a:	011b      	lsleq	r3, r3, #4
 801184c:	3004      	addeq	r0, #4
 801184e:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8011852:	bf04      	itt	eq
 8011854:	009b      	lsleq	r3, r3, #2
 8011856:	3002      	addeq	r0, #2
 8011858:	2b00      	cmp	r3, #0
 801185a:	db04      	blt.n	8011866 <_ZN8touchgfx4clzuEm+0x3a>
 801185c:	3001      	adds	r0, #1
 801185e:	4770      	bx	lr
 8011860:	2000      	movs	r0, #0
 8011862:	e7ea      	b.n	801183a <_ZN8touchgfx4clzuEm+0xe>
 8011864:	2020      	movs	r0, #32
 8011866:	4770      	bx	lr

08011868 <_ZN8touchgfx7muldivuEmmmRm>:
 8011868:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801186c:	4680      	mov	r8, r0
 801186e:	460f      	mov	r7, r1
 8011870:	4615      	mov	r5, r2
 8011872:	461e      	mov	r6, r3
 8011874:	f7ff ffda 	bl	801182c <_ZN8touchgfx4clzuEm>
 8011878:	b998      	cbnz	r0, 80118a2 <_ZN8touchgfx7muldivuEmmmRm+0x3a>
 801187a:	4608      	mov	r0, r1
 801187c:	f7ff ffd6 	bl	801182c <_ZN8touchgfx4clzuEm>
 8011880:	2800      	cmp	r0, #0
 8011882:	dd08      	ble.n	8011896 <_ZN8touchgfx7muldivuEmmmRm+0x2e>
 8011884:	4633      	mov	r3, r6
 8011886:	462a      	mov	r2, r5
 8011888:	4641      	mov	r1, r8
 801188a:	4638      	mov	r0, r7
 801188c:	f7ff ffec 	bl	8011868 <_ZN8touchgfx7muldivuEmmmRm>
 8011890:	b003      	add	sp, #12
 8011892:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011896:	f04f 33ff 	mov.w	r3, #4294967295
 801189a:	6033      	str	r3, [r6, #0]
 801189c:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 80118a0:	e7f6      	b.n	8011890 <_ZN8touchgfx7muldivuEmmmRm+0x28>
 80118a2:	fa31 f900 	lsrs.w	r9, r1, r0
 80118a6:	fb01 f308 	mul.w	r3, r1, r8
 80118aa:	d105      	bne.n	80118b8 <_ZN8touchgfx7muldivuEmmmRm+0x50>
 80118ac:	fbb3 f0f5 	udiv	r0, r3, r5
 80118b0:	fb05 3510 	mls	r5, r5, r0, r3
 80118b4:	6035      	str	r5, [r6, #0]
 80118b6:	e7eb      	b.n	8011890 <_ZN8touchgfx7muldivuEmmmRm+0x28>
 80118b8:	2301      	movs	r3, #1
 80118ba:	fa08 fb00 	lsl.w	fp, r8, r0
 80118be:	fa03 f000 	lsl.w	r0, r3, r0
 80118c2:	3801      	subs	r0, #1
 80118c4:	462a      	mov	r2, r5
 80118c6:	4633      	mov	r3, r6
 80118c8:	4641      	mov	r1, r8
 80118ca:	4038      	ands	r0, r7
 80118cc:	f7ff ffcc 	bl	8011868 <_ZN8touchgfx7muldivuEmmmRm>
 80118d0:	fbbb faf5 	udiv	sl, fp, r5
 80118d4:	462a      	mov	r2, r5
 80118d6:	4607      	mov	r7, r0
 80118d8:	ab01      	add	r3, sp, #4
 80118da:	fb05 b11a 	mls	r1, r5, sl, fp
 80118de:	4648      	mov	r0, r9
 80118e0:	f7ff ffc2 	bl	8011868 <_ZN8touchgfx7muldivuEmmmRm>
 80118e4:	9b01      	ldr	r3, [sp, #4]
 80118e6:	6832      	ldr	r2, [r6, #0]
 80118e8:	fb09 f40a 	mul.w	r4, r9, sl
 80118ec:	441a      	add	r2, r3
 80118ee:	fbb2 f3f5 	udiv	r3, r2, r5
 80118f2:	441c      	add	r4, r3
 80118f4:	443c      	add	r4, r7
 80118f6:	4420      	add	r0, r4
 80118f8:	fb05 2513 	mls	r5, r5, r3, r2
 80118fc:	e7da      	b.n	80118b4 <_ZN8touchgfx7muldivuEmmmRm+0x4c>

080118fe <_ZN8touchgfx6muldivElllRl>:
 80118fe:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8011900:	2800      	cmp	r0, #0
 8011902:	bfba      	itte	lt
 8011904:	4240      	neglt	r0, r0
 8011906:	f04f 34ff 	movlt.w	r4, #4294967295
 801190a:	2401      	movge	r4, #1
 801190c:	2900      	cmp	r1, #0
 801190e:	bfbc      	itt	lt
 8011910:	4249      	neglt	r1, r1
 8011912:	4264      	neglt	r4, r4
 8011914:	2a00      	cmp	r2, #0
 8011916:	bfb6      	itet	lt
 8011918:	4265      	neglt	r5, r4
 801191a:	4625      	movge	r5, r4
 801191c:	4252      	neglt	r2, r2
 801191e:	4288      	cmp	r0, r1
 8011920:	461e      	mov	r6, r3
 8011922:	bfc2      	ittt	gt
 8011924:	4603      	movgt	r3, r0
 8011926:	4608      	movgt	r0, r1
 8011928:	4619      	movgt	r1, r3
 801192a:	ab01      	add	r3, sp, #4
 801192c:	f7ff ff9c 	bl	8011868 <_ZN8touchgfx7muldivuEmmmRm>
 8011930:	9b01      	ldr	r3, [sp, #4]
 8011932:	4368      	muls	r0, r5
 8011934:	435c      	muls	r4, r3
 8011936:	6034      	str	r4, [r6, #0]
 8011938:	b002      	add	sp, #8
 801193a:	bd70      	pop	{r4, r5, r6, pc}

0801193c <_ZN8touchgfx6muldivElll>:
 801193c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801193e:	4606      	mov	r6, r0
 8011940:	ab01      	add	r3, sp, #4
 8011942:	460d      	mov	r5, r1
 8011944:	4614      	mov	r4, r2
 8011946:	f7ff ffda 	bl	80118fe <_ZN8touchgfx6muldivElllRl>
 801194a:	2e00      	cmp	r6, #0
 801194c:	db20      	blt.n	8011990 <_ZN8touchgfx6muldivElll+0x54>
 801194e:	bf14      	ite	ne
 8011950:	2301      	movne	r3, #1
 8011952:	2300      	moveq	r3, #0
 8011954:	2d00      	cmp	r5, #0
 8011956:	db1e      	blt.n	8011996 <_ZN8touchgfx6muldivElll+0x5a>
 8011958:	bf14      	ite	ne
 801195a:	2201      	movne	r2, #1
 801195c:	2200      	moveq	r2, #0
 801195e:	2c00      	cmp	r4, #0
 8011960:	fb03 f202 	mul.w	r2, r3, r2
 8011964:	db1a      	blt.n	801199c <_ZN8touchgfx6muldivElll+0x60>
 8011966:	bf14      	ite	ne
 8011968:	2301      	movne	r3, #1
 801196a:	2300      	moveq	r3, #0
 801196c:	4353      	muls	r3, r2
 801196e:	2b01      	cmp	r3, #1
 8011970:	d117      	bne.n	80119a2 <_ZN8touchgfx6muldivElll+0x66>
 8011972:	9b01      	ldr	r3, [sp, #4]
 8011974:	2c00      	cmp	r4, #0
 8011976:	bfb8      	it	lt
 8011978:	4264      	neglt	r4, r4
 801197a:	2b00      	cmp	r3, #0
 801197c:	f104 0401 	add.w	r4, r4, #1
 8011980:	bfb8      	it	lt
 8011982:	425b      	neglt	r3, r3
 8011984:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 8011988:	db00      	blt.n	801198c <_ZN8touchgfx6muldivElll+0x50>
 801198a:	3001      	adds	r0, #1
 801198c:	b002      	add	sp, #8
 801198e:	bd70      	pop	{r4, r5, r6, pc}
 8011990:	f04f 33ff 	mov.w	r3, #4294967295
 8011994:	e7de      	b.n	8011954 <_ZN8touchgfx6muldivElll+0x18>
 8011996:	f04f 32ff 	mov.w	r2, #4294967295
 801199a:	e7e0      	b.n	801195e <_ZN8touchgfx6muldivElll+0x22>
 801199c:	f04f 33ff 	mov.w	r3, #4294967295
 80119a0:	e7e4      	b.n	801196c <_ZN8touchgfx6muldivElll+0x30>
 80119a2:	3301      	adds	r3, #1
 80119a4:	d1f2      	bne.n	801198c <_ZN8touchgfx6muldivElll+0x50>
 80119a6:	9b01      	ldr	r3, [sp, #4]
 80119a8:	2c00      	cmp	r4, #0
 80119aa:	bfb8      	it	lt
 80119ac:	4264      	neglt	r4, r4
 80119ae:	2b00      	cmp	r3, #0
 80119b0:	bfb8      	it	lt
 80119b2:	425b      	neglt	r3, r3
 80119b4:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 80119b8:	bfc8      	it	gt
 80119ba:	f100 30ff 	addgt.w	r0, r0, #4294967295
 80119be:	e7e5      	b.n	801198c <_ZN8touchgfx6muldivElll+0x50>

080119c0 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 80119c0:	2000      	movs	r0, #0
 80119c2:	4770      	bx	lr

080119c4 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 80119c4:	2001      	movs	r0, #1
 80119c6:	4770      	bx	lr

080119c8 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 80119c8:	2002      	movs	r0, #2
 80119ca:	4770      	bx	lr

080119cc <_ZN8touchgfx6ScreenD1Ev>:
 80119cc:	4770      	bx	lr

080119ce <_ZN8touchgfx12GestureEventD1Ev>:
 80119ce:	4770      	bx	lr

080119d0 <_ZN8touchgfx9DragEventD1Ev>:
 80119d0:	4770      	bx	lr

080119d2 <_ZN8touchgfx10ClickEventD1Ev>:
 80119d2:	4770      	bx	lr

080119d4 <_ZN8touchgfx10ClickEventD0Ev>:
 80119d4:	b510      	push	{r4, lr}
 80119d6:	210c      	movs	r1, #12
 80119d8:	4604      	mov	r4, r0
 80119da:	f00e f973 	bl	801fcc4 <_ZdlPvj>
 80119de:	4620      	mov	r0, r4
 80119e0:	bd10      	pop	{r4, pc}

080119e2 <_ZN8touchgfx9DragEventD0Ev>:
 80119e2:	b510      	push	{r4, lr}
 80119e4:	2110      	movs	r1, #16
 80119e6:	4604      	mov	r4, r0
 80119e8:	f00e f96c 	bl	801fcc4 <_ZdlPvj>
 80119ec:	4620      	mov	r0, r4
 80119ee:	bd10      	pop	{r4, pc}

080119f0 <_ZN8touchgfx12GestureEventD0Ev>:
 80119f0:	b510      	push	{r4, lr}
 80119f2:	210c      	movs	r1, #12
 80119f4:	4604      	mov	r4, r0
 80119f6:	f00e f965 	bl	801fcc4 <_ZdlPvj>
 80119fa:	4620      	mov	r0, r4
 80119fc:	bd10      	pop	{r4, pc}

080119fe <_ZN8touchgfx6ScreenD0Ev>:
 80119fe:	b510      	push	{r4, lr}
 8011a00:	213c      	movs	r1, #60	; 0x3c
 8011a02:	4604      	mov	r4, r0
 8011a04:	f00e f95e 	bl	801fcc4 <_ZdlPvj>
 8011a08:	4620      	mov	r0, r4
 8011a0a:	bd10      	pop	{r4, pc}

08011a0c <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 8011a0c:	b530      	push	{r4, r5, lr}
 8011a0e:	460d      	mov	r5, r1
 8011a10:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8011a12:	b087      	sub	sp, #28
 8011a14:	4604      	mov	r4, r0
 8011a16:	b301      	cbz	r1, 8011a5a <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 8011a18:	a801      	add	r0, sp, #4
 8011a1a:	f7ff fe69 	bl	80116f0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011a1e:	892a      	ldrh	r2, [r5, #8]
 8011a20:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8011a24:	7928      	ldrb	r0, [r5, #4]
 8011a26:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 8011a2a:	f88d 0010 	strb.w	r0, [sp, #16]
 8011a2e:	1ad2      	subs	r2, r2, r3
 8011a30:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8011a32:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8011a34:	f8ad 1012 	strh.w	r1, [sp, #18]
 8011a38:	441a      	add	r2, r3
 8011a3a:	896b      	ldrh	r3, [r5, #10]
 8011a3c:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 8011a40:	f8ad 2014 	strh.w	r2, [sp, #20]
 8011a44:	1b5b      	subs	r3, r3, r5
 8011a46:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 8011a48:	442b      	add	r3, r5
 8011a4a:	4d05      	ldr	r5, [pc, #20]	; (8011a60 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 8011a4c:	9503      	str	r5, [sp, #12]
 8011a4e:	f8ad 3016 	strh.w	r3, [sp, #22]
 8011a52:	6803      	ldr	r3, [r0, #0]
 8011a54:	a903      	add	r1, sp, #12
 8011a56:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8011a58:	4798      	blx	r3
 8011a5a:	b007      	add	sp, #28
 8011a5c:	bd30      	pop	{r4, r5, pc}
 8011a5e:	bf00      	nop
 8011a60:	0802380c 	.word	0x0802380c

08011a64 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8011a64:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011a68:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8011a6a:	b08a      	sub	sp, #40	; 0x28
 8011a6c:	4604      	mov	r4, r0
 8011a6e:	460d      	mov	r5, r1
 8011a70:	b113      	cbz	r3, 8011a78 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 8011a72:	790b      	ldrb	r3, [r1, #4]
 8011a74:	2b00      	cmp	r3, #0
 8011a76:	d044      	beq.n	8011b02 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8011a78:	f104 0804 	add.w	r8, r4, #4
 8011a7c:	4641      	mov	r1, r8
 8011a7e:	a803      	add	r0, sp, #12
 8011a80:	f7ff fe36 	bl	80116f0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011a84:	792b      	ldrb	r3, [r5, #4]
 8011a86:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8011a8a:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 8011a8e:	b983      	cbnz	r3, 8011ab2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 8011a90:	892a      	ldrh	r2, [r5, #8]
 8011a92:	88e9      	ldrh	r1, [r5, #6]
 8011a94:	f104 0336 	add.w	r3, r4, #54	; 0x36
 8011a98:	1b92      	subs	r2, r2, r6
 8011a9a:	1bc9      	subs	r1, r1, r7
 8011a9c:	9301      	str	r3, [sp, #4]
 8011a9e:	f104 0334 	add.w	r3, r4, #52	; 0x34
 8011aa2:	9300      	str	r3, [sp, #0]
 8011aa4:	b212      	sxth	r2, r2
 8011aa6:	f104 0330 	add.w	r3, r4, #48	; 0x30
 8011aaa:	b209      	sxth	r1, r1
 8011aac:	4640      	mov	r0, r8
 8011aae:	f7f8 fb69 	bl	800a184 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 8011ab2:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8011ab4:	b329      	cbz	r1, 8011b02 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8011ab6:	a805      	add	r0, sp, #20
 8011ab8:	f7ff fe1a 	bl	80116f0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011abc:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8011ac0:	792b      	ldrb	r3, [r5, #4]
 8011ac2:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8011ac4:	f88d 3020 	strb.w	r3, [sp, #32]
 8011ac8:	1abf      	subs	r7, r7, r2
 8011aca:	88ea      	ldrh	r2, [r5, #6]
 8011acc:	4417      	add	r7, r2
 8011ace:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 8011ad0:	4417      	add	r7, r2
 8011ad2:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 8011ad6:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 8011ada:	1ab6      	subs	r6, r6, r2
 8011adc:	892a      	ldrh	r2, [r5, #8]
 8011ade:	4416      	add	r6, r2
 8011ae0:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8011ae2:	4416      	add	r6, r2
 8011ae4:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 8011ae8:	4a07      	ldr	r2, [pc, #28]	; (8011b08 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 8011aea:	9207      	str	r2, [sp, #28]
 8011aec:	2600      	movs	r6, #0
 8011aee:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 8011af2:	6803      	ldr	r3, [r0, #0]
 8011af4:	a907      	add	r1, sp, #28
 8011af6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8011af8:	4798      	blx	r3
 8011afa:	792b      	ldrb	r3, [r5, #4]
 8011afc:	b10b      	cbz	r3, 8011b02 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8011afe:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 8011b02:	b00a      	add	sp, #40	; 0x28
 8011b04:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011b08:	080237e4 	.word	0x080237e4

08011b0c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 8011b0c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011b10:	460c      	mov	r4, r1
 8011b12:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8011b14:	b088      	sub	sp, #32
 8011b16:	4605      	mov	r5, r0
 8011b18:	2900      	cmp	r1, #0
 8011b1a:	d06d      	beq.n	8011bf8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 8011b1c:	4668      	mov	r0, sp
 8011b1e:	f7ff fde7 	bl	80116f0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011b22:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 8011b24:	88e3      	ldrh	r3, [r4, #6]
 8011b26:	f9bd 8000 	ldrsh.w	r8, [sp]
 8011b2a:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 8011b2e:	440b      	add	r3, r1
 8011b30:	b21b      	sxth	r3, r3
 8011b32:	4543      	cmp	r3, r8
 8011b34:	db31      	blt.n	8011b9a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8011b36:	f8bd c004 	ldrh.w	ip, [sp, #4]
 8011b3a:	44c4      	add	ip, r8
 8011b3c:	fa0f fc8c 	sxth.w	ip, ip
 8011b40:	4563      	cmp	r3, ip
 8011b42:	da2a      	bge.n	8011b9a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8011b44:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 8011b46:	8926      	ldrh	r6, [r4, #8]
 8011b48:	4416      	add	r6, r2
 8011b4a:	b236      	sxth	r6, r6
 8011b4c:	42be      	cmp	r6, r7
 8011b4e:	db24      	blt.n	8011b9a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8011b50:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8011b54:	4438      	add	r0, r7
 8011b56:	b200      	sxth	r0, r0
 8011b58:	4286      	cmp	r6, r0
 8011b5a:	da1e      	bge.n	8011b9a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8011b5c:	8963      	ldrh	r3, [r4, #10]
 8011b5e:	4419      	add	r1, r3
 8011b60:	b209      	sxth	r1, r1
 8011b62:	4541      	cmp	r1, r8
 8011b64:	db08      	blt.n	8011b78 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8011b66:	4561      	cmp	r1, ip
 8011b68:	da06      	bge.n	8011b78 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8011b6a:	89a3      	ldrh	r3, [r4, #12]
 8011b6c:	441a      	add	r2, r3
 8011b6e:	b212      	sxth	r2, r2
 8011b70:	42ba      	cmp	r2, r7
 8011b72:	db01      	blt.n	8011b78 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8011b74:	4282      	cmp	r2, r0
 8011b76:	db10      	blt.n	8011b9a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8011b78:	4b21      	ldr	r3, [pc, #132]	; (8011c00 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 8011b7a:	9304      	str	r3, [sp, #16]
 8011b7c:	2302      	movs	r3, #2
 8011b7e:	f88d 3014 	strb.w	r3, [sp, #20]
 8011b82:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8011b84:	2300      	movs	r3, #0
 8011b86:	f8ad 3016 	strh.w	r3, [sp, #22]
 8011b8a:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011b8e:	f8ad 301a 	strh.w	r3, [sp, #26]
 8011b92:	6803      	ldr	r3, [r0, #0]
 8011b94:	a904      	add	r1, sp, #16
 8011b96:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8011b98:	4798      	blx	r3
 8011b9a:	1d29      	adds	r1, r5, #4
 8011b9c:	a802      	add	r0, sp, #8
 8011b9e:	f7ff fda7 	bl	80116f0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011ba2:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8011ba6:	88e0      	ldrh	r0, [r4, #6]
 8011ba8:	7921      	ldrb	r1, [r4, #4]
 8011baa:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 8011bae:	8922      	ldrh	r2, [r4, #8]
 8011bb0:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 8011bb2:	f88d 1014 	strb.w	r1, [sp, #20]
 8011bb6:	eba3 0808 	sub.w	r8, r3, r8
 8011bba:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8011bbe:	1bdf      	subs	r7, r3, r7
 8011bc0:	b2bb      	uxth	r3, r7
 8011bc2:	fa1f f888 	uxth.w	r8, r8
 8011bc6:	8967      	ldrh	r7, [r4, #10]
 8011bc8:	89a4      	ldrh	r4, [r4, #12]
 8011bca:	4440      	add	r0, r8
 8011bcc:	4460      	add	r0, ip
 8011bce:	441a      	add	r2, r3
 8011bd0:	44b8      	add	r8, r7
 8011bd2:	4423      	add	r3, r4
 8011bd4:	f8ad 0016 	strh.w	r0, [sp, #22]
 8011bd8:	4433      	add	r3, r6
 8011bda:	4432      	add	r2, r6
 8011bdc:	44e0      	add	r8, ip
 8011bde:	4c09      	ldr	r4, [pc, #36]	; (8011c04 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 8011be0:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8011be2:	9404      	str	r4, [sp, #16]
 8011be4:	f8ad 2018 	strh.w	r2, [sp, #24]
 8011be8:	f8ad 801a 	strh.w	r8, [sp, #26]
 8011bec:	f8ad 301c 	strh.w	r3, [sp, #28]
 8011bf0:	6803      	ldr	r3, [r0, #0]
 8011bf2:	a904      	add	r1, sp, #16
 8011bf4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8011bf6:	4798      	blx	r3
 8011bf8:	b008      	add	sp, #32
 8011bfa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011bfe:	bf00      	nop
 8011c00:	080237e4 	.word	0x080237e4
 8011c04:	080237f8 	.word	0x080237f8

08011c08 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 8011c08:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8011c0a:	4604      	mov	r4, r0
 8011c0c:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 8011c10:	3201      	adds	r2, #1
 8011c12:	d112      	bne.n	8011c3a <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 8011c14:	6803      	ldr	r3, [r0, #0]
 8011c16:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8011c1a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8011c1e:	f8ad 1004 	strh.w	r1, [sp, #4]
 8011c22:	2500      	movs	r5, #0
 8011c24:	9500      	str	r5, [sp, #0]
 8011c26:	466d      	mov	r5, sp
 8011c28:	4629      	mov	r1, r5
 8011c2a:	f8ad 2006 	strh.w	r2, [sp, #6]
 8011c2e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8011c30:	4798      	blx	r3
 8011c32:	e895 0003 	ldmia.w	r5, {r0, r1}
 8011c36:	e884 0003 	stmia.w	r4, {r0, r1}
 8011c3a:	4620      	mov	r0, r4
 8011c3c:	b003      	add	sp, #12
 8011c3e:	bd30      	pop	{r4, r5, pc}

08011c40 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8011c40:	b513      	push	{r0, r1, r4, lr}
 8011c42:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 8011c46:	3301      	adds	r3, #1
 8011c48:	4604      	mov	r4, r0
 8011c4a:	d109      	bne.n	8011c60 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 8011c4c:	4601      	mov	r1, r0
 8011c4e:	4668      	mov	r0, sp
 8011c50:	f7ff fd4e 	bl	80116f0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011c54:	f8bd 3000 	ldrh.w	r3, [sp]
 8011c58:	8423      	strh	r3, [r4, #32]
 8011c5a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8011c5e:	8463      	strh	r3, [r4, #34]	; 0x22
 8011c60:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8011c64:	b002      	add	sp, #8
 8011c66:	bd10      	pop	{r4, pc}

08011c68 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 8011c68:	b513      	push	{r0, r1, r4, lr}
 8011c6a:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 8011c6e:	3301      	adds	r3, #1
 8011c70:	4604      	mov	r4, r0
 8011c72:	d109      	bne.n	8011c88 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8011c74:	4601      	mov	r1, r0
 8011c76:	4668      	mov	r0, sp
 8011c78:	f7ff fd3a 	bl	80116f0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011c7c:	f8bd 3000 	ldrh.w	r3, [sp]
 8011c80:	8423      	strh	r3, [r4, #32]
 8011c82:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8011c86:	8463      	strh	r3, [r4, #34]	; 0x22
 8011c88:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 8011c8c:	b002      	add	sp, #8
 8011c8e:	bd10      	pop	{r4, pc}

08011c90 <_ZN8touchgfx6ScreenC1Ev>:
 8011c90:	b570      	push	{r4, r5, r6, lr}
 8011c92:	4605      	mov	r5, r0
 8011c94:	4b16      	ldr	r3, [pc, #88]	; (8011cf0 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 8011c96:	f845 3b04 	str.w	r3, [r5], #4
 8011c9a:	2300      	movs	r3, #0
 8011c9c:	8103      	strh	r3, [r0, #8]
 8011c9e:	8143      	strh	r3, [r0, #10]
 8011ca0:	8183      	strh	r3, [r0, #12]
 8011ca2:	81c3      	strh	r3, [r0, #14]
 8011ca4:	8203      	strh	r3, [r0, #16]
 8011ca6:	8243      	strh	r3, [r0, #18]
 8011ca8:	8283      	strh	r3, [r0, #20]
 8011caa:	82c3      	strh	r3, [r0, #22]
 8011cac:	e9c0 3306 	strd	r3, r3, [r0, #24]
 8011cb0:	6203      	str	r3, [r0, #32]
 8011cb2:	8483      	strh	r3, [r0, #36]	; 0x24
 8011cb4:	84c3      	strh	r3, [r0, #38]	; 0x26
 8011cb6:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 8011cba:	4a0e      	ldr	r2, [pc, #56]	; (8011cf4 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 8011cbc:	6343      	str	r3, [r0, #52]	; 0x34
 8011cbe:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 8011cc2:	4b0d      	ldr	r3, [pc, #52]	; (8011cf8 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 8011cc4:	6042      	str	r2, [r0, #4]
 8011cc6:	f9b3 6000 	ldrsh.w	r6, [r3]
 8011cca:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8011ccc:	4a0b      	ldr	r2, [pc, #44]	; (8011cfc <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 8011cce:	4604      	mov	r4, r0
 8011cd0:	2101      	movs	r1, #1
 8011cd2:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8011cd6:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 8011cda:	f9b2 1000 	ldrsh.w	r1, [r2]
 8011cde:	4628      	mov	r0, r5
 8011ce0:	4798      	blx	r3
 8011ce2:	6863      	ldr	r3, [r4, #4]
 8011ce4:	4628      	mov	r0, r5
 8011ce6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8011ce8:	4631      	mov	r1, r6
 8011cea:	4798      	blx	r3
 8011cec:	4620      	mov	r0, r4
 8011cee:	bd70      	pop	{r4, r5, r6, pc}
 8011cf0:	08023820 	.word	0x08023820
 8011cf4:	08022c3c 	.word	0x08022c3c
 8011cf8:	20015352 	.word	0x20015352
 8011cfc:	20015350 	.word	0x20015350

08011d00 <_ZN8touchgfx6Screen4drawEv>:
 8011d00:	b507      	push	{r0, r1, r2, lr}
 8011d02:	4b09      	ldr	r3, [pc, #36]	; (8011d28 <_ZN8touchgfx6Screen4drawEv+0x28>)
 8011d04:	f9b3 2000 	ldrsh.w	r2, [r3]
 8011d08:	4b08      	ldr	r3, [pc, #32]	; (8011d2c <_ZN8touchgfx6Screen4drawEv+0x2c>)
 8011d0a:	f8ad 2004 	strh.w	r2, [sp, #4]
 8011d0e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8011d12:	f8ad 3006 	strh.w	r3, [sp, #6]
 8011d16:	6803      	ldr	r3, [r0, #0]
 8011d18:	2100      	movs	r1, #0
 8011d1a:	9100      	str	r1, [sp, #0]
 8011d1c:	689b      	ldr	r3, [r3, #8]
 8011d1e:	4669      	mov	r1, sp
 8011d20:	4798      	blx	r3
 8011d22:	b003      	add	sp, #12
 8011d24:	f85d fb04 	ldr.w	pc, [sp], #4
 8011d28:	20015350 	.word	0x20015350
 8011d2c:	20015352 	.word	0x20015352

08011d30 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 8011d30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011d34:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8011d38:	2b00      	cmp	r3, #0
 8011d3a:	b089      	sub	sp, #36	; 0x24
 8011d3c:	4680      	mov	r8, r0
 8011d3e:	460c      	mov	r4, r1
 8011d40:	4615      	mov	r5, r2
 8011d42:	dd0e      	ble.n	8011d62 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8011d44:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8011d48:	2b00      	cmp	r3, #0
 8011d4a:	dd0a      	ble.n	8011d62 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8011d4c:	4628      	mov	r0, r5
 8011d4e:	f7ff ff5b 	bl	8011c08 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8011d52:	4621      	mov	r1, r4
 8011d54:	f7fe fc01 	bl	801055a <_ZNK8touchgfx4Rect9intersectERKS0_>
 8011d58:	69eb      	ldr	r3, [r5, #28]
 8011d5a:	b928      	cbnz	r0, 8011d68 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 8011d5c:	461d      	mov	r5, r3
 8011d5e:	2b00      	cmp	r3, #0
 8011d60:	d1f4      	bne.n	8011d4c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 8011d62:	b009      	add	sp, #36	; 0x24
 8011d64:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011d68:	ae04      	add	r6, sp, #16
 8011d6a:	2b00      	cmp	r3, #0
 8011d6c:	f000 80b5 	beq.w	8011eda <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8011d70:	682b      	ldr	r3, [r5, #0]
 8011d72:	4629      	mov	r1, r5
 8011d74:	68db      	ldr	r3, [r3, #12]
 8011d76:	a802      	add	r0, sp, #8
 8011d78:	4798      	blx	r3
 8011d7a:	4628      	mov	r0, r5
 8011d7c:	f7ff ff60 	bl	8011c40 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8011d80:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8011d84:	4407      	add	r7, r0
 8011d86:	4628      	mov	r0, r5
 8011d88:	f7ff ff6e 	bl	8011c68 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8011d8c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8011d90:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8011d94:	f8ad 2014 	strh.w	r2, [sp, #20]
 8011d98:	4418      	add	r0, r3
 8011d9a:	4621      	mov	r1, r4
 8011d9c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8011da0:	f8ad 0012 	strh.w	r0, [sp, #18]
 8011da4:	b23f      	sxth	r7, r7
 8011da6:	4630      	mov	r0, r6
 8011da8:	f8ad 3016 	strh.w	r3, [sp, #22]
 8011dac:	f8ad 7010 	strh.w	r7, [sp, #16]
 8011db0:	f7f8 facc 	bl	800a34c <_ZN8touchgfx4RectaNERKS0_>
 8011db4:	4628      	mov	r0, r5
 8011db6:	f7ff ff27 	bl	8011c08 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8011dba:	4602      	mov	r2, r0
 8011dbc:	e896 0003 	ldmia.w	r6, {r0, r1}
 8011dc0:	ab06      	add	r3, sp, #24
 8011dc2:	e883 0003 	stmia.w	r3, {r0, r1}
 8011dc6:	4611      	mov	r1, r2
 8011dc8:	4618      	mov	r0, r3
 8011dca:	f7f8 fabf 	bl	800a34c <_ZN8touchgfx4RectaNERKS0_>
 8011dce:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8011dd2:	f9b4 1000 	ldrsh.w	r1, [r4]
 8011dd6:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 8011dda:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 8011dde:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 8011de2:	4299      	cmp	r1, r3
 8011de4:	d10b      	bne.n	8011dfe <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8011de6:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8011dea:	4552      	cmp	r2, sl
 8011dec:	d107      	bne.n	8011dfe <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8011dee:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8011df2:	455a      	cmp	r2, fp
 8011df4:	d103      	bne.n	8011dfe <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8011df6:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8011dfa:	454a      	cmp	r2, r9
 8011dfc:	d06d      	beq.n	8011eda <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8011dfe:	f1bb 0f00 	cmp.w	fp, #0
 8011e02:	dd65      	ble.n	8011ed0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8011e04:	f1b9 0f00 	cmp.w	r9, #0
 8011e08:	dd62      	ble.n	8011ed0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8011e0a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8011e0e:	fa1f f08a 	uxth.w	r0, sl
 8011e12:	4552      	cmp	r2, sl
 8011e14:	9000      	str	r0, [sp, #0]
 8011e16:	da12      	bge.n	8011e3e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 8011e18:	9301      	str	r3, [sp, #4]
 8011e1a:	9b00      	ldr	r3, [sp, #0]
 8011e1c:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8011e20:	f8ad 2012 	strh.w	r2, [sp, #18]
 8011e24:	1a9a      	subs	r2, r3, r2
 8011e26:	f8ad 1010 	strh.w	r1, [sp, #16]
 8011e2a:	f8ad 0014 	strh.w	r0, [sp, #20]
 8011e2e:	f8ad 2016 	strh.w	r2, [sp, #22]
 8011e32:	69ea      	ldr	r2, [r5, #28]
 8011e34:	4631      	mov	r1, r6
 8011e36:	4640      	mov	r0, r8
 8011e38:	f7ff ff7a 	bl	8011d30 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8011e3c:	9b01      	ldr	r3, [sp, #4]
 8011e3e:	f9b4 2000 	ldrsh.w	r2, [r4]
 8011e42:	429a      	cmp	r2, r3
 8011e44:	b29f      	uxth	r7, r3
 8011e46:	da0d      	bge.n	8011e64 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 8011e48:	f8ad 2010 	strh.w	r2, [sp, #16]
 8011e4c:	1aba      	subs	r2, r7, r2
 8011e4e:	f8ad a012 	strh.w	sl, [sp, #18]
 8011e52:	f8ad 2014 	strh.w	r2, [sp, #20]
 8011e56:	f8ad 9016 	strh.w	r9, [sp, #22]
 8011e5a:	69ea      	ldr	r2, [r5, #28]
 8011e5c:	4631      	mov	r1, r6
 8011e5e:	4640      	mov	r0, r8
 8011e60:	f7ff ff66 	bl	8011d30 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8011e64:	8822      	ldrh	r2, [r4, #0]
 8011e66:	88a3      	ldrh	r3, [r4, #4]
 8011e68:	445f      	add	r7, fp
 8011e6a:	4413      	add	r3, r2
 8011e6c:	b29b      	uxth	r3, r3
 8011e6e:	b2bf      	uxth	r7, r7
 8011e70:	b23a      	sxth	r2, r7
 8011e72:	b219      	sxth	r1, r3
 8011e74:	4291      	cmp	r1, r2
 8011e76:	dd0d      	ble.n	8011e94 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 8011e78:	1bdb      	subs	r3, r3, r7
 8011e7a:	f8ad 2010 	strh.w	r2, [sp, #16]
 8011e7e:	f8ad a012 	strh.w	sl, [sp, #18]
 8011e82:	f8ad 3014 	strh.w	r3, [sp, #20]
 8011e86:	f8ad 9016 	strh.w	r9, [sp, #22]
 8011e8a:	69ea      	ldr	r2, [r5, #28]
 8011e8c:	4631      	mov	r1, r6
 8011e8e:	4640      	mov	r0, r8
 8011e90:	f7ff ff4e 	bl	8011d30 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8011e94:	88e2      	ldrh	r2, [r4, #6]
 8011e96:	8863      	ldrh	r3, [r4, #2]
 8011e98:	4413      	add	r3, r2
 8011e9a:	9a00      	ldr	r2, [sp, #0]
 8011e9c:	444a      	add	r2, r9
 8011e9e:	b29b      	uxth	r3, r3
 8011ea0:	fa1f f982 	uxth.w	r9, r2
 8011ea4:	fa0f f289 	sxth.w	r2, r9
 8011ea8:	b219      	sxth	r1, r3
 8011eaa:	428a      	cmp	r2, r1
 8011eac:	da15      	bge.n	8011eda <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8011eae:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8011eb2:	f9b4 0000 	ldrsh.w	r0, [r4]
 8011eb6:	f8ad 1014 	strh.w	r1, [sp, #20]
 8011eba:	eba3 0309 	sub.w	r3, r3, r9
 8011ebe:	f8ad 0010 	strh.w	r0, [sp, #16]
 8011ec2:	f8ad 2012 	strh.w	r2, [sp, #18]
 8011ec6:	f8ad 3016 	strh.w	r3, [sp, #22]
 8011eca:	69ea      	ldr	r2, [r5, #28]
 8011ecc:	4631      	mov	r1, r6
 8011ece:	e001      	b.n	8011ed4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 8011ed0:	69ea      	ldr	r2, [r5, #28]
 8011ed2:	4621      	mov	r1, r4
 8011ed4:	4640      	mov	r0, r8
 8011ed6:	f7ff ff2b 	bl	8011d30 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8011eda:	4628      	mov	r0, r5
 8011edc:	f7ff fe94 	bl	8011c08 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8011ee0:	6861      	ldr	r1, [r4, #4]
 8011ee2:	4602      	mov	r2, r0
 8011ee4:	6820      	ldr	r0, [r4, #0]
 8011ee6:	4633      	mov	r3, r6
 8011ee8:	c303      	stmia	r3!, {r0, r1}
 8011eea:	4611      	mov	r1, r2
 8011eec:	4630      	mov	r0, r6
 8011eee:	f7f8 fa2d 	bl	800a34c <_ZN8touchgfx4RectaNERKS0_>
 8011ef2:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8011ef6:	2b00      	cmp	r3, #0
 8011ef8:	f77f af33 	ble.w	8011d62 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8011efc:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8011f00:	2b00      	cmp	r3, #0
 8011f02:	f77f af2e 	ble.w	8011d62 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8011f06:	4628      	mov	r0, r5
 8011f08:	f7ff fe9a 	bl	8011c40 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8011f0c:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8011f10:	1a18      	subs	r0, r3, r0
 8011f12:	f8ad 0010 	strh.w	r0, [sp, #16]
 8011f16:	4628      	mov	r0, r5
 8011f18:	f7ff fea6 	bl	8011c68 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8011f1c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8011f20:	1a18      	subs	r0, r3, r0
 8011f22:	f8ad 0012 	strh.w	r0, [sp, #18]
 8011f26:	682b      	ldr	r3, [r5, #0]
 8011f28:	4631      	mov	r1, r6
 8011f2a:	689b      	ldr	r3, [r3, #8]
 8011f2c:	4628      	mov	r0, r5
 8011f2e:	4798      	blx	r3
 8011f30:	e717      	b.n	8011d62 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

08011f32 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 8011f32:	b570      	push	{r4, r5, r6, lr}
 8011f34:	460c      	mov	r4, r1
 8011f36:	b086      	sub	sp, #24
 8011f38:	1d06      	adds	r6, r0, #4
 8011f3a:	2300      	movs	r3, #0
 8011f3c:	4631      	mov	r1, r6
 8011f3e:	4605      	mov	r5, r0
 8011f40:	a802      	add	r0, sp, #8
 8011f42:	9301      	str	r3, [sp, #4]
 8011f44:	f7ff fbd4 	bl	80116f0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011f48:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8011f4c:	8822      	ldrh	r2, [r4, #0]
 8011f4e:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8011f52:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8011f56:	f8ad 0014 	strh.w	r0, [sp, #20]
 8011f5a:	1ad2      	subs	r2, r2, r3
 8011f5c:	8863      	ldrh	r3, [r4, #2]
 8011f5e:	f8ad 2010 	strh.w	r2, [sp, #16]
 8011f62:	1a5b      	subs	r3, r3, r1
 8011f64:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8011f68:	f8ad 1016 	strh.w	r1, [sp, #22]
 8011f6c:	aa01      	add	r2, sp, #4
 8011f6e:	a904      	add	r1, sp, #16
 8011f70:	4630      	mov	r0, r6
 8011f72:	f8ad 3012 	strh.w	r3, [sp, #18]
 8011f76:	f7f8 fac1 	bl	800a4fc <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 8011f7a:	9a01      	ldr	r2, [sp, #4]
 8011f7c:	b11a      	cbz	r2, 8011f86 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 8011f7e:	4621      	mov	r1, r4
 8011f80:	4628      	mov	r0, r5
 8011f82:	f7ff fed5 	bl	8011d30 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8011f86:	b006      	add	sp, #24
 8011f88:	bd70      	pop	{r4, r5, r6, pc}

08011f8a <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 8011f8a:	b530      	push	{r4, r5, lr}
 8011f8c:	4602      	mov	r2, r0
 8011f8e:	4604      	mov	r4, r0
 8011f90:	f852 0f08 	ldr.w	r0, [r2, #8]!
 8011f94:	b085      	sub	sp, #20
 8011f96:	460d      	mov	r5, r1
 8011f98:	6851      	ldr	r1, [r2, #4]
 8011f9a:	466b      	mov	r3, sp
 8011f9c:	c303      	stmia	r3!, {r0, r1}
 8011f9e:	4629      	mov	r1, r5
 8011fa0:	4668      	mov	r0, sp
 8011fa2:	f7f8 f9d3 	bl	800a34c <_ZN8touchgfx4RectaNERKS0_>
 8011fa6:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8011faa:	b12b      	cbz	r3, 8011fb8 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 8011fac:	4669      	mov	r1, sp
 8011fae:	4620      	mov	r0, r4
 8011fb0:	f7ff ffbf 	bl	8011f32 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 8011fb4:	b005      	add	sp, #20
 8011fb6:	bd30      	pop	{r4, r5, pc}
 8011fb8:	3404      	adds	r4, #4
 8011fba:	4621      	mov	r1, r4
 8011fbc:	a802      	add	r0, sp, #8
 8011fbe:	f7ff fb97 	bl	80116f0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011fc2:	f8bd 3000 	ldrh.w	r3, [sp]
 8011fc6:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 8011fca:	1a9b      	subs	r3, r3, r2
 8011fcc:	f8ad 3000 	strh.w	r3, [sp]
 8011fd0:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8011fd4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8011fd8:	4669      	mov	r1, sp
 8011fda:	1a9b      	subs	r3, r3, r2
 8011fdc:	4620      	mov	r0, r4
 8011fde:	f8ad 3002 	strh.w	r3, [sp, #2]
 8011fe2:	f7f8 fa52 	bl	800a48a <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 8011fe6:	e7e5      	b.n	8011fb4 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

08011fe8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 8011fe8:	680a      	ldr	r2, [r1, #0]
 8011fea:	460b      	mov	r3, r1
 8011fec:	6992      	ldr	r2, [r2, #24]
 8011fee:	1d01      	adds	r1, r0, #4
 8011ff0:	4618      	mov	r0, r3
 8011ff2:	4710      	bx	r2

08011ff4 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 8011ff4:	4298      	cmp	r0, r3
 8011ff6:	d200      	bcs.n	8011ffa <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 8011ff8:	b913      	cbnz	r3, 8012000 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 8011ffa:	440a      	add	r2, r1
 8011ffc:	b210      	sxth	r0, r2
 8011ffe:	4770      	bx	lr
 8012000:	ee07 0a90 	vmov	s15, r0
 8012004:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8012008:	ee07 3a90 	vmov	s15, r3
 801200c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012010:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8012014:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8012018:	ee37 7a66 	vsub.f32	s14, s14, s13
 801201c:	ee07 2a90 	vmov	s15, r2
 8012020:	ee67 5a07 	vmul.f32	s11, s14, s14
 8012024:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 8012028:	eee5 6a87 	vfma.f32	s13, s11, s14
 801202c:	ee07 1a90 	vmov	s15, r1
 8012030:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012034:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8012038:	eee6 7a26 	vfma.f32	s15, s12, s13
 801203c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8012040:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012044:	bfcc      	ite	gt
 8012046:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 801204a:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 801204e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8012052:	ee17 3a90 	vmov	r3, s15
 8012056:	b218      	sxth	r0, r3
 8012058:	4770      	bx	lr

0801205a <_ZN8touchgfx12TextProviderC1Ev>:
 801205a:	b538      	push	{r3, r4, r5, lr}
 801205c:	2500      	movs	r5, #0
 801205e:	2302      	movs	r3, #2
 8012060:	4604      	mov	r4, r0
 8012062:	e9c0 5500 	strd	r5, r5, [r0]
 8012066:	7403      	strb	r3, [r0, #16]
 8012068:	6145      	str	r5, [r0, #20]
 801206a:	7605      	strb	r5, [r0, #24]
 801206c:	83c5      	strh	r5, [r0, #30]
 801206e:	8405      	strh	r5, [r0, #32]
 8012070:	86c5      	strh	r5, [r0, #54]	; 0x36
 8012072:	8705      	strh	r5, [r0, #56]	; 0x38
 8012074:	87c5      	strh	r5, [r0, #62]	; 0x3e
 8012076:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 801207a:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 801207e:	220e      	movs	r2, #14
 8012080:	4629      	mov	r1, r5
 8012082:	304c      	adds	r0, #76	; 0x4c
 8012084:	f00d ffd2 	bl	802002c <memset>
 8012088:	2301      	movs	r3, #1
 801208a:	4620      	mov	r0, r4
 801208c:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 8012090:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8012094:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 8012098:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 801209c:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 80120a0:	f7f2 fbfe 	bl	80048a0 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 80120a4:	4620      	mov	r0, r4
 80120a6:	bd38      	pop	{r3, r4, r5, pc}

080120a8 <_ZN8touchgfx12TextProvider11endOfStringEv>:
 80120a8:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80120aa:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80120ae:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 80120b0:	fab0 f080 	clz	r0, r0
 80120b4:	0940      	lsrs	r0, r0, #5
 80120b6:	4770      	bx	lr

080120b8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 80120b8:	b530      	push	{r4, r5, lr}
 80120ba:	2500      	movs	r5, #0
 80120bc:	2401      	movs	r4, #1
 80120be:	6843      	ldr	r3, [r0, #4]
 80120c0:	b913      	cbnz	r3, 80120c8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 80120c2:	6803      	ldr	r3, [r0, #0]
 80120c4:	b313      	cbz	r3, 801210c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 80120c6:	6043      	str	r3, [r0, #4]
 80120c8:	7e03      	ldrb	r3, [r0, #24]
 80120ca:	b143      	cbz	r3, 80120de <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 80120cc:	6943      	ldr	r3, [r0, #20]
 80120ce:	b12b      	cbz	r3, 80120dc <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 80120d0:	881a      	ldrh	r2, [r3, #0]
 80120d2:	b11a      	cbz	r2, 80120dc <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 80120d4:	1c9a      	adds	r2, r3, #2
 80120d6:	6142      	str	r2, [r0, #20]
 80120d8:	8818      	ldrh	r0, [r3, #0]
 80120da:	bd30      	pop	{r4, r5, pc}
 80120dc:	7605      	strb	r5, [r0, #24]
 80120de:	6843      	ldr	r3, [r0, #4]
 80120e0:	8819      	ldrh	r1, [r3, #0]
 80120e2:	b199      	cbz	r1, 801210c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 80120e4:	1c9a      	adds	r2, r3, #2
 80120e6:	2902      	cmp	r1, #2
 80120e8:	6042      	str	r2, [r0, #4]
 80120ea:	d1f5      	bne.n	80120d8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 80120ec:	7c03      	ldrb	r3, [r0, #16]
 80120ee:	2b01      	cmp	r3, #1
 80120f0:	d8e5      	bhi.n	80120be <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80120f2:	1c5a      	adds	r2, r3, #1
 80120f4:	3302      	adds	r3, #2
 80120f6:	7402      	strb	r2, [r0, #16]
 80120f8:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 80120fc:	6143      	str	r3, [r0, #20]
 80120fe:	2b00      	cmp	r3, #0
 8012100:	d0dd      	beq.n	80120be <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8012102:	881b      	ldrh	r3, [r3, #0]
 8012104:	2b00      	cmp	r3, #0
 8012106:	d0da      	beq.n	80120be <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8012108:	7604      	strb	r4, [r0, #24]
 801210a:	e7d8      	b.n	80120be <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801210c:	2000      	movs	r0, #0
 801210e:	e7e4      	b.n	80120da <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

08012110 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 8012110:	b430      	push	{r4, r5}
 8012112:	6001      	str	r1, [r0, #0]
 8012114:	2100      	movs	r1, #0
 8012116:	6041      	str	r1, [r0, #4]
 8012118:	6815      	ldr	r5, [r2, #0]
 801211a:	6085      	str	r5, [r0, #8]
 801211c:	6852      	ldr	r2, [r2, #4]
 801211e:	6443      	str	r3, [r0, #68]	; 0x44
 8012120:	9b02      	ldr	r3, [sp, #8]
 8012122:	60c2      	str	r2, [r0, #12]
 8012124:	7401      	strb	r1, [r0, #16]
 8012126:	6141      	str	r1, [r0, #20]
 8012128:	7601      	strb	r1, [r0, #24]
 801212a:	8701      	strh	r1, [r0, #56]	; 0x38
 801212c:	8401      	strh	r1, [r0, #32]
 801212e:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 8012132:	6483      	str	r3, [r0, #72]	; 0x48
 8012134:	bc30      	pop	{r4, r5}
 8012136:	f7f2 bbb3 	b.w	80048a0 <_ZN8touchgfx12TextProvider18initializeInternalEv>

0801213a <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 801213a:	b408      	push	{r3}
 801213c:	b510      	push	{r4, lr}
 801213e:	b085      	sub	sp, #20
 8012140:	ac07      	add	r4, sp, #28
 8012142:	f854 3b04 	ldr.w	r3, [r4], #4
 8012146:	9300      	str	r3, [sp, #0]
 8012148:	4613      	mov	r3, r2
 801214a:	4622      	mov	r2, r4
 801214c:	9403      	str	r4, [sp, #12]
 801214e:	f7ff ffdf 	bl	8012110 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8012152:	b005      	add	sp, #20
 8012154:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012158:	b001      	add	sp, #4
 801215a:	4770      	bx	lr

0801215c <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 801215c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801215e:	4605      	mov	r5, r0
 8012160:	4608      	mov	r0, r1
 8012162:	b1e9      	cbz	r1, 80121a0 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 8012164:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 8012168:	460b      	mov	r3, r1
 801216a:	f101 0708 	add.w	r7, r1, #8
 801216e:	4622      	mov	r2, r4
 8012170:	6818      	ldr	r0, [r3, #0]
 8012172:	6859      	ldr	r1, [r3, #4]
 8012174:	4626      	mov	r6, r4
 8012176:	c603      	stmia	r6!, {r0, r1}
 8012178:	3308      	adds	r3, #8
 801217a:	42bb      	cmp	r3, r7
 801217c:	4634      	mov	r4, r6
 801217e:	d1f7      	bne.n	8012170 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 8012180:	6818      	ldr	r0, [r3, #0]
 8012182:	6030      	str	r0, [r6, #0]
 8012184:	889b      	ldrh	r3, [r3, #4]
 8012186:	80b3      	strh	r3, [r6, #4]
 8012188:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 801218c:	015b      	lsls	r3, r3, #5
 801218e:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8012192:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 8012196:	430b      	orrs	r3, r1
 8012198:	425b      	negs	r3, r3
 801219a:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 801219e:	4610      	mov	r0, r2
 80121a0:	bdf0      	pop	{r4, r5, r6, r7, pc}

080121a2 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 80121a2:	b538      	push	{r3, r4, r5, lr}
 80121a4:	460c      	mov	r4, r1
 80121a6:	6811      	ldr	r1, [r2, #0]
 80121a8:	4610      	mov	r0, r2
 80121aa:	68cd      	ldr	r5, [r1, #12]
 80121ac:	4619      	mov	r1, r3
 80121ae:	47a8      	blx	r5
 80121b0:	2800      	cmp	r0, #0
 80121b2:	bf08      	it	eq
 80121b4:	4620      	moveq	r0, r4
 80121b6:	bd38      	pop	{r3, r4, r5, pc}

080121b8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 80121b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80121ba:	4604      	mov	r4, r0
 80121bc:	4615      	mov	r5, r2
 80121be:	4608      	mov	r0, r1
 80121c0:	b93a      	cbnz	r2, 80121d2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 80121c2:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 80121c6:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 80121ca:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 80121ce:	4628      	mov	r0, r5
 80121d0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80121d2:	f892 c00d 	ldrb.w	ip, [r2, #13]
 80121d6:	8893      	ldrh	r3, [r2, #4]
 80121d8:	ea4f 160c 	mov.w	r6, ip, lsl #4
 80121dc:	f406 7280 	and.w	r2, r6, #256	; 0x100
 80121e0:	79ee      	ldrb	r6, [r5, #7]
 80121e2:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 80121e6:	4316      	orrs	r6, r2
 80121e8:	19da      	adds	r2, r3, r7
 80121ea:	b291      	uxth	r1, r2
 80121ec:	291d      	cmp	r1, #29
 80121ee:	b2b7      	uxth	r7, r6
 80121f0:	d87a      	bhi.n	80122e8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 80121f2:	2201      	movs	r2, #1
 80121f4:	408a      	lsls	r2, r1
 80121f6:	4975      	ldr	r1, [pc, #468]	; (80123cc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 80121f8:	420a      	tst	r2, r1
 80121fa:	ea4f 06e6 	mov.w	r6, r6, asr #3
 80121fe:	d12d      	bne.n	801225c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 8012200:	f412 7f60 	tst.w	r2, #896	; 0x380
 8012204:	d070      	beq.n	80122e8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 8012206:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 801220a:	462b      	mov	r3, r5
 801220c:	f105 0e08 	add.w	lr, r5, #8
 8012210:	4615      	mov	r5, r2
 8012212:	6818      	ldr	r0, [r3, #0]
 8012214:	6859      	ldr	r1, [r3, #4]
 8012216:	4694      	mov	ip, r2
 8012218:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 801221c:	3308      	adds	r3, #8
 801221e:	4573      	cmp	r3, lr
 8012220:	4662      	mov	r2, ip
 8012222:	d1f6      	bne.n	8012212 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 8012224:	6818      	ldr	r0, [r3, #0]
 8012226:	f8cc 0000 	str.w	r0, [ip]
 801222a:	889b      	ldrh	r3, [r3, #4]
 801222c:	f8ac 3004 	strh.w	r3, [ip, #4]
 8012230:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 8012234:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 8012238:	b2b3      	uxth	r3, r6
 801223a:	1aca      	subs	r2, r1, r3
 801223c:	b292      	uxth	r2, r2
 801223e:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 8012242:	10d2      	asrs	r2, r2, #3
 8012244:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 8012248:	f002 0260 	and.w	r2, r2, #96	; 0x60
 801224c:	4302      	orrs	r2, r0
 801224e:	1bcf      	subs	r7, r1, r7
 8012250:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 8012254:	1afb      	subs	r3, r7, r3
 8012256:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 801225a:	e7b8      	b.n	80121ce <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 801225c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 801225e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8012262:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 8012264:	f640 6333 	movw	r3, #3635	; 0xe33
 8012268:	4299      	cmp	r1, r3
 801226a:	d110      	bne.n	801228e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 801226c:	6803      	ldr	r3, [r0, #0]
 801226e:	68db      	ldr	r3, [r3, #12]
 8012270:	4798      	blx	r3
 8012272:	7b41      	ldrb	r1, [r0, #13]
 8012274:	00cb      	lsls	r3, r1, #3
 8012276:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801227a:	7a03      	ldrb	r3, [r0, #8]
 801227c:	0648      	lsls	r0, r1, #25
 801227e:	ea43 0302 	orr.w	r3, r3, r2
 8012282:	bf44      	itt	mi
 8012284:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8012288:	b21b      	sxthmi	r3, r3
 801228a:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801228e:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 8012292:	443b      	add	r3, r7
 8012294:	4433      	add	r3, r6
 8012296:	b29b      	uxth	r3, r3
 8012298:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 801229c:	462a      	mov	r2, r5
 801229e:	f105 0c08 	add.w	ip, r5, #8
 80122a2:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80122a6:	4635      	mov	r5, r6
 80122a8:	6810      	ldr	r0, [r2, #0]
 80122aa:	6851      	ldr	r1, [r2, #4]
 80122ac:	4637      	mov	r7, r6
 80122ae:	c703      	stmia	r7!, {r0, r1}
 80122b0:	3208      	adds	r2, #8
 80122b2:	4562      	cmp	r2, ip
 80122b4:	463e      	mov	r6, r7
 80122b6:	d1f7      	bne.n	80122a8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 80122b8:	6810      	ldr	r0, [r2, #0]
 80122ba:	6038      	str	r0, [r7, #0]
 80122bc:	8892      	ldrh	r2, [r2, #4]
 80122be:	80ba      	strh	r2, [r7, #4]
 80122c0:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 80122c4:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 80122c8:	10db      	asrs	r3, r3, #3
 80122ca:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 80122ce:	f003 0360 	and.w	r3, r3, #96	; 0x60
 80122d2:	4313      	orrs	r3, r2
 80122d4:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 80122d8:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 80122dc:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 80122e0:	1a9b      	subs	r3, r3, r2
 80122e2:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 80122e6:	e772      	b.n	80121ce <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 80122e8:	f023 0204 	bic.w	r2, r3, #4
 80122ec:	f640 611b 	movw	r1, #3611	; 0xe1b
 80122f0:	428a      	cmp	r2, r1
 80122f2:	d003      	beq.n	80122fc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 80122f4:	f640 621d 	movw	r2, #3613	; 0xe1d
 80122f8:	4293      	cmp	r3, r2
 80122fa:	d120      	bne.n	801233e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x186>
 80122fc:	3b01      	subs	r3, #1
 80122fe:	4602      	mov	r2, r0
 8012300:	b29b      	uxth	r3, r3
 8012302:	4629      	mov	r1, r5
 8012304:	4620      	mov	r0, r4
 8012306:	f7ff ff4c 	bl	80121a2 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 801230a:	7b41      	ldrb	r1, [r0, #13]
 801230c:	00cb      	lsls	r3, r1, #3
 801230e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8012312:	7a03      	ldrb	r3, [r0, #8]
 8012314:	0649      	lsls	r1, r1, #25
 8012316:	ea43 0302 	orr.w	r3, r3, r2
 801231a:	bf44      	itt	mi
 801231c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8012320:	b21b      	sxthmi	r3, r3
 8012322:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8012326:	7b6b      	ldrb	r3, [r5, #13]
 8012328:	7aaa      	ldrb	r2, [r5, #10]
 801232a:	005b      	lsls	r3, r3, #1
 801232c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8012330:	4313      	orrs	r3, r2
 8012332:	115a      	asrs	r2, r3, #5
 8012334:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 8012338:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 801233c:	e036      	b.n	80123ac <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 801233e:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 8012342:	f402 7180 	and.w	r1, r2, #256	; 0x100
 8012346:	7a2a      	ldrb	r2, [r5, #8]
 8012348:	f01c 0f40 	tst.w	ip, #64	; 0x40
 801234c:	ea42 0201 	orr.w	r2, r2, r1
 8012350:	bf1c      	itt	ne
 8012352:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 8012356:	b212      	sxthne	r2, r2
 8012358:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 801235c:	f640 6109 	movw	r1, #3593	; 0xe09
 8012360:	f023 0210 	bic.w	r2, r3, #16
 8012364:	428a      	cmp	r2, r1
 8012366:	d003      	beq.n	8012370 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b8>
 8012368:	f640 6213 	movw	r2, #3603	; 0xe13
 801236c:	4293      	cmp	r3, r2
 801236e:	d12a      	bne.n	80123c6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 8012370:	7b6e      	ldrb	r6, [r5, #13]
 8012372:	0076      	lsls	r6, r6, #1
 8012374:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8012378:	7aae      	ldrb	r6, [r5, #10]
 801237a:	4316      	orrs	r6, r2
 801237c:	f640 6213 	movw	r2, #3603	; 0xe13
 8012380:	4293      	cmp	r3, r2
 8012382:	bf18      	it	ne
 8012384:	f103 33ff 	addne.w	r3, r3, #4294967295
 8012388:	4602      	mov	r2, r0
 801238a:	bf14      	ite	ne
 801238c:	b29b      	uxthne	r3, r3
 801238e:	f640 630c 	movweq	r3, #3596	; 0xe0c
 8012392:	4629      	mov	r1, r5
 8012394:	4620      	mov	r0, r4
 8012396:	f7ff ff04 	bl	80121a2 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 801239a:	7b43      	ldrb	r3, [r0, #13]
 801239c:	7a82      	ldrb	r2, [r0, #10]
 801239e:	005b      	lsls	r3, r3, #1
 80123a0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80123a4:	4313      	orrs	r3, r2
 80123a6:	1af6      	subs	r6, r6, r3
 80123a8:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 80123ac:	7b69      	ldrb	r1, [r5, #13]
 80123ae:	00cb      	lsls	r3, r1, #3
 80123b0:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80123b4:	7a2b      	ldrb	r3, [r5, #8]
 80123b6:	4313      	orrs	r3, r2
 80123b8:	064a      	lsls	r2, r1, #25
 80123ba:	bf44      	itt	mi
 80123bc:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80123c0:	b21b      	sxthmi	r3, r3
 80123c2:	1bdb      	subs	r3, r3, r7
 80123c4:	e747      	b.n	8012256 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 80123c6:	2300      	movs	r3, #0
 80123c8:	e7b6      	b.n	8012338 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x180>
 80123ca:	bf00      	nop
 80123cc:	3fc00079 	.word	0x3fc00079

080123d0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 80123d0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80123d4:	4604      	mov	r4, r0
 80123d6:	b942      	cbnz	r2, 80123ea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 80123d8:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80123dc:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 80123e0:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 80123e4:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 80123e8:	e047      	b.n	801247a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 80123ea:	7b51      	ldrb	r1, [r2, #13]
 80123ec:	8893      	ldrh	r3, [r2, #4]
 80123ee:	010d      	lsls	r5, r1, #4
 80123f0:	f405 7080 	and.w	r0, r5, #256	; 0x100
 80123f4:	79d5      	ldrb	r5, [r2, #7]
 80123f6:	4305      	orrs	r5, r0
 80123f8:	2d04      	cmp	r5, #4
 80123fa:	bfcc      	ite	gt
 80123fc:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 8012400:	f04f 0e01 	movle.w	lr, #1
 8012404:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 8012408:	f200 80ab 	bhi.w	8012562 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 801240c:	f240 60e7 	movw	r0, #1767	; 0x6e7
 8012410:	4283      	cmp	r3, r0
 8012412:	d216      	bcs.n	8012442 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012414:	f240 605b 	movw	r0, #1627	; 0x65b
 8012418:	4283      	cmp	r3, r0
 801241a:	d859      	bhi.n	80124d0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 801241c:	f240 6057 	movw	r0, #1623	; 0x657
 8012420:	4283      	cmp	r3, r0
 8012422:	d20e      	bcs.n	8012442 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012424:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8012428:	d24a      	bcs.n	80124c0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 801242a:	f240 604e 	movw	r0, #1614	; 0x64e
 801242e:	4283      	cmp	r3, r0
 8012430:	d207      	bcs.n	8012442 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012432:	f240 601a 	movw	r0, #1562	; 0x61a
 8012436:	4283      	cmp	r3, r0
 8012438:	d02a      	beq.n	8012490 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801243a:	d821      	bhi.n	8012480 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 801243c:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 8012440:	d35b      	bcc.n	80124fa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8012442:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 8012446:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801244a:	f040 80d0 	bne.w	80125ee <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 801244e:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 8012452:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8012456:	f040 80ca 	bne.w	80125ee <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 801245a:	00cb      	lsls	r3, r1, #3
 801245c:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8012460:	7a13      	ldrb	r3, [r2, #8]
 8012462:	0649      	lsls	r1, r1, #25
 8012464:	ea43 0300 	orr.w	r3, r3, r0
 8012468:	bf44      	itt	mi
 801246a:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801246e:	b21b      	sxthmi	r3, r3
 8012470:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8012474:	1b5d      	subs	r5, r3, r5
 8012476:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801247a:	4610      	mov	r0, r2
 801247c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012480:	f240 604b 	movw	r0, #1611	; 0x64b
 8012484:	4283      	cmp	r3, r0
 8012486:	d338      	bcc.n	80124fa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8012488:	f240 604c 	movw	r0, #1612	; 0x64c
 801248c:	4283      	cmp	r3, r0
 801248e:	d9d8      	bls.n	8012442 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012490:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 8012494:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 8012498:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801249c:	f040 80f2 	bne.w	8012684 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 80124a0:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 80124a4:	f040 80ee 	bne.w	8012684 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 80124a8:	00cb      	lsls	r3, r1, #3
 80124aa:	f403 7080 	and.w	r0, r3, #256	; 0x100
 80124ae:	7a13      	ldrb	r3, [r2, #8]
 80124b0:	064e      	lsls	r6, r1, #25
 80124b2:	ea43 0300 	orr.w	r3, r3, r0
 80124b6:	bf44      	itt	mi
 80124b8:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80124bc:	b21b      	sxthmi	r3, r3
 80124be:	e7d9      	b.n	8012474 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 80124c0:	f240 6054 	movw	r0, #1620	; 0x654
 80124c4:	4283      	cmp	r3, r0
 80124c6:	d8e3      	bhi.n	8012490 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80124c8:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 80124cc:	d9e0      	bls.n	8012490 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80124ce:	e7b8      	b.n	8012442 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80124d0:	f240 6074 	movw	r0, #1652	; 0x674
 80124d4:	4283      	cmp	r3, r0
 80124d6:	d0b4      	beq.n	8012442 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80124d8:	d82d      	bhi.n	8012536 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 80124da:	f240 605e 	movw	r0, #1630	; 0x65e
 80124de:	4283      	cmp	r3, r0
 80124e0:	d804      	bhi.n	80124ec <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 80124e2:	f240 605d 	movw	r0, #1629	; 0x65d
 80124e6:	4283      	cmp	r3, r0
 80124e8:	d3d2      	bcc.n	8012490 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80124ea:	e7aa      	b.n	8012442 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80124ec:	f240 605f 	movw	r0, #1631	; 0x65f
 80124f0:	4283      	cmp	r3, r0
 80124f2:	d0cd      	beq.n	8012490 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80124f4:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 80124f8:	d0a3      	beq.n	8012442 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80124fa:	00cb      	lsls	r3, r1, #3
 80124fc:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8012500:	7a13      	ldrb	r3, [r2, #8]
 8012502:	0649      	lsls	r1, r1, #25
 8012504:	ea43 0300 	orr.w	r3, r3, r0
 8012508:	bf44      	itt	mi
 801250a:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801250e:	b21b      	sxthmi	r3, r3
 8012510:	1b5d      	subs	r5, r3, r5
 8012512:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8012516:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801251a:	7b53      	ldrb	r3, [r2, #13]
 801251c:	015b      	lsls	r3, r3, #5
 801251e:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8012522:	7993      	ldrb	r3, [r2, #6]
 8012524:	430b      	orrs	r3, r1
 8012526:	005b      	lsls	r3, r3, #1
 8012528:	2105      	movs	r1, #5
 801252a:	fb93 f3f1 	sdiv	r3, r3, r1
 801252e:	f992 1009 	ldrsb.w	r1, [r2, #9]
 8012532:	440b      	add	r3, r1
 8012534:	e756      	b.n	80123e4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 8012536:	f240 60e2 	movw	r0, #1762	; 0x6e2
 801253a:	4283      	cmp	r3, r0
 801253c:	d809      	bhi.n	8012552 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 801253e:	f240 60df 	movw	r0, #1759	; 0x6df
 8012542:	4283      	cmp	r3, r0
 8012544:	f4bf af7d 	bcs.w	8012442 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012548:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 801254c:	2b05      	cmp	r3, #5
 801254e:	d8d4      	bhi.n	80124fa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8012550:	e777      	b.n	8012442 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012552:	f240 60e3 	movw	r0, #1763	; 0x6e3
 8012556:	4283      	cmp	r3, r0
 8012558:	d09a      	beq.n	8012490 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801255a:	f240 60e4 	movw	r0, #1764	; 0x6e4
 801255e:	4283      	cmp	r3, r0
 8012560:	e7ca      	b.n	80124f8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8012562:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 8012566:	d22b      	bcs.n	80125c0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 8012568:	f640 00ed 	movw	r0, #2285	; 0x8ed
 801256c:	4283      	cmp	r3, r0
 801256e:	d28f      	bcs.n	8012490 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012570:	f640 00e5 	movw	r0, #2277	; 0x8e5
 8012574:	4283      	cmp	r3, r0
 8012576:	d816      	bhi.n	80125a6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 8012578:	f640 00e4 	movw	r0, #2276	; 0x8e4
 801257c:	4283      	cmp	r3, r0
 801257e:	f4bf af60 	bcs.w	8012442 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012582:	f240 60ec 	movw	r0, #1772	; 0x6ec
 8012586:	4283      	cmp	r3, r0
 8012588:	d80a      	bhi.n	80125a0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 801258a:	f240 60eb 	movw	r0, #1771	; 0x6eb
 801258e:	4283      	cmp	r3, r0
 8012590:	f4bf af57 	bcs.w	8012442 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012594:	f240 60ea 	movw	r0, #1770	; 0x6ea
 8012598:	4283      	cmp	r3, r0
 801259a:	f43f af79 	beq.w	8012490 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801259e:	e7ac      	b.n	80124fa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 80125a0:	f240 60ed 	movw	r0, #1773	; 0x6ed
 80125a4:	e7f8      	b.n	8012598 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 80125a6:	f640 00e8 	movw	r0, #2280	; 0x8e8
 80125aa:	4283      	cmp	r3, r0
 80125ac:	d802      	bhi.n	80125b4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 80125ae:	f640 00e7 	movw	r0, #2279	; 0x8e7
 80125b2:	e798      	b.n	80124e6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 80125b4:	f640 00e9 	movw	r0, #2281	; 0x8e9
 80125b8:	4283      	cmp	r3, r0
 80125ba:	f47f af42 	bne.w	8012442 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80125be:	e767      	b.n	8012490 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80125c0:	f640 00f6 	movw	r0, #2294	; 0x8f6
 80125c4:	4283      	cmp	r3, r0
 80125c6:	f43f af63 	beq.w	8012490 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80125ca:	d802      	bhi.n	80125d2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 80125cc:	f640 00f2 	movw	r0, #2290	; 0x8f2
 80125d0:	e7f2      	b.n	80125b8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 80125d2:	f640 00fa 	movw	r0, #2298	; 0x8fa
 80125d6:	4283      	cmp	r3, r0
 80125d8:	d805      	bhi.n	80125e6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 80125da:	f640 00f9 	movw	r0, #2297	; 0x8f9
 80125de:	4283      	cmp	r3, r0
 80125e0:	f4ff af2f 	bcc.w	8012442 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80125e4:	e754      	b.n	8012490 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80125e6:	f640 00fe 	movw	r0, #2302	; 0x8fe
 80125ea:	4283      	cmp	r3, r0
 80125ec:	e7af      	b.n	801254e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 80125ee:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 80125f2:	4617      	mov	r7, r2
 80125f4:	f102 0808 	add.w	r8, r2, #8
 80125f8:	4666      	mov	r6, ip
 80125fa:	6838      	ldr	r0, [r7, #0]
 80125fc:	6879      	ldr	r1, [r7, #4]
 80125fe:	46e6      	mov	lr, ip
 8012600:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8012604:	3708      	adds	r7, #8
 8012606:	4547      	cmp	r7, r8
 8012608:	46f4      	mov	ip, lr
 801260a:	d1f6      	bne.n	80125fa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 801260c:	6838      	ldr	r0, [r7, #0]
 801260e:	f8ce 0000 	str.w	r0, [lr]
 8012612:	88b9      	ldrh	r1, [r7, #4]
 8012614:	f8ae 1004 	strh.w	r1, [lr, #4]
 8012618:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 801261c:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8012620:	d009      	beq.n	8012636 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 8012622:	7b51      	ldrb	r1, [r2, #13]
 8012624:	7992      	ldrb	r2, [r2, #6]
 8012626:	0149      	lsls	r1, r1, #5
 8012628:	f401 7180 	and.w	r1, r1, #256	; 0x100
 801262c:	4311      	orrs	r1, r2
 801262e:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8012632:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8012636:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801263a:	b2ad      	uxth	r5, r5
 801263c:	d00d      	beq.n	801265a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 801263e:	442b      	add	r3, r5
 8012640:	b29b      	uxth	r3, r3
 8012642:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8012646:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 801264a:	10db      	asrs	r3, r3, #3
 801264c:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8012650:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8012654:	4313      	orrs	r3, r2
 8012656:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 801265a:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 801265e:	00cb      	lsls	r3, r1, #3
 8012660:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8012664:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8012668:	064f      	lsls	r7, r1, #25
 801266a:	ea43 0302 	orr.w	r3, r3, r2
 801266e:	bf44      	itt	mi
 8012670:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8012674:	b21b      	sxthmi	r3, r3
 8012676:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801267a:	1b5b      	subs	r3, r3, r5
 801267c:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8012680:	4632      	mov	r2, r6
 8012682:	e6fa      	b.n	801247a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8012684:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8012688:	4617      	mov	r7, r2
 801268a:	f102 0908 	add.w	r9, r2, #8
 801268e:	4666      	mov	r6, ip
 8012690:	6838      	ldr	r0, [r7, #0]
 8012692:	6879      	ldr	r1, [r7, #4]
 8012694:	46e0      	mov	r8, ip
 8012696:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 801269a:	3708      	adds	r7, #8
 801269c:	454f      	cmp	r7, r9
 801269e:	46c4      	mov	ip, r8
 80126a0:	d1f6      	bne.n	8012690 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 80126a2:	6838      	ldr	r0, [r7, #0]
 80126a4:	f8c8 0000 	str.w	r0, [r8]
 80126a8:	88b9      	ldrh	r1, [r7, #4]
 80126aa:	f8a8 1004 	strh.w	r1, [r8, #4]
 80126ae:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 80126b2:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 80126b6:	d009      	beq.n	80126cc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 80126b8:	7b51      	ldrb	r1, [r2, #13]
 80126ba:	7992      	ldrb	r2, [r2, #6]
 80126bc:	0149      	lsls	r1, r1, #5
 80126be:	f401 7180 	and.w	r1, r1, #256	; 0x100
 80126c2:	4311      	orrs	r1, r2
 80126c4:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 80126c8:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 80126cc:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 80126d0:	d00e      	beq.n	80126f0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 80126d2:	eba3 030e 	sub.w	r3, r3, lr
 80126d6:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 80126da:	b29b      	uxth	r3, r3
 80126dc:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 80126e0:	10db      	asrs	r3, r3, #3
 80126e2:	f003 0360 	and.w	r3, r3, #96	; 0x60
 80126e6:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 80126ea:	4313      	orrs	r3, r2
 80126ec:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 80126f0:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 80126f4:	00cb      	lsls	r3, r1, #3
 80126f6:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80126fa:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 80126fe:	0648      	lsls	r0, r1, #25
 8012700:	ea43 0302 	orr.w	r3, r3, r2
 8012704:	bf44      	itt	mi
 8012706:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801270a:	b21b      	sxthmi	r3, r3
 801270c:	1b5d      	subs	r5, r3, r5
 801270e:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8012712:	e7b5      	b.n	8012680 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

08012714 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 8012714:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012718:	461e      	mov	r6, r3
 801271a:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801271c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8012720:	4604      	mov	r4, r0
 8012722:	4617      	mov	r7, r2
 8012724:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8012728:	f7f2 f878 	bl	800481c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801272c:	4605      	mov	r5, r0
 801272e:	b918      	cbnz	r0, 8012738 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 8012730:	6030      	str	r0, [r6, #0]
 8012732:	4628      	mov	r0, r5
 8012734:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012738:	683b      	ldr	r3, [r7, #0]
 801273a:	4601      	mov	r1, r0
 801273c:	68db      	ldr	r3, [r3, #12]
 801273e:	4638      	mov	r0, r7
 8012740:	4798      	blx	r3
 8012742:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8012746:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 801274a:	4602      	mov	r2, r0
 801274c:	6030      	str	r0, [r6, #0]
 801274e:	d213      	bcs.n	8012778 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 8012750:	4643      	mov	r3, r8
 8012752:	4639      	mov	r1, r7
 8012754:	4620      	mov	r0, r4
 8012756:	f7ff fe3b 	bl	80123d0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801275a:	6030      	str	r0, [r6, #0]
 801275c:	6833      	ldr	r3, [r6, #0]
 801275e:	b143      	cbz	r3, 8012772 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 8012760:	7b5a      	ldrb	r2, [r3, #13]
 8012762:	7a9b      	ldrb	r3, [r3, #10]
 8012764:	0052      	lsls	r2, r2, #1
 8012766:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801276a:	4313      	orrs	r3, r2
 801276c:	bf0c      	ite	eq
 801276e:	2301      	moveq	r3, #1
 8012770:	2300      	movne	r3, #0
 8012772:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 8012776:	e7dc      	b.n	8012732 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 8012778:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 801277c:	b29b      	uxth	r3, r3
 801277e:	2b7f      	cmp	r3, #127	; 0x7f
 8012780:	d804      	bhi.n	801278c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 8012782:	4639      	mov	r1, r7
 8012784:	4620      	mov	r0, r4
 8012786:	f7ff fd17 	bl	80121b8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801278a:	e7e6      	b.n	801275a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 801278c:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8012790:	2b00      	cmp	r3, #0
 8012792:	d0e3      	beq.n	801275c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8012794:	f640 1302 	movw	r3, #2306	; 0x902
 8012798:	429d      	cmp	r5, r3
 801279a:	d1df      	bne.n	801275c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 801279c:	4601      	mov	r1, r0
 801279e:	4620      	mov	r0, r4
 80127a0:	f7ff fcdc 	bl	801215c <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 80127a4:	e7d9      	b.n	801275a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

080127a6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 80127a6:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80127aa:	461e      	mov	r6, r3
 80127ac:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80127ae:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80127b2:	4604      	mov	r4, r0
 80127b4:	4617      	mov	r7, r2
 80127b6:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 80127ba:	f7f2 f82f 	bl	800481c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80127be:	4605      	mov	r5, r0
 80127c0:	b918      	cbnz	r0, 80127ca <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 80127c2:	6030      	str	r0, [r6, #0]
 80127c4:	4628      	mov	r0, r5
 80127c6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80127ca:	683b      	ldr	r3, [r7, #0]
 80127cc:	4601      	mov	r1, r0
 80127ce:	f8d3 9008 	ldr.w	r9, [r3, #8]
 80127d2:	4638      	mov	r0, r7
 80127d4:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 80127d8:	47c8      	blx	r9
 80127da:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 80127de:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 80127e2:	4602      	mov	r2, r0
 80127e4:	6030      	str	r0, [r6, #0]
 80127e6:	d213      	bcs.n	8012810 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 80127e8:	4643      	mov	r3, r8
 80127ea:	4639      	mov	r1, r7
 80127ec:	4620      	mov	r0, r4
 80127ee:	f7ff fdef 	bl	80123d0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 80127f2:	6030      	str	r0, [r6, #0]
 80127f4:	6833      	ldr	r3, [r6, #0]
 80127f6:	b143      	cbz	r3, 801280a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 80127f8:	7b5a      	ldrb	r2, [r3, #13]
 80127fa:	7a9b      	ldrb	r3, [r3, #10]
 80127fc:	0052      	lsls	r2, r2, #1
 80127fe:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8012802:	4313      	orrs	r3, r2
 8012804:	bf0c      	ite	eq
 8012806:	2301      	moveq	r3, #1
 8012808:	2300      	movne	r3, #0
 801280a:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 801280e:	e7d9      	b.n	80127c4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 8012810:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8012814:	b29b      	uxth	r3, r3
 8012816:	2b7f      	cmp	r3, #127	; 0x7f
 8012818:	d804      	bhi.n	8012824 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 801281a:	4639      	mov	r1, r7
 801281c:	4620      	mov	r0, r4
 801281e:	f7ff fccb 	bl	80121b8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8012822:	e7e6      	b.n	80127f2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 8012824:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8012828:	2b00      	cmp	r3, #0
 801282a:	d0e3      	beq.n	80127f4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 801282c:	f640 1302 	movw	r3, #2306	; 0x902
 8012830:	429d      	cmp	r5, r3
 8012832:	d1df      	bne.n	80127f4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8012834:	4601      	mov	r1, r0
 8012836:	4620      	mov	r0, r4
 8012838:	f7ff fc90 	bl	801215c <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 801283c:	e7d9      	b.n	80127f2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

0801283e <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 801283e:	b510      	push	{r4, lr}
 8012840:	4604      	mov	r4, r0
 8012842:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 8012846:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8012848:	b1f1      	cbz	r1, 8012888 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 801284a:	2b0a      	cmp	r3, #10
 801284c:	d02f      	beq.n	80128ae <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 801284e:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 8012850:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 8012854:	3901      	subs	r1, #1
 8012856:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 8012858:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 801285c:	1c51      	adds	r1, r2, #1
 801285e:	b289      	uxth	r1, r1
 8012860:	2901      	cmp	r1, #1
 8012862:	bf84      	itt	hi
 8012864:	f102 32ff 	addhi.w	r2, r2, #4294967295
 8012868:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 801286a:	f103 0201 	add.w	r2, r3, #1
 801286e:	8722      	strh	r2, [r4, #56]	; 0x38
 8012870:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8012872:	bf98      	it	ls
 8012874:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 8012876:	4413      	add	r3, r2
 8012878:	b29b      	uxth	r3, r3
 801287a:	2b09      	cmp	r3, #9
 801287c:	bf88      	it	hi
 801287e:	3b0a      	subhi	r3, #10
 8012880:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8012884:	8458      	strh	r0, [r3, #34]	; 0x22
 8012886:	e7dc      	b.n	8012842 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 8012888:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801288a:	2b0a      	cmp	r3, #10
 801288c:	d00f      	beq.n	80128ae <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 801288e:	4620      	mov	r0, r4
 8012890:	f7ff fc12 	bl	80120b8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 8012894:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8012896:	1c5a      	adds	r2, r3, #1
 8012898:	8722      	strh	r2, [r4, #56]	; 0x38
 801289a:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 801289c:	4413      	add	r3, r2
 801289e:	b29b      	uxth	r3, r3
 80128a0:	2b09      	cmp	r3, #9
 80128a2:	bf88      	it	hi
 80128a4:	3b0a      	subhi	r3, #10
 80128a6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80128aa:	8458      	strh	r0, [r3, #34]	; 0x22
 80128ac:	e7ec      	b.n	8012888 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 80128ae:	bd10      	pop	{r4, pc}

080128b0 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 80128b0:	b538      	push	{r3, r4, r5, lr}
 80128b2:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80128b4:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 80128b8:	4604      	mov	r4, r0
 80128ba:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 80128bc:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 80128be:	3a01      	subs	r2, #1
 80128c0:	8702      	strh	r2, [r0, #56]	; 0x38
 80128c2:	1c5a      	adds	r2, r3, #1
 80128c4:	b292      	uxth	r2, r2
 80128c6:	2a09      	cmp	r2, #9
 80128c8:	bf86      	itte	hi
 80128ca:	3b09      	subhi	r3, #9
 80128cc:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 80128ce:	86c2      	strhls	r2, [r0, #54]	; 0x36
 80128d0:	f7ff ffb5 	bl	801283e <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 80128d4:	8c23      	ldrh	r3, [r4, #32]
 80128d6:	2b01      	cmp	r3, #1
 80128d8:	bf9c      	itt	ls
 80128da:	3301      	addls	r3, #1
 80128dc:	8423      	strhls	r3, [r4, #32]
 80128de:	8be3      	ldrh	r3, [r4, #30]
 80128e0:	b90b      	cbnz	r3, 80128e6 <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 80128e2:	2302      	movs	r3, #2
 80128e4:	83e3      	strh	r3, [r4, #30]
 80128e6:	8be3      	ldrh	r3, [r4, #30]
 80128e8:	3b01      	subs	r3, #1
 80128ea:	b29b      	uxth	r3, r3
 80128ec:	83e3      	strh	r3, [r4, #30]
 80128ee:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80128f2:	4628      	mov	r0, r5
 80128f4:	8365      	strh	r5, [r4, #26]
 80128f6:	bd38      	pop	{r3, r4, r5, pc}

080128f8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 80128f8:	428a      	cmp	r2, r1
 80128fa:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80128fe:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 8012900:	d931      	bls.n	8012966 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 8012902:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 8012904:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 8012908:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 801290c:	19ee      	adds	r6, r5, r7
 801290e:	1a54      	subs	r4, r2, r1
 8012910:	3e01      	subs	r6, #1
 8012912:	fa1f fe84 	uxth.w	lr, r4
 8012916:	b2b4      	uxth	r4, r6
 8012918:	eba4 090e 	sub.w	r9, r4, lr
 801291c:	fa1f f989 	uxth.w	r9, r9
 8012920:	2c09      	cmp	r4, #9
 8012922:	4626      	mov	r6, r4
 8012924:	bf88      	it	hi
 8012926:	f1a4 060a 	subhi.w	r6, r4, #10
 801292a:	f1bc 0f00 	cmp.w	ip, #0
 801292e:	bf08      	it	eq
 8012930:	f04f 0c02 	moveq.w	ip, #2
 8012934:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8012938:	f10c 3cff 	add.w	ip, ip, #4294967295
 801293c:	fa1f fc8c 	uxth.w	ip, ip
 8012940:	3c01      	subs	r4, #1
 8012942:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 8012946:	b2a4      	uxth	r4, r4
 8012948:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 801294c:	454c      	cmp	r4, r9
 801294e:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 8012952:	d1e5      	bne.n	8012920 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 8012954:	eba5 050e 	sub.w	r5, r5, lr
 8012958:	eb0e 0408 	add.w	r4, lr, r8
 801295c:	8705      	strh	r5, [r0, #56]	; 0x38
 801295e:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 8012962:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 8012966:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 8012968:	1a64      	subs	r4, r4, r1
 801296a:	4439      	add	r1, r7
 801296c:	b289      	uxth	r1, r1
 801296e:	2909      	cmp	r1, #9
 8012970:	bf88      	it	hi
 8012972:	390a      	subhi	r1, #10
 8012974:	8704      	strh	r4, [r0, #56]	; 0x38
 8012976:	86c1      	strh	r1, [r0, #54]	; 0x36
 8012978:	250a      	movs	r5, #10
 801297a:	b18a      	cbz	r2, 80129a0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 801297c:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 801297e:	3a01      	subs	r2, #1
 8012980:	b292      	uxth	r2, r2
 8012982:	3101      	adds	r1, #1
 8012984:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 8012988:	8701      	strh	r1, [r0, #56]	; 0x38
 801298a:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 801298c:	b901      	cbnz	r1, 8012990 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 801298e:	86c5      	strh	r5, [r0, #54]	; 0x36
 8012990:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 8012992:	3901      	subs	r1, #1
 8012994:	b289      	uxth	r1, r1
 8012996:	86c1      	strh	r1, [r0, #54]	; 0x36
 8012998:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 801299c:	844c      	strh	r4, [r1, #34]	; 0x22
 801299e:	e7ec      	b.n	801297a <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 80129a0:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80129a4:	f7ff bf4b 	b.w	801283e <_ZN8touchgfx12TextProvider15fillInputBufferEv>

080129a8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 80129a8:	b570      	push	{r4, r5, r6, lr}
 80129aa:	2500      	movs	r5, #0
 80129ac:	4295      	cmp	r5, r2
 80129ae:	d011      	beq.n	80129d4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 80129b0:	8bc4      	ldrh	r4, [r0, #30]
 80129b2:	f831 6b02 	ldrh.w	r6, [r1], #2
 80129b6:	4414      	add	r4, r2
 80129b8:	3c01      	subs	r4, #1
 80129ba:	1b64      	subs	r4, r4, r5
 80129bc:	b2a4      	uxth	r4, r4
 80129be:	2c01      	cmp	r4, #1
 80129c0:	bf88      	it	hi
 80129c2:	3c02      	subhi	r4, #2
 80129c4:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80129c8:	8b64      	ldrh	r4, [r4, #26]
 80129ca:	42b4      	cmp	r4, r6
 80129cc:	d117      	bne.n	80129fe <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 80129ce:	3501      	adds	r5, #1
 80129d0:	b2ad      	uxth	r5, r5
 80129d2:	e7eb      	b.n	80129ac <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 80129d4:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80129d8:	2400      	movs	r4, #0
 80129da:	4413      	add	r3, r2
 80129dc:	b2a2      	uxth	r2, r4
 80129de:	429a      	cmp	r2, r3
 80129e0:	da0f      	bge.n	8012a02 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 80129e2:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 80129e4:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 80129e8:	4432      	add	r2, r6
 80129ea:	b292      	uxth	r2, r2
 80129ec:	2a09      	cmp	r2, #9
 80129ee:	bf88      	it	hi
 80129f0:	3a0a      	subhi	r2, #10
 80129f2:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80129f6:	3401      	adds	r4, #1
 80129f8:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 80129fa:	42aa      	cmp	r2, r5
 80129fc:	d0ee      	beq.n	80129dc <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 80129fe:	2000      	movs	r0, #0
 8012a00:	bd70      	pop	{r4, r5, r6, pc}
 8012a02:	2001      	movs	r0, #1
 8012a04:	e7fc      	b.n	8012a00 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

08012a06 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 8012a06:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012a0a:	4605      	mov	r5, r0
 8012a0c:	4616      	mov	r6, r2
 8012a0e:	1c8c      	adds	r4, r1, #2
 8012a10:	8809      	ldrh	r1, [r1, #0]
 8012a12:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 8012a16:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 8012a1a:	42b3      	cmp	r3, r6
 8012a1c:	d124      	bne.n	8012a68 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 8012a1e:	f3c1 2903 	ubfx	r9, r1, #8, #4
 8012a22:	f3c1 1803 	ubfx	r8, r1, #4, #4
 8012a26:	f001 070f 	and.w	r7, r1, #15
 8012a2a:	f8cd 8000 	str.w	r8, [sp]
 8012a2e:	464b      	mov	r3, r9
 8012a30:	4652      	mov	r2, sl
 8012a32:	4621      	mov	r1, r4
 8012a34:	4628      	mov	r0, r5
 8012a36:	f7ff ffb7 	bl	80129a8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 8012a3a:	4683      	mov	fp, r0
 8012a3c:	b168      	cbz	r0, 8012a5a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 8012a3e:	eb0a 0109 	add.w	r1, sl, r9
 8012a42:	4441      	add	r1, r8
 8012a44:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 8012a48:	463a      	mov	r2, r7
 8012a4a:	4649      	mov	r1, r9
 8012a4c:	4628      	mov	r0, r5
 8012a4e:	f7ff ff53 	bl	80128f8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 8012a52:	4658      	mov	r0, fp
 8012a54:	b003      	add	sp, #12
 8012a56:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012a5a:	eb07 010a 	add.w	r1, r7, sl
 8012a5e:	4449      	add	r1, r9
 8012a60:	4441      	add	r1, r8
 8012a62:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8012a66:	e7d2      	b.n	8012a0e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 8012a68:	f04f 0b00 	mov.w	fp, #0
 8012a6c:	e7f1      	b.n	8012a52 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

08012a6e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 8012a6e:	b570      	push	{r4, r5, r6, lr}
 8012a70:	8810      	ldrh	r0, [r2, #0]
 8012a72:	4298      	cmp	r0, r3
 8012a74:	d817      	bhi.n	8012aa6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8012a76:	1e48      	subs	r0, r1, #1
 8012a78:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 8012a7c:	4298      	cmp	r0, r3
 8012a7e:	d312      	bcc.n	8012aa6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8012a80:	2400      	movs	r4, #0
 8012a82:	428c      	cmp	r4, r1
 8012a84:	d20f      	bcs.n	8012aa6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8012a86:	1860      	adds	r0, r4, r1
 8012a88:	1040      	asrs	r0, r0, #1
 8012a8a:	0085      	lsls	r5, r0, #2
 8012a8c:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 8012a90:	42b3      	cmp	r3, r6
 8012a92:	d902      	bls.n	8012a9a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 8012a94:	3001      	adds	r0, #1
 8012a96:	b284      	uxth	r4, r0
 8012a98:	e7f3      	b.n	8012a82 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8012a9a:	d201      	bcs.n	8012aa0 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 8012a9c:	b281      	uxth	r1, r0
 8012a9e:	e7f0      	b.n	8012a82 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8012aa0:	442a      	add	r2, r5
 8012aa2:	8850      	ldrh	r0, [r2, #2]
 8012aa4:	bd70      	pop	{r4, r5, r6, pc}
 8012aa6:	2000      	movs	r0, #0
 8012aa8:	e7fc      	b.n	8012aa4 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

08012aaa <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 8012aaa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012aae:	6c45      	ldr	r5, [r0, #68]	; 0x44
 8012ab0:	886f      	ldrh	r7, [r5, #2]
 8012ab2:	4604      	mov	r4, r0
 8012ab4:	087f      	lsrs	r7, r7, #1
 8012ab6:	260b      	movs	r6, #11
 8012ab8:	3e01      	subs	r6, #1
 8012aba:	d013      	beq.n	8012ae4 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8012abc:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8012abe:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8012ac2:	462a      	mov	r2, r5
 8012ac4:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8012ac8:	4639      	mov	r1, r7
 8012aca:	4643      	mov	r3, r8
 8012acc:	4620      	mov	r0, r4
 8012ace:	f7ff ffce 	bl	8012a6e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 8012ad2:	b138      	cbz	r0, 8012ae4 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8012ad4:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 8012ad8:	4642      	mov	r2, r8
 8012ada:	4620      	mov	r0, r4
 8012adc:	f7ff ff93 	bl	8012a06 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 8012ae0:	2800      	cmp	r0, #0
 8012ae2:	d1e9      	bne.n	8012ab8 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 8012ae4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08012ae8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 8012ae8:	b570      	push	{r4, r5, r6, lr}
 8012aea:	694a      	ldr	r2, [r1, #20]
 8012aec:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8012aee:	684b      	ldr	r3, [r1, #4]
 8012af0:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 8012af2:	1b54      	subs	r4, r2, r5
 8012af4:	f000 8106 	beq.w	8012d04 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 8012af8:	1b9b      	subs	r3, r3, r6
 8012afa:	d003      	beq.n	8012b04 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8012afc:	4363      	muls	r3, r4
 8012afe:	2210      	movs	r2, #16
 8012b00:	fb93 f3f2 	sdiv	r3, r3, r2
 8012b04:	680c      	ldr	r4, [r1, #0]
 8012b06:	698a      	ldr	r2, [r1, #24]
 8012b08:	1b65      	subs	r5, r4, r5
 8012b0a:	f000 80fd 	beq.w	8012d08 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 8012b0e:	1b92      	subs	r2, r2, r6
 8012b10:	d003      	beq.n	8012b1a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8012b12:	436a      	muls	r2, r5
 8012b14:	2410      	movs	r4, #16
 8012b16:	fb92 f2f4 	sdiv	r2, r2, r4
 8012b1a:	1a9b      	subs	r3, r3, r2
 8012b1c:	ee07 3a90 	vmov	s15, r3
 8012b20:	ed9f 4a88 	vldr	s8, [pc, #544]	; 8012d44 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 8012b24:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012b28:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8012b2c:	ee67 7a84 	vmul.f32	s15, s15, s8
 8012b30:	460a      	mov	r2, r1
 8012b32:	ee87 3a27 	vdiv.f32	s6, s14, s15
 8012b36:	4603      	mov	r3, r0
 8012b38:	f100 040c 	add.w	r4, r0, #12
 8012b3c:	eeb1 6a43 	vneg.f32	s12, s6
 8012b40:	edd2 7a02 	vldr	s15, [r2, #8]
 8012b44:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8012b48:	3214      	adds	r2, #20
 8012b4a:	ece3 6a01 	vstmia	r3!, {s13}
 8012b4e:	ed52 7a02 	vldr	s15, [r2, #-8]
 8012b52:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8012b56:	429c      	cmp	r4, r3
 8012b58:	edc3 7a02 	vstr	s15, [r3, #8]
 8012b5c:	ed52 7a01 	vldr	s15, [r2, #-4]
 8012b60:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8012b64:	edc3 7a05 	vstr	s15, [r3, #20]
 8012b68:	d1ea      	bne.n	8012b40 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 8012b6a:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8012b6c:	698b      	ldr	r3, [r1, #24]
 8012b6e:	edd0 4a02 	vldr	s9, [r0, #8]
 8012b72:	edd0 3a00 	vldr	s7, [r0]
 8012b76:	edd0 6a01 	vldr	s13, [r0, #4]
 8012b7a:	ed90 5a05 	vldr	s10, [r0, #20]
 8012b7e:	ed90 2a03 	vldr	s4, [r0, #12]
 8012b82:	edd0 5a04 	vldr	s11, [r0, #16]
 8012b86:	ed90 1a07 	vldr	s2, [r0, #28]
 8012b8a:	edd0 2a06 	vldr	s5, [r0, #24]
 8012b8e:	1a9b      	subs	r3, r3, r2
 8012b90:	ee07 3a90 	vmov	s15, r3
 8012b94:	684b      	ldr	r3, [r1, #4]
 8012b96:	1a9b      	subs	r3, r3, r2
 8012b98:	ee07 3a10 	vmov	s14, r3
 8012b9c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012ba0:	ee76 6ae4 	vsub.f32	s13, s13, s9
 8012ba4:	ee67 7a84 	vmul.f32	s15, s15, s8
 8012ba8:	ee73 4ae4 	vsub.f32	s9, s7, s9
 8012bac:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012bb0:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 8012bb4:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012bb8:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8012bbc:	eee6 7a87 	vfma.f32	s15, s13, s14
 8012bc0:	ee32 5a45 	vsub.f32	s10, s4, s10
 8012bc4:	ee67 7a83 	vmul.f32	s15, s15, s6
 8012bc8:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 8012bcc:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8012bce:	694a      	ldr	r2, [r1, #20]
 8012bd0:	1b13      	subs	r3, r2, r4
 8012bd2:	ee07 3a10 	vmov	s14, r3
 8012bd6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012bda:	680b      	ldr	r3, [r1, #0]
 8012bdc:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012be0:	1b1b      	subs	r3, r3, r4
 8012be2:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 8012be6:	ee07 3a10 	vmov	s14, r3
 8012bea:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012bee:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012bf2:	eee6 4a87 	vfma.f32	s9, s13, s14
 8012bf6:	ee64 4a86 	vmul.f32	s9, s9, s12
 8012bfa:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 8012bfe:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8012c00:	698b      	ldr	r3, [r1, #24]
 8012c02:	1a9b      	subs	r3, r3, r2
 8012c04:	ee06 3a90 	vmov	s13, r3
 8012c08:	684b      	ldr	r3, [r1, #4]
 8012c0a:	1a9b      	subs	r3, r3, r2
 8012c0c:	ee07 3a10 	vmov	s14, r3
 8012c10:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8012c14:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012c18:	ee66 6a84 	vmul.f32	s13, s13, s8
 8012c1c:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012c20:	ee65 6a66 	vnmul.f32	s13, s10, s13
 8012c24:	eee5 6a87 	vfma.f32	s13, s11, s14
 8012c28:	ee66 6a83 	vmul.f32	s13, s13, s6
 8012c2c:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 8012c30:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8012c32:	694a      	ldr	r2, [r1, #20]
 8012c34:	1b13      	subs	r3, r2, r4
 8012c36:	ee07 3a10 	vmov	s14, r3
 8012c3a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012c3e:	680b      	ldr	r3, [r1, #0]
 8012c40:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012c44:	1b1b      	subs	r3, r3, r4
 8012c46:	ee25 5a47 	vnmul.f32	s10, s10, s14
 8012c4a:	ee07 3a10 	vmov	s14, r3
 8012c4e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012c52:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012c56:	eea5 5a87 	vfma.f32	s10, s11, s14
 8012c5a:	edd0 5a08 	vldr	s11, [r0, #32]
 8012c5e:	ee25 5a06 	vmul.f32	s10, s10, s12
 8012c62:	ee31 1a65 	vsub.f32	s2, s2, s11
 8012c66:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 8012c6a:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8012c6c:	698b      	ldr	r3, [r1, #24]
 8012c6e:	1a9b      	subs	r3, r3, r2
 8012c70:	ee07 3a10 	vmov	s14, r3
 8012c74:	684b      	ldr	r3, [r1, #4]
 8012c76:	1a9b      	subs	r3, r3, r2
 8012c78:	ee01 3a90 	vmov	s3, r3
 8012c7c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012c80:	ee72 5ae5 	vsub.f32	s11, s5, s11
 8012c84:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012c88:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 8012c8c:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 8012c90:	ee61 1a84 	vmul.f32	s3, s3, s8
 8012c94:	eea1 7a21 	vfma.f32	s14, s2, s3
 8012c98:	ee27 7a03 	vmul.f32	s14, s14, s6
 8012c9c:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8012ca0:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8012ca2:	694a      	ldr	r2, [r1, #20]
 8012ca4:	1b13      	subs	r3, r2, r4
 8012ca6:	ee03 3a10 	vmov	s6, r3
 8012caa:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8012cae:	680b      	ldr	r3, [r1, #0]
 8012cb0:	ee23 3a04 	vmul.f32	s6, s6, s8
 8012cb4:	1b1b      	subs	r3, r3, r4
 8012cb6:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 8012cba:	ee03 3a10 	vmov	s6, r3
 8012cbe:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8012cc2:	ee23 4a04 	vmul.f32	s8, s6, s8
 8012cc6:	eee1 5a04 	vfma.f32	s11, s2, s8
 8012cca:	ee25 6a86 	vmul.f32	s12, s11, s12
 8012cce:	ee62 5a67 	vnmul.f32	s11, s4, s15
 8012cd2:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 8012cd6:	eee3 5aa6 	vfma.f32	s11, s7, s13
 8012cda:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8012cde:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012ce2:	dd13      	ble.n	8012d0c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 8012ce4:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8012ce8:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 8012cec:	63c3      	str	r3, [r0, #60]	; 0x3c
 8012cee:	eee3 7a87 	vfma.f32	s15, s7, s14
 8012cf2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8012cf6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012cfa:	dd15      	ble.n	8012d28 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 8012cfc:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8012d00:	6403      	str	r3, [r0, #64]	; 0x40
 8012d02:	bd70      	pop	{r4, r5, r6, pc}
 8012d04:	4623      	mov	r3, r4
 8012d06:	e6fd      	b.n	8012b04 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8012d08:	462a      	mov	r2, r5
 8012d0a:	e706      	b.n	8012b1a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8012d0c:	d502      	bpl.n	8012d14 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 8012d0e:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8012d12:	e7e9      	b.n	8012ce8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 8012d14:	ee22 2a64 	vnmul.f32	s4, s4, s9
 8012d18:	eea3 2a85 	vfma.f32	s4, s7, s10
 8012d1c:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 8012d20:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012d24:	dade      	bge.n	8012ce4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 8012d26:	e7f2      	b.n	8012d0e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 8012d28:	d502      	bpl.n	8012d30 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 8012d2a:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8012d2e:	e7e7      	b.n	8012d00 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 8012d30:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 8012d34:	eee3 4a86 	vfma.f32	s9, s7, s12
 8012d38:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8012d3c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012d40:	dadc      	bge.n	8012cfc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 8012d42:	e7f2      	b.n	8012d2a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8012d44:	3d800000 	.word	0x3d800000

08012d48 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 8012d48:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012d4c:	2714      	movs	r7, #20
 8012d4e:	435f      	muls	r7, r3
 8012d50:	eb02 0c07 	add.w	ip, r2, r7
 8012d54:	f8dc 5004 	ldr.w	r5, [ip, #4]
 8012d58:	f115 0e0f 	adds.w	lr, r5, #15
 8012d5c:	f100 80a2 	bmi.w	8012ea4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 8012d60:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 8012d64:	9c08      	ldr	r4, [sp, #32]
 8012d66:	f8c0 e014 	str.w	lr, [r0, #20]
 8012d6a:	2614      	movs	r6, #20
 8012d6c:	4366      	muls	r6, r4
 8012d6e:	eb02 0806 	add.w	r8, r2, r6
 8012d72:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8012d76:	f115 040f 	adds.w	r4, r5, #15
 8012d7a:	f100 809f 	bmi.w	8012ebc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 8012d7e:	1124      	asrs	r4, r4, #4
 8012d80:	eba4 040e 	sub.w	r4, r4, lr
 8012d84:	6184      	str	r4, [r0, #24]
 8012d86:	2c00      	cmp	r4, #0
 8012d88:	f000 808a 	beq.w	8012ea0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 8012d8c:	f8dc 9004 	ldr.w	r9, [ip, #4]
 8012d90:	f8d8 4004 	ldr.w	r4, [r8, #4]
 8012d94:	5995      	ldr	r5, [r2, r6]
 8012d96:	eba4 0809 	sub.w	r8, r4, r9
 8012d9a:	59d4      	ldr	r4, [r2, r7]
 8012d9c:	eba5 0a04 	sub.w	sl, r5, r4
 8012da0:	ea4f 150a 	mov.w	r5, sl, lsl #4
 8012da4:	fb0e fe05 	mul.w	lr, lr, r5
 8012da8:	fb0a ee19 	mls	lr, sl, r9, lr
 8012dac:	fb08 e404 	mla	r4, r8, r4, lr
 8012db0:	ea4f 1608 	mov.w	r6, r8, lsl #4
 8012db4:	3c01      	subs	r4, #1
 8012db6:	19a4      	adds	r4, r4, r6
 8012db8:	f100 808c 	bmi.w	8012ed4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 8012dbc:	fb94 fef6 	sdiv	lr, r4, r6
 8012dc0:	f8c0 e000 	str.w	lr, [r0]
 8012dc4:	fb06 441e 	mls	r4, r6, lr, r4
 8012dc8:	6104      	str	r4, [r0, #16]
 8012dca:	2d00      	cmp	r5, #0
 8012dcc:	f2c0 8095 	blt.w	8012efa <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 8012dd0:	fb95 f4f6 	sdiv	r4, r5, r6
 8012dd4:	6044      	str	r4, [r0, #4]
 8012dd6:	fb06 5514 	mls	r5, r6, r4, r5
 8012dda:	6085      	str	r5, [r0, #8]
 8012ddc:	60c6      	str	r6, [r0, #12]
 8012dde:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8012de2:	6945      	ldr	r5, [r0, #20]
 8012de4:	59d2      	ldr	r2, [r2, r7]
 8012de6:	eddf 6a4d 	vldr	s13, [pc, #308]	; 8012f1c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 8012dea:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 8012dee:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 8012df2:	ee07 4a10 	vmov	s14, r4
 8012df6:	6804      	ldr	r4, [r0, #0]
 8012df8:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 8012dfc:	ee07 2a90 	vmov	s15, r2
 8012e00:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012e04:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012e08:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8012e0c:	ee27 7a26 	vmul.f32	s14, s14, s13
 8012e10:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8012e14:	edd3 6a00 	vldr	s13, [r3]
 8012e18:	eee6 6a07 	vfma.f32	s13, s12, s14
 8012e1c:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 8012e20:	eee6 6a27 	vfma.f32	s13, s12, s15
 8012e24:	edc0 6a07 	vstr	s13, [r0, #28]
 8012e28:	edd0 6a01 	vldr	s13, [r0, #4]
 8012e2c:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 8012e30:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 8012e34:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8012e38:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8012e3c:	ed80 6a08 	vstr	s12, [r0, #32]
 8012e40:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 8012e42:	6242      	str	r2, [r0, #36]	; 0x24
 8012e44:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 8012e48:	ed93 6a03 	vldr	s12, [r3, #12]
 8012e4c:	eea5 6a87 	vfma.f32	s12, s11, s14
 8012e50:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8012e54:	eea5 6aa7 	vfma.f32	s12, s11, s15
 8012e58:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 8012e5c:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8012e60:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 8012e64:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8012e68:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 8012e6c:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8012e6e:	6302      	str	r2, [r0, #48]	; 0x30
 8012e70:	ed93 6a06 	vldr	s12, [r3, #24]
 8012e74:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 8012e78:	eea5 6a87 	vfma.f32	s12, s11, s14
 8012e7c:	eeb0 7a46 	vmov.f32	s14, s12
 8012e80:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 8012e84:	eea6 7a27 	vfma.f32	s14, s12, s15
 8012e88:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8012e8c:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 8012e90:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 8012e94:	eee6 7a87 	vfma.f32	s15, s13, s14
 8012e98:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 8012e9c:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 8012e9e:	63c3      	str	r3, [r0, #60]	; 0x3c
 8012ea0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8012ea4:	f1c5 0501 	rsb	r5, r5, #1
 8012ea8:	f015 050f 	ands.w	r5, r5, #15
 8012eac:	bf18      	it	ne
 8012eae:	2501      	movne	r5, #1
 8012eb0:	2410      	movs	r4, #16
 8012eb2:	fb9e fef4 	sdiv	lr, lr, r4
 8012eb6:	ebae 0e05 	sub.w	lr, lr, r5
 8012eba:	e753      	b.n	8012d64 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 8012ebc:	f1c5 0501 	rsb	r5, r5, #1
 8012ec0:	f015 050f 	ands.w	r5, r5, #15
 8012ec4:	bf18      	it	ne
 8012ec6:	2501      	movne	r5, #1
 8012ec8:	f04f 0910 	mov.w	r9, #16
 8012ecc:	fb94 f4f9 	sdiv	r4, r4, r9
 8012ed0:	1b64      	subs	r4, r4, r5
 8012ed2:	e755      	b.n	8012d80 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 8012ed4:	4264      	negs	r4, r4
 8012ed6:	fb94 fef6 	sdiv	lr, r4, r6
 8012eda:	f1ce 0800 	rsb	r8, lr, #0
 8012ede:	fb06 441e 	mls	r4, r6, lr, r4
 8012ee2:	f8c0 8000 	str.w	r8, [r0]
 8012ee6:	6104      	str	r4, [r0, #16]
 8012ee8:	2c00      	cmp	r4, #0
 8012eea:	f43f af6e 	beq.w	8012dca <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 8012eee:	ea6f 0e0e 	mvn.w	lr, lr
 8012ef2:	f8c0 e000 	str.w	lr, [r0]
 8012ef6:	1b34      	subs	r4, r6, r4
 8012ef8:	e766      	b.n	8012dc8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 8012efa:	426d      	negs	r5, r5
 8012efc:	fb95 f4f6 	sdiv	r4, r5, r6
 8012f00:	f1c4 0e00 	rsb	lr, r4, #0
 8012f04:	fb06 5514 	mls	r5, r6, r4, r5
 8012f08:	f8c0 e004 	str.w	lr, [r0, #4]
 8012f0c:	6085      	str	r5, [r0, #8]
 8012f0e:	2d00      	cmp	r5, #0
 8012f10:	f43f af64 	beq.w	8012ddc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 8012f14:	43e4      	mvns	r4, r4
 8012f16:	6044      	str	r4, [r0, #4]
 8012f18:	1b75      	subs	r5, r6, r5
 8012f1a:	e75e      	b.n	8012dda <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 8012f1c:	3d800000 	.word	0x3d800000

08012f20 <_ZN8touchgfx7Unicode6strlenEPKt>:
 8012f20:	4602      	mov	r2, r0
 8012f22:	b148      	cbz	r0, 8012f38 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 8012f24:	2300      	movs	r3, #0
 8012f26:	b298      	uxth	r0, r3
 8012f28:	3301      	adds	r3, #1
 8012f2a:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 8012f2e:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 8012f32:	2900      	cmp	r1, #0
 8012f34:	d1f7      	bne.n	8012f26 <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 8012f36:	4770      	bx	lr
 8012f38:	4770      	bx	lr

08012f3a <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 8012f3a:	b530      	push	{r4, r5, lr}
 8012f3c:	4604      	mov	r4, r0
 8012f3e:	b159      	cbz	r1, 8012f58 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 8012f40:	b148      	cbz	r0, 8012f56 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8012f42:	2300      	movs	r3, #0
 8012f44:	b298      	uxth	r0, r3
 8012f46:	4282      	cmp	r2, r0
 8012f48:	d905      	bls.n	8012f56 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8012f4a:	5ccd      	ldrb	r5, [r1, r3]
 8012f4c:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 8012f50:	3301      	adds	r3, #1
 8012f52:	2d00      	cmp	r5, #0
 8012f54:	d1f6      	bne.n	8012f44 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 8012f56:	bd30      	pop	{r4, r5, pc}
 8012f58:	4608      	mov	r0, r1
 8012f5a:	e7fc      	b.n	8012f56 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

08012f5c <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>:
 8012f5c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012f5e:	b08b      	sub	sp, #44	; 0x2c
 8012f60:	468c      	mov	ip, r1
 8012f62:	2100      	movs	r1, #0
 8012f64:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8012f68:	ae01      	add	r6, sp, #4
 8012f6a:	211f      	movs	r1, #31
 8012f6c:	fbb0 f7f3 	udiv	r7, r0, r3
 8012f70:	fb03 0517 	mls	r5, r3, r7, r0
 8012f74:	b2ec      	uxtb	r4, r5
 8012f76:	2d09      	cmp	r5, #9
 8012f78:	bfd4      	ite	le
 8012f7a:	3430      	addle	r4, #48	; 0x30
 8012f7c:	3457      	addgt	r4, #87	; 0x57
 8012f7e:	b2e4      	uxtb	r4, r4
 8012f80:	558c      	strb	r4, [r1, r6]
 8012f82:	4638      	mov	r0, r7
 8012f84:	1e4c      	subs	r4, r1, #1
 8012f86:	b92f      	cbnz	r7, 8012f94 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x38>
 8012f88:	4431      	add	r1, r6
 8012f8a:	4660      	mov	r0, ip
 8012f8c:	f7ff ffd5 	bl	8012f3a <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8012f90:	b00b      	add	sp, #44	; 0x2c
 8012f92:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012f94:	4621      	mov	r1, r4
 8012f96:	e7e9      	b.n	8012f6c <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x10>

08012f98 <_ZN8touchgfx7Unicode4itoaElPtti>:
 8012f98:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012f9a:	4607      	mov	r7, r0
 8012f9c:	b08b      	sub	sp, #44	; 0x2c
 8012f9e:	4608      	mov	r0, r1
 8012fa0:	b341      	cbz	r1, 8012ff4 <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 8012fa2:	1e99      	subs	r1, r3, #2
 8012fa4:	2922      	cmp	r1, #34	; 0x22
 8012fa6:	d825      	bhi.n	8012ff4 <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 8012fa8:	2100      	movs	r1, #0
 8012faa:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8012fae:	463c      	mov	r4, r7
 8012fb0:	261f      	movs	r6, #31
 8012fb2:	f10d 0c04 	add.w	ip, sp, #4
 8012fb6:	fb94 fef3 	sdiv	lr, r4, r3
 8012fba:	fb03 441e 	mls	r4, r3, lr, r4
 8012fbe:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 8012fc2:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 8012fc6:	b2ec      	uxtb	r4, r5
 8012fc8:	2d09      	cmp	r5, #9
 8012fca:	bfd4      	ite	le
 8012fcc:	3430      	addle	r4, #48	; 0x30
 8012fce:	3457      	addgt	r4, #87	; 0x57
 8012fd0:	b2e4      	uxtb	r4, r4
 8012fd2:	f80c 4006 	strb.w	r4, [ip, r6]
 8012fd6:	4674      	mov	r4, lr
 8012fd8:	1e71      	subs	r1, r6, #1
 8012fda:	b96c      	cbnz	r4, 8012ff8 <_ZN8touchgfx7Unicode4itoaElPtti+0x60>
 8012fdc:	2f00      	cmp	r7, #0
 8012fde:	da05      	bge.n	8012fec <_ZN8touchgfx7Unicode4itoaElPtti+0x54>
 8012fe0:	ab0a      	add	r3, sp, #40	; 0x28
 8012fe2:	4419      	add	r1, r3
 8012fe4:	232d      	movs	r3, #45	; 0x2d
 8012fe6:	f801 3c24 	strb.w	r3, [r1, #-36]
 8012fea:	1eb1      	subs	r1, r6, #2
 8012fec:	3101      	adds	r1, #1
 8012fee:	4461      	add	r1, ip
 8012ff0:	f7ff ffa3 	bl	8012f3a <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8012ff4:	b00b      	add	sp, #44	; 0x2c
 8012ff6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012ff8:	460e      	mov	r6, r1
 8012ffa:	e7dc      	b.n	8012fb6 <_ZN8touchgfx7Unicode4itoaElPtti+0x1e>

08012ffc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 8012ffc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013000:	4691      	mov	r9, r2
 8013002:	b085      	sub	sp, #20
 8013004:	6802      	ldr	r2, [r0, #0]
 8013006:	9201      	str	r2, [sp, #4]
 8013008:	4688      	mov	r8, r1
 801300a:	4683      	mov	fp, r0
 801300c:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 8013010:	9103      	str	r1, [sp, #12]
 8013012:	4610      	mov	r0, r2
 8013014:	461c      	mov	r4, r3
 8013016:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 801301a:	9302      	str	r3, [sp, #8]
 801301c:	f7ff ff80 	bl	8012f20 <_ZN8touchgfx7Unicode6strlenEPKt>
 8013020:	f1b8 0f00 	cmp.w	r8, #0
 8013024:	bf0c      	ite	eq
 8013026:	4684      	moveq	ip, r0
 8013028:	f100 0c01 	addne.w	ip, r0, #1
 801302c:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 8013030:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 8013034:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8013036:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8013038:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 801303c:	9903      	ldr	r1, [sp, #12]
 801303e:	fa1f fc8c 	uxth.w	ip, ip
 8013042:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 8013046:	d041      	beq.n	80130cc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8013048:	d834      	bhi.n	80130b4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 801304a:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 801304e:	d059      	beq.n	8013104 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 8013050:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 8013054:	d03a      	beq.n	80130cc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8013056:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 801305a:	d034      	beq.n	80130c6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 801305c:	2400      	movs	r4, #0
 801305e:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 8013062:	3a01      	subs	r2, #1
 8013064:	b169      	cbz	r1, 8013082 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8013066:	9911      	ldr	r1, [sp, #68]	; 0x44
 8013068:	458c      	cmp	ip, r1
 801306a:	da09      	bge.n	8013080 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 801306c:	eba1 010c 	sub.w	r1, r1, ip
 8013070:	b289      	uxth	r1, r1
 8013072:	b933      	cbnz	r3, 8013082 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8013074:	2e00      	cmp	r6, #0
 8013076:	d051      	beq.n	801311c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8013078:	2800      	cmp	r0, #0
 801307a:	d04f      	beq.n	801311c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 801307c:	440c      	add	r4, r1
 801307e:	b2a4      	uxth	r4, r4
 8013080:	2100      	movs	r1, #0
 8013082:	682b      	ldr	r3, [r5, #0]
 8013084:	4293      	cmp	r3, r2
 8013086:	da07      	bge.n	8013098 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8013088:	f1b8 0f00 	cmp.w	r8, #0
 801308c:	d004      	beq.n	8013098 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 801308e:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 8013092:	682b      	ldr	r3, [r5, #0]
 8013094:	3301      	adds	r3, #1
 8013096:	602b      	str	r3, [r5, #0]
 8013098:	2730      	movs	r7, #48	; 0x30
 801309a:	2c00      	cmp	r4, #0
 801309c:	d04e      	beq.n	801313c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801309e:	682e      	ldr	r6, [r5, #0]
 80130a0:	3c01      	subs	r4, #1
 80130a2:	42b2      	cmp	r2, r6
 80130a4:	b2a4      	uxth	r4, r4
 80130a6:	dd49      	ble.n	801313c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 80130a8:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 80130ac:	682b      	ldr	r3, [r5, #0]
 80130ae:	3301      	adds	r3, #1
 80130b0:	602b      	str	r3, [r5, #0]
 80130b2:	e7f2      	b.n	801309a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 80130b4:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 80130b8:	d01d      	beq.n	80130f6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 80130ba:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 80130be:	d002      	beq.n	80130c6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 80130c0:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 80130c4:	e7c9      	b.n	801305a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 80130c6:	4684      	mov	ip, r0
 80130c8:	f04f 0800 	mov.w	r8, #0
 80130cc:	2c00      	cmp	r4, #0
 80130ce:	d0c6      	beq.n	801305e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80130d0:	b947      	cbnz	r7, 80130e4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 80130d2:	2801      	cmp	r0, #1
 80130d4:	d106      	bne.n	80130e4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 80130d6:	8814      	ldrh	r4, [r2, #0]
 80130d8:	2c30      	cmp	r4, #48	; 0x30
 80130da:	bf02      	ittt	eq
 80130dc:	3202      	addeq	r2, #2
 80130de:	f8cb 2000 	streq.w	r2, [fp]
 80130e2:	4638      	moveq	r0, r7
 80130e4:	45bc      	cmp	ip, r7
 80130e6:	da14      	bge.n	8013112 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 80130e8:	b2bf      	uxth	r7, r7
 80130ea:	eba7 040c 	sub.w	r4, r7, ip
 80130ee:	b2a4      	uxth	r4, r4
 80130f0:	46bc      	mov	ip, r7
 80130f2:	2600      	movs	r6, #0
 80130f4:	e7b3      	b.n	801305e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80130f6:	4684      	mov	ip, r0
 80130f8:	b16c      	cbz	r4, 8013116 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 80130fa:	42b8      	cmp	r0, r7
 80130fc:	dd00      	ble.n	8013100 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 80130fe:	b2b8      	uxth	r0, r7
 8013100:	2400      	movs	r4, #0
 8013102:	e003      	b.n	801310c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 8013104:	f04f 0c01 	mov.w	ip, #1
 8013108:	2400      	movs	r4, #0
 801310a:	4660      	mov	r0, ip
 801310c:	4626      	mov	r6, r4
 801310e:	46a0      	mov	r8, r4
 8013110:	e7a5      	b.n	801305e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8013112:	2400      	movs	r4, #0
 8013114:	e7ed      	b.n	80130f2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 8013116:	4626      	mov	r6, r4
 8013118:	46a0      	mov	r8, r4
 801311a:	e7a0      	b.n	801305e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801311c:	2900      	cmp	r1, #0
 801311e:	d0b0      	beq.n	8013082 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8013120:	2720      	movs	r7, #32
 8013122:	682e      	ldr	r6, [r5, #0]
 8013124:	2900      	cmp	r1, #0
 8013126:	d0ac      	beq.n	8013082 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8013128:	3901      	subs	r1, #1
 801312a:	4296      	cmp	r6, r2
 801312c:	b289      	uxth	r1, r1
 801312e:	daa7      	bge.n	8013080 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8013130:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8013134:	682b      	ldr	r3, [r5, #0]
 8013136:	3301      	adds	r3, #1
 8013138:	602b      	str	r3, [r5, #0]
 801313a:	e7f2      	b.n	8013122 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 801313c:	b188      	cbz	r0, 8013162 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 801313e:	682b      	ldr	r3, [r5, #0]
 8013140:	3801      	subs	r0, #1
 8013142:	429a      	cmp	r2, r3
 8013144:	b280      	uxth	r0, r0
 8013146:	dd0c      	ble.n	8013162 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8013148:	f8db 3000 	ldr.w	r3, [fp]
 801314c:	1c9c      	adds	r4, r3, #2
 801314e:	f8cb 4000 	str.w	r4, [fp]
 8013152:	881c      	ldrh	r4, [r3, #0]
 8013154:	682b      	ldr	r3, [r5, #0]
 8013156:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 801315a:	682b      	ldr	r3, [r5, #0]
 801315c:	3301      	adds	r3, #1
 801315e:	602b      	str	r3, [r5, #0]
 8013160:	e7ec      	b.n	801313c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8013162:	2620      	movs	r6, #32
 8013164:	b151      	cbz	r1, 801317c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8013166:	6828      	ldr	r0, [r5, #0]
 8013168:	3901      	subs	r1, #1
 801316a:	4282      	cmp	r2, r0
 801316c:	b289      	uxth	r1, r1
 801316e:	dd05      	ble.n	801317c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8013170:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 8013174:	682b      	ldr	r3, [r5, #0]
 8013176:	3301      	adds	r3, #1
 8013178:	602b      	str	r3, [r5, #0]
 801317a:	e7f3      	b.n	8013164 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 801317c:	b005      	add	sp, #20
 801317e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08013182 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 8013182:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013186:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 801318a:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 801318e:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 8013192:	2400      	movs	r4, #0
 8013194:	8014      	strh	r4, [r2, #0]
 8013196:	701c      	strb	r4, [r3, #0]
 8013198:	f888 4000 	strb.w	r4, [r8]
 801319c:	f88c 4000 	strb.w	r4, [ip]
 80131a0:	f88e 4000 	strb.w	r4, [lr]
 80131a4:	703c      	strb	r4, [r7, #0]
 80131a6:	6804      	ldr	r4, [r0, #0]
 80131a8:	b1a4      	cbz	r4, 80131d4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 80131aa:	8824      	ldrh	r4, [r4, #0]
 80131ac:	f04f 0901 	mov.w	r9, #1
 80131b0:	b314      	cbz	r4, 80131f8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 80131b2:	2c2b      	cmp	r4, #43	; 0x2b
 80131b4:	d001      	beq.n	80131ba <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 80131b6:	2c20      	cmp	r4, #32
 80131b8:	d110      	bne.n	80131dc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 80131ba:	8014      	strh	r4, [r2, #0]
 80131bc:	6804      	ldr	r4, [r0, #0]
 80131be:	b10c      	cbz	r4, 80131c4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 80131c0:	3402      	adds	r4, #2
 80131c2:	6004      	str	r4, [r0, #0]
 80131c4:	680c      	ldr	r4, [r1, #0]
 80131c6:	b10c      	cbz	r4, 80131cc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 80131c8:	3401      	adds	r4, #1
 80131ca:	600c      	str	r4, [r1, #0]
 80131cc:	6804      	ldr	r4, [r0, #0]
 80131ce:	b17c      	cbz	r4, 80131f0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 80131d0:	8824      	ldrh	r4, [r4, #0]
 80131d2:	e7ed      	b.n	80131b0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 80131d4:	680c      	ldr	r4, [r1, #0]
 80131d6:	b17c      	cbz	r4, 80131f8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 80131d8:	7824      	ldrb	r4, [r4, #0]
 80131da:	e7e7      	b.n	80131ac <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 80131dc:	2c2d      	cmp	r4, #45	; 0x2d
 80131de:	d102      	bne.n	80131e6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 80131e0:	f883 9000 	strb.w	r9, [r3]
 80131e4:	e7ea      	b.n	80131bc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 80131e6:	2c23      	cmp	r4, #35	; 0x23
 80131e8:	d107      	bne.n	80131fa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 80131ea:	f888 9000 	strb.w	r9, [r8]
 80131ee:	e7e5      	b.n	80131bc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 80131f0:	680c      	ldr	r4, [r1, #0]
 80131f2:	b10c      	cbz	r4, 80131f8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 80131f4:	7824      	ldrb	r4, [r4, #0]
 80131f6:	e7db      	b.n	80131b0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 80131f8:	2400      	movs	r4, #0
 80131fa:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 80131fe:	2b09      	cmp	r3, #9
 8013200:	d901      	bls.n	8013206 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 8013202:	2c2a      	cmp	r4, #42	; 0x2a
 8013204:	d122      	bne.n	801324c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8013206:	2301      	movs	r3, #1
 8013208:	2c30      	cmp	r4, #48	; 0x30
 801320a:	f88e 3000 	strb.w	r3, [lr]
 801320e:	d10d      	bne.n	801322c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8013210:	f88c 3000 	strb.w	r3, [ip]
 8013214:	6803      	ldr	r3, [r0, #0]
 8013216:	b10b      	cbz	r3, 801321c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 8013218:	3302      	adds	r3, #2
 801321a:	6003      	str	r3, [r0, #0]
 801321c:	680b      	ldr	r3, [r1, #0]
 801321e:	b10b      	cbz	r3, 8013224 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 8013220:	3301      	adds	r3, #1
 8013222:	600b      	str	r3, [r1, #0]
 8013224:	6803      	ldr	r3, [r0, #0]
 8013226:	2b00      	cmp	r3, #0
 8013228:	d02f      	beq.n	801328a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 801322a:	881c      	ldrh	r4, [r3, #0]
 801322c:	2c2a      	cmp	r4, #42	; 0x2a
 801322e:	d135      	bne.n	801329c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8013230:	f04f 33ff 	mov.w	r3, #4294967295
 8013234:	6033      	str	r3, [r6, #0]
 8013236:	6803      	ldr	r3, [r0, #0]
 8013238:	b10b      	cbz	r3, 801323e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 801323a:	3302      	adds	r3, #2
 801323c:	6003      	str	r3, [r0, #0]
 801323e:	680b      	ldr	r3, [r1, #0]
 8013240:	b10b      	cbz	r3, 8013246 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 8013242:	3301      	adds	r3, #1
 8013244:	600b      	str	r3, [r1, #0]
 8013246:	6803      	ldr	r3, [r0, #0]
 8013248:	b31b      	cbz	r3, 8013292 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 801324a:	881c      	ldrh	r4, [r3, #0]
 801324c:	2c2e      	cmp	r4, #46	; 0x2e
 801324e:	d11a      	bne.n	8013286 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8013250:	2301      	movs	r3, #1
 8013252:	703b      	strb	r3, [r7, #0]
 8013254:	6803      	ldr	r3, [r0, #0]
 8013256:	b10b      	cbz	r3, 801325c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 8013258:	3302      	adds	r3, #2
 801325a:	6003      	str	r3, [r0, #0]
 801325c:	680b      	ldr	r3, [r1, #0]
 801325e:	b10b      	cbz	r3, 8013264 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 8013260:	3301      	adds	r3, #1
 8013262:	600b      	str	r3, [r1, #0]
 8013264:	6803      	ldr	r3, [r0, #0]
 8013266:	2b00      	cmp	r3, #0
 8013268:	d036      	beq.n	80132d8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 801326a:	881b      	ldrh	r3, [r3, #0]
 801326c:	2b2a      	cmp	r3, #42	; 0x2a
 801326e:	d137      	bne.n	80132e0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8013270:	f04f 33ff 	mov.w	r3, #4294967295
 8013274:	602b      	str	r3, [r5, #0]
 8013276:	6803      	ldr	r3, [r0, #0]
 8013278:	b10b      	cbz	r3, 801327e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 801327a:	3302      	adds	r3, #2
 801327c:	6003      	str	r3, [r0, #0]
 801327e:	680b      	ldr	r3, [r1, #0]
 8013280:	b10b      	cbz	r3, 8013286 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8013282:	3301      	adds	r3, #1
 8013284:	600b      	str	r3, [r1, #0]
 8013286:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801328a:	680c      	ldr	r4, [r1, #0]
 801328c:	b134      	cbz	r4, 801329c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 801328e:	7824      	ldrb	r4, [r4, #0]
 8013290:	e7cc      	b.n	801322c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8013292:	680b      	ldr	r3, [r1, #0]
 8013294:	2b00      	cmp	r3, #0
 8013296:	d0f6      	beq.n	8013286 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8013298:	781c      	ldrb	r4, [r3, #0]
 801329a:	e7d7      	b.n	801324c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801329c:	2300      	movs	r3, #0
 801329e:	6033      	str	r3, [r6, #0]
 80132a0:	220a      	movs	r2, #10
 80132a2:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 80132a6:	fa1f f38c 	uxth.w	r3, ip
 80132aa:	2b09      	cmp	r3, #9
 80132ac:	d8ce      	bhi.n	801324c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 80132ae:	6833      	ldr	r3, [r6, #0]
 80132b0:	fb02 c303 	mla	r3, r2, r3, ip
 80132b4:	6033      	str	r3, [r6, #0]
 80132b6:	6803      	ldr	r3, [r0, #0]
 80132b8:	b10b      	cbz	r3, 80132be <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 80132ba:	3302      	adds	r3, #2
 80132bc:	6003      	str	r3, [r0, #0]
 80132be:	680b      	ldr	r3, [r1, #0]
 80132c0:	b10b      	cbz	r3, 80132c6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 80132c2:	3301      	adds	r3, #1
 80132c4:	600b      	str	r3, [r1, #0]
 80132c6:	6803      	ldr	r3, [r0, #0]
 80132c8:	b10b      	cbz	r3, 80132ce <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 80132ca:	881c      	ldrh	r4, [r3, #0]
 80132cc:	e7e9      	b.n	80132a2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 80132ce:	680c      	ldr	r4, [r1, #0]
 80132d0:	2c00      	cmp	r4, #0
 80132d2:	d0e6      	beq.n	80132a2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 80132d4:	7824      	ldrb	r4, [r4, #0]
 80132d6:	e7e4      	b.n	80132a2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 80132d8:	680b      	ldr	r3, [r1, #0]
 80132da:	b10b      	cbz	r3, 80132e0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 80132dc:	781b      	ldrb	r3, [r3, #0]
 80132de:	e7c5      	b.n	801326c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 80132e0:	2200      	movs	r2, #0
 80132e2:	602a      	str	r2, [r5, #0]
 80132e4:	240a      	movs	r4, #10
 80132e6:	3b30      	subs	r3, #48	; 0x30
 80132e8:	b29e      	uxth	r6, r3
 80132ea:	2e09      	cmp	r6, #9
 80132ec:	682a      	ldr	r2, [r5, #0]
 80132ee:	d813      	bhi.n	8013318 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 80132f0:	fb04 3302 	mla	r3, r4, r2, r3
 80132f4:	602b      	str	r3, [r5, #0]
 80132f6:	6803      	ldr	r3, [r0, #0]
 80132f8:	b10b      	cbz	r3, 80132fe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 80132fa:	3302      	adds	r3, #2
 80132fc:	6003      	str	r3, [r0, #0]
 80132fe:	680b      	ldr	r3, [r1, #0]
 8013300:	b10b      	cbz	r3, 8013306 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 8013302:	3301      	adds	r3, #1
 8013304:	600b      	str	r3, [r1, #0]
 8013306:	6803      	ldr	r3, [r0, #0]
 8013308:	b10b      	cbz	r3, 801330e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 801330a:	881b      	ldrh	r3, [r3, #0]
 801330c:	e7eb      	b.n	80132e6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 801330e:	680b      	ldr	r3, [r1, #0]
 8013310:	2b00      	cmp	r3, #0
 8013312:	d0e8      	beq.n	80132e6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8013314:	781b      	ldrb	r3, [r3, #0]
 8013316:	e7e6      	b.n	80132e6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8013318:	2a06      	cmp	r2, #6
 801331a:	bfa8      	it	ge
 801331c:	2206      	movge	r2, #6
 801331e:	602a      	str	r2, [r5, #0]
 8013320:	e7b1      	b.n	8013286 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

08013322 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 8013322:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013326:	b0a3      	sub	sp, #140	; 0x8c
 8013328:	2600      	movs	r6, #0
 801332a:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 801332e:	4607      	mov	r7, r0
 8013330:	4688      	mov	r8, r1
 8013332:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8013336:	4631      	mov	r1, r6
 8013338:	2242      	movs	r2, #66	; 0x42
 801333a:	4648      	mov	r0, r9
 801333c:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 801333e:	960d      	str	r6, [sp, #52]	; 0x34
 8013340:	f00c fe74 	bl	802002c <memset>
 8013344:	b15f      	cbz	r7, 801335e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 8013346:	f108 3aff 	add.w	sl, r8, #4294967295
 801334a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801334c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801334e:	b152      	cbz	r2, 8013366 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 8013350:	8812      	ldrh	r2, [r2, #0]
 8013352:	b10a      	cbz	r2, 8013358 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8013354:	459a      	cmp	sl, r3
 8013356:	dc2e      	bgt.n	80133b6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 8013358:	2200      	movs	r2, #0
 801335a:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 801335e:	4638      	mov	r0, r7
 8013360:	b023      	add	sp, #140	; 0x8c
 8013362:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013366:	9a08      	ldr	r2, [sp, #32]
 8013368:	2a00      	cmp	r2, #0
 801336a:	d0f5      	beq.n	8013358 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 801336c:	7812      	ldrb	r2, [r2, #0]
 801336e:	e7f0      	b.n	8013352 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 8013370:	2d00      	cmp	r5, #0
 8013372:	d0ea      	beq.n	801334a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8013374:	782a      	ldrb	r2, [r5, #0]
 8013376:	b142      	cbz	r2, 801338a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 8013378:	2a25      	cmp	r2, #37	; 0x25
 801337a:	d001      	beq.n	8013380 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 801337c:	459a      	cmp	sl, r3
 801337e:	dc08      	bgt.n	8013392 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 8013380:	f1bb 0f00 	cmp.w	fp, #0
 8013384:	d121      	bne.n	80133ca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 8013386:	2d00      	cmp	r5, #0
 8013388:	d0df      	beq.n	801334a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801338a:	782a      	ldrb	r2, [r5, #0]
 801338c:	f04f 0b00 	mov.w	fp, #0
 8013390:	e01d      	b.n	80133ce <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 8013392:	f1bb 0f00 	cmp.w	fp, #0
 8013396:	d078      	beq.n	801348a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 8013398:	f8bb 2000 	ldrh.w	r2, [fp]
 801339c:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 80133a0:	f1bb 0f00 	cmp.w	fp, #0
 80133a4:	d002      	beq.n	80133ac <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 80133a6:	f10b 0202 	add.w	r2, fp, #2
 80133aa:	9209      	str	r2, [sp, #36]	; 0x24
 80133ac:	b10d      	cbz	r5, 80133b2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 80133ae:	3501      	adds	r5, #1
 80133b0:	9508      	str	r5, [sp, #32]
 80133b2:	3301      	adds	r3, #1
 80133b4:	930d      	str	r3, [sp, #52]	; 0x34
 80133b6:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 80133ba:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80133bc:	f1bb 0f00 	cmp.w	fp, #0
 80133c0:	d0d6      	beq.n	8013370 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 80133c2:	f8bb 2000 	ldrh.w	r2, [fp]
 80133c6:	2a00      	cmp	r2, #0
 80133c8:	d1d6      	bne.n	8013378 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 80133ca:	f8bb 2000 	ldrh.w	r2, [fp]
 80133ce:	2a00      	cmp	r2, #0
 80133d0:	d0bb      	beq.n	801334a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80133d2:	459a      	cmp	sl, r3
 80133d4:	ddb9      	ble.n	801334a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80133d6:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 80133da:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 80133de:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 80133e2:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 80133e6:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 80133ea:	960e      	str	r6, [sp, #56]	; 0x38
 80133ec:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 80133f0:	960f      	str	r6, [sp, #60]	; 0x3c
 80133f2:	f1bb 0f00 	cmp.w	fp, #0
 80133f6:	d002      	beq.n	80133fe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 80133f8:	f10b 0302 	add.w	r3, fp, #2
 80133fc:	9309      	str	r3, [sp, #36]	; 0x24
 80133fe:	b10d      	cbz	r5, 8013404 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 8013400:	1c6b      	adds	r3, r5, #1
 8013402:	9308      	str	r3, [sp, #32]
 8013404:	ab0f      	add	r3, sp, #60	; 0x3c
 8013406:	9305      	str	r3, [sp, #20]
 8013408:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 801340c:	9304      	str	r3, [sp, #16]
 801340e:	ab0e      	add	r3, sp, #56	; 0x38
 8013410:	9303      	str	r3, [sp, #12]
 8013412:	ab0c      	add	r3, sp, #48	; 0x30
 8013414:	9302      	str	r3, [sp, #8]
 8013416:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 801341a:	9301      	str	r3, [sp, #4]
 801341c:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8013420:	9300      	str	r3, [sp, #0]
 8013422:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 8013426:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 801342a:	a908      	add	r1, sp, #32
 801342c:	a809      	add	r0, sp, #36	; 0x24
 801342e:	f7ff fea8 	bl	8013182 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8013432:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013434:	2b00      	cmp	r3, #0
 8013436:	bfbe      	ittt	lt
 8013438:	6823      	ldrlt	r3, [r4, #0]
 801343a:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 801343e:	930e      	strlt	r3, [sp, #56]	; 0x38
 8013440:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8013442:	bfb8      	it	lt
 8013444:	3404      	addlt	r4, #4
 8013446:	2b00      	cmp	r3, #0
 8013448:	bfb8      	it	lt
 801344a:	6823      	ldrlt	r3, [r4, #0]
 801344c:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8013450:	bfbe      	ittt	lt
 8013452:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8013456:	930f      	strlt	r3, [sp, #60]	; 0x3c
 8013458:	3404      	addlt	r4, #4
 801345a:	b1d9      	cbz	r1, 8013494 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 801345c:	880b      	ldrh	r3, [r1, #0]
 801345e:	2b69      	cmp	r3, #105	; 0x69
 8013460:	d01f      	beq.n	80134a2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8013462:	d82f      	bhi.n	80134c4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 8013464:	2b58      	cmp	r3, #88	; 0x58
 8013466:	d01c      	beq.n	80134a2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8013468:	d818      	bhi.n	801349c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 801346a:	2b25      	cmp	r3, #37	; 0x25
 801346c:	d034      	beq.n	80134d8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 801346e:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 8013472:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013474:	f1bb 0f00 	cmp.w	fp, #0
 8013478:	f000 80b8 	beq.w	80135ec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 801347c:	f8bb 5000 	ldrh.w	r5, [fp]
 8013480:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 8013484:	3301      	adds	r3, #1
 8013486:	930d      	str	r3, [sp, #52]	; 0x34
 8013488:	e029      	b.n	80134de <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 801348a:	b10d      	cbz	r5, 8013490 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 801348c:	782a      	ldrb	r2, [r5, #0]
 801348e:	e785      	b.n	801339c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8013490:	462a      	mov	r2, r5
 8013492:	e783      	b.n	801339c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8013494:	2a00      	cmp	r2, #0
 8013496:	d0ea      	beq.n	801346e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8013498:	7813      	ldrb	r3, [r2, #0]
 801349a:	e7e0      	b.n	801345e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 801349c:	3b63      	subs	r3, #99	; 0x63
 801349e:	2b01      	cmp	r3, #1
 80134a0:	d8e5      	bhi.n	801346e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 80134a2:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 80134a6:	b329      	cbz	r1, 80134f4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 80134a8:	880b      	ldrh	r3, [r1, #0]
 80134aa:	2b69      	cmp	r3, #105	; 0x69
 80134ac:	d063      	beq.n	8013576 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 80134ae:	d825      	bhi.n	80134fc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 80134b0:	2b63      	cmp	r3, #99	; 0x63
 80134b2:	d038      	beq.n	8013526 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 80134b4:	2b64      	cmp	r3, #100	; 0x64
 80134b6:	d05e      	beq.n	8013576 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 80134b8:	2b58      	cmp	r3, #88	; 0x58
 80134ba:	d07b      	beq.n	80135b4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 80134bc:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 80134c0:	4625      	mov	r5, r4
 80134c2:	e036      	b.n	8013532 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 80134c4:	2b73      	cmp	r3, #115	; 0x73
 80134c6:	d0ec      	beq.n	80134a2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 80134c8:	d802      	bhi.n	80134d0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 80134ca:	2b6f      	cmp	r3, #111	; 0x6f
 80134cc:	d1cf      	bne.n	801346e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 80134ce:	e7e8      	b.n	80134a2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 80134d0:	2b75      	cmp	r3, #117	; 0x75
 80134d2:	d0e6      	beq.n	80134a2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 80134d4:	2b78      	cmp	r3, #120	; 0x78
 80134d6:	e7f9      	b.n	80134cc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 80134d8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80134da:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 80134de:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80134e0:	b10b      	cbz	r3, 80134e6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 80134e2:	3302      	adds	r3, #2
 80134e4:	9309      	str	r3, [sp, #36]	; 0x24
 80134e6:	9b08      	ldr	r3, [sp, #32]
 80134e8:	2b00      	cmp	r3, #0
 80134ea:	f43f af2e 	beq.w	801334a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80134ee:	3301      	adds	r3, #1
 80134f0:	9308      	str	r3, [sp, #32]
 80134f2:	e72a      	b.n	801334a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80134f4:	2a00      	cmp	r2, #0
 80134f6:	d0e1      	beq.n	80134bc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 80134f8:	7813      	ldrb	r3, [r2, #0]
 80134fa:	e7d6      	b.n	80134aa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 80134fc:	2b73      	cmp	r3, #115	; 0x73
 80134fe:	d036      	beq.n	801356e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 8013500:	d807      	bhi.n	8013512 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 8013502:	2b6f      	cmp	r3, #111	; 0x6f
 8013504:	d1da      	bne.n	80134bc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8013506:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8013508:	1d25      	adds	r5, r4, #4
 801350a:	eba8 0202 	sub.w	r2, r8, r2
 801350e:	2308      	movs	r3, #8
 8013510:	e04a      	b.n	80135a8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8013512:	2b75      	cmp	r3, #117	; 0x75
 8013514:	d043      	beq.n	801359e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 8013516:	2b78      	cmp	r3, #120	; 0x78
 8013518:	d1d0      	bne.n	80134bc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801351a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801351c:	1d25      	adds	r5, r4, #4
 801351e:	eba8 0202 	sub.w	r2, r8, r2
 8013522:	2310      	movs	r3, #16
 8013524:	e040      	b.n	80135a8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8013526:	6823      	ldr	r3, [r4, #0]
 8013528:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 801352c:	1d25      	adds	r5, r4, #4
 801352e:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 8013532:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013534:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 8013538:	2b00      	cmp	r3, #0
 801353a:	d052      	beq.n	80135e2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 801353c:	881a      	ldrh	r2, [r3, #0]
 801353e:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 8013542:	a80d      	add	r0, sp, #52	; 0x34
 8013544:	9005      	str	r0, [sp, #20]
 8013546:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 801354a:	9004      	str	r0, [sp, #16]
 801354c:	980e      	ldr	r0, [sp, #56]	; 0x38
 801354e:	9003      	str	r0, [sp, #12]
 8013550:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 8013554:	9002      	str	r0, [sp, #8]
 8013556:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8013558:	9001      	str	r0, [sp, #4]
 801355a:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 801355e:	9000      	str	r0, [sp, #0]
 8013560:	e9cd 8706 	strd	r8, r7, [sp, #24]
 8013564:	a810      	add	r0, sp, #64	; 0x40
 8013566:	f7ff fd49 	bl	8012ffc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 801356a:	462c      	mov	r4, r5
 801356c:	e7b7      	b.n	80134de <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 801356e:	6823      	ldr	r3, [r4, #0]
 8013570:	1d25      	adds	r5, r4, #4
 8013572:	9310      	str	r3, [sp, #64]	; 0x40
 8013574:	e7dd      	b.n	8013532 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8013576:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8013578:	6820      	ldr	r0, [r4, #0]
 801357a:	eba8 0202 	sub.w	r2, r8, r2
 801357e:	230a      	movs	r3, #10
 8013580:	b292      	uxth	r2, r2
 8013582:	4649      	mov	r1, r9
 8013584:	f7ff fd08 	bl	8012f98 <_ZN8touchgfx7Unicode4itoaElPtti>
 8013588:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 801358c:	2b2d      	cmp	r3, #45	; 0x2d
 801358e:	f104 0504 	add.w	r5, r4, #4
 8013592:	d1ce      	bne.n	8013532 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8013594:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8013598:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801359a:	3302      	adds	r3, #2
 801359c:	e7e9      	b.n	8013572 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 801359e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80135a0:	1d25      	adds	r5, r4, #4
 80135a2:	eba8 0202 	sub.w	r2, r8, r2
 80135a6:	230a      	movs	r3, #10
 80135a8:	b292      	uxth	r2, r2
 80135aa:	4649      	mov	r1, r9
 80135ac:	6820      	ldr	r0, [r4, #0]
 80135ae:	f7ff fcd5 	bl	8012f5c <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 80135b2:	e7be      	b.n	8013532 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 80135b4:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80135b6:	6820      	ldr	r0, [r4, #0]
 80135b8:	eba8 0202 	sub.w	r2, r8, r2
 80135bc:	b292      	uxth	r2, r2
 80135be:	2310      	movs	r3, #16
 80135c0:	4649      	mov	r1, r9
 80135c2:	f7ff fccb 	bl	8012f5c <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 80135c6:	1d25      	adds	r5, r4, #4
 80135c8:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 80135cc:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 80135d0:	2b00      	cmp	r3, #0
 80135d2:	d0ae      	beq.n	8013532 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 80135d4:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 80135d8:	2919      	cmp	r1, #25
 80135da:	d8f7      	bhi.n	80135cc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 80135dc:	3b20      	subs	r3, #32
 80135de:	8013      	strh	r3, [r2, #0]
 80135e0:	e7f4      	b.n	80135cc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 80135e2:	9a08      	ldr	r2, [sp, #32]
 80135e4:	2a00      	cmp	r2, #0
 80135e6:	d0aa      	beq.n	801353e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 80135e8:	7812      	ldrb	r2, [r2, #0]
 80135ea:	e7a8      	b.n	801353e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 80135ec:	2d00      	cmp	r5, #0
 80135ee:	f43f af47 	beq.w	8013480 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 80135f2:	782d      	ldrb	r5, [r5, #0]
 80135f4:	e744      	b.n	8013480 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

080135f6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 80135f6:	b507      	push	{r0, r1, r2, lr}
 80135f8:	9300      	str	r3, [sp, #0]
 80135fa:	4613      	mov	r3, r2
 80135fc:	2200      	movs	r2, #0
 80135fe:	f7ff fe90 	bl	8013322 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 8013602:	b003      	add	sp, #12
 8013604:	f85d fb04 	ldr.w	pc, [sp], #4

08013608 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 8013608:	b40c      	push	{r2, r3}
 801360a:	b507      	push	{r0, r1, r2, lr}
 801360c:	ab04      	add	r3, sp, #16
 801360e:	f853 2b04 	ldr.w	r2, [r3], #4
 8013612:	9301      	str	r3, [sp, #4]
 8013614:	f7ff ffef 	bl	80135f6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 8013618:	b003      	add	sp, #12
 801361a:	f85d eb04 	ldr.w	lr, [sp], #4
 801361e:	b002      	add	sp, #8
 8013620:	4770      	bx	lr
	...

08013624 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>:
 8013624:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013628:	b0c3      	sub	sp, #268	; 0x10c
 801362a:	2600      	movs	r6, #0
 801362c:	f10d 0840 	add.w	r8, sp, #64	; 0x40
 8013630:	4607      	mov	r7, r0
 8013632:	4689      	mov	r9, r1
 8013634:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8013638:	4631      	mov	r1, r6
 801363a:	22c8      	movs	r2, #200	; 0xc8
 801363c:	4640      	mov	r0, r8
 801363e:	f8dd a130 	ldr.w	sl, [sp, #304]	; 0x130
 8013642:	960c      	str	r6, [sp, #48]	; 0x30
 8013644:	f00c fcf2 	bl	802002c <memset>
 8013648:	b17f      	cbz	r7, 801366a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x46>
 801364a:	eddf 5aa4 	vldr	s11, [pc, #656]	; 80138dc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2b8>
 801364e:	f8df b298 	ldr.w	fp, [pc, #664]	; 80138e8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c4>
 8013652:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8013654:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013656:	b162      	cbz	r2, 8013672 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x4e>
 8013658:	8812      	ldrh	r2, [r2, #0]
 801365a:	b11a      	cbz	r2, 8013664 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x40>
 801365c:	f109 31ff 	add.w	r1, r9, #4294967295
 8013660:	4299      	cmp	r1, r3
 8013662:	dc26      	bgt.n	80136b2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x8e>
 8013664:	2200      	movs	r2, #0
 8013666:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 801366a:	4638      	mov	r0, r7
 801366c:	b043      	add	sp, #268	; 0x10c
 801366e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013672:	9a08      	ldr	r2, [sp, #32]
 8013674:	2a00      	cmp	r2, #0
 8013676:	d0f5      	beq.n	8013664 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x40>
 8013678:	7812      	ldrb	r2, [r2, #0]
 801367a:	e7ee      	b.n	801365a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36>
 801367c:	2c00      	cmp	r4, #0
 801367e:	d0e8      	beq.n	8013652 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 8013680:	7822      	ldrb	r2, [r4, #0]
 8013682:	b132      	cbz	r2, 8013692 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x6e>
 8013684:	2a25      	cmp	r2, #37	; 0x25
 8013686:	d001      	beq.n	801368c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x68>
 8013688:	4299      	cmp	r1, r3
 801368a:	dc05      	bgt.n	8013698 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x74>
 801368c:	b9cd      	cbnz	r5, 80136c2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x9e>
 801368e:	2c00      	cmp	r4, #0
 8013690:	d0df      	beq.n	8013652 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 8013692:	7822      	ldrb	r2, [r4, #0]
 8013694:	2500      	movs	r5, #0
 8013696:	e015      	b.n	80136c4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xa0>
 8013698:	2d00      	cmp	r5, #0
 801369a:	d073      	beq.n	8013784 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x160>
 801369c:	882a      	ldrh	r2, [r5, #0]
 801369e:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 80136a2:	b10d      	cbz	r5, 80136a8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x84>
 80136a4:	3502      	adds	r5, #2
 80136a6:	9509      	str	r5, [sp, #36]	; 0x24
 80136a8:	b10c      	cbz	r4, 80136ae <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x8a>
 80136aa:	3401      	adds	r4, #1
 80136ac:	9408      	str	r4, [sp, #32]
 80136ae:	3301      	adds	r3, #1
 80136b0:	930c      	str	r3, [sp, #48]	; 0x30
 80136b2:	e9dd 4508 	ldrd	r4, r5, [sp, #32]
 80136b6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80136b8:	2d00      	cmp	r5, #0
 80136ba:	d0df      	beq.n	801367c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x58>
 80136bc:	882a      	ldrh	r2, [r5, #0]
 80136be:	2a00      	cmp	r2, #0
 80136c0:	d1e0      	bne.n	8013684 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x60>
 80136c2:	882a      	ldrh	r2, [r5, #0]
 80136c4:	2a00      	cmp	r2, #0
 80136c6:	d0c4      	beq.n	8013652 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 80136c8:	4299      	cmp	r1, r3
 80136ca:	ddc2      	ble.n	8013652 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 80136cc:	2300      	movs	r3, #0
 80136ce:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 80136d2:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80136d6:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80136da:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 80136de:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 80136e2:	930d      	str	r3, [sp, #52]	; 0x34
 80136e4:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
 80136e8:	930e      	str	r3, [sp, #56]	; 0x38
 80136ea:	b10d      	cbz	r5, 80136f0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xcc>
 80136ec:	1cab      	adds	r3, r5, #2
 80136ee:	9309      	str	r3, [sp, #36]	; 0x24
 80136f0:	b10c      	cbz	r4, 80136f6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xd2>
 80136f2:	1c63      	adds	r3, r4, #1
 80136f4:	9308      	str	r3, [sp, #32]
 80136f6:	ab0e      	add	r3, sp, #56	; 0x38
 80136f8:	9305      	str	r3, [sp, #20]
 80136fa:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 80136fe:	9304      	str	r3, [sp, #16]
 8013700:	ab0d      	add	r3, sp, #52	; 0x34
 8013702:	9303      	str	r3, [sp, #12]
 8013704:	ab0b      	add	r3, sp, #44	; 0x2c
 8013706:	9302      	str	r3, [sp, #8]
 8013708:	f10d 032b 	add.w	r3, sp, #43	; 0x2b
 801370c:	9301      	str	r3, [sp, #4]
 801370e:	f10d 032a 	add.w	r3, sp, #42	; 0x2a
 8013712:	9300      	str	r3, [sp, #0]
 8013714:	f10d 022e 	add.w	r2, sp, #46	; 0x2e
 8013718:	f10d 0329 	add.w	r3, sp, #41	; 0x29
 801371c:	a908      	add	r1, sp, #32
 801371e:	a809      	add	r0, sp, #36	; 0x24
 8013720:	f7ff fd2f 	bl	8013182 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8013724:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013726:	2b00      	cmp	r3, #0
 8013728:	da0b      	bge.n	8013742 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x11e>
 801372a:	eb0a 0386 	add.w	r3, sl, r6, lsl #2
 801372e:	edd3 7a00 	vldr	s15, [r3]
 8013732:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8013736:	3601      	adds	r6, #1
 8013738:	ee17 3a90 	vmov	r3, s15
 801373c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013740:	930d      	str	r3, [sp, #52]	; 0x34
 8013742:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013744:	2b00      	cmp	r3, #0
 8013746:	da0b      	bge.n	8013760 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x13c>
 8013748:	eb0a 0386 	add.w	r3, sl, r6, lsl #2
 801374c:	edd3 7a00 	vldr	s15, [r3]
 8013750:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8013754:	3601      	adds	r6, #1
 8013756:	ee17 3a90 	vmov	r3, s15
 801375a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801375e:	930e      	str	r3, [sp, #56]	; 0x38
 8013760:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013762:	b1a3      	cbz	r3, 801378e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x16a>
 8013764:	881a      	ldrh	r2, [r3, #0]
 8013766:	2a25      	cmp	r2, #37	; 0x25
 8013768:	d016      	beq.n	8013798 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x174>
 801376a:	2a66      	cmp	r2, #102	; 0x66
 801376c:	d01a      	beq.n	80137a4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x180>
 801376e:	e9cd 4508 	strd	r4, r5, [sp, #32]
 8013772:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013774:	2d00      	cmp	r5, #0
 8013776:	f000 80fe 	beq.w	8013976 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x352>
 801377a:	882c      	ldrh	r4, [r5, #0]
 801377c:	f827 4013 	strh.w	r4, [r7, r3, lsl #1]
 8013780:	3301      	adds	r3, #1
 8013782:	e00d      	b.n	80137a0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x17c>
 8013784:	b10c      	cbz	r4, 801378a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x166>
 8013786:	7822      	ldrb	r2, [r4, #0]
 8013788:	e789      	b.n	801369e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7a>
 801378a:	4622      	mov	r2, r4
 801378c:	e787      	b.n	801369e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7a>
 801378e:	9b08      	ldr	r3, [sp, #32]
 8013790:	2b00      	cmp	r3, #0
 8013792:	d0ec      	beq.n	801376e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x14a>
 8013794:	781a      	ldrb	r2, [r3, #0]
 8013796:	e7e6      	b.n	8013766 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x142>
 8013798:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801379a:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 801379e:	3302      	adds	r3, #2
 80137a0:	930c      	str	r3, [sp, #48]	; 0x30
 80137a2:	e042      	b.n	801382a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x206>
 80137a4:	eb0a 0386 	add.w	r3, sl, r6, lsl #2
 80137a8:	edd3 7a00 	vldr	s15, [r3]
 80137ac:	f89d 302d 	ldrb.w	r3, [sp, #45]	; 0x2d
 80137b0:	f8cd 803c 	str.w	r8, [sp, #60]	; 0x3c
 80137b4:	3601      	adds	r6, #1
 80137b6:	b923      	cbnz	r3, 80137c2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x19e>
 80137b8:	2301      	movs	r3, #1
 80137ba:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
 80137be:	2306      	movs	r3, #6
 80137c0:	930e      	str	r3, [sp, #56]	; 0x38
 80137c2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80137c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80137ca:	bf48      	it	mi
 80137cc:	eef1 7a67 	vnegmi.f32	s15, s15
 80137d0:	eeb0 7ae7 	vabs.f32	s14, s15
 80137d4:	bf48      	it	mi
 80137d6:	232d      	movmi	r3, #45	; 0x2d
 80137d8:	eeb4 7a65 	vcmp.f32	s14, s11
 80137dc:	bf48      	it	mi
 80137de:	f8ad 302e 	strhmi.w	r3, [sp, #46]	; 0x2e
 80137e2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80137e6:	dd2b      	ble.n	8013840 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x21c>
 80137e8:	f8cd b040 	str.w	fp, [sp, #64]	; 0x40
 80137ec:	2366      	movs	r3, #102	; 0x66
 80137ee:	9311      	str	r3, [sp, #68]	; 0x44
 80137f0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80137f2:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 80137f6:	2b00      	cmp	r3, #0
 80137f8:	f000 80b7 	beq.w	801396a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x346>
 80137fc:	881a      	ldrh	r2, [r3, #0]
 80137fe:	f89d 302d 	ldrb.w	r3, [sp, #45]	; 0x2d
 8013802:	a80c      	add	r0, sp, #48	; 0x30
 8013804:	9005      	str	r0, [sp, #20]
 8013806:	f89d 0029 	ldrb.w	r0, [sp, #41]	; 0x29
 801380a:	9004      	str	r0, [sp, #16]
 801380c:	980d      	ldr	r0, [sp, #52]	; 0x34
 801380e:	9003      	str	r0, [sp, #12]
 8013810:	f89d 002c 	ldrb.w	r0, [sp, #44]	; 0x2c
 8013814:	9002      	str	r0, [sp, #8]
 8013816:	980e      	ldr	r0, [sp, #56]	; 0x38
 8013818:	9001      	str	r0, [sp, #4]
 801381a:	f89d 002b 	ldrb.w	r0, [sp, #43]	; 0x2b
 801381e:	9000      	str	r0, [sp, #0]
 8013820:	e9cd 9706 	strd	r9, r7, [sp, #24]
 8013824:	a80f      	add	r0, sp, #60	; 0x3c
 8013826:	f7ff fbe9 	bl	8012ffc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 801382a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801382c:	b10b      	cbz	r3, 8013832 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x20e>
 801382e:	3302      	adds	r3, #2
 8013830:	9309      	str	r3, [sp, #36]	; 0x24
 8013832:	9b08      	ldr	r3, [sp, #32]
 8013834:	2b00      	cmp	r3, #0
 8013836:	f43f af0c 	beq.w	8013652 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 801383a:	3301      	adds	r3, #1
 801383c:	9308      	str	r3, [sp, #32]
 801383e:	e708      	b.n	8013652 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 8013840:	eef4 7a67 	vcmp.f32	s15, s15
 8013844:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013848:	d60b      	bvs.n	8013862 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x23e>
 801384a:	980e      	ldr	r0, [sp, #56]	; 0x38
 801384c:	ed9f 7a24 	vldr	s14, [pc, #144]	; 80138e0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2bc>
 8013850:	2300      	movs	r3, #0
 8013852:	eeb2 6a04 	vmov.f32	s12, #36	; 0x41200000  10.0
 8013856:	4283      	cmp	r3, r0
 8013858:	da07      	bge.n	801386a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x246>
 801385a:	ee87 7a06 	vdiv.f32	s14, s14, s12
 801385e:	3301      	adds	r3, #1
 8013860:	e7f9      	b.n	8013856 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x232>
 8013862:	4b20      	ldr	r3, [pc, #128]	; (80138e4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c0>)
 8013864:	9310      	str	r3, [sp, #64]	; 0x40
 8013866:	236e      	movs	r3, #110	; 0x6e
 8013868:	e7c1      	b.n	80137ee <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1ca>
 801386a:	ee77 7a87 	vadd.f32	s15, s15, s14
 801386e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8013872:	eeb0 7a67 	vmov.f32	s14, s15
 8013876:	eeb4 7ac6 	vcmpe.f32	s14, s12
 801387a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801387e:	da27      	bge.n	80138d0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2ac>
 8013880:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8013882:	2100      	movs	r1, #0
 8013884:	eeb6 5a00 	vmov.f32	s10, #96	; 0x3f000000  0.5
 8013888:	eba9 0202 	sub.w	r2, r9, r2
 801388c:	eef4 6ac5 	vcmpe.f32	s13, s10
 8013890:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013894:	b28c      	uxth	r4, r1
 8013896:	db2a      	blt.n	80138ee <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2ca>
 8013898:	1a53      	subs	r3, r2, r1
 801389a:	2b00      	cmp	r3, #0
 801389c:	dd27      	ble.n	80138ee <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2ca>
 801389e:	2963      	cmp	r1, #99	; 0x63
 80138a0:	d024      	beq.n	80138ec <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c8>
 80138a2:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 80138a6:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 80138aa:	ee17 3a10 	vmov	r3, s14
 80138ae:	2b09      	cmp	r3, #9
 80138b0:	bfa8      	it	ge
 80138b2:	2309      	movge	r3, #9
 80138b4:	ee07 3a10 	vmov	s14, r3
 80138b8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80138bc:	f103 0430 	add.w	r4, r3, #48	; 0x30
 80138c0:	f828 4011 	strh.w	r4, [r8, r1, lsl #1]
 80138c4:	eee7 7a66 	vfms.f32	s15, s14, s13
 80138c8:	3101      	adds	r1, #1
 80138ca:	eec6 6a86 	vdiv.f32	s13, s13, s12
 80138ce:	e7dd      	b.n	801388c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x268>
 80138d0:	ee66 6a86 	vmul.f32	s13, s13, s12
 80138d4:	ee87 7a06 	vdiv.f32	s14, s14, s12
 80138d8:	e7cd      	b.n	8013876 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x252>
 80138da:	bf00      	nop
 80138dc:	7f7fffff 	.word	0x7f7fffff
 80138e0:	3f000002 	.word	0x3f000002
 80138e4:	0061006e 	.word	0x0061006e
 80138e8:	006e0069 	.word	0x006e0069
 80138ec:	460c      	mov	r4, r1
 80138ee:	2a63      	cmp	r2, #99	; 0x63
 80138f0:	bfd4      	ite	le
 80138f2:	ebc4 0202 	rsble	r2, r4, r2
 80138f6:	f1c4 0263 	rsbgt	r2, r4, #99	; 0x63
 80138fa:	2a00      	cmp	r2, #0
 80138fc:	dd30      	ble.n	8013960 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x33c>
 80138fe:	4603      	mov	r3, r0
 8013900:	2501      	movs	r5, #1
 8013902:	210a      	movs	r1, #10
 8013904:	2b00      	cmp	r3, #0
 8013906:	dd0d      	ble.n	8013924 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x300>
 8013908:	ee67 7a86 	vmul.f32	s15, s15, s12
 801390c:	3b01      	subs	r3, #1
 801390e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8013912:	ee17 ca10 	vmov	ip, s14
 8013916:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801391a:	fb01 c505 	mla	r5, r1, r5, ip
 801391e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8013922:	e7ef      	b.n	8013904 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e0>
 8013924:	2800      	cmp	r0, #0
 8013926:	f100 33ff 	add.w	r3, r0, #4294967295
 801392a:	bfac      	ite	ge
 801392c:	1a18      	subge	r0, r3, r0
 801392e:	4618      	movlt	r0, r3
 8013930:	0064      	lsls	r4, r4, #1
 8013932:	900e      	str	r0, [sp, #56]	; 0x38
 8013934:	230a      	movs	r3, #10
 8013936:	b292      	uxth	r2, r2
 8013938:	eb08 0104 	add.w	r1, r8, r4
 801393c:	4628      	mov	r0, r5
 801393e:	f7ff fb2b 	bl	8012f98 <_ZN8touchgfx7Unicode4itoaElPtti>
 8013942:	2d01      	cmp	r5, #1
 8013944:	dc0a      	bgt.n	801395c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x338>
 8013946:	f89d 302a 	ldrb.w	r3, [sp, #42]	; 0x2a
 801394a:	2b00      	cmp	r3, #0
 801394c:	bf0c      	ite	eq
 801394e:	2300      	moveq	r3, #0
 8013950:	232e      	movne	r3, #46	; 0x2e
 8013952:	aa42      	add	r2, sp, #264	; 0x108
 8013954:	4414      	add	r4, r2
 8013956:	f824 3cc8 	strh.w	r3, [r4, #-200]
 801395a:	e749      	b.n	80137f0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1cc>
 801395c:	232e      	movs	r3, #46	; 0x2e
 801395e:	e7f8      	b.n	8013952 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x32e>
 8013960:	ab42      	add	r3, sp, #264	; 0x108
 8013962:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 8013966:	2300      	movs	r3, #0
 8013968:	e7f5      	b.n	8013956 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x332>
 801396a:	9a08      	ldr	r2, [sp, #32]
 801396c:	2a00      	cmp	r2, #0
 801396e:	f43f af46 	beq.w	80137fe <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1da>
 8013972:	7812      	ldrb	r2, [r2, #0]
 8013974:	e743      	b.n	80137fe <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1da>
 8013976:	2c00      	cmp	r4, #0
 8013978:	f43f af00 	beq.w	801377c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x158>
 801397c:	7824      	ldrb	r4, [r4, #0]
 801397e:	e6fd      	b.n	801377c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x158>

08013980 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>:
 8013980:	b507      	push	{r0, r1, r2, lr}
 8013982:	9300      	str	r3, [sp, #0]
 8013984:	4613      	mov	r3, r2
 8013986:	2200      	movs	r2, #0
 8013988:	f7ff fe4c 	bl	8013624 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>
 801398c:	b003      	add	sp, #12
 801398e:	f85d fb04 	ldr.w	pc, [sp], #4
	...

08013994 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 8013994:	4b01      	ldr	r3, [pc, #4]	; (801399c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 8013996:	6018      	str	r0, [r3, #0]
 8013998:	4770      	bx	lr
 801399a:	bf00      	nop
 801399c:	200153c4 	.word	0x200153c4

080139a0 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 80139a0:	4b06      	ldr	r3, [pc, #24]	; (80139bc <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 80139a2:	881a      	ldrh	r2, [r3, #0]
 80139a4:	4282      	cmp	r2, r0
 80139a6:	d807      	bhi.n	80139b8 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 80139a8:	4b05      	ldr	r3, [pc, #20]	; (80139c0 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 80139aa:	881b      	ldrh	r3, [r3, #0]
 80139ac:	4413      	add	r3, r2
 80139ae:	4298      	cmp	r0, r3
 80139b0:	bfac      	ite	ge
 80139b2:	2000      	movge	r0, #0
 80139b4:	2001      	movlt	r0, #1
 80139b6:	4770      	bx	lr
 80139b8:	2000      	movs	r0, #0
 80139ba:	4770      	bx	lr
 80139bc:	200153e4 	.word	0x200153e4
 80139c0:	200153e8 	.word	0x200153e8

080139c4 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 80139c4:	b508      	push	{r3, lr}
 80139c6:	4601      	mov	r1, r0
 80139c8:	f7ff ffea 	bl	80139a0 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 80139cc:	b118      	cbz	r0, 80139d6 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 80139ce:	4b02      	ldr	r3, [pc, #8]	; (80139d8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 80139d0:	681b      	ldr	r3, [r3, #0]
 80139d2:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 80139d6:	bd08      	pop	{r3, pc}
 80139d8:	200153c8 	.word	0x200153c8

080139dc <_ZN8touchgfx6Bitmap10clearCacheEv>:
 80139dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80139de:	4c24      	ldr	r4, [pc, #144]	; (8013a70 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 80139e0:	6823      	ldr	r3, [r4, #0]
 80139e2:	2b00      	cmp	r3, #0
 80139e4:	d042      	beq.n	8013a6c <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 80139e6:	4a23      	ldr	r2, [pc, #140]	; (8013a74 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 80139e8:	4d23      	ldr	r5, [pc, #140]	; (8013a78 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 80139ea:	8811      	ldrh	r1, [r2, #0]
 80139ec:	f8b5 c000 	ldrh.w	ip, [r5]
 80139f0:	4822      	ldr	r0, [pc, #136]	; (8013a7c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 80139f2:	4461      	add	r1, ip
 80139f4:	1c4a      	adds	r2, r1, #1
 80139f6:	f022 0201 	bic.w	r2, r2, #1
 80139fa:	008f      	lsls	r7, r1, #2
 80139fc:	0412      	lsls	r2, r2, #16
 80139fe:	19de      	adds	r6, r3, r7
 8013a00:	0c12      	lsrs	r2, r2, #16
 8013a02:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 8013a06:	6006      	str	r6, [r0, #0]
 8013a08:	4e1d      	ldr	r6, [pc, #116]	; (8013a80 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 8013a0a:	19da      	adds	r2, r3, r7
 8013a0c:	6032      	str	r2, [r6, #0]
 8013a0e:	220e      	movs	r2, #14
 8013a10:	fb02 f20c 	mul.w	r2, r2, ip
 8013a14:	3203      	adds	r2, #3
 8013a16:	f022 0203 	bic.w	r2, r2, #3
 8013a1a:	443a      	add	r2, r7
 8013a1c:	4f19      	ldr	r7, [pc, #100]	; (8013a84 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 8013a1e:	4413      	add	r3, r2
 8013a20:	603b      	str	r3, [r7, #0]
 8013a22:	4f19      	ldr	r7, [pc, #100]	; (8013a88 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 8013a24:	2300      	movs	r3, #0
 8013a26:	803b      	strh	r3, [r7, #0]
 8013a28:	4f18      	ldr	r7, [pc, #96]	; (8013a8c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 8013a2a:	683f      	ldr	r7, [r7, #0]
 8013a2c:	1aba      	subs	r2, r7, r2
 8013a2e:	4f18      	ldr	r7, [pc, #96]	; (8013a90 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 8013a30:	603a      	str	r2, [r7, #0]
 8013a32:	4a18      	ldr	r2, [pc, #96]	; (8013a94 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 8013a34:	469c      	mov	ip, r3
 8013a36:	8013      	strh	r3, [r2, #0]
 8013a38:	f64f 77ff 	movw	r7, #65535	; 0xffff
 8013a3c:	428b      	cmp	r3, r1
 8013a3e:	d10d      	bne.n	8013a5c <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 8013a40:	882d      	ldrh	r5, [r5, #0]
 8013a42:	6830      	ldr	r0, [r6, #0]
 8013a44:	2300      	movs	r3, #0
 8013a46:	240e      	movs	r4, #14
 8013a48:	429d      	cmp	r5, r3
 8013a4a:	d90f      	bls.n	8013a6c <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8013a4c:	fb04 0203 	mla	r2, r4, r3, r0
 8013a50:	3301      	adds	r3, #1
 8013a52:	7b11      	ldrb	r1, [r2, #12]
 8013a54:	f36f 1145 	bfc	r1, #5, #1
 8013a58:	7311      	strb	r1, [r2, #12]
 8013a5a:	e7f5      	b.n	8013a48 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 8013a5c:	6822      	ldr	r2, [r4, #0]
 8013a5e:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 8013a62:	6802      	ldr	r2, [r0, #0]
 8013a64:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 8013a68:	3301      	adds	r3, #1
 8013a6a:	e7e7      	b.n	8013a3c <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 8013a6c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013a6e:	bf00      	nop
 8013a70:	200153c8 	.word	0x200153c8
 8013a74:	200153e4 	.word	0x200153e4
 8013a78:	200153e8 	.word	0x200153e8
 8013a7c:	200153dc 	.word	0x200153dc
 8013a80:	200153cc 	.word	0x200153cc
 8013a84:	200153d4 	.word	0x200153d4
 8013a88:	200153e6 	.word	0x200153e6
 8013a8c:	200153d0 	.word	0x200153d0
 8013a90:	200153e0 	.word	0x200153e0
 8013a94:	200153d8 	.word	0x200153d8

08013a98 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 8013a98:	4b06      	ldr	r3, [pc, #24]	; (8013ab4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 8013a9a:	681b      	ldr	r3, [r3, #0]
 8013a9c:	b943      	cbnz	r3, 8013ab0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8013a9e:	b139      	cbz	r1, 8013ab0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8013aa0:	4b05      	ldr	r3, [pc, #20]	; (8013ab8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 8013aa2:	801a      	strh	r2, [r3, #0]
 8013aa4:	4b05      	ldr	r3, [pc, #20]	; (8013abc <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 8013aa6:	6019      	str	r1, [r3, #0]
 8013aa8:	4b05      	ldr	r3, [pc, #20]	; (8013ac0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 8013aaa:	6018      	str	r0, [r3, #0]
 8013aac:	f7ff bf96 	b.w	80139dc <_ZN8touchgfx6Bitmap10clearCacheEv>
 8013ab0:	4770      	bx	lr
 8013ab2:	bf00      	nop
 8013ab4:	200153d4 	.word	0x200153d4
 8013ab8:	200153e8 	.word	0x200153e8
 8013abc:	200153d0 	.word	0x200153d0
 8013ac0:	200153c8 	.word	0x200153c8

08013ac4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 8013ac4:	b470      	push	{r4, r5, r6}
 8013ac6:	4c07      	ldr	r4, [pc, #28]	; (8013ae4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 8013ac8:	6826      	ldr	r6, [r4, #0]
 8013aca:	4605      	mov	r5, r0
 8013acc:	4610      	mov	r0, r2
 8013ace:	9a03      	ldr	r2, [sp, #12]
 8013ad0:	b936      	cbnz	r6, 8013ae0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 8013ad2:	6025      	str	r5, [r4, #0]
 8013ad4:	4c04      	ldr	r4, [pc, #16]	; (8013ae8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 8013ad6:	8021      	strh	r1, [r4, #0]
 8013ad8:	bc70      	pop	{r4, r5, r6}
 8013ada:	4619      	mov	r1, r3
 8013adc:	f7ff bfdc 	b.w	8013a98 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 8013ae0:	bc70      	pop	{r4, r5, r6}
 8013ae2:	4770      	bx	lr
 8013ae4:	200153ec 	.word	0x200153ec
 8013ae8:	200153e4 	.word	0x200153e4

08013aec <_ZNK8touchgfx6Bitmap8getWidthEv>:
 8013aec:	4a12      	ldr	r2, [pc, #72]	; (8013b38 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 8013aee:	8803      	ldrh	r3, [r0, #0]
 8013af0:	8812      	ldrh	r2, [r2, #0]
 8013af2:	4293      	cmp	r3, r2
 8013af4:	d207      	bcs.n	8013b06 <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 8013af6:	4a11      	ldr	r2, [pc, #68]	; (8013b3c <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 8013af8:	6812      	ldr	r2, [r2, #0]
 8013afa:	2114      	movs	r1, #20
 8013afc:	fb01 2303 	mla	r3, r1, r3, r2
 8013b00:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8013b04:	4770      	bx	lr
 8013b06:	490e      	ldr	r1, [pc, #56]	; (8013b40 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 8013b08:	8809      	ldrh	r1, [r1, #0]
 8013b0a:	4411      	add	r1, r2
 8013b0c:	428b      	cmp	r3, r1
 8013b0e:	da04      	bge.n	8013b1a <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 8013b10:	1a9b      	subs	r3, r3, r2
 8013b12:	4a0c      	ldr	r2, [pc, #48]	; (8013b44 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 8013b14:	210e      	movs	r1, #14
 8013b16:	6812      	ldr	r2, [r2, #0]
 8013b18:	e7f0      	b.n	8013afc <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 8013b1a:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8013b1e:	4293      	cmp	r3, r2
 8013b20:	d108      	bne.n	8013b34 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 8013b22:	4b09      	ldr	r3, [pc, #36]	; (8013b48 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 8013b24:	781b      	ldrb	r3, [r3, #0]
 8013b26:	b91b      	cbnz	r3, 8013b30 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 8013b28:	4b08      	ldr	r3, [pc, #32]	; (8013b4c <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 8013b2a:	f9b3 0000 	ldrsh.w	r0, [r3]
 8013b2e:	4770      	bx	lr
 8013b30:	4b07      	ldr	r3, [pc, #28]	; (8013b50 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 8013b32:	e7fa      	b.n	8013b2a <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 8013b34:	2000      	movs	r0, #0
 8013b36:	4770      	bx	lr
 8013b38:	200153e4 	.word	0x200153e4
 8013b3c:	200153ec 	.word	0x200153ec
 8013b40:	200153e8 	.word	0x200153e8
 8013b44:	200153cc 	.word	0x200153cc
 8013b48:	20015354 	.word	0x20015354
 8013b4c:	20015356 	.word	0x20015356
 8013b50:	20015358 	.word	0x20015358

08013b54 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 8013b54:	4a12      	ldr	r2, [pc, #72]	; (8013ba0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 8013b56:	8803      	ldrh	r3, [r0, #0]
 8013b58:	8812      	ldrh	r2, [r2, #0]
 8013b5a:	4293      	cmp	r3, r2
 8013b5c:	d207      	bcs.n	8013b6e <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 8013b5e:	4a11      	ldr	r2, [pc, #68]	; (8013ba4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 8013b60:	6812      	ldr	r2, [r2, #0]
 8013b62:	2114      	movs	r1, #20
 8013b64:	fb01 2303 	mla	r3, r1, r3, r2
 8013b68:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 8013b6c:	4770      	bx	lr
 8013b6e:	490e      	ldr	r1, [pc, #56]	; (8013ba8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 8013b70:	8809      	ldrh	r1, [r1, #0]
 8013b72:	4411      	add	r1, r2
 8013b74:	428b      	cmp	r3, r1
 8013b76:	da04      	bge.n	8013b82 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 8013b78:	1a9b      	subs	r3, r3, r2
 8013b7a:	4a0c      	ldr	r2, [pc, #48]	; (8013bac <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 8013b7c:	210e      	movs	r1, #14
 8013b7e:	6812      	ldr	r2, [r2, #0]
 8013b80:	e7f0      	b.n	8013b64 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 8013b82:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8013b86:	4293      	cmp	r3, r2
 8013b88:	d108      	bne.n	8013b9c <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 8013b8a:	4b09      	ldr	r3, [pc, #36]	; (8013bb0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 8013b8c:	781b      	ldrb	r3, [r3, #0]
 8013b8e:	b91b      	cbnz	r3, 8013b98 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 8013b90:	4b08      	ldr	r3, [pc, #32]	; (8013bb4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 8013b92:	f9b3 0000 	ldrsh.w	r0, [r3]
 8013b96:	4770      	bx	lr
 8013b98:	4b07      	ldr	r3, [pc, #28]	; (8013bb8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 8013b9a:	e7fa      	b.n	8013b92 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 8013b9c:	2000      	movs	r0, #0
 8013b9e:	4770      	bx	lr
 8013ba0:	200153e4 	.word	0x200153e4
 8013ba4:	200153ec 	.word	0x200153ec
 8013ba8:	200153e8 	.word	0x200153e8
 8013bac:	200153cc 	.word	0x200153cc
 8013bb0:	20015354 	.word	0x20015354
 8013bb4:	20015358 	.word	0x20015358
 8013bb8:	20015356 	.word	0x20015356

08013bbc <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 8013bbc:	b510      	push	{r4, lr}
 8013bbe:	4a1f      	ldr	r2, [pc, #124]	; (8013c3c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 8013bc0:	880b      	ldrh	r3, [r1, #0]
 8013bc2:	8812      	ldrh	r2, [r2, #0]
 8013bc4:	4293      	cmp	r3, r2
 8013bc6:	d213      	bcs.n	8013bf0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 8013bc8:	4a1d      	ldr	r2, [pc, #116]	; (8013c40 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 8013bca:	6812      	ldr	r2, [r2, #0]
 8013bcc:	2114      	movs	r1, #20
 8013bce:	fb01 2303 	mla	r3, r1, r3, r2
 8013bd2:	8a1a      	ldrh	r2, [r3, #16]
 8013bd4:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 8013bd8:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 8013bdc:	8a5b      	ldrh	r3, [r3, #18]
 8013bde:	8004      	strh	r4, [r0, #0]
 8013be0:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8013be4:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8013be8:	8041      	strh	r1, [r0, #2]
 8013bea:	8082      	strh	r2, [r0, #4]
 8013bec:	80c3      	strh	r3, [r0, #6]
 8013bee:	e00e      	b.n	8013c0e <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8013bf0:	4914      	ldr	r1, [pc, #80]	; (8013c44 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 8013bf2:	8809      	ldrh	r1, [r1, #0]
 8013bf4:	4411      	add	r1, r2
 8013bf6:	428b      	cmp	r3, r1
 8013bf8:	da0a      	bge.n	8013c10 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 8013bfa:	1a9b      	subs	r3, r3, r2
 8013bfc:	4a12      	ldr	r2, [pc, #72]	; (8013c48 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 8013bfe:	6812      	ldr	r2, [r2, #0]
 8013c00:	210e      	movs	r1, #14
 8013c02:	fb01 2303 	mla	r3, r1, r3, r2
 8013c06:	681a      	ldr	r2, [r3, #0]
 8013c08:	6002      	str	r2, [r0, #0]
 8013c0a:	685a      	ldr	r2, [r3, #4]
 8013c0c:	6042      	str	r2, [r0, #4]
 8013c0e:	bd10      	pop	{r4, pc}
 8013c10:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8013c14:	4293      	cmp	r3, r2
 8013c16:	d10b      	bne.n	8013c30 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 8013c18:	4b0c      	ldr	r3, [pc, #48]	; (8013c4c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 8013c1a:	f9b3 1000 	ldrsh.w	r1, [r3]
 8013c1e:	4b0c      	ldr	r3, [pc, #48]	; (8013c50 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 8013c20:	8081      	strh	r1, [r0, #4]
 8013c22:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013c26:	80c2      	strh	r2, [r0, #6]
 8013c28:	2300      	movs	r3, #0
 8013c2a:	8003      	strh	r3, [r0, #0]
 8013c2c:	8043      	strh	r3, [r0, #2]
 8013c2e:	e7ee      	b.n	8013c0e <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8013c30:	2300      	movs	r3, #0
 8013c32:	8003      	strh	r3, [r0, #0]
 8013c34:	8043      	strh	r3, [r0, #2]
 8013c36:	8083      	strh	r3, [r0, #4]
 8013c38:	e7d8      	b.n	8013bec <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 8013c3a:	bf00      	nop
 8013c3c:	200153e4 	.word	0x200153e4
 8013c40:	200153ec 	.word	0x200153ec
 8013c44:	200153e8 	.word	0x200153e8
 8013c48:	200153cc 	.word	0x200153cc
 8013c4c:	20015350 	.word	0x20015350
 8013c50:	20015352 	.word	0x20015352

08013c54 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 8013c54:	4a17      	ldr	r2, [pc, #92]	; (8013cb4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 8013c56:	8803      	ldrh	r3, [r0, #0]
 8013c58:	8812      	ldrh	r2, [r2, #0]
 8013c5a:	4293      	cmp	r3, r2
 8013c5c:	d213      	bcs.n	8013c86 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 8013c5e:	4a16      	ldr	r2, [pc, #88]	; (8013cb8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 8013c60:	6812      	ldr	r2, [r2, #0]
 8013c62:	2114      	movs	r1, #20
 8013c64:	fb01 2303 	mla	r3, r1, r3, r2
 8013c68:	8a1a      	ldrh	r2, [r3, #16]
 8013c6a:	8919      	ldrh	r1, [r3, #8]
 8013c6c:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8013c70:	428a      	cmp	r2, r1
 8013c72:	db1d      	blt.n	8013cb0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8013c74:	8a58      	ldrh	r0, [r3, #18]
 8013c76:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8013c7a:	895b      	ldrh	r3, [r3, #10]
 8013c7c:	4298      	cmp	r0, r3
 8013c7e:	bfac      	ite	ge
 8013c80:	2000      	movge	r0, #0
 8013c82:	2001      	movlt	r0, #1
 8013c84:	4770      	bx	lr
 8013c86:	490d      	ldr	r1, [pc, #52]	; (8013cbc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 8013c88:	8809      	ldrh	r1, [r1, #0]
 8013c8a:	4411      	add	r1, r2
 8013c8c:	428b      	cmp	r3, r1
 8013c8e:	da0d      	bge.n	8013cac <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 8013c90:	1a9b      	subs	r3, r3, r2
 8013c92:	4a0b      	ldr	r2, [pc, #44]	; (8013cc0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 8013c94:	6812      	ldr	r2, [r2, #0]
 8013c96:	210e      	movs	r1, #14
 8013c98:	fb01 2303 	mla	r3, r1, r3, r2
 8013c9c:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8013ca0:	891a      	ldrh	r2, [r3, #8]
 8013ca2:	4291      	cmp	r1, r2
 8013ca4:	db04      	blt.n	8013cb0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8013ca6:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 8013caa:	e7e6      	b.n	8013c7a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 8013cac:	2000      	movs	r0, #0
 8013cae:	4770      	bx	lr
 8013cb0:	2001      	movs	r0, #1
 8013cb2:	4770      	bx	lr
 8013cb4:	200153e4 	.word	0x200153e4
 8013cb8:	200153ec 	.word	0x200153ec
 8013cbc:	200153e8 	.word	0x200153e8
 8013cc0:	200153cc 	.word	0x200153cc

08013cc4 <_ZNK8touchgfx6Bitmap7getDataEv>:
 8013cc4:	4a12      	ldr	r2, [pc, #72]	; (8013d10 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 8013cc6:	8803      	ldrh	r3, [r0, #0]
 8013cc8:	8811      	ldrh	r1, [r2, #0]
 8013cca:	428b      	cmp	r3, r1
 8013ccc:	d20b      	bcs.n	8013ce6 <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 8013cce:	4a11      	ldr	r2, [pc, #68]	; (8013d14 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8013cd0:	6812      	ldr	r2, [r2, #0]
 8013cd2:	b112      	cbz	r2, 8013cda <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 8013cd4:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8013cd8:	b9c0      	cbnz	r0, 8013d0c <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 8013cda:	4a0f      	ldr	r2, [pc, #60]	; (8013d18 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 8013cdc:	6811      	ldr	r1, [r2, #0]
 8013cde:	2214      	movs	r2, #20
 8013ce0:	4353      	muls	r3, r2
 8013ce2:	58c8      	ldr	r0, [r1, r3]
 8013ce4:	4770      	bx	lr
 8013ce6:	4a0d      	ldr	r2, [pc, #52]	; (8013d1c <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 8013ce8:	8812      	ldrh	r2, [r2, #0]
 8013cea:	440a      	add	r2, r1
 8013cec:	4293      	cmp	r3, r2
 8013cee:	da04      	bge.n	8013cfa <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 8013cf0:	4a08      	ldr	r2, [pc, #32]	; (8013d14 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8013cf2:	6812      	ldr	r2, [r2, #0]
 8013cf4:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8013cf8:	4770      	bx	lr
 8013cfa:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8013cfe:	4293      	cmp	r3, r2
 8013d00:	d103      	bne.n	8013d0a <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 8013d02:	4b07      	ldr	r3, [pc, #28]	; (8013d20 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 8013d04:	681b      	ldr	r3, [r3, #0]
 8013d06:	6c58      	ldr	r0, [r3, #68]	; 0x44
 8013d08:	4770      	bx	lr
 8013d0a:	2000      	movs	r0, #0
 8013d0c:	4770      	bx	lr
 8013d0e:	bf00      	nop
 8013d10:	200153e4 	.word	0x200153e4
 8013d14:	200153c8 	.word	0x200153c8
 8013d18:	200153ec 	.word	0x200153ec
 8013d1c:	200153e8 	.word	0x200153e8
 8013d20:	2001535c 	.word	0x2001535c

08013d24 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 8013d24:	4b24      	ldr	r3, [pc, #144]	; (8013db8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 8013d26:	8802      	ldrh	r2, [r0, #0]
 8013d28:	8818      	ldrh	r0, [r3, #0]
 8013d2a:	4282      	cmp	r2, r0
 8013d2c:	d221      	bcs.n	8013d72 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 8013d2e:	4b23      	ldr	r3, [pc, #140]	; (8013dbc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 8013d30:	6819      	ldr	r1, [r3, #0]
 8013d32:	2314      	movs	r3, #20
 8013d34:	fb03 1302 	mla	r3, r3, r2, r1
 8013d38:	6858      	ldr	r0, [r3, #4]
 8013d3a:	2800      	cmp	r0, #0
 8013d3c:	d03a      	beq.n	8013db4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8013d3e:	4920      	ldr	r1, [pc, #128]	; (8013dc0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8013d40:	6809      	ldr	r1, [r1, #0]
 8013d42:	2900      	cmp	r1, #0
 8013d44:	d036      	beq.n	8013db4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8013d46:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 8013d4a:	2900      	cmp	r1, #0
 8013d4c:	d032      	beq.n	8013db4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8013d4e:	891a      	ldrh	r2, [r3, #8]
 8013d50:	8958      	ldrh	r0, [r3, #10]
 8013d52:	4350      	muls	r0, r2
 8013d54:	7c5a      	ldrb	r2, [r3, #17]
 8013d56:	7cdb      	ldrb	r3, [r3, #19]
 8013d58:	0952      	lsrs	r2, r2, #5
 8013d5a:	f3c3 1342 	ubfx	r3, r3, #5, #3
 8013d5e:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8013d62:	2b0b      	cmp	r3, #11
 8013d64:	bf18      	it	ne
 8013d66:	0040      	lslne	r0, r0, #1
 8013d68:	3003      	adds	r0, #3
 8013d6a:	f020 0003 	bic.w	r0, r0, #3
 8013d6e:	4408      	add	r0, r1
 8013d70:	4770      	bx	lr
 8013d72:	4b14      	ldr	r3, [pc, #80]	; (8013dc4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8013d74:	881b      	ldrh	r3, [r3, #0]
 8013d76:	4403      	add	r3, r0
 8013d78:	429a      	cmp	r2, r3
 8013d7a:	da1a      	bge.n	8013db2 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8013d7c:	4b12      	ldr	r3, [pc, #72]	; (8013dc8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 8013d7e:	681b      	ldr	r3, [r3, #0]
 8013d80:	1a10      	subs	r0, r2, r0
 8013d82:	210e      	movs	r1, #14
 8013d84:	fb01 3000 	mla	r0, r1, r0, r3
 8013d88:	7b03      	ldrb	r3, [r0, #12]
 8013d8a:	f003 031f 	and.w	r3, r3, #31
 8013d8e:	2b0b      	cmp	r3, #11
 8013d90:	d10b      	bne.n	8013daa <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 8013d92:	8903      	ldrh	r3, [r0, #8]
 8013d94:	8940      	ldrh	r0, [r0, #10]
 8013d96:	4358      	muls	r0, r3
 8013d98:	4b09      	ldr	r3, [pc, #36]	; (8013dc0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8013d9a:	6819      	ldr	r1, [r3, #0]
 8013d9c:	3003      	adds	r0, #3
 8013d9e:	f020 0303 	bic.w	r3, r0, #3
 8013da2:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 8013da6:	4418      	add	r0, r3
 8013da8:	4770      	bx	lr
 8013daa:	2b0d      	cmp	r3, #13
 8013dac:	d101      	bne.n	8013db2 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8013dae:	300d      	adds	r0, #13
 8013db0:	4770      	bx	lr
 8013db2:	2000      	movs	r0, #0
 8013db4:	4770      	bx	lr
 8013db6:	bf00      	nop
 8013db8:	200153e4 	.word	0x200153e4
 8013dbc:	200153ec 	.word	0x200153ec
 8013dc0:	200153c8 	.word	0x200153c8
 8013dc4:	200153e8 	.word	0x200153e8
 8013dc8:	200153cc 	.word	0x200153cc

08013dcc <_ZNK8touchgfx6Bitmap9getFormatEv>:
 8013dcc:	b510      	push	{r4, lr}
 8013dce:	4a17      	ldr	r2, [pc, #92]	; (8013e2c <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 8013dd0:	8803      	ldrh	r3, [r0, #0]
 8013dd2:	8812      	ldrh	r2, [r2, #0]
 8013dd4:	4293      	cmp	r3, r2
 8013dd6:	d20c      	bcs.n	8013df2 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 8013dd8:	4a15      	ldr	r2, [pc, #84]	; (8013e30 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 8013dda:	6812      	ldr	r2, [r2, #0]
 8013ddc:	2114      	movs	r1, #20
 8013dde:	fb01 2303 	mla	r3, r1, r3, r2
 8013de2:	7c58      	ldrb	r0, [r3, #17]
 8013de4:	0942      	lsrs	r2, r0, #5
 8013de6:	7cd8      	ldrb	r0, [r3, #19]
 8013de8:	f3c0 1042 	ubfx	r0, r0, #5, #3
 8013dec:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 8013df0:	bd10      	pop	{r4, pc}
 8013df2:	4910      	ldr	r1, [pc, #64]	; (8013e34 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 8013df4:	8809      	ldrh	r1, [r1, #0]
 8013df6:	4411      	add	r1, r2
 8013df8:	428b      	cmp	r3, r1
 8013dfa:	da09      	bge.n	8013e10 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 8013dfc:	1a9b      	subs	r3, r3, r2
 8013dfe:	4a0e      	ldr	r2, [pc, #56]	; (8013e38 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 8013e00:	6812      	ldr	r2, [r2, #0]
 8013e02:	210e      	movs	r1, #14
 8013e04:	fb01 2303 	mla	r3, r1, r3, r2
 8013e08:	7b18      	ldrb	r0, [r3, #12]
 8013e0a:	f000 001f 	and.w	r0, r0, #31
 8013e0e:	e7ef      	b.n	8013df0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 8013e10:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8013e14:	4293      	cmp	r3, r2
 8013e16:	d106      	bne.n	8013e26 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 8013e18:	f7ee faec 	bl	80023f4 <_ZN8touchgfx3HAL3lcdEv>
 8013e1c:	6803      	ldr	r3, [r0, #0]
 8013e1e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013e22:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013e24:	4718      	bx	r3
 8013e26:	2000      	movs	r0, #0
 8013e28:	e7e2      	b.n	8013df0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 8013e2a:	bf00      	nop
 8013e2c:	200153e4 	.word	0x200153e4
 8013e30:	200153ec 	.word	0x200153ec
 8013e34:	200153e8 	.word	0x200153e8
 8013e38:	200153cc 	.word	0x200153cc

08013e3c <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 8013e3c:	2010      	movs	r0, #16
 8013e3e:	4770      	bx	lr

08013e40 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 8013e40:	2000      	movs	r0, #0
 8013e42:	4770      	bx	lr

08013e44 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8013e44:	4b02      	ldr	r3, [pc, #8]	; (8013e50 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 8013e46:	8818      	ldrh	r0, [r3, #0]
 8013e48:	0040      	lsls	r0, r0, #1
 8013e4a:	b280      	uxth	r0, r0
 8013e4c:	4770      	bx	lr
 8013e4e:	bf00      	nop
 8013e50:	20015356 	.word	0x20015356

08013e54 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8013e54:	2bff      	cmp	r3, #255	; 0xff
 8013e56:	d050      	beq.n	8013efa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 8013e58:	2a0b      	cmp	r2, #11
 8013e5a:	d04a      	beq.n	8013ef2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8013e5c:	d80e      	bhi.n	8013e7c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 8013e5e:	2a03      	cmp	r2, #3
 8013e60:	d03f      	beq.n	8013ee2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 8013e62:	d804      	bhi.n	8013e6e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8013e64:	2a01      	cmp	r2, #1
 8013e66:	d03e      	beq.n	8013ee6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 8013e68:	d93f      	bls.n	8013eea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 8013e6a:	6b80      	ldr	r0, [r0, #56]	; 0x38
 8013e6c:	4770      	bx	lr
 8013e6e:	2a09      	cmp	r2, #9
 8013e70:	d03f      	beq.n	8013ef2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8013e72:	d83c      	bhi.n	8013eee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8013e74:	2a08      	cmp	r2, #8
 8013e76:	d03a      	beq.n	8013eee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8013e78:	2000      	movs	r0, #0
 8013e7a:	4770      	bx	lr
 8013e7c:	2a2f      	cmp	r2, #47	; 0x2f
 8013e7e:	d024      	beq.n	8013eca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 8013e80:	d80d      	bhi.n	8013e9e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 8013e82:	2a2d      	cmp	r2, #45	; 0x2d
 8013e84:	d014      	beq.n	8013eb0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 8013e86:	d826      	bhi.n	8013ed6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 8013e88:	2a2c      	cmp	r2, #44	; 0x2c
 8013e8a:	d1f5      	bne.n	8013e78 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013e8c:	684b      	ldr	r3, [r1, #4]
 8013e8e:	781b      	ldrb	r3, [r3, #0]
 8013e90:	2b01      	cmp	r3, #1
 8013e92:	d018      	beq.n	8013ec6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 8013e94:	d323      	bcc.n	8013ede <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 8013e96:	2b02      	cmp	r3, #2
 8013e98:	d1ee      	bne.n	8013e78 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013e9a:	6880      	ldr	r0, [r0, #8]
 8013e9c:	4770      	bx	lr
 8013e9e:	2a31      	cmp	r2, #49	; 0x31
 8013ea0:	d004      	beq.n	8013eac <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 8013ea2:	d328      	bcc.n	8013ef6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8013ea4:	2a32      	cmp	r2, #50	; 0x32
 8013ea6:	d026      	beq.n	8013ef6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8013ea8:	2a33      	cmp	r2, #51	; 0x33
 8013eaa:	d1e5      	bne.n	8013e78 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013eac:	6f00      	ldr	r0, [r0, #112]	; 0x70
 8013eae:	4770      	bx	lr
 8013eb0:	684b      	ldr	r3, [r1, #4]
 8013eb2:	781b      	ldrb	r3, [r3, #0]
 8013eb4:	2b01      	cmp	r3, #1
 8013eb6:	d004      	beq.n	8013ec2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 8013eb8:	d30b      	bcc.n	8013ed2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8013eba:	2b02      	cmp	r3, #2
 8013ebc:	d1dc      	bne.n	8013e78 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013ebe:	6900      	ldr	r0, [r0, #16]
 8013ec0:	4770      	bx	lr
 8013ec2:	6a00      	ldr	r0, [r0, #32]
 8013ec4:	4770      	bx	lr
 8013ec6:	6980      	ldr	r0, [r0, #24]
 8013ec8:	4770      	bx	lr
 8013eca:	684b      	ldr	r3, [r1, #4]
 8013ecc:	781b      	ldrb	r3, [r3, #0]
 8013ece:	2b00      	cmp	r3, #0
 8013ed0:	d1d2      	bne.n	8013e78 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013ed2:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8013ed4:	4770      	bx	lr
 8013ed6:	684b      	ldr	r3, [r1, #4]
 8013ed8:	781b      	ldrb	r3, [r3, #0]
 8013eda:	2b00      	cmp	r3, #0
 8013edc:	d1cc      	bne.n	8013e78 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013ede:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8013ee0:	4770      	bx	lr
 8013ee2:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8013ee4:	4770      	bx	lr
 8013ee6:	6d00      	ldr	r0, [r0, #80]	; 0x50
 8013ee8:	4770      	bx	lr
 8013eea:	6c00      	ldr	r0, [r0, #64]	; 0x40
 8013eec:	4770      	bx	lr
 8013eee:	6d80      	ldr	r0, [r0, #88]	; 0x58
 8013ef0:	4770      	bx	lr
 8013ef2:	6e00      	ldr	r0, [r0, #96]	; 0x60
 8013ef4:	4770      	bx	lr
 8013ef6:	6e80      	ldr	r0, [r0, #104]	; 0x68
 8013ef8:	4770      	bx	lr
 8013efa:	2a0b      	cmp	r2, #11
 8013efc:	d049      	beq.n	8013f92 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8013efe:	d80e      	bhi.n	8013f1e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 8013f00:	2a03      	cmp	r2, #3
 8013f02:	d040      	beq.n	8013f86 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 8013f04:	d804      	bhi.n	8013f10 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 8013f06:	2a01      	cmp	r2, #1
 8013f08:	d03f      	beq.n	8013f8a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 8013f0a:	d940      	bls.n	8013f8e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 8013f0c:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8013f0e:	4770      	bx	lr
 8013f10:	2a09      	cmp	r2, #9
 8013f12:	d03e      	beq.n	8013f92 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8013f14:	d801      	bhi.n	8013f1a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 8013f16:	2a08      	cmp	r2, #8
 8013f18:	d1ae      	bne.n	8013e78 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013f1a:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 8013f1c:	4770      	bx	lr
 8013f1e:	2a2f      	cmp	r2, #47	; 0x2f
 8013f20:	d024      	beq.n	8013f6c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 8013f22:	d80d      	bhi.n	8013f40 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 8013f24:	2a2d      	cmp	r2, #45	; 0x2d
 8013f26:	d014      	beq.n	8013f52 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 8013f28:	d826      	bhi.n	8013f78 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 8013f2a:	2a2c      	cmp	r2, #44	; 0x2c
 8013f2c:	d1a4      	bne.n	8013e78 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013f2e:	684b      	ldr	r3, [r1, #4]
 8013f30:	781b      	ldrb	r3, [r3, #0]
 8013f32:	2b01      	cmp	r3, #1
 8013f34:	d018      	beq.n	8013f68 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 8013f36:	d324      	bcc.n	8013f82 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 8013f38:	2b02      	cmp	r3, #2
 8013f3a:	d19d      	bne.n	8013e78 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013f3c:	68c0      	ldr	r0, [r0, #12]
 8013f3e:	4770      	bx	lr
 8013f40:	2a31      	cmp	r2, #49	; 0x31
 8013f42:	d004      	beq.n	8013f4e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 8013f44:	d327      	bcc.n	8013f96 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8013f46:	2a32      	cmp	r2, #50	; 0x32
 8013f48:	d025      	beq.n	8013f96 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8013f4a:	2a33      	cmp	r2, #51	; 0x33
 8013f4c:	d194      	bne.n	8013e78 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013f4e:	6f40      	ldr	r0, [r0, #116]	; 0x74
 8013f50:	4770      	bx	lr
 8013f52:	684b      	ldr	r3, [r1, #4]
 8013f54:	781b      	ldrb	r3, [r3, #0]
 8013f56:	2b01      	cmp	r3, #1
 8013f58:	d004      	beq.n	8013f64 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 8013f5a:	d30b      	bcc.n	8013f74 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 8013f5c:	2b02      	cmp	r3, #2
 8013f5e:	d18b      	bne.n	8013e78 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013f60:	6940      	ldr	r0, [r0, #20]
 8013f62:	4770      	bx	lr
 8013f64:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8013f66:	4770      	bx	lr
 8013f68:	69c0      	ldr	r0, [r0, #28]
 8013f6a:	4770      	bx	lr
 8013f6c:	684b      	ldr	r3, [r1, #4]
 8013f6e:	781b      	ldrb	r3, [r3, #0]
 8013f70:	2b00      	cmp	r3, #0
 8013f72:	d181      	bne.n	8013e78 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013f74:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8013f76:	4770      	bx	lr
 8013f78:	684b      	ldr	r3, [r1, #4]
 8013f7a:	781b      	ldrb	r3, [r3, #0]
 8013f7c:	2b00      	cmp	r3, #0
 8013f7e:	f47f af7b 	bne.w	8013e78 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013f82:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 8013f84:	4770      	bx	lr
 8013f86:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8013f88:	4770      	bx	lr
 8013f8a:	6d40      	ldr	r0, [r0, #84]	; 0x54
 8013f8c:	4770      	bx	lr
 8013f8e:	6c40      	ldr	r0, [r0, #68]	; 0x44
 8013f90:	4770      	bx	lr
 8013f92:	6e40      	ldr	r0, [r0, #100]	; 0x64
 8013f94:	4770      	bx	lr
 8013f96:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 8013f98:	4770      	bx	lr

08013f9a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013f9a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013f9e:	b087      	sub	sp, #28
 8013fa0:	9815      	ldr	r0, [sp, #84]	; 0x54
 8013fa2:	9205      	str	r2, [sp, #20]
 8013fa4:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8013fa8:	9202      	str	r2, [sp, #8]
 8013faa:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8013fae:	9101      	str	r1, [sp, #4]
 8013fb0:	6841      	ldr	r1, [r0, #4]
 8013fb2:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8013fb6:	fb01 2404 	mla	r4, r1, r4, r2
 8013fba:	6802      	ldr	r2, [r0, #0]
 8013fbc:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8013fc0:	f8de 2000 	ldr.w	r2, [lr]
 8013fc4:	9203      	str	r2, [sp, #12]
 8013fc6:	f8de 2004 	ldr.w	r2, [lr, #4]
 8013fca:	3204      	adds	r2, #4
 8013fcc:	9204      	str	r2, [sp, #16]
 8013fce:	9a02      	ldr	r2, [sp, #8]
 8013fd0:	43d6      	mvns	r6, r2
 8013fd2:	b2f6      	uxtb	r6, r6
 8013fd4:	9a01      	ldr	r2, [sp, #4]
 8013fd6:	2a00      	cmp	r2, #0
 8013fd8:	dc03      	bgt.n	8013fe2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8013fda:	9a05      	ldr	r2, [sp, #20]
 8013fdc:	2a00      	cmp	r2, #0
 8013fde:	f340 8129 	ble.w	8014234 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8013fe2:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8013fe4:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8013fe8:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8013fec:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8013ff0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8013ff2:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8013ff6:	2b00      	cmp	r3, #0
 8013ff8:	dd0e      	ble.n	8014018 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8013ffa:	1408      	asrs	r0, r1, #16
 8013ffc:	d405      	bmi.n	801400a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8013ffe:	4560      	cmp	r0, ip
 8014000:	da03      	bge.n	801400a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8014002:	1410      	asrs	r0, r2, #16
 8014004:	d401      	bmi.n	801400a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8014006:	42b8      	cmp	r0, r7
 8014008:	db07      	blt.n	801401a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801400a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801400c:	4401      	add	r1, r0
 801400e:	9814      	ldr	r0, [sp, #80]	; 0x50
 8014010:	3b01      	subs	r3, #1
 8014012:	4402      	add	r2, r0
 8014014:	3402      	adds	r4, #2
 8014016:	e7ee      	b.n	8013ff6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8014018:	d071      	beq.n	80140fe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801401a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801401c:	1e58      	subs	r0, r3, #1
 801401e:	fb05 1500 	mla	r5, r5, r0, r1
 8014022:	142d      	asrs	r5, r5, #16
 8014024:	d45f      	bmi.n	80140e6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8014026:	4565      	cmp	r5, ip
 8014028:	da5d      	bge.n	80140e6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801402a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801402c:	fb05 2000 	mla	r0, r5, r0, r2
 8014030:	1400      	asrs	r0, r0, #16
 8014032:	d458      	bmi.n	80140e6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8014034:	42b8      	cmp	r0, r7
 8014036:	da56      	bge.n	80140e6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8014038:	f8bd b008 	ldrh.w	fp, [sp, #8]
 801403c:	4699      	mov	r9, r3
 801403e:	46a2      	mov	sl, r4
 8014040:	f1b9 0f00 	cmp.w	r9, #0
 8014044:	dd57      	ble.n	80140f6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 8014046:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801404a:	9803      	ldr	r0, [sp, #12]
 801404c:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8014050:	140d      	asrs	r5, r1, #16
 8014052:	fb07 000c 	mla	r0, r7, ip, r0
 8014056:	f109 39ff 	add.w	r9, r9, #4294967295
 801405a:	5d40      	ldrb	r0, [r0, r5]
 801405c:	9d04      	ldr	r5, [sp, #16]
 801405e:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8014062:	f8ba 5000 	ldrh.w	r5, [sl]
 8014066:	122f      	asrs	r7, r5, #8
 8014068:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801406c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8014070:	fb17 f706 	smulbb	r7, r7, r6
 8014074:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8014078:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801407c:	00ed      	lsls	r5, r5, #3
 801407e:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8014082:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8014086:	10c7      	asrs	r7, r0, #3
 8014088:	b2ed      	uxtb	r5, r5
 801408a:	00c0      	lsls	r0, r0, #3
 801408c:	fb18 f806 	smulbb	r8, r8, r6
 8014090:	fb15 f506 	smulbb	r5, r5, r6
 8014094:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8014098:	b2c0      	uxtb	r0, r0
 801409a:	fa1f fc8c 	uxth.w	ip, ip
 801409e:	fb07 870b 	mla	r7, r7, fp, r8
 80140a2:	fb00 500b 	mla	r0, r0, fp, r5
 80140a6:	b280      	uxth	r0, r0
 80140a8:	b2bf      	uxth	r7, r7
 80140aa:	f10c 0501 	add.w	r5, ip, #1
 80140ae:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80140b2:	f107 0801 	add.w	r8, r7, #1
 80140b6:	1c45      	adds	r5, r0, #1
 80140b8:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80140bc:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 80140c0:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80140c2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80140c6:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80140ca:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80140ce:	ea45 0c0c 	orr.w	ip, r5, ip
 80140d2:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80140d6:	4401      	add	r1, r0
 80140d8:	9814      	ldr	r0, [sp, #80]	; 0x50
 80140da:	ea4c 0c08 	orr.w	ip, ip, r8
 80140de:	f82a cb02 	strh.w	ip, [sl], #2
 80140e2:	4402      	add	r2, r0
 80140e4:	e7ac      	b.n	8014040 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80140e6:	f8bd a008 	ldrh.w	sl, [sp, #8]
 80140ea:	f04f 0800 	mov.w	r8, #0
 80140ee:	eb03 0008 	add.w	r0, r3, r8
 80140f2:	2800      	cmp	r0, #0
 80140f4:	dc41      	bgt.n	801417a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 80140f6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80140fa:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80140fe:	9b01      	ldr	r3, [sp, #4]
 8014100:	2b00      	cmp	r3, #0
 8014102:	f340 8097 	ble.w	8014234 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8014106:	ee30 0a04 	vadd.f32	s0, s0, s8
 801410a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801410e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8014112:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014114:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014118:	ee31 1a05 	vadd.f32	s2, s2, s10
 801411c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014120:	eef0 6a62 	vmov.f32	s13, s5
 8014124:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014128:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801412c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014130:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8014134:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014138:	eef0 6a43 	vmov.f32	s13, s6
 801413c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014140:	ee12 2a90 	vmov	r2, s5
 8014144:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014148:	fb92 f3f3 	sdiv	r3, r2, r3
 801414c:	ee13 2a10 	vmov	r2, s6
 8014150:	9313      	str	r3, [sp, #76]	; 0x4c
 8014152:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014154:	fb92 f3f3 	sdiv	r3, r2, r3
 8014158:	9314      	str	r3, [sp, #80]	; 0x50
 801415a:	9b01      	ldr	r3, [sp, #4]
 801415c:	9a05      	ldr	r2, [sp, #20]
 801415e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014162:	3b01      	subs	r3, #1
 8014164:	9301      	str	r3, [sp, #4]
 8014166:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801416a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801416c:	eeb0 3a67 	vmov.f32	s6, s15
 8014170:	bf08      	it	eq
 8014172:	4613      	moveq	r3, r2
 8014174:	eef0 2a47 	vmov.f32	s5, s14
 8014178:	e72c      	b.n	8013fd4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801417a:	140f      	asrs	r7, r1, #16
 801417c:	d453      	bmi.n	8014226 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801417e:	f8de 5008 	ldr.w	r5, [lr, #8]
 8014182:	42bd      	cmp	r5, r7
 8014184:	dd4f      	ble.n	8014226 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8014186:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801418a:	d44c      	bmi.n	8014226 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801418c:	f8de 000c 	ldr.w	r0, [lr, #12]
 8014190:	4560      	cmp	r0, ip
 8014192:	dd48      	ble.n	8014226 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8014194:	9803      	ldr	r0, [sp, #12]
 8014196:	b22d      	sxth	r5, r5
 8014198:	fb0c 0505 	mla	r5, ip, r5, r0
 801419c:	5de8      	ldrb	r0, [r5, r7]
 801419e:	9d04      	ldr	r5, [sp, #16]
 80141a0:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 80141a4:	f06f 0501 	mvn.w	r5, #1
 80141a8:	fb05 fb08 	mul.w	fp, r5, r8
 80141ac:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80141b0:	f834 500b 	ldrh.w	r5, [r4, fp]
 80141b4:	122f      	asrs	r7, r5, #8
 80141b6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80141ba:	fb17 f706 	smulbb	r7, r7, r6
 80141be:	ea4f 09e5 	mov.w	r9, r5, asr #3
 80141c2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80141c6:	00ed      	lsls	r5, r5, #3
 80141c8:	fb0c 7c0a 	mla	ip, ip, sl, r7
 80141cc:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 80141d0:	10c7      	asrs	r7, r0, #3
 80141d2:	b2ed      	uxtb	r5, r5
 80141d4:	00c0      	lsls	r0, r0, #3
 80141d6:	fb19 f906 	smulbb	r9, r9, r6
 80141da:	fb15 f506 	smulbb	r5, r5, r6
 80141de:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80141e2:	b2c0      	uxtb	r0, r0
 80141e4:	fa1f fc8c 	uxth.w	ip, ip
 80141e8:	fb07 970a 	mla	r7, r7, sl, r9
 80141ec:	fb00 500a 	mla	r0, r0, sl, r5
 80141f0:	b2bf      	uxth	r7, r7
 80141f2:	b280      	uxth	r0, r0
 80141f4:	f10c 0501 	add.w	r5, ip, #1
 80141f8:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80141fc:	f107 0901 	add.w	r9, r7, #1
 8014200:	1c45      	adds	r5, r0, #1
 8014202:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8014206:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801420a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801420e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8014212:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8014216:	ea45 0c0c 	orr.w	ip, r5, ip
 801421a:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801421e:	ea4c 0c09 	orr.w	ip, ip, r9
 8014222:	f824 c00b 	strh.w	ip, [r4, fp]
 8014226:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8014228:	4401      	add	r1, r0
 801422a:	9814      	ldr	r0, [sp, #80]	; 0x50
 801422c:	f108 38ff 	add.w	r8, r8, #4294967295
 8014230:	4402      	add	r2, r0
 8014232:	e75c      	b.n	80140ee <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8014234:	b007      	add	sp, #28
 8014236:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801423a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801423a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801423e:	b085      	sub	sp, #20
 8014240:	4693      	mov	fp, r2
 8014242:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8014244:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8014246:	6870      	ldr	r0, [r6, #4]
 8014248:	9100      	str	r1, [sp, #0]
 801424a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801424e:	fb00 2404 	mla	r4, r0, r4, r2
 8014252:	6832      	ldr	r2, [r6, #0]
 8014254:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014258:	682a      	ldr	r2, [r5, #0]
 801425a:	9201      	str	r2, [sp, #4]
 801425c:	686a      	ldr	r2, [r5, #4]
 801425e:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8014262:	3204      	adds	r2, #4
 8014264:	9202      	str	r2, [sp, #8]
 8014266:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801426a:	9a00      	ldr	r2, [sp, #0]
 801426c:	2a00      	cmp	r2, #0
 801426e:	dc03      	bgt.n	8014278 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8014270:	f1bb 0f00 	cmp.w	fp, #0
 8014274:	f340 80a0 	ble.w	80143b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8014278:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801427a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801427e:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8014282:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8014286:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8014288:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801428c:	2b00      	cmp	r3, #0
 801428e:	dd0c      	ble.n	80142aa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8014290:	1406      	asrs	r6, r0, #16
 8014292:	d405      	bmi.n	80142a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014294:	454e      	cmp	r6, r9
 8014296:	da03      	bge.n	80142a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014298:	1416      	asrs	r6, r2, #16
 801429a:	d401      	bmi.n	80142a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801429c:	4546      	cmp	r6, r8
 801429e:	db05      	blt.n	80142ac <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80142a0:	4470      	add	r0, lr
 80142a2:	4462      	add	r2, ip
 80142a4:	3b01      	subs	r3, #1
 80142a6:	3402      	adds	r4, #2
 80142a8:	e7f0      	b.n	801428c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80142aa:	d00f      	beq.n	80142cc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80142ac:	1e5e      	subs	r6, r3, #1
 80142ae:	fb0e 0706 	mla	r7, lr, r6, r0
 80142b2:	143f      	asrs	r7, r7, #16
 80142b4:	d541      	bpl.n	801433a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 80142b6:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 80142ba:	4698      	mov	r8, r3
 80142bc:	9603      	str	r6, [sp, #12]
 80142be:	f1b8 0f00 	cmp.w	r8, #0
 80142c2:	dc59      	bgt.n	8014378 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80142c4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80142c8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80142cc:	9b00      	ldr	r3, [sp, #0]
 80142ce:	2b00      	cmp	r3, #0
 80142d0:	dd72      	ble.n	80143b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 80142d2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80142d6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80142da:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80142de:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80142e0:	ee31 1a05 	vadd.f32	s2, s2, s10
 80142e4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80142e8:	eeb0 6a62 	vmov.f32	s12, s5
 80142ec:	ee61 7a27 	vmul.f32	s15, s2, s15
 80142f0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80142f4:	ee77 2a62 	vsub.f32	s5, s14, s5
 80142f8:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80142fc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014300:	eeb0 6a43 	vmov.f32	s12, s6
 8014304:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014308:	ee12 2a90 	vmov	r2, s5
 801430c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014310:	fb92 fef3 	sdiv	lr, r2, r3
 8014314:	ee13 2a10 	vmov	r2, s6
 8014318:	fb92 fcf3 	sdiv	ip, r2, r3
 801431c:	9b00      	ldr	r3, [sp, #0]
 801431e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014322:	3b01      	subs	r3, #1
 8014324:	9300      	str	r3, [sp, #0]
 8014326:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801432a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801432c:	eeb0 3a67 	vmov.f32	s6, s15
 8014330:	bf08      	it	eq
 8014332:	465b      	moveq	r3, fp
 8014334:	eef0 2a47 	vmov.f32	s5, s14
 8014338:	e797      	b.n	801426a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801433a:	454f      	cmp	r7, r9
 801433c:	dabb      	bge.n	80142b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801433e:	fb0c 2606 	mla	r6, ip, r6, r2
 8014342:	1436      	asrs	r6, r6, #16
 8014344:	d4b7      	bmi.n	80142b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8014346:	4546      	cmp	r6, r8
 8014348:	dab5      	bge.n	80142b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801434a:	461e      	mov	r6, r3
 801434c:	46a0      	mov	r8, r4
 801434e:	2e00      	cmp	r6, #0
 8014350:	ddb8      	ble.n	80142c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8014352:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8014356:	9901      	ldr	r1, [sp, #4]
 8014358:	1417      	asrs	r7, r2, #16
 801435a:	ea4f 4920 	mov.w	r9, r0, asr #16
 801435e:	fb0a 1707 	mla	r7, sl, r7, r1
 8014362:	9902      	ldr	r1, [sp, #8]
 8014364:	f817 7009 	ldrb.w	r7, [r7, r9]
 8014368:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801436c:	f828 7b02 	strh.w	r7, [r8], #2
 8014370:	4470      	add	r0, lr
 8014372:	4462      	add	r2, ip
 8014374:	3e01      	subs	r6, #1
 8014376:	e7ea      	b.n	801434e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8014378:	ea5f 4920 	movs.w	r9, r0, asr #16
 801437c:	d417      	bmi.n	80143ae <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801437e:	68ae      	ldr	r6, [r5, #8]
 8014380:	454e      	cmp	r6, r9
 8014382:	dd14      	ble.n	80143ae <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8014384:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8014388:	d411      	bmi.n	80143ae <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801438a:	68ef      	ldr	r7, [r5, #12]
 801438c:	4557      	cmp	r7, sl
 801438e:	dd0e      	ble.n	80143ae <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8014390:	9f01      	ldr	r7, [sp, #4]
 8014392:	b236      	sxth	r6, r6
 8014394:	fb0a 7606 	mla	r6, sl, r6, r7
 8014398:	9f02      	ldr	r7, [sp, #8]
 801439a:	f816 6009 	ldrb.w	r6, [r6, r9]
 801439e:	f06f 0101 	mvn.w	r1, #1
 80143a2:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 80143a6:	fb01 f608 	mul.w	r6, r1, r8
 80143aa:	9903      	ldr	r1, [sp, #12]
 80143ac:	538f      	strh	r7, [r1, r6]
 80143ae:	4470      	add	r0, lr
 80143b0:	4462      	add	r2, ip
 80143b2:	f108 38ff 	add.w	r8, r8, #4294967295
 80143b6:	e782      	b.n	80142be <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80143b8:	b005      	add	sp, #20
 80143ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080143be <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80143be:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80143c2:	b087      	sub	sp, #28
 80143c4:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80143c6:	9205      	str	r2, [sp, #20]
 80143c8:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80143cc:	9203      	str	r2, [sp, #12]
 80143ce:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 80143d2:	9102      	str	r1, [sp, #8]
 80143d4:	6861      	ldr	r1, [r4, #4]
 80143d6:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 80143da:	fb01 2000 	mla	r0, r1, r0, r2
 80143de:	6822      	ldr	r2, [r4, #0]
 80143e0:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 80143e4:	9200      	str	r2, [sp, #0]
 80143e6:	f8dc 2000 	ldr.w	r2, [ip]
 80143ea:	9204      	str	r2, [sp, #16]
 80143ec:	f8dc 2004 	ldr.w	r2, [ip, #4]
 80143f0:	3204      	adds	r2, #4
 80143f2:	9201      	str	r2, [sp, #4]
 80143f4:	9a03      	ldr	r2, [sp, #12]
 80143f6:	43d5      	mvns	r5, r2
 80143f8:	b2ed      	uxtb	r5, r5
 80143fa:	9a02      	ldr	r2, [sp, #8]
 80143fc:	2a00      	cmp	r2, #0
 80143fe:	dc03      	bgt.n	8014408 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8014400:	9a05      	ldr	r2, [sp, #20]
 8014402:	2a00      	cmp	r2, #0
 8014404:	f340 812c 	ble.w	8014660 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8014408:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801440a:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 801440e:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 8014412:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8014416:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8014418:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801441c:	2b00      	cmp	r3, #0
 801441e:	dd10      	ble.n	8014442 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8014420:	140c      	asrs	r4, r1, #16
 8014422:	d405      	bmi.n	8014430 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014424:	4574      	cmp	r4, lr
 8014426:	da03      	bge.n	8014430 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014428:	1414      	asrs	r4, r2, #16
 801442a:	d401      	bmi.n	8014430 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801442c:	42bc      	cmp	r4, r7
 801442e:	db09      	blt.n	8014444 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8014430:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8014432:	9800      	ldr	r0, [sp, #0]
 8014434:	4421      	add	r1, r4
 8014436:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8014438:	3002      	adds	r0, #2
 801443a:	4422      	add	r2, r4
 801443c:	3b01      	subs	r3, #1
 801443e:	9000      	str	r0, [sp, #0]
 8014440:	e7ec      	b.n	801441c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8014442:	d071      	beq.n	8014528 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8014444:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8014446:	1e5c      	subs	r4, r3, #1
 8014448:	fb06 1604 	mla	r6, r6, r4, r1
 801444c:	1436      	asrs	r6, r6, #16
 801444e:	d45d      	bmi.n	801450c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8014450:	4576      	cmp	r6, lr
 8014452:	da5b      	bge.n	801450c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8014454:	9e14      	ldr	r6, [sp, #80]	; 0x50
 8014456:	fb06 2404 	mla	r4, r6, r4, r2
 801445a:	1424      	asrs	r4, r4, #16
 801445c:	d456      	bmi.n	801450c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801445e:	42bc      	cmp	r4, r7
 8014460:	da54      	bge.n	801450c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8014462:	f8dd 9000 	ldr.w	r9, [sp]
 8014466:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 801446a:	4698      	mov	r8, r3
 801446c:	f1b8 0f00 	cmp.w	r8, #0
 8014470:	dd54      	ble.n	801451c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8014472:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8014476:	9804      	ldr	r0, [sp, #16]
 8014478:	1414      	asrs	r4, r2, #16
 801447a:	fb07 0404 	mla	r4, r7, r4, r0
 801447e:	140e      	asrs	r6, r1, #16
 8014480:	9801      	ldr	r0, [sp, #4]
 8014482:	f814 e006 	ldrb.w	lr, [r4, r6]
 8014486:	f8b9 4000 	ldrh.w	r4, [r9]
 801448a:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801448e:	eb00 0b0e 	add.w	fp, r0, lr
 8014492:	1227      	asrs	r7, r4, #8
 8014494:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8014498:	f89b b001 	ldrb.w	fp, [fp, #1]
 801449c:	f810 e00e 	ldrb.w	lr, [r0, lr]
 80144a0:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80144a2:	fb16 f60a 	smulbb	r6, r6, sl
 80144a6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80144aa:	fb07 6705 	mla	r7, r7, r5, r6
 80144ae:	10e6      	asrs	r6, r4, #3
 80144b0:	00e4      	lsls	r4, r4, #3
 80144b2:	b2e4      	uxtb	r4, r4
 80144b4:	fb1b fb0a 	smulbb	fp, fp, sl
 80144b8:	fb14 f405 	smulbb	r4, r4, r5
 80144bc:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80144c0:	b2bf      	uxth	r7, r7
 80144c2:	fb06 b605 	mla	r6, r6, r5, fp
 80144c6:	fb0e 4e0a 	mla	lr, lr, sl, r4
 80144ca:	b2b6      	uxth	r6, r6
 80144cc:	fa1f fe8e 	uxth.w	lr, lr
 80144d0:	1c7c      	adds	r4, r7, #1
 80144d2:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 80144d6:	f106 0b01 	add.w	fp, r6, #1
 80144da:	f10e 0401 	add.w	r4, lr, #1
 80144de:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 80144e2:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 80144e6:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80144ea:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 80144ee:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 80144f2:	4327      	orrs	r7, r4
 80144f4:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80144f8:	4401      	add	r1, r0
 80144fa:	9814      	ldr	r0, [sp, #80]	; 0x50
 80144fc:	ea47 070b 	orr.w	r7, r7, fp
 8014500:	f829 7b02 	strh.w	r7, [r9], #2
 8014504:	4402      	add	r2, r0
 8014506:	f108 38ff 	add.w	r8, r8, #4294967295
 801450a:	e7af      	b.n	801446c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801450c:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 8014510:	f04f 0e00 	mov.w	lr, #0
 8014514:	eb03 040e 	add.w	r4, r3, lr
 8014518:	2c00      	cmp	r4, #0
 801451a:	dc43      	bgt.n	80145a4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801451c:	9a00      	ldr	r2, [sp, #0]
 801451e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014522:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8014526:	9300      	str	r3, [sp, #0]
 8014528:	9b02      	ldr	r3, [sp, #8]
 801452a:	2b00      	cmp	r3, #0
 801452c:	f340 8098 	ble.w	8014660 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8014530:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014534:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8014538:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801453c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801453e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014542:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014546:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801454a:	eef0 6a62 	vmov.f32	s13, s5
 801454e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014552:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014556:	ee77 2a62 	vsub.f32	s5, s14, s5
 801455a:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 801455e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014562:	eef0 6a43 	vmov.f32	s13, s6
 8014566:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801456a:	ee12 2a90 	vmov	r2, s5
 801456e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014572:	fb92 f3f3 	sdiv	r3, r2, r3
 8014576:	ee13 2a10 	vmov	r2, s6
 801457a:	9313      	str	r3, [sp, #76]	; 0x4c
 801457c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801457e:	fb92 f3f3 	sdiv	r3, r2, r3
 8014582:	9314      	str	r3, [sp, #80]	; 0x50
 8014584:	9b02      	ldr	r3, [sp, #8]
 8014586:	9a05      	ldr	r2, [sp, #20]
 8014588:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801458c:	3b01      	subs	r3, #1
 801458e:	9302      	str	r3, [sp, #8]
 8014590:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8014594:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014596:	eeb0 3a67 	vmov.f32	s6, s15
 801459a:	bf08      	it	eq
 801459c:	4613      	moveq	r3, r2
 801459e:	eef0 2a47 	vmov.f32	s5, s14
 80145a2:	e72a      	b.n	80143fa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80145a4:	140f      	asrs	r7, r1, #16
 80145a6:	d454      	bmi.n	8014652 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80145a8:	f8dc 6008 	ldr.w	r6, [ip, #8]
 80145ac:	42be      	cmp	r6, r7
 80145ae:	dd50      	ble.n	8014652 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80145b0:	ea5f 4822 	movs.w	r8, r2, asr #16
 80145b4:	d44d      	bmi.n	8014652 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80145b6:	f8dc 400c 	ldr.w	r4, [ip, #12]
 80145ba:	4544      	cmp	r4, r8
 80145bc:	dd49      	ble.n	8014652 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80145be:	9c04      	ldr	r4, [sp, #16]
 80145c0:	b236      	sxth	r6, r6
 80145c2:	fb08 4606 	mla	r6, r8, r6, r4
 80145c6:	f06f 0001 	mvn.w	r0, #1
 80145ca:	f816 8007 	ldrb.w	r8, [r6, r7]
 80145ce:	9c01      	ldr	r4, [sp, #4]
 80145d0:	fb00 fa0e 	mul.w	sl, r0, lr
 80145d4:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 80145d8:	9800      	ldr	r0, [sp, #0]
 80145da:	eb04 0b08 	add.w	fp, r4, r8
 80145de:	f830 400a 	ldrh.w	r4, [r0, sl]
 80145e2:	f89b 6002 	ldrb.w	r6, [fp, #2]
 80145e6:	9801      	ldr	r0, [sp, #4]
 80145e8:	f89b b001 	ldrb.w	fp, [fp, #1]
 80145ec:	f810 8008 	ldrb.w	r8, [r0, r8]
 80145f0:	9800      	ldr	r0, [sp, #0]
 80145f2:	1227      	asrs	r7, r4, #8
 80145f4:	fb16 f609 	smulbb	r6, r6, r9
 80145f8:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80145fc:	fb07 6705 	mla	r7, r7, r5, r6
 8014600:	10e6      	asrs	r6, r4, #3
 8014602:	00e4      	lsls	r4, r4, #3
 8014604:	b2e4      	uxtb	r4, r4
 8014606:	fb1b fb09 	smulbb	fp, fp, r9
 801460a:	fb14 f405 	smulbb	r4, r4, r5
 801460e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8014612:	b2bf      	uxth	r7, r7
 8014614:	fb06 b605 	mla	r6, r6, r5, fp
 8014618:	fb08 4809 	mla	r8, r8, r9, r4
 801461c:	b2b6      	uxth	r6, r6
 801461e:	fa1f f888 	uxth.w	r8, r8
 8014622:	1c7c      	adds	r4, r7, #1
 8014624:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8014628:	f106 0b01 	add.w	fp, r6, #1
 801462c:	f108 0401 	add.w	r4, r8, #1
 8014630:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 8014634:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8014638:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801463c:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8014640:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8014644:	4327      	orrs	r7, r4
 8014646:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801464a:	ea47 070b 	orr.w	r7, r7, fp
 801464e:	f820 700a 	strh.w	r7, [r0, sl]
 8014652:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8014654:	4401      	add	r1, r0
 8014656:	9814      	ldr	r0, [sp, #80]	; 0x50
 8014658:	f10e 3eff 	add.w	lr, lr, #4294967295
 801465c:	4402      	add	r2, r0
 801465e:	e759      	b.n	8014514 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8014660:	b007      	add	sp, #28
 8014662:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08014668 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014668:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801466c:	b085      	sub	sp, #20
 801466e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8014672:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8014674:	9203      	str	r2, [sp, #12]
 8014676:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801467a:	6870      	ldr	r0, [r6, #4]
 801467c:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801467e:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 8014682:	686f      	ldr	r7, [r5, #4]
 8014684:	9101      	str	r1, [sp, #4]
 8014686:	fb00 2404 	mla	r4, r0, r4, r2
 801468a:	6832      	ldr	r2, [r6, #0]
 801468c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014690:	682a      	ldr	r2, [r5, #0]
 8014692:	9202      	str	r2, [sp, #8]
 8014694:	3704      	adds	r7, #4
 8014696:	9a01      	ldr	r2, [sp, #4]
 8014698:	2a00      	cmp	r2, #0
 801469a:	dc03      	bgt.n	80146a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801469c:	9a03      	ldr	r2, [sp, #12]
 801469e:	2a00      	cmp	r2, #0
 80146a0:	f340 80cc 	ble.w	801483c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80146a4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80146a6:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 80146aa:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 80146ae:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80146b2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80146b4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80146b8:	2b00      	cmp	r3, #0
 80146ba:	dd0d      	ble.n	80146d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80146bc:	1406      	asrs	r6, r0, #16
 80146be:	d405      	bmi.n	80146cc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80146c0:	454e      	cmp	r6, r9
 80146c2:	da03      	bge.n	80146cc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80146c4:	1416      	asrs	r6, r2, #16
 80146c6:	d401      	bmi.n	80146cc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80146c8:	4546      	cmp	r6, r8
 80146ca:	db06      	blt.n	80146da <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80146cc:	9e12      	ldr	r6, [sp, #72]	; 0x48
 80146ce:	4460      	add	r0, ip
 80146d0:	4432      	add	r2, r6
 80146d2:	3b01      	subs	r3, #1
 80146d4:	3402      	adds	r4, #2
 80146d6:	e7ef      	b.n	80146b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 80146d8:	d00f      	beq.n	80146fa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80146da:	1e5e      	subs	r6, r3, #1
 80146dc:	fb0c 0e06 	mla	lr, ip, r6, r0
 80146e0:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 80146e4:	d543      	bpl.n	801476e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 80146e6:	4698      	mov	r8, r3
 80146e8:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 80146ec:	f1b8 0f00 	cmp.w	r8, #0
 80146f0:	dc71      	bgt.n	80147d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 80146f2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80146f6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80146fa:	9b01      	ldr	r3, [sp, #4]
 80146fc:	2b00      	cmp	r3, #0
 80146fe:	f340 809d 	ble.w	801483c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8014702:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014706:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801470a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801470e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014710:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014714:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014718:	eeb0 6a62 	vmov.f32	s12, s5
 801471c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014720:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014724:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014728:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801472c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014730:	eeb0 6a43 	vmov.f32	s12, s6
 8014734:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014738:	ee12 2a90 	vmov	r2, s5
 801473c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014740:	fb92 fcf3 	sdiv	ip, r2, r3
 8014744:	ee13 2a10 	vmov	r2, s6
 8014748:	fb92 f3f3 	sdiv	r3, r2, r3
 801474c:	9312      	str	r3, [sp, #72]	; 0x48
 801474e:	9b01      	ldr	r3, [sp, #4]
 8014750:	9a03      	ldr	r2, [sp, #12]
 8014752:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014756:	3b01      	subs	r3, #1
 8014758:	9301      	str	r3, [sp, #4]
 801475a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801475e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014760:	eeb0 3a67 	vmov.f32	s6, s15
 8014764:	bf08      	it	eq
 8014766:	4613      	moveq	r3, r2
 8014768:	eef0 2a47 	vmov.f32	s5, s14
 801476c:	e793      	b.n	8014696 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801476e:	45ce      	cmp	lr, r9
 8014770:	dab9      	bge.n	80146e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8014772:	9912      	ldr	r1, [sp, #72]	; 0x48
 8014774:	fb01 2606 	mla	r6, r1, r6, r2
 8014778:	1436      	asrs	r6, r6, #16
 801477a:	d4b4      	bmi.n	80146e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801477c:	4546      	cmp	r6, r8
 801477e:	dab2      	bge.n	80146e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8014780:	4698      	mov	r8, r3
 8014782:	46a2      	mov	sl, r4
 8014784:	f1b8 0f00 	cmp.w	r8, #0
 8014788:	ddb3      	ble.n	80146f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801478a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801478e:	9902      	ldr	r1, [sp, #8]
 8014790:	1416      	asrs	r6, r2, #16
 8014792:	fb09 1606 	mla	r6, r9, r6, r1
 8014796:	ea4f 4e20 	mov.w	lr, r0, asr #16
 801479a:	492a      	ldr	r1, [pc, #168]	; (8014844 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 801479c:	f816 e00e 	ldrb.w	lr, [r6, lr]
 80147a0:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80147a4:	eb07 0b0e 	add.w	fp, r7, lr
 80147a8:	4460      	add	r0, ip
 80147aa:	f89b 6001 	ldrb.w	r6, [fp, #1]
 80147ae:	f89b 9002 	ldrb.w	r9, [fp, #2]
 80147b2:	00f6      	lsls	r6, r6, #3
 80147b4:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 80147b8:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80147bc:	ea49 0606 	orr.w	r6, r9, r6
 80147c0:	f817 900e 	ldrb.w	r9, [r7, lr]
 80147c4:	9912      	ldr	r1, [sp, #72]	; 0x48
 80147c6:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 80147ca:	f82a 6b02 	strh.w	r6, [sl], #2
 80147ce:	440a      	add	r2, r1
 80147d0:	f108 38ff 	add.w	r8, r8, #4294967295
 80147d4:	e7d6      	b.n	8014784 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80147d6:	ea5f 4920 	movs.w	r9, r0, asr #16
 80147da:	d429      	bmi.n	8014830 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80147dc:	68ae      	ldr	r6, [r5, #8]
 80147de:	454e      	cmp	r6, r9
 80147e0:	dd26      	ble.n	8014830 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80147e2:	ea5f 4b22 	movs.w	fp, r2, asr #16
 80147e6:	d423      	bmi.n	8014830 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80147e8:	68e9      	ldr	r1, [r5, #12]
 80147ea:	4559      	cmp	r1, fp
 80147ec:	dd20      	ble.n	8014830 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80147ee:	9902      	ldr	r1, [sp, #8]
 80147f0:	fa0f fe86 	sxth.w	lr, r6
 80147f4:	fb0b 1e0e 	mla	lr, fp, lr, r1
 80147f8:	f06f 0101 	mvn.w	r1, #1
 80147fc:	f81e e009 	ldrb.w	lr, [lr, r9]
 8014800:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8014804:	eb07 060e 	add.w	r6, r7, lr
 8014808:	fb01 f908 	mul.w	r9, r1, r8
 801480c:	f896 b002 	ldrb.w	fp, [r6, #2]
 8014810:	7876      	ldrb	r6, [r6, #1]
 8014812:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 8014816:	00f6      	lsls	r6, r6, #3
 8014818:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 801481c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8014820:	ea4b 0606 	orr.w	r6, fp, r6
 8014824:	f817 b00e 	ldrb.w	fp, [r7, lr]
 8014828:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 801482c:	f82a 6009 	strh.w	r6, [sl, r9]
 8014830:	9912      	ldr	r1, [sp, #72]	; 0x48
 8014832:	4460      	add	r0, ip
 8014834:	440a      	add	r2, r1
 8014836:	f108 38ff 	add.w	r8, r8, #4294967295
 801483a:	e757      	b.n	80146ec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801483c:	b005      	add	sp, #20
 801483e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014842:	bf00      	nop
 8014844:	fffff800 	.word	0xfffff800

08014848 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014848:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801484c:	b087      	sub	sp, #28
 801484e:	468b      	mov	fp, r1
 8014850:	9815      	ldr	r0, [sp, #84]	; 0x54
 8014852:	9204      	str	r2, [sp, #16]
 8014854:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8014858:	9205      	str	r2, [sp, #20]
 801485a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801485e:	6841      	ldr	r1, [r0, #4]
 8014860:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8014864:	fb01 2404 	mla	r4, r1, r4, r2
 8014868:	6802      	ldr	r2, [r0, #0]
 801486a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801486e:	f8dc 2000 	ldr.w	r2, [ip]
 8014872:	9201      	str	r2, [sp, #4]
 8014874:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8014878:	3204      	adds	r2, #4
 801487a:	9202      	str	r2, [sp, #8]
 801487c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8014880:	f1bb 0f00 	cmp.w	fp, #0
 8014884:	dc03      	bgt.n	801488e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8014886:	9a04      	ldr	r2, [sp, #16]
 8014888:	2a00      	cmp	r2, #0
 801488a:	f340 8138 	ble.w	8014afe <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801488e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8014890:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8014894:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 8014898:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801489c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801489e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80148a2:	2b00      	cmp	r3, #0
 80148a4:	dd0e      	ble.n	80148c4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80148a6:	1402      	asrs	r2, r0, #16
 80148a8:	d405      	bmi.n	80148b6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80148aa:	42ba      	cmp	r2, r7
 80148ac:	da03      	bge.n	80148b6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80148ae:	140a      	asrs	r2, r1, #16
 80148b0:	d401      	bmi.n	80148b6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80148b2:	42b2      	cmp	r2, r6
 80148b4:	db07      	blt.n	80148c6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80148b6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80148b8:	4410      	add	r0, r2
 80148ba:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80148bc:	3b01      	subs	r3, #1
 80148be:	4411      	add	r1, r2
 80148c0:	3402      	adds	r4, #2
 80148c2:	e7ee      	b.n	80148a2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 80148c4:	d019      	beq.n	80148fa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 80148c6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80148c8:	1e5a      	subs	r2, r3, #1
 80148ca:	fb05 0502 	mla	r5, r5, r2, r0
 80148ce:	142d      	asrs	r5, r5, #16
 80148d0:	d409      	bmi.n	80148e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80148d2:	42bd      	cmp	r5, r7
 80148d4:	da07      	bge.n	80148e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80148d6:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80148d8:	fb05 1202 	mla	r2, r5, r2, r1
 80148dc:	1412      	asrs	r2, r2, #16
 80148de:	d402      	bmi.n	80148e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80148e0:	42b2      	cmp	r2, r6
 80148e2:	f2c0 80ac 	blt.w	8014a3e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 80148e6:	f04f 0e00 	mov.w	lr, #0
 80148ea:	eb03 020e 	add.w	r2, r3, lr
 80148ee:	2a00      	cmp	r2, #0
 80148f0:	dc3e      	bgt.n	8014970 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 80148f2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80148f6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80148fa:	f1bb 0f00 	cmp.w	fp, #0
 80148fe:	f340 80fe 	ble.w	8014afe <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8014902:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014906:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801490a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801490e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014910:	f1bb 0b01 	subs.w	fp, fp, #1
 8014914:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014918:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801491c:	eeb0 6a62 	vmov.f32	s12, s5
 8014920:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014924:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014928:	ee77 2a62 	vsub.f32	s5, s14, s5
 801492c:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8014930:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014934:	eeb0 6a43 	vmov.f32	s12, s6
 8014938:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801493c:	ee12 2a90 	vmov	r2, s5
 8014940:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014944:	fb92 f3f3 	sdiv	r3, r2, r3
 8014948:	ee13 2a10 	vmov	r2, s6
 801494c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014950:	9313      	str	r3, [sp, #76]	; 0x4c
 8014952:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014954:	fb92 f3f3 	sdiv	r3, r2, r3
 8014958:	9a04      	ldr	r2, [sp, #16]
 801495a:	9314      	str	r3, [sp, #80]	; 0x50
 801495c:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8014960:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014962:	eeb0 3a67 	vmov.f32	s6, s15
 8014966:	bf08      	it	eq
 8014968:	4613      	moveq	r3, r2
 801496a:	eef0 2a47 	vmov.f32	s5, s14
 801496e:	e787      	b.n	8014880 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8014970:	1406      	asrs	r6, r0, #16
 8014972:	d45d      	bmi.n	8014a30 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8014974:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8014978:	42b5      	cmp	r5, r6
 801497a:	dd59      	ble.n	8014a30 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801497c:	140f      	asrs	r7, r1, #16
 801497e:	d457      	bmi.n	8014a30 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8014980:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8014984:	42ba      	cmp	r2, r7
 8014986:	dd53      	ble.n	8014a30 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8014988:	9a01      	ldr	r2, [sp, #4]
 801498a:	b22d      	sxth	r5, r5
 801498c:	fb07 2505 	mla	r5, r7, r5, r2
 8014990:	5daa      	ldrb	r2, [r5, r6]
 8014992:	9d02      	ldr	r5, [sp, #8]
 8014994:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8014998:	0e2e      	lsrs	r6, r5, #24
 801499a:	d049      	beq.n	8014a30 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801499c:	f06f 0201 	mvn.w	r2, #1
 80149a0:	fb02 f20e 	mul.w	r2, r2, lr
 80149a4:	9203      	str	r2, [sp, #12]
 80149a6:	f834 8002 	ldrh.w	r8, [r4, r2]
 80149aa:	9a05      	ldr	r2, [sp, #20]
 80149ac:	4356      	muls	r6, r2
 80149ae:	1c72      	adds	r2, r6, #1
 80149b0:	eb02 2226 	add.w	r2, r2, r6, asr #8
 80149b4:	1212      	asrs	r2, r2, #8
 80149b6:	fa1f f982 	uxth.w	r9, r2
 80149ba:	ea4f 2728 	mov.w	r7, r8, asr #8
 80149be:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80149c2:	43d2      	mvns	r2, r2
 80149c4:	b2d2      	uxtb	r2, r2
 80149c6:	fb16 f609 	smulbb	r6, r6, r9
 80149ca:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80149ce:	fb07 6702 	mla	r7, r7, r2, r6
 80149d2:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80149d6:	ea4f 06e8 	mov.w	r6, r8, asr #3
 80149da:	b2ed      	uxtb	r5, r5
 80149dc:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80149e0:	fa5f f888 	uxtb.w	r8, r8
 80149e4:	fb15 f509 	smulbb	r5, r5, r9
 80149e8:	fb08 5502 	mla	r5, r8, r2, r5
 80149ec:	b2bf      	uxth	r7, r7
 80149ee:	fb1a fa09 	smulbb	sl, sl, r9
 80149f2:	b2ad      	uxth	r5, r5
 80149f4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80149f8:	fb06 a602 	mla	r6, r6, r2, sl
 80149fc:	1c7a      	adds	r2, r7, #1
 80149fe:	f105 0a01 	add.w	sl, r5, #1
 8014a02:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8014a06:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8014a0a:	b2b6      	uxth	r6, r6
 8014a0c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014a10:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8014a14:	ea4a 0707 	orr.w	r7, sl, r7
 8014a18:	f106 0a01 	add.w	sl, r6, #1
 8014a1c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8014a20:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014a24:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8014a28:	9a03      	ldr	r2, [sp, #12]
 8014a2a:	ea47 070a 	orr.w	r7, r7, sl
 8014a2e:	52a7      	strh	r7, [r4, r2]
 8014a30:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8014a32:	4410      	add	r0, r2
 8014a34:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8014a36:	f10e 3eff 	add.w	lr, lr, #4294967295
 8014a3a:	4411      	add	r1, r2
 8014a3c:	e755      	b.n	80148ea <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8014a3e:	f04f 0800 	mov.w	r8, #0
 8014a42:	eba3 0208 	sub.w	r2, r3, r8
 8014a46:	2a00      	cmp	r2, #0
 8014a48:	f77f af53 	ble.w	80148f2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8014a4c:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 8014a50:	9f01      	ldr	r7, [sp, #4]
 8014a52:	140a      	asrs	r2, r1, #16
 8014a54:	1405      	asrs	r5, r0, #16
 8014a56:	fb06 7202 	mla	r2, r6, r2, r7
 8014a5a:	5d52      	ldrb	r2, [r2, r5]
 8014a5c:	9d02      	ldr	r5, [sp, #8]
 8014a5e:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8014a62:	0e2e      	lsrs	r6, r5, #24
 8014a64:	d044      	beq.n	8014af0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8014a66:	9a05      	ldr	r2, [sp, #20]
 8014a68:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8014a6c:	4356      	muls	r6, r2
 8014a6e:	1c72      	adds	r2, r6, #1
 8014a70:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8014a74:	1212      	asrs	r2, r2, #8
 8014a76:	fa1f f982 	uxth.w	r9, r2
 8014a7a:	ea4f 272e 	mov.w	r7, lr, asr #8
 8014a7e:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8014a82:	43d2      	mvns	r2, r2
 8014a84:	b2d2      	uxtb	r2, r2
 8014a86:	fb16 f609 	smulbb	r6, r6, r9
 8014a8a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8014a8e:	fb07 6702 	mla	r7, r7, r2, r6
 8014a92:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8014a96:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8014a9a:	b2ed      	uxtb	r5, r5
 8014a9c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8014aa0:	fa5f fe8e 	uxtb.w	lr, lr
 8014aa4:	fb15 f509 	smulbb	r5, r5, r9
 8014aa8:	fb0e 5502 	mla	r5, lr, r2, r5
 8014aac:	b2bf      	uxth	r7, r7
 8014aae:	fb1a fa09 	smulbb	sl, sl, r9
 8014ab2:	b2ad      	uxth	r5, r5
 8014ab4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8014ab8:	fb06 a602 	mla	r6, r6, r2, sl
 8014abc:	1c7a      	adds	r2, r7, #1
 8014abe:	f105 0a01 	add.w	sl, r5, #1
 8014ac2:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8014ac6:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8014aca:	b2b6      	uxth	r6, r6
 8014acc:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014ad0:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8014ad4:	ea4a 0707 	orr.w	r7, sl, r7
 8014ad8:	f106 0a01 	add.w	sl, r6, #1
 8014adc:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8014ae0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014ae4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8014ae8:	ea47 070a 	orr.w	r7, r7, sl
 8014aec:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8014af0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8014af2:	4410      	add	r0, r2
 8014af4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8014af6:	f108 0801 	add.w	r8, r8, #1
 8014afa:	4411      	add	r1, r2
 8014afc:	e7a1      	b.n	8014a42 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8014afe:	b007      	add	sp, #28
 8014b00:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014b04 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014b04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014b08:	b085      	sub	sp, #20
 8014b0a:	468b      	mov	fp, r1
 8014b0c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8014b0e:	9203      	str	r2, [sp, #12]
 8014b10:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8014b14:	6841      	ldr	r1, [r0, #4]
 8014b16:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 8014b1a:	fb01 2404 	mla	r4, r1, r4, r2
 8014b1e:	6802      	ldr	r2, [r0, #0]
 8014b20:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014b24:	f8de 2000 	ldr.w	r2, [lr]
 8014b28:	9200      	str	r2, [sp, #0]
 8014b2a:	f8de 2004 	ldr.w	r2, [lr, #4]
 8014b2e:	3204      	adds	r2, #4
 8014b30:	9201      	str	r2, [sp, #4]
 8014b32:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8014b36:	f1bb 0f00 	cmp.w	fp, #0
 8014b3a:	dc03      	bgt.n	8014b44 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8014b3c:	9a03      	ldr	r2, [sp, #12]
 8014b3e:	2a00      	cmp	r2, #0
 8014b40:	f340 8153 	ble.w	8014dea <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8014b44:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8014b46:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8014b4a:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8014b4e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8014b52:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8014b54:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8014b58:	2b00      	cmp	r3, #0
 8014b5a:	dd0e      	ble.n	8014b7a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8014b5c:	1408      	asrs	r0, r1, #16
 8014b5e:	d405      	bmi.n	8014b6c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8014b60:	42b8      	cmp	r0, r7
 8014b62:	da03      	bge.n	8014b6c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8014b64:	1410      	asrs	r0, r2, #16
 8014b66:	d401      	bmi.n	8014b6c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8014b68:	42b0      	cmp	r0, r6
 8014b6a:	db07      	blt.n	8014b7c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8014b6c:	9811      	ldr	r0, [sp, #68]	; 0x44
 8014b6e:	4401      	add	r1, r0
 8014b70:	9812      	ldr	r0, [sp, #72]	; 0x48
 8014b72:	3b01      	subs	r3, #1
 8014b74:	4402      	add	r2, r0
 8014b76:	3402      	adds	r4, #2
 8014b78:	e7ee      	b.n	8014b58 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8014b7a:	d017      	beq.n	8014bac <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8014b7c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8014b7e:	1e58      	subs	r0, r3, #1
 8014b80:	fb05 1500 	mla	r5, r5, r0, r1
 8014b84:	142d      	asrs	r5, r5, #16
 8014b86:	d409      	bmi.n	8014b9c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8014b88:	42bd      	cmp	r5, r7
 8014b8a:	da07      	bge.n	8014b9c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8014b8c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8014b8e:	fb05 2000 	mla	r0, r5, r0, r2
 8014b92:	1400      	asrs	r0, r0, #16
 8014b94:	d402      	bmi.n	8014b9c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8014b96:	42b0      	cmp	r0, r6
 8014b98:	f2c0 80bc 	blt.w	8014d14 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 8014b9c:	2600      	movs	r6, #0
 8014b9e:	1998      	adds	r0, r3, r6
 8014ba0:	2800      	cmp	r0, #0
 8014ba2:	dc3e      	bgt.n	8014c22 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8014ba4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014ba8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014bac:	f1bb 0f00 	cmp.w	fp, #0
 8014bb0:	f340 811b 	ble.w	8014dea <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8014bb4:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014bb8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014bbc:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014bc0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014bc2:	f1bb 0b01 	subs.w	fp, fp, #1
 8014bc6:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014bca:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014bce:	eeb0 6a62 	vmov.f32	s12, s5
 8014bd2:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014bd6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014bda:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014bde:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8014be2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014be6:	eeb0 6a43 	vmov.f32	s12, s6
 8014bea:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014bee:	ee12 2a90 	vmov	r2, s5
 8014bf2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014bf6:	fb92 f3f3 	sdiv	r3, r2, r3
 8014bfa:	ee13 2a10 	vmov	r2, s6
 8014bfe:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014c02:	9311      	str	r3, [sp, #68]	; 0x44
 8014c04:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014c06:	fb92 f3f3 	sdiv	r3, r2, r3
 8014c0a:	9a03      	ldr	r2, [sp, #12]
 8014c0c:	9312      	str	r3, [sp, #72]	; 0x48
 8014c0e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8014c12:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014c14:	eeb0 3a67 	vmov.f32	s6, s15
 8014c18:	bf08      	it	eq
 8014c1a:	4613      	moveq	r3, r2
 8014c1c:	eef0 2a47 	vmov.f32	s5, s14
 8014c20:	e789      	b.n	8014b36 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8014c22:	140f      	asrs	r7, r1, #16
 8014c24:	d426      	bmi.n	8014c74 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8014c26:	f8de 5008 	ldr.w	r5, [lr, #8]
 8014c2a:	42bd      	cmp	r5, r7
 8014c2c:	dd22      	ble.n	8014c74 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8014c2e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8014c32:	d41f      	bmi.n	8014c74 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8014c34:	f8de 000c 	ldr.w	r0, [lr, #12]
 8014c38:	4560      	cmp	r0, ip
 8014c3a:	dd1b      	ble.n	8014c74 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8014c3c:	9800      	ldr	r0, [sp, #0]
 8014c3e:	b22d      	sxth	r5, r5
 8014c40:	fb0c 0505 	mla	r5, ip, r5, r0
 8014c44:	5de8      	ldrb	r0, [r5, r7]
 8014c46:	9d01      	ldr	r5, [sp, #4]
 8014c48:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8014c4c:	0e07      	lsrs	r7, r0, #24
 8014c4e:	2fff      	cmp	r7, #255	; 0xff
 8014c50:	d116      	bne.n	8014c80 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8014c52:	f06f 0501 	mvn.w	r5, #1
 8014c56:	fb05 f706 	mul.w	r7, r5, r6
 8014c5a:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 8014c5e:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8014c62:	0945      	lsrs	r5, r0, #5
 8014c64:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8014c68:	ea4c 0505 	orr.w	r5, ip, r5
 8014c6c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8014c70:	4305      	orrs	r5, r0
 8014c72:	53e5      	strh	r5, [r4, r7]
 8014c74:	9811      	ldr	r0, [sp, #68]	; 0x44
 8014c76:	4401      	add	r1, r0
 8014c78:	9812      	ldr	r0, [sp, #72]	; 0x48
 8014c7a:	3e01      	subs	r6, #1
 8014c7c:	4402      	add	r2, r0
 8014c7e:	e78e      	b.n	8014b9e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8014c80:	b2fd      	uxtb	r5, r7
 8014c82:	2f00      	cmp	r7, #0
 8014c84:	d0f6      	beq.n	8014c74 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8014c86:	f06f 0701 	mvn.w	r7, #1
 8014c8a:	4377      	muls	r7, r6
 8014c8c:	fa1f f985 	uxth.w	r9, r5
 8014c90:	f834 8007 	ldrh.w	r8, [r4, r7]
 8014c94:	9702      	str	r7, [sp, #8]
 8014c96:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8014c9a:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8014c9e:	43ed      	mvns	r5, r5
 8014ca0:	b2ed      	uxtb	r5, r5
 8014ca2:	fb17 f709 	smulbb	r7, r7, r9
 8014ca6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8014caa:	fb0c 7c05 	mla	ip, ip, r5, r7
 8014cae:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8014cb2:	ea4f 07e8 	mov.w	r7, r8, asr #3
 8014cb6:	b2c0      	uxtb	r0, r0
 8014cb8:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8014cbc:	fa5f f888 	uxtb.w	r8, r8
 8014cc0:	fb10 f009 	smulbb	r0, r0, r9
 8014cc4:	fb08 0005 	mla	r0, r8, r5, r0
 8014cc8:	b280      	uxth	r0, r0
 8014cca:	fa1f fc8c 	uxth.w	ip, ip
 8014cce:	fb1a fa09 	smulbb	sl, sl, r9
 8014cd2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8014cd6:	fb07 a705 	mla	r7, r7, r5, sl
 8014cda:	f100 0a01 	add.w	sl, r0, #1
 8014cde:	f10c 0501 	add.w	r5, ip, #1
 8014ce2:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8014ce6:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8014cea:	b2bf      	uxth	r7, r7
 8014cec:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014cf0:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8014cf4:	ea4a 0c0c 	orr.w	ip, sl, ip
 8014cf8:	f107 0a01 	add.w	sl, r7, #1
 8014cfc:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8014d00:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014d04:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8014d08:	9802      	ldr	r0, [sp, #8]
 8014d0a:	ea4c 0c0a 	orr.w	ip, ip, sl
 8014d0e:	f824 c000 	strh.w	ip, [r4, r0]
 8014d12:	e7af      	b.n	8014c74 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8014d14:	f04f 0800 	mov.w	r8, #0
 8014d18:	eba3 0008 	sub.w	r0, r3, r8
 8014d1c:	2800      	cmp	r0, #0
 8014d1e:	f77f af41 	ble.w	8014ba4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8014d22:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8014d26:	9f00      	ldr	r7, [sp, #0]
 8014d28:	1410      	asrs	r0, r2, #16
 8014d2a:	140d      	asrs	r5, r1, #16
 8014d2c:	fb06 7000 	mla	r0, r6, r0, r7
 8014d30:	5d40      	ldrb	r0, [r0, r5]
 8014d32:	9d01      	ldr	r5, [sp, #4]
 8014d34:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8014d38:	0e2e      	lsrs	r6, r5, #24
 8014d3a:	2eff      	cmp	r6, #255	; 0xff
 8014d3c:	d112      	bne.n	8014d64 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 8014d3e:	482c      	ldr	r0, [pc, #176]	; (8014df0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8014d40:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8014d44:	0968      	lsrs	r0, r5, #5
 8014d46:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8014d4a:	4330      	orrs	r0, r6
 8014d4c:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8014d50:	4328      	orrs	r0, r5
 8014d52:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 8014d56:	9811      	ldr	r0, [sp, #68]	; 0x44
 8014d58:	4401      	add	r1, r0
 8014d5a:	9812      	ldr	r0, [sp, #72]	; 0x48
 8014d5c:	f108 0801 	add.w	r8, r8, #1
 8014d60:	4402      	add	r2, r0
 8014d62:	e7d9      	b.n	8014d18 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8014d64:	b2f0      	uxtb	r0, r6
 8014d66:	2e00      	cmp	r6, #0
 8014d68:	d0f5      	beq.n	8014d56 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8014d6a:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 8014d6e:	fa1f f980 	uxth.w	r9, r0
 8014d72:	ea4f 272c 	mov.w	r7, ip, asr #8
 8014d76:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8014d7a:	43c0      	mvns	r0, r0
 8014d7c:	b2c0      	uxtb	r0, r0
 8014d7e:	fb16 f609 	smulbb	r6, r6, r9
 8014d82:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8014d86:	fb07 6700 	mla	r7, r7, r0, r6
 8014d8a:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8014d8e:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8014d92:	b2ed      	uxtb	r5, r5
 8014d94:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8014d98:	fa5f fc8c 	uxtb.w	ip, ip
 8014d9c:	fb15 f509 	smulbb	r5, r5, r9
 8014da0:	fb0c 5500 	mla	r5, ip, r0, r5
 8014da4:	b2bf      	uxth	r7, r7
 8014da6:	fb1a fa09 	smulbb	sl, sl, r9
 8014daa:	b2ad      	uxth	r5, r5
 8014dac:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8014db0:	fb06 a600 	mla	r6, r6, r0, sl
 8014db4:	1c78      	adds	r0, r7, #1
 8014db6:	f105 0a01 	add.w	sl, r5, #1
 8014dba:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8014dbe:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8014dc2:	b2b6      	uxth	r6, r6
 8014dc4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014dc8:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8014dcc:	ea4a 0707 	orr.w	r7, sl, r7
 8014dd0:	f106 0a01 	add.w	sl, r6, #1
 8014dd4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8014dd8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014ddc:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8014de0:	ea47 070a 	orr.w	r7, r7, sl
 8014de4:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8014de8:	e7b5      	b.n	8014d56 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8014dea:	b005      	add	sp, #20
 8014dec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014df0:	fffff800 	.word	0xfffff800

08014df4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014df4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014df8:	b087      	sub	sp, #28
 8014dfa:	468b      	mov	fp, r1
 8014dfc:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8014dfe:	9204      	str	r2, [sp, #16]
 8014e00:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8014e04:	9205      	str	r2, [sp, #20]
 8014e06:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8014e0a:	6861      	ldr	r1, [r4, #4]
 8014e0c:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8014e10:	fb01 2000 	mla	r0, r1, r0, r2
 8014e14:	6822      	ldr	r2, [r4, #0]
 8014e16:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8014e1a:	f8de 2000 	ldr.w	r2, [lr]
 8014e1e:	9201      	str	r2, [sp, #4]
 8014e20:	f8de 2004 	ldr.w	r2, [lr, #4]
 8014e24:	9202      	str	r2, [sp, #8]
 8014e26:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8014e2a:	f1bb 0f00 	cmp.w	fp, #0
 8014e2e:	dc03      	bgt.n	8014e38 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8014e30:	9a04      	ldr	r2, [sp, #16]
 8014e32:	2a00      	cmp	r2, #0
 8014e34:	f340 8142 	ble.w	80150bc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8014e38:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8014e3a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8014e3e:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8014e42:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8014e46:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8014e48:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8014e4c:	2b00      	cmp	r3, #0
 8014e4e:	dd0e      	ble.n	8014e6e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8014e50:	140c      	asrs	r4, r1, #16
 8014e52:	d405      	bmi.n	8014e60 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8014e54:	42bc      	cmp	r4, r7
 8014e56:	da03      	bge.n	8014e60 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8014e58:	1414      	asrs	r4, r2, #16
 8014e5a:	d401      	bmi.n	8014e60 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8014e5c:	42b4      	cmp	r4, r6
 8014e5e:	db07      	blt.n	8014e70 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8014e60:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8014e62:	4421      	add	r1, r4
 8014e64:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8014e66:	3b01      	subs	r3, #1
 8014e68:	4422      	add	r2, r4
 8014e6a:	3002      	adds	r0, #2
 8014e6c:	e7ee      	b.n	8014e4c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8014e6e:	d019      	beq.n	8014ea4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8014e70:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8014e72:	1e5c      	subs	r4, r3, #1
 8014e74:	fb05 1504 	mla	r5, r5, r4, r1
 8014e78:	142d      	asrs	r5, r5, #16
 8014e7a:	d409      	bmi.n	8014e90 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8014e7c:	42bd      	cmp	r5, r7
 8014e7e:	da07      	bge.n	8014e90 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8014e80:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8014e82:	fb05 2404 	mla	r4, r5, r4, r2
 8014e86:	1424      	asrs	r4, r4, #16
 8014e88:	d402      	bmi.n	8014e90 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8014e8a:	42b4      	cmp	r4, r6
 8014e8c:	f2c0 80b1 	blt.w	8014ff2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8014e90:	f04f 0800 	mov.w	r8, #0
 8014e94:	eb03 0408 	add.w	r4, r3, r8
 8014e98:	2c00      	cmp	r4, #0
 8014e9a:	dc3e      	bgt.n	8014f1a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8014e9c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014ea0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8014ea4:	f1bb 0f00 	cmp.w	fp, #0
 8014ea8:	f340 8108 	ble.w	80150bc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8014eac:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014eb0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014eb4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014eb8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014eba:	f1bb 0b01 	subs.w	fp, fp, #1
 8014ebe:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014ec2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014ec6:	eeb0 6a62 	vmov.f32	s12, s5
 8014eca:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014ece:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014ed2:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014ed6:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8014eda:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014ede:	eeb0 6a43 	vmov.f32	s12, s6
 8014ee2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014ee6:	ee12 2a90 	vmov	r2, s5
 8014eea:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014eee:	fb92 f3f3 	sdiv	r3, r2, r3
 8014ef2:	ee13 2a10 	vmov	r2, s6
 8014ef6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014efa:	9313      	str	r3, [sp, #76]	; 0x4c
 8014efc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014efe:	fb92 f3f3 	sdiv	r3, r2, r3
 8014f02:	9a04      	ldr	r2, [sp, #16]
 8014f04:	9314      	str	r3, [sp, #80]	; 0x50
 8014f06:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8014f0a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014f0c:	eeb0 3a67 	vmov.f32	s6, s15
 8014f10:	bf08      	it	eq
 8014f12:	4613      	moveq	r3, r2
 8014f14:	eef0 2a47 	vmov.f32	s5, s14
 8014f18:	e787      	b.n	8014e2a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 8014f1a:	140e      	asrs	r6, r1, #16
 8014f1c:	d462      	bmi.n	8014fe4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8014f1e:	f8de 5008 	ldr.w	r5, [lr, #8]
 8014f22:	42b5      	cmp	r5, r6
 8014f24:	dd5e      	ble.n	8014fe4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8014f26:	1417      	asrs	r7, r2, #16
 8014f28:	d45c      	bmi.n	8014fe4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8014f2a:	f8de 400c 	ldr.w	r4, [lr, #12]
 8014f2e:	42bc      	cmp	r4, r7
 8014f30:	dd58      	ble.n	8014fe4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8014f32:	b22d      	sxth	r5, r5
 8014f34:	fb07 6505 	mla	r5, r7, r5, r6
 8014f38:	9c02      	ldr	r4, [sp, #8]
 8014f3a:	5d66      	ldrb	r6, [r4, r5]
 8014f3c:	2e00      	cmp	r6, #0
 8014f3e:	d051      	beq.n	8014fe4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8014f40:	9c01      	ldr	r4, [sp, #4]
 8014f42:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 8014f46:	f06f 0401 	mvn.w	r4, #1
 8014f4a:	fb04 f408 	mul.w	r4, r4, r8
 8014f4e:	9403      	str	r4, [sp, #12]
 8014f50:	5b05      	ldrh	r5, [r0, r4]
 8014f52:	9c05      	ldr	r4, [sp, #20]
 8014f54:	4366      	muls	r6, r4
 8014f56:	1c74      	adds	r4, r6, #1
 8014f58:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8014f5c:	1224      	asrs	r4, r4, #8
 8014f5e:	b2a7      	uxth	r7, r4
 8014f60:	122e      	asrs	r6, r5, #8
 8014f62:	43e4      	mvns	r4, r4
 8014f64:	b2e4      	uxtb	r4, r4
 8014f66:	ea4f 2c29 	mov.w	ip, r9, asr #8
 8014f6a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8014f6e:	fb16 f604 	smulbb	r6, r6, r4
 8014f72:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8014f76:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8014f7a:	00ed      	lsls	r5, r5, #3
 8014f7c:	fb0c 6c07 	mla	ip, ip, r7, r6
 8014f80:	b2ed      	uxtb	r5, r5
 8014f82:	ea4f 06e9 	mov.w	r6, r9, asr #3
 8014f86:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8014f8a:	fb15 f504 	smulbb	r5, r5, r4
 8014f8e:	fa5f f989 	uxtb.w	r9, r9
 8014f92:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8014f96:	fb09 5507 	mla	r5, r9, r7, r5
 8014f9a:	fb1a fa04 	smulbb	sl, sl, r4
 8014f9e:	fa1f fc8c 	uxth.w	ip, ip
 8014fa2:	b2ad      	uxth	r5, r5
 8014fa4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8014fa8:	fb06 a607 	mla	r6, r6, r7, sl
 8014fac:	f10c 0401 	add.w	r4, ip, #1
 8014fb0:	f105 0a01 	add.w	sl, r5, #1
 8014fb4:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8014fb8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8014fbc:	b2b6      	uxth	r6, r6
 8014fbe:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014fc2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8014fc6:	ea4a 0c0c 	orr.w	ip, sl, ip
 8014fca:	f106 0a01 	add.w	sl, r6, #1
 8014fce:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8014fd2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014fd6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8014fda:	9c03      	ldr	r4, [sp, #12]
 8014fdc:	ea4c 0c0a 	orr.w	ip, ip, sl
 8014fe0:	f820 c004 	strh.w	ip, [r0, r4]
 8014fe4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8014fe6:	4421      	add	r1, r4
 8014fe8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8014fea:	f108 38ff 	add.w	r8, r8, #4294967295
 8014fee:	4422      	add	r2, r4
 8014ff0:	e750      	b.n	8014e94 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8014ff2:	f04f 0900 	mov.w	r9, #0
 8014ff6:	eba3 0409 	sub.w	r4, r3, r9
 8014ffa:	2c00      	cmp	r4, #0
 8014ffc:	f77f af4e 	ble.w	8014e9c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8015000:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8015004:	140d      	asrs	r5, r1, #16
 8015006:	1414      	asrs	r4, r2, #16
 8015008:	fb06 5404 	mla	r4, r6, r4, r5
 801500c:	9d02      	ldr	r5, [sp, #8]
 801500e:	5d2e      	ldrb	r6, [r5, r4]
 8015010:	2e00      	cmp	r6, #0
 8015012:	d04c      	beq.n	80150ae <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 8015014:	9d01      	ldr	r5, [sp, #4]
 8015016:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 801501a:	9c05      	ldr	r4, [sp, #20]
 801501c:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8015020:	4366      	muls	r6, r4
 8015022:	1c74      	adds	r4, r6, #1
 8015024:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8015028:	1224      	asrs	r4, r4, #8
 801502a:	b2a7      	uxth	r7, r4
 801502c:	122e      	asrs	r6, r5, #8
 801502e:	43e4      	mvns	r4, r4
 8015030:	b2e4      	uxtb	r4, r4
 8015032:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8015036:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801503a:	fb16 f604 	smulbb	r6, r6, r4
 801503e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8015042:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8015046:	00ed      	lsls	r5, r5, #3
 8015048:	fb0c 6c07 	mla	ip, ip, r7, r6
 801504c:	b2ed      	uxtb	r5, r5
 801504e:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8015052:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8015056:	fb15 f504 	smulbb	r5, r5, r4
 801505a:	fa5f f888 	uxtb.w	r8, r8
 801505e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8015062:	fb08 5507 	mla	r5, r8, r7, r5
 8015066:	fb1a fa04 	smulbb	sl, sl, r4
 801506a:	fa1f fc8c 	uxth.w	ip, ip
 801506e:	b2ad      	uxth	r5, r5
 8015070:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8015074:	fb06 a607 	mla	r6, r6, r7, sl
 8015078:	f10c 0401 	add.w	r4, ip, #1
 801507c:	f105 0a01 	add.w	sl, r5, #1
 8015080:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8015084:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015088:	b2b6      	uxth	r6, r6
 801508a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801508e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8015092:	ea4a 0c0c 	orr.w	ip, sl, ip
 8015096:	f106 0a01 	add.w	sl, r6, #1
 801509a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801509e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80150a2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80150a6:	ea4c 0c0a 	orr.w	ip, ip, sl
 80150aa:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 80150ae:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80150b0:	4421      	add	r1, r4
 80150b2:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80150b4:	f109 0901 	add.w	r9, r9, #1
 80150b8:	4422      	add	r2, r4
 80150ba:	e79c      	b.n	8014ff6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 80150bc:	b007      	add	sp, #28
 80150be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080150c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80150c2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80150c6:	b085      	sub	sp, #20
 80150c8:	468b      	mov	fp, r1
 80150ca:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80150cc:	9203      	str	r2, [sp, #12]
 80150ce:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 80150d2:	6861      	ldr	r1, [r4, #4]
 80150d4:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 80150d8:	fb01 2000 	mla	r0, r1, r0, r2
 80150dc:	6822      	ldr	r2, [r4, #0]
 80150de:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 80150e2:	f8d8 2000 	ldr.w	r2, [r8]
 80150e6:	9200      	str	r2, [sp, #0]
 80150e8:	f8d8 2004 	ldr.w	r2, [r8, #4]
 80150ec:	9201      	str	r2, [sp, #4]
 80150ee:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80150f2:	f1bb 0f00 	cmp.w	fp, #0
 80150f6:	dc03      	bgt.n	8015100 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80150f8:	9a03      	ldr	r2, [sp, #12]
 80150fa:	2a00      	cmp	r2, #0
 80150fc:	f340 8146 	ble.w	801538c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8015100:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8015102:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8015106:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801510a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801510e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015110:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8015114:	2b00      	cmp	r3, #0
 8015116:	dd0e      	ble.n	8015136 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8015118:	140c      	asrs	r4, r1, #16
 801511a:	d405      	bmi.n	8015128 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801511c:	42bc      	cmp	r4, r7
 801511e:	da03      	bge.n	8015128 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015120:	1414      	asrs	r4, r2, #16
 8015122:	d401      	bmi.n	8015128 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015124:	42b4      	cmp	r4, r6
 8015126:	db07      	blt.n	8015138 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8015128:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801512a:	4421      	add	r1, r4
 801512c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801512e:	3b01      	subs	r3, #1
 8015130:	4422      	add	r2, r4
 8015132:	3002      	adds	r0, #2
 8015134:	e7ee      	b.n	8015114 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8015136:	d017      	beq.n	8015168 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8015138:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801513a:	1e5c      	subs	r4, r3, #1
 801513c:	fb05 1504 	mla	r5, r5, r4, r1
 8015140:	142d      	asrs	r5, r5, #16
 8015142:	d409      	bmi.n	8015158 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8015144:	42bd      	cmp	r5, r7
 8015146:	da07      	bge.n	8015158 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8015148:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801514a:	fb05 2404 	mla	r4, r5, r4, r2
 801514e:	1424      	asrs	r4, r4, #16
 8015150:	d402      	bmi.n	8015158 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8015152:	42b4      	cmp	r4, r6
 8015154:	f2c0 80b3 	blt.w	80152be <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8015158:	2600      	movs	r6, #0
 801515a:	199c      	adds	r4, r3, r6
 801515c:	2c00      	cmp	r4, #0
 801515e:	dc3e      	bgt.n	80151de <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8015160:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015164:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8015168:	f1bb 0f00 	cmp.w	fp, #0
 801516c:	f340 810e 	ble.w	801538c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8015170:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015174:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015178:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801517c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801517e:	f1bb 0b01 	subs.w	fp, fp, #1
 8015182:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015186:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801518a:	eeb0 6a62 	vmov.f32	s12, s5
 801518e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015192:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015196:	ee77 2a62 	vsub.f32	s5, s14, s5
 801519a:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801519e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80151a2:	eeb0 6a43 	vmov.f32	s12, s6
 80151a6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80151aa:	ee12 2a90 	vmov	r2, s5
 80151ae:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80151b2:	fb92 f3f3 	sdiv	r3, r2, r3
 80151b6:	ee13 2a10 	vmov	r2, s6
 80151ba:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80151be:	9311      	str	r3, [sp, #68]	; 0x44
 80151c0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80151c2:	fb92 f3f3 	sdiv	r3, r2, r3
 80151c6:	9a03      	ldr	r2, [sp, #12]
 80151c8:	9312      	str	r3, [sp, #72]	; 0x48
 80151ca:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80151ce:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80151d0:	eeb0 3a67 	vmov.f32	s6, s15
 80151d4:	bf08      	it	eq
 80151d6:	4613      	moveq	r3, r2
 80151d8:	eef0 2a47 	vmov.f32	s5, s14
 80151dc:	e789      	b.n	80150f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 80151de:	140f      	asrs	r7, r1, #16
 80151e0:	d418      	bmi.n	8015214 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80151e2:	f8d8 5008 	ldr.w	r5, [r8, #8]
 80151e6:	42bd      	cmp	r5, r7
 80151e8:	dd14      	ble.n	8015214 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80151ea:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80151ee:	d411      	bmi.n	8015214 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80151f0:	f8d8 400c 	ldr.w	r4, [r8, #12]
 80151f4:	4564      	cmp	r4, ip
 80151f6:	dd0d      	ble.n	8015214 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80151f8:	b22d      	sxth	r5, r5
 80151fa:	fb0c 7505 	mla	r5, ip, r5, r7
 80151fe:	9c01      	ldr	r4, [sp, #4]
 8015200:	5d64      	ldrb	r4, [r4, r5]
 8015202:	2cff      	cmp	r4, #255	; 0xff
 8015204:	d10c      	bne.n	8015220 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8015206:	9c00      	ldr	r4, [sp, #0]
 8015208:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 801520c:	f06f 0401 	mvn.w	r4, #1
 8015210:	4374      	muls	r4, r6
 8015212:	5305      	strh	r5, [r0, r4]
 8015214:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8015216:	4421      	add	r1, r4
 8015218:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801521a:	3e01      	subs	r6, #1
 801521c:	4422      	add	r2, r4
 801521e:	e79c      	b.n	801515a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8015220:	2c00      	cmp	r4, #0
 8015222:	d0f7      	beq.n	8015214 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8015224:	9f00      	ldr	r7, [sp, #0]
 8015226:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 801522a:	f06f 0501 	mvn.w	r5, #1
 801522e:	4375      	muls	r5, r6
 8015230:	9502      	str	r5, [sp, #8]
 8015232:	5b45      	ldrh	r5, [r0, r5]
 8015234:	fa1f fc84 	uxth.w	ip, r4
 8015238:	122f      	asrs	r7, r5, #8
 801523a:	43e4      	mvns	r4, r4
 801523c:	b2e4      	uxtb	r4, r4
 801523e:	ea4f 2e29 	mov.w	lr, r9, asr #8
 8015242:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8015246:	fb17 f704 	smulbb	r7, r7, r4
 801524a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801524e:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8015252:	00ed      	lsls	r5, r5, #3
 8015254:	fb0e 7e0c 	mla	lr, lr, ip, r7
 8015258:	b2ed      	uxtb	r5, r5
 801525a:	ea4f 07e9 	mov.w	r7, r9, asr #3
 801525e:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8015262:	fb15 f504 	smulbb	r5, r5, r4
 8015266:	fa5f f989 	uxtb.w	r9, r9
 801526a:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801526e:	fb09 550c 	mla	r5, r9, ip, r5
 8015272:	fb1a fa04 	smulbb	sl, sl, r4
 8015276:	fa1f fe8e 	uxth.w	lr, lr
 801527a:	b2ad      	uxth	r5, r5
 801527c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8015280:	fb07 a70c 	mla	r7, r7, ip, sl
 8015284:	f10e 0401 	add.w	r4, lr, #1
 8015288:	f105 0a01 	add.w	sl, r5, #1
 801528c:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 8015290:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015294:	b2bf      	uxth	r7, r7
 8015296:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801529a:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801529e:	ea4a 0e0e 	orr.w	lr, sl, lr
 80152a2:	f107 0a01 	add.w	sl, r7, #1
 80152a6:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80152aa:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80152ae:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80152b2:	9c02      	ldr	r4, [sp, #8]
 80152b4:	ea4e 0e0a 	orr.w	lr, lr, sl
 80152b8:	f820 e004 	strh.w	lr, [r0, r4]
 80152bc:	e7aa      	b.n	8015214 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80152be:	f04f 0900 	mov.w	r9, #0
 80152c2:	eba3 0409 	sub.w	r4, r3, r9
 80152c6:	2c00      	cmp	r4, #0
 80152c8:	f77f af4a 	ble.w	8015160 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80152cc:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 80152d0:	1414      	asrs	r4, r2, #16
 80152d2:	140d      	asrs	r5, r1, #16
 80152d4:	fb06 5504 	mla	r5, r6, r4, r5
 80152d8:	9c01      	ldr	r4, [sp, #4]
 80152da:	5d64      	ldrb	r4, [r4, r5]
 80152dc:	2cff      	cmp	r4, #255	; 0xff
 80152de:	d10b      	bne.n	80152f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 80152e0:	9c00      	ldr	r4, [sp, #0]
 80152e2:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 80152e6:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 80152ea:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80152ec:	4421      	add	r1, r4
 80152ee:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80152f0:	f109 0901 	add.w	r9, r9, #1
 80152f4:	4422      	add	r2, r4
 80152f6:	e7e4      	b.n	80152c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 80152f8:	2c00      	cmp	r4, #0
 80152fa:	d0f6      	beq.n	80152ea <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 80152fc:	9e00      	ldr	r6, [sp, #0]
 80152fe:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 8015302:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8015306:	b2a7      	uxth	r7, r4
 8015308:	122e      	asrs	r6, r5, #8
 801530a:	43e4      	mvns	r4, r4
 801530c:	b2e4      	uxtb	r4, r4
 801530e:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8015312:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8015316:	fb16 f604 	smulbb	r6, r6, r4
 801531a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801531e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8015322:	00ed      	lsls	r5, r5, #3
 8015324:	fb0c 6c07 	mla	ip, ip, r7, r6
 8015328:	b2ed      	uxtb	r5, r5
 801532a:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801532e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8015332:	fb15 f504 	smulbb	r5, r5, r4
 8015336:	fa5f fe8e 	uxtb.w	lr, lr
 801533a:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801533e:	fb0e 5507 	mla	r5, lr, r7, r5
 8015342:	fb1a fa04 	smulbb	sl, sl, r4
 8015346:	fa1f fc8c 	uxth.w	ip, ip
 801534a:	b2ad      	uxth	r5, r5
 801534c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8015350:	fb06 a607 	mla	r6, r6, r7, sl
 8015354:	f10c 0401 	add.w	r4, ip, #1
 8015358:	f105 0a01 	add.w	sl, r5, #1
 801535c:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8015360:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015364:	b2b6      	uxth	r6, r6
 8015366:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801536a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801536e:	ea4a 0c0c 	orr.w	ip, sl, ip
 8015372:	f106 0a01 	add.w	sl, r6, #1
 8015376:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801537a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801537e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015382:	ea4c 0c0a 	orr.w	ip, ip, sl
 8015386:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801538a:	e7ae      	b.n	80152ea <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801538c:	b005      	add	sp, #20
 801538e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015392 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015392:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015396:	b085      	sub	sp, #20
 8015398:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801539a:	9203      	str	r2, [sp, #12]
 801539c:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 80153a0:	9201      	str	r2, [sp, #4]
 80153a2:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80153a6:	9100      	str	r1, [sp, #0]
 80153a8:	6841      	ldr	r1, [r0, #4]
 80153aa:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 80153ae:	fb01 2404 	mla	r4, r1, r4, r2
 80153b2:	6802      	ldr	r2, [r0, #0]
 80153b4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80153b8:	f8de 2000 	ldr.w	r2, [lr]
 80153bc:	9202      	str	r2, [sp, #8]
 80153be:	9a01      	ldr	r2, [sp, #4]
 80153c0:	43d6      	mvns	r6, r2
 80153c2:	b2f6      	uxtb	r6, r6
 80153c4:	9a00      	ldr	r2, [sp, #0]
 80153c6:	2a00      	cmp	r2, #0
 80153c8:	dc03      	bgt.n	80153d2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 80153ca:	9a03      	ldr	r2, [sp, #12]
 80153cc:	2a00      	cmp	r2, #0
 80153ce:	f340 8124 	ble.w	801561a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 80153d2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80153d4:	f9be c008 	ldrsh.w	ip, [lr, #8]
 80153d8:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 80153dc:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80153e0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80153e2:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80153e6:	2b00      	cmp	r3, #0
 80153e8:	dd0e      	ble.n	8015408 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80153ea:	1408      	asrs	r0, r1, #16
 80153ec:	d405      	bmi.n	80153fa <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80153ee:	4560      	cmp	r0, ip
 80153f0:	da03      	bge.n	80153fa <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80153f2:	1410      	asrs	r0, r2, #16
 80153f4:	d401      	bmi.n	80153fa <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80153f6:	42b8      	cmp	r0, r7
 80153f8:	db07      	blt.n	801540a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80153fa:	9811      	ldr	r0, [sp, #68]	; 0x44
 80153fc:	4401      	add	r1, r0
 80153fe:	9812      	ldr	r0, [sp, #72]	; 0x48
 8015400:	3b01      	subs	r3, #1
 8015402:	4402      	add	r2, r0
 8015404:	3402      	adds	r4, #2
 8015406:	e7ee      	b.n	80153e6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8015408:	d06e      	beq.n	80154e8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801540a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801540c:	1e58      	subs	r0, r3, #1
 801540e:	fb05 1500 	mla	r5, r5, r0, r1
 8015412:	142d      	asrs	r5, r5, #16
 8015414:	d45c      	bmi.n	80154d0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8015416:	4565      	cmp	r5, ip
 8015418:	da5a      	bge.n	80154d0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801541a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801541c:	fb05 2000 	mla	r0, r5, r0, r2
 8015420:	1400      	asrs	r0, r0, #16
 8015422:	d455      	bmi.n	80154d0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8015424:	42b8      	cmp	r0, r7
 8015426:	da53      	bge.n	80154d0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8015428:	f8bd b004 	ldrh.w	fp, [sp, #4]
 801542c:	4699      	mov	r9, r3
 801542e:	46a2      	mov	sl, r4
 8015430:	f1b9 0f00 	cmp.w	r9, #0
 8015434:	dd54      	ble.n	80154e0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8015436:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801543a:	140d      	asrs	r5, r1, #16
 801543c:	1410      	asrs	r0, r2, #16
 801543e:	fb07 5000 	mla	r0, r7, r0, r5
 8015442:	9d02      	ldr	r5, [sp, #8]
 8015444:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8015448:	f8ba 5000 	ldrh.w	r5, [sl]
 801544c:	122f      	asrs	r7, r5, #8
 801544e:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8015452:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8015456:	fb17 f706 	smulbb	r7, r7, r6
 801545a:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801545e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8015462:	00ed      	lsls	r5, r5, #3
 8015464:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8015468:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801546c:	10c7      	asrs	r7, r0, #3
 801546e:	b2ed      	uxtb	r5, r5
 8015470:	00c0      	lsls	r0, r0, #3
 8015472:	fb18 f806 	smulbb	r8, r8, r6
 8015476:	fb15 f506 	smulbb	r5, r5, r6
 801547a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801547e:	b2c0      	uxtb	r0, r0
 8015480:	fa1f fc8c 	uxth.w	ip, ip
 8015484:	fb07 870b 	mla	r7, r7, fp, r8
 8015488:	fb00 500b 	mla	r0, r0, fp, r5
 801548c:	b280      	uxth	r0, r0
 801548e:	b2bf      	uxth	r7, r7
 8015490:	f10c 0501 	add.w	r5, ip, #1
 8015494:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8015498:	f107 0801 	add.w	r8, r7, #1
 801549c:	1c45      	adds	r5, r0, #1
 801549e:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80154a2:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 80154a6:	9811      	ldr	r0, [sp, #68]	; 0x44
 80154a8:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80154ac:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80154b0:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80154b4:	ea45 0c0c 	orr.w	ip, r5, ip
 80154b8:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80154bc:	4401      	add	r1, r0
 80154be:	9812      	ldr	r0, [sp, #72]	; 0x48
 80154c0:	ea4c 0c08 	orr.w	ip, ip, r8
 80154c4:	f82a cb02 	strh.w	ip, [sl], #2
 80154c8:	4402      	add	r2, r0
 80154ca:	f109 39ff 	add.w	r9, r9, #4294967295
 80154ce:	e7af      	b.n	8015430 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80154d0:	f8bd a004 	ldrh.w	sl, [sp, #4]
 80154d4:	f04f 0800 	mov.w	r8, #0
 80154d8:	eb03 0008 	add.w	r0, r3, r8
 80154dc:	2800      	cmp	r0, #0
 80154de:	dc41      	bgt.n	8015564 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 80154e0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80154e4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80154e8:	9b00      	ldr	r3, [sp, #0]
 80154ea:	2b00      	cmp	r3, #0
 80154ec:	f340 8095 	ble.w	801561a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 80154f0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80154f4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80154f8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80154fc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80154fe:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015502:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015506:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801550a:	eef0 6a62 	vmov.f32	s13, s5
 801550e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015512:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015516:	ee77 2a62 	vsub.f32	s5, s14, s5
 801551a:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 801551e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015522:	eef0 6a43 	vmov.f32	s13, s6
 8015526:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801552a:	ee12 2a90 	vmov	r2, s5
 801552e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015532:	fb92 f3f3 	sdiv	r3, r2, r3
 8015536:	ee13 2a10 	vmov	r2, s6
 801553a:	9311      	str	r3, [sp, #68]	; 0x44
 801553c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801553e:	fb92 f3f3 	sdiv	r3, r2, r3
 8015542:	9312      	str	r3, [sp, #72]	; 0x48
 8015544:	9b00      	ldr	r3, [sp, #0]
 8015546:	9a03      	ldr	r2, [sp, #12]
 8015548:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801554c:	3b01      	subs	r3, #1
 801554e:	9300      	str	r3, [sp, #0]
 8015550:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 8015554:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015556:	eeb0 3a67 	vmov.f32	s6, s15
 801555a:	bf08      	it	eq
 801555c:	4613      	moveq	r3, r2
 801555e:	eef0 2a47 	vmov.f32	s5, s14
 8015562:	e72f      	b.n	80153c4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8015564:	140f      	asrs	r7, r1, #16
 8015566:	d451      	bmi.n	801560c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8015568:	f8de 5008 	ldr.w	r5, [lr, #8]
 801556c:	42bd      	cmp	r5, r7
 801556e:	dd4d      	ble.n	801560c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8015570:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8015574:	d44a      	bmi.n	801560c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8015576:	f8de 000c 	ldr.w	r0, [lr, #12]
 801557a:	4560      	cmp	r0, ip
 801557c:	dd46      	ble.n	801560c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801557e:	b22d      	sxth	r5, r5
 8015580:	fb0c 7505 	mla	r5, ip, r5, r7
 8015584:	9802      	ldr	r0, [sp, #8]
 8015586:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 801558a:	f06f 0501 	mvn.w	r5, #1
 801558e:	fb05 fb08 	mul.w	fp, r5, r8
 8015592:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8015596:	f834 500b 	ldrh.w	r5, [r4, fp]
 801559a:	122f      	asrs	r7, r5, #8
 801559c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80155a0:	fb17 f706 	smulbb	r7, r7, r6
 80155a4:	ea4f 09e5 	mov.w	r9, r5, asr #3
 80155a8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80155ac:	00ed      	lsls	r5, r5, #3
 80155ae:	fb0c 7c0a 	mla	ip, ip, sl, r7
 80155b2:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 80155b6:	10c7      	asrs	r7, r0, #3
 80155b8:	b2ed      	uxtb	r5, r5
 80155ba:	00c0      	lsls	r0, r0, #3
 80155bc:	fb19 f906 	smulbb	r9, r9, r6
 80155c0:	fb15 f506 	smulbb	r5, r5, r6
 80155c4:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80155c8:	b2c0      	uxtb	r0, r0
 80155ca:	fa1f fc8c 	uxth.w	ip, ip
 80155ce:	fb07 970a 	mla	r7, r7, sl, r9
 80155d2:	fb00 500a 	mla	r0, r0, sl, r5
 80155d6:	b2bf      	uxth	r7, r7
 80155d8:	b280      	uxth	r0, r0
 80155da:	f10c 0501 	add.w	r5, ip, #1
 80155de:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80155e2:	f107 0901 	add.w	r9, r7, #1
 80155e6:	1c45      	adds	r5, r0, #1
 80155e8:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80155ec:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 80155f0:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80155f4:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80155f8:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80155fc:	ea45 0c0c 	orr.w	ip, r5, ip
 8015600:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8015604:	ea4c 0c09 	orr.w	ip, ip, r9
 8015608:	f824 c00b 	strh.w	ip, [r4, fp]
 801560c:	9811      	ldr	r0, [sp, #68]	; 0x44
 801560e:	4401      	add	r1, r0
 8015610:	9812      	ldr	r0, [sp, #72]	; 0x48
 8015612:	f108 38ff 	add.w	r8, r8, #4294967295
 8015616:	4402      	add	r2, r0
 8015618:	e75e      	b.n	80154d8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 801561a:	b005      	add	sp, #20
 801561c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015620 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015620:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015624:	b085      	sub	sp, #20
 8015626:	4693      	mov	fp, r2
 8015628:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801562a:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801562c:	6870      	ldr	r0, [r6, #4]
 801562e:	9101      	str	r1, [sp, #4]
 8015630:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8015634:	fb00 2404 	mla	r4, r0, r4, r2
 8015638:	6832      	ldr	r2, [r6, #0]
 801563a:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801563e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015642:	682a      	ldr	r2, [r5, #0]
 8015644:	9202      	str	r2, [sp, #8]
 8015646:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801564a:	9a01      	ldr	r2, [sp, #4]
 801564c:	2a00      	cmp	r2, #0
 801564e:	dc03      	bgt.n	8015658 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8015650:	f1bb 0f00 	cmp.w	fp, #0
 8015654:	f340 809a 	ble.w	801578c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8015658:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801565a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801565e:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8015662:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8015666:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015668:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801566c:	2b00      	cmp	r3, #0
 801566e:	dd0c      	ble.n	801568a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8015670:	1406      	asrs	r6, r0, #16
 8015672:	d405      	bmi.n	8015680 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8015674:	454e      	cmp	r6, r9
 8015676:	da03      	bge.n	8015680 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8015678:	1416      	asrs	r6, r2, #16
 801567a:	d401      	bmi.n	8015680 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801567c:	4546      	cmp	r6, r8
 801567e:	db05      	blt.n	801568c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8015680:	4470      	add	r0, lr
 8015682:	4462      	add	r2, ip
 8015684:	3b01      	subs	r3, #1
 8015686:	3402      	adds	r4, #2
 8015688:	e7f0      	b.n	801566c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801568a:	d00f      	beq.n	80156ac <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801568c:	1e5e      	subs	r6, r3, #1
 801568e:	fb0e 0706 	mla	r7, lr, r6, r0
 8015692:	143f      	asrs	r7, r7, #16
 8015694:	d541      	bpl.n	801571a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 8015696:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801569a:	4698      	mov	r8, r3
 801569c:	9603      	str	r6, [sp, #12]
 801569e:	f1b8 0f00 	cmp.w	r8, #0
 80156a2:	dc56      	bgt.n	8015752 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 80156a4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80156a8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80156ac:	9b01      	ldr	r3, [sp, #4]
 80156ae:	2b00      	cmp	r3, #0
 80156b0:	dd6c      	ble.n	801578c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 80156b2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80156b6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80156ba:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80156be:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80156c0:	ee31 1a05 	vadd.f32	s2, s2, s10
 80156c4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80156c8:	eeb0 6a62 	vmov.f32	s12, s5
 80156cc:	ee61 7a27 	vmul.f32	s15, s2, s15
 80156d0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80156d4:	ee77 2a62 	vsub.f32	s5, s14, s5
 80156d8:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80156dc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80156e0:	eeb0 6a43 	vmov.f32	s12, s6
 80156e4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80156e8:	ee12 2a90 	vmov	r2, s5
 80156ec:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80156f0:	fb92 fef3 	sdiv	lr, r2, r3
 80156f4:	ee13 2a10 	vmov	r2, s6
 80156f8:	fb92 fcf3 	sdiv	ip, r2, r3
 80156fc:	9b01      	ldr	r3, [sp, #4]
 80156fe:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015702:	3b01      	subs	r3, #1
 8015704:	9301      	str	r3, [sp, #4]
 8015706:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801570a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801570c:	eeb0 3a67 	vmov.f32	s6, s15
 8015710:	bf08      	it	eq
 8015712:	465b      	moveq	r3, fp
 8015714:	eef0 2a47 	vmov.f32	s5, s14
 8015718:	e797      	b.n	801564a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801571a:	454f      	cmp	r7, r9
 801571c:	dabb      	bge.n	8015696 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801571e:	fb0c 2606 	mla	r6, ip, r6, r2
 8015722:	1436      	asrs	r6, r6, #16
 8015724:	d4b7      	bmi.n	8015696 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8015726:	4546      	cmp	r6, r8
 8015728:	dab5      	bge.n	8015696 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801572a:	461e      	mov	r6, r3
 801572c:	46a0      	mov	r8, r4
 801572e:	2e00      	cmp	r6, #0
 8015730:	ddb8      	ble.n	80156a4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8015732:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8015736:	9902      	ldr	r1, [sp, #8]
 8015738:	1417      	asrs	r7, r2, #16
 801573a:	ea4f 4920 	mov.w	r9, r0, asr #16
 801573e:	fb0a 9707 	mla	r7, sl, r7, r9
 8015742:	4470      	add	r0, lr
 8015744:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8015748:	f828 7b02 	strh.w	r7, [r8], #2
 801574c:	4462      	add	r2, ip
 801574e:	3e01      	subs	r6, #1
 8015750:	e7ed      	b.n	801572e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 8015752:	ea5f 4920 	movs.w	r9, r0, asr #16
 8015756:	d414      	bmi.n	8015782 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8015758:	68ae      	ldr	r6, [r5, #8]
 801575a:	454e      	cmp	r6, r9
 801575c:	dd11      	ble.n	8015782 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801575e:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8015762:	d40e      	bmi.n	8015782 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8015764:	68ef      	ldr	r7, [r5, #12]
 8015766:	4557      	cmp	r7, sl
 8015768:	dd0b      	ble.n	8015782 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801576a:	b236      	sxth	r6, r6
 801576c:	fb0a 9606 	mla	r6, sl, r6, r9
 8015770:	9f02      	ldr	r7, [sp, #8]
 8015772:	f06f 0101 	mvn.w	r1, #1
 8015776:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801577a:	fb01 f608 	mul.w	r6, r1, r8
 801577e:	9903      	ldr	r1, [sp, #12]
 8015780:	538f      	strh	r7, [r1, r6]
 8015782:	4470      	add	r0, lr
 8015784:	4462      	add	r2, ip
 8015786:	f108 38ff 	add.w	r8, r8, #4294967295
 801578a:	e788      	b.n	801569e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801578c:	b005      	add	sp, #20
 801578e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015792 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015792:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015796:	b087      	sub	sp, #28
 8015798:	468b      	mov	fp, r1
 801579a:	9815      	ldr	r0, [sp, #84]	; 0x54
 801579c:	9203      	str	r2, [sp, #12]
 801579e:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80157a2:	9204      	str	r2, [sp, #16]
 80157a4:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 80157a8:	6841      	ldr	r1, [r0, #4]
 80157aa:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 80157ae:	fb01 2505 	mla	r5, r1, r5, r2
 80157b2:	6802      	ldr	r2, [r0, #0]
 80157b4:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 80157b8:	f8d9 2000 	ldr.w	r2, [r9]
 80157bc:	9201      	str	r2, [sp, #4]
 80157be:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80157c2:	f1bb 0f00 	cmp.w	fp, #0
 80157c6:	dc03      	bgt.n	80157d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80157c8:	9a03      	ldr	r2, [sp, #12]
 80157ca:	2a00      	cmp	r2, #0
 80157cc:	f340 8159 	ble.w	8015a82 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 80157d0:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80157d2:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 80157d6:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 80157da:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80157de:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80157e0:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80157e4:	2b00      	cmp	r3, #0
 80157e6:	dd0e      	ble.n	8015806 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80157e8:	1402      	asrs	r2, r0, #16
 80157ea:	d405      	bmi.n	80157f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80157ec:	42ba      	cmp	r2, r7
 80157ee:	da03      	bge.n	80157f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80157f0:	140a      	asrs	r2, r1, #16
 80157f2:	d401      	bmi.n	80157f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80157f4:	42b2      	cmp	r2, r6
 80157f6:	db07      	blt.n	8015808 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80157f8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80157fa:	4410      	add	r0, r2
 80157fc:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80157fe:	3b01      	subs	r3, #1
 8015800:	4411      	add	r1, r2
 8015802:	3502      	adds	r5, #2
 8015804:	e7ee      	b.n	80157e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8015806:	d017      	beq.n	8015838 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8015808:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801580a:	1e5a      	subs	r2, r3, #1
 801580c:	fb04 0402 	mla	r4, r4, r2, r0
 8015810:	1424      	asrs	r4, r4, #16
 8015812:	d409      	bmi.n	8015828 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8015814:	42bc      	cmp	r4, r7
 8015816:	da07      	bge.n	8015828 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8015818:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801581a:	fb04 1202 	mla	r2, r4, r2, r1
 801581e:	1412      	asrs	r2, r2, #16
 8015820:	d402      	bmi.n	8015828 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8015822:	42b2      	cmp	r2, r6
 8015824:	f2c0 80bf 	blt.w	80159a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8015828:	2700      	movs	r7, #0
 801582a:	19da      	adds	r2, r3, r7
 801582c:	2a00      	cmp	r2, #0
 801582e:	dc3e      	bgt.n	80158ae <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8015830:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015834:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8015838:	f1bb 0f00 	cmp.w	fp, #0
 801583c:	f340 8121 	ble.w	8015a82 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8015840:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015844:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015848:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801584c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801584e:	f1bb 0b01 	subs.w	fp, fp, #1
 8015852:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015856:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801585a:	eeb0 6a62 	vmov.f32	s12, s5
 801585e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015862:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015866:	ee77 2a62 	vsub.f32	s5, s14, s5
 801586a:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801586e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015872:	eeb0 6a43 	vmov.f32	s12, s6
 8015876:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801587a:	ee12 2a90 	vmov	r2, s5
 801587e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015882:	fb92 f3f3 	sdiv	r3, r2, r3
 8015886:	ee13 2a10 	vmov	r2, s6
 801588a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801588e:	9313      	str	r3, [sp, #76]	; 0x4c
 8015890:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015892:	fb92 f3f3 	sdiv	r3, r2, r3
 8015896:	9a03      	ldr	r2, [sp, #12]
 8015898:	9314      	str	r3, [sp, #80]	; 0x50
 801589a:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801589e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80158a0:	eeb0 3a67 	vmov.f32	s6, s15
 80158a4:	bf08      	it	eq
 80158a6:	4613      	moveq	r3, r2
 80158a8:	eef0 2a47 	vmov.f32	s5, s14
 80158ac:	e789      	b.n	80157c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 80158ae:	1406      	asrs	r6, r0, #16
 80158b0:	d42d      	bmi.n	801590e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80158b2:	f8d9 4008 	ldr.w	r4, [r9, #8]
 80158b6:	42b4      	cmp	r4, r6
 80158b8:	dd29      	ble.n	801590e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80158ba:	ea5f 4c21 	movs.w	ip, r1, asr #16
 80158be:	d426      	bmi.n	801590e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80158c0:	f8d9 200c 	ldr.w	r2, [r9, #12]
 80158c4:	4562      	cmp	r2, ip
 80158c6:	dd22      	ble.n	801590e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80158c8:	b224      	sxth	r4, r4
 80158ca:	9a01      	ldr	r2, [sp, #4]
 80158cc:	fb0c 6404 	mla	r4, ip, r4, r6
 80158d0:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 80158d4:	0e22      	lsrs	r2, r4, #24
 80158d6:	d01a      	beq.n	801590e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80158d8:	9e04      	ldr	r6, [sp, #16]
 80158da:	4372      	muls	r2, r6
 80158dc:	1c56      	adds	r6, r2, #1
 80158de:	eb06 2222 	add.w	r2, r6, r2, asr #8
 80158e2:	1212      	asrs	r2, r2, #8
 80158e4:	0a26      	lsrs	r6, r4, #8
 80158e6:	2aff      	cmp	r2, #255	; 0xff
 80158e8:	9605      	str	r6, [sp, #20]
 80158ea:	d116      	bne.n	801591a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 80158ec:	f06f 0201 	mvn.w	r2, #1
 80158f0:	fb02 fc07 	mul.w	ip, r2, r7
 80158f4:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 80158f8:	0962      	lsrs	r2, r4, #5
 80158fa:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80158fe:	f026 0607 	bic.w	r6, r6, #7
 8015902:	4316      	orrs	r6, r2
 8015904:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8015908:	4326      	orrs	r6, r4
 801590a:	f825 600c 	strh.w	r6, [r5, ip]
 801590e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8015910:	4410      	add	r0, r2
 8015912:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8015914:	3f01      	subs	r7, #1
 8015916:	4411      	add	r1, r2
 8015918:	e787      	b.n	801582a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801591a:	f06f 0601 	mvn.w	r6, #1
 801591e:	437e      	muls	r6, r7
 8015920:	fa1f fa82 	uxth.w	sl, r2
 8015924:	f835 8006 	ldrh.w	r8, [r5, r6]
 8015928:	9602      	str	r6, [sp, #8]
 801592a:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801592e:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 8015932:	43d2      	mvns	r2, r2
 8015934:	b2d2      	uxtb	r2, r2
 8015936:	fb1c fc0a 	smulbb	ip, ip, sl
 801593a:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801593e:	fb0e ce02 	mla	lr, lr, r2, ip
 8015942:	b2e4      	uxtb	r4, r4
 8015944:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8015948:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801594c:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8015950:	fa5f f888 	uxtb.w	r8, r8
 8015954:	fb14 f40a 	smulbb	r4, r4, sl
 8015958:	fb08 4402 	mla	r4, r8, r2, r4
 801595c:	fa1f fe8e 	uxth.w	lr, lr
 8015960:	fb16 f60a 	smulbb	r6, r6, sl
 8015964:	b2a4      	uxth	r4, r4
 8015966:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801596a:	fb0c 6c02 	mla	ip, ip, r2, r6
 801596e:	f10e 0201 	add.w	r2, lr, #1
 8015972:	1c66      	adds	r6, r4, #1
 8015974:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8015978:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801597c:	fa1f fc8c 	uxth.w	ip, ip
 8015980:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8015984:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8015988:	ea46 0e0e 	orr.w	lr, r6, lr
 801598c:	f10c 0601 	add.w	r6, ip, #1
 8015990:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8015994:	0976      	lsrs	r6, r6, #5
 8015996:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801599a:	9a02      	ldr	r2, [sp, #8]
 801599c:	ea4e 0e06 	orr.w	lr, lr, r6
 80159a0:	f825 e002 	strh.w	lr, [r5, r2]
 80159a4:	e7b3      	b.n	801590e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80159a6:	f04f 0800 	mov.w	r8, #0
 80159aa:	eba3 0208 	sub.w	r2, r3, r8
 80159ae:	2a00      	cmp	r2, #0
 80159b0:	f77f af3e 	ble.w	8015830 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80159b4:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 80159b8:	1404      	asrs	r4, r0, #16
 80159ba:	140a      	asrs	r2, r1, #16
 80159bc:	fb06 4202 	mla	r2, r6, r2, r4
 80159c0:	9c01      	ldr	r4, [sp, #4]
 80159c2:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 80159c6:	0e22      	lsrs	r2, r4, #24
 80159c8:	d016      	beq.n	80159f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 80159ca:	9e04      	ldr	r6, [sp, #16]
 80159cc:	4372      	muls	r2, r6
 80159ce:	1c56      	adds	r6, r2, #1
 80159d0:	eb06 2222 	add.w	r2, r6, r2, asr #8
 80159d4:	1212      	asrs	r2, r2, #8
 80159d6:	2aff      	cmp	r2, #255	; 0xff
 80159d8:	ea4f 2614 	mov.w	r6, r4, lsr #8
 80159dc:	d113      	bne.n	8015a06 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 80159de:	0962      	lsrs	r2, r4, #5
 80159e0:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 80159e4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80159e8:	f026 0607 	bic.w	r6, r6, #7
 80159ec:	4316      	orrs	r6, r2
 80159ee:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 80159f2:	4326      	orrs	r6, r4
 80159f4:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 80159f8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80159fa:	4410      	add	r0, r2
 80159fc:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80159fe:	f108 0801 	add.w	r8, r8, #1
 8015a02:	4411      	add	r1, r2
 8015a04:	e7d1      	b.n	80159aa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 8015a06:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 8015a0a:	fa1f fa82 	uxth.w	sl, r2
 8015a0e:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8015a12:	f3c4 4707 	ubfx	r7, r4, #16, #8
 8015a16:	43d2      	mvns	r2, r2
 8015a18:	b2d2      	uxtb	r2, r2
 8015a1a:	fb17 f70a 	smulbb	r7, r7, sl
 8015a1e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8015a22:	fb0c 7c02 	mla	ip, ip, r2, r7
 8015a26:	b2e4      	uxtb	r4, r4
 8015a28:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8015a2c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8015a30:	fa5f fe8e 	uxtb.w	lr, lr
 8015a34:	fb14 f40a 	smulbb	r4, r4, sl
 8015a38:	fb0e 4402 	mla	r4, lr, r2, r4
 8015a3c:	b2f6      	uxtb	r6, r6
 8015a3e:	fa1f fc8c 	uxth.w	ip, ip
 8015a42:	fb16 f60a 	smulbb	r6, r6, sl
 8015a46:	b2a4      	uxth	r4, r4
 8015a48:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8015a4c:	fb07 6702 	mla	r7, r7, r2, r6
 8015a50:	f10c 0201 	add.w	r2, ip, #1
 8015a54:	1c66      	adds	r6, r4, #1
 8015a56:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8015a5a:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8015a5e:	b2bf      	uxth	r7, r7
 8015a60:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8015a64:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8015a68:	ea46 0c0c 	orr.w	ip, r6, ip
 8015a6c:	1c7e      	adds	r6, r7, #1
 8015a6e:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8015a72:	0976      	lsrs	r6, r6, #5
 8015a74:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8015a78:	ea4c 0c06 	orr.w	ip, ip, r6
 8015a7c:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 8015a80:	e7ba      	b.n	80159f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8015a82:	b007      	add	sp, #28
 8015a84:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015a88 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015a88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015a8c:	b085      	sub	sp, #20
 8015a8e:	468b      	mov	fp, r1
 8015a90:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8015a92:	9203      	str	r2, [sp, #12]
 8015a94:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8015a98:	6841      	ldr	r1, [r0, #4]
 8015a9a:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8015a9e:	fb01 2404 	mla	r4, r1, r4, r2
 8015aa2:	6802      	ldr	r2, [r0, #0]
 8015aa4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015aa8:	f8d8 2000 	ldr.w	r2, [r8]
 8015aac:	9201      	str	r2, [sp, #4]
 8015aae:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8015ab2:	f1bb 0f00 	cmp.w	fp, #0
 8015ab6:	dc03      	bgt.n	8015ac0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8015ab8:	9a03      	ldr	r2, [sp, #12]
 8015aba:	2a00      	cmp	r2, #0
 8015abc:	f340 814f 	ble.w	8015d5e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8015ac0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8015ac2:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8015ac6:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8015aca:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8015ace:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015ad0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8015ad4:	2b00      	cmp	r3, #0
 8015ad6:	dd0e      	ble.n	8015af6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8015ad8:	1408      	asrs	r0, r1, #16
 8015ada:	d405      	bmi.n	8015ae8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8015adc:	42b8      	cmp	r0, r7
 8015ade:	da03      	bge.n	8015ae8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8015ae0:	1410      	asrs	r0, r2, #16
 8015ae2:	d401      	bmi.n	8015ae8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8015ae4:	42b0      	cmp	r0, r6
 8015ae6:	db07      	blt.n	8015af8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8015ae8:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015aea:	4401      	add	r1, r0
 8015aec:	9812      	ldr	r0, [sp, #72]	; 0x48
 8015aee:	3b01      	subs	r3, #1
 8015af0:	4402      	add	r2, r0
 8015af2:	3402      	adds	r4, #2
 8015af4:	e7ee      	b.n	8015ad4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8015af6:	d017      	beq.n	8015b28 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8015af8:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8015afa:	1e58      	subs	r0, r3, #1
 8015afc:	fb05 1500 	mla	r5, r5, r0, r1
 8015b00:	142d      	asrs	r5, r5, #16
 8015b02:	d409      	bmi.n	8015b18 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8015b04:	42bd      	cmp	r5, r7
 8015b06:	da07      	bge.n	8015b18 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8015b08:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8015b0a:	fb05 2000 	mla	r0, r5, r0, r2
 8015b0e:	1400      	asrs	r0, r0, #16
 8015b10:	d402      	bmi.n	8015b18 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8015b12:	42b0      	cmp	r0, r6
 8015b14:	f2c0 80ba 	blt.w	8015c8c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8015b18:	2600      	movs	r6, #0
 8015b1a:	1998      	adds	r0, r3, r6
 8015b1c:	2800      	cmp	r0, #0
 8015b1e:	dc3e      	bgt.n	8015b9e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8015b20:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015b24:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015b28:	f1bb 0f00 	cmp.w	fp, #0
 8015b2c:	f340 8117 	ble.w	8015d5e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8015b30:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015b34:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015b38:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015b3c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015b3e:	f1bb 0b01 	subs.w	fp, fp, #1
 8015b42:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015b46:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015b4a:	eeb0 6a62 	vmov.f32	s12, s5
 8015b4e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015b52:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015b56:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015b5a:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8015b5e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015b62:	eeb0 6a43 	vmov.f32	s12, s6
 8015b66:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015b6a:	ee12 2a90 	vmov	r2, s5
 8015b6e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015b72:	fb92 f3f3 	sdiv	r3, r2, r3
 8015b76:	ee13 2a10 	vmov	r2, s6
 8015b7a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015b7e:	9311      	str	r3, [sp, #68]	; 0x44
 8015b80:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015b82:	fb92 f3f3 	sdiv	r3, r2, r3
 8015b86:	9a03      	ldr	r2, [sp, #12]
 8015b88:	9312      	str	r3, [sp, #72]	; 0x48
 8015b8a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8015b8e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015b90:	eeb0 3a67 	vmov.f32	s6, s15
 8015b94:	bf08      	it	eq
 8015b96:	4613      	moveq	r3, r2
 8015b98:	eef0 2a47 	vmov.f32	s5, s14
 8015b9c:	e789      	b.n	8015ab2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8015b9e:	140f      	asrs	r7, r1, #16
 8015ba0:	d424      	bmi.n	8015bec <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8015ba2:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8015ba6:	42bd      	cmp	r5, r7
 8015ba8:	dd20      	ble.n	8015bec <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8015baa:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8015bae:	d41d      	bmi.n	8015bec <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8015bb0:	f8d8 000c 	ldr.w	r0, [r8, #12]
 8015bb4:	4560      	cmp	r0, ip
 8015bb6:	dd19      	ble.n	8015bec <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8015bb8:	b22d      	sxth	r5, r5
 8015bba:	fb0c 7505 	mla	r5, ip, r5, r7
 8015bbe:	9801      	ldr	r0, [sp, #4]
 8015bc0:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 8015bc4:	0e07      	lsrs	r7, r0, #24
 8015bc6:	2fff      	cmp	r7, #255	; 0xff
 8015bc8:	d116      	bne.n	8015bf8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8015bca:	f06f 0501 	mvn.w	r5, #1
 8015bce:	fb05 f706 	mul.w	r7, r5, r6
 8015bd2:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 8015bd6:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8015bda:	0945      	lsrs	r5, r0, #5
 8015bdc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8015be0:	ea4c 0505 	orr.w	r5, ip, r5
 8015be4:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8015be8:	4305      	orrs	r5, r0
 8015bea:	53e5      	strh	r5, [r4, r7]
 8015bec:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015bee:	4401      	add	r1, r0
 8015bf0:	9812      	ldr	r0, [sp, #72]	; 0x48
 8015bf2:	3e01      	subs	r6, #1
 8015bf4:	4402      	add	r2, r0
 8015bf6:	e790      	b.n	8015b1a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8015bf8:	b2fd      	uxtb	r5, r7
 8015bfa:	2f00      	cmp	r7, #0
 8015bfc:	d0f6      	beq.n	8015bec <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8015bfe:	f06f 0701 	mvn.w	r7, #1
 8015c02:	4377      	muls	r7, r6
 8015c04:	fa1f f985 	uxth.w	r9, r5
 8015c08:	f834 e007 	ldrh.w	lr, [r4, r7]
 8015c0c:	9702      	str	r7, [sp, #8]
 8015c0e:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8015c12:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8015c16:	43ed      	mvns	r5, r5
 8015c18:	b2ed      	uxtb	r5, r5
 8015c1a:	fb17 f709 	smulbb	r7, r7, r9
 8015c1e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8015c22:	fb0c 7c05 	mla	ip, ip, r5, r7
 8015c26:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8015c2a:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8015c2e:	b2c0      	uxtb	r0, r0
 8015c30:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8015c34:	fa5f fe8e 	uxtb.w	lr, lr
 8015c38:	fb10 f009 	smulbb	r0, r0, r9
 8015c3c:	fb0e 0005 	mla	r0, lr, r5, r0
 8015c40:	b280      	uxth	r0, r0
 8015c42:	fa1f fc8c 	uxth.w	ip, ip
 8015c46:	fb1a fa09 	smulbb	sl, sl, r9
 8015c4a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8015c4e:	fb07 a705 	mla	r7, r7, r5, sl
 8015c52:	f100 0a01 	add.w	sl, r0, #1
 8015c56:	f10c 0501 	add.w	r5, ip, #1
 8015c5a:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8015c5e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8015c62:	b2bf      	uxth	r7, r7
 8015c64:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015c68:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8015c6c:	ea4a 0c0c 	orr.w	ip, sl, ip
 8015c70:	f107 0a01 	add.w	sl, r7, #1
 8015c74:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8015c78:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015c7c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015c80:	9802      	ldr	r0, [sp, #8]
 8015c82:	ea4c 0c0a 	orr.w	ip, ip, sl
 8015c86:	f824 c000 	strh.w	ip, [r4, r0]
 8015c8a:	e7af      	b.n	8015bec <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8015c8c:	f04f 0e00 	mov.w	lr, #0
 8015c90:	eba3 000e 	sub.w	r0, r3, lr
 8015c94:	2800      	cmp	r0, #0
 8015c96:	f77f af43 	ble.w	8015b20 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8015c9a:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8015c9e:	140d      	asrs	r5, r1, #16
 8015ca0:	1410      	asrs	r0, r2, #16
 8015ca2:	fb06 5000 	mla	r0, r6, r0, r5
 8015ca6:	9d01      	ldr	r5, [sp, #4]
 8015ca8:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8015cac:	0e2e      	lsrs	r6, r5, #24
 8015cae:	2eff      	cmp	r6, #255	; 0xff
 8015cb0:	d112      	bne.n	8015cd8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 8015cb2:	482c      	ldr	r0, [pc, #176]	; (8015d64 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 8015cb4:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8015cb8:	0968      	lsrs	r0, r5, #5
 8015cba:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8015cbe:	4330      	orrs	r0, r6
 8015cc0:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8015cc4:	4328      	orrs	r0, r5
 8015cc6:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 8015cca:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015ccc:	4401      	add	r1, r0
 8015cce:	9812      	ldr	r0, [sp, #72]	; 0x48
 8015cd0:	f10e 0e01 	add.w	lr, lr, #1
 8015cd4:	4402      	add	r2, r0
 8015cd6:	e7db      	b.n	8015c90 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 8015cd8:	b2f0      	uxtb	r0, r6
 8015cda:	2e00      	cmp	r6, #0
 8015cdc:	d0f5      	beq.n	8015cca <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8015cde:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8015ce2:	fa1f f980 	uxth.w	r9, r0
 8015ce6:	ea4f 272c 	mov.w	r7, ip, asr #8
 8015cea:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8015cee:	43c0      	mvns	r0, r0
 8015cf0:	b2c0      	uxtb	r0, r0
 8015cf2:	fb16 f609 	smulbb	r6, r6, r9
 8015cf6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8015cfa:	fb07 6700 	mla	r7, r7, r0, r6
 8015cfe:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8015d02:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8015d06:	b2ed      	uxtb	r5, r5
 8015d08:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8015d0c:	fa5f fc8c 	uxtb.w	ip, ip
 8015d10:	fb15 f509 	smulbb	r5, r5, r9
 8015d14:	fb0c 5500 	mla	r5, ip, r0, r5
 8015d18:	b2bf      	uxth	r7, r7
 8015d1a:	fb1a fa09 	smulbb	sl, sl, r9
 8015d1e:	b2ad      	uxth	r5, r5
 8015d20:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8015d24:	fb06 a600 	mla	r6, r6, r0, sl
 8015d28:	1c78      	adds	r0, r7, #1
 8015d2a:	f105 0a01 	add.w	sl, r5, #1
 8015d2e:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8015d32:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015d36:	b2b6      	uxth	r6, r6
 8015d38:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015d3c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8015d40:	ea4a 0707 	orr.w	r7, sl, r7
 8015d44:	f106 0a01 	add.w	sl, r6, #1
 8015d48:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8015d4c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015d50:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015d54:	ea47 070a 	orr.w	r7, r7, sl
 8015d58:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 8015d5c:	e7b5      	b.n	8015cca <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8015d5e:	b005      	add	sp, #20
 8015d60:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015d64:	fffff800 	.word	0xfffff800

08015d68 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015d68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015d6c:	b087      	sub	sp, #28
 8015d6e:	468b      	mov	fp, r1
 8015d70:	9815      	ldr	r0, [sp, #84]	; 0x54
 8015d72:	9203      	str	r2, [sp, #12]
 8015d74:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8015d78:	9204      	str	r2, [sp, #16]
 8015d7a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8015d7e:	6841      	ldr	r1, [r0, #4]
 8015d80:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 8015d84:	fb01 2404 	mla	r4, r1, r4, r2
 8015d88:	6802      	ldr	r2, [r0, #0]
 8015d8a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015d8e:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8015d92:	3201      	adds	r2, #1
 8015d94:	f022 0201 	bic.w	r2, r2, #1
 8015d98:	9200      	str	r2, [sp, #0]
 8015d9a:	f8d9 2000 	ldr.w	r2, [r9]
 8015d9e:	9201      	str	r2, [sp, #4]
 8015da0:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8015da4:	f1bb 0f00 	cmp.w	fp, #0
 8015da8:	dc03      	bgt.n	8015db2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8015daa:	9a03      	ldr	r2, [sp, #12]
 8015dac:	2a00      	cmp	r2, #0
 8015dae:	f340 8169 	ble.w	8016084 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8015db2:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8015db4:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8015db8:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8015dbc:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8015dc0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8015dc2:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8015dc6:	2b00      	cmp	r3, #0
 8015dc8:	dd0e      	ble.n	8015de8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8015dca:	1402      	asrs	r2, r0, #16
 8015dcc:	d405      	bmi.n	8015dda <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8015dce:	42ba      	cmp	r2, r7
 8015dd0:	da03      	bge.n	8015dda <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8015dd2:	140a      	asrs	r2, r1, #16
 8015dd4:	d401      	bmi.n	8015dda <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8015dd6:	42b2      	cmp	r2, r6
 8015dd8:	db07      	blt.n	8015dea <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8015dda:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8015ddc:	4410      	add	r0, r2
 8015dde:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8015de0:	3b01      	subs	r3, #1
 8015de2:	4411      	add	r1, r2
 8015de4:	3402      	adds	r4, #2
 8015de6:	e7ee      	b.n	8015dc6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8015de8:	d017      	beq.n	8015e1a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8015dea:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8015dec:	1e5a      	subs	r2, r3, #1
 8015dee:	fb05 0502 	mla	r5, r5, r2, r0
 8015df2:	142d      	asrs	r5, r5, #16
 8015df4:	d409      	bmi.n	8015e0a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8015df6:	42bd      	cmp	r5, r7
 8015df8:	da07      	bge.n	8015e0a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8015dfa:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8015dfc:	fb05 1202 	mla	r2, r5, r2, r1
 8015e00:	1412      	asrs	r2, r2, #16
 8015e02:	d402      	bmi.n	8015e0a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8015e04:	42b2      	cmp	r2, r6
 8015e06:	f2c0 80c7 	blt.w	8015f98 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 8015e0a:	2700      	movs	r7, #0
 8015e0c:	19da      	adds	r2, r3, r7
 8015e0e:	2a00      	cmp	r2, #0
 8015e10:	dc3e      	bgt.n	8015e90 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8015e12:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015e16:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015e1a:	f1bb 0f00 	cmp.w	fp, #0
 8015e1e:	f340 8131 	ble.w	8016084 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8015e22:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015e26:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015e2a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015e2e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015e30:	f1bb 0b01 	subs.w	fp, fp, #1
 8015e34:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015e38:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015e3c:	eeb0 6a62 	vmov.f32	s12, s5
 8015e40:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015e44:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015e48:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015e4c:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8015e50:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015e54:	eeb0 6a43 	vmov.f32	s12, s6
 8015e58:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015e5c:	ee12 2a90 	vmov	r2, s5
 8015e60:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015e64:	fb92 f3f3 	sdiv	r3, r2, r3
 8015e68:	ee13 2a10 	vmov	r2, s6
 8015e6c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015e70:	9313      	str	r3, [sp, #76]	; 0x4c
 8015e72:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015e74:	fb92 f3f3 	sdiv	r3, r2, r3
 8015e78:	9a03      	ldr	r2, [sp, #12]
 8015e7a:	9314      	str	r3, [sp, #80]	; 0x50
 8015e7c:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8015e80:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015e82:	eeb0 3a67 	vmov.f32	s6, s15
 8015e86:	bf08      	it	eq
 8015e88:	4613      	moveq	r3, r2
 8015e8a:	eef0 2a47 	vmov.f32	s5, s14
 8015e8e:	e789      	b.n	8015da4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8015e90:	1405      	asrs	r5, r0, #16
 8015e92:	d435      	bmi.n	8015f00 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8015e94:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8015e98:	42aa      	cmp	r2, r5
 8015e9a:	dd31      	ble.n	8015f00 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8015e9c:	140e      	asrs	r6, r1, #16
 8015e9e:	d42f      	bmi.n	8015f00 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8015ea0:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8015ea4:	42b2      	cmp	r2, r6
 8015ea6:	dd2b      	ble.n	8015f00 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8015ea8:	9a00      	ldr	r2, [sp, #0]
 8015eaa:	fb06 5502 	mla	r5, r6, r2, r5
 8015eae:	086a      	lsrs	r2, r5, #1
 8015eb0:	9e01      	ldr	r6, [sp, #4]
 8015eb2:	5cb2      	ldrb	r2, [r6, r2]
 8015eb4:	07ee      	lsls	r6, r5, #31
 8015eb6:	bf54      	ite	pl
 8015eb8:	f002 020f 	andpl.w	r2, r2, #15
 8015ebc:	1112      	asrmi	r2, r2, #4
 8015ebe:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8015ec2:	b2d2      	uxtb	r2, r2
 8015ec4:	b1e2      	cbz	r2, 8015f00 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8015ec6:	9d04      	ldr	r5, [sp, #16]
 8015ec8:	436a      	muls	r2, r5
 8015eca:	1c55      	adds	r5, r2, #1
 8015ecc:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8015ed0:	4d6e      	ldr	r5, [pc, #440]	; (801608c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8015ed2:	682d      	ldr	r5, [r5, #0]
 8015ed4:	1212      	asrs	r2, r2, #8
 8015ed6:	0a2e      	lsrs	r6, r5, #8
 8015ed8:	2aff      	cmp	r2, #255	; 0xff
 8015eda:	9605      	str	r6, [sp, #20]
 8015edc:	d116      	bne.n	8015f0c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8015ede:	f06f 0201 	mvn.w	r2, #1
 8015ee2:	fb02 fc07 	mul.w	ip, r2, r7
 8015ee6:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8015eea:	096a      	lsrs	r2, r5, #5
 8015eec:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8015ef0:	f026 0607 	bic.w	r6, r6, #7
 8015ef4:	4316      	orrs	r6, r2
 8015ef6:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8015efa:	432e      	orrs	r6, r5
 8015efc:	f824 600c 	strh.w	r6, [r4, ip]
 8015f00:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8015f02:	4410      	add	r0, r2
 8015f04:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8015f06:	3f01      	subs	r7, #1
 8015f08:	4411      	add	r1, r2
 8015f0a:	e77f      	b.n	8015e0c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8015f0c:	f06f 0601 	mvn.w	r6, #1
 8015f10:	437e      	muls	r6, r7
 8015f12:	fa1f fa82 	uxth.w	sl, r2
 8015f16:	f834 8006 	ldrh.w	r8, [r4, r6]
 8015f1a:	9602      	str	r6, [sp, #8]
 8015f1c:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8015f20:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 8015f24:	43d2      	mvns	r2, r2
 8015f26:	b2d2      	uxtb	r2, r2
 8015f28:	fb1c fc0a 	smulbb	ip, ip, sl
 8015f2c:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8015f30:	fb0e ce02 	mla	lr, lr, r2, ip
 8015f34:	b2ed      	uxtb	r5, r5
 8015f36:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8015f3a:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8015f3e:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8015f42:	fa5f f888 	uxtb.w	r8, r8
 8015f46:	fb15 f50a 	smulbb	r5, r5, sl
 8015f4a:	fb08 5502 	mla	r5, r8, r2, r5
 8015f4e:	fa1f fe8e 	uxth.w	lr, lr
 8015f52:	fb16 f60a 	smulbb	r6, r6, sl
 8015f56:	b2ad      	uxth	r5, r5
 8015f58:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8015f5c:	fb0c 6c02 	mla	ip, ip, r2, r6
 8015f60:	f10e 0201 	add.w	r2, lr, #1
 8015f64:	1c6e      	adds	r6, r5, #1
 8015f66:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8015f6a:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 8015f6e:	fa1f fc8c 	uxth.w	ip, ip
 8015f72:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8015f76:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8015f7a:	ea46 0e0e 	orr.w	lr, r6, lr
 8015f7e:	f10c 0601 	add.w	r6, ip, #1
 8015f82:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8015f86:	0976      	lsrs	r6, r6, #5
 8015f88:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8015f8c:	9a02      	ldr	r2, [sp, #8]
 8015f8e:	ea4e 0e06 	orr.w	lr, lr, r6
 8015f92:	f824 e002 	strh.w	lr, [r4, r2]
 8015f96:	e7b3      	b.n	8015f00 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8015f98:	f04f 0800 	mov.w	r8, #0
 8015f9c:	eba3 0208 	sub.w	r2, r3, r8
 8015fa0:	2a00      	cmp	r2, #0
 8015fa2:	f77f af36 	ble.w	8015e12 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8015fa6:	9e00      	ldr	r6, [sp, #0]
 8015fa8:	1402      	asrs	r2, r0, #16
 8015faa:	140d      	asrs	r5, r1, #16
 8015fac:	fb06 2505 	mla	r5, r6, r5, r2
 8015fb0:	086a      	lsrs	r2, r5, #1
 8015fb2:	9e01      	ldr	r6, [sp, #4]
 8015fb4:	5cb2      	ldrb	r2, [r6, r2]
 8015fb6:	07ed      	lsls	r5, r5, #31
 8015fb8:	bf54      	ite	pl
 8015fba:	f002 020f 	andpl.w	r2, r2, #15
 8015fbe:	1112      	asrmi	r2, r2, #4
 8015fc0:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8015fc4:	b2d2      	uxtb	r2, r2
 8015fc6:	b1c2      	cbz	r2, 8015ffa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8015fc8:	9d04      	ldr	r5, [sp, #16]
 8015fca:	436a      	muls	r2, r5
 8015fcc:	1c55      	adds	r5, r2, #1
 8015fce:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8015fd2:	4d2e      	ldr	r5, [pc, #184]	; (801608c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8015fd4:	1212      	asrs	r2, r2, #8
 8015fd6:	682e      	ldr	r6, [r5, #0]
 8015fd8:	2aff      	cmp	r2, #255	; 0xff
 8015fda:	ea4f 2516 	mov.w	r5, r6, lsr #8
 8015fde:	d113      	bne.n	8016008 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8015fe0:	0972      	lsrs	r2, r6, #5
 8015fe2:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 8015fe6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8015fea:	f025 0507 	bic.w	r5, r5, #7
 8015fee:	4315      	orrs	r5, r2
 8015ff0:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8015ff4:	4335      	orrs	r5, r6
 8015ff6:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 8015ffa:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8015ffc:	4410      	add	r0, r2
 8015ffe:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016000:	f108 0801 	add.w	r8, r8, #1
 8016004:	4411      	add	r1, r2
 8016006:	e7c9      	b.n	8015f9c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8016008:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801600c:	fa1f fa82 	uxth.w	sl, r2
 8016010:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8016014:	f3c6 4707 	ubfx	r7, r6, #16, #8
 8016018:	43d2      	mvns	r2, r2
 801601a:	b2d2      	uxtb	r2, r2
 801601c:	fb17 f70a 	smulbb	r7, r7, sl
 8016020:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8016024:	fb0c 7c02 	mla	ip, ip, r2, r7
 8016028:	b2f6      	uxtb	r6, r6
 801602a:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801602e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8016032:	fa5f fe8e 	uxtb.w	lr, lr
 8016036:	fb16 f60a 	smulbb	r6, r6, sl
 801603a:	fb0e 6602 	mla	r6, lr, r2, r6
 801603e:	b2ed      	uxtb	r5, r5
 8016040:	fa1f fc8c 	uxth.w	ip, ip
 8016044:	fb15 f50a 	smulbb	r5, r5, sl
 8016048:	b2b6      	uxth	r6, r6
 801604a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801604e:	fb07 5702 	mla	r7, r7, r2, r5
 8016052:	f10c 0201 	add.w	r2, ip, #1
 8016056:	1c75      	adds	r5, r6, #1
 8016058:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801605c:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8016060:	b2bf      	uxth	r7, r7
 8016062:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8016066:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801606a:	ea45 0c0c 	orr.w	ip, r5, ip
 801606e:	1c7d      	adds	r5, r7, #1
 8016070:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 8016074:	096d      	lsrs	r5, r5, #5
 8016076:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801607a:	ea4c 0c05 	orr.w	ip, ip, r5
 801607e:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 8016082:	e7ba      	b.n	8015ffa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8016084:	b007      	add	sp, #28
 8016086:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801608a:	bf00      	nop
 801608c:	2001536c 	.word	0x2001536c

08016090 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016090:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016094:	b087      	sub	sp, #28
 8016096:	f8df 830c 	ldr.w	r8, [pc, #780]	; 80163a4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 801609a:	9815      	ldr	r0, [sp, #84]	; 0x54
 801609c:	9205      	str	r2, [sp, #20]
 801609e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 80160a2:	9101      	str	r1, [sp, #4]
 80160a4:	6841      	ldr	r1, [r0, #4]
 80160a6:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 80160aa:	fb01 2404 	mla	r4, r1, r4, r2
 80160ae:	6802      	ldr	r2, [r0, #0]
 80160b0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80160b4:	f8db 2008 	ldr.w	r2, [fp, #8]
 80160b8:	3201      	adds	r2, #1
 80160ba:	f022 0201 	bic.w	r2, r2, #1
 80160be:	9202      	str	r2, [sp, #8]
 80160c0:	f8db 2000 	ldr.w	r2, [fp]
 80160c4:	9203      	str	r2, [sp, #12]
 80160c6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80160ca:	9a01      	ldr	r2, [sp, #4]
 80160cc:	2a00      	cmp	r2, #0
 80160ce:	dc03      	bgt.n	80160d8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80160d0:	9a05      	ldr	r2, [sp, #20]
 80160d2:	2a00      	cmp	r2, #0
 80160d4:	f340 8162 	ble.w	801639c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 80160d8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80160da:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 80160de:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 80160e2:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80160e6:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80160e8:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80160ec:	2b00      	cmp	r3, #0
 80160ee:	dd0e      	ble.n	801610e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80160f0:	1402      	asrs	r2, r0, #16
 80160f2:	d405      	bmi.n	8016100 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80160f4:	42ba      	cmp	r2, r7
 80160f6:	da03      	bge.n	8016100 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80160f8:	140a      	asrs	r2, r1, #16
 80160fa:	d401      	bmi.n	8016100 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80160fc:	42b2      	cmp	r2, r6
 80160fe:	db07      	blt.n	8016110 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8016100:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8016102:	4410      	add	r0, r2
 8016104:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016106:	3b01      	subs	r3, #1
 8016108:	4411      	add	r1, r2
 801610a:	3402      	adds	r4, #2
 801610c:	e7ee      	b.n	80160ec <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801610e:	d017      	beq.n	8016140 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8016110:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8016112:	1e5a      	subs	r2, r3, #1
 8016114:	fb05 0502 	mla	r5, r5, r2, r0
 8016118:	142d      	asrs	r5, r5, #16
 801611a:	d409      	bmi.n	8016130 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801611c:	42bd      	cmp	r5, r7
 801611e:	da07      	bge.n	8016130 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8016120:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8016122:	fb05 1202 	mla	r2, r5, r2, r1
 8016126:	1412      	asrs	r2, r2, #16
 8016128:	d402      	bmi.n	8016130 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801612a:	42b2      	cmp	r2, r6
 801612c:	f2c0 80c3 	blt.w	80162b6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 8016130:	2500      	movs	r5, #0
 8016132:	195a      	adds	r2, r3, r5
 8016134:	2a00      	cmp	r2, #0
 8016136:	dc3f      	bgt.n	80161b8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8016138:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801613c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016140:	9b01      	ldr	r3, [sp, #4]
 8016142:	2b00      	cmp	r3, #0
 8016144:	f340 812a 	ble.w	801639c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8016148:	ee30 0a04 	vadd.f32	s0, s0, s8
 801614c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8016150:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8016154:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016156:	ee31 1a05 	vadd.f32	s2, s2, s10
 801615a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801615e:	eeb0 6a62 	vmov.f32	s12, s5
 8016162:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016166:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801616a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801616e:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8016172:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016176:	eeb0 6a43 	vmov.f32	s12, s6
 801617a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801617e:	ee12 2a90 	vmov	r2, s5
 8016182:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016186:	fb92 f3f3 	sdiv	r3, r2, r3
 801618a:	ee13 2a10 	vmov	r2, s6
 801618e:	9313      	str	r3, [sp, #76]	; 0x4c
 8016190:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016192:	fb92 f3f3 	sdiv	r3, r2, r3
 8016196:	9314      	str	r3, [sp, #80]	; 0x50
 8016198:	9b01      	ldr	r3, [sp, #4]
 801619a:	9a05      	ldr	r2, [sp, #20]
 801619c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80161a0:	3b01      	subs	r3, #1
 80161a2:	9301      	str	r3, [sp, #4]
 80161a4:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80161a8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80161aa:	eeb0 3a67 	vmov.f32	s6, s15
 80161ae:	bf08      	it	eq
 80161b0:	4613      	moveq	r3, r2
 80161b2:	eef0 2a47 	vmov.f32	s5, s14
 80161b6:	e788      	b.n	80160ca <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80161b8:	1406      	asrs	r6, r0, #16
 80161ba:	d42c      	bmi.n	8016216 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80161bc:	f8db 2008 	ldr.w	r2, [fp, #8]
 80161c0:	42b2      	cmp	r2, r6
 80161c2:	dd28      	ble.n	8016216 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80161c4:	140f      	asrs	r7, r1, #16
 80161c6:	d426      	bmi.n	8016216 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80161c8:	f8db 200c 	ldr.w	r2, [fp, #12]
 80161cc:	42ba      	cmp	r2, r7
 80161ce:	dd22      	ble.n	8016216 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80161d0:	9a02      	ldr	r2, [sp, #8]
 80161d2:	fb07 6602 	mla	r6, r7, r2, r6
 80161d6:	0872      	lsrs	r2, r6, #1
 80161d8:	9f03      	ldr	r7, [sp, #12]
 80161da:	5cba      	ldrb	r2, [r7, r2]
 80161dc:	07f6      	lsls	r6, r6, #31
 80161de:	bf54      	ite	pl
 80161e0:	f002 020f 	andpl.w	r2, r2, #15
 80161e4:	1112      	asrmi	r2, r2, #4
 80161e6:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80161ea:	b2d2      	uxtb	r2, r2
 80161ec:	2aff      	cmp	r2, #255	; 0xff
 80161ee:	d118      	bne.n	8016222 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 80161f0:	f8d8 2000 	ldr.w	r2, [r8]
 80161f4:	f06f 0601 	mvn.w	r6, #1
 80161f8:	fb06 f705 	mul.w	r7, r6, r5
 80161fc:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 8016200:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 8016204:	0956      	lsrs	r6, r2, #5
 8016206:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801620a:	ea4c 0606 	orr.w	r6, ip, r6
 801620e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8016212:	4316      	orrs	r6, r2
 8016214:	53e6      	strh	r6, [r4, r7]
 8016216:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8016218:	4410      	add	r0, r2
 801621a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801621c:	3d01      	subs	r5, #1
 801621e:	4411      	add	r1, r2
 8016220:	e787      	b.n	8016132 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8016222:	2a00      	cmp	r2, #0
 8016224:	d0f7      	beq.n	8016216 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016226:	f06f 0601 	mvn.w	r6, #1
 801622a:	436e      	muls	r6, r5
 801622c:	f8d8 c000 	ldr.w	ip, [r8]
 8016230:	f834 e006 	ldrh.w	lr, [r4, r6]
 8016234:	9604      	str	r6, [sp, #16]
 8016236:	fa1f f982 	uxth.w	r9, r2
 801623a:	ea4f 272e 	mov.w	r7, lr, asr #8
 801623e:	f3cc 4607 	ubfx	r6, ip, #16, #8
 8016242:	43d2      	mvns	r2, r2
 8016244:	b2d2      	uxtb	r2, r2
 8016246:	fb16 f609 	smulbb	r6, r6, r9
 801624a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801624e:	fb07 6702 	mla	r7, r7, r2, r6
 8016252:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 8016256:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801625a:	fa5f fc8c 	uxtb.w	ip, ip
 801625e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8016262:	fa5f fe8e 	uxtb.w	lr, lr
 8016266:	fb1c fc09 	smulbb	ip, ip, r9
 801626a:	fb0e cc02 	mla	ip, lr, r2, ip
 801626e:	b2bf      	uxth	r7, r7
 8016270:	fb1a fa09 	smulbb	sl, sl, r9
 8016274:	fa1f fc8c 	uxth.w	ip, ip
 8016278:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801627c:	fb06 a602 	mla	r6, r6, r2, sl
 8016280:	1c7a      	adds	r2, r7, #1
 8016282:	f10c 0a01 	add.w	sl, ip, #1
 8016286:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801628a:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 801628e:	b2b6      	uxth	r6, r6
 8016290:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8016294:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8016298:	ea4a 0707 	orr.w	r7, sl, r7
 801629c:	f106 0a01 	add.w	sl, r6, #1
 80162a0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80162a4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80162a8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80162ac:	9a04      	ldr	r2, [sp, #16]
 80162ae:	ea47 070a 	orr.w	r7, r7, sl
 80162b2:	52a7      	strh	r7, [r4, r2]
 80162b4:	e7af      	b.n	8016216 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80162b6:	f04f 0e00 	mov.w	lr, #0
 80162ba:	eba3 020e 	sub.w	r2, r3, lr
 80162be:	2a00      	cmp	r2, #0
 80162c0:	f77f af3a 	ble.w	8016138 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80162c4:	9e02      	ldr	r6, [sp, #8]
 80162c6:	1402      	asrs	r2, r0, #16
 80162c8:	140d      	asrs	r5, r1, #16
 80162ca:	fb06 2505 	mla	r5, r6, r5, r2
 80162ce:	086a      	lsrs	r2, r5, #1
 80162d0:	9e03      	ldr	r6, [sp, #12]
 80162d2:	5cb2      	ldrb	r2, [r6, r2]
 80162d4:	07ed      	lsls	r5, r5, #31
 80162d6:	bf54      	ite	pl
 80162d8:	f002 020f 	andpl.w	r2, r2, #15
 80162dc:	1112      	asrmi	r2, r2, #4
 80162de:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80162e2:	b2d2      	uxtb	r2, r2
 80162e4:	2aff      	cmp	r2, #255	; 0xff
 80162e6:	d115      	bne.n	8016314 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 80162e8:	f8d8 5000 	ldr.w	r5, [r8]
 80162ec:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 80162f0:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 80162f4:	096a      	lsrs	r2, r5, #5
 80162f6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80162fa:	4332      	orrs	r2, r6
 80162fc:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8016300:	432a      	orrs	r2, r5
 8016302:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 8016306:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8016308:	4410      	add	r0, r2
 801630a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801630c:	f10e 0e01 	add.w	lr, lr, #1
 8016310:	4411      	add	r1, r2
 8016312:	e7d2      	b.n	80162ba <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8016314:	2a00      	cmp	r2, #0
 8016316:	d0f6      	beq.n	8016306 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8016318:	f8d8 7000 	ldr.w	r7, [r8]
 801631c:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8016320:	fa1f f982 	uxth.w	r9, r2
 8016324:	ea4f 262c 	mov.w	r6, ip, asr #8
 8016328:	f3c7 4507 	ubfx	r5, r7, #16, #8
 801632c:	43d2      	mvns	r2, r2
 801632e:	b2d2      	uxtb	r2, r2
 8016330:	fb15 f509 	smulbb	r5, r5, r9
 8016334:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8016338:	fb06 5602 	mla	r6, r6, r2, r5
 801633c:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 8016340:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8016344:	b2ff      	uxtb	r7, r7
 8016346:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801634a:	fa5f fc8c 	uxtb.w	ip, ip
 801634e:	fb17 f709 	smulbb	r7, r7, r9
 8016352:	fb0c 7702 	mla	r7, ip, r2, r7
 8016356:	b2b6      	uxth	r6, r6
 8016358:	fb1a fa09 	smulbb	sl, sl, r9
 801635c:	b2bf      	uxth	r7, r7
 801635e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8016362:	fb05 a502 	mla	r5, r5, r2, sl
 8016366:	1c72      	adds	r2, r6, #1
 8016368:	f107 0a01 	add.w	sl, r7, #1
 801636c:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8016370:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8016374:	b2ad      	uxth	r5, r5
 8016376:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801637a:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801637e:	ea4a 0606 	orr.w	r6, sl, r6
 8016382:	f105 0a01 	add.w	sl, r5, #1
 8016386:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801638a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801638e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8016392:	ea46 060a 	orr.w	r6, r6, sl
 8016396:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 801639a:	e7b4      	b.n	8016306 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801639c:	b007      	add	sp, #28
 801639e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80163a2:	bf00      	nop
 80163a4:	2001536c 	.word	0x2001536c

080163a8 <_ZN8touchgfx8LCD16bppD1Ev>:
 80163a8:	4770      	bx	lr

080163aa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 80163aa:	4770      	bx	lr

080163ac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 80163ac:	4770      	bx	lr

080163ae <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 80163ae:	4770      	bx	lr

080163b0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 80163b0:	4770      	bx	lr

080163b2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 80163b2:	4770      	bx	lr

080163b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 80163b4:	4770      	bx	lr

080163b6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 80163b6:	4770      	bx	lr

080163b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 80163b8:	4770      	bx	lr

080163ba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 80163ba:	4770      	bx	lr

080163bc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 80163bc:	4770      	bx	lr

080163be <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 80163be:	4770      	bx	lr

080163c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 80163c0:	4770      	bx	lr

080163c2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 80163c2:	4770      	bx	lr

080163c4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 80163c4:	4770      	bx	lr

080163c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 80163c6:	4770      	bx	lr

080163c8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 80163c8:	4770      	bx	lr

080163ca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 80163ca:	4770      	bx	lr

080163cc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 80163cc:	4770      	bx	lr

080163ce <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 80163ce:	4770      	bx	lr

080163d0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 80163d0:	4770      	bx	lr

080163d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 80163d2:	4770      	bx	lr

080163d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 80163d4:	4770      	bx	lr

080163d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 80163d6:	4770      	bx	lr

080163d8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 80163d8:	4770      	bx	lr

080163da <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 80163da:	4770      	bx	lr

080163dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 80163dc:	4770      	bx	lr

080163de <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 80163de:	4770      	bx	lr

080163e0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 80163e0:	4770      	bx	lr

080163e2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 80163e2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80163e6:	b088      	sub	sp, #32
 80163e8:	ac08      	add	r4, sp, #32
 80163ea:	4606      	mov	r6, r0
 80163ec:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 80163f0:	4620      	mov	r0, r4
 80163f2:	4688      	mov	r8, r1
 80163f4:	4691      	mov	r9, r2
 80163f6:	f7fd fc65 	bl	8013cc4 <_ZNK8touchgfx6Bitmap7getDataEv>
 80163fa:	6833      	ldr	r3, [r6, #0]
 80163fc:	4605      	mov	r5, r0
 80163fe:	4620      	mov	r0, r4
 8016400:	699f      	ldr	r7, [r3, #24]
 8016402:	f7fd fb73 	bl	8013aec <_ZNK8touchgfx6Bitmap8getWidthEv>
 8016406:	4682      	mov	sl, r0
 8016408:	4620      	mov	r0, r4
 801640a:	f7fd fba3 	bl	8013b54 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801640e:	9500      	str	r5, [sp, #0]
 8016410:	e9cd a001 	strd	sl, r0, [sp, #4]
 8016414:	464b      	mov	r3, r9
 8016416:	a806      	add	r0, sp, #24
 8016418:	4642      	mov	r2, r8
 801641a:	4631      	mov	r1, r6
 801641c:	47b8      	blx	r7
 801641e:	4628      	mov	r0, r5
 8016420:	b008      	add	sp, #32
 8016422:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

08016428 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 8016428:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801642c:	2300      	movs	r3, #0
 801642e:	9300      	str	r3, [sp, #0]
 8016430:	4b3d      	ldr	r3, [pc, #244]	; (8016528 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 8016432:	781b      	ldrb	r3, [r3, #0]
 8016434:	2b00      	cmp	r3, #0
 8016436:	d137      	bne.n	80164a8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 8016438:	4a3c      	ldr	r2, [pc, #240]	; (801652c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801643a:	f9b2 2000 	ldrsh.w	r2, [r2]
 801643e:	f8ad 2004 	strh.w	r2, [sp, #4]
 8016442:	2b00      	cmp	r3, #0
 8016444:	d132      	bne.n	80164ac <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 8016446:	4b3a      	ldr	r3, [pc, #232]	; (8016530 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8016448:	f9b3 3000 	ldrsh.w	r3, [r3]
 801644c:	6808      	ldr	r0, [r1, #0]
 801644e:	6849      	ldr	r1, [r1, #4]
 8016450:	f8ad 3006 	strh.w	r3, [sp, #6]
 8016454:	ac02      	add	r4, sp, #8
 8016456:	ab02      	add	r3, sp, #8
 8016458:	c303      	stmia	r3!, {r0, r1}
 801645a:	4669      	mov	r1, sp
 801645c:	4620      	mov	r0, r4
 801645e:	f7f9 ff7f 	bl	8010360 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016462:	4668      	mov	r0, sp
 8016464:	f7f9 ff54 	bl	8010310 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016468:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801646c:	f8bd 2000 	ldrh.w	r2, [sp]
 8016470:	4d30      	ldr	r5, [pc, #192]	; (8016534 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 8016472:	4413      	add	r3, r2
 8016474:	f8ad 3008 	strh.w	r3, [sp, #8]
 8016478:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801647c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8016480:	6828      	ldr	r0, [r5, #0]
 8016482:	4413      	add	r3, r2
 8016484:	f8ad 300a 	strh.w	r3, [sp, #10]
 8016488:	6803      	ldr	r3, [r0, #0]
 801648a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801648c:	4798      	blx	r3
 801648e:	f010 0f01 	tst.w	r0, #1
 8016492:	462f      	mov	r7, r5
 8016494:	d00c      	beq.n	80164b0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 8016496:	6828      	ldr	r0, [r5, #0]
 8016498:	6803      	ldr	r3, [r0, #0]
 801649a:	e894 0006 	ldmia.w	r4, {r1, r2}
 801649e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80164a0:	4798      	blx	r3
 80164a2:	b004      	add	sp, #16
 80164a4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80164a8:	4a21      	ldr	r2, [pc, #132]	; (8016530 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 80164aa:	e7c6      	b.n	801643a <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 80164ac:	4b1f      	ldr	r3, [pc, #124]	; (801652c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 80164ae:	e7cb      	b.n	8016448 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 80164b0:	6838      	ldr	r0, [r7, #0]
 80164b2:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 80164b6:	6803      	ldr	r3, [r0, #0]
 80164b8:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 80164bc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80164be:	4798      	blx	r3
 80164c0:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 80164c4:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80164c8:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 80164cc:	fb16 3602 	smlabb	r6, r6, r2, r3
 80164d0:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 80164d4:	6838      	ldr	r0, [r7, #0]
 80164d6:	6803      	ldr	r3, [r0, #0]
 80164d8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80164da:	4798      	blx	r3
 80164dc:	4a13      	ldr	r2, [pc, #76]	; (801652c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 80164de:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 80164e2:	8813      	ldrh	r3, [r2, #0]
 80164e4:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 80164e8:	fb03 1404 	mla	r4, r3, r4, r1
 80164ec:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80164f0:	435d      	muls	r5, r3
 80164f2:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 80164f6:	ea4f 0848 	mov.w	r8, r8, lsl #1
 80164fa:	4691      	mov	r9, r2
 80164fc:	6838      	ldr	r0, [r7, #0]
 80164fe:	42ac      	cmp	r4, r5
 8016500:	6803      	ldr	r3, [r0, #0]
 8016502:	d20e      	bcs.n	8016522 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 8016504:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 8016508:	4632      	mov	r2, r6
 801650a:	4643      	mov	r3, r8
 801650c:	4621      	mov	r1, r4
 801650e:	47d0      	blx	sl
 8016510:	f8b9 3000 	ldrh.w	r3, [r9]
 8016514:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016518:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801651c:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8016520:	e7ec      	b.n	80164fc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 8016522:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016524:	4798      	blx	r3
 8016526:	e7bc      	b.n	80164a2 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 8016528:	20015354 	.word	0x20015354
 801652c:	20015356 	.word	0x20015356
 8016530:	20015358 	.word	0x20015358
 8016534:	2001535c 	.word	0x2001535c

08016538 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 8016538:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801653c:	b08b      	sub	sp, #44	; 0x2c
 801653e:	460f      	mov	r7, r1
 8016540:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 8016544:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 8016548:	4616      	mov	r6, r2
 801654a:	f1bb 0f00 	cmp.w	fp, #0
 801654e:	d049      	beq.n	80165e4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 8016550:	6810      	ldr	r0, [r2, #0]
 8016552:	6851      	ldr	r1, [r2, #4]
 8016554:	ad06      	add	r5, sp, #24
 8016556:	c503      	stmia	r5!, {r0, r1}
 8016558:	6818      	ldr	r0, [r3, #0]
 801655a:	6859      	ldr	r1, [r3, #4]
 801655c:	ad08      	add	r5, sp, #32
 801655e:	c503      	stmia	r5!, {r0, r1}
 8016560:	a806      	add	r0, sp, #24
 8016562:	f7f9 fed5 	bl	8010310 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016566:	4631      	mov	r1, r6
 8016568:	a808      	add	r0, sp, #32
 801656a:	f7f9 fef9 	bl	8010360 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801656e:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8016572:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8016576:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801657a:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 801657e:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 8016582:	fb16 2103 	smlabb	r1, r6, r3, r2
 8016586:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801658a:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 801658e:	4f5f      	ldr	r7, [pc, #380]	; (801670c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8016590:	440a      	add	r2, r1
 8016592:	f8ad 2020 	strh.w	r2, [sp, #32]
 8016596:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801659a:	6838      	ldr	r0, [r7, #0]
 801659c:	4413      	add	r3, r2
 801659e:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 80165a2:	6803      	ldr	r3, [r0, #0]
 80165a4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80165a6:	4798      	blx	r3
 80165a8:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 80165ac:	46b9      	mov	r9, r7
 80165ae:	d01c      	beq.n	80165ea <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb2>
 80165b0:	f010 0f04 	tst.w	r0, #4
 80165b4:	d01d      	beq.n	80165f2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 80165b6:	f8d9 0000 	ldr.w	r0, [r9]
 80165ba:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 80165be:	6801      	ldr	r1, [r0, #0]
 80165c0:	f8cd b00c 	str.w	fp, [sp, #12]
 80165c4:	2700      	movs	r7, #0
 80165c6:	e9cd 4704 	strd	r4, r7, [sp, #16]
 80165ca:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 80165ce:	9402      	str	r4, [sp, #8]
 80165d0:	b2ad      	uxth	r5, r5
 80165d2:	fa1f f488 	uxth.w	r4, r8
 80165d6:	9501      	str	r5, [sp, #4]
 80165d8:	9400      	str	r4, [sp, #0]
 80165da:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 80165dc:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 80165e0:	4631      	mov	r1, r6
 80165e2:	47a0      	blx	r4
 80165e4:	b00b      	add	sp, #44	; 0x2c
 80165e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80165ea:	b914      	cbnz	r4, 80165f2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 80165ec:	f010 0f01 	tst.w	r0, #1
 80165f0:	e7e0      	b.n	80165b4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7c>
 80165f2:	f8d9 0000 	ldr.w	r0, [r9]
 80165f6:	6803      	ldr	r3, [r0, #0]
 80165f8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80165fa:	4798      	blx	r3
 80165fc:	4b44      	ldr	r3, [pc, #272]	; (8016710 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 80165fe:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 8016602:	881a      	ldrh	r2, [r3, #0]
 8016604:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 8016608:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801660c:	fb02 1404 	mla	r4, r2, r4, r1
 8016610:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8016614:	469a      	mov	sl, r3
 8016616:	fb05 f502 	mul.w	r5, r5, r2
 801661a:	ea4f 0748 	mov.w	r7, r8, lsl #1
 801661e:	d059      	beq.n	80166d4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 8016620:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 8016624:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8016628:	fa1f f28b 	uxth.w	r2, fp
 801662c:	fa1f f989 	uxth.w	r9, r9
 8016630:	469e      	mov	lr, r3
 8016632:	42ac      	cmp	r4, r5
 8016634:	d264      	bcs.n	8016700 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 8016636:	eb04 0a07 	add.w	sl, r4, r7
 801663a:	4554      	cmp	r4, sl
 801663c:	d23d      	bcs.n	80166ba <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 801663e:	8821      	ldrh	r1, [r4, #0]
 8016640:	f836 3b02 	ldrh.w	r3, [r6], #2
 8016644:	1208      	asrs	r0, r1, #8
 8016646:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801664a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801664e:	fb10 f009 	smulbb	r0, r0, r9
 8016652:	ea4f 0be1 	mov.w	fp, r1, asr #3
 8016656:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801665a:	00c9      	lsls	r1, r1, #3
 801665c:	fb0c 0c02 	mla	ip, ip, r2, r0
 8016660:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8016664:	10d8      	asrs	r0, r3, #3
 8016666:	b2c9      	uxtb	r1, r1
 8016668:	00db      	lsls	r3, r3, #3
 801666a:	fa1f fc8c 	uxth.w	ip, ip
 801666e:	fb1b fb09 	smulbb	fp, fp, r9
 8016672:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8016676:	b2db      	uxtb	r3, r3
 8016678:	fb11 f109 	smulbb	r1, r1, r9
 801667c:	fb00 b002 	mla	r0, r0, r2, fp
 8016680:	fb03 1302 	mla	r3, r3, r2, r1
 8016684:	f10c 0b01 	add.w	fp, ip, #1
 8016688:	b29b      	uxth	r3, r3
 801668a:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 801668e:	b280      	uxth	r0, r0
 8016690:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 8016694:	f103 0c01 	add.w	ip, r3, #1
 8016698:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801669c:	1c43      	adds	r3, r0, #1
 801669e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80166a2:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80166a6:	0940      	lsrs	r0, r0, #5
 80166a8:	ea4c 0c0b 	orr.w	ip, ip, fp
 80166ac:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80166b0:	ea4c 0c00 	orr.w	ip, ip, r0
 80166b4:	f824 cb02 	strh.w	ip, [r4], #2
 80166b8:	e7bf      	b.n	801663a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 80166ba:	f8be 3000 	ldrh.w	r3, [lr]
 80166be:	eba3 0308 	sub.w	r3, r3, r8
 80166c2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80166c6:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80166ca:	eba3 0308 	sub.w	r3, r3, r8
 80166ce:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 80166d2:	e7ae      	b.n	8016632 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 80166d4:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 80166d8:	f8d9 0000 	ldr.w	r0, [r9]
 80166dc:	42ac      	cmp	r4, r5
 80166de:	6803      	ldr	r3, [r0, #0]
 80166e0:	d20e      	bcs.n	8016700 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 80166e2:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 80166e6:	4632      	mov	r2, r6
 80166e8:	463b      	mov	r3, r7
 80166ea:	4621      	mov	r1, r4
 80166ec:	47c0      	blx	r8
 80166ee:	f8ba 3000 	ldrh.w	r3, [sl]
 80166f2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80166f6:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80166fa:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 80166fe:	e7eb      	b.n	80166d8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 8016700:	4b02      	ldr	r3, [pc, #8]	; (801670c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8016702:	6818      	ldr	r0, [r3, #0]
 8016704:	6803      	ldr	r3, [r0, #0]
 8016706:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016708:	4798      	blx	r3
 801670a:	e76b      	b.n	80165e4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 801670c:	2001535c 	.word	0x2001535c
 8016710:	20015356 	.word	0x20015356

08016714 <_ZN8touchgfx8LCD16bppD0Ev>:
 8016714:	b510      	push	{r4, lr}
 8016716:	2178      	movs	r1, #120	; 0x78
 8016718:	4604      	mov	r4, r0
 801671a:	f009 fad3 	bl	801fcc4 <_ZdlPvj>
 801671e:	4620      	mov	r0, r4
 8016720:	bd10      	pop	{r4, pc}

08016722 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8016722:	b510      	push	{r4, lr}
 8016724:	2104      	movs	r1, #4
 8016726:	4604      	mov	r4, r0
 8016728:	f009 facc 	bl	801fcc4 <_ZdlPvj>
 801672c:	4620      	mov	r0, r4
 801672e:	bd10      	pop	{r4, pc}

08016730 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8016730:	b510      	push	{r4, lr}
 8016732:	2104      	movs	r1, #4
 8016734:	4604      	mov	r4, r0
 8016736:	f009 fac5 	bl	801fcc4 <_ZdlPvj>
 801673a:	4620      	mov	r0, r4
 801673c:	bd10      	pop	{r4, pc}

0801673e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801673e:	b510      	push	{r4, lr}
 8016740:	2104      	movs	r1, #4
 8016742:	4604      	mov	r4, r0
 8016744:	f009 fabe 	bl	801fcc4 <_ZdlPvj>
 8016748:	4620      	mov	r0, r4
 801674a:	bd10      	pop	{r4, pc}

0801674c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801674c:	b510      	push	{r4, lr}
 801674e:	2104      	movs	r1, #4
 8016750:	4604      	mov	r4, r0
 8016752:	f009 fab7 	bl	801fcc4 <_ZdlPvj>
 8016756:	4620      	mov	r0, r4
 8016758:	bd10      	pop	{r4, pc}

0801675a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801675a:	b510      	push	{r4, lr}
 801675c:	2104      	movs	r1, #4
 801675e:	4604      	mov	r4, r0
 8016760:	f009 fab0 	bl	801fcc4 <_ZdlPvj>
 8016764:	4620      	mov	r0, r4
 8016766:	bd10      	pop	{r4, pc}

08016768 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8016768:	b510      	push	{r4, lr}
 801676a:	2104      	movs	r1, #4
 801676c:	4604      	mov	r4, r0
 801676e:	f009 faa9 	bl	801fcc4 <_ZdlPvj>
 8016772:	4620      	mov	r0, r4
 8016774:	bd10      	pop	{r4, pc}

08016776 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 8016776:	b510      	push	{r4, lr}
 8016778:	2104      	movs	r1, #4
 801677a:	4604      	mov	r4, r0
 801677c:	f009 faa2 	bl	801fcc4 <_ZdlPvj>
 8016780:	4620      	mov	r0, r4
 8016782:	bd10      	pop	{r4, pc}

08016784 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8016784:	b510      	push	{r4, lr}
 8016786:	2104      	movs	r1, #4
 8016788:	4604      	mov	r4, r0
 801678a:	f009 fa9b 	bl	801fcc4 <_ZdlPvj>
 801678e:	4620      	mov	r0, r4
 8016790:	bd10      	pop	{r4, pc}

08016792 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8016792:	b510      	push	{r4, lr}
 8016794:	2104      	movs	r1, #4
 8016796:	4604      	mov	r4, r0
 8016798:	f009 fa94 	bl	801fcc4 <_ZdlPvj>
 801679c:	4620      	mov	r0, r4
 801679e:	bd10      	pop	{r4, pc}

080167a0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 80167a0:	b510      	push	{r4, lr}
 80167a2:	2104      	movs	r1, #4
 80167a4:	4604      	mov	r4, r0
 80167a6:	f009 fa8d 	bl	801fcc4 <_ZdlPvj>
 80167aa:	4620      	mov	r0, r4
 80167ac:	bd10      	pop	{r4, pc}

080167ae <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 80167ae:	b510      	push	{r4, lr}
 80167b0:	2104      	movs	r1, #4
 80167b2:	4604      	mov	r4, r0
 80167b4:	f009 fa86 	bl	801fcc4 <_ZdlPvj>
 80167b8:	4620      	mov	r0, r4
 80167ba:	bd10      	pop	{r4, pc}

080167bc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 80167bc:	b510      	push	{r4, lr}
 80167be:	2104      	movs	r1, #4
 80167c0:	4604      	mov	r4, r0
 80167c2:	f009 fa7f 	bl	801fcc4 <_ZdlPvj>
 80167c6:	4620      	mov	r0, r4
 80167c8:	bd10      	pop	{r4, pc}

080167ca <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 80167ca:	b510      	push	{r4, lr}
 80167cc:	2104      	movs	r1, #4
 80167ce:	4604      	mov	r4, r0
 80167d0:	f009 fa78 	bl	801fcc4 <_ZdlPvj>
 80167d4:	4620      	mov	r0, r4
 80167d6:	bd10      	pop	{r4, pc}

080167d8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 80167d8:	b510      	push	{r4, lr}
 80167da:	2104      	movs	r1, #4
 80167dc:	4604      	mov	r4, r0
 80167de:	f009 fa71 	bl	801fcc4 <_ZdlPvj>
 80167e2:	4620      	mov	r0, r4
 80167e4:	bd10      	pop	{r4, pc}

080167e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 80167e6:	b510      	push	{r4, lr}
 80167e8:	2104      	movs	r1, #4
 80167ea:	4604      	mov	r4, r0
 80167ec:	f009 fa6a 	bl	801fcc4 <_ZdlPvj>
 80167f0:	4620      	mov	r0, r4
 80167f2:	bd10      	pop	{r4, pc}

080167f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 80167f4:	b510      	push	{r4, lr}
 80167f6:	2104      	movs	r1, #4
 80167f8:	4604      	mov	r4, r0
 80167fa:	f009 fa63 	bl	801fcc4 <_ZdlPvj>
 80167fe:	4620      	mov	r0, r4
 8016800:	bd10      	pop	{r4, pc}

08016802 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8016802:	b510      	push	{r4, lr}
 8016804:	2104      	movs	r1, #4
 8016806:	4604      	mov	r4, r0
 8016808:	f009 fa5c 	bl	801fcc4 <_ZdlPvj>
 801680c:	4620      	mov	r0, r4
 801680e:	bd10      	pop	{r4, pc}

08016810 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8016810:	b510      	push	{r4, lr}
 8016812:	2104      	movs	r1, #4
 8016814:	4604      	mov	r4, r0
 8016816:	f009 fa55 	bl	801fcc4 <_ZdlPvj>
 801681a:	4620      	mov	r0, r4
 801681c:	bd10      	pop	{r4, pc}

0801681e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801681e:	b510      	push	{r4, lr}
 8016820:	2104      	movs	r1, #4
 8016822:	4604      	mov	r4, r0
 8016824:	f009 fa4e 	bl	801fcc4 <_ZdlPvj>
 8016828:	4620      	mov	r0, r4
 801682a:	bd10      	pop	{r4, pc}

0801682c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 801682c:	b510      	push	{r4, lr}
 801682e:	2104      	movs	r1, #4
 8016830:	4604      	mov	r4, r0
 8016832:	f009 fa47 	bl	801fcc4 <_ZdlPvj>
 8016836:	4620      	mov	r0, r4
 8016838:	bd10      	pop	{r4, pc}

0801683a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801683a:	b510      	push	{r4, lr}
 801683c:	2104      	movs	r1, #4
 801683e:	4604      	mov	r4, r0
 8016840:	f009 fa40 	bl	801fcc4 <_ZdlPvj>
 8016844:	4620      	mov	r0, r4
 8016846:	bd10      	pop	{r4, pc}

08016848 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8016848:	b510      	push	{r4, lr}
 801684a:	2104      	movs	r1, #4
 801684c:	4604      	mov	r4, r0
 801684e:	f009 fa39 	bl	801fcc4 <_ZdlPvj>
 8016852:	4620      	mov	r0, r4
 8016854:	bd10      	pop	{r4, pc}

08016856 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8016856:	b510      	push	{r4, lr}
 8016858:	2104      	movs	r1, #4
 801685a:	4604      	mov	r4, r0
 801685c:	f009 fa32 	bl	801fcc4 <_ZdlPvj>
 8016860:	4620      	mov	r0, r4
 8016862:	bd10      	pop	{r4, pc}

08016864 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8016864:	b510      	push	{r4, lr}
 8016866:	2104      	movs	r1, #4
 8016868:	4604      	mov	r4, r0
 801686a:	f009 fa2b 	bl	801fcc4 <_ZdlPvj>
 801686e:	4620      	mov	r0, r4
 8016870:	bd10      	pop	{r4, pc}

08016872 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 8016872:	b510      	push	{r4, lr}
 8016874:	2104      	movs	r1, #4
 8016876:	4604      	mov	r4, r0
 8016878:	f009 fa24 	bl	801fcc4 <_ZdlPvj>
 801687c:	4620      	mov	r0, r4
 801687e:	bd10      	pop	{r4, pc}

08016880 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 8016880:	b510      	push	{r4, lr}
 8016882:	2104      	movs	r1, #4
 8016884:	4604      	mov	r4, r0
 8016886:	f009 fa1d 	bl	801fcc4 <_ZdlPvj>
 801688a:	4620      	mov	r0, r4
 801688c:	bd10      	pop	{r4, pc}

0801688e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 801688e:	b510      	push	{r4, lr}
 8016890:	2104      	movs	r1, #4
 8016892:	4604      	mov	r4, r0
 8016894:	f009 fa16 	bl	801fcc4 <_ZdlPvj>
 8016898:	4620      	mov	r0, r4
 801689a:	bd10      	pop	{r4, pc}

0801689c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 801689c:	b510      	push	{r4, lr}
 801689e:	2104      	movs	r1, #4
 80168a0:	4604      	mov	r4, r0
 80168a2:	f009 fa0f 	bl	801fcc4 <_ZdlPvj>
 80168a6:	4620      	mov	r0, r4
 80168a8:	bd10      	pop	{r4, pc}
	...

080168ac <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 80168ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80168b0:	b091      	sub	sp, #68	; 0x44
 80168b2:	469b      	mov	fp, r3
 80168b4:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 80168b8:	4616      	mov	r6, r2
 80168ba:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
 80168be:	f9b3 2000 	ldrsh.w	r2, [r3]
 80168c2:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 80168c6:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80168ca:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80168ce:	4604      	mov	r4, r0
 80168d0:	460d      	mov	r5, r1
 80168d2:	4640      	mov	r0, r8
 80168d4:	4659      	mov	r1, fp
 80168d6:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 80168da:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 80168de:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 80168e2:	f7f3 fd33 	bl	800a34c <_ZN8touchgfx4RectaNERKS0_>
 80168e6:	4631      	mov	r1, r6
 80168e8:	4640      	mov	r0, r8
 80168ea:	f7f3 fd2f 	bl	800a34c <_ZN8touchgfx4RectaNERKS0_>
 80168ee:	4b74      	ldr	r3, [pc, #464]	; (8016ac0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 80168f0:	8818      	ldrh	r0, [r3, #0]
 80168f2:	4b74      	ldr	r3, [pc, #464]	; (8016ac4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 80168f4:	8819      	ldrh	r1, [r3, #0]
 80168f6:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 80168fa:	2b00      	cmp	r3, #0
 80168fc:	b202      	sxth	r2, r0
 80168fe:	b20e      	sxth	r6, r1
 8016900:	da07      	bge.n	8016912 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 8016902:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 8016906:	4463      	add	r3, ip
 8016908:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 801690c:	2300      	movs	r3, #0
 801690e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8016912:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 8016916:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801691a:	1ad2      	subs	r2, r2, r3
 801691c:	4594      	cmp	ip, r2
 801691e:	bfc4      	itt	gt
 8016920:	1ac2      	subgt	r2, r0, r3
 8016922:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
 8016926:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801692a:	2a00      	cmp	r2, #0
 801692c:	da07      	bge.n	801693e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 801692e:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
 8016932:	4462      	add	r2, ip
 8016934:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 8016938:	2200      	movs	r2, #0
 801693a:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 801693e:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 8016942:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 8016946:	eba6 060a 	sub.w	r6, r6, sl
 801694a:	42b2      	cmp	r2, r6
 801694c:	bfc4      	itt	gt
 801694e:	eba1 020a 	subgt.w	r2, r1, sl
 8016952:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
 8016956:	4a5c      	ldr	r2, [pc, #368]	; (8016ac8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 8016958:	7812      	ldrb	r2, [r2, #0]
 801695a:	b9a2      	cbnz	r2, 8016986 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 801695c:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 8016960:	4286      	cmp	r6, r0
 8016962:	4640      	mov	r0, r8
 8016964:	9303      	str	r3, [sp, #12]
 8016966:	bf14      	ite	ne
 8016968:	2600      	movne	r6, #0
 801696a:	2601      	moveq	r6, #1
 801696c:	f7f3 fd31 	bl	800a3d2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016970:	9b03      	ldr	r3, [sp, #12]
 8016972:	b160      	cbz	r0, 801698e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 8016974:	2300      	movs	r3, #0
 8016976:	8023      	strh	r3, [r4, #0]
 8016978:	8063      	strh	r3, [r4, #2]
 801697a:	80a3      	strh	r3, [r4, #4]
 801697c:	4620      	mov	r0, r4
 801697e:	80e3      	strh	r3, [r4, #6]
 8016980:	b011      	add	sp, #68	; 0x44
 8016982:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016986:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801698a:	428e      	cmp	r6, r1
 801698c:	e7e9      	b.n	8016962 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 801698e:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8016992:	9205      	str	r2, [sp, #20]
 8016994:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 8016998:	9206      	str	r2, [sp, #24]
 801699a:	f8bb 2000 	ldrh.w	r2, [fp]
 801699e:	900e      	str	r0, [sp, #56]	; 0x38
 80169a0:	1a9b      	subs	r3, r3, r2
 80169a2:	b21b      	sxth	r3, r3
 80169a4:	9303      	str	r3, [sp, #12]
 80169a6:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 80169aa:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 80169ae:	ebaa 0a03 	sub.w	sl, sl, r3
 80169b2:	fa0f f38a 	sxth.w	r3, sl
 80169b6:	9304      	str	r3, [sp, #16]
 80169b8:	9b03      	ldr	r3, [sp, #12]
 80169ba:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 80169be:	9b04      	ldr	r3, [sp, #16]
 80169c0:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 80169c4:	9b05      	ldr	r3, [sp, #20]
 80169c6:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80169ca:	a90e      	add	r1, sp, #56	; 0x38
 80169cc:	9b06      	ldr	r3, [sp, #24]
 80169ce:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80169d2:	a80c      	add	r0, sp, #48	; 0x30
 80169d4:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 80169d8:	f7f9 fcc2 	bl	8010360 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80169dc:	4640      	mov	r0, r8
 80169de:	f7f9 fc97 	bl	8010310 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80169e2:	a80e      	add	r0, sp, #56	; 0x38
 80169e4:	f7f9 fc94 	bl	8010310 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80169e8:	4b38      	ldr	r3, [pc, #224]	; (8016acc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 80169ea:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 80169ee:	881b      	ldrh	r3, [r3, #0]
 80169f0:	9307      	str	r3, [sp, #28]
 80169f2:	682b      	ldr	r3, [r5, #0]
 80169f4:	f8df b0d8 	ldr.w	fp, [pc, #216]	; 8016ad0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 80169f8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80169fa:	4628      	mov	r0, r5
 80169fc:	4798      	blx	r3
 80169fe:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
 8016a02:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 8016a06:	4681      	mov	r9, r0
 8016a08:	fb1a 3305 	smlabb	r3, sl, r5, r3
 8016a0c:	f8db 0000 	ldr.w	r0, [fp]
 8016a10:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8016a12:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8016a16:	6803      	ldr	r3, [r0, #0]
 8016a18:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8016a1a:	4798      	blx	r3
 8016a1c:	4607      	mov	r7, r0
 8016a1e:	f8db 0000 	ldr.w	r0, [fp]
 8016a22:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8016a26:	6803      	ldr	r3, [r0, #0]
 8016a28:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8016a2c:	9109      	str	r1, [sp, #36]	; 0x24
 8016a2e:	9208      	str	r2, [sp, #32]
 8016a30:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8016a32:	4798      	blx	r3
 8016a34:	f010 0f01 	tst.w	r0, #1
 8016a38:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8016a3c:	d012      	beq.n	8016a64 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 8016a3e:	f8db 0000 	ldr.w	r0, [fp]
 8016a42:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 8016a46:	6803      	ldr	r3, [r0, #0]
 8016a48:	9200      	str	r2, [sp, #0]
 8016a4a:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 8016a4c:	e898 0006 	ldmia.w	r8, {r1, r2}
 8016a50:	462b      	mov	r3, r5
 8016a52:	47b0      	blx	r6
 8016a54:	9b03      	ldr	r3, [sp, #12]
 8016a56:	8023      	strh	r3, [r4, #0]
 8016a58:	9b04      	ldr	r3, [sp, #16]
 8016a5a:	8063      	strh	r3, [r4, #2]
 8016a5c:	9b05      	ldr	r3, [sp, #20]
 8016a5e:	80a3      	strh	r3, [r4, #4]
 8016a60:	9b06      	ldr	r3, [sp, #24]
 8016a62:	e78b      	b.n	801697c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 8016a64:	fb09 f202 	mul.w	r2, r9, r2
 8016a68:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 8016a6c:	440f      	add	r7, r1
 8016a6e:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 8016a72:	b166      	cbz	r6, 8016a8e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 8016a74:	9a07      	ldr	r2, [sp, #28]
 8016a76:	4592      	cmp	sl, r2
 8016a78:	d109      	bne.n	8016a8e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 8016a7a:	f8db 0000 	ldr.w	r0, [fp]
 8016a7e:	6802      	ldr	r2, [r0, #0]
 8016a80:	fb09 f303 	mul.w	r3, r9, r3
 8016a84:	6b56      	ldr	r6, [r2, #52]	; 0x34
 8016a86:	4629      	mov	r1, r5
 8016a88:	463a      	mov	r2, r7
 8016a8a:	47b0      	blx	r6
 8016a8c:	e7e2      	b.n	8016a54 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 8016a8e:	fb0a f303 	mul.w	r3, sl, r3
 8016a92:	f8df b03c 	ldr.w	fp, [pc, #60]	; 8016ad0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 8016a96:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 8016a9a:	ea4f 064a 	mov.w	r6, sl, lsl #1
 8016a9e:	4545      	cmp	r5, r8
 8016aa0:	d2d8      	bcs.n	8016a54 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 8016aa2:	f8db 0000 	ldr.w	r0, [fp]
 8016aa6:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8016aaa:	6802      	ldr	r2, [r0, #0]
 8016aac:	4629      	mov	r1, r5
 8016aae:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 8016ab2:	005b      	lsls	r3, r3, #1
 8016ab4:	463a      	mov	r2, r7
 8016ab6:	47d0      	blx	sl
 8016ab8:	444f      	add	r7, r9
 8016aba:	4435      	add	r5, r6
 8016abc:	e7ef      	b.n	8016a9e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 8016abe:	bf00      	nop
 8016ac0:	20015350 	.word	0x20015350
 8016ac4:	20015352 	.word	0x20015352
 8016ac8:	20015354 	.word	0x20015354
 8016acc:	20015356 	.word	0x20015356
 8016ad0:	2001535c 	.word	0x2001535c

08016ad4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 8016ad4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016ad6:	4606      	mov	r6, r0
 8016ad8:	b087      	sub	sp, #28
 8016ada:	460c      	mov	r4, r1
 8016adc:	4617      	mov	r7, r2
 8016ade:	461d      	mov	r5, r3
 8016ae0:	b333      	cbz	r3, 8016b30 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8016ae2:	4608      	mov	r0, r1
 8016ae4:	f7f3 fc75 	bl	800a3d2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016ae8:	bb10      	cbnz	r0, 8016b30 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8016aea:	6820      	ldr	r0, [r4, #0]
 8016aec:	6861      	ldr	r1, [r4, #4]
 8016aee:	4c1c      	ldr	r4, [pc, #112]	; (8016b60 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 8016af0:	ab04      	add	r3, sp, #16
 8016af2:	c303      	stmia	r3!, {r0, r1}
 8016af4:	a804      	add	r0, sp, #16
 8016af6:	f7f9 fc0b 	bl	8010310 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016afa:	6820      	ldr	r0, [r4, #0]
 8016afc:	6803      	ldr	r3, [r0, #0]
 8016afe:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8016b00:	4798      	blx	r3
 8016b02:	2dff      	cmp	r5, #255	; 0xff
 8016b04:	d016      	beq.n	8016b34 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 8016b06:	f010 0f08 	tst.w	r0, #8
 8016b0a:	6820      	ldr	r0, [r4, #0]
 8016b0c:	d015      	beq.n	8016b3a <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 8016b0e:	2400      	movs	r4, #0
 8016b10:	6801      	ldr	r1, [r0, #0]
 8016b12:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8016b16:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8016b1a:	e9cd 5402 	strd	r5, r4, [sp, #8]
 8016b1e:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 8016b22:	9401      	str	r4, [sp, #4]
 8016b24:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 8016b28:	9400      	str	r4, [sp, #0]
 8016b2a:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 8016b2c:	4639      	mov	r1, r7
 8016b2e:	47a0      	blx	r4
 8016b30:	b007      	add	sp, #28
 8016b32:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8016b34:	f010 0f02 	tst.w	r0, #2
 8016b38:	e7e7      	b.n	8016b0a <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 8016b3a:	6803      	ldr	r3, [r0, #0]
 8016b3c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8016b3e:	4798      	blx	r3
 8016b40:	4b08      	ldr	r3, [pc, #32]	; (8016b64 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 8016b42:	881a      	ldrh	r2, [r3, #0]
 8016b44:	6833      	ldr	r3, [r6, #0]
 8016b46:	e9cd 7500 	strd	r7, r5, [sp]
 8016b4a:	4601      	mov	r1, r0
 8016b4c:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 8016b4e:	4630      	mov	r0, r6
 8016b50:	ab04      	add	r3, sp, #16
 8016b52:	47a8      	blx	r5
 8016b54:	6820      	ldr	r0, [r4, #0]
 8016b56:	6803      	ldr	r3, [r0, #0]
 8016b58:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016b5a:	4798      	blx	r3
 8016b5c:	e7e8      	b.n	8016b30 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8016b5e:	bf00      	nop
 8016b60:	2001535c 	.word	0x2001535c
 8016b64:	20015356 	.word	0x20015356

08016b68 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 8016b68:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8016b6c:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 8016b70:	9e08      	ldr	r6, [sp, #32]
 8016b72:	4688      	mov	r8, r1
 8016b74:	4614      	mov	r4, r2
 8016b76:	461d      	mov	r5, r3
 8016b78:	2f00      	cmp	r7, #0
 8016b7a:	f000 80a9 	beq.w	8016cd0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8016b7e:	4618      	mov	r0, r3
 8016b80:	f7f3 fc27 	bl	800a3d2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016b84:	2800      	cmp	r0, #0
 8016b86:	f040 80a3 	bne.w	8016cd0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8016b8a:	f9b5 1000 	ldrsh.w	r1, [r5]
 8016b8e:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8016b92:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 8016b96:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 8016b9a:	fb04 1303 	mla	r3, r4, r3, r1
 8016b9e:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 8016ba2:	4365      	muls	r5, r4
 8016ba4:	2fff      	cmp	r7, #255	; 0xff
 8016ba6:	eba4 0200 	sub.w	r2, r4, r0
 8016baa:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 8016bae:	ea4f 2816 	mov.w	r8, r6, lsr #8
 8016bb2:	d04a      	beq.n	8016c4a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 8016bb4:	b2bc      	uxth	r4, r7
 8016bb6:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 8016bba:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 8016bbe:	fa5f f788 	uxtb.w	r7, r8
 8016bc2:	b2f3      	uxtb	r3, r6
 8016bc4:	0040      	lsls	r0, r0, #1
 8016bc6:	fb0e fe04 	mul.w	lr, lr, r4
 8016bca:	4367      	muls	r7, r4
 8016bcc:	4363      	muls	r3, r4
 8016bce:	ea4f 0842 	mov.w	r8, r2, lsl #1
 8016bd2:	fa1f fc8c 	uxth.w	ip, ip
 8016bd6:	42a9      	cmp	r1, r5
 8016bd8:	d27a      	bcs.n	8016cd0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8016bda:	eb01 0900 	add.w	r9, r1, r0
 8016bde:	4549      	cmp	r1, r9
 8016be0:	d231      	bcs.n	8016c46 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 8016be2:	880a      	ldrh	r2, [r1, #0]
 8016be4:	1214      	asrs	r4, r2, #8
 8016be6:	10d6      	asrs	r6, r2, #3
 8016be8:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8016bec:	00d2      	lsls	r2, r2, #3
 8016bee:	b2d2      	uxtb	r2, r2
 8016bf0:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8016bf4:	fb14 f40c 	smulbb	r4, r4, ip
 8016bf8:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8016bfc:	4474      	add	r4, lr
 8016bfe:	fb12 f20c 	smulbb	r2, r2, ip
 8016c02:	b2a4      	uxth	r4, r4
 8016c04:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8016c08:	441a      	add	r2, r3
 8016c0a:	b292      	uxth	r2, r2
 8016c0c:	f104 0a01 	add.w	sl, r4, #1
 8016c10:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8016c14:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8016c18:	fb16 f60c 	smulbb	r6, r6, ip
 8016c1c:	f102 0a01 	add.w	sl, r2, #1
 8016c20:	443e      	add	r6, r7
 8016c22:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 8016c26:	b2b6      	uxth	r6, r6
 8016c28:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8016c2c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8016c30:	4322      	orrs	r2, r4
 8016c32:	1c74      	adds	r4, r6, #1
 8016c34:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 8016c38:	0976      	lsrs	r6, r6, #5
 8016c3a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8016c3e:	4332      	orrs	r2, r6
 8016c40:	f821 2b02 	strh.w	r2, [r1], #2
 8016c44:	e7cb      	b.n	8016bde <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 8016c46:	4441      	add	r1, r8
 8016c48:	e7c5      	b.n	8016bd6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 8016c4a:	4f22      	ldr	r7, [pc, #136]	; (8016cd4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 8016c4c:	0973      	lsrs	r3, r6, #5
 8016c4e:	ea08 0707 	and.w	r7, r8, r7
 8016c52:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016c56:	433b      	orrs	r3, r7
 8016c58:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8016c5c:	4333      	orrs	r3, r6
 8016c5e:	07e7      	lsls	r7, r4, #31
 8016c60:	b29b      	uxth	r3, r3
 8016c62:	d50b      	bpl.n	8016c7c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 8016c64:	0040      	lsls	r0, r0, #1
 8016c66:	0052      	lsls	r2, r2, #1
 8016c68:	42a9      	cmp	r1, r5
 8016c6a:	d231      	bcs.n	8016cd0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8016c6c:	180c      	adds	r4, r1, r0
 8016c6e:	42a1      	cmp	r1, r4
 8016c70:	d202      	bcs.n	8016c78 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 8016c72:	f821 3b02 	strh.w	r3, [r1], #2
 8016c76:	e7fa      	b.n	8016c6e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 8016c78:	4411      	add	r1, r2
 8016c7a:	e7f5      	b.n	8016c68 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 8016c7c:	078e      	lsls	r6, r1, #30
 8016c7e:	d008      	beq.n	8016c92 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 8016c80:	0066      	lsls	r6, r4, #1
 8016c82:	460a      	mov	r2, r1
 8016c84:	42aa      	cmp	r2, r5
 8016c86:	d202      	bcs.n	8016c8e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 8016c88:	8013      	strh	r3, [r2, #0]
 8016c8a:	4432      	add	r2, r6
 8016c8c:	e7fa      	b.n	8016c84 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 8016c8e:	3102      	adds	r1, #2
 8016c90:	3801      	subs	r0, #1
 8016c92:	07c2      	lsls	r2, r0, #31
 8016c94:	d50b      	bpl.n	8016cae <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 8016c96:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 8016c9a:	3a01      	subs	r2, #1
 8016c9c:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 8016ca0:	0066      	lsls	r6, r4, #1
 8016ca2:	42aa      	cmp	r2, r5
 8016ca4:	d202      	bcs.n	8016cac <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 8016ca6:	8013      	strh	r3, [r2, #0]
 8016ca8:	4432      	add	r2, r6
 8016caa:	e7fa      	b.n	8016ca2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 8016cac:	3801      	subs	r0, #1
 8016cae:	b178      	cbz	r0, 8016cd0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8016cb0:	1040      	asrs	r0, r0, #1
 8016cb2:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 8016cb6:	0080      	lsls	r0, r0, #2
 8016cb8:	0064      	lsls	r4, r4, #1
 8016cba:	42a9      	cmp	r1, r5
 8016cbc:	d208      	bcs.n	8016cd0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8016cbe:	180e      	adds	r6, r1, r0
 8016cc0:	460a      	mov	r2, r1
 8016cc2:	42b2      	cmp	r2, r6
 8016cc4:	d202      	bcs.n	8016ccc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 8016cc6:	f842 3b04 	str.w	r3, [r2], #4
 8016cca:	e7fa      	b.n	8016cc2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 8016ccc:	4421      	add	r1, r4
 8016cce:	e7f4      	b.n	8016cba <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 8016cd0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8016cd4:	00fff800 	.word	0x00fff800

08016cd8 <_ZN8touchgfx8LCD16bppC1Ev>:
 8016cd8:	2200      	movs	r2, #0
 8016cda:	4910      	ldr	r1, [pc, #64]	; (8016d1c <_ZN8touchgfx8LCD16bppC1Ev+0x44>)
 8016cdc:	6042      	str	r2, [r0, #4]
 8016cde:	6001      	str	r1, [r0, #0]
 8016ce0:	e9c0 2202 	strd	r2, r2, [r0, #8]
 8016ce4:	e9c0 2204 	strd	r2, r2, [r0, #16]
 8016ce8:	e9c0 2206 	strd	r2, r2, [r0, #24]
 8016cec:	e9c0 2208 	strd	r2, r2, [r0, #32]
 8016cf0:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 8016cf4:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 8016cf8:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 8016cfc:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 8016d00:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 8016d04:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 8016d08:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 8016d0c:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 8016d10:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 8016d14:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 8016d18:	4770      	bx	lr
 8016d1a:	bf00      	nop
 8016d1c:	08023a84 	.word	0x08023a84

08016d20 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 8016d20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016d24:	460d      	mov	r5, r1
 8016d26:	b08d      	sub	sp, #52	; 0x34
 8016d28:	4604      	mov	r4, r0
 8016d2a:	6808      	ldr	r0, [r1, #0]
 8016d2c:	6849      	ldr	r1, [r1, #4]
 8016d2e:	4699      	mov	r9, r3
 8016d30:	ab08      	add	r3, sp, #32
 8016d32:	c303      	stmia	r3!, {r0, r1}
 8016d34:	6810      	ldr	r0, [r2, #0]
 8016d36:	6851      	ldr	r1, [r2, #4]
 8016d38:	ab0a      	add	r3, sp, #40	; 0x28
 8016d3a:	c303      	stmia	r3!, {r0, r1}
 8016d3c:	a808      	add	r0, sp, #32
 8016d3e:	f7f9 fae7 	bl	8010310 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016d42:	4629      	mov	r1, r5
 8016d44:	a80a      	add	r0, sp, #40	; 0x28
 8016d46:	f7f9 fb0b 	bl	8010360 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016d4a:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8016d4e:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 8016d52:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 8016d56:	4d63      	ldr	r5, [pc, #396]	; (8016ee4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8016d58:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 8016d5c:	6828      	ldr	r0, [r5, #0]
 8016d5e:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 8016d62:	fb11 2103 	smlabb	r1, r1, r3, r2
 8016d66:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8016d6a:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 8016d6e:	440a      	add	r2, r1
 8016d70:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8016d74:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8016d78:	4413      	add	r3, r2
 8016d7a:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8016d7e:	6803      	ldr	r3, [r0, #0]
 8016d80:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8016d82:	4798      	blx	r3
 8016d84:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8016d88:	d119      	bne.n	8016dbe <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 8016d8a:	f010 0f20 	tst.w	r0, #32
 8016d8e:	6828      	ldr	r0, [r5, #0]
 8016d90:	d018      	beq.n	8016dc4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 8016d92:	2500      	movs	r5, #0
 8016d94:	6801      	ldr	r1, [r0, #0]
 8016d96:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8016d9a:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 8016d9e:	e9cd 9503 	strd	r9, r5, [sp, #12]
 8016da2:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 8016da6:	9502      	str	r5, [sp, #8]
 8016da8:	b2b6      	uxth	r6, r6
 8016daa:	fa1f f588 	uxth.w	r5, r8
 8016dae:	9601      	str	r6, [sp, #4]
 8016db0:	9500      	str	r5, [sp, #0]
 8016db2:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 8016db4:	4621      	mov	r1, r4
 8016db6:	47a8      	blx	r5
 8016db8:	b00d      	add	sp, #52	; 0x34
 8016dba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016dbe:	f010 0f40 	tst.w	r0, #64	; 0x40
 8016dc2:	e7e4      	b.n	8016d8e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 8016dc4:	6803      	ldr	r3, [r0, #0]
 8016dc6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8016dc8:	4798      	blx	r3
 8016dca:	4947      	ldr	r1, [pc, #284]	; (8016ee8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 8016dcc:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8016dd0:	880b      	ldrh	r3, [r1, #0]
 8016dd2:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 8016dd6:	fb03 5202 	mla	r2, r3, r2, r5
 8016dda:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8016dde:	4373      	muls	r3, r6
 8016de0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8016de4:	9307      	str	r3, [sp, #28]
 8016de6:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8016dea:	9306      	str	r3, [sp, #24]
 8016dec:	468a      	mov	sl, r1
 8016dee:	9b07      	ldr	r3, [sp, #28]
 8016df0:	4298      	cmp	r0, r3
 8016df2:	d270      	bcs.n	8016ed6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 8016df4:	9b06      	ldr	r3, [sp, #24]
 8016df6:	4621      	mov	r1, r4
 8016df8:	eb00 0b03 	add.w	fp, r0, r3
 8016dfc:	4558      	cmp	r0, fp
 8016dfe:	d25d      	bcs.n	8016ebc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 8016e00:	f851 4b04 	ldr.w	r4, [r1], #4
 8016e04:	0e23      	lsrs	r3, r4, #24
 8016e06:	d014      	beq.n	8016e32 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8016e08:	2bff      	cmp	r3, #255	; 0xff
 8016e0a:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 8016e0e:	d112      	bne.n	8016e36 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8016e10:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8016e14:	d10f      	bne.n	8016e36 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8016e16:	0963      	lsrs	r3, r4, #5
 8016e18:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8016e1c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016e20:	f02c 0c07 	bic.w	ip, ip, #7
 8016e24:	ea43 0c0c 	orr.w	ip, r3, ip
 8016e28:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8016e2c:	ea4c 0404 	orr.w	r4, ip, r4
 8016e30:	8004      	strh	r4, [r0, #0]
 8016e32:	3002      	adds	r0, #2
 8016e34:	e7e2      	b.n	8016dfc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 8016e36:	fb09 f303 	mul.w	r3, r9, r3
 8016e3a:	8807      	ldrh	r7, [r0, #0]
 8016e3c:	1c5a      	adds	r2, r3, #1
 8016e3e:	eb02 2223 	add.w	r2, r2, r3, asr #8
 8016e42:	1212      	asrs	r2, r2, #8
 8016e44:	123e      	asrs	r6, r7, #8
 8016e46:	b293      	uxth	r3, r2
 8016e48:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 8016e4c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8016e50:	43d2      	mvns	r2, r2
 8016e52:	b2d2      	uxtb	r2, r2
 8016e54:	10fd      	asrs	r5, r7, #3
 8016e56:	fb1e fe03 	smulbb	lr, lr, r3
 8016e5a:	00ff      	lsls	r7, r7, #3
 8016e5c:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8016e60:	fb06 e602 	mla	r6, r6, r2, lr
 8016e64:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8016e68:	b2ff      	uxtb	r7, r7
 8016e6a:	fa5f fc8c 	uxtb.w	ip, ip
 8016e6e:	b2e4      	uxtb	r4, r4
 8016e70:	b2b6      	uxth	r6, r6
 8016e72:	fb1c fc03 	smulbb	ip, ip, r3
 8016e76:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8016e7a:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 8016e7e:	fb14 f403 	smulbb	r4, r4, r3
 8016e82:	fb05 c502 	mla	r5, r5, r2, ip
 8016e86:	f106 0e01 	add.w	lr, r6, #1
 8016e8a:	fb07 4702 	mla	r7, r7, r2, r4
 8016e8e:	b2ad      	uxth	r5, r5
 8016e90:	b2bf      	uxth	r7, r7
 8016e92:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 8016e96:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 8016e9a:	f105 0c01 	add.w	ip, r5, #1
 8016e9e:	1c7e      	adds	r6, r7, #1
 8016ea0:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8016ea4:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8016ea8:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8016eac:	096d      	lsrs	r5, r5, #5
 8016eae:	ea46 060e 	orr.w	r6, r6, lr
 8016eb2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8016eb6:	432e      	orrs	r6, r5
 8016eb8:	8006      	strh	r6, [r0, #0]
 8016eba:	e7ba      	b.n	8016e32 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8016ebc:	f8ba 3000 	ldrh.w	r3, [sl]
 8016ec0:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 8016ec4:	eba3 0308 	sub.w	r3, r3, r8
 8016ec8:	eba4 0408 	sub.w	r4, r4, r8
 8016ecc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8016ed0:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 8016ed4:	e78b      	b.n	8016dee <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 8016ed6:	4b03      	ldr	r3, [pc, #12]	; (8016ee4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8016ed8:	6818      	ldr	r0, [r3, #0]
 8016eda:	6803      	ldr	r3, [r0, #0]
 8016edc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016ede:	4798      	blx	r3
 8016ee0:	e76a      	b.n	8016db8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 8016ee2:	bf00      	nop
 8016ee4:	2001535c 	.word	0x2001535c
 8016ee8:	20015356 	.word	0x20015356

08016eec <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 8016eec:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8016ef0:	460c      	mov	r4, r1
 8016ef2:	b085      	sub	sp, #20
 8016ef4:	6810      	ldr	r0, [r2, #0]
 8016ef6:	6851      	ldr	r1, [r2, #4]
 8016ef8:	466d      	mov	r5, sp
 8016efa:	c503      	stmia	r5!, {r0, r1}
 8016efc:	6818      	ldr	r0, [r3, #0]
 8016efe:	6859      	ldr	r1, [r3, #4]
 8016f00:	4616      	mov	r6, r2
 8016f02:	c503      	stmia	r5!, {r0, r1}
 8016f04:	4668      	mov	r0, sp
 8016f06:	f7f9 fa03 	bl	8010310 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016f0a:	4631      	mov	r1, r6
 8016f0c:	a802      	add	r0, sp, #8
 8016f0e:	f7f9 fa27 	bl	8010360 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016f12:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 8016f16:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 8016f1a:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8016f1e:	4d28      	ldr	r5, [pc, #160]	; (8016fc0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 8016f20:	4e28      	ldr	r6, [pc, #160]	; (8016fc4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 8016f22:	6828      	ldr	r0, [r5, #0]
 8016f24:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8016f28:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 8016f2c:	fb11 2103 	smlabb	r1, r1, r3, r2
 8016f30:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8016f34:	f8bd 1000 	ldrh.w	r1, [sp]
 8016f38:	440a      	add	r2, r1
 8016f3a:	f8ad 2008 	strh.w	r2, [sp, #8]
 8016f3e:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8016f42:	4413      	add	r3, r2
 8016f44:	f8ad 300a 	strh.w	r3, [sp, #10]
 8016f48:	6803      	ldr	r3, [r0, #0]
 8016f4a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8016f4c:	4798      	blx	r3
 8016f4e:	8833      	ldrh	r3, [r6, #0]
 8016f50:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 8016f54:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8016f58:	f8df e06c 	ldr.w	lr, [pc, #108]	; 8016fc8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 8016f5c:	fb03 1202 	mla	r2, r3, r2, r1
 8016f60:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8016f64:	fb08 f303 	mul.w	r3, r8, r3
 8016f68:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8016f6c:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 8016f70:	4298      	cmp	r0, r3
 8016f72:	d21d      	bcs.n	8016fb0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 8016f74:	eb00 080c 	add.w	r8, r0, ip
 8016f78:	4540      	cmp	r0, r8
 8016f7a:	d20f      	bcs.n	8016f9c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 8016f7c:	f854 1b04 	ldr.w	r1, [r4], #4
 8016f80:	ea4f 1951 	mov.w	r9, r1, lsr #5
 8016f84:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 8016f88:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8016f8c:	ea42 0209 	orr.w	r2, r2, r9
 8016f90:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8016f94:	430a      	orrs	r2, r1
 8016f96:	f820 2b02 	strh.w	r2, [r0], #2
 8016f9a:	e7ed      	b.n	8016f78 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 8016f9c:	8832      	ldrh	r2, [r6, #0]
 8016f9e:	1bd2      	subs	r2, r2, r7
 8016fa0:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8016fa4:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 8016fa8:	1bd2      	subs	r2, r2, r7
 8016faa:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 8016fae:	e7df      	b.n	8016f70 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 8016fb0:	6828      	ldr	r0, [r5, #0]
 8016fb2:	6803      	ldr	r3, [r0, #0]
 8016fb4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016fb6:	4798      	blx	r3
 8016fb8:	b005      	add	sp, #20
 8016fba:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8016fbe:	bf00      	nop
 8016fc0:	2001535c 	.word	0x2001535c
 8016fc4:	20015356 	.word	0x20015356
 8016fc8:	fffff800 	.word	0xfffff800

08016fcc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 8016fcc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8016fd0:	460e      	mov	r6, r1
 8016fd2:	b08e      	sub	sp, #56	; 0x38
 8016fd4:	4604      	mov	r4, r0
 8016fd6:	6808      	ldr	r0, [r1, #0]
 8016fd8:	6849      	ldr	r1, [r1, #4]
 8016fda:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 80171b4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 8016fde:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 80171b8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 8016fe2:	461d      	mov	r5, r3
 8016fe4:	ab0a      	add	r3, sp, #40	; 0x28
 8016fe6:	c303      	stmia	r3!, {r0, r1}
 8016fe8:	6810      	ldr	r0, [r2, #0]
 8016fea:	6851      	ldr	r1, [r2, #4]
 8016fec:	ab0c      	add	r3, sp, #48	; 0x30
 8016fee:	c303      	stmia	r3!, {r0, r1}
 8016ff0:	a80a      	add	r0, sp, #40	; 0x28
 8016ff2:	f7f9 f98d 	bl	8010310 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016ff6:	4631      	mov	r1, r6
 8016ff8:	a80c      	add	r0, sp, #48	; 0x30
 8016ffa:	f7f9 f9b1 	bl	8010360 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016ffe:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8017002:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8017006:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801700a:	f8d8 0000 	ldr.w	r0, [r8]
 801700e:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 8017012:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 8017016:	fb11 2103 	smlabb	r1, r1, r3, r2
 801701a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801701e:	440c      	add	r4, r1
 8017020:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 8017024:	440a      	add	r2, r1
 8017026:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 801702a:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 801702e:	4413      	add	r3, r2
 8017030:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8017034:	6803      	ldr	r3, [r0, #0]
 8017036:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017038:	4798      	blx	r3
 801703a:	2dff      	cmp	r5, #255	; 0xff
 801703c:	d124      	bne.n	8017088 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 801703e:	f010 0f01 	tst.w	r0, #1
 8017042:	f8d8 0000 	ldr.w	r0, [r8]
 8017046:	d022      	beq.n	801708e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 8017048:	2100      	movs	r1, #0
 801704a:	f8d0 c000 	ldr.w	ip, [r0]
 801704e:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8017052:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 8017056:	e9cd 1107 	strd	r1, r1, [sp, #28]
 801705a:	f04f 0e01 	mov.w	lr, #1
 801705e:	f8cd e018 	str.w	lr, [sp, #24]
 8017062:	f8b9 e000 	ldrh.w	lr, [r9]
 8017066:	9503      	str	r5, [sp, #12]
 8017068:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 801706c:	b2b6      	uxth	r6, r6
 801706e:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8017072:	9102      	str	r1, [sp, #8]
 8017074:	b2bf      	uxth	r7, r7
 8017076:	9601      	str	r6, [sp, #4]
 8017078:	9700      	str	r7, [sp, #0]
 801707a:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 801707e:	4621      	mov	r1, r4
 8017080:	47a8      	blx	r5
 8017082:	b00e      	add	sp, #56	; 0x38
 8017084:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017088:	f010 0f04 	tst.w	r0, #4
 801708c:	e7d9      	b.n	8017042 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 801708e:	6803      	ldr	r3, [r0, #0]
 8017090:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017092:	4798      	blx	r3
 8017094:	f8b9 3000 	ldrh.w	r3, [r9]
 8017098:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801709c:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 80170a0:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 80170a4:	fb03 1202 	mla	r2, r3, r2, r1
 80170a8:	ebac 0c07 	sub.w	ip, ip, r7
 80170ac:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80170b0:	435e      	muls	r6, r3
 80170b2:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 80170b6:	2dff      	cmp	r5, #255	; 0xff
 80170b8:	eba3 0707 	sub.w	r7, r3, r7
 80170bc:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 80170c0:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 80170c4:	ea4f 0747 	mov.w	r7, r7, lsl #1
 80170c8:	d049      	beq.n	801715e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 80170ca:	43eb      	mvns	r3, r5
 80170cc:	fa1f f985 	uxth.w	r9, r5
 80170d0:	b2db      	uxtb	r3, r3
 80170d2:	42b0      	cmp	r0, r6
 80170d4:	d266      	bcs.n	80171a4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 80170d6:	eb00 0a0e 	add.w	sl, r0, lr
 80170da:	4550      	cmp	r0, sl
 80170dc:	4621      	mov	r1, r4
 80170de:	f104 0403 	add.w	r4, r4, #3
 80170e2:	d25b      	bcs.n	801719c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 80170e4:	8802      	ldrh	r2, [r0, #0]
 80170e6:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 80170ea:	ea4f 2822 	mov.w	r8, r2, asr #8
 80170ee:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 80170f2:	fb11 f109 	smulbb	r1, r1, r9
 80170f6:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 80170fa:	10d5      	asrs	r5, r2, #3
 80170fc:	fb08 1803 	mla	r8, r8, r3, r1
 8017100:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 8017104:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8017108:	fb11 f109 	smulbb	r1, r1, r9
 801710c:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8017110:	fb05 1503 	mla	r5, r5, r3, r1
 8017114:	00d2      	lsls	r2, r2, #3
 8017116:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801711a:	b2d2      	uxtb	r2, r2
 801711c:	fb11 f109 	smulbb	r1, r1, r9
 8017120:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8017124:	fa1f f888 	uxth.w	r8, r8
 8017128:	fb02 1203 	mla	r2, r2, r3, r1
 801712c:	b292      	uxth	r2, r2
 801712e:	f108 0101 	add.w	r1, r8, #1
 8017132:	b2ad      	uxth	r5, r5
 8017134:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 8017138:	1c51      	adds	r1, r2, #1
 801713a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801713e:	1c69      	adds	r1, r5, #1
 8017140:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8017144:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 8017148:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801714c:	096d      	lsrs	r5, r5, #5
 801714e:	ea42 0208 	orr.w	r2, r2, r8
 8017152:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8017156:	432a      	orrs	r2, r5
 8017158:	f820 2b02 	strh.w	r2, [r0], #2
 801715c:	e7bd      	b.n	80170da <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 801715e:	4a14      	ldr	r2, [pc, #80]	; (80171b0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 8017160:	42b0      	cmp	r0, r6
 8017162:	d21f      	bcs.n	80171a4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8017164:	eb00 050e 	add.w	r5, r0, lr
 8017168:	42a8      	cmp	r0, r5
 801716a:	4621      	mov	r1, r4
 801716c:	f104 0403 	add.w	r4, r4, #3
 8017170:	d210      	bcs.n	8017194 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 8017172:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 8017176:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801717a:	00db      	lsls	r3, r3, #3
 801717c:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 8017180:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017184:	430b      	orrs	r3, r1
 8017186:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801718a:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 801718e:	f820 3b02 	strh.w	r3, [r0], #2
 8017192:	e7e9      	b.n	8017168 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 8017194:	4438      	add	r0, r7
 8017196:	eb01 040c 	add.w	r4, r1, ip
 801719a:	e7e1      	b.n	8017160 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 801719c:	4438      	add	r0, r7
 801719e:	eb01 040c 	add.w	r4, r1, ip
 80171a2:	e796      	b.n	80170d2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 80171a4:	4b03      	ldr	r3, [pc, #12]	; (80171b4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 80171a6:	6818      	ldr	r0, [r3, #0]
 80171a8:	6803      	ldr	r3, [r0, #0]
 80171aa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80171ac:	4798      	blx	r3
 80171ae:	e768      	b.n	8017082 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 80171b0:	fffff800 	.word	0xfffff800
 80171b4:	2001535c 	.word	0x2001535c
 80171b8:	20015356 	.word	0x20015356

080171bc <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 80171bc:	b4f0      	push	{r4, r5, r6, r7}
 80171be:	4616      	mov	r6, r2
 80171c0:	2e01      	cmp	r6, #1
 80171c2:	461c      	mov	r4, r3
 80171c4:	460d      	mov	r5, r1
 80171c6:	9a04      	ldr	r2, [sp, #16]
 80171c8:	f89d 3014 	ldrb.w	r3, [sp, #20]
 80171cc:	f89d 7018 	ldrb.w	r7, [sp, #24]
 80171d0:	d012      	beq.n	80171f8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 80171d2:	d303      	bcc.n	80171dc <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 80171d4:	2e02      	cmp	r6, #2
 80171d6:	d00a      	beq.n	80171ee <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 80171d8:	bcf0      	pop	{r4, r5, r6, r7}
 80171da:	4770      	bx	lr
 80171dc:	6805      	ldr	r5, [r0, #0]
 80171de:	e9cd 3704 	strd	r3, r7, [sp, #16]
 80171e2:	68ed      	ldr	r5, [r5, #12]
 80171e4:	4613      	mov	r3, r2
 80171e6:	46ac      	mov	ip, r5
 80171e8:	4622      	mov	r2, r4
 80171ea:	bcf0      	pop	{r4, r5, r6, r7}
 80171ec:	4760      	bx	ip
 80171ee:	4621      	mov	r1, r4
 80171f0:	4628      	mov	r0, r5
 80171f2:	bcf0      	pop	{r4, r5, r6, r7}
 80171f4:	f7ff bd94 	b.w	8016d20 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80171f8:	4621      	mov	r1, r4
 80171fa:	4628      	mov	r0, r5
 80171fc:	bcf0      	pop	{r4, r5, r6, r7}
 80171fe:	f7ff bee5 	b.w	8016fcc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

08017204 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 8017204:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017208:	4681      	mov	r9, r0
 801720a:	b093      	sub	sp, #76	; 0x4c
 801720c:	6810      	ldr	r0, [r2, #0]
 801720e:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 8017212:	4f6d      	ldr	r7, [pc, #436]	; (80173c8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 8017214:	4688      	mov	r8, r1
 8017216:	6851      	ldr	r1, [r2, #4]
 8017218:	ac0e      	add	r4, sp, #56	; 0x38
 801721a:	c403      	stmia	r4!, {r0, r1}
 801721c:	6818      	ldr	r0, [r3, #0]
 801721e:	6859      	ldr	r1, [r3, #4]
 8017220:	ac10      	add	r4, sp, #64	; 0x40
 8017222:	4616      	mov	r6, r2
 8017224:	c403      	stmia	r4!, {r0, r1}
 8017226:	a80e      	add	r0, sp, #56	; 0x38
 8017228:	f7f9 f872 	bl	8010310 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801722c:	4631      	mov	r1, r6
 801722e:	a810      	add	r0, sp, #64	; 0x40
 8017230:	f7f9 f896 	bl	8010360 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017234:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 8017238:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 801723c:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 8017240:	4e62      	ldr	r6, [pc, #392]	; (80173cc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8017242:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 8017246:	6830      	ldr	r0, [r6, #0]
 8017248:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 801724c:	fb11 2103 	smlabb	r1, r1, r3, r2
 8017250:	4489      	add	r9, r1
 8017252:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 8017256:	440a      	add	r2, r1
 8017258:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 801725c:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8017260:	4413      	add	r3, r2
 8017262:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8017266:	6803      	ldr	r3, [r0, #0]
 8017268:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801726a:	4798      	blx	r3
 801726c:	f010 0f80 	tst.w	r0, #128	; 0x80
 8017270:	6830      	ldr	r0, [r6, #0]
 8017272:	d01d      	beq.n	80172b0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 8017274:	2200      	movs	r2, #0
 8017276:	6801      	ldr	r1, [r0, #0]
 8017278:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 801727c:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8017280:	220b      	movs	r2, #11
 8017282:	9207      	str	r2, [sp, #28]
 8017284:	883a      	ldrh	r2, [r7, #0]
 8017286:	9206      	str	r2, [sp, #24]
 8017288:	2201      	movs	r2, #1
 801728a:	e9cd a204 	strd	sl, r2, [sp, #16]
 801728e:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 8017292:	9203      	str	r2, [sp, #12]
 8017294:	b2a4      	uxth	r4, r4
 8017296:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 801729a:	9200      	str	r2, [sp, #0]
 801729c:	b2ad      	uxth	r5, r5
 801729e:	9502      	str	r5, [sp, #8]
 80172a0:	9401      	str	r4, [sp, #4]
 80172a2:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 80172a4:	4642      	mov	r2, r8
 80172a6:	4649      	mov	r1, r9
 80172a8:	47a0      	blx	r4
 80172aa:	b013      	add	sp, #76	; 0x4c
 80172ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80172b0:	6803      	ldr	r3, [r0, #0]
 80172b2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80172b4:	4798      	blx	r3
 80172b6:	883b      	ldrh	r3, [r7, #0]
 80172b8:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 80172bc:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 80172c0:	fb03 1202 	mla	r2, r3, r2, r1
 80172c4:	435d      	muls	r5, r3
 80172c6:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80172ca:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 80172ce:	920c      	str	r2, [sp, #48]	; 0x30
 80172d0:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 80172d4:	1b12      	subs	r2, r2, r4
 80172d6:	920d      	str	r2, [sp, #52]	; 0x34
 80172d8:	0062      	lsls	r2, r4, #1
 80172da:	1b1c      	subs	r4, r3, r4
 80172dc:	0063      	lsls	r3, r4, #1
 80172de:	920a      	str	r2, [sp, #40]	; 0x28
 80172e0:	930b      	str	r3, [sp, #44]	; 0x2c
 80172e2:	f04f 0e04 	mov.w	lr, #4
 80172e6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80172e8:	4298      	cmp	r0, r3
 80172ea:	d266      	bcs.n	80173ba <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 80172ec:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80172ee:	eb00 0b03 	add.w	fp, r0, r3
 80172f2:	4558      	cmp	r0, fp
 80172f4:	d25c      	bcs.n	80173b0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 80172f6:	f819 3b01 	ldrb.w	r3, [r9], #1
 80172fa:	fb1e e303 	smlabb	r3, lr, r3, lr
 80172fe:	f858 2003 	ldr.w	r2, [r8, r3]
 8017302:	0e11      	lsrs	r1, r2, #24
 8017304:	d012      	beq.n	801732c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8017306:	29ff      	cmp	r1, #255	; 0xff
 8017308:	ea4f 2712 	mov.w	r7, r2, lsr #8
 801730c:	d110      	bne.n	8017330 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801730e:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8017312:	d10d      	bne.n	8017330 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8017314:	0953      	lsrs	r3, r2, #5
 8017316:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 801731a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801731e:	f027 0707 	bic.w	r7, r7, #7
 8017322:	431f      	orrs	r7, r3
 8017324:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8017328:	433a      	orrs	r2, r7
 801732a:	8002      	strh	r2, [r0, #0]
 801732c:	3002      	adds	r0, #2
 801732e:	e7e0      	b.n	80172f2 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 8017330:	fb0a f101 	mul.w	r1, sl, r1
 8017334:	8806      	ldrh	r6, [r0, #0]
 8017336:	1c4b      	adds	r3, r1, #1
 8017338:	eb03 2321 	add.w	r3, r3, r1, asr #8
 801733c:	1235      	asrs	r5, r6, #8
 801733e:	10f4      	asrs	r4, r6, #3
 8017340:	121b      	asrs	r3, r3, #8
 8017342:	00f6      	lsls	r6, r6, #3
 8017344:	b299      	uxth	r1, r3
 8017346:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 801734a:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801734e:	b2f6      	uxtb	r6, r6
 8017350:	43db      	mvns	r3, r3
 8017352:	b2d2      	uxtb	r2, r2
 8017354:	b2db      	uxtb	r3, r3
 8017356:	fb1c fc01 	smulbb	ip, ip, r1
 801735a:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801735e:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8017362:	fb12 f201 	smulbb	r2, r2, r1
 8017366:	fb05 c503 	mla	r5, r5, r3, ip
 801736a:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801736e:	b2ff      	uxtb	r7, r7
 8017370:	fb06 2203 	mla	r2, r6, r3, r2
 8017374:	b2ad      	uxth	r5, r5
 8017376:	fb17 f701 	smulbb	r7, r7, r1
 801737a:	b292      	uxth	r2, r2
 801737c:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 8017380:	fb04 7403 	mla	r4, r4, r3, r7
 8017384:	f105 0c01 	add.w	ip, r5, #1
 8017388:	1c57      	adds	r7, r2, #1
 801738a:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801738e:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8017392:	b2a4      	uxth	r4, r4
 8017394:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8017398:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801739c:	433d      	orrs	r5, r7
 801739e:	1c67      	adds	r7, r4, #1
 80173a0:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 80173a4:	0964      	lsrs	r4, r4, #5
 80173a6:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80173aa:	4325      	orrs	r5, r4
 80173ac:	8005      	strh	r5, [r0, #0]
 80173ae:	e7bd      	b.n	801732c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 80173b0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80173b2:	4418      	add	r0, r3
 80173b4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80173b6:	4499      	add	r9, r3
 80173b8:	e795      	b.n	80172e6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 80173ba:	4b04      	ldr	r3, [pc, #16]	; (80173cc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 80173bc:	6818      	ldr	r0, [r3, #0]
 80173be:	6803      	ldr	r3, [r0, #0]
 80173c0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80173c2:	4798      	blx	r3
 80173c4:	e771      	b.n	80172aa <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 80173c6:	bf00      	nop
 80173c8:	20015356 	.word	0x20015356
 80173cc:	2001535c 	.word	0x2001535c

080173d0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 80173d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80173d4:	b087      	sub	sp, #28
 80173d6:	4680      	mov	r8, r0
 80173d8:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 80173dc:	460d      	mov	r5, r1
 80173de:	4614      	mov	r4, r2
 80173e0:	2e00      	cmp	r6, #0
 80173e2:	f000 80b9 	beq.w	8017558 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 80173e6:	6810      	ldr	r0, [r2, #0]
 80173e8:	6851      	ldr	r1, [r2, #4]
 80173ea:	af02      	add	r7, sp, #8
 80173ec:	c703      	stmia	r7!, {r0, r1}
 80173ee:	6818      	ldr	r0, [r3, #0]
 80173f0:	6859      	ldr	r1, [r3, #4]
 80173f2:	af04      	add	r7, sp, #16
 80173f4:	c703      	stmia	r7!, {r0, r1}
 80173f6:	a802      	add	r0, sp, #8
 80173f8:	f7f8 ff8a 	bl	8010310 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80173fc:	4621      	mov	r1, r4
 80173fe:	a804      	add	r0, sp, #16
 8017400:	f7f8 ffae 	bl	8010360 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017404:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8017408:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801740c:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 8017410:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 8017414:	fb14 2103 	smlabb	r1, r4, r3, r2
 8017418:	eb08 0401 	add.w	r4, r8, r1
 801741c:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8017420:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8017424:	440a      	add	r2, r1
 8017426:	f8ad 2010 	strh.w	r2, [sp, #16]
 801742a:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801742e:	4413      	add	r3, r2
 8017430:	f8ad 3012 	strh.w	r3, [sp, #18]
 8017434:	4b4a      	ldr	r3, [pc, #296]	; (8017560 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8017436:	6818      	ldr	r0, [r3, #0]
 8017438:	6803      	ldr	r3, [r0, #0]
 801743a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801743c:	4798      	blx	r3
 801743e:	4b49      	ldr	r3, [pc, #292]	; (8017564 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 8017440:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 8017444:	881a      	ldrh	r2, [r3, #0]
 8017446:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 801744a:	2eff      	cmp	r6, #255	; 0xff
 801744c:	fb02 c101 	mla	r1, r2, r1, ip
 8017450:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8017454:	fb02 f207 	mul.w	r2, r2, r7
 8017458:	f105 0104 	add.w	r1, r5, #4
 801745c:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 8017460:	461d      	mov	r5, r3
 8017462:	d05a      	beq.n	801751a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 8017464:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 8017468:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801746c:	b2b6      	uxth	r6, r6
 801746e:	fa1f fe8e 	uxth.w	lr, lr
 8017472:	9301      	str	r3, [sp, #4]
 8017474:	4282      	cmp	r2, r0
 8017476:	d96a      	bls.n	801754e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8017478:	eb00 0b0a 	add.w	fp, r0, sl
 801747c:	4583      	cmp	fp, r0
 801747e:	d940      	bls.n	8017502 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 8017480:	f814 3b01 	ldrb.w	r3, [r4], #1
 8017484:	8805      	ldrh	r5, [r0, #0]
 8017486:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801748a:	122f      	asrs	r7, r5, #8
 801748c:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8017490:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8017494:	fb17 f70e 	smulbb	r7, r7, lr
 8017498:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801749c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80174a0:	00ed      	lsls	r5, r5, #3
 80174a2:	fb0c 7c06 	mla	ip, ip, r6, r7
 80174a6:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 80174aa:	10df      	asrs	r7, r3, #3
 80174ac:	b2ed      	uxtb	r5, r5
 80174ae:	00db      	lsls	r3, r3, #3
 80174b0:	fa1f fc8c 	uxth.w	ip, ip
 80174b4:	fb19 f90e 	smulbb	r9, r9, lr
 80174b8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80174bc:	b2db      	uxtb	r3, r3
 80174be:	fb15 f50e 	smulbb	r5, r5, lr
 80174c2:	fb07 9706 	mla	r7, r7, r6, r9
 80174c6:	fb03 5306 	mla	r3, r3, r6, r5
 80174ca:	f10c 0901 	add.w	r9, ip, #1
 80174ce:	b29b      	uxth	r3, r3
 80174d0:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 80174d4:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 80174d8:	f103 0c01 	add.w	ip, r3, #1
 80174dc:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 80174e0:	b2bf      	uxth	r7, r7
 80174e2:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80174e6:	ea4c 0c09 	orr.w	ip, ip, r9
 80174ea:	f107 0901 	add.w	r9, r7, #1
 80174ee:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 80174f2:	097f      	lsrs	r7, r7, #5
 80174f4:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80174f8:	ea4c 0c07 	orr.w	ip, ip, r7
 80174fc:	f820 cb02 	strh.w	ip, [r0], #2
 8017500:	e7bc      	b.n	801747c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 8017502:	9b01      	ldr	r3, [sp, #4]
 8017504:	881b      	ldrh	r3, [r3, #0]
 8017506:	eba3 0308 	sub.w	r3, r3, r8
 801750a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801750e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8017512:	eba3 0308 	sub.w	r3, r3, r8
 8017516:	441c      	add	r4, r3
 8017518:	e7ac      	b.n	8017474 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 801751a:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801751e:	4282      	cmp	r2, r0
 8017520:	d915      	bls.n	801754e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8017522:	eb00 060a 	add.w	r6, r0, sl
 8017526:	4286      	cmp	r6, r0
 8017528:	d906      	bls.n	8017538 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 801752a:	f814 3b01 	ldrb.w	r3, [r4], #1
 801752e:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8017532:	f820 3b02 	strh.w	r3, [r0], #2
 8017536:	e7f6      	b.n	8017526 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 8017538:	882b      	ldrh	r3, [r5, #0]
 801753a:	eba3 0308 	sub.w	r3, r3, r8
 801753e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017542:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8017546:	eba3 0308 	sub.w	r3, r3, r8
 801754a:	441c      	add	r4, r3
 801754c:	e7e7      	b.n	801751e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 801754e:	4b04      	ldr	r3, [pc, #16]	; (8017560 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8017550:	6818      	ldr	r0, [r3, #0]
 8017552:	6803      	ldr	r3, [r0, #0]
 8017554:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017556:	4798      	blx	r3
 8017558:	b007      	add	sp, #28
 801755a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801755e:	bf00      	nop
 8017560:	2001535c 	.word	0x2001535c
 8017564:	20015356 	.word	0x20015356

08017568 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 8017568:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801756c:	b091      	sub	sp, #68	; 0x44
 801756e:	4680      	mov	r8, r0
 8017570:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 8017574:	460f      	mov	r7, r1
 8017576:	4614      	mov	r4, r2
 8017578:	2d00      	cmp	r5, #0
 801757a:	d051      	beq.n	8017620 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801757c:	6810      	ldr	r0, [r2, #0]
 801757e:	6851      	ldr	r1, [r2, #4]
 8017580:	f8df 9200 	ldr.w	r9, [pc, #512]	; 8017784 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 8017584:	ae0c      	add	r6, sp, #48	; 0x30
 8017586:	c603      	stmia	r6!, {r0, r1}
 8017588:	6818      	ldr	r0, [r3, #0]
 801758a:	6859      	ldr	r1, [r3, #4]
 801758c:	ae0e      	add	r6, sp, #56	; 0x38
 801758e:	c603      	stmia	r6!, {r0, r1}
 8017590:	a80c      	add	r0, sp, #48	; 0x30
 8017592:	f7f8 febd 	bl	8010310 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017596:	4621      	mov	r1, r4
 8017598:	a80e      	add	r0, sp, #56	; 0x38
 801759a:	f7f8 fee1 	bl	8010360 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801759e:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 80175a2:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 80175a6:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 80175aa:	f8d9 0000 	ldr.w	r0, [r9]
 80175ae:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 80175b2:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 80175b6:	fb11 2103 	smlabb	r1, r1, r3, r2
 80175ba:	eb08 0401 	add.w	r4, r8, r1
 80175be:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 80175c2:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 8017788 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 80175c6:	440a      	add	r2, r1
 80175c8:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 80175cc:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 80175d0:	4413      	add	r3, r2
 80175d2:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 80175d6:	6803      	ldr	r3, [r0, #0]
 80175d8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80175da:	4798      	blx	r3
 80175dc:	f010 0f80 	tst.w	r0, #128	; 0x80
 80175e0:	f8d9 0000 	ldr.w	r0, [r9]
 80175e4:	d01f      	beq.n	8017626 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 80175e6:	2200      	movs	r2, #0
 80175e8:	6801      	ldr	r1, [r0, #0]
 80175ea:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80175ee:	e9cd 2208 	strd	r2, r2, [sp, #32]
 80175f2:	220b      	movs	r2, #11
 80175f4:	9207      	str	r2, [sp, #28]
 80175f6:	f8b8 2000 	ldrh.w	r2, [r8]
 80175fa:	9206      	str	r2, [sp, #24]
 80175fc:	2201      	movs	r2, #1
 80175fe:	e9cd 5204 	strd	r5, r2, [sp, #16]
 8017602:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 8017606:	9203      	str	r2, [sp, #12]
 8017608:	fa1f f28a 	uxth.w	r2, sl
 801760c:	9202      	str	r2, [sp, #8]
 801760e:	b2b6      	uxth	r6, r6
 8017610:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8017614:	9200      	str	r2, [sp, #0]
 8017616:	9601      	str	r6, [sp, #4]
 8017618:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 801761a:	463a      	mov	r2, r7
 801761c:	4621      	mov	r1, r4
 801761e:	47a8      	blx	r5
 8017620:	b011      	add	sp, #68	; 0x44
 8017622:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017626:	6803      	ldr	r3, [r0, #0]
 8017628:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801762a:	4798      	blx	r3
 801762c:	f8b8 2000 	ldrh.w	r2, [r8]
 8017630:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8017634:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 8017638:	2dff      	cmp	r5, #255	; 0xff
 801763a:	fb02 1303 	mla	r3, r2, r3, r1
 801763e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017642:	ea4f 0946 	mov.w	r9, r6, lsl #1
 8017646:	fb0a fa02 	mul.w	sl, sl, r2
 801764a:	d062      	beq.n	8017712 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 801764c:	ea6f 0c05 	mvn.w	ip, r5
 8017650:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 8017654:	930a      	str	r3, [sp, #40]	; 0x28
 8017656:	b2ad      	uxth	r5, r5
 8017658:	fa5f fc8c 	uxtb.w	ip, ip
 801765c:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 8017660:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017662:	4298      	cmp	r0, r3
 8017664:	f080 8085 	bcs.w	8017772 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8017668:	eb00 0b09 	add.w	fp, r0, r9
 801766c:	4558      	cmp	r0, fp
 801766e:	d246      	bcs.n	80176fe <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 8017670:	f814 eb01 	ldrb.w	lr, [r4], #1
 8017674:	2303      	movs	r3, #3
 8017676:	2204      	movs	r2, #4
 8017678:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 801767c:	eb07 0a0e 	add.w	sl, r7, lr
 8017680:	8803      	ldrh	r3, [r0, #0]
 8017682:	f89a 8002 	ldrb.w	r8, [sl, #2]
 8017686:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801768a:	1219      	asrs	r1, r3, #8
 801768c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8017690:	fb18 f805 	smulbb	r8, r8, r5
 8017694:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 8017698:	10da      	asrs	r2, r3, #3
 801769a:	fb01 810c 	mla	r1, r1, ip, r8
 801769e:	00db      	lsls	r3, r3, #3
 80176a0:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80176a4:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80176a8:	b2db      	uxtb	r3, r3
 80176aa:	fb18 f805 	smulbb	r8, r8, r5
 80176ae:	fb1e fe05 	smulbb	lr, lr, r5
 80176b2:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 80176b6:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 80176ba:	b289      	uxth	r1, r1
 80176bc:	fb02 820c 	mla	r2, r2, ip, r8
 80176c0:	fb03 e30c 	mla	r3, r3, ip, lr
 80176c4:	b292      	uxth	r2, r2
 80176c6:	b29b      	uxth	r3, r3
 80176c8:	f101 0801 	add.w	r8, r1, #1
 80176cc:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 80176d0:	f103 0e01 	add.w	lr, r3, #1
 80176d4:	f102 0801 	add.w	r8, r2, #1
 80176d8:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 80176dc:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 80176e0:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 80176e4:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 80176e8:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80176ec:	ea4e 0101 	orr.w	r1, lr, r1
 80176f0:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80176f4:	ea41 0108 	orr.w	r1, r1, r8
 80176f8:	f820 1b02 	strh.w	r1, [r0], #2
 80176fc:	e7b6      	b.n	801766c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 80176fe:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8017700:	881b      	ldrh	r3, [r3, #0]
 8017702:	1b9b      	subs	r3, r3, r6
 8017704:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017708:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801770c:	1b9b      	subs	r3, r3, r6
 801770e:	441c      	add	r4, r3
 8017710:	e7a6      	b.n	8017660 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 8017712:	491b      	ldr	r1, [pc, #108]	; (8017780 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 8017714:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 8017718:	2203      	movs	r2, #3
 801771a:	2504      	movs	r5, #4
 801771c:	4550      	cmp	r0, sl
 801771e:	d228      	bcs.n	8017772 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8017720:	eb00 0c09 	add.w	ip, r0, r9
 8017724:	4560      	cmp	r0, ip
 8017726:	4623      	mov	r3, r4
 8017728:	d219      	bcs.n	801775e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 801772a:	f893 e000 	ldrb.w	lr, [r3]
 801772e:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 8017732:	eb07 0b0e 	add.w	fp, r7, lr
 8017736:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801773a:	f89b 3002 	ldrb.w	r3, [fp, #2]
 801773e:	f89b b001 	ldrb.w	fp, [fp, #1]
 8017742:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 8017746:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 801774a:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801774e:	ea43 030b 	orr.w	r3, r3, fp
 8017752:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 8017756:	3401      	adds	r4, #1
 8017758:	f820 3b02 	strh.w	r3, [r0], #2
 801775c:	e7e2      	b.n	8017724 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 801775e:	f8b8 3000 	ldrh.w	r3, [r8]
 8017762:	1b9b      	subs	r3, r3, r6
 8017764:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017768:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801776c:	1b9b      	subs	r3, r3, r6
 801776e:	441c      	add	r4, r3
 8017770:	e7d4      	b.n	801771c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 8017772:	4b04      	ldr	r3, [pc, #16]	; (8017784 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 8017774:	6818      	ldr	r0, [r3, #0]
 8017776:	6803      	ldr	r3, [r0, #0]
 8017778:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801777a:	4798      	blx	r3
 801777c:	e750      	b.n	8017620 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801777e:	bf00      	nop
 8017780:	fffff800 	.word	0xfffff800
 8017784:	2001535c 	.word	0x2001535c
 8017788:	20015356 	.word	0x20015356

0801778c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 801778c:	b430      	push	{r4, r5}
 801778e:	780d      	ldrb	r5, [r1, #0]
 8017790:	f89d 4008 	ldrb.w	r4, [sp, #8]
 8017794:	2d01      	cmp	r5, #1
 8017796:	d00a      	beq.n	80177ae <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x22>
 8017798:	d305      	bcc.n	80177a6 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1a>
 801779a:	2d02      	cmp	r5, #2
 801779c:	d10b      	bne.n	80177b6 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x2a>
 801779e:	9402      	str	r4, [sp, #8]
 80177a0:	bc30      	pop	{r4, r5}
 80177a2:	f7ff be15 	b.w	80173d0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 80177a6:	9402      	str	r4, [sp, #8]
 80177a8:	bc30      	pop	{r4, r5}
 80177aa:	f7ff bd2b 	b.w	8017204 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 80177ae:	9402      	str	r4, [sp, #8]
 80177b0:	bc30      	pop	{r4, r5}
 80177b2:	f7ff bed9 	b.w	8017568 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 80177b6:	bc30      	pop	{r4, r5}
 80177b8:	4770      	bx	lr
	...

080177bc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 80177bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80177c0:	4604      	mov	r4, r0
 80177c2:	b087      	sub	sp, #28
 80177c4:	6810      	ldr	r0, [r2, #0]
 80177c6:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 80177ca:	f8df 9238 	ldr.w	r9, [pc, #568]	; 8017a04 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 80177ce:	460e      	mov	r6, r1
 80177d0:	6851      	ldr	r1, [r2, #4]
 80177d2:	ad02      	add	r5, sp, #8
 80177d4:	c503      	stmia	r5!, {r0, r1}
 80177d6:	6818      	ldr	r0, [r3, #0]
 80177d8:	6859      	ldr	r1, [r3, #4]
 80177da:	ad04      	add	r5, sp, #16
 80177dc:	4617      	mov	r7, r2
 80177de:	c503      	stmia	r5!, {r0, r1}
 80177e0:	a802      	add	r0, sp, #8
 80177e2:	f7f8 fd95 	bl	8010310 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80177e6:	4639      	mov	r1, r7
 80177e8:	a804      	add	r0, sp, #16
 80177ea:	f7f8 fdb9 	bl	8010360 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80177ee:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80177f2:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80177f6:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 80177fa:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 80177fe:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 8017802:	fb11 2103 	smlabb	r1, r1, r3, r2
 8017806:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801780a:	440e      	add	r6, r1
 801780c:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8017810:	440a      	add	r2, r1
 8017812:	f8ad 2010 	strh.w	r2, [sp, #16]
 8017816:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801781a:	4413      	add	r3, r2
 801781c:	f8ad 3012 	strh.w	r3, [sp, #18]
 8017820:	4b77      	ldr	r3, [pc, #476]	; (8017a00 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 8017822:	6818      	ldr	r0, [r3, #0]
 8017824:	6803      	ldr	r3, [r0, #0]
 8017826:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017828:	4798      	blx	r3
 801782a:	f8b9 b000 	ldrh.w	fp, [r9]
 801782e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8017832:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8017836:	fb0b 2303 	mla	r3, fp, r3, r2
 801783a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801783e:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8017842:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8017846:	fb05 f50b 	mul.w	r5, r5, fp
 801784a:	9300      	str	r3, [sp, #0]
 801784c:	d069      	beq.n	8017922 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 801784e:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 8017852:	4558      	cmp	r0, fp
 8017854:	f080 80cc 	bcs.w	80179f0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8017858:	9b00      	ldr	r3, [sp, #0]
 801785a:	18c3      	adds	r3, r0, r3
 801785c:	9301      	str	r3, [sp, #4]
 801785e:	4631      	mov	r1, r6
 8017860:	9b01      	ldr	r3, [sp, #4]
 8017862:	4298      	cmp	r0, r3
 8017864:	d24f      	bcs.n	8017906 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 8017866:	f811 2b01 	ldrb.w	r2, [r1], #1
 801786a:	2a00      	cmp	r2, #0
 801786c:	d048      	beq.n	8017900 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801786e:	fb0a f202 	mul.w	r2, sl, r2
 8017872:	1c53      	adds	r3, r2, #1
 8017874:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8017878:	121b      	asrs	r3, r3, #8
 801787a:	d041      	beq.n	8017900 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801787c:	8802      	ldrh	r2, [r0, #0]
 801787e:	f8b4 c000 	ldrh.w	ip, [r4]
 8017882:	b29e      	uxth	r6, r3
 8017884:	1215      	asrs	r5, r2, #8
 8017886:	43db      	mvns	r3, r3
 8017888:	b2db      	uxtb	r3, r3
 801788a:	ea4f 272c 	mov.w	r7, ip, asr #8
 801788e:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8017892:	fb15 f503 	smulbb	r5, r5, r3
 8017896:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801789a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801789e:	00d2      	lsls	r2, r2, #3
 80178a0:	fb07 5706 	mla	r7, r7, r6, r5
 80178a4:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 80178a8:	ea4f 05ec 	mov.w	r5, ip, asr #3
 80178ac:	b2d2      	uxtb	r2, r2
 80178ae:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80178b2:	b2bf      	uxth	r7, r7
 80178b4:	fb1e fe03 	smulbb	lr, lr, r3
 80178b8:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80178bc:	fa5f fc8c 	uxtb.w	ip, ip
 80178c0:	fb12 f203 	smulbb	r2, r2, r3
 80178c4:	fb05 e506 	mla	r5, r5, r6, lr
 80178c8:	fb0c 2c06 	mla	ip, ip, r6, r2
 80178cc:	f107 0e01 	add.w	lr, r7, #1
 80178d0:	fa1f fc8c 	uxth.w	ip, ip
 80178d4:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 80178d8:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 80178dc:	f10c 0701 	add.w	r7, ip, #1
 80178e0:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80178e4:	b2ad      	uxth	r5, r5
 80178e6:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80178ea:	ea47 070e 	orr.w	r7, r7, lr
 80178ee:	f105 0e01 	add.w	lr, r5, #1
 80178f2:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 80178f6:	096d      	lsrs	r5, r5, #5
 80178f8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80178fc:	432f      	orrs	r7, r5
 80178fe:	8007      	strh	r7, [r0, #0]
 8017900:	3002      	adds	r0, #2
 8017902:	3402      	adds	r4, #2
 8017904:	e7ac      	b.n	8017860 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 8017906:	f8b9 3000 	ldrh.w	r3, [r9]
 801790a:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801790e:	eba3 0308 	sub.w	r3, r3, r8
 8017912:	eba6 0608 	sub.w	r6, r6, r8
 8017916:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801791a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801791e:	440e      	add	r6, r1
 8017920:	e797      	b.n	8017852 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 8017922:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8017926:	42a8      	cmp	r0, r5
 8017928:	d262      	bcs.n	80179f0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801792a:	9b00      	ldr	r3, [sp, #0]
 801792c:	4631      	mov	r1, r6
 801792e:	eb00 0b03 	add.w	fp, r0, r3
 8017932:	4558      	cmp	r0, fp
 8017934:	d24e      	bcs.n	80179d4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 8017936:	f811 3b01 	ldrb.w	r3, [r1], #1
 801793a:	b12b      	cbz	r3, 8017948 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801793c:	2bff      	cmp	r3, #255	; 0xff
 801793e:	f8b4 e000 	ldrh.w	lr, [r4]
 8017942:	d104      	bne.n	801794e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 8017944:	f8a0 e000 	strh.w	lr, [r0]
 8017948:	3002      	adds	r0, #2
 801794a:	3402      	adds	r4, #2
 801794c:	e7f1      	b.n	8017932 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 801794e:	8802      	ldrh	r2, [r0, #0]
 8017950:	b29f      	uxth	r7, r3
 8017952:	1216      	asrs	r6, r2, #8
 8017954:	43db      	mvns	r3, r3
 8017956:	b2db      	uxtb	r3, r3
 8017958:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801795c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8017960:	fb16 f603 	smulbb	r6, r6, r3
 8017964:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 8017968:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801796c:	00d2      	lsls	r2, r2, #3
 801796e:	fb0c 6c07 	mla	ip, ip, r7, r6
 8017972:	b2d2      	uxtb	r2, r2
 8017974:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8017978:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801797c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8017980:	fb1a fa03 	smulbb	sl, sl, r3
 8017984:	fa1f fc8c 	uxth.w	ip, ip
 8017988:	fb12 f303 	smulbb	r3, r2, r3
 801798c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8017990:	fa5f fe8e 	uxtb.w	lr, lr
 8017994:	fb06 a607 	mla	r6, r6, r7, sl
 8017998:	f10c 0201 	add.w	r2, ip, #1
 801799c:	fb0e 3307 	mla	r3, lr, r7, r3
 80179a0:	b2b6      	uxth	r6, r6
 80179a2:	b29b      	uxth	r3, r3
 80179a4:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 80179a8:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 80179ac:	f106 0a01 	add.w	sl, r6, #1
 80179b0:	f103 0c01 	add.w	ip, r3, #1
 80179b4:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 80179b8:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 80179bc:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80179c0:	0976      	lsrs	r6, r6, #5
 80179c2:	ea4c 0c02 	orr.w	ip, ip, r2
 80179c6:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80179ca:	ea4c 0c06 	orr.w	ip, ip, r6
 80179ce:	f8a0 c000 	strh.w	ip, [r0]
 80179d2:	e7b9      	b.n	8017948 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 80179d4:	f8b9 3000 	ldrh.w	r3, [r9]
 80179d8:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 80179dc:	eba3 0308 	sub.w	r3, r3, r8
 80179e0:	eba6 0608 	sub.w	r6, r6, r8
 80179e4:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 80179e8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80179ec:	440e      	add	r6, r1
 80179ee:	e79a      	b.n	8017926 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 80179f0:	4b03      	ldr	r3, [pc, #12]	; (8017a00 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 80179f2:	6818      	ldr	r0, [r3, #0]
 80179f4:	6803      	ldr	r3, [r0, #0]
 80179f6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80179f8:	4798      	blx	r3
 80179fa:	b007      	add	sp, #28
 80179fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017a00:	2001535c 	.word	0x2001535c
 8017a04:	20015356 	.word	0x20015356

08017a08 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 8017a08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017a0c:	b089      	sub	sp, #36	; 0x24
 8017a0e:	4682      	mov	sl, r0
 8017a10:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 8017a14:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8017a16:	460f      	mov	r7, r1
 8017a18:	4691      	mov	r9, r2
 8017a1a:	4698      	mov	r8, r3
 8017a1c:	2e00      	cmp	r6, #0
 8017a1e:	d036      	beq.n	8017a8e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8017a20:	4608      	mov	r0, r1
 8017a22:	f7fc f863 	bl	8013aec <_ZNK8touchgfx6Bitmap8getWidthEv>
 8017a26:	4605      	mov	r5, r0
 8017a28:	4638      	mov	r0, r7
 8017a2a:	f7fc f893 	bl	8013b54 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8017a2e:	f8ad 000e 	strh.w	r0, [sp, #14]
 8017a32:	4638      	mov	r0, r7
 8017a34:	f8ad 9008 	strh.w	r9, [sp, #8]
 8017a38:	f8ad 500c 	strh.w	r5, [sp, #12]
 8017a3c:	f8ad 800a 	strh.w	r8, [sp, #10]
 8017a40:	f7fc f940 	bl	8013cc4 <_ZNK8touchgfx6Bitmap7getDataEv>
 8017a44:	4605      	mov	r5, r0
 8017a46:	4638      	mov	r0, r7
 8017a48:	f7fc f96c 	bl	8013d24 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8017a4c:	4681      	mov	r9, r0
 8017a4e:	4638      	mov	r0, r7
 8017a50:	f7fc f9bc 	bl	8013dcc <_ZNK8touchgfx6Bitmap9getFormatEv>
 8017a54:	280b      	cmp	r0, #11
 8017a56:	d81a      	bhi.n	8017a8e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8017a58:	e8df f000 	tbb	[pc, r0]
 8017a5c:	1906aebd 	.word	0x1906aebd
 8017a60:	19191919 	.word	0x19191919
 8017a64:	b5191919 	.word	0xb5191919
 8017a68:	4bb0      	ldr	r3, [pc, #704]	; (8017d2c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 8017a6a:	6818      	ldr	r0, [r3, #0]
 8017a6c:	6803      	ldr	r3, [r0, #0]
 8017a6e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017a70:	4798      	blx	r3
 8017a72:	2eff      	cmp	r6, #255	; 0xff
 8017a74:	d121      	bne.n	8017aba <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb2>
 8017a76:	0683      	lsls	r3, r0, #26
 8017a78:	d41f      	bmi.n	8017aba <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb2>
 8017a7a:	4638      	mov	r0, r7
 8017a7c:	f7fc f8ea 	bl	8013c54 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8017a80:	b940      	cbnz	r0, 8017a94 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x8c>
 8017a82:	4623      	mov	r3, r4
 8017a84:	aa02      	add	r2, sp, #8
 8017a86:	4629      	mov	r1, r5
 8017a88:	4650      	mov	r0, sl
 8017a8a:	f7ff fa2f 	bl	8016eec <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 8017a8e:	b009      	add	sp, #36	; 0x24
 8017a90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017a94:	f10d 0818 	add.w	r8, sp, #24
 8017a98:	4639      	mov	r1, r7
 8017a9a:	4640      	mov	r0, r8
 8017a9c:	f7fc f88e 	bl	8013bbc <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8017aa0:	e898 0003 	ldmia.w	r8, {r0, r1}
 8017aa4:	af04      	add	r7, sp, #16
 8017aa6:	e887 0003 	stmia.w	r7, {r0, r1}
 8017aaa:	4638      	mov	r0, r7
 8017aac:	4621      	mov	r1, r4
 8017aae:	f7f2 fc4d 	bl	800a34c <_ZN8touchgfx4RectaNERKS0_>
 8017ab2:	4638      	mov	r0, r7
 8017ab4:	f7f2 fc8d 	bl	800a3d2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8017ab8:	b130      	cbz	r0, 8017ac8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc0>
 8017aba:	4633      	mov	r3, r6
 8017abc:	4622      	mov	r2, r4
 8017abe:	a902      	add	r1, sp, #8
 8017ac0:	4628      	mov	r0, r5
 8017ac2:	f7ff f92d 	bl	8016d20 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8017ac6:	e7e2      	b.n	8017a8e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8017ac8:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8017acc:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8017ad0:	4293      	cmp	r3, r2
 8017ad2:	dd12      	ble.n	8017afa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf2>
 8017ad4:	1a9b      	subs	r3, r3, r2
 8017ad6:	f9b4 0000 	ldrsh.w	r0, [r4]
 8017ada:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8017ade:	f8ad 0018 	strh.w	r0, [sp, #24]
 8017ae2:	f8ad 201a 	strh.w	r2, [sp, #26]
 8017ae6:	f8ad 101c 	strh.w	r1, [sp, #28]
 8017aea:	f8ad 301e 	strh.w	r3, [sp, #30]
 8017aee:	4642      	mov	r2, r8
 8017af0:	4633      	mov	r3, r6
 8017af2:	a902      	add	r1, sp, #8
 8017af4:	4628      	mov	r0, r5
 8017af6:	f7ff f913 	bl	8016d20 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8017afa:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8017afe:	f9b4 2000 	ldrsh.w	r2, [r4]
 8017b02:	4293      	cmp	r3, r2
 8017b04:	dd12      	ble.n	8017b2c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x124>
 8017b06:	1a9b      	subs	r3, r3, r2
 8017b08:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8017b0c:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8017b10:	f8ad 2018 	strh.w	r2, [sp, #24]
 8017b14:	f8ad 001a 	strh.w	r0, [sp, #26]
 8017b18:	f8ad 301c 	strh.w	r3, [sp, #28]
 8017b1c:	f8ad 101e 	strh.w	r1, [sp, #30]
 8017b20:	23ff      	movs	r3, #255	; 0xff
 8017b22:	4642      	mov	r2, r8
 8017b24:	a902      	add	r1, sp, #8
 8017b26:	4628      	mov	r0, r5
 8017b28:	f7ff f8fa 	bl	8016d20 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8017b2c:	463b      	mov	r3, r7
 8017b2e:	aa02      	add	r2, sp, #8
 8017b30:	4629      	mov	r1, r5
 8017b32:	4650      	mov	r0, sl
 8017b34:	f7ff f9da 	bl	8016eec <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 8017b38:	88a2      	ldrh	r2, [r4, #4]
 8017b3a:	8823      	ldrh	r3, [r4, #0]
 8017b3c:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8017b40:	4413      	add	r3, r2
 8017b42:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8017b46:	440a      	add	r2, r1
 8017b48:	b29b      	uxth	r3, r3
 8017b4a:	b292      	uxth	r2, r2
 8017b4c:	b211      	sxth	r1, r2
 8017b4e:	b218      	sxth	r0, r3
 8017b50:	4288      	cmp	r0, r1
 8017b52:	dd12      	ble.n	8017b7a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x172>
 8017b54:	1a9b      	subs	r3, r3, r2
 8017b56:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8017b5a:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 8017b5e:	f8ad 1018 	strh.w	r1, [sp, #24]
 8017b62:	f8ad 301c 	strh.w	r3, [sp, #28]
 8017b66:	f8ad 001e 	strh.w	r0, [sp, #30]
 8017b6a:	23ff      	movs	r3, #255	; 0xff
 8017b6c:	4642      	mov	r2, r8
 8017b6e:	a902      	add	r1, sp, #8
 8017b70:	4628      	mov	r0, r5
 8017b72:	f8ad 601a 	strh.w	r6, [sp, #26]
 8017b76:	f7ff f8d3 	bl	8016d20 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8017b7a:	88e2      	ldrh	r2, [r4, #6]
 8017b7c:	8863      	ldrh	r3, [r4, #2]
 8017b7e:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8017b82:	4413      	add	r3, r2
 8017b84:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8017b88:	440a      	add	r2, r1
 8017b8a:	b29b      	uxth	r3, r3
 8017b8c:	b292      	uxth	r2, r2
 8017b8e:	b211      	sxth	r1, r2
 8017b90:	b218      	sxth	r0, r3
 8017b92:	4288      	cmp	r0, r1
 8017b94:	f77f af7b 	ble.w	8017a8e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8017b98:	1a9b      	subs	r3, r3, r2
 8017b9a:	f9b4 6000 	ldrsh.w	r6, [r4]
 8017b9e:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8017ba2:	f8ad 301e 	strh.w	r3, [sp, #30]
 8017ba6:	f8ad 6018 	strh.w	r6, [sp, #24]
 8017baa:	f8ad 101a 	strh.w	r1, [sp, #26]
 8017bae:	f8ad 001c 	strh.w	r0, [sp, #28]
 8017bb2:	23ff      	movs	r3, #255	; 0xff
 8017bb4:	4642      	mov	r2, r8
 8017bb6:	e782      	b.n	8017abe <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb6>
 8017bb8:	4633      	mov	r3, r6
 8017bba:	4622      	mov	r2, r4
 8017bbc:	a902      	add	r1, sp, #8
 8017bbe:	4628      	mov	r0, r5
 8017bc0:	f7ff fa04 	bl	8016fcc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 8017bc4:	e763      	b.n	8017a8e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8017bc6:	9600      	str	r6, [sp, #0]
 8017bc8:	4623      	mov	r3, r4
 8017bca:	aa02      	add	r2, sp, #8
 8017bcc:	4649      	mov	r1, r9
 8017bce:	4628      	mov	r0, r5
 8017bd0:	f7ff fddc 	bl	801778c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 8017bd4:	e75b      	b.n	8017a8e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8017bd6:	4638      	mov	r0, r7
 8017bd8:	f7fc f83c 	bl	8013c54 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8017bdc:	b950      	cbnz	r0, 8017bf4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ec>
 8017bde:	e9cd 6000 	strd	r6, r0, [sp]
 8017be2:	f8da 3000 	ldr.w	r3, [sl]
 8017be6:	aa02      	add	r2, sp, #8
 8017be8:	68de      	ldr	r6, [r3, #12]
 8017bea:	4629      	mov	r1, r5
 8017bec:	4623      	mov	r3, r4
 8017bee:	4650      	mov	r0, sl
 8017bf0:	47b0      	blx	r6
 8017bf2:	e74c      	b.n	8017a8e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8017bf4:	f10d 0818 	add.w	r8, sp, #24
 8017bf8:	4639      	mov	r1, r7
 8017bfa:	4640      	mov	r0, r8
 8017bfc:	f7fb ffde 	bl	8013bbc <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8017c00:	e898 0003 	ldmia.w	r8, {r0, r1}
 8017c04:	af04      	add	r7, sp, #16
 8017c06:	e887 0003 	stmia.w	r7, {r0, r1}
 8017c0a:	4638      	mov	r0, r7
 8017c0c:	4621      	mov	r1, r4
 8017c0e:	f7f2 fb9d 	bl	800a34c <_ZN8touchgfx4RectaNERKS0_>
 8017c12:	4638      	mov	r0, r7
 8017c14:	f7f2 fbdd 	bl	800a3d2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8017c18:	b138      	cbz	r0, 8017c2a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x222>
 8017c1a:	9600      	str	r6, [sp, #0]
 8017c1c:	4623      	mov	r3, r4
 8017c1e:	aa02      	add	r2, sp, #8
 8017c20:	4649      	mov	r1, r9
 8017c22:	4628      	mov	r0, r5
 8017c24:	f7ff fdca 	bl	80177bc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8017c28:	e731      	b.n	8017a8e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8017c2a:	e9cd 6000 	strd	r6, r0, [sp]
 8017c2e:	f8da 3000 	ldr.w	r3, [sl]
 8017c32:	aa02      	add	r2, sp, #8
 8017c34:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 8017c38:	4629      	mov	r1, r5
 8017c3a:	463b      	mov	r3, r7
 8017c3c:	4650      	mov	r0, sl
 8017c3e:	47d8      	blx	fp
 8017c40:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8017c44:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8017c48:	4293      	cmp	r3, r2
 8017c4a:	dd13      	ble.n	8017c74 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26c>
 8017c4c:	f9b4 0000 	ldrsh.w	r0, [r4]
 8017c50:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8017c54:	f8ad 0018 	strh.w	r0, [sp, #24]
 8017c58:	1a9b      	subs	r3, r3, r2
 8017c5a:	f8ad 201a 	strh.w	r2, [sp, #26]
 8017c5e:	f8ad 101c 	strh.w	r1, [sp, #28]
 8017c62:	f8ad 301e 	strh.w	r3, [sp, #30]
 8017c66:	9600      	str	r6, [sp, #0]
 8017c68:	4643      	mov	r3, r8
 8017c6a:	aa02      	add	r2, sp, #8
 8017c6c:	4649      	mov	r1, r9
 8017c6e:	4628      	mov	r0, r5
 8017c70:	f7ff fda4 	bl	80177bc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8017c74:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8017c78:	f9b4 2000 	ldrsh.w	r2, [r4]
 8017c7c:	4293      	cmp	r3, r2
 8017c7e:	dd13      	ble.n	8017ca8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a0>
 8017c80:	1a9b      	subs	r3, r3, r2
 8017c82:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8017c86:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8017c8a:	f8ad 2018 	strh.w	r2, [sp, #24]
 8017c8e:	f8ad 001a 	strh.w	r0, [sp, #26]
 8017c92:	f8ad 301c 	strh.w	r3, [sp, #28]
 8017c96:	f8ad 101e 	strh.w	r1, [sp, #30]
 8017c9a:	9600      	str	r6, [sp, #0]
 8017c9c:	4643      	mov	r3, r8
 8017c9e:	aa02      	add	r2, sp, #8
 8017ca0:	4649      	mov	r1, r9
 8017ca2:	4628      	mov	r0, r5
 8017ca4:	f7ff fd8a 	bl	80177bc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8017ca8:	88a2      	ldrh	r2, [r4, #4]
 8017caa:	8823      	ldrh	r3, [r4, #0]
 8017cac:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8017cb0:	4413      	add	r3, r2
 8017cb2:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8017cb6:	440a      	add	r2, r1
 8017cb8:	b29b      	uxth	r3, r3
 8017cba:	b292      	uxth	r2, r2
 8017cbc:	b211      	sxth	r1, r2
 8017cbe:	b218      	sxth	r0, r3
 8017cc0:	4288      	cmp	r0, r1
 8017cc2:	dd13      	ble.n	8017cec <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e4>
 8017cc4:	1a9b      	subs	r3, r3, r2
 8017cc6:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8017cca:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 8017cce:	f8ad 1018 	strh.w	r1, [sp, #24]
 8017cd2:	f8ad 301c 	strh.w	r3, [sp, #28]
 8017cd6:	f8ad 001e 	strh.w	r0, [sp, #30]
 8017cda:	9600      	str	r6, [sp, #0]
 8017cdc:	4643      	mov	r3, r8
 8017cde:	aa02      	add	r2, sp, #8
 8017ce0:	4649      	mov	r1, r9
 8017ce2:	4628      	mov	r0, r5
 8017ce4:	f8ad 701a 	strh.w	r7, [sp, #26]
 8017ce8:	f7ff fd68 	bl	80177bc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8017cec:	88e2      	ldrh	r2, [r4, #6]
 8017cee:	8863      	ldrh	r3, [r4, #2]
 8017cf0:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8017cf4:	4413      	add	r3, r2
 8017cf6:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8017cfa:	440a      	add	r2, r1
 8017cfc:	b29b      	uxth	r3, r3
 8017cfe:	b292      	uxth	r2, r2
 8017d00:	b211      	sxth	r1, r2
 8017d02:	b218      	sxth	r0, r3
 8017d04:	4288      	cmp	r0, r1
 8017d06:	f77f aec2 	ble.w	8017a8e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8017d0a:	f9b4 7000 	ldrsh.w	r7, [r4]
 8017d0e:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8017d12:	f8ad 7018 	strh.w	r7, [sp, #24]
 8017d16:	1a9b      	subs	r3, r3, r2
 8017d18:	f8ad 301e 	strh.w	r3, [sp, #30]
 8017d1c:	f8ad 101a 	strh.w	r1, [sp, #26]
 8017d20:	f8ad 001c 	strh.w	r0, [sp, #28]
 8017d24:	9600      	str	r6, [sp, #0]
 8017d26:	4643      	mov	r3, r8
 8017d28:	e779      	b.n	8017c1e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x216>
 8017d2a:	bf00      	nop
 8017d2c:	2001535c 	.word	0x2001535c

08017d30 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 8017d30:	b180      	cbz	r0, 8017d54 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 8017d32:	2903      	cmp	r1, #3
 8017d34:	d81c      	bhi.n	8017d70 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8017d36:	e8df f001 	tbb	[pc, r1]
 8017d3a:	1d02      	.short	0x1d02
 8017d3c:	1f08      	.short	0x1f08
 8017d3e:	4b10      	ldr	r3, [pc, #64]	; (8017d80 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8017d40:	8818      	ldrh	r0, [r3, #0]
 8017d42:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8017d46:	4240      	negs	r0, r0
 8017d48:	4770      	bx	lr
 8017d4a:	4b0d      	ldr	r3, [pc, #52]	; (8017d80 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8017d4c:	8818      	ldrh	r0, [r3, #0]
 8017d4e:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8017d52:	4770      	bx	lr
 8017d54:	2903      	cmp	r1, #3
 8017d56:	d80b      	bhi.n	8017d70 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8017d58:	a301      	add	r3, pc, #4	; (adr r3, 8017d60 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 8017d5a:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 8017d5e:	bf00      	nop
 8017d60:	08017d75 	.word	0x08017d75
 8017d64:	08017d4b 	.word	0x08017d4b
 8017d68:	08017d79 	.word	0x08017d79
 8017d6c:	08017d3f 	.word	0x08017d3f
 8017d70:	2000      	movs	r0, #0
 8017d72:	4770      	bx	lr
 8017d74:	2001      	movs	r0, #1
 8017d76:	4770      	bx	lr
 8017d78:	f04f 30ff 	mov.w	r0, #4294967295
 8017d7c:	4770      	bx	lr
 8017d7e:	bf00      	nop
 8017d80:	20015356 	.word	0x20015356

08017d84 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 8017d84:	b180      	cbz	r0, 8017da8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 8017d86:	2903      	cmp	r1, #3
 8017d88:	d81c      	bhi.n	8017dc4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 8017d8a:	e8df f001 	tbb	[pc, r1]
 8017d8e:	021d      	.short	0x021d
 8017d90:	071f      	.short	0x071f
 8017d92:	4b10      	ldr	r3, [pc, #64]	; (8017dd4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8017d94:	8818      	ldrh	r0, [r3, #0]
 8017d96:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8017d9a:	4770      	bx	lr
 8017d9c:	4b0d      	ldr	r3, [pc, #52]	; (8017dd4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8017d9e:	8818      	ldrh	r0, [r3, #0]
 8017da0:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8017da4:	4240      	negs	r0, r0
 8017da6:	4770      	bx	lr
 8017da8:	2903      	cmp	r1, #3
 8017daa:	d80b      	bhi.n	8017dc4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 8017dac:	a301      	add	r3, pc, #4	; (adr r3, 8017db4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 8017dae:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 8017db2:	bf00      	nop
 8017db4:	08017d93 	.word	0x08017d93
 8017db8:	08017dcd 	.word	0x08017dcd
 8017dbc:	08017d9d 	.word	0x08017d9d
 8017dc0:	08017dc9 	.word	0x08017dc9
 8017dc4:	2000      	movs	r0, #0
 8017dc6:	4770      	bx	lr
 8017dc8:	2001      	movs	r0, #1
 8017dca:	4770      	bx	lr
 8017dcc:	f04f 30ff 	mov.w	r0, #4294967295
 8017dd0:	4770      	bx	lr
 8017dd2:	bf00      	nop
 8017dd4:	20015356 	.word	0x20015356

08017dd8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 8017dd8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017ddc:	b099      	sub	sp, #100	; 0x64
 8017dde:	910b      	str	r1, [sp, #44]	; 0x2c
 8017de0:	a914      	add	r1, sp, #80	; 0x50
 8017de2:	e881 000c 	stmia.w	r1, {r2, r3}
 8017de6:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 8017dea:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 8017dee:	f891 900d 	ldrb.w	r9, [r1, #13]
 8017df2:	9309      	str	r3, [sp, #36]	; 0x24
 8017df4:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8017df8:	9310      	str	r3, [sp, #64]	; 0x40
 8017dfa:	ea4f 1749 	mov.w	r7, r9, lsl #5
 8017dfe:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 8017e02:	930c      	str	r3, [sp, #48]	; 0x30
 8017e04:	f407 7380 	and.w	r3, r7, #256	; 0x100
 8017e08:	798f      	ldrb	r7, [r1, #6]
 8017e0a:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
 8017e0e:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 8017e12:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
 8017e16:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 8017e1a:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 8017e1e:	431f      	orrs	r7, r3
 8017e20:	f000 8195 	beq.w	801814e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8017e24:	ea4f 1909 	mov.w	r9, r9, lsl #4
 8017e28:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8017e2c:	f891 9007 	ldrb.w	r9, [r1, #7]
 8017e30:	ea59 0903 	orrs.w	r9, r9, r3
 8017e34:	f000 818b 	beq.w	801814e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8017e38:	f991 3009 	ldrsb.w	r3, [r1, #9]
 8017e3c:	b29b      	uxth	r3, r3
 8017e3e:	2d00      	cmp	r5, #0
 8017e40:	f000 812e 	beq.w	80180a0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 8017e44:	1aed      	subs	r5, r5, r3
 8017e46:	b2ad      	uxth	r5, r5
 8017e48:	042b      	lsls	r3, r5, #16
 8017e4a:	d502      	bpl.n	8017e52 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 8017e4c:	1b64      	subs	r4, r4, r5
 8017e4e:	b224      	sxth	r4, r4
 8017e50:	2500      	movs	r5, #0
 8017e52:	f9b2 1000 	ldrsh.w	r1, [r2]
 8017e56:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8017e5a:	428c      	cmp	r4, r1
 8017e5c:	b28b      	uxth	r3, r1
 8017e5e:	bfbf      	itttt	lt
 8017e60:	18ed      	addlt	r5, r5, r3
 8017e62:	1b2c      	sublt	r4, r5, r4
 8017e64:	b2a5      	uxthlt	r5, r4
 8017e66:	460c      	movlt	r4, r1
 8017e68:	8891      	ldrh	r1, [r2, #4]
 8017e6a:	440b      	add	r3, r1
 8017e6c:	b21b      	sxth	r3, r3
 8017e6e:	930f      	str	r3, [sp, #60]	; 0x3c
 8017e70:	88d3      	ldrh	r3, [r2, #6]
 8017e72:	8852      	ldrh	r2, [r2, #2]
 8017e74:	4413      	add	r3, r2
 8017e76:	b21b      	sxth	r3, r3
 8017e78:	930d      	str	r3, [sp, #52]	; 0x34
 8017e7a:	4bbe      	ldr	r3, [pc, #760]	; (8018174 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 8017e7c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8017e7e:	f893 b000 	ldrb.w	fp, [r3]
 8017e82:	f10b 3cff 	add.w	ip, fp, #4294967295
 8017e86:	f1dc 0300 	rsbs	r3, ip, #0
 8017e8a:	eb43 030c 	adc.w	r3, r3, ip
 8017e8e:	930e      	str	r3, [sp, #56]	; 0x38
 8017e90:	4621      	mov	r1, r4
 8017e92:	4653      	mov	r3, sl
 8017e94:	a814      	add	r0, sp, #80	; 0x50
 8017e96:	f7f8 f8b5 	bl	8010004 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 8017e9a:	4621      	mov	r1, r4
 8017e9c:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 8017ea0:	4653      	mov	r3, sl
 8017ea2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8017ea4:	a814      	add	r0, sp, #80	; 0x50
 8017ea6:	f7f8 f8ca 	bl	801003e <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 8017eaa:	a918      	add	r1, sp, #96	; 0x60
 8017eac:	f821 0d02 	strh.w	r0, [r1, #-2]!
 8017eb0:	a817      	add	r0, sp, #92	; 0x5c
 8017eb2:	f7f8 f9eb 	bl	801028c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 8017eb6:	f1ba 0f00 	cmp.w	sl, #0
 8017eba:	f040 80f4 	bne.w	80180a6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 8017ebe:	f1bb 0f01 	cmp.w	fp, #1
 8017ec2:	f040 80f8 	bne.w	80180b6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 8017ec6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017ec8:	2b00      	cmp	r3, #0
 8017eca:	f040 8145 	bne.w	8018158 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 8017ece:	b2ba      	uxth	r2, r7
 8017ed0:	b905      	cbnz	r5, 8017ed4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 8017ed2:	b16e      	cbz	r6, 8017ef0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 8017ed4:	fb06 5302 	mla	r3, r6, r2, r5
 8017ed8:	9828      	ldr	r0, [sp, #160]	; 0xa0
 8017eda:	fb08 f303 	mul.w	r3, r8, r3
 8017ede:	4631      	mov	r1, r6
 8017ee0:	f003 0607 	and.w	r6, r3, #7
 8017ee4:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 8017ee8:	9328      	str	r3, [sp, #160]	; 0xa0
 8017eea:	eba9 0301 	sub.w	r3, r9, r1
 8017eee:	930a      	str	r3, [sp, #40]	; 0x28
 8017ef0:	4651      	mov	r1, sl
 8017ef2:	980e      	ldr	r0, [sp, #56]	; 0x38
 8017ef4:	f7ff ff1c 	bl	8017d30 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 8017ef8:	4681      	mov	r9, r0
 8017efa:	980e      	ldr	r0, [sp, #56]	; 0x38
 8017efc:	f7ff ff42 	bl	8017d84 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 8017f00:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017f02:	9909      	ldr	r1, [sp, #36]	; 0x24
 8017f04:	eba3 0a01 	sub.w	sl, r3, r1
 8017f08:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017f0a:	459a      	cmp	sl, r3
 8017f0c:	bfa8      	it	ge
 8017f0e:	469a      	movge	sl, r3
 8017f10:	f1ba 0f00 	cmp.w	sl, #0
 8017f14:	4683      	mov	fp, r0
 8017f16:	f340 811a 	ble.w	801814e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8017f1a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8017f1c:	1b64      	subs	r4, r4, r5
 8017f1e:	1b1c      	subs	r4, r3, r4
 8017f20:	42bc      	cmp	r4, r7
 8017f22:	bfd4      	ite	le
 8017f24:	ebc5 0504 	rsble	r5, r5, r4
 8017f28:	ebc5 0507 	rsbgt	r5, r5, r7
 8017f2c:	2d00      	cmp	r5, #0
 8017f2e:	f340 810e 	ble.w	801814e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8017f32:	1b52      	subs	r2, r2, r5
 8017f34:	fb08 f302 	mul.w	r3, r8, r2
 8017f38:	930f      	str	r3, [sp, #60]	; 0x3c
 8017f3a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8017f3c:	2b00      	cmp	r3, #0
 8017f3e:	f040 8116 	bne.w	801816e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 8017f42:	4b8d      	ldr	r3, [pc, #564]	; (8018178 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 8017f44:	6818      	ldr	r0, [r3, #0]
 8017f46:	6803      	ldr	r3, [r0, #0]
 8017f48:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017f4a:	4798      	blx	r3
 8017f4c:	2301      	movs	r3, #1
 8017f4e:	fa03 f308 	lsl.w	r3, r3, r8
 8017f52:	4a8a      	ldr	r2, [pc, #552]	; (801817c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 8017f54:	3b01      	subs	r3, #1
 8017f56:	b2db      	uxtb	r3, r3
 8017f58:	8811      	ldrh	r1, [r2, #0]
 8017f5a:	930e      	str	r3, [sp, #56]	; 0x38
 8017f5c:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 8017f60:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 8017f64:	fb01 2303 	mla	r3, r1, r3, r2
 8017f68:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8017f6c:	930a      	str	r3, [sp, #40]	; 0x28
 8017f6e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8017f70:	f3c3 4307 	ubfx	r3, r3, #16, #8
 8017f74:	9313      	str	r3, [sp, #76]	; 0x4c
 8017f76:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8017f78:	0a19      	lsrs	r1, r3, #8
 8017f7a:	b2cb      	uxtb	r3, r1
 8017f7c:	9312      	str	r3, [sp, #72]	; 0x48
 8017f7e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8017f80:	b2db      	uxtb	r3, r3
 8017f82:	9311      	str	r3, [sp, #68]	; 0x44
 8017f84:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8017f86:	095a      	lsrs	r2, r3, #5
 8017f88:	4b7d      	ldr	r3, [pc, #500]	; (8018180 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 8017f8a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017f8e:	400b      	ands	r3, r1
 8017f90:	4313      	orrs	r3, r2
 8017f92:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8017f94:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8017f98:	4313      	orrs	r3, r2
 8017f9a:	b29b      	uxth	r3, r3
 8017f9c:	9310      	str	r3, [sp, #64]	; 0x40
 8017f9e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017fa0:	781a      	ldrb	r2, [r3, #0]
 8017fa2:	ea4f 0349 	mov.w	r3, r9, lsl #1
 8017fa6:	4132      	asrs	r2, r6
 8017fa8:	fb05 b919 	mls	r9, r5, r9, fp
 8017fac:	fb03 fb05 	mul.w	fp, r3, r5
 8017fb0:	b2d2      	uxtb	r2, r2
 8017fb2:	930d      	str	r3, [sp, #52]	; 0x34
 8017fb4:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 8017fb8:	f11a 3aff 	adds.w	sl, sl, #4294967295
 8017fbc:	f0c0 80f5 	bcc.w	80181aa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 8017fc0:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 8017fc4:	46ae      	mov	lr, r5
 8017fc6:	f11e 3eff 	adds.w	lr, lr, #4294967295
 8017fca:	f0c0 80dd 	bcc.w	8018188 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 8017fce:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017fd0:	4013      	ands	r3, r2
 8017fd2:	d055      	beq.n	8018080 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 8017fd4:	20ff      	movs	r0, #255	; 0xff
 8017fd6:	990e      	ldr	r1, [sp, #56]	; 0x38
 8017fd8:	fb90 f1f1 	sdiv	r1, r0, r1
 8017fdc:	434b      	muls	r3, r1
 8017fde:	2bfe      	cmp	r3, #254	; 0xfe
 8017fe0:	dd03      	ble.n	8017fea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 8017fe2:	990c      	ldr	r1, [sp, #48]	; 0x30
 8017fe4:	4281      	cmp	r1, r0
 8017fe6:	f000 80cd 	beq.w	8018184 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 8017fea:	990c      	ldr	r1, [sp, #48]	; 0x30
 8017fec:	f8bc 4000 	ldrh.w	r4, [ip]
 8017ff0:	fb11 f303 	smulbb	r3, r1, r3
 8017ff4:	b29b      	uxth	r3, r3
 8017ff6:	1c59      	adds	r1, r3, #1
 8017ff8:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8017ffc:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8018000:	b29f      	uxth	r7, r3
 8018002:	43db      	mvns	r3, r3
 8018004:	b2db      	uxtb	r3, r3
 8018006:	9309      	str	r3, [sp, #36]	; 0x24
 8018008:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801800a:	1220      	asrs	r0, r4, #8
 801800c:	fb13 f907 	smulbb	r9, r3, r7
 8018010:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8018014:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018016:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 801801a:	fb00 9003 	mla	r0, r0, r3, r9
 801801e:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8018020:	10e1      	asrs	r1, r4, #3
 8018022:	fb13 f907 	smulbb	r9, r3, r7
 8018026:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801802a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801802c:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 8018030:	fb01 9103 	mla	r1, r1, r3, r9
 8018034:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8018036:	00e4      	lsls	r4, r4, #3
 8018038:	fb13 f707 	smulbb	r7, r3, r7
 801803c:	b2e4      	uxtb	r4, r4
 801803e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018040:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8018044:	fb04 7403 	mla	r4, r4, r3, r7
 8018048:	b280      	uxth	r0, r0
 801804a:	b2a4      	uxth	r4, r4
 801804c:	1c43      	adds	r3, r0, #1
 801804e:	f104 0901 	add.w	r9, r4, #1
 8018052:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8018056:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 801805a:	b289      	uxth	r1, r1
 801805c:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 8018060:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8018064:	ea49 0000 	orr.w	r0, r9, r0
 8018068:	f101 0901 	add.w	r9, r1, #1
 801806c:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 8018070:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8018074:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8018078:	ea40 0009 	orr.w	r0, r0, r9
 801807c:	f8ac 0000 	strh.w	r0, [ip]
 8018080:	4446      	add	r6, r8
 8018082:	b2b6      	uxth	r6, r6
 8018084:	2e07      	cmp	r6, #7
 8018086:	bf81      	itttt	hi
 8018088:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 801808a:	785a      	ldrbhi	r2, [r3, #1]
 801808c:	3301      	addhi	r3, #1
 801808e:	9328      	strhi	r3, [sp, #160]	; 0xa0
 8018090:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018092:	bf9a      	itte	ls
 8018094:	fa42 f208 	asrls.w	r2, r2, r8
 8018098:	b2d2      	uxtbls	r2, r2
 801809a:	2600      	movhi	r6, #0
 801809c:	449c      	add	ip, r3
 801809e:	e792      	b.n	8017fc6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 80180a0:	441c      	add	r4, r3
 80180a2:	b224      	sxth	r4, r4
 80180a4:	e6d5      	b.n	8017e52 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 80180a6:	f1ba 0f01 	cmp.w	sl, #1
 80180aa:	f47f af0c 	bne.w	8017ec6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 80180ae:	f1bb 0f01 	cmp.w	fp, #1
 80180b2:	f47f af08 	bne.w	8017ec6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 80180b6:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 8018178 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 80180ba:	f8db 0000 	ldr.w	r0, [fp]
 80180be:	6803      	ldr	r3, [r0, #0]
 80180c0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80180c2:	4798      	blx	r3
 80180c4:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 80180c8:	465a      	mov	r2, fp
 80180ca:	d006      	beq.n	80180da <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 80180cc:	f1b8 0f04 	cmp.w	r8, #4
 80180d0:	d140      	bne.n	8018154 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 80180d2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80180d4:	3300      	adds	r3, #0
 80180d6:	bf18      	it	ne
 80180d8:	2301      	movne	r3, #1
 80180da:	0580      	lsls	r0, r0, #22
 80180dc:	d56e      	bpl.n	80181bc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 80180de:	f1b8 0f08 	cmp.w	r8, #8
 80180e2:	d16b      	bne.n	80181bc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 80180e4:	2b00      	cmp	r3, #0
 80180e6:	bf0c      	ite	eq
 80180e8:	f44f 7100 	moveq.w	r1, #512	; 0x200
 80180ec:	f44f 7180 	movne.w	r1, #256	; 0x100
 80180f0:	2d00      	cmp	r5, #0
 80180f2:	f47f aee8 	bne.w	8017ec6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 80180f6:	2e00      	cmp	r6, #0
 80180f8:	f47f aee5 	bne.w	8017ec6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 80180fc:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80180fe:	19e3      	adds	r3, r4, r7
 8018100:	4283      	cmp	r3, r0
 8018102:	f73f aee0 	bgt.w	8017ec6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018106:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018108:	980d      	ldr	r0, [sp, #52]	; 0x34
 801810a:	444b      	add	r3, r9
 801810c:	4283      	cmp	r3, r0
 801810e:	f73f aeda 	bgt.w	8017ec6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018112:	6810      	ldr	r0, [r2, #0]
 8018114:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 8018118:	6804      	ldr	r4, [r0, #0]
 801811a:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801811e:	b2bf      	uxth	r7, r7
 8018120:	f1b8 0f08 	cmp.w	r8, #8
 8018124:	f04f 0500 	mov.w	r5, #0
 8018128:	bf18      	it	ne
 801812a:	3701      	addne	r7, #1
 801812c:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8018130:	990c      	ldr	r1, [sp, #48]	; 0x30
 8018132:	9104      	str	r1, [sp, #16]
 8018134:	bf18      	it	ne
 8018136:	f027 0701 	bicne.w	r7, r7, #1
 801813a:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801813c:	bf18      	it	ne
 801813e:	b2bf      	uxthne	r7, r7
 8018140:	e9cd 7102 	strd	r7, r1, [sp, #8]
 8018144:	e9cd 7900 	strd	r7, r9, [sp]
 8018148:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801814a:	6d64      	ldr	r4, [r4, #84]	; 0x54
 801814c:	47a0      	blx	r4
 801814e:	b019      	add	sp, #100	; 0x64
 8018150:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018154:	2300      	movs	r3, #0
 8018156:	e7c0      	b.n	80180da <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 8018158:	2208      	movs	r2, #8
 801815a:	fb92 f3f8 	sdiv	r3, r2, r8
 801815e:	1e5a      	subs	r2, r3, #1
 8018160:	443a      	add	r2, r7
 8018162:	fb92 f2f3 	sdiv	r2, r2, r3
 8018166:	fb12 f203 	smulbb	r2, r2, r3
 801816a:	b292      	uxth	r2, r2
 801816c:	e6b0      	b.n	8017ed0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 801816e:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8018170:	e6ec      	b.n	8017f4c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 8018172:	bf00      	nop
 8018174:	20015354 	.word	0x20015354
 8018178:	2001535c 	.word	0x2001535c
 801817c:	20015356 	.word	0x20015356
 8018180:	00fff800 	.word	0x00fff800
 8018184:	9810      	ldr	r0, [sp, #64]	; 0x40
 8018186:	e779      	b.n	801807c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 8018188:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801818a:	b153      	cbz	r3, 80181a2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 801818c:	441e      	add	r6, r3
 801818e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018190:	b2b6      	uxth	r6, r6
 8018192:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 8018196:	f006 0607 	and.w	r6, r6, #7
 801819a:	781a      	ldrb	r2, [r3, #0]
 801819c:	9328      	str	r3, [sp, #160]	; 0xa0
 801819e:	4132      	asrs	r2, r6
 80181a0:	b2d2      	uxtb	r2, r2
 80181a2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80181a4:	445b      	add	r3, fp
 80181a6:	930a      	str	r3, [sp, #40]	; 0x28
 80181a8:	e706      	b.n	8017fb8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 80181aa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80181ac:	2b00      	cmp	r3, #0
 80181ae:	d1ce      	bne.n	801814e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 80181b0:	4b05      	ldr	r3, [pc, #20]	; (80181c8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 80181b2:	6818      	ldr	r0, [r3, #0]
 80181b4:	6803      	ldr	r3, [r0, #0]
 80181b6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80181b8:	4798      	blx	r3
 80181ba:	e7c8      	b.n	801814e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 80181bc:	2b00      	cmp	r3, #0
 80181be:	f43f ae82 	beq.w	8017ec6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 80181c2:	f44f 7180 	mov.w	r1, #256	; 0x100
 80181c6:	e793      	b.n	80180f0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 80181c8:	2001535c 	.word	0x2001535c

080181cc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 80181cc:	b538      	push	{r3, r4, r5, lr}
 80181ce:	4c15      	ldr	r4, [pc, #84]	; (8018224 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 80181d0:	7823      	ldrb	r3, [r4, #0]
 80181d2:	f3bf 8f5b 	dmb	ish
 80181d6:	07da      	lsls	r2, r3, #31
 80181d8:	4605      	mov	r5, r0
 80181da:	d40b      	bmi.n	80181f4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 80181dc:	4620      	mov	r0, r4
 80181de:	f007 fd73 	bl	801fcc8 <__cxa_guard_acquire>
 80181e2:	b138      	cbz	r0, 80181f4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 80181e4:	4620      	mov	r0, r4
 80181e6:	f007 fd7b 	bl	801fce0 <__cxa_guard_release>
 80181ea:	4a0f      	ldr	r2, [pc, #60]	; (8018228 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 80181ec:	490f      	ldr	r1, [pc, #60]	; (801822c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 80181ee:	4810      	ldr	r0, [pc, #64]	; (8018230 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 80181f0:	f007 fd63 	bl	801fcba <__aeabi_atexit>
 80181f4:	4c0f      	ldr	r4, [pc, #60]	; (8018234 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 80181f6:	7823      	ldrb	r3, [r4, #0]
 80181f8:	f3bf 8f5b 	dmb	ish
 80181fc:	07db      	lsls	r3, r3, #31
 80181fe:	d40b      	bmi.n	8018218 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8018200:	4620      	mov	r0, r4
 8018202:	f007 fd61 	bl	801fcc8 <__cxa_guard_acquire>
 8018206:	b138      	cbz	r0, 8018218 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8018208:	4620      	mov	r0, r4
 801820a:	f007 fd69 	bl	801fce0 <__cxa_guard_release>
 801820e:	4a06      	ldr	r2, [pc, #24]	; (8018228 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8018210:	4909      	ldr	r1, [pc, #36]	; (8018238 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 8018212:	480a      	ldr	r0, [pc, #40]	; (801823c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8018214:	f007 fd51 	bl	801fcba <__aeabi_atexit>
 8018218:	4b05      	ldr	r3, [pc, #20]	; (8018230 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801821a:	612b      	str	r3, [r5, #16]
 801821c:	4b07      	ldr	r3, [pc, #28]	; (801823c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801821e:	616b      	str	r3, [r5, #20]
 8018220:	bd38      	pop	{r3, r4, r5, pc}
 8018222:	bf00      	nop
 8018224:	20015430 	.word	0x20015430
 8018228:	20000000 	.word	0x20000000
 801822c:	080163dd 	.word	0x080163dd
 8018230:	200000cc 	.word	0x200000cc
 8018234:	20015434 	.word	0x20015434
 8018238:	080163db 	.word	0x080163db
 801823c:	200000d0 	.word	0x200000d0

08018240 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 8018240:	b538      	push	{r3, r4, r5, lr}
 8018242:	4c15      	ldr	r4, [pc, #84]	; (8018298 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 8018244:	7823      	ldrb	r3, [r4, #0]
 8018246:	f3bf 8f5b 	dmb	ish
 801824a:	07da      	lsls	r2, r3, #31
 801824c:	4605      	mov	r5, r0
 801824e:	d40b      	bmi.n	8018268 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8018250:	4620      	mov	r0, r4
 8018252:	f007 fd39 	bl	801fcc8 <__cxa_guard_acquire>
 8018256:	b138      	cbz	r0, 8018268 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8018258:	4620      	mov	r0, r4
 801825a:	f007 fd41 	bl	801fce0 <__cxa_guard_release>
 801825e:	4a0f      	ldr	r2, [pc, #60]	; (801829c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8018260:	490f      	ldr	r1, [pc, #60]	; (80182a0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 8018262:	4810      	ldr	r0, [pc, #64]	; (80182a4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8018264:	f007 fd29 	bl	801fcba <__aeabi_atexit>
 8018268:	4c0f      	ldr	r4, [pc, #60]	; (80182a8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 801826a:	7823      	ldrb	r3, [r4, #0]
 801826c:	f3bf 8f5b 	dmb	ish
 8018270:	07db      	lsls	r3, r3, #31
 8018272:	d40b      	bmi.n	801828c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8018274:	4620      	mov	r0, r4
 8018276:	f007 fd27 	bl	801fcc8 <__cxa_guard_acquire>
 801827a:	b138      	cbz	r0, 801828c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801827c:	4620      	mov	r0, r4
 801827e:	f007 fd2f 	bl	801fce0 <__cxa_guard_release>
 8018282:	4a06      	ldr	r2, [pc, #24]	; (801829c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8018284:	4909      	ldr	r1, [pc, #36]	; (80182ac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 8018286:	480a      	ldr	r0, [pc, #40]	; (80182b0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8018288:	f007 fd17 	bl	801fcba <__aeabi_atexit>
 801828c:	4b05      	ldr	r3, [pc, #20]	; (80182a4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801828e:	60ab      	str	r3, [r5, #8]
 8018290:	4b07      	ldr	r3, [pc, #28]	; (80182b0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8018292:	60eb      	str	r3, [r5, #12]
 8018294:	bd38      	pop	{r3, r4, r5, pc}
 8018296:	bf00      	nop
 8018298:	20015408 	.word	0x20015408
 801829c:	20000000 	.word	0x20000000
 80182a0:	080163e1 	.word	0x080163e1
 80182a4:	200000a4 	.word	0x200000a4
 80182a8:	2001540c 	.word	0x2001540c
 80182ac:	080163df 	.word	0x080163df
 80182b0:	200000a8 	.word	0x200000a8

080182b4 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 80182b4:	b510      	push	{r4, lr}
 80182b6:	4604      	mov	r4, r0
 80182b8:	f7ff ff88 	bl	80181cc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 80182bc:	4620      	mov	r0, r4
 80182be:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80182c2:	f7ff bfbd 	b.w	8018240 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

080182c8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 80182c8:	b538      	push	{r3, r4, r5, lr}
 80182ca:	4c15      	ldr	r4, [pc, #84]	; (8018320 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 80182cc:	7823      	ldrb	r3, [r4, #0]
 80182ce:	f3bf 8f5b 	dmb	ish
 80182d2:	07da      	lsls	r2, r3, #31
 80182d4:	4605      	mov	r5, r0
 80182d6:	d40b      	bmi.n	80182f0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 80182d8:	4620      	mov	r0, r4
 80182da:	f007 fcf5 	bl	801fcc8 <__cxa_guard_acquire>
 80182de:	b138      	cbz	r0, 80182f0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 80182e0:	4620      	mov	r0, r4
 80182e2:	f007 fcfd 	bl	801fce0 <__cxa_guard_release>
 80182e6:	4a0f      	ldr	r2, [pc, #60]	; (8018324 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 80182e8:	490f      	ldr	r1, [pc, #60]	; (8018328 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 80182ea:	4810      	ldr	r0, [pc, #64]	; (801832c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 80182ec:	f007 fce5 	bl	801fcba <__aeabi_atexit>
 80182f0:	4c0f      	ldr	r4, [pc, #60]	; (8018330 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 80182f2:	7823      	ldrb	r3, [r4, #0]
 80182f4:	f3bf 8f5b 	dmb	ish
 80182f8:	07db      	lsls	r3, r3, #31
 80182fa:	d40b      	bmi.n	8018314 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 80182fc:	4620      	mov	r0, r4
 80182fe:	f007 fce3 	bl	801fcc8 <__cxa_guard_acquire>
 8018302:	b138      	cbz	r0, 8018314 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8018304:	4620      	mov	r0, r4
 8018306:	f007 fceb 	bl	801fce0 <__cxa_guard_release>
 801830a:	4a06      	ldr	r2, [pc, #24]	; (8018324 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801830c:	4909      	ldr	r1, [pc, #36]	; (8018334 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 801830e:	480a      	ldr	r0, [pc, #40]	; (8018338 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8018310:	f007 fcd3 	bl	801fcba <__aeabi_atexit>
 8018314:	4b05      	ldr	r3, [pc, #20]	; (801832c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8018316:	622b      	str	r3, [r5, #32]
 8018318:	4b07      	ldr	r3, [pc, #28]	; (8018338 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801831a:	626b      	str	r3, [r5, #36]	; 0x24
 801831c:	bd38      	pop	{r3, r4, r5, pc}
 801831e:	bf00      	nop
 8018320:	20015438 	.word	0x20015438
 8018324:	20000000 	.word	0x20000000
 8018328:	080163d5 	.word	0x080163d5
 801832c:	200000d4 	.word	0x200000d4
 8018330:	2001543c 	.word	0x2001543c
 8018334:	080163d3 	.word	0x080163d3
 8018338:	200000d8 	.word	0x200000d8

0801833c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 801833c:	b538      	push	{r3, r4, r5, lr}
 801833e:	4c15      	ldr	r4, [pc, #84]	; (8018394 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 8018340:	7823      	ldrb	r3, [r4, #0]
 8018342:	f3bf 8f5b 	dmb	ish
 8018346:	07da      	lsls	r2, r3, #31
 8018348:	4605      	mov	r5, r0
 801834a:	d40b      	bmi.n	8018364 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801834c:	4620      	mov	r0, r4
 801834e:	f007 fcbb 	bl	801fcc8 <__cxa_guard_acquire>
 8018352:	b138      	cbz	r0, 8018364 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8018354:	4620      	mov	r0, r4
 8018356:	f007 fcc3 	bl	801fce0 <__cxa_guard_release>
 801835a:	4a0f      	ldr	r2, [pc, #60]	; (8018398 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801835c:	490f      	ldr	r1, [pc, #60]	; (801839c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 801835e:	4810      	ldr	r0, [pc, #64]	; (80183a0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8018360:	f007 fcab 	bl	801fcba <__aeabi_atexit>
 8018364:	4c0f      	ldr	r4, [pc, #60]	; (80183a4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 8018366:	7823      	ldrb	r3, [r4, #0]
 8018368:	f3bf 8f5b 	dmb	ish
 801836c:	07db      	lsls	r3, r3, #31
 801836e:	d40b      	bmi.n	8018388 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8018370:	4620      	mov	r0, r4
 8018372:	f007 fca9 	bl	801fcc8 <__cxa_guard_acquire>
 8018376:	b138      	cbz	r0, 8018388 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8018378:	4620      	mov	r0, r4
 801837a:	f007 fcb1 	bl	801fce0 <__cxa_guard_release>
 801837e:	4a06      	ldr	r2, [pc, #24]	; (8018398 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8018380:	4909      	ldr	r1, [pc, #36]	; (80183a8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 8018382:	480a      	ldr	r0, [pc, #40]	; (80183ac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8018384:	f007 fc99 	bl	801fcba <__aeabi_atexit>
 8018388:	4b05      	ldr	r3, [pc, #20]	; (80183a0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801838a:	61ab      	str	r3, [r5, #24]
 801838c:	4b07      	ldr	r3, [pc, #28]	; (80183ac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801838e:	61eb      	str	r3, [r5, #28]
 8018390:	bd38      	pop	{r3, r4, r5, pc}
 8018392:	bf00      	nop
 8018394:	20015410 	.word	0x20015410
 8018398:	20000000 	.word	0x20000000
 801839c:	080163d9 	.word	0x080163d9
 80183a0:	200000ac 	.word	0x200000ac
 80183a4:	20015414 	.word	0x20015414
 80183a8:	080163d7 	.word	0x080163d7
 80183ac:	200000b0 	.word	0x200000b0

080183b0 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 80183b0:	b510      	push	{r4, lr}
 80183b2:	4604      	mov	r4, r0
 80183b4:	f7ff ff88 	bl	80182c8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 80183b8:	4620      	mov	r0, r4
 80183ba:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80183be:	f7ff bfbd 	b.w	801833c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

080183c4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 80183c4:	b538      	push	{r3, r4, r5, lr}
 80183c6:	4c15      	ldr	r4, [pc, #84]	; (801841c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 80183c8:	7823      	ldrb	r3, [r4, #0]
 80183ca:	f3bf 8f5b 	dmb	ish
 80183ce:	07da      	lsls	r2, r3, #31
 80183d0:	4605      	mov	r5, r0
 80183d2:	d40b      	bmi.n	80183ec <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 80183d4:	4620      	mov	r0, r4
 80183d6:	f007 fc77 	bl	801fcc8 <__cxa_guard_acquire>
 80183da:	b138      	cbz	r0, 80183ec <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 80183dc:	4620      	mov	r0, r4
 80183de:	f007 fc7f 	bl	801fce0 <__cxa_guard_release>
 80183e2:	4a0f      	ldr	r2, [pc, #60]	; (8018420 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 80183e4:	490f      	ldr	r1, [pc, #60]	; (8018424 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 80183e6:	4810      	ldr	r0, [pc, #64]	; (8018428 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 80183e8:	f007 fc67 	bl	801fcba <__aeabi_atexit>
 80183ec:	4c0f      	ldr	r4, [pc, #60]	; (801842c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 80183ee:	7823      	ldrb	r3, [r4, #0]
 80183f0:	f3bf 8f5b 	dmb	ish
 80183f4:	07db      	lsls	r3, r3, #31
 80183f6:	d40b      	bmi.n	8018410 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 80183f8:	4620      	mov	r0, r4
 80183fa:	f007 fc65 	bl	801fcc8 <__cxa_guard_acquire>
 80183fe:	b138      	cbz	r0, 8018410 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8018400:	4620      	mov	r0, r4
 8018402:	f007 fc6d 	bl	801fce0 <__cxa_guard_release>
 8018406:	4a06      	ldr	r2, [pc, #24]	; (8018420 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8018408:	4909      	ldr	r1, [pc, #36]	; (8018430 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 801840a:	480a      	ldr	r0, [pc, #40]	; (8018434 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801840c:	f007 fc55 	bl	801fcba <__aeabi_atexit>
 8018410:	4b05      	ldr	r3, [pc, #20]	; (8018428 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8018412:	632b      	str	r3, [r5, #48]	; 0x30
 8018414:	4b07      	ldr	r3, [pc, #28]	; (8018434 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8018416:	636b      	str	r3, [r5, #52]	; 0x34
 8018418:	bd38      	pop	{r3, r4, r5, pc}
 801841a:	bf00      	nop
 801841c:	20015448 	.word	0x20015448
 8018420:	20000000 	.word	0x20000000
 8018424:	080163cd 	.word	0x080163cd
 8018428:	200000e4 	.word	0x200000e4
 801842c:	2001544c 	.word	0x2001544c
 8018430:	080163cb 	.word	0x080163cb
 8018434:	200000e8 	.word	0x200000e8

08018438 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 8018438:	b538      	push	{r3, r4, r5, lr}
 801843a:	4c15      	ldr	r4, [pc, #84]	; (8018490 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 801843c:	7823      	ldrb	r3, [r4, #0]
 801843e:	f3bf 8f5b 	dmb	ish
 8018442:	07da      	lsls	r2, r3, #31
 8018444:	4605      	mov	r5, r0
 8018446:	d40b      	bmi.n	8018460 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8018448:	4620      	mov	r0, r4
 801844a:	f007 fc3d 	bl	801fcc8 <__cxa_guard_acquire>
 801844e:	b138      	cbz	r0, 8018460 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8018450:	4620      	mov	r0, r4
 8018452:	f007 fc45 	bl	801fce0 <__cxa_guard_release>
 8018456:	4a0f      	ldr	r2, [pc, #60]	; (8018494 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8018458:	490f      	ldr	r1, [pc, #60]	; (8018498 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 801845a:	4810      	ldr	r0, [pc, #64]	; (801849c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801845c:	f007 fc2d 	bl	801fcba <__aeabi_atexit>
 8018460:	4c0f      	ldr	r4, [pc, #60]	; (80184a0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 8018462:	7823      	ldrb	r3, [r4, #0]
 8018464:	f3bf 8f5b 	dmb	ish
 8018468:	07db      	lsls	r3, r3, #31
 801846a:	d40b      	bmi.n	8018484 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801846c:	4620      	mov	r0, r4
 801846e:	f007 fc2b 	bl	801fcc8 <__cxa_guard_acquire>
 8018472:	b138      	cbz	r0, 8018484 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8018474:	4620      	mov	r0, r4
 8018476:	f007 fc33 	bl	801fce0 <__cxa_guard_release>
 801847a:	4a06      	ldr	r2, [pc, #24]	; (8018494 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801847c:	4909      	ldr	r1, [pc, #36]	; (80184a4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 801847e:	480a      	ldr	r0, [pc, #40]	; (80184a8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8018480:	f007 fc1b 	bl	801fcba <__aeabi_atexit>
 8018484:	4b05      	ldr	r3, [pc, #20]	; (801849c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8018486:	62ab      	str	r3, [r5, #40]	; 0x28
 8018488:	4b07      	ldr	r3, [pc, #28]	; (80184a8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801848a:	62eb      	str	r3, [r5, #44]	; 0x2c
 801848c:	bd38      	pop	{r3, r4, r5, pc}
 801848e:	bf00      	nop
 8018490:	20015418 	.word	0x20015418
 8018494:	20000000 	.word	0x20000000
 8018498:	080163d1 	.word	0x080163d1
 801849c:	200000b4 	.word	0x200000b4
 80184a0:	2001541c 	.word	0x2001541c
 80184a4:	080163cf 	.word	0x080163cf
 80184a8:	200000b8 	.word	0x200000b8

080184ac <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 80184ac:	b510      	push	{r4, lr}
 80184ae:	4604      	mov	r4, r0
 80184b0:	f7ff ff88 	bl	80183c4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 80184b4:	4620      	mov	r0, r4
 80184b6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80184ba:	f7ff bfbd 	b.w	8018438 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

080184c0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 80184c0:	b538      	push	{r3, r4, r5, lr}
 80184c2:	4c15      	ldr	r4, [pc, #84]	; (8018518 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 80184c4:	7823      	ldrb	r3, [r4, #0]
 80184c6:	f3bf 8f5b 	dmb	ish
 80184ca:	07da      	lsls	r2, r3, #31
 80184cc:	4605      	mov	r5, r0
 80184ce:	d40b      	bmi.n	80184e8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 80184d0:	4620      	mov	r0, r4
 80184d2:	f007 fbf9 	bl	801fcc8 <__cxa_guard_acquire>
 80184d6:	b138      	cbz	r0, 80184e8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 80184d8:	4620      	mov	r0, r4
 80184da:	f007 fc01 	bl	801fce0 <__cxa_guard_release>
 80184de:	4a0f      	ldr	r2, [pc, #60]	; (801851c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 80184e0:	490f      	ldr	r1, [pc, #60]	; (8018520 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 80184e2:	4810      	ldr	r0, [pc, #64]	; (8018524 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 80184e4:	f007 fbe9 	bl	801fcba <__aeabi_atexit>
 80184e8:	4c0f      	ldr	r4, [pc, #60]	; (8018528 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 80184ea:	7823      	ldrb	r3, [r4, #0]
 80184ec:	f3bf 8f5b 	dmb	ish
 80184f0:	07db      	lsls	r3, r3, #31
 80184f2:	d40b      	bmi.n	801850c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 80184f4:	4620      	mov	r0, r4
 80184f6:	f007 fbe7 	bl	801fcc8 <__cxa_guard_acquire>
 80184fa:	b138      	cbz	r0, 801850c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 80184fc:	4620      	mov	r0, r4
 80184fe:	f007 fbef 	bl	801fce0 <__cxa_guard_release>
 8018502:	4a06      	ldr	r2, [pc, #24]	; (801851c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8018504:	4909      	ldr	r1, [pc, #36]	; (801852c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 8018506:	480a      	ldr	r0, [pc, #40]	; (8018530 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8018508:	f007 fbd7 	bl	801fcba <__aeabi_atexit>
 801850c:	4b05      	ldr	r3, [pc, #20]	; (8018524 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801850e:	652b      	str	r3, [r5, #80]	; 0x50
 8018510:	4b07      	ldr	r3, [pc, #28]	; (8018530 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8018512:	656b      	str	r3, [r5, #84]	; 0x54
 8018514:	bd38      	pop	{r3, r4, r5, pc}
 8018516:	bf00      	nop
 8018518:	20015450 	.word	0x20015450
 801851c:	20000000 	.word	0x20000000
 8018520:	080163bd 	.word	0x080163bd
 8018524:	200000ec 	.word	0x200000ec
 8018528:	20015454 	.word	0x20015454
 801852c:	080163bb 	.word	0x080163bb
 8018530:	200000f0 	.word	0x200000f0

08018534 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 8018534:	b538      	push	{r3, r4, r5, lr}
 8018536:	4c15      	ldr	r4, [pc, #84]	; (801858c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 8018538:	7823      	ldrb	r3, [r4, #0]
 801853a:	f3bf 8f5b 	dmb	ish
 801853e:	07da      	lsls	r2, r3, #31
 8018540:	4605      	mov	r5, r0
 8018542:	d40b      	bmi.n	801855c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8018544:	4620      	mov	r0, r4
 8018546:	f007 fbbf 	bl	801fcc8 <__cxa_guard_acquire>
 801854a:	b138      	cbz	r0, 801855c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801854c:	4620      	mov	r0, r4
 801854e:	f007 fbc7 	bl	801fce0 <__cxa_guard_release>
 8018552:	4a0f      	ldr	r2, [pc, #60]	; (8018590 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8018554:	490f      	ldr	r1, [pc, #60]	; (8018594 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 8018556:	4810      	ldr	r0, [pc, #64]	; (8018598 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8018558:	f007 fbaf 	bl	801fcba <__aeabi_atexit>
 801855c:	4c0f      	ldr	r4, [pc, #60]	; (801859c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 801855e:	7823      	ldrb	r3, [r4, #0]
 8018560:	f3bf 8f5b 	dmb	ish
 8018564:	07db      	lsls	r3, r3, #31
 8018566:	d40b      	bmi.n	8018580 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8018568:	4620      	mov	r0, r4
 801856a:	f007 fbad 	bl	801fcc8 <__cxa_guard_acquire>
 801856e:	b138      	cbz	r0, 8018580 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8018570:	4620      	mov	r0, r4
 8018572:	f007 fbb5 	bl	801fce0 <__cxa_guard_release>
 8018576:	4a06      	ldr	r2, [pc, #24]	; (8018590 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8018578:	4909      	ldr	r1, [pc, #36]	; (80185a0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 801857a:	480a      	ldr	r0, [pc, #40]	; (80185a4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801857c:	f007 fb9d 	bl	801fcba <__aeabi_atexit>
 8018580:	4b05      	ldr	r3, [pc, #20]	; (8018598 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8018582:	64ab      	str	r3, [r5, #72]	; 0x48
 8018584:	4b07      	ldr	r3, [pc, #28]	; (80185a4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8018586:	64eb      	str	r3, [r5, #76]	; 0x4c
 8018588:	bd38      	pop	{r3, r4, r5, pc}
 801858a:	bf00      	nop
 801858c:	20015458 	.word	0x20015458
 8018590:	20000000 	.word	0x20000000
 8018594:	080163c1 	.word	0x080163c1
 8018598:	200000f4 	.word	0x200000f4
 801859c:	2001545c 	.word	0x2001545c
 80185a0:	080163bf 	.word	0x080163bf
 80185a4:	200000f8 	.word	0x200000f8

080185a8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 80185a8:	b538      	push	{r3, r4, r5, lr}
 80185aa:	4c15      	ldr	r4, [pc, #84]	; (8018600 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 80185ac:	7823      	ldrb	r3, [r4, #0]
 80185ae:	f3bf 8f5b 	dmb	ish
 80185b2:	07da      	lsls	r2, r3, #31
 80185b4:	4605      	mov	r5, r0
 80185b6:	d40b      	bmi.n	80185d0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 80185b8:	4620      	mov	r0, r4
 80185ba:	f007 fb85 	bl	801fcc8 <__cxa_guard_acquire>
 80185be:	b138      	cbz	r0, 80185d0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 80185c0:	4620      	mov	r0, r4
 80185c2:	f007 fb8d 	bl	801fce0 <__cxa_guard_release>
 80185c6:	4a0f      	ldr	r2, [pc, #60]	; (8018604 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 80185c8:	490f      	ldr	r1, [pc, #60]	; (8018608 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 80185ca:	4810      	ldr	r0, [pc, #64]	; (801860c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 80185cc:	f007 fb75 	bl	801fcba <__aeabi_atexit>
 80185d0:	4c0f      	ldr	r4, [pc, #60]	; (8018610 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 80185d2:	7823      	ldrb	r3, [r4, #0]
 80185d4:	f3bf 8f5b 	dmb	ish
 80185d8:	07db      	lsls	r3, r3, #31
 80185da:	d40b      	bmi.n	80185f4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 80185dc:	4620      	mov	r0, r4
 80185de:	f007 fb73 	bl	801fcc8 <__cxa_guard_acquire>
 80185e2:	b138      	cbz	r0, 80185f4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 80185e4:	4620      	mov	r0, r4
 80185e6:	f007 fb7b 	bl	801fce0 <__cxa_guard_release>
 80185ea:	4a06      	ldr	r2, [pc, #24]	; (8018604 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 80185ec:	4909      	ldr	r1, [pc, #36]	; (8018614 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 80185ee:	480a      	ldr	r0, [pc, #40]	; (8018618 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 80185f0:	f007 fb63 	bl	801fcba <__aeabi_atexit>
 80185f4:	4b05      	ldr	r3, [pc, #20]	; (801860c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 80185f6:	642b      	str	r3, [r5, #64]	; 0x40
 80185f8:	4b07      	ldr	r3, [pc, #28]	; (8018618 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 80185fa:	646b      	str	r3, [r5, #68]	; 0x44
 80185fc:	bd38      	pop	{r3, r4, r5, pc}
 80185fe:	bf00      	nop
 8018600:	20015420 	.word	0x20015420
 8018604:	20000000 	.word	0x20000000
 8018608:	080163c5 	.word	0x080163c5
 801860c:	200000bc 	.word	0x200000bc
 8018610:	20015424 	.word	0x20015424
 8018614:	080163c3 	.word	0x080163c3
 8018618:	200000c0 	.word	0x200000c0

0801861c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 801861c:	b538      	push	{r3, r4, r5, lr}
 801861e:	4c15      	ldr	r4, [pc, #84]	; (8018674 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 8018620:	7823      	ldrb	r3, [r4, #0]
 8018622:	f3bf 8f5b 	dmb	ish
 8018626:	07da      	lsls	r2, r3, #31
 8018628:	4605      	mov	r5, r0
 801862a:	d40b      	bmi.n	8018644 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801862c:	4620      	mov	r0, r4
 801862e:	f007 fb4b 	bl	801fcc8 <__cxa_guard_acquire>
 8018632:	b138      	cbz	r0, 8018644 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8018634:	4620      	mov	r0, r4
 8018636:	f007 fb53 	bl	801fce0 <__cxa_guard_release>
 801863a:	4a0f      	ldr	r2, [pc, #60]	; (8018678 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801863c:	490f      	ldr	r1, [pc, #60]	; (801867c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 801863e:	4810      	ldr	r0, [pc, #64]	; (8018680 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8018640:	f007 fb3b 	bl	801fcba <__aeabi_atexit>
 8018644:	4c0f      	ldr	r4, [pc, #60]	; (8018684 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 8018646:	7823      	ldrb	r3, [r4, #0]
 8018648:	f3bf 8f5b 	dmb	ish
 801864c:	07db      	lsls	r3, r3, #31
 801864e:	d40b      	bmi.n	8018668 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8018650:	4620      	mov	r0, r4
 8018652:	f007 fb39 	bl	801fcc8 <__cxa_guard_acquire>
 8018656:	b138      	cbz	r0, 8018668 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8018658:	4620      	mov	r0, r4
 801865a:	f007 fb41 	bl	801fce0 <__cxa_guard_release>
 801865e:	4a06      	ldr	r2, [pc, #24]	; (8018678 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8018660:	4909      	ldr	r1, [pc, #36]	; (8018688 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 8018662:	480a      	ldr	r0, [pc, #40]	; (801868c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8018664:	f007 fb29 	bl	801fcba <__aeabi_atexit>
 8018668:	4b05      	ldr	r3, [pc, #20]	; (8018680 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801866a:	63ab      	str	r3, [r5, #56]	; 0x38
 801866c:	4b07      	ldr	r3, [pc, #28]	; (801868c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801866e:	63eb      	str	r3, [r5, #60]	; 0x3c
 8018670:	bd38      	pop	{r3, r4, r5, pc}
 8018672:	bf00      	nop
 8018674:	20015440 	.word	0x20015440
 8018678:	20000000 	.word	0x20000000
 801867c:	080163c9 	.word	0x080163c9
 8018680:	200000dc 	.word	0x200000dc
 8018684:	20015444 	.word	0x20015444
 8018688:	080163c7 	.word	0x080163c7
 801868c:	200000e0 	.word	0x200000e0

08018690 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 8018690:	b510      	push	{r4, lr}
 8018692:	4604      	mov	r4, r0
 8018694:	f7ff ff14 	bl	80184c0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 8018698:	4620      	mov	r0, r4
 801869a:	f7ff ff85 	bl	80185a8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 801869e:	4620      	mov	r0, r4
 80186a0:	f7ff ff48 	bl	8018534 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 80186a4:	4620      	mov	r0, r4
 80186a6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80186aa:	f7ff bfb7 	b.w	801861c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

080186b0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 80186b0:	b538      	push	{r3, r4, r5, lr}
 80186b2:	4c15      	ldr	r4, [pc, #84]	; (8018708 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 80186b4:	7823      	ldrb	r3, [r4, #0]
 80186b6:	f3bf 8f5b 	dmb	ish
 80186ba:	07da      	lsls	r2, r3, #31
 80186bc:	4605      	mov	r5, r0
 80186be:	d40b      	bmi.n	80186d8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 80186c0:	4620      	mov	r0, r4
 80186c2:	f007 fb01 	bl	801fcc8 <__cxa_guard_acquire>
 80186c6:	b138      	cbz	r0, 80186d8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 80186c8:	4620      	mov	r0, r4
 80186ca:	f007 fb09 	bl	801fce0 <__cxa_guard_release>
 80186ce:	4a0f      	ldr	r2, [pc, #60]	; (801870c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 80186d0:	490f      	ldr	r1, [pc, #60]	; (8018710 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 80186d2:	4810      	ldr	r0, [pc, #64]	; (8018714 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 80186d4:	f007 faf1 	bl	801fcba <__aeabi_atexit>
 80186d8:	4c0f      	ldr	r4, [pc, #60]	; (8018718 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 80186da:	7823      	ldrb	r3, [r4, #0]
 80186dc:	f3bf 8f5b 	dmb	ish
 80186e0:	07db      	lsls	r3, r3, #31
 80186e2:	d40b      	bmi.n	80186fc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 80186e4:	4620      	mov	r0, r4
 80186e6:	f007 faef 	bl	801fcc8 <__cxa_guard_acquire>
 80186ea:	b138      	cbz	r0, 80186fc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 80186ec:	4620      	mov	r0, r4
 80186ee:	f007 faf7 	bl	801fce0 <__cxa_guard_release>
 80186f2:	4a06      	ldr	r2, [pc, #24]	; (801870c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 80186f4:	4909      	ldr	r1, [pc, #36]	; (801871c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 80186f6:	480a      	ldr	r0, [pc, #40]	; (8018720 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 80186f8:	f007 fadf 	bl	801fcba <__aeabi_atexit>
 80186fc:	4b05      	ldr	r3, [pc, #20]	; (8018714 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 80186fe:	662b      	str	r3, [r5, #96]	; 0x60
 8018700:	4b07      	ldr	r3, [pc, #28]	; (8018720 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8018702:	666b      	str	r3, [r5, #100]	; 0x64
 8018704:	bd38      	pop	{r3, r4, r5, pc}
 8018706:	bf00      	nop
 8018708:	20015428 	.word	0x20015428
 801870c:	20000000 	.word	0x20000000
 8018710:	080163b5 	.word	0x080163b5
 8018714:	200000c4 	.word	0x200000c4
 8018718:	2001542c 	.word	0x2001542c
 801871c:	080163b3 	.word	0x080163b3
 8018720:	200000c8 	.word	0x200000c8

08018724 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 8018724:	b538      	push	{r3, r4, r5, lr}
 8018726:	4c15      	ldr	r4, [pc, #84]	; (801877c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 8018728:	7823      	ldrb	r3, [r4, #0]
 801872a:	f3bf 8f5b 	dmb	ish
 801872e:	07da      	lsls	r2, r3, #31
 8018730:	4605      	mov	r5, r0
 8018732:	d40b      	bmi.n	801874c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8018734:	4620      	mov	r0, r4
 8018736:	f007 fac7 	bl	801fcc8 <__cxa_guard_acquire>
 801873a:	b138      	cbz	r0, 801874c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801873c:	4620      	mov	r0, r4
 801873e:	f007 facf 	bl	801fce0 <__cxa_guard_release>
 8018742:	4a0f      	ldr	r2, [pc, #60]	; (8018780 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8018744:	490f      	ldr	r1, [pc, #60]	; (8018784 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 8018746:	4810      	ldr	r0, [pc, #64]	; (8018788 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8018748:	f007 fab7 	bl	801fcba <__aeabi_atexit>
 801874c:	4c0f      	ldr	r4, [pc, #60]	; (801878c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 801874e:	7823      	ldrb	r3, [r4, #0]
 8018750:	f3bf 8f5b 	dmb	ish
 8018754:	07db      	lsls	r3, r3, #31
 8018756:	d40b      	bmi.n	8018770 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8018758:	4620      	mov	r0, r4
 801875a:	f007 fab5 	bl	801fcc8 <__cxa_guard_acquire>
 801875e:	b138      	cbz	r0, 8018770 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8018760:	4620      	mov	r0, r4
 8018762:	f007 fabd 	bl	801fce0 <__cxa_guard_release>
 8018766:	4a06      	ldr	r2, [pc, #24]	; (8018780 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8018768:	4909      	ldr	r1, [pc, #36]	; (8018790 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801876a:	480a      	ldr	r0, [pc, #40]	; (8018794 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801876c:	f007 faa5 	bl	801fcba <__aeabi_atexit>
 8018770:	4b05      	ldr	r3, [pc, #20]	; (8018788 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8018772:	65ab      	str	r3, [r5, #88]	; 0x58
 8018774:	4b07      	ldr	r3, [pc, #28]	; (8018794 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8018776:	65eb      	str	r3, [r5, #92]	; 0x5c
 8018778:	bd38      	pop	{r3, r4, r5, pc}
 801877a:	bf00      	nop
 801877c:	20015400 	.word	0x20015400
 8018780:	20000000 	.word	0x20000000
 8018784:	080163b9 	.word	0x080163b9
 8018788:	2000009c 	.word	0x2000009c
 801878c:	20015404 	.word	0x20015404
 8018790:	080163b7 	.word	0x080163b7
 8018794:	200000a0 	.word	0x200000a0

08018798 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 8018798:	b510      	push	{r4, lr}
 801879a:	4604      	mov	r4, r0
 801879c:	f7ff ff88 	bl	80186b0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 80187a0:	4620      	mov	r0, r4
 80187a2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80187a6:	f7ff bfbd 	b.w	8018724 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

080187ac <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 80187ac:	b538      	push	{r3, r4, r5, lr}
 80187ae:	4c15      	ldr	r4, [pc, #84]	; (8018804 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 80187b0:	7823      	ldrb	r3, [r4, #0]
 80187b2:	f3bf 8f5b 	dmb	ish
 80187b6:	07da      	lsls	r2, r3, #31
 80187b8:	4605      	mov	r5, r0
 80187ba:	d40b      	bmi.n	80187d4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 80187bc:	4620      	mov	r0, r4
 80187be:	f007 fa83 	bl	801fcc8 <__cxa_guard_acquire>
 80187c2:	b138      	cbz	r0, 80187d4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 80187c4:	4620      	mov	r0, r4
 80187c6:	f007 fa8b 	bl	801fce0 <__cxa_guard_release>
 80187ca:	4a0f      	ldr	r2, [pc, #60]	; (8018808 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 80187cc:	490f      	ldr	r1, [pc, #60]	; (801880c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 80187ce:	4810      	ldr	r0, [pc, #64]	; (8018810 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 80187d0:	f007 fa73 	bl	801fcba <__aeabi_atexit>
 80187d4:	4c0f      	ldr	r4, [pc, #60]	; (8018814 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 80187d6:	7823      	ldrb	r3, [r4, #0]
 80187d8:	f3bf 8f5b 	dmb	ish
 80187dc:	07db      	lsls	r3, r3, #31
 80187de:	d40b      	bmi.n	80187f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 80187e0:	4620      	mov	r0, r4
 80187e2:	f007 fa71 	bl	801fcc8 <__cxa_guard_acquire>
 80187e6:	b138      	cbz	r0, 80187f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 80187e8:	4620      	mov	r0, r4
 80187ea:	f007 fa79 	bl	801fce0 <__cxa_guard_release>
 80187ee:	4a06      	ldr	r2, [pc, #24]	; (8018808 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 80187f0:	4909      	ldr	r1, [pc, #36]	; (8018818 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 80187f2:	480a      	ldr	r0, [pc, #40]	; (801881c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 80187f4:	f007 fa61 	bl	801fcba <__aeabi_atexit>
 80187f8:	4b05      	ldr	r3, [pc, #20]	; (8018810 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 80187fa:	672b      	str	r3, [r5, #112]	; 0x70
 80187fc:	4b07      	ldr	r3, [pc, #28]	; (801881c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 80187fe:	676b      	str	r3, [r5, #116]	; 0x74
 8018800:	bd38      	pop	{r3, r4, r5, pc}
 8018802:	bf00      	nop
 8018804:	200153f8 	.word	0x200153f8
 8018808:	20000000 	.word	0x20000000
 801880c:	080163ad 	.word	0x080163ad
 8018810:	20000094 	.word	0x20000094
 8018814:	200153fc 	.word	0x200153fc
 8018818:	080163ab 	.word	0x080163ab
 801881c:	20000098 	.word	0x20000098

08018820 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 8018820:	b538      	push	{r3, r4, r5, lr}
 8018822:	4c15      	ldr	r4, [pc, #84]	; (8018878 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 8018824:	7823      	ldrb	r3, [r4, #0]
 8018826:	f3bf 8f5b 	dmb	ish
 801882a:	07da      	lsls	r2, r3, #31
 801882c:	4605      	mov	r5, r0
 801882e:	d40b      	bmi.n	8018848 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8018830:	4620      	mov	r0, r4
 8018832:	f007 fa49 	bl	801fcc8 <__cxa_guard_acquire>
 8018836:	b138      	cbz	r0, 8018848 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8018838:	4620      	mov	r0, r4
 801883a:	f007 fa51 	bl	801fce0 <__cxa_guard_release>
 801883e:	4a0f      	ldr	r2, [pc, #60]	; (801887c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8018840:	490f      	ldr	r1, [pc, #60]	; (8018880 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 8018842:	4810      	ldr	r0, [pc, #64]	; (8018884 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8018844:	f007 fa39 	bl	801fcba <__aeabi_atexit>
 8018848:	4c0f      	ldr	r4, [pc, #60]	; (8018888 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801884a:	7823      	ldrb	r3, [r4, #0]
 801884c:	f3bf 8f5b 	dmb	ish
 8018850:	07db      	lsls	r3, r3, #31
 8018852:	d40b      	bmi.n	801886c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8018854:	4620      	mov	r0, r4
 8018856:	f007 fa37 	bl	801fcc8 <__cxa_guard_acquire>
 801885a:	b138      	cbz	r0, 801886c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801885c:	4620      	mov	r0, r4
 801885e:	f007 fa3f 	bl	801fce0 <__cxa_guard_release>
 8018862:	4a06      	ldr	r2, [pc, #24]	; (801887c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8018864:	4909      	ldr	r1, [pc, #36]	; (801888c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 8018866:	480a      	ldr	r0, [pc, #40]	; (8018890 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8018868:	f007 fa27 	bl	801fcba <__aeabi_atexit>
 801886c:	4b05      	ldr	r3, [pc, #20]	; (8018884 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801886e:	66ab      	str	r3, [r5, #104]	; 0x68
 8018870:	4b07      	ldr	r3, [pc, #28]	; (8018890 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8018872:	66eb      	str	r3, [r5, #108]	; 0x6c
 8018874:	bd38      	pop	{r3, r4, r5, pc}
 8018876:	bf00      	nop
 8018878:	200153f0 	.word	0x200153f0
 801887c:	20000000 	.word	0x20000000
 8018880:	080163b1 	.word	0x080163b1
 8018884:	2000008c 	.word	0x2000008c
 8018888:	200153f4 	.word	0x200153f4
 801888c:	080163af 	.word	0x080163af
 8018890:	20000090 	.word	0x20000090

08018894 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 8018894:	b510      	push	{r4, lr}
 8018896:	4604      	mov	r4, r0
 8018898:	f7ff ff88 	bl	80187ac <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 801889c:	4620      	mov	r0, r4
 801889e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80188a2:	f7ff bfbd 	b.w	8018820 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

080188a6 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 80188a6:	b510      	push	{r4, lr}
 80188a8:	4604      	mov	r4, r0
 80188aa:	f7ff fff3 	bl	8018894 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 80188ae:	4620      	mov	r0, r4
 80188b0:	f7ff ff72 	bl	8018798 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 80188b4:	4620      	mov	r0, r4
 80188b6:	f7ff fdf9 	bl	80184ac <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 80188ba:	4620      	mov	r0, r4
 80188bc:	f7ff fcfa 	bl	80182b4 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 80188c0:	4620      	mov	r0, r4
 80188c2:	f7ff fd75 	bl	80183b0 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 80188c6:	4620      	mov	r0, r4
 80188c8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80188cc:	f7ff bee0 	b.w	8018690 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

080188d0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 80188d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80188d4:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
 80188d8:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
 80188dc:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
 80188e0:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 80188e4:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 80188e8:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 80188ec:	8808      	ldrh	r0, [r1, #0]
 80188ee:	fb05 4c0e 	mla	ip, r5, lr, r4
 80188f2:	2d00      	cmp	r5, #0
 80188f4:	eb02 0a0c 	add.w	sl, r2, ip
 80188f8:	f2c0 80b0 	blt.w	8018a5c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 80188fc:	45ab      	cmp	fp, r5
 80188fe:	f340 80ad 	ble.w	8018a5c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 8018902:	2c00      	cmp	r4, #0
 8018904:	f2c0 80a8 	blt.w	8018a58 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 8018908:	45a6      	cmp	lr, r4
 801890a:	f340 80a5 	ble.w	8018a58 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801890e:	f812 200c 	ldrb.w	r2, [r2, ip]
 8018912:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 8018916:	1c62      	adds	r2, r4, #1
 8018918:	f100 80a3 	bmi.w	8018a62 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801891c:	4596      	cmp	lr, r2
 801891e:	f340 80a0 	ble.w	8018a62 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8018922:	f1b9 0f00 	cmp.w	r9, #0
 8018926:	f000 809c 	beq.w	8018a62 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801892a:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801892e:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 8018932:	3501      	adds	r5, #1
 8018934:	f100 8099 	bmi.w	8018a6a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8018938:	45ab      	cmp	fp, r5
 801893a:	f340 8096 	ble.w	8018a6a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801893e:	2f00      	cmp	r7, #0
 8018940:	f000 8093 	beq.w	8018a6a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8018944:	2c00      	cmp	r4, #0
 8018946:	f2c0 808e 	blt.w	8018a66 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801894a:	45a6      	cmp	lr, r4
 801894c:	f340 808b 	ble.w	8018a66 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 8018950:	f81a 200e 	ldrb.w	r2, [sl, lr]
 8018954:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 8018958:	3401      	adds	r4, #1
 801895a:	f100 8089 	bmi.w	8018a70 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801895e:	45a6      	cmp	lr, r4
 8018960:	f340 8086 	ble.w	8018a70 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8018964:	f1b9 0f00 	cmp.w	r9, #0
 8018968:	f000 8082 	beq.w	8018a70 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801896c:	44d6      	add	lr, sl
 801896e:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8018972:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 8018976:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801897a:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801897e:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8018982:	fb19 fe07 	smulbb	lr, r9, r7
 8018986:	ea44 0808 	orr.w	r8, r4, r8
 801898a:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801898e:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 8018992:	f1c7 0210 	rsb	r2, r7, #16
 8018996:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801899a:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801899e:	ea44 0c0c 	orr.w	ip, r4, ip
 80189a2:	eba2 0209 	sub.w	r2, r2, r9
 80189a6:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 80189aa:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 80189ae:	fb04 f40c 	mul.w	r4, r4, ip
 80189b2:	fb02 4808 	mla	r8, r2, r8, r4
 80189b6:	041a      	lsls	r2, r3, #16
 80189b8:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80189bc:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80189c0:	4313      	orrs	r3, r2
 80189c2:	042a      	lsls	r2, r5, #16
 80189c4:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80189c8:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80189cc:	fb0e 8303 	mla	r3, lr, r3, r8
 80189d0:	432a      	orrs	r2, r5
 80189d2:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 80189d6:	fb07 3202 	mla	r2, r7, r2, r3
 80189da:	0d53      	lsrs	r3, r2, #21
 80189dc:	0952      	lsrs	r2, r2, #5
 80189de:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80189e2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80189e6:	431a      	orrs	r2, r3
 80189e8:	b293      	uxth	r3, r2
 80189ea:	b2b4      	uxth	r4, r6
 80189ec:	1202      	asrs	r2, r0, #8
 80189ee:	43f6      	mvns	r6, r6
 80189f0:	b2f6      	uxtb	r6, r6
 80189f2:	121d      	asrs	r5, r3, #8
 80189f4:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80189f8:	fb12 f206 	smulbb	r2, r2, r6
 80189fc:	10c7      	asrs	r7, r0, #3
 80189fe:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8018a02:	00c0      	lsls	r0, r0, #3
 8018a04:	fb05 2504 	mla	r5, r5, r4, r2
 8018a08:	b2c0      	uxtb	r0, r0
 8018a0a:	10da      	asrs	r2, r3, #3
 8018a0c:	00db      	lsls	r3, r3, #3
 8018a0e:	b2db      	uxtb	r3, r3
 8018a10:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8018a14:	fb10 f006 	smulbb	r0, r0, r6
 8018a18:	b2ad      	uxth	r5, r5
 8018a1a:	fb03 0004 	mla	r0, r3, r4, r0
 8018a1e:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8018a22:	fb17 f706 	smulbb	r7, r7, r6
 8018a26:	b280      	uxth	r0, r0
 8018a28:	1c6b      	adds	r3, r5, #1
 8018a2a:	fb02 7204 	mla	r2, r2, r4, r7
 8018a2e:	b292      	uxth	r2, r2
 8018a30:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8018a34:	1c43      	adds	r3, r0, #1
 8018a36:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8018a3a:	1c50      	adds	r0, r2, #1
 8018a3c:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8018a40:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8018a44:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8018a48:	0952      	lsrs	r2, r2, #5
 8018a4a:	432b      	orrs	r3, r5
 8018a4c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018a50:	4313      	orrs	r3, r2
 8018a52:	800b      	strh	r3, [r1, #0]
 8018a54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018a58:	4680      	mov	r8, r0
 8018a5a:	e75c      	b.n	8018916 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 8018a5c:	4684      	mov	ip, r0
 8018a5e:	4680      	mov	r8, r0
 8018a60:	e767      	b.n	8018932 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 8018a62:	4684      	mov	ip, r0
 8018a64:	e765      	b.n	8018932 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 8018a66:	4605      	mov	r5, r0
 8018a68:	e776      	b.n	8018958 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 8018a6a:	4603      	mov	r3, r0
 8018a6c:	4605      	mov	r5, r0
 8018a6e:	e782      	b.n	8018976 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 8018a70:	4603      	mov	r3, r0
 8018a72:	e780      	b.n	8018976 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

08018a74 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018a74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018a78:	b099      	sub	sp, #100	; 0x64
 8018a7a:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
 8018a7e:	9215      	str	r2, [sp, #84]	; 0x54
 8018a80:	9309      	str	r3, [sp, #36]	; 0x24
 8018a82:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8018a84:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
 8018a88:	930d      	str	r3, [sp, #52]	; 0x34
 8018a8a:	910c      	str	r1, [sp, #48]	; 0x30
 8018a8c:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 8018a90:	9016      	str	r0, [sp, #88]	; 0x58
 8018a92:	6850      	ldr	r0, [r2, #4]
 8018a94:	6812      	ldr	r2, [r2, #0]
 8018a96:	fb00 1303 	mla	r3, r0, r3, r1
 8018a9a:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 8018a9e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018aa0:	681b      	ldr	r3, [r3, #0]
 8018aa2:	930b      	str	r3, [sp, #44]	; 0x2c
 8018aa4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018aa6:	685e      	ldr	r6, [r3, #4]
 8018aa8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018aaa:	43db      	mvns	r3, r3
 8018aac:	b2db      	uxtb	r3, r3
 8018aae:	3604      	adds	r6, #4
 8018ab0:	930a      	str	r3, [sp, #40]	; 0x28
 8018ab2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8018ab4:	2b00      	cmp	r3, #0
 8018ab6:	dc03      	bgt.n	8018ac0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8018ab8:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8018aba:	2b00      	cmp	r3, #0
 8018abc:	f340 8225 	ble.w	8018f0a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 8018ac0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018ac2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8018ac6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8018aca:	1e48      	subs	r0, r1, #1
 8018acc:	1e57      	subs	r7, r2, #1
 8018ace:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018ad0:	2b00      	cmp	r3, #0
 8018ad2:	f340 80e3 	ble.w	8018c9c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8018ad6:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 8018ada:	ea4f 4325 	mov.w	r3, r5, asr #16
 8018ade:	d406      	bmi.n	8018aee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8018ae0:	4584      	cmp	ip, r0
 8018ae2:	da04      	bge.n	8018aee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8018ae4:	2b00      	cmp	r3, #0
 8018ae6:	db02      	blt.n	8018aee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8018ae8:	42bb      	cmp	r3, r7
 8018aea:	f2c0 80d8 	blt.w	8018c9e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8018aee:	f11c 0c01 	adds.w	ip, ip, #1
 8018af2:	f100 80c9 	bmi.w	8018c88 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8018af6:	4561      	cmp	r1, ip
 8018af8:	f2c0 80c6 	blt.w	8018c88 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8018afc:	3301      	adds	r3, #1
 8018afe:	f100 80c3 	bmi.w	8018c88 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8018b02:	429a      	cmp	r2, r3
 8018b04:	f2c0 80c0 	blt.w	8018c88 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8018b08:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8018b0c:	4647      	mov	r7, r8
 8018b0e:	f1bb 0f00 	cmp.w	fp, #0
 8018b12:	f340 80e3 	ble.w	8018cdc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 8018b16:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8018b18:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018b1a:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8018b1e:	689b      	ldr	r3, [r3, #8]
 8018b20:	ea5f 422a 	movs.w	r2, sl, asr #16
 8018b24:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8018b28:	f3ca 3003 	ubfx	r0, sl, #12, #4
 8018b2c:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8018b30:	f100 8121 	bmi.w	8018d76 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8018b34:	f103 39ff 	add.w	r9, r3, #4294967295
 8018b38:	454a      	cmp	r2, r9
 8018b3a:	f280 811c 	bge.w	8018d76 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8018b3e:	f1bc 0f00 	cmp.w	ip, #0
 8018b42:	f2c0 8118 	blt.w	8018d76 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8018b46:	f10e 39ff 	add.w	r9, lr, #4294967295
 8018b4a:	45cc      	cmp	ip, r9
 8018b4c:	f280 8113 	bge.w	8018d76 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8018b50:	b21b      	sxth	r3, r3
 8018b52:	fb0c 2203 	mla	r2, ip, r3, r2
 8018b56:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8018b58:	eb04 0902 	add.w	r9, r4, r2
 8018b5c:	5ca2      	ldrb	r2, [r4, r2]
 8018b5e:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 8018b62:	2800      	cmp	r0, #0
 8018b64:	f000 80fe 	beq.w	8018d64 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8018b68:	f899 2001 	ldrb.w	r2, [r9, #1]
 8018b6c:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8018b70:	9211      	str	r2, [sp, #68]	; 0x44
 8018b72:	b151      	cbz	r1, 8018b8a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8018b74:	eb09 0203 	add.w	r2, r9, r3
 8018b78:	f819 3003 	ldrb.w	r3, [r9, r3]
 8018b7c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8018b80:	930f      	str	r3, [sp, #60]	; 0x3c
 8018b82:	7853      	ldrb	r3, [r2, #1]
 8018b84:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8018b88:	9312      	str	r3, [sp, #72]	; 0x48
 8018b8a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8018b8c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8018b8e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8018b92:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8018b96:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8018b9a:	ea4c 0c03 	orr.w	ip, ip, r3
 8018b9e:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8018ba0:	041b      	lsls	r3, r3, #16
 8018ba2:	fb10 f201 	smulbb	r2, r0, r1
 8018ba6:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8018baa:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8018bae:	10d2      	asrs	r2, r2, #3
 8018bb0:	4323      	orrs	r3, r4
 8018bb2:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 8018bb6:	4353      	muls	r3, r2
 8018bb8:	fb09 330c 	mla	r3, r9, ip, r3
 8018bbc:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8018bc0:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8018bc4:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8018bc8:	ea4c 0e0e 	orr.w	lr, ip, lr
 8018bcc:	f1c1 0c10 	rsb	ip, r1, #16
 8018bd0:	ebac 0c00 	sub.w	ip, ip, r0
 8018bd4:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8018bd8:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8018bdc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8018bde:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8018be0:	0418      	lsls	r0, r3, #16
 8018be2:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8018be6:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8018bea:	4318      	orrs	r0, r3
 8018bec:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8018bf0:	fb02 c200 	mla	r2, r2, r0, ip
 8018bf4:	0d53      	lsrs	r3, r2, #21
 8018bf6:	0952      	lsrs	r2, r2, #5
 8018bf8:	8838      	ldrh	r0, [r7, #0]
 8018bfa:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018bfe:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018c02:	431a      	orrs	r2, r3
 8018c04:	b292      	uxth	r2, r2
 8018c06:	1201      	asrs	r1, r0, #8
 8018c08:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 8018c0c:	ea4f 2c22 	mov.w	ip, r2, asr #8
 8018c10:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8018c14:	fb11 f104 	smulbb	r1, r1, r4
 8018c18:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8018c1c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8018c20:	00c0      	lsls	r0, r0, #3
 8018c22:	fb0c 1c03 	mla	ip, ip, r3, r1
 8018c26:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8018c2a:	10d1      	asrs	r1, r2, #3
 8018c2c:	b2c0      	uxtb	r0, r0
 8018c2e:	00d2      	lsls	r2, r2, #3
 8018c30:	b2d2      	uxtb	r2, r2
 8018c32:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8018c36:	fb1e fe04 	smulbb	lr, lr, r4
 8018c3a:	fb10 f004 	smulbb	r0, r0, r4
 8018c3e:	fa1f fc8c 	uxth.w	ip, ip
 8018c42:	fb01 e103 	mla	r1, r1, r3, lr
 8018c46:	fb02 0303 	mla	r3, r2, r3, r0
 8018c4a:	b29a      	uxth	r2, r3
 8018c4c:	f10c 0301 	add.w	r3, ip, #1
 8018c50:	b289      	uxth	r1, r1
 8018c52:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8018c56:	1c53      	adds	r3, r2, #1
 8018c58:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8018c5c:	1c4a      	adds	r2, r1, #1
 8018c5e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8018c62:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8018c66:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8018c6a:	0949      	lsrs	r1, r1, #5
 8018c6c:	ea43 030c 	orr.w	r3, r3, ip
 8018c70:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8018c74:	430b      	orrs	r3, r1
 8018c76:	803b      	strh	r3, [r7, #0]
 8018c78:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8018c7a:	449a      	add	sl, r3
 8018c7c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8018c7e:	3702      	adds	r7, #2
 8018c80:	441d      	add	r5, r3
 8018c82:	f10b 3bff 	add.w	fp, fp, #4294967295
 8018c86:	e742      	b.n	8018b0e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8018c88:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8018c8a:	449a      	add	sl, r3
 8018c8c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8018c8e:	441d      	add	r5, r3
 8018c90:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018c92:	3b01      	subs	r3, #1
 8018c94:	9309      	str	r3, [sp, #36]	; 0x24
 8018c96:	f108 0802 	add.w	r8, r8, #2
 8018c9a:	e718      	b.n	8018ace <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8018c9c:	d023      	beq.n	8018ce6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 8018c9e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018ca0:	9825      	ldr	r0, [sp, #148]	; 0x94
 8018ca2:	3b01      	subs	r3, #1
 8018ca4:	fb00 a003 	mla	r0, r0, r3, sl
 8018ca8:	1400      	asrs	r0, r0, #16
 8018caa:	f53f af2d 	bmi.w	8018b08 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8018cae:	3901      	subs	r1, #1
 8018cb0:	4288      	cmp	r0, r1
 8018cb2:	f6bf af29 	bge.w	8018b08 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8018cb6:	9926      	ldr	r1, [sp, #152]	; 0x98
 8018cb8:	fb01 5303 	mla	r3, r1, r3, r5
 8018cbc:	141b      	asrs	r3, r3, #16
 8018cbe:	f53f af23 	bmi.w	8018b08 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8018cc2:	3a01      	subs	r2, #1
 8018cc4:	4293      	cmp	r3, r2
 8018cc6:	f6bf af1f 	bge.w	8018b08 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8018cca:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8018cce:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 8018cd2:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 8018cd6:	f1be 0f00 	cmp.w	lr, #0
 8018cda:	dc6c      	bgt.n	8018db6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 8018cdc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018cde:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8018ce2:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8018ce6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8018ce8:	2b00      	cmp	r3, #0
 8018cea:	f340 810e 	ble.w	8018f0a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 8018cee:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018cf2:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018cf6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8018cfa:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8018cfc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018d00:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018d04:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018d08:	eef0 6a62 	vmov.f32	s13, s5
 8018d0c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018d10:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018d14:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018d18:	ee16 aa90 	vmov	sl, s13
 8018d1c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018d20:	eef0 6a43 	vmov.f32	s13, s6
 8018d24:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018d28:	ee12 2a90 	vmov	r2, s5
 8018d2c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018d30:	fb92 f3f3 	sdiv	r3, r2, r3
 8018d34:	ee13 2a10 	vmov	r2, s6
 8018d38:	9325      	str	r3, [sp, #148]	; 0x94
 8018d3a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8018d3c:	fb92 f3f3 	sdiv	r3, r2, r3
 8018d40:	9326      	str	r3, [sp, #152]	; 0x98
 8018d42:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8018d44:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8018d46:	3b01      	subs	r3, #1
 8018d48:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018d4c:	930c      	str	r3, [sp, #48]	; 0x30
 8018d4e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8018d50:	bf08      	it	eq
 8018d52:	4613      	moveq	r3, r2
 8018d54:	ee16 5a90 	vmov	r5, s13
 8018d58:	9309      	str	r3, [sp, #36]	; 0x24
 8018d5a:	eeb0 3a67 	vmov.f32	s6, s15
 8018d5e:	eef0 2a47 	vmov.f32	s5, s14
 8018d62:	e6a6      	b.n	8018ab2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8018d64:	2900      	cmp	r1, #0
 8018d66:	f43f af10 	beq.w	8018b8a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8018d6a:	f819 3003 	ldrb.w	r3, [r9, r3]
 8018d6e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8018d72:	930f      	str	r3, [sp, #60]	; 0x3c
 8018d74:	e709      	b.n	8018b8a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8018d76:	f112 0901 	adds.w	r9, r2, #1
 8018d7a:	f53f af7d 	bmi.w	8018c78 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8018d7e:	454b      	cmp	r3, r9
 8018d80:	f6ff af7a 	blt.w	8018c78 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8018d84:	f11c 0901 	adds.w	r9, ip, #1
 8018d88:	f53f af76 	bmi.w	8018c78 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8018d8c:	45ce      	cmp	lr, r9
 8018d8e:	f6ff af73 	blt.w	8018c78 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8018d92:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8018d94:	9202      	str	r2, [sp, #8]
 8018d96:	b21b      	sxth	r3, r3
 8018d98:	fa0f f28e 	sxth.w	r2, lr
 8018d9c:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8018da0:	e9cd c003 	strd	ip, r0, [sp, #12]
 8018da4:	9201      	str	r2, [sp, #4]
 8018da6:	9300      	str	r3, [sp, #0]
 8018da8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8018daa:	9816      	ldr	r0, [sp, #88]	; 0x58
 8018dac:	4633      	mov	r3, r6
 8018dae:	4639      	mov	r1, r7
 8018db0:	f7ff fd8e 	bl	80188d0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 8018db4:	e760      	b.n	8018c78 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8018db6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018db8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8018dba:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8018dbe:	ea4f 422a 	mov.w	r2, sl, asr #16
 8018dc2:	1429      	asrs	r1, r5, #16
 8018dc4:	fb03 2101 	mla	r1, r3, r1, r2
 8018dc8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8018dca:	440a      	add	r2, r1
 8018dcc:	5c61      	ldrb	r1, [r4, r1]
 8018dce:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 8018dd2:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8018dd6:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 8018dda:	f1bc 0f00 	cmp.w	ip, #0
 8018dde:	f000 808c 	beq.w	8018efa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 8018de2:	7857      	ldrb	r7, [r2, #1]
 8018de4:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 8018de8:	9413      	str	r4, [sp, #76]	; 0x4c
 8018dea:	b140      	cbz	r0, 8018dfe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8018dec:	18d7      	adds	r7, r2, r3
 8018dee:	5cd3      	ldrb	r3, [r2, r3]
 8018df0:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8018df4:	9310      	str	r3, [sp, #64]	; 0x40
 8018df6:	787b      	ldrb	r3, [r7, #1]
 8018df8:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8018dfc:	9314      	str	r3, [sp, #80]	; 0x50
 8018dfe:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8018e00:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8018e02:	fb1c f200 	smulbb	r2, ip, r0
 8018e06:	041f      	lsls	r7, r3, #16
 8018e08:	10d2      	asrs	r2, r2, #3
 8018e0a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8018e0e:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 8018e12:	431f      	orrs	r7, r3
 8018e14:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 8018e18:	9317      	str	r3, [sp, #92]	; 0x5c
 8018e1a:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8018e1c:	041b      	lsls	r3, r3, #16
 8018e1e:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 8018e22:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8018e26:	ea43 030b 	orr.w	r3, r3, fp
 8018e2a:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8018e2c:	4353      	muls	r3, r2
 8018e2e:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8018e32:	fb04 3707 	mla	r7, r4, r7, r3
 8018e36:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8018e3a:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8018e3e:	ea43 0b01 	orr.w	fp, r3, r1
 8018e42:	f1c0 0110 	rsb	r1, r0, #16
 8018e46:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018e48:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8018e4a:	eba1 0c0c 	sub.w	ip, r1, ip
 8018e4e:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8018e52:	fb0c 770b 	mla	r7, ip, fp, r7
 8018e56:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8018e5a:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 8018e5e:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8018e62:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8018e66:	ea4c 0c0b 	orr.w	ip, ip, fp
 8018e6a:	fb02 770c 	mla	r7, r2, ip, r7
 8018e6e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8018e70:	0d79      	lsrs	r1, r7, #21
 8018e72:	097f      	lsrs	r7, r7, #5
 8018e74:	8812      	ldrh	r2, [r2, #0]
 8018e76:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8018e7a:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8018e7e:	430f      	orrs	r7, r1
 8018e80:	b2bb      	uxth	r3, r7
 8018e82:	1211      	asrs	r1, r2, #8
 8018e84:	1218      	asrs	r0, r3, #8
 8018e86:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8018e8a:	fb11 f104 	smulbb	r1, r1, r4
 8018e8e:	10d7      	asrs	r7, r2, #3
 8018e90:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8018e94:	00d2      	lsls	r2, r2, #3
 8018e96:	fb00 1009 	mla	r0, r0, r9, r1
 8018e9a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8018e9e:	10d9      	asrs	r1, r3, #3
 8018ea0:	b2d2      	uxtb	r2, r2
 8018ea2:	00db      	lsls	r3, r3, #3
 8018ea4:	fb17 f704 	smulbb	r7, r7, r4
 8018ea8:	fb12 f204 	smulbb	r2, r2, r4
 8018eac:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8018eb0:	b2db      	uxtb	r3, r3
 8018eb2:	b280      	uxth	r0, r0
 8018eb4:	fb01 7109 	mla	r1, r1, r9, r7
 8018eb8:	fb03 2309 	mla	r3, r3, r9, r2
 8018ebc:	b29b      	uxth	r3, r3
 8018ebe:	b289      	uxth	r1, r1
 8018ec0:	1c42      	adds	r2, r0, #1
 8018ec2:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8018ec6:	1c4f      	adds	r7, r1, #1
 8018ec8:	1c5a      	adds	r2, r3, #1
 8018eca:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8018ece:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8018ed2:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8018ed6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8018eda:	0949      	lsrs	r1, r1, #5
 8018edc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018ede:	4310      	orrs	r0, r2
 8018ee0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8018ee4:	4308      	orrs	r0, r1
 8018ee6:	f823 0b02 	strh.w	r0, [r3], #2
 8018eea:	930e      	str	r3, [sp, #56]	; 0x38
 8018eec:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8018eee:	449a      	add	sl, r3
 8018ef0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8018ef2:	f10e 3eff 	add.w	lr, lr, #4294967295
 8018ef6:	441d      	add	r5, r3
 8018ef8:	e6ed      	b.n	8018cd6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 8018efa:	2800      	cmp	r0, #0
 8018efc:	f43f af7f 	beq.w	8018dfe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8018f00:	5cd3      	ldrb	r3, [r2, r3]
 8018f02:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8018f06:	9310      	str	r3, [sp, #64]	; 0x40
 8018f08:	e779      	b.n	8018dfe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8018f0a:	b019      	add	sp, #100	; 0x64
 8018f0c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018f10 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8018f10:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8018f14:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
 8018f18:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 8018f1c:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 8018f20:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 8018f24:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 8018f28:	8808      	ldrh	r0, [r1, #0]
 8018f2a:	fb08 470e 	mla	r7, r8, lr, r4
 8018f2e:	f1b8 0f00 	cmp.w	r8, #0
 8018f32:	eb02 0907 	add.w	r9, r2, r7
 8018f36:	db67      	blt.n	8019008 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8018f38:	45c2      	cmp	sl, r8
 8018f3a:	dd65      	ble.n	8019008 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8018f3c:	2c00      	cmp	r4, #0
 8018f3e:	db61      	blt.n	8019004 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8018f40:	45a6      	cmp	lr, r4
 8018f42:	dd5f      	ble.n	8019004 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8018f44:	5dd2      	ldrb	r2, [r2, r7]
 8018f46:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 8018f4a:	1c62      	adds	r2, r4, #1
 8018f4c:	d45f      	bmi.n	801900e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8018f4e:	4596      	cmp	lr, r2
 8018f50:	dd5d      	ble.n	801900e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8018f52:	2d00      	cmp	r5, #0
 8018f54:	d05b      	beq.n	801900e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8018f56:	f899 2001 	ldrb.w	r2, [r9, #1]
 8018f5a:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8018f5e:	f118 0801 	adds.w	r8, r8, #1
 8018f62:	d458      	bmi.n	8019016 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8018f64:	45c2      	cmp	sl, r8
 8018f66:	dd56      	ble.n	8019016 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8018f68:	2e00      	cmp	r6, #0
 8018f6a:	d054      	beq.n	8019016 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8018f6c:	2c00      	cmp	r4, #0
 8018f6e:	db50      	blt.n	8019012 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8018f70:	45a6      	cmp	lr, r4
 8018f72:	dd4e      	ble.n	8019012 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8018f74:	f819 200e 	ldrb.w	r2, [r9, lr]
 8018f78:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8018f7c:	3401      	adds	r4, #1
 8018f7e:	d407      	bmi.n	8018f90 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8018f80:	45a6      	cmp	lr, r4
 8018f82:	dd05      	ble.n	8018f90 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8018f84:	b125      	cbz	r5, 8018f90 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8018f86:	44ce      	add	lr, r9
 8018f88:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8018f8c:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8018f90:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8018f94:	fb15 f406 	smulbb	r4, r5, r6
 8018f98:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8018f9c:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8018fa0:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8018fa4:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8018fa8:	ea43 0c0c 	orr.w	ip, r3, ip
 8018fac:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8018fb0:	f1c6 0310 	rsb	r3, r6, #16
 8018fb4:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8018fb8:	1b5b      	subs	r3, r3, r5
 8018fba:	ea4e 0707 	orr.w	r7, lr, r7
 8018fbe:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8018fc2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8018fc6:	437d      	muls	r5, r7
 8018fc8:	fb03 5c0c 	mla	ip, r3, ip, r5
 8018fcc:	0403      	lsls	r3, r0, #16
 8018fce:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8018fd2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8018fd6:	4318      	orrs	r0, r3
 8018fd8:	0413      	lsls	r3, r2, #16
 8018fda:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8018fde:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018fe2:	4313      	orrs	r3, r2
 8018fe4:	fb04 c000 	mla	r0, r4, r0, ip
 8018fe8:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8018fec:	fb06 0003 	mla	r0, r6, r3, r0
 8018ff0:	0d43      	lsrs	r3, r0, #21
 8018ff2:	0940      	lsrs	r0, r0, #5
 8018ff4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018ff8:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8018ffc:	4318      	orrs	r0, r3
 8018ffe:	8008      	strh	r0, [r1, #0]
 8019000:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8019004:	4684      	mov	ip, r0
 8019006:	e7a0      	b.n	8018f4a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 8019008:	4607      	mov	r7, r0
 801900a:	4684      	mov	ip, r0
 801900c:	e7a7      	b.n	8018f5e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801900e:	4607      	mov	r7, r0
 8019010:	e7a5      	b.n	8018f5e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 8019012:	4602      	mov	r2, r0
 8019014:	e7b2      	b.n	8018f7c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 8019016:	4602      	mov	r2, r0
 8019018:	e7ba      	b.n	8018f90 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

0801901a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801901a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801901e:	b093      	sub	sp, #76	; 0x4c
 8019020:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8019024:	920f      	str	r2, [sp, #60]	; 0x3c
 8019026:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8019028:	9108      	str	r1, [sp, #32]
 801902a:	9306      	str	r3, [sp, #24]
 801902c:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8019030:	9010      	str	r0, [sp, #64]	; 0x40
 8019032:	6850      	ldr	r0, [r2, #4]
 8019034:	6812      	ldr	r2, [r2, #0]
 8019036:	fb00 1303 	mla	r3, r0, r3, r1
 801903a:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801903e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019040:	681b      	ldr	r3, [r3, #0]
 8019042:	9307      	str	r3, [sp, #28]
 8019044:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019046:	685f      	ldr	r7, [r3, #4]
 8019048:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801904c:	3704      	adds	r7, #4
 801904e:	9b08      	ldr	r3, [sp, #32]
 8019050:	2b00      	cmp	r3, #0
 8019052:	dc03      	bgt.n	801905c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8019054:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019056:	2b00      	cmp	r3, #0
 8019058:	f340 81b2 	ble.w	80193c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801905c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801905e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019062:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8019066:	1e48      	subs	r0, r1, #1
 8019068:	f102 3cff 	add.w	ip, r2, #4294967295
 801906c:	9b06      	ldr	r3, [sp, #24]
 801906e:	2b00      	cmp	r3, #0
 8019070:	f340 80a9 	ble.w	80191c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 8019074:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8019078:	ea4f 4326 	mov.w	r3, r6, asr #16
 801907c:	d406      	bmi.n	801908c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801907e:	4586      	cmp	lr, r0
 8019080:	da04      	bge.n	801908c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019082:	2b00      	cmp	r3, #0
 8019084:	db02      	blt.n	801908c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019086:	4563      	cmp	r3, ip
 8019088:	f2c0 809e 	blt.w	80191c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801908c:	f11e 0e01 	adds.w	lr, lr, #1
 8019090:	f100 808f 	bmi.w	80191b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019094:	4571      	cmp	r1, lr
 8019096:	f2c0 808c 	blt.w	80191b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801909a:	3301      	adds	r3, #1
 801909c:	f100 8089 	bmi.w	80191b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80190a0:	429a      	cmp	r2, r3
 80190a2:	f2c0 8086 	blt.w	80191b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80190a6:	f8dd b018 	ldr.w	fp, [sp, #24]
 80190aa:	46c8      	mov	r8, r9
 80190ac:	f1bb 0f00 	cmp.w	fp, #0
 80190b0:	f340 80a6 	ble.w	8019200 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 80190b4:	9a24      	ldr	r2, [sp, #144]	; 0x90
 80190b6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80190b8:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 80190bc:	689b      	ldr	r3, [r3, #8]
 80190be:	1422      	asrs	r2, r4, #16
 80190c0:	ea4f 4c26 	mov.w	ip, r6, asr #16
 80190c4:	f3c4 3003 	ubfx	r0, r4, #12, #4
 80190c8:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80190cc:	f100 80e3 	bmi.w	8019296 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 80190d0:	f103 3aff 	add.w	sl, r3, #4294967295
 80190d4:	4552      	cmp	r2, sl
 80190d6:	f280 80de 	bge.w	8019296 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 80190da:	f1bc 0f00 	cmp.w	ip, #0
 80190de:	f2c0 80da 	blt.w	8019296 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 80190e2:	f10e 3aff 	add.w	sl, lr, #4294967295
 80190e6:	45d4      	cmp	ip, sl
 80190e8:	f280 80d5 	bge.w	8019296 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 80190ec:	b21b      	sxth	r3, r3
 80190ee:	fb0c 2203 	mla	r2, ip, r3, r2
 80190f2:	9d07      	ldr	r5, [sp, #28]
 80190f4:	eb05 0a02 	add.w	sl, r5, r2
 80190f8:	5caa      	ldrb	r2, [r5, r2]
 80190fa:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 80190fe:	2800      	cmp	r0, #0
 8019100:	f000 80c0 	beq.w	8019284 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 8019104:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8019108:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 801910c:	920b      	str	r2, [sp, #44]	; 0x2c
 801910e:	b151      	cbz	r1, 8019126 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8019110:	eb0a 0203 	add.w	r2, sl, r3
 8019114:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8019118:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801911c:	9309      	str	r3, [sp, #36]	; 0x24
 801911e:	7853      	ldrb	r3, [r2, #1]
 8019120:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8019124:	930c      	str	r3, [sp, #48]	; 0x30
 8019126:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019128:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801912a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801912e:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8019132:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8019136:	ea4c 0c03 	orr.w	ip, ip, r3
 801913a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801913c:	041b      	lsls	r3, r3, #16
 801913e:	fb10 f201 	smulbb	r2, r0, r1
 8019142:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8019146:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801914a:	10d2      	asrs	r2, r2, #3
 801914c:	432b      	orrs	r3, r5
 801914e:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 8019152:	4353      	muls	r3, r2
 8019154:	fb0a 330c 	mla	r3, sl, ip, r3
 8019158:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801915c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8019160:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8019164:	ea4c 0e0e 	orr.w	lr, ip, lr
 8019168:	f1c1 0c10 	rsb	ip, r1, #16
 801916c:	ebac 0c00 	sub.w	ip, ip, r0
 8019170:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8019174:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8019178:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801917a:	0418      	lsls	r0, r3, #16
 801917c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8019180:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8019184:	4318      	orrs	r0, r3
 8019186:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801918a:	fb02 c200 	mla	r2, r2, r0, ip
 801918e:	0d53      	lsrs	r3, r2, #21
 8019190:	0952      	lsrs	r2, r2, #5
 8019192:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019196:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801919a:	431a      	orrs	r2, r3
 801919c:	f8a8 2000 	strh.w	r2, [r8]
 80191a0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80191a2:	441c      	add	r4, r3
 80191a4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80191a6:	f108 0802 	add.w	r8, r8, #2
 80191aa:	441e      	add	r6, r3
 80191ac:	f10b 3bff 	add.w	fp, fp, #4294967295
 80191b0:	e77c      	b.n	80190ac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80191b2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80191b4:	441c      	add	r4, r3
 80191b6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80191b8:	441e      	add	r6, r3
 80191ba:	9b06      	ldr	r3, [sp, #24]
 80191bc:	3b01      	subs	r3, #1
 80191be:	9306      	str	r3, [sp, #24]
 80191c0:	f109 0902 	add.w	r9, r9, #2
 80191c4:	e752      	b.n	801906c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80191c6:	d020      	beq.n	801920a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80191c8:	9b06      	ldr	r3, [sp, #24]
 80191ca:	981f      	ldr	r0, [sp, #124]	; 0x7c
 80191cc:	3b01      	subs	r3, #1
 80191ce:	fb00 4003 	mla	r0, r0, r3, r4
 80191d2:	1400      	asrs	r0, r0, #16
 80191d4:	f53f af67 	bmi.w	80190a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80191d8:	3901      	subs	r1, #1
 80191da:	4288      	cmp	r0, r1
 80191dc:	f6bf af63 	bge.w	80190a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80191e0:	9920      	ldr	r1, [sp, #128]	; 0x80
 80191e2:	fb01 6303 	mla	r3, r1, r3, r6
 80191e6:	141b      	asrs	r3, r3, #16
 80191e8:	f53f af5d 	bmi.w	80190a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80191ec:	3a01      	subs	r2, #1
 80191ee:	4293      	cmp	r3, r2
 80191f0:	f6bf af59 	bge.w	80190a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80191f4:	f8dd 8018 	ldr.w	r8, [sp, #24]
 80191f8:	46ca      	mov	sl, r9
 80191fa:	f1b8 0f00 	cmp.w	r8, #0
 80191fe:	dc67      	bgt.n	80192d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8019200:	9b06      	ldr	r3, [sp, #24]
 8019202:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8019206:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801920a:	9b08      	ldr	r3, [sp, #32]
 801920c:	2b00      	cmp	r3, #0
 801920e:	f340 80d7 	ble.w	80193c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8019212:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019216:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801921a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801921e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8019220:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019224:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019228:	eeb0 6a62 	vmov.f32	s12, s5
 801922c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019230:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019234:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019238:	ee16 4a10 	vmov	r4, s12
 801923c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019240:	eeb0 6a43 	vmov.f32	s12, s6
 8019244:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019248:	ee12 2a90 	vmov	r2, s5
 801924c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019250:	fb92 f3f3 	sdiv	r3, r2, r3
 8019254:	ee13 2a10 	vmov	r2, s6
 8019258:	931f      	str	r3, [sp, #124]	; 0x7c
 801925a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801925c:	fb92 f3f3 	sdiv	r3, r2, r3
 8019260:	9320      	str	r3, [sp, #128]	; 0x80
 8019262:	9b08      	ldr	r3, [sp, #32]
 8019264:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019266:	3b01      	subs	r3, #1
 8019268:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801926c:	9308      	str	r3, [sp, #32]
 801926e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8019270:	bf08      	it	eq
 8019272:	4613      	moveq	r3, r2
 8019274:	ee16 6a10 	vmov	r6, s12
 8019278:	9306      	str	r3, [sp, #24]
 801927a:	eeb0 3a67 	vmov.f32	s6, s15
 801927e:	eef0 2a47 	vmov.f32	s5, s14
 8019282:	e6e4      	b.n	801904e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8019284:	2900      	cmp	r1, #0
 8019286:	f43f af4e 	beq.w	8019126 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801928a:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801928e:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8019292:	9309      	str	r3, [sp, #36]	; 0x24
 8019294:	e747      	b.n	8019126 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8019296:	f112 0a01 	adds.w	sl, r2, #1
 801929a:	d481      	bmi.n	80191a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801929c:	4553      	cmp	r3, sl
 801929e:	f6ff af7f 	blt.w	80191a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80192a2:	f11c 0a01 	adds.w	sl, ip, #1
 80192a6:	f53f af7b 	bmi.w	80191a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80192aa:	45d6      	cmp	lr, sl
 80192ac:	f6ff af78 	blt.w	80191a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80192b0:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 80192b4:	b21b      	sxth	r3, r3
 80192b6:	fa0f f28e 	sxth.w	r2, lr
 80192ba:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80192be:	9201      	str	r2, [sp, #4]
 80192c0:	9300      	str	r3, [sp, #0]
 80192c2:	9a07      	ldr	r2, [sp, #28]
 80192c4:	9810      	ldr	r0, [sp, #64]	; 0x40
 80192c6:	463b      	mov	r3, r7
 80192c8:	4641      	mov	r1, r8
 80192ca:	f7ff fe21 	bl	8018f10 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 80192ce:	e767      	b.n	80191a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80192d0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80192d2:	9d07      	ldr	r5, [sp, #28]
 80192d4:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80192d8:	1422      	asrs	r2, r4, #16
 80192da:	1431      	asrs	r1, r6, #16
 80192dc:	fb03 2101 	mla	r1, r3, r1, r2
 80192e0:	9a07      	ldr	r2, [sp, #28]
 80192e2:	440a      	add	r2, r1
 80192e4:	5c69      	ldrb	r1, [r5, r1]
 80192e6:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 80192ea:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80192ee:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 80192f2:	f1be 0f00 	cmp.w	lr, #0
 80192f6:	d05c      	beq.n	80193b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 80192f8:	f892 c001 	ldrb.w	ip, [r2, #1]
 80192fc:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 8019300:	950d      	str	r5, [sp, #52]	; 0x34
 8019302:	b150      	cbz	r0, 801931a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8019304:	eb02 0c03 	add.w	ip, r2, r3
 8019308:	5cd3      	ldrb	r3, [r2, r3]
 801930a:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801930e:	930a      	str	r3, [sp, #40]	; 0x28
 8019310:	f89c 3001 	ldrb.w	r3, [ip, #1]
 8019314:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8019318:	930e      	str	r3, [sp, #56]	; 0x38
 801931a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801931c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801931e:	fb1e f200 	smulbb	r2, lr, r0
 8019322:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8019326:	10d2      	asrs	r2, r2, #3
 8019328:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801932c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8019330:	ea4c 0c03 	orr.w	ip, ip, r3
 8019334:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 8019338:	9311      	str	r3, [sp, #68]	; 0x44
 801933a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801933c:	041b      	lsls	r3, r3, #16
 801933e:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 8019342:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8019346:	ea43 030b 	orr.w	r3, r3, fp
 801934a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801934c:	4353      	muls	r3, r2
 801934e:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8019352:	fb05 3c0c 	mla	ip, r5, ip, r3
 8019356:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801935a:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801935e:	ea43 0b01 	orr.w	fp, r3, r1
 8019362:	f1c0 0110 	rsb	r1, r0, #16
 8019366:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019368:	eba1 0e0e 	sub.w	lr, r1, lr
 801936c:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8019370:	fb0e cc0b 	mla	ip, lr, fp, ip
 8019374:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8019378:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 801937c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8019380:	ea4b 0e0e 	orr.w	lr, fp, lr
 8019384:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8019388:	fb02 cc0e 	mla	ip, r2, lr, ip
 801938c:	ea4f 535c 	mov.w	r3, ip, lsr #21
 8019390:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8019394:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019398:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801939c:	ea43 0c0c 	orr.w	ip, r3, ip
 80193a0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80193a2:	f82a cb02 	strh.w	ip, [sl], #2
 80193a6:	441c      	add	r4, r3
 80193a8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80193aa:	f108 38ff 	add.w	r8, r8, #4294967295
 80193ae:	441e      	add	r6, r3
 80193b0:	e723      	b.n	80191fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 80193b2:	2800      	cmp	r0, #0
 80193b4:	d0b1      	beq.n	801931a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 80193b6:	5cd3      	ldrb	r3, [r2, r3]
 80193b8:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80193bc:	930a      	str	r3, [sp, #40]	; 0x28
 80193be:	e7ac      	b.n	801931a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 80193c0:	b013      	add	sp, #76	; 0x4c
 80193c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080193c6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 80193c6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80193ca:	880d      	ldrh	r5, [r1, #0]
 80193cc:	b087      	sub	sp, #28
 80193ce:	10ef      	asrs	r7, r5, #3
 80193d0:	ea4f 2a25 	mov.w	sl, r5, asr #8
 80193d4:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80193d8:	00ed      	lsls	r5, r5, #3
 80193da:	9701      	str	r7, [sp, #4]
 80193dc:	b2ed      	uxtb	r5, r5
 80193de:	9502      	str	r5, [sp, #8]
 80193e0:	9d01      	ldr	r5, [sp, #4]
 80193e2:	9103      	str	r1, [sp, #12]
 80193e4:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 80193e8:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
 80193ec:	9902      	ldr	r1, [sp, #8]
 80193ee:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 80193f2:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 80193f6:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
 80193fa:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
 80193fe:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
 8019402:	022d      	lsls	r5, r5, #8
 8019404:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 8019408:	fb06 0709 	mla	r7, r6, r9, r0
 801940c:	430d      	orrs	r5, r1
 801940e:	2e00      	cmp	r6, #0
 8019410:	eb02 0c07 	add.w	ip, r2, r7
 8019414:	9505      	str	r5, [sp, #20]
 8019416:	f2c0 80b6 	blt.w	8019586 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801941a:	45b3      	cmp	fp, r6
 801941c:	f340 80b3 	ble.w	8019586 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 8019420:	2800      	cmp	r0, #0
 8019422:	f2c0 80ae 	blt.w	8019582 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8019426:	4581      	cmp	r9, r0
 8019428:	f340 80ab 	ble.w	8019582 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801942c:	5dd7      	ldrb	r7, [r2, r7]
 801942e:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8019432:	441f      	add	r7, r3
 8019434:	1c42      	adds	r2, r0, #1
 8019436:	f100 80a9 	bmi.w	801958c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801943a:	4591      	cmp	r9, r2
 801943c:	f340 80a6 	ble.w	801958c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8019440:	2c00      	cmp	r4, #0
 8019442:	f000 80a3 	beq.w	801958c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8019446:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801944a:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801944e:	441d      	add	r5, r3
 8019450:	3601      	adds	r6, #1
 8019452:	f100 809f 	bmi.w	8019594 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8019456:	45b3      	cmp	fp, r6
 8019458:	f340 809c 	ble.w	8019594 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801945c:	f1be 0f00 	cmp.w	lr, #0
 8019460:	f000 8098 	beq.w	8019594 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8019464:	2800      	cmp	r0, #0
 8019466:	f2c0 8093 	blt.w	8019590 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801946a:	4581      	cmp	r9, r0
 801946c:	f340 8090 	ble.w	8019590 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8019470:	f81c 6009 	ldrb.w	r6, [ip, r9]
 8019474:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8019478:	441e      	add	r6, r3
 801947a:	3001      	adds	r0, #1
 801947c:	f100 808d 	bmi.w	801959a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8019480:	4581      	cmp	r9, r0
 8019482:	f340 808a 	ble.w	801959a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8019486:	2c00      	cmp	r4, #0
 8019488:	f000 8087 	beq.w	801959a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801948c:	44e1      	add	r9, ip
 801948e:	f899 2001 	ldrb.w	r2, [r9, #1]
 8019492:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8019496:	4413      	add	r3, r2
 8019498:	b2a4      	uxth	r4, r4
 801949a:	fa1f fe8e 	uxth.w	lr, lr
 801949e:	fb04 fb0e 	mul.w	fp, r4, lr
 80194a2:	0124      	lsls	r4, r4, #4
 80194a4:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 80194a8:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
 80194ac:	eba4 040b 	sub.w	r4, r4, fp
 80194b0:	fa1f f08e 	uxth.w	r0, lr
 80194b4:	b2a2      	uxth	r2, r4
 80194b6:	78ac      	ldrb	r4, [r5, #2]
 80194b8:	f897 c002 	ldrb.w	ip, [r7, #2]
 80194bc:	9901      	ldr	r1, [sp, #4]
 80194be:	eba9 0900 	sub.w	r9, r9, r0
 80194c2:	fa1f f989 	uxth.w	r9, r9
 80194c6:	4354      	muls	r4, r2
 80194c8:	fb09 440c 	mla	r4, r9, ip, r4
 80194cc:	f896 c002 	ldrb.w	ip, [r6, #2]
 80194d0:	fb00 440c 	mla	r4, r0, ip, r4
 80194d4:	f893 c002 	ldrb.w	ip, [r3, #2]
 80194d8:	fa1f fe88 	uxth.w	lr, r8
 80194dc:	ea6f 0808 	mvn.w	r8, r8
 80194e0:	fa5f f888 	uxtb.w	r8, r8
 80194e4:	fb0b 4c0c 	mla	ip, fp, ip, r4
 80194e8:	fb1a fa08 	smulbb	sl, sl, r8
 80194ec:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 80194f0:	fb0c ac0e 	mla	ip, ip, lr, sl
 80194f4:	f895 a001 	ldrb.w	sl, [r5, #1]
 80194f8:	787c      	ldrb	r4, [r7, #1]
 80194fa:	782d      	ldrb	r5, [r5, #0]
 80194fc:	783f      	ldrb	r7, [r7, #0]
 80194fe:	fb02 fa0a 	mul.w	sl, r2, sl
 8019502:	fb09 aa04 	mla	sl, r9, r4, sl
 8019506:	7874      	ldrb	r4, [r6, #1]
 8019508:	436a      	muls	r2, r5
 801950a:	7835      	ldrb	r5, [r6, #0]
 801950c:	fb00 aa04 	mla	sl, r0, r4, sl
 8019510:	fb09 2207 	mla	r2, r9, r7, r2
 8019514:	785c      	ldrb	r4, [r3, #1]
 8019516:	781b      	ldrb	r3, [r3, #0]
 8019518:	fb00 2005 	mla	r0, r0, r5, r2
 801951c:	fb0b a404 	mla	r4, fp, r4, sl
 8019520:	fb0b 0b03 	mla	fp, fp, r3, r0
 8019524:	9b02      	ldr	r3, [sp, #8]
 8019526:	fb11 fa08 	smulbb	sl, r1, r8
 801952a:	fa1f fc8c 	uxth.w	ip, ip
 801952e:	fb13 f808 	smulbb	r8, r3, r8
 8019532:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 8019536:	f3c4 2407 	ubfx	r4, r4, #8, #8
 801953a:	fb04 a40e 	mla	r4, r4, lr, sl
 801953e:	f10c 0301 	add.w	r3, ip, #1
 8019542:	fb0b 8e0e 	mla	lr, fp, lr, r8
 8019546:	fa1f fe8e 	uxth.w	lr, lr
 801954a:	b2a4      	uxth	r4, r4
 801954c:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8019550:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
 8019554:	f104 0a01 	add.w	sl, r4, #1
 8019558:	f10e 0c01 	add.w	ip, lr, #1
 801955c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8019560:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8019564:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8019568:	0964      	lsrs	r4, r4, #5
 801956a:	ea4c 0c03 	orr.w	ip, ip, r3
 801956e:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8019572:	9b03      	ldr	r3, [sp, #12]
 8019574:	ea4c 0c04 	orr.w	ip, ip, r4
 8019578:	f8a3 c000 	strh.w	ip, [r3]
 801957c:	b007      	add	sp, #28
 801957e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019582:	af05      	add	r7, sp, #20
 8019584:	e756      	b.n	8019434 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 8019586:	ad05      	add	r5, sp, #20
 8019588:	462f      	mov	r7, r5
 801958a:	e761      	b.n	8019450 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801958c:	ad05      	add	r5, sp, #20
 801958e:	e75f      	b.n	8019450 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 8019590:	ae05      	add	r6, sp, #20
 8019592:	e772      	b.n	801947a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 8019594:	ab05      	add	r3, sp, #20
 8019596:	461e      	mov	r6, r3
 8019598:	e77e      	b.n	8019498 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 801959a:	ab05      	add	r3, sp, #20
 801959c:	e77c      	b.n	8019498 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

0801959e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801959e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80195a2:	b095      	sub	sp, #84	; 0x54
 80195a4:	9212      	str	r2, [sp, #72]	; 0x48
 80195a6:	9309      	str	r3, [sp, #36]	; 0x24
 80195a8:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 80195aa:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 80195ae:	930f      	str	r3, [sp, #60]	; 0x3c
 80195b0:	910e      	str	r1, [sp, #56]	; 0x38
 80195b2:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
 80195b6:	9013      	str	r0, [sp, #76]	; 0x4c
 80195b8:	6850      	ldr	r0, [r2, #4]
 80195ba:	6812      	ldr	r2, [r2, #0]
 80195bc:	fb00 1303 	mla	r3, r0, r3, r1
 80195c0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80195c4:	930a      	str	r3, [sp, #40]	; 0x28
 80195c6:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80195c8:	681b      	ldr	r3, [r3, #0]
 80195ca:	930d      	str	r3, [sp, #52]	; 0x34
 80195cc:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80195ce:	685c      	ldr	r4, [r3, #4]
 80195d0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80195d2:	43db      	mvns	r3, r3
 80195d4:	b2db      	uxtb	r3, r3
 80195d6:	3404      	adds	r4, #4
 80195d8:	930b      	str	r3, [sp, #44]	; 0x2c
 80195da:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80195dc:	2b00      	cmp	r3, #0
 80195de:	dc03      	bgt.n	80195e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80195e0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80195e2:	2b00      	cmp	r3, #0
 80195e4:	f340 8255 	ble.w	8019a92 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 80195e8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80195ea:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80195ee:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80195f2:	1e48      	subs	r0, r1, #1
 80195f4:	1e55      	subs	r5, r2, #1
 80195f6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80195f8:	2b00      	cmp	r3, #0
 80195fa:	f340 80f9 	ble.w	80197f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 80195fe:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 8019600:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019602:	1436      	asrs	r6, r6, #16
 8019604:	ea4f 4323 	mov.w	r3, r3, asr #16
 8019608:	d406      	bmi.n	8019618 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801960a:	4286      	cmp	r6, r0
 801960c:	da04      	bge.n	8019618 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801960e:	2b00      	cmp	r3, #0
 8019610:	db02      	blt.n	8019618 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019612:	42ab      	cmp	r3, r5
 8019614:	f2c0 80ed 	blt.w	80197f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 8019618:	3601      	adds	r6, #1
 801961a:	f100 80da 	bmi.w	80197d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801961e:	42b1      	cmp	r1, r6
 8019620:	f2c0 80d7 	blt.w	80197d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8019624:	3301      	adds	r3, #1
 8019626:	f100 80d4 	bmi.w	80197d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801962a:	429a      	cmp	r2, r3
 801962c:	f2c0 80d1 	blt.w	80197d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8019630:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019632:	9311      	str	r3, [sp, #68]	; 0x44
 8019634:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019636:	930c      	str	r3, [sp, #48]	; 0x30
 8019638:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801963a:	2b00      	cmp	r3, #0
 801963c:	f340 80fa 	ble.w	8019834 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 8019640:	9826      	ldr	r0, [sp, #152]	; 0x98
 8019642:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019644:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8019646:	68c6      	ldr	r6, [r0, #12]
 8019648:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801964a:	141d      	asrs	r5, r3, #16
 801964c:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8019650:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8019652:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8019654:	1400      	asrs	r0, r0, #16
 8019656:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801965a:	6892      	ldr	r2, [r2, #8]
 801965c:	f100 813e 	bmi.w	80198dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8019660:	1e57      	subs	r7, r2, #1
 8019662:	42b8      	cmp	r0, r7
 8019664:	f280 813a 	bge.w	80198dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8019668:	2d00      	cmp	r5, #0
 801966a:	f2c0 8137 	blt.w	80198dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801966e:	1e77      	subs	r7, r6, #1
 8019670:	42bd      	cmp	r5, r7
 8019672:	f280 8133 	bge.w	80198dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8019676:	b212      	sxth	r2, r2
 8019678:	fb05 0002 	mla	r0, r5, r2, r0
 801967c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801967e:	f815 a000 	ldrb.w	sl, [r5, r0]
 8019682:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 8019686:	182e      	adds	r6, r5, r0
 8019688:	eb04 050a 	add.w	r5, r4, sl
 801968c:	2b00      	cmp	r3, #0
 801968e:	f000 8117 	beq.w	80198c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 8019692:	f896 c001 	ldrb.w	ip, [r6, #1]
 8019696:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801969a:	44a4      	add	ip, r4
 801969c:	2900      	cmp	r1, #0
 801969e:	f000 8117 	beq.w	80198d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 80196a2:	18b0      	adds	r0, r6, r2
 80196a4:	5cb2      	ldrb	r2, [r6, r2]
 80196a6:	7840      	ldrb	r0, [r0, #1]
 80196a8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80196ac:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80196b0:	4422      	add	r2, r4
 80196b2:	4420      	add	r0, r4
 80196b4:	b29b      	uxth	r3, r3
 80196b6:	b289      	uxth	r1, r1
 80196b8:	fb03 f901 	mul.w	r9, r3, r1
 80196bc:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80196c0:	011b      	lsls	r3, r3, #4
 80196c2:	b289      	uxth	r1, r1
 80196c4:	f89c 7002 	ldrb.w	r7, [ip, #2]
 80196c8:	f895 b002 	ldrb.w	fp, [r5, #2]
 80196cc:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 80196ce:	f814 a00a 	ldrb.w	sl, [r4, sl]
 80196d2:	f8b6 e000 	ldrh.w	lr, [r6]
 80196d6:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 80196da:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 80196de:	eba3 0309 	sub.w	r3, r3, r9
 80196e2:	b29b      	uxth	r3, r3
 80196e4:	eba8 0801 	sub.w	r8, r8, r1
 80196e8:	fa1f f888 	uxth.w	r8, r8
 80196ec:	435f      	muls	r7, r3
 80196ee:	fb08 770b 	mla	r7, r8, fp, r7
 80196f2:	f892 b002 	ldrb.w	fp, [r2, #2]
 80196f6:	9310      	str	r3, [sp, #64]	; 0x40
 80196f8:	fb01 770b 	mla	r7, r1, fp, r7
 80196fc:	f890 b002 	ldrb.w	fp, [r0, #2]
 8019700:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019702:	fb09 770b 	mla	r7, r9, fp, r7
 8019706:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 801970a:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801970e:	fb1b fb03 	smulbb	fp, fp, r3
 8019712:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8019716:	fb07 b706 	mla	r7, r7, r6, fp
 801971a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801971c:	f895 b001 	ldrb.w	fp, [r5, #1]
 8019720:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8019724:	f89c c000 	ldrb.w	ip, [ip]
 8019728:	435d      	muls	r5, r3
 801972a:	fb08 550b 	mla	r5, r8, fp, r5
 801972e:	f892 b001 	ldrb.w	fp, [r2, #1]
 8019732:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019734:	fb01 550b 	mla	r5, r1, fp, r5
 8019738:	f890 b001 	ldrb.w	fp, [r0, #1]
 801973c:	fb09 550b 	mla	r5, r9, fp, r5
 8019740:	ea4f 0bee 	mov.w	fp, lr, asr #3
 8019744:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8019748:	fb1b fb03 	smulbb	fp, fp, r3
 801974c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801974e:	fb03 f30c 	mul.w	r3, r3, ip
 8019752:	f892 c000 	ldrb.w	ip, [r2]
 8019756:	fb08 330a 	mla	r3, r8, sl, r3
 801975a:	fb01 330c 	mla	r3, r1, ip, r3
 801975e:	f890 c000 	ldrb.w	ip, [r0]
 8019762:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8019766:	fb09 3c0c 	mla	ip, r9, ip, r3
 801976a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801976c:	fa5f fe8e 	uxtb.w	lr, lr
 8019770:	b2bf      	uxth	r7, r7
 8019772:	fb1e fe03 	smulbb	lr, lr, r3
 8019776:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801977a:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801977e:	fb05 b506 	mla	r5, r5, r6, fp
 8019782:	1c7b      	adds	r3, r7, #1
 8019784:	fb0c e606 	mla	r6, ip, r6, lr
 8019788:	b2ad      	uxth	r5, r5
 801978a:	b2b6      	uxth	r6, r6
 801978c:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8019790:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 8019794:	f105 0b01 	add.w	fp, r5, #1
 8019798:	1c77      	adds	r7, r6, #1
 801979a:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 801979e:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 80197a2:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80197a6:	096d      	lsrs	r5, r5, #5
 80197a8:	431f      	orrs	r7, r3
 80197aa:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80197ae:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80197b0:	433d      	orrs	r5, r7
 80197b2:	801d      	strh	r5, [r3, #0]
 80197b4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80197b6:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80197b8:	3302      	adds	r3, #2
 80197ba:	930c      	str	r3, [sp, #48]	; 0x30
 80197bc:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80197be:	4413      	add	r3, r2
 80197c0:	931f      	str	r3, [sp, #124]	; 0x7c
 80197c2:	9a22      	ldr	r2, [sp, #136]	; 0x88
 80197c4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80197c6:	4413      	add	r3, r2
 80197c8:	9320      	str	r3, [sp, #128]	; 0x80
 80197ca:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80197cc:	3b01      	subs	r3, #1
 80197ce:	9311      	str	r3, [sp, #68]	; 0x44
 80197d0:	e732      	b.n	8019638 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80197d2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80197d4:	9e21      	ldr	r6, [sp, #132]	; 0x84
 80197d6:	4433      	add	r3, r6
 80197d8:	931f      	str	r3, [sp, #124]	; 0x7c
 80197da:	9e22      	ldr	r6, [sp, #136]	; 0x88
 80197dc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80197de:	4433      	add	r3, r6
 80197e0:	9320      	str	r3, [sp, #128]	; 0x80
 80197e2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80197e4:	3b01      	subs	r3, #1
 80197e6:	9309      	str	r3, [sp, #36]	; 0x24
 80197e8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80197ea:	3302      	adds	r3, #2
 80197ec:	930a      	str	r3, [sp, #40]	; 0x28
 80197ee:	e702      	b.n	80195f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80197f0:	d027      	beq.n	8019842 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 80197f2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80197f4:	9821      	ldr	r0, [sp, #132]	; 0x84
 80197f6:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 80197f8:	3b01      	subs	r3, #1
 80197fa:	fb00 5003 	mla	r0, r0, r3, r5
 80197fe:	1400      	asrs	r0, r0, #16
 8019800:	f53f af16 	bmi.w	8019630 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8019804:	3901      	subs	r1, #1
 8019806:	4288      	cmp	r0, r1
 8019808:	f6bf af12 	bge.w	8019630 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801980c:	9922      	ldr	r1, [sp, #136]	; 0x88
 801980e:	9820      	ldr	r0, [sp, #128]	; 0x80
 8019810:	fb01 0303 	mla	r3, r1, r3, r0
 8019814:	141b      	asrs	r3, r3, #16
 8019816:	f53f af0b 	bmi.w	8019630 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801981a:	3a01      	subs	r2, #1
 801981c:	4293      	cmp	r3, r2
 801981e:	f6bf af07 	bge.w	8019630 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8019822:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019824:	9311      	str	r3, [sp, #68]	; 0x44
 8019826:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 801982a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801982c:	930c      	str	r3, [sp, #48]	; 0x30
 801982e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8019830:	2b00      	cmp	r3, #0
 8019832:	dc70      	bgt.n	8019916 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 8019834:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019836:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8019838:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801983c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8019840:	930a      	str	r3, [sp, #40]	; 0x28
 8019842:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019844:	2b00      	cmp	r3, #0
 8019846:	f340 8124 	ble.w	8019a92 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801984a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801984e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019852:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8019856:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8019858:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801985c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019860:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019864:	eef0 6a62 	vmov.f32	s13, s5
 8019868:	ee61 7a27 	vmul.f32	s15, s2, s15
 801986c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019870:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019874:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 8019878:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801987c:	eef0 6a43 	vmov.f32	s13, s6
 8019880:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019884:	ee12 2a90 	vmov	r2, s5
 8019888:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801988c:	fb92 f3f3 	sdiv	r3, r2, r3
 8019890:	ee13 2a10 	vmov	r2, s6
 8019894:	9321      	str	r3, [sp, #132]	; 0x84
 8019896:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8019898:	fb92 f3f3 	sdiv	r3, r2, r3
 801989c:	9322      	str	r3, [sp, #136]	; 0x88
 801989e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80198a0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80198a2:	3b01      	subs	r3, #1
 80198a4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80198a8:	930e      	str	r3, [sp, #56]	; 0x38
 80198aa:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80198ac:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
 80198b0:	bf08      	it	eq
 80198b2:	4613      	moveq	r3, r2
 80198b4:	9309      	str	r3, [sp, #36]	; 0x24
 80198b6:	eeb0 3a67 	vmov.f32	s6, s15
 80198ba:	eef0 2a47 	vmov.f32	s5, s14
 80198be:	e68c      	b.n	80195da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80198c0:	b149      	cbz	r1, 80198d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 80198c2:	5cb2      	ldrb	r2, [r6, r2]
 80198c4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80198c8:	4422      	add	r2, r4
 80198ca:	4628      	mov	r0, r5
 80198cc:	46ac      	mov	ip, r5
 80198ce:	e6f1      	b.n	80196b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80198d0:	4628      	mov	r0, r5
 80198d2:	462a      	mov	r2, r5
 80198d4:	e6ee      	b.n	80196b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80198d6:	4628      	mov	r0, r5
 80198d8:	462a      	mov	r2, r5
 80198da:	e7f7      	b.n	80198cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 80198dc:	1c47      	adds	r7, r0, #1
 80198de:	f53f af69 	bmi.w	80197b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 80198e2:	42ba      	cmp	r2, r7
 80198e4:	f6ff af66 	blt.w	80197b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 80198e8:	1c6f      	adds	r7, r5, #1
 80198ea:	f53f af63 	bmi.w	80197b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 80198ee:	42be      	cmp	r6, r7
 80198f0:	f6ff af60 	blt.w	80197b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 80198f4:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 80198f6:	9002      	str	r0, [sp, #8]
 80198f8:	b236      	sxth	r6, r6
 80198fa:	b212      	sxth	r2, r2
 80198fc:	e9cd 1705 	strd	r1, r7, [sp, #20]
 8019900:	e9cd 5303 	strd	r5, r3, [sp, #12]
 8019904:	9200      	str	r2, [sp, #0]
 8019906:	9601      	str	r6, [sp, #4]
 8019908:	4623      	mov	r3, r4
 801990a:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 801990e:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019910:	f7ff fd59 	bl	80193c6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 8019914:	e74e      	b.n	80197b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8019916:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8019918:	9820      	ldr	r0, [sp, #128]	; 0x80
 801991a:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801991c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801991e:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8019922:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8019924:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8019928:	142d      	asrs	r5, r5, #16
 801992a:	1400      	asrs	r0, r0, #16
 801992c:	fb02 5000 	mla	r0, r2, r0, r5
 8019930:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8019932:	f815 9000 	ldrb.w	r9, [r5, r0]
 8019936:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801993a:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 801993e:	182e      	adds	r6, r5, r0
 8019940:	eb04 0509 	add.w	r5, r4, r9
 8019944:	2b00      	cmp	r3, #0
 8019946:	f000 8096 	beq.w	8019a76 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801994a:	7877      	ldrb	r7, [r6, #1]
 801994c:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8019950:	4427      	add	r7, r4
 8019952:	2900      	cmp	r1, #0
 8019954:	f000 8097 	beq.w	8019a86 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 8019958:	18b0      	adds	r0, r6, r2
 801995a:	5cb2      	ldrb	r2, [r6, r2]
 801995c:	7840      	ldrb	r0, [r0, #1]
 801995e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8019962:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8019966:	4422      	add	r2, r4
 8019968:	4420      	add	r0, r4
 801996a:	b29b      	uxth	r3, r3
 801996c:	b289      	uxth	r1, r1
 801996e:	fb03 f801 	mul.w	r8, r3, r1
 8019972:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8019974:	f895 b002 	ldrb.w	fp, [r5, #2]
 8019978:	f8b6 c000 	ldrh.w	ip, [r6]
 801997c:	78be      	ldrb	r6, [r7, #2]
 801997e:	f814 9009 	ldrb.w	r9, [r4, r9]
 8019982:	011b      	lsls	r3, r3, #4
 8019984:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 8019988:	b289      	uxth	r1, r1
 801998a:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801998e:	eba3 0308 	sub.w	r3, r3, r8
 8019992:	b29b      	uxth	r3, r3
 8019994:	ebae 0e01 	sub.w	lr, lr, r1
 8019998:	fa1f fe8e 	uxth.w	lr, lr
 801999c:	435e      	muls	r6, r3
 801999e:	fb0e 660b 	mla	r6, lr, fp, r6
 80199a2:	f892 b002 	ldrb.w	fp, [r2, #2]
 80199a6:	9310      	str	r3, [sp, #64]	; 0x40
 80199a8:	fb01 660b 	mla	r6, r1, fp, r6
 80199ac:	f890 b002 	ldrb.w	fp, [r0, #2]
 80199b0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80199b2:	fb08 660b 	mla	r6, r8, fp, r6
 80199b6:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 80199ba:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 80199be:	fb1b fb03 	smulbb	fp, fp, r3
 80199c2:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80199c6:	fb06 b60a 	mla	r6, r6, sl, fp
 80199ca:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80199cc:	f895 b001 	ldrb.w	fp, [r5, #1]
 80199d0:	787d      	ldrb	r5, [r7, #1]
 80199d2:	783f      	ldrb	r7, [r7, #0]
 80199d4:	435d      	muls	r5, r3
 80199d6:	fb0e 550b 	mla	r5, lr, fp, r5
 80199da:	f892 b001 	ldrb.w	fp, [r2, #1]
 80199de:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80199e0:	fb01 550b 	mla	r5, r1, fp, r5
 80199e4:	f890 b001 	ldrb.w	fp, [r0, #1]
 80199e8:	fb08 550b 	mla	r5, r8, fp, r5
 80199ec:	ea4f 0bec 	mov.w	fp, ip, asr #3
 80199f0:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 80199f4:	fb1b fb03 	smulbb	fp, fp, r3
 80199f8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80199fa:	437b      	muls	r3, r7
 80199fc:	7817      	ldrb	r7, [r2, #0]
 80199fe:	fb0e 3309 	mla	r3, lr, r9, r3
 8019a02:	fb01 3307 	mla	r3, r1, r7, r3
 8019a06:	7807      	ldrb	r7, [r0, #0]
 8019a08:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8019a0c:	fb08 3707 	mla	r7, r8, r7, r3
 8019a10:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019a12:	fa5f fc8c 	uxtb.w	ip, ip
 8019a16:	fb1c fc03 	smulbb	ip, ip, r3
 8019a1a:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8019a1e:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8019a22:	fb05 b50a 	mla	r5, r5, sl, fp
 8019a26:	fb07 c70a 	mla	r7, r7, sl, ip
 8019a2a:	b2b6      	uxth	r6, r6
 8019a2c:	b2ad      	uxth	r5, r5
 8019a2e:	b2bf      	uxth	r7, r7
 8019a30:	1c73      	adds	r3, r6, #1
 8019a32:	1c7a      	adds	r2, r7, #1
 8019a34:	f105 0b01 	add.w	fp, r5, #1
 8019a38:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8019a3c:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8019a40:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8019a44:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8019a48:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8019a4c:	096d      	lsrs	r5, r5, #5
 8019a4e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8019a50:	4316      	orrs	r6, r2
 8019a52:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8019a56:	432e      	orrs	r6, r5
 8019a58:	f823 6b02 	strh.w	r6, [r3], #2
 8019a5c:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8019a5e:	930c      	str	r3, [sp, #48]	; 0x30
 8019a60:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8019a62:	4413      	add	r3, r2
 8019a64:	931f      	str	r3, [sp, #124]	; 0x7c
 8019a66:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8019a68:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019a6a:	4413      	add	r3, r2
 8019a6c:	9320      	str	r3, [sp, #128]	; 0x80
 8019a6e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8019a70:	3b01      	subs	r3, #1
 8019a72:	9311      	str	r3, [sp, #68]	; 0x44
 8019a74:	e6db      	b.n	801982e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 8019a76:	b149      	cbz	r1, 8019a8c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 8019a78:	5cb2      	ldrb	r2, [r6, r2]
 8019a7a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8019a7e:	4422      	add	r2, r4
 8019a80:	4628      	mov	r0, r5
 8019a82:	462f      	mov	r7, r5
 8019a84:	e771      	b.n	801996a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 8019a86:	4628      	mov	r0, r5
 8019a88:	462a      	mov	r2, r5
 8019a8a:	e76e      	b.n	801996a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 8019a8c:	4628      	mov	r0, r5
 8019a8e:	462a      	mov	r2, r5
 8019a90:	e7f7      	b.n	8019a82 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8019a92:	b015      	add	sp, #84	; 0x54
 8019a94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019a98 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 8019a98:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019a9c:	880f      	ldrh	r7, [r1, #0]
 8019a9e:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 8019aa2:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 8019aa6:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 8019aaa:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8019aae:	023c      	lsls	r4, r7, #8
 8019ab0:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
 8019ab4:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
 8019ab8:	017c      	lsls	r4, r7, #5
 8019aba:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 8019abe:	00ff      	lsls	r7, r7, #3
 8019ac0:	ea4b 0404 	orr.w	r4, fp, r4
 8019ac4:	b2ff      	uxtb	r7, r7
 8019ac6:	fb05 ca0e 	mla	sl, r5, lr, ip
 8019aca:	4327      	orrs	r7, r4
 8019acc:	2d00      	cmp	r5, #0
 8019ace:	eb02 080a 	add.w	r8, r2, sl
 8019ad2:	9701      	str	r7, [sp, #4]
 8019ad4:	db7e      	blt.n	8019bd4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 8019ad6:	45a9      	cmp	r9, r5
 8019ad8:	dd7c      	ble.n	8019bd4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 8019ada:	f1bc 0f00 	cmp.w	ip, #0
 8019ade:	db77      	blt.n	8019bd0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 8019ae0:	45e6      	cmp	lr, ip
 8019ae2:	dd75      	ble.n	8019bd0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 8019ae4:	f812 700a 	ldrb.w	r7, [r2, sl]
 8019ae8:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8019aec:	441f      	add	r7, r3
 8019aee:	f11c 0201 	adds.w	r2, ip, #1
 8019af2:	d472      	bmi.n	8019bda <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8019af4:	4596      	cmp	lr, r2
 8019af6:	dd70      	ble.n	8019bda <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8019af8:	2800      	cmp	r0, #0
 8019afa:	d06e      	beq.n	8019bda <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8019afc:	f898 4001 	ldrb.w	r4, [r8, #1]
 8019b00:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8019b04:	441c      	add	r4, r3
 8019b06:	3501      	adds	r5, #1
 8019b08:	d46b      	bmi.n	8019be2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8019b0a:	45a9      	cmp	r9, r5
 8019b0c:	dd69      	ble.n	8019be2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8019b0e:	2e00      	cmp	r6, #0
 8019b10:	d067      	beq.n	8019be2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8019b12:	f1bc 0f00 	cmp.w	ip, #0
 8019b16:	db62      	blt.n	8019bde <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8019b18:	45e6      	cmp	lr, ip
 8019b1a:	dd60      	ble.n	8019bde <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8019b1c:	f818 500e 	ldrb.w	r5, [r8, lr]
 8019b20:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8019b24:	441d      	add	r5, r3
 8019b26:	f11c 0201 	adds.w	r2, ip, #1
 8019b2a:	d45d      	bmi.n	8019be8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8019b2c:	4596      	cmp	lr, r2
 8019b2e:	dd5b      	ble.n	8019be8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8019b30:	2800      	cmp	r0, #0
 8019b32:	d059      	beq.n	8019be8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8019b34:	44c6      	add	lr, r8
 8019b36:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8019b3a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8019b3e:	4413      	add	r3, r2
 8019b40:	b280      	uxth	r0, r0
 8019b42:	b2b2      	uxth	r2, r6
 8019b44:	fb00 f602 	mul.w	r6, r0, r2
 8019b48:	0100      	lsls	r0, r0, #4
 8019b4a:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 8019b4e:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
 8019b52:	1b80      	subs	r0, r0, r6
 8019b54:	fa1f fc82 	uxth.w	ip, r2
 8019b58:	b282      	uxth	r2, r0
 8019b5a:	78a0      	ldrb	r0, [r4, #2]
 8019b5c:	f897 e002 	ldrb.w	lr, [r7, #2]
 8019b60:	f897 9000 	ldrb.w	r9, [r7]
 8019b64:	787f      	ldrb	r7, [r7, #1]
 8019b66:	eba8 080c 	sub.w	r8, r8, ip
 8019b6a:	fa1f f888 	uxth.w	r8, r8
 8019b6e:	4350      	muls	r0, r2
 8019b70:	fb08 0e0e 	mla	lr, r8, lr, r0
 8019b74:	78a8      	ldrb	r0, [r5, #2]
 8019b76:	fb0c e000 	mla	r0, ip, r0, lr
 8019b7a:	f893 e002 	ldrb.w	lr, [r3, #2]
 8019b7e:	fb06 0e0e 	mla	lr, r6, lr, r0
 8019b82:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
 8019b86:	f894 e000 	ldrb.w	lr, [r4]
 8019b8a:	fb02 fe0e 	mul.w	lr, r2, lr
 8019b8e:	fb08 e909 	mla	r9, r8, r9, lr
 8019b92:	f895 e000 	ldrb.w	lr, [r5]
 8019b96:	fb0c 990e 	mla	r9, ip, lr, r9
 8019b9a:	f893 e000 	ldrb.w	lr, [r3]
 8019b9e:	785b      	ldrb	r3, [r3, #1]
 8019ba0:	fb06 9e0e 	mla	lr, r6, lr, r9
 8019ba4:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8019ba8:	ea4e 0e00 	orr.w	lr, lr, r0
 8019bac:	7860      	ldrb	r0, [r4, #1]
 8019bae:	4350      	muls	r0, r2
 8019bb0:	786a      	ldrb	r2, [r5, #1]
 8019bb2:	fb08 0007 	mla	r0, r8, r7, r0
 8019bb6:	fb0c 0202 	mla	r2, ip, r2, r0
 8019bba:	fb06 2303 	mla	r3, r6, r3, r2
 8019bbe:	095b      	lsrs	r3, r3, #5
 8019bc0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019bc4:	ea4e 0303 	orr.w	r3, lr, r3
 8019bc8:	800b      	strh	r3, [r1, #0]
 8019bca:	b003      	add	sp, #12
 8019bcc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019bd0:	af01      	add	r7, sp, #4
 8019bd2:	e78c      	b.n	8019aee <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 8019bd4:	ac01      	add	r4, sp, #4
 8019bd6:	4627      	mov	r7, r4
 8019bd8:	e795      	b.n	8019b06 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8019bda:	ac01      	add	r4, sp, #4
 8019bdc:	e793      	b.n	8019b06 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8019bde:	ad01      	add	r5, sp, #4
 8019be0:	e7a1      	b.n	8019b26 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 8019be2:	ab01      	add	r3, sp, #4
 8019be4:	461d      	mov	r5, r3
 8019be6:	e7ab      	b.n	8019b40 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 8019be8:	ab01      	add	r3, sp, #4
 8019bea:	e7a9      	b.n	8019b40 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

08019bec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019bec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019bf0:	b08f      	sub	sp, #60	; 0x3c
 8019bf2:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
 8019bf6:	920c      	str	r2, [sp, #48]	; 0x30
 8019bf8:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8019bfa:	910a      	str	r1, [sp, #40]	; 0x28
 8019bfc:	9306      	str	r3, [sp, #24]
 8019bfe:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
 8019c02:	900d      	str	r0, [sp, #52]	; 0x34
 8019c04:	6850      	ldr	r0, [r2, #4]
 8019c06:	6812      	ldr	r2, [r2, #0]
 8019c08:	fb00 1303 	mla	r3, r0, r3, r1
 8019c0c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8019c10:	9307      	str	r3, [sp, #28]
 8019c12:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019c14:	681b      	ldr	r3, [r3, #0]
 8019c16:	9308      	str	r3, [sp, #32]
 8019c18:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019c1a:	685c      	ldr	r4, [r3, #4]
 8019c1c:	3404      	adds	r4, #4
 8019c1e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019c20:	2b00      	cmp	r3, #0
 8019c22:	dc03      	bgt.n	8019c2c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8019c24:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8019c26:	2b00      	cmp	r3, #0
 8019c28:	f340 81d6 	ble.w	8019fd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8019c2c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019c2e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019c32:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8019c36:	1e48      	subs	r0, r1, #1
 8019c38:	1e56      	subs	r6, r2, #1
 8019c3a:	9b06      	ldr	r3, [sp, #24]
 8019c3c:	2b00      	cmp	r3, #0
 8019c3e:	f340 80b7 	ble.w	8019db0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 8019c42:	ea5f 472b 	movs.w	r7, fp, asr #16
 8019c46:	ea4f 4325 	mov.w	r3, r5, asr #16
 8019c4a:	d406      	bmi.n	8019c5a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8019c4c:	4287      	cmp	r7, r0
 8019c4e:	da04      	bge.n	8019c5a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8019c50:	2b00      	cmp	r3, #0
 8019c52:	db02      	blt.n	8019c5a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8019c54:	42b3      	cmp	r3, r6
 8019c56:	f2c0 80ac 	blt.w	8019db2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8019c5a:	3701      	adds	r7, #1
 8019c5c:	f100 809d 	bmi.w	8019d9a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8019c60:	42b9      	cmp	r1, r7
 8019c62:	f2c0 809a 	blt.w	8019d9a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8019c66:	3301      	adds	r3, #1
 8019c68:	f100 8097 	bmi.w	8019d9a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8019c6c:	429a      	cmp	r2, r3
 8019c6e:	f2c0 8094 	blt.w	8019d9a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8019c72:	9b06      	ldr	r3, [sp, #24]
 8019c74:	930b      	str	r3, [sp, #44]	; 0x2c
 8019c76:	9b07      	ldr	r3, [sp, #28]
 8019c78:	9309      	str	r3, [sp, #36]	; 0x24
 8019c7a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019c7c:	2b00      	cmp	r3, #0
 8019c7e:	f340 80b5 	ble.w	8019dec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8019c82:	9820      	ldr	r0, [sp, #128]	; 0x80
 8019c84:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8019c86:	68c7      	ldr	r7, [r0, #12]
 8019c88:	6892      	ldr	r2, [r2, #8]
 8019c8a:	ea5f 402b 	movs.w	r0, fp, asr #16
 8019c8e:	ea4f 4625 	mov.w	r6, r5, asr #16
 8019c92:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8019c96:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8019c9a:	f100 80fb 	bmi.w	8019e94 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8019c9e:	f102 3cff 	add.w	ip, r2, #4294967295
 8019ca2:	4560      	cmp	r0, ip
 8019ca4:	f280 80f6 	bge.w	8019e94 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8019ca8:	2e00      	cmp	r6, #0
 8019caa:	f2c0 80f3 	blt.w	8019e94 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8019cae:	f107 3cff 	add.w	ip, r7, #4294967295
 8019cb2:	4566      	cmp	r6, ip
 8019cb4:	f280 80ee 	bge.w	8019e94 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8019cb8:	b212      	sxth	r2, r2
 8019cba:	fb06 0002 	mla	r0, r6, r2, r0
 8019cbe:	9e08      	ldr	r6, [sp, #32]
 8019cc0:	1837      	adds	r7, r6, r0
 8019cc2:	5c30      	ldrb	r0, [r6, r0]
 8019cc4:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 8019cc8:	eb04 0c08 	add.w	ip, r4, r8
 8019ccc:	2b00      	cmp	r3, #0
 8019cce:	f000 80d3 	beq.w	8019e78 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8019cd2:	787e      	ldrb	r6, [r7, #1]
 8019cd4:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8019cd8:	4426      	add	r6, r4
 8019cda:	2900      	cmp	r1, #0
 8019cdc:	f000 80d4 	beq.w	8019e88 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 8019ce0:	18b8      	adds	r0, r7, r2
 8019ce2:	5cba      	ldrb	r2, [r7, r2]
 8019ce4:	7840      	ldrb	r0, [r0, #1]
 8019ce6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8019cea:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8019cee:	4422      	add	r2, r4
 8019cf0:	4420      	add	r0, r4
 8019cf2:	b29b      	uxth	r3, r3
 8019cf4:	b289      	uxth	r1, r1
 8019cf6:	fb03 f901 	mul.w	r9, r3, r1
 8019cfa:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8019cfe:	011b      	lsls	r3, r3, #4
 8019d00:	b289      	uxth	r1, r1
 8019d02:	78b7      	ldrb	r7, [r6, #2]
 8019d04:	f89c a002 	ldrb.w	sl, [ip, #2]
 8019d08:	f89c c001 	ldrb.w	ip, [ip, #1]
 8019d0c:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8019d10:	eba3 0309 	sub.w	r3, r3, r9
 8019d14:	b29b      	uxth	r3, r3
 8019d16:	ebae 0e01 	sub.w	lr, lr, r1
 8019d1a:	fa1f fe8e 	uxth.w	lr, lr
 8019d1e:	435f      	muls	r7, r3
 8019d20:	fb0e 770a 	mla	r7, lr, sl, r7
 8019d24:	f892 a002 	ldrb.w	sl, [r2, #2]
 8019d28:	fb01 770a 	mla	r7, r1, sl, r7
 8019d2c:	f890 a002 	ldrb.w	sl, [r0, #2]
 8019d30:	fb09 7a0a 	mla	sl, r9, sl, r7
 8019d34:	f814 7008 	ldrb.w	r7, [r4, r8]
 8019d38:	f896 8000 	ldrb.w	r8, [r6]
 8019d3c:	7876      	ldrb	r6, [r6, #1]
 8019d3e:	fb03 f808 	mul.w	r8, r3, r8
 8019d42:	fb0e 8807 	mla	r8, lr, r7, r8
 8019d46:	7817      	ldrb	r7, [r2, #0]
 8019d48:	fb01 8807 	mla	r8, r1, r7, r8
 8019d4c:	7807      	ldrb	r7, [r0, #0]
 8019d4e:	fb09 8707 	mla	r7, r9, r7, r8
 8019d52:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8019d56:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8019d5a:	ea47 070a 	orr.w	r7, r7, sl
 8019d5e:	4373      	muls	r3, r6
 8019d60:	f892 a001 	ldrb.w	sl, [r2, #1]
 8019d64:	fb0e 330c 	mla	r3, lr, ip, r3
 8019d68:	fb01 310a 	mla	r1, r1, sl, r3
 8019d6c:	f890 a001 	ldrb.w	sl, [r0, #1]
 8019d70:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019d72:	fb09 1a0a 	mla	sl, r9, sl, r1
 8019d76:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019d7a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019d7e:	ea47 070a 	orr.w	r7, r7, sl
 8019d82:	801f      	strh	r7, [r3, #0]
 8019d84:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019d86:	3302      	adds	r3, #2
 8019d88:	9309      	str	r3, [sp, #36]	; 0x24
 8019d8a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8019d8c:	449b      	add	fp, r3
 8019d8e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8019d90:	441d      	add	r5, r3
 8019d92:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019d94:	3b01      	subs	r3, #1
 8019d96:	930b      	str	r3, [sp, #44]	; 0x2c
 8019d98:	e76f      	b.n	8019c7a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8019d9a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8019d9c:	449b      	add	fp, r3
 8019d9e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8019da0:	441d      	add	r5, r3
 8019da2:	9b06      	ldr	r3, [sp, #24]
 8019da4:	3b01      	subs	r3, #1
 8019da6:	9306      	str	r3, [sp, #24]
 8019da8:	9b07      	ldr	r3, [sp, #28]
 8019daa:	3302      	adds	r3, #2
 8019dac:	9307      	str	r3, [sp, #28]
 8019dae:	e744      	b.n	8019c3a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 8019db0:	d023      	beq.n	8019dfa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8019db2:	9b06      	ldr	r3, [sp, #24]
 8019db4:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8019db6:	3b01      	subs	r3, #1
 8019db8:	fb00 b003 	mla	r0, r0, r3, fp
 8019dbc:	1400      	asrs	r0, r0, #16
 8019dbe:	f53f af58 	bmi.w	8019c72 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8019dc2:	3901      	subs	r1, #1
 8019dc4:	4288      	cmp	r0, r1
 8019dc6:	f6bf af54 	bge.w	8019c72 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8019dca:	991c      	ldr	r1, [sp, #112]	; 0x70
 8019dcc:	fb01 5303 	mla	r3, r1, r3, r5
 8019dd0:	141b      	asrs	r3, r3, #16
 8019dd2:	f53f af4e 	bmi.w	8019c72 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8019dd6:	3a01      	subs	r2, #1
 8019dd8:	4293      	cmp	r3, r2
 8019dda:	f6bf af4a 	bge.w	8019c72 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8019dde:	9b06      	ldr	r3, [sp, #24]
 8019de0:	9309      	str	r3, [sp, #36]	; 0x24
 8019de2:	9b07      	ldr	r3, [sp, #28]
 8019de4:	930b      	str	r3, [sp, #44]	; 0x2c
 8019de6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019de8:	2b00      	cmp	r3, #0
 8019dea:	dc70      	bgt.n	8019ece <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 8019dec:	9b06      	ldr	r3, [sp, #24]
 8019dee:	9a07      	ldr	r2, [sp, #28]
 8019df0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019df4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8019df8:	9307      	str	r3, [sp, #28]
 8019dfa:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019dfc:	2b00      	cmp	r3, #0
 8019dfe:	f340 80eb 	ble.w	8019fd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8019e02:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019e06:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019e0a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8019e0e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8019e10:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019e14:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019e18:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019e1c:	eef0 6a62 	vmov.f32	s13, s5
 8019e20:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019e24:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019e28:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019e2c:	ee16 ba90 	vmov	fp, s13
 8019e30:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019e34:	eef0 6a43 	vmov.f32	s13, s6
 8019e38:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019e3c:	ee12 2a90 	vmov	r2, s5
 8019e40:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019e44:	fb92 f3f3 	sdiv	r3, r2, r3
 8019e48:	ee13 2a10 	vmov	r2, s6
 8019e4c:	931b      	str	r3, [sp, #108]	; 0x6c
 8019e4e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8019e50:	fb92 f3f3 	sdiv	r3, r2, r3
 8019e54:	931c      	str	r3, [sp, #112]	; 0x70
 8019e56:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019e58:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8019e5a:	3b01      	subs	r3, #1
 8019e5c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019e60:	930a      	str	r3, [sp, #40]	; 0x28
 8019e62:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8019e64:	bf08      	it	eq
 8019e66:	4613      	moveq	r3, r2
 8019e68:	ee16 5a90 	vmov	r5, s13
 8019e6c:	9306      	str	r3, [sp, #24]
 8019e6e:	eeb0 3a67 	vmov.f32	s6, s15
 8019e72:	eef0 2a47 	vmov.f32	s5, s14
 8019e76:	e6d2      	b.n	8019c1e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8019e78:	b149      	cbz	r1, 8019e8e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8019e7a:	5cba      	ldrb	r2, [r7, r2]
 8019e7c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8019e80:	4422      	add	r2, r4
 8019e82:	4660      	mov	r0, ip
 8019e84:	4666      	mov	r6, ip
 8019e86:	e734      	b.n	8019cf2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8019e88:	4660      	mov	r0, ip
 8019e8a:	4662      	mov	r2, ip
 8019e8c:	e731      	b.n	8019cf2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8019e8e:	4660      	mov	r0, ip
 8019e90:	4662      	mov	r2, ip
 8019e92:	e7f7      	b.n	8019e84 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 8019e94:	f110 0c01 	adds.w	ip, r0, #1
 8019e98:	f53f af74 	bmi.w	8019d84 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019e9c:	4562      	cmp	r2, ip
 8019e9e:	f6ff af71 	blt.w	8019d84 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019ea2:	f116 0c01 	adds.w	ip, r6, #1
 8019ea6:	f53f af6d 	bmi.w	8019d84 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019eaa:	4567      	cmp	r7, ip
 8019eac:	f6ff af6a 	blt.w	8019d84 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019eb0:	b23f      	sxth	r7, r7
 8019eb2:	b212      	sxth	r2, r2
 8019eb4:	e9cd 3104 	strd	r3, r1, [sp, #16]
 8019eb8:	e9cd 0602 	strd	r0, r6, [sp, #8]
 8019ebc:	9200      	str	r2, [sp, #0]
 8019ebe:	9701      	str	r7, [sp, #4]
 8019ec0:	4623      	mov	r3, r4
 8019ec2:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8019ec6:	980d      	ldr	r0, [sp, #52]	; 0x34
 8019ec8:	f7ff fde6 	bl	8019a98 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 8019ecc:	e75a      	b.n	8019d84 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019ece:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8019ed0:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8019ed4:	ea4f 462b 	mov.w	r6, fp, asr #16
 8019ed8:	1428      	asrs	r0, r5, #16
 8019eda:	fb02 6000 	mla	r0, r2, r0, r6
 8019ede:	9e08      	ldr	r6, [sp, #32]
 8019ee0:	f816 8000 	ldrb.w	r8, [r6, r0]
 8019ee4:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8019ee8:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8019eec:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8019ef0:	1837      	adds	r7, r6, r0
 8019ef2:	eb04 0c08 	add.w	ip, r4, r8
 8019ef6:	2b00      	cmp	r3, #0
 8019ef8:	d060      	beq.n	8019fbc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 8019efa:	787e      	ldrb	r6, [r7, #1]
 8019efc:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8019f00:	4426      	add	r6, r4
 8019f02:	2900      	cmp	r1, #0
 8019f04:	d062      	beq.n	8019fcc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 8019f06:	18b8      	adds	r0, r7, r2
 8019f08:	5cba      	ldrb	r2, [r7, r2]
 8019f0a:	7840      	ldrb	r0, [r0, #1]
 8019f0c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8019f10:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8019f14:	4422      	add	r2, r4
 8019f16:	4420      	add	r0, r4
 8019f18:	b29b      	uxth	r3, r3
 8019f1a:	b289      	uxth	r1, r1
 8019f1c:	fb03 f901 	mul.w	r9, r3, r1
 8019f20:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8019f24:	011b      	lsls	r3, r3, #4
 8019f26:	b289      	uxth	r1, r1
 8019f28:	78b7      	ldrb	r7, [r6, #2]
 8019f2a:	f89c a002 	ldrb.w	sl, [ip, #2]
 8019f2e:	f89c c001 	ldrb.w	ip, [ip, #1]
 8019f32:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8019f36:	eba3 0309 	sub.w	r3, r3, r9
 8019f3a:	b29b      	uxth	r3, r3
 8019f3c:	ebae 0e01 	sub.w	lr, lr, r1
 8019f40:	fa1f fe8e 	uxth.w	lr, lr
 8019f44:	435f      	muls	r7, r3
 8019f46:	fb0e 770a 	mla	r7, lr, sl, r7
 8019f4a:	f892 a002 	ldrb.w	sl, [r2, #2]
 8019f4e:	fb01 770a 	mla	r7, r1, sl, r7
 8019f52:	f890 a002 	ldrb.w	sl, [r0, #2]
 8019f56:	fb09 7a0a 	mla	sl, r9, sl, r7
 8019f5a:	f814 7008 	ldrb.w	r7, [r4, r8]
 8019f5e:	f896 8000 	ldrb.w	r8, [r6]
 8019f62:	7876      	ldrb	r6, [r6, #1]
 8019f64:	fb03 f808 	mul.w	r8, r3, r8
 8019f68:	fb0e 8807 	mla	r8, lr, r7, r8
 8019f6c:	7817      	ldrb	r7, [r2, #0]
 8019f6e:	fb01 8807 	mla	r8, r1, r7, r8
 8019f72:	7807      	ldrb	r7, [r0, #0]
 8019f74:	fb09 8707 	mla	r7, r9, r7, r8
 8019f78:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8019f7c:	4373      	muls	r3, r6
 8019f7e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8019f82:	7856      	ldrb	r6, [r2, #1]
 8019f84:	ea47 070a 	orr.w	r7, r7, sl
 8019f88:	fb0e 330c 	mla	r3, lr, ip, r3
 8019f8c:	f890 a001 	ldrb.w	sl, [r0, #1]
 8019f90:	fb01 3306 	mla	r3, r1, r6, r3
 8019f94:	fb09 3a0a 	mla	sl, r9, sl, r3
 8019f98:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019f9c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019f9e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019fa2:	ea47 070a 	orr.w	r7, r7, sl
 8019fa6:	f823 7b02 	strh.w	r7, [r3], #2
 8019faa:	930b      	str	r3, [sp, #44]	; 0x2c
 8019fac:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8019fae:	449b      	add	fp, r3
 8019fb0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8019fb2:	441d      	add	r5, r3
 8019fb4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019fb6:	3b01      	subs	r3, #1
 8019fb8:	9309      	str	r3, [sp, #36]	; 0x24
 8019fba:	e714      	b.n	8019de6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8019fbc:	b149      	cbz	r1, 8019fd2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8019fbe:	5cba      	ldrb	r2, [r7, r2]
 8019fc0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8019fc4:	4422      	add	r2, r4
 8019fc6:	4660      	mov	r0, ip
 8019fc8:	4666      	mov	r6, ip
 8019fca:	e7a5      	b.n	8019f18 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8019fcc:	4660      	mov	r0, ip
 8019fce:	4662      	mov	r2, ip
 8019fd0:	e7a2      	b.n	8019f18 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8019fd2:	4660      	mov	r0, ip
 8019fd4:	4662      	mov	r2, ip
 8019fd6:	e7f7      	b.n	8019fc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 8019fd8:	b00f      	add	sp, #60	; 0x3c
 8019fda:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019fde <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 8019fde:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019fe2:	b085      	sub	sp, #20
 8019fe4:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
 8019fe8:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8019fec:	9102      	str	r1, [sp, #8]
 8019fee:	2c00      	cmp	r4, #0
 8019ff0:	fb04 710c 	mla	r1, r4, ip, r7
 8019ff4:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8019ff8:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 8019ffc:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 801a000:	eb02 0e01 	add.w	lr, r2, r1
 801a004:	f2c0 8122 	blt.w	801a24c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801a008:	45a0      	cmp	r8, r4
 801a00a:	f340 811f 	ble.w	801a24c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801a00e:	2f00      	cmp	r7, #0
 801a010:	f2c0 811a 	blt.w	801a248 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801a014:	45bc      	cmp	ip, r7
 801a016:	f340 8117 	ble.w	801a248 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801a01a:	5c52      	ldrb	r2, [r2, r1]
 801a01c:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801a020:	1c7a      	adds	r2, r7, #1
 801a022:	f100 8116 	bmi.w	801a252 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801a026:	4594      	cmp	ip, r2
 801a028:	f340 8113 	ble.w	801a252 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801a02c:	2e00      	cmp	r6, #0
 801a02e:	f000 8112 	beq.w	801a256 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 801a032:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801a036:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801a03a:	3401      	adds	r4, #1
 801a03c:	f100 810f 	bmi.w	801a25e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801a040:	45a0      	cmp	r8, r4
 801a042:	f340 810c 	ble.w	801a25e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801a046:	2800      	cmp	r0, #0
 801a048:	f000 810c 	beq.w	801a264 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 801a04c:	2f00      	cmp	r7, #0
 801a04e:	f2c0 8104 	blt.w	801a25a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801a052:	45bc      	cmp	ip, r7
 801a054:	f340 8101 	ble.w	801a25a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801a058:	f81e 200c 	ldrb.w	r2, [lr, ip]
 801a05c:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 801a060:	3701      	adds	r7, #1
 801a062:	f100 8102 	bmi.w	801a26a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801a066:	45bc      	cmp	ip, r7
 801a068:	f340 80ff 	ble.w	801a26a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801a06c:	2e00      	cmp	r6, #0
 801a06e:	f000 80fe 	beq.w	801a26e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 801a072:	44f4      	add	ip, lr
 801a074:	f89c 2001 	ldrb.w	r2, [ip, #1]
 801a078:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 801a07c:	b2b6      	uxth	r6, r6
 801a07e:	b280      	uxth	r0, r0
 801a080:	fb00 fe06 	mul.w	lr, r0, r6
 801a084:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801a088:	0136      	lsls	r6, r6, #4
 801a08a:	eba6 070e 	sub.w	r7, r6, lr
 801a08e:	b280      	uxth	r0, r0
 801a090:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801a094:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801a098:	b2bf      	uxth	r7, r7
 801a09a:	1a1b      	subs	r3, r3, r0
 801a09c:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801a0a0:	b29b      	uxth	r3, r3
 801a0a2:	fb0a f607 	mul.w	r6, sl, r7
 801a0a6:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801a0aa:	fb0b 6603 	mla	r6, fp, r3, r6
 801a0ae:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801a0b2:	fb00 6609 	mla	r6, r0, r9, r6
 801a0b6:	fb0e 6608 	mla	r6, lr, r8, r6
 801a0ba:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801a0be:	9600      	str	r6, [sp, #0]
 801a0c0:	2e00      	cmp	r6, #0
 801a0c2:	f000 80be 	beq.w	801a242 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 801a0c6:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801a0ca:	fb0b fc0c 	mul.w	ip, fp, ip
 801a0ce:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801a0d2:	fb0b f505 	mul.w	r5, fp, r5
 801a0d6:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801a0da:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801a0de:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801a0e2:	44dc      	add	ip, fp
 801a0e4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a0e8:	9501      	str	r5, [sp, #4]
 801a0ea:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801a0ee:	9503      	str	r5, [sp, #12]
 801a0f0:	9d01      	ldr	r5, [sp, #4]
 801a0f2:	9e02      	ldr	r6, [sp, #8]
 801a0f4:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801a0f8:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801a0fc:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801a100:	fb0a fc0c 	mul.w	ip, sl, ip
 801a104:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801a108:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801a10c:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801a110:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801a114:	4465      	add	r5, ip
 801a116:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801a11a:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801a11e:	fb09 fc0c 	mul.w	ip, r9, ip
 801a122:	fb09 f904 	mul.w	r9, r9, r4
 801a126:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801a12a:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801a12e:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801a132:	fb08 f404 	mul.w	r4, r8, r4
 801a136:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801a13a:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801a13e:	fb08 f802 	mul.w	r8, r8, r2
 801a142:	fb0a fa01 	mul.w	sl, sl, r1
 801a146:	0a22      	lsrs	r2, r4, #8
 801a148:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801a14c:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801a150:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801a154:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801a158:	4414      	add	r4, r2
 801a15a:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801a15e:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801a162:	0a2d      	lsrs	r5, r5, #8
 801a164:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801a168:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801a16c:	9a03      	ldr	r2, [sp, #12]
 801a16e:	8836      	ldrh	r6, [r6, #0]
 801a170:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801a174:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801a178:	437d      	muls	r5, r7
 801a17a:	4461      	add	r1, ip
 801a17c:	0a24      	lsrs	r4, r4, #8
 801a17e:	fb02 5503 	mla	r5, r2, r3, r5
 801a182:	0a09      	lsrs	r1, r1, #8
 801a184:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801a188:	fb04 540e 	mla	r4, r4, lr, r5
 801a18c:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801a190:	fb01 4100 	mla	r1, r1, r0, r4
 801a194:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a198:	0a09      	lsrs	r1, r1, #8
 801a19a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a19e:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801a1a2:	fb07 f70a 	mul.w	r7, r7, sl
 801a1a6:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801a1aa:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801a1ae:	fb03 7101 	mla	r1, r3, r1, r7
 801a1b2:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801a1b6:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801a1ba:	fb0e 1e08 	mla	lr, lr, r8, r1
 801a1be:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801a1c2:	fb00 e101 	mla	r1, r0, r1, lr
 801a1c6:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 801a1ca:	9a00      	ldr	r2, [sp, #0]
 801a1cc:	b287      	uxth	r7, r0
 801a1ce:	437a      	muls	r2, r7
 801a1d0:	0a09      	lsrs	r1, r1, #8
 801a1d2:	1c53      	adds	r3, r2, #1
 801a1d4:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801a1d8:	4321      	orrs	r1, r4
 801a1da:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801a1de:	1235      	asrs	r5, r6, #8
 801a1e0:	0c0a      	lsrs	r2, r1, #16
 801a1e2:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801a1e6:	b2db      	uxtb	r3, r3
 801a1e8:	fb12 f207 	smulbb	r2, r2, r7
 801a1ec:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801a1f0:	fb05 2503 	mla	r5, r5, r3, r2
 801a1f4:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801a1f8:	10f2      	asrs	r2, r6, #3
 801a1fa:	b2c8      	uxtb	r0, r1
 801a1fc:	00f6      	lsls	r6, r6, #3
 801a1fe:	fb14 f407 	smulbb	r4, r4, r7
 801a202:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801a206:	b2f6      	uxtb	r6, r6
 801a208:	fb10 f007 	smulbb	r0, r0, r7
 801a20c:	fb02 4203 	mla	r2, r2, r3, r4
 801a210:	b2ad      	uxth	r5, r5
 801a212:	fb06 0303 	mla	r3, r6, r3, r0
 801a216:	b299      	uxth	r1, r3
 801a218:	b294      	uxth	r4, r2
 801a21a:	1c6b      	adds	r3, r5, #1
 801a21c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801a220:	1c62      	adds	r2, r4, #1
 801a222:	1c4b      	adds	r3, r1, #1
 801a224:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801a228:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801a22c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801a230:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801a234:	0952      	lsrs	r2, r2, #5
 801a236:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a23a:	432b      	orrs	r3, r5
 801a23c:	4313      	orrs	r3, r2
 801a23e:	9a02      	ldr	r2, [sp, #8]
 801a240:	8013      	strh	r3, [r2, #0]
 801a242:	b005      	add	sp, #20
 801a244:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a248:	2500      	movs	r5, #0
 801a24a:	e6e9      	b.n	801a020 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 801a24c:	2100      	movs	r1, #0
 801a24e:	460d      	mov	r5, r1
 801a250:	e6f3      	b.n	801a03a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801a252:	2100      	movs	r1, #0
 801a254:	e6f1      	b.n	801a03a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801a256:	4631      	mov	r1, r6
 801a258:	e6ef      	b.n	801a03a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801a25a:	2400      	movs	r4, #0
 801a25c:	e700      	b.n	801a060 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 801a25e:	2200      	movs	r2, #0
 801a260:	4614      	mov	r4, r2
 801a262:	e70b      	b.n	801a07c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801a264:	4602      	mov	r2, r0
 801a266:	4604      	mov	r4, r0
 801a268:	e708      	b.n	801a07c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801a26a:	2200      	movs	r2, #0
 801a26c:	e706      	b.n	801a07c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801a26e:	4632      	mov	r2, r6
 801a270:	e704      	b.n	801a07c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

0801a272 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a272:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a276:	b09f      	sub	sp, #124	; 0x7c
 801a278:	921b      	str	r2, [sp, #108]	; 0x6c
 801a27a:	9309      	str	r3, [sp, #36]	; 0x24
 801a27c:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801a27e:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 801a282:	931c      	str	r3, [sp, #112]	; 0x70
 801a284:	9119      	str	r1, [sp, #100]	; 0x64
 801a286:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 801a28a:	901d      	str	r0, [sp, #116]	; 0x74
 801a28c:	6850      	ldr	r0, [r2, #4]
 801a28e:	6812      	ldr	r2, [r2, #0]
 801a290:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 801a292:	fb00 1303 	mla	r3, r0, r3, r1
 801a296:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a29a:	930c      	str	r3, [sp, #48]	; 0x30
 801a29c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801a29e:	681b      	ldr	r3, [r3, #0]
 801a2a0:	9312      	str	r3, [sp, #72]	; 0x48
 801a2a2:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801a2a4:	685e      	ldr	r6, [r3, #4]
 801a2a6:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 801a2aa:	930d      	str	r3, [sp, #52]	; 0x34
 801a2ac:	3604      	adds	r6, #4
 801a2ae:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801a2b0:	2b00      	cmp	r3, #0
 801a2b2:	dc03      	bgt.n	801a2bc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801a2b4:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801a2b6:	2b00      	cmp	r3, #0
 801a2b8:	f340 8388 	ble.w	801a9cc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801a2bc:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801a2be:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a2c2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a2c6:	1e48      	subs	r0, r1, #1
 801a2c8:	1e57      	subs	r7, r2, #1
 801a2ca:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a2cc:	2b00      	cmp	r3, #0
 801a2ce:	f340 8195 	ble.w	801a5fc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801a2d2:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801a2d4:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801a2d8:	ea4f 4325 	mov.w	r3, r5, asr #16
 801a2dc:	d406      	bmi.n	801a2ec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801a2de:	4584      	cmp	ip, r0
 801a2e0:	da04      	bge.n	801a2ec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801a2e2:	2b00      	cmp	r3, #0
 801a2e4:	db02      	blt.n	801a2ec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801a2e6:	42bb      	cmp	r3, r7
 801a2e8:	f2c0 8189 	blt.w	801a5fe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 801a2ec:	f11c 0c01 	adds.w	ip, ip, #1
 801a2f0:	f100 8177 	bmi.w	801a5e2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801a2f4:	4561      	cmp	r1, ip
 801a2f6:	f2c0 8174 	blt.w	801a5e2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801a2fa:	3301      	adds	r3, #1
 801a2fc:	f100 8171 	bmi.w	801a5e2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801a300:	429a      	cmp	r2, r3
 801a302:	f2c0 816e 	blt.w	801a5e2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801a306:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a308:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801a30a:	931a      	str	r3, [sp, #104]	; 0x68
 801a30c:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801a30e:	2b00      	cmp	r3, #0
 801a310:	f340 8193 	ble.w	801a63a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 801a314:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801a316:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801a31a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801a31c:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 801a320:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801a322:	141b      	asrs	r3, r3, #16
 801a324:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801a328:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801a32c:	f100 81d6 	bmi.w	801a6dc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801a330:	f100 38ff 	add.w	r8, r0, #4294967295
 801a334:	4543      	cmp	r3, r8
 801a336:	f280 81d1 	bge.w	801a6dc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801a33a:	f1bc 0f00 	cmp.w	ip, #0
 801a33e:	f2c0 81cd 	blt.w	801a6dc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801a342:	f10e 38ff 	add.w	r8, lr, #4294967295
 801a346:	45c4      	cmp	ip, r8
 801a348:	f280 81c8 	bge.w	801a6dc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801a34c:	b200      	sxth	r0, r0
 801a34e:	fb0c 3300 	mla	r3, ip, r0, r3
 801a352:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801a354:	eb04 0803 	add.w	r8, r4, r3
 801a358:	5ce3      	ldrb	r3, [r4, r3]
 801a35a:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801a35e:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801a362:	2a00      	cmp	r2, #0
 801a364:	f000 81af 	beq.w	801a6c6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801a368:	f898 c001 	ldrb.w	ip, [r8, #1]
 801a36c:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801a370:	940e      	str	r4, [sp, #56]	; 0x38
 801a372:	0e24      	lsrs	r4, r4, #24
 801a374:	9415      	str	r4, [sp, #84]	; 0x54
 801a376:	b179      	cbz	r1, 801a398 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801a378:	eb08 0c00 	add.w	ip, r8, r0
 801a37c:	f818 0000 	ldrb.w	r0, [r8, r0]
 801a380:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801a384:	900a      	str	r0, [sp, #40]	; 0x28
 801a386:	0e00      	lsrs	r0, r0, #24
 801a388:	9013      	str	r0, [sp, #76]	; 0x4c
 801a38a:	f89c 0001 	ldrb.w	r0, [ip, #1]
 801a38e:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801a392:	900f      	str	r0, [sp, #60]	; 0x3c
 801a394:	0e00      	lsrs	r0, r0, #24
 801a396:	9016      	str	r0, [sp, #88]	; 0x58
 801a398:	b292      	uxth	r2, r2
 801a39a:	b289      	uxth	r1, r1
 801a39c:	fb02 f901 	mul.w	r9, r2, r1
 801a3a0:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801a3a4:	0112      	lsls	r2, r2, #4
 801a3a6:	eba2 0809 	sub.w	r8, r2, r9
 801a3aa:	b289      	uxth	r1, r1
 801a3ac:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801a3b0:	9815      	ldr	r0, [sp, #84]	; 0x54
 801a3b2:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801a3b4:	fa1f f888 	uxth.w	r8, r8
 801a3b8:	1a52      	subs	r2, r2, r1
 801a3ba:	b292      	uxth	r2, r2
 801a3bc:	fb08 f000 	mul.w	r0, r8, r0
 801a3c0:	fb02 000e 	mla	r0, r2, lr, r0
 801a3c4:	fb01 0004 	mla	r0, r1, r4, r0
 801a3c8:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801a3ca:	fb09 0004 	mla	r0, r9, r4, r0
 801a3ce:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801a3d2:	2800      	cmp	r0, #0
 801a3d4:	f000 80fa 	beq.w	801a5cc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801a3d8:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801a3dc:	d01b      	beq.n	801a416 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801a3de:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801a3e2:	fb0e fa0a 	mul.w	sl, lr, sl
 801a3e6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a3ea:	fb0e fe03 	mul.w	lr, lr, r3
 801a3ee:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801a3f2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a3f6:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801a3fa:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801a3fe:	4453      	add	r3, sl
 801a400:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801a404:	0a1b      	lsrs	r3, r3, #8
 801a406:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a40a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a40e:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801a412:	ea43 030c 	orr.w	r3, r3, ip
 801a416:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801a418:	2cff      	cmp	r4, #255	; 0xff
 801a41a:	d021      	beq.n	801a460 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801a41c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801a41e:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801a422:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801a424:	fb04 fb0b 	mul.w	fp, r4, fp
 801a428:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801a42a:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801a42e:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801a430:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801a434:	fb04 fa0a 	mul.w	sl, r4, sl
 801a438:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a43c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801a440:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801a444:	44de      	add	lr, fp
 801a446:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801a44a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a44e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a452:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a456:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a45a:	ea4e 040a 	orr.w	r4, lr, sl
 801a45e:	940e      	str	r4, [sp, #56]	; 0x38
 801a460:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801a462:	2cff      	cmp	r4, #255	; 0xff
 801a464:	d021      	beq.n	801a4aa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 801a466:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801a468:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801a46c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801a46e:	fb04 fb0b 	mul.w	fp, r4, fp
 801a472:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801a474:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801a478:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801a47a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801a47e:	fb04 fa0a 	mul.w	sl, r4, sl
 801a482:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a486:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801a48a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801a48e:	44de      	add	lr, fp
 801a490:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801a494:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a498:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a49c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a4a0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a4a4:	ea4e 040a 	orr.w	r4, lr, sl
 801a4a8:	940a      	str	r4, [sp, #40]	; 0x28
 801a4aa:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801a4ac:	2cff      	cmp	r4, #255	; 0xff
 801a4ae:	d021      	beq.n	801a4f4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 801a4b0:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801a4b2:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801a4b6:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801a4b8:	fb04 fb0b 	mul.w	fp, r4, fp
 801a4bc:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801a4be:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801a4c2:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801a4c4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801a4c8:	fb04 fa0a 	mul.w	sl, r4, sl
 801a4cc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a4d0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801a4d4:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801a4d8:	44de      	add	lr, fp
 801a4da:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801a4de:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a4e2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a4e6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a4ea:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a4ee:	ea4e 040a 	orr.w	r4, lr, sl
 801a4f2:	940f      	str	r4, [sp, #60]	; 0x3c
 801a4f4:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801a4f6:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801a4fa:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801a4fc:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801a500:	fb08 fc0c 	mul.w	ip, r8, ip
 801a504:	fb02 cc0e 	mla	ip, r2, lr, ip
 801a508:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801a50c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801a50e:	fb01 cc0e 	mla	ip, r1, lr, ip
 801a512:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801a516:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801a518:	fb09 cc0e 	mla	ip, r9, lr, ip
 801a51c:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801a520:	fb08 f80e 	mul.w	r8, r8, lr
 801a524:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a528:	fb02 8303 	mla	r3, r2, r3, r8
 801a52c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801a52e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801a530:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801a534:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a536:	fb01 330a 	mla	r3, r1, sl, r3
 801a53a:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 801a53e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801a540:	fb09 3901 	mla	r9, r9, r1, r3
 801a544:	4342      	muls	r2, r0
 801a546:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a54a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801a54e:	883b      	ldrh	r3, [r7, #0]
 801a550:	1c50      	adds	r0, r2, #1
 801a552:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a556:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801a55a:	ea4c 0c09 	orr.w	ip, ip, r9
 801a55e:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801a562:	1219      	asrs	r1, r3, #8
 801a564:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801a568:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801a56c:	b2c0      	uxtb	r0, r0
 801a56e:	fb12 f204 	smulbb	r2, r2, r4
 801a572:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801a576:	fb01 2100 	mla	r1, r1, r0, r2
 801a57a:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801a57e:	10da      	asrs	r2, r3, #3
 801a580:	fa5f fc8c 	uxtb.w	ip, ip
 801a584:	00db      	lsls	r3, r3, #3
 801a586:	fb1c fc04 	smulbb	ip, ip, r4
 801a58a:	b2db      	uxtb	r3, r3
 801a58c:	b289      	uxth	r1, r1
 801a58e:	fb03 c300 	mla	r3, r3, r0, ip
 801a592:	fa1f fc83 	uxth.w	ip, r3
 801a596:	1c4b      	adds	r3, r1, #1
 801a598:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801a59c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801a5a0:	fb1e fe04 	smulbb	lr, lr, r4
 801a5a4:	f10c 0301 	add.w	r3, ip, #1
 801a5a8:	fb02 e200 	mla	r2, r2, r0, lr
 801a5ac:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801a5b0:	b292      	uxth	r2, r2
 801a5b2:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801a5b6:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801a5ba:	430b      	orrs	r3, r1
 801a5bc:	1c51      	adds	r1, r2, #1
 801a5be:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801a5c2:	0952      	lsrs	r2, r2, #5
 801a5c4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a5c8:	4313      	orrs	r3, r2
 801a5ca:	803b      	strh	r3, [r7, #0]
 801a5cc:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801a5ce:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801a5d0:	441a      	add	r2, r3
 801a5d2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801a5d4:	9229      	str	r2, [sp, #164]	; 0xa4
 801a5d6:	441d      	add	r5, r3
 801a5d8:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801a5da:	3b01      	subs	r3, #1
 801a5dc:	3702      	adds	r7, #2
 801a5de:	931a      	str	r3, [sp, #104]	; 0x68
 801a5e0:	e694      	b.n	801a30c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801a5e2:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801a5e4:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801a5e6:	441c      	add	r4, r3
 801a5e8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801a5ea:	9429      	str	r4, [sp, #164]	; 0xa4
 801a5ec:	441d      	add	r5, r3
 801a5ee:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a5f0:	3b01      	subs	r3, #1
 801a5f2:	9309      	str	r3, [sp, #36]	; 0x24
 801a5f4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801a5f6:	3302      	adds	r3, #2
 801a5f8:	930c      	str	r3, [sp, #48]	; 0x30
 801a5fa:	e666      	b.n	801a2ca <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801a5fc:	d024      	beq.n	801a648 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 801a5fe:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a600:	982b      	ldr	r0, [sp, #172]	; 0xac
 801a602:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801a604:	3b01      	subs	r3, #1
 801a606:	fb00 4003 	mla	r0, r0, r3, r4
 801a60a:	1400      	asrs	r0, r0, #16
 801a60c:	f53f ae7b 	bmi.w	801a306 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801a610:	3901      	subs	r1, #1
 801a612:	4288      	cmp	r0, r1
 801a614:	f6bf ae77 	bge.w	801a306 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801a618:	992c      	ldr	r1, [sp, #176]	; 0xb0
 801a61a:	fb01 5303 	mla	r3, r1, r3, r5
 801a61e:	141b      	asrs	r3, r3, #16
 801a620:	f53f ae71 	bmi.w	801a306 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801a624:	3a01      	subs	r2, #1
 801a626:	4293      	cmp	r3, r2
 801a628:	f6bf ae6d 	bge.w	801a306 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801a62c:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801a630:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 801a634:	f1bb 0f00 	cmp.w	fp, #0
 801a638:	dc70      	bgt.n	801a71c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 801a63a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a63c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801a640:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801a642:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801a646:	930c      	str	r3, [sp, #48]	; 0x30
 801a648:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801a64a:	2b00      	cmp	r3, #0
 801a64c:	f340 81be 	ble.w	801a9cc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801a650:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a654:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a658:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a65c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801a65e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a662:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a666:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a66a:	eef0 6a62 	vmov.f32	s13, s5
 801a66e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a672:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a676:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a67a:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 801a67e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a682:	eef0 6a43 	vmov.f32	s13, s6
 801a686:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a68a:	ee12 2a90 	vmov	r2, s5
 801a68e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a692:	fb92 f3f3 	sdiv	r3, r2, r3
 801a696:	ee13 2a10 	vmov	r2, s6
 801a69a:	932b      	str	r3, [sp, #172]	; 0xac
 801a69c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801a69e:	fb92 f3f3 	sdiv	r3, r2, r3
 801a6a2:	932c      	str	r3, [sp, #176]	; 0xb0
 801a6a4:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801a6a6:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 801a6a8:	3b01      	subs	r3, #1
 801a6aa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a6ae:	9319      	str	r3, [sp, #100]	; 0x64
 801a6b0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801a6b2:	bf08      	it	eq
 801a6b4:	4613      	moveq	r3, r2
 801a6b6:	ee16 5a90 	vmov	r5, s13
 801a6ba:	9309      	str	r3, [sp, #36]	; 0x24
 801a6bc:	eeb0 3a67 	vmov.f32	s6, s15
 801a6c0:	eef0 2a47 	vmov.f32	s5, s14
 801a6c4:	e5f3      	b.n	801a2ae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801a6c6:	2900      	cmp	r1, #0
 801a6c8:	f43f ae66 	beq.w	801a398 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801a6cc:	f818 0000 	ldrb.w	r0, [r8, r0]
 801a6d0:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801a6d4:	900a      	str	r0, [sp, #40]	; 0x28
 801a6d6:	0e00      	lsrs	r0, r0, #24
 801a6d8:	9013      	str	r0, [sp, #76]	; 0x4c
 801a6da:	e65d      	b.n	801a398 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801a6dc:	f113 0801 	adds.w	r8, r3, #1
 801a6e0:	f53f af74 	bmi.w	801a5cc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801a6e4:	4540      	cmp	r0, r8
 801a6e6:	f6ff af71 	blt.w	801a5cc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801a6ea:	f11c 0801 	adds.w	r8, ip, #1
 801a6ee:	f53f af6d 	bmi.w	801a5cc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801a6f2:	45c6      	cmp	lr, r8
 801a6f4:	f6ff af6a 	blt.w	801a5cc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801a6f8:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 801a6fa:	9302      	str	r3, [sp, #8]
 801a6fc:	b200      	sxth	r0, r0
 801a6fe:	fa0f f38e 	sxth.w	r3, lr
 801a702:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801a706:	e9cd c203 	strd	ip, r2, [sp, #12]
 801a70a:	9301      	str	r3, [sp, #4]
 801a70c:	9000      	str	r0, [sp, #0]
 801a70e:	4633      	mov	r3, r6
 801a710:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a712:	981d      	ldr	r0, [sp, #116]	; 0x74
 801a714:	4639      	mov	r1, r7
 801a716:	f7ff fc62 	bl	8019fde <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 801a71a:	e757      	b.n	801a5cc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801a71c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801a71e:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801a720:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801a724:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801a726:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a72a:	1427      	asrs	r7, r4, #16
 801a72c:	142b      	asrs	r3, r5, #16
 801a72e:	fb01 7303 	mla	r3, r1, r3, r7
 801a732:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801a734:	18e7      	adds	r7, r4, r3
 801a736:	5ce3      	ldrb	r3, [r4, r3]
 801a738:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801a73c:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801a740:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801a744:	2a00      	cmp	r2, #0
 801a746:	f000 8137 	beq.w	801a9b8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801a74a:	f897 e001 	ldrb.w	lr, [r7, #1]
 801a74e:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801a752:	9410      	str	r4, [sp, #64]	; 0x40
 801a754:	0e24      	lsrs	r4, r4, #24
 801a756:	9417      	str	r4, [sp, #92]	; 0x5c
 801a758:	b170      	cbz	r0, 801a778 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801a75a:	eb07 0e01 	add.w	lr, r7, r1
 801a75e:	5c79      	ldrb	r1, [r7, r1]
 801a760:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801a764:	910b      	str	r1, [sp, #44]	; 0x2c
 801a766:	0e09      	lsrs	r1, r1, #24
 801a768:	9114      	str	r1, [sp, #80]	; 0x50
 801a76a:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801a76e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801a772:	9111      	str	r1, [sp, #68]	; 0x44
 801a774:	0e09      	lsrs	r1, r1, #24
 801a776:	9118      	str	r1, [sp, #96]	; 0x60
 801a778:	b292      	uxth	r2, r2
 801a77a:	b280      	uxth	r0, r0
 801a77c:	fb02 f800 	mul.w	r8, r2, r0
 801a780:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801a784:	0112      	lsls	r2, r2, #4
 801a786:	eba2 0e08 	sub.w	lr, r2, r8
 801a78a:	b280      	uxth	r0, r0
 801a78c:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801a790:	9917      	ldr	r1, [sp, #92]	; 0x5c
 801a792:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801a794:	fa1f fe8e 	uxth.w	lr, lr
 801a798:	1a12      	subs	r2, r2, r0
 801a79a:	b292      	uxth	r2, r2
 801a79c:	fb0e f101 	mul.w	r1, lr, r1
 801a7a0:	fb02 110c 	mla	r1, r2, ip, r1
 801a7a4:	fb00 1104 	mla	r1, r0, r4, r1
 801a7a8:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801a7aa:	fb08 1104 	mla	r1, r8, r4, r1
 801a7ae:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801a7b2:	2900      	cmp	r1, #0
 801a7b4:	f000 80f5 	beq.w	801a9a2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801a7b8:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801a7bc:	d019      	beq.n	801a7f2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 801a7be:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801a7c2:	fb0c fa0a 	mul.w	sl, ip, sl
 801a7c6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a7ca:	fb0c fc03 	mul.w	ip, ip, r3
 801a7ce:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801a7d2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a7d6:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801a7da:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801a7de:	4453      	add	r3, sl
 801a7e0:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801a7e4:	0a1b      	lsrs	r3, r3, #8
 801a7e6:	0a3f      	lsrs	r7, r7, #8
 801a7e8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a7ec:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801a7f0:	433b      	orrs	r3, r7
 801a7f2:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801a7f4:	2cff      	cmp	r4, #255	; 0xff
 801a7f6:	d020      	beq.n	801a83a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 801a7f8:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801a7fa:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801a7fe:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801a800:	4367      	muls	r7, r4
 801a802:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801a804:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801a808:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801a80a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801a80e:	fb04 fa0a 	mul.w	sl, r4, sl
 801a812:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801a816:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a81a:	44bc      	add	ip, r7
 801a81c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801a820:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801a824:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a828:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a82c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a830:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a834:	ea4c 040a 	orr.w	r4, ip, sl
 801a838:	9410      	str	r4, [sp, #64]	; 0x40
 801a83a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801a83c:	2cff      	cmp	r4, #255	; 0xff
 801a83e:	d020      	beq.n	801a882 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 801a840:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801a842:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801a846:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801a848:	4367      	muls	r7, r4
 801a84a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801a84c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801a850:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801a852:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801a856:	fb04 fa0a 	mul.w	sl, r4, sl
 801a85a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801a85e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a862:	44bc      	add	ip, r7
 801a864:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801a868:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801a86c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a870:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a874:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a878:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a87c:	ea4c 040a 	orr.w	r4, ip, sl
 801a880:	940b      	str	r4, [sp, #44]	; 0x2c
 801a882:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801a884:	2cff      	cmp	r4, #255	; 0xff
 801a886:	d020      	beq.n	801a8ca <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 801a888:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801a88a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801a88e:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801a890:	4367      	muls	r7, r4
 801a892:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801a894:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801a898:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801a89a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801a89e:	fb04 fa0a 	mul.w	sl, r4, sl
 801a8a2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801a8a6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a8aa:	44bc      	add	ip, r7
 801a8ac:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801a8b0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801a8b4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a8b8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a8bc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a8c0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a8c4:	ea4c 040a 	orr.w	r4, ip, sl
 801a8c8:	9411      	str	r4, [sp, #68]	; 0x44
 801a8ca:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801a8cc:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801a8d0:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801a8d2:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801a8d6:	fb0e f707 	mul.w	r7, lr, r7
 801a8da:	fb02 770c 	mla	r7, r2, ip, r7
 801a8de:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801a8e2:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801a8e4:	fb00 770c 	mla	r7, r0, ip, r7
 801a8e8:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801a8ec:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801a8ee:	fb08 770c 	mla	r7, r8, ip, r7
 801a8f2:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801a8f6:	fb0e fe0c 	mul.w	lr, lr, ip
 801a8fa:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a8fe:	fb02 e303 	mla	r3, r2, r3, lr
 801a902:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801a904:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801a906:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801a90a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801a90c:	fb00 330a 	mla	r3, r0, sl, r3
 801a910:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801a914:	fb08 3c0c 	mla	ip, r8, ip, r3
 801a918:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801a91a:	f8b9 0000 	ldrh.w	r0, [r9]
 801a91e:	434b      	muls	r3, r1
 801a920:	0a3f      	lsrs	r7, r7, #8
 801a922:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a926:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801a92a:	1c59      	adds	r1, r3, #1
 801a92c:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801a930:	ea47 070c 	orr.w	r7, r7, ip
 801a934:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801a938:	1202      	asrs	r2, r0, #8
 801a93a:	0c3b      	lsrs	r3, r7, #16
 801a93c:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801a940:	b2c9      	uxtb	r1, r1
 801a942:	fb13 f304 	smulbb	r3, r3, r4
 801a946:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801a94a:	fb02 3201 	mla	r2, r2, r1, r3
 801a94e:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801a952:	10c3      	asrs	r3, r0, #3
 801a954:	b2ff      	uxtb	r7, r7
 801a956:	00c0      	lsls	r0, r0, #3
 801a958:	b292      	uxth	r2, r2
 801a95a:	fb1c fc04 	smulbb	ip, ip, r4
 801a95e:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801a962:	b2c0      	uxtb	r0, r0
 801a964:	fb17 f704 	smulbb	r7, r7, r4
 801a968:	fb03 c301 	mla	r3, r3, r1, ip
 801a96c:	fb00 7001 	mla	r0, r0, r1, r7
 801a970:	f102 0c01 	add.w	ip, r2, #1
 801a974:	b280      	uxth	r0, r0
 801a976:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801a97a:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 801a97e:	1c42      	adds	r2, r0, #1
 801a980:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801a984:	b29b      	uxth	r3, r3
 801a986:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801a98a:	ea42 020c 	orr.w	r2, r2, ip
 801a98e:	f103 0c01 	add.w	ip, r3, #1
 801a992:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801a996:	095b      	lsrs	r3, r3, #5
 801a998:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a99c:	431a      	orrs	r2, r3
 801a99e:	f8a9 2000 	strh.w	r2, [r9]
 801a9a2:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801a9a4:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801a9a6:	441a      	add	r2, r3
 801a9a8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801a9aa:	9229      	str	r2, [sp, #164]	; 0xa4
 801a9ac:	f109 0902 	add.w	r9, r9, #2
 801a9b0:	441d      	add	r5, r3
 801a9b2:	f10b 3bff 	add.w	fp, fp, #4294967295
 801a9b6:	e63d      	b.n	801a634 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801a9b8:	2800      	cmp	r0, #0
 801a9ba:	f43f aedd 	beq.w	801a778 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801a9be:	5c79      	ldrb	r1, [r7, r1]
 801a9c0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801a9c4:	910b      	str	r1, [sp, #44]	; 0x2c
 801a9c6:	0e09      	lsrs	r1, r1, #24
 801a9c8:	9114      	str	r1, [sp, #80]	; 0x50
 801a9ca:	e6d5      	b.n	801a778 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801a9cc:	b01f      	add	sp, #124	; 0x7c
 801a9ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a9d2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 801a9d2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a9d6:	b089      	sub	sp, #36	; 0x24
 801a9d8:	9101      	str	r1, [sp, #4]
 801a9da:	9801      	ldr	r0, [sp, #4]
 801a9dc:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
 801a9e0:	8800      	ldrh	r0, [r0, #0]
 801a9e2:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
 801a9e6:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 801a9ea:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 801a9ee:	1206      	asrs	r6, r0, #8
 801a9f0:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
 801a9f4:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801a9f8:	9602      	str	r6, [sp, #8]
 801a9fa:	10c6      	asrs	r6, r0, #3
 801a9fc:	00c0      	lsls	r0, r0, #3
 801a9fe:	b2c0      	uxtb	r0, r0
 801aa00:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801aa04:	9004      	str	r0, [sp, #16]
 801aa06:	2f00      	cmp	r7, #0
 801aa08:	fb07 100c 	mla	r0, r7, ip, r1
 801aa0c:	9603      	str	r6, [sp, #12]
 801aa0e:	eb02 0e00 	add.w	lr, r2, r0
 801aa12:	f2c0 810a 	blt.w	801ac2a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801aa16:	45b8      	cmp	r8, r7
 801aa18:	f340 8107 	ble.w	801ac2a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801aa1c:	2900      	cmp	r1, #0
 801aa1e:	f2c0 8102 	blt.w	801ac26 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801aa22:	458c      	cmp	ip, r1
 801aa24:	f340 80ff 	ble.w	801ac26 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801aa28:	5c12      	ldrb	r2, [r2, r0]
 801aa2a:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 801aa2e:	1c4a      	adds	r2, r1, #1
 801aa30:	f100 80fe 	bmi.w	801ac30 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801aa34:	4594      	cmp	ip, r2
 801aa36:	f340 80fb 	ble.w	801ac30 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801aa3a:	2d00      	cmp	r5, #0
 801aa3c:	f000 80fa 	beq.w	801ac34 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 801aa40:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801aa44:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 801aa48:	3701      	adds	r7, #1
 801aa4a:	f100 80f7 	bmi.w	801ac3c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801aa4e:	45b8      	cmp	r8, r7
 801aa50:	f340 80f4 	ble.w	801ac3c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801aa54:	2c00      	cmp	r4, #0
 801aa56:	f000 80f4 	beq.w	801ac42 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 801aa5a:	2900      	cmp	r1, #0
 801aa5c:	eb0e 020c 	add.w	r2, lr, ip
 801aa60:	f2c0 80ea 	blt.w	801ac38 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801aa64:	458c      	cmp	ip, r1
 801aa66:	f340 80e7 	ble.w	801ac38 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801aa6a:	f81e 700c 	ldrb.w	r7, [lr, ip]
 801aa6e:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 801aa72:	3101      	adds	r1, #1
 801aa74:	f100 80e8 	bmi.w	801ac48 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801aa78:	458c      	cmp	ip, r1
 801aa7a:	f340 80e5 	ble.w	801ac48 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801aa7e:	2d00      	cmp	r5, #0
 801aa80:	f000 80e4 	beq.w	801ac4c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 801aa84:	7852      	ldrb	r2, [r2, #1]
 801aa86:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801aa8a:	0e0b      	lsrs	r3, r1, #24
 801aa8c:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 801aa90:	9300      	str	r3, [sp, #0]
 801aa92:	b2a4      	uxth	r4, r4
 801aa94:	b2ab      	uxth	r3, r5
 801aa96:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 801aa9a:	fb03 f904 	mul.w	r9, r3, r4
 801aa9e:	fb0a f505 	mul.w	r5, sl, r5
 801aaa2:	011b      	lsls	r3, r3, #4
 801aaa4:	eba3 0e09 	sub.w	lr, r3, r9
 801aaa8:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
 801aaac:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 801aab0:	0a28      	lsrs	r0, r5, #8
 801aab2:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801aab6:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 801aaba:	4405      	add	r5, r0
 801aabc:	0a2d      	lsrs	r5, r5, #8
 801aabe:	fb0a f303 	mul.w	r3, sl, r3
 801aac2:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
 801aac6:	9005      	str	r0, [sp, #20]
 801aac8:	f503 7080 	add.w	r0, r3, #256	; 0x100
 801aacc:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801aad0:	0a1b      	lsrs	r3, r3, #8
 801aad2:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 801aad6:	9306      	str	r3, [sp, #24]
 801aad8:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
 801aadc:	fb0b f303 	mul.w	r3, fp, r3
 801aae0:	0a1d      	lsrs	r5, r3, #8
 801aae2:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801aae6:	ea4f 6817 	mov.w	r8, r7, lsr #24
 801aaea:	fb0b f606 	mul.w	r6, fp, r6
 801aaee:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 801aaf2:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 801aaf6:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801aafa:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801aafe:	fb08 f707 	mul.w	r7, r8, r7
 801ab02:	441d      	add	r5, r3
 801ab04:	f506 7380 	add.w	r3, r6, #256	; 0x100
 801ab08:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801ab0c:	f507 7380 	add.w	r3, r7, #256	; 0x100
 801ab10:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 801ab14:	fb08 fc0c 	mul.w	ip, r8, ip
 801ab18:	0a1b      	lsrs	r3, r3, #8
 801ab1a:	9307      	str	r3, [sp, #28]
 801ab1c:	ea4f 201c 	mov.w	r0, ip, lsr #8
 801ab20:	0e0b      	lsrs	r3, r1, #24
 801ab22:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
 801ab26:	435f      	muls	r7, r3
 801ab28:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801ab2c:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801ab30:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 801ab34:	4460      	add	r0, ip
 801ab36:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801ab3a:	b2a4      	uxth	r4, r4
 801ab3c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801ab40:	0a2d      	lsrs	r5, r5, #8
 801ab42:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801ab46:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ab4a:	fa1f fe8e 	uxth.w	lr, lr
 801ab4e:	4359      	muls	r1, r3
 801ab50:	1b12      	subs	r2, r2, r4
 801ab52:	9b05      	ldr	r3, [sp, #20]
 801ab54:	44bc      	add	ip, r7
 801ab56:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801ab5a:	b292      	uxth	r2, r2
 801ab5c:	fb05 f50e 	mul.w	r5, r5, lr
 801ab60:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ab64:	fb03 5502 	mla	r5, r3, r2, r5
 801ab68:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ab6c:	9b06      	ldr	r3, [sp, #24]
 801ab6e:	f501 7780 	add.w	r7, r1, #256	; 0x100
 801ab72:	0a36      	lsrs	r6, r6, #8
 801ab74:	0a00      	lsrs	r0, r0, #8
 801ab76:	fb0c 5509 	mla	r5, ip, r9, r5
 801ab7a:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801ab7e:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801ab82:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801ab86:	fb00 5504 	mla	r5, r0, r4, r5
 801ab8a:	fb0e f606 	mul.w	r6, lr, r6
 801ab8e:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 801ab92:	0a09      	lsrs	r1, r1, #8
 801ab94:	9b07      	ldr	r3, [sp, #28]
 801ab96:	fb02 6000 	mla	r0, r2, r0, r6
 801ab9a:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801ab9e:	fb09 0001 	mla	r0, r9, r1, r0
 801aba2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801aba6:	fb0e fe0b 	mul.w	lr, lr, fp
 801abaa:	fb04 0003 	mla	r0, r4, r3, r0
 801abae:	fb02 e20a 	mla	r2, r2, sl, lr
 801abb2:	9b00      	ldr	r3, [sp, #0]
 801abb4:	fb04 2408 	mla	r4, r4, r8, r2
 801abb8:	fb09 4903 	mla	r9, r9, r3, r4
 801abbc:	ea6f 2929 	mvn.w	r9, r9, asr #8
 801abc0:	9b02      	ldr	r3, [sp, #8]
 801abc2:	9a04      	ldr	r2, [sp, #16]
 801abc4:	fa5f f989 	uxtb.w	r9, r9
 801abc8:	fb03 f109 	mul.w	r1, r3, r9
 801abcc:	9b03      	ldr	r3, [sp, #12]
 801abce:	0a2d      	lsrs	r5, r5, #8
 801abd0:	0a00      	lsrs	r0, r0, #8
 801abd2:	fb03 f309 	mul.w	r3, r3, r9
 801abd6:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801abda:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801abde:	4305      	orrs	r5, r0
 801abe0:	fb02 f909 	mul.w	r9, r2, r9
 801abe4:	1c58      	adds	r0, r3, #1
 801abe6:	1c4a      	adds	r2, r1, #1
 801abe8:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801abec:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801abf0:	0a2b      	lsrs	r3, r5, #8
 801abf2:	0c2a      	lsrs	r2, r5, #16
 801abf4:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801abf8:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 801abfc:	00db      	lsls	r3, r3, #3
 801abfe:	0212      	lsls	r2, r2, #8
 801ac00:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801ac04:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ac08:	4313      	orrs	r3, r2
 801ac0a:	f109 0201 	add.w	r2, r9, #1
 801ac0e:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 801ac12:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 801ac16:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801ac1a:	431d      	orrs	r5, r3
 801ac1c:	9b01      	ldr	r3, [sp, #4]
 801ac1e:	801d      	strh	r5, [r3, #0]
 801ac20:	b009      	add	sp, #36	; 0x24
 801ac22:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ac26:	2000      	movs	r0, #0
 801ac28:	e701      	b.n	801aa2e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 801ac2a:	2600      	movs	r6, #0
 801ac2c:	4630      	mov	r0, r6
 801ac2e:	e70b      	b.n	801aa48 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801ac30:	2600      	movs	r6, #0
 801ac32:	e709      	b.n	801aa48 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801ac34:	462e      	mov	r6, r5
 801ac36:	e707      	b.n	801aa48 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801ac38:	2700      	movs	r7, #0
 801ac3a:	e71a      	b.n	801aa72 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 801ac3c:	2100      	movs	r1, #0
 801ac3e:	460f      	mov	r7, r1
 801ac40:	e723      	b.n	801aa8a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801ac42:	4621      	mov	r1, r4
 801ac44:	4627      	mov	r7, r4
 801ac46:	e720      	b.n	801aa8a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801ac48:	2100      	movs	r1, #0
 801ac4a:	e71e      	b.n	801aa8a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801ac4c:	4629      	mov	r1, r5
 801ac4e:	e71c      	b.n	801aa8a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

0801ac50 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ac50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ac54:	b09b      	sub	sp, #108	; 0x6c
 801ac56:	9218      	str	r2, [sp, #96]	; 0x60
 801ac58:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801ac5a:	9116      	str	r1, [sp, #88]	; 0x58
 801ac5c:	9307      	str	r3, [sp, #28]
 801ac5e:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801ac62:	9019      	str	r0, [sp, #100]	; 0x64
 801ac64:	6850      	ldr	r0, [r2, #4]
 801ac66:	6812      	ldr	r2, [r2, #0]
 801ac68:	9d26      	ldr	r5, [sp, #152]	; 0x98
 801ac6a:	fb00 1303 	mla	r3, r0, r3, r1
 801ac6e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801ac72:	930a      	str	r3, [sp, #40]	; 0x28
 801ac74:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801ac76:	681b      	ldr	r3, [r3, #0]
 801ac78:	930f      	str	r3, [sp, #60]	; 0x3c
 801ac7a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801ac7c:	685e      	ldr	r6, [r3, #4]
 801ac7e:	3604      	adds	r6, #4
 801ac80:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801ac82:	2b00      	cmp	r3, #0
 801ac84:	dc03      	bgt.n	801ac8e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801ac86:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801ac88:	2b00      	cmp	r3, #0
 801ac8a:	f340 8373 	ble.w	801b374 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801ac8e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801ac90:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ac94:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ac98:	1e48      	subs	r0, r1, #1
 801ac9a:	1e57      	subs	r7, r2, #1
 801ac9c:	9b07      	ldr	r3, [sp, #28]
 801ac9e:	2b00      	cmp	r3, #0
 801aca0:	f340 8190 	ble.w	801afc4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801aca4:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801aca6:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801acaa:	ea4f 4325 	mov.w	r3, r5, asr #16
 801acae:	d406      	bmi.n	801acbe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801acb0:	4584      	cmp	ip, r0
 801acb2:	da04      	bge.n	801acbe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801acb4:	2b00      	cmp	r3, #0
 801acb6:	db02      	blt.n	801acbe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801acb8:	42bb      	cmp	r3, r7
 801acba:	f2c0 8184 	blt.w	801afc6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 801acbe:	f11c 0c01 	adds.w	ip, ip, #1
 801acc2:	f100 8172 	bmi.w	801afaa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801acc6:	4561      	cmp	r1, ip
 801acc8:	f2c0 816f 	blt.w	801afaa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801accc:	3301      	adds	r3, #1
 801acce:	f100 816c 	bmi.w	801afaa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801acd2:	429a      	cmp	r2, r3
 801acd4:	f2c0 8169 	blt.w	801afaa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801acd8:	9b07      	ldr	r3, [sp, #28]
 801acda:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801acdc:	9317      	str	r3, [sp, #92]	; 0x5c
 801acde:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801ace0:	2b00      	cmp	r3, #0
 801ace2:	f340 818e 	ble.w	801b002 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 801ace6:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801ace8:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801acec:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801acee:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 801acf2:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801acf4:	141b      	asrs	r3, r3, #16
 801acf6:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801acfa:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801acfe:	f100 81d1 	bmi.w	801b0a4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801ad02:	f101 38ff 	add.w	r8, r1, #4294967295
 801ad06:	4543      	cmp	r3, r8
 801ad08:	f280 81cc 	bge.w	801b0a4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801ad0c:	f1bc 0f00 	cmp.w	ip, #0
 801ad10:	f2c0 81c8 	blt.w	801b0a4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801ad14:	f10e 38ff 	add.w	r8, lr, #4294967295
 801ad18:	45c4      	cmp	ip, r8
 801ad1a:	f280 81c3 	bge.w	801b0a4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801ad1e:	b209      	sxth	r1, r1
 801ad20:	fb0c 3301 	mla	r3, ip, r1, r3
 801ad24:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801ad26:	eb04 0803 	add.w	r8, r4, r3
 801ad2a:	5ce3      	ldrb	r3, [r4, r3]
 801ad2c:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801ad30:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801ad34:	2a00      	cmp	r2, #0
 801ad36:	f000 81aa 	beq.w	801b08e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 801ad3a:	f898 c001 	ldrb.w	ip, [r8, #1]
 801ad3e:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801ad42:	940b      	str	r4, [sp, #44]	; 0x2c
 801ad44:	0e24      	lsrs	r4, r4, #24
 801ad46:	9412      	str	r4, [sp, #72]	; 0x48
 801ad48:	b178      	cbz	r0, 801ad6a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801ad4a:	eb08 0c01 	add.w	ip, r8, r1
 801ad4e:	f818 1001 	ldrb.w	r1, [r8, r1]
 801ad52:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801ad56:	9108      	str	r1, [sp, #32]
 801ad58:	0e09      	lsrs	r1, r1, #24
 801ad5a:	9110      	str	r1, [sp, #64]	; 0x40
 801ad5c:	f89c 1001 	ldrb.w	r1, [ip, #1]
 801ad60:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801ad64:	910c      	str	r1, [sp, #48]	; 0x30
 801ad66:	0e09      	lsrs	r1, r1, #24
 801ad68:	9113      	str	r1, [sp, #76]	; 0x4c
 801ad6a:	b292      	uxth	r2, r2
 801ad6c:	b280      	uxth	r0, r0
 801ad6e:	fb02 f900 	mul.w	r9, r2, r0
 801ad72:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801ad76:	0112      	lsls	r2, r2, #4
 801ad78:	eba2 0809 	sub.w	r8, r2, r9
 801ad7c:	b280      	uxth	r0, r0
 801ad7e:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801ad82:	9912      	ldr	r1, [sp, #72]	; 0x48
 801ad84:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801ad86:	fa1f f888 	uxth.w	r8, r8
 801ad8a:	1a12      	subs	r2, r2, r0
 801ad8c:	b292      	uxth	r2, r2
 801ad8e:	fb08 f101 	mul.w	r1, r8, r1
 801ad92:	fb02 110e 	mla	r1, r2, lr, r1
 801ad96:	fb00 1104 	mla	r1, r0, r4, r1
 801ad9a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801ad9c:	fb09 1104 	mla	r1, r9, r4, r1
 801ada0:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801ada4:	2900      	cmp	r1, #0
 801ada6:	f000 80f5 	beq.w	801af94 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801adaa:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801adae:	d01b      	beq.n	801ade8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801adb0:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801adb4:	fb0e fa0a 	mul.w	sl, lr, sl
 801adb8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801adbc:	fb0e fe03 	mul.w	lr, lr, r3
 801adc0:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801adc4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801adc8:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801adcc:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801add0:	4453      	add	r3, sl
 801add2:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801add6:	0a1b      	lsrs	r3, r3, #8
 801add8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801addc:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801ade0:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801ade4:	ea43 030c 	orr.w	r3, r3, ip
 801ade8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801adea:	2cff      	cmp	r4, #255	; 0xff
 801adec:	d021      	beq.n	801ae32 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 801adee:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801adf0:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801adf4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801adf6:	fb04 fb0b 	mul.w	fp, r4, fp
 801adfa:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801adfc:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801ae00:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801ae02:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ae06:	fb04 fa0a 	mul.w	sl, r4, sl
 801ae0a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ae0e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801ae12:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801ae16:	44de      	add	lr, fp
 801ae18:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801ae1c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ae20:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ae24:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ae28:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ae2c:	ea4e 040a 	orr.w	r4, lr, sl
 801ae30:	940b      	str	r4, [sp, #44]	; 0x2c
 801ae32:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801ae34:	2cff      	cmp	r4, #255	; 0xff
 801ae36:	d021      	beq.n	801ae7c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 801ae38:	9c08      	ldr	r4, [sp, #32]
 801ae3a:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801ae3e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801ae40:	fb04 fb0b 	mul.w	fp, r4, fp
 801ae44:	9c08      	ldr	r4, [sp, #32]
 801ae46:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801ae4a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801ae4c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ae50:	fb04 fa0a 	mul.w	sl, r4, sl
 801ae54:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ae58:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801ae5c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801ae60:	44de      	add	lr, fp
 801ae62:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801ae66:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ae6a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ae6e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ae72:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ae76:	ea4e 040a 	orr.w	r4, lr, sl
 801ae7a:	9408      	str	r4, [sp, #32]
 801ae7c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801ae7e:	2cff      	cmp	r4, #255	; 0xff
 801ae80:	d021      	beq.n	801aec6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801ae82:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801ae84:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801ae88:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801ae8a:	fb04 fb0b 	mul.w	fp, r4, fp
 801ae8e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801ae90:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801ae94:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801ae96:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ae9a:	fb04 fa0a 	mul.w	sl, r4, sl
 801ae9e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801aea2:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801aea6:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801aeaa:	44de      	add	lr, fp
 801aeac:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801aeb0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801aeb4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801aeb8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801aebc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801aec0:	ea4e 040a 	orr.w	r4, lr, sl
 801aec4:	940c      	str	r4, [sp, #48]	; 0x30
 801aec6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801aec8:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801aecc:	9c08      	ldr	r4, [sp, #32]
 801aece:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801aed2:	fb08 fc0c 	mul.w	ip, r8, ip
 801aed6:	fb02 cc0e 	mla	ip, r2, lr, ip
 801aeda:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801aede:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801aee0:	fb00 cc0e 	mla	ip, r0, lr, ip
 801aee4:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801aee8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801aeea:	fb09 cc0e 	mla	ip, r9, lr, ip
 801aeee:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801aef2:	fb08 f80e 	mul.w	r8, r8, lr
 801aef6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801aefa:	fb02 8303 	mla	r3, r2, r3, r8
 801aefe:	9a08      	ldr	r2, [sp, #32]
 801af00:	f8b7 8000 	ldrh.w	r8, [r7]
 801af04:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801af08:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801af0a:	fb00 330a 	mla	r3, r0, sl, r3
 801af0e:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 801af12:	fb09 3900 	mla	r9, r9, r0, r3
 801af16:	43c9      	mvns	r1, r1
 801af18:	ea4f 2228 	mov.w	r2, r8, asr #8
 801af1c:	fa5f fe81 	uxtb.w	lr, r1
 801af20:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801af24:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801af28:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801af2c:	fb02 f20e 	mul.w	r2, r2, lr
 801af30:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801af34:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801af38:	ea4c 0c09 	orr.w	ip, ip, r9
 801af3c:	1c53      	adds	r3, r2, #1
 801af3e:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 801af42:	ea4f 00e8 	mov.w	r0, r8, asr #3
 801af46:	ea4f 431c 	mov.w	r3, ip, lsr #16
 801af4a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801af4e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801af52:	4a63      	ldr	r2, [pc, #396]	; (801b0e0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 801af54:	fb00 f00e 	mul.w	r0, r0, lr
 801af58:	b2db      	uxtb	r3, r3
 801af5a:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 801af5e:	1c43      	adds	r3, r0, #1
 801af60:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801af64:	ea4f 231c 	mov.w	r3, ip, lsr #8
 801af68:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 801af6c:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801af70:	b2c9      	uxtb	r1, r1
 801af72:	00db      	lsls	r3, r3, #3
 801af74:	fb01 f10e 	mul.w	r1, r1, lr
 801af78:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801af7c:	4313      	orrs	r3, r2
 801af7e:	1c4a      	adds	r2, r1, #1
 801af80:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801af84:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801af88:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801af8c:	ea4c 0c03 	orr.w	ip, ip, r3
 801af90:	f8a7 c000 	strh.w	ip, [r7]
 801af94:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801af96:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801af98:	441a      	add	r2, r3
 801af9a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801af9c:	9225      	str	r2, [sp, #148]	; 0x94
 801af9e:	441d      	add	r5, r3
 801afa0:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801afa2:	3b01      	subs	r3, #1
 801afa4:	3702      	adds	r7, #2
 801afa6:	9317      	str	r3, [sp, #92]	; 0x5c
 801afa8:	e699      	b.n	801acde <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801afaa:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801afac:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801afae:	441c      	add	r4, r3
 801afb0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801afb2:	9425      	str	r4, [sp, #148]	; 0x94
 801afb4:	441d      	add	r5, r3
 801afb6:	9b07      	ldr	r3, [sp, #28]
 801afb8:	3b01      	subs	r3, #1
 801afba:	9307      	str	r3, [sp, #28]
 801afbc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801afbe:	3302      	adds	r3, #2
 801afc0:	930a      	str	r3, [sp, #40]	; 0x28
 801afc2:	e66b      	b.n	801ac9c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801afc4:	d024      	beq.n	801b010 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 801afc6:	9b07      	ldr	r3, [sp, #28]
 801afc8:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801afca:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801afcc:	3b01      	subs	r3, #1
 801afce:	fb00 4003 	mla	r0, r0, r3, r4
 801afd2:	1400      	asrs	r0, r0, #16
 801afd4:	f53f ae80 	bmi.w	801acd8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801afd8:	3901      	subs	r1, #1
 801afda:	4288      	cmp	r0, r1
 801afdc:	f6bf ae7c 	bge.w	801acd8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801afe0:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801afe2:	fb01 5303 	mla	r3, r1, r3, r5
 801afe6:	141b      	asrs	r3, r3, #16
 801afe8:	f53f ae76 	bmi.w	801acd8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801afec:	3a01      	subs	r2, #1
 801afee:	4293      	cmp	r3, r2
 801aff0:	f6bf ae72 	bge.w	801acd8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801aff4:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801aff8:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 801affc:	f1bb 0f00 	cmp.w	fp, #0
 801b000:	dc70      	bgt.n	801b0e4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801b002:	9b07      	ldr	r3, [sp, #28]
 801b004:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801b008:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b00a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801b00e:	930a      	str	r3, [sp, #40]	; 0x28
 801b010:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801b012:	2b00      	cmp	r3, #0
 801b014:	f340 81ae 	ble.w	801b374 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801b018:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b01c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801b020:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801b024:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801b026:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b02a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b02e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b032:	eef0 6a62 	vmov.f32	s13, s5
 801b036:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b03a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b03e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b042:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 801b046:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b04a:	eef0 6a43 	vmov.f32	s13, s6
 801b04e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b052:	ee12 2a90 	vmov	r2, s5
 801b056:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b05a:	fb92 f3f3 	sdiv	r3, r2, r3
 801b05e:	ee13 2a10 	vmov	r2, s6
 801b062:	9327      	str	r3, [sp, #156]	; 0x9c
 801b064:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801b066:	fb92 f3f3 	sdiv	r3, r2, r3
 801b06a:	9328      	str	r3, [sp, #160]	; 0xa0
 801b06c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801b06e:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801b070:	3b01      	subs	r3, #1
 801b072:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b076:	9316      	str	r3, [sp, #88]	; 0x58
 801b078:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801b07a:	bf08      	it	eq
 801b07c:	4613      	moveq	r3, r2
 801b07e:	ee16 5a90 	vmov	r5, s13
 801b082:	9307      	str	r3, [sp, #28]
 801b084:	eeb0 3a67 	vmov.f32	s6, s15
 801b088:	eef0 2a47 	vmov.f32	s5, s14
 801b08c:	e5f8      	b.n	801ac80 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801b08e:	2800      	cmp	r0, #0
 801b090:	f43f ae6b 	beq.w	801ad6a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801b094:	f818 1001 	ldrb.w	r1, [r8, r1]
 801b098:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b09c:	9108      	str	r1, [sp, #32]
 801b09e:	0e09      	lsrs	r1, r1, #24
 801b0a0:	9110      	str	r1, [sp, #64]	; 0x40
 801b0a2:	e662      	b.n	801ad6a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801b0a4:	f113 0801 	adds.w	r8, r3, #1
 801b0a8:	f53f af74 	bmi.w	801af94 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801b0ac:	4541      	cmp	r1, r8
 801b0ae:	f6ff af71 	blt.w	801af94 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801b0b2:	f11c 0801 	adds.w	r8, ip, #1
 801b0b6:	f53f af6d 	bmi.w	801af94 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801b0ba:	45c6      	cmp	lr, r8
 801b0bc:	f6ff af6a 	blt.w	801af94 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801b0c0:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 801b0c4:	b209      	sxth	r1, r1
 801b0c6:	fa0f f38e 	sxth.w	r3, lr
 801b0ca:	e9cd 2004 	strd	r2, r0, [sp, #16]
 801b0ce:	9301      	str	r3, [sp, #4]
 801b0d0:	9100      	str	r1, [sp, #0]
 801b0d2:	4633      	mov	r3, r6
 801b0d4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801b0d6:	9819      	ldr	r0, [sp, #100]	; 0x64
 801b0d8:	4639      	mov	r1, r7
 801b0da:	f7ff fc7a 	bl	801a9d2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 801b0de:	e759      	b.n	801af94 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801b0e0:	fffff800 	.word	0xfffff800
 801b0e4:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801b0e6:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801b0e8:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801b0ec:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b0ee:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b0f2:	1427      	asrs	r7, r4, #16
 801b0f4:	142b      	asrs	r3, r5, #16
 801b0f6:	fb01 7303 	mla	r3, r1, r3, r7
 801b0fa:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801b0fc:	18e7      	adds	r7, r4, r3
 801b0fe:	5ce3      	ldrb	r3, [r4, r3]
 801b100:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801b104:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801b108:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801b10c:	2a00      	cmp	r2, #0
 801b10e:	f000 8127 	beq.w	801b360 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801b112:	f897 e001 	ldrb.w	lr, [r7, #1]
 801b116:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801b11a:	940d      	str	r4, [sp, #52]	; 0x34
 801b11c:	0e24      	lsrs	r4, r4, #24
 801b11e:	9414      	str	r4, [sp, #80]	; 0x50
 801b120:	b170      	cbz	r0, 801b140 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801b122:	eb07 0e01 	add.w	lr, r7, r1
 801b126:	5c79      	ldrb	r1, [r7, r1]
 801b128:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b12c:	9109      	str	r1, [sp, #36]	; 0x24
 801b12e:	0e09      	lsrs	r1, r1, #24
 801b130:	9111      	str	r1, [sp, #68]	; 0x44
 801b132:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801b136:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b13a:	910e      	str	r1, [sp, #56]	; 0x38
 801b13c:	0e09      	lsrs	r1, r1, #24
 801b13e:	9115      	str	r1, [sp, #84]	; 0x54
 801b140:	b292      	uxth	r2, r2
 801b142:	b280      	uxth	r0, r0
 801b144:	fb02 f800 	mul.w	r8, r2, r0
 801b148:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801b14c:	0112      	lsls	r2, r2, #4
 801b14e:	eba2 0e08 	sub.w	lr, r2, r8
 801b152:	b280      	uxth	r0, r0
 801b154:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801b158:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b15a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801b15c:	fa1f fe8e 	uxth.w	lr, lr
 801b160:	1a09      	subs	r1, r1, r0
 801b162:	b289      	uxth	r1, r1
 801b164:	fb0e f202 	mul.w	r2, lr, r2
 801b168:	fb01 220c 	mla	r2, r1, ip, r2
 801b16c:	fb00 2204 	mla	r2, r0, r4, r2
 801b170:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801b172:	fb08 2204 	mla	r2, r8, r4, r2
 801b176:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801b17a:	2a00      	cmp	r2, #0
 801b17c:	f000 80e5 	beq.w	801b34a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 801b180:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801b184:	d019      	beq.n	801b1ba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 801b186:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801b18a:	fb0c fa0a 	mul.w	sl, ip, sl
 801b18e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b192:	fb0c fc03 	mul.w	ip, ip, r3
 801b196:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801b19a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b19e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801b1a2:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801b1a6:	4453      	add	r3, sl
 801b1a8:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801b1ac:	0a1b      	lsrs	r3, r3, #8
 801b1ae:	0a3f      	lsrs	r7, r7, #8
 801b1b0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b1b4:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801b1b8:	433b      	orrs	r3, r7
 801b1ba:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b1bc:	2cff      	cmp	r4, #255	; 0xff
 801b1be:	d020      	beq.n	801b202 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 801b1c0:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801b1c2:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801b1c6:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b1c8:	4367      	muls	r7, r4
 801b1ca:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801b1cc:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b1d0:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b1d2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b1d6:	fb04 fa0a 	mul.w	sl, r4, sl
 801b1da:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b1de:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b1e2:	44bc      	add	ip, r7
 801b1e4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801b1e8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b1ec:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b1f0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b1f4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b1f8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b1fc:	ea4c 040a 	orr.w	r4, ip, sl
 801b200:	940d      	str	r4, [sp, #52]	; 0x34
 801b202:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801b204:	2cff      	cmp	r4, #255	; 0xff
 801b206:	d020      	beq.n	801b24a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 801b208:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801b20a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801b20e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801b210:	4367      	muls	r7, r4
 801b212:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801b214:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b218:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801b21a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b21e:	fb04 fa0a 	mul.w	sl, r4, sl
 801b222:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b226:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b22a:	44bc      	add	ip, r7
 801b22c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801b230:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b234:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b238:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b23c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b240:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b244:	ea4c 040a 	orr.w	r4, ip, sl
 801b248:	9409      	str	r4, [sp, #36]	; 0x24
 801b24a:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801b24c:	2cff      	cmp	r4, #255	; 0xff
 801b24e:	d020      	beq.n	801b292 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 801b250:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801b252:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801b256:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801b258:	4367      	muls	r7, r4
 801b25a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801b25c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b260:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801b262:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b266:	fb04 fa0a 	mul.w	sl, r4, sl
 801b26a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b26e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b272:	44bc      	add	ip, r7
 801b274:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801b278:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b27c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b280:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b284:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b288:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b28c:	ea4c 040a 	orr.w	r4, ip, sl
 801b290:	940e      	str	r4, [sp, #56]	; 0x38
 801b292:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801b294:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801b298:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801b29a:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801b29e:	fb0e f707 	mul.w	r7, lr, r7
 801b2a2:	fb01 770c 	mla	r7, r1, ip, r7
 801b2a6:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801b2aa:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801b2ac:	fb00 770c 	mla	r7, r0, ip, r7
 801b2b0:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801b2b4:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801b2b6:	fb08 770c 	mla	r7, r8, ip, r7
 801b2ba:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801b2be:	fb0e fe0c 	mul.w	lr, lr, ip
 801b2c2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b2c6:	fb01 e303 	mla	r3, r1, r3, lr
 801b2ca:	9909      	ldr	r1, [sp, #36]	; 0x24
 801b2cc:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801b2d0:	990e      	ldr	r1, [sp, #56]	; 0x38
 801b2d2:	fb00 330a 	mla	r3, r0, sl, r3
 801b2d6:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801b2da:	fb08 3c0c 	mla	ip, r8, ip, r3
 801b2de:	f8b9 3000 	ldrh.w	r3, [r9]
 801b2e2:	43d2      	mvns	r2, r2
 801b2e4:	1218      	asrs	r0, r3, #8
 801b2e6:	b2d2      	uxtb	r2, r2
 801b2e8:	10d9      	asrs	r1, r3, #3
 801b2ea:	0a3f      	lsrs	r7, r7, #8
 801b2ec:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b2f0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801b2f4:	00db      	lsls	r3, r3, #3
 801b2f6:	4350      	muls	r0, r2
 801b2f8:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801b2fc:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801b300:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801b304:	b2db      	uxtb	r3, r3
 801b306:	ea47 070c 	orr.w	r7, r7, ip
 801b30a:	4351      	muls	r1, r2
 801b30c:	4353      	muls	r3, r2
 801b30e:	1c42      	adds	r2, r0, #1
 801b310:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801b314:	0c3a      	lsrs	r2, r7, #16
 801b316:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801b31a:	4a18      	ldr	r2, [pc, #96]	; (801b37c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 801b31c:	b2c0      	uxtb	r0, r0
 801b31e:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 801b322:	1c4a      	adds	r2, r1, #1
 801b324:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801b328:	0a3a      	lsrs	r2, r7, #8
 801b32a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801b32e:	00c9      	lsls	r1, r1, #3
 801b330:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801b334:	4301      	orrs	r1, r0
 801b336:	1c58      	adds	r0, r3, #1
 801b338:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801b33c:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801b340:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 801b344:	4308      	orrs	r0, r1
 801b346:	f8a9 0000 	strh.w	r0, [r9]
 801b34a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801b34c:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801b34e:	441a      	add	r2, r3
 801b350:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b352:	9225      	str	r2, [sp, #148]	; 0x94
 801b354:	f109 0902 	add.w	r9, r9, #2
 801b358:	441d      	add	r5, r3
 801b35a:	f10b 3bff 	add.w	fp, fp, #4294967295
 801b35e:	e64d      	b.n	801affc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 801b360:	2800      	cmp	r0, #0
 801b362:	f43f aeed 	beq.w	801b140 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801b366:	5c79      	ldrb	r1, [r7, r1]
 801b368:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b36c:	9109      	str	r1, [sp, #36]	; 0x24
 801b36e:	0e09      	lsrs	r1, r1, #24
 801b370:	9111      	str	r1, [sp, #68]	; 0x44
 801b372:	e6e5      	b.n	801b140 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801b374:	b01b      	add	sp, #108	; 0x6c
 801b376:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b37a:	bf00      	nop
 801b37c:	fffff800 	.word	0xfffff800

0801b380 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 801b380:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b384:	b085      	sub	sp, #20
 801b386:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 801b38a:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 801b38e:	9103      	str	r1, [sp, #12]
 801b390:	fb00 7406 	mla	r4, r0, r6, r7
 801b394:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 801b398:	2800      	cmp	r0, #0
 801b39a:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 801b39e:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 801b3a2:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 801b3a6:	9501      	str	r5, [sp, #4]
 801b3a8:	eb03 0904 	add.w	r9, r3, r4
 801b3ac:	f2c0 8150 	blt.w	801b650 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801b3b0:	4583      	cmp	fp, r0
 801b3b2:	f340 814d 	ble.w	801b650 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801b3b6:	2f00      	cmp	r7, #0
 801b3b8:	f2c0 8146 	blt.w	801b648 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801b3bc:	42be      	cmp	r6, r7
 801b3be:	f340 8143 	ble.w	801b648 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801b3c2:	f813 c004 	ldrb.w	ip, [r3, r4]
 801b3c6:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 801b3ca:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801b3ce:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 801b3d2:	4355      	muls	r5, r2
 801b3d4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b3d8:	f64f 041f 	movw	r4, #63519	; 0xf81f
 801b3dc:	fb0c f203 	mul.w	r2, ip, r3
 801b3e0:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801b3e4:	f605 0501 	addw	r5, r5, #2049	; 0x801
 801b3e8:	441d      	add	r5, r3
 801b3ea:	f102 0320 	add.w	r3, r2, #32
 801b3ee:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801b3f2:	0a1b      	lsrs	r3, r3, #8
 801b3f4:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801b3f8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b3fc:	431c      	orrs	r4, r3
 801b3fe:	1c7b      	adds	r3, r7, #1
 801b400:	f100 812b 	bmi.w	801b65a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801b404:	429e      	cmp	r6, r3
 801b406:	f340 8128 	ble.w	801b65a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801b40a:	2900      	cmp	r1, #0
 801b40c:	f000 8128 	beq.w	801b660 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 801b410:	9a01      	ldr	r2, [sp, #4]
 801b412:	f899 3001 	ldrb.w	r3, [r9, #1]
 801b416:	8855      	ldrh	r5, [r2, #2]
 801b418:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801b41c:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 801b420:	fb08 f802 	mul.w	r8, r8, r2
 801b424:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801b428:	f64f 021f 	movw	r2, #63519	; 0xf81f
 801b42c:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801b430:	435d      	muls	r5, r3
 801b432:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801b436:	44d0      	add	r8, sl
 801b438:	f105 0a20 	add.w	sl, r5, #32
 801b43c:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801b440:	0a2d      	lsrs	r5, r5, #8
 801b442:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801b446:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801b44a:	432a      	orrs	r2, r5
 801b44c:	3001      	adds	r0, #1
 801b44e:	f100 810d 	bmi.w	801b66c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801b452:	4583      	cmp	fp, r0
 801b454:	f340 810a 	ble.w	801b66c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801b458:	f1be 0f00 	cmp.w	lr, #0
 801b45c:	f000 810b 	beq.w	801b676 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 801b460:	2f00      	cmp	r7, #0
 801b462:	f2c0 8100 	blt.w	801b666 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801b466:	42be      	cmp	r6, r7
 801b468:	f340 80fd 	ble.w	801b666 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801b46c:	9801      	ldr	r0, [sp, #4]
 801b46e:	f819 5006 	ldrb.w	r5, [r9, r6]
 801b472:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801b476:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801b47a:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 801b47e:	fb0a fa00 	mul.w	sl, sl, r0
 801b482:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801b486:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801b48a:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801b48e:	fb05 f808 	mul.w	r8, r5, r8
 801b492:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 801b496:	4482      	add	sl, r0
 801b498:	f108 0020 	add.w	r0, r8, #32
 801b49c:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801b4a0:	0a00      	lsrs	r0, r0, #8
 801b4a2:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801b4a6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801b4aa:	ea4b 0b00 	orr.w	fp, fp, r0
 801b4ae:	3701      	adds	r7, #1
 801b4b0:	f100 80e6 	bmi.w	801b680 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801b4b4:	42be      	cmp	r6, r7
 801b4b6:	f340 80e3 	ble.w	801b680 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801b4ba:	2900      	cmp	r1, #0
 801b4bc:	f000 80e3 	beq.w	801b686 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 801b4c0:	3601      	adds	r6, #1
 801b4c2:	9801      	ldr	r0, [sp, #4]
 801b4c4:	f819 7006 	ldrb.w	r7, [r9, r6]
 801b4c8:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801b4cc:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801b4d0:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 801b4d4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801b4d8:	fb09 f906 	mul.w	r9, r9, r6
 801b4dc:	fb07 f800 	mul.w	r8, r7, r0
 801b4e0:	f64f 001f 	movw	r0, #63519	; 0xf81f
 801b4e4:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801b4e8:	f609 0901 	addw	r9, r9, #2049	; 0x801
 801b4ec:	44d1      	add	r9, sl
 801b4ee:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801b4f2:	f108 0020 	add.w	r0, r8, #32
 801b4f6:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801b4fa:	0a00      	lsrs	r0, r0, #8
 801b4fc:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801b500:	4330      	orrs	r0, r6
 801b502:	b28e      	uxth	r6, r1
 801b504:	fa1f f98e 	uxth.w	r9, lr
 801b508:	fb06 f809 	mul.w	r8, r6, r9
 801b50c:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801b510:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801b514:	0136      	lsls	r6, r6, #4
 801b516:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801b51a:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801b51e:	9601      	str	r6, [sp, #4]
 801b520:	ea4a 0404 	orr.w	r4, sl, r4
 801b524:	fa1f f689 	uxth.w	r6, r9
 801b528:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801b52c:	fb11 f90e 	smulbb	r9, r1, lr
 801b530:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801b534:	9602      	str	r6, [sp, #8]
 801b536:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801b53a:	4626      	mov	r6, r4
 801b53c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801b540:	f1ce 0410 	rsb	r4, lr, #16
 801b544:	1a64      	subs	r4, r4, r1
 801b546:	ea4a 0202 	orr.w	r2, sl, r2
 801b54a:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801b54e:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801b552:	434a      	muls	r2, r1
 801b554:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801b558:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801b55c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801b560:	fb04 2406 	mla	r4, r4, r6, r2
 801b564:	ea4a 0000 	orr.w	r0, sl, r0
 801b568:	fb09 4200 	mla	r2, r9, r0, r4
 801b56c:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801b570:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801b574:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801b578:	ea44 0b0b 	orr.w	fp, r4, fp
 801b57c:	9c01      	ldr	r4, [sp, #4]
 801b57e:	9e02      	ldr	r6, [sp, #8]
 801b580:	9903      	ldr	r1, [sp, #12]
 801b582:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
 801b586:	1ba4      	subs	r4, r4, r6
 801b588:	9e01      	ldr	r6, [sp, #4]
 801b58a:	8808      	ldrh	r0, [r1, #0]
 801b58c:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
 801b590:	eba6 0608 	sub.w	r6, r6, r8
 801b594:	b2b6      	uxth	r6, r6
 801b596:	b2a4      	uxth	r4, r4
 801b598:	4373      	muls	r3, r6
 801b59a:	fb0c 3304 	mla	r3, ip, r4, r3
 801b59e:	9c02      	ldr	r4, [sp, #8]
 801b5a0:	fb04 3505 	mla	r5, r4, r5, r3
 801b5a4:	fb08 5707 	mla	r7, r8, r7, r5
 801b5a8:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801b5ac:	b289      	uxth	r1, r1
 801b5ae:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801b5b2:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801b5b6:	434f      	muls	r7, r1
 801b5b8:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801b5bc:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801b5c0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b5c4:	1c7b      	adds	r3, r7, #1
 801b5c6:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801b5ca:	ea42 0e0e 	orr.w	lr, r2, lr
 801b5ce:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801b5d2:	fa1f f28e 	uxth.w	r2, lr
 801b5d6:	1203      	asrs	r3, r0, #8
 801b5d8:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 801b5dc:	b2ff      	uxtb	r7, r7
 801b5de:	1215      	asrs	r5, r2, #8
 801b5e0:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801b5e4:	fb13 f307 	smulbb	r3, r3, r7
 801b5e8:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801b5ec:	fb05 3501 	mla	r5, r5, r1, r3
 801b5f0:	10c3      	asrs	r3, r0, #3
 801b5f2:	10d4      	asrs	r4, r2, #3
 801b5f4:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801b5f8:	fb13 f307 	smulbb	r3, r3, r7
 801b5fc:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801b600:	fb04 3401 	mla	r4, r4, r1, r3
 801b604:	00c3      	lsls	r3, r0, #3
 801b606:	00d2      	lsls	r2, r2, #3
 801b608:	b2db      	uxtb	r3, r3
 801b60a:	fb13 f307 	smulbb	r3, r3, r7
 801b60e:	b2d2      	uxtb	r2, r2
 801b610:	fb02 3101 	mla	r1, r2, r1, r3
 801b614:	b2ad      	uxth	r5, r5
 801b616:	b289      	uxth	r1, r1
 801b618:	b2a4      	uxth	r4, r4
 801b61a:	1c6b      	adds	r3, r5, #1
 801b61c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801b620:	1c62      	adds	r2, r4, #1
 801b622:	1c4b      	adds	r3, r1, #1
 801b624:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801b628:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801b62c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801b630:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801b634:	0964      	lsrs	r4, r4, #5
 801b636:	432b      	orrs	r3, r5
 801b638:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801b63c:	9a03      	ldr	r2, [sp, #12]
 801b63e:	4323      	orrs	r3, r4
 801b640:	8013      	strh	r3, [r2, #0]
 801b642:	b005      	add	sp, #20
 801b644:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b648:	f04f 0c00 	mov.w	ip, #0
 801b64c:	4664      	mov	r4, ip
 801b64e:	e6d6      	b.n	801b3fe <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 801b650:	2300      	movs	r3, #0
 801b652:	469c      	mov	ip, r3
 801b654:	461a      	mov	r2, r3
 801b656:	461c      	mov	r4, r3
 801b658:	e6f8      	b.n	801b44c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801b65a:	2300      	movs	r3, #0
 801b65c:	461a      	mov	r2, r3
 801b65e:	e6f5      	b.n	801b44c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801b660:	460b      	mov	r3, r1
 801b662:	460a      	mov	r2, r1
 801b664:	e6f2      	b.n	801b44c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801b666:	2500      	movs	r5, #0
 801b668:	46ab      	mov	fp, r5
 801b66a:	e720      	b.n	801b4ae <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 801b66c:	2700      	movs	r7, #0
 801b66e:	463d      	mov	r5, r7
 801b670:	4638      	mov	r0, r7
 801b672:	46bb      	mov	fp, r7
 801b674:	e745      	b.n	801b502 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801b676:	4677      	mov	r7, lr
 801b678:	4675      	mov	r5, lr
 801b67a:	4670      	mov	r0, lr
 801b67c:	46f3      	mov	fp, lr
 801b67e:	e740      	b.n	801b502 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801b680:	2700      	movs	r7, #0
 801b682:	4638      	mov	r0, r7
 801b684:	e73d      	b.n	801b502 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801b686:	460f      	mov	r7, r1
 801b688:	4608      	mov	r0, r1
 801b68a:	e73a      	b.n	801b502 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

0801b68c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b68c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b690:	b097      	sub	sp, #92	; 0x5c
 801b692:	9214      	str	r2, [sp, #80]	; 0x50
 801b694:	9308      	str	r3, [sp, #32]
 801b696:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801b698:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801b69c:	9312      	str	r3, [sp, #72]	; 0x48
 801b69e:	9111      	str	r1, [sp, #68]	; 0x44
 801b6a0:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 801b6a4:	9015      	str	r0, [sp, #84]	; 0x54
 801b6a6:	6850      	ldr	r0, [r2, #4]
 801b6a8:	6812      	ldr	r2, [r2, #0]
 801b6aa:	fb00 1303 	mla	r3, r0, r3, r1
 801b6ae:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b6b2:	9309      	str	r3, [sp, #36]	; 0x24
 801b6b4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b6b6:	681b      	ldr	r3, [r3, #0]
 801b6b8:	930b      	str	r3, [sp, #44]	; 0x2c
 801b6ba:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b6bc:	685b      	ldr	r3, [r3, #4]
 801b6be:	930c      	str	r3, [sp, #48]	; 0x30
 801b6c0:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 801b6c4:	930a      	str	r3, [sp, #40]	; 0x28
 801b6c6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801b6c8:	2b00      	cmp	r3, #0
 801b6ca:	dc03      	bgt.n	801b6d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801b6cc:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801b6ce:	2b00      	cmp	r3, #0
 801b6d0:	f340 83cb 	ble.w	801be6a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 801b6d4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b6d6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b6da:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801b6de:	1e48      	subs	r0, r1, #1
 801b6e0:	1e55      	subs	r5, r2, #1
 801b6e2:	9b08      	ldr	r3, [sp, #32]
 801b6e4:	2b00      	cmp	r3, #0
 801b6e6:	f340 81a3 	ble.w	801ba30 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 801b6ea:	9e21      	ldr	r6, [sp, #132]	; 0x84
 801b6ec:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801b6ee:	1436      	asrs	r6, r6, #16
 801b6f0:	ea4f 4323 	mov.w	r3, r3, asr #16
 801b6f4:	d406      	bmi.n	801b704 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801b6f6:	4286      	cmp	r6, r0
 801b6f8:	da04      	bge.n	801b704 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801b6fa:	2b00      	cmp	r3, #0
 801b6fc:	db02      	blt.n	801b704 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801b6fe:	42ab      	cmp	r3, r5
 801b700:	f2c0 8197 	blt.w	801ba32 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801b704:	3601      	adds	r6, #1
 801b706:	f100 8184 	bmi.w	801ba12 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801b70a:	42b1      	cmp	r1, r6
 801b70c:	f2c0 8181 	blt.w	801ba12 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801b710:	3301      	adds	r3, #1
 801b712:	f100 817e 	bmi.w	801ba12 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801b716:	429a      	cmp	r2, r3
 801b718:	f2c0 817b 	blt.w	801ba12 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801b71c:	9b08      	ldr	r3, [sp, #32]
 801b71e:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801b720:	9313      	str	r3, [sp, #76]	; 0x4c
 801b722:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801b726:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801b728:	2b00      	cmp	r3, #0
 801b72a:	f340 81a4 	ble.w	801ba76 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801b72e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801b730:	9d21      	ldr	r5, [sp, #132]	; 0x84
 801b732:	1418      	asrs	r0, r3, #16
 801b734:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801b736:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801b73a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801b73c:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801b740:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b742:	142d      	asrs	r5, r5, #16
 801b744:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801b748:	f100 81f8 	bmi.w	801bb3c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801b74c:	f102 3eff 	add.w	lr, r2, #4294967295
 801b750:	4575      	cmp	r5, lr
 801b752:	f280 81f3 	bge.w	801bb3c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801b756:	2800      	cmp	r0, #0
 801b758:	f2c0 81f0 	blt.w	801bb3c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801b75c:	f103 3eff 	add.w	lr, r3, #4294967295
 801b760:	4570      	cmp	r0, lr
 801b762:	f280 81eb 	bge.w	801bb3c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801b766:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801b768:	b212      	sxth	r2, r2
 801b76a:	fb00 5002 	mla	r0, r0, r2, r5
 801b76e:	fa1f fe81 	uxth.w	lr, r1
 801b772:	eb03 0a00 	add.w	sl, r3, r0
 801b776:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801b77a:	f813 9000 	ldrb.w	r9, [r3, r0]
 801b77e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801b782:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 801b786:	b29b      	uxth	r3, r3
 801b788:	f1bc 0f00 	cmp.w	ip, #0
 801b78c:	f000 81b9 	beq.w	801bb02 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 801b790:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801b794:	940d      	str	r4, [sp, #52]	; 0x34
 801b796:	eb0a 0b02 	add.w	fp, sl, r2
 801b79a:	fa1f fa8c 	uxth.w	sl, ip
 801b79e:	fb0a fe0e 	mul.w	lr, sl, lr
 801b7a2:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801b7a6:	fa1f fa8a 	uxth.w	sl, sl
 801b7aa:	eba5 050e 	sub.w	r5, r5, lr
 801b7ae:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801b7b2:	940e      	str	r4, [sp, #56]	; 0x38
 801b7b4:	eba3 030a 	sub.w	r3, r3, sl
 801b7b8:	b2ad      	uxth	r5, r5
 801b7ba:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801b7bc:	b29b      	uxth	r3, r3
 801b7be:	fb08 f505 	mul.w	r5, r8, r5
 801b7c2:	fb09 5303 	mla	r3, r9, r3, r5
 801b7c6:	fb0a 3304 	mla	r3, sl, r4, r3
 801b7ca:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801b7cc:	fb0e 3304 	mla	r3, lr, r4, r3
 801b7d0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801b7d4:	2b00      	cmp	r3, #0
 801b7d6:	f000 810f 	beq.w	801b9f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801b7da:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b7dc:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801b7e0:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801b7e4:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801b7e8:	f000 8190 	beq.w	801bb0c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 801b7ec:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801b7f0:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801b7f4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801b7f8:	fb09 f000 	mul.w	r0, r9, r0
 801b7fc:	fb0a fe0e 	mul.w	lr, sl, lr
 801b800:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801b804:	f100 0b20 	add.w	fp, r0, #32
 801b808:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801b80c:	44ce      	add	lr, r9
 801b80e:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801b812:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801b816:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801b81a:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801b81e:	ea4e 0909 	orr.w	r9, lr, r9
 801b822:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801b826:	8868      	ldrh	r0, [r5, #2]
 801b828:	d019      	beq.n	801b85e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801b82a:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801b82e:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801b832:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801b836:	fb08 f800 	mul.w	r8, r8, r0
 801b83a:	fb0a fe0e 	mul.w	lr, sl, lr
 801b83e:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801b842:	f108 0b20 	add.w	fp, r8, #32
 801b846:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801b84a:	4486      	add	lr, r0
 801b84c:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801b850:	0a00      	lsrs	r0, r0, #8
 801b852:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801b856:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801b85a:	ea4e 0000 	orr.w	r0, lr, r0
 801b85e:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801b862:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801b866:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801b86a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801b86e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801b872:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801b876:	ea4e 0909 	orr.w	r9, lr, r9
 801b87a:	ea4a 0000 	orr.w	r0, sl, r0
 801b87e:	f1bc 0f00 	cmp.w	ip, #0
 801b882:	f000 8145 	beq.w	801bb10 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 801b886:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 801b88a:	3a01      	subs	r2, #1
 801b88c:	0052      	lsls	r2, r2, #1
 801b88e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801b890:	3202      	adds	r2, #2
 801b892:	2cff      	cmp	r4, #255	; 0xff
 801b894:	eb05 0e02 	add.w	lr, r5, r2
 801b898:	5aaa      	ldrh	r2, [r5, r2]
 801b89a:	d018      	beq.n	801b8ce <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801b89c:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 801b8a0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b8a4:	fb04 fa02 	mul.w	sl, r4, r2
 801b8a8:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801b8ac:	fb08 f805 	mul.w	r8, r8, r5
 801b8b0:	f10a 0520 	add.w	r5, sl, #32
 801b8b4:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801b8b8:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801b8bc:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801b8c0:	4442      	add	r2, r8
 801b8c2:	0a2d      	lsrs	r5, r5, #8
 801b8c4:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801b8c8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801b8cc:	432a      	orrs	r2, r5
 801b8ce:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801b8d0:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801b8d4:	2cff      	cmp	r4, #255	; 0xff
 801b8d6:	d01a      	beq.n	801b90e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 801b8d8:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 801b8dc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801b8e0:	fb04 fa05 	mul.w	sl, r4, r5
 801b8e4:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801b8e8:	fb08 f80e 	mul.w	r8, r8, lr
 801b8ec:	f10a 0e20 	add.w	lr, sl, #32
 801b8f0:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801b8f4:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801b8f8:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801b8fc:	4445      	add	r5, r8
 801b8fe:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b902:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801b906:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 801b90a:	ea45 050e 	orr.w	r5, r5, lr
 801b90e:	fb1c fe01 	smulbb	lr, ip, r1
 801b912:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801b916:	f1cc 0810 	rsb	r8, ip, #16
 801b91a:	eba8 0801 	sub.w	r8, r8, r1
 801b91e:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801b922:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801b926:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801b92a:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801b92e:	4341      	muls	r1, r0
 801b930:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801b934:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801b938:	ea4a 0202 	orr.w	r2, sl, r2
 801b93c:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801b940:	fb09 1108 	mla	r1, r9, r8, r1
 801b944:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801b948:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801b94c:	fb0c 1102 	mla	r1, ip, r2, r1
 801b950:	ea4b 0505 	orr.w	r5, fp, r5
 801b954:	fb0e 1e05 	mla	lr, lr, r5, r1
 801b958:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801b95c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801b960:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b964:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801b968:	ea42 0e0e 	orr.w	lr, r2, lr
 801b96c:	fa1f f28e 	uxth.w	r2, lr
 801b970:	2bff      	cmp	r3, #255	; 0xff
 801b972:	d103      	bne.n	801b97c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801b974:	9912      	ldr	r1, [sp, #72]	; 0x48
 801b976:	29ff      	cmp	r1, #255	; 0xff
 801b978:	f000 80de 	beq.w	801bb38 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 801b97c:	990a      	ldr	r1, [sp, #40]	; 0x28
 801b97e:	8838      	ldrh	r0, [r7, #0]
 801b980:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801b982:	434b      	muls	r3, r1
 801b984:	f103 0c01 	add.w	ip, r3, #1
 801b988:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 801b98c:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801b990:	fa5f fc83 	uxtb.w	ip, r3
 801b994:	1203      	asrs	r3, r0, #8
 801b996:	1215      	asrs	r5, r2, #8
 801b998:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801b99c:	fb13 f30c 	smulbb	r3, r3, ip
 801b9a0:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801b9a4:	fb05 3501 	mla	r5, r5, r1, r3
 801b9a8:	10c3      	asrs	r3, r0, #3
 801b9aa:	10d1      	asrs	r1, r2, #3
 801b9ac:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801b9b0:	fb13 f30c 	smulbb	r3, r3, ip
 801b9b4:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801b9b8:	fb01 3104 	mla	r1, r1, r4, r3
 801b9bc:	00c3      	lsls	r3, r0, #3
 801b9be:	00d2      	lsls	r2, r2, #3
 801b9c0:	b2db      	uxtb	r3, r3
 801b9c2:	b2d2      	uxtb	r2, r2
 801b9c4:	fb13 f30c 	smulbb	r3, r3, ip
 801b9c8:	b2ad      	uxth	r5, r5
 801b9ca:	fb02 3304 	mla	r3, r2, r4, r3
 801b9ce:	b29a      	uxth	r2, r3
 801b9d0:	1c6b      	adds	r3, r5, #1
 801b9d2:	b289      	uxth	r1, r1
 801b9d4:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801b9d8:	1c53      	adds	r3, r2, #1
 801b9da:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801b9de:	1c4a      	adds	r2, r1, #1
 801b9e0:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801b9e4:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801b9e8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801b9ec:	0949      	lsrs	r1, r1, #5
 801b9ee:	432b      	orrs	r3, r5
 801b9f0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801b9f4:	430b      	orrs	r3, r1
 801b9f6:	803b      	strh	r3, [r7, #0]
 801b9f8:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801b9fa:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801b9fc:	4413      	add	r3, r2
 801b9fe:	9321      	str	r3, [sp, #132]	; 0x84
 801ba00:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801ba02:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ba04:	441a      	add	r2, r3
 801ba06:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801ba08:	9222      	str	r2, [sp, #136]	; 0x88
 801ba0a:	3b01      	subs	r3, #1
 801ba0c:	3702      	adds	r7, #2
 801ba0e:	9313      	str	r3, [sp, #76]	; 0x4c
 801ba10:	e689      	b.n	801b726 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801ba12:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801ba14:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 801ba16:	9c22      	ldr	r4, [sp, #136]	; 0x88
 801ba18:	4433      	add	r3, r6
 801ba1a:	9321      	str	r3, [sp, #132]	; 0x84
 801ba1c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ba1e:	441c      	add	r4, r3
 801ba20:	9b08      	ldr	r3, [sp, #32]
 801ba22:	9422      	str	r4, [sp, #136]	; 0x88
 801ba24:	3b01      	subs	r3, #1
 801ba26:	9308      	str	r3, [sp, #32]
 801ba28:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ba2a:	3302      	adds	r3, #2
 801ba2c:	9309      	str	r3, [sp, #36]	; 0x24
 801ba2e:	e658      	b.n	801b6e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 801ba30:	d028      	beq.n	801ba84 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801ba32:	9b08      	ldr	r3, [sp, #32]
 801ba34:	9823      	ldr	r0, [sp, #140]	; 0x8c
 801ba36:	9d21      	ldr	r5, [sp, #132]	; 0x84
 801ba38:	3b01      	subs	r3, #1
 801ba3a:	fb00 5003 	mla	r0, r0, r3, r5
 801ba3e:	1400      	asrs	r0, r0, #16
 801ba40:	f53f ae6c 	bmi.w	801b71c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801ba44:	3901      	subs	r1, #1
 801ba46:	4288      	cmp	r0, r1
 801ba48:	f6bf ae68 	bge.w	801b71c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801ba4c:	9924      	ldr	r1, [sp, #144]	; 0x90
 801ba4e:	9822      	ldr	r0, [sp, #136]	; 0x88
 801ba50:	fb01 0303 	mla	r3, r1, r3, r0
 801ba54:	141b      	asrs	r3, r3, #16
 801ba56:	f53f ae61 	bmi.w	801b71c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801ba5a:	3a01      	subs	r2, #1
 801ba5c:	4293      	cmp	r3, r2
 801ba5e:	f6bf ae5d 	bge.w	801b71c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801ba62:	9b08      	ldr	r3, [sp, #32]
 801ba64:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801ba68:	9313      	str	r3, [sp, #76]	; 0x4c
 801ba6a:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801ba6e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801ba70:	2b00      	cmp	r3, #0
 801ba72:	f300 8082 	bgt.w	801bb7a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801ba76:	9b08      	ldr	r3, [sp, #32]
 801ba78:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801ba7c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ba7e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801ba82:	9309      	str	r3, [sp, #36]	; 0x24
 801ba84:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801ba86:	2b00      	cmp	r3, #0
 801ba88:	f340 81ef 	ble.w	801be6a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 801ba8c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ba90:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801ba94:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ba98:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801ba9a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ba9e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801baa2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801baa6:	eef0 6a62 	vmov.f32	s13, s5
 801baaa:	ee61 7a27 	vmul.f32	s15, s2, s15
 801baae:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801bab2:	ee77 2a62 	vsub.f32	s5, s14, s5
 801bab6:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
 801baba:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801babe:	eef0 6a43 	vmov.f32	s13, s6
 801bac2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801bac6:	ee12 2a90 	vmov	r2, s5
 801baca:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801bace:	fb92 f3f3 	sdiv	r3, r2, r3
 801bad2:	ee13 2a10 	vmov	r2, s6
 801bad6:	9323      	str	r3, [sp, #140]	; 0x8c
 801bad8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801bada:	fb92 f3f3 	sdiv	r3, r2, r3
 801bade:	9324      	str	r3, [sp, #144]	; 0x90
 801bae0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801bae2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801bae4:	3b01      	subs	r3, #1
 801bae6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801baea:	9311      	str	r3, [sp, #68]	; 0x44
 801baec:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801baee:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 801baf2:	bf08      	it	eq
 801baf4:	4613      	moveq	r3, r2
 801baf6:	9308      	str	r3, [sp, #32]
 801baf8:	eeb0 3a67 	vmov.f32	s6, s15
 801bafc:	eef0 2a47 	vmov.f32	s5, s14
 801bb00:	e5e1      	b.n	801b6c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801bb02:	fb08 f505 	mul.w	r5, r8, r5
 801bb06:	fb09 5303 	mla	r3, r9, r3, r5
 801bb0a:	e661      	b.n	801b7d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 801bb0c:	4681      	mov	r9, r0
 801bb0e:	e688      	b.n	801b822 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801bb10:	f1c1 0210 	rsb	r2, r1, #16
 801bb14:	4341      	muls	r1, r0
 801bb16:	fb09 1902 	mla	r9, r9, r2, r1
 801bb1a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801bb1e:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801bb22:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801bb26:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801bb2a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801bb2e:	ea42 0909 	orr.w	r9, r2, r9
 801bb32:	fa1f f289 	uxth.w	r2, r9
 801bb36:	e71b      	b.n	801b970 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801bb38:	803a      	strh	r2, [r7, #0]
 801bb3a:	e75d      	b.n	801b9f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801bb3c:	f115 0e01 	adds.w	lr, r5, #1
 801bb40:	f53f af5a 	bmi.w	801b9f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801bb44:	4572      	cmp	r2, lr
 801bb46:	f6ff af57 	blt.w	801b9f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801bb4a:	f110 0e01 	adds.w	lr, r0, #1
 801bb4e:	f53f af53 	bmi.w	801b9f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801bb52:	4573      	cmp	r3, lr
 801bb54:	f6ff af50 	blt.w	801b9f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801bb58:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801bb5a:	9502      	str	r5, [sp, #8]
 801bb5c:	b21b      	sxth	r3, r3
 801bb5e:	b212      	sxth	r2, r2
 801bb60:	e9cd 0103 	strd	r0, r1, [sp, #12]
 801bb64:	9301      	str	r3, [sp, #4]
 801bb66:	9200      	str	r2, [sp, #0]
 801bb68:	e9cd c405 	strd	ip, r4, [sp, #20]
 801bb6c:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 801bb70:	4639      	mov	r1, r7
 801bb72:	9815      	ldr	r0, [sp, #84]	; 0x54
 801bb74:	f7ff fc04 	bl	801b380 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 801bb78:	e73e      	b.n	801b9f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801bb7a:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801bb7c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801bb80:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801bb82:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801bb86:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801bb88:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801bb8c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801bb8e:	141f      	asrs	r7, r3, #16
 801bb90:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801bb92:	141b      	asrs	r3, r3, #16
 801bb94:	fb01 3707 	mla	r7, r1, r7, r3
 801bb98:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801bb9a:	fa1f fc82 	uxth.w	ip, r2
 801bb9e:	eb03 0a07 	add.w	sl, r3, r7
 801bba2:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801bba6:	f813 9007 	ldrb.w	r9, [r3, r7]
 801bbaa:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801bbae:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801bbb2:	b29b      	uxth	r3, r3
 801bbb4:	2d00      	cmp	r5, #0
 801bbb6:	f000 813d 	beq.w	801be34 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 801bbba:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801bbbe:	940f      	str	r4, [sp, #60]	; 0x3c
 801bbc0:	eb0a 0b01 	add.w	fp, sl, r1
 801bbc4:	fa1f fa85 	uxth.w	sl, r5
 801bbc8:	fb0a fc0c 	mul.w	ip, sl, ip
 801bbcc:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801bbd0:	fa1f fa8a 	uxth.w	sl, sl
 801bbd4:	eba0 000c 	sub.w	r0, r0, ip
 801bbd8:	eba3 030a 	sub.w	r3, r3, sl
 801bbdc:	b280      	uxth	r0, r0
 801bbde:	fb08 f000 	mul.w	r0, r8, r0
 801bbe2:	b29b      	uxth	r3, r3
 801bbe4:	fb09 0303 	mla	r3, r9, r3, r0
 801bbe8:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801bbea:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801bbee:	9410      	str	r4, [sp, #64]	; 0x40
 801bbf0:	fb0a 3300 	mla	r3, sl, r0, r3
 801bbf4:	fb0c 3304 	mla	r3, ip, r4, r3
 801bbf8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801bbfc:	2b00      	cmp	r3, #0
 801bbfe:	f000 810b 	beq.w	801be18 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 801bc02:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801bc04:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801bc06:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801bc0a:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801bc0e:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801bc12:	f000 8114 	beq.w	801be3e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 801bc16:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801bc1a:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801bc1e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801bc22:	fb09 f707 	mul.w	r7, r9, r7
 801bc26:	fb0a fc0c 	mul.w	ip, sl, ip
 801bc2a:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801bc2e:	f107 0b20 	add.w	fp, r7, #32
 801bc32:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801bc36:	44cc      	add	ip, r9
 801bc38:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801bc3c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801bc40:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801bc44:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801bc48:	ea4c 0909 	orr.w	r9, ip, r9
 801bc4c:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801bc50:	8847      	ldrh	r7, [r0, #2]
 801bc52:	d019      	beq.n	801bc88 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 801bc54:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801bc58:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801bc5c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801bc60:	fb08 f807 	mul.w	r8, r8, r7
 801bc64:	fb0a fc0c 	mul.w	ip, sl, ip
 801bc68:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801bc6c:	f108 0b20 	add.w	fp, r8, #32
 801bc70:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801bc74:	44bc      	add	ip, r7
 801bc76:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801bc7a:	0a3f      	lsrs	r7, r7, #8
 801bc7c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801bc80:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801bc84:	ea4c 0707 	orr.w	r7, ip, r7
 801bc88:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801bc8c:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801bc90:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801bc94:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801bc98:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801bc9c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801bca0:	ea4c 0909 	orr.w	r9, ip, r9
 801bca4:	ea4a 0707 	orr.w	r7, sl, r7
 801bca8:	2d00      	cmp	r5, #0
 801bcaa:	f000 80ca 	beq.w	801be42 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 801bcae:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801bcb2:	3901      	subs	r1, #1
 801bcb4:	0049      	lsls	r1, r1, #1
 801bcb6:	3102      	adds	r1, #2
 801bcb8:	eb00 0c01 	add.w	ip, r0, r1
 801bcbc:	5a41      	ldrh	r1, [r0, r1]
 801bcbe:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801bcc0:	28ff      	cmp	r0, #255	; 0xff
 801bcc2:	d019      	beq.n	801bcf8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 801bcc4:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801bcc6:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 801bcca:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801bcce:	fb04 fa01 	mul.w	sl, r4, r1
 801bcd2:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801bcd6:	fb08 f800 	mul.w	r8, r8, r0
 801bcda:	f10a 0020 	add.w	r0, sl, #32
 801bcde:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801bce2:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801bce6:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801bcea:	4441      	add	r1, r8
 801bcec:	0a00      	lsrs	r0, r0, #8
 801bcee:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801bcf2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801bcf6:	4301      	orrs	r1, r0
 801bcf8:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801bcfa:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801bcfe:	2cff      	cmp	r4, #255	; 0xff
 801bd00:	d01a      	beq.n	801bd38 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 801bd02:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 801bd06:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801bd0a:	fb04 fa00 	mul.w	sl, r4, r0
 801bd0e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801bd12:	fb08 f80c 	mul.w	r8, r8, ip
 801bd16:	f10a 0c20 	add.w	ip, sl, #32
 801bd1a:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801bd1e:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801bd22:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801bd26:	4440      	add	r0, r8
 801bd28:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bd2c:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801bd30:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801bd34:	ea40 000c 	orr.w	r0, r0, ip
 801bd38:	fb15 fc02 	smulbb	ip, r5, r2
 801bd3c:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801bd40:	f1c5 0810 	rsb	r8, r5, #16
 801bd44:	eba8 0802 	sub.w	r8, r8, r2
 801bd48:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801bd4c:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801bd50:	437a      	muls	r2, r7
 801bd52:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801bd56:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801bd5a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801bd5e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801bd62:	fb09 2208 	mla	r2, r9, r8, r2
 801bd66:	ea4a 0101 	orr.w	r1, sl, r1
 801bd6a:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801bd6e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801bd72:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801bd76:	fb05 2201 	mla	r2, r5, r1, r2
 801bd7a:	ea4b 0000 	orr.w	r0, fp, r0
 801bd7e:	fb0c 2200 	mla	r2, ip, r0, r2
 801bd82:	0d57      	lsrs	r7, r2, #21
 801bd84:	0952      	lsrs	r2, r2, #5
 801bd86:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801bd8a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801bd8e:	433a      	orrs	r2, r7
 801bd90:	2bff      	cmp	r3, #255	; 0xff
 801bd92:	b292      	uxth	r2, r2
 801bd94:	d102      	bne.n	801bd9c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801bd96:	9912      	ldr	r1, [sp, #72]	; 0x48
 801bd98:	29ff      	cmp	r1, #255	; 0xff
 801bd9a:	d063      	beq.n	801be64 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 801bd9c:	980a      	ldr	r0, [sp, #40]	; 0x28
 801bd9e:	f8be 1000 	ldrh.w	r1, [lr]
 801bda2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801bda4:	4343      	muls	r3, r0
 801bda6:	1c58      	adds	r0, r3, #1
 801bda8:	eb00 2323 	add.w	r3, r0, r3, asr #8
 801bdac:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801bdb0:	1208      	asrs	r0, r1, #8
 801bdb2:	b2db      	uxtb	r3, r3
 801bdb4:	1215      	asrs	r5, r2, #8
 801bdb6:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801bdba:	fb10 f003 	smulbb	r0, r0, r3
 801bdbe:	10cf      	asrs	r7, r1, #3
 801bdc0:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801bdc4:	00c9      	lsls	r1, r1, #3
 801bdc6:	fb05 0504 	mla	r5, r5, r4, r0
 801bdca:	b2c9      	uxtb	r1, r1
 801bdcc:	10d0      	asrs	r0, r2, #3
 801bdce:	00d2      	lsls	r2, r2, #3
 801bdd0:	fb11 f103 	smulbb	r1, r1, r3
 801bdd4:	b2d2      	uxtb	r2, r2
 801bdd6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801bdda:	fb02 1204 	mla	r2, r2, r4, r1
 801bdde:	fb17 f703 	smulbb	r7, r7, r3
 801bde2:	b2ad      	uxth	r5, r5
 801bde4:	b292      	uxth	r2, r2
 801bde6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801bdea:	fb00 7004 	mla	r0, r0, r4, r7
 801bdee:	1c6b      	adds	r3, r5, #1
 801bdf0:	1c57      	adds	r7, r2, #1
 801bdf2:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801bdf6:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801bdfa:	b280      	uxth	r0, r0
 801bdfc:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801be00:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801be04:	433d      	orrs	r5, r7
 801be06:	1c47      	adds	r7, r0, #1
 801be08:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801be0c:	097f      	lsrs	r7, r7, #5
 801be0e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801be12:	433d      	orrs	r5, r7
 801be14:	f8ae 5000 	strh.w	r5, [lr]
 801be18:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801be1a:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801be1c:	4413      	add	r3, r2
 801be1e:	9321      	str	r3, [sp, #132]	; 0x84
 801be20:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801be22:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801be24:	441a      	add	r2, r3
 801be26:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801be28:	9222      	str	r2, [sp, #136]	; 0x88
 801be2a:	3b01      	subs	r3, #1
 801be2c:	f10e 0e02 	add.w	lr, lr, #2
 801be30:	9313      	str	r3, [sp, #76]	; 0x4c
 801be32:	e61c      	b.n	801ba6e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 801be34:	fb08 f000 	mul.w	r0, r8, r0
 801be38:	fb09 0303 	mla	r3, r9, r3, r0
 801be3c:	e6dc      	b.n	801bbf8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 801be3e:	46b9      	mov	r9, r7
 801be40:	e704      	b.n	801bc4c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 801be42:	f1c2 0110 	rsb	r1, r2, #16
 801be46:	437a      	muls	r2, r7
 801be48:	fb09 2901 	mla	r9, r9, r1, r2
 801be4c:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801be50:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801be54:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801be58:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801be5c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801be60:	4302      	orrs	r2, r0
 801be62:	e795      	b.n	801bd90 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 801be64:	f8ae 2000 	strh.w	r2, [lr]
 801be68:	e7d6      	b.n	801be18 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 801be6a:	b017      	add	sp, #92	; 0x5c
 801be6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801be70 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801be70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801be74:	b085      	sub	sp, #20
 801be76:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 801be7a:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 801be7e:	9103      	str	r1, [sp, #12]
 801be80:	fb00 7406 	mla	r4, r0, r6, r7
 801be84:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 801be88:	2800      	cmp	r0, #0
 801be8a:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 801be8e:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 801be92:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 801be96:	9501      	str	r5, [sp, #4]
 801be98:	eb02 0904 	add.w	r9, r2, r4
 801be9c:	f2c0 8141 	blt.w	801c122 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801bea0:	4583      	cmp	fp, r0
 801bea2:	f340 813e 	ble.w	801c122 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801bea6:	2f00      	cmp	r7, #0
 801bea8:	f2c0 8137 	blt.w	801c11a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801beac:	42be      	cmp	r6, r7
 801beae:	f340 8134 	ble.w	801c11a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801beb2:	f812 c004 	ldrb.w	ip, [r2, r4]
 801beb6:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 801beba:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801bebe:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 801bec2:	4355      	muls	r5, r2
 801bec4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801bec8:	f64f 041f 	movw	r4, #63519	; 0xf81f
 801becc:	fb0c f203 	mul.w	r2, ip, r3
 801bed0:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801bed4:	f605 0501 	addw	r5, r5, #2049	; 0x801
 801bed8:	441d      	add	r5, r3
 801beda:	f102 0320 	add.w	r3, r2, #32
 801bede:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801bee2:	0a1b      	lsrs	r3, r3, #8
 801bee4:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801bee8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801beec:	431c      	orrs	r4, r3
 801beee:	1c7b      	adds	r3, r7, #1
 801bef0:	f100 811c 	bmi.w	801c12c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801bef4:	429e      	cmp	r6, r3
 801bef6:	f340 8119 	ble.w	801c12c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801befa:	2900      	cmp	r1, #0
 801befc:	f000 8119 	beq.w	801c132 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 801bf00:	9a01      	ldr	r2, [sp, #4]
 801bf02:	f899 3001 	ldrb.w	r3, [r9, #1]
 801bf06:	8855      	ldrh	r5, [r2, #2]
 801bf08:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801bf0c:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 801bf10:	fb08 f802 	mul.w	r8, r8, r2
 801bf14:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801bf18:	f64f 021f 	movw	r2, #63519	; 0xf81f
 801bf1c:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801bf20:	435d      	muls	r5, r3
 801bf22:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801bf26:	44d0      	add	r8, sl
 801bf28:	f105 0a20 	add.w	sl, r5, #32
 801bf2c:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801bf30:	0a2d      	lsrs	r5, r5, #8
 801bf32:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801bf36:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801bf3a:	432a      	orrs	r2, r5
 801bf3c:	3001      	adds	r0, #1
 801bf3e:	f100 80fe 	bmi.w	801c13e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801bf42:	4583      	cmp	fp, r0
 801bf44:	f340 80fb 	ble.w	801c13e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801bf48:	f1be 0f00 	cmp.w	lr, #0
 801bf4c:	f000 80fc 	beq.w	801c148 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 801bf50:	2f00      	cmp	r7, #0
 801bf52:	f2c0 80f1 	blt.w	801c138 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801bf56:	42be      	cmp	r6, r7
 801bf58:	f340 80ee 	ble.w	801c138 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801bf5c:	9801      	ldr	r0, [sp, #4]
 801bf5e:	f819 5006 	ldrb.w	r5, [r9, r6]
 801bf62:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801bf66:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801bf6a:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 801bf6e:	fb0a fa00 	mul.w	sl, sl, r0
 801bf72:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801bf76:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801bf7a:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801bf7e:	fb05 f808 	mul.w	r8, r5, r8
 801bf82:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 801bf86:	4482      	add	sl, r0
 801bf88:	f108 0020 	add.w	r0, r8, #32
 801bf8c:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801bf90:	0a00      	lsrs	r0, r0, #8
 801bf92:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801bf96:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801bf9a:	ea4b 0b00 	orr.w	fp, fp, r0
 801bf9e:	3701      	adds	r7, #1
 801bfa0:	f100 80d7 	bmi.w	801c152 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801bfa4:	42be      	cmp	r6, r7
 801bfa6:	f340 80d4 	ble.w	801c152 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801bfaa:	2900      	cmp	r1, #0
 801bfac:	f000 80d4 	beq.w	801c158 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 801bfb0:	3601      	adds	r6, #1
 801bfb2:	9801      	ldr	r0, [sp, #4]
 801bfb4:	f819 7006 	ldrb.w	r7, [r9, r6]
 801bfb8:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801bfbc:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801bfc0:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 801bfc4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801bfc8:	fb09 f906 	mul.w	r9, r9, r6
 801bfcc:	fb07 f800 	mul.w	r8, r7, r0
 801bfd0:	f64f 001f 	movw	r0, #63519	; 0xf81f
 801bfd4:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801bfd8:	f609 0901 	addw	r9, r9, #2049	; 0x801
 801bfdc:	44d1      	add	r9, sl
 801bfde:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801bfe2:	f108 0020 	add.w	r0, r8, #32
 801bfe6:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801bfea:	0a00      	lsrs	r0, r0, #8
 801bfec:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801bff0:	4330      	orrs	r0, r6
 801bff2:	b28e      	uxth	r6, r1
 801bff4:	fa1f f98e 	uxth.w	r9, lr
 801bff8:	fb06 f809 	mul.w	r8, r6, r9
 801bffc:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801c000:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801c004:	0136      	lsls	r6, r6, #4
 801c006:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c00a:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801c00e:	9601      	str	r6, [sp, #4]
 801c010:	ea4a 0404 	orr.w	r4, sl, r4
 801c014:	fa1f f689 	uxth.w	r6, r9
 801c018:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801c01c:	fb11 f90e 	smulbb	r9, r1, lr
 801c020:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801c024:	9602      	str	r6, [sp, #8]
 801c026:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c02a:	4626      	mov	r6, r4
 801c02c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801c030:	f1ce 0410 	rsb	r4, lr, #16
 801c034:	1a64      	subs	r4, r4, r1
 801c036:	ea4a 0202 	orr.w	r2, sl, r2
 801c03a:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801c03e:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801c042:	434a      	muls	r2, r1
 801c044:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801c048:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c04c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801c050:	fb04 2406 	mla	r4, r4, r6, r2
 801c054:	ea4a 0000 	orr.w	r0, sl, r0
 801c058:	fb09 4200 	mla	r2, r9, r0, r4
 801c05c:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801c060:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801c064:	9801      	ldr	r0, [sp, #4]
 801c066:	9903      	ldr	r1, [sp, #12]
 801c068:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801c06c:	ea44 0b0b 	orr.w	fp, r4, fp
 801c070:	9c02      	ldr	r4, [sp, #8]
 801c072:	8809      	ldrh	r1, [r1, #0]
 801c074:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 801c078:	1b00      	subs	r0, r0, r4
 801c07a:	9c01      	ldr	r4, [sp, #4]
 801c07c:	eba4 0608 	sub.w	r6, r4, r8
 801c080:	b2b6      	uxth	r6, r6
 801c082:	b280      	uxth	r0, r0
 801c084:	4373      	muls	r3, r6
 801c086:	fb0c 3300 	mla	r3, ip, r0, r3
 801c08a:	9802      	ldr	r0, [sp, #8]
 801c08c:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801c090:	fb00 3505 	mla	r5, r0, r5, r3
 801c094:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801c098:	fb08 5707 	mla	r7, r8, r7, r5
 801c09c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801c0a0:	120b      	asrs	r3, r1, #8
 801c0a2:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801c0a6:	ea6f 2727 	mvn.w	r7, r7, asr #8
 801c0aa:	b2ff      	uxtb	r7, r7
 801c0ac:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c0b0:	10c8      	asrs	r0, r1, #3
 801c0b2:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801c0b6:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801c0ba:	00c9      	lsls	r1, r1, #3
 801c0bc:	437b      	muls	r3, r7
 801c0be:	ea42 0e0e 	orr.w	lr, r2, lr
 801c0c2:	b2c9      	uxtb	r1, r1
 801c0c4:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801c0c8:	fa1f f28e 	uxth.w	r2, lr
 801c0cc:	4378      	muls	r0, r7
 801c0ce:	434f      	muls	r7, r1
 801c0d0:	1c59      	adds	r1, r3, #1
 801c0d2:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801c0d6:	1213      	asrs	r3, r2, #8
 801c0d8:	f023 0307 	bic.w	r3, r3, #7
 801c0dc:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801c0e0:	1c41      	adds	r1, r0, #1
 801c0e2:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801c0e6:	10d1      	asrs	r1, r2, #3
 801c0e8:	f021 0103 	bic.w	r1, r1, #3
 801c0ec:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801c0f0:	021b      	lsls	r3, r3, #8
 801c0f2:	00c9      	lsls	r1, r1, #3
 801c0f4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801c0f8:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801c0fc:	430b      	orrs	r3, r1
 801c0fe:	1c79      	adds	r1, r7, #1
 801c100:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 801c104:	00d2      	lsls	r2, r2, #3
 801c106:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801c10a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801c10e:	431a      	orrs	r2, r3
 801c110:	9b03      	ldr	r3, [sp, #12]
 801c112:	801a      	strh	r2, [r3, #0]
 801c114:	b005      	add	sp, #20
 801c116:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c11a:	f04f 0c00 	mov.w	ip, #0
 801c11e:	4664      	mov	r4, ip
 801c120:	e6e5      	b.n	801beee <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 801c122:	2300      	movs	r3, #0
 801c124:	469c      	mov	ip, r3
 801c126:	461a      	mov	r2, r3
 801c128:	461c      	mov	r4, r3
 801c12a:	e707      	b.n	801bf3c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801c12c:	2300      	movs	r3, #0
 801c12e:	461a      	mov	r2, r3
 801c130:	e704      	b.n	801bf3c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801c132:	460b      	mov	r3, r1
 801c134:	460a      	mov	r2, r1
 801c136:	e701      	b.n	801bf3c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801c138:	2500      	movs	r5, #0
 801c13a:	46ab      	mov	fp, r5
 801c13c:	e72f      	b.n	801bf9e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 801c13e:	2700      	movs	r7, #0
 801c140:	463d      	mov	r5, r7
 801c142:	4638      	mov	r0, r7
 801c144:	46bb      	mov	fp, r7
 801c146:	e754      	b.n	801bff2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801c148:	4677      	mov	r7, lr
 801c14a:	4675      	mov	r5, lr
 801c14c:	4670      	mov	r0, lr
 801c14e:	46f3      	mov	fp, lr
 801c150:	e74f      	b.n	801bff2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801c152:	2700      	movs	r7, #0
 801c154:	4638      	mov	r0, r7
 801c156:	e74c      	b.n	801bff2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801c158:	460f      	mov	r7, r1
 801c15a:	4608      	mov	r0, r1
 801c15c:	e749      	b.n	801bff2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

0801c160 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c160:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c164:	b093      	sub	sp, #76	; 0x4c
 801c166:	9210      	str	r2, [sp, #64]	; 0x40
 801c168:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801c16a:	910e      	str	r1, [sp, #56]	; 0x38
 801c16c:	9306      	str	r3, [sp, #24]
 801c16e:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801c172:	9011      	str	r0, [sp, #68]	; 0x44
 801c174:	6850      	ldr	r0, [r2, #4]
 801c176:	6812      	ldr	r2, [r2, #0]
 801c178:	fb00 1303 	mla	r3, r0, r3, r1
 801c17c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801c180:	9307      	str	r3, [sp, #28]
 801c182:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c184:	681b      	ldr	r3, [r3, #0]
 801c186:	9308      	str	r3, [sp, #32]
 801c188:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c18a:	685b      	ldr	r3, [r3, #4]
 801c18c:	9309      	str	r3, [sp, #36]	; 0x24
 801c18e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c190:	2b00      	cmp	r3, #0
 801c192:	dc03      	bgt.n	801c19c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801c194:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c196:	2b00      	cmp	r3, #0
 801c198:	f340 83b4 	ble.w	801c904 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 801c19c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c19e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c1a2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801c1a6:	1e48      	subs	r0, r1, #1
 801c1a8:	1e55      	subs	r5, r2, #1
 801c1aa:	9b06      	ldr	r3, [sp, #24]
 801c1ac:	2b00      	cmp	r3, #0
 801c1ae:	f340 8163 	ble.w	801c478 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801c1b2:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 801c1b4:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801c1b6:	1436      	asrs	r6, r6, #16
 801c1b8:	ea4f 4323 	mov.w	r3, r3, asr #16
 801c1bc:	d406      	bmi.n	801c1cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801c1be:	4286      	cmp	r6, r0
 801c1c0:	da04      	bge.n	801c1cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801c1c2:	2b00      	cmp	r3, #0
 801c1c4:	db02      	blt.n	801c1cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801c1c6:	42ab      	cmp	r3, r5
 801c1c8:	f2c0 8157 	blt.w	801c47a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 801c1cc:	3601      	adds	r6, #1
 801c1ce:	f100 8144 	bmi.w	801c45a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801c1d2:	42b1      	cmp	r1, r6
 801c1d4:	f2c0 8141 	blt.w	801c45a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801c1d8:	3301      	adds	r3, #1
 801c1da:	f100 813e 	bmi.w	801c45a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801c1de:	429a      	cmp	r2, r3
 801c1e0:	f2c0 813b 	blt.w	801c45a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801c1e4:	9b06      	ldr	r3, [sp, #24]
 801c1e6:	9f07      	ldr	r7, [sp, #28]
 801c1e8:	930f      	str	r3, [sp, #60]	; 0x3c
 801c1ea:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801c1ee:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801c1f0:	2b00      	cmp	r3, #0
 801c1f2:	f340 8164 	ble.w	801c4be <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 801c1f6:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801c1f8:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 801c1fa:	1418      	asrs	r0, r3, #16
 801c1fc:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801c1fe:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801c202:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801c204:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801c208:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c20a:	142d      	asrs	r5, r5, #16
 801c20c:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801c210:	f100 81ee 	bmi.w	801c5f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801c214:	f102 3eff 	add.w	lr, r2, #4294967295
 801c218:	4575      	cmp	r5, lr
 801c21a:	f280 81e9 	bge.w	801c5f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801c21e:	2800      	cmp	r0, #0
 801c220:	f2c0 81e6 	blt.w	801c5f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801c224:	f103 3eff 	add.w	lr, r3, #4294967295
 801c228:	4570      	cmp	r0, lr
 801c22a:	f280 81e1 	bge.w	801c5f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801c22e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c230:	b212      	sxth	r2, r2
 801c232:	fb00 5002 	mla	r0, r0, r2, r5
 801c236:	fa1f fe81 	uxth.w	lr, r1
 801c23a:	eb03 0a00 	add.w	sl, r3, r0
 801c23e:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801c242:	f813 9000 	ldrb.w	r9, [r3, r0]
 801c246:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801c24a:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 801c24e:	b29b      	uxth	r3, r3
 801c250:	f1bc 0f00 	cmp.w	ip, #0
 801c254:	f000 8179 	beq.w	801c54a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801c258:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801c25c:	940a      	str	r4, [sp, #40]	; 0x28
 801c25e:	eb0a 0b02 	add.w	fp, sl, r2
 801c262:	fa1f fa8c 	uxth.w	sl, ip
 801c266:	fb0a fe0e 	mul.w	lr, sl, lr
 801c26a:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801c26e:	fa1f fa8a 	uxth.w	sl, sl
 801c272:	eba5 050e 	sub.w	r5, r5, lr
 801c276:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801c27a:	940b      	str	r4, [sp, #44]	; 0x2c
 801c27c:	eba3 030a 	sub.w	r3, r3, sl
 801c280:	b2ad      	uxth	r5, r5
 801c282:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801c284:	b29b      	uxth	r3, r3
 801c286:	fb08 f505 	mul.w	r5, r8, r5
 801c28a:	fb09 5303 	mla	r3, r9, r3, r5
 801c28e:	fb0a 3304 	mla	r3, sl, r4, r3
 801c292:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801c294:	fb0e 3304 	mla	r3, lr, r4, r3
 801c298:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801c29c:	2b00      	cmp	r3, #0
 801c29e:	f000 80cf 	beq.w	801c440 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801c2a2:	9c08      	ldr	r4, [sp, #32]
 801c2a4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801c2a8:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801c2ac:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801c2b0:	f000 8150 	beq.w	801c554 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 801c2b4:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801c2b8:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801c2bc:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c2c0:	fb09 f000 	mul.w	r0, r9, r0
 801c2c4:	fb0a fe0e 	mul.w	lr, sl, lr
 801c2c8:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801c2cc:	f100 0b20 	add.w	fp, r0, #32
 801c2d0:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801c2d4:	44ce      	add	lr, r9
 801c2d6:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801c2da:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801c2de:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801c2e2:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801c2e6:	ea4e 0909 	orr.w	r9, lr, r9
 801c2ea:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801c2ee:	8868      	ldrh	r0, [r5, #2]
 801c2f0:	d019      	beq.n	801c326 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801c2f2:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801c2f6:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801c2fa:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c2fe:	fb08 f800 	mul.w	r8, r8, r0
 801c302:	fb0a fe0e 	mul.w	lr, sl, lr
 801c306:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801c30a:	f108 0b20 	add.w	fp, r8, #32
 801c30e:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801c312:	4486      	add	lr, r0
 801c314:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801c318:	0a00      	lsrs	r0, r0, #8
 801c31a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801c31e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c322:	ea4e 0000 	orr.w	r0, lr, r0
 801c326:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801c32a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801c32e:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801c332:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801c336:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c33a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801c33e:	ea4e 0909 	orr.w	r9, lr, r9
 801c342:	ea4a 0000 	orr.w	r0, sl, r0
 801c346:	f1bc 0f00 	cmp.w	ip, #0
 801c34a:	f000 8105 	beq.w	801c558 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801c34e:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 801c352:	3a01      	subs	r2, #1
 801c354:	0052      	lsls	r2, r2, #1
 801c356:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801c358:	3202      	adds	r2, #2
 801c35a:	2cff      	cmp	r4, #255	; 0xff
 801c35c:	eb05 0e02 	add.w	lr, r5, r2
 801c360:	5aaa      	ldrh	r2, [r5, r2]
 801c362:	d018      	beq.n	801c396 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801c364:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 801c368:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c36c:	fb04 fa02 	mul.w	sl, r4, r2
 801c370:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801c374:	fb08 f805 	mul.w	r8, r8, r5
 801c378:	f10a 0520 	add.w	r5, sl, #32
 801c37c:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801c380:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801c384:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801c388:	4442      	add	r2, r8
 801c38a:	0a2d      	lsrs	r5, r5, #8
 801c38c:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801c390:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c394:	432a      	orrs	r2, r5
 801c396:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801c398:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801c39c:	2cff      	cmp	r4, #255	; 0xff
 801c39e:	d01a      	beq.n	801c3d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801c3a0:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 801c3a4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c3a8:	fb04 fa05 	mul.w	sl, r4, r5
 801c3ac:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801c3b0:	fb08 f80e 	mul.w	r8, r8, lr
 801c3b4:	f10a 0e20 	add.w	lr, sl, #32
 801c3b8:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801c3bc:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801c3c0:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801c3c4:	4445      	add	r5, r8
 801c3c6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c3ca:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801c3ce:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 801c3d2:	ea45 050e 	orr.w	r5, r5, lr
 801c3d6:	fb1c fe01 	smulbb	lr, ip, r1
 801c3da:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801c3de:	f1cc 0810 	rsb	r8, ip, #16
 801c3e2:	eba8 0801 	sub.w	r8, r8, r1
 801c3e6:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801c3ea:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801c3ee:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801c3f2:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801c3f6:	4341      	muls	r1, r0
 801c3f8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c3fc:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801c400:	ea4a 0202 	orr.w	r2, sl, r2
 801c404:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801c408:	fb09 1108 	mla	r1, r9, r8, r1
 801c40c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801c410:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801c414:	fb0c 1102 	mla	r1, ip, r2, r1
 801c418:	ea4b 0505 	orr.w	r5, fp, r5
 801c41c:	fb0e 1e05 	mla	lr, lr, r5, r1
 801c420:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801c424:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801c428:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c42c:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801c430:	ea42 0e0e 	orr.w	lr, r2, lr
 801c434:	fa1f f28e 	uxth.w	r2, lr
 801c438:	2bff      	cmp	r3, #255	; 0xff
 801c43a:	f040 80a1 	bne.w	801c580 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 801c43e:	803a      	strh	r2, [r7, #0]
 801c440:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801c442:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 801c444:	4413      	add	r3, r2
 801c446:	931d      	str	r3, [sp, #116]	; 0x74
 801c448:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 801c44a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c44c:	441a      	add	r2, r3
 801c44e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801c450:	921e      	str	r2, [sp, #120]	; 0x78
 801c452:	3b01      	subs	r3, #1
 801c454:	3702      	adds	r7, #2
 801c456:	930f      	str	r3, [sp, #60]	; 0x3c
 801c458:	e6c9      	b.n	801c1ee <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801c45a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801c45c:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 801c45e:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 801c460:	4433      	add	r3, r6
 801c462:	931d      	str	r3, [sp, #116]	; 0x74
 801c464:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c466:	441c      	add	r4, r3
 801c468:	9b06      	ldr	r3, [sp, #24]
 801c46a:	941e      	str	r4, [sp, #120]	; 0x78
 801c46c:	3b01      	subs	r3, #1
 801c46e:	9306      	str	r3, [sp, #24]
 801c470:	9b07      	ldr	r3, [sp, #28]
 801c472:	3302      	adds	r3, #2
 801c474:	9307      	str	r3, [sp, #28]
 801c476:	e698      	b.n	801c1aa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801c478:	d028      	beq.n	801c4cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c47a:	9b06      	ldr	r3, [sp, #24]
 801c47c:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801c47e:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 801c480:	3b01      	subs	r3, #1
 801c482:	fb00 5003 	mla	r0, r0, r3, r5
 801c486:	1400      	asrs	r0, r0, #16
 801c488:	f53f aeac 	bmi.w	801c1e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801c48c:	3901      	subs	r1, #1
 801c48e:	4288      	cmp	r0, r1
 801c490:	f6bf aea8 	bge.w	801c1e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801c494:	9920      	ldr	r1, [sp, #128]	; 0x80
 801c496:	981e      	ldr	r0, [sp, #120]	; 0x78
 801c498:	fb01 0303 	mla	r3, r1, r3, r0
 801c49c:	141b      	asrs	r3, r3, #16
 801c49e:	f53f aea1 	bmi.w	801c1e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801c4a2:	3a01      	subs	r2, #1
 801c4a4:	4293      	cmp	r3, r2
 801c4a6:	f6bf ae9d 	bge.w	801c1e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801c4aa:	9b06      	ldr	r3, [sp, #24]
 801c4ac:	f8dd e01c 	ldr.w	lr, [sp, #28]
 801c4b0:	930f      	str	r3, [sp, #60]	; 0x3c
 801c4b2:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801c4b6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801c4b8:	2b00      	cmp	r3, #0
 801c4ba:	f300 80b6 	bgt.w	801c62a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 801c4be:	9b06      	ldr	r3, [sp, #24]
 801c4c0:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801c4c4:	9b07      	ldr	r3, [sp, #28]
 801c4c6:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801c4ca:	9307      	str	r3, [sp, #28]
 801c4cc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c4ce:	2b00      	cmp	r3, #0
 801c4d0:	f340 8218 	ble.w	801c904 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 801c4d4:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c4d8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801c4dc:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801c4e0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801c4e2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c4e6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c4ea:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c4ee:	eef0 6a62 	vmov.f32	s13, s5
 801c4f2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c4f6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c4fa:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c4fe:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 801c502:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c506:	eef0 6a43 	vmov.f32	s13, s6
 801c50a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c50e:	ee12 2a90 	vmov	r2, s5
 801c512:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c516:	fb92 f3f3 	sdiv	r3, r2, r3
 801c51a:	ee13 2a10 	vmov	r2, s6
 801c51e:	931f      	str	r3, [sp, #124]	; 0x7c
 801c520:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801c522:	fb92 f3f3 	sdiv	r3, r2, r3
 801c526:	9320      	str	r3, [sp, #128]	; 0x80
 801c528:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c52a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801c52c:	3b01      	subs	r3, #1
 801c52e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c532:	930e      	str	r3, [sp, #56]	; 0x38
 801c534:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801c536:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 801c53a:	bf08      	it	eq
 801c53c:	4613      	moveq	r3, r2
 801c53e:	9306      	str	r3, [sp, #24]
 801c540:	eeb0 3a67 	vmov.f32	s6, s15
 801c544:	eef0 2a47 	vmov.f32	s5, s14
 801c548:	e621      	b.n	801c18e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801c54a:	fb08 f505 	mul.w	r5, r8, r5
 801c54e:	fb09 5303 	mla	r3, r9, r3, r5
 801c552:	e6a1      	b.n	801c298 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 801c554:	4681      	mov	r9, r0
 801c556:	e6c8      	b.n	801c2ea <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 801c558:	f1c1 0210 	rsb	r2, r1, #16
 801c55c:	4341      	muls	r1, r0
 801c55e:	fb09 1902 	mla	r9, r9, r2, r1
 801c562:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801c566:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801c56a:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801c56e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c572:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801c576:	ea42 0909 	orr.w	r9, r2, r9
 801c57a:	fa1f f289 	uxth.w	r2, r9
 801c57e:	e75b      	b.n	801c438 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801c580:	f8b7 c000 	ldrh.w	ip, [r7]
 801c584:	43db      	mvns	r3, r3
 801c586:	ea4f 202c 	mov.w	r0, ip, asr #8
 801c58a:	fa5f fe83 	uxtb.w	lr, r3
 801c58e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801c592:	fb00 f00e 	mul.w	r0, r0, lr
 801c596:	1c41      	adds	r1, r0, #1
 801c598:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801c59c:	1211      	asrs	r1, r2, #8
 801c59e:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801c5a2:	f021 0107 	bic.w	r1, r1, #7
 801c5a6:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801c5aa:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801c5ae:	48d7      	ldr	r0, [pc, #860]	; (801c90c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 801c5b0:	fb05 f50e 	mul.w	r5, r5, lr
 801c5b4:	b2c9      	uxtb	r1, r1
 801c5b6:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 801c5ba:	1c69      	adds	r1, r5, #1
 801c5bc:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801c5c0:	10d1      	asrs	r1, r2, #3
 801c5c2:	f021 0103 	bic.w	r1, r1, #3
 801c5c6:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 801c5ca:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801c5ce:	b2db      	uxtb	r3, r3
 801c5d0:	00c9      	lsls	r1, r1, #3
 801c5d2:	fb03 f30e 	mul.w	r3, r3, lr
 801c5d6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801c5da:	4301      	orrs	r1, r0
 801c5dc:	1c58      	adds	r0, r3, #1
 801c5de:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801c5e2:	00d2      	lsls	r2, r2, #3
 801c5e4:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801c5e8:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801c5ec:	430a      	orrs	r2, r1
 801c5ee:	e726      	b.n	801c43e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 801c5f0:	f115 0e01 	adds.w	lr, r5, #1
 801c5f4:	f53f af24 	bmi.w	801c440 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801c5f8:	4572      	cmp	r2, lr
 801c5fa:	f6ff af21 	blt.w	801c440 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801c5fe:	f110 0e01 	adds.w	lr, r0, #1
 801c602:	f53f af1d 	bmi.w	801c440 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801c606:	4573      	cmp	r3, lr
 801c608:	f6ff af1a 	blt.w	801c440 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801c60c:	b21b      	sxth	r3, r3
 801c60e:	b212      	sxth	r2, r2
 801c610:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 801c614:	e9cd 5002 	strd	r5, r0, [sp, #8]
 801c618:	9301      	str	r3, [sp, #4]
 801c61a:	9200      	str	r2, [sp, #0]
 801c61c:	4639      	mov	r1, r7
 801c61e:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 801c622:	9811      	ldr	r0, [sp, #68]	; 0x44
 801c624:	f7ff fc24 	bl	801be70 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801c628:	e70a      	b.n	801c440 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801c62a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801c62c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801c630:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801c632:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801c636:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c638:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c63c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801c63e:	141f      	asrs	r7, r3, #16
 801c640:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801c642:	141b      	asrs	r3, r3, #16
 801c644:	fb01 3707 	mla	r7, r1, r7, r3
 801c648:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c64a:	fa1f fc82 	uxth.w	ip, r2
 801c64e:	eb03 0a07 	add.w	sl, r3, r7
 801c652:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801c656:	f813 9007 	ldrb.w	r9, [r3, r7]
 801c65a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801c65e:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801c662:	b29b      	uxth	r3, r3
 801c664:	2d00      	cmp	r5, #0
 801c666:	f000 80fe 	beq.w	801c866 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 801c66a:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801c66e:	940c      	str	r4, [sp, #48]	; 0x30
 801c670:	eb0a 0b01 	add.w	fp, sl, r1
 801c674:	fa1f fa85 	uxth.w	sl, r5
 801c678:	fb0a fc0c 	mul.w	ip, sl, ip
 801c67c:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801c680:	fa1f fa8a 	uxth.w	sl, sl
 801c684:	eba0 000c 	sub.w	r0, r0, ip
 801c688:	eba3 030a 	sub.w	r3, r3, sl
 801c68c:	b280      	uxth	r0, r0
 801c68e:	fb08 f000 	mul.w	r0, r8, r0
 801c692:	b29b      	uxth	r3, r3
 801c694:	fb09 0303 	mla	r3, r9, r3, r0
 801c698:	980c      	ldr	r0, [sp, #48]	; 0x30
 801c69a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801c69e:	940d      	str	r4, [sp, #52]	; 0x34
 801c6a0:	fb0a 3300 	mla	r3, sl, r0, r3
 801c6a4:	fb0c 3304 	mla	r3, ip, r4, r3
 801c6a8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801c6ac:	2b00      	cmp	r3, #0
 801c6ae:	f000 80cc 	beq.w	801c84a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 801c6b2:	9808      	ldr	r0, [sp, #32]
 801c6b4:	9c08      	ldr	r4, [sp, #32]
 801c6b6:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801c6ba:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801c6be:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801c6c2:	f000 80d5 	beq.w	801c870 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801c6c6:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801c6ca:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801c6ce:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801c6d2:	fb09 f707 	mul.w	r7, r9, r7
 801c6d6:	fb0a fc0c 	mul.w	ip, sl, ip
 801c6da:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801c6de:	f107 0b20 	add.w	fp, r7, #32
 801c6e2:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801c6e6:	44cc      	add	ip, r9
 801c6e8:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801c6ec:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801c6f0:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801c6f4:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801c6f8:	ea4c 0909 	orr.w	r9, ip, r9
 801c6fc:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801c700:	8847      	ldrh	r7, [r0, #2]
 801c702:	d019      	beq.n	801c738 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 801c704:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801c708:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801c70c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801c710:	fb08 f807 	mul.w	r8, r8, r7
 801c714:	fb0a fc0c 	mul.w	ip, sl, ip
 801c718:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801c71c:	f108 0b20 	add.w	fp, r8, #32
 801c720:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801c724:	44bc      	add	ip, r7
 801c726:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801c72a:	0a3f      	lsrs	r7, r7, #8
 801c72c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801c730:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801c734:	ea4c 0707 	orr.w	r7, ip, r7
 801c738:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801c73c:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801c740:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801c744:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801c748:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c74c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801c750:	ea4c 0909 	orr.w	r9, ip, r9
 801c754:	ea4a 0707 	orr.w	r7, sl, r7
 801c758:	2d00      	cmp	r5, #0
 801c75a:	f000 808b 	beq.w	801c874 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 801c75e:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801c762:	3901      	subs	r1, #1
 801c764:	0049      	lsls	r1, r1, #1
 801c766:	3102      	adds	r1, #2
 801c768:	eb00 0c01 	add.w	ip, r0, r1
 801c76c:	5a41      	ldrh	r1, [r0, r1]
 801c76e:	980c      	ldr	r0, [sp, #48]	; 0x30
 801c770:	28ff      	cmp	r0, #255	; 0xff
 801c772:	d019      	beq.n	801c7a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 801c774:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801c776:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 801c77a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801c77e:	fb04 fa01 	mul.w	sl, r4, r1
 801c782:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801c786:	fb08 f800 	mul.w	r8, r8, r0
 801c78a:	f10a 0020 	add.w	r0, sl, #32
 801c78e:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801c792:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801c796:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801c79a:	4441      	add	r1, r8
 801c79c:	0a00      	lsrs	r0, r0, #8
 801c79e:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801c7a2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c7a6:	4301      	orrs	r1, r0
 801c7a8:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801c7aa:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801c7ae:	2cff      	cmp	r4, #255	; 0xff
 801c7b0:	d01a      	beq.n	801c7e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 801c7b2:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 801c7b6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c7ba:	fb04 fa00 	mul.w	sl, r4, r0
 801c7be:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801c7c2:	fb08 f80c 	mul.w	r8, r8, ip
 801c7c6:	f10a 0c20 	add.w	ip, sl, #32
 801c7ca:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801c7ce:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801c7d2:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801c7d6:	4440      	add	r0, r8
 801c7d8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c7dc:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801c7e0:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801c7e4:	ea40 000c 	orr.w	r0, r0, ip
 801c7e8:	fb15 fc02 	smulbb	ip, r5, r2
 801c7ec:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801c7f0:	f1c5 0810 	rsb	r8, r5, #16
 801c7f4:	eba8 0802 	sub.w	r8, r8, r2
 801c7f8:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801c7fc:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801c800:	437a      	muls	r2, r7
 801c802:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801c806:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801c80a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c80e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801c812:	fb09 2208 	mla	r2, r9, r8, r2
 801c816:	ea4a 0101 	orr.w	r1, sl, r1
 801c81a:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801c81e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801c822:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801c826:	fb05 2201 	mla	r2, r5, r1, r2
 801c82a:	ea4b 0000 	orr.w	r0, fp, r0
 801c82e:	fb0c 2200 	mla	r2, ip, r0, r2
 801c832:	0d57      	lsrs	r7, r2, #21
 801c834:	0952      	lsrs	r2, r2, #5
 801c836:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801c83a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801c83e:	433a      	orrs	r2, r7
 801c840:	2bff      	cmp	r3, #255	; 0xff
 801c842:	b292      	uxth	r2, r2
 801c844:	d127      	bne.n	801c896 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 801c846:	f8ae 2000 	strh.w	r2, [lr]
 801c84a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801c84c:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 801c84e:	4413      	add	r3, r2
 801c850:	931d      	str	r3, [sp, #116]	; 0x74
 801c852:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 801c854:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c856:	441a      	add	r2, r3
 801c858:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801c85a:	921e      	str	r2, [sp, #120]	; 0x78
 801c85c:	3b01      	subs	r3, #1
 801c85e:	f10e 0e02 	add.w	lr, lr, #2
 801c862:	930f      	str	r3, [sp, #60]	; 0x3c
 801c864:	e627      	b.n	801c4b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801c866:	fb08 f000 	mul.w	r0, r8, r0
 801c86a:	fb09 0303 	mla	r3, r9, r3, r0
 801c86e:	e71b      	b.n	801c6a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 801c870:	46b9      	mov	r9, r7
 801c872:	e743      	b.n	801c6fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 801c874:	f1c2 0110 	rsb	r1, r2, #16
 801c878:	437a      	muls	r2, r7
 801c87a:	fb09 2901 	mla	r9, r9, r1, r2
 801c87e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801c882:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801c886:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801c88a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c88e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801c892:	4302      	orrs	r2, r0
 801c894:	e7d4      	b.n	801c840 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 801c896:	f8be 7000 	ldrh.w	r7, [lr]
 801c89a:	4c1c      	ldr	r4, [pc, #112]	; (801c90c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 801c89c:	43db      	mvns	r3, r3
 801c89e:	1238      	asrs	r0, r7, #8
 801c8a0:	fa5f fc83 	uxtb.w	ip, r3
 801c8a4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801c8a8:	10fd      	asrs	r5, r7, #3
 801c8aa:	fb00 f00c 	mul.w	r0, r0, ip
 801c8ae:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801c8b2:	fb05 f10c 	mul.w	r1, r5, ip
 801c8b6:	1c45      	adds	r5, r0, #1
 801c8b8:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801c8bc:	1215      	asrs	r5, r2, #8
 801c8be:	f025 0507 	bic.w	r5, r5, #7
 801c8c2:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801c8c6:	1c4d      	adds	r5, r1, #1
 801c8c8:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 801c8cc:	10d1      	asrs	r1, r2, #3
 801c8ce:	f021 0103 	bic.w	r1, r1, #3
 801c8d2:	00fb      	lsls	r3, r7, #3
 801c8d4:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801c8d8:	b2db      	uxtb	r3, r3
 801c8da:	b2c0      	uxtb	r0, r0
 801c8dc:	00c9      	lsls	r1, r1, #3
 801c8de:	fb03 f30c 	mul.w	r3, r3, ip
 801c8e2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801c8e6:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 801c8ea:	4308      	orrs	r0, r1
 801c8ec:	1c59      	adds	r1, r3, #1
 801c8ee:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801c8f2:	00d2      	lsls	r2, r2, #3
 801c8f4:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801c8f8:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 801c8fc:	4318      	orrs	r0, r3
 801c8fe:	f8ae 0000 	strh.w	r0, [lr]
 801c902:	e7a2      	b.n	801c84a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 801c904:	b013      	add	sp, #76	; 0x4c
 801c906:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c90a:	bf00      	nop
 801c90c:	fffff800 	.word	0xfffff800

0801c910 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 801c910:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801c914:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
 801c918:	fb05 4c03 	mla	ip, r5, r3, r4
 801c91c:	2d00      	cmp	r5, #0
 801c91e:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 801c922:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 801c926:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 801c92a:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 801c92e:	8808      	ldrh	r0, [r1, #0]
 801c930:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 801c934:	f2c0 80a7 	blt.w	801ca86 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801c938:	45aa      	cmp	sl, r5
 801c93a:	f340 80a4 	ble.w	801ca86 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801c93e:	2c00      	cmp	r4, #0
 801c940:	f2c0 809f 	blt.w	801ca82 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801c944:	42a3      	cmp	r3, r4
 801c946:	f340 809c 	ble.w	801ca82 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801c94a:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 801c94e:	1c62      	adds	r2, r4, #1
 801c950:	f100 809c 	bmi.w	801ca8c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801c954:	4293      	cmp	r3, r2
 801c956:	f340 8099 	ble.w	801ca8c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801c95a:	f1b9 0f00 	cmp.w	r9, #0
 801c95e:	f000 8095 	beq.w	801ca8c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801c962:	f8be c002 	ldrh.w	ip, [lr, #2]
 801c966:	3501      	adds	r5, #1
 801c968:	f100 8094 	bmi.w	801ca94 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801c96c:	45aa      	cmp	sl, r5
 801c96e:	f340 8091 	ble.w	801ca94 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801c972:	2f00      	cmp	r7, #0
 801c974:	f000 808e 	beq.w	801ca94 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801c978:	2c00      	cmp	r4, #0
 801c97a:	f2c0 8089 	blt.w	801ca90 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801c97e:	42a3      	cmp	r3, r4
 801c980:	f340 8086 	ble.w	801ca90 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801c984:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 801c988:	3401      	adds	r4, #1
 801c98a:	f100 8086 	bmi.w	801ca9a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801c98e:	42a3      	cmp	r3, r4
 801c990:	f340 8083 	ble.w	801ca9a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801c994:	f1b9 0f00 	cmp.w	r9, #0
 801c998:	d07f      	beq.n	801ca9a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801c99a:	3301      	adds	r3, #1
 801c99c:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 801c9a0:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801c9a4:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801c9a8:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 801c9ac:	fb19 fe07 	smulbb	lr, r9, r7
 801c9b0:	ea44 0808 	orr.w	r8, r4, r8
 801c9b4:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801c9b8:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801c9bc:	f1c7 0210 	rsb	r2, r7, #16
 801c9c0:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801c9c4:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801c9c8:	ea44 0c0c 	orr.w	ip, r4, ip
 801c9cc:	eba2 0209 	sub.w	r2, r2, r9
 801c9d0:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801c9d4:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801c9d8:	fb04 f40c 	mul.w	r4, r4, ip
 801c9dc:	fb02 4808 	mla	r8, r2, r8, r4
 801c9e0:	041a      	lsls	r2, r3, #16
 801c9e2:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801c9e6:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801c9ea:	4313      	orrs	r3, r2
 801c9ec:	042a      	lsls	r2, r5, #16
 801c9ee:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801c9f2:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801c9f6:	fb0e 8303 	mla	r3, lr, r3, r8
 801c9fa:	432a      	orrs	r2, r5
 801c9fc:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801ca00:	fb07 3202 	mla	r2, r7, r2, r3
 801ca04:	0d53      	lsrs	r3, r2, #21
 801ca06:	0952      	lsrs	r2, r2, #5
 801ca08:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ca0c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801ca10:	431a      	orrs	r2, r3
 801ca12:	b293      	uxth	r3, r2
 801ca14:	b2b4      	uxth	r4, r6
 801ca16:	1202      	asrs	r2, r0, #8
 801ca18:	43f6      	mvns	r6, r6
 801ca1a:	b2f6      	uxtb	r6, r6
 801ca1c:	121d      	asrs	r5, r3, #8
 801ca1e:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801ca22:	fb12 f206 	smulbb	r2, r2, r6
 801ca26:	10c7      	asrs	r7, r0, #3
 801ca28:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801ca2c:	00c0      	lsls	r0, r0, #3
 801ca2e:	fb05 2504 	mla	r5, r5, r4, r2
 801ca32:	b2c0      	uxtb	r0, r0
 801ca34:	10da      	asrs	r2, r3, #3
 801ca36:	00db      	lsls	r3, r3, #3
 801ca38:	b2db      	uxtb	r3, r3
 801ca3a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801ca3e:	fb10 f006 	smulbb	r0, r0, r6
 801ca42:	b2ad      	uxth	r5, r5
 801ca44:	fb03 0004 	mla	r0, r3, r4, r0
 801ca48:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801ca4c:	fb17 f706 	smulbb	r7, r7, r6
 801ca50:	b280      	uxth	r0, r0
 801ca52:	1c6b      	adds	r3, r5, #1
 801ca54:	fb02 7204 	mla	r2, r2, r4, r7
 801ca58:	b292      	uxth	r2, r2
 801ca5a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801ca5e:	1c43      	adds	r3, r0, #1
 801ca60:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801ca64:	1c50      	adds	r0, r2, #1
 801ca66:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801ca6a:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801ca6e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801ca72:	0952      	lsrs	r2, r2, #5
 801ca74:	432b      	orrs	r3, r5
 801ca76:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ca7a:	4313      	orrs	r3, r2
 801ca7c:	800b      	strh	r3, [r1, #0]
 801ca7e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801ca82:	4680      	mov	r8, r0
 801ca84:	e763      	b.n	801c94e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 801ca86:	4684      	mov	ip, r0
 801ca88:	4680      	mov	r8, r0
 801ca8a:	e76c      	b.n	801c966 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801ca8c:	4684      	mov	ip, r0
 801ca8e:	e76a      	b.n	801c966 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801ca90:	4605      	mov	r5, r0
 801ca92:	e779      	b.n	801c988 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 801ca94:	4603      	mov	r3, r0
 801ca96:	4605      	mov	r5, r0
 801ca98:	e782      	b.n	801c9a0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 801ca9a:	4603      	mov	r3, r0
 801ca9c:	e780      	b.n	801c9a0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

0801ca9e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ca9e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801caa2:	b093      	sub	sp, #76	; 0x4c
 801caa4:	461d      	mov	r5, r3
 801caa6:	9210      	str	r2, [sp, #64]	; 0x40
 801caa8:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801caaa:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 801caae:	920b      	str	r2, [sp, #44]	; 0x2c
 801cab0:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
 801cab4:	910a      	str	r1, [sp, #40]	; 0x28
 801cab6:	6859      	ldr	r1, [r3, #4]
 801cab8:	681b      	ldr	r3, [r3, #0]
 801caba:	9011      	str	r0, [sp, #68]	; 0x44
 801cabc:	fb01 2707 	mla	r7, r1, r7, r2
 801cac0:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 801cac4:	9307      	str	r3, [sp, #28]
 801cac6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801cac8:	681b      	ldr	r3, [r3, #0]
 801caca:	9309      	str	r3, [sp, #36]	; 0x24
 801cacc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801cace:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801cad2:	43db      	mvns	r3, r3
 801cad4:	b2db      	uxtb	r3, r3
 801cad6:	9308      	str	r3, [sp, #32]
 801cad8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801cada:	2b00      	cmp	r3, #0
 801cadc:	dc03      	bgt.n	801cae6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801cade:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801cae0:	2b00      	cmp	r3, #0
 801cae2:	f340 8203 	ble.w	801ceec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801cae6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801cae8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801caec:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801caf0:	1e48      	subs	r0, r1, #1
 801caf2:	f102 3cff 	add.w	ip, r2, #4294967295
 801caf6:	2d00      	cmp	r5, #0
 801caf8:	f340 80da 	ble.w	801ccb0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801cafc:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801cb00:	ea4f 4326 	mov.w	r3, r6, asr #16
 801cb04:	d406      	bmi.n	801cb14 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801cb06:	4586      	cmp	lr, r0
 801cb08:	da04      	bge.n	801cb14 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801cb0a:	2b00      	cmp	r3, #0
 801cb0c:	db02      	blt.n	801cb14 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801cb0e:	4563      	cmp	r3, ip
 801cb10:	f2c0 80cf 	blt.w	801ccb2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801cb14:	f11e 0e01 	adds.w	lr, lr, #1
 801cb18:	f100 80c1 	bmi.w	801cc9e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801cb1c:	4571      	cmp	r1, lr
 801cb1e:	f2c0 80be 	blt.w	801cc9e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801cb22:	3301      	adds	r3, #1
 801cb24:	f100 80bb 	bmi.w	801cc9e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801cb28:	429a      	cmp	r2, r3
 801cb2a:	f2c0 80b8 	blt.w	801cc9e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801cb2e:	f8dd 801c 	ldr.w	r8, [sp, #28]
 801cb32:	46a9      	mov	r9, r5
 801cb34:	f1b9 0f00 	cmp.w	r9, #0
 801cb38:	f340 80d8 	ble.w	801ccec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 801cb3c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801cb3e:	1421      	asrs	r1, r4, #16
 801cb40:	ea4f 4026 	mov.w	r0, r6, asr #16
 801cb44:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801cb48:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801cb4c:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801cb50:	f100 8111 	bmi.w	801cd76 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801cb54:	f10e 3aff 	add.w	sl, lr, #4294967295
 801cb58:	4551      	cmp	r1, sl
 801cb5a:	f280 810c 	bge.w	801cd76 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801cb5e:	2800      	cmp	r0, #0
 801cb60:	f2c0 8109 	blt.w	801cd76 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801cb64:	f103 3aff 	add.w	sl, r3, #4294967295
 801cb68:	4550      	cmp	r0, sl
 801cb6a:	f280 8104 	bge.w	801cd76 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801cb6e:	fa0f f38e 	sxth.w	r3, lr
 801cb72:	fb00 1103 	mla	r1, r0, r3, r1
 801cb76:	9809      	ldr	r0, [sp, #36]	; 0x24
 801cb78:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 801cb7c:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 801cb80:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 801cb84:	f1bc 0f00 	cmp.w	ip, #0
 801cb88:	d007      	beq.n	801cb9a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 801cb8a:	005b      	lsls	r3, r3, #1
 801cb8c:	eb0a 0003 	add.w	r0, sl, r3
 801cb90:	f83a 3003 	ldrh.w	r3, [sl, r3]
 801cb94:	930c      	str	r3, [sp, #48]	; 0x30
 801cb96:	8843      	ldrh	r3, [r0, #2]
 801cb98:	930d      	str	r3, [sp, #52]	; 0x34
 801cb9a:	ea4f 400e 	mov.w	r0, lr, lsl #16
 801cb9e:	fb12 f30c 	smulbb	r3, r2, ip
 801cba2:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801cba6:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801cbaa:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801cbae:	10db      	asrs	r3, r3, #3
 801cbb0:	ea40 000e 	orr.w	r0, r0, lr
 801cbb4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801cbb8:	f1cc 0e10 	rsb	lr, ip, #16
 801cbbc:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801cbc0:	ebae 0e02 	sub.w	lr, lr, r2
 801cbc4:	ea4a 0101 	orr.w	r1, sl, r1
 801cbc8:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801cbcc:	4351      	muls	r1, r2
 801cbce:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801cbd0:	9f08      	ldr	r7, [sp, #32]
 801cbd2:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801cbd6:	fb0e 1e00 	mla	lr, lr, r0, r1
 801cbda:	0410      	lsls	r0, r2, #16
 801cbdc:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801cbe0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801cbe4:	4310      	orrs	r0, r2
 801cbe6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801cbe8:	990c      	ldr	r1, [sp, #48]	; 0x30
 801cbea:	0412      	lsls	r2, r2, #16
 801cbec:	fb03 e000 	mla	r0, r3, r0, lr
 801cbf0:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801cbf4:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 801cbf8:	ea42 020e 	orr.w	r2, r2, lr
 801cbfc:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801cc00:	fb03 0302 	mla	r3, r3, r2, r0
 801cc04:	0d5a      	lsrs	r2, r3, #21
 801cc06:	095b      	lsrs	r3, r3, #5
 801cc08:	f8b8 0000 	ldrh.w	r0, [r8]
 801cc0c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801cc10:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801cc14:	4313      	orrs	r3, r2
 801cc16:	b29b      	uxth	r3, r3
 801cc18:	1201      	asrs	r1, r0, #8
 801cc1a:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 801cc1e:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801cc22:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801cc26:	fb11 f107 	smulbb	r1, r1, r7
 801cc2a:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801cc2e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801cc32:	00c0      	lsls	r0, r0, #3
 801cc34:	fb0c 1c02 	mla	ip, ip, r2, r1
 801cc38:	b2c0      	uxtb	r0, r0
 801cc3a:	10d9      	asrs	r1, r3, #3
 801cc3c:	00db      	lsls	r3, r3, #3
 801cc3e:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801cc42:	b2db      	uxtb	r3, r3
 801cc44:	fb10 f007 	smulbb	r0, r0, r7
 801cc48:	fa1f fc8c 	uxth.w	ip, ip
 801cc4c:	fb03 0302 	mla	r3, r3, r2, r0
 801cc50:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801cc54:	fb1e fe07 	smulbb	lr, lr, r7
 801cc58:	fb01 e102 	mla	r1, r1, r2, lr
 801cc5c:	b29a      	uxth	r2, r3
 801cc5e:	f10c 0301 	add.w	r3, ip, #1
 801cc62:	b289      	uxth	r1, r1
 801cc64:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801cc68:	1c53      	adds	r3, r2, #1
 801cc6a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801cc6e:	1c4a      	adds	r2, r1, #1
 801cc70:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801cc74:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801cc78:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801cc7c:	0949      	lsrs	r1, r1, #5
 801cc7e:	ea43 030c 	orr.w	r3, r3, ip
 801cc82:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801cc86:	430b      	orrs	r3, r1
 801cc88:	f8a8 3000 	strh.w	r3, [r8]
 801cc8c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801cc8e:	441c      	add	r4, r3
 801cc90:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801cc92:	f108 0802 	add.w	r8, r8, #2
 801cc96:	441e      	add	r6, r3
 801cc98:	f109 39ff 	add.w	r9, r9, #4294967295
 801cc9c:	e74a      	b.n	801cb34 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801cc9e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801cca0:	441c      	add	r4, r3
 801cca2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801cca4:	441e      	add	r6, r3
 801cca6:	9b07      	ldr	r3, [sp, #28]
 801cca8:	3302      	adds	r3, #2
 801ccaa:	3d01      	subs	r5, #1
 801ccac:	9307      	str	r3, [sp, #28]
 801ccae:	e722      	b.n	801caf6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801ccb0:	d022      	beq.n	801ccf8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 801ccb2:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801ccb4:	1e6b      	subs	r3, r5, #1
 801ccb6:	fb00 4003 	mla	r0, r0, r3, r4
 801ccba:	1400      	asrs	r0, r0, #16
 801ccbc:	f53f af37 	bmi.w	801cb2e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801ccc0:	3901      	subs	r1, #1
 801ccc2:	4288      	cmp	r0, r1
 801ccc4:	f6bf af33 	bge.w	801cb2e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801ccc8:	9920      	ldr	r1, [sp, #128]	; 0x80
 801ccca:	fb01 6303 	mla	r3, r1, r3, r6
 801ccce:	141b      	asrs	r3, r3, #16
 801ccd0:	f53f af2d 	bmi.w	801cb2e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801ccd4:	3a01      	subs	r2, #1
 801ccd6:	4293      	cmp	r3, r2
 801ccd8:	f6bf af29 	bge.w	801cb2e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801ccdc:	f8dd 901c 	ldr.w	r9, [sp, #28]
 801cce0:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 801cce4:	46a8      	mov	r8, r5
 801cce6:	f1b8 0f00 	cmp.w	r8, #0
 801ccea:	dc5e      	bgt.n	801cdaa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801ccec:	9b07      	ldr	r3, [sp, #28]
 801ccee:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801ccf2:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801ccf6:	9307      	str	r3, [sp, #28]
 801ccf8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ccfa:	2b00      	cmp	r3, #0
 801ccfc:	f340 80f6 	ble.w	801ceec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801cd00:	ee30 0a04 	vadd.f32	s0, s0, s8
 801cd04:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801cd08:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801cd0c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801cd0e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801cd12:	ee31 1a05 	vadd.f32	s2, s2, s10
 801cd16:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801cd1a:	eef0 6a62 	vmov.f32	s13, s5
 801cd1e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801cd22:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cd26:	ee77 2a62 	vsub.f32	s5, s14, s5
 801cd2a:	ee16 4a90 	vmov	r4, s13
 801cd2e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801cd32:	eef0 6a43 	vmov.f32	s13, s6
 801cd36:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801cd3a:	ee12 2a90 	vmov	r2, s5
 801cd3e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801cd42:	fb92 f3f3 	sdiv	r3, r2, r3
 801cd46:	ee13 2a10 	vmov	r2, s6
 801cd4a:	931f      	str	r3, [sp, #124]	; 0x7c
 801cd4c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801cd4e:	fb92 f3f3 	sdiv	r3, r2, r3
 801cd52:	9320      	str	r3, [sp, #128]	; 0x80
 801cd54:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801cd56:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801cd58:	3b01      	subs	r3, #1
 801cd5a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cd5e:	930a      	str	r3, [sp, #40]	; 0x28
 801cd60:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801cd62:	ee16 6a90 	vmov	r6, s13
 801cd66:	bf14      	ite	ne
 801cd68:	461d      	movne	r5, r3
 801cd6a:	4615      	moveq	r5, r2
 801cd6c:	eeb0 3a67 	vmov.f32	s6, s15
 801cd70:	eef0 2a47 	vmov.f32	s5, s14
 801cd74:	e6b0      	b.n	801cad8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801cd76:	f111 0a01 	adds.w	sl, r1, #1
 801cd7a:	d487      	bmi.n	801cc8c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801cd7c:	45d6      	cmp	lr, sl
 801cd7e:	db85      	blt.n	801cc8c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801cd80:	f110 0a01 	adds.w	sl, r0, #1
 801cd84:	d482      	bmi.n	801cc8c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801cd86:	4553      	cmp	r3, sl
 801cd88:	db80      	blt.n	801cc8c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801cd8a:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801cd8c:	9101      	str	r1, [sp, #4]
 801cd8e:	b21b      	sxth	r3, r3
 801cd90:	e9cd 0202 	strd	r0, r2, [sp, #8]
 801cd94:	9300      	str	r3, [sp, #0]
 801cd96:	e9cd c704 	strd	ip, r7, [sp, #16]
 801cd9a:	fa0f f38e 	sxth.w	r3, lr
 801cd9e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801cda0:	9811      	ldr	r0, [sp, #68]	; 0x44
 801cda2:	4641      	mov	r1, r8
 801cda4:	f7ff fdb4 	bl	801c910 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 801cda8:	e770      	b.n	801cc8c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801cdaa:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801cdac:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801cdae:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801cdb2:	1430      	asrs	r0, r6, #16
 801cdb4:	1423      	asrs	r3, r4, #16
 801cdb6:	fb01 3000 	mla	r0, r1, r0, r3
 801cdba:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801cdbc:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 801cdc0:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 801cdc4:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801cdc8:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801cdcc:	8858      	ldrh	r0, [r3, #2]
 801cdce:	f1be 0f00 	cmp.w	lr, #0
 801cdd2:	d00b      	beq.n	801cdec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 801cdd4:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801cdd8:	3901      	subs	r1, #1
 801cdda:	0049      	lsls	r1, r1, #1
 801cddc:	3102      	adds	r1, #2
 801cdde:	eb03 0b01 	add.w	fp, r3, r1
 801cde2:	5a5b      	ldrh	r3, [r3, r1]
 801cde4:	930e      	str	r3, [sp, #56]	; 0x38
 801cde6:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801cdea:	930f      	str	r3, [sp, #60]	; 0x3c
 801cdec:	ea4f 410c 	mov.w	r1, ip, lsl #16
 801cdf0:	fb12 f30e 	smulbb	r3, r2, lr
 801cdf4:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801cdf8:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801cdfc:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 801ce00:	10db      	asrs	r3, r3, #3
 801ce02:	ea41 010c 	orr.w	r1, r1, ip
 801ce06:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801ce0a:	f1ce 0c10 	rsb	ip, lr, #16
 801ce0e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801ce12:	ebac 0c02 	sub.w	ip, ip, r2
 801ce16:	ea4b 0000 	orr.w	r0, fp, r0
 801ce1a:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801ce1e:	4350      	muls	r0, r2
 801ce20:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801ce22:	9f08      	ldr	r7, [sp, #32]
 801ce24:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801ce28:	fb0c 0c01 	mla	ip, ip, r1, r0
 801ce2c:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801ce30:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 801ce34:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801ce36:	980e      	ldr	r0, [sp, #56]	; 0x38
 801ce38:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801ce3c:	0412      	lsls	r2, r2, #16
 801ce3e:	ea4b 0101 	orr.w	r1, fp, r1
 801ce42:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801ce46:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801ce4a:	fb03 c101 	mla	r1, r3, r1, ip
 801ce4e:	4302      	orrs	r2, r0
 801ce50:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801ce54:	fb03 1202 	mla	r2, r3, r2, r1
 801ce58:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 801ce5c:	0952      	lsrs	r2, r2, #5
 801ce5e:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 801ce62:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801ce66:	f8b9 2000 	ldrh.w	r2, [r9]
 801ce6a:	ea4b 0303 	orr.w	r3, fp, r3
 801ce6e:	b29b      	uxth	r3, r3
 801ce70:	1211      	asrs	r1, r2, #8
 801ce72:	1218      	asrs	r0, r3, #8
 801ce74:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801ce78:	fb11 f107 	smulbb	r1, r1, r7
 801ce7c:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 801ce80:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801ce84:	00d2      	lsls	r2, r2, #3
 801ce86:	fb00 100a 	mla	r0, r0, sl, r1
 801ce8a:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801ce8e:	10d9      	asrs	r1, r3, #3
 801ce90:	b2d2      	uxtb	r2, r2
 801ce92:	00db      	lsls	r3, r3, #3
 801ce94:	fb1c fc07 	smulbb	ip, ip, r7
 801ce98:	fb12 f207 	smulbb	r2, r2, r7
 801ce9c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801cea0:	b2db      	uxtb	r3, r3
 801cea2:	b280      	uxth	r0, r0
 801cea4:	fb01 c10a 	mla	r1, r1, sl, ip
 801cea8:	fb03 230a 	mla	r3, r3, sl, r2
 801ceac:	b29b      	uxth	r3, r3
 801ceae:	b289      	uxth	r1, r1
 801ceb0:	1c42      	adds	r2, r0, #1
 801ceb2:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801ceb6:	f101 0c01 	add.w	ip, r1, #1
 801ceba:	1c5a      	adds	r2, r3, #1
 801cebc:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801cec0:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801cec4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801cec6:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801ceca:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801cece:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801ced2:	4310      	orrs	r0, r2
 801ced4:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801ced8:	441c      	add	r4, r3
 801ceda:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801cedc:	ea40 000c 	orr.w	r0, r0, ip
 801cee0:	f829 0b02 	strh.w	r0, [r9], #2
 801cee4:	441e      	add	r6, r3
 801cee6:	f108 38ff 	add.w	r8, r8, #4294967295
 801ceea:	e6fc      	b.n	801cce6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 801ceec:	b013      	add	sp, #76	; 0x4c
 801ceee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801cef2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 801cef2:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801cef6:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 801cefa:	fb0e 4703 	mla	r7, lr, r3, r4
 801cefe:	f1be 0f00 	cmp.w	lr, #0
 801cf02:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 801cf06:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
 801cf0a:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
 801cf0e:	8808      	ldrh	r0, [r1, #0]
 801cf10:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 801cf14:	db60      	blt.n	801cfd8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801cf16:	45f1      	cmp	r9, lr
 801cf18:	dd5e      	ble.n	801cfd8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801cf1a:	2c00      	cmp	r4, #0
 801cf1c:	db5a      	blt.n	801cfd4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801cf1e:	42a3      	cmp	r3, r4
 801cf20:	dd58      	ble.n	801cfd4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801cf22:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 801cf26:	1c62      	adds	r2, r4, #1
 801cf28:	d459      	bmi.n	801cfde <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801cf2a:	4293      	cmp	r3, r2
 801cf2c:	dd57      	ble.n	801cfde <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801cf2e:	2d00      	cmp	r5, #0
 801cf30:	d055      	beq.n	801cfde <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801cf32:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 801cf36:	f11e 0e01 	adds.w	lr, lr, #1
 801cf3a:	d454      	bmi.n	801cfe6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801cf3c:	45f1      	cmp	r9, lr
 801cf3e:	dd52      	ble.n	801cfe6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801cf40:	2e00      	cmp	r6, #0
 801cf42:	d050      	beq.n	801cfe6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801cf44:	2c00      	cmp	r4, #0
 801cf46:	db4c      	blt.n	801cfe2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801cf48:	42a3      	cmp	r3, r4
 801cf4a:	dd4a      	ble.n	801cfe2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801cf4c:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 801cf50:	3401      	adds	r4, #1
 801cf52:	d405      	bmi.n	801cf60 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801cf54:	42a3      	cmp	r3, r4
 801cf56:	dd03      	ble.n	801cf60 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801cf58:	b115      	cbz	r5, 801cf60 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801cf5a:	3301      	adds	r3, #1
 801cf5c:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 801cf60:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801cf64:	fb15 f406 	smulbb	r4, r5, r6
 801cf68:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801cf6c:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801cf70:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801cf74:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801cf78:	ea43 0c0c 	orr.w	ip, r3, ip
 801cf7c:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801cf80:	f1c6 0310 	rsb	r3, r6, #16
 801cf84:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801cf88:	1b5b      	subs	r3, r3, r5
 801cf8a:	ea4e 0707 	orr.w	r7, lr, r7
 801cf8e:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801cf92:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801cf96:	437d      	muls	r5, r7
 801cf98:	fb03 5c0c 	mla	ip, r3, ip, r5
 801cf9c:	0403      	lsls	r3, r0, #16
 801cf9e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801cfa2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801cfa6:	4318      	orrs	r0, r3
 801cfa8:	0413      	lsls	r3, r2, #16
 801cfaa:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801cfae:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801cfb2:	4313      	orrs	r3, r2
 801cfb4:	fb04 c000 	mla	r0, r4, r0, ip
 801cfb8:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801cfbc:	fb06 0003 	mla	r0, r6, r3, r0
 801cfc0:	0d43      	lsrs	r3, r0, #21
 801cfc2:	0940      	lsrs	r0, r0, #5
 801cfc4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801cfc8:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801cfcc:	4318      	orrs	r0, r3
 801cfce:	8008      	strh	r0, [r1, #0]
 801cfd0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801cfd4:	4684      	mov	ip, r0
 801cfd6:	e7a6      	b.n	801cf26 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 801cfd8:	4607      	mov	r7, r0
 801cfda:	4684      	mov	ip, r0
 801cfdc:	e7ab      	b.n	801cf36 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801cfde:	4607      	mov	r7, r0
 801cfe0:	e7a9      	b.n	801cf36 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801cfe2:	4602      	mov	r2, r0
 801cfe4:	e7b4      	b.n	801cf50 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 801cfe6:	4602      	mov	r2, r0
 801cfe8:	e7ba      	b.n	801cf60 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

0801cfea <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801cfea:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cfee:	b08f      	sub	sp, #60	; 0x3c
 801cff0:	461d      	mov	r5, r3
 801cff2:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801cff4:	920c      	str	r2, [sp, #48]	; 0x30
 801cff6:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
 801cffa:	9107      	str	r1, [sp, #28]
 801cffc:	6859      	ldr	r1, [r3, #4]
 801cffe:	681b      	ldr	r3, [r3, #0]
 801d000:	900d      	str	r0, [sp, #52]	; 0x34
 801d002:	fb01 2707 	mla	r7, r1, r7, r2
 801d006:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 801d00a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d00c:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
 801d010:	f8d3 8000 	ldr.w	r8, [r3]
 801d014:	9b07      	ldr	r3, [sp, #28]
 801d016:	2b00      	cmp	r3, #0
 801d018:	dc03      	bgt.n	801d022 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801d01a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801d01c:	2b00      	cmp	r3, #0
 801d01e:	f340 8181 	ble.w	801d324 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 801d022:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d024:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d028:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801d02c:	1e48      	subs	r0, r1, #1
 801d02e:	f102 3cff 	add.w	ip, r2, #4294967295
 801d032:	2d00      	cmp	r5, #0
 801d034:	f340 809b 	ble.w	801d16e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 801d038:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801d03c:	ea4f 4326 	mov.w	r3, r6, asr #16
 801d040:	d406      	bmi.n	801d050 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801d042:	4586      	cmp	lr, r0
 801d044:	da04      	bge.n	801d050 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801d046:	2b00      	cmp	r3, #0
 801d048:	db02      	blt.n	801d050 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801d04a:	4563      	cmp	r3, ip
 801d04c:	f2c0 8090 	blt.w	801d170 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801d050:	f11e 0e01 	adds.w	lr, lr, #1
 801d054:	f100 8084 	bmi.w	801d160 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801d058:	4571      	cmp	r1, lr
 801d05a:	f2c0 8081 	blt.w	801d160 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801d05e:	3301      	adds	r3, #1
 801d060:	d47e      	bmi.n	801d160 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801d062:	429a      	cmp	r2, r3
 801d064:	db7c      	blt.n	801d160 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801d066:	46aa      	mov	sl, r5
 801d068:	46b9      	mov	r9, r7
 801d06a:	f1ba 0f00 	cmp.w	sl, #0
 801d06e:	f340 8099 	ble.w	801d1a4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 801d072:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d074:	1421      	asrs	r1, r4, #16
 801d076:	ea4f 4026 	mov.w	r0, r6, asr #16
 801d07a:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801d07e:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801d082:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801d086:	f100 80d0 	bmi.w	801d22a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801d08a:	f10e 3bff 	add.w	fp, lr, #4294967295
 801d08e:	4559      	cmp	r1, fp
 801d090:	f280 80cb 	bge.w	801d22a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801d094:	2800      	cmp	r0, #0
 801d096:	f2c0 80c8 	blt.w	801d22a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801d09a:	f103 3bff 	add.w	fp, r3, #4294967295
 801d09e:	4558      	cmp	r0, fp
 801d0a0:	f280 80c3 	bge.w	801d22a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801d0a4:	fa0f fe8e 	sxth.w	lr, lr
 801d0a8:	fb00 110e 	mla	r1, r0, lr, r1
 801d0ac:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801d0b0:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 801d0b4:	8841      	ldrh	r1, [r0, #2]
 801d0b6:	f1bc 0f00 	cmp.w	ip, #0
 801d0ba:	d00b      	beq.n	801d0d4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 801d0bc:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 801d0c0:	3b01      	subs	r3, #1
 801d0c2:	005b      	lsls	r3, r3, #1
 801d0c4:	3302      	adds	r3, #2
 801d0c6:	eb00 0e03 	add.w	lr, r0, r3
 801d0ca:	5ac3      	ldrh	r3, [r0, r3]
 801d0cc:	9308      	str	r3, [sp, #32]
 801d0ce:	f8be 3002 	ldrh.w	r3, [lr, #2]
 801d0d2:	9309      	str	r3, [sp, #36]	; 0x24
 801d0d4:	ea4f 400b 	mov.w	r0, fp, lsl #16
 801d0d8:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801d0dc:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801d0e0:	ea40 000b 	orr.w	r0, r0, fp
 801d0e4:	fb12 f30c 	smulbb	r3, r2, ip
 801d0e8:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801d0ec:	10db      	asrs	r3, r3, #3
 801d0ee:	f1cc 0e10 	rsb	lr, ip, #16
 801d0f2:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801d0f6:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801d0fa:	ebae 0e02 	sub.w	lr, lr, r2
 801d0fe:	ea4b 0101 	orr.w	r1, fp, r1
 801d102:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801d106:	4351      	muls	r1, r2
 801d108:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801d10a:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801d10e:	fb0e 1e00 	mla	lr, lr, r0, r1
 801d112:	0410      	lsls	r0, r2, #16
 801d114:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801d118:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d11c:	4310      	orrs	r0, r2
 801d11e:	9a08      	ldr	r2, [sp, #32]
 801d120:	9908      	ldr	r1, [sp, #32]
 801d122:	0412      	lsls	r2, r2, #16
 801d124:	fb03 e000 	mla	r0, r3, r0, lr
 801d128:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801d12c:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 801d130:	ea42 020e 	orr.w	r2, r2, lr
 801d134:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801d138:	fb03 0302 	mla	r3, r3, r2, r0
 801d13c:	0d5a      	lsrs	r2, r3, #21
 801d13e:	095b      	lsrs	r3, r3, #5
 801d140:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d144:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801d148:	4313      	orrs	r3, r2
 801d14a:	f8a9 3000 	strh.w	r3, [r9]
 801d14e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801d150:	441c      	add	r4, r3
 801d152:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801d154:	f109 0902 	add.w	r9, r9, #2
 801d158:	441e      	add	r6, r3
 801d15a:	f10a 3aff 	add.w	sl, sl, #4294967295
 801d15e:	e784      	b.n	801d06a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801d160:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801d162:	441c      	add	r4, r3
 801d164:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801d166:	3d01      	subs	r5, #1
 801d168:	441e      	add	r6, r3
 801d16a:	3702      	adds	r7, #2
 801d16c:	e761      	b.n	801d032 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801d16e:	d01d      	beq.n	801d1ac <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801d170:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801d172:	1e6b      	subs	r3, r5, #1
 801d174:	fb00 4003 	mla	r0, r0, r3, r4
 801d178:	1400      	asrs	r0, r0, #16
 801d17a:	f53f af74 	bmi.w	801d066 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801d17e:	3901      	subs	r1, #1
 801d180:	4288      	cmp	r0, r1
 801d182:	f6bf af70 	bge.w	801d066 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801d186:	991c      	ldr	r1, [sp, #112]	; 0x70
 801d188:	fb01 6303 	mla	r3, r1, r3, r6
 801d18c:	141b      	asrs	r3, r3, #16
 801d18e:	f53f af6a 	bmi.w	801d066 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801d192:	3a01      	subs	r2, #1
 801d194:	4293      	cmp	r3, r2
 801d196:	f6bf af66 	bge.w	801d066 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801d19a:	46a9      	mov	r9, r5
 801d19c:	46ba      	mov	sl, r7
 801d19e:	f1b9 0f00 	cmp.w	r9, #0
 801d1a2:	dc5a      	bgt.n	801d25a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 801d1a4:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801d1a8:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 801d1ac:	9b07      	ldr	r3, [sp, #28]
 801d1ae:	2b00      	cmp	r3, #0
 801d1b0:	f340 80b8 	ble.w	801d324 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 801d1b4:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d1b8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801d1bc:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801d1c0:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801d1c2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d1c6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d1ca:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d1ce:	eef0 6a62 	vmov.f32	s13, s5
 801d1d2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d1d6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d1da:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d1de:	ee16 4a90 	vmov	r4, s13
 801d1e2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d1e6:	eef0 6a43 	vmov.f32	s13, s6
 801d1ea:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d1ee:	ee12 2a90 	vmov	r2, s5
 801d1f2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d1f6:	fb92 f3f3 	sdiv	r3, r2, r3
 801d1fa:	ee13 2a10 	vmov	r2, s6
 801d1fe:	931b      	str	r3, [sp, #108]	; 0x6c
 801d200:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801d202:	fb92 f3f3 	sdiv	r3, r2, r3
 801d206:	931c      	str	r3, [sp, #112]	; 0x70
 801d208:	9b07      	ldr	r3, [sp, #28]
 801d20a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801d20c:	3b01      	subs	r3, #1
 801d20e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d212:	9307      	str	r3, [sp, #28]
 801d214:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801d216:	ee16 6a90 	vmov	r6, s13
 801d21a:	bf14      	ite	ne
 801d21c:	461d      	movne	r5, r3
 801d21e:	4615      	moveq	r5, r2
 801d220:	eeb0 3a67 	vmov.f32	s6, s15
 801d224:	eef0 2a47 	vmov.f32	s5, s14
 801d228:	e6f4      	b.n	801d014 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801d22a:	f111 0b01 	adds.w	fp, r1, #1
 801d22e:	d48e      	bmi.n	801d14e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801d230:	45de      	cmp	lr, fp
 801d232:	db8c      	blt.n	801d14e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801d234:	f110 0b01 	adds.w	fp, r0, #1
 801d238:	d489      	bmi.n	801d14e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801d23a:	455b      	cmp	r3, fp
 801d23c:	db87      	blt.n	801d14e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801d23e:	b21b      	sxth	r3, r3
 801d240:	e9cd 1001 	strd	r1, r0, [sp, #4]
 801d244:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 801d248:	9300      	str	r3, [sp, #0]
 801d24a:	4642      	mov	r2, r8
 801d24c:	fa0f f38e 	sxth.w	r3, lr
 801d250:	4649      	mov	r1, r9
 801d252:	980d      	ldr	r0, [sp, #52]	; 0x34
 801d254:	f7ff fe4d 	bl	801cef2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 801d258:	e779      	b.n	801d14e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801d25a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d25c:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801d260:	1420      	asrs	r0, r4, #16
 801d262:	1431      	asrs	r1, r6, #16
 801d264:	fb03 0101 	mla	r1, r3, r1, r0
 801d268:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801d26c:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801d270:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 801d274:	8841      	ldrh	r1, [r0, #2]
 801d276:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801d27a:	f1be 0f00 	cmp.w	lr, #0
 801d27e:	d00b      	beq.n	801d298 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 801d280:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 801d284:	3b01      	subs	r3, #1
 801d286:	005b      	lsls	r3, r3, #1
 801d288:	3302      	adds	r3, #2
 801d28a:	eb00 0b03 	add.w	fp, r0, r3
 801d28e:	5ac3      	ldrh	r3, [r0, r3]
 801d290:	930a      	str	r3, [sp, #40]	; 0x28
 801d292:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801d296:	930b      	str	r3, [sp, #44]	; 0x2c
 801d298:	ea4f 400c 	mov.w	r0, ip, lsl #16
 801d29c:	fb12 f30e 	smulbb	r3, r2, lr
 801d2a0:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801d2a4:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801d2a8:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801d2ac:	10db      	asrs	r3, r3, #3
 801d2ae:	ea40 000c 	orr.w	r0, r0, ip
 801d2b2:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801d2b6:	f1ce 0c10 	rsb	ip, lr, #16
 801d2ba:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801d2be:	ebac 0c02 	sub.w	ip, ip, r2
 801d2c2:	ea4b 0101 	orr.w	r1, fp, r1
 801d2c6:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801d2ca:	4351      	muls	r1, r2
 801d2cc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801d2ce:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801d2d2:	fb0c 1c00 	mla	ip, ip, r0, r1
 801d2d6:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801d2da:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 801d2de:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801d2e0:	990a      	ldr	r1, [sp, #40]	; 0x28
 801d2e2:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801d2e6:	0412      	lsls	r2, r2, #16
 801d2e8:	ea4b 0000 	orr.w	r0, fp, r0
 801d2ec:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801d2f0:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 801d2f4:	fb03 c000 	mla	r0, r3, r0, ip
 801d2f8:	ea42 0b0b 	orr.w	fp, r2, fp
 801d2fc:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801d300:	fb03 000b 	mla	r0, r3, fp, r0
 801d304:	0d43      	lsrs	r3, r0, #21
 801d306:	0940      	lsrs	r0, r0, #5
 801d308:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d30c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801d310:	4318      	orrs	r0, r3
 801d312:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801d314:	f82a 0b02 	strh.w	r0, [sl], #2
 801d318:	441c      	add	r4, r3
 801d31a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801d31c:	f109 39ff 	add.w	r9, r9, #4294967295
 801d320:	441e      	add	r6, r3
 801d322:	e73c      	b.n	801d19e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 801d324:	b00f      	add	sp, #60	; 0x3c
 801d326:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801d32a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 801d32a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d32e:	b085      	sub	sp, #20
 801d330:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 801d334:	9102      	str	r1, [sp, #8]
 801d336:	2c00      	cmp	r4, #0
 801d338:	fb04 7103 	mla	r1, r4, r3, r7
 801d33c:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 801d340:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801d344:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 801d348:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801d34c:	f2c0 811b 	blt.w	801d586 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801d350:	45a6      	cmp	lr, r4
 801d352:	f340 8118 	ble.w	801d586 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801d356:	2f00      	cmp	r7, #0
 801d358:	f2c0 8113 	blt.w	801d582 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801d35c:	42bb      	cmp	r3, r7
 801d35e:	f340 8110 	ble.w	801d582 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801d362:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801d366:	1c7a      	adds	r2, r7, #1
 801d368:	f100 8110 	bmi.w	801d58c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801d36c:	4293      	cmp	r3, r2
 801d36e:	f340 810d 	ble.w	801d58c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801d372:	2e00      	cmp	r6, #0
 801d374:	f000 810c 	beq.w	801d590 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 801d378:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801d37c:	3401      	adds	r4, #1
 801d37e:	f100 810b 	bmi.w	801d598 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801d382:	45a6      	cmp	lr, r4
 801d384:	f340 8108 	ble.w	801d598 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801d388:	2800      	cmp	r0, #0
 801d38a:	f000 8108 	beq.w	801d59e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 801d38e:	2f00      	cmp	r7, #0
 801d390:	f2c0 8100 	blt.w	801d594 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801d394:	42bb      	cmp	r3, r7
 801d396:	f340 80fd 	ble.w	801d594 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801d39a:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801d39e:	3701      	adds	r7, #1
 801d3a0:	f100 8100 	bmi.w	801d5a4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801d3a4:	42bb      	cmp	r3, r7
 801d3a6:	f340 80fd 	ble.w	801d5a4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801d3aa:	2e00      	cmp	r6, #0
 801d3ac:	f000 80fc 	beq.w	801d5a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 801d3b0:	3301      	adds	r3, #1
 801d3b2:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 801d3b6:	b2b6      	uxth	r6, r6
 801d3b8:	b280      	uxth	r0, r0
 801d3ba:	fb00 fe06 	mul.w	lr, r0, r6
 801d3be:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801d3c2:	0136      	lsls	r6, r6, #4
 801d3c4:	eba6 070e 	sub.w	r7, r6, lr
 801d3c8:	b280      	uxth	r0, r0
 801d3ca:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801d3ce:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801d3d2:	b2bf      	uxth	r7, r7
 801d3d4:	1a1b      	subs	r3, r3, r0
 801d3d6:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801d3da:	b29b      	uxth	r3, r3
 801d3dc:	fb0a f607 	mul.w	r6, sl, r7
 801d3e0:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801d3e4:	fb0b 6603 	mla	r6, fp, r3, r6
 801d3e8:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801d3ec:	fb00 6609 	mla	r6, r0, r9, r6
 801d3f0:	fb0e 6608 	mla	r6, lr, r8, r6
 801d3f4:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801d3f8:	9600      	str	r6, [sp, #0]
 801d3fa:	2e00      	cmp	r6, #0
 801d3fc:	f000 80be 	beq.w	801d57c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 801d400:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801d404:	fb0b fc0c 	mul.w	ip, fp, ip
 801d408:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801d40c:	fb0b f505 	mul.w	r5, fp, r5
 801d410:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801d414:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801d418:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801d41c:	44dc      	add	ip, fp
 801d41e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d422:	9501      	str	r5, [sp, #4]
 801d424:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801d428:	9503      	str	r5, [sp, #12]
 801d42a:	9d01      	ldr	r5, [sp, #4]
 801d42c:	9e02      	ldr	r6, [sp, #8]
 801d42e:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801d432:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801d436:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801d43a:	fb0a fc0c 	mul.w	ip, sl, ip
 801d43e:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801d442:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801d446:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801d44a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801d44e:	4465      	add	r5, ip
 801d450:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801d454:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801d458:	fb09 fc0c 	mul.w	ip, r9, ip
 801d45c:	fb09 f904 	mul.w	r9, r9, r4
 801d460:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801d464:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801d468:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801d46c:	fb08 f404 	mul.w	r4, r8, r4
 801d470:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801d474:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801d478:	fb08 f802 	mul.w	r8, r8, r2
 801d47c:	fb0a fa01 	mul.w	sl, sl, r1
 801d480:	0a22      	lsrs	r2, r4, #8
 801d482:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801d486:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801d48a:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801d48e:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801d492:	4414      	add	r4, r2
 801d494:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801d498:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801d49c:	0a2d      	lsrs	r5, r5, #8
 801d49e:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801d4a2:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801d4a6:	9a03      	ldr	r2, [sp, #12]
 801d4a8:	8836      	ldrh	r6, [r6, #0]
 801d4aa:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801d4ae:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801d4b2:	437d      	muls	r5, r7
 801d4b4:	4461      	add	r1, ip
 801d4b6:	0a24      	lsrs	r4, r4, #8
 801d4b8:	fb02 5503 	mla	r5, r2, r3, r5
 801d4bc:	0a09      	lsrs	r1, r1, #8
 801d4be:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801d4c2:	fb04 540e 	mla	r4, r4, lr, r5
 801d4c6:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801d4ca:	fb01 4100 	mla	r1, r1, r0, r4
 801d4ce:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d4d2:	0a09      	lsrs	r1, r1, #8
 801d4d4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801d4d8:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801d4dc:	fb07 f70a 	mul.w	r7, r7, sl
 801d4e0:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801d4e4:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801d4e8:	fb03 7101 	mla	r1, r3, r1, r7
 801d4ec:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801d4f0:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801d4f4:	fb0e 1e08 	mla	lr, lr, r8, r1
 801d4f8:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801d4fc:	fb00 e101 	mla	r1, r0, r1, lr
 801d500:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 801d504:	9a00      	ldr	r2, [sp, #0]
 801d506:	b287      	uxth	r7, r0
 801d508:	437a      	muls	r2, r7
 801d50a:	0a09      	lsrs	r1, r1, #8
 801d50c:	1c53      	adds	r3, r2, #1
 801d50e:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801d512:	4321      	orrs	r1, r4
 801d514:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801d518:	1235      	asrs	r5, r6, #8
 801d51a:	0c0a      	lsrs	r2, r1, #16
 801d51c:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801d520:	b2db      	uxtb	r3, r3
 801d522:	fb12 f207 	smulbb	r2, r2, r7
 801d526:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801d52a:	fb05 2503 	mla	r5, r5, r3, r2
 801d52e:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801d532:	10f2      	asrs	r2, r6, #3
 801d534:	b2c8      	uxtb	r0, r1
 801d536:	00f6      	lsls	r6, r6, #3
 801d538:	fb14 f407 	smulbb	r4, r4, r7
 801d53c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801d540:	b2f6      	uxtb	r6, r6
 801d542:	fb10 f007 	smulbb	r0, r0, r7
 801d546:	fb02 4203 	mla	r2, r2, r3, r4
 801d54a:	b2ad      	uxth	r5, r5
 801d54c:	fb06 0303 	mla	r3, r6, r3, r0
 801d550:	b299      	uxth	r1, r3
 801d552:	b294      	uxth	r4, r2
 801d554:	1c6b      	adds	r3, r5, #1
 801d556:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801d55a:	1c62      	adds	r2, r4, #1
 801d55c:	1c4b      	adds	r3, r1, #1
 801d55e:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801d562:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801d566:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801d56a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801d56e:	0952      	lsrs	r2, r2, #5
 801d570:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d574:	432b      	orrs	r3, r5
 801d576:	4313      	orrs	r3, r2
 801d578:	9a02      	ldr	r2, [sp, #8]
 801d57a:	8013      	strh	r3, [r2, #0]
 801d57c:	b005      	add	sp, #20
 801d57e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d582:	2500      	movs	r5, #0
 801d584:	e6ef      	b.n	801d366 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 801d586:	2100      	movs	r1, #0
 801d588:	460d      	mov	r5, r1
 801d58a:	e6f7      	b.n	801d37c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801d58c:	2100      	movs	r1, #0
 801d58e:	e6f5      	b.n	801d37c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801d590:	4631      	mov	r1, r6
 801d592:	e6f3      	b.n	801d37c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801d594:	2400      	movs	r4, #0
 801d596:	e702      	b.n	801d39e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 801d598:	2200      	movs	r2, #0
 801d59a:	4614      	mov	r4, r2
 801d59c:	e70b      	b.n	801d3b6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801d59e:	4602      	mov	r2, r0
 801d5a0:	4604      	mov	r4, r0
 801d5a2:	e708      	b.n	801d3b6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801d5a4:	2200      	movs	r2, #0
 801d5a6:	e706      	b.n	801d3b6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801d5a8:	4632      	mov	r2, r6
 801d5aa:	e704      	b.n	801d3b6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

0801d5ac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d5ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d5b0:	b09d      	sub	sp, #116	; 0x74
 801d5b2:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 801d5b6:	9219      	str	r2, [sp, #100]	; 0x64
 801d5b8:	9307      	str	r3, [sp, #28]
 801d5ba:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801d5bc:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 801d5c0:	931a      	str	r3, [sp, #104]	; 0x68
 801d5c2:	9117      	str	r1, [sp, #92]	; 0x5c
 801d5c4:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 801d5c8:	901b      	str	r0, [sp, #108]	; 0x6c
 801d5ca:	6850      	ldr	r0, [r2, #4]
 801d5cc:	6812      	ldr	r2, [r2, #0]
 801d5ce:	fb00 1303 	mla	r3, r0, r3, r1
 801d5d2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801d5d6:	930a      	str	r3, [sp, #40]	; 0x28
 801d5d8:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801d5da:	681b      	ldr	r3, [r3, #0]
 801d5dc:	9310      	str	r3, [sp, #64]	; 0x40
 801d5de:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801d5e2:	930b      	str	r3, [sp, #44]	; 0x2c
 801d5e4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801d5e6:	2b00      	cmp	r3, #0
 801d5e8:	dc03      	bgt.n	801d5f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801d5ea:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801d5ec:	2b00      	cmp	r3, #0
 801d5ee:	f340 8375 	ble.w	801dcdc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801d5f2:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801d5f4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d5f8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801d5fc:	1e48      	subs	r0, r1, #1
 801d5fe:	1e57      	subs	r7, r2, #1
 801d600:	9b07      	ldr	r3, [sp, #28]
 801d602:	2b00      	cmp	r3, #0
 801d604:	f340 818e 	ble.w	801d924 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801d608:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801d60c:	ea4f 4326 	mov.w	r3, r6, asr #16
 801d610:	d406      	bmi.n	801d620 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801d612:	4584      	cmp	ip, r0
 801d614:	da04      	bge.n	801d620 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801d616:	2b00      	cmp	r3, #0
 801d618:	db02      	blt.n	801d620 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801d61a:	42bb      	cmp	r3, r7
 801d61c:	f2c0 8183 	blt.w	801d926 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801d620:	f11c 0c01 	adds.w	ip, ip, #1
 801d624:	f100 8173 	bmi.w	801d90e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801d628:	4561      	cmp	r1, ip
 801d62a:	f2c0 8170 	blt.w	801d90e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801d62e:	3301      	adds	r3, #1
 801d630:	f100 816d 	bmi.w	801d90e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801d634:	429a      	cmp	r2, r3
 801d636:	f2c0 816a 	blt.w	801d90e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801d63a:	9b07      	ldr	r3, [sp, #28]
 801d63c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801d63e:	9318      	str	r3, [sp, #96]	; 0x60
 801d640:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801d642:	2b00      	cmp	r3, #0
 801d644:	f340 818c 	ble.w	801d960 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 801d648:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 801d64a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801d64c:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801d650:	689b      	ldr	r3, [r3, #8]
 801d652:	1422      	asrs	r2, r4, #16
 801d654:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801d658:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801d65c:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801d660:	f100 81cd 	bmi.w	801d9fe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801d664:	f103 38ff 	add.w	r8, r3, #4294967295
 801d668:	4542      	cmp	r2, r8
 801d66a:	f280 81c8 	bge.w	801d9fe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801d66e:	f1bc 0f00 	cmp.w	ip, #0
 801d672:	f2c0 81c4 	blt.w	801d9fe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801d676:	f10e 38ff 	add.w	r8, lr, #4294967295
 801d67a:	45c4      	cmp	ip, r8
 801d67c:	f280 81bf 	bge.w	801d9fe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801d680:	b21b      	sxth	r3, r3
 801d682:	fb0c 2203 	mla	r2, ip, r3, r2
 801d686:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801d688:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801d68c:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801d690:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801d694:	2800      	cmp	r0, #0
 801d696:	f000 81a9 	beq.w	801d9ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 801d69a:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801d69e:	950c      	str	r5, [sp, #48]	; 0x30
 801d6a0:	0e2d      	lsrs	r5, r5, #24
 801d6a2:	9513      	str	r5, [sp, #76]	; 0x4c
 801d6a4:	b181      	cbz	r1, 801d6c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801d6a6:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801d6aa:	3b01      	subs	r3, #1
 801d6ac:	009b      	lsls	r3, r3, #2
 801d6ae:	3304      	adds	r3, #4
 801d6b0:	eb08 0c03 	add.w	ip, r8, r3
 801d6b4:	f858 3003 	ldr.w	r3, [r8, r3]
 801d6b8:	9308      	str	r3, [sp, #32]
 801d6ba:	0e1b      	lsrs	r3, r3, #24
 801d6bc:	9311      	str	r3, [sp, #68]	; 0x44
 801d6be:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801d6c2:	930d      	str	r3, [sp, #52]	; 0x34
 801d6c4:	0e1b      	lsrs	r3, r3, #24
 801d6c6:	9314      	str	r3, [sp, #80]	; 0x50
 801d6c8:	b280      	uxth	r0, r0
 801d6ca:	b289      	uxth	r1, r1
 801d6cc:	fb00 f901 	mul.w	r9, r0, r1
 801d6d0:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801d6d4:	0100      	lsls	r0, r0, #4
 801d6d6:	eba0 0809 	sub.w	r8, r0, r9
 801d6da:	b289      	uxth	r1, r1
 801d6dc:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801d6e0:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801d6e2:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801d6e4:	fa1f f888 	uxth.w	r8, r8
 801d6e8:	1a5b      	subs	r3, r3, r1
 801d6ea:	b29b      	uxth	r3, r3
 801d6ec:	fb08 f000 	mul.w	r0, r8, r0
 801d6f0:	fb03 000e 	mla	r0, r3, lr, r0
 801d6f4:	fb01 0005 	mla	r0, r1, r5, r0
 801d6f8:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801d6fa:	fb09 0005 	mla	r0, r9, r5, r0
 801d6fe:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801d702:	2800      	cmp	r0, #0
 801d704:	f000 80fa 	beq.w	801d8fc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801d708:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801d70c:	d01b      	beq.n	801d746 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801d70e:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 801d712:	fb0e fa0a 	mul.w	sl, lr, sl
 801d716:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801d71a:	fb0e fe02 	mul.w	lr, lr, r2
 801d71e:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801d722:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801d726:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801d72a:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801d72e:	4452      	add	r2, sl
 801d730:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801d734:	0a12      	lsrs	r2, r2, #8
 801d736:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d73a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801d73e:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801d742:	ea42 020c 	orr.w	r2, r2, ip
 801d746:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801d748:	2dff      	cmp	r5, #255	; 0xff
 801d74a:	d021      	beq.n	801d790 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801d74c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801d74e:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801d752:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801d754:	fb05 fb0b 	mul.w	fp, r5, fp
 801d758:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801d75a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801d75e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801d760:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801d764:	fb05 fa0a 	mul.w	sl, r5, sl
 801d768:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801d76c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801d770:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801d774:	44de      	add	lr, fp
 801d776:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801d77a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801d77e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d782:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801d786:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801d78a:	ea4e 050a 	orr.w	r5, lr, sl
 801d78e:	950c      	str	r5, [sp, #48]	; 0x30
 801d790:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801d792:	2dff      	cmp	r5, #255	; 0xff
 801d794:	d021      	beq.n	801d7da <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 801d796:	9d08      	ldr	r5, [sp, #32]
 801d798:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801d79c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801d79e:	fb05 fb0b 	mul.w	fp, r5, fp
 801d7a2:	9d08      	ldr	r5, [sp, #32]
 801d7a4:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801d7a8:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801d7aa:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801d7ae:	fb05 fa0a 	mul.w	sl, r5, sl
 801d7b2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801d7b6:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801d7ba:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801d7be:	44de      	add	lr, fp
 801d7c0:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801d7c4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801d7c8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d7cc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801d7d0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801d7d4:	ea4e 050a 	orr.w	r5, lr, sl
 801d7d8:	9508      	str	r5, [sp, #32]
 801d7da:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801d7dc:	2dff      	cmp	r5, #255	; 0xff
 801d7de:	d021      	beq.n	801d824 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 801d7e0:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801d7e2:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801d7e6:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801d7e8:	fb05 fb0b 	mul.w	fp, r5, fp
 801d7ec:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801d7ee:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801d7f2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801d7f4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801d7f8:	fb05 fa0a 	mul.w	sl, r5, sl
 801d7fc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801d800:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801d804:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801d808:	44de      	add	lr, fp
 801d80a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801d80e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801d812:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d816:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801d81a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801d81e:	ea4e 050a 	orr.w	r5, lr, sl
 801d822:	950d      	str	r5, [sp, #52]	; 0x34
 801d824:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801d826:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801d82a:	9d08      	ldr	r5, [sp, #32]
 801d82c:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 801d830:	fb08 fc0c 	mul.w	ip, r8, ip
 801d834:	fb03 cc0e 	mla	ip, r3, lr, ip
 801d838:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801d83c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801d83e:	fb01 cc0e 	mla	ip, r1, lr, ip
 801d842:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801d846:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801d848:	fb09 cc0e 	mla	ip, r9, lr, ip
 801d84c:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801d850:	fb08 f80e 	mul.w	r8, r8, lr
 801d854:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801d858:	fb03 8202 	mla	r2, r3, r2, r8
 801d85c:	9b08      	ldr	r3, [sp, #32]
 801d85e:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801d860:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 801d864:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d866:	fb01 220a 	mla	r2, r1, sl, r2
 801d86a:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 801d86e:	fb09 2901 	mla	r9, r9, r1, r2
 801d872:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801d874:	883b      	ldrh	r3, [r7, #0]
 801d876:	4342      	muls	r2, r0
 801d878:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d87c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801d880:	1c50      	adds	r0, r2, #1
 801d882:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801d886:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801d88a:	ea4c 0c09 	orr.w	ip, ip, r9
 801d88e:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801d892:	1219      	asrs	r1, r3, #8
 801d894:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801d898:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801d89c:	b2c0      	uxtb	r0, r0
 801d89e:	fb12 f205 	smulbb	r2, r2, r5
 801d8a2:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801d8a6:	fb01 2100 	mla	r1, r1, r0, r2
 801d8aa:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801d8ae:	10da      	asrs	r2, r3, #3
 801d8b0:	fa5f fc8c 	uxtb.w	ip, ip
 801d8b4:	00db      	lsls	r3, r3, #3
 801d8b6:	fb1c fc05 	smulbb	ip, ip, r5
 801d8ba:	b2db      	uxtb	r3, r3
 801d8bc:	b289      	uxth	r1, r1
 801d8be:	fb03 c300 	mla	r3, r3, r0, ip
 801d8c2:	fa1f fc83 	uxth.w	ip, r3
 801d8c6:	1c4b      	adds	r3, r1, #1
 801d8c8:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801d8cc:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801d8d0:	fb1e fe05 	smulbb	lr, lr, r5
 801d8d4:	f10c 0301 	add.w	r3, ip, #1
 801d8d8:	fb02 e200 	mla	r2, r2, r0, lr
 801d8dc:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801d8e0:	b292      	uxth	r2, r2
 801d8e2:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801d8e6:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801d8ea:	430b      	orrs	r3, r1
 801d8ec:	1c51      	adds	r1, r2, #1
 801d8ee:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801d8f2:	0952      	lsrs	r2, r2, #5
 801d8f4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d8f8:	4313      	orrs	r3, r2
 801d8fa:	803b      	strh	r3, [r7, #0]
 801d8fc:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801d8fe:	441c      	add	r4, r3
 801d900:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801d902:	441e      	add	r6, r3
 801d904:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801d906:	3b01      	subs	r3, #1
 801d908:	3702      	adds	r7, #2
 801d90a:	9318      	str	r3, [sp, #96]	; 0x60
 801d90c:	e698      	b.n	801d640 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801d90e:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801d910:	441c      	add	r4, r3
 801d912:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801d914:	441e      	add	r6, r3
 801d916:	9b07      	ldr	r3, [sp, #28]
 801d918:	3b01      	subs	r3, #1
 801d91a:	9307      	str	r3, [sp, #28]
 801d91c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d91e:	3302      	adds	r3, #2
 801d920:	930a      	str	r3, [sp, #40]	; 0x28
 801d922:	e66d      	b.n	801d600 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801d924:	d023      	beq.n	801d96e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801d926:	9b07      	ldr	r3, [sp, #28]
 801d928:	9829      	ldr	r0, [sp, #164]	; 0xa4
 801d92a:	3b01      	subs	r3, #1
 801d92c:	fb00 4003 	mla	r0, r0, r3, r4
 801d930:	1400      	asrs	r0, r0, #16
 801d932:	f53f ae82 	bmi.w	801d63a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801d936:	3901      	subs	r1, #1
 801d938:	4288      	cmp	r0, r1
 801d93a:	f6bf ae7e 	bge.w	801d63a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801d93e:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801d940:	fb01 6303 	mla	r3, r1, r3, r6
 801d944:	141b      	asrs	r3, r3, #16
 801d946:	f53f ae78 	bmi.w	801d63a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801d94a:	3a01      	subs	r2, #1
 801d94c:	4293      	cmp	r3, r2
 801d94e:	f6bf ae74 	bge.w	801d63a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801d952:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801d956:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 801d95a:	f1bb 0f00 	cmp.w	fp, #0
 801d95e:	dc6c      	bgt.n	801da3a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801d960:	9b07      	ldr	r3, [sp, #28]
 801d962:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801d966:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d968:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801d96c:	930a      	str	r3, [sp, #40]	; 0x28
 801d96e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801d970:	2b00      	cmp	r3, #0
 801d972:	f340 81b3 	ble.w	801dcdc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801d976:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d97a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801d97e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801d982:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801d984:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d988:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d98c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d990:	eef0 6a62 	vmov.f32	s13, s5
 801d994:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d998:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d99c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d9a0:	ee16 4a90 	vmov	r4, s13
 801d9a4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d9a8:	eef0 6a43 	vmov.f32	s13, s6
 801d9ac:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d9b0:	ee12 2a90 	vmov	r2, s5
 801d9b4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d9b8:	fb92 f3f3 	sdiv	r3, r2, r3
 801d9bc:	ee13 2a10 	vmov	r2, s6
 801d9c0:	9329      	str	r3, [sp, #164]	; 0xa4
 801d9c2:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801d9c4:	fb92 f3f3 	sdiv	r3, r2, r3
 801d9c8:	932a      	str	r3, [sp, #168]	; 0xa8
 801d9ca:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801d9cc:	9a19      	ldr	r2, [sp, #100]	; 0x64
 801d9ce:	3b01      	subs	r3, #1
 801d9d0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d9d4:	9317      	str	r3, [sp, #92]	; 0x5c
 801d9d6:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801d9d8:	bf08      	it	eq
 801d9da:	4613      	moveq	r3, r2
 801d9dc:	ee16 6a90 	vmov	r6, s13
 801d9e0:	9307      	str	r3, [sp, #28]
 801d9e2:	eeb0 3a67 	vmov.f32	s6, s15
 801d9e6:	eef0 2a47 	vmov.f32	s5, s14
 801d9ea:	e5fb      	b.n	801d5e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801d9ec:	2900      	cmp	r1, #0
 801d9ee:	f43f ae6b 	beq.w	801d6c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801d9f2:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801d9f6:	9308      	str	r3, [sp, #32]
 801d9f8:	0e1b      	lsrs	r3, r3, #24
 801d9fa:	9311      	str	r3, [sp, #68]	; 0x44
 801d9fc:	e664      	b.n	801d6c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801d9fe:	f112 0801 	adds.w	r8, r2, #1
 801da02:	f53f af7b 	bmi.w	801d8fc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801da06:	4543      	cmp	r3, r8
 801da08:	f6ff af78 	blt.w	801d8fc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801da0c:	f11c 0801 	adds.w	r8, ip, #1
 801da10:	f53f af74 	bmi.w	801d8fc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801da14:	45c6      	cmp	lr, r8
 801da16:	f6ff af71 	blt.w	801d8fc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801da1a:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 801da1c:	9201      	str	r2, [sp, #4]
 801da1e:	fa0f f28e 	sxth.w	r2, lr
 801da22:	e9cd 1504 	strd	r1, r5, [sp, #16]
 801da26:	e9cd c002 	strd	ip, r0, [sp, #8]
 801da2a:	9200      	str	r2, [sp, #0]
 801da2c:	b21b      	sxth	r3, r3
 801da2e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801da30:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801da32:	4639      	mov	r1, r7
 801da34:	f7ff fc79 	bl	801d32a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 801da38:	e760      	b.n	801d8fc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801da3a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801da3c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801da3e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801da42:	1427      	asrs	r7, r4, #16
 801da44:	1433      	asrs	r3, r6, #16
 801da46:	fb01 7303 	mla	r3, r1, r3, r7
 801da4a:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 801da4e:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801da52:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801da56:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801da5a:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801da5e:	2a00      	cmp	r2, #0
 801da60:	f000 8133 	beq.w	801dcca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 801da64:	687d      	ldr	r5, [r7, #4]
 801da66:	950e      	str	r5, [sp, #56]	; 0x38
 801da68:	0e2d      	lsrs	r5, r5, #24
 801da6a:	9515      	str	r5, [sp, #84]	; 0x54
 801da6c:	b178      	cbz	r0, 801da8e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801da6e:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 801da72:	3901      	subs	r1, #1
 801da74:	0089      	lsls	r1, r1, #2
 801da76:	3104      	adds	r1, #4
 801da78:	eb07 0e01 	add.w	lr, r7, r1
 801da7c:	5879      	ldr	r1, [r7, r1]
 801da7e:	9109      	str	r1, [sp, #36]	; 0x24
 801da80:	0e09      	lsrs	r1, r1, #24
 801da82:	9112      	str	r1, [sp, #72]	; 0x48
 801da84:	f8de 1004 	ldr.w	r1, [lr, #4]
 801da88:	910f      	str	r1, [sp, #60]	; 0x3c
 801da8a:	0e09      	lsrs	r1, r1, #24
 801da8c:	9116      	str	r1, [sp, #88]	; 0x58
 801da8e:	b292      	uxth	r2, r2
 801da90:	b280      	uxth	r0, r0
 801da92:	fb02 f800 	mul.w	r8, r2, r0
 801da96:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801da9a:	0112      	lsls	r2, r2, #4
 801da9c:	eba2 0e08 	sub.w	lr, r2, r8
 801daa0:	b280      	uxth	r0, r0
 801daa2:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801daa6:	9915      	ldr	r1, [sp, #84]	; 0x54
 801daa8:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801daaa:	fa1f fe8e 	uxth.w	lr, lr
 801daae:	1a12      	subs	r2, r2, r0
 801dab0:	b292      	uxth	r2, r2
 801dab2:	fb0e f101 	mul.w	r1, lr, r1
 801dab6:	fb02 110c 	mla	r1, r2, ip, r1
 801daba:	fb00 1105 	mla	r1, r0, r5, r1
 801dabe:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801dac0:	fb08 1105 	mla	r1, r8, r5, r1
 801dac4:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801dac8:	2900      	cmp	r1, #0
 801daca:	f000 80f5 	beq.w	801dcb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 801dace:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801dad2:	d019      	beq.n	801db08 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 801dad4:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801dad8:	fb0c fa0a 	mul.w	sl, ip, sl
 801dadc:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801dae0:	fb0c fc03 	mul.w	ip, ip, r3
 801dae4:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801dae8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801daec:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801daf0:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801daf4:	4453      	add	r3, sl
 801daf6:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801dafa:	0a1b      	lsrs	r3, r3, #8
 801dafc:	0a3f      	lsrs	r7, r7, #8
 801dafe:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801db02:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801db06:	433b      	orrs	r3, r7
 801db08:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801db0a:	2dff      	cmp	r5, #255	; 0xff
 801db0c:	d020      	beq.n	801db50 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 801db0e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801db10:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801db14:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801db16:	436f      	muls	r7, r5
 801db18:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801db1a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801db1e:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801db20:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801db24:	fb05 fa0a 	mul.w	sl, r5, sl
 801db28:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801db2c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801db30:	44bc      	add	ip, r7
 801db32:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801db36:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801db3a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801db3e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801db42:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801db46:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801db4a:	ea4c 050a 	orr.w	r5, ip, sl
 801db4e:	950e      	str	r5, [sp, #56]	; 0x38
 801db50:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801db52:	2dff      	cmp	r5, #255	; 0xff
 801db54:	d020      	beq.n	801db98 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 801db56:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801db58:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801db5c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801db5e:	436f      	muls	r7, r5
 801db60:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801db62:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801db66:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801db68:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801db6c:	fb05 fa0a 	mul.w	sl, r5, sl
 801db70:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801db74:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801db78:	44bc      	add	ip, r7
 801db7a:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801db7e:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801db82:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801db86:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801db8a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801db8e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801db92:	ea4c 050a 	orr.w	r5, ip, sl
 801db96:	9509      	str	r5, [sp, #36]	; 0x24
 801db98:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801db9a:	2dff      	cmp	r5, #255	; 0xff
 801db9c:	d020      	beq.n	801dbe0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 801db9e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801dba0:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801dba4:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801dba6:	436f      	muls	r7, r5
 801dba8:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801dbaa:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801dbae:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801dbb0:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801dbb4:	fb05 fa0a 	mul.w	sl, r5, sl
 801dbb8:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801dbbc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801dbc0:	44bc      	add	ip, r7
 801dbc2:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801dbc6:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801dbca:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801dbce:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801dbd2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801dbd6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801dbda:	ea4c 050a 	orr.w	r5, ip, sl
 801dbde:	950f      	str	r5, [sp, #60]	; 0x3c
 801dbe0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801dbe2:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801dbe6:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801dbe8:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801dbec:	fb0e f707 	mul.w	r7, lr, r7
 801dbf0:	fb02 770c 	mla	r7, r2, ip, r7
 801dbf4:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801dbf8:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801dbfa:	fb00 770c 	mla	r7, r0, ip, r7
 801dbfe:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801dc02:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801dc04:	fb08 770c 	mla	r7, r8, ip, r7
 801dc08:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801dc0c:	fb0e fe0c 	mul.w	lr, lr, ip
 801dc10:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801dc14:	fb02 e303 	mla	r3, r2, r3, lr
 801dc18:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801dc1a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801dc1c:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801dc20:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801dc22:	fb00 330a 	mla	r3, r0, sl, r3
 801dc26:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801dc2a:	fb08 3c0c 	mla	ip, r8, ip, r3
 801dc2e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801dc30:	f8b9 0000 	ldrh.w	r0, [r9]
 801dc34:	4359      	muls	r1, r3
 801dc36:	0a3f      	lsrs	r7, r7, #8
 801dc38:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801dc3c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801dc40:	1c4b      	adds	r3, r1, #1
 801dc42:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801dc46:	ea47 070c 	orr.w	r7, r7, ip
 801dc4a:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801dc4e:	1202      	asrs	r2, r0, #8
 801dc50:	0c3b      	lsrs	r3, r7, #16
 801dc52:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801dc56:	b2c9      	uxtb	r1, r1
 801dc58:	fb13 f305 	smulbb	r3, r3, r5
 801dc5c:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801dc60:	fb02 3201 	mla	r2, r2, r1, r3
 801dc64:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801dc68:	10c3      	asrs	r3, r0, #3
 801dc6a:	b2ff      	uxtb	r7, r7
 801dc6c:	00c0      	lsls	r0, r0, #3
 801dc6e:	b2c0      	uxtb	r0, r0
 801dc70:	fb17 f705 	smulbb	r7, r7, r5
 801dc74:	fb00 7001 	mla	r0, r0, r1, r7
 801dc78:	b292      	uxth	r2, r2
 801dc7a:	fb1c fc05 	smulbb	ip, ip, r5
 801dc7e:	b280      	uxth	r0, r0
 801dc80:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801dc84:	fb03 c301 	mla	r3, r3, r1, ip
 801dc88:	1c51      	adds	r1, r2, #1
 801dc8a:	f100 0c01 	add.w	ip, r0, #1
 801dc8e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801dc92:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 801dc96:	b29b      	uxth	r3, r3
 801dc98:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801dc9c:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801dca0:	ea4c 0202 	orr.w	r2, ip, r2
 801dca4:	f103 0c01 	add.w	ip, r3, #1
 801dca8:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801dcac:	095b      	lsrs	r3, r3, #5
 801dcae:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801dcb2:	431a      	orrs	r2, r3
 801dcb4:	f8a9 2000 	strh.w	r2, [r9]
 801dcb8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801dcba:	441c      	add	r4, r3
 801dcbc:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801dcbe:	f109 0902 	add.w	r9, r9, #2
 801dcc2:	441e      	add	r6, r3
 801dcc4:	f10b 3bff 	add.w	fp, fp, #4294967295
 801dcc8:	e647      	b.n	801d95a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 801dcca:	2800      	cmp	r0, #0
 801dccc:	f43f aedf 	beq.w	801da8e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801dcd0:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 801dcd4:	9109      	str	r1, [sp, #36]	; 0x24
 801dcd6:	0e09      	lsrs	r1, r1, #24
 801dcd8:	9112      	str	r1, [sp, #72]	; 0x48
 801dcda:	e6d8      	b.n	801da8e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801dcdc:	b01d      	add	sp, #116	; 0x74
 801dcde:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801dce2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 801dce2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dce6:	b085      	sub	sp, #20
 801dce8:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 801dcec:	9102      	str	r1, [sp, #8]
 801dcee:	2c00      	cmp	r4, #0
 801dcf0:	fb04 7103 	mla	r1, r4, r3, r7
 801dcf4:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 801dcf8:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801dcfc:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 801dd00:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801dd04:	f2c0 810c 	blt.w	801df20 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801dd08:	45a6      	cmp	lr, r4
 801dd0a:	f340 8109 	ble.w	801df20 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801dd0e:	2f00      	cmp	r7, #0
 801dd10:	f2c0 8104 	blt.w	801df1c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801dd14:	42bb      	cmp	r3, r7
 801dd16:	f340 8101 	ble.w	801df1c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801dd1a:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801dd1e:	1c7a      	adds	r2, r7, #1
 801dd20:	f100 8101 	bmi.w	801df26 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801dd24:	4293      	cmp	r3, r2
 801dd26:	f340 80fe 	ble.w	801df26 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801dd2a:	2e00      	cmp	r6, #0
 801dd2c:	f000 80fd 	beq.w	801df2a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 801dd30:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801dd34:	3401      	adds	r4, #1
 801dd36:	f100 80fc 	bmi.w	801df32 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801dd3a:	45a6      	cmp	lr, r4
 801dd3c:	f340 80f9 	ble.w	801df32 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801dd40:	2800      	cmp	r0, #0
 801dd42:	f000 80f9 	beq.w	801df38 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 801dd46:	2f00      	cmp	r7, #0
 801dd48:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 801dd4c:	f2c0 80ef 	blt.w	801df2e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801dd50:	42bb      	cmp	r3, r7
 801dd52:	f340 80ec 	ble.w	801df2e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801dd56:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801dd5a:	3701      	adds	r7, #1
 801dd5c:	f100 80ef 	bmi.w	801df3e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801dd60:	42bb      	cmp	r3, r7
 801dd62:	f340 80ec 	ble.w	801df3e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801dd66:	2e00      	cmp	r6, #0
 801dd68:	f000 80eb 	beq.w	801df42 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 801dd6c:	6852      	ldr	r2, [r2, #4]
 801dd6e:	b2b6      	uxth	r6, r6
 801dd70:	b280      	uxth	r0, r0
 801dd72:	fb00 fe06 	mul.w	lr, r0, r6
 801dd76:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801dd7a:	0136      	lsls	r6, r6, #4
 801dd7c:	eba6 070e 	sub.w	r7, r6, lr
 801dd80:	b280      	uxth	r0, r0
 801dd82:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801dd86:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801dd8a:	b2bf      	uxth	r7, r7
 801dd8c:	1a1b      	subs	r3, r3, r0
 801dd8e:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801dd92:	b29b      	uxth	r3, r3
 801dd94:	fb07 f60a 	mul.w	r6, r7, sl
 801dd98:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801dd9c:	fb0b 6603 	mla	r6, fp, r3, r6
 801dda0:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801dda4:	fb00 6609 	mla	r6, r0, r9, r6
 801dda8:	fb0e 6608 	mla	r6, lr, r8, r6
 801ddac:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801ddb0:	9600      	str	r6, [sp, #0]
 801ddb2:	2e00      	cmp	r6, #0
 801ddb4:	f000 80af 	beq.w	801df16 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 801ddb8:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801ddbc:	fb0b fc0c 	mul.w	ip, fp, ip
 801ddc0:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801ddc4:	fb0b f505 	mul.w	r5, fp, r5
 801ddc8:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801ddcc:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801ddd0:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801ddd4:	44dc      	add	ip, fp
 801ddd6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ddda:	9501      	str	r5, [sp, #4]
 801dddc:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801dde0:	9503      	str	r5, [sp, #12]
 801dde2:	9d01      	ldr	r5, [sp, #4]
 801dde4:	9e02      	ldr	r6, [sp, #8]
 801dde6:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801ddea:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801ddee:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801ddf2:	fb0a fc0c 	mul.w	ip, sl, ip
 801ddf6:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801ddfa:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801ddfe:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801de02:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801de06:	4465      	add	r5, ip
 801de08:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801de0c:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801de10:	fb09 fc0c 	mul.w	ip, r9, ip
 801de14:	fb09 f904 	mul.w	r9, r9, r4
 801de18:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801de1c:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801de20:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801de24:	fb08 f404 	mul.w	r4, r8, r4
 801de28:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801de2c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801de30:	fb08 f802 	mul.w	r8, r8, r2
 801de34:	fb0a fa01 	mul.w	sl, sl, r1
 801de38:	0a22      	lsrs	r2, r4, #8
 801de3a:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801de3e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801de42:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801de46:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801de4a:	4414      	add	r4, r2
 801de4c:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801de50:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801de54:	0a2d      	lsrs	r5, r5, #8
 801de56:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801de5a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801de5e:	9a03      	ldr	r2, [sp, #12]
 801de60:	8836      	ldrh	r6, [r6, #0]
 801de62:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801de66:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801de6a:	437d      	muls	r5, r7
 801de6c:	4461      	add	r1, ip
 801de6e:	0a24      	lsrs	r4, r4, #8
 801de70:	fb02 5503 	mla	r5, r2, r3, r5
 801de74:	0a09      	lsrs	r1, r1, #8
 801de76:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801de7a:	fb04 540e 	mla	r4, r4, lr, r5
 801de7e:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801de82:	fb01 4100 	mla	r1, r1, r0, r4
 801de86:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801de8a:	0a09      	lsrs	r1, r1, #8
 801de8c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801de90:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801de94:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801de98:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801de9c:	fb07 f70a 	mul.w	r7, r7, sl
 801dea0:	fb03 7101 	mla	r1, r3, r1, r7
 801dea4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801dea8:	9b00      	ldr	r3, [sp, #0]
 801deaa:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801deae:	fb0e 1e08 	mla	lr, lr, r8, r1
 801deb2:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801deb6:	fb00 e101 	mla	r1, r0, r1, lr
 801deba:	43da      	mvns	r2, r3
 801debc:	1233      	asrs	r3, r6, #8
 801debe:	b2d2      	uxtb	r2, r2
 801dec0:	10f0      	asrs	r0, r6, #3
 801dec2:	0a09      	lsrs	r1, r1, #8
 801dec4:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801dec8:	00f6      	lsls	r6, r6, #3
 801deca:	4353      	muls	r3, r2
 801decc:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801ded0:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801ded4:	b2f6      	uxtb	r6, r6
 801ded6:	4321      	orrs	r1, r4
 801ded8:	4350      	muls	r0, r2
 801deda:	4356      	muls	r6, r2
 801dedc:	1c5a      	adds	r2, r3, #1
 801dede:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801dee2:	0c0b      	lsrs	r3, r1, #16
 801dee4:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801dee8:	1c42      	adds	r2, r0, #1
 801deea:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801deee:	0a0a      	lsrs	r2, r1, #8
 801def0:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801def4:	021b      	lsls	r3, r3, #8
 801def6:	00d2      	lsls	r2, r2, #3
 801def8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801defc:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801df00:	4313      	orrs	r3, r2
 801df02:	1c72      	adds	r2, r6, #1
 801df04:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801df08:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 801df0c:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801df10:	4319      	orrs	r1, r3
 801df12:	9b02      	ldr	r3, [sp, #8]
 801df14:	8019      	strh	r1, [r3, #0]
 801df16:	b005      	add	sp, #20
 801df18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801df1c:	2500      	movs	r5, #0
 801df1e:	e6fe      	b.n	801dd1e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 801df20:	2100      	movs	r1, #0
 801df22:	460d      	mov	r5, r1
 801df24:	e706      	b.n	801dd34 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801df26:	2100      	movs	r1, #0
 801df28:	e704      	b.n	801dd34 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801df2a:	4631      	mov	r1, r6
 801df2c:	e702      	b.n	801dd34 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801df2e:	2400      	movs	r4, #0
 801df30:	e713      	b.n	801dd5a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 801df32:	2200      	movs	r2, #0
 801df34:	4614      	mov	r4, r2
 801df36:	e71a      	b.n	801dd6e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801df38:	4602      	mov	r2, r0
 801df3a:	4604      	mov	r4, r0
 801df3c:	e717      	b.n	801dd6e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801df3e:	2200      	movs	r2, #0
 801df40:	e715      	b.n	801dd6e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801df42:	4632      	mov	r2, r6
 801df44:	e713      	b.n	801dd6e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

0801df48 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801df48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801df4c:	b09b      	sub	sp, #108	; 0x6c
 801df4e:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 801df52:	9218      	str	r2, [sp, #96]	; 0x60
 801df54:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801df56:	9116      	str	r1, [sp, #88]	; 0x58
 801df58:	9307      	str	r3, [sp, #28]
 801df5a:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801df5e:	9019      	str	r0, [sp, #100]	; 0x64
 801df60:	6850      	ldr	r0, [r2, #4]
 801df62:	6812      	ldr	r2, [r2, #0]
 801df64:	fb00 1303 	mla	r3, r0, r3, r1
 801df68:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801df6c:	930a      	str	r3, [sp, #40]	; 0x28
 801df6e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801df70:	681b      	ldr	r3, [r3, #0]
 801df72:	930f      	str	r3, [sp, #60]	; 0x3c
 801df74:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801df76:	2b00      	cmp	r3, #0
 801df78:	dc03      	bgt.n	801df82 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801df7a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801df7c:	2b00      	cmp	r3, #0
 801df7e:	f340 8386 	ble.w	801e68e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801df82:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801df84:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801df88:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801df8c:	1e48      	subs	r0, r1, #1
 801df8e:	1e57      	subs	r7, r2, #1
 801df90:	9b07      	ldr	r3, [sp, #28]
 801df92:	2b00      	cmp	r3, #0
 801df94:	f340 8166 	ble.w	801e264 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801df98:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801df9c:	ea4f 4326 	mov.w	r3, r6, asr #16
 801dfa0:	d406      	bmi.n	801dfb0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801dfa2:	4584      	cmp	ip, r0
 801dfa4:	da04      	bge.n	801dfb0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801dfa6:	2b00      	cmp	r3, #0
 801dfa8:	db02      	blt.n	801dfb0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801dfaa:	42bb      	cmp	r3, r7
 801dfac:	f2c0 815b 	blt.w	801e266 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801dfb0:	f11c 0c01 	adds.w	ip, ip, #1
 801dfb4:	f100 814b 	bmi.w	801e24e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801dfb8:	4561      	cmp	r1, ip
 801dfba:	f2c0 8148 	blt.w	801e24e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801dfbe:	3301      	adds	r3, #1
 801dfc0:	f100 8145 	bmi.w	801e24e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801dfc4:	429a      	cmp	r2, r3
 801dfc6:	f2c0 8142 	blt.w	801e24e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801dfca:	9b07      	ldr	r3, [sp, #28]
 801dfcc:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801dfce:	9317      	str	r3, [sp, #92]	; 0x5c
 801dfd0:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801dfd2:	2b00      	cmp	r3, #0
 801dfd4:	f340 8165 	ble.w	801e2a2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801dfd8:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 801dfda:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801dfdc:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801dfe0:	689b      	ldr	r3, [r3, #8]
 801dfe2:	1422      	asrs	r2, r4, #16
 801dfe4:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801dfe8:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801dfec:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801dff0:	f100 81d5 	bmi.w	801e39e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801dff4:	f103 38ff 	add.w	r8, r3, #4294967295
 801dff8:	4542      	cmp	r2, r8
 801dffa:	f280 81d0 	bge.w	801e39e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801dffe:	f1bc 0f00 	cmp.w	ip, #0
 801e002:	f2c0 81cc 	blt.w	801e39e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801e006:	f10e 38ff 	add.w	r8, lr, #4294967295
 801e00a:	45c4      	cmp	ip, r8
 801e00c:	f280 81c7 	bge.w	801e39e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801e010:	b21b      	sxth	r3, r3
 801e012:	fb0c 2203 	mla	r2, ip, r3, r2
 801e016:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801e018:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801e01c:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801e020:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801e024:	2900      	cmp	r1, #0
 801e026:	f000 8182 	beq.w	801e32e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801e02a:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801e02e:	950b      	str	r5, [sp, #44]	; 0x2c
 801e030:	0e2d      	lsrs	r5, r5, #24
 801e032:	9512      	str	r5, [sp, #72]	; 0x48
 801e034:	b180      	cbz	r0, 801e058 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801e036:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801e03a:	3b01      	subs	r3, #1
 801e03c:	009b      	lsls	r3, r3, #2
 801e03e:	3304      	adds	r3, #4
 801e040:	eb08 0c03 	add.w	ip, r8, r3
 801e044:	f858 3003 	ldr.w	r3, [r8, r3]
 801e048:	9308      	str	r3, [sp, #32]
 801e04a:	0e1b      	lsrs	r3, r3, #24
 801e04c:	9310      	str	r3, [sp, #64]	; 0x40
 801e04e:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801e052:	930c      	str	r3, [sp, #48]	; 0x30
 801e054:	0e1b      	lsrs	r3, r3, #24
 801e056:	9313      	str	r3, [sp, #76]	; 0x4c
 801e058:	b289      	uxth	r1, r1
 801e05a:	b280      	uxth	r0, r0
 801e05c:	fb01 f900 	mul.w	r9, r1, r0
 801e060:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801e064:	0109      	lsls	r1, r1, #4
 801e066:	eba1 0809 	sub.w	r8, r1, r9
 801e06a:	b280      	uxth	r0, r0
 801e06c:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 801e070:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801e072:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801e074:	fa1f f888 	uxth.w	r8, r8
 801e078:	1a09      	subs	r1, r1, r0
 801e07a:	b289      	uxth	r1, r1
 801e07c:	fb08 f303 	mul.w	r3, r8, r3
 801e080:	fb01 330e 	mla	r3, r1, lr, r3
 801e084:	fb00 3305 	mla	r3, r0, r5, r3
 801e088:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801e08a:	fb09 3305 	mla	r3, r9, r5, r3
 801e08e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801e092:	2b00      	cmp	r3, #0
 801e094:	f000 80d2 	beq.w	801e23c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801e098:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801e09c:	d01b      	beq.n	801e0d6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 801e09e:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 801e0a2:	fb0e fa0a 	mul.w	sl, lr, sl
 801e0a6:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801e0aa:	fb0e fe02 	mul.w	lr, lr, r2
 801e0ae:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801e0b2:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801e0b6:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801e0ba:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801e0be:	4452      	add	r2, sl
 801e0c0:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801e0c4:	0a12      	lsrs	r2, r2, #8
 801e0c6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e0ca:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801e0ce:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801e0d2:	ea42 020c 	orr.w	r2, r2, ip
 801e0d6:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e0d8:	2dff      	cmp	r5, #255	; 0xff
 801e0da:	d021      	beq.n	801e120 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 801e0dc:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801e0de:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801e0e2:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e0e4:	fb05 fb0b 	mul.w	fp, r5, fp
 801e0e8:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801e0ea:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e0ee:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e0f0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e0f4:	fb05 fa0a 	mul.w	sl, r5, sl
 801e0f8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e0fc:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801e100:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801e104:	44de      	add	lr, fp
 801e106:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e10a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e10e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e112:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e116:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e11a:	ea4e 050a 	orr.w	r5, lr, sl
 801e11e:	950b      	str	r5, [sp, #44]	; 0x2c
 801e120:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801e122:	2dff      	cmp	r5, #255	; 0xff
 801e124:	d021      	beq.n	801e16a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 801e126:	9d08      	ldr	r5, [sp, #32]
 801e128:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801e12c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801e12e:	fb05 fb0b 	mul.w	fp, r5, fp
 801e132:	9d08      	ldr	r5, [sp, #32]
 801e134:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801e138:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801e13a:	fb05 fa0e 	mul.w	sl, r5, lr
 801e13e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e142:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e146:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801e14a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801e14e:	44de      	add	lr, fp
 801e150:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e154:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e158:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e15c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e160:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e164:	ea4e 050a 	orr.w	r5, lr, sl
 801e168:	9508      	str	r5, [sp, #32]
 801e16a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801e16c:	2dff      	cmp	r5, #255	; 0xff
 801e16e:	d021      	beq.n	801e1b4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 801e170:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801e172:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801e176:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801e178:	fb05 fb0b 	mul.w	fp, r5, fp
 801e17c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801e17e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e182:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801e184:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e188:	fb05 fa0a 	mul.w	sl, r5, sl
 801e18c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e190:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801e194:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801e198:	44de      	add	lr, fp
 801e19a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e19e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e1a2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e1a6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e1aa:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e1ae:	ea4e 050a 	orr.w	r5, lr, sl
 801e1b2:	950c      	str	r5, [sp, #48]	; 0x30
 801e1b4:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801e1b6:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801e1ba:	9d08      	ldr	r5, [sp, #32]
 801e1bc:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 801e1c0:	fb08 fc0c 	mul.w	ip, r8, ip
 801e1c4:	fb01 cc0e 	mla	ip, r1, lr, ip
 801e1c8:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801e1cc:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801e1ce:	fb00 cc0e 	mla	ip, r0, lr, ip
 801e1d2:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801e1d6:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801e1d8:	fb09 cc0e 	mla	ip, r9, lr, ip
 801e1dc:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801e1e0:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801e1e4:	fb08 f80e 	mul.w	r8, r8, lr
 801e1e8:	fb01 8202 	mla	r2, r1, r2, r8
 801e1ec:	9908      	ldr	r1, [sp, #32]
 801e1ee:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801e1f2:	990c      	ldr	r1, [sp, #48]	; 0x30
 801e1f4:	fb00 220a 	mla	r2, r0, sl, r2
 801e1f8:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 801e1fc:	fb09 2900 	mla	r9, r9, r0, r2
 801e200:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e204:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801e208:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e20c:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801e210:	ea4c 0c09 	orr.w	ip, ip, r9
 801e214:	2bff      	cmp	r3, #255	; 0xff
 801e216:	ea4f 221c 	mov.w	r2, ip, lsr #8
 801e21a:	f040 8091 	bne.w	801e340 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801e21e:	ea4f 135c 	mov.w	r3, ip, lsr #5
 801e222:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 801e226:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e22a:	f022 0207 	bic.w	r2, r2, #7
 801e22e:	431a      	orrs	r2, r3
 801e230:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801e234:	ea4c 0c02 	orr.w	ip, ip, r2
 801e238:	f8a7 c000 	strh.w	ip, [r7]
 801e23c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801e23e:	441c      	add	r4, r3
 801e240:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801e242:	441e      	add	r6, r3
 801e244:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801e246:	3b01      	subs	r3, #1
 801e248:	3702      	adds	r7, #2
 801e24a:	9317      	str	r3, [sp, #92]	; 0x5c
 801e24c:	e6c0      	b.n	801dfd0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801e24e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801e250:	441c      	add	r4, r3
 801e252:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801e254:	441e      	add	r6, r3
 801e256:	9b07      	ldr	r3, [sp, #28]
 801e258:	3b01      	subs	r3, #1
 801e25a:	9307      	str	r3, [sp, #28]
 801e25c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e25e:	3302      	adds	r3, #2
 801e260:	930a      	str	r3, [sp, #40]	; 0x28
 801e262:	e695      	b.n	801df90 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801e264:	d024      	beq.n	801e2b0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801e266:	9b07      	ldr	r3, [sp, #28]
 801e268:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801e26a:	3b01      	subs	r3, #1
 801e26c:	fb00 4003 	mla	r0, r0, r3, r4
 801e270:	1400      	asrs	r0, r0, #16
 801e272:	f53f aeaa 	bmi.w	801dfca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801e276:	3901      	subs	r1, #1
 801e278:	4288      	cmp	r0, r1
 801e27a:	f6bf aea6 	bge.w	801dfca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801e27e:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801e280:	fb01 6303 	mla	r3, r1, r3, r6
 801e284:	141b      	asrs	r3, r3, #16
 801e286:	f53f aea0 	bmi.w	801dfca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801e28a:	3a01      	subs	r2, #1
 801e28c:	4293      	cmp	r3, r2
 801e28e:	f6bf ae9c 	bge.w	801dfca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801e292:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801e296:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 801e29a:	f1bb 0f00 	cmp.w	fp, #0
 801e29e:	f300 809a 	bgt.w	801e3d6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801e2a2:	9b07      	ldr	r3, [sp, #28]
 801e2a4:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801e2a8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e2aa:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801e2ae:	930a      	str	r3, [sp, #40]	; 0x28
 801e2b0:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801e2b2:	2b00      	cmp	r3, #0
 801e2b4:	f340 81eb 	ble.w	801e68e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801e2b8:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e2bc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801e2c0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801e2c4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801e2c6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e2ca:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e2ce:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e2d2:	eef0 6a62 	vmov.f32	s13, s5
 801e2d6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e2da:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e2de:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e2e2:	ee16 4a90 	vmov	r4, s13
 801e2e6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e2ea:	eef0 6a43 	vmov.f32	s13, s6
 801e2ee:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e2f2:	ee12 2a90 	vmov	r2, s5
 801e2f6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e2fa:	fb92 f3f3 	sdiv	r3, r2, r3
 801e2fe:	ee13 2a10 	vmov	r2, s6
 801e302:	9327      	str	r3, [sp, #156]	; 0x9c
 801e304:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801e306:	fb92 f3f3 	sdiv	r3, r2, r3
 801e30a:	9328      	str	r3, [sp, #160]	; 0xa0
 801e30c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801e30e:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801e310:	3b01      	subs	r3, #1
 801e312:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e316:	9316      	str	r3, [sp, #88]	; 0x58
 801e318:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801e31a:	bf08      	it	eq
 801e31c:	4613      	moveq	r3, r2
 801e31e:	ee16 6a90 	vmov	r6, s13
 801e322:	9307      	str	r3, [sp, #28]
 801e324:	eeb0 3a67 	vmov.f32	s6, s15
 801e328:	eef0 2a47 	vmov.f32	s5, s14
 801e32c:	e622      	b.n	801df74 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 801e32e:	2800      	cmp	r0, #0
 801e330:	f43f ae92 	beq.w	801e058 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801e334:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801e338:	9308      	str	r3, [sp, #32]
 801e33a:	0e1b      	lsrs	r3, r3, #24
 801e33c:	9310      	str	r3, [sp, #64]	; 0x40
 801e33e:	e68b      	b.n	801e058 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801e340:	8839      	ldrh	r1, [r7, #0]
 801e342:	4dd4      	ldr	r5, [pc, #848]	; (801e694 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 801e344:	43db      	mvns	r3, r3
 801e346:	ea4f 2e21 	mov.w	lr, r1, asr #8
 801e34a:	fa5f f883 	uxtb.w	r8, r3
 801e34e:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801e352:	fb0e fe08 	mul.w	lr, lr, r8
 801e356:	10c8      	asrs	r0, r1, #3
 801e358:	00cb      	lsls	r3, r1, #3
 801e35a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801e35e:	f10e 0101 	add.w	r1, lr, #1
 801e362:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 801e366:	fb00 f008 	mul.w	r0, r0, r8
 801e36a:	ea4f 411c 	mov.w	r1, ip, lsr #16
 801e36e:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 801e372:	f100 0e01 	add.w	lr, r0, #1
 801e376:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 801e37a:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801e37e:	b2db      	uxtb	r3, r3
 801e380:	b2c9      	uxtb	r1, r1
 801e382:	00d2      	lsls	r2, r2, #3
 801e384:	fb03 f308 	mul.w	r3, r3, r8
 801e388:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 801e38c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e390:	430a      	orrs	r2, r1
 801e392:	1c59      	adds	r1, r3, #1
 801e394:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801e398:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801e39c:	e748      	b.n	801e230 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 801e39e:	f112 0801 	adds.w	r8, r2, #1
 801e3a2:	f53f af4b 	bmi.w	801e23c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801e3a6:	4543      	cmp	r3, r8
 801e3a8:	f6ff af48 	blt.w	801e23c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801e3ac:	f11c 0801 	adds.w	r8, ip, #1
 801e3b0:	f53f af44 	bmi.w	801e23c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801e3b4:	45c6      	cmp	lr, r8
 801e3b6:	f6ff af41 	blt.w	801e23c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801e3ba:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 801e3be:	fa0f f28e 	sxth.w	r2, lr
 801e3c2:	e9cd 1003 	strd	r1, r0, [sp, #12]
 801e3c6:	9200      	str	r2, [sp, #0]
 801e3c8:	b21b      	sxth	r3, r3
 801e3ca:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801e3cc:	9819      	ldr	r0, [sp, #100]	; 0x64
 801e3ce:	4639      	mov	r1, r7
 801e3d0:	f7ff fc87 	bl	801dce2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 801e3d4:	e732      	b.n	801e23c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801e3d6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801e3d8:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801e3da:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 801e3de:	1421      	asrs	r1, r4, #16
 801e3e0:	1433      	asrs	r3, r6, #16
 801e3e2:	fb07 1303 	mla	r3, r7, r3, r1
 801e3e6:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801e3e8:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 801e3ec:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801e3f0:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801e3f4:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801e3f8:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801e3fc:	2a00      	cmp	r2, #0
 801e3fe:	f000 8107 	beq.w	801e610 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 801e402:	684d      	ldr	r5, [r1, #4]
 801e404:	950d      	str	r5, [sp, #52]	; 0x34
 801e406:	0e2d      	lsrs	r5, r5, #24
 801e408:	9514      	str	r5, [sp, #80]	; 0x50
 801e40a:	b178      	cbz	r0, 801e42c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801e40c:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 801e410:	3f01      	subs	r7, #1
 801e412:	00bf      	lsls	r7, r7, #2
 801e414:	3704      	adds	r7, #4
 801e416:	eb01 0e07 	add.w	lr, r1, r7
 801e41a:	59c9      	ldr	r1, [r1, r7]
 801e41c:	9109      	str	r1, [sp, #36]	; 0x24
 801e41e:	0e09      	lsrs	r1, r1, #24
 801e420:	9111      	str	r1, [sp, #68]	; 0x44
 801e422:	f8de 1004 	ldr.w	r1, [lr, #4]
 801e426:	910e      	str	r1, [sp, #56]	; 0x38
 801e428:	0e09      	lsrs	r1, r1, #24
 801e42a:	9115      	str	r1, [sp, #84]	; 0x54
 801e42c:	b292      	uxth	r2, r2
 801e42e:	b280      	uxth	r0, r0
 801e430:	fb02 f900 	mul.w	r9, r2, r0
 801e434:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801e438:	0112      	lsls	r2, r2, #4
 801e43a:	eba2 0e09 	sub.w	lr, r2, r9
 801e43e:	b280      	uxth	r0, r0
 801e440:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801e444:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e446:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801e448:	fa1f fe8e 	uxth.w	lr, lr
 801e44c:	1a09      	subs	r1, r1, r0
 801e44e:	b289      	uxth	r1, r1
 801e450:	fb0e f202 	mul.w	r2, lr, r2
 801e454:	fb01 220c 	mla	r2, r1, ip, r2
 801e458:	fb00 2205 	mla	r2, r0, r5, r2
 801e45c:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801e45e:	fb09 2205 	mla	r2, r9, r5, r2
 801e462:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801e466:	2a00      	cmp	r2, #0
 801e468:	f000 80c9 	beq.w	801e5fe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 801e46c:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801e470:	d019      	beq.n	801e4a6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 801e472:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801e476:	fb0c fa0a 	mul.w	sl, ip, sl
 801e47a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801e47e:	fb0c fc03 	mul.w	ip, ip, r3
 801e482:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801e486:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801e48a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801e48e:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801e492:	4453      	add	r3, sl
 801e494:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801e498:	0a1b      	lsrs	r3, r3, #8
 801e49a:	0a3f      	lsrs	r7, r7, #8
 801e49c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801e4a0:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801e4a4:	433b      	orrs	r3, r7
 801e4a6:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801e4a8:	2dff      	cmp	r5, #255	; 0xff
 801e4aa:	d020      	beq.n	801e4ee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 801e4ac:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801e4ae:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801e4b2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801e4b4:	436f      	muls	r7, r5
 801e4b6:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801e4b8:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e4bc:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801e4be:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e4c2:	fb05 fa0a 	mul.w	sl, r5, sl
 801e4c6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801e4ca:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e4ce:	44bc      	add	ip, r7
 801e4d0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801e4d4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801e4d8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e4dc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e4e0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e4e4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e4e8:	ea4c 050a 	orr.w	r5, ip, sl
 801e4ec:	950d      	str	r5, [sp, #52]	; 0x34
 801e4ee:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801e4f0:	2dff      	cmp	r5, #255	; 0xff
 801e4f2:	d020      	beq.n	801e536 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 801e4f4:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801e4f6:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801e4fa:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801e4fc:	436f      	muls	r7, r5
 801e4fe:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801e500:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801e504:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801e506:	fb05 fa0c 	mul.w	sl, r5, ip
 801e50a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e50e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e512:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801e516:	44bc      	add	ip, r7
 801e518:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801e51c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801e520:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e524:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e528:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e52c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e530:	ea4c 050a 	orr.w	r5, ip, sl
 801e534:	9509      	str	r5, [sp, #36]	; 0x24
 801e536:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801e538:	2dff      	cmp	r5, #255	; 0xff
 801e53a:	d020      	beq.n	801e57e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 801e53c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801e53e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801e542:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801e544:	436f      	muls	r7, r5
 801e546:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801e548:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e54c:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801e54e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e552:	fb05 fa0a 	mul.w	sl, r5, sl
 801e556:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801e55a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e55e:	44bc      	add	ip, r7
 801e560:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801e564:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801e568:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e56c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e570:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e574:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e578:	ea4c 050a 	orr.w	r5, ip, sl
 801e57c:	950e      	str	r5, [sp, #56]	; 0x38
 801e57e:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801e580:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801e584:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801e586:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801e58a:	fb0e f707 	mul.w	r7, lr, r7
 801e58e:	fb01 770c 	mla	r7, r1, ip, r7
 801e592:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801e596:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801e598:	fb00 770c 	mla	r7, r0, ip, r7
 801e59c:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801e5a0:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801e5a2:	fb09 770c 	mla	r7, r9, ip, r7
 801e5a6:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801e5aa:	fb0e fe0c 	mul.w	lr, lr, ip
 801e5ae:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801e5b2:	fb01 e303 	mla	r3, r1, r3, lr
 801e5b6:	9909      	ldr	r1, [sp, #36]	; 0x24
 801e5b8:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801e5bc:	990e      	ldr	r1, [sp, #56]	; 0x38
 801e5be:	fb00 330a 	mla	r3, r0, sl, r3
 801e5c2:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801e5c6:	fb09 3c0c 	mla	ip, r9, ip, r3
 801e5ca:	0a3f      	lsrs	r7, r7, #8
 801e5cc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e5d0:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801e5d4:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801e5d8:	ea47 070c 	orr.w	r7, r7, ip
 801e5dc:	2aff      	cmp	r2, #255	; 0xff
 801e5de:	ea4f 2317 	mov.w	r3, r7, lsr #8
 801e5e2:	d11e      	bne.n	801e622 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 801e5e4:	097a      	lsrs	r2, r7, #5
 801e5e6:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 801e5ea:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e5ee:	f023 0307 	bic.w	r3, r3, #7
 801e5f2:	4313      	orrs	r3, r2
 801e5f4:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801e5f8:	431f      	orrs	r7, r3
 801e5fa:	f8a8 7000 	strh.w	r7, [r8]
 801e5fe:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801e600:	441c      	add	r4, r3
 801e602:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801e604:	f108 0802 	add.w	r8, r8, #2
 801e608:	441e      	add	r6, r3
 801e60a:	f10b 3bff 	add.w	fp, fp, #4294967295
 801e60e:	e644      	b.n	801e29a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 801e610:	2800      	cmp	r0, #0
 801e612:	f43f af0b 	beq.w	801e42c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801e616:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 801e61a:	9109      	str	r1, [sp, #36]	; 0x24
 801e61c:	0e09      	lsrs	r1, r1, #24
 801e61e:	9111      	str	r1, [sp, #68]	; 0x44
 801e620:	e704      	b.n	801e42c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801e622:	f8b8 1000 	ldrh.w	r1, [r8]
 801e626:	43d2      	mvns	r2, r2
 801e628:	ea4f 2c21 	mov.w	ip, r1, asr #8
 801e62c:	fa5f fe82 	uxtb.w	lr, r2
 801e630:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801e634:	fb0c fc0e 	mul.w	ip, ip, lr
 801e638:	10c8      	asrs	r0, r1, #3
 801e63a:	00ca      	lsls	r2, r1, #3
 801e63c:	f10c 0101 	add.w	r1, ip, #1
 801e640:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801e644:	0c39      	lsrs	r1, r7, #16
 801e646:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801e64a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801e64e:	4911      	ldr	r1, [pc, #68]	; (801e694 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 801e650:	fb00 f00e 	mul.w	r0, r0, lr
 801e654:	fa5f fc8c 	uxtb.w	ip, ip
 801e658:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 801e65c:	b2d2      	uxtb	r2, r2
 801e65e:	1c41      	adds	r1, r0, #1
 801e660:	fb02 f20e 	mul.w	r2, r2, lr
 801e664:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801e668:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801e66c:	1c51      	adds	r1, r2, #1
 801e66e:	00c0      	lsls	r0, r0, #3
 801e670:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801e674:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801e678:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801e67c:	ea4c 0c00 	orr.w	ip, ip, r0
 801e680:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801e684:	ea47 0c0c 	orr.w	ip, r7, ip
 801e688:	f8a8 c000 	strh.w	ip, [r8]
 801e68c:	e7b7      	b.n	801e5fe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 801e68e:	b01b      	add	sp, #108	; 0x6c
 801e690:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e694:	fffff800 	.word	0xfffff800

0801e698 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 801e698:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801e69c:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 801e6a0:	2d00      	cmp	r5, #0
 801e6a2:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801e6a6:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801e6aa:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 801e6ae:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 801e6b2:	fb05 0e03 	mla	lr, r5, r3, r0
 801e6b6:	f2c0 808c 	blt.w	801e7d2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 801e6ba:	45a9      	cmp	r9, r5
 801e6bc:	f340 8089 	ble.w	801e7d2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 801e6c0:	2800      	cmp	r0, #0
 801e6c2:	f2c0 8084 	blt.w	801e7ce <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 801e6c6:	4580      	cmp	r8, r0
 801e6c8:	f340 8081 	ble.w	801e7ce <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 801e6cc:	ea4f 045e 	mov.w	r4, lr, lsr #1
 801e6d0:	f01e 0f01 	tst.w	lr, #1
 801e6d4:	5d16      	ldrb	r6, [r2, r4]
 801e6d6:	bf0c      	ite	eq
 801e6d8:	f006 060f 	andeq.w	r6, r6, #15
 801e6dc:	1136      	asrne	r6, r6, #4
 801e6de:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801e6e2:	b2f6      	uxtb	r6, r6
 801e6e4:	1c44      	adds	r4, r0, #1
 801e6e6:	d477      	bmi.n	801e7d8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801e6e8:	45a0      	cmp	r8, r4
 801e6ea:	dd75      	ble.n	801e7d8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801e6ec:	2f00      	cmp	r7, #0
 801e6ee:	d075      	beq.n	801e7dc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 801e6f0:	f10e 0a01 	add.w	sl, lr, #1
 801e6f4:	ea4f 045a 	mov.w	r4, sl, lsr #1
 801e6f8:	f01a 0f01 	tst.w	sl, #1
 801e6fc:	5d14      	ldrb	r4, [r2, r4]
 801e6fe:	bf0c      	ite	eq
 801e700:	f004 040f 	andeq.w	r4, r4, #15
 801e704:	1124      	asrne	r4, r4, #4
 801e706:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801e70a:	b2e4      	uxtb	r4, r4
 801e70c:	3501      	adds	r5, #1
 801e70e:	d469      	bmi.n	801e7e4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801e710:	45a9      	cmp	r9, r5
 801e712:	dd67      	ble.n	801e7e4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801e714:	f1bc 0f00 	cmp.w	ip, #0
 801e718:	d067      	beq.n	801e7ea <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 801e71a:	2800      	cmp	r0, #0
 801e71c:	db60      	blt.n	801e7e0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801e71e:	4580      	cmp	r8, r0
 801e720:	dd5e      	ble.n	801e7e0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801e722:	eb03 090e 	add.w	r9, r3, lr
 801e726:	ea4f 0559 	mov.w	r5, r9, lsr #1
 801e72a:	f019 0f01 	tst.w	r9, #1
 801e72e:	5d55      	ldrb	r5, [r2, r5]
 801e730:	bf0c      	ite	eq
 801e732:	f005 050f 	andeq.w	r5, r5, #15
 801e736:	112d      	asrne	r5, r5, #4
 801e738:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 801e73c:	b2ed      	uxtb	r5, r5
 801e73e:	3001      	adds	r0, #1
 801e740:	d456      	bmi.n	801e7f0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801e742:	4580      	cmp	r8, r0
 801e744:	dd54      	ble.n	801e7f0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801e746:	2f00      	cmp	r7, #0
 801e748:	d054      	beq.n	801e7f4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 801e74a:	3301      	adds	r3, #1
 801e74c:	449e      	add	lr, r3
 801e74e:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801e752:	f01e 0f01 	tst.w	lr, #1
 801e756:	5cd0      	ldrb	r0, [r2, r3]
 801e758:	bf0c      	ite	eq
 801e75a:	f000 000f 	andeq.w	r0, r0, #15
 801e75e:	1100      	asrne	r0, r0, #4
 801e760:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801e764:	b2c3      	uxtb	r3, r0
 801e766:	b2ba      	uxth	r2, r7
 801e768:	fa1f fc8c 	uxth.w	ip, ip
 801e76c:	fb02 f00c 	mul.w	r0, r2, ip
 801e770:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 801e774:	0112      	lsls	r2, r2, #4
 801e776:	fa1f fc8c 	uxth.w	ip, ip
 801e77a:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 801e77e:	1a12      	subs	r2, r2, r0
 801e780:	eba7 070c 	sub.w	r7, r7, ip
 801e784:	b292      	uxth	r2, r2
 801e786:	b2bf      	uxth	r7, r7
 801e788:	4362      	muls	r2, r4
 801e78a:	fb06 2207 	mla	r2, r6, r7, r2
 801e78e:	fb0c 2505 	mla	r5, ip, r5, r2
 801e792:	fb00 5303 	mla	r3, r0, r3, r5
 801e796:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801e79a:	b1b3      	cbz	r3, 801e7ca <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 801e79c:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 801e7a0:	435a      	muls	r2, r3
 801e7a2:	1c53      	adds	r3, r2, #1
 801e7a4:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801e7a8:	4a2d      	ldr	r2, [pc, #180]	; (801e860 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 801e7aa:	121b      	asrs	r3, r3, #8
 801e7ac:	6812      	ldr	r2, [r2, #0]
 801e7ae:	2bff      	cmp	r3, #255	; 0xff
 801e7b0:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801e7b4:	d120      	bne.n	801e7f8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 801e7b6:	4b2b      	ldr	r3, [pc, #172]	; (801e864 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 801e7b8:	0950      	lsrs	r0, r2, #5
 801e7ba:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801e7be:	4033      	ands	r3, r6
 801e7c0:	4318      	orrs	r0, r3
 801e7c2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801e7c6:	4302      	orrs	r2, r0
 801e7c8:	800a      	strh	r2, [r1, #0]
 801e7ca:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801e7ce:	2600      	movs	r6, #0
 801e7d0:	e788      	b.n	801e6e4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 801e7d2:	2400      	movs	r4, #0
 801e7d4:	4626      	mov	r6, r4
 801e7d6:	e799      	b.n	801e70c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801e7d8:	2400      	movs	r4, #0
 801e7da:	e797      	b.n	801e70c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801e7dc:	463c      	mov	r4, r7
 801e7de:	e795      	b.n	801e70c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801e7e0:	2500      	movs	r5, #0
 801e7e2:	e7ac      	b.n	801e73e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 801e7e4:	2300      	movs	r3, #0
 801e7e6:	461d      	mov	r5, r3
 801e7e8:	e7bd      	b.n	801e766 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801e7ea:	4663      	mov	r3, ip
 801e7ec:	4665      	mov	r5, ip
 801e7ee:	e7ba      	b.n	801e766 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801e7f0:	2300      	movs	r3, #0
 801e7f2:	e7b8      	b.n	801e766 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801e7f4:	463b      	mov	r3, r7
 801e7f6:	e7b6      	b.n	801e766 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801e7f8:	880d      	ldrh	r5, [r1, #0]
 801e7fa:	b29f      	uxth	r7, r3
 801e7fc:	122c      	asrs	r4, r5, #8
 801e7fe:	f3c2 4007 	ubfx	r0, r2, #16, #8
 801e802:	43db      	mvns	r3, r3
 801e804:	b2db      	uxtb	r3, r3
 801e806:	fb10 f007 	smulbb	r0, r0, r7
 801e80a:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801e80e:	fb04 0403 	mla	r4, r4, r3, r0
 801e812:	b2f6      	uxtb	r6, r6
 801e814:	10e8      	asrs	r0, r5, #3
 801e816:	b2d2      	uxtb	r2, r2
 801e818:	00ed      	lsls	r5, r5, #3
 801e81a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801e81e:	fb12 f207 	smulbb	r2, r2, r7
 801e822:	fb16 f607 	smulbb	r6, r6, r7
 801e826:	b2ed      	uxtb	r5, r5
 801e828:	b2a4      	uxth	r4, r4
 801e82a:	fb00 6603 	mla	r6, r0, r3, r6
 801e82e:	fb05 2303 	mla	r3, r5, r3, r2
 801e832:	b29a      	uxth	r2, r3
 801e834:	1c63      	adds	r3, r4, #1
 801e836:	b2b0      	uxth	r0, r6
 801e838:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801e83c:	1c53      	adds	r3, r2, #1
 801e83e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801e842:	1c42      	adds	r2, r0, #1
 801e844:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801e848:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801e84c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e850:	0940      	lsrs	r0, r0, #5
 801e852:	4323      	orrs	r3, r4
 801e854:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801e858:	4303      	orrs	r3, r0
 801e85a:	800b      	strh	r3, [r1, #0]
 801e85c:	e7b5      	b.n	801e7ca <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 801e85e:	bf00      	nop
 801e860:	2001536c 	.word	0x2001536c
 801e864:	00fff800 	.word	0x00fff800

0801e868 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e868:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e86c:	b097      	sub	sp, #92	; 0x5c
 801e86e:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 801e872:	9214      	str	r2, [sp, #80]	; 0x50
 801e874:	9309      	str	r3, [sp, #36]	; 0x24
 801e876:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801e878:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801e87c:	910d      	str	r1, [sp, #52]	; 0x34
 801e87e:	930f      	str	r3, [sp, #60]	; 0x3c
 801e880:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 801e884:	9015      	str	r0, [sp, #84]	; 0x54
 801e886:	6850      	ldr	r0, [r2, #4]
 801e888:	6812      	ldr	r2, [r2, #0]
 801e88a:	fb00 1303 	mla	r3, r0, r3, r1
 801e88e:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801e892:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801e894:	689b      	ldr	r3, [r3, #8]
 801e896:	3301      	adds	r3, #1
 801e898:	f023 0301 	bic.w	r3, r3, #1
 801e89c:	930a      	str	r3, [sp, #40]	; 0x28
 801e89e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801e8a0:	681f      	ldr	r7, [r3, #0]
 801e8a2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e8a4:	2b00      	cmp	r3, #0
 801e8a6:	dc03      	bgt.n	801e8b0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801e8a8:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801e8aa:	2b00      	cmp	r3, #0
 801e8ac:	f340 8287 	ble.w	801edbe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 801e8b0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801e8b2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e8b6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e8ba:	1e48      	subs	r0, r1, #1
 801e8bc:	f102 3cff 	add.w	ip, r2, #4294967295
 801e8c0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e8c2:	2b00      	cmp	r3, #0
 801e8c4:	f340 80c4 	ble.w	801ea50 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801e8c8:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801e8cc:	ea4f 4326 	mov.w	r3, r6, asr #16
 801e8d0:	d406      	bmi.n	801e8e0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801e8d2:	4586      	cmp	lr, r0
 801e8d4:	da04      	bge.n	801e8e0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801e8d6:	2b00      	cmp	r3, #0
 801e8d8:	db02      	blt.n	801e8e0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801e8da:	4563      	cmp	r3, ip
 801e8dc:	f2c0 80b9 	blt.w	801ea52 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 801e8e0:	f11e 0e01 	adds.w	lr, lr, #1
 801e8e4:	f100 80aa 	bmi.w	801ea3c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801e8e8:	4571      	cmp	r1, lr
 801e8ea:	f2c0 80a7 	blt.w	801ea3c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801e8ee:	3301      	adds	r3, #1
 801e8f0:	f100 80a4 	bmi.w	801ea3c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801e8f4:	429a      	cmp	r2, r3
 801e8f6:	f2c0 80a1 	blt.w	801ea3c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801e8fa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e8fc:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 801e900:	930e      	str	r3, [sp, #56]	; 0x38
 801e902:	46c8      	mov	r8, r9
 801e904:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e906:	2b00      	cmp	r3, #0
 801e908:	f340 80c3 	ble.w	801ea92 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801e90c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801e90e:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801e912:	1423      	asrs	r3, r4, #16
 801e914:	ea4f 4026 	mov.w	r0, r6, asr #16
 801e918:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801e91c:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801e920:	f100 814d 	bmi.w	801ebbe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801e924:	f10c 3bff 	add.w	fp, ip, #4294967295
 801e928:	455b      	cmp	r3, fp
 801e92a:	f280 8148 	bge.w	801ebbe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801e92e:	2800      	cmp	r0, #0
 801e930:	f2c0 8145 	blt.w	801ebbe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801e934:	f10e 3bff 	add.w	fp, lr, #4294967295
 801e938:	4558      	cmp	r0, fp
 801e93a:	f280 8140 	bge.w	801ebbe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801e93e:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801e940:	fb00 3305 	mla	r3, r0, r5, r3
 801e944:	0858      	lsrs	r0, r3, #1
 801e946:	07dd      	lsls	r5, r3, #31
 801e948:	f817 c000 	ldrb.w	ip, [r7, r0]
 801e94c:	bf54      	ite	pl
 801e94e:	f00c 0c0f 	andpl.w	ip, ip, #15
 801e952:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801e956:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801e95a:	fa5f fc8c 	uxtb.w	ip, ip
 801e95e:	2a00      	cmp	r2, #0
 801e960:	f000 80db 	beq.w	801eb1a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 801e964:	1c58      	adds	r0, r3, #1
 801e966:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801e96a:	07c0      	lsls	r0, r0, #31
 801e96c:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801e970:	bf54      	ite	pl
 801e972:	f00e 0e0f 	andpl.w	lr, lr, #15
 801e976:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801e97a:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801e97e:	fa5f f08e 	uxtb.w	r0, lr
 801e982:	9010      	str	r0, [sp, #64]	; 0x40
 801e984:	b1c9      	cbz	r1, 801e9ba <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801e986:	4453      	add	r3, sl
 801e988:	0858      	lsrs	r0, r3, #1
 801e98a:	07dd      	lsls	r5, r3, #31
 801e98c:	5c38      	ldrb	r0, [r7, r0]
 801e98e:	bf54      	ite	pl
 801e990:	f000 000f 	andpl.w	r0, r0, #15
 801e994:	1100      	asrmi	r0, r0, #4
 801e996:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801e99a:	3301      	adds	r3, #1
 801e99c:	b2c0      	uxtb	r0, r0
 801e99e:	900b      	str	r0, [sp, #44]	; 0x2c
 801e9a0:	0858      	lsrs	r0, r3, #1
 801e9a2:	07dd      	lsls	r5, r3, #31
 801e9a4:	f817 e000 	ldrb.w	lr, [r7, r0]
 801e9a8:	bf54      	ite	pl
 801e9aa:	f00e 030f 	andpl.w	r3, lr, #15
 801e9ae:	ea4f 132e 	movmi.w	r3, lr, asr #4
 801e9b2:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801e9b6:	b2db      	uxtb	r3, r3
 801e9b8:	9311      	str	r3, [sp, #68]	; 0x44
 801e9ba:	b292      	uxth	r2, r2
 801e9bc:	b289      	uxth	r1, r1
 801e9be:	fb02 f301 	mul.w	r3, r2, r1
 801e9c2:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801e9c6:	0112      	lsls	r2, r2, #4
 801e9c8:	b289      	uxth	r1, r1
 801e9ca:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801e9ce:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801e9d0:	1ad2      	subs	r2, r2, r3
 801e9d2:	1a40      	subs	r0, r0, r1
 801e9d4:	b292      	uxth	r2, r2
 801e9d6:	436a      	muls	r2, r5
 801e9d8:	b280      	uxth	r0, r0
 801e9da:	fb0c 2c00 	mla	ip, ip, r0, r2
 801e9de:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801e9e0:	fb01 c102 	mla	r1, r1, r2, ip
 801e9e4:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801e9e6:	fb03 1302 	mla	r3, r3, r2, r1
 801e9ea:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801e9ee:	b1db      	cbz	r3, 801ea28 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801e9f0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801e9f2:	4353      	muls	r3, r2
 801e9f4:	1c5a      	adds	r2, r3, #1
 801e9f6:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801e9fa:	4ac6      	ldr	r2, [pc, #792]	; (801ed14 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 801e9fc:	121b      	asrs	r3, r3, #8
 801e9fe:	6812      	ldr	r2, [r2, #0]
 801ea00:	2bff      	cmp	r3, #255	; 0xff
 801ea02:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801ea06:	f040 8099 	bne.w	801eb3c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 801ea0a:	0953      	lsrs	r3, r2, #5
 801ea0c:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801ea10:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ea14:	f02c 0c07 	bic.w	ip, ip, #7
 801ea18:	ea43 0c0c 	orr.w	ip, r3, ip
 801ea1c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801ea20:	ea4c 0202 	orr.w	r2, ip, r2
 801ea24:	f8a8 2000 	strh.w	r2, [r8]
 801ea28:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801ea2a:	441c      	add	r4, r3
 801ea2c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ea2e:	441e      	add	r6, r3
 801ea30:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ea32:	3b01      	subs	r3, #1
 801ea34:	f108 0802 	add.w	r8, r8, #2
 801ea38:	930e      	str	r3, [sp, #56]	; 0x38
 801ea3a:	e763      	b.n	801e904 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801ea3c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801ea3e:	441c      	add	r4, r3
 801ea40:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ea42:	441e      	add	r6, r3
 801ea44:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ea46:	3b01      	subs	r3, #1
 801ea48:	9309      	str	r3, [sp, #36]	; 0x24
 801ea4a:	f109 0902 	add.w	r9, r9, #2
 801ea4e:	e737      	b.n	801e8c0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801ea50:	d024      	beq.n	801ea9c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801ea52:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ea54:	9823      	ldr	r0, [sp, #140]	; 0x8c
 801ea56:	3b01      	subs	r3, #1
 801ea58:	fb00 4003 	mla	r0, r0, r3, r4
 801ea5c:	1400      	asrs	r0, r0, #16
 801ea5e:	f53f af4c 	bmi.w	801e8fa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801ea62:	3901      	subs	r1, #1
 801ea64:	4288      	cmp	r0, r1
 801ea66:	f6bf af48 	bge.w	801e8fa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801ea6a:	9924      	ldr	r1, [sp, #144]	; 0x90
 801ea6c:	fb01 6303 	mla	r3, r1, r3, r6
 801ea70:	141b      	asrs	r3, r3, #16
 801ea72:	f53f af42 	bmi.w	801e8fa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801ea76:	3a01      	subs	r2, #1
 801ea78:	4293      	cmp	r3, r2
 801ea7a:	f6bf af3e 	bge.w	801e8fa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801ea7e:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801ea82:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801ea86:	930e      	str	r3, [sp, #56]	; 0x38
 801ea88:	46c8      	mov	r8, r9
 801ea8a:	f1bb 0f00 	cmp.w	fp, #0
 801ea8e:	f300 80b7 	bgt.w	801ec00 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801ea92:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ea94:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801ea98:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801ea9c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ea9e:	2b00      	cmp	r3, #0
 801eaa0:	f340 818d 	ble.w	801edbe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 801eaa4:	ee30 0a04 	vadd.f32	s0, s0, s8
 801eaa8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801eaac:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801eab0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801eab2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801eab6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801eaba:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801eabe:	eef0 6a62 	vmov.f32	s13, s5
 801eac2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801eac6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801eaca:	ee77 2a62 	vsub.f32	s5, s14, s5
 801eace:	ee16 4a90 	vmov	r4, s13
 801ead2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ead6:	eef0 6a43 	vmov.f32	s13, s6
 801eada:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801eade:	ee12 2a90 	vmov	r2, s5
 801eae2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801eae6:	fb92 f3f3 	sdiv	r3, r2, r3
 801eaea:	ee13 2a10 	vmov	r2, s6
 801eaee:	9323      	str	r3, [sp, #140]	; 0x8c
 801eaf0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801eaf2:	fb92 f3f3 	sdiv	r3, r2, r3
 801eaf6:	9324      	str	r3, [sp, #144]	; 0x90
 801eaf8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801eafa:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801eafc:	3b01      	subs	r3, #1
 801eafe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801eb02:	930d      	str	r3, [sp, #52]	; 0x34
 801eb04:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801eb06:	bf08      	it	eq
 801eb08:	4613      	moveq	r3, r2
 801eb0a:	ee16 6a90 	vmov	r6, s13
 801eb0e:	9309      	str	r3, [sp, #36]	; 0x24
 801eb10:	eeb0 3a67 	vmov.f32	s6, s15
 801eb14:	eef0 2a47 	vmov.f32	s5, s14
 801eb18:	e6c3      	b.n	801e8a2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801eb1a:	2900      	cmp	r1, #0
 801eb1c:	f43f af4d 	beq.w	801e9ba <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801eb20:	eb0a 0003 	add.w	r0, sl, r3
 801eb24:	0843      	lsrs	r3, r0, #1
 801eb26:	07c0      	lsls	r0, r0, #31
 801eb28:	5cfb      	ldrb	r3, [r7, r3]
 801eb2a:	bf54      	ite	pl
 801eb2c:	f003 030f 	andpl.w	r3, r3, #15
 801eb30:	111b      	asrmi	r3, r3, #4
 801eb32:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801eb36:	b2db      	uxtb	r3, r3
 801eb38:	930b      	str	r3, [sp, #44]	; 0x2c
 801eb3a:	e73e      	b.n	801e9ba <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801eb3c:	f8b8 e000 	ldrh.w	lr, [r8]
 801eb40:	fa1f fb83 	uxth.w	fp, r3
 801eb44:	ea4f 202e 	mov.w	r0, lr, asr #8
 801eb48:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801eb4c:	43db      	mvns	r3, r3
 801eb4e:	b2db      	uxtb	r3, r3
 801eb50:	fb11 f10b 	smulbb	r1, r1, fp
 801eb54:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801eb58:	fb00 1003 	mla	r0, r0, r3, r1
 801eb5c:	fa5f fc8c 	uxtb.w	ip, ip
 801eb60:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801eb64:	b2d2      	uxtb	r2, r2
 801eb66:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801eb6a:	b280      	uxth	r0, r0
 801eb6c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801eb70:	fb1c fc0b 	smulbb	ip, ip, fp
 801eb74:	fa5f fe8e 	uxtb.w	lr, lr
 801eb78:	fb12 fb0b 	smulbb	fp, r2, fp
 801eb7c:	fb01 cc03 	mla	ip, r1, r3, ip
 801eb80:	fb0e bb03 	mla	fp, lr, r3, fp
 801eb84:	1c43      	adds	r3, r0, #1
 801eb86:	fa1f fc8c 	uxth.w	ip, ip
 801eb8a:	fa1f fb8b 	uxth.w	fp, fp
 801eb8e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801eb92:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 801eb96:	f10c 0101 	add.w	r1, ip, #1
 801eb9a:	f10b 0001 	add.w	r0, fp, #1
 801eb9e:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801eba2:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801eba6:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801ebaa:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801ebae:	4318      	orrs	r0, r3
 801ebb0:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801ebb4:	ea40 000c 	orr.w	r0, r0, ip
 801ebb8:	f8a8 0000 	strh.w	r0, [r8]
 801ebbc:	e734      	b.n	801ea28 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801ebbe:	f113 0b01 	adds.w	fp, r3, #1
 801ebc2:	f53f af31 	bmi.w	801ea28 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801ebc6:	45dc      	cmp	ip, fp
 801ebc8:	f6ff af2e 	blt.w	801ea28 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801ebcc:	f110 0b01 	adds.w	fp, r0, #1
 801ebd0:	f53f af2a 	bmi.w	801ea28 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801ebd4:	45de      	cmp	lr, fp
 801ebd6:	f6ff af27 	blt.w	801ea28 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801ebda:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801ebdc:	9302      	str	r3, [sp, #8]
 801ebde:	fa0f f38e 	sxth.w	r3, lr
 801ebe2:	9301      	str	r3, [sp, #4]
 801ebe4:	fa0f f38c 	sxth.w	r3, ip
 801ebe8:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801ebec:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801ebf0:	9300      	str	r3, [sp, #0]
 801ebf2:	463a      	mov	r2, r7
 801ebf4:	4653      	mov	r3, sl
 801ebf6:	4641      	mov	r1, r8
 801ebf8:	9815      	ldr	r0, [sp, #84]	; 0x54
 801ebfa:	f7ff fd4d 	bl	801e698 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 801ebfe:	e713      	b.n	801ea28 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801ec00:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801ec02:	1422      	asrs	r2, r4, #16
 801ec04:	1433      	asrs	r3, r6, #16
 801ec06:	fb05 2303 	mla	r3, r5, r3, r2
 801ec0a:	085a      	lsrs	r2, r3, #1
 801ec0c:	07dd      	lsls	r5, r3, #31
 801ec0e:	5cba      	ldrb	r2, [r7, r2]
 801ec10:	bf54      	ite	pl
 801ec12:	f002 020f 	andpl.w	r2, r2, #15
 801ec16:	1112      	asrmi	r2, r2, #4
 801ec18:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801ec1c:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801ec20:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801ec24:	b2d2      	uxtb	r2, r2
 801ec26:	2900      	cmp	r1, #0
 801ec28:	d076      	beq.n	801ed18 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801ec2a:	f103 0e01 	add.w	lr, r3, #1
 801ec2e:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 801ec32:	f01e 0f01 	tst.w	lr, #1
 801ec36:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801ec3a:	bf0c      	ite	eq
 801ec3c:	f00c 0c0f 	andeq.w	ip, ip, #15
 801ec40:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 801ec44:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801ec48:	fa5f f58c 	uxtb.w	r5, ip
 801ec4c:	9512      	str	r5, [sp, #72]	; 0x48
 801ec4e:	b300      	cbz	r0, 801ec92 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801ec50:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801ec52:	442b      	add	r3, r5
 801ec54:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801ec58:	07dd      	lsls	r5, r3, #31
 801ec5a:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801ec5e:	bf54      	ite	pl
 801ec60:	f00c 0c0f 	andpl.w	ip, ip, #15
 801ec64:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801ec68:	3301      	adds	r3, #1
 801ec6a:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801ec6e:	fa5f f58c 	uxtb.w	r5, ip
 801ec72:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801ec76:	950c      	str	r5, [sp, #48]	; 0x30
 801ec78:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801ec7c:	07dd      	lsls	r5, r3, #31
 801ec7e:	bf54      	ite	pl
 801ec80:	f00c 0c0f 	andpl.w	ip, ip, #15
 801ec84:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801ec88:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801ec8c:	fa5f f38c 	uxtb.w	r3, ip
 801ec90:	9313      	str	r3, [sp, #76]	; 0x4c
 801ec92:	b289      	uxth	r1, r1
 801ec94:	b280      	uxth	r0, r0
 801ec96:	fb01 f300 	mul.w	r3, r1, r0
 801ec9a:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 801ec9e:	0109      	lsls	r1, r1, #4
 801eca0:	b280      	uxth	r0, r0
 801eca2:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 801eca6:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801eca8:	1ac9      	subs	r1, r1, r3
 801ecaa:	ebac 0c00 	sub.w	ip, ip, r0
 801ecae:	b289      	uxth	r1, r1
 801ecb0:	4369      	muls	r1, r5
 801ecb2:	fa1f fc8c 	uxth.w	ip, ip
 801ecb6:	fb02 120c 	mla	r2, r2, ip, r1
 801ecba:	990c      	ldr	r1, [sp, #48]	; 0x30
 801ecbc:	fb00 2001 	mla	r0, r0, r1, r2
 801ecc0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801ecc2:	fb03 0302 	mla	r3, r3, r2, r0
 801ecc6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801ecca:	b1d3      	cbz	r3, 801ed02 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 801eccc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801ecce:	4353      	muls	r3, r2
 801ecd0:	1c5a      	adds	r2, r3, #1
 801ecd2:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801ecd6:	4a0f      	ldr	r2, [pc, #60]	; (801ed14 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 801ecd8:	121b      	asrs	r3, r3, #8
 801ecda:	6812      	ldr	r2, [r2, #0]
 801ecdc:	2bff      	cmp	r3, #255	; 0xff
 801ecde:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801ece2:	d12d      	bne.n	801ed40 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801ece4:	0953      	lsrs	r3, r2, #5
 801ece6:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801ecea:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ecee:	f02c 0c07 	bic.w	ip, ip, #7
 801ecf2:	ea43 0c0c 	orr.w	ip, r3, ip
 801ecf6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801ecfa:	ea4c 0202 	orr.w	r2, ip, r2
 801ecfe:	f8a8 2000 	strh.w	r2, [r8]
 801ed02:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801ed04:	441c      	add	r4, r3
 801ed06:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ed08:	f108 0802 	add.w	r8, r8, #2
 801ed0c:	441e      	add	r6, r3
 801ed0e:	f10b 3bff 	add.w	fp, fp, #4294967295
 801ed12:	e6ba      	b.n	801ea8a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 801ed14:	2001536c 	.word	0x2001536c
 801ed18:	2800      	cmp	r0, #0
 801ed1a:	d0ba      	beq.n	801ec92 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801ed1c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801ed1e:	442b      	add	r3, r5
 801ed20:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801ed24:	07db      	lsls	r3, r3, #31
 801ed26:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801ed2a:	bf54      	ite	pl
 801ed2c:	f00c 0c0f 	andpl.w	ip, ip, #15
 801ed30:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801ed34:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801ed38:	fa5f f38c 	uxtb.w	r3, ip
 801ed3c:	930c      	str	r3, [sp, #48]	; 0x30
 801ed3e:	e7a8      	b.n	801ec92 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801ed40:	f8b8 e000 	ldrh.w	lr, [r8]
 801ed44:	fa1f fa83 	uxth.w	sl, r3
 801ed48:	ea4f 202e 	mov.w	r0, lr, asr #8
 801ed4c:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801ed50:	43db      	mvns	r3, r3
 801ed52:	b2db      	uxtb	r3, r3
 801ed54:	fb11 f10a 	smulbb	r1, r1, sl
 801ed58:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801ed5c:	fb00 1003 	mla	r0, r0, r3, r1
 801ed60:	b2d2      	uxtb	r2, r2
 801ed62:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801ed66:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801ed6a:	fa5f fe8e 	uxtb.w	lr, lr
 801ed6e:	fb12 f20a 	smulbb	r2, r2, sl
 801ed72:	fb0e 2203 	mla	r2, lr, r3, r2
 801ed76:	fa5f fc8c 	uxtb.w	ip, ip
 801ed7a:	b280      	uxth	r0, r0
 801ed7c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801ed80:	b292      	uxth	r2, r2
 801ed82:	fb1c fc0a 	smulbb	ip, ip, sl
 801ed86:	fb01 cc03 	mla	ip, r1, r3, ip
 801ed8a:	1c43      	adds	r3, r0, #1
 801ed8c:	1c51      	adds	r1, r2, #1
 801ed8e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801ed92:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 801ed96:	fa1f fc8c 	uxth.w	ip, ip
 801ed9a:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801ed9e:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801eda2:	4308      	orrs	r0, r1
 801eda4:	f10c 0101 	add.w	r1, ip, #1
 801eda8:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801edac:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801edb0:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801edb4:	ea40 000c 	orr.w	r0, r0, ip
 801edb8:	f8a8 0000 	strh.w	r0, [r8]
 801edbc:	e7a1      	b.n	801ed02 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 801edbe:	b017      	add	sp, #92	; 0x5c
 801edc0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801edc4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 801edc4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801edc8:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 801edcc:	2d00      	cmp	r5, #0
 801edce:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801edd2:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801edd6:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 801edda:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 801edde:	fb05 0e03 	mla	lr, r5, r3, r0
 801ede2:	f2c0 80b0 	blt.w	801ef46 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 801ede6:	45a9      	cmp	r9, r5
 801ede8:	f340 80ad 	ble.w	801ef46 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 801edec:	2800      	cmp	r0, #0
 801edee:	f2c0 80a8 	blt.w	801ef42 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 801edf2:	4580      	cmp	r8, r0
 801edf4:	f340 80a5 	ble.w	801ef42 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 801edf8:	ea4f 045e 	mov.w	r4, lr, lsr #1
 801edfc:	f01e 0f01 	tst.w	lr, #1
 801ee00:	5d16      	ldrb	r6, [r2, r4]
 801ee02:	bf0c      	ite	eq
 801ee04:	f006 060f 	andeq.w	r6, r6, #15
 801ee08:	1136      	asrne	r6, r6, #4
 801ee0a:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801ee0e:	b2f6      	uxtb	r6, r6
 801ee10:	1c44      	adds	r4, r0, #1
 801ee12:	f100 809b 	bmi.w	801ef4c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 801ee16:	45a0      	cmp	r8, r4
 801ee18:	f340 8098 	ble.w	801ef4c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 801ee1c:	2f00      	cmp	r7, #0
 801ee1e:	f000 8097 	beq.w	801ef50 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 801ee22:	f10e 0a01 	add.w	sl, lr, #1
 801ee26:	ea4f 045a 	mov.w	r4, sl, lsr #1
 801ee2a:	f01a 0f01 	tst.w	sl, #1
 801ee2e:	5d14      	ldrb	r4, [r2, r4]
 801ee30:	bf0c      	ite	eq
 801ee32:	f004 040f 	andeq.w	r4, r4, #15
 801ee36:	1124      	asrne	r4, r4, #4
 801ee38:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801ee3c:	b2e4      	uxtb	r4, r4
 801ee3e:	3501      	adds	r5, #1
 801ee40:	f100 808a 	bmi.w	801ef58 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 801ee44:	45a9      	cmp	r9, r5
 801ee46:	f340 8087 	ble.w	801ef58 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 801ee4a:	f1bc 0f00 	cmp.w	ip, #0
 801ee4e:	f000 8086 	beq.w	801ef5e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 801ee52:	2800      	cmp	r0, #0
 801ee54:	db7e      	blt.n	801ef54 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 801ee56:	4580      	cmp	r8, r0
 801ee58:	dd7c      	ble.n	801ef54 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 801ee5a:	eb03 090e 	add.w	r9, r3, lr
 801ee5e:	ea4f 0559 	mov.w	r5, r9, lsr #1
 801ee62:	f019 0f01 	tst.w	r9, #1
 801ee66:	5d55      	ldrb	r5, [r2, r5]
 801ee68:	bf0c      	ite	eq
 801ee6a:	f005 050f 	andeq.w	r5, r5, #15
 801ee6e:	112d      	asrne	r5, r5, #4
 801ee70:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 801ee74:	b2ed      	uxtb	r5, r5
 801ee76:	3001      	adds	r0, #1
 801ee78:	d474      	bmi.n	801ef64 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801ee7a:	4580      	cmp	r8, r0
 801ee7c:	dd72      	ble.n	801ef64 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801ee7e:	2f00      	cmp	r7, #0
 801ee80:	d072      	beq.n	801ef68 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 801ee82:	3301      	adds	r3, #1
 801ee84:	449e      	add	lr, r3
 801ee86:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801ee8a:	f01e 0f01 	tst.w	lr, #1
 801ee8e:	5cd0      	ldrb	r0, [r2, r3]
 801ee90:	bf0c      	ite	eq
 801ee92:	f000 000f 	andeq.w	r0, r0, #15
 801ee96:	1100      	asrne	r0, r0, #4
 801ee98:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801ee9c:	b2c3      	uxtb	r3, r0
 801ee9e:	b2ba      	uxth	r2, r7
 801eea0:	fa1f fc8c 	uxth.w	ip, ip
 801eea4:	fb02 f00c 	mul.w	r0, r2, ip
 801eea8:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 801eeac:	0112      	lsls	r2, r2, #4
 801eeae:	fa1f fc8c 	uxth.w	ip, ip
 801eeb2:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 801eeb6:	1a12      	subs	r2, r2, r0
 801eeb8:	eba7 070c 	sub.w	r7, r7, ip
 801eebc:	b292      	uxth	r2, r2
 801eebe:	b2bf      	uxth	r7, r7
 801eec0:	4362      	muls	r2, r4
 801eec2:	fb06 2207 	mla	r2, r6, r7, r2
 801eec6:	fb0c 2505 	mla	r5, ip, r5, r2
 801eeca:	fb00 5303 	mla	r3, r0, r3, r5
 801eece:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801eed2:	b3a3      	cbz	r3, 801ef3e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 801eed4:	4a25      	ldr	r2, [pc, #148]	; (801ef6c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 801eed6:	880e      	ldrh	r6, [r1, #0]
 801eed8:	6815      	ldr	r5, [r2, #0]
 801eeda:	1234      	asrs	r4, r6, #8
 801eedc:	b29a      	uxth	r2, r3
 801eede:	f3c5 4007 	ubfx	r0, r5, #16, #8
 801eee2:	43db      	mvns	r3, r3
 801eee4:	b2db      	uxtb	r3, r3
 801eee6:	fb10 f002 	smulbb	r0, r0, r2
 801eeea:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801eeee:	fb04 0403 	mla	r4, r4, r3, r0
 801eef2:	f3c5 2707 	ubfx	r7, r5, #8, #8
 801eef6:	10f0      	asrs	r0, r6, #3
 801eef8:	b2ed      	uxtb	r5, r5
 801eefa:	00f6      	lsls	r6, r6, #3
 801eefc:	fb17 f702 	smulbb	r7, r7, r2
 801ef00:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801ef04:	fb15 f202 	smulbb	r2, r5, r2
 801ef08:	b2f6      	uxtb	r6, r6
 801ef0a:	b2a4      	uxth	r4, r4
 801ef0c:	fb00 7003 	mla	r0, r0, r3, r7
 801ef10:	fb06 2303 	mla	r3, r6, r3, r2
 801ef14:	b29a      	uxth	r2, r3
 801ef16:	1c63      	adds	r3, r4, #1
 801ef18:	b280      	uxth	r0, r0
 801ef1a:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801ef1e:	1c53      	adds	r3, r2, #1
 801ef20:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801ef24:	1c42      	adds	r2, r0, #1
 801ef26:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801ef2a:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801ef2e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801ef32:	0940      	lsrs	r0, r0, #5
 801ef34:	4323      	orrs	r3, r4
 801ef36:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ef3a:	4303      	orrs	r3, r0
 801ef3c:	800b      	strh	r3, [r1, #0]
 801ef3e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801ef42:	2600      	movs	r6, #0
 801ef44:	e764      	b.n	801ee10 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 801ef46:	2400      	movs	r4, #0
 801ef48:	4626      	mov	r6, r4
 801ef4a:	e778      	b.n	801ee3e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801ef4c:	2400      	movs	r4, #0
 801ef4e:	e776      	b.n	801ee3e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801ef50:	463c      	mov	r4, r7
 801ef52:	e774      	b.n	801ee3e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801ef54:	2500      	movs	r5, #0
 801ef56:	e78e      	b.n	801ee76 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 801ef58:	2300      	movs	r3, #0
 801ef5a:	461d      	mov	r5, r3
 801ef5c:	e79f      	b.n	801ee9e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801ef5e:	4663      	mov	r3, ip
 801ef60:	4665      	mov	r5, ip
 801ef62:	e79c      	b.n	801ee9e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801ef64:	2300      	movs	r3, #0
 801ef66:	e79a      	b.n	801ee9e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801ef68:	463b      	mov	r3, r7
 801ef6a:	e798      	b.n	801ee9e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801ef6c:	2001536c 	.word	0x2001536c

0801ef70 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ef70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ef74:	b093      	sub	sp, #76	; 0x4c
 801ef76:	461d      	mov	r5, r3
 801ef78:	920c      	str	r2, [sp, #48]	; 0x30
 801ef7a:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801ef7c:	9107      	str	r1, [sp, #28]
 801ef7e:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801ef82:	9011      	str	r0, [sp, #68]	; 0x44
 801ef84:	6850      	ldr	r0, [r2, #4]
 801ef86:	6812      	ldr	r2, [r2, #0]
 801ef88:	fb00 1303 	mla	r3, r0, r3, r1
 801ef8c:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801ef90:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ef92:	689b      	ldr	r3, [r3, #8]
 801ef94:	3301      	adds	r3, #1
 801ef96:	f023 0301 	bic.w	r3, r3, #1
 801ef9a:	9306      	str	r3, [sp, #24]
 801ef9c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ef9e:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801efa2:	681f      	ldr	r7, [r3, #0]
 801efa4:	9b07      	ldr	r3, [sp, #28]
 801efa6:	2b00      	cmp	r3, #0
 801efa8:	dc03      	bgt.n	801efb2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801efaa:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801efac:	2b00      	cmp	r3, #0
 801efae:	f340 8267 	ble.w	801f480 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 801efb2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801efb4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801efb8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801efbc:	1e48      	subs	r0, r1, #1
 801efbe:	f102 3cff 	add.w	ip, r2, #4294967295
 801efc2:	2d00      	cmp	r5, #0
 801efc4:	f340 80b8 	ble.w	801f138 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801efc8:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801efcc:	ea4f 4326 	mov.w	r3, r6, asr #16
 801efd0:	d406      	bmi.n	801efe0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801efd2:	4586      	cmp	lr, r0
 801efd4:	da04      	bge.n	801efe0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801efd6:	2b00      	cmp	r3, #0
 801efd8:	db02      	blt.n	801efe0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801efda:	4563      	cmp	r3, ip
 801efdc:	f2c0 80ad 	blt.w	801f13a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 801efe0:	f11e 0e01 	adds.w	lr, lr, #1
 801efe4:	f100 80a0 	bmi.w	801f128 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801efe8:	4571      	cmp	r1, lr
 801efea:	f2c0 809d 	blt.w	801f128 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801efee:	3301      	adds	r3, #1
 801eff0:	f100 809a 	bmi.w	801f128 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801eff4:	429a      	cmp	r2, r3
 801eff6:	f2c0 8097 	blt.w	801f128 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801effa:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 801effe:	9509      	str	r5, [sp, #36]	; 0x24
 801f000:	46c8      	mov	r8, r9
 801f002:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f004:	2b00      	cmp	r3, #0
 801f006:	f340 80b6 	ble.w	801f176 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 801f00a:	f3c4 3303 	ubfx	r3, r4, #12, #4
 801f00e:	9308      	str	r3, [sp, #32]
 801f010:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f012:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801f016:	1423      	asrs	r3, r4, #16
 801f018:	ea4f 4026 	mov.w	r0, r6, asr #16
 801f01c:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801f020:	f100 813e 	bmi.w	801f2a0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801f024:	f10c 3bff 	add.w	fp, ip, #4294967295
 801f028:	455b      	cmp	r3, fp
 801f02a:	f280 8139 	bge.w	801f2a0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801f02e:	2800      	cmp	r0, #0
 801f030:	f2c0 8136 	blt.w	801f2a0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801f034:	f10e 3bff 	add.w	fp, lr, #4294967295
 801f038:	4558      	cmp	r0, fp
 801f03a:	f280 8131 	bge.w	801f2a0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801f03e:	9a06      	ldr	r2, [sp, #24]
 801f040:	fb00 3302 	mla	r3, r0, r2, r3
 801f044:	0858      	lsrs	r0, r3, #1
 801f046:	07da      	lsls	r2, r3, #31
 801f048:	f817 c000 	ldrb.w	ip, [r7, r0]
 801f04c:	9a08      	ldr	r2, [sp, #32]
 801f04e:	bf54      	ite	pl
 801f050:	f00c 0c0f 	andpl.w	ip, ip, #15
 801f054:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801f058:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801f05c:	fa5f fc8c 	uxtb.w	ip, ip
 801f060:	2a00      	cmp	r2, #0
 801f062:	f000 80cb 	beq.w	801f1fc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801f066:	1c58      	adds	r0, r3, #1
 801f068:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801f06c:	07c0      	lsls	r0, r0, #31
 801f06e:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801f072:	bf54      	ite	pl
 801f074:	f00e 0e0f 	andpl.w	lr, lr, #15
 801f078:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801f07c:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801f080:	fa5f fe8e 	uxtb.w	lr, lr
 801f084:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 801f088:	b1b9      	cbz	r1, 801f0ba <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801f08a:	4453      	add	r3, sl
 801f08c:	0858      	lsrs	r0, r3, #1
 801f08e:	07da      	lsls	r2, r3, #31
 801f090:	5c38      	ldrb	r0, [r7, r0]
 801f092:	bf54      	ite	pl
 801f094:	f000 000f 	andpl.w	r0, r0, #15
 801f098:	1100      	asrmi	r0, r0, #4
 801f09a:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801f09e:	b2c0      	uxtb	r0, r0
 801f0a0:	900a      	str	r0, [sp, #40]	; 0x28
 801f0a2:	1c58      	adds	r0, r3, #1
 801f0a4:	0843      	lsrs	r3, r0, #1
 801f0a6:	07c2      	lsls	r2, r0, #31
 801f0a8:	5cfb      	ldrb	r3, [r7, r3]
 801f0aa:	bf54      	ite	pl
 801f0ac:	f003 030f 	andpl.w	r3, r3, #15
 801f0b0:	111b      	asrmi	r3, r3, #4
 801f0b2:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801f0b6:	b2db      	uxtb	r3, r3
 801f0b8:	930e      	str	r3, [sp, #56]	; 0x38
 801f0ba:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801f0be:	b289      	uxth	r1, r1
 801f0c0:	fb02 f301 	mul.w	r3, r2, r1
 801f0c4:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801f0c8:	0112      	lsls	r2, r2, #4
 801f0ca:	b289      	uxth	r1, r1
 801f0cc:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801f0d0:	1a40      	subs	r0, r0, r1
 801f0d2:	fa1f fe80 	uxth.w	lr, r0
 801f0d6:	1ad2      	subs	r2, r2, r3
 801f0d8:	980d      	ldr	r0, [sp, #52]	; 0x34
 801f0da:	b292      	uxth	r2, r2
 801f0dc:	4342      	muls	r2, r0
 801f0de:	fb0c 2c0e 	mla	ip, ip, lr, r2
 801f0e2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801f0e4:	fb01 c102 	mla	r1, r1, r2, ip
 801f0e8:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801f0ea:	fb03 1302 	mla	r3, r3, r2, r1
 801f0ee:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f0f2:	2bff      	cmp	r3, #255	; 0xff
 801f0f4:	f040 8093 	bne.w	801f21e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 801f0f8:	4bbe      	ldr	r3, [pc, #760]	; (801f3f4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801f0fa:	681a      	ldr	r2, [r3, #0]
 801f0fc:	4bbe      	ldr	r3, [pc, #760]	; (801f3f8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 801f0fe:	0951      	lsrs	r1, r2, #5
 801f100:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 801f104:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801f108:	430b      	orrs	r3, r1
 801f10a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801f10e:	4313      	orrs	r3, r2
 801f110:	f8a8 3000 	strh.w	r3, [r8]
 801f114:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f116:	441c      	add	r4, r3
 801f118:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f11a:	441e      	add	r6, r3
 801f11c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f11e:	3b01      	subs	r3, #1
 801f120:	f108 0802 	add.w	r8, r8, #2
 801f124:	9309      	str	r3, [sp, #36]	; 0x24
 801f126:	e76c      	b.n	801f002 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f128:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f12a:	441c      	add	r4, r3
 801f12c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f12e:	3d01      	subs	r5, #1
 801f130:	441e      	add	r6, r3
 801f132:	f109 0902 	add.w	r9, r9, #2
 801f136:	e744      	b.n	801efc2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801f138:	d021      	beq.n	801f17e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801f13a:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801f13c:	1e6b      	subs	r3, r5, #1
 801f13e:	fb00 4003 	mla	r0, r0, r3, r4
 801f142:	1400      	asrs	r0, r0, #16
 801f144:	f53f af59 	bmi.w	801effa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801f148:	3901      	subs	r1, #1
 801f14a:	4288      	cmp	r0, r1
 801f14c:	f6bf af55 	bge.w	801effa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801f150:	9920      	ldr	r1, [sp, #128]	; 0x80
 801f152:	fb01 6303 	mla	r3, r1, r3, r6
 801f156:	141b      	asrs	r3, r3, #16
 801f158:	f53f af4f 	bmi.w	801effa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801f15c:	3a01      	subs	r2, #1
 801f15e:	4293      	cmp	r3, r2
 801f160:	f6bf af4b 	bge.w	801effa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801f164:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801f168:	9308      	str	r3, [sp, #32]
 801f16a:	46a8      	mov	r8, r5
 801f16c:	46ce      	mov	lr, r9
 801f16e:	f1b8 0f00 	cmp.w	r8, #0
 801f172:	f300 80b5 	bgt.w	801f2e0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801f176:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801f17a:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801f17e:	9b07      	ldr	r3, [sp, #28]
 801f180:	2b00      	cmp	r3, #0
 801f182:	f340 817d 	ble.w	801f480 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 801f186:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f18a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801f18e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f192:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801f194:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f198:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f19c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f1a0:	eef0 6a62 	vmov.f32	s13, s5
 801f1a4:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f1a8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f1ac:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f1b0:	ee16 4a90 	vmov	r4, s13
 801f1b4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f1b8:	eef0 6a43 	vmov.f32	s13, s6
 801f1bc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f1c0:	ee12 2a90 	vmov	r2, s5
 801f1c4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f1c8:	fb92 f3f3 	sdiv	r3, r2, r3
 801f1cc:	ee13 2a10 	vmov	r2, s6
 801f1d0:	931f      	str	r3, [sp, #124]	; 0x7c
 801f1d2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801f1d4:	fb92 f3f3 	sdiv	r3, r2, r3
 801f1d8:	9320      	str	r3, [sp, #128]	; 0x80
 801f1da:	9b07      	ldr	r3, [sp, #28]
 801f1dc:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801f1de:	3b01      	subs	r3, #1
 801f1e0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f1e4:	9307      	str	r3, [sp, #28]
 801f1e6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801f1e8:	ee16 6a90 	vmov	r6, s13
 801f1ec:	bf14      	ite	ne
 801f1ee:	461d      	movne	r5, r3
 801f1f0:	4615      	moveq	r5, r2
 801f1f2:	eeb0 3a67 	vmov.f32	s6, s15
 801f1f6:	eef0 2a47 	vmov.f32	s5, s14
 801f1fa:	e6d3      	b.n	801efa4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801f1fc:	2900      	cmp	r1, #0
 801f1fe:	f43f af5c 	beq.w	801f0ba <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801f202:	eb0a 0003 	add.w	r0, sl, r3
 801f206:	0843      	lsrs	r3, r0, #1
 801f208:	07c0      	lsls	r0, r0, #31
 801f20a:	5cfb      	ldrb	r3, [r7, r3]
 801f20c:	bf54      	ite	pl
 801f20e:	f003 030f 	andpl.w	r3, r3, #15
 801f212:	111b      	asrmi	r3, r3, #4
 801f214:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801f218:	b2db      	uxtb	r3, r3
 801f21a:	930a      	str	r3, [sp, #40]	; 0x28
 801f21c:	e74d      	b.n	801f0ba <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801f21e:	2b00      	cmp	r3, #0
 801f220:	f43f af78 	beq.w	801f114 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801f224:	4a73      	ldr	r2, [pc, #460]	; (801f3f4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801f226:	f8b8 c000 	ldrh.w	ip, [r8]
 801f22a:	6810      	ldr	r0, [r2, #0]
 801f22c:	fa1f fe83 	uxth.w	lr, r3
 801f230:	ea4f 212c 	mov.w	r1, ip, asr #8
 801f234:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801f238:	43db      	mvns	r3, r3
 801f23a:	b2db      	uxtb	r3, r3
 801f23c:	fb12 f20e 	smulbb	r2, r2, lr
 801f240:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801f244:	fb01 2103 	mla	r1, r1, r3, r2
 801f248:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 801f24c:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801f250:	b2c0      	uxtb	r0, r0
 801f252:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801f256:	fb1b fb0e 	smulbb	fp, fp, lr
 801f25a:	b289      	uxth	r1, r1
 801f25c:	fb10 fe0e 	smulbb	lr, r0, lr
 801f260:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801f264:	fa5f fc8c 	uxtb.w	ip, ip
 801f268:	fb02 b203 	mla	r2, r2, r3, fp
 801f26c:	1c48      	adds	r0, r1, #1
 801f26e:	fb0c e303 	mla	r3, ip, r3, lr
 801f272:	b292      	uxth	r2, r2
 801f274:	b29b      	uxth	r3, r3
 801f276:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 801f27a:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 801f27e:	f102 0b01 	add.w	fp, r2, #1
 801f282:	1c59      	adds	r1, r3, #1
 801f284:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801f288:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801f28c:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801f290:	0952      	lsrs	r2, r2, #5
 801f292:	4301      	orrs	r1, r0
 801f294:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801f298:	4311      	orrs	r1, r2
 801f29a:	f8a8 1000 	strh.w	r1, [r8]
 801f29e:	e739      	b.n	801f114 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801f2a0:	f113 0b01 	adds.w	fp, r3, #1
 801f2a4:	f53f af36 	bmi.w	801f114 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801f2a8:	45dc      	cmp	ip, fp
 801f2aa:	f6ff af33 	blt.w	801f114 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801f2ae:	f110 0b01 	adds.w	fp, r0, #1
 801f2b2:	f53f af2f 	bmi.w	801f114 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801f2b6:	45de      	cmp	lr, fp
 801f2b8:	f6ff af2c 	blt.w	801f114 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801f2bc:	9a08      	ldr	r2, [sp, #32]
 801f2be:	9302      	str	r3, [sp, #8]
 801f2c0:	fa0f f38e 	sxth.w	r3, lr
 801f2c4:	9301      	str	r3, [sp, #4]
 801f2c6:	fa0f f38c 	sxth.w	r3, ip
 801f2ca:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801f2ce:	9105      	str	r1, [sp, #20]
 801f2d0:	9300      	str	r3, [sp, #0]
 801f2d2:	463a      	mov	r2, r7
 801f2d4:	4653      	mov	r3, sl
 801f2d6:	4641      	mov	r1, r8
 801f2d8:	9811      	ldr	r0, [sp, #68]	; 0x44
 801f2da:	f7ff fd73 	bl	801edc4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 801f2de:	e719      	b.n	801f114 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801f2e0:	9906      	ldr	r1, [sp, #24]
 801f2e2:	1422      	asrs	r2, r4, #16
 801f2e4:	1433      	asrs	r3, r6, #16
 801f2e6:	fb01 2303 	mla	r3, r1, r3, r2
 801f2ea:	085a      	lsrs	r2, r3, #1
 801f2ec:	07d9      	lsls	r1, r3, #31
 801f2ee:	5cba      	ldrb	r2, [r7, r2]
 801f2f0:	bf54      	ite	pl
 801f2f2:	f002 020f 	andpl.w	r2, r2, #15
 801f2f6:	1112      	asrmi	r2, r2, #4
 801f2f8:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801f2fc:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801f300:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801f304:	b2d2      	uxtb	r2, r2
 801f306:	2800      	cmp	r0, #0
 801f308:	d062      	beq.n	801f3d0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 801f30a:	f103 0a01 	add.w	sl, r3, #1
 801f30e:	ea4f 015a 	mov.w	r1, sl, lsr #1
 801f312:	f01a 0f01 	tst.w	sl, #1
 801f316:	5c79      	ldrb	r1, [r7, r1]
 801f318:	bf0c      	ite	eq
 801f31a:	f001 010f 	andeq.w	r1, r1, #15
 801f31e:	1109      	asrne	r1, r1, #4
 801f320:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801f324:	b2c9      	uxtb	r1, r1
 801f326:	910f      	str	r1, [sp, #60]	; 0x3c
 801f328:	f1bc 0f00 	cmp.w	ip, #0
 801f32c:	d019      	beq.n	801f362 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 801f32e:	9908      	ldr	r1, [sp, #32]
 801f330:	440b      	add	r3, r1
 801f332:	0859      	lsrs	r1, r3, #1
 801f334:	f013 0f01 	tst.w	r3, #1
 801f338:	5c79      	ldrb	r1, [r7, r1]
 801f33a:	bf0c      	ite	eq
 801f33c:	f001 010f 	andeq.w	r1, r1, #15
 801f340:	1109      	asrne	r1, r1, #4
 801f342:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801f346:	b2c9      	uxtb	r1, r1
 801f348:	3301      	adds	r3, #1
 801f34a:	910b      	str	r1, [sp, #44]	; 0x2c
 801f34c:	0859      	lsrs	r1, r3, #1
 801f34e:	07db      	lsls	r3, r3, #31
 801f350:	5c79      	ldrb	r1, [r7, r1]
 801f352:	bf54      	ite	pl
 801f354:	f001 010f 	andpl.w	r1, r1, #15
 801f358:	1109      	asrmi	r1, r1, #4
 801f35a:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801f35e:	b2c9      	uxtb	r1, r1
 801f360:	9110      	str	r1, [sp, #64]	; 0x40
 801f362:	b280      	uxth	r0, r0
 801f364:	fa1f fc8c 	uxth.w	ip, ip
 801f368:	fb00 f30c 	mul.w	r3, r0, ip
 801f36c:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 801f370:	0100      	lsls	r0, r0, #4
 801f372:	fa1f fc8c 	uxth.w	ip, ip
 801f376:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 801f37a:	eba1 010c 	sub.w	r1, r1, ip
 801f37e:	fa1f fa81 	uxth.w	sl, r1
 801f382:	1ac0      	subs	r0, r0, r3
 801f384:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801f386:	b280      	uxth	r0, r0
 801f388:	4348      	muls	r0, r1
 801f38a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801f38c:	fb02 020a 	mla	r2, r2, sl, r0
 801f390:	fb0c 2c01 	mla	ip, ip, r1, r2
 801f394:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801f396:	fb03 c302 	mla	r3, r3, r2, ip
 801f39a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f39e:	2bff      	cmp	r3, #255	; 0xff
 801f3a0:	d12c      	bne.n	801f3fc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 801f3a2:	4b14      	ldr	r3, [pc, #80]	; (801f3f4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801f3a4:	681a      	ldr	r2, [r3, #0]
 801f3a6:	4b14      	ldr	r3, [pc, #80]	; (801f3f8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 801f3a8:	0951      	lsrs	r1, r2, #5
 801f3aa:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 801f3ae:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801f3b2:	430b      	orrs	r3, r1
 801f3b4:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801f3b8:	4313      	orrs	r3, r2
 801f3ba:	f8ae 3000 	strh.w	r3, [lr]
 801f3be:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f3c0:	441c      	add	r4, r3
 801f3c2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f3c4:	f10e 0e02 	add.w	lr, lr, #2
 801f3c8:	441e      	add	r6, r3
 801f3ca:	f108 38ff 	add.w	r8, r8, #4294967295
 801f3ce:	e6ce      	b.n	801f16e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801f3d0:	f1bc 0f00 	cmp.w	ip, #0
 801f3d4:	d0c5      	beq.n	801f362 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 801f3d6:	9908      	ldr	r1, [sp, #32]
 801f3d8:	440b      	add	r3, r1
 801f3da:	0859      	lsrs	r1, r3, #1
 801f3dc:	07db      	lsls	r3, r3, #31
 801f3de:	5c79      	ldrb	r1, [r7, r1]
 801f3e0:	bf54      	ite	pl
 801f3e2:	f001 010f 	andpl.w	r1, r1, #15
 801f3e6:	1109      	asrmi	r1, r1, #4
 801f3e8:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801f3ec:	b2c9      	uxtb	r1, r1
 801f3ee:	910b      	str	r1, [sp, #44]	; 0x2c
 801f3f0:	e7b7      	b.n	801f362 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 801f3f2:	bf00      	nop
 801f3f4:	2001536c 	.word	0x2001536c
 801f3f8:	fffff800 	.word	0xfffff800
 801f3fc:	2b00      	cmp	r3, #0
 801f3fe:	d0de      	beq.n	801f3be <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801f400:	4a21      	ldr	r2, [pc, #132]	; (801f488 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 801f402:	f8be c000 	ldrh.w	ip, [lr]
 801f406:	6810      	ldr	r0, [r2, #0]
 801f408:	fa1f fa83 	uxth.w	sl, r3
 801f40c:	ea4f 212c 	mov.w	r1, ip, asr #8
 801f410:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801f414:	43db      	mvns	r3, r3
 801f416:	b2db      	uxtb	r3, r3
 801f418:	fb12 f20a 	smulbb	r2, r2, sl
 801f41c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801f420:	fb01 2103 	mla	r1, r1, r3, r2
 801f424:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 801f428:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801f42c:	b2c0      	uxtb	r0, r0
 801f42e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801f432:	fa5f fc8c 	uxtb.w	ip, ip
 801f436:	fb10 f00a 	smulbb	r0, r0, sl
 801f43a:	fb0c 0003 	mla	r0, ip, r3, r0
 801f43e:	b289      	uxth	r1, r1
 801f440:	fb1b fb0a 	smulbb	fp, fp, sl
 801f444:	b280      	uxth	r0, r0
 801f446:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801f44a:	fb02 b203 	mla	r2, r2, r3, fp
 801f44e:	1c4b      	adds	r3, r1, #1
 801f450:	f100 0b01 	add.w	fp, r0, #1
 801f454:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801f458:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 801f45c:	b292      	uxth	r2, r2
 801f45e:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 801f462:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801f466:	ea4b 0101 	orr.w	r1, fp, r1
 801f46a:	f102 0b01 	add.w	fp, r2, #1
 801f46e:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801f472:	0952      	lsrs	r2, r2, #5
 801f474:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801f478:	4311      	orrs	r1, r2
 801f47a:	f8ae 1000 	strh.w	r1, [lr]
 801f47e:	e79e      	b.n	801f3be <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801f480:	b013      	add	sp, #76	; 0x4c
 801f482:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f486:	bf00      	nop
 801f488:	2001536c 	.word	0x2001536c

0801f48c <CRC_Lock>:
 801f48c:	b530      	push	{r4, r5, lr}
 801f48e:	4a20      	ldr	r2, [pc, #128]	; (801f510 <CRC_Lock+0x84>)
 801f490:	6813      	ldr	r3, [r2, #0]
 801f492:	f023 0301 	bic.w	r3, r3, #1
 801f496:	6013      	str	r3, [r2, #0]
 801f498:	4b1e      	ldr	r3, [pc, #120]	; (801f514 <CRC_Lock+0x88>)
 801f49a:	681a      	ldr	r2, [r3, #0]
 801f49c:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 801f4a0:	4022      	ands	r2, r4
 801f4a2:	f24c 2540 	movw	r5, #49728	; 0xc240
 801f4a6:	42aa      	cmp	r2, r5
 801f4a8:	d005      	beq.n	801f4b6 <CRC_Lock+0x2a>
 801f4aa:	681b      	ldr	r3, [r3, #0]
 801f4ac:	f24c 2270 	movw	r2, #49776	; 0xc270
 801f4b0:	4023      	ands	r3, r4
 801f4b2:	4293      	cmp	r3, r2
 801f4b4:	d124      	bne.n	801f500 <CRC_Lock+0x74>
 801f4b6:	4b18      	ldr	r3, [pc, #96]	; (801f518 <CRC_Lock+0x8c>)
 801f4b8:	681b      	ldr	r3, [r3, #0]
 801f4ba:	bb0b      	cbnz	r3, 801f500 <CRC_Lock+0x74>
 801f4bc:	4b17      	ldr	r3, [pc, #92]	; (801f51c <CRC_Lock+0x90>)
 801f4be:	681a      	ldr	r2, [r3, #0]
 801f4c0:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801f4c4:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 801f4c8:	d00d      	beq.n	801f4e6 <CRC_Lock+0x5a>
 801f4ca:	681a      	ldr	r2, [r3, #0]
 801f4cc:	f240 4483 	movw	r4, #1155	; 0x483
 801f4d0:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801f4d4:	42a2      	cmp	r2, r4
 801f4d6:	d006      	beq.n	801f4e6 <CRC_Lock+0x5a>
 801f4d8:	681b      	ldr	r3, [r3, #0]
 801f4da:	f240 4285 	movw	r2, #1157	; 0x485
 801f4de:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801f4e2:	4293      	cmp	r3, r2
 801f4e4:	d10c      	bne.n	801f500 <CRC_Lock+0x74>
 801f4e6:	4b0e      	ldr	r3, [pc, #56]	; (801f520 <CRC_Lock+0x94>)
 801f4e8:	2201      	movs	r2, #1
 801f4ea:	601a      	str	r2, [r3, #0]
 801f4ec:	681a      	ldr	r2, [r3, #0]
 801f4ee:	2a00      	cmp	r2, #0
 801f4f0:	d1fc      	bne.n	801f4ec <CRC_Lock+0x60>
 801f4f2:	4b0c      	ldr	r3, [pc, #48]	; (801f524 <CRC_Lock+0x98>)
 801f4f4:	6018      	str	r0, [r3, #0]
 801f4f6:	6818      	ldr	r0, [r3, #0]
 801f4f8:	1a43      	subs	r3, r0, r1
 801f4fa:	4258      	negs	r0, r3
 801f4fc:	4158      	adcs	r0, r3
 801f4fe:	bd30      	pop	{r4, r5, pc}
 801f500:	4b09      	ldr	r3, [pc, #36]	; (801f528 <CRC_Lock+0x9c>)
 801f502:	2201      	movs	r2, #1
 801f504:	601a      	str	r2, [r3, #0]
 801f506:	681a      	ldr	r2, [r3, #0]
 801f508:	2a00      	cmp	r2, #0
 801f50a:	d1fc      	bne.n	801f506 <CRC_Lock+0x7a>
 801f50c:	4b07      	ldr	r3, [pc, #28]	; (801f52c <CRC_Lock+0xa0>)
 801f50e:	e7f1      	b.n	801f4f4 <CRC_Lock+0x68>
 801f510:	e0002000 	.word	0xe0002000
 801f514:	e000ed00 	.word	0xe000ed00
 801f518:	e0042000 	.word	0xe0042000
 801f51c:	5c001000 	.word	0x5c001000
 801f520:	58024c08 	.word	0x58024c08
 801f524:	58024c00 	.word	0x58024c00
 801f528:	40023008 	.word	0x40023008
 801f52c:	40023000 	.word	0x40023000

0801f530 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 801f530:	6101      	str	r1, [r0, #16]
 801f532:	4770      	bx	lr

0801f534 <_ZN8touchgfx8Gestures4tickEv>:
 801f534:	7b83      	ldrb	r3, [r0, #14]
 801f536:	b14b      	cbz	r3, 801f54c <_ZN8touchgfx8Gestures4tickEv+0x18>
 801f538:	8903      	ldrh	r3, [r0, #8]
 801f53a:	3301      	adds	r3, #1
 801f53c:	b29b      	uxth	r3, r3
 801f53e:	2b07      	cmp	r3, #7
 801f540:	8103      	strh	r3, [r0, #8]
 801f542:	bf81      	itttt	hi
 801f544:	2300      	movhi	r3, #0
 801f546:	8143      	strhhi	r3, [r0, #10]
 801f548:	8183      	strhhi	r3, [r0, #12]
 801f54a:	7383      	strbhi	r3, [r0, #14]
 801f54c:	4770      	bx	lr
	...

0801f550 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 801f550:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801f554:	4698      	mov	r8, r3
 801f556:	8883      	ldrh	r3, [r0, #4]
 801f558:	f8ad 3006 	strh.w	r3, [sp, #6]
 801f55c:	eba8 0303 	sub.w	r3, r8, r3
 801f560:	b21b      	sxth	r3, r3
 801f562:	4604      	mov	r4, r0
 801f564:	2b00      	cmp	r3, #0
 801f566:	4617      	mov	r7, r2
 801f568:	4a18      	ldr	r2, [pc, #96]	; (801f5cc <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 801f56a:	9200      	str	r2, [sp, #0]
 801f56c:	bfb8      	it	lt
 801f56e:	425b      	neglt	r3, r3
 801f570:	8aa2      	ldrh	r2, [r4, #20]
 801f572:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 801f576:	f8ad 800a 	strh.w	r8, [sp, #10]
 801f57a:	b21b      	sxth	r3, r3
 801f57c:	460e      	mov	r6, r1
 801f57e:	4293      	cmp	r3, r2
 801f580:	88c1      	ldrh	r1, [r0, #6]
 801f582:	f8ad 1008 	strh.w	r1, [sp, #8]
 801f586:	f04f 0000 	mov.w	r0, #0
 801f58a:	f88d 0004 	strb.w	r0, [sp, #4]
 801f58e:	f8ad 500c 	strh.w	r5, [sp, #12]
 801f592:	dc07      	bgt.n	801f5a4 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 801f594:	1a69      	subs	r1, r5, r1
 801f596:	b209      	sxth	r1, r1
 801f598:	2900      	cmp	r1, #0
 801f59a:	bfb8      	it	lt
 801f59c:	4249      	neglt	r1, r1
 801f59e:	b209      	sxth	r1, r1
 801f5a0:	428a      	cmp	r2, r1
 801f5a2:	da10      	bge.n	801f5c6 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 801f5a4:	6920      	ldr	r0, [r4, #16]
 801f5a6:	6803      	ldr	r3, [r0, #0]
 801f5a8:	4669      	mov	r1, sp
 801f5aa:	685b      	ldr	r3, [r3, #4]
 801f5ac:	4798      	blx	r3
 801f5ae:	eba8 0606 	sub.w	r6, r8, r6
 801f5b2:	2300      	movs	r3, #0
 801f5b4:	1bef      	subs	r7, r5, r7
 801f5b6:	2001      	movs	r0, #1
 801f5b8:	8123      	strh	r3, [r4, #8]
 801f5ba:	8166      	strh	r6, [r4, #10]
 801f5bc:	81a7      	strh	r7, [r4, #12]
 801f5be:	f8a4 8004 	strh.w	r8, [r4, #4]
 801f5c2:	80e5      	strh	r5, [r4, #6]
 801f5c4:	73a0      	strb	r0, [r4, #14]
 801f5c6:	b004      	add	sp, #16
 801f5c8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801f5cc:	080237f8 	.word	0x080237f8

0801f5d0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 801f5d0:	b5f0      	push	{r4, r5, r6, r7, lr}
 801f5d2:	461e      	mov	r6, r3
 801f5d4:	1e4b      	subs	r3, r1, #1
 801f5d6:	2b01      	cmp	r3, #1
 801f5d8:	b085      	sub	sp, #20
 801f5da:	4604      	mov	r4, r0
 801f5dc:	460d      	mov	r5, r1
 801f5de:	4617      	mov	r7, r2
 801f5e0:	d84b      	bhi.n	801f67a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 801f5e2:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801f5e6:	1cd3      	adds	r3, r2, #3
 801f5e8:	b29b      	uxth	r3, r3
 801f5ea:	2b06      	cmp	r3, #6
 801f5ec:	d916      	bls.n	801f61c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 801f5ee:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 801f690 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801f5f2:	f8cd c004 	str.w	ip, [sp, #4]
 801f5f6:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801f5fa:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801f5fe:	6900      	ldr	r0, [r0, #16]
 801f600:	f8ad 100c 	strh.w	r1, [sp, #12]
 801f604:	f04f 0c00 	mov.w	ip, #0
 801f608:	f88d c008 	strb.w	ip, [sp, #8]
 801f60c:	f8ad 200a 	strh.w	r2, [sp, #10]
 801f610:	f8ad 300e 	strh.w	r3, [sp, #14]
 801f614:	6803      	ldr	r3, [r0, #0]
 801f616:	a901      	add	r1, sp, #4
 801f618:	689b      	ldr	r3, [r3, #8]
 801f61a:	4798      	blx	r3
 801f61c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801f620:	1cd3      	adds	r3, r2, #3
 801f622:	b29b      	uxth	r3, r3
 801f624:	2b06      	cmp	r3, #6
 801f626:	d916      	bls.n	801f656 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801f628:	f8df c064 	ldr.w	ip, [pc, #100]	; 801f690 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801f62c:	f8cd c004 	str.w	ip, [sp, #4]
 801f630:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801f634:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801f638:	6920      	ldr	r0, [r4, #16]
 801f63a:	f8ad 100c 	strh.w	r1, [sp, #12]
 801f63e:	f04f 0c01 	mov.w	ip, #1
 801f642:	f88d c008 	strb.w	ip, [sp, #8]
 801f646:	f8ad 200a 	strh.w	r2, [sp, #10]
 801f64a:	f8ad 300e 	strh.w	r3, [sp, #14]
 801f64e:	6803      	ldr	r3, [r0, #0]
 801f650:	a901      	add	r1, sp, #4
 801f652:	689b      	ldr	r3, [r3, #8]
 801f654:	4798      	blx	r3
 801f656:	4b0d      	ldr	r3, [pc, #52]	; (801f68c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 801f658:	9301      	str	r3, [sp, #4]
 801f65a:	6920      	ldr	r0, [r4, #16]
 801f65c:	f88d 5008 	strb.w	r5, [sp, #8]
 801f660:	2300      	movs	r3, #0
 801f662:	f8ad 700a 	strh.w	r7, [sp, #10]
 801f666:	f8ad 600c 	strh.w	r6, [sp, #12]
 801f66a:	f8ad 300e 	strh.w	r3, [sp, #14]
 801f66e:	6803      	ldr	r3, [r0, #0]
 801f670:	a901      	add	r1, sp, #4
 801f672:	681b      	ldr	r3, [r3, #0]
 801f674:	4798      	blx	r3
 801f676:	b005      	add	sp, #20
 801f678:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801f67a:	2900      	cmp	r1, #0
 801f67c:	d1eb      	bne.n	801f656 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801f67e:	80a2      	strh	r2, [r4, #4]
 801f680:	80c6      	strh	r6, [r0, #6]
 801f682:	60a1      	str	r1, [r4, #8]
 801f684:	81a1      	strh	r1, [r4, #12]
 801f686:	73a1      	strb	r1, [r4, #14]
 801f688:	e7e5      	b.n	801f656 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801f68a:	bf00      	nop
 801f68c:	080237e4 	.word	0x080237e4
 801f690:	0802380c 	.word	0x0802380c

0801f694 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>:
 801f694:	10c9      	asrs	r1, r1, #3
 801f696:	2900      	cmp	r1, #0
 801f698:	bfb8      	it	lt
 801f69a:	4249      	neglt	r1, r1
 801f69c:	2801      	cmp	r0, #1
 801f69e:	d108      	bne.n	801f6b2 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 801f6a0:	f3c1 0008 	ubfx	r0, r1, #0, #9
 801f6a4:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 801f6a8:	4601      	mov	r1, r0
 801f6aa:	dd02      	ble.n	801f6b2 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 801f6ac:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
 801f6b0:	4770      	bx	lr
 801f6b2:	29ff      	cmp	r1, #255	; 0xff
 801f6b4:	bfa8      	it	ge
 801f6b6:	21ff      	movge	r1, #255	; 0xff
 801f6b8:	4608      	mov	r0, r1
 801f6ba:	4770      	bx	lr

0801f6bc <_ZN8touchgfx10Rasterizer6lineToEii>:
 801f6bc:	b410      	push	{r4}
 801f6be:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 801f6c2:	429c      	cmp	r4, r3
 801f6c4:	d803      	bhi.n	801f6ce <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 801f6c6:	f85d 4b04 	ldr.w	r4, [sp], #4
 801f6ca:	f7ef b97d 	b.w	800e9c8 <_ZN8touchgfx7Outline6lineToEii>
 801f6ce:	f85d 4b04 	ldr.w	r4, [sp], #4
 801f6d2:	4770      	bx	lr

0801f6d4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 801f6d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f6d8:	b08b      	sub	sp, #44	; 0x2c
 801f6da:	e9cd 2306 	strd	r2, r3, [sp, #24]
 801f6de:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 801f6e2:	9308      	str	r3, [sp, #32]
 801f6e4:	4606      	mov	r6, r0
 801f6e6:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 801f6ea:	9309      	str	r3, [sp, #36]	; 0x24
 801f6ec:	468a      	mov	sl, r1
 801f6ee:	f7ef fad8 	bl	800eca2 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 801f6f2:	68b5      	ldr	r5, [r6, #8]
 801f6f4:	4604      	mov	r4, r0
 801f6f6:	2d00      	cmp	r5, #0
 801f6f8:	d044      	beq.n	801f784 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 801f6fa:	6873      	ldr	r3, [r6, #4]
 801f6fc:	42ab      	cmp	r3, r5
 801f6fe:	d33d      	bcc.n	801f77c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 801f700:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 801f704:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	; 0x34
 801f708:	eb02 0b03 	add.w	fp, r2, r3
 801f70c:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 801f710:	fb02 1203 	mla	r2, r2, r3, r1
 801f714:	9205      	str	r2, [sp, #20]
 801f716:	1e6a      	subs	r2, r5, #1
 801f718:	9204      	str	r2, [sp, #16]
 801f71a:	f04f 0800 	mov.w	r8, #0
 801f71e:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 801f722:	f9b4 7000 	ldrsh.w	r7, [r4]
 801f726:	454b      	cmp	r3, r9
 801f728:	463a      	mov	r2, r7
 801f72a:	d008      	beq.n	801f73e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 801f72c:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	; 0x34
 801f730:	eb03 0b09 	add.w	fp, r3, r9
 801f734:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 801f738:	fb03 1309 	mla	r3, r3, r9, r1
 801f73c:	9305      	str	r3, [sp, #20]
 801f73e:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 801f742:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 801f746:	4498      	add	r8, r3
 801f748:	9b04      	ldr	r3, [sp, #16]
 801f74a:	3b01      	subs	r3, #1
 801f74c:	9304      	str	r3, [sp, #16]
 801f74e:	9b04      	ldr	r3, [sp, #16]
 801f750:	3301      	adds	r3, #1
 801f752:	d015      	beq.n	801f780 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 801f754:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 801f758:	42bb      	cmp	r3, r7
 801f75a:	d117      	bne.n	801f78c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 801f75c:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 801f760:	9b04      	ldr	r3, [sp, #16]
 801f762:	4548      	cmp	r0, r9
 801f764:	f103 33ff 	add.w	r3, r3, #4294967295
 801f768:	d17f      	bne.n	801f86a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 801f76a:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 801f76e:	4401      	add	r1, r0
 801f770:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801f774:	4480      	add	r8, r0
 801f776:	e7e9      	b.n	801f74c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 801f778:	461f      	mov	r7, r3
 801f77a:	e044      	b.n	801f806 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 801f77c:	2000      	movs	r0, #0
 801f77e:	e002      	b.n	801f786 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 801f780:	2900      	cmp	r1, #0
 801f782:	d16f      	bne.n	801f864 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 801f784:	2001      	movs	r0, #1
 801f786:	b00b      	add	sp, #44	; 0x2c
 801f788:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f78c:	2900      	cmp	r1, #0
 801f78e:	d030      	beq.n	801f7f2 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 801f790:	2f00      	cmp	r7, #0
 801f792:	db29      	blt.n	801f7e8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 801f794:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 801f798:	42bb      	cmp	r3, r7
 801f79a:	dd25      	ble.n	801f7e8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 801f79c:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 801f7a0:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 801f7a4:	f7ff ff76 	bl	801f694 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 801f7a8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f7aa:	fb10 f003 	smulbb	r0, r0, r3
 801f7ae:	b280      	uxth	r0, r0
 801f7b0:	1c41      	adds	r1, r0, #1
 801f7b2:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801f7b6:	1209      	asrs	r1, r1, #8
 801f7b8:	f011 0fff 	tst.w	r1, #255	; 0xff
 801f7bc:	d014      	beq.n	801f7e8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 801f7be:	9808      	ldr	r0, [sp, #32]
 801f7c0:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 801f7c2:	b2c9      	uxtb	r1, r1
 801f7c4:	b2ba      	uxth	r2, r7
 801f7c6:	9102      	str	r1, [sp, #8]
 801f7c8:	2101      	movs	r1, #1
 801f7ca:	4413      	add	r3, r2
 801f7cc:	9101      	str	r1, [sp, #4]
 801f7ce:	4402      	add	r2, r0
 801f7d0:	fa0f f18b 	sxth.w	r1, fp
 801f7d4:	f8da 0000 	ldr.w	r0, [sl]
 801f7d8:	9100      	str	r1, [sp, #0]
 801f7da:	6941      	ldr	r1, [r0, #20]
 801f7dc:	b21b      	sxth	r3, r3
 801f7de:	460d      	mov	r5, r1
 801f7e0:	b212      	sxth	r2, r2
 801f7e2:	9905      	ldr	r1, [sp, #20]
 801f7e4:	4650      	mov	r0, sl
 801f7e6:	47a8      	blx	r5
 801f7e8:	9b04      	ldr	r3, [sp, #16]
 801f7ea:	3301      	adds	r3, #1
 801f7ec:	f107 0201 	add.w	r2, r7, #1
 801f7f0:	d0c8      	beq.n	801f784 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 801f7f2:	f9b4 7000 	ldrsh.w	r7, [r4]
 801f7f6:	1abb      	subs	r3, r7, r2
 801f7f8:	2b00      	cmp	r3, #0
 801f7fa:	dd31      	ble.n	801f860 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 801f7fc:	2a00      	cmp	r2, #0
 801f7fe:	dabb      	bge.n	801f778 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 801f800:	2f00      	cmp	r7, #0
 801f802:	dd2d      	ble.n	801f860 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 801f804:	2200      	movs	r2, #0
 801f806:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 801f80a:	19d1      	adds	r1, r2, r7
 801f80c:	4299      	cmp	r1, r3
 801f80e:	db02      	blt.n	801f816 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 801f810:	1a9f      	subs	r7, r3, r2
 801f812:	2f00      	cmp	r7, #0
 801f814:	dd24      	ble.n	801f860 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 801f816:	ea4f 1188 	mov.w	r1, r8, lsl #6
 801f81a:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 801f81e:	f7ff ff39 	bl	801f694 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 801f822:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f824:	fb10 f003 	smulbb	r0, r0, r3
 801f828:	b280      	uxth	r0, r0
 801f82a:	1c41      	adds	r1, r0, #1
 801f82c:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801f830:	1209      	asrs	r1, r1, #8
 801f832:	f011 0fff 	tst.w	r1, #255	; 0xff
 801f836:	d013      	beq.n	801f860 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 801f838:	9808      	ldr	r0, [sp, #32]
 801f83a:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 801f83c:	b292      	uxth	r2, r2
 801f83e:	b2c9      	uxtb	r1, r1
 801f840:	4413      	add	r3, r2
 801f842:	9102      	str	r1, [sp, #8]
 801f844:	4402      	add	r2, r0
 801f846:	b23f      	sxth	r7, r7
 801f848:	f8da 0000 	ldr.w	r0, [sl]
 801f84c:	9701      	str	r7, [sp, #4]
 801f84e:	fa0f f18b 	sxth.w	r1, fp
 801f852:	9100      	str	r1, [sp, #0]
 801f854:	6947      	ldr	r7, [r0, #20]
 801f856:	9905      	ldr	r1, [sp, #20]
 801f858:	b21b      	sxth	r3, r3
 801f85a:	b212      	sxth	r2, r2
 801f85c:	4650      	mov	r0, sl
 801f85e:	47b8      	blx	r7
 801f860:	464b      	mov	r3, r9
 801f862:	e75c      	b.n	801f71e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 801f864:	2f00      	cmp	r7, #0
 801f866:	da95      	bge.n	801f794 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 801f868:	e78c      	b.n	801f784 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 801f86a:	2900      	cmp	r1, #0
 801f86c:	d0f8      	beq.n	801f860 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 801f86e:	e78f      	b.n	801f790 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

0801f870 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
 801f870:	4b4c      	ldr	r3, [pc, #304]	; (801f9a4 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x134>)
 801f872:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 801f876:	2500      	movs	r5, #0
 801f878:	f100 0620 	add.w	r6, r0, #32
 801f87c:	4604      	mov	r4, r0
 801f87e:	e9c0 3100 	strd	r3, r1, [r0]
 801f882:	e9c0 5502 	strd	r5, r5, [r0, #8]
 801f886:	e9c0 5504 	strd	r5, r5, [r0, #16]
 801f88a:	e9c0 5506 	strd	r5, r5, [r0, #24]
 801f88e:	f100 0718 	add.w	r7, r0, #24
 801f892:	4630      	mov	r0, r6
 801f894:	4690      	mov	r8, r2
 801f896:	f7ee fbcf 	bl	800e038 <_ZN8touchgfx7OutlineC1Ev>
 801f89a:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
 801f89e:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 801f8a2:	2301      	movs	r3, #1
 801f8a4:	f884 5050 	strb.w	r5, [r4, #80]	; 0x50
 801f8a8:	f8a4 5052 	strh.w	r5, [r4, #82]	; 0x52
 801f8ac:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 801f8b0:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 801f8b4:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 801f8b8:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
 801f8bc:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 801f8c0:	f9b8 2000 	ldrsh.w	r2, [r8]
 801f8c4:	f8b8 0004 	ldrh.w	r0, [r8, #4]
 801f8c8:	f8d4 c004 	ldr.w	ip, [r4, #4]
 801f8cc:	9500      	str	r5, [sp, #0]
 801f8ce:	4410      	add	r0, r2
 801f8d0:	b280      	uxth	r0, r0
 801f8d2:	fa0f fa80 	sxth.w	sl, r0
 801f8d6:	45aa      	cmp	sl, r5
 801f8d8:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
 801f8dc:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
 801f8e0:	dd5c      	ble.n	801f99c <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12c>
 801f8e2:	4591      	cmp	r9, r2
 801f8e4:	dd5a      	ble.n	801f99c <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12c>
 801f8e6:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
 801f8ea:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 801f8ee:	440b      	add	r3, r1
 801f8f0:	b29b      	uxth	r3, r3
 801f8f2:	b21d      	sxth	r5, r3
 801f8f4:	2d00      	cmp	r5, #0
 801f8f6:	dd51      	ble.n	801f99c <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12c>
 801f8f8:	458e      	cmp	lr, r1
 801f8fa:	dd4f      	ble.n	801f99c <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12c>
 801f8fc:	45d1      	cmp	r9, sl
 801f8fe:	bfb8      	it	lt
 801f900:	fa1f f089 	uxthlt.w	r0, r9
 801f904:	45ae      	cmp	lr, r5
 801f906:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 801f90a:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 801f90e:	bfb8      	it	lt
 801f910:	fa1f f38e 	uxthlt.w	r3, lr
 801f914:	1a80      	subs	r0, r0, r2
 801f916:	1a5b      	subs	r3, r3, r1
 801f918:	f8ad 0004 	strh.w	r0, [sp, #4]
 801f91c:	f8ad 3006 	strh.w	r3, [sp, #6]
 801f920:	f8ad 2000 	strh.w	r2, [sp]
 801f924:	f8ad 1002 	strh.w	r1, [sp, #2]
 801f928:	466d      	mov	r5, sp
 801f92a:	e895 0003 	ldmia.w	r5, {r0, r1}
 801f92e:	e887 0003 	stmia.w	r7, {r0, r1}
 801f932:	f8dc 3000 	ldr.w	r3, [ip]
 801f936:	4660      	mov	r0, ip
 801f938:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f93a:	4639      	mov	r1, r7
 801f93c:	4798      	blx	r3
 801f93e:	6861      	ldr	r1, [r4, #4]
 801f940:	4628      	mov	r0, r5
 801f942:	3104      	adds	r1, #4
 801f944:	f7f0 fd0c 	bl	8010360 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f948:	4638      	mov	r0, r7
 801f94a:	f7f0 fce1 	bl	8010310 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f94e:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 801f952:	f8bd 2000 	ldrh.w	r2, [sp]
 801f956:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 801f95a:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
 801f95e:	4630      	mov	r0, r6
 801f960:	f7ee fb4e 	bl	800e000 <_ZN8touchgfx7Outline5resetEv>
 801f964:	f9bd 3000 	ldrsh.w	r3, [sp]
 801f968:	f9b4 201e 	ldrsh.w	r2, [r4, #30]
 801f96c:	015b      	lsls	r3, r3, #5
 801f96e:	60a3      	str	r3, [r4, #8]
 801f970:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 801f974:	015b      	lsls	r3, r3, #5
 801f976:	60e3      	str	r3, [r4, #12]
 801f978:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801f97c:	015b      	lsls	r3, r3, #5
 801f97e:	6123      	str	r3, [r4, #16]
 801f980:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 801f984:	015b      	lsls	r3, r3, #5
 801f986:	6163      	str	r3, [r4, #20]
 801f988:	f9b4 301c 	ldrsh.w	r3, [r4, #28]
 801f98c:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 801f990:	4620      	mov	r0, r4
 801f992:	e9c4 3212 	strd	r3, r2, [r4, #72]	; 0x48
 801f996:	b002      	add	sp, #8
 801f998:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801f99c:	2300      	movs	r3, #0
 801f99e:	9301      	str	r3, [sp, #4]
 801f9a0:	e7c2      	b.n	801f928 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xb8>
 801f9a2:	bf00      	nop
 801f9a4:	08023074 	.word	0x08023074

0801f9a8 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 801f9a8:	b510      	push	{r4, lr}
 801f9aa:	4b07      	ldr	r3, [pc, #28]	; (801f9c8 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
 801f9ac:	781b      	ldrb	r3, [r3, #0]
 801f9ae:	2b01      	cmp	r3, #1
 801f9b0:	d108      	bne.n	801f9c4 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
 801f9b2:	6843      	ldr	r3, [r0, #4]
 801f9b4:	6814      	ldr	r4, [r2, #0]
 801f9b6:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 801f9ba:	680b      	ldr	r3, [r1, #0]
 801f9bc:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 801f9c0:	6013      	str	r3, [r2, #0]
 801f9c2:	600c      	str	r4, [r1, #0]
 801f9c4:	bd10      	pop	{r4, pc}
 801f9c6:	bf00      	nop
 801f9c8:	20015354 	.word	0x20015354

0801f9cc <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 801f9cc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801f9ce:	ab02      	add	r3, sp, #8
 801f9d0:	4604      	mov	r4, r0
 801f9d2:	f843 2d08 	str.w	r2, [r3, #-8]!
 801f9d6:	9101      	str	r1, [sp, #4]
 801f9d8:	461a      	mov	r2, r3
 801f9da:	a901      	add	r1, sp, #4
 801f9dc:	f7ff ffe4 	bl	801f9a8 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 801f9e0:	68a3      	ldr	r3, [r4, #8]
 801f9e2:	9901      	ldr	r1, [sp, #4]
 801f9e4:	9a00      	ldr	r2, [sp, #0]
 801f9e6:	1ac9      	subs	r1, r1, r3
 801f9e8:	68e3      	ldr	r3, [r4, #12]
 801f9ea:	9101      	str	r1, [sp, #4]
 801f9ec:	1ad2      	subs	r2, r2, r3
 801f9ee:	2a00      	cmp	r2, #0
 801f9f0:	9200      	str	r2, [sp, #0]
 801f9f2:	db1c      	blt.n	801fa2e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 801f9f4:	6963      	ldr	r3, [r4, #20]
 801f9f6:	429a      	cmp	r2, r3
 801f9f8:	bfac      	ite	ge
 801f9fa:	2002      	movge	r0, #2
 801f9fc:	2000      	movlt	r0, #0
 801f9fe:	2900      	cmp	r1, #0
 801fa00:	db17      	blt.n	801fa32 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 801fa02:	6923      	ldr	r3, [r4, #16]
 801fa04:	4299      	cmp	r1, r3
 801fa06:	bfac      	ite	ge
 801fa08:	2308      	movge	r3, #8
 801fa0a:	2300      	movlt	r3, #0
 801fa0c:	4303      	orrs	r3, r0
 801fa0e:	f894 0064 	ldrb.w	r0, [r4, #100]	; 0x64
 801fa12:	b2dd      	uxtb	r5, r3
 801fa14:	b978      	cbnz	r0, 801fa36 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 801fa16:	f104 0020 	add.w	r0, r4, #32
 801fa1a:	f7ff fe4f 	bl	801f6bc <_ZN8touchgfx10Rasterizer6lineToEii>
 801fa1e:	9b01      	ldr	r3, [sp, #4]
 801fa20:	65e3      	str	r3, [r4, #92]	; 0x5c
 801fa22:	9b00      	ldr	r3, [sp, #0]
 801fa24:	6623      	str	r3, [r4, #96]	; 0x60
 801fa26:	f884 5064 	strb.w	r5, [r4, #100]	; 0x64
 801fa2a:	b002      	add	sp, #8
 801fa2c:	bd70      	pop	{r4, r5, r6, pc}
 801fa2e:	2001      	movs	r0, #1
 801fa30:	e7e5      	b.n	801f9fe <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 801fa32:	2304      	movs	r3, #4
 801fa34:	e7ea      	b.n	801fa0c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 801fa36:	b113      	cbz	r3, 801fa3e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 801fa38:	ea10 0305 	ands.w	r3, r0, r5
 801fa3c:	d11d      	bne.n	801fa7a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xae>
 801fa3e:	f894 3058 	ldrb.w	r3, [r4, #88]	; 0x58
 801fa42:	f104 0620 	add.w	r6, r4, #32
 801fa46:	e9d4 1217 	ldrd	r1, r2, [r4, #92]	; 0x5c
 801fa4a:	b193      	cbz	r3, 801fa72 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa6>
 801fa4c:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 801fa50:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 801fa54:	4298      	cmp	r0, r3
 801fa56:	d802      	bhi.n	801fa5e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 801fa58:	4630      	mov	r0, r6
 801fa5a:	f7ee ffcf 	bl	800e9fc <_ZN8touchgfx7Outline6moveToEii>
 801fa5e:	2300      	movs	r3, #0
 801fa60:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 801fa64:	2301      	movs	r3, #1
 801fa66:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 801fa6a:	e9dd 2100 	ldrd	r2, r1, [sp]
 801fa6e:	4630      	mov	r0, r6
 801fa70:	e7d3      	b.n	801fa1a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 801fa72:	4630      	mov	r0, r6
 801fa74:	f7ff fe22 	bl	801f6bc <_ZN8touchgfx10Rasterizer6lineToEii>
 801fa78:	e7f7      	b.n	801fa6a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9e>
 801fa7a:	461d      	mov	r5, r3
 801fa7c:	e7cf      	b.n	801fa1e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>

0801fa7e <_ZN8touchgfx6Canvas5closeEv>:
 801fa7e:	b538      	push	{r3, r4, r5, lr}
 801fa80:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 801fa84:	4604      	mov	r4, r0
 801fa86:	b993      	cbnz	r3, 801faae <_ZN8touchgfx6Canvas5closeEv+0x30>
 801fa88:	f890 3064 	ldrb.w	r3, [r0, #100]	; 0x64
 801fa8c:	f890 2065 	ldrb.w	r2, [r0, #101]	; 0x65
 801fa90:	4213      	tst	r3, r2
 801fa92:	d10c      	bne.n	801faae <_ZN8touchgfx6Canvas5closeEv+0x30>
 801fa94:	f100 0520 	add.w	r5, r0, #32
 801fa98:	b123      	cbz	r3, 801faa4 <_ZN8touchgfx6Canvas5closeEv+0x26>
 801fa9a:	e9d0 1217 	ldrd	r1, r2, [r0, #92]	; 0x5c
 801fa9e:	4628      	mov	r0, r5
 801faa0:	f7ff fe0c 	bl	801f6bc <_ZN8touchgfx10Rasterizer6lineToEii>
 801faa4:	e9d4 121a 	ldrd	r1, r2, [r4, #104]	; 0x68
 801faa8:	4628      	mov	r0, r5
 801faaa:	f7ff fe07 	bl	801f6bc <_ZN8touchgfx10Rasterizer6lineToEii>
 801faae:	2300      	movs	r3, #0
 801fab0:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 801fab4:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
 801fab8:	4298      	cmp	r0, r3
 801faba:	bf34      	ite	cc
 801fabc:	2000      	movcc	r0, #0
 801fabe:	2001      	movcs	r0, #1
 801fac0:	bd38      	pop	{r3, r4, r5, pc}
	...

0801fac4 <_ZN8touchgfx6Canvas6renderEh>:
 801fac4:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 801fac8:	4604      	mov	r4, r0
 801faca:	6840      	ldr	r0, [r0, #4]
 801facc:	6803      	ldr	r3, [r0, #0]
 801face:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 801fad0:	460d      	mov	r5, r1
 801fad2:	4798      	blx	r3
 801fad4:	fb10 f105 	smulbb	r1, r0, r5
 801fad8:	b289      	uxth	r1, r1
 801fada:	1c4d      	adds	r5, r1, #1
 801fadc:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 801fae0:	122d      	asrs	r5, r5, #8
 801fae2:	f000 8098 	beq.w	801fc16 <_ZN8touchgfx6Canvas6renderEh+0x152>
 801fae6:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
 801faea:	2b00      	cmp	r3, #0
 801faec:	f000 8093 	beq.w	801fc16 <_ZN8touchgfx6Canvas6renderEh+0x152>
 801faf0:	4620      	mov	r0, r4
 801faf2:	f7ff ffc4 	bl	801fa7e <_ZN8touchgfx6Canvas5closeEv>
 801faf6:	4607      	mov	r7, r0
 801faf8:	2800      	cmp	r0, #0
 801fafa:	d043      	beq.n	801fb84 <_ZN8touchgfx6Canvas6renderEh+0xc0>
 801fafc:	6863      	ldr	r3, [r4, #4]
 801fafe:	4e47      	ldr	r6, [pc, #284]	; (801fc1c <_ZN8touchgfx6Canvas6renderEh+0x158>)
 801fb00:	6a98      	ldr	r0, [r3, #40]	; 0x28
 801fb02:	6837      	ldr	r7, [r6, #0]
 801fb04:	6803      	ldr	r3, [r0, #0]
 801fb06:	689b      	ldr	r3, [r3, #8]
 801fb08:	4798      	blx	r3
 801fb0a:	4601      	mov	r1, r0
 801fb0c:	4638      	mov	r0, r7
 801fb0e:	f7eb fb03 	bl	800b118 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 801fb12:	4607      	mov	r7, r0
 801fb14:	f7e2 fc6e 	bl	80023f4 <_ZN8touchgfx3HAL3lcdEv>
 801fb18:	6803      	ldr	r3, [r0, #0]
 801fb1a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801fb1c:	4798      	blx	r3
 801fb1e:	4680      	mov	r8, r0
 801fb20:	f7e2 fc68 	bl	80023f4 <_ZN8touchgfx3HAL3lcdEv>
 801fb24:	6803      	ldr	r3, [r0, #0]
 801fb26:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801fb28:	4798      	blx	r3
 801fb2a:	280b      	cmp	r0, #11
 801fb2c:	d858      	bhi.n	801fbe0 <_ZN8touchgfx6Canvas6renderEh+0x11c>
 801fb2e:	e8df f000 	tbb	[pc, r0]
 801fb32:	594e      	.short	0x594e
 801fb34:	2d570669 	.word	0x2d570669
 801fb38:	6262623d 	.word	0x6262623d
 801fb3c:	6262      	.short	0x6262
 801fb3e:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 801fb42:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 801fb46:	2208      	movs	r2, #8
 801fb48:	fb91 f2f2 	sdiv	r2, r1, r2
 801fb4c:	fb08 2303 	mla	r3, r8, r3, r2
 801fb50:	441f      	add	r7, r3
 801fb52:	424b      	negs	r3, r1
 801fb54:	f003 0307 	and.w	r3, r3, #7
 801fb58:	f001 0107 	and.w	r1, r1, #7
 801fb5c:	bf58      	it	pl
 801fb5e:	4259      	negpl	r1, r3
 801fb60:	b2c9      	uxtb	r1, r1
 801fb62:	b2ed      	uxtb	r5, r5
 801fb64:	e9cd 1500 	strd	r1, r5, [sp]
 801fb68:	6860      	ldr	r0, [r4, #4]
 801fb6a:	fa0f f388 	sxth.w	r3, r8
 801fb6e:	463a      	mov	r2, r7
 801fb70:	6a81      	ldr	r1, [r0, #40]	; 0x28
 801fb72:	f104 0020 	add.w	r0, r4, #32
 801fb76:	f7ff fdad 	bl	801f6d4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 801fb7a:	4607      	mov	r7, r0
 801fb7c:	6830      	ldr	r0, [r6, #0]
 801fb7e:	6803      	ldr	r3, [r0, #0]
 801fb80:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801fb82:	4798      	blx	r3
 801fb84:	4638      	mov	r0, r7
 801fb86:	b002      	add	sp, #8
 801fb88:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801fb8c:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 801fb90:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 801fb94:	2204      	movs	r2, #4
 801fb96:	fb91 f2f2 	sdiv	r2, r1, r2
 801fb9a:	fb08 2303 	mla	r3, r8, r3, r2
 801fb9e:	441f      	add	r7, r3
 801fba0:	424b      	negs	r3, r1
 801fba2:	f003 0303 	and.w	r3, r3, #3
 801fba6:	f001 0103 	and.w	r1, r1, #3
 801fbaa:	e7d7      	b.n	801fb5c <_ZN8touchgfx6Canvas6renderEh+0x98>
 801fbac:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 801fbb0:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 801fbb4:	2900      	cmp	r1, #0
 801fbb6:	f04f 0202 	mov.w	r2, #2
 801fbba:	fb91 f2f2 	sdiv	r2, r1, r2
 801fbbe:	f001 0101 	and.w	r1, r1, #1
 801fbc2:	fb08 2303 	mla	r3, r8, r3, r2
 801fbc6:	441f      	add	r7, r3
 801fbc8:	bfb8      	it	lt
 801fbca:	4249      	neglt	r1, r1
 801fbcc:	e7c8      	b.n	801fb60 <_ZN8touchgfx6Canvas6renderEh+0x9c>
 801fbce:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 801fbd2:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 801fbd6:	fb08 f303 	mul.w	r3, r8, r3
 801fbda:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 801fbde:	441f      	add	r7, r3
 801fbe0:	2100      	movs	r1, #0
 801fbe2:	e7be      	b.n	801fb62 <_ZN8touchgfx6Canvas6renderEh+0x9e>
 801fbe4:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 801fbe8:	fb08 f203 	mul.w	r2, r8, r3
 801fbec:	8b23      	ldrh	r3, [r4, #24]
 801fbee:	2103      	movs	r1, #3
 801fbf0:	fb13 2301 	smlabb	r3, r3, r1, r2
 801fbf4:	e7f3      	b.n	801fbde <_ZN8touchgfx6Canvas6renderEh+0x11a>
 801fbf6:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 801fbfa:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 801fbfe:	fb08 2303 	mla	r3, r8, r3, r2
 801fc02:	e7ec      	b.n	801fbde <_ZN8touchgfx6Canvas6renderEh+0x11a>
 801fc04:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 801fc08:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 801fc0c:	fb08 f303 	mul.w	r3, r8, r3
 801fc10:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 801fc14:	e7e3      	b.n	801fbde <_ZN8touchgfx6Canvas6renderEh+0x11a>
 801fc16:	2701      	movs	r7, #1
 801fc18:	e7b4      	b.n	801fb84 <_ZN8touchgfx6Canvas6renderEh+0xc0>
 801fc1a:	bf00      	nop
 801fc1c:	2001535c 	.word	0x2001535c

0801fc20 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 801fc20:	b513      	push	{r0, r1, r4, lr}
 801fc22:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 801fc26:	4604      	mov	r4, r0
 801fc28:	e9cd 2100 	strd	r2, r1, [sp]
 801fc2c:	b1a3      	cbz	r3, 801fc58 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 801fc2e:	466a      	mov	r2, sp
 801fc30:	a901      	add	r1, sp, #4
 801fc32:	4620      	mov	r0, r4
 801fc34:	f7ff feb8 	bl	801f9a8 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 801fc38:	68a3      	ldr	r3, [r4, #8]
 801fc3a:	9901      	ldr	r1, [sp, #4]
 801fc3c:	9a00      	ldr	r2, [sp, #0]
 801fc3e:	1ac9      	subs	r1, r1, r3
 801fc40:	68e3      	ldr	r3, [r4, #12]
 801fc42:	9101      	str	r1, [sp, #4]
 801fc44:	1ad2      	subs	r2, r2, r3
 801fc46:	2a00      	cmp	r2, #0
 801fc48:	9200      	str	r2, [sp, #0]
 801fc4a:	da0b      	bge.n	801fc64 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 801fc4c:	2301      	movs	r3, #1
 801fc4e:	2900      	cmp	r1, #0
 801fc50:	da0e      	bge.n	801fc70 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 801fc52:	f043 0304 	orr.w	r3, r3, #4
 801fc56:	e013      	b.n	801fc80 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 801fc58:	f7ff ff11 	bl	801fa7e <_ZN8touchgfx6Canvas5closeEv>
 801fc5c:	2800      	cmp	r0, #0
 801fc5e:	d1e6      	bne.n	801fc2e <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 801fc60:	b002      	add	sp, #8
 801fc62:	bd10      	pop	{r4, pc}
 801fc64:	6963      	ldr	r3, [r4, #20]
 801fc66:	429a      	cmp	r2, r3
 801fc68:	bfac      	ite	ge
 801fc6a:	2302      	movge	r3, #2
 801fc6c:	2300      	movlt	r3, #0
 801fc6e:	e7ee      	b.n	801fc4e <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 801fc70:	6920      	ldr	r0, [r4, #16]
 801fc72:	4281      	cmp	r1, r0
 801fc74:	bfac      	ite	ge
 801fc76:	2008      	movge	r0, #8
 801fc78:	2000      	movlt	r0, #0
 801fc7a:	4318      	orrs	r0, r3
 801fc7c:	b2c3      	uxtb	r3, r0
 801fc7e:	b158      	cbz	r0, 801fc98 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 801fc80:	2201      	movs	r2, #1
 801fc82:	f884 2058 	strb.w	r2, [r4, #88]	; 0x58
 801fc86:	9901      	ldr	r1, [sp, #4]
 801fc88:	9a00      	ldr	r2, [sp, #0]
 801fc8a:	66a1      	str	r1, [r4, #104]	; 0x68
 801fc8c:	66e2      	str	r2, [r4, #108]	; 0x6c
 801fc8e:	e9c4 1217 	strd	r1, r2, [r4, #92]	; 0x5c
 801fc92:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 801fc96:	e7e3      	b.n	801fc60 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 801fc98:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 801fc9c:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 801fca0:	4298      	cmp	r0, r3
 801fca2:	d803      	bhi.n	801fcac <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 801fca4:	f104 0020 	add.w	r0, r4, #32
 801fca8:	f7ee fea8 	bl	800e9fc <_ZN8touchgfx7Outline6moveToEii>
 801fcac:	2300      	movs	r3, #0
 801fcae:	2201      	movs	r2, #1
 801fcb0:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 801fcb4:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 801fcb8:	e7e5      	b.n	801fc86 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

0801fcba <__aeabi_atexit>:
 801fcba:	460b      	mov	r3, r1
 801fcbc:	4601      	mov	r1, r0
 801fcbe:	4618      	mov	r0, r3
 801fcc0:	f000 b852 	b.w	801fd68 <__cxa_atexit>

0801fcc4 <_ZdlPvj>:
 801fcc4:	f000 b812 	b.w	801fcec <_ZdlPv>

0801fcc8 <__cxa_guard_acquire>:
 801fcc8:	6803      	ldr	r3, [r0, #0]
 801fcca:	07db      	lsls	r3, r3, #31
 801fccc:	d406      	bmi.n	801fcdc <__cxa_guard_acquire+0x14>
 801fcce:	7843      	ldrb	r3, [r0, #1]
 801fcd0:	b103      	cbz	r3, 801fcd4 <__cxa_guard_acquire+0xc>
 801fcd2:	deff      	udf	#255	; 0xff
 801fcd4:	2301      	movs	r3, #1
 801fcd6:	7043      	strb	r3, [r0, #1]
 801fcd8:	4618      	mov	r0, r3
 801fcda:	4770      	bx	lr
 801fcdc:	2000      	movs	r0, #0
 801fcde:	4770      	bx	lr

0801fce0 <__cxa_guard_release>:
 801fce0:	2301      	movs	r3, #1
 801fce2:	6003      	str	r3, [r0, #0]
 801fce4:	4770      	bx	lr

0801fce6 <__cxa_pure_virtual>:
 801fce6:	b508      	push	{r3, lr}
 801fce8:	f000 f80e 	bl	801fd08 <_ZSt9terminatev>

0801fcec <_ZdlPv>:
 801fcec:	f000 b988 	b.w	8020000 <free>

0801fcf0 <_ZN10__cxxabiv111__terminateEPFvvE>:
 801fcf0:	b508      	push	{r3, lr}
 801fcf2:	4780      	blx	r0
 801fcf4:	f000 f80d 	bl	801fd12 <abort>

0801fcf8 <_ZSt13get_terminatev>:
 801fcf8:	4b02      	ldr	r3, [pc, #8]	; (801fd04 <_ZSt13get_terminatev+0xc>)
 801fcfa:	6818      	ldr	r0, [r3, #0]
 801fcfc:	f3bf 8f5b 	dmb	ish
 801fd00:	4770      	bx	lr
 801fd02:	bf00      	nop
 801fd04:	200000fc 	.word	0x200000fc

0801fd08 <_ZSt9terminatev>:
 801fd08:	b508      	push	{r3, lr}
 801fd0a:	f7ff fff5 	bl	801fcf8 <_ZSt13get_terminatev>
 801fd0e:	f7ff ffef 	bl	801fcf0 <_ZN10__cxxabiv111__terminateEPFvvE>

0801fd12 <abort>:
 801fd12:	b508      	push	{r3, lr}
 801fd14:	2006      	movs	r0, #6
 801fd16:	f000 fe01 	bl	802091c <raise>
 801fd1a:	2001      	movs	r0, #1
 801fd1c:	f7e2 f964 	bl	8001fe8 <_exit>

0801fd20 <__assert_func>:
 801fd20:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801fd22:	4614      	mov	r4, r2
 801fd24:	461a      	mov	r2, r3
 801fd26:	4b09      	ldr	r3, [pc, #36]	; (801fd4c <__assert_func+0x2c>)
 801fd28:	681b      	ldr	r3, [r3, #0]
 801fd2a:	4605      	mov	r5, r0
 801fd2c:	68d8      	ldr	r0, [r3, #12]
 801fd2e:	b14c      	cbz	r4, 801fd44 <__assert_func+0x24>
 801fd30:	4b07      	ldr	r3, [pc, #28]	; (801fd50 <__assert_func+0x30>)
 801fd32:	9100      	str	r1, [sp, #0]
 801fd34:	e9cd 3401 	strd	r3, r4, [sp, #4]
 801fd38:	4906      	ldr	r1, [pc, #24]	; (801fd54 <__assert_func+0x34>)
 801fd3a:	462b      	mov	r3, r5
 801fd3c:	f000 f8fe 	bl	801ff3c <fiprintf>
 801fd40:	f7ff ffe7 	bl	801fd12 <abort>
 801fd44:	4b04      	ldr	r3, [pc, #16]	; (801fd58 <__assert_func+0x38>)
 801fd46:	461c      	mov	r4, r3
 801fd48:	e7f3      	b.n	801fd32 <__assert_func+0x12>
 801fd4a:	bf00      	nop
 801fd4c:	20000100 	.word	0x20000100
 801fd50:	08023ad4 	.word	0x08023ad4
 801fd54:	08023ae1 	.word	0x08023ae1
 801fd58:	08022b8b 	.word	0x08022b8b

0801fd5c <atexit>:
 801fd5c:	2300      	movs	r3, #0
 801fd5e:	4601      	mov	r1, r0
 801fd60:	461a      	mov	r2, r3
 801fd62:	4618      	mov	r0, r3
 801fd64:	f000 bf0c 	b.w	8020b80 <__register_exitproc>

0801fd68 <__cxa_atexit>:
 801fd68:	b510      	push	{r4, lr}
 801fd6a:	4c05      	ldr	r4, [pc, #20]	; (801fd80 <__cxa_atexit+0x18>)
 801fd6c:	4613      	mov	r3, r2
 801fd6e:	b12c      	cbz	r4, 801fd7c <__cxa_atexit+0x14>
 801fd70:	460a      	mov	r2, r1
 801fd72:	4601      	mov	r1, r0
 801fd74:	2002      	movs	r0, #2
 801fd76:	f000 ff03 	bl	8020b80 <__register_exitproc>
 801fd7a:	bd10      	pop	{r4, pc}
 801fd7c:	4620      	mov	r0, r4
 801fd7e:	e7fc      	b.n	801fd7a <__cxa_atexit+0x12>
 801fd80:	08020b81 	.word	0x08020b81

0801fd84 <__errno>:
 801fd84:	4b01      	ldr	r3, [pc, #4]	; (801fd8c <__errno+0x8>)
 801fd86:	6818      	ldr	r0, [r3, #0]
 801fd88:	4770      	bx	lr
 801fd8a:	bf00      	nop
 801fd8c:	20000100 	.word	0x20000100

0801fd90 <std>:
 801fd90:	2300      	movs	r3, #0
 801fd92:	b510      	push	{r4, lr}
 801fd94:	4604      	mov	r4, r0
 801fd96:	e9c0 3300 	strd	r3, r3, [r0]
 801fd9a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 801fd9e:	6083      	str	r3, [r0, #8]
 801fda0:	8181      	strh	r1, [r0, #12]
 801fda2:	6643      	str	r3, [r0, #100]	; 0x64
 801fda4:	81c2      	strh	r2, [r0, #14]
 801fda6:	6183      	str	r3, [r0, #24]
 801fda8:	4619      	mov	r1, r3
 801fdaa:	2208      	movs	r2, #8
 801fdac:	305c      	adds	r0, #92	; 0x5c
 801fdae:	f000 f93d 	bl	802002c <memset>
 801fdb2:	4b05      	ldr	r3, [pc, #20]	; (801fdc8 <std+0x38>)
 801fdb4:	6263      	str	r3, [r4, #36]	; 0x24
 801fdb6:	4b05      	ldr	r3, [pc, #20]	; (801fdcc <std+0x3c>)
 801fdb8:	62a3      	str	r3, [r4, #40]	; 0x28
 801fdba:	4b05      	ldr	r3, [pc, #20]	; (801fdd0 <std+0x40>)
 801fdbc:	62e3      	str	r3, [r4, #44]	; 0x2c
 801fdbe:	4b05      	ldr	r3, [pc, #20]	; (801fdd4 <std+0x44>)
 801fdc0:	6224      	str	r4, [r4, #32]
 801fdc2:	6323      	str	r3, [r4, #48]	; 0x30
 801fdc4:	bd10      	pop	{r4, pc}
 801fdc6:	bf00      	nop
 801fdc8:	08020955 	.word	0x08020955
 801fdcc:	08020977 	.word	0x08020977
 801fdd0:	080209af 	.word	0x080209af
 801fdd4:	080209d3 	.word	0x080209d3

0801fdd8 <_cleanup_r>:
 801fdd8:	4901      	ldr	r1, [pc, #4]	; (801fde0 <_cleanup_r+0x8>)
 801fdda:	f000 b8c1 	b.w	801ff60 <_fwalk_reent>
 801fdde:	bf00      	nop
 801fde0:	08020d71 	.word	0x08020d71

0801fde4 <__sfmoreglue>:
 801fde4:	b570      	push	{r4, r5, r6, lr}
 801fde6:	2268      	movs	r2, #104	; 0x68
 801fde8:	1e4d      	subs	r5, r1, #1
 801fdea:	4355      	muls	r5, r2
 801fdec:	460e      	mov	r6, r1
 801fdee:	f105 0174 	add.w	r1, r5, #116	; 0x74
 801fdf2:	f000 f98f 	bl	8020114 <_malloc_r>
 801fdf6:	4604      	mov	r4, r0
 801fdf8:	b140      	cbz	r0, 801fe0c <__sfmoreglue+0x28>
 801fdfa:	2100      	movs	r1, #0
 801fdfc:	e9c0 1600 	strd	r1, r6, [r0]
 801fe00:	300c      	adds	r0, #12
 801fe02:	60a0      	str	r0, [r4, #8]
 801fe04:	f105 0268 	add.w	r2, r5, #104	; 0x68
 801fe08:	f000 f910 	bl	802002c <memset>
 801fe0c:	4620      	mov	r0, r4
 801fe0e:	bd70      	pop	{r4, r5, r6, pc}

0801fe10 <__sfp_lock_acquire>:
 801fe10:	4801      	ldr	r0, [pc, #4]	; (801fe18 <__sfp_lock_acquire+0x8>)
 801fe12:	f000 b8ea 	b.w	801ffea <__retarget_lock_acquire_recursive>
 801fe16:	bf00      	nop
 801fe18:	20015462 	.word	0x20015462

0801fe1c <__sfp_lock_release>:
 801fe1c:	4801      	ldr	r0, [pc, #4]	; (801fe24 <__sfp_lock_release+0x8>)
 801fe1e:	f000 b8e6 	b.w	801ffee <__retarget_lock_release_recursive>
 801fe22:	bf00      	nop
 801fe24:	20015462 	.word	0x20015462

0801fe28 <__sinit_lock_acquire>:
 801fe28:	4801      	ldr	r0, [pc, #4]	; (801fe30 <__sinit_lock_acquire+0x8>)
 801fe2a:	f000 b8de 	b.w	801ffea <__retarget_lock_acquire_recursive>
 801fe2e:	bf00      	nop
 801fe30:	20015463 	.word	0x20015463

0801fe34 <__sinit_lock_release>:
 801fe34:	4801      	ldr	r0, [pc, #4]	; (801fe3c <__sinit_lock_release+0x8>)
 801fe36:	f000 b8da 	b.w	801ffee <__retarget_lock_release_recursive>
 801fe3a:	bf00      	nop
 801fe3c:	20015463 	.word	0x20015463

0801fe40 <__sinit>:
 801fe40:	b510      	push	{r4, lr}
 801fe42:	4604      	mov	r4, r0
 801fe44:	f7ff fff0 	bl	801fe28 <__sinit_lock_acquire>
 801fe48:	69a3      	ldr	r3, [r4, #24]
 801fe4a:	b11b      	cbz	r3, 801fe54 <__sinit+0x14>
 801fe4c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801fe50:	f7ff bff0 	b.w	801fe34 <__sinit_lock_release>
 801fe54:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 801fe58:	6523      	str	r3, [r4, #80]	; 0x50
 801fe5a:	4b13      	ldr	r3, [pc, #76]	; (801fea8 <__sinit+0x68>)
 801fe5c:	4a13      	ldr	r2, [pc, #76]	; (801feac <__sinit+0x6c>)
 801fe5e:	681b      	ldr	r3, [r3, #0]
 801fe60:	62a2      	str	r2, [r4, #40]	; 0x28
 801fe62:	42a3      	cmp	r3, r4
 801fe64:	bf04      	itt	eq
 801fe66:	2301      	moveq	r3, #1
 801fe68:	61a3      	streq	r3, [r4, #24]
 801fe6a:	4620      	mov	r0, r4
 801fe6c:	f000 f820 	bl	801feb0 <__sfp>
 801fe70:	6060      	str	r0, [r4, #4]
 801fe72:	4620      	mov	r0, r4
 801fe74:	f000 f81c 	bl	801feb0 <__sfp>
 801fe78:	60a0      	str	r0, [r4, #8]
 801fe7a:	4620      	mov	r0, r4
 801fe7c:	f000 f818 	bl	801feb0 <__sfp>
 801fe80:	2200      	movs	r2, #0
 801fe82:	60e0      	str	r0, [r4, #12]
 801fe84:	2104      	movs	r1, #4
 801fe86:	6860      	ldr	r0, [r4, #4]
 801fe88:	f7ff ff82 	bl	801fd90 <std>
 801fe8c:	68a0      	ldr	r0, [r4, #8]
 801fe8e:	2201      	movs	r2, #1
 801fe90:	2109      	movs	r1, #9
 801fe92:	f7ff ff7d 	bl	801fd90 <std>
 801fe96:	68e0      	ldr	r0, [r4, #12]
 801fe98:	2202      	movs	r2, #2
 801fe9a:	2112      	movs	r1, #18
 801fe9c:	f7ff ff78 	bl	801fd90 <std>
 801fea0:	2301      	movs	r3, #1
 801fea2:	61a3      	str	r3, [r4, #24]
 801fea4:	e7d2      	b.n	801fe4c <__sinit+0xc>
 801fea6:	bf00      	nop
 801fea8:	08023b70 	.word	0x08023b70
 801feac:	0801fdd9 	.word	0x0801fdd9

0801feb0 <__sfp>:
 801feb0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801feb2:	4607      	mov	r7, r0
 801feb4:	f7ff ffac 	bl	801fe10 <__sfp_lock_acquire>
 801feb8:	4b1e      	ldr	r3, [pc, #120]	; (801ff34 <__sfp+0x84>)
 801feba:	681e      	ldr	r6, [r3, #0]
 801febc:	69b3      	ldr	r3, [r6, #24]
 801febe:	b913      	cbnz	r3, 801fec6 <__sfp+0x16>
 801fec0:	4630      	mov	r0, r6
 801fec2:	f7ff ffbd 	bl	801fe40 <__sinit>
 801fec6:	3648      	adds	r6, #72	; 0x48
 801fec8:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 801fecc:	3b01      	subs	r3, #1
 801fece:	d503      	bpl.n	801fed8 <__sfp+0x28>
 801fed0:	6833      	ldr	r3, [r6, #0]
 801fed2:	b30b      	cbz	r3, 801ff18 <__sfp+0x68>
 801fed4:	6836      	ldr	r6, [r6, #0]
 801fed6:	e7f7      	b.n	801fec8 <__sfp+0x18>
 801fed8:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 801fedc:	b9d5      	cbnz	r5, 801ff14 <__sfp+0x64>
 801fede:	4b16      	ldr	r3, [pc, #88]	; (801ff38 <__sfp+0x88>)
 801fee0:	60e3      	str	r3, [r4, #12]
 801fee2:	f104 0058 	add.w	r0, r4, #88	; 0x58
 801fee6:	6665      	str	r5, [r4, #100]	; 0x64
 801fee8:	f000 f87e 	bl	801ffe8 <__retarget_lock_init_recursive>
 801feec:	f7ff ff96 	bl	801fe1c <__sfp_lock_release>
 801fef0:	e9c4 5501 	strd	r5, r5, [r4, #4]
 801fef4:	e9c4 5504 	strd	r5, r5, [r4, #16]
 801fef8:	6025      	str	r5, [r4, #0]
 801fefa:	61a5      	str	r5, [r4, #24]
 801fefc:	2208      	movs	r2, #8
 801fefe:	4629      	mov	r1, r5
 801ff00:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 801ff04:	f000 f892 	bl	802002c <memset>
 801ff08:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 801ff0c:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 801ff10:	4620      	mov	r0, r4
 801ff12:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801ff14:	3468      	adds	r4, #104	; 0x68
 801ff16:	e7d9      	b.n	801fecc <__sfp+0x1c>
 801ff18:	2104      	movs	r1, #4
 801ff1a:	4638      	mov	r0, r7
 801ff1c:	f7ff ff62 	bl	801fde4 <__sfmoreglue>
 801ff20:	4604      	mov	r4, r0
 801ff22:	6030      	str	r0, [r6, #0]
 801ff24:	2800      	cmp	r0, #0
 801ff26:	d1d5      	bne.n	801fed4 <__sfp+0x24>
 801ff28:	f7ff ff78 	bl	801fe1c <__sfp_lock_release>
 801ff2c:	230c      	movs	r3, #12
 801ff2e:	603b      	str	r3, [r7, #0]
 801ff30:	e7ee      	b.n	801ff10 <__sfp+0x60>
 801ff32:	bf00      	nop
 801ff34:	08023b70 	.word	0x08023b70
 801ff38:	ffff0001 	.word	0xffff0001

0801ff3c <fiprintf>:
 801ff3c:	b40e      	push	{r1, r2, r3}
 801ff3e:	b503      	push	{r0, r1, lr}
 801ff40:	4601      	mov	r1, r0
 801ff42:	ab03      	add	r3, sp, #12
 801ff44:	4805      	ldr	r0, [pc, #20]	; (801ff5c <fiprintf+0x20>)
 801ff46:	f853 2b04 	ldr.w	r2, [r3], #4
 801ff4a:	6800      	ldr	r0, [r0, #0]
 801ff4c:	9301      	str	r3, [sp, #4]
 801ff4e:	f000 f97f 	bl	8020250 <_vfiprintf_r>
 801ff52:	b002      	add	sp, #8
 801ff54:	f85d eb04 	ldr.w	lr, [sp], #4
 801ff58:	b003      	add	sp, #12
 801ff5a:	4770      	bx	lr
 801ff5c:	20000100 	.word	0x20000100

0801ff60 <_fwalk_reent>:
 801ff60:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801ff64:	4606      	mov	r6, r0
 801ff66:	4688      	mov	r8, r1
 801ff68:	f100 0448 	add.w	r4, r0, #72	; 0x48
 801ff6c:	2700      	movs	r7, #0
 801ff6e:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 801ff72:	f1b9 0901 	subs.w	r9, r9, #1
 801ff76:	d505      	bpl.n	801ff84 <_fwalk_reent+0x24>
 801ff78:	6824      	ldr	r4, [r4, #0]
 801ff7a:	2c00      	cmp	r4, #0
 801ff7c:	d1f7      	bne.n	801ff6e <_fwalk_reent+0xe>
 801ff7e:	4638      	mov	r0, r7
 801ff80:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801ff84:	89ab      	ldrh	r3, [r5, #12]
 801ff86:	2b01      	cmp	r3, #1
 801ff88:	d907      	bls.n	801ff9a <_fwalk_reent+0x3a>
 801ff8a:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 801ff8e:	3301      	adds	r3, #1
 801ff90:	d003      	beq.n	801ff9a <_fwalk_reent+0x3a>
 801ff92:	4629      	mov	r1, r5
 801ff94:	4630      	mov	r0, r6
 801ff96:	47c0      	blx	r8
 801ff98:	4307      	orrs	r7, r0
 801ff9a:	3568      	adds	r5, #104	; 0x68
 801ff9c:	e7e9      	b.n	801ff72 <_fwalk_reent+0x12>
	...

0801ffa0 <__libc_init_array>:
 801ffa0:	b570      	push	{r4, r5, r6, lr}
 801ffa2:	4d0d      	ldr	r5, [pc, #52]	; (801ffd8 <__libc_init_array+0x38>)
 801ffa4:	4c0d      	ldr	r4, [pc, #52]	; (801ffdc <__libc_init_array+0x3c>)
 801ffa6:	1b64      	subs	r4, r4, r5
 801ffa8:	10a4      	asrs	r4, r4, #2
 801ffaa:	2600      	movs	r6, #0
 801ffac:	42a6      	cmp	r6, r4
 801ffae:	d109      	bne.n	801ffc4 <__libc_init_array+0x24>
 801ffb0:	4d0b      	ldr	r5, [pc, #44]	; (801ffe0 <__libc_init_array+0x40>)
 801ffb2:	4c0c      	ldr	r4, [pc, #48]	; (801ffe4 <__libc_init_array+0x44>)
 801ffb4:	f000 ffd0 	bl	8020f58 <_init>
 801ffb8:	1b64      	subs	r4, r4, r5
 801ffba:	10a4      	asrs	r4, r4, #2
 801ffbc:	2600      	movs	r6, #0
 801ffbe:	42a6      	cmp	r6, r4
 801ffc0:	d105      	bne.n	801ffce <__libc_init_array+0x2e>
 801ffc2:	bd70      	pop	{r4, r5, r6, pc}
 801ffc4:	f855 3b04 	ldr.w	r3, [r5], #4
 801ffc8:	4798      	blx	r3
 801ffca:	3601      	adds	r6, #1
 801ffcc:	e7ee      	b.n	801ffac <__libc_init_array+0xc>
 801ffce:	f855 3b04 	ldr.w	r3, [r5], #4
 801ffd2:	4798      	blx	r3
 801ffd4:	3601      	adds	r6, #1
 801ffd6:	e7f2      	b.n	801ffbe <__libc_init_array+0x1e>
 801ffd8:	080a86e8 	.word	0x080a86e8
 801ffdc:	080a86e8 	.word	0x080a86e8
 801ffe0:	080a86e8 	.word	0x080a86e8
 801ffe4:	080a86fc 	.word	0x080a86fc

0801ffe8 <__retarget_lock_init_recursive>:
 801ffe8:	4770      	bx	lr

0801ffea <__retarget_lock_acquire_recursive>:
 801ffea:	4770      	bx	lr

0801ffec <__retarget_lock_release>:
 801ffec:	4770      	bx	lr

0801ffee <__retarget_lock_release_recursive>:
 801ffee:	4770      	bx	lr

0801fff0 <malloc>:
 801fff0:	4b02      	ldr	r3, [pc, #8]	; (801fffc <malloc+0xc>)
 801fff2:	4601      	mov	r1, r0
 801fff4:	6818      	ldr	r0, [r3, #0]
 801fff6:	f000 b88d 	b.w	8020114 <_malloc_r>
 801fffa:	bf00      	nop
 801fffc:	20000100 	.word	0x20000100

08020000 <free>:
 8020000:	4b02      	ldr	r3, [pc, #8]	; (802000c <free+0xc>)
 8020002:	4601      	mov	r1, r0
 8020004:	6818      	ldr	r0, [r3, #0]
 8020006:	f000 b819 	b.w	802003c <_free_r>
 802000a:	bf00      	nop
 802000c:	20000100 	.word	0x20000100

08020010 <memcpy>:
 8020010:	440a      	add	r2, r1
 8020012:	4291      	cmp	r1, r2
 8020014:	f100 33ff 	add.w	r3, r0, #4294967295
 8020018:	d100      	bne.n	802001c <memcpy+0xc>
 802001a:	4770      	bx	lr
 802001c:	b510      	push	{r4, lr}
 802001e:	f811 4b01 	ldrb.w	r4, [r1], #1
 8020022:	f803 4f01 	strb.w	r4, [r3, #1]!
 8020026:	4291      	cmp	r1, r2
 8020028:	d1f9      	bne.n	802001e <memcpy+0xe>
 802002a:	bd10      	pop	{r4, pc}

0802002c <memset>:
 802002c:	4402      	add	r2, r0
 802002e:	4603      	mov	r3, r0
 8020030:	4293      	cmp	r3, r2
 8020032:	d100      	bne.n	8020036 <memset+0xa>
 8020034:	4770      	bx	lr
 8020036:	f803 1b01 	strb.w	r1, [r3], #1
 802003a:	e7f9      	b.n	8020030 <memset+0x4>

0802003c <_free_r>:
 802003c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 802003e:	2900      	cmp	r1, #0
 8020040:	d044      	beq.n	80200cc <_free_r+0x90>
 8020042:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8020046:	9001      	str	r0, [sp, #4]
 8020048:	2b00      	cmp	r3, #0
 802004a:	f1a1 0404 	sub.w	r4, r1, #4
 802004e:	bfb8      	it	lt
 8020050:	18e4      	addlt	r4, r4, r3
 8020052:	f000 ff41 	bl	8020ed8 <__malloc_lock>
 8020056:	4a1e      	ldr	r2, [pc, #120]	; (80200d0 <_free_r+0x94>)
 8020058:	9801      	ldr	r0, [sp, #4]
 802005a:	6813      	ldr	r3, [r2, #0]
 802005c:	b933      	cbnz	r3, 802006c <_free_r+0x30>
 802005e:	6063      	str	r3, [r4, #4]
 8020060:	6014      	str	r4, [r2, #0]
 8020062:	b003      	add	sp, #12
 8020064:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8020068:	f000 bf3c 	b.w	8020ee4 <__malloc_unlock>
 802006c:	42a3      	cmp	r3, r4
 802006e:	d908      	bls.n	8020082 <_free_r+0x46>
 8020070:	6825      	ldr	r5, [r4, #0]
 8020072:	1961      	adds	r1, r4, r5
 8020074:	428b      	cmp	r3, r1
 8020076:	bf01      	itttt	eq
 8020078:	6819      	ldreq	r1, [r3, #0]
 802007a:	685b      	ldreq	r3, [r3, #4]
 802007c:	1949      	addeq	r1, r1, r5
 802007e:	6021      	streq	r1, [r4, #0]
 8020080:	e7ed      	b.n	802005e <_free_r+0x22>
 8020082:	461a      	mov	r2, r3
 8020084:	685b      	ldr	r3, [r3, #4]
 8020086:	b10b      	cbz	r3, 802008c <_free_r+0x50>
 8020088:	42a3      	cmp	r3, r4
 802008a:	d9fa      	bls.n	8020082 <_free_r+0x46>
 802008c:	6811      	ldr	r1, [r2, #0]
 802008e:	1855      	adds	r5, r2, r1
 8020090:	42a5      	cmp	r5, r4
 8020092:	d10b      	bne.n	80200ac <_free_r+0x70>
 8020094:	6824      	ldr	r4, [r4, #0]
 8020096:	4421      	add	r1, r4
 8020098:	1854      	adds	r4, r2, r1
 802009a:	42a3      	cmp	r3, r4
 802009c:	6011      	str	r1, [r2, #0]
 802009e:	d1e0      	bne.n	8020062 <_free_r+0x26>
 80200a0:	681c      	ldr	r4, [r3, #0]
 80200a2:	685b      	ldr	r3, [r3, #4]
 80200a4:	6053      	str	r3, [r2, #4]
 80200a6:	4421      	add	r1, r4
 80200a8:	6011      	str	r1, [r2, #0]
 80200aa:	e7da      	b.n	8020062 <_free_r+0x26>
 80200ac:	d902      	bls.n	80200b4 <_free_r+0x78>
 80200ae:	230c      	movs	r3, #12
 80200b0:	6003      	str	r3, [r0, #0]
 80200b2:	e7d6      	b.n	8020062 <_free_r+0x26>
 80200b4:	6825      	ldr	r5, [r4, #0]
 80200b6:	1961      	adds	r1, r4, r5
 80200b8:	428b      	cmp	r3, r1
 80200ba:	bf04      	itt	eq
 80200bc:	6819      	ldreq	r1, [r3, #0]
 80200be:	685b      	ldreq	r3, [r3, #4]
 80200c0:	6063      	str	r3, [r4, #4]
 80200c2:	bf04      	itt	eq
 80200c4:	1949      	addeq	r1, r1, r5
 80200c6:	6021      	streq	r1, [r4, #0]
 80200c8:	6054      	str	r4, [r2, #4]
 80200ca:	e7ca      	b.n	8020062 <_free_r+0x26>
 80200cc:	b003      	add	sp, #12
 80200ce:	bd30      	pop	{r4, r5, pc}
 80200d0:	20015464 	.word	0x20015464

080200d4 <sbrk_aligned>:
 80200d4:	b570      	push	{r4, r5, r6, lr}
 80200d6:	4e0e      	ldr	r6, [pc, #56]	; (8020110 <sbrk_aligned+0x3c>)
 80200d8:	460c      	mov	r4, r1
 80200da:	6831      	ldr	r1, [r6, #0]
 80200dc:	4605      	mov	r5, r0
 80200de:	b911      	cbnz	r1, 80200e6 <sbrk_aligned+0x12>
 80200e0:	f000 fbe4 	bl	80208ac <_sbrk_r>
 80200e4:	6030      	str	r0, [r6, #0]
 80200e6:	4621      	mov	r1, r4
 80200e8:	4628      	mov	r0, r5
 80200ea:	f000 fbdf 	bl	80208ac <_sbrk_r>
 80200ee:	1c43      	adds	r3, r0, #1
 80200f0:	d00a      	beq.n	8020108 <sbrk_aligned+0x34>
 80200f2:	1cc4      	adds	r4, r0, #3
 80200f4:	f024 0403 	bic.w	r4, r4, #3
 80200f8:	42a0      	cmp	r0, r4
 80200fa:	d007      	beq.n	802010c <sbrk_aligned+0x38>
 80200fc:	1a21      	subs	r1, r4, r0
 80200fe:	4628      	mov	r0, r5
 8020100:	f000 fbd4 	bl	80208ac <_sbrk_r>
 8020104:	3001      	adds	r0, #1
 8020106:	d101      	bne.n	802010c <sbrk_aligned+0x38>
 8020108:	f04f 34ff 	mov.w	r4, #4294967295
 802010c:	4620      	mov	r0, r4
 802010e:	bd70      	pop	{r4, r5, r6, pc}
 8020110:	20015468 	.word	0x20015468

08020114 <_malloc_r>:
 8020114:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8020118:	1ccd      	adds	r5, r1, #3
 802011a:	f025 0503 	bic.w	r5, r5, #3
 802011e:	3508      	adds	r5, #8
 8020120:	2d0c      	cmp	r5, #12
 8020122:	bf38      	it	cc
 8020124:	250c      	movcc	r5, #12
 8020126:	2d00      	cmp	r5, #0
 8020128:	4607      	mov	r7, r0
 802012a:	db01      	blt.n	8020130 <_malloc_r+0x1c>
 802012c:	42a9      	cmp	r1, r5
 802012e:	d905      	bls.n	802013c <_malloc_r+0x28>
 8020130:	230c      	movs	r3, #12
 8020132:	603b      	str	r3, [r7, #0]
 8020134:	2600      	movs	r6, #0
 8020136:	4630      	mov	r0, r6
 8020138:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802013c:	4e2e      	ldr	r6, [pc, #184]	; (80201f8 <_malloc_r+0xe4>)
 802013e:	f000 fecb 	bl	8020ed8 <__malloc_lock>
 8020142:	6833      	ldr	r3, [r6, #0]
 8020144:	461c      	mov	r4, r3
 8020146:	bb34      	cbnz	r4, 8020196 <_malloc_r+0x82>
 8020148:	4629      	mov	r1, r5
 802014a:	4638      	mov	r0, r7
 802014c:	f7ff ffc2 	bl	80200d4 <sbrk_aligned>
 8020150:	1c43      	adds	r3, r0, #1
 8020152:	4604      	mov	r4, r0
 8020154:	d14d      	bne.n	80201f2 <_malloc_r+0xde>
 8020156:	6834      	ldr	r4, [r6, #0]
 8020158:	4626      	mov	r6, r4
 802015a:	2e00      	cmp	r6, #0
 802015c:	d140      	bne.n	80201e0 <_malloc_r+0xcc>
 802015e:	6823      	ldr	r3, [r4, #0]
 8020160:	4631      	mov	r1, r6
 8020162:	4638      	mov	r0, r7
 8020164:	eb04 0803 	add.w	r8, r4, r3
 8020168:	f000 fba0 	bl	80208ac <_sbrk_r>
 802016c:	4580      	cmp	r8, r0
 802016e:	d13a      	bne.n	80201e6 <_malloc_r+0xd2>
 8020170:	6821      	ldr	r1, [r4, #0]
 8020172:	3503      	adds	r5, #3
 8020174:	1a6d      	subs	r5, r5, r1
 8020176:	f025 0503 	bic.w	r5, r5, #3
 802017a:	3508      	adds	r5, #8
 802017c:	2d0c      	cmp	r5, #12
 802017e:	bf38      	it	cc
 8020180:	250c      	movcc	r5, #12
 8020182:	4629      	mov	r1, r5
 8020184:	4638      	mov	r0, r7
 8020186:	f7ff ffa5 	bl	80200d4 <sbrk_aligned>
 802018a:	3001      	adds	r0, #1
 802018c:	d02b      	beq.n	80201e6 <_malloc_r+0xd2>
 802018e:	6823      	ldr	r3, [r4, #0]
 8020190:	442b      	add	r3, r5
 8020192:	6023      	str	r3, [r4, #0]
 8020194:	e00e      	b.n	80201b4 <_malloc_r+0xa0>
 8020196:	6822      	ldr	r2, [r4, #0]
 8020198:	1b52      	subs	r2, r2, r5
 802019a:	d41e      	bmi.n	80201da <_malloc_r+0xc6>
 802019c:	2a0b      	cmp	r2, #11
 802019e:	d916      	bls.n	80201ce <_malloc_r+0xba>
 80201a0:	1961      	adds	r1, r4, r5
 80201a2:	42a3      	cmp	r3, r4
 80201a4:	6025      	str	r5, [r4, #0]
 80201a6:	bf18      	it	ne
 80201a8:	6059      	strne	r1, [r3, #4]
 80201aa:	6863      	ldr	r3, [r4, #4]
 80201ac:	bf08      	it	eq
 80201ae:	6031      	streq	r1, [r6, #0]
 80201b0:	5162      	str	r2, [r4, r5]
 80201b2:	604b      	str	r3, [r1, #4]
 80201b4:	4638      	mov	r0, r7
 80201b6:	f104 060b 	add.w	r6, r4, #11
 80201ba:	f000 fe93 	bl	8020ee4 <__malloc_unlock>
 80201be:	f026 0607 	bic.w	r6, r6, #7
 80201c2:	1d23      	adds	r3, r4, #4
 80201c4:	1af2      	subs	r2, r6, r3
 80201c6:	d0b6      	beq.n	8020136 <_malloc_r+0x22>
 80201c8:	1b9b      	subs	r3, r3, r6
 80201ca:	50a3      	str	r3, [r4, r2]
 80201cc:	e7b3      	b.n	8020136 <_malloc_r+0x22>
 80201ce:	6862      	ldr	r2, [r4, #4]
 80201d0:	42a3      	cmp	r3, r4
 80201d2:	bf0c      	ite	eq
 80201d4:	6032      	streq	r2, [r6, #0]
 80201d6:	605a      	strne	r2, [r3, #4]
 80201d8:	e7ec      	b.n	80201b4 <_malloc_r+0xa0>
 80201da:	4623      	mov	r3, r4
 80201dc:	6864      	ldr	r4, [r4, #4]
 80201de:	e7b2      	b.n	8020146 <_malloc_r+0x32>
 80201e0:	4634      	mov	r4, r6
 80201e2:	6876      	ldr	r6, [r6, #4]
 80201e4:	e7b9      	b.n	802015a <_malloc_r+0x46>
 80201e6:	230c      	movs	r3, #12
 80201e8:	603b      	str	r3, [r7, #0]
 80201ea:	4638      	mov	r0, r7
 80201ec:	f000 fe7a 	bl	8020ee4 <__malloc_unlock>
 80201f0:	e7a1      	b.n	8020136 <_malloc_r+0x22>
 80201f2:	6025      	str	r5, [r4, #0]
 80201f4:	e7de      	b.n	80201b4 <_malloc_r+0xa0>
 80201f6:	bf00      	nop
 80201f8:	20015464 	.word	0x20015464

080201fc <__sfputc_r>:
 80201fc:	6893      	ldr	r3, [r2, #8]
 80201fe:	3b01      	subs	r3, #1
 8020200:	2b00      	cmp	r3, #0
 8020202:	b410      	push	{r4}
 8020204:	6093      	str	r3, [r2, #8]
 8020206:	da08      	bge.n	802021a <__sfputc_r+0x1e>
 8020208:	6994      	ldr	r4, [r2, #24]
 802020a:	42a3      	cmp	r3, r4
 802020c:	db01      	blt.n	8020212 <__sfputc_r+0x16>
 802020e:	290a      	cmp	r1, #10
 8020210:	d103      	bne.n	802021a <__sfputc_r+0x1e>
 8020212:	f85d 4b04 	ldr.w	r4, [sp], #4
 8020216:	f000 bbe1 	b.w	80209dc <__swbuf_r>
 802021a:	6813      	ldr	r3, [r2, #0]
 802021c:	1c58      	adds	r0, r3, #1
 802021e:	6010      	str	r0, [r2, #0]
 8020220:	7019      	strb	r1, [r3, #0]
 8020222:	4608      	mov	r0, r1
 8020224:	f85d 4b04 	ldr.w	r4, [sp], #4
 8020228:	4770      	bx	lr

0802022a <__sfputs_r>:
 802022a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802022c:	4606      	mov	r6, r0
 802022e:	460f      	mov	r7, r1
 8020230:	4614      	mov	r4, r2
 8020232:	18d5      	adds	r5, r2, r3
 8020234:	42ac      	cmp	r4, r5
 8020236:	d101      	bne.n	802023c <__sfputs_r+0x12>
 8020238:	2000      	movs	r0, #0
 802023a:	e007      	b.n	802024c <__sfputs_r+0x22>
 802023c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8020240:	463a      	mov	r2, r7
 8020242:	4630      	mov	r0, r6
 8020244:	f7ff ffda 	bl	80201fc <__sfputc_r>
 8020248:	1c43      	adds	r3, r0, #1
 802024a:	d1f3      	bne.n	8020234 <__sfputs_r+0xa>
 802024c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08020250 <_vfiprintf_r>:
 8020250:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020254:	460d      	mov	r5, r1
 8020256:	b09d      	sub	sp, #116	; 0x74
 8020258:	4614      	mov	r4, r2
 802025a:	4698      	mov	r8, r3
 802025c:	4606      	mov	r6, r0
 802025e:	b118      	cbz	r0, 8020268 <_vfiprintf_r+0x18>
 8020260:	6983      	ldr	r3, [r0, #24]
 8020262:	b90b      	cbnz	r3, 8020268 <_vfiprintf_r+0x18>
 8020264:	f7ff fdec 	bl	801fe40 <__sinit>
 8020268:	4b89      	ldr	r3, [pc, #548]	; (8020490 <_vfiprintf_r+0x240>)
 802026a:	429d      	cmp	r5, r3
 802026c:	d11b      	bne.n	80202a6 <_vfiprintf_r+0x56>
 802026e:	6875      	ldr	r5, [r6, #4]
 8020270:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8020272:	07d9      	lsls	r1, r3, #31
 8020274:	d405      	bmi.n	8020282 <_vfiprintf_r+0x32>
 8020276:	89ab      	ldrh	r3, [r5, #12]
 8020278:	059a      	lsls	r2, r3, #22
 802027a:	d402      	bmi.n	8020282 <_vfiprintf_r+0x32>
 802027c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802027e:	f7ff feb4 	bl	801ffea <__retarget_lock_acquire_recursive>
 8020282:	89ab      	ldrh	r3, [r5, #12]
 8020284:	071b      	lsls	r3, r3, #28
 8020286:	d501      	bpl.n	802028c <_vfiprintf_r+0x3c>
 8020288:	692b      	ldr	r3, [r5, #16]
 802028a:	b9eb      	cbnz	r3, 80202c8 <_vfiprintf_r+0x78>
 802028c:	4629      	mov	r1, r5
 802028e:	4630      	mov	r0, r6
 8020290:	f000 fc08 	bl	8020aa4 <__swsetup_r>
 8020294:	b1c0      	cbz	r0, 80202c8 <_vfiprintf_r+0x78>
 8020296:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8020298:	07dc      	lsls	r4, r3, #31
 802029a:	d50e      	bpl.n	80202ba <_vfiprintf_r+0x6a>
 802029c:	f04f 30ff 	mov.w	r0, #4294967295
 80202a0:	b01d      	add	sp, #116	; 0x74
 80202a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80202a6:	4b7b      	ldr	r3, [pc, #492]	; (8020494 <_vfiprintf_r+0x244>)
 80202a8:	429d      	cmp	r5, r3
 80202aa:	d101      	bne.n	80202b0 <_vfiprintf_r+0x60>
 80202ac:	68b5      	ldr	r5, [r6, #8]
 80202ae:	e7df      	b.n	8020270 <_vfiprintf_r+0x20>
 80202b0:	4b79      	ldr	r3, [pc, #484]	; (8020498 <_vfiprintf_r+0x248>)
 80202b2:	429d      	cmp	r5, r3
 80202b4:	bf08      	it	eq
 80202b6:	68f5      	ldreq	r5, [r6, #12]
 80202b8:	e7da      	b.n	8020270 <_vfiprintf_r+0x20>
 80202ba:	89ab      	ldrh	r3, [r5, #12]
 80202bc:	0598      	lsls	r0, r3, #22
 80202be:	d4ed      	bmi.n	802029c <_vfiprintf_r+0x4c>
 80202c0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80202c2:	f7ff fe94 	bl	801ffee <__retarget_lock_release_recursive>
 80202c6:	e7e9      	b.n	802029c <_vfiprintf_r+0x4c>
 80202c8:	2300      	movs	r3, #0
 80202ca:	9309      	str	r3, [sp, #36]	; 0x24
 80202cc:	2320      	movs	r3, #32
 80202ce:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80202d2:	f8cd 800c 	str.w	r8, [sp, #12]
 80202d6:	2330      	movs	r3, #48	; 0x30
 80202d8:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 802049c <_vfiprintf_r+0x24c>
 80202dc:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80202e0:	f04f 0901 	mov.w	r9, #1
 80202e4:	4623      	mov	r3, r4
 80202e6:	469a      	mov	sl, r3
 80202e8:	f813 2b01 	ldrb.w	r2, [r3], #1
 80202ec:	b10a      	cbz	r2, 80202f2 <_vfiprintf_r+0xa2>
 80202ee:	2a25      	cmp	r2, #37	; 0x25
 80202f0:	d1f9      	bne.n	80202e6 <_vfiprintf_r+0x96>
 80202f2:	ebba 0b04 	subs.w	fp, sl, r4
 80202f6:	d00b      	beq.n	8020310 <_vfiprintf_r+0xc0>
 80202f8:	465b      	mov	r3, fp
 80202fa:	4622      	mov	r2, r4
 80202fc:	4629      	mov	r1, r5
 80202fe:	4630      	mov	r0, r6
 8020300:	f7ff ff93 	bl	802022a <__sfputs_r>
 8020304:	3001      	adds	r0, #1
 8020306:	f000 80aa 	beq.w	802045e <_vfiprintf_r+0x20e>
 802030a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802030c:	445a      	add	r2, fp
 802030e:	9209      	str	r2, [sp, #36]	; 0x24
 8020310:	f89a 3000 	ldrb.w	r3, [sl]
 8020314:	2b00      	cmp	r3, #0
 8020316:	f000 80a2 	beq.w	802045e <_vfiprintf_r+0x20e>
 802031a:	2300      	movs	r3, #0
 802031c:	f04f 32ff 	mov.w	r2, #4294967295
 8020320:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8020324:	f10a 0a01 	add.w	sl, sl, #1
 8020328:	9304      	str	r3, [sp, #16]
 802032a:	9307      	str	r3, [sp, #28]
 802032c:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8020330:	931a      	str	r3, [sp, #104]	; 0x68
 8020332:	4654      	mov	r4, sl
 8020334:	2205      	movs	r2, #5
 8020336:	f814 1b01 	ldrb.w	r1, [r4], #1
 802033a:	4858      	ldr	r0, [pc, #352]	; (802049c <_vfiprintf_r+0x24c>)
 802033c:	f7df ff58 	bl	80001f0 <memchr>
 8020340:	9a04      	ldr	r2, [sp, #16]
 8020342:	b9d8      	cbnz	r0, 802037c <_vfiprintf_r+0x12c>
 8020344:	06d1      	lsls	r1, r2, #27
 8020346:	bf44      	itt	mi
 8020348:	2320      	movmi	r3, #32
 802034a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802034e:	0713      	lsls	r3, r2, #28
 8020350:	bf44      	itt	mi
 8020352:	232b      	movmi	r3, #43	; 0x2b
 8020354:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8020358:	f89a 3000 	ldrb.w	r3, [sl]
 802035c:	2b2a      	cmp	r3, #42	; 0x2a
 802035e:	d015      	beq.n	802038c <_vfiprintf_r+0x13c>
 8020360:	9a07      	ldr	r2, [sp, #28]
 8020362:	4654      	mov	r4, sl
 8020364:	2000      	movs	r0, #0
 8020366:	f04f 0c0a 	mov.w	ip, #10
 802036a:	4621      	mov	r1, r4
 802036c:	f811 3b01 	ldrb.w	r3, [r1], #1
 8020370:	3b30      	subs	r3, #48	; 0x30
 8020372:	2b09      	cmp	r3, #9
 8020374:	d94e      	bls.n	8020414 <_vfiprintf_r+0x1c4>
 8020376:	b1b0      	cbz	r0, 80203a6 <_vfiprintf_r+0x156>
 8020378:	9207      	str	r2, [sp, #28]
 802037a:	e014      	b.n	80203a6 <_vfiprintf_r+0x156>
 802037c:	eba0 0308 	sub.w	r3, r0, r8
 8020380:	fa09 f303 	lsl.w	r3, r9, r3
 8020384:	4313      	orrs	r3, r2
 8020386:	9304      	str	r3, [sp, #16]
 8020388:	46a2      	mov	sl, r4
 802038a:	e7d2      	b.n	8020332 <_vfiprintf_r+0xe2>
 802038c:	9b03      	ldr	r3, [sp, #12]
 802038e:	1d19      	adds	r1, r3, #4
 8020390:	681b      	ldr	r3, [r3, #0]
 8020392:	9103      	str	r1, [sp, #12]
 8020394:	2b00      	cmp	r3, #0
 8020396:	bfbb      	ittet	lt
 8020398:	425b      	neglt	r3, r3
 802039a:	f042 0202 	orrlt.w	r2, r2, #2
 802039e:	9307      	strge	r3, [sp, #28]
 80203a0:	9307      	strlt	r3, [sp, #28]
 80203a2:	bfb8      	it	lt
 80203a4:	9204      	strlt	r2, [sp, #16]
 80203a6:	7823      	ldrb	r3, [r4, #0]
 80203a8:	2b2e      	cmp	r3, #46	; 0x2e
 80203aa:	d10c      	bne.n	80203c6 <_vfiprintf_r+0x176>
 80203ac:	7863      	ldrb	r3, [r4, #1]
 80203ae:	2b2a      	cmp	r3, #42	; 0x2a
 80203b0:	d135      	bne.n	802041e <_vfiprintf_r+0x1ce>
 80203b2:	9b03      	ldr	r3, [sp, #12]
 80203b4:	1d1a      	adds	r2, r3, #4
 80203b6:	681b      	ldr	r3, [r3, #0]
 80203b8:	9203      	str	r2, [sp, #12]
 80203ba:	2b00      	cmp	r3, #0
 80203bc:	bfb8      	it	lt
 80203be:	f04f 33ff 	movlt.w	r3, #4294967295
 80203c2:	3402      	adds	r4, #2
 80203c4:	9305      	str	r3, [sp, #20]
 80203c6:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 80204ac <_vfiprintf_r+0x25c>
 80203ca:	7821      	ldrb	r1, [r4, #0]
 80203cc:	2203      	movs	r2, #3
 80203ce:	4650      	mov	r0, sl
 80203d0:	f7df ff0e 	bl	80001f0 <memchr>
 80203d4:	b140      	cbz	r0, 80203e8 <_vfiprintf_r+0x198>
 80203d6:	2340      	movs	r3, #64	; 0x40
 80203d8:	eba0 000a 	sub.w	r0, r0, sl
 80203dc:	fa03 f000 	lsl.w	r0, r3, r0
 80203e0:	9b04      	ldr	r3, [sp, #16]
 80203e2:	4303      	orrs	r3, r0
 80203e4:	3401      	adds	r4, #1
 80203e6:	9304      	str	r3, [sp, #16]
 80203e8:	f814 1b01 	ldrb.w	r1, [r4], #1
 80203ec:	482c      	ldr	r0, [pc, #176]	; (80204a0 <_vfiprintf_r+0x250>)
 80203ee:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 80203f2:	2206      	movs	r2, #6
 80203f4:	f7df fefc 	bl	80001f0 <memchr>
 80203f8:	2800      	cmp	r0, #0
 80203fa:	d03f      	beq.n	802047c <_vfiprintf_r+0x22c>
 80203fc:	4b29      	ldr	r3, [pc, #164]	; (80204a4 <_vfiprintf_r+0x254>)
 80203fe:	bb1b      	cbnz	r3, 8020448 <_vfiprintf_r+0x1f8>
 8020400:	9b03      	ldr	r3, [sp, #12]
 8020402:	3307      	adds	r3, #7
 8020404:	f023 0307 	bic.w	r3, r3, #7
 8020408:	3308      	adds	r3, #8
 802040a:	9303      	str	r3, [sp, #12]
 802040c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802040e:	443b      	add	r3, r7
 8020410:	9309      	str	r3, [sp, #36]	; 0x24
 8020412:	e767      	b.n	80202e4 <_vfiprintf_r+0x94>
 8020414:	fb0c 3202 	mla	r2, ip, r2, r3
 8020418:	460c      	mov	r4, r1
 802041a:	2001      	movs	r0, #1
 802041c:	e7a5      	b.n	802036a <_vfiprintf_r+0x11a>
 802041e:	2300      	movs	r3, #0
 8020420:	3401      	adds	r4, #1
 8020422:	9305      	str	r3, [sp, #20]
 8020424:	4619      	mov	r1, r3
 8020426:	f04f 0c0a 	mov.w	ip, #10
 802042a:	4620      	mov	r0, r4
 802042c:	f810 2b01 	ldrb.w	r2, [r0], #1
 8020430:	3a30      	subs	r2, #48	; 0x30
 8020432:	2a09      	cmp	r2, #9
 8020434:	d903      	bls.n	802043e <_vfiprintf_r+0x1ee>
 8020436:	2b00      	cmp	r3, #0
 8020438:	d0c5      	beq.n	80203c6 <_vfiprintf_r+0x176>
 802043a:	9105      	str	r1, [sp, #20]
 802043c:	e7c3      	b.n	80203c6 <_vfiprintf_r+0x176>
 802043e:	fb0c 2101 	mla	r1, ip, r1, r2
 8020442:	4604      	mov	r4, r0
 8020444:	2301      	movs	r3, #1
 8020446:	e7f0      	b.n	802042a <_vfiprintf_r+0x1da>
 8020448:	ab03      	add	r3, sp, #12
 802044a:	9300      	str	r3, [sp, #0]
 802044c:	462a      	mov	r2, r5
 802044e:	4b16      	ldr	r3, [pc, #88]	; (80204a8 <_vfiprintf_r+0x258>)
 8020450:	a904      	add	r1, sp, #16
 8020452:	4630      	mov	r0, r6
 8020454:	f3af 8000 	nop.w
 8020458:	4607      	mov	r7, r0
 802045a:	1c78      	adds	r0, r7, #1
 802045c:	d1d6      	bne.n	802040c <_vfiprintf_r+0x1bc>
 802045e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8020460:	07d9      	lsls	r1, r3, #31
 8020462:	d405      	bmi.n	8020470 <_vfiprintf_r+0x220>
 8020464:	89ab      	ldrh	r3, [r5, #12]
 8020466:	059a      	lsls	r2, r3, #22
 8020468:	d402      	bmi.n	8020470 <_vfiprintf_r+0x220>
 802046a:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802046c:	f7ff fdbf 	bl	801ffee <__retarget_lock_release_recursive>
 8020470:	89ab      	ldrh	r3, [r5, #12]
 8020472:	065b      	lsls	r3, r3, #25
 8020474:	f53f af12 	bmi.w	802029c <_vfiprintf_r+0x4c>
 8020478:	9809      	ldr	r0, [sp, #36]	; 0x24
 802047a:	e711      	b.n	80202a0 <_vfiprintf_r+0x50>
 802047c:	ab03      	add	r3, sp, #12
 802047e:	9300      	str	r3, [sp, #0]
 8020480:	462a      	mov	r2, r5
 8020482:	4b09      	ldr	r3, [pc, #36]	; (80204a8 <_vfiprintf_r+0x258>)
 8020484:	a904      	add	r1, sp, #16
 8020486:	4630      	mov	r0, r6
 8020488:	f000 f880 	bl	802058c <_printf_i>
 802048c:	e7e4      	b.n	8020458 <_vfiprintf_r+0x208>
 802048e:	bf00      	nop
 8020490:	08023b30 	.word	0x08023b30
 8020494:	08023b50 	.word	0x08023b50
 8020498:	08023b10 	.word	0x08023b10
 802049c:	08023b74 	.word	0x08023b74
 80204a0:	08023b7e 	.word	0x08023b7e
 80204a4:	00000000 	.word	0x00000000
 80204a8:	0802022b 	.word	0x0802022b
 80204ac:	08023b7a 	.word	0x08023b7a

080204b0 <_printf_common>:
 80204b0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80204b4:	4616      	mov	r6, r2
 80204b6:	4699      	mov	r9, r3
 80204b8:	688a      	ldr	r2, [r1, #8]
 80204ba:	690b      	ldr	r3, [r1, #16]
 80204bc:	f8dd 8020 	ldr.w	r8, [sp, #32]
 80204c0:	4293      	cmp	r3, r2
 80204c2:	bfb8      	it	lt
 80204c4:	4613      	movlt	r3, r2
 80204c6:	6033      	str	r3, [r6, #0]
 80204c8:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 80204cc:	4607      	mov	r7, r0
 80204ce:	460c      	mov	r4, r1
 80204d0:	b10a      	cbz	r2, 80204d6 <_printf_common+0x26>
 80204d2:	3301      	adds	r3, #1
 80204d4:	6033      	str	r3, [r6, #0]
 80204d6:	6823      	ldr	r3, [r4, #0]
 80204d8:	0699      	lsls	r1, r3, #26
 80204da:	bf42      	ittt	mi
 80204dc:	6833      	ldrmi	r3, [r6, #0]
 80204de:	3302      	addmi	r3, #2
 80204e0:	6033      	strmi	r3, [r6, #0]
 80204e2:	6825      	ldr	r5, [r4, #0]
 80204e4:	f015 0506 	ands.w	r5, r5, #6
 80204e8:	d106      	bne.n	80204f8 <_printf_common+0x48>
 80204ea:	f104 0a19 	add.w	sl, r4, #25
 80204ee:	68e3      	ldr	r3, [r4, #12]
 80204f0:	6832      	ldr	r2, [r6, #0]
 80204f2:	1a9b      	subs	r3, r3, r2
 80204f4:	42ab      	cmp	r3, r5
 80204f6:	dc26      	bgt.n	8020546 <_printf_common+0x96>
 80204f8:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 80204fc:	1e13      	subs	r3, r2, #0
 80204fe:	6822      	ldr	r2, [r4, #0]
 8020500:	bf18      	it	ne
 8020502:	2301      	movne	r3, #1
 8020504:	0692      	lsls	r2, r2, #26
 8020506:	d42b      	bmi.n	8020560 <_printf_common+0xb0>
 8020508:	f104 0243 	add.w	r2, r4, #67	; 0x43
 802050c:	4649      	mov	r1, r9
 802050e:	4638      	mov	r0, r7
 8020510:	47c0      	blx	r8
 8020512:	3001      	adds	r0, #1
 8020514:	d01e      	beq.n	8020554 <_printf_common+0xa4>
 8020516:	6823      	ldr	r3, [r4, #0]
 8020518:	68e5      	ldr	r5, [r4, #12]
 802051a:	6832      	ldr	r2, [r6, #0]
 802051c:	f003 0306 	and.w	r3, r3, #6
 8020520:	2b04      	cmp	r3, #4
 8020522:	bf08      	it	eq
 8020524:	1aad      	subeq	r5, r5, r2
 8020526:	68a3      	ldr	r3, [r4, #8]
 8020528:	6922      	ldr	r2, [r4, #16]
 802052a:	bf0c      	ite	eq
 802052c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8020530:	2500      	movne	r5, #0
 8020532:	4293      	cmp	r3, r2
 8020534:	bfc4      	itt	gt
 8020536:	1a9b      	subgt	r3, r3, r2
 8020538:	18ed      	addgt	r5, r5, r3
 802053a:	2600      	movs	r6, #0
 802053c:	341a      	adds	r4, #26
 802053e:	42b5      	cmp	r5, r6
 8020540:	d11a      	bne.n	8020578 <_printf_common+0xc8>
 8020542:	2000      	movs	r0, #0
 8020544:	e008      	b.n	8020558 <_printf_common+0xa8>
 8020546:	2301      	movs	r3, #1
 8020548:	4652      	mov	r2, sl
 802054a:	4649      	mov	r1, r9
 802054c:	4638      	mov	r0, r7
 802054e:	47c0      	blx	r8
 8020550:	3001      	adds	r0, #1
 8020552:	d103      	bne.n	802055c <_printf_common+0xac>
 8020554:	f04f 30ff 	mov.w	r0, #4294967295
 8020558:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802055c:	3501      	adds	r5, #1
 802055e:	e7c6      	b.n	80204ee <_printf_common+0x3e>
 8020560:	18e1      	adds	r1, r4, r3
 8020562:	1c5a      	adds	r2, r3, #1
 8020564:	2030      	movs	r0, #48	; 0x30
 8020566:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 802056a:	4422      	add	r2, r4
 802056c:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8020570:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8020574:	3302      	adds	r3, #2
 8020576:	e7c7      	b.n	8020508 <_printf_common+0x58>
 8020578:	2301      	movs	r3, #1
 802057a:	4622      	mov	r2, r4
 802057c:	4649      	mov	r1, r9
 802057e:	4638      	mov	r0, r7
 8020580:	47c0      	blx	r8
 8020582:	3001      	adds	r0, #1
 8020584:	d0e6      	beq.n	8020554 <_printf_common+0xa4>
 8020586:	3601      	adds	r6, #1
 8020588:	e7d9      	b.n	802053e <_printf_common+0x8e>
	...

0802058c <_printf_i>:
 802058c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8020590:	7e0f      	ldrb	r7, [r1, #24]
 8020592:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8020594:	2f78      	cmp	r7, #120	; 0x78
 8020596:	4691      	mov	r9, r2
 8020598:	4680      	mov	r8, r0
 802059a:	460c      	mov	r4, r1
 802059c:	469a      	mov	sl, r3
 802059e:	f101 0243 	add.w	r2, r1, #67	; 0x43
 80205a2:	d807      	bhi.n	80205b4 <_printf_i+0x28>
 80205a4:	2f62      	cmp	r7, #98	; 0x62
 80205a6:	d80a      	bhi.n	80205be <_printf_i+0x32>
 80205a8:	2f00      	cmp	r7, #0
 80205aa:	f000 80d8 	beq.w	802075e <_printf_i+0x1d2>
 80205ae:	2f58      	cmp	r7, #88	; 0x58
 80205b0:	f000 80a3 	beq.w	80206fa <_printf_i+0x16e>
 80205b4:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80205b8:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 80205bc:	e03a      	b.n	8020634 <_printf_i+0xa8>
 80205be:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 80205c2:	2b15      	cmp	r3, #21
 80205c4:	d8f6      	bhi.n	80205b4 <_printf_i+0x28>
 80205c6:	a101      	add	r1, pc, #4	; (adr r1, 80205cc <_printf_i+0x40>)
 80205c8:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 80205cc:	08020625 	.word	0x08020625
 80205d0:	08020639 	.word	0x08020639
 80205d4:	080205b5 	.word	0x080205b5
 80205d8:	080205b5 	.word	0x080205b5
 80205dc:	080205b5 	.word	0x080205b5
 80205e0:	080205b5 	.word	0x080205b5
 80205e4:	08020639 	.word	0x08020639
 80205e8:	080205b5 	.word	0x080205b5
 80205ec:	080205b5 	.word	0x080205b5
 80205f0:	080205b5 	.word	0x080205b5
 80205f4:	080205b5 	.word	0x080205b5
 80205f8:	08020745 	.word	0x08020745
 80205fc:	08020669 	.word	0x08020669
 8020600:	08020727 	.word	0x08020727
 8020604:	080205b5 	.word	0x080205b5
 8020608:	080205b5 	.word	0x080205b5
 802060c:	08020767 	.word	0x08020767
 8020610:	080205b5 	.word	0x080205b5
 8020614:	08020669 	.word	0x08020669
 8020618:	080205b5 	.word	0x080205b5
 802061c:	080205b5 	.word	0x080205b5
 8020620:	0802072f 	.word	0x0802072f
 8020624:	682b      	ldr	r3, [r5, #0]
 8020626:	1d1a      	adds	r2, r3, #4
 8020628:	681b      	ldr	r3, [r3, #0]
 802062a:	602a      	str	r2, [r5, #0]
 802062c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8020630:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8020634:	2301      	movs	r3, #1
 8020636:	e0a3      	b.n	8020780 <_printf_i+0x1f4>
 8020638:	6820      	ldr	r0, [r4, #0]
 802063a:	6829      	ldr	r1, [r5, #0]
 802063c:	0606      	lsls	r6, r0, #24
 802063e:	f101 0304 	add.w	r3, r1, #4
 8020642:	d50a      	bpl.n	802065a <_printf_i+0xce>
 8020644:	680e      	ldr	r6, [r1, #0]
 8020646:	602b      	str	r3, [r5, #0]
 8020648:	2e00      	cmp	r6, #0
 802064a:	da03      	bge.n	8020654 <_printf_i+0xc8>
 802064c:	232d      	movs	r3, #45	; 0x2d
 802064e:	4276      	negs	r6, r6
 8020650:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8020654:	485e      	ldr	r0, [pc, #376]	; (80207d0 <_printf_i+0x244>)
 8020656:	230a      	movs	r3, #10
 8020658:	e019      	b.n	802068e <_printf_i+0x102>
 802065a:	680e      	ldr	r6, [r1, #0]
 802065c:	602b      	str	r3, [r5, #0]
 802065e:	f010 0f40 	tst.w	r0, #64	; 0x40
 8020662:	bf18      	it	ne
 8020664:	b236      	sxthne	r6, r6
 8020666:	e7ef      	b.n	8020648 <_printf_i+0xbc>
 8020668:	682b      	ldr	r3, [r5, #0]
 802066a:	6820      	ldr	r0, [r4, #0]
 802066c:	1d19      	adds	r1, r3, #4
 802066e:	6029      	str	r1, [r5, #0]
 8020670:	0601      	lsls	r1, r0, #24
 8020672:	d501      	bpl.n	8020678 <_printf_i+0xec>
 8020674:	681e      	ldr	r6, [r3, #0]
 8020676:	e002      	b.n	802067e <_printf_i+0xf2>
 8020678:	0646      	lsls	r6, r0, #25
 802067a:	d5fb      	bpl.n	8020674 <_printf_i+0xe8>
 802067c:	881e      	ldrh	r6, [r3, #0]
 802067e:	4854      	ldr	r0, [pc, #336]	; (80207d0 <_printf_i+0x244>)
 8020680:	2f6f      	cmp	r7, #111	; 0x6f
 8020682:	bf0c      	ite	eq
 8020684:	2308      	moveq	r3, #8
 8020686:	230a      	movne	r3, #10
 8020688:	2100      	movs	r1, #0
 802068a:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 802068e:	6865      	ldr	r5, [r4, #4]
 8020690:	60a5      	str	r5, [r4, #8]
 8020692:	2d00      	cmp	r5, #0
 8020694:	bfa2      	ittt	ge
 8020696:	6821      	ldrge	r1, [r4, #0]
 8020698:	f021 0104 	bicge.w	r1, r1, #4
 802069c:	6021      	strge	r1, [r4, #0]
 802069e:	b90e      	cbnz	r6, 80206a4 <_printf_i+0x118>
 80206a0:	2d00      	cmp	r5, #0
 80206a2:	d04d      	beq.n	8020740 <_printf_i+0x1b4>
 80206a4:	4615      	mov	r5, r2
 80206a6:	fbb6 f1f3 	udiv	r1, r6, r3
 80206aa:	fb03 6711 	mls	r7, r3, r1, r6
 80206ae:	5dc7      	ldrb	r7, [r0, r7]
 80206b0:	f805 7d01 	strb.w	r7, [r5, #-1]!
 80206b4:	4637      	mov	r7, r6
 80206b6:	42bb      	cmp	r3, r7
 80206b8:	460e      	mov	r6, r1
 80206ba:	d9f4      	bls.n	80206a6 <_printf_i+0x11a>
 80206bc:	2b08      	cmp	r3, #8
 80206be:	d10b      	bne.n	80206d8 <_printf_i+0x14c>
 80206c0:	6823      	ldr	r3, [r4, #0]
 80206c2:	07de      	lsls	r6, r3, #31
 80206c4:	d508      	bpl.n	80206d8 <_printf_i+0x14c>
 80206c6:	6923      	ldr	r3, [r4, #16]
 80206c8:	6861      	ldr	r1, [r4, #4]
 80206ca:	4299      	cmp	r1, r3
 80206cc:	bfde      	ittt	le
 80206ce:	2330      	movle	r3, #48	; 0x30
 80206d0:	f805 3c01 	strble.w	r3, [r5, #-1]
 80206d4:	f105 35ff 	addle.w	r5, r5, #4294967295
 80206d8:	1b52      	subs	r2, r2, r5
 80206da:	6122      	str	r2, [r4, #16]
 80206dc:	f8cd a000 	str.w	sl, [sp]
 80206e0:	464b      	mov	r3, r9
 80206e2:	aa03      	add	r2, sp, #12
 80206e4:	4621      	mov	r1, r4
 80206e6:	4640      	mov	r0, r8
 80206e8:	f7ff fee2 	bl	80204b0 <_printf_common>
 80206ec:	3001      	adds	r0, #1
 80206ee:	d14c      	bne.n	802078a <_printf_i+0x1fe>
 80206f0:	f04f 30ff 	mov.w	r0, #4294967295
 80206f4:	b004      	add	sp, #16
 80206f6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80206fa:	4835      	ldr	r0, [pc, #212]	; (80207d0 <_printf_i+0x244>)
 80206fc:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 8020700:	6829      	ldr	r1, [r5, #0]
 8020702:	6823      	ldr	r3, [r4, #0]
 8020704:	f851 6b04 	ldr.w	r6, [r1], #4
 8020708:	6029      	str	r1, [r5, #0]
 802070a:	061d      	lsls	r5, r3, #24
 802070c:	d514      	bpl.n	8020738 <_printf_i+0x1ac>
 802070e:	07df      	lsls	r7, r3, #31
 8020710:	bf44      	itt	mi
 8020712:	f043 0320 	orrmi.w	r3, r3, #32
 8020716:	6023      	strmi	r3, [r4, #0]
 8020718:	b91e      	cbnz	r6, 8020722 <_printf_i+0x196>
 802071a:	6823      	ldr	r3, [r4, #0]
 802071c:	f023 0320 	bic.w	r3, r3, #32
 8020720:	6023      	str	r3, [r4, #0]
 8020722:	2310      	movs	r3, #16
 8020724:	e7b0      	b.n	8020688 <_printf_i+0xfc>
 8020726:	6823      	ldr	r3, [r4, #0]
 8020728:	f043 0320 	orr.w	r3, r3, #32
 802072c:	6023      	str	r3, [r4, #0]
 802072e:	2378      	movs	r3, #120	; 0x78
 8020730:	4828      	ldr	r0, [pc, #160]	; (80207d4 <_printf_i+0x248>)
 8020732:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8020736:	e7e3      	b.n	8020700 <_printf_i+0x174>
 8020738:	0659      	lsls	r1, r3, #25
 802073a:	bf48      	it	mi
 802073c:	b2b6      	uxthmi	r6, r6
 802073e:	e7e6      	b.n	802070e <_printf_i+0x182>
 8020740:	4615      	mov	r5, r2
 8020742:	e7bb      	b.n	80206bc <_printf_i+0x130>
 8020744:	682b      	ldr	r3, [r5, #0]
 8020746:	6826      	ldr	r6, [r4, #0]
 8020748:	6961      	ldr	r1, [r4, #20]
 802074a:	1d18      	adds	r0, r3, #4
 802074c:	6028      	str	r0, [r5, #0]
 802074e:	0635      	lsls	r5, r6, #24
 8020750:	681b      	ldr	r3, [r3, #0]
 8020752:	d501      	bpl.n	8020758 <_printf_i+0x1cc>
 8020754:	6019      	str	r1, [r3, #0]
 8020756:	e002      	b.n	802075e <_printf_i+0x1d2>
 8020758:	0670      	lsls	r0, r6, #25
 802075a:	d5fb      	bpl.n	8020754 <_printf_i+0x1c8>
 802075c:	8019      	strh	r1, [r3, #0]
 802075e:	2300      	movs	r3, #0
 8020760:	6123      	str	r3, [r4, #16]
 8020762:	4615      	mov	r5, r2
 8020764:	e7ba      	b.n	80206dc <_printf_i+0x150>
 8020766:	682b      	ldr	r3, [r5, #0]
 8020768:	1d1a      	adds	r2, r3, #4
 802076a:	602a      	str	r2, [r5, #0]
 802076c:	681d      	ldr	r5, [r3, #0]
 802076e:	6862      	ldr	r2, [r4, #4]
 8020770:	2100      	movs	r1, #0
 8020772:	4628      	mov	r0, r5
 8020774:	f7df fd3c 	bl	80001f0 <memchr>
 8020778:	b108      	cbz	r0, 802077e <_printf_i+0x1f2>
 802077a:	1b40      	subs	r0, r0, r5
 802077c:	6060      	str	r0, [r4, #4]
 802077e:	6863      	ldr	r3, [r4, #4]
 8020780:	6123      	str	r3, [r4, #16]
 8020782:	2300      	movs	r3, #0
 8020784:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8020788:	e7a8      	b.n	80206dc <_printf_i+0x150>
 802078a:	6923      	ldr	r3, [r4, #16]
 802078c:	462a      	mov	r2, r5
 802078e:	4649      	mov	r1, r9
 8020790:	4640      	mov	r0, r8
 8020792:	47d0      	blx	sl
 8020794:	3001      	adds	r0, #1
 8020796:	d0ab      	beq.n	80206f0 <_printf_i+0x164>
 8020798:	6823      	ldr	r3, [r4, #0]
 802079a:	079b      	lsls	r3, r3, #30
 802079c:	d413      	bmi.n	80207c6 <_printf_i+0x23a>
 802079e:	68e0      	ldr	r0, [r4, #12]
 80207a0:	9b03      	ldr	r3, [sp, #12]
 80207a2:	4298      	cmp	r0, r3
 80207a4:	bfb8      	it	lt
 80207a6:	4618      	movlt	r0, r3
 80207a8:	e7a4      	b.n	80206f4 <_printf_i+0x168>
 80207aa:	2301      	movs	r3, #1
 80207ac:	4632      	mov	r2, r6
 80207ae:	4649      	mov	r1, r9
 80207b0:	4640      	mov	r0, r8
 80207b2:	47d0      	blx	sl
 80207b4:	3001      	adds	r0, #1
 80207b6:	d09b      	beq.n	80206f0 <_printf_i+0x164>
 80207b8:	3501      	adds	r5, #1
 80207ba:	68e3      	ldr	r3, [r4, #12]
 80207bc:	9903      	ldr	r1, [sp, #12]
 80207be:	1a5b      	subs	r3, r3, r1
 80207c0:	42ab      	cmp	r3, r5
 80207c2:	dcf2      	bgt.n	80207aa <_printf_i+0x21e>
 80207c4:	e7eb      	b.n	802079e <_printf_i+0x212>
 80207c6:	2500      	movs	r5, #0
 80207c8:	f104 0619 	add.w	r6, r4, #25
 80207cc:	e7f5      	b.n	80207ba <_printf_i+0x22e>
 80207ce:	bf00      	nop
 80207d0:	08023b85 	.word	0x08023b85
 80207d4:	08023b96 	.word	0x08023b96

080207d8 <cleanup_glue>:
 80207d8:	b538      	push	{r3, r4, r5, lr}
 80207da:	460c      	mov	r4, r1
 80207dc:	6809      	ldr	r1, [r1, #0]
 80207de:	4605      	mov	r5, r0
 80207e0:	b109      	cbz	r1, 80207e6 <cleanup_glue+0xe>
 80207e2:	f7ff fff9 	bl	80207d8 <cleanup_glue>
 80207e6:	4621      	mov	r1, r4
 80207e8:	4628      	mov	r0, r5
 80207ea:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80207ee:	f7ff bc25 	b.w	802003c <_free_r>
	...

080207f4 <_reclaim_reent>:
 80207f4:	4b2c      	ldr	r3, [pc, #176]	; (80208a8 <_reclaim_reent+0xb4>)
 80207f6:	681b      	ldr	r3, [r3, #0]
 80207f8:	4283      	cmp	r3, r0
 80207fa:	b570      	push	{r4, r5, r6, lr}
 80207fc:	4604      	mov	r4, r0
 80207fe:	d051      	beq.n	80208a4 <_reclaim_reent+0xb0>
 8020800:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8020802:	b143      	cbz	r3, 8020816 <_reclaim_reent+0x22>
 8020804:	68db      	ldr	r3, [r3, #12]
 8020806:	2b00      	cmp	r3, #0
 8020808:	d14a      	bne.n	80208a0 <_reclaim_reent+0xac>
 802080a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 802080c:	6819      	ldr	r1, [r3, #0]
 802080e:	b111      	cbz	r1, 8020816 <_reclaim_reent+0x22>
 8020810:	4620      	mov	r0, r4
 8020812:	f7ff fc13 	bl	802003c <_free_r>
 8020816:	6961      	ldr	r1, [r4, #20]
 8020818:	b111      	cbz	r1, 8020820 <_reclaim_reent+0x2c>
 802081a:	4620      	mov	r0, r4
 802081c:	f7ff fc0e 	bl	802003c <_free_r>
 8020820:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8020822:	b111      	cbz	r1, 802082a <_reclaim_reent+0x36>
 8020824:	4620      	mov	r0, r4
 8020826:	f7ff fc09 	bl	802003c <_free_r>
 802082a:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 802082c:	b111      	cbz	r1, 8020834 <_reclaim_reent+0x40>
 802082e:	4620      	mov	r0, r4
 8020830:	f7ff fc04 	bl	802003c <_free_r>
 8020834:	6be1      	ldr	r1, [r4, #60]	; 0x3c
 8020836:	b111      	cbz	r1, 802083e <_reclaim_reent+0x4a>
 8020838:	4620      	mov	r0, r4
 802083a:	f7ff fbff 	bl	802003c <_free_r>
 802083e:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8020840:	b111      	cbz	r1, 8020848 <_reclaim_reent+0x54>
 8020842:	4620      	mov	r0, r4
 8020844:	f7ff fbfa 	bl	802003c <_free_r>
 8020848:	6de1      	ldr	r1, [r4, #92]	; 0x5c
 802084a:	b111      	cbz	r1, 8020852 <_reclaim_reent+0x5e>
 802084c:	4620      	mov	r0, r4
 802084e:	f7ff fbf5 	bl	802003c <_free_r>
 8020852:	6da1      	ldr	r1, [r4, #88]	; 0x58
 8020854:	b111      	cbz	r1, 802085c <_reclaim_reent+0x68>
 8020856:	4620      	mov	r0, r4
 8020858:	f7ff fbf0 	bl	802003c <_free_r>
 802085c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802085e:	b111      	cbz	r1, 8020866 <_reclaim_reent+0x72>
 8020860:	4620      	mov	r0, r4
 8020862:	f7ff fbeb 	bl	802003c <_free_r>
 8020866:	69a3      	ldr	r3, [r4, #24]
 8020868:	b1e3      	cbz	r3, 80208a4 <_reclaim_reent+0xb0>
 802086a:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 802086c:	4620      	mov	r0, r4
 802086e:	4798      	blx	r3
 8020870:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8020872:	b1b9      	cbz	r1, 80208a4 <_reclaim_reent+0xb0>
 8020874:	4620      	mov	r0, r4
 8020876:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 802087a:	f7ff bfad 	b.w	80207d8 <cleanup_glue>
 802087e:	5949      	ldr	r1, [r1, r5]
 8020880:	b941      	cbnz	r1, 8020894 <_reclaim_reent+0xa0>
 8020882:	3504      	adds	r5, #4
 8020884:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8020886:	2d80      	cmp	r5, #128	; 0x80
 8020888:	68d9      	ldr	r1, [r3, #12]
 802088a:	d1f8      	bne.n	802087e <_reclaim_reent+0x8a>
 802088c:	4620      	mov	r0, r4
 802088e:	f7ff fbd5 	bl	802003c <_free_r>
 8020892:	e7ba      	b.n	802080a <_reclaim_reent+0x16>
 8020894:	680e      	ldr	r6, [r1, #0]
 8020896:	4620      	mov	r0, r4
 8020898:	f7ff fbd0 	bl	802003c <_free_r>
 802089c:	4631      	mov	r1, r6
 802089e:	e7ef      	b.n	8020880 <_reclaim_reent+0x8c>
 80208a0:	2500      	movs	r5, #0
 80208a2:	e7ef      	b.n	8020884 <_reclaim_reent+0x90>
 80208a4:	bd70      	pop	{r4, r5, r6, pc}
 80208a6:	bf00      	nop
 80208a8:	20000100 	.word	0x20000100

080208ac <_sbrk_r>:
 80208ac:	b538      	push	{r3, r4, r5, lr}
 80208ae:	4d06      	ldr	r5, [pc, #24]	; (80208c8 <_sbrk_r+0x1c>)
 80208b0:	2300      	movs	r3, #0
 80208b2:	4604      	mov	r4, r0
 80208b4:	4608      	mov	r0, r1
 80208b6:	602b      	str	r3, [r5, #0]
 80208b8:	f7e1 fbc4 	bl	8002044 <_sbrk>
 80208bc:	1c43      	adds	r3, r0, #1
 80208be:	d102      	bne.n	80208c6 <_sbrk_r+0x1a>
 80208c0:	682b      	ldr	r3, [r5, #0]
 80208c2:	b103      	cbz	r3, 80208c6 <_sbrk_r+0x1a>
 80208c4:	6023      	str	r3, [r4, #0]
 80208c6:	bd38      	pop	{r3, r4, r5, pc}
 80208c8:	20015574 	.word	0x20015574

080208cc <_raise_r>:
 80208cc:	291f      	cmp	r1, #31
 80208ce:	b538      	push	{r3, r4, r5, lr}
 80208d0:	4604      	mov	r4, r0
 80208d2:	460d      	mov	r5, r1
 80208d4:	d904      	bls.n	80208e0 <_raise_r+0x14>
 80208d6:	2316      	movs	r3, #22
 80208d8:	6003      	str	r3, [r0, #0]
 80208da:	f04f 30ff 	mov.w	r0, #4294967295
 80208de:	bd38      	pop	{r3, r4, r5, pc}
 80208e0:	6c42      	ldr	r2, [r0, #68]	; 0x44
 80208e2:	b112      	cbz	r2, 80208ea <_raise_r+0x1e>
 80208e4:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 80208e8:	b94b      	cbnz	r3, 80208fe <_raise_r+0x32>
 80208ea:	4620      	mov	r0, r4
 80208ec:	f000 f830 	bl	8020950 <_getpid_r>
 80208f0:	462a      	mov	r2, r5
 80208f2:	4601      	mov	r1, r0
 80208f4:	4620      	mov	r0, r4
 80208f6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80208fa:	f000 b817 	b.w	802092c <_kill_r>
 80208fe:	2b01      	cmp	r3, #1
 8020900:	d00a      	beq.n	8020918 <_raise_r+0x4c>
 8020902:	1c59      	adds	r1, r3, #1
 8020904:	d103      	bne.n	802090e <_raise_r+0x42>
 8020906:	2316      	movs	r3, #22
 8020908:	6003      	str	r3, [r0, #0]
 802090a:	2001      	movs	r0, #1
 802090c:	e7e7      	b.n	80208de <_raise_r+0x12>
 802090e:	2400      	movs	r4, #0
 8020910:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8020914:	4628      	mov	r0, r5
 8020916:	4798      	blx	r3
 8020918:	2000      	movs	r0, #0
 802091a:	e7e0      	b.n	80208de <_raise_r+0x12>

0802091c <raise>:
 802091c:	4b02      	ldr	r3, [pc, #8]	; (8020928 <raise+0xc>)
 802091e:	4601      	mov	r1, r0
 8020920:	6818      	ldr	r0, [r3, #0]
 8020922:	f7ff bfd3 	b.w	80208cc <_raise_r>
 8020926:	bf00      	nop
 8020928:	20000100 	.word	0x20000100

0802092c <_kill_r>:
 802092c:	b538      	push	{r3, r4, r5, lr}
 802092e:	4d07      	ldr	r5, [pc, #28]	; (802094c <_kill_r+0x20>)
 8020930:	2300      	movs	r3, #0
 8020932:	4604      	mov	r4, r0
 8020934:	4608      	mov	r0, r1
 8020936:	4611      	mov	r1, r2
 8020938:	602b      	str	r3, [r5, #0]
 802093a:	f7e1 fb4d 	bl	8001fd8 <_kill>
 802093e:	1c43      	adds	r3, r0, #1
 8020940:	d102      	bne.n	8020948 <_kill_r+0x1c>
 8020942:	682b      	ldr	r3, [r5, #0]
 8020944:	b103      	cbz	r3, 8020948 <_kill_r+0x1c>
 8020946:	6023      	str	r3, [r4, #0]
 8020948:	bd38      	pop	{r3, r4, r5, pc}
 802094a:	bf00      	nop
 802094c:	20015574 	.word	0x20015574

08020950 <_getpid_r>:
 8020950:	f7e1 bb40 	b.w	8001fd4 <_getpid>

08020954 <__sread>:
 8020954:	b510      	push	{r4, lr}
 8020956:	460c      	mov	r4, r1
 8020958:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802095c:	f000 fac8 	bl	8020ef0 <_read_r>
 8020960:	2800      	cmp	r0, #0
 8020962:	bfab      	itete	ge
 8020964:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8020966:	89a3      	ldrhlt	r3, [r4, #12]
 8020968:	181b      	addge	r3, r3, r0
 802096a:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 802096e:	bfac      	ite	ge
 8020970:	6563      	strge	r3, [r4, #84]	; 0x54
 8020972:	81a3      	strhlt	r3, [r4, #12]
 8020974:	bd10      	pop	{r4, pc}

08020976 <__swrite>:
 8020976:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802097a:	461f      	mov	r7, r3
 802097c:	898b      	ldrh	r3, [r1, #12]
 802097e:	05db      	lsls	r3, r3, #23
 8020980:	4605      	mov	r5, r0
 8020982:	460c      	mov	r4, r1
 8020984:	4616      	mov	r6, r2
 8020986:	d505      	bpl.n	8020994 <__swrite+0x1e>
 8020988:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802098c:	2302      	movs	r3, #2
 802098e:	2200      	movs	r2, #0
 8020990:	f000 fa2a 	bl	8020de8 <_lseek_r>
 8020994:	89a3      	ldrh	r3, [r4, #12]
 8020996:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802099a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 802099e:	81a3      	strh	r3, [r4, #12]
 80209a0:	4632      	mov	r2, r6
 80209a2:	463b      	mov	r3, r7
 80209a4:	4628      	mov	r0, r5
 80209a6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80209aa:	f000 b869 	b.w	8020a80 <_write_r>

080209ae <__sseek>:
 80209ae:	b510      	push	{r4, lr}
 80209b0:	460c      	mov	r4, r1
 80209b2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80209b6:	f000 fa17 	bl	8020de8 <_lseek_r>
 80209ba:	1c43      	adds	r3, r0, #1
 80209bc:	89a3      	ldrh	r3, [r4, #12]
 80209be:	bf15      	itete	ne
 80209c0:	6560      	strne	r0, [r4, #84]	; 0x54
 80209c2:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80209c6:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80209ca:	81a3      	strheq	r3, [r4, #12]
 80209cc:	bf18      	it	ne
 80209ce:	81a3      	strhne	r3, [r4, #12]
 80209d0:	bd10      	pop	{r4, pc}

080209d2 <__sclose>:
 80209d2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80209d6:	f000 b935 	b.w	8020c44 <_close_r>
	...

080209dc <__swbuf_r>:
 80209dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80209de:	460e      	mov	r6, r1
 80209e0:	4614      	mov	r4, r2
 80209e2:	4605      	mov	r5, r0
 80209e4:	b118      	cbz	r0, 80209ee <__swbuf_r+0x12>
 80209e6:	6983      	ldr	r3, [r0, #24]
 80209e8:	b90b      	cbnz	r3, 80209ee <__swbuf_r+0x12>
 80209ea:	f7ff fa29 	bl	801fe40 <__sinit>
 80209ee:	4b21      	ldr	r3, [pc, #132]	; (8020a74 <__swbuf_r+0x98>)
 80209f0:	429c      	cmp	r4, r3
 80209f2:	d12b      	bne.n	8020a4c <__swbuf_r+0x70>
 80209f4:	686c      	ldr	r4, [r5, #4]
 80209f6:	69a3      	ldr	r3, [r4, #24]
 80209f8:	60a3      	str	r3, [r4, #8]
 80209fa:	89a3      	ldrh	r3, [r4, #12]
 80209fc:	071a      	lsls	r2, r3, #28
 80209fe:	d52f      	bpl.n	8020a60 <__swbuf_r+0x84>
 8020a00:	6923      	ldr	r3, [r4, #16]
 8020a02:	b36b      	cbz	r3, 8020a60 <__swbuf_r+0x84>
 8020a04:	6923      	ldr	r3, [r4, #16]
 8020a06:	6820      	ldr	r0, [r4, #0]
 8020a08:	1ac0      	subs	r0, r0, r3
 8020a0a:	6963      	ldr	r3, [r4, #20]
 8020a0c:	b2f6      	uxtb	r6, r6
 8020a0e:	4283      	cmp	r3, r0
 8020a10:	4637      	mov	r7, r6
 8020a12:	dc04      	bgt.n	8020a1e <__swbuf_r+0x42>
 8020a14:	4621      	mov	r1, r4
 8020a16:	4628      	mov	r0, r5
 8020a18:	f000 f9aa 	bl	8020d70 <_fflush_r>
 8020a1c:	bb30      	cbnz	r0, 8020a6c <__swbuf_r+0x90>
 8020a1e:	68a3      	ldr	r3, [r4, #8]
 8020a20:	3b01      	subs	r3, #1
 8020a22:	60a3      	str	r3, [r4, #8]
 8020a24:	6823      	ldr	r3, [r4, #0]
 8020a26:	1c5a      	adds	r2, r3, #1
 8020a28:	6022      	str	r2, [r4, #0]
 8020a2a:	701e      	strb	r6, [r3, #0]
 8020a2c:	6963      	ldr	r3, [r4, #20]
 8020a2e:	3001      	adds	r0, #1
 8020a30:	4283      	cmp	r3, r0
 8020a32:	d004      	beq.n	8020a3e <__swbuf_r+0x62>
 8020a34:	89a3      	ldrh	r3, [r4, #12]
 8020a36:	07db      	lsls	r3, r3, #31
 8020a38:	d506      	bpl.n	8020a48 <__swbuf_r+0x6c>
 8020a3a:	2e0a      	cmp	r6, #10
 8020a3c:	d104      	bne.n	8020a48 <__swbuf_r+0x6c>
 8020a3e:	4621      	mov	r1, r4
 8020a40:	4628      	mov	r0, r5
 8020a42:	f000 f995 	bl	8020d70 <_fflush_r>
 8020a46:	b988      	cbnz	r0, 8020a6c <__swbuf_r+0x90>
 8020a48:	4638      	mov	r0, r7
 8020a4a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8020a4c:	4b0a      	ldr	r3, [pc, #40]	; (8020a78 <__swbuf_r+0x9c>)
 8020a4e:	429c      	cmp	r4, r3
 8020a50:	d101      	bne.n	8020a56 <__swbuf_r+0x7a>
 8020a52:	68ac      	ldr	r4, [r5, #8]
 8020a54:	e7cf      	b.n	80209f6 <__swbuf_r+0x1a>
 8020a56:	4b09      	ldr	r3, [pc, #36]	; (8020a7c <__swbuf_r+0xa0>)
 8020a58:	429c      	cmp	r4, r3
 8020a5a:	bf08      	it	eq
 8020a5c:	68ec      	ldreq	r4, [r5, #12]
 8020a5e:	e7ca      	b.n	80209f6 <__swbuf_r+0x1a>
 8020a60:	4621      	mov	r1, r4
 8020a62:	4628      	mov	r0, r5
 8020a64:	f000 f81e 	bl	8020aa4 <__swsetup_r>
 8020a68:	2800      	cmp	r0, #0
 8020a6a:	d0cb      	beq.n	8020a04 <__swbuf_r+0x28>
 8020a6c:	f04f 37ff 	mov.w	r7, #4294967295
 8020a70:	e7ea      	b.n	8020a48 <__swbuf_r+0x6c>
 8020a72:	bf00      	nop
 8020a74:	08023b30 	.word	0x08023b30
 8020a78:	08023b50 	.word	0x08023b50
 8020a7c:	08023b10 	.word	0x08023b10

08020a80 <_write_r>:
 8020a80:	b538      	push	{r3, r4, r5, lr}
 8020a82:	4d07      	ldr	r5, [pc, #28]	; (8020aa0 <_write_r+0x20>)
 8020a84:	4604      	mov	r4, r0
 8020a86:	4608      	mov	r0, r1
 8020a88:	4611      	mov	r1, r2
 8020a8a:	2200      	movs	r2, #0
 8020a8c:	602a      	str	r2, [r5, #0]
 8020a8e:	461a      	mov	r2, r3
 8020a90:	f7e1 fabe 	bl	8002010 <_write>
 8020a94:	1c43      	adds	r3, r0, #1
 8020a96:	d102      	bne.n	8020a9e <_write_r+0x1e>
 8020a98:	682b      	ldr	r3, [r5, #0]
 8020a9a:	b103      	cbz	r3, 8020a9e <_write_r+0x1e>
 8020a9c:	6023      	str	r3, [r4, #0]
 8020a9e:	bd38      	pop	{r3, r4, r5, pc}
 8020aa0:	20015574 	.word	0x20015574

08020aa4 <__swsetup_r>:
 8020aa4:	4b32      	ldr	r3, [pc, #200]	; (8020b70 <__swsetup_r+0xcc>)
 8020aa6:	b570      	push	{r4, r5, r6, lr}
 8020aa8:	681d      	ldr	r5, [r3, #0]
 8020aaa:	4606      	mov	r6, r0
 8020aac:	460c      	mov	r4, r1
 8020aae:	b125      	cbz	r5, 8020aba <__swsetup_r+0x16>
 8020ab0:	69ab      	ldr	r3, [r5, #24]
 8020ab2:	b913      	cbnz	r3, 8020aba <__swsetup_r+0x16>
 8020ab4:	4628      	mov	r0, r5
 8020ab6:	f7ff f9c3 	bl	801fe40 <__sinit>
 8020aba:	4b2e      	ldr	r3, [pc, #184]	; (8020b74 <__swsetup_r+0xd0>)
 8020abc:	429c      	cmp	r4, r3
 8020abe:	d10f      	bne.n	8020ae0 <__swsetup_r+0x3c>
 8020ac0:	686c      	ldr	r4, [r5, #4]
 8020ac2:	89a3      	ldrh	r3, [r4, #12]
 8020ac4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8020ac8:	0719      	lsls	r1, r3, #28
 8020aca:	d42c      	bmi.n	8020b26 <__swsetup_r+0x82>
 8020acc:	06dd      	lsls	r5, r3, #27
 8020ace:	d411      	bmi.n	8020af4 <__swsetup_r+0x50>
 8020ad0:	2309      	movs	r3, #9
 8020ad2:	6033      	str	r3, [r6, #0]
 8020ad4:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8020ad8:	81a3      	strh	r3, [r4, #12]
 8020ada:	f04f 30ff 	mov.w	r0, #4294967295
 8020ade:	e03e      	b.n	8020b5e <__swsetup_r+0xba>
 8020ae0:	4b25      	ldr	r3, [pc, #148]	; (8020b78 <__swsetup_r+0xd4>)
 8020ae2:	429c      	cmp	r4, r3
 8020ae4:	d101      	bne.n	8020aea <__swsetup_r+0x46>
 8020ae6:	68ac      	ldr	r4, [r5, #8]
 8020ae8:	e7eb      	b.n	8020ac2 <__swsetup_r+0x1e>
 8020aea:	4b24      	ldr	r3, [pc, #144]	; (8020b7c <__swsetup_r+0xd8>)
 8020aec:	429c      	cmp	r4, r3
 8020aee:	bf08      	it	eq
 8020af0:	68ec      	ldreq	r4, [r5, #12]
 8020af2:	e7e6      	b.n	8020ac2 <__swsetup_r+0x1e>
 8020af4:	0758      	lsls	r0, r3, #29
 8020af6:	d512      	bpl.n	8020b1e <__swsetup_r+0x7a>
 8020af8:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8020afa:	b141      	cbz	r1, 8020b0e <__swsetup_r+0x6a>
 8020afc:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8020b00:	4299      	cmp	r1, r3
 8020b02:	d002      	beq.n	8020b0a <__swsetup_r+0x66>
 8020b04:	4630      	mov	r0, r6
 8020b06:	f7ff fa99 	bl	802003c <_free_r>
 8020b0a:	2300      	movs	r3, #0
 8020b0c:	6363      	str	r3, [r4, #52]	; 0x34
 8020b0e:	89a3      	ldrh	r3, [r4, #12]
 8020b10:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8020b14:	81a3      	strh	r3, [r4, #12]
 8020b16:	2300      	movs	r3, #0
 8020b18:	6063      	str	r3, [r4, #4]
 8020b1a:	6923      	ldr	r3, [r4, #16]
 8020b1c:	6023      	str	r3, [r4, #0]
 8020b1e:	89a3      	ldrh	r3, [r4, #12]
 8020b20:	f043 0308 	orr.w	r3, r3, #8
 8020b24:	81a3      	strh	r3, [r4, #12]
 8020b26:	6923      	ldr	r3, [r4, #16]
 8020b28:	b94b      	cbnz	r3, 8020b3e <__swsetup_r+0x9a>
 8020b2a:	89a3      	ldrh	r3, [r4, #12]
 8020b2c:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8020b30:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8020b34:	d003      	beq.n	8020b3e <__swsetup_r+0x9a>
 8020b36:	4621      	mov	r1, r4
 8020b38:	4630      	mov	r0, r6
 8020b3a:	f000 f98d 	bl	8020e58 <__smakebuf_r>
 8020b3e:	89a0      	ldrh	r0, [r4, #12]
 8020b40:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8020b44:	f010 0301 	ands.w	r3, r0, #1
 8020b48:	d00a      	beq.n	8020b60 <__swsetup_r+0xbc>
 8020b4a:	2300      	movs	r3, #0
 8020b4c:	60a3      	str	r3, [r4, #8]
 8020b4e:	6963      	ldr	r3, [r4, #20]
 8020b50:	425b      	negs	r3, r3
 8020b52:	61a3      	str	r3, [r4, #24]
 8020b54:	6923      	ldr	r3, [r4, #16]
 8020b56:	b943      	cbnz	r3, 8020b6a <__swsetup_r+0xc6>
 8020b58:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8020b5c:	d1ba      	bne.n	8020ad4 <__swsetup_r+0x30>
 8020b5e:	bd70      	pop	{r4, r5, r6, pc}
 8020b60:	0781      	lsls	r1, r0, #30
 8020b62:	bf58      	it	pl
 8020b64:	6963      	ldrpl	r3, [r4, #20]
 8020b66:	60a3      	str	r3, [r4, #8]
 8020b68:	e7f4      	b.n	8020b54 <__swsetup_r+0xb0>
 8020b6a:	2000      	movs	r0, #0
 8020b6c:	e7f7      	b.n	8020b5e <__swsetup_r+0xba>
 8020b6e:	bf00      	nop
 8020b70:	20000100 	.word	0x20000100
 8020b74:	08023b30 	.word	0x08023b30
 8020b78:	08023b50 	.word	0x08023b50
 8020b7c:	08023b10 	.word	0x08023b10

08020b80 <__register_exitproc>:
 8020b80:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8020b84:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 8020c40 <__register_exitproc+0xc0>
 8020b88:	4606      	mov	r6, r0
 8020b8a:	f8d8 0000 	ldr.w	r0, [r8]
 8020b8e:	461f      	mov	r7, r3
 8020b90:	460d      	mov	r5, r1
 8020b92:	4691      	mov	r9, r2
 8020b94:	f7ff fa29 	bl	801ffea <__retarget_lock_acquire_recursive>
 8020b98:	4b25      	ldr	r3, [pc, #148]	; (8020c30 <__register_exitproc+0xb0>)
 8020b9a:	681c      	ldr	r4, [r3, #0]
 8020b9c:	b934      	cbnz	r4, 8020bac <__register_exitproc+0x2c>
 8020b9e:	4c25      	ldr	r4, [pc, #148]	; (8020c34 <__register_exitproc+0xb4>)
 8020ba0:	601c      	str	r4, [r3, #0]
 8020ba2:	4b25      	ldr	r3, [pc, #148]	; (8020c38 <__register_exitproc+0xb8>)
 8020ba4:	b113      	cbz	r3, 8020bac <__register_exitproc+0x2c>
 8020ba6:	681b      	ldr	r3, [r3, #0]
 8020ba8:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 8020bac:	6863      	ldr	r3, [r4, #4]
 8020bae:	2b1f      	cmp	r3, #31
 8020bb0:	dd07      	ble.n	8020bc2 <__register_exitproc+0x42>
 8020bb2:	f8d8 0000 	ldr.w	r0, [r8]
 8020bb6:	f7ff fa1a 	bl	801ffee <__retarget_lock_release_recursive>
 8020bba:	f04f 30ff 	mov.w	r0, #4294967295
 8020bbe:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8020bc2:	b34e      	cbz	r6, 8020c18 <__register_exitproc+0x98>
 8020bc4:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 8020bc8:	b988      	cbnz	r0, 8020bee <__register_exitproc+0x6e>
 8020bca:	4b1c      	ldr	r3, [pc, #112]	; (8020c3c <__register_exitproc+0xbc>)
 8020bcc:	b923      	cbnz	r3, 8020bd8 <__register_exitproc+0x58>
 8020bce:	f8d8 0000 	ldr.w	r0, [r8]
 8020bd2:	f7ff fa0b 	bl	801ffec <__retarget_lock_release>
 8020bd6:	e7f0      	b.n	8020bba <__register_exitproc+0x3a>
 8020bd8:	f44f 7084 	mov.w	r0, #264	; 0x108
 8020bdc:	f7ff fa08 	bl	801fff0 <malloc>
 8020be0:	2800      	cmp	r0, #0
 8020be2:	d0f4      	beq.n	8020bce <__register_exitproc+0x4e>
 8020be4:	2300      	movs	r3, #0
 8020be6:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 8020bea:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 8020bee:	6863      	ldr	r3, [r4, #4]
 8020bf0:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 8020bf4:	2201      	movs	r2, #1
 8020bf6:	409a      	lsls	r2, r3
 8020bf8:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 8020bfc:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 8020c00:	4313      	orrs	r3, r2
 8020c02:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 8020c06:	2e02      	cmp	r6, #2
 8020c08:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 8020c0c:	bf02      	ittt	eq
 8020c0e:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 8020c12:	4313      	orreq	r3, r2
 8020c14:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 8020c18:	6863      	ldr	r3, [r4, #4]
 8020c1a:	f8d8 0000 	ldr.w	r0, [r8]
 8020c1e:	1c5a      	adds	r2, r3, #1
 8020c20:	3302      	adds	r3, #2
 8020c22:	6062      	str	r2, [r4, #4]
 8020c24:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 8020c28:	f7ff f9e1 	bl	801ffee <__retarget_lock_release_recursive>
 8020c2c:	2000      	movs	r0, #0
 8020c2e:	e7c6      	b.n	8020bbe <__register_exitproc+0x3e>
 8020c30:	20015604 	.word	0x20015604
 8020c34:	20015578 	.word	0x20015578
 8020c38:	08023ba8 	.word	0x08023ba8
 8020c3c:	0801fff1 	.word	0x0801fff1
 8020c40:	20000164 	.word	0x20000164

08020c44 <_close_r>:
 8020c44:	b538      	push	{r3, r4, r5, lr}
 8020c46:	4d06      	ldr	r5, [pc, #24]	; (8020c60 <_close_r+0x1c>)
 8020c48:	2300      	movs	r3, #0
 8020c4a:	4604      	mov	r4, r0
 8020c4c:	4608      	mov	r0, r1
 8020c4e:	602b      	str	r3, [r5, #0]
 8020c50:	f7e1 f9ec 	bl	800202c <_close>
 8020c54:	1c43      	adds	r3, r0, #1
 8020c56:	d102      	bne.n	8020c5e <_close_r+0x1a>
 8020c58:	682b      	ldr	r3, [r5, #0]
 8020c5a:	b103      	cbz	r3, 8020c5e <_close_r+0x1a>
 8020c5c:	6023      	str	r3, [r4, #0]
 8020c5e:	bd38      	pop	{r3, r4, r5, pc}
 8020c60:	20015574 	.word	0x20015574

08020c64 <__sflush_r>:
 8020c64:	898a      	ldrh	r2, [r1, #12]
 8020c66:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8020c6a:	4605      	mov	r5, r0
 8020c6c:	0710      	lsls	r0, r2, #28
 8020c6e:	460c      	mov	r4, r1
 8020c70:	d458      	bmi.n	8020d24 <__sflush_r+0xc0>
 8020c72:	684b      	ldr	r3, [r1, #4]
 8020c74:	2b00      	cmp	r3, #0
 8020c76:	dc05      	bgt.n	8020c84 <__sflush_r+0x20>
 8020c78:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8020c7a:	2b00      	cmp	r3, #0
 8020c7c:	dc02      	bgt.n	8020c84 <__sflush_r+0x20>
 8020c7e:	2000      	movs	r0, #0
 8020c80:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8020c84:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8020c86:	2e00      	cmp	r6, #0
 8020c88:	d0f9      	beq.n	8020c7e <__sflush_r+0x1a>
 8020c8a:	2300      	movs	r3, #0
 8020c8c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8020c90:	682f      	ldr	r7, [r5, #0]
 8020c92:	602b      	str	r3, [r5, #0]
 8020c94:	d032      	beq.n	8020cfc <__sflush_r+0x98>
 8020c96:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8020c98:	89a3      	ldrh	r3, [r4, #12]
 8020c9a:	075a      	lsls	r2, r3, #29
 8020c9c:	d505      	bpl.n	8020caa <__sflush_r+0x46>
 8020c9e:	6863      	ldr	r3, [r4, #4]
 8020ca0:	1ac0      	subs	r0, r0, r3
 8020ca2:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8020ca4:	b10b      	cbz	r3, 8020caa <__sflush_r+0x46>
 8020ca6:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8020ca8:	1ac0      	subs	r0, r0, r3
 8020caa:	2300      	movs	r3, #0
 8020cac:	4602      	mov	r2, r0
 8020cae:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8020cb0:	6a21      	ldr	r1, [r4, #32]
 8020cb2:	4628      	mov	r0, r5
 8020cb4:	47b0      	blx	r6
 8020cb6:	1c43      	adds	r3, r0, #1
 8020cb8:	89a3      	ldrh	r3, [r4, #12]
 8020cba:	d106      	bne.n	8020cca <__sflush_r+0x66>
 8020cbc:	6829      	ldr	r1, [r5, #0]
 8020cbe:	291d      	cmp	r1, #29
 8020cc0:	d82c      	bhi.n	8020d1c <__sflush_r+0xb8>
 8020cc2:	4a2a      	ldr	r2, [pc, #168]	; (8020d6c <__sflush_r+0x108>)
 8020cc4:	40ca      	lsrs	r2, r1
 8020cc6:	07d6      	lsls	r6, r2, #31
 8020cc8:	d528      	bpl.n	8020d1c <__sflush_r+0xb8>
 8020cca:	2200      	movs	r2, #0
 8020ccc:	6062      	str	r2, [r4, #4]
 8020cce:	04d9      	lsls	r1, r3, #19
 8020cd0:	6922      	ldr	r2, [r4, #16]
 8020cd2:	6022      	str	r2, [r4, #0]
 8020cd4:	d504      	bpl.n	8020ce0 <__sflush_r+0x7c>
 8020cd6:	1c42      	adds	r2, r0, #1
 8020cd8:	d101      	bne.n	8020cde <__sflush_r+0x7a>
 8020cda:	682b      	ldr	r3, [r5, #0]
 8020cdc:	b903      	cbnz	r3, 8020ce0 <__sflush_r+0x7c>
 8020cde:	6560      	str	r0, [r4, #84]	; 0x54
 8020ce0:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8020ce2:	602f      	str	r7, [r5, #0]
 8020ce4:	2900      	cmp	r1, #0
 8020ce6:	d0ca      	beq.n	8020c7e <__sflush_r+0x1a>
 8020ce8:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8020cec:	4299      	cmp	r1, r3
 8020cee:	d002      	beq.n	8020cf6 <__sflush_r+0x92>
 8020cf0:	4628      	mov	r0, r5
 8020cf2:	f7ff f9a3 	bl	802003c <_free_r>
 8020cf6:	2000      	movs	r0, #0
 8020cf8:	6360      	str	r0, [r4, #52]	; 0x34
 8020cfa:	e7c1      	b.n	8020c80 <__sflush_r+0x1c>
 8020cfc:	6a21      	ldr	r1, [r4, #32]
 8020cfe:	2301      	movs	r3, #1
 8020d00:	4628      	mov	r0, r5
 8020d02:	47b0      	blx	r6
 8020d04:	1c41      	adds	r1, r0, #1
 8020d06:	d1c7      	bne.n	8020c98 <__sflush_r+0x34>
 8020d08:	682b      	ldr	r3, [r5, #0]
 8020d0a:	2b00      	cmp	r3, #0
 8020d0c:	d0c4      	beq.n	8020c98 <__sflush_r+0x34>
 8020d0e:	2b1d      	cmp	r3, #29
 8020d10:	d001      	beq.n	8020d16 <__sflush_r+0xb2>
 8020d12:	2b16      	cmp	r3, #22
 8020d14:	d101      	bne.n	8020d1a <__sflush_r+0xb6>
 8020d16:	602f      	str	r7, [r5, #0]
 8020d18:	e7b1      	b.n	8020c7e <__sflush_r+0x1a>
 8020d1a:	89a3      	ldrh	r3, [r4, #12]
 8020d1c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8020d20:	81a3      	strh	r3, [r4, #12]
 8020d22:	e7ad      	b.n	8020c80 <__sflush_r+0x1c>
 8020d24:	690f      	ldr	r7, [r1, #16]
 8020d26:	2f00      	cmp	r7, #0
 8020d28:	d0a9      	beq.n	8020c7e <__sflush_r+0x1a>
 8020d2a:	0793      	lsls	r3, r2, #30
 8020d2c:	680e      	ldr	r6, [r1, #0]
 8020d2e:	bf08      	it	eq
 8020d30:	694b      	ldreq	r3, [r1, #20]
 8020d32:	600f      	str	r7, [r1, #0]
 8020d34:	bf18      	it	ne
 8020d36:	2300      	movne	r3, #0
 8020d38:	eba6 0807 	sub.w	r8, r6, r7
 8020d3c:	608b      	str	r3, [r1, #8]
 8020d3e:	f1b8 0f00 	cmp.w	r8, #0
 8020d42:	dd9c      	ble.n	8020c7e <__sflush_r+0x1a>
 8020d44:	6a21      	ldr	r1, [r4, #32]
 8020d46:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8020d48:	4643      	mov	r3, r8
 8020d4a:	463a      	mov	r2, r7
 8020d4c:	4628      	mov	r0, r5
 8020d4e:	47b0      	blx	r6
 8020d50:	2800      	cmp	r0, #0
 8020d52:	dc06      	bgt.n	8020d62 <__sflush_r+0xfe>
 8020d54:	89a3      	ldrh	r3, [r4, #12]
 8020d56:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8020d5a:	81a3      	strh	r3, [r4, #12]
 8020d5c:	f04f 30ff 	mov.w	r0, #4294967295
 8020d60:	e78e      	b.n	8020c80 <__sflush_r+0x1c>
 8020d62:	4407      	add	r7, r0
 8020d64:	eba8 0800 	sub.w	r8, r8, r0
 8020d68:	e7e9      	b.n	8020d3e <__sflush_r+0xda>
 8020d6a:	bf00      	nop
 8020d6c:	20400001 	.word	0x20400001

08020d70 <_fflush_r>:
 8020d70:	b538      	push	{r3, r4, r5, lr}
 8020d72:	690b      	ldr	r3, [r1, #16]
 8020d74:	4605      	mov	r5, r0
 8020d76:	460c      	mov	r4, r1
 8020d78:	b913      	cbnz	r3, 8020d80 <_fflush_r+0x10>
 8020d7a:	2500      	movs	r5, #0
 8020d7c:	4628      	mov	r0, r5
 8020d7e:	bd38      	pop	{r3, r4, r5, pc}
 8020d80:	b118      	cbz	r0, 8020d8a <_fflush_r+0x1a>
 8020d82:	6983      	ldr	r3, [r0, #24]
 8020d84:	b90b      	cbnz	r3, 8020d8a <_fflush_r+0x1a>
 8020d86:	f7ff f85b 	bl	801fe40 <__sinit>
 8020d8a:	4b14      	ldr	r3, [pc, #80]	; (8020ddc <_fflush_r+0x6c>)
 8020d8c:	429c      	cmp	r4, r3
 8020d8e:	d11b      	bne.n	8020dc8 <_fflush_r+0x58>
 8020d90:	686c      	ldr	r4, [r5, #4]
 8020d92:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8020d96:	2b00      	cmp	r3, #0
 8020d98:	d0ef      	beq.n	8020d7a <_fflush_r+0xa>
 8020d9a:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8020d9c:	07d0      	lsls	r0, r2, #31
 8020d9e:	d404      	bmi.n	8020daa <_fflush_r+0x3a>
 8020da0:	0599      	lsls	r1, r3, #22
 8020da2:	d402      	bmi.n	8020daa <_fflush_r+0x3a>
 8020da4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8020da6:	f7ff f920 	bl	801ffea <__retarget_lock_acquire_recursive>
 8020daa:	4628      	mov	r0, r5
 8020dac:	4621      	mov	r1, r4
 8020dae:	f7ff ff59 	bl	8020c64 <__sflush_r>
 8020db2:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8020db4:	07da      	lsls	r2, r3, #31
 8020db6:	4605      	mov	r5, r0
 8020db8:	d4e0      	bmi.n	8020d7c <_fflush_r+0xc>
 8020dba:	89a3      	ldrh	r3, [r4, #12]
 8020dbc:	059b      	lsls	r3, r3, #22
 8020dbe:	d4dd      	bmi.n	8020d7c <_fflush_r+0xc>
 8020dc0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8020dc2:	f7ff f914 	bl	801ffee <__retarget_lock_release_recursive>
 8020dc6:	e7d9      	b.n	8020d7c <_fflush_r+0xc>
 8020dc8:	4b05      	ldr	r3, [pc, #20]	; (8020de0 <_fflush_r+0x70>)
 8020dca:	429c      	cmp	r4, r3
 8020dcc:	d101      	bne.n	8020dd2 <_fflush_r+0x62>
 8020dce:	68ac      	ldr	r4, [r5, #8]
 8020dd0:	e7df      	b.n	8020d92 <_fflush_r+0x22>
 8020dd2:	4b04      	ldr	r3, [pc, #16]	; (8020de4 <_fflush_r+0x74>)
 8020dd4:	429c      	cmp	r4, r3
 8020dd6:	bf08      	it	eq
 8020dd8:	68ec      	ldreq	r4, [r5, #12]
 8020dda:	e7da      	b.n	8020d92 <_fflush_r+0x22>
 8020ddc:	08023b30 	.word	0x08023b30
 8020de0:	08023b50 	.word	0x08023b50
 8020de4:	08023b10 	.word	0x08023b10

08020de8 <_lseek_r>:
 8020de8:	b538      	push	{r3, r4, r5, lr}
 8020dea:	4d07      	ldr	r5, [pc, #28]	; (8020e08 <_lseek_r+0x20>)
 8020dec:	4604      	mov	r4, r0
 8020dee:	4608      	mov	r0, r1
 8020df0:	4611      	mov	r1, r2
 8020df2:	2200      	movs	r2, #0
 8020df4:	602a      	str	r2, [r5, #0]
 8020df6:	461a      	mov	r2, r3
 8020df8:	f7e1 f922 	bl	8002040 <_lseek>
 8020dfc:	1c43      	adds	r3, r0, #1
 8020dfe:	d102      	bne.n	8020e06 <_lseek_r+0x1e>
 8020e00:	682b      	ldr	r3, [r5, #0]
 8020e02:	b103      	cbz	r3, 8020e06 <_lseek_r+0x1e>
 8020e04:	6023      	str	r3, [r4, #0]
 8020e06:	bd38      	pop	{r3, r4, r5, pc}
 8020e08:	20015574 	.word	0x20015574

08020e0c <__swhatbuf_r>:
 8020e0c:	b570      	push	{r4, r5, r6, lr}
 8020e0e:	460e      	mov	r6, r1
 8020e10:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8020e14:	2900      	cmp	r1, #0
 8020e16:	b096      	sub	sp, #88	; 0x58
 8020e18:	4614      	mov	r4, r2
 8020e1a:	461d      	mov	r5, r3
 8020e1c:	da08      	bge.n	8020e30 <__swhatbuf_r+0x24>
 8020e1e:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 8020e22:	2200      	movs	r2, #0
 8020e24:	602a      	str	r2, [r5, #0]
 8020e26:	061a      	lsls	r2, r3, #24
 8020e28:	d410      	bmi.n	8020e4c <__swhatbuf_r+0x40>
 8020e2a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8020e2e:	e00e      	b.n	8020e4e <__swhatbuf_r+0x42>
 8020e30:	466a      	mov	r2, sp
 8020e32:	f000 f86f 	bl	8020f14 <_fstat_r>
 8020e36:	2800      	cmp	r0, #0
 8020e38:	dbf1      	blt.n	8020e1e <__swhatbuf_r+0x12>
 8020e3a:	9a01      	ldr	r2, [sp, #4]
 8020e3c:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8020e40:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8020e44:	425a      	negs	r2, r3
 8020e46:	415a      	adcs	r2, r3
 8020e48:	602a      	str	r2, [r5, #0]
 8020e4a:	e7ee      	b.n	8020e2a <__swhatbuf_r+0x1e>
 8020e4c:	2340      	movs	r3, #64	; 0x40
 8020e4e:	2000      	movs	r0, #0
 8020e50:	6023      	str	r3, [r4, #0]
 8020e52:	b016      	add	sp, #88	; 0x58
 8020e54:	bd70      	pop	{r4, r5, r6, pc}
	...

08020e58 <__smakebuf_r>:
 8020e58:	898b      	ldrh	r3, [r1, #12]
 8020e5a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8020e5c:	079d      	lsls	r5, r3, #30
 8020e5e:	4606      	mov	r6, r0
 8020e60:	460c      	mov	r4, r1
 8020e62:	d507      	bpl.n	8020e74 <__smakebuf_r+0x1c>
 8020e64:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8020e68:	6023      	str	r3, [r4, #0]
 8020e6a:	6123      	str	r3, [r4, #16]
 8020e6c:	2301      	movs	r3, #1
 8020e6e:	6163      	str	r3, [r4, #20]
 8020e70:	b002      	add	sp, #8
 8020e72:	bd70      	pop	{r4, r5, r6, pc}
 8020e74:	ab01      	add	r3, sp, #4
 8020e76:	466a      	mov	r2, sp
 8020e78:	f7ff ffc8 	bl	8020e0c <__swhatbuf_r>
 8020e7c:	9900      	ldr	r1, [sp, #0]
 8020e7e:	4605      	mov	r5, r0
 8020e80:	4630      	mov	r0, r6
 8020e82:	f7ff f947 	bl	8020114 <_malloc_r>
 8020e86:	b948      	cbnz	r0, 8020e9c <__smakebuf_r+0x44>
 8020e88:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8020e8c:	059a      	lsls	r2, r3, #22
 8020e8e:	d4ef      	bmi.n	8020e70 <__smakebuf_r+0x18>
 8020e90:	f023 0303 	bic.w	r3, r3, #3
 8020e94:	f043 0302 	orr.w	r3, r3, #2
 8020e98:	81a3      	strh	r3, [r4, #12]
 8020e9a:	e7e3      	b.n	8020e64 <__smakebuf_r+0xc>
 8020e9c:	4b0d      	ldr	r3, [pc, #52]	; (8020ed4 <__smakebuf_r+0x7c>)
 8020e9e:	62b3      	str	r3, [r6, #40]	; 0x28
 8020ea0:	89a3      	ldrh	r3, [r4, #12]
 8020ea2:	6020      	str	r0, [r4, #0]
 8020ea4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8020ea8:	81a3      	strh	r3, [r4, #12]
 8020eaa:	9b00      	ldr	r3, [sp, #0]
 8020eac:	6163      	str	r3, [r4, #20]
 8020eae:	9b01      	ldr	r3, [sp, #4]
 8020eb0:	6120      	str	r0, [r4, #16]
 8020eb2:	b15b      	cbz	r3, 8020ecc <__smakebuf_r+0x74>
 8020eb4:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8020eb8:	4630      	mov	r0, r6
 8020eba:	f000 f83d 	bl	8020f38 <_isatty_r>
 8020ebe:	b128      	cbz	r0, 8020ecc <__smakebuf_r+0x74>
 8020ec0:	89a3      	ldrh	r3, [r4, #12]
 8020ec2:	f023 0303 	bic.w	r3, r3, #3
 8020ec6:	f043 0301 	orr.w	r3, r3, #1
 8020eca:	81a3      	strh	r3, [r4, #12]
 8020ecc:	89a0      	ldrh	r0, [r4, #12]
 8020ece:	4305      	orrs	r5, r0
 8020ed0:	81a5      	strh	r5, [r4, #12]
 8020ed2:	e7cd      	b.n	8020e70 <__smakebuf_r+0x18>
 8020ed4:	0801fdd9 	.word	0x0801fdd9

08020ed8 <__malloc_lock>:
 8020ed8:	4801      	ldr	r0, [pc, #4]	; (8020ee0 <__malloc_lock+0x8>)
 8020eda:	f7ff b886 	b.w	801ffea <__retarget_lock_acquire_recursive>
 8020ede:	bf00      	nop
 8020ee0:	20015461 	.word	0x20015461

08020ee4 <__malloc_unlock>:
 8020ee4:	4801      	ldr	r0, [pc, #4]	; (8020eec <__malloc_unlock+0x8>)
 8020ee6:	f7ff b882 	b.w	801ffee <__retarget_lock_release_recursive>
 8020eea:	bf00      	nop
 8020eec:	20015461 	.word	0x20015461

08020ef0 <_read_r>:
 8020ef0:	b538      	push	{r3, r4, r5, lr}
 8020ef2:	4d07      	ldr	r5, [pc, #28]	; (8020f10 <_read_r+0x20>)
 8020ef4:	4604      	mov	r4, r0
 8020ef6:	4608      	mov	r0, r1
 8020ef8:	4611      	mov	r1, r2
 8020efa:	2200      	movs	r2, #0
 8020efc:	602a      	str	r2, [r5, #0]
 8020efe:	461a      	mov	r2, r3
 8020f00:	f7e1 f878 	bl	8001ff4 <_read>
 8020f04:	1c43      	adds	r3, r0, #1
 8020f06:	d102      	bne.n	8020f0e <_read_r+0x1e>
 8020f08:	682b      	ldr	r3, [r5, #0]
 8020f0a:	b103      	cbz	r3, 8020f0e <_read_r+0x1e>
 8020f0c:	6023      	str	r3, [r4, #0]
 8020f0e:	bd38      	pop	{r3, r4, r5, pc}
 8020f10:	20015574 	.word	0x20015574

08020f14 <_fstat_r>:
 8020f14:	b538      	push	{r3, r4, r5, lr}
 8020f16:	4d07      	ldr	r5, [pc, #28]	; (8020f34 <_fstat_r+0x20>)
 8020f18:	2300      	movs	r3, #0
 8020f1a:	4604      	mov	r4, r0
 8020f1c:	4608      	mov	r0, r1
 8020f1e:	4611      	mov	r1, r2
 8020f20:	602b      	str	r3, [r5, #0]
 8020f22:	f7e1 f886 	bl	8002032 <_fstat>
 8020f26:	1c43      	adds	r3, r0, #1
 8020f28:	d102      	bne.n	8020f30 <_fstat_r+0x1c>
 8020f2a:	682b      	ldr	r3, [r5, #0]
 8020f2c:	b103      	cbz	r3, 8020f30 <_fstat_r+0x1c>
 8020f2e:	6023      	str	r3, [r4, #0]
 8020f30:	bd38      	pop	{r3, r4, r5, pc}
 8020f32:	bf00      	nop
 8020f34:	20015574 	.word	0x20015574

08020f38 <_isatty_r>:
 8020f38:	b538      	push	{r3, r4, r5, lr}
 8020f3a:	4d06      	ldr	r5, [pc, #24]	; (8020f54 <_isatty_r+0x1c>)
 8020f3c:	2300      	movs	r3, #0
 8020f3e:	4604      	mov	r4, r0
 8020f40:	4608      	mov	r0, r1
 8020f42:	602b      	str	r3, [r5, #0]
 8020f44:	f7e1 f87a 	bl	800203c <_isatty>
 8020f48:	1c43      	adds	r3, r0, #1
 8020f4a:	d102      	bne.n	8020f52 <_isatty_r+0x1a>
 8020f4c:	682b      	ldr	r3, [r5, #0]
 8020f4e:	b103      	cbz	r3, 8020f52 <_isatty_r+0x1a>
 8020f50:	6023      	str	r3, [r4, #0]
 8020f52:	bd38      	pop	{r3, r4, r5, pc}
 8020f54:	20015574 	.word	0x20015574

08020f58 <_init>:
 8020f58:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8020f5a:	bf00      	nop
 8020f5c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8020f5e:	bc08      	pop	{r3}
 8020f60:	469e      	mov	lr, r3
 8020f62:	4770      	bx	lr

08020f64 <_fini>:
 8020f64:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8020f66:	bf00      	nop
 8020f68:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8020f6a:	bc08      	pop	{r3}
 8020f6c:	469e      	mov	lr, r3
 8020f6e:	4770      	bx	lr
